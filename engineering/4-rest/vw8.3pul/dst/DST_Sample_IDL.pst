<?xml version="1.0"?><st-source><!-- Name: DST_Sample_IDLNotice: Copyright 1999-2013 Cincom Systems, Inc.  All rights reserved.Comment: DST_Sample_IDL contains the IDL source for DST sample applications.Copyright: Copyright © 1999-2002 Cincom Systems, Inc.All Rights ReservedThis product contains copyrighted third-party software.Copyright © 1993-1995 Hewlett-Packard Company.All Rights ReservedDbIdentifier: bear73DbTrace: 464624DbUsername: tkoganDbVersion: 8.1 - 1DevelopmentPrerequisites: #(#(#any 'DST_IDLCompiler' '') #(#any 'DST_Repository' ''))PackageName: DST_Sample_IDLParcel: #('DST_Sample_IDL')ParcelName: DST_Sample_IDLPrerequisiteDescriptions: #(#(#name 'DST_IDLCompiler' #componentType #package) #(#name 'DST_Repository' #componentType #package))PrerequisiteParcels: #(#('DST_IDLCompiler' '') #('DST_Repository' ''))PrintStringCache: (8.1 - 1,tkogan)Version: 8.1 - 1Date: 1:09:21 PM January 29, 2016 --><time-stamp>From VisualWorks®, Pre-Release 8.2 (jan16.4) of January 29, 2016 on January 29, 2016 at 1:09:21 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><methods><class-id>DST.DSTRepository</class-id> <category>DEMO</category><body package="DST_Sample_IDL">// DemoEventChannel//module DemoEventChannel {	interface DemoEventChannel : 		::CosEventChannelAdmin::EventChannel, 		::CosEventChannelAdmin::SupplierAdmin, 		::CosEventChannelAdmin::ConsumerAdmin {		string hostname ();		short port ();		boolean hasPushSuppliers ();		boolean hasPushConsumers ();		boolean hasPullSuppliers ();		boolean hasPullConsumers ();		boolean ping ();		void destroyAndUnregister ( in ::CosNaming::Name arg );	};	interface DemoEventChannelClass {		void createAndRegister ( in ::CosNaming::Name arg );		void destroyAndUnregister ( in ::CosNaming::Name arg );	};};</body><body package="DST_Sample_IDL">// DSTSampleComputeService0//// This snippet below all the IDL you need for the exercise in the current documentation.// Change both the uncommented module name below and the commented name above if you elect to use all the IDL provided below. ////module DSTSampleComputeService  {////	interface DSTSampleComputeServiceInterface {//		#pragma selector slowComputationWithAnd slowComputationWith:and://		unsigned long long slowComputationWithAnd ( in unsigned long a, in unsigned long b );//	};//};module DSTSampleComputeService0  {	union UnsignedLongLongOrNil switch (boolean) {		case TRUE: unsigned long long ull;		case FALSE: Object nil;	};	interface DSTSampleComputeServiceInterface {		boolean carmichaelNumber ( in unsigned long long a );		unsigned long long nthCarmichaelNumber ( in unsigned short a );		#pragma selector slowComputationWithAnd slowComputationWith:and:		unsigned long long slowComputationWithAnd ( in unsigned long a, in unsigned long b );		unsigned long long nthCalculativeFibonacciNumber ( in unsigned short a );		unsigned long long nthIterativeFibonacciNumber ( in unsigned short a );		unsigned long long nthRecursiveFibonacciNumber ( in unsigned short a );		#pragma selector divisorForBewteenAnd divisorFor:between:and:		UnsignedLongLongOrNil divisorForBewteenAnd (				in unsigned long long a,				in unsigned long long b,				in unsigned long long c			);		boolean exhaustivePrime ( in unsigned long long a );		boolean fermatPrime ( in unsigned long long a );		#pragma selector fermatPrimeWithTrials fermatPrime:withTrials:		boolean fermatPrimeWithTrials ( in unsigned long long a, in unsigned short b );		unsigned long long nthExhaustivePrime ( in unsigned short a );		unsigned long long nthFermatPrime ( in unsigned short a );			};};</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>DSTRepository</name><environment>DST</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>CORBA-Repository</category><attributes><package>DST_Repository</package></attributes></class></st-source>