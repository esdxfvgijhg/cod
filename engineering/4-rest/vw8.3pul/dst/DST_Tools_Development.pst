<?xml version="1.0"?><st-source><!-- Name: DST_Tools_DevelopmentNotice: Copyright 1999-2016 Cincom Systems, Inc.  All rights reserved.Comment: DST_Tools_Development provides convenient launcher menu to control the state of DST and access to DST settings.Copyright: Copyright © 1999-2001 Cincom Systems, Inc.All Rights ReservedThis product contains copyrighted third-party software.Copyright © 1993-1995 Hewlett-Packard Company.All Rights ReservedDbIdentifier: bear73DbTrace: 483485DbUsername: tkoganDbVersion: 8.2 - 1DevelopmentPrerequisites: #(#(#any 'DST_Core' '') #(#any 'Tools-Settings' '') #(#any 'Tools-Settings-VW' ''))Namespace: Smalltalk.DSTPackageName: DST_Tools_DevelopmentParcel: #('DST_Tools_Development')ParcelName: DST_Tools_DevelopmentPrerequisiteDescriptions: #(#(#name 'DST_Core' #componentType #package) #(#name 'Tools-Settings' #componentType #package) #(#name 'Tools-Settings-VW' #componentType #package))PrerequisiteParcels: #(#('DST_Core' '') #('Tools-Settings' '') #('Tools-Settings-VW' ''))PrintStringCache: (8.2 - 1,tkogan)Version: 8.2 - 1Date: 1:09:21 PM January 29, 2016 --><time-stamp>From VisualWorks®, Pre-Release 8.2 (jan16.4) of January 29, 2016 on January 29, 2016 at 1:09:21 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>SettingsPage</name><environment>DST</environment><super>Tools.SettingsManagerPage</super><private>false</private><indexed-type>none</indexed-type><inst-vars>settings descriptorArray </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>DST_Tools_Development</package></attributes></class><comment><class-id>DST.SettingsPage</class-id><body>Instance Variables	settings	&lt;IdentityDictionary key: Symbol value: BufferedValueHolder&gt;	descriptorArray	&lt;Array&gt;</body></comment><class><name>Settings</name><environment>DST</environment><super>Tools.VisualWorksSettings</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>DST_Tools_Development</package></attributes></class><comment><class-id>DST.Settings</class-id><body>DST settings domain.</body></comment><class><name>DSTToolError</name><environment>DST</environment><super>Core.Error</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>DST_Tools_Development</package></attributes></class><comment><class-id>DST.DSTToolError</class-id><body>Error raised by DST launcher menu actions.</body></comment><methods><class-id>DST.SettingsPage</class-id> <category>private</category><body package="DST_Tools_Development">changedServiceTransport	| trans |	trans := ORBDaemon configurationManager transportNamed: (self settingFor: #transport).	self settingFor: #port put: trans defaultPort</body><body package="DST_Tools_Development">disturb	self tickle</body><body package="DST_Tools_Development">exitCheckFragmentSize: aController 	(aController hasEditValue		and: 			[| ev |			ev := aController editValue.			(ev isKindOf: Integer)				and: [ev &gt; 432 and: [ev &lt;= 8112]]])		ifFalse: 			[| cancel |			cancel := Dialog						choose: 'The fragment size must be an integer between 432 and 8112'						labels: (Array with: 'Retype' with: 'Cancel')						values: #(false true)						default: true.			cancel ifTrue: [aController cancel].			^cancel].	^true</body><body package="DST_Tools_Development">exitCheckPortNumber: aController 	(aController hasEditValue		and: 			[| ev |			ev := aController editValue.			(ev isKindOf: Integer)				and: [ev &gt; 1023 and: [ev &lt;= 65536]]])		ifFalse: 			[| cancel |			cancel := Dialog						choose: 'Port numbers must be integers between 1024 and 65535'						labels: (Array with: 'Retype' with: 'Cancel')						values: #(false true)						default: true.			cancel ifTrue: [aController cancel].			^cancel].	^true</body><body package="DST_Tools_Development">exitCheckWriteIncrement: aController 	(aController hasEditValue		and: 			[| ev |			ev := aController editValue.			(ev isKindOf: Integer)				and: [ev &gt; 512 and: [ev &lt;= 81920]]])		ifFalse: 			[| cancel |			cancel := Dialog						choose: 'The write increment must be an integer between 512 and 81920'						labels: (Array with: 'Retype' with: 'Cancel')						values: #(false true)						default: true.			cancel ifTrue: [aController cancel].			^cancel].	^true</body></methods><methods><class-id>DST.SettingsPage</class-id> <category>interface opening</category><body package="DST_Tools_Development">preBuildWith: aBuilder 	"This message is sent by the builder prior to beginning construction 	of either a SubCanvas or a complete window."	super preBuildWith: aBuilder.	settings keysAndValuesDo: [:key :value | aBuilder aspectAt: key put: value].</body></methods><methods><class-id>DST.SettingsPage</class-id> <category>help</category><body package="DST_Tools_Development">generalHelp	^'General SettingsLocal Testing - Allows to emulate full IIOP based communication against local objects (see Object&gt;&gt;#asRemotable), otherwise local objects are always accessed directly.Debugging - When on, errors will be logged into the Transcript and user will be given a chance to Abort or Proceed the activity that triggered the error.'</body><body package="DST_Tools_Development">iiopTransportHelp	^'IIOP Transport SettingsPort Number - If your objects in this image are being accessed remotely you will want to configure to a known port.  Otherwise, dynamically allocating the port is more resilient to change.Implicit Invocation Interface (I3) - Enables the I3 mode of communication, which provides Smalltalk-to-Smalltalk connectivity without the need to write IDL..'</body><body package="DST_Tools_Development">interfaceRepositoryHelp	^'Interface Repository SettingsThis panel sets the location of the interface repository for this image.  Local -  will use the interface repository local to this image. Hostname - will locate a remote interface repository at the specified hostname and port, using the chosen transport protocol.Filename - will access a remote interface repository via an object reference read from a file as specified by the pathname.  The object reference must be stringified as per the CORBA2.0 specification for object references.'</body><body package="DST_Tools_Development">namingServiceHelp	^'Naming Service SettingsThis panel sets the location of the naming service for this image.  Local -  will create a new instance of DSTNameContext local to this image. Hostname - will locate a remote naming service at the specified hostname and port, using chosen transport protocol.Filename - will access a remote naming service via an object reference read from a file as specified by the pathname.  The object reference must be stringified as per the CORBA2.0 specification for object references.For more information on the naming service see the Reference Guide'</body></methods><methods><class-id>DST.SettingsPage</class-id> <category>descriptor extraction</category><body package="DST_Tools_Development">configurationName	"	notebook-label    configuration-name    spec-selector    help-text-selector   full-label"	^descriptorArray at: 2</body><body package="DST_Tools_Development">helpSelector	"	notebook-label    configuration-name    spec-selector    help-text-selector   full-label"	^descriptorArray at: 4</body><body package="DST_Tools_Development">sliceTitle	"	notebook-label    configuration-name    spec-selector    help-text-selector   full-label"	^descriptorArray at: 5</body><body package="DST_Tools_Development">specSelector	"	notebook-label    configuration-name    spec-selector    help-text-selector   full-label"	^descriptorArray at: 3</body></methods><methods><class-id>DST.SettingsPage</class-id> <category>initialize-release</category><body package="DST_Tools_Development">descriptorArray: anArray	descriptorArray := anArray.</body><body package="DST_Tools_Development">manager: aSettingsManager	super manager: aSettingsManager. 	settings :=		(ORBDaemon configurationManager configurationOf: self configurationName)			copySettingsBufferedTriggerChannel: aSettingsManager triggerChannel.</body></methods><methods><class-id>DST.SettingsPage</class-id> <category>accessing</category><body package="DST_Tools_Development">helpText	^self perform: self helpSelector</body><body package="DST_Tools_Development">label	^self sliceTitle asString</body><body package="DST_Tools_Development">settingFor: aSymbol 	"Retrieve the setting for aSymbol"	^(settings at: aSymbol) value</body><body package="DST_Tools_Development">settingFor: aSymbol put: aValue	"Set the setting for aSymbol"	^(settings at: aSymbol) value: aValue</body><body package="DST_Tools_Development">spec	^self specSelector</body></methods><methods><class-id>DST.SettingsPage</class-id> <category>resources</category><body package="DST_Tools_Development">fieldMenu	^MenuBuilder new		add: 'find...'-&gt;[:ctrlr | ctrlr find];		add: 'replace...'-&gt;			[:ctrlr |			ctrlr replace.			self disturb];		line;		add: 'undo' -&gt;			[:ctrlr |			ctrlr undo.			self disturb];		line;		add: 'copy'-&gt;[:ctrlr | ctrlr copySelection];		add: 'cut'-&gt;			[:ctrlr |			ctrlr cut.			self disturb];		add: 'paste'-&gt;			[:ctrlr |			ctrlr paste.			self disturb];		line;		add: 'accept'-&gt;[:ctrlr | ctrlr accept];		add: 'cancel'-&gt;[:ctrlr | ctrlr cancel. self memo: ctrlr];		menu</body></methods><methods><class-id>DST.SettingsPage class</class-id> <category>resources</category><body package="DST_Tools_Development">transportsMenu	| items |	items := OrderedCollection new.	ORBDaemon configurationManager allTransports 		do: [:trans | items add: ((MenuItem labeled: trans transportName , ' Port:')				value: trans transportName)].	^Menu menuItems: items</body></methods><methods><class-id>DST.SettingsPage class</class-id> <category>instance creation</category><body package="DST_Tools_Development">forGeneral	^self newDescriptor: (#('DST' #DST #generalSpec #generalHelp) copyWith: #DST &lt;&lt; #dst &gt;&gt; 'DST')</body><body package="DST_Tools_Development">forInterfaceRepository	^self newDescriptor: (#('Interface Repository' #interfaceRepository #serviceSpec #interfaceRepositoryHelp) copyWith: #InterfaceRepository &lt;&lt; #dst &gt;&gt; 'Interface Repository')</body><body package="DST_Tools_Development">forNamingService	^self newDescriptor: (#('Naming Service' #namingService #serviceSpec #namingServiceHelp) copyWith: #NamingService &lt;&lt; #dst &gt;&gt; 'Naming Service')</body><body package="DST_Tools_Development">forTransport	^self newDescriptor: (#('IIOP Transport' #IIOP #iiopTransportSpec #iiopTransportHelp) copyWith: #IIOPTransport &lt;&lt; #dst &gt;&gt; 'IIOP Transport')</body><body package="DST_Tools_Development">newDescriptor: anArray	^super new descriptorArray: anArray</body></methods><methods><class-id>DST.Settings</class-id> <category>accessing</category><body package="DST_Tools_Development">label	^#DSTSettings &lt;&lt; #dst &gt;&gt; 'DST Settings'</body><body package="DST_Tools_Development">name	^'DST Settings'</body></methods><methods><class-id>DST.ORBConfigurationManager</class-id> <category>tools</category><body package="DST_Tools_Development">checkInitialized	"Raise an exception if the ORB has not been initialized."	"Raises DSTTool exception"	ORBObject hostId isNil		ifTrue: 			[self raiseException: #YouMustFirstInitializeTheRequestBroker &lt;&lt; #dst &gt;&gt; 'You must first initialize the request broker'].</body><body package="DST_Tools_Development">checkStarted	"Raise an exception if the ORB has not been started."	"Raises DSTTool exception"	(ORBObject hostId notNil and: [ORBDaemon running])		ifFalse: 			[self raiseException: #YouMustFirstStartTheRequestBroker &lt;&lt; #dst &gt;&gt; 'You must first start the request broker'].</body><body package="DST_Tools_Development">checkStopped	"Raise an exception if the ORB has not been stopped."	"Raises DSTTool exception"	(ORBObject hostId isNil or: [ORBDaemon running not])		ifFalse: 			[self raiseException: #YouMustFirstStopTheRequestBroker &lt;&lt; #dst &gt;&gt; 'You must first stop the request broker'].</body><body package="DST_Tools_Development">getHostInfo	"Get IP information about this host"	^self getHostInfoOnUnavailable: [self getUserHostInfo]</body><body package="DST_Tools_Development">getHostInfoOnUnavailable: aBlock 	"Get IP information about this host"	| node host |		[host := SocketAccessor getHostname.	host := host copyFrom: 1 to: host size.	node := IPSocketAddress hostAddressByNameOrAddressString: host]		on: Object errorSignal		do: 			[:err1 | 			| unixProcessClass |			unixProcessClass := #{UnixProcess} valueOrDo: [nil].			unixProcessClass == nil				ifTrue: [^aBlock value]				ifFalse: [					[host := unixProcessClass cshOne: 'hostname'.					host := host copyFrom: 1 to: host size - 1.					node := IPSocketAddress hostAddressByNameOrAddressString: host]						on: Object errorSignal do: [:err2 | 						[host := unixProcessClass cshOne: 'uname -n'.						host := host copyFrom: 1 to: host size - 1.						node := IPSocketAddress hostAddressByNameOrAddressString: host]							on: Object errorSignal do: [:err3 | ^aBlock value]]]].	node isNil		ifTrue: [^nil]		ifFalse: [^Array with: host with: node]</body><body package="DST_Tools_Development">getUserHostInfo	"Get IP information about this host from user"	| node host |	host := Dialog				request: #PleaseEnterYourHostname &lt;&lt; #dst &gt;&gt; 'Please enter your host name'				initialAnswer: ORBObject hostName				onCancel: [^nil].	[node := IPSocketAddress hostAddressByNameOrAddressString: host]		on: Object errorSignal do: [:err4 | (Dialog confirm: #IPAddressNotAvailableUseDefault &lt;&lt; #dst &gt;&gt; 'IP Address not available. Use default?')			ifTrue: [node := #[0 0 0 0]]].	^node isNil		ifTrue: [nil]		ifFalse: [Array with: host with: node]</body><body package="DST_Tools_Development">initializeAll	"Prompt the user about setting up the ORB for this host"	self checkStopped.	self initializeDialog ifFalse: [^false].	^self getHostInfo		ifNil: [ false ]		ifNotNil: [ :ar |			ORBObject initializeORBAtHost: ar first nodeId: ar last.			self initializeRepository.			self initializeFactories.			true ]</body><body package="DST_Tools_Development">initializeDialog	^(Dialog		choose: #ThisWillPerformAllInitializations &lt;&lt; #dst &gt;&gt; 'This will perform all initializations'		labels: (Array with: #OK &lt;&lt; #dst &gt;&gt; 'OK' with: #Cancel &lt;&lt; #dst &gt;&gt; 'Cancel')		values: #(true false)		default: true)		== true</body><body package="DST_Tools_Development">initializeFactories	"initialize the factories used for Lifecycle operations"	self checkInitialized.	ORBObject initializeFactories</body><body package="DST_Tools_Development">initializeRepository	"initialize the repository"	self checkStopped.	self checkInitialized.	ORBObject initializeRepository; checkRepository</body><body package="DST_Tools_Development">raiseException: string	DSTToolError raiseErrorString: string asString</body><body package="DST_Tools_Development">shutDownDialog	"Create a dialog for shutting down the orb"	| spec dialog time |	dialog := SimpleDialog new.	time := 0 asValue.	dialog builder aspectAt: #time put: time.	spec := UISpecification from: self class shutdownSpec.	dialog allButOpenFrom: spec.	dialog builder openDialog.	dialog accept value		ifTrue: [^time value]		ifFalse: [^nil]</body></methods><methods><class-id>DST.SettingsPage class</class-id> <category>interface specs</category><body package="DST_Tools_Development">generalSpec	"UIPainter new openOnClass: self andSelector: #iiopTransportSpec"	&lt;resource: #canvas&gt;	^#(#FullSpec 		#window: 		#(#WindowSpec 			#label: 'Unlabeled Canvas' 			#min: #(#Point 274 270 ) 			#bounds: #(#Rectangle 360 309 634 579 ) ) 		#component: 		#(#SpecCollection 			#collection: #(				#(#CheckBoxSpec 					#layout: #(#Point 9 25 ) 					#model: #localRPCTestingOn					#callbacksSpec: 					#(#UIEventCallbackSubSpec 						#valueChangeSelector: #disturb ) 					#label: #(#{Kernel.UserMessage} #key: #LocalTesting #defaultString: 'Local Testing' #catalogID: #dst) )				#(#CheckBoxSpec 					#layout: #(#Point 9 50 ) 					#model: #debuggingOn 					#callbacksSpec: 					#(#UIEventCallbackSubSpec 						#valueChangeSelector: #disturb ) 					#label: #(#{Kernel.UserMessage} #key: #Debugging #defaultString: 'Debugging' #catalogID: #dst) ) ) ) )</body><body package="DST_Tools_Development">iiopTransportSpec	"UIPainter new openOnClass: self andSelector: #iiopTransportSpec"	&lt;resource: #canvas&gt;	^#(#FullSpec 		#window: 		#(#WindowSpec 			#label: 'Unlabeled Canvas' 			#min: #(#Point 274 270 ) 			#bounds: #(#Rectangle 360 309 634 579 ) ) 		#component: 		#(#SpecCollection 			#collection: #(				#(#GroupBoxSpec 					#layout: #(#LayoutFrame 10 0 8 0 -15 1 112 0 ) 					#label: #(#{Kernel.UserMessage} #key: #PortNumber #defaultString: 'Port Number' #catalogID: #dst) )				#(#RadioButtonSpec 					#layout: #(#Point 19 38 ) 					#model: #portNumberKind 					#callbacksSpec: 					#(#UIEventCallbackSubSpec 						#valueChangeSelector: #disturb ) 					#label: #(#{Kernel.UserMessage} #key: #DynamicallyAllocated #defaultString: 'Dynamically Allocated' #catalogID: #dst)					#select: #dynamic ) 				#(#RadioButtonSpec 					#layout: #(#Point 19 73 ) 					#model: #portNumberKind 					#callbacksSpec: 					#(#UIEventCallbackSubSpec 						#valueChangeSelector: #disturb ) 					#label: #(#{Kernel.UserMessage} #key: #ConfiguredTo #defaultString: 'Configured To:' #catalogID: #dst)					#select: #configured ) 				#(#InputFieldSpec 					#layout: #(#Rectangle 146 73 211 95 ) 					#name: #configuredPortNumber 					#model: #configuredPortNumber 					#callbacksSpec: 					#(#UIEventCallbackSubSpec 						#requestFocusOutSelector: 						#exitCheckPortNumber: ) 					#menu: #fieldMenu 					#type: #number ) 				#(#CheckBoxSpec 					#layout: #(#Point 9 126 ) 					#model: #isI3On 					#callbacksSpec: 					#(#UIEventCallbackSubSpec 						#valueChangeSelector: #disturb ) 					#label: #(#{Kernel.UserMessage} #key: #ImplictInvocationInterfaceI3 #defaultString: 'Implict Invocation Interface (I3)' #catalogID: #dst) ) ) ) )</body><body package="DST_Tools_Development">serviceSpec	"UIPainter new openOnClass: self andSelector: #serviceSpec"	&lt;resource: #canvas&gt;	^#(#FullSpec 		#window: 		#(#WindowSpec 			#label: 'interfaceRepository' 			#min: #(#Point 274 270 ) 			#bounds: #(#Rectangle 356 506 630 776 ) ) 		#component: 		#(#SpecCollection 			#collection: #(				#(#RadioButtonSpec 					#layout: #(#Point 15 31 ) 					#model: #kind 					#callbacksSpec: 					#(#UIEventCallbackSubSpec 						#valueChangeSelector: #disturb ) 					#label: #(#{Kernel.UserMessage} #key: #Local #defaultString: 'Local' #catalogID: #dst)					#select: #local ) 				#(#RadioButtonSpec 					#layout: #(#Point 15 156 ) 					#model: #kind 					#callbacksSpec: 					#(#UIEventCallbackSubSpec 						#valueChangeSelector: #disturb ) 					#label: #(#{Kernel.UserMessage} #key: #Filename #defaultString: 'Filename:' #catalogID: #dst)					#select: #filename ) 				#(#InputFieldSpec 					#layout: #(#LayoutFrame 35 0 179 0 -20 1 202 0 ) 					#name: #filename 					#model: #filename 					#menu: #fieldMenu ) 				#(#RadioButtonSpec 					#layout: #(#LayoutFrame 15 0 64 0 -40 1 87 0 ) 					#model: #kind 					#callbacksSpec: 					#(#UIEventCallbackSubSpec 						#valueChangeSelector: #disturb ) 					#label: #(#{Kernel.UserMessage} #key: #Hostname #defaultString: 'Hostname:' #catalogID: #dst)					#select: #hostname ) 				#(#InputFieldSpec 					#layout: #(#LayoutFrame 35 0 88 0 -20 1 111 0 ) 					#name: #hostname 					#model: #hostname 					#menu: #fieldMenu ) 				#(#MenuButtonSpec 					#layout: #(#Rectangle 46 122 146 149 ) 					#model: #transport 					#callbacksSpec: 					#(#UIEventCallbackSubSpec 						#valueChangeSelector: #changedServiceTransport ) 					#menu: #transportsMenu ) 				#(#InputFieldSpec 					#layout: #(#Rectangle 154 124 254 147 ) 					#name: #port 					#model: #port 					#callbacksSpec: 					#(#UIEventCallbackSubSpec 						#requestFocusOutSelector: 						#exitCheckPortNumber: ) 					#type: #number ) ) ) )</body></methods><methods><class-id>DST.Settings class</class-id> <category>pages</category><body package="DST_Tools_Development">page10General	&lt;settingsPage: #(dst)&gt;	^SettingsPage forGeneral		icon: (ListIconLibrary visualFor: #web);		yourself</body><body package="DST_Tools_Development">page20Transport	&lt;settingsPage: #(dst transport)&gt;	^SettingsPage forTransport		icon: (ListIconLibrary visualFor: #web);		yourself</body><body package="DST_Tools_Development">page30Naming	&lt;settingsPage: #(dst naming)&gt;	^SettingsPage forNamingService		icon: (ListIconLibrary visualFor: #web);		yourself</body><body package="DST_Tools_Development">page40Repository	&lt;settingsPage: #(dst repository)&gt;	^SettingsPage forInterfaceRepository		icon: (ListIconLibrary visualFor: #web);		yourself</body></methods><methods><class-id>Tools.VisualLauncher</class-id> <category>DST</category><body package="DST_Tools_Development">dstInitializeAll	&lt;itemInMenu: #(#menuBar #dst) position: 25.20&gt;	^(MenuItem labeled: (#InitializeAll &lt;&lt; #dst &gt;&gt; 'Initialize All'))		enablement: [ ORBDaemon running not ];		value: [ ORBDaemon configurationManager initializeAll ]</body><body package="DST_Tools_Development">dstInitializeFactories	&lt;itemInMenu: #(#menuBar #dst) position: 25.30&gt;	^(MenuItem labeled: (#InitializeFactories &lt;&lt; #dst &gt;&gt; 'Initialize Factories'))		value: [ ORBDaemon configurationManager initializeFactories ]</body><body package="DST_Tools_Development">dstInitializeRepository	&lt;itemInMenu: #(#menuBar #dst) position: 25.40&gt;	^(MenuItem labeled: (#InitializeRepository &lt;&lt; #dst &gt;&gt; 'Initialize Repository'))		enablement: [ ORBDaemon running not ];		value: [ ORBDaemon configurationManager initializeRepository ]</body><body package="DST_Tools_Development">dstMenu	&lt;submenu: 'DST'		nameKey: #dst		menu: #(#menuBar)		position: 10.04&gt;	^Menu new</body><body package="DST_Tools_Development">dstORBRunning	&lt;itemInMenu: #(#menuBar #dst) position: 20.20&gt;	^(MenuItem labeled: (#ORBRunning &lt;&lt; #dst &gt;&gt; 'ORB Running'))		indication: [ ORBDaemon running ];		value: [ | coordinator configurator |			configurator := ORBDaemon configurationManager.			coordinator := ORBDaemon startUpCoordinator.			coordinator orbRunning				ifTrue: [ 					configurator shutDownDialog ifNotNil: [ :time |						coordinator shutDownRequestBroker: time.						configurator log: '\ORB stopped.\' withCRs ] ]				ifFalse: [						configurator getHostInfo ifNotNil: [ :hostInfo |						(ORBObject hostId = (hostInfo at: 2) or: [ configurator initializeAll ])							ifTrue: [ Cursor wait showWhile: [ coordinator startRequestBroker] ] ] ] ]</body><body package="DST_Tools_Development">dstResetRepository	&lt;itemInMenu: #(#menuBar #dst) position: 25.50&gt;	^(MenuItem labeled: (#ResetRepository &lt;&lt; #dst &gt;&gt; 'Reset Repository'))		enablement: [ ORBDaemon running not ];		value: [ ORBObject resetRepository ]</body><body package="DST_Tools_Development">dstSettings	&lt;itemInMenu: #(#menuBar #dst) position: 30.20&gt;	^(MenuItem labeled: (#Settings &lt;&lt; #dst &gt;&gt; 'Settings'))		value: [ DST.Settings openManager ]</body></methods><methods><class-id>DST.ORBConfigurationManager class</class-id> <category>interface specs</category><body package="DST_Tools_Development">shutdownSpec	"UIPainter new openOnClass: self andSelector: #shutdownSpec"	&lt;resource: #canvas&gt;	^#(#FullSpec		#window: #(#WindowSpec			#label: #(#{Kernel.UserMessage} #key: #ORBShutdown #defaultString: 'ORB Shutdown' #catalogID: #dst) 			#min: #(#Point 278 193)			#max: #(#Point 278 193)			#bounds: #(#Rectangle 243 256 521 449))		#component: #(#SpecCollection			#collection: #(#(#RadioButtonSpec				#layout: #(#Point 66 54)				#model: #time				#tabable: false				#label: #(#{Kernel.UserMessage} #key: #ImmediateShutdown #defaultString: 'Immediate Shutdown' #catalogID: #dst) 				#select: 0) #(#RadioButtonSpec				#layout: #(#Point 66 83)				#model: #time				#tabable: false				#label: #(#{Kernel.UserMessage} #key: #OneMinute #defaultString: '1 minute' #catalogID: #dst) 				#select: 1) #(#RadioButtonSpec				#layout: #(#Point 66 113)				#model: #time				#tabable: false				#label: #(#{Kernel.UserMessage} #key: #FiveMinutes #defaultString: '5 minutes' #catalogID: #dst) 				#select: 5) #(#LabelSpec				#layout: #(#Point 19 24)				#label: #(#{Kernel.UserMessage} #key: #TimeBeforeShutdown #defaultString: 'Time before shutdown:' #catalogID: #dst)) #(#ActionButtonSpec				#layout: #(#Rectangle 27 152 119 188)				#model: #accept				#tabable: true				#label: #(#{Kernel.UserMessage} #key: #OK #defaultString: 'OK' #catalogID: #dst)				#isDefault: true				#defaultable: true) #(#ActionButtonSpec				#layout: #(#Rectangle 169 151 254 188)				#model: #cancel				#tabable: true				#label: #(#{Kernel.UserMessage} #key: #Cancel #defaultString: 'Cancel' #catalogID: #dst)				#defaultable: true) #(#GroupBoxSpec				#layout: #(#Rectangle 12 12 267 146)))))</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>ORBConfigurationManager</name><environment>DST</environment><super>DST.DSTConfiguration</super><private>false</private><indexed-type>none</indexed-type><inst-vars>logTranscript resetAdapterId chosenTransports </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>DST-Configuration</category><attributes><package>DST_Core</package></attributes></class><class><name>VisualWorksSettings</name><environment>Tools</environment><super>Tools.SettingsDomain</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Tools-Settings-VW</category><attributes><package>Tools-Settings-VW</package></attributes></class><class><name>SettingsManagerPage</name><environment>Tools</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>manager id position label icon children definingMethod </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Tools-Settings-UI</category><attributes><package>Tools-Settings</package></attributes></class><class><name>VisualLauncher</name><environment>Tools</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>menuBar toolBar textCollector transcriptView statusBar </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Tools-Misc</category><attributes><package>Tools-Misc</package></attributes></class><class><name>Error</name><environment>Core</environment><super>Core.Exception</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Kernel-Exception Handling</category><attributes><package>Kernel-Exception Handling</package></attributes></class></st-source>