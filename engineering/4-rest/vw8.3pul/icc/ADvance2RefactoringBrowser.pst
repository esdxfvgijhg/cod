<?xml version="1.0"?><st-source><!-- Name: ADvance2RefactoringBrowserComment: IC&C ADvance Refactoring Browser IntegrationWhen this package or parcel is loaded, a tab for ADvance diagrams for selected Package, Parcel or Class is shown in the Browser.Copyright ©1997-2008 by IC&C GmbH, Software Foundations.All rights reserved.DbIdentifier: bear73DbTrace: 448850DbUsername: kgreekDbVersion: 8.1 - 1DevelopmentPrerequisites: #(#(#any 'Browser-BrowserUI' '') #(#any 'ADvance2' ''))PackageName: ADvance2RefactoringBrowserParcel: #('ADvance2RefactoringBrowser')ParcelName: ADvance2RefactoringBrowserPrerequisiteDescriptions: #(#(#name 'Browser-BrowserUI') #(#name 'ADvance2' #componentType #package))PrerequisiteParcels: #(#('Browser-BrowserUI' '') #('ADvance2' ''))PrintStringCache: (8.1 - 1,kgreek)Version: 8.1 - 1VersionDate: 02/28/2008Post-Load Block: 	[:package | ]Pre-Unload Block: 	[:package | ]Date: 5:08:50 PM May 26, 2017 --><time-stamp>From VisualWorks®, Pre-Release 8.3 (may17.4) of May 26, 2017 on May 26, 2017 at 5:08:50 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>ADvanceDiagramTool</name><environment>ICC.ADvance</environment><super>Refactory.Browser.CodeTool</super><private>false</private><indexed-type>none</indexed-type><inst-vars>diagramPainter </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>RBBrowserUI</category><attributes><package>ADvance2RefactoringBrowser</package></attributes></class><comment><class-id>ICC.ADvance.ADvanceDiagramTool</class-id><body>ADvance - Refactoring Browser IntegrationInstance Variables:	diagramPainter	&lt;AD2DiagramPainter&gt;	Viewer / Editor of the ADvance Subject.	oldClassSelection	&lt;Class&gt;	description of oldClassSelection</body></comment><methods><class-id>ICC.ADvance.ADvanceDiagramTool</class-id> <category>private</category><body package="ADvance2RefactoringBrowser">selectedSubject	"Answers the default subject for selected class (if a class is selcted) or for selected parcel / selected 	package else."	self selectedClass notNil		ifTrue: [^self subjectForClass: self selectedClass].	"self package answers first package of a selected bundle,	so we have to check if indeed a package is selected."	(self pundle notNil and: [self pundle isPackage])		ifTrue: [^self subjectForPackage: self pundle].	^nil</body><body package="ADvance2RefactoringBrowser">subjectForClass: aClass	"Answers a new Subject, if the class isn't a subject yet, and the already defined subject otherwise. In both cases, all super 	and subclasses are added to the subject (if there are too many subclasses (as for Object), only direct sublcasses are taken)."	| theSubclasses |	(theSubclasses := aClass allSubclasses) size &gt; 100		ifTrue: [theSubclasses := #()].	^(aClass isADvanceSubject		ifTrue: [aClass advanceSubject]		ifFalse: [(AD2Subject new)					baseClass: aClass;					name: (aClass name, ' (Default Class Subject)');					yourself])			addClasses: ((OrderedCollection with: aClass), theSubclasses, aClass allSuperclasses) saveNow: false; 			"saving is done only in case of diagram saving"			yourself</body><body package="ADvance2RefactoringBrowser">subjectForPackage: aPackage 	"Answers the default subject of this package. It is given by class with name (aPackage name, 'DefaultSubject'), which	is created on saving if not yet existing."	| theSubjectClassOrNil theSubjectName |	theSubjectName := aPackage name, ' (Default Package Subject)'.	theSubjectClassOrNil := [(self advance utils cleanStringFor: theSubjectName) asQualifiedReference valueOrDo: [nil]] on: Error do:[:ex| ex return: nil].	^((theSubjectClassOrNil notNil and: [theSubjectClassOrNil isADvanceSubject])		ifTrue: [theSubjectClassOrNil advanceSubject]		ifFalse: 			[(AD2Subject new)				baseClass: theSubjectClassOrNil;				name: theSubjectName;				yourself])		addClasses: (aPackage allClasses collect: [:eachClassDescriptor | eachClassDescriptor value])			saveNow: false;		yourself</body><body package="ADvance2RefactoringBrowser">subjectForParcel: aParcel 	"Answers the default subject of this parcel. It is given by class with name (aParcel name, 'DefaultSubject'), which	is created on saving if not yet existing."	| theSubjectClassOrNil theSubjectName |	theSubjectName := aParcel name, ' (Default Parcel Subject)'.	theSubjectClassOrNil := (self advance utils cleanStringFor: theSubjectName) asQualifiedReference valueOrDo: [nil].	^((theSubjectClassOrNil notNil and: [theSubjectClassOrNil isADvanceSubject])		ifTrue: [theSubjectClassOrNil advanceSubject]		ifFalse: 			[(AD2Subject new)				baseClass: theSubjectClassOrNil;				name: theSubjectName;				yourself])		addClasses: ((OrderedCollection withAll: aParcel definedClasses) addAll: aParcel extendedClasses; yourself)			saveNow: false;		yourself</body></methods><methods><class-id>ICC.ADvance.ADvanceDiagramTool</class-id> <category>accessing</category><body package="ADvance2RefactoringBrowser">diagramPainter	diagramPainter isNil ifTrue: [diagramPainter := ICC.ADvance.AD2DiagramPainter new].	^diagramPainter</body><body package="ADvance2RefactoringBrowser">selectedClass	"ADvance subjects are always for instance behavior, so ensure that not meta is used."	| selectedClassOrMeta |	selectedClassOrMeta := super selectedClass.	^(selectedClassOrMeta notNil and: [selectedClassOrMeta isMeta]) 		ifTrue: [selectedClassOrMeta instanceBehavior]		ifFalse: [selectedClassOrMeta]</body></methods><methods><class-id>ICC.ADvance.ADvanceDiagramTool</class-id> <category>updating</category><body package="ADvance2RefactoringBrowser">updateContents	"Show the default diagram for the selected code node:	- Class - Show the hierarchy diagram of the class' default subject (which is given by the class if	the class is already used as an ADvance subject class, or created on the fly). 	- Package - Show the overview diagram of the package's default subject (which is given by	the class PackageNameDefaultSubject if existing).	- Parcel - Same as for package.	Show diagram always fit to window, but do not treat that zoom change as a modification."	| theSubject |	(theSubject := self selectedSubject) notNil 		ifTrue: 			[self diagramPainter openDiagramOn: theSubject name: #RB.			self diagramPainter fitToWindowMaxZoom: 1.0.			self diagramPainter model beUnmodified]</body><body package="ADvance2RefactoringBrowser">updateRequest	^super updateRequest 		and: [self diagramPainter changeRequest]</body></methods><methods><class-id>ICC.ADvance.ADvanceDiagramTool</class-id> <category>tab APIs</category><body package="ADvance2RefactoringBrowser">isActive	^self selectedSubject notNil</body><body package="ADvance2RefactoringBrowser">tabName	^(#ADvanceDiagram &lt;&lt; #browser &gt;&gt; 'ADvance Diagram') asString</body></methods><methods><class-id>ICC.ADvance.ADvanceDiagramTool</class-id> <category>initialize-release</category><body package="ADvance2RefactoringBrowser">release	super release.	diagramPainter == nil ifFalse: [		diagramPainter release.		diagramPainter := nil]</body></methods><methods><class-id>ICC.ADvance.ADvanceDiagramTool class</class-id> <category>private-interface building</category><body package="ADvance2RefactoringBrowser">markedAsSystemClass	"This class not to be shown when browsing user classes."</body></methods><methods><class-id>ICC.ADvance.AD2DiagramPainter</class-id> <category>private</category><body package="ADvance2RefactoringBrowser">currentToolsetChanged	| app tool |	app := builder window application.	tool := app currentToolset selectedTool.	(tool isKindOf: ICC.ADvance.ADvanceDiagramTool) ifTrue:		[tool diagramPainter == self ifTrue: [tool updateContents]].</body></methods><methods><class-id>ICC.ADvance.ADvanceDiagramTool class</class-id> <category>interface specs</category><body package="ADvance2RefactoringBrowser">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Unlabeled Canvas' 			#bounds: #(#{Graphics.Rectangle} 640 512 1163 895 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.SubCanvasSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 0 0 0 1 0 1 ) 					#name: #diagramPainter 					#flags: 0 					#majorKey: #{ICC.ADvance.AD2DiagramPainter} 					#minorKey: #windowSpec 					#clientKey: #diagramPainter ) ) ) )</body></methods><methods><class-id>Refactory.Browser.CodeModel class</class-id> <category>tool registration</category><body package="ADvance2RefactoringBrowser">advanceRBIToolClass	&lt;tool&gt;	^ICC.ADvance.ADvanceDiagramTool</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>AD2DiagramPainter</name><environment>ICC.ADvance</environment><super>ICC.ADvance.AD2ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>anEditor model zoom </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>IC&amp;C ADvance Core</category><attributes><package>ADvance2</package></attributes></class><class><name>CodeTool</name><environment>Refactory.Browser</environment><super>Refactory.Browser.BrowserApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>codeModel menu </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Browser-Code Tools</category><attributes><package>Browser-BrowserUI</package></attributes></class></st-source>