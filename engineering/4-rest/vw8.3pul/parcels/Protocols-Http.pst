<?xml version="1.0"?><st-source><!-- Name: Protocols-HttpNotice: Copyright 1999-2016 Cincom Systems, Inc.  All rights reserved.Comment: Common HTTP protocol classes for client and serverDbIdentifier: bear73DbTrace: 495098DbUsername: tkoganDbVersion: 8.3 - 2DevelopmentPrerequisites: #(#(#any 'Protocol-Common-Namespace' ''))PackageName: Protocols-HttpParcel: #('Protocols-Http')PrerequisiteDescriptions: #(#(#name 'Protocol-Common-Namespace' #componentType #package))PrerequisiteParcels: #(#('Protocol-Common-Namespace' ''))PrintStringCache: (8.3 - 2,tkogan)Version: 8.3 - 2Date: 1:17:53 PM July 14, 2017 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.3 (jul17.2) of July 14, 2017 on July 14, 2017 at 1:17:53 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>ProtocolVersion</name><environment>Protocols</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>connection validateHostOriginBlock writeResponseBlock settings </inst-vars><class-inst-vars>validateHostOriginBlock </class-inst-vars><imports></imports><category></category><attributes><package>Protocols-Http</package></attributes></class><comment><class-id>Protocols.ProtocolVersion</class-id><body>ProtocolVersion is an abstract class for HTTP version specific behavior Subclasses must implement the following messages:	private		parseHeadersFor:		readRequestLineFrom:	services		processRequest:	upgrade		upgradeRequest:Instance Variables:	connection	&lt;HttpConnection&gt;		validateHostOriginBlock	&lt;BlockClosure&gt;  servers that are not intended to process input from any web page but only for certain sites SHOULD verify the |Origin| field is an origin they expect	writeResponseBlock	&lt;BlockClosure&gt; implements write response specific to an Http version  	settings &lt;Dictionary or SettingsFrame&gt; the settings are specific to a protocol versionClass Instance Variables:	validateHostOriginBlock &lt;BlockClosure&gt; default </body></comment><class><name>HTTPv11</name><environment>Protocols</environment><super>Protocols.ProtocolVersion</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Protocols-Http</package></attributes></class><comment><class-id>Protocols.HTTPv11</class-id><body>HTTPv11 implements Http1.1 specific methods</body></comment><shared-variable><name>FieldLineContinuationCharacters</name><environment>Protocols.HTTPv11</environment><private>false</private><constant>false</constant><category>constants</category><initializer>String with: Character tab with: Character space</initializer><attributes><package>Protocols-Http</package></attributes></shared-variable><methods><class-id>Protocols.ProtocolVersion</class-id> <category>accessing</category><body package="Protocols-Http">connection	^connection</body><body package="Protocols-Http">readStream	^connection readStream</body><body package="Protocols-Http">settings	^settings</body><body package="Protocols-Http">settings: anHTTP2Settings	settings := anHTTP2Settings</body><body package="Protocols-Http">writeStream	^connection writeStream</body></methods><methods><class-id>Protocols.ProtocolVersion</class-id> <category>initialize-release</category><body package="Protocols-Http">closingConnection</body><body package="Protocols-Http">connection: anHttpConnection"	Set only the connection, without setting the protocolVersion as well. This is in contrast to the on: method	which does both."	connection := anHttpConnection</body><body package="Protocols-Http">initialize	super initialize.	self initializeSettings</body><body package="Protocols-Http">initializeSettings	settings := Dictionary new</body><body package="Protocols-Http">on: aConnection" Set a connection and the protocol version for this connection"	self connection: aConnection.	aConnection protocolVersion: self</body></methods><methods><class-id>Protocols.ProtocolVersion</class-id> <category>upgrade</category><body package="Protocols-Http">validateHostOriginBlock"Servers that are not intended to process input from any web page but only for certain sites SHOULD verify the |Origin| field is an origin they expect.  If the origin indicated is unacceptable to the server, then it SHOULD respond to the handshake with a reply containing HTTP 403 Forbidden status code."	^validateHostOriginBlock ifNil: [validateHostOriginBlock := self class validateHostOriginBlock ]</body><body package="Protocols-Http">validateHostOriginBlock: aBlock	validateHostOriginBlock := aBlock</body></methods><methods><class-id>Protocols.ProtocolVersion</class-id> <category>copying</category><body package="Protocols-Http">postCopy	super postCopy.	validateHostOriginBlock := validateHostOriginBlock copy.	settings := settings copy.</body></methods><methods><class-id>Protocols.ProtocolVersion class</class-id> <category>instance creation</category><body package="Protocols-Http">new	^super new initialize</body><body package="Protocols-Http">on: anHttpConnection	^ self new		on: anHttpConnection;		yourself</body></methods><methods><class-id>Protocols.ProtocolVersion class</class-id> <category>defaults</category><body package="Protocols-Http">validateHostOriginBlock	^validateHostOriginBlock ifNil: [[ :host :origin :responder | true]]</body><body package="Protocols-Http">validateHostOriginBlock: aBlock	validateHostOriginBlock := aBlock</body></methods><methods><class-id>Protocols.ProtocolVersion class</class-id> <category>testing</category><body package="Protocols-Http">isAbstract	^self == ProtocolVersion</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>Object</name><environment>Core</environment><super></super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Kernel-Objects</category><attributes><package>Kernel-Objects</package></attributes></class></st-source>