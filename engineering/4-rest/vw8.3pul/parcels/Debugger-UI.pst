<?xml version="1.0"?><st-source><!-- Name: Debugger-UINotice: Copyright 2003-2017 Cincom Systems, Inc.  All rights reserved.Comment: PDP Debugger for VW 7.DbIdentifier: bear73DbTrace: 501648DbUsername: smichaelDbVersion: 8.3 - 3DevelopmentPrerequisites: #(#(#any 'Debugger-StackInspector' '') #(#any 'Debugger-Exception-Modifications' ''))PackageName: Debugger-UIParcel: #('Debugger-UI')ParcelName: Debugger-UIPrerequisiteParcels: #(#('Debugger-StackInspector' '') #('Debugger-Exception-Modifications' ''))PrintStringCache: (8.3 - 3,smichael)Version: 8.3 - 3Post-Load Block: 	[ :pkg |  Notifier beDevelopment.]Post-Unload Block: 	[        Notifier beDevelopment]Date: 3:26:59 PM June 30, 2017 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.3 (jun17.4) of June 23, 2017 on June 30, 2017 at 3:26:59 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>DebugProbeInserter</name><environment>CraftedSmalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>probedMethod contextHomeMethod origPermMethod probeSpec homeContext probeRecord probe tempMethod tempProbe debugger exitBlock addToTempMethods </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>CraftedSt-Dbgr support</category><attributes><package>Debugger-UI</package></attributes></class><comment><class-id>CraftedSmalltalk.DebugProbeInserter</class-id><body>This DebugProbeInserter is used by the debugger to insert a probe into a method.  It used to be a single methodin the debugger but allowing the insertion operation to be restarted would have made the method too messy.This occurs if the inserter determines that the method needs to be converted to a full block methodand the context has not been stepped, i.e. it is at the beginning of the method.Because we can insert temporary probes into the compiled method residing in the method dictionary,we must provide a temporary method (unbound).  Furthermore, permanent probes must appear in thetemporary method and permanent method so when the user modifies the probe, the change is reflectedin both places.  However, the probe cannot be identical be cause it may not occupy the same pc positionin each method.  To accomplish this, each permanent probe in a temporary method is a ProbeClone ofthe probe in the permanent method.Instance Variables:	addToTempMethods		&lt;Boolean&gt;	This variable indicates that the temp method must be added to								the debugger's temp methods, i.e. it is a new temp method. 	debugger				&lt;DebuggerService&gt;		The debugger.	exitBlock 				&lt;BlockClosure&gt;	This block is used to provide a non-local return so an immediate								exit from the probe insertion operation can be done from any method.	homeContext			&lt;MethodContext&gt;	The home context of the selected method.	origPermMethod			&lt;CompiledMethod | ProbedCompiledMethod&gt;	This is the method in the method dictionary								before the probe is inserted.	probe					&lt;CodeProbe&gt;	The probe inserted into the probedMethod.	probedMethod			&lt;ProbedCompiledMethod&gt;	This method will have a probe inserted, and then it will be put								into the method dictionary if the probe is a permanent probe.	probeRecord			&lt;ProbeRecord&gt;	probeSpec				&lt;ProbeSpec&gt;	tempMethod			&lt;ProbedCompiledMethod&gt;	This method will have a probe inserted, but it will exist only until								the home context exits.	tempProbe				&lt;CodeProbe&gt;	The probe inserted into the tempMethod.</body></comment><class><name>DebugTempProbeInserter</name><environment>CraftedSmalltalk</environment><super>CraftedSmalltalk.DebugProbeInserter</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>CraftedSt-Dbgr support</category><attributes><package>Debugger-UI</package></attributes></class><comment><class-id>CraftedSmalltalk.DebugTempProbeInserter</class-id><body>DebugTempProbeInserter is used to insert temp probes into a method. Temp probes are only available in the debugger.</body></comment><class><name>DebuggerIcons</name><environment>Tools</environment><super>AlphaBlendedIcons</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Debugger-UI</package></attributes></class><comment><class-id>Tools.DebuggerIcons</class-id><body>Icons for the Debugger.</body></comment><class><name>ContextListPolicy</name><environment>CraftedSmalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>debugger stackLimit stack filteredStack displayAllLimit patterns conversionSymbol matchSymbol </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Tools-Programming</category><attributes><package>Debugger-UI</package></attributes></class><comment><class-id>CraftedSmalltalk.ContextListPolicy</class-id><body>The ContextListPolicy performs filtering and emphasis mapping for a process stack. To fully understand what it does you should first read the help page of the ContextListPolicyEditor.Instance Variables:	conversionSymbol	&lt;ByteSymbol&gt;	Message sent to a pattern string that produces a pattern object. VW patterns use #yourself, regex uses #asRegex.	debugger	&lt;DebuggerService&gt;	The debugger that uses this policy.	displayAllLimit	&lt;Integer&gt;	The number of contexts at the top of the stack that are not subject to filtering.	filteredStack	&lt;(Collection of: Array)&gt;	The filtered stack is a collection of arrays. Each array contains;			Element 1	A context printString.			Element 2	The unfiltered index of the context.			Element 3	The name of the emphasis that should be applied to the context printString.	matchSymbol	&lt;ByteSymbol&gt;	Message sent to a pattern used to match a context printString. VW patterns use #match:, regex uses #matches:	patterns	&lt;(Collection of: ServerContextPatternSpec)&gt;	The patterns used to filter the context stack.	stack	&lt;(SequenceableCollection of: Context)&gt;	The unfiltered context stack.	stackLimit	&lt;Integer&gt;	Max depth of the viewable context stack.</body></comment><class><name>ContextDumpPolicy</name><environment>CraftedSmalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>stack stream numberToDump errorMessage </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Tools-Programming</category><attributes><package>Debugger-UI</package></attributes></class><comment><class-id>CraftedSmalltalk.ContextDumpPolicy</class-id><body>The ContextDumpPolicy provides different formats of a stack dump, see the 'printing' protocol.Instance Variables:	errorMessage	&lt;String | UserMessage&gt;	The error message.	numberToDump	&lt;Integer&gt;	Maximum stack depth to dump	stack	&lt;(Array of: Context)&gt;	The context stack to dump.	stream	&lt;WriteStream | FileStream&gt;	The output write stream used to create the dump.</body></comment><class><name>RestartSignal</name><environment>CraftedSmalltalk</environment><super>Core.Notification</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>CraftedSt-Dbgr support</category><attributes><package>Debugger-UI</package></attributes></class><comment><class-id>CraftedSmalltalk.RestartSignal</class-id><body>The RestartSignal is used by the DebugProbeInserter. Raising this signal causes a probe insertion operation to be restarted. This happens if the selected method was changed to a full block method.</body></comment><class><name>ServerContextPatternSpec</name><environment>CraftedSmalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>pattern name </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Tools-Programming</category><attributes><package>Debugger-UI</package></attributes></class><comment><class-id>CraftedSmalltalk.ServerContextPatternSpec</class-id><body>ServerContextPatternSpec is a support class used by the ContextListPolicyInstance Variables:	name	&lt;String&gt;	The name of the pattern	pattern	&lt;String | RxMatcher&gt;	The pattern used to match a context printString</body></comment><class><name>ClientContextPatternSpec</name><environment>CraftedSmalltalk</environment><super>CraftedSmalltalk.ServerContextPatternSpec</super><private>false</private><indexed-type>none</indexed-type><inst-vars>color </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Tools-Programming</category><attributes><package>Debugger-UI</package></attributes></class><comment><class-id>CraftedSmalltalk.ClientContextPatternSpec</class-id><body>ClientContextPatternSpec contains the pattern matching information used to filter and color the debugger context list.Instance Variables:	name	&lt;String | Text&gt;	The name of the pattern	pattern	&lt;String&gt;	The pattern used to match a context printString	color	&lt;ColorValue&gt;	The emphasis color for the context items that match the pattern.</body></comment><class><name>DebuggerClient2</name><environment>CraftedSmalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>service contextIndex busy document stackList stackEmphases enableStackFiltering closeAction terminated probes </inst-vars><class-inst-vars>menuHolder </class-inst-vars><imports>			Refactory.Browser.*			</imports><category>Tools-Programming</category><attributes><package>Debugger-UI</package></attributes></class><comment><class-id>CraftedSmalltalk.DebuggerClient2</class-id><body>The client portion of the debugger. The debugger is composed of two primary components, a DebuggerClient, and a DebuggerService. The two execute in separate processes, which facilitates remote debugging and allows the client to receive input events while the service is performing an operation. Keeping the client active while performing a debug operation enables it to abort a hung operation.Instance Variables:	busy	&lt;Boolean&gt;	Indicates if the client is waiting for the service to complete an operation.	closeAction	&lt;ByteSymbol&gt;	The action the debugger service is to perform upon closure of the debug window.			This is needed because of the way responsibilities are divided between the client and the service and that			they execute in different processes.	contextIndex	&lt;Integer&gt;	The index in the context list of the currently selected context.	enableStackFiltering	&lt;Boolean&gt;	Specifies if stack filtering is enabled.	parsedSource	&lt;String or Text&gt;	The source code of the selected context. Used for rb compatibility	parseTree	&lt;RBProgramNode&gt;	Used for rb compatibility	service	&lt;DebuggerService&gt;	shortClassNames	&lt;Boolean&gt;	Specifies if short class names should be used in the context list.	stackEmphases	&lt;Dictionary&gt;	Emphases used to color the context stack elements.	stackList	&lt;SelectionInList&gt;	The context list.	terminated	&lt;Boolean&gt;	Indicates if the process being debugged has terminated.	document	&lt;ValueModel&gt;	The value holder used to hold the text of the debugger text pane.	breakpoints	&lt;OrderedCollection&gt;	The current breakpoints being editedClass Instance Variables:	menuHolder	&lt;ValueHolder&gt;	Caches the current menu</body></comment><class><name>DebuggerClient</name><environment>CraftedSmalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>service contextIndex busy text parsedSource parseTree stackList stackEmphases enableStackFiltering closeAction terminated </inst-vars><class-inst-vars>menuHolder </class-inst-vars><imports>			Refactory.Browser.BrowserEnvironment			Refactory.Browser.RefactoringBrowser			Refactory.Browser.RBParser			</imports><category>Tools-Programming</category><attributes><package>Debugger-UI</package></attributes></class><comment><class-id>CraftedSmalltalk.DebuggerClient</class-id><body>The client portion of the debugger. The debugger is composed of two primary components, a DebuggerClient, and a DebuggerService. The two execute in separate processes, which facilitates remote debugging and allows the client to receive input events while the service is performing an operation. Keeping the client active while performing a debug operation enables it to abort a hung operation.Instance Variables:	busy	&lt;Boolean&gt;	Indicates if the client is waiting for the service to complete an operation.	closeAction	&lt;ByteSymbol&gt;	The action the debugger service is to perform upon closure of the debug window.			This is needed because of the way responsibilities are divided between the client and the service and that			they execute in different processes.	contextIndex	&lt;Integer&gt;	The index in the context list of the currently selected context.	enableStackFiltering	&lt;Boolean&gt;	Specifies if stack filtering is enabled.	parsedSource	&lt;String or Text&gt;	The source code of the selected context. Used for rb compatibility	parseTree	&lt;RBProgramNode&gt;	Used for rb compatibility	service	&lt;DebuggerService&gt;	shortClassNames	&lt;Boolean&gt;	Specifies if short class names should be used in the context list.	stackEmphases	&lt;Dictionary&gt;	Emphases used to color the context stack elements.	stackList	&lt;SelectionInList&gt;	The context list.	terminated	&lt;Boolean&gt;	Indicates if the process being debugged has terminated.	text	&lt;ValueModel&gt;	The value holder used to hold the text of the debugger text pane.</body></comment><class><name>ContextListPolicyEditor</name><environment>CraftedSmalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>patternList matchSelector conversionSelector selection colorHolder displayAllLimit buffer undoBuffer </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Tools-Programming</category><attributes><package>Debugger-UI</package></attributes></class><comment><class-id>CraftedSmalltalk.ContextListPolicyEditor</class-id><body>ContextListPolicyEditor is used to manage the context filter patterns. A description of the operation of the editor is found on the editor help page.Instance Variables:	buffer	&lt;ClientContextPatternSpec&gt;	Copy/Paste buffer used to copy and paste pattern specs.	colorHolder	&lt;PluggableAdaptor on: "selection"&gt;	Used to pass the color to/from the ColorSelectionDialog.	conversionSelector	&lt;ValueHolder on: ByteSymbol&gt;	The selector used to convert pattern strings.	displayAllLimit	&lt;ValueHolder on: Integer&gt;	The size of the unfiltered stack.	matchSelector	&lt;ValueHolder on: ByteSymbol&gt;	The selector used to match patterns.	patternList	&lt;SelectionInList&gt;	A list of context pattern specs	selection	&lt;ValueHolder on: ClientContextPatterSpec&gt;	The currently selected context pattern spec	undoBuffer	&lt;IdentityDictionary&gt;	Used to undo operations</body></comment><shared-variable><name>MaxMenuEntryWidth</name><environment>CraftedSmalltalk.DebuggerClient2</environment><private>false</private><constant>false</constant><category>settings</category><initializer>50</initializer><attributes><package>Debugger-UI</package></attributes></shared-variable><shared-variable><name>MaxSelectorSubMenuEntries</name><environment>CraftedSmalltalk.DebuggerClient2</environment><private>false</private><constant>false</constant><category>settings</category><initializer>30</initializer><attributes><package>Debugger-UI</package></attributes></shared-variable><shared-variable><name>PlaceToolbarBelowContexts</name><environment>CraftedSmalltalk.DebuggerClient2</environment><private>false</private><constant>false</constant><category>settings</category><initializer>false</initializer><attributes><package>Debugger-UI</package></attributes></shared-variable><shared-variable><name>MaxMenuEntryWidth</name><environment>CraftedSmalltalk.DebuggerClient</environment><private>false</private><constant>false</constant><category>settings</category><initializer>50</initializer><attributes><package>Debugger-UI</package></attributes></shared-variable><shared-variable><name>MaxSelectorSubMenuEntries</name><environment>CraftedSmalltalk.DebuggerClient</environment><private>false</private><constant>false</constant><category>settings</category><initializer>30</initializer><attributes><package>Debugger-UI</package></attributes></shared-variable><shared-variable><name>PlaceToolbarBelowContexts</name><environment>CraftedSmalltalk.DebuggerClient</environment><private>false</private><constant>false</constant><category>settings</category><initializer>false</initializer><attributes><package>Debugger-UI</package></attributes></shared-variable><shared-variable><name>HelpText</name><environment>CraftedSmalltalk.ContextListPolicyEditor</environment><private>false</private><constant>false</constant><category>variables</category><initializer>(Text string: 'The ContextListPolicyEditor is used to create and modify the context list policy.  To understand how this editor works it one should first understand how the context list policy works.Context list policyThe basic concept is that the context list policy matches each context against a sequence of patterns.  If a pattern match is found, the context is displayed in the color associated with the pattern.  If no match is found then the context is filtered from the list.  If there is more than one pattern that will match, it is the first one in the list that is used.More specifically however, the filtering process begins after the number of contexts specified by "Display all limit" have been collected.  This means that the most recent message sends will always be displayed.  If a context is before the Display All Limit and is not matched, it will be displayed in the normal default color for text.When matching a context the policy creates a string to represent the context using the following template:	$P$package or parcel name$C$class name$S$selectorFor example, if you want to display every message send in one of the Collection packages the pattern would be.	$P$*Collections*The "class name" is the absolute class name so it contains the namespace path from Smalltalk.In addition the policy has hooks to allow a pattern matcher other than the VW builtin string patterns to be used.  This is done by specifying the "Conversion selector" and the "Match selector".  For example, if the Regex11 parcel is loaded the "Conversion selector" would be #asRegex and the "Match selector" would be #matches:.A useful setup that would display all contexts but emphasize the more interesting ones would be;MyStuff - *$C$MyNamespace.* - ColorValue redAllElse - * - ColorValue darkGrayContextListPolicyEditorPatterns	This is the list of patterns.  Each pattern has a name which is used for two purposes. First, for the user to identify the pattern.  Second, this is associates the pattern to its color.  If there is more than one pattern with the same name then the contexts that match these patterns will be displayed using the color of the last duplicate name in the list.Reordering	The list can be reordered by simply dragging the list item to the desired location.Menu commands	New - This command will create a new pattern and insert it after the selected pattern.  If no pattern is selected then it will be inserted at the beginning of the list.	Remove - Removes the selected pattern from the list.	Undo - This command will undo last command performed on the selected pattern.  There is no limit to the undo buffer.	Copy - This command makes a copy of the selected pattern in a buffer.	Paste -This command will insert a copy of buffer after the selected pattern.Buttons and fieldsNew	See Menu commands - New.Remove	See Menu commands - Remove.Name	Entry field for the pattern namePick color	Opens a color picker for changing the  color of the selected pattern.Pattern string	The actual pattern string.Match selector	This field specifies the selector to be sent to the converted string for matching.Conversion selector	This field specifies the selector to send to the pattern string to compile into a pattern object.  This is needed for regex patterns.Display all limit	This field specifies the limit where all contexts are displayed.' runs: (Core.RunArray runs: #(186 19 816 22 3 10 3 8 440 7 287 23 10 361 10 87 14 1 3 167 6 48 4 114 4 67 5 73 18 2 3 28 6 31 4 36 10 73 14 30 14 86 19 137 17 66) values: #(nil #bold nil #italic nil #italic nil #italic nil #bold nil #bold #underline nil #underline nil #italic nil #(#underline #italic) nil #(#underline #italic) nil #(#underline #italic) nil #(#underline #italic) nil #(#underline #italic) nil #italic nil #underline nil #underline nil #underline nil #underline nil #underline nil #underline nil #underline nil #underline nil))) asValue</initializer><attributes><package>Debugger-UI</package></attributes></shared-variable><shared-variable><name>DisplayAllLimit</name><environment>CraftedSmalltalk.ContextListPolicyEditor</environment><private>false</private><constant>false</constant><category>variables</category><initializer>5</initializer><attributes><package>Debugger-UI</package></attributes></shared-variable><shared-variable><name>ConversionSelector</name><environment>CraftedSmalltalk.ContextListPolicyEditor</environment><private>false</private><constant>false</constant><category>variables</category><initializer>#yourself</initializer><attributes><package>Debugger-UI</package></attributes></shared-variable><shared-variable><name>MatchSelector</name><environment>CraftedSmalltalk.ContextListPolicyEditor</environment><private>false</private><constant>false</constant><category>variables</category><initializer>#match:</initializer><attributes><package>Debugger-UI</package></attributes></shared-variable><shared-variable><name>Patterns</name><environment>CraftedSmalltalk.ContextListPolicyEditor</environment><private>false</private><constant>false</constant><category>variables</category><initializer>Array new.</initializer><attributes><package>Debugger-UI</package></attributes></shared-variable><methods><class-id>CraftedSmalltalk.DebugProbeInserter</class-id> <category>inserting</category><body package="Debugger-UI">addProbe: aProbeSpec using: aProbeRecord for: aDebugger	debugger := aDebugger.	probeSpec := aProbeSpec.	probeRecord := aProbeRecord.	exitBlock := [:str | ^false -&gt; str].	"non-local exit"	[self basicAddProbe]		on: RestartSignal		do: [:ex | ex restart].	^true -&gt; probe</body><body package="Debugger-UI">basicAddProbe: aProbe	(probeSpec := ProbeCreationSpec new)		permanent: aProbe isPermanent;		conditional: false.	self getAndVerifyHomeContext.	self initializeMethods.	probeRecord := aProbe probeRecord.	self verifyFullBlocks.	probe := aProbe.	self makeProbeMethod.	self insertProbeAndFixContext.	self installProbedMethod.</body></methods><methods><class-id>CraftedSmalltalk.DebugProbeInserter</class-id> <category>private</category><body package="Debugger-UI">basicAddProbe	self verifyTextUnchanged.	self getAndVerifyHomeContext.	self initializeMethods.	self getProbeRecord.	self verifyProbeSpec.	self verifyFullBlocks.	self makeProbe.	self insertProbeAndFixContext.	self installProbedMethod.</body><body package="Debugger-UI">flushMethodCacheFor: methods"	| meth |	meth := methods detect: [:m | true].	meth isNil		ifTrue: [^self].	meth := meth homeMethod.	meth mclass flushVMmethodCacheEntriesFor: meth selector.	ObjectMemory compactingGC"	methods do: [:m | m flushCachedVMCode].</body><body package="Debugger-UI">getAndVerifyHomeContext	homeContext := debugger context home.	homeContext notNil		ifTrue: [^self].	(probeSpec isNil or: [probeSpec isPermanent not])		ifTrue:			[self changeClassTo: DebugTempProbeInserter.			^RestartSignal raise].	exitBlock value: (#PermProbeCannonBeInserted &lt;&lt; #pdp &gt;&gt; '	A permanent probe cannot be inserted.All block closures from the current contextto the home method must be full closures.You can either insert a temporary probe oruse the "make full blocks" command onthe edit menu.').</body><body package="Debugger-UI">getProbeRecord	| insertionRange |	insertionRange := probeRecord isNil		ifTrue: [debugger selectionRange]		ifFalse: [probeRecord insertionRange].	probeRecord := tempMethod probeRecordFor: insertionRange.</body><body package="Debugger-UI">initializeMethods	tempMethod := debugger tempMethods at: homeContext ifAbsent: [].	contextHomeMethod := homeContext method.	origPermMethod := tempMethod isNil		ifTrue: [contextHomeMethod]		ifFalse: [tempMethod permanentMethod].	origPermMethod isProbeable		ifFalse: [exitBlock value: (#CannotInsertProbeIntoThisMethodType &lt;&lt; #pdp &gt;&gt; 'Sorry, probes cannot be inserted into this method type.')].	(addToTempMethods := tempMethod isNil)		ifTrue: [tempMethod := contextHomeMethod newTempProbedMethod].	contextHomeMethod isPartiallyBound		ifFalse: [self changeClassTo: DebugTempProbeInserter]</body><body package="Debugger-UI">insertProbeAndFixContext	"Preserve a copy of the pc map before inserting the probe.  The difference between the	old map and the map after the probe is inserted will be used to adjust the context pc."	| pcMap |	[pcMap := tempMethod addProbe: tempProbe] on: BranchLimit		do: 			[:ex |			exitBlock value: #CannotInsertProbeBranchLimitExceeded &lt;&lt; #pdp						&gt;&gt; 'The probe could not be entered because abranch limit in the method was exceeded.'].	addToTempMethods		ifTrue: [debugger tempMethods at: homeContext put: tempMethod].	self		adjustDynamicsReplacing: origPermMethod		with: tempMethod		from: probeRecord blockMethodIndex		atPC: probeRecord insertionPC		pcMap: pcMap</body><body package="Debugger-UI">installProbedMethod	| topView mclass |	mclass := tempMethod mclass.	(probe isKindOf: DisplayProbe) | probeSpec isConditional		ifFalse:			[probe finishSetup.			probeSpec isPermanent				ifTrue: [mclass addSelector: debugger selector withMethod: probedMethod].			^self].	topView := probe createEditorOn: probedMethod.	topView model		closeAction: [probeSpec isPermanent						ifTrue: [mclass addSelector: debugger selector withMethod: probedMethod]].	topView open.	^self</body><body package="Debugger-UI">makeFullBlocks 	| stack ctx |	"We can make a full method because we know that no messages have been	sent.  That also means we can copy the stack and replace it after the method	has been recreated.  We do this for insurance, just in case the user manually	put something on the stack and then inserted a probe.  However, we do not copy	a block closure because its method is changed to a ProbedCompiledBlock."	ctx := debugger context.	stack := Array new: ctx stackP.	1 to: stack size do: [:i | stack at: i put: (ctx localAt: i)].	debugger basicMakeFullMethod.	ctx := debugger context.	1 to: stack size do:		[:i | | obj |		((obj := stack at: i) isKindOf: BlockClosure)			ifFalse: [ctx localAt: i put: obj]].	RestartSignal raiseSignal.</body><body package="Debugger-UI">makeProbe	probe := debugger		makeProbeTyped: probeSpec probeClass		using: probeRecord		at: nil		method: tempMethod.	probe isNil		ifTrue: [exitBlock value: nil].			"exit if no probe"	probeSpec isConditional		ifTrue: [probe setNoAction]		ifFalse: [probe setAction].	probeSpec isAutoProbe		ifTrue: [probe setAlwaysAction].	self makeProbeMethod</body><body package="Debugger-UI">makeProbeMethod	"If a permanent probe is being inserted we must create a new method to put	into the method dictionary."	probeSpec isPermanent		ifTrue:			[probedMethod := (tempMethod mclass compiledMethodAt: debugger selector) newFullProbedMethod.		"A new record must be obtained because there may be more probes in the temp method		than in the perm method which would result in different insertion pcs."			probe record: (probedMethod probeRecordFor: probeRecord insertionRange).			probedMethod addProbe: probe.			tempProbe := ProbeClone parent: probe.			"Set the temp probe's record back to the record from the temp method."			tempProbe record: probeRecord]		ifFalse:			[probe setTemporary.			tempProbe := probe.			probedMethod := tempMethod].</body><body package="Debugger-UI">verifyFullBlocks	"Make sure that all closures will be full closures."	(tempMethod blockAt: probeRecord blockMethodIndex) isFullBlockChain		ifTrue: [^self].	debugger hasHomeContextStepped		ifFalse: [^self makeFullBlocks].	probeSpec isPermanent		ifTrue:			[exitBlock value: (#PermProbeCannonBeInserted2 &lt;&lt; #pdp &gt;&gt; '	A permanent probe cannot be inserted.All block closures from the selected block tothe compiled method must be full block closures.You can either insert a temporary probe oruse the "make full blocks" command onthe edit menu.').].	self changeClassTo: DebugTempProbeInserter.	RestartSignal raise.</body><body package="Debugger-UI">verifyProbeSpec	probeSpec notNil		ifTrue: [^self].	"Prompt user for probe selection."	probeSpec := CodeProbe selectDebuggerProbeTypeAsTemp: false.	probeSpec isNil		"Exit if user canceled."		ifTrue: [exitBlock value: nil].</body><body package="Debugger-UI">verifyTextUnchanged	debugger changeRequest		ifFalse:			[exitBlock value: (#CannotInsertProbeSourceChanged &lt;&lt; #pdp &gt;&gt; 'A probe cannot be inserted because the source code has changed.')].</body></methods><methods><class-id>CraftedSmalltalk.DebugProbeInserter</class-id> <category>removing</category><body package="Debugger-UI">basicRemoveProbe: aProbe	| replacementMethod |	self removeProbe: aProbe fromContextMethod: debugger context.	aProbe isTemporary		ifTrue: [^self].	"Now remove the probe from the stored compiled method."	probedMethod := debugger context mclass compiledMethodAt: aProbe selector.	"Make sure the method actually contains the probe."	(probedMethod isProbed and: [probedMethod includesProbe: aProbe])		ifFalse: [^self].	"If we removed the last probe then revert back to the unprobed compiled method."	probedMethod totalProbes = 1		ifTrue: [replacementMethod := probedMethod originalMethod]		ifFalse:			[replacementMethod := probedMethod newNormalProbedMethod.			replacementMethod removeProbe: aProbe].	probedMethod mclass		addSelector: aProbe selector		withMethod: replacementMethod.</body><body package="Debugger-UI">basicRemoveProbe: aProbe fromExistingTemp: aMethod	"This method removes a probe from a temp method and adjusts the	context pc if the probe is a temp probe."	| aCtx breakMethod pcMap |	breakMethod := aMethod blockAt: aProbe blockMethodIndex.	pcMap := breakMethod basicRemoveProbe: aProbe.	aProbe isTemporary ifFalse: [^pcMap].	aCtx := debugger topContext.	[aCtx == nil] whileFalse: 			[(aCtx method == breakMethod and: [aCtx pc &gt; aProbe insertionPC])				ifTrue: [aCtx jump: (pcMap at: aCtx pc) - aCtx pc].			aCtx := aCtx sender].	self flushMethodCacheFor: (Array with: breakMethod).	^pcMap</body><body package="Debugger-UI">removeAllProbes: probes from: aContext	(probes asSortedCollection: [:a1 :a2 | a1 insertionPC &gt; a2 insertionPC])		do: [:p | self removeProbe: p fromContextMethod: aContext].</body><body package="Debugger-UI">removeProbe: aProbe fromContextMethod: aContext	| methodIsTemp pcMap |	homeContext := aContext supposedHome.	probedMethod := aContext method homeMethod.	methodIsTemp := debugger tempMethods includesKey: homeContext.	methodIsTemp		ifTrue: 			[pcMap := self basicRemoveProbe: aProbe fromExistingTemp: probedMethod.			aProbe isTemporary ifTrue: [^self].			tempMethod := probedMethod.			probedMethod := probedMethod originalMethod]		ifFalse: 			[tempMethod := probedMethod newTempProbedMethod.			pcMap := tempMethod removeProbe: aProbe.			debugger tempMethods at: homeContext put: tempMethod].	self		adjustDynamicsReplacing: probedMethod		with: tempMethod		from: aProbe blockMethodIndex		atPC: aProbe insertionPC		pcMap: pcMap</body><body package="Debugger-UI">removeProbe: aProbe fromExistingTemp: aMethod	"This method removes a probe from a temp method and adjusts the	context pc if the probe is a temp probe.  It also flushes the	method cache."		self basicRemoveProbe: aProbe fromExistingTemp: aMethod.</body><body package="Debugger-UI">removeStepProbes: probes	probes do:		[:ac |		self			removeProbe: ac key			fromExistingTemp: ac value method].</body></methods><methods><class-id>CraftedSmalltalk.DebugProbeInserter</class-id> <category>initialize-release</category><body package="Debugger-UI">for: aDebugger	debugger := aDebugger</body></methods><methods><class-id>CraftedSmalltalk.DebugProbeInserter</class-id> <category>private - adjusting</category><body package="Debugger-UI">adjustDynamicsReplacing: origMethod with: nuMethod from: blkIndex atPC: aPC pcMap: pcMap	"This method attempts to 'fix' all the contexts and block closures.  However, it cannot fix closures	that are not full closures.  Furthermore, if a closure has been instantiated and does not have	an active context then its method will not be changed to a probed method.  We could find them	by sending allOwnersWeakly: to every block in the method but it could be very time consuming	and not finding them does not appear to create a problem.  We do check two branches; the branch	the current context is in, and the branch containing the block where the probe is to be inserted."	| nuSelectedBlock origBlock nuBlock methodMap methodsToCheck closuresToFix ctxs ctx depthLimit nuBlocks origBlocks |	homeContext := debugger context supposedHome.	"Construct map to map original blocks to probed blocks."	nuSelectedBlock := nuMethod blockAt: blkIndex.	origBlock := origMethod blockAt: blkIndex.	depthLimit := nuSelectedBlock frameSize.	"Map blocks to new blocks."	methodMap := IdentityDictionary new.	nuBlocks := nuMethod withAllBlockMethods.	origBlocks := origMethod withAllBlockMethods.	1 to: nuBlocks size		do: 			[:i |			methodMap at: (origBlocks at: i) put: (nuBlock := nuBlocks at: i).			methodMap at: nuBlock put: nuBlock].	"Create list of blocks to check for exisiting closures."	methodsToCheck := IdentitySet new.	[origBlock ~~ origMethod] whileTrue: 			[methodsToCheck add: origBlock.			origBlock := origBlock outerMethod].	"Get list of active contexts that have homeContext as sender."	closuresToFix := IdentitySet new.	ctxs := IdentitySet with: homeContext.	ctx := debugger topContext.	[ctx == nil or: [ctx == homeContext]] whileFalse: 			[ctx supposedHome == homeContext				ifTrue: 					[ctxs add: ctx.					closuresToFix add: ctx receiver].			ctx := ctx sender].	"The following is executed unpreemptively because it attempts to find and correct	all block contexts whose method is being changed.  This includes block contexts	that are in other processes!!"		["Replace method in closures and block contexts that have homeContext as home context."	methodsToCheck do: 			[:aMethod |			(aMethod allOwnersWeakly: false) do: 					[:obj |					(obj class == BlockClosure and: [obj home == homeContext])						ifTrue: [closuresToFix add: obj].					(obj isBlockContext and: [obj home == homeContext])						ifTrue: [ctxs add: obj]]].	closuresToFix do: [:bc | bc method: (methodMap at: bc method)].	"replace method in block contexts"	ctxs		do: [:aCtx | aCtx probeMethod: (methodMap at: aCtx method ifAbsent: [aCtx method])].	self flushMethodCacheFor: methodsToCheck.	ctxs := OrderedCollection new.	blkIndex = 1		ifTrue: [ctxs add: homeContext]		ifFalse: 			[(nuSelectedBlock allOwnersWeakly: false) do: 					[:obj |					(obj isBlockContext						and: [obj sender notNil and: [obj method == nuSelectedBlock]])							ifTrue: [ctxs add: obj]]].	ctxs do: 			[:aCtx |			depthLimit &gt; aCtx size ifTrue: [aCtx growBy: 3].			aCtx jump: (pcMap at: aCtx pc) - aCtx pc]]			valueUnpreemptively</body></methods><methods><class-id>CraftedSmalltalk.DebugProbeInserter class</class-id> <category>instance creation</category><body package="Debugger-UI">addProbe: aProbeSpec using: aProbeRecord for: aDebugger	^self new addProbe: aProbeSpec using: aProbeRecord for: aDebugger"Smalltalk Professional Debug Package Version 1.6 (c) 1998 Crafted Smalltalk"</body><body package="Debugger-UI">for: aDebugger	^self new for: aDebugger</body></methods><methods><class-id>CraftedSmalltalk.DebugTempProbeInserter</class-id> <category>private</category><body package="Debugger-UI">getAndVerifyHomeContext	homeContext := debugger context supposedHome.	homeContext isNil		ifTrue:			[exitBlock value: (#CannotInsertProbeHomeNotInProcess &lt;&lt; #pdp &gt;&gt; '		A probe cannot be inserted.The home context is not in the process').].</body><body package="Debugger-UI">verifyFullBlocks	"Make full block closures if we can."	debugger hasHomeContextStepped		ifTrue: [^self].	"Cannot make full closure."	probeSpec isPermanent		ifTrue: [self changeClassTo: DebugProbeInserter].	self makeFullBlocks.</body><body package="Debugger-UI">verifyProbeSpec	probeSpec notNil		ifTrue: [^self].	"Prompt user for probe selection."	probeSpec := CodeProbe selectDebuggerProbeTypeAsTemp: true.	probeSpec isNil		"Exit if user canceled."		ifTrue: [exitBlock value: nil].</body></methods><methods><class-id>CraftedSmalltalk.DebugTempProbeInserter</class-id> <category>private - adjusting</category><body package="Debugger-UI">adjustDynamicsReplacing: origMethod with: nuMethod from: blkIndex atPC: aPC pcMap: pcMap	"This method attempts to 'fix' all the contexts and block closures.  We do check two branches; the branch	the current context is in, and the branch containing the block where the probe is to be inserted."	| nuSelectedBlock methodMap ctxs ctx depthLimit nuBlocks origBlocks homeMethod closureMap done methodsToFlush |	homeContext := debugger context supposedHome.	homeMethod := homeContext method.	"Construct map to map original blocks to probed blocks."	nuSelectedBlock := nuMethod blockAt: blkIndex.	depthLimit := nuSelectedBlock frameSize.	"Map blocks to new blocks and clean closures to new clean closures."	methodMap := IdentityDictionary new.	closureMap := IdentityDictionary new.	nuBlocks := nuMethod withAllBlockMethods.	origBlocks := origMethod withAllBlockMethods.	1 to: nuBlocks size		do: 			[:i |			| oldBlock nuBlock |			methodMap at: (oldBlock := origBlocks at: i)				put: (nuBlock := nuBlocks at: i).			methodMap at: nuBlock put: nuBlock.			1 to: oldBlock numLiterals				do: 					[:j |					| lit |					lit := oldBlock basicAt: j.					lit class == BlockClosure						ifTrue: [closureMap at: lit put: (nuBlock basicAt: j)]]].	"The following is executed unpreemptively because it attempts to find and correct	all block contexts whose method is being changed."	ctx := debugger topContext.	ctxs := OrderedCollection new.	methodsToFlush := IdentitySet new.	done := false.		[[ctx == nil or: [done]] whileFalse: 			[done := ctx == homeContext.			ctx method homeMethod == homeMethod				ifTrue: 					[methodsToFlush add: ctx method.					ctx probeMethod: (methodMap at: ctx method ifAbsent: [ctx method]).					ctx method == nuSelectedBlock ifTrue: [ctxs add: ctx].					1 to: ctx stackP						do: 							[:i |							| obj vals |							obj := ctx localAt: i.							(obj class == BlockClosure and: [obj method homeMethod == homeMethod])								ifTrue: 									[methodsToFlush add: obj method.									obj isClean										ifTrue: [ctx localAt: i put: (closureMap at: obj ifAbsent: [obj])]										ifFalse: 											[vals := obj copiedValues.											obj method numCopiedValues = 1 ifTrue: [vals := Array with: vals].											obj method: (methodMap at: obj method).											1 to: vals size												do: 													[:j |													| val |													(val := vals at: j) class == BlockClosure														ifTrue: 															[(val isClean and: [val method homeMethod == homeMethod])																ifTrue: 																	[methodsToFlush add: val method.																	vals at: j put: (closureMap at: val ifAbsent: [val])]]														ifFalse: 															[val class == Array																ifTrue: 																	[1 to: val size																		do: 																			[:k |																			| aVal |																			aVal := val at: k.																			(aVal class == BlockClosure																				and: [aVal isClean and: [aVal method homeMethod == homeMethod]])																					ifTrue: 																						[methodsToFlush add: val method.																						val at: k put: (closureMap at: aVal ifAbsent: [aVal])]]]]]]]]].			ctx := ctx sender].	self flushMethodCacheFor: methodsToFlush.	ctxs do: 			[:aCtx |			depthLimit &gt; aCtx size ifTrue: [aCtx growBy: 3].			aCtx jump: (pcMap at: aCtx pc) - aCtx pc]]			valueUnpreemptively</body></methods><methods><class-id>CraftedSmalltalk.ContextListPolicy</class-id> <category>list management</category><body package="Debugger-UI">componentStringFor: aMethod		| stream selector |	stream := WriteStream on: (String new: 64).	selector := aMethod usuallyHasSelector ifTrue: [aMethod selector].	self outputPackageOrParcelStringOn: stream for: aMethod selector: selector.	stream		nextPutAll: '$C$';		nextPutAll: ((aMethod definition notNil and: [aMethod definition isForSharedVariable not])			ifTrue: [aMethod mclass absoluteName]			ifFalse: [aMethod definition ifNotNil: #fullName ifNil: ['']]).	selector ifNotNil:		[stream			nextPutAll: '$S$';			nextPutAll: selector].	^stream contents</body><body package="Debugger-UI">computeContextList	| stk ctx n includesSelectedCtx selectedContext |	selectedContext := debugger context.	includesSelectedCtx := selectedContext isNil.	stk := WriteStream on: (Array new: stackLimit).	ctx := debugger topContext.	n := 0.	[ctx == nil or: [(includesSelectedCtx or: [includesSelectedCtx := ctx == selectedContext]) and: [(n := n+1) &gt; stackLimit]]]		whileFalse:			[stk nextPut: ctx.			ctx := ctx sender].	stackLimit := n max: stackLimit.	stack := stk contents.	filteredStack := nil.</body><body package="Debugger-UI">filterStack	filteredStack := OrderedCollection new.	patterns isEmpty		ifTrue:			[1 to: stack size do: 				[:i | filteredStack add: (Array with: (stack at: i) printString with: i with: nil).].			^filteredStack].	1 to: stack size do:		[:i | | context componentString match id |		context := stack at: i.		componentString := self componentStringFor: context method homeMethod.		context isBlockContext ifTrue:			[componentString := '$B$', componentString].		match := patterns detect: [:pat | pat pattern perform: matchSymbol with: componentString] ifNone: [nil].		id := match notNil			ifTrue: [match name]			ifFalse: [nil].		(id notNil or: [i &lt;= displayAllLimit])			ifTrue: [filteredStack add: (Array with: context printString with: i with: id)]].	^filteredStack</body><body package="Debugger-UI">moreStack	self isFullStack		ifTrue: [^false].	stackLimit := stackLimit * 2.	^true</body><body package="Debugger-UI">outputPackageOrParcelStringOn: stream for: aMethod selector: selector	| packages |	#{Store.Registry} ifDefinedDo: 			[:registry |			^selector				ifNil: 					[(aMethod definition ifNotNil: #package)						ifNotNil: 							[:package |							stream								nextPutAll: '$P$';								nextPutAll: package printString]]				ifNotNil: 					[packages := registry allContainingPackagesForSelector: selector								class: aMethod mclass.					packages isEmpty						ifFalse: 							[stream								nextPutAll: '$P$';								nextPutAll: packages last printString]]]</body></methods><methods><class-id>CraftedSmalltalk.ContextListPolicy</class-id> <category>accessing</category><body package="Debugger-UI">contextList	^stack</body><body package="Debugger-UI">contextSelectedAt: anIndex	anIndex &lt; 1 		ifTrue: [^nil].	(anIndex &lt;= displayAllLimit and: [stack size &gt;= anIndex])		ifTrue: [^stack at: anIndex].	filteredStack size &lt; anIndex		ifTrue: [^nil].	^stack at: ((filteredStack at: anIndex) at: 2)</body><body package="Debugger-UI">conversionSymbol: aSymbol	conversionSymbol := aSymbol.	self convertPatterns.</body><body package="Debugger-UI">debugger: aDebuggerService	debugger := aDebuggerService</body><body package="Debugger-UI">displayAllLimit: anInteger	displayAllLimit := anInteger.	filteredStack := nil.</body><body package="Debugger-UI">filteredStack	filteredStack isNil		ifTrue: [self filterStack].	^filteredStack</body><body package="Debugger-UI">indexOfCurrentContext	| idx |	debugger context isNil		ifTrue: [^0].	idx := stack indexOf: debugger context.	1 to: self filteredStack size do: 		[:i |		idx = ((filteredStack at: i) at: 2)			ifTrue: [^i]].	^0</body><body package="Debugger-UI">matchSymbol: aSymbol	matchSymbol := aSymbol.	filteredStack := nil.</body><body package="Debugger-UI">patterns: anOrderedCollection	patterns := anOrderedCollection.	self convertPatterns.</body><body package="Debugger-UI">stackLimit: anInteger	stackLimit := anInteger</body></methods><methods><class-id>CraftedSmalltalk.ContextListPolicy</class-id> <category>private</category><body package="Debugger-UI">convertPatterns	| nuPatterns |	filteredStack := nil.	(patterns isEmpty or: [conversionSymbol isNil])		ifTrue: [^self].	nuPatterns := OrderedCollection new.	patterns do: 		[:ps | 		[nuPatterns add:					((ServerContextPatternSpec new)						pattern: (ps pattern perform: conversionSymbol);						name: ps name;						yourself)] 				on: Error				do:	[:ex | 					Dialog warn: (#ErrorConvertingPattern &lt;&lt; #pdp &gt;&gt; 'Error converting pattern').					ex inspect.					ps inspect.					patterns := nil.					^self]].	patterns := nuPatterns</body></methods><methods><class-id>CraftedSmalltalk.ContextListPolicy</class-id> <category>testing</category><body package="Debugger-UI">isFullStack	^stack isEmpty or: [stack last sender isNil]</body></methods><methods><class-id>CraftedSmalltalk.ContextListPolicy</class-id> <category>initialize-release</category><body package="Debugger-UI">initialize	displayAllLimit := 5.	stackLimit := ObjectMemory current availableFreeOldSpaceBytes &gt; 500000		ifTrue: [500]		ifFalse: [16].	conversionSymbol := #yourself.	patterns := #().</body></methods><methods><class-id>CraftedSmalltalk.ContextListPolicy class</class-id> <category>instance creation</category><body package="Debugger-UI">debugger: aDebuggerService	^self new initialize debugger: aDebuggerService</body></methods><methods><class-id>CraftedSmalltalk.ContextDumpPolicy</class-id> <category>accessing</category><body package="Debugger-UI">actualNumberToDump	^numberToDump isNil		ifTrue: [stack size]		ifFalse: [numberToDump min: stack size]</body><body package="Debugger-UI">errorMessage: aString	errorMessage := aString</body><body package="Debugger-UI">numberToDump: anInteger	numberToDump := anInteger</body><body package="Debugger-UI">printedString	^stream contents</body><body package="Debugger-UI">stack: aCollection	stack := aCollection</body><body package="Debugger-UI">stream	^stream</body><body package="Debugger-UI">stream: aStream	stream := aStream.</body></methods><methods><class-id>CraftedSmalltalk.ContextDumpPolicy</class-id> <category>private printing</category><body package="Debugger-UI">basicPrintObject: anObject	stream nextPutAll:		(((self _objectClass: anObject) name at: 1) isVowel ifTrue: ['an '] ifFalse: ['a ']).	stream print: (self _objectClass: anObject).</body><body package="Debugger-UI">basicPrintVarName: aString value: anObject	stream nextPutAll: aString.	stream nextPutAll: ' = '.	[anObject forStackDumpPrintUsing: self]		on: Error		do: [:ex1 | 			[self basicPrintObject: anObject]				on: Error				do: [:ex2 | stream nextPutAll: (#ErrorInPrintingObject &lt;&lt; #pdp &gt;&gt; 'Error in printing object') asString]].</body><body package="Debugger-UI">printContextParmsAndTemps: aContext	| nArgs |	nArgs := aContext method numArgs.	nArgs &gt; 0		ifTrue: [stream nextPutAll: (#ArgumentsC &lt;&lt; #pdp &gt;&gt; 'Arguments:') asString; cr].	aContext pdpSlotAccessors do:		[:sa |		nArgs = 0			ifTrue: [stream nextPutAll: (#TemporariesC &lt;&lt; #pdp &gt;&gt; 'Temporaries:') asString; cr].		nArgs := nArgs - 1.		stream tab.		self basicPrintVarName: (sa at: 1) value: (aContext getTempVar: (sa at: 2)).		stream cr].</body><body package="Debugger-UI">printContextReceiver: aContext	stream nextPutAll: (#ReceiverC &lt;&lt; #pdp &gt;&gt; 'Receiver:') asString; crtab.	self basicPrintObject: aContext homeReceiver.	stream cr.</body><body package="Debugger-UI">printContextReceiverInstVars: aContext 	| instVarNames theClass |	instVarNames := OrderedCollection new.	theClass := aContext _objectClass: aContext homeReceiver.	theClass accumulateInstVarNames: instVarNames.	instVarNames isEmpty ifTrue: [^self].	stream		nextPutAll: (#InstanceVariablesC &lt;&lt; #pdp &gt;&gt; 'Instance Variables:') asString;		cr.	instVarNames keysAndValuesDo: 			[:index :each | 			stream tab.			self basicPrintVarName: each				value: (aContext _object: aContext homeReceiver instVarAt: index).			stream cr]</body><body package="Debugger-UI">printContextVerbosely: aContext	stream		cr; 		nextPutAll: (#Dashes &lt;&lt; #pdp &gt;&gt; '----------------------------------------------------------------------') asString;		cr.		aContext printOn: stream.	stream cr.	self printContextReceiver: aContext.	self printContextReceiverInstVars: aContext.	self printContextParmsAndTemps: aContext.	stream nextPutAll: (#ContextPCEq &lt;&lt; #pdp &gt;&gt; 'Context PC = ') asString.	aContext pc printOn: stream</body><body package="Debugger-UI">printErrorMessage	| errorString |	(errorMessage isNil or: [(errorString := errorMessage asString) isEmpty])		ifTrue: [^self].	stream nextPutAll: errorString; cr</body><body package="Debugger-UI">printHeader</body></methods><methods><class-id>CraftedSmalltalk.ContextDumpPolicy</class-id> <category>printing</category><body package="Debugger-UI">copyStackString	self printErrorMessage.	self printSimpleStack.	self printVerboseStack.	^self printedString</body><body package="Debugger-UI">printSimple	self printHeader.	self printErrorMessage.	self printSimpleStack.</body><body package="Debugger-UI">printSimpleStack	[1 to: self actualNumberToDump do:		[:i |		(stack at: i) printOn: stream.		stream cr].	]		on: Object errorSignal		do: [:ex | ex inspect. ex return].</body><body package="Debugger-UI">printVerbose	self printHeader.	self printErrorMessage.	self printVerboseStack.</body><body package="Debugger-UI">printVerboseStack	[1 to: self actualNumberToDump do:		[:i |		self printContextVerbosely: (stack at: i).		stream cr].	]		on: Object errorSignal		do: [:ex | ex inspect. ex return].</body></methods><methods><class-id>CraftedSmalltalk.ContextDumpPolicy</class-id> <category>initialize-release</category><body package="Debugger-UI">initialize	stack := Array new.	stream := WriteStream on: (String new: 500).</body></methods><methods><class-id>CraftedSmalltalk.ContextDumpPolicy</class-id> <category>visitor printing</category><body package="Debugger-UI">printCollection: aCollection	self basicPrintObject: aCollection.	stream nextPut: $[.	aCollection size printOn: stream.	stream nextPut: $].</body><body package="Debugger-UI">printObject: anObject	"Default printing"	^anObject printOn: stream</body><body package="Debugger-UI">printString: anObject	(anObject contractTo: 60) printOn: stream.</body></methods><methods><class-id>CraftedSmalltalk.ContextDumpPolicy</class-id> <category>private-reflection protocol</category><body package="Debugger-UI">_objectClass: anObject	"Answer the object which is the argument's class.."	&lt;primitive: 211&gt;	^self primitiveFailed</body></methods><methods><class-id>CraftedSmalltalk.ContextDumpPolicy class</class-id> <category>instance creation</category><body package="Debugger-UI">new	^super new initialize</body></methods><methods><class-id>CraftedSmalltalk.RestartSignal class</class-id> <category>class initialization</category><body package="Debugger-UI">initialize	notifierString := (#RestartProbeInsertion &lt;&lt; #pdp &gt;&gt; 'Restart probe insertion') asString</body></methods><methods><class-id>CraftedSmalltalk.ServerContextPatternSpec</class-id> <category>initialize-release</category><body package="Debugger-UI">initialize	name := ''.	pattern := ''</body></methods><methods><class-id>CraftedSmalltalk.ServerContextPatternSpec</class-id> <category>accessing</category><body package="Debugger-UI">name	^name</body><body package="Debugger-UI">name: aString	name := aString</body><body package="Debugger-UI">pattern	^pattern</body><body package="Debugger-UI">pattern: aString	pattern := aString</body></methods><methods><class-id>CraftedSmalltalk.ServerContextPatternSpec class</class-id> <category>instance creation</category><body package="Debugger-UI">new	^super new initialize</body></methods><methods><class-id>CraftedSmalltalk.ClientContextPatternSpec</class-id> <category>accessing</category><body package="Debugger-UI">color	^color</body><body package="Debugger-UI">color: aColorValue	color := aColorValue</body></methods><methods><class-id>CraftedSmalltalk.ClientContextPatternSpec</class-id> <category>copying</category><body package="Debugger-UI">copyWithoutText	| cpy |	cpy := self shallowCopy.	cpy removeText.	^cpy</body><body package="Debugger-UI">copyWithText	| cpy |	cpy := self shallowCopy.	cpy emphasize.	^cpy</body></methods><methods><class-id>CraftedSmalltalk.ClientContextPatternSpec</class-id> <category>emphasis</category><body package="Debugger-UI">emphasize	name := name string asText.	color isNil		ifTrue: [^self].	name emphasizeAllWith: #color -&gt; color.</body><body package="Debugger-UI">removeText	name := name string</body></methods><methods><class-id>CraftedSmalltalk.ClientContextPatternSpec</class-id> <category>initialize-release</category><body package="Debugger-UI">initialize	super initialize.	color := ColorValue black.</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient2</class-id> <category>actions</category><body package="Debugger-UI">abortDebugOperationInProcess: proc	busy		ifFalse: [^proc debug].	service pauseDebugOperation</body><body package="Debugger-UI">acceptDocument	"Recompile the method of the selected context."	builder keyboardProcessor focusedView == self documentWidget ifFalse: [		self documentWidget acceptOther.		^true].	^self acceptDocumentAlways</body><body package="Debugger-UI">acceptDocumentAlways	"Recompile the method of the selected context."	| compiledMethod |	self doItExpectPattern ifFalse: [^true].		service isInstalledMethodSourceOutOfSync		ifTrue:			[(Dialog				choose: (#SourcesOutOfSyncWhatToDo &lt;&lt; #pdp &gt;&gt; 'Installed method source and selected context original source areout of sync.  Accepting new source may result in losing prior changes.')				labels: (Array with: (#AcceptSource &lt;&lt; #pdp &gt;&gt; 'Accept Source') with: (#Cancel &lt;&lt; #pdp &gt;&gt; 'Cancel'))				values: #(true false)				default: false)				ifFalse: [^false]].		Refactory.Browser.BrowserCodeTool.SaveAutoFormat == true ifTrue: [self formatDocument].	compiledMethod := self documentWidget compileMethod: #OnSave retry: [self acceptDocument].	compiledMethod ifNil: [^false].	self hasSourceCodeChanged ifFalse: [		self documentWidget animateAccept.		self hasProbesChanged ifTrue: [self probesUpdated: compiledMethod].		^true].		self documentWidget accept.	probes := self documentWidget markupDocumentSegments.	self installCompiledMethod: compiledMethod.	^true</body><body package="Debugger-UI">cancelDocument	builder keyboardProcessor focusedView == self documentWidget ifFalse: [		^self documentWidget cancelOther].		self documentWidget revert</body><body package="Debugger-UI">continue	"Continue execution from the interrupted state of the top context."	service hasSuspendedOperations		ifTrue: [^Dialog warn: (#YouMustCompleteOperationBeforeContinuing &lt;&lt; #pdp &gt;&gt; 'You must complete the suspended debugger operationsbefore continuing process execution.')].	self canRun		ifTrue:			[closeAction := #continue.			self closeRequest].</body><body package="Debugger-UI">copyStack	TextEditorController currentSelection: service stackForCopy</body><body package="Debugger-UI">correctSpelling	"Attempt to correct the spelling of the not-understood message"	| selectors guess nArgs |	selectors := service possibleDNUCorrections.	selectors isEmpty		ifTrue:			[nArgs := service dnuSelector numArgs.			[guess := (Dialog request: (#CouldNotCorrectEnterNewSelectorC &lt;&lt; #pdp &gt;&gt; 'Could not correct. Enter new selector:')) asSymbol.			nArgs = guess numArgs]				whileFalse:					[(Dialog confirm: (#NumArgsMustNotChangeRetryQ &lt;&lt; #pdp &gt;&gt; 'The number of arguments must not change.Retry?'))						ifFalse: [^self]]]		ifFalse:			[selectors := selectors asArray.			guess := Dialog				choose: (#CorrectToC &lt;&lt; #pdp &gt;&gt; 'Correct to:')				fromList: selectors				values: selectors				lines: 8				cancel: [^'']				for: nil.].	(Dialog confirm: ((#RetryWithSelectorCnt1s &lt;&lt; #pdp &gt;&gt; 'Retry with Selector:&lt;nt&gt;&lt;1s&gt;')			expandMacrosWith: guess) for: self interfaceWindow)		ifFalse: [^self].	self performDebugOperation: #correctDNUWith: with: guess.</body><body package="Debugger-UI">defineMethod	self hasChanged		ifTrue:			[^Dialog warn: (#CannotPerformOperationSrcChanged &lt;&lt; #pdp &gt;&gt; 'The operation cannot be performed because the source code has changed.')].	self performDebugOperation: #defineMethod.</body><body package="Debugger-UI">firstLoop	self hasChanged		ifTrue:			[^Dialog warn: (#CannotPerformOperationSrcChanged &lt;&lt; #pdp &gt;&gt; 'The operation cannot be performed because the source code has changed.')].	self performDebugOperation: #firstLoop.</body><body package="Debugger-UI">formatDocument	"Format the document in the editor using the editors current parser."	self documentWidget format</body><body package="Debugger-UI">inspectContext	service inspectCurrentContext</body><body package="Debugger-UI">installCompiledMethod: aCompiledMethod	"Recompile the method of the selected context."	self performDebugOperation: #installCompiledMethod: with: aCompiledMethod</body><body package="Debugger-UI">jumpToCaret	"Finds the closest proper point before the caret and causes the context to jump to it,	then completely pops the context stack.  Proper jump points cannot be inside a loop,	or cannot be after loop preperation, and must have a stack depth of 0.  Also, jumps	into or out of blocks are not permitted."	self hasChanged		ifTrue:			[^Dialog warn: (#CannotPerformOperationSrcChanged &lt;&lt; #pdp &gt;&gt; 'The operation cannot be performed because the source code has changed.')].	self performDebugOperation: #jumpToCaretAt: with: self selectionRange.</body><body package="Debugger-UI">makeFullMethod	service isMethodContextSelected		ifFalse:			[^Dialog warn: (#ContextIsNotForMethodSelectAnother &lt;&lt; #pdp &gt;&gt; 'The selected context is not a method context.&lt;n&gt;Please select the method context and reissue this command.') expandMacros].	(Dialog choose: (#WillCutStackAndReenter &lt;&lt; #pdp &gt;&gt; 'This command will cut the context stack back to the selected context&lt;n&gt;and re-enter the method.') expandMacros		labels: (Array with: (#Proceed &lt;&lt; #pdp &gt;&gt; 'Proceed') with: (#Cancel &lt;&lt; #pdp &gt;&gt; 'Cancel'))		values: #(true false)		default: false)		ifFalse: [^self].	self performDebugOperation: #makeFullMethod.</body><body package="Debugger-UI">moreStack	self canShowMore		ifTrue: [service moreStack]</body><body package="Debugger-UI">nextLoop	self hasChanged		ifTrue:			[^Dialog warn: (#CannotPerformOperationSrcChanged &lt;&lt; #pdp &gt;&gt; 'The operation cannot be performed because the source code has changed.')].	self performDebugOperation: #nextLoop.</body><body package="Debugger-UI">pause	"Places the process back into the paused state and closes the debugger."	service hasSuspendedOperations		ifTrue: [^Dialog warn: (#YouMustCompleteOperationBeforeContinuing &lt;&lt; #pdp &gt;&gt; 'You must complete the suspended debugger operationsbefore continuing process execution.')].	self performDebugOperation: #pause.</body><body package="Debugger-UI">pauseDebugOperation	busy		ifFalse: [^self].	service pauseDebugOperation</body><body package="Debugger-UI">proceed	"Proceed from the interrupted state of the currently selected context.	Instructions pending execution in methods entered after the selected	context are not executed."	service hasSuspendedOperations		ifTrue: [^Dialog warn: (#YouMustCompleteOperationBeforeContinuing &lt;&lt; #pdp &gt;&gt; 'You must complete the suspended debugger operationsbefore continuing process execution.')].	self performDebugOperation: #proceed.</body><body package="Debugger-UI">reenter	"Reset to the initial state of the currently selected context, i.e. as if the	context had just been entered."	self performDebugOperation: #reenter.</body><body package="Debugger-UI">restart	"Proceed from the initial state of the currently selected context.	The argument is a controller on a view of the receiver.  That view	is closed."	service hasSuspendedOperations		ifTrue: [^Dialog warn: (#YouMustCompleteOperationBeforeContinuing &lt;&lt; #pdp &gt;&gt; 'You must complete the suspended debugger operationsbefore continuing process execution.')].	self performDebugOperation: #restart.</body><body package="Debugger-UI">return	self hasValidContext		ifFalse: [^self].	service isMethodContextSelected		ifTrue: [self returnFromMethodContext]		ifFalse: [self returnFromBlockContext].</body><body package="Debugger-UI">revert	self changeRequest		ifFalse: [^self].	(Dialog confirm: (#RevertToLastPublishedVersionQ &lt;&lt; #pdp &gt;&gt; 'Revert this method to the last published version?')) 				ifFalse: [^self].	^service revert</body><body package="Debugger-UI">selectHomeContext	self changeRequest		ifFalse:			[^self].	service selectHomeContext</body><body package="Debugger-UI">send	self hasChanged		ifTrue:			[^Dialog warn: (#CannotPerformOperationSrcChanged &lt;&lt; #pdp &gt;&gt; 'The operation cannot be performed because the source code has changed.')].	self performDebugOperation: #send.</body><body package="Debugger-UI">skipToCaret	self hasChanged		ifTrue:			[^Dialog warn: (#CannotPerformOperationSrcChanged &lt;&lt; #pdp &gt;&gt; 'The operation cannot be performed because the source code has changed.')].	self performDebugOperation: #skipToCaretAt: with: self selectionRange.</body><body package="Debugger-UI">step	self hasChanged		ifTrue:			[^Dialog warn: (#CannotPerformOperationSrcChanged &lt;&lt; #pdp &gt;&gt; 'The operation cannot be performed because the source code has changed.')].	self performDebugOperation: #step.</body><body package="Debugger-UI">stepIntoBlock	self hasChanged		ifTrue:			[^Dialog warn: (#CannotPerformOperationSrcChanged &lt;&lt; #pdp &gt;&gt; 'The operation cannot be performed because the source code has changed.')].	self performDebugOperation: #stepIntoBlock.</body><body package="Debugger-UI">toggleStackFiltering	enableStackFiltering		ifTrue: [self disableStackFiltering]		ifFalse: [self enableStackFiltering].	self refreshAll.</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient2</class-id> <category>initialize - release</category><body package="Debugger-UI">initialize	super initialize.	busy := true.	terminated := false.	document := String new asValue.	probes := #().	contextIndex := 0.	stackList := SelectionInList new.	stackList list: List new.	stackList selectionIndexHolder onChangeSend: #contextChanged to: self.	stackEmphases := Dictionary new.	ContextListPolicyEditor Patterns		do: [:ps | stackEmphases at: ps name put: ps color].	closeAction := #terminate</body><body package="Debugger-UI">windowClosed	service perform: closeAction.</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient2</class-id> <category>aspects</category><body package="Debugger-UI">contextInspector	^service contextInspector</body><body package="Debugger-UI">contextList	^service contextListForUI collect: 			[:a |			| emp txt str |			str := a at: 1.			txt := str asText.			(service isTagged: (a at: 1)) ifTrue: [txt := txt allBold].			emp := a at: 3.			emp notNil				ifTrue: [txt emphasizeAllWith: #color -&gt; (stackEmphases at: emp)].			txt]</body><body package="Debugger-UI">documentHolder	^document</body><body package="Debugger-UI">hhalt	DebuggerService.ClientClass := DebuggerClient.	self halt</body><body package="Debugger-UI">listScrolled	| sv |	sv := self stackView.	(sv scrollOffsetHolder value - sv visibleExtent + sv scrollableExtent) y &lt; 10		ifTrue: [self moreStack]</body><body package="Debugger-UI">receiverInspector	^service receiverInspector</body><body package="Debugger-UI">sourceCode	^service sourceCode</body><body package="Debugger-UI">stackInspector	^service stackInspector</body><body package="Debugger-UI">stackList	^stackList</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient2</class-id> <category>actions - find &amp; replace</category><body package="Debugger-UI">findNext	"Perform a findNext operation on the editor."	self documentWidget handleEvent: (CommandEvent commandID: #findNext)</body><body package="Debugger-UI">findPrevious	"Perform a findPrevious operation on the editor."	self documentWidget handleEvent: (CommandEvent commandID: #findPrevious)</body><body package="Debugger-UI">openFind	"Toggle the find tool for the editor."		self documentWidget handleEvent: (CommandEvent commandID: #find)</body><body package="Debugger-UI">openFindAndReplace	"Toggle the find and replace tool for the editor."	self documentWidget handleEvent: (CommandEvent commandID: #replace)</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient2</class-id> <category>actions-browsing</category><body package="Debugger-UI">browseAllImplementors	self browseAllImplementors: service selector</body><body package="Debugger-UI">browseAllImplementors: aSelector	| realSelector mc |	realSelector := aSelector == nil		ifTrue: [self chooseSelector: (#ViewImplementorsnofWhichSelector &lt;&lt; #pdp &gt;&gt; 'View implementors&lt;n&gt;of which selector?')]		ifFalse: [aSelector].	realSelector == nil ifTrue: [^self].	mc := self methodCollector.	^mc browseSelect: (mc implementorsOf: realSelector)</body><body package="Debugger-UI">browseAllReferences: aSelector	| realSelector mc |	realSelector := aSelector == nil		ifTrue: [self chooseSelector: (#ViewSendersnofWhichSelector &lt;&lt; #pdp &gt;&gt; 'View senders&lt;n&gt;of which selector?')]		ifFalse: [aSelector].	realSelector == nil ifTrue: [^self].	mc := self methodCollector.	^mc browseSelect: (mc referencesTo: realSelector)</body><body package="Debugger-UI">browseAllSenders	self browseAllReferences: service selector.</body><body package="Debugger-UI">browseClass	service browseClass</body><body package="Debugger-UI">browseLocalImplementors	self browseLocalImplementors: service selector</body><body package="Debugger-UI">browseLocalImplementors: aSelector	| realSelector mc |	realSelector := aSelector == nil		ifTrue: [self chooseSelector: (#ViewLocalImplementorsOfWhichQ &lt;&lt; #pdp &gt;&gt; 'View local implementors&lt;n&gt;of which selector?')]		ifFalse: [aSelector].	realSelector == nil ifTrue: [^self].	mc := self methodCollector.	^mc browseSelect:			(mc searchClassHierarchy: service selectedClass)			&amp; (mc implementorsOf: realSelector)</body><body package="Debugger-UI">browseLocalReferences: aSelector	| realSelector mc |	realSelector := aSelector == nil		ifTrue: [self chooseSelector: (#ViewLocalSendersnofWhichSelector &lt;&lt; #pdp &gt;&gt; 'View local senders&lt;n&gt;of which selector?')]		ifFalse: [aSelector].	realSelector == nil ifTrue: [^self].	mc := self methodCollector.	^mc browseSelect:			(mc searchClassHierarchy: service selectedClass)			&amp; (mc referencesTo: realSelector)</body><body package="Debugger-UI">browseLocalSenders	self browseLocalReferences: service selector</body><body package="Debugger-UI">browseMethod	service browseMethod</body><body package="Debugger-UI">browseVersions	#{Store.DbRegistry} ifDefinedDo: 			[:dbRegistry |			dbRegistry doIfOnlineImage: 					[| list |					list := #{Store.Glorp.StoreMethodInPackage} value								allVersionsWithName: service selector								inClass: service selectedClass absoluteName.					#{Store.Glorp.DefinitionForListTool} value forMethods: list]]</body><body package="Debugger-UI">chooseSelector: label	| msgs |	msgs := service selectedMethod allSymbolLiterals asSortedCollection.	^Dialog choose: label expandMacros			fromList: msgs			values: msgs			lines: 20			cancel: []			for: self interfaceWindow</body><body package="Debugger-UI">chooseSelector: label from: def	| msgs |	msgs := def method allSymbolLiterals asSortedCollection.	^Dialog choose: label expandMacros			fromList: msgs			values: msgs			lines: 20			cancel: []			for: self interfaceWindow</body><body package="Debugger-UI">containingPackage	| pkgs |	pkgs := Store.Registry allContainingPackagesForSelector: service selector class: service selectedClass.	self showPackageList: pkgs loaded:true.</body><body package="Debugger-UI">querySubmenuSending: aSymbol	| selectors displayedSelectors submenu item methodSelector |	self hasValidContext		ifFalse: [^nil].	selectors := service context method homeMethod allSymbolLiterals.	methodSelector := service selector.	selectors remove: methodSelector ifAbsent: [].	submenu := Menu new.	methodSelector notNil ifTrue:		[item := MenuItem labeled: (methodSelector contractTo: MaxMenuEntryWidth).		item value: [self perform: aSymbol with: methodSelector].		submenu 			addItem: item;			addLine].	selectors isEmpty		ifTrue: [^submenu].	selectors := selectors asSortedCollection.	displayedSelectors := selectors		copyFrom: 1 		to: (selectors size min: MaxSelectorSubMenuEntries).	displayedSelectors do: 		[:each | 		item := MenuItem labeled: (each contractTo: MaxMenuEntryWidth).		item value: [self perform: aSymbol with: each].		submenu addItem: item].	displayedSelectors size ~= selectors size ifTrue:		[submenu addLine.		item := MenuItem labeled: (#MoreSelectorsDots &lt;&lt; #pdp &gt;&gt; 'More selectors...').		item value: [self perform: aSymbol with: nil].		submenu addItem: item].	^submenu</body><body package="Debugger-UI">showPackageList: packages loaded: aBoolean	"Show a message box with packages - separating overrides if appropiate."	| str |	packages isEmpty		ifTrue: [ ^Dialog warn: (#NotYetAssignedToAPackage &lt;&lt; #pdp &gt;&gt; 'Not yet assigned to a package') ].	str := ( String new: 50 ) writeStream.	str nextPutAll: packages first itemString; cr.	packages size &gt; 1		ifTrue: 			[ aBoolean				ifTrue: [ str nextPutAll: ( String new: packages first itemString size withAll: $_ ) ; cr ].				2 to: packages size do:					[ :index | | pkg |					pkg := packages at: index.										str nextPutAll: pkg itemString; cr					].			].	Dialog warn: str contents.</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient2</class-id> <category>private</category><body package="Debugger-UI">buttonEnablement	| container edc priority notTerminated canIssueContextCommand |	builder == nil ifTrue: [^self].	container := self isToolbarBelowContexts				ifTrue: [(builder componentAt: #toolbarHolder) widget]				ifFalse: [builder componentAt: #toolbarMenu].	edc := self enableDebugCommand.	notTerminated := self isTerminated not.	canIssueContextCommand := self canIssueContextCommand.	(container componentAt: #step)		ifNotNil: [:c | c isEnabled: canIssueContextCommand].	(container componentAt: #send)		ifNotNil: [:c | c isEnabled: canIssueContextCommand &amp; (contextIndex = 1)].	(container componentAt: #stepIntoBlock)		ifNotNil: [:c | c isEnabled: canIssueContextCommand &amp; (contextIndex = 1)].	(container componentAt: #skip)		ifNotNil: [:c | c isEnabled: canIssueContextCommand].	(container componentAt: #return)		ifNotNil: [:c | c isEnabled: canIssueContextCommand].	(container componentAt: #reenter)		ifNotNil: [:c | c isEnabled: canIssueContextCommand].	(container componentAt: #jumpToCaret)		ifNotNil: [:c | c isEnabled: canIssueContextCommand].	(container componentAt: #firstLoop)		ifNotNil: [:c | c isEnabled: canIssueContextCommand].	(container componentAt: #nextLoop)		ifNotNil: 			[:c |			c isEnabled: (canIssueContextCommand and: [service hasLoopControlContext])].	(container componentAt: #selectHome)		ifNotNil: 			[:c |			c isEnabled: (canIssueContextCommand						and: [service isMethodContextSelected not])].	(container componentAt: #continue)		ifNotNil: [:c | c isEnabled: notTerminated &amp; busy not].	(builder componentAt: #stackList) ifNotNil: [:c | c isEnabled: busy not].	(container componentAt: #inspectContext) ifNotNil: [:c | c isEnabled: edc].	(container componentAt: #pause) ifNotNil: [:c | c isEnabled: busy].	"Disabled disabling the editor because every debugger operation will cause the editor to disable then re-enable. Enablement is a full widget redraw, so we're better off letting an invalid editor exist temporarily than flashing their workspace in front of their eyes all the time."	"self documentWidget isEnabled: edc."	priority := self notBusy				ifTrue: [Processor userSchedulingPriority]				ifFalse: [Processor lowIOPriority - 1].	builder window windowProcess priority: priority</body><body package="Debugger-UI">canContextChange: aController	^self changeRequest</body><body package="Debugger-UI">changeRequest	| choice |	builder isNil ifTrue: [^true].	self hasChanged ifFalse: [^true].	choice := Dialog 		choose: ((#AcceptUnsavedTextChanges &lt;&lt; #dialogs &gt;&gt; 'Accept unsaved text changes?') expandMacros)		labels: (Array			with: #Yes &lt;&lt; #labels &gt;&gt; 'Yes'			with: #No &lt;&lt; #labels &gt;&gt; 'No'			with: #Cancel &lt;&lt; #labels &gt;&gt; 'Cancel')		values: #(#yes #no #cancel)		default: #yes.	choice = #cancel ifTrue: [^false].	choice = #yes ifTrue: [^self acceptDocumentAlways].	self cancelDocument.	^true</body><body package="Debugger-UI">confirm: messageString orAlternate: anAlternateChoice	"Offer the user a third choice, returning nil if they accept it. Default to the alternate choice. Place the alternate choice in the middle."		^Dialog		choose: messageString		labels:			(Array				with: Dialog confirmButtonLabels first				with: anAlternateChoice				with: Dialog confirmButtonLabels last)		values:			(Array				with: Dialog confirmAnswerResults first				with: nil				with: Dialog confirmAnswerResults last)		default: nil</body><body package="Debugger-UI">disableStackFiltering	enableStackFiltering := false.	service		stackFilterPatterns: #()		convertSelector: ContextListPolicyEditor ConversionSelector		matchSelector: ContextListPolicyEditor MatchSelector		displayAllLimit: ContextListPolicyEditor DisplayAllLimit.</body><body package="Debugger-UI">documentWidget	^(builder componentAt: #document) widget</body><body package="Debugger-UI">enableStackFiltering	| pats |	enableStackFiltering := true.	stackEmphases := Dictionary new.	pats := ContextListPolicyEditor Patterns collect:		[:p |		stackEmphases at: p name put: p color.		(ServerContextPatternSpec new) pattern: p pattern; name: p name; yourself].	service		stackFilterPatterns: pats		convertSelector: ContextListPolicyEditor ConversionSelector		matchSelector: ContextListPolicyEditor MatchSelector		displayAllLimit: ContextListPolicyEditor DisplayAllLimit.</body><body package="Debugger-UI">handleError: aBlock	"Errors:  the refactoring is aborted, the user is warned.  If an Error has a parameter, it is a block that is evaluated if the user confirms.	Warnings:  the user's response to a confirm popUp decides if the refactoring proceeds or aborts.  If a warning has a parameter, we use a true/false/nil 3-valued-logic confirmer.  The parameter is an Association whose key is the text of a third button in the confirmer and whose value is the block evaluated if that third button is pressed;  the result of evaluating the block then gives the response (we check == true so 'abort and do something else' blocks that do not return booleans can be reused from e.g. those of error parameters).  While some blocks will be trivial in time, others can be less so - we therefore show the wait cursor while running them."		^[self showWaitCursorWhile: aBlock]		on: Refactory.Browser.Refactoring preconditionSignal		do:			[:ex | 			ex isResumable				ifTrue:					[| messageText response |					messageText := ex description last == $?						ifTrue: [ex description]						ifFalse:							[#x1sNProceedQ &lt;&lt; #browser &gt;&gt; '&lt;1s&gt;&lt;n&gt;Do you want to proceed?'								expandMacrosWith: ex description].					response := ex parameter						ifNil: [Dialog confirm: messageText]						ifNotNil:							[self								confirm: messageText								orAlternate: ex parameter key].					response						ifNil:							[response := self showWaitCursorWhile: [ex parameter value value]].					response == true ifTrue: [ex resume]]				ifFalse:					[ex parameter						ifNil: [Dialog warn: ex description]						ifNotNil:							[(Dialog confirm: ex description) ifTrue: [ex parameter value]]].			ex return: nil]</body><body package="Debugger-UI">interfaceWindow	^builder window</body><body package="Debugger-UI">methodCollector	^MethodCollector new browser: self</body><body package="Debugger-UI">navigateToClass: aBinding	RefactoringBrowser open navigator		setBinding: aBinding;		changed</body><body package="Debugger-UI">navigateToInstanceVariable: anInstanceVariable	| state |	(state := NavigatorState new)		selectedClass: self doItReceiverClass;		instanceVariables: (Array with: anInstanceVariable).	(RefactoringBrowser open navigator)		setState: state;		changed</body><body package="Debugger-UI">performDebugOperation: actionSym	busy := true.	self buttonEnablement.	service perform: actionSym</body><body package="Debugger-UI">performDebugOperation: actionSym with: anObject	^self performDebugOperation: actionSym withArgs: (Array with: anObject)</body><body package="Debugger-UI">performDebugOperation: actionSym withArgs: anArray	busy := true.	self buttonEnablement.	service perform: actionSym withArguments: anArray.</body><body package="Debugger-UI">performRefactoring: aRefactoring	| selector |	aRefactoring isNil ifTrue: [^self].	selector := service selector.	service updateWhile: [		self handleError: [			aRefactoring primitiveExecute.			aRefactoring promptOnRefactoring				ifTrue: [Refactory.Browser.CompositeRefactoryChangeInspector openDialogOn: aRefactoring changes asCompositeChange]				ifFalse: [Refactory.Browser.RefactoryChangeManager instance performChange: aRefactoring changes].			selector]]</body><body package="Debugger-UI">requestComplete	busy := false.	self isTerminated.	self buttonEnablement.</body><body package="Debugger-UI">selectionRange	"The selectionRange is meant to reflect a position in the compiled code, not the editing code. As such, remove from the indexes any breakpoints that might exist."	| transformedRange |	transformedRange := self documentWidget translateSourceToCompiledInterval: self documentWidget selectionInterval.	^transformedRange first + 1 to: transformedRange last</body><body package="Debugger-UI">showWaitCursorWhile: aBlock	"The intent here is to wait a certain amount of time and if aBlock is _still_ proceeding, only then show the wait cursor."	"The original version used a terminate on the cursorInterrupt process, we now just use a simple latched flag which should lead to less race condition opportunities. The wait time is increased from 0.1s to 0.2s to be a little more consistent with where the current spate of guidelines seem to converge. As a good measure, if anyone decides to start pounding away creating lots of processes, we do an early out check by dividing the total wait time into 3 increments of increasing size."	| originalCursor done |	(originalCursor := Cursor currentCursor) == Cursor wait		ifTrue: [^aBlock value].	"wait a total of 0.2 s, with intermediate checks"	done := false.	[(#(0.01 0.05 0.14)		anySatisfy:			[:each | 			(Delay forSeconds: each) wait.			done]) ifFalse: [Cursor wait show]]		forkAt: Processor activePriorityPlusOne.	^aBlock		ensure:			[done := true.			originalCursor show]</body><body package="Debugger-UI">stackView	^(builder componentAt: #stackList) widget</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient2</class-id> <category>private-return</category><body package="Debugger-UI">hookupMethodReturnFor: dialog	| aBuilder result accept pa |	aBuilder := dialog builder.	accept := dialog accept.	result := ValueHolder with: nil.	pa := PluggableAdaptor on: result.	pa 		getBlock: [:m | m]		putBlock: [:m :v | ]		updateBlock: [:m :a :p | a == #value ifTrue: [accept value: true]. true].	result addDependent: pa.	aBuilder		aspectAt: #returnSelf		put: [result value: #returnSelf:].	aBuilder		aspectAt: #returnTrue		put: [result value: #returnTrue:].	aBuilder		aspectAt: #returnFalse		put: [result value: #returnFalse:].	aBuilder		aspectAt: #returnNil		put: [result value: #returnNil:].	aBuilder		aspectAt: #returnTOS		put: [result value: #returnTOS:].	aBuilder		aspectAt: #returnLastDoIt		put: [result value: #returnLastDoIt:].	aBuilder		aspectAt: #returnNewExpr		put: [result value: #returnNewExpr:].	accept onChangeSend: #close to: dialog.	dialog cancel onChangeSend: #close to: dialog.	^result</body><body package="Debugger-UI">returnFalse: rtnMsg	self performDebugOperation: #returnNewExpr:with: withArgs: (Array with: rtnMsg with: false)</body><body package="Debugger-UI">returnFromBlockContext	| windoe dialog aBuilder result returnType |	windoe := builder window.	dialog := SimpleDialog new.	dialog initializeBuilderFor: windoe.	aBuilder := dialog builder.	aBuilder source: self.	result := self hookupMethodReturnFor: dialog.	returnType := ValueHolder with: #return:.	aBuilder		aspectAt: #returnType		put: returnType.	aBuilder add: (UISpecification from: self class blockReturnSpec).	dialog initializeWindowFor: windoe.	service doesContextHaveInterimValues		ifFalse: [(aBuilder componentAt: #returnTOS) disable].	service contextHasHome		ifFalse:			[(aBuilder componentAt: #methodReturn) disable.			(aBuilder componentAt: #blockReturn) disable].	dialog preOpen.	aBuilder openDialogWithExtent: aBuilder window displayBox extent.	result value isNil		ifTrue: [^nil].	self perform: result value with: returnType value.</body><body package="Debugger-UI">returnFromMethodContext	| windoe dialog aBuilder result |	windoe := builder window.	dialog := SimpleDialog new.	dialog initializeBuilderFor: windoe.	aBuilder := dialog builder.	aBuilder source: self.	result := self hookupMethodReturnFor: dialog.	aBuilder add: (UISpecification from: self class methodReturnSpec).	dialog initializeWindowFor: windoe.	service doesContextHaveInterimValues		ifFalse: [(aBuilder componentAt: #returnTOS) disable].	dialog preOpen.	aBuilder openDialogWithExtent: aBuilder window displayBox extent.	result value isNil		ifTrue: [^nil].	self perform: result value with: #return:.</body><body package="Debugger-UI">returnLastDoIt: rtnMsg	self performDebugOperation: #returnLastDoIt: with: rtnMsg.</body><body package="Debugger-UI">returnNewExpr: rtnMsg	| string retry result |	[string := Dialog				request: (#EnterExpressionC &lt;&lt; #pdp &gt;&gt; 'Enter expression:')				initialAnswer: 'nil'.	string isEmpty		ifTrue: [^self].	result := service evaluateExpressionInReceiver: string.	result key		ifTrue: [retry := false]		ifFalse:			[retry := Dialog						confirm: (#ExprInvalidRetryQ &lt;&lt; #pdp &gt;&gt; 'The expression is invalid. Retry?')						initialAnswer: true.			retry				ifFalse: [^self]].	retry] whileTrue.	self performDebugOperation: #returnNewExpr:with: withArgs: (Array with: rtnMsg with: result value).</body><body package="Debugger-UI">returnNil: rtnMsg	self performDebugOperation: #returnNewExpr:with: withArgs: (Array with: rtnMsg with: nil)</body><body package="Debugger-UI">returnSelf: rtnMsg	self performDebugOperation: #returnSelf: with: rtnMsg.</body><body package="Debugger-UI">returnTOS: rtnMsg	self performDebugOperation: #returnTOS: with: rtnMsg.</body><body package="Debugger-UI">returnTrue: rtnMsg	self performDebugOperation: #returnNewExpr:with: withArgs: (Array with: rtnMsg with: true)</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient2</class-id> <category>updating</category><body package="Debugger-UI">changeWindowLabelTo: aString	^self changed: #windowLabel with: aString</body><body package="Debugger-UI">contextChanged	contextIndex := stackList selectionIndex.	service selectContextAt: contextIndex.	self buttonEnablement.</body><body package="Debugger-UI">highlightDocumentRange	| range editor transformedRange highlight |	builder isNil ifTrue: [^self].	range := service pcRange.	editor := self documentWidget.	editor isOpen ifFalse: [^self].	transformedRange := editor translateCompiledToSourceInterval: (range value first - 1 to: range value last).	highlight := DocumentHighlight		color: (transformedRange first = transformedRange last			ifTrue: [editor highlightColor asShadowColor]			ifFalse: [editor highlightColor])		between: transformedRange first		and: transformedRange last		direction: #rightToLeft.	editor highlights: (Array with: highlight).	editor selectBetween: transformedRange first and: transformedRange first</body><body package="Debugger-UI">highlightRange: range	| editor transformedRange highlight |	builder isNil ifTrue: [^self].	editor := self documentWidget.	editor isOpen ifFalse: [^self].	transformedRange := editor translateCompiledToSourceInterval: (range value first - 1 to: range value last).	highlight := DocumentHighlight		color: (transformedRange first = transformedRange last			ifTrue: [editor highlightColor asShadowColor]			ifFalse: [editor highlightColor])		between: transformedRange first		and: transformedRange last		direction: #rightToLeft.	editor highlights: (Array with: highlight).	editor selectBetween: transformedRange first and: transformedRange first</body><body package="Debugger-UI">probesUpdated: aCompiledMethod	"A probe has been added, removed or its mode changed. If the source code hasn't been modified in any other way and the actual change was to the mode of an existing breakpoint, update the probe in the compiled method without touching the stack."	| existingMethod newProbes |	self hasSourceCodeChanged ifTrue: [^self].	self hasProbesChanged ifFalse: [^self].	self highlightRange: service pcRange.	(existingMethod := service selectedMethod) ifNil: [^self].	newProbes := self documentWidget markupDocumentSegments.		probes size = newProbes size ifFalse: [^service probesUpdated: aCompiledMethod].	probes with: newProbes do: [:a :b | a last = b last ifFalse: [^service probesUpdated: aCompiledMethod]].	probes := newProbes copy.	existingMethod allProbesDo: [:aProbe | aProbe quietlyCycleMode: newProbes removeFirst first mode].	PDPManager changedMethodFrom: existingMethod to: existingMethod by: service</body><body package="Debugger-UI">redisplayText	| sourceCodeDocument |	sourceCodeDocument := self sourceCode asDocument.	self documentHolder setValue: sourceCodeDocument.	builder isNil ifTrue: [^self].	self documentWidget highlights: #().	service selectedMethod		ifNil: [self documentWidget document: sourceCodeDocument copy]		ifNotNil: [:compiledMethod | self documentWidget compiledMethod: compiledMethod].	probes := self documentWidget markupDocumentSegments</body><body package="Debugger-UI">refreshAll	self changed: #windowLabel with: service label.	self updateContextList: service indexOfCurrentContext.	self redisplayText.	self highlightRange: service pcRange.	self buttonEnablement.</body><body package="Debugger-UI">refreshContextList	self updateContextList: service indexOfCurrentContext.</body><body package="Debugger-UI">showMessage: anObject	Dialog warn: anObject</body><body package="Debugger-UI">update: aSymbol with: anObject	aSymbol = #pcRange		ifTrue: [^builder window send: #highlightDocumentRange to: self].	aSymbol = #showMessage		ifTrue: [^builder window send: #showMessage: to: self with: (Array with: anObject)].	aSymbol = #contextList		ifTrue: [^builder window send: #updateContextList: to: self with: (Array with: anObject)].	aSymbol = #contextSelection		ifTrue: [^builder window send: #updateContextSelection: to: self with: (Array with: anObject)].	aSymbol = #text		ifTrue: [^builder window send: #redisplayText to: self].	aSymbol = #requestComplete		ifTrue: [^builder window send: #requestComplete to: self].	aSymbol = #windowLabel		ifTrue: [^builder window send: #changeWindowLabelTo: to: self with: (Array with: anObject)].	aSymbol = #closeDebugger		ifTrue: [^builder window send: #closeRequest to: self].	aSymbol = #debuggerSelectedTopContext		ifTrue: [^builder window send: #debuggerSelectedTopContext to: self].	aSymbol = #evaluationResult		ifTrue: [^builder window send: (anObject at: 1) to: self with: (Array with: (anObject at: 2) with: (anObject at: 3))]</body><body package="Debugger-UI">updateContextList: contextIdx	| scrollPosition nLines sv |	nLines := stackList list size.	sv := self stackView.	scrollPosition := sv scrollOffsetHolder value.	sv scrollOffsetHolder retractInterestIn: #value for: self.	stackList selectionIndexHolder retractInterestsFor: self.	stackList list: self contextList.	contextIndex := contextIdx.	stackList selectionIndex: contextIndex.	stackList list size &gt;= nLines		ifTrue: [sv scrollTo: scrollPosition].	service isFullStack		ifFalse:			[sv scrollOffsetHolder				expressInterestIn: #value				for: self				sendBack: #listScrolled].	stackList selectionIndexHolder onChangeSend: #contextChanged to: self</body><body package="Debugger-UI">updateContextSelection: contextIdx	stackList selectionIndexHolder retractInterestsFor: self.	contextIndex := contextIdx.	stackList selectionIndex: contextIndex.	stackList selectionIndexHolder onChangeSend: #contextChanged to: self</body><body package="Debugger-UI">updateRequest	^self changeRequest</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient2</class-id> <category>menus</category><body package="Debugger-UI">addBookmarkItemsTo: aMenu	| serviceTags |	serviceTags := service tagMenuList.	serviceTags isEmpty ifFalse: [aMenu addLine].	serviceTags keysAndValuesDo:		[:index :each | | item |		item := index &lt; 10			ifTrue: [MenuItem labeled: ('&amp;&lt;1p&gt;. &lt;2s&gt;' 						expandMacrosWith: index 						with: each)]			ifFalse: [MenuItem labeled: each].		item value: [service selectTag: each].		aMenu addItem: item]</body><body package="Debugger-UI">bookmarkMenu	| menu |	menu := self class bookmarkMenu.	self addBookmarkItemsTo: menu.	(menu atNameKey: #addTag) enabled: self canAddTag.	(menu atNameKey: #removeTag) enabled: self canRemoveTag.	^menu</body><body package="Debugger-UI">contextMenu	| mainMenu |	mainMenu := self class contextMenu.	self setQuerySubmenuBlocksIn: mainMenu.	self setVisibilityForStoreCommandsIn: mainMenu.	(mainMenu atNameKey: #bookmarkMenu) submenu: [self bookmarkMenu].	^mainMenu</body><body package="Debugger-UI">documentMenu	^self documentWidget contextMenu</body><body package="Debugger-UI">documentMenuWithAcceptAndRevert	"Take the standard documentMenu but prepend custom Accept and Revert actions for the context menu only."	^[		| contextMenu |		contextMenu := UI.Menu new.		contextMenu addItemGroup: (Array			with: ((MenuItem forCommand: #accept) value: [self acceptDocument]; yourself)			with: ((MenuItem forCommand: #cancelText) value: [self cancelDocument]; yourself)).		contextMenu addPart: self documentMenu.		contextMenu	]</body><body package="Debugger-UI">editMenu	| menu contextMenu |	menu := self class mainMenu.	^[		contextMenu := self documentMenu value copy.		contextMenu augmentFrom: self class to: DebuggerClient2 menuName: #editMenu for: self.		contextMenu menuItems do: [:each |			each actionPerformer: [self documentWidget].			each value: [self documentWidget handleEvent: (CommandEvent menuItem: each)]].		(contextMenu menuItemForCommandID: #selectAll) ifNotNil: [:menuItem | menuItem visible: [true]].		menu copy			addPart: contextMenu;			yourself]</body><body package="Debugger-UI">executeMenu	^self class executeMenu</body><body package="Debugger-UI">setQuerySubmenuBlocksIn: aMenu	(aMenu atNameKey: #allSenders) submenu: [self querySubmenuSending: #browseAllReferences:].	(aMenu atNameKey: #allImplementors) submenu: [self querySubmenuSending: #browseAllImplementors:].	(aMenu atNameKey: #localSenders) submenu: [self querySubmenuSending: #browseLocalReferences:].	(aMenu atNameKey: #localImplementors) submenu: [self querySubmenuSending: #browseLocalImplementors:].</body><body package="Debugger-UI">setVisibilityForStoreCommandsIn: aMenu	| storeLoaded mi |	storeLoaded := service isStoreLoaded.	(mi := aMenu atNameKey: #revert) notNil		ifTrue: [mi visibility: storeLoaded].	(aMenu atNameKey: #browseVersions) 		ifNotNil: [:item | item visibility: storeLoaded].</body><body package="Debugger-UI">setupMenuBarMenu: aMenu	(aMenu atNameKey: #stackMenu) submenu: [self stackMenu].	(aMenu atNameKey: #editMenu) submenu: self editMenu.	(aMenu atNameKey: #executeMenu) submenu: [self executeMenu].	self setQuerySubmenuBlocksIn: aMenu.	self setVisibilityForStoreCommandsIn: aMenu.</body><body package="Debugger-UI">stackMenu	| menu |	menu := self class stackMenu.	self addBookmarkItemsTo: menu.	(menu atNameKey: #filterStack) indication: self stackFilteringEnabled.	(menu atNameKey: #newTag) enablement: self canIssueContextCommand.	(menu atNameKey: #removeTag) enablement: self canIssueContextCommand.	^menu</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient2</class-id> <category>accessing</category><body package="Debugger-UI">abortDebugging	self pauseDebugOperation.</body><body package="Debugger-UI">ctrlyAbort	"ignore, done by service"</body><body package="Debugger-UI">isBusy	^busy</body><body package="Debugger-UI">service: aDebuggerService	service := aDebuggerService.	service addDependent: self</body><body package="Debugger-UI">stackFilteringEnabled	^enableStackFiltering</body><body package="Debugger-UI">toolbarView	| lookPolicy |	lookPolicy := LookPreferences widgetPolicy lookPolicyClass new.	^lookPolicy toolBarClass menu: self class toolbarMenu performer: self</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient2</class-id> <category>testing</category><body package="Debugger-UI">canAddTag	^self canIssueContextCommand and: [service isCurrentContextTagged not]</body><body package="Debugger-UI">canCorrectSpelling	^self canIssueContextCommand and: [service canCorrectSpelling]</body><body package="Debugger-UI">canDefineMethod	^self canIssueContextCommand and: [service canDefineMethod]</body><body package="Debugger-UI">canDoNextLoop	^self canIssueContextCommand and: [service hasLoopControlContext]</body><body package="Debugger-UI">canIssueContextCommand	^self hasValidContext and: [self notBusy and: [self isTerminated not]]</body><body package="Debugger-UI">canRedo	^self documentWidget canRedo</body><body package="Debugger-UI">canRemoveTag	^self canIssueContextCommand and: [service isCurrentContextTagged]</body><body package="Debugger-UI">canRun	^self notBusy and: [self isTerminated not]</body><body package="Debugger-UI">canSelectHome	^self canIssueContextCommand and: [service isMethodContextSelected not]</body><body package="Debugger-UI">canShowMore	^self isTerminated not</body><body package="Debugger-UI">canUndo	^self documentWidget canUndo</body><body package="Debugger-UI">enableDebugCommand	^self hasValidContext &amp; self notBusy</body><body package="Debugger-UI">enableSendCommand	^(contextIndex = 1) and: [self canIssueContextCommand]</body><body package="Debugger-UI">hasChanged	^self hasSourceCodeChanged or: [self hasProbesChanged]</body><body package="Debugger-UI">hasProbesChanged	^probes ~= self documentWidget markupDocumentSegments</body><body package="Debugger-UI">hasSourceCodeChanged	^self documentHolder value asString ~= self documentWidget documentWithoutMarkup asString</body><body package="Debugger-UI">hasValidContext	^contextIndex &gt; 0</body><body package="Debugger-UI">isDebugger	^true</body><body package="Debugger-UI">isFindOpen	^self documentWidget		ifNil: [false]		ifNotNil: [:editor | editor search isOpen]</body><body package="Debugger-UI">isTerminated	terminated		ifFalse:			[terminated := service isTerminated.			terminated				ifTrue: [self changed: #windowLabel with: service label]].	^terminated</body><body package="Debugger-UI">isToolbarBelowContexts	^(builder componentAt: #toolbarHolder) notNil</body><body package="Debugger-UI">notBusy	^busy not</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient2</class-id> <category>refactorings</category><body package="Debugger-UI">abstractInstanceVariable: aVariableName	self performRefactoring: (AbstractInstanceVariableRefactoring variable: aVariableName				class: (service selectedClass whichClassDefinesInstVar: aVariableName))</body><body package="Debugger-UI">addInstanceVariable	| newName |	newName := Dialog request: (#EnterAnInstanceVariableNameC &lt;&lt; #browser &gt;&gt; 'Enter an instance variable name:').	(newName isNil or: [newName isEmpty]) ifTrue: [^self].	self addInstanceVariable: newName</body><body package="Debugger-UI">addInstanceVariable: aVariableName	self performRefactoring: (AddInstanceVariableRefactoring variable: aVariableName class:self selectedClass)</body><body package="Debugger-UI">createInstanceVariableAccessors: aVariableName	self performRefactoring: (CreateAccessorsForVariableRefactoring 				variable: aVariableName				class: (self selectedClass whichClassDefinesInstVar: aVariableName))</body><body package="Debugger-UI">inlineParameter: aVariableName selector: aSelector	service updateWhile: [		self handleError: [			| ref |			ref := InlineParameterRefactoring 				inlineParameter: aVariableName				in: self doItReceiverClass				selector: aSelector.			ref execute.			ref newSelector]]</body><body package="Debugger-UI">protectInstanceVariable: aVariableName	self 		performRefactoring: (ProtectInstanceVariableRefactoring variable: aVariableName				class: (self selectedClass whichClassDefinesInstVar: aVariableName))</body><body package="Debugger-UI">pushDownInstanceVariable: aVariableName	self performRefactoring: (PushDownInstanceVariableRefactoring variable: aVariableName class: self selectedClass)</body><body package="Debugger-UI">pushUpInstanceVariable: aVariableName	self performRefactoring: (PullUpInstanceVariableRefactoring		variable: aVariableName		class: (self selectedClass whichClassDefinesInstVar: aVariableName) superclass)</body><body package="Debugger-UI">removeParameter: aVariableName selector: aSelector	service updateWhile: [		self handleError: [			| ref |			ref := RemoveParameterRefactoring 				removeParameter: aVariableName				in: self doItReceiverClass				selector: aSelector.			ref execute.			ref newSelector]]</body><body package="Debugger-UI">renameInstanceVariable: aVariableName	| newName |	newName := Dialog request: (#EnterAnInstanceVariableNameC &lt;&lt; #browser &gt;&gt; 'Enter an instance variable name:') initialAnswer: aVariableName.	(newName isNil or: [newName isEmpty or: [newName = aVariableName]]) ifTrue: [^self].	self performRefactoring: (RenameInstanceVariableRefactoring 		rename: aVariableName		to: newName		in: (self selectedClass whichClassDefinesInstVar: aVariableName))</body><body package="Debugger-UI">selectedClass	^service selectedClass</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient2</class-id> <category>doIt/accept/explain</category><body package="Debugger-UI">doItContext	"Answer the context in which a text selection can be evaluated."	^service doItContext</body><body package="Debugger-UI">doItEnvironment	"Answer the object that should be informed of the result of evaluating a	text selection."	^service doItEnvironment</body><body package="Debugger-UI">doItExpectPattern	"Answer if the source code is expected to have a selector pattern, ie: is a method and not a script."	^service doItExpectPattern</body><body package="Debugger-UI">doItReceiver	"Answer the object that should be informed of the result of evaluating a	text selection."	^service doItReceiver</body><body package="Debugger-UI">doItReceiverClass	"Answer the object that should be informed of the result of evaluating a	text selection."	^service doItReceiverClass</body><body package="Debugger-UI">doItValue: anObject 	"Set the value to be returned when the interrupted process proceeds."	^service doItValue: anObject</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient2</class-id> <category>interface opening</category><body package="Debugger-UI">debuggerSelectedTopContext	service selectContextAt: 1.	self refreshAll.</body><body package="Debugger-UI">postBuildWith: aBuilder	self enableStackFiltering.	self documentWidget		evaluator: self;		margin: Rectangle zero;		isWorkspace: false;		menuHolder: self documentMenuWithAcceptAndRevert;		removeActionsWithReceiver: self forEvent: #probesUpdated;		when: #probesUpdated send: #probesUpdated: to: self.	self setupMenuBarMenu: (aBuilder menuAt: #menuBarMenu).	self stackView scrollOffsetHolder		expressInterestIn: #value		for: self		sendBack: #listScrolled.</body><body package="Debugger-UI">postOpenWith: aBuilder 	| windowProcess |	windowProcess := aBuilder window windowProcess.	windowProcess debugger: service.	windowProcess environmentAt: #WindowManagerUsagePolicy put: MakeNewWindowManagerUsagePolicy new.	aBuilder window when: #closed send: #windowClosed to: self.	service prepareTopContext.	"We are trusting that the preceding line will result in a #requestComplete	being sent back to this DebuggerClient at some point in the near future	(after bouncing between several processes). If this does not happen,	then the 'busy' instance variable, initialized to true, will not be set to false."</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient2</class-id> <category>actions - undo/redo</category><body package="Debugger-UI">redoDocumentEdit	"Perform an redo operation on the editor."		self documentWidget handleEvent: (CommandEvent commandID: #redo)</body><body package="Debugger-UI">undoDocumentEdit	"Perform an undo operation on the editor."		self documentWidget handleEvent: (CommandEvent commandID: #undo)</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient2</class-id> <category>tags</category><body package="Debugger-UI">addTag	service addTag.	self refreshContextList</body><body package="Debugger-UI">removeTag	service removeTag.	self refreshContextList</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient2</class-id> <category>interface closing</category><body package="Debugger-UI">noticeOfWindowClose: aWindow		EventQueue allInstancesDo: [:each | each restoreReadSynchSignals].	service removeAllDependents.</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient2 class</class-id> <category>resources</category><body package="Debugger-UI">executeMenu	menuHolder isNil ifTrue: [self initializeMenu].	^menuHolder value decodeAsLiteralArray</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient2 class</class-id> <category>instance creation</category><body package="Debugger-UI">openFullViewOn: aDebuggerService label: aString	[| win |	win := (self service: aDebuggerService) open window.	win label: aString.	win windowProcess name: aString.]		on: GetWindowManagerUsagePolicy		do: [:ex | ex resume: MakeNewWindowManagerUsagePolicy new]	"Smalltalk Professional Debug Package Version 3.1 (c) 2002 Crafted Smalltalk"</body><body package="Debugger-UI">openFullViewOn: aDebuggerService label: aString clientInto: aBlock	[| client win |	client := self service: aDebuggerService.	aBlock value: client.	win := client open window.	win label: aString.	win windowProcess name: aString.]		on: GetWindowManagerUsagePolicy		do: [:ex | ex resume: MakeNewWindowManagerUsagePolicy new]</body><body package="Debugger-UI">service: aDebuggerService	^self new service: aDebuggerService	"Smalltalk Professional Debug Package Version 3.0 (c) 2001 Crafted Smalltalk"</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient2 class</class-id> <category>interface specs</category><body package="Debugger-UI">windowSpec	^PlaceToolbarBelowContexts		ifTrue: [self toolbarInTheMiddleWindowSpec]		ifFalse: [self toolbarOnTopWindowSpec]</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient2 class</class-id> <category>class initialization</category><body package="Debugger-UI">initialize	"self initialize"	#{PlaceToolbarBelowContexts} initialize.	#{MaxMenuEntryWidth} initialize.	#{MaxSelectorSubMenuEntries} initialize.	self initializeMenu</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient2 class</class-id> <category>support</category><body package="Debugger-UI">iconImportExpressions"ImageReader 	iconFromFile: '/Users/vb/Work/VisualWorks/Graphics/Debugger/step.gif' 	toClass: ToolbarIconLibrary	selector: #debugStep20x20.ImageReader 	iconFromFile: '/Users/vb/Work/VisualWorks/Graphics/Debugger/stepInto.gif' 	toClass: ToolbarIconLibrary	selector: #debugStepInto20x20.ImageReader 	iconFromFile: '/Users/vb/Work/VisualWorks/Graphics/Debugger/stepOverBlock.gif' 	toClass: ToolbarIconLibrary	selector: #debugStepOver20x20.ImageReader 	iconFromFile: '/Users/vb/Work/VisualWorks/Graphics/Debugger/run.gif' 	toClass: ToolbarIconLibrary	selector: #debugRun20x20.ImageReader 	iconFromFile: '/Users/vb/Work/VisualWorks/Graphics/Debugger/return.gif' 	toClass: ToolbarIconLibrary	selector: #debugReturn20x20.ImageReader 	iconFromFile: '/Users/vb/Work/VisualWorks/Graphics/Debugger/terminate.gif' 	toClass: ToolbarIconLibrary	selector: #debugTerminate20x20.ImageReader 	iconFromFile: '/Users/vb/Work/VisualWorks/Graphics/Debugger/restart.gif' 	toClass: ToolbarIconLibrary	selector: #debugRestart20x20.ImageReader 	iconFromFile: '/Users/vb/Work/VisualWorks/Graphics/Debugger/jumpToCaret.gif' 	toClass: ToolbarIconLibrary	selector: #debugJumpToCaret20x20.ImageReader 	iconFromFile: '/Users/vb/Work/VisualWorks/Graphics/Debugger/runToCaret.gif' 	toClass: ToolbarIconLibrary	selector: #debugRunToCaret20x20.ImageReader 	iconFromFile: '/Users/vb/Work/VisualWorks/Graphics/Debugger/runWithBreak.gif' 	toClass: ToolbarIconLibrary	selector: #debugFirstLoop20x20.ImageReader 	iconFromFile: '/Users/vb/Work/VisualWorks/Graphics/Debugger/runWithBreakNext.gif' 	toClass: ToolbarIconLibrary	selector: #debugNextLoop20x20."	self commentOnly</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient2 class</class-id> <category>private</category><body package="Debugger-UI">classMethodsChanged	menuHolder := nil</body><body package="Debugger-UI">initializeMenu	"self initializeMenu"	self menuHolder value: self executeMenuDefault literalArrayEncoding</body><body package="Debugger-UI">menuHolder	^menuHolder		ifNil:			[menuHolder := self executeMenuDefault literalArrayEncoding asValue]</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient</class-id> <category>accessing</category><body package="Debugger-UI">abortDebugging	self pauseDebugOperation.</body><body package="Debugger-UI">contextChanged	contextIndex := stackList selectionIndex.	service selectContextAt: contextIndex.	self buttonEnablement.</body><body package="Debugger-UI">ctrlyAbort	"ignore, done by service"</body><body package="Debugger-UI">isBusy	^busy</body><body package="Debugger-UI">service: aDebuggerService	service := aDebuggerService.	service addDependent: self</body><body package="Debugger-UI">stackFilteringEnabled	^enableStackFiltering</body><body package="Debugger-UI">toolbarView	| lookPolicy |	lookPolicy := LookPreferences widgetPolicy lookPolicyClass new.	^lookPolicy toolBarClass menu: self class toolbarMenu performer: self</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient</class-id> <category>actions</category><body package="Debugger-UI">abortDebugOperationInProcess: proc	busy		ifFalse: [^proc debug].	service pauseDebugOperation</body><body package="Debugger-UI">continue	"Continue execution from the interrupted state of the top context."	service hasSuspendedOperations		ifTrue: [^Dialog warn: (#YouMustCompleteOperationBeforeContinuing &lt;&lt; #pdp &gt;&gt; 'You must complete the suspended debugger operationsbefore continuing process execution.')].	self canRun		ifTrue:			[closeAction := #continue.			self closeRequest].</body><body package="Debugger-UI">copyStack	TextEditorController currentSelection: service stackForCopy</body><body package="Debugger-UI">correctSpelling	"Attempt to correct the spelling of the not-understood message"	| selectors guess nArgs |	selectors := service possibleDNUCorrections.	selectors isEmpty		ifTrue:			[nArgs := service dnuSelector numArgs.			[guess := (Dialog request: (#CouldNotCorrectEnterNewSelectorC &lt;&lt; #pdp &gt;&gt; 'Could not correct. Enter new selector:')) asSymbol.			nArgs = guess numArgs]				whileFalse:					[(Dialog confirm: (#NumArgsMustNotChangeRetryQ &lt;&lt; #pdp &gt;&gt; 'The number of arguments must not change.Retry?'))						ifFalse: [^self]]]		ifFalse:			[selectors := selectors asArray.			guess := Dialog				choose: (#CorrectToC &lt;&lt; #pdp &gt;&gt; 'Correct to:')				fromList: selectors				values: selectors				lines: 8				cancel: [^'']				for: nil.].	(Dialog confirm: ((#RetryWithSelectorCnt1s &lt;&lt; #pdp &gt;&gt; 'Retry with Selector:&lt;nt&gt;&lt;1s&gt;')			expandMacrosWith: guess) for: self interfaceWindow)		ifFalse: [^self].	self performDebugOperation: #correctDNUWith: with: guess.</body><body package="Debugger-UI">defineMethod	self changeRequest		ifFalse:			[^Dialog warn: (#CannotPerformOperationSrcChanged &lt;&lt; #pdp &gt;&gt; 'The operation cannot be performed because the source code has changed.')].	self performDebugOperation: #defineMethod.</body><body package="Debugger-UI">firstLoop	self changeRequest		ifFalse:			[^Dialog warn: (#CannotPerformOperationSrcChanged &lt;&lt; #pdp &gt;&gt; 'The operation cannot be performed because the source code has changed.')].	self performDebugOperation: #firstLoop.</body><body package="Debugger-UI">inspectContext	service inspectCurrentContext</body><body package="Debugger-UI">jumpToCaret	"Finds the closest proper point before the caret and causes the context to jump to it,	then completely pops the context stack.  Proper jump points cannot be inside a loop,	or cannot be after loop preperation, and must have a stack depth of 0.  Also, jumps	into or out of blocks are not permitted."	self changeRequest		ifFalse:			[^Dialog warn: (#CannotPerformOperationSrcChanged &lt;&lt; #pdp &gt;&gt; 'The operation cannot be performed because the source code has changed.')].	self performDebugOperation: #jumpToCaretAt: with: self textController selectionRange.</body><body package="Debugger-UI">makeFullMethod	service isMethodContextSelected		ifFalse:			[^Dialog warn: (#ContextIsNotForMethodSelectAnother &lt;&lt; #pdp &gt;&gt; 'The selected context is not a method context.&lt;n&gt;Please select the method context and reissue this command.') expandMacros].	(Dialog choose: (#WillCutStackAndReenter &lt;&lt; #pdp &gt;&gt; 'This command will cut the context stack back to the selected context&lt;n&gt;and re-enter the method.') expandMacros		labels: (Array with: (#Proceed &lt;&lt; #pdp &gt;&gt; 'Proceed') with: (#Cancel &lt;&lt; #pdp &gt;&gt; 'Cancel'))		values: #(true false)		default: false)		ifFalse: [^self].	self performDebugOperation: #makeFullMethod.</body><body package="Debugger-UI">moreStack	self canShowMore		ifTrue: [service moreStack]</body><body package="Debugger-UI">nextLoop	self changeRequest		ifFalse:			[^Dialog warn: (#CannotPerformOperationSrcChanged &lt;&lt; #pdp &gt;&gt; 'The operation cannot be performed because the source code has changed.')].	self performDebugOperation: #nextLoop.</body><body package="Debugger-UI">pause	"Places the process back into the paused state and closes the debugger."	service hasSuspendedOperations		ifTrue: [^Dialog warn: (#YouMustCompleteOperationBeforeContinuing &lt;&lt; #pdp &gt;&gt; 'You must complete the suspended debugger operationsbefore continuing process execution.')].	self performDebugOperation: #pause.</body><body package="Debugger-UI">pauseDebugOperation	busy		ifFalse: [^self].	service pauseDebugOperation</body><body package="Debugger-UI">proceed	"Proceed from the interrupted state of the currently selected context.	Instructions pending execution in methods entered after the selected	context are not executed."	service hasSuspendedOperations		ifTrue: [^Dialog warn: (#YouMustCompleteOperationBeforeContinuing &lt;&lt; #pdp &gt;&gt; 'You must complete the suspended debugger operationsbefore continuing process execution.')].	self performDebugOperation: #proceed.</body><body package="Debugger-UI">reenter	"Reset to the initial state of the currently selected context, i.e. as if the	context had just been entered."	self performDebugOperation: #reenter.</body><body package="Debugger-UI">restart	"Proceed from the initial state of the currently selected context.	The argument is a controller on a view of the receiver.  That view	is closed."	service hasSuspendedOperations		ifTrue: [^Dialog warn: (#YouMustCompleteOperationBeforeContinuing &lt;&lt; #pdp &gt;&gt; 'You must complete the suspended debugger operationsbefore continuing process execution.')].	self performDebugOperation: #restart.</body><body package="Debugger-UI">return	self hasValidContext		ifFalse: [^self].	service isMethodContextSelected		ifTrue: [self returnFromMethodContext]		ifFalse: [self returnFromBlockContext].</body><body package="Debugger-UI">revert	self changeRequest		ifFalse: [^self].	(Dialog confirm: (#RevertToLastPublishedVersionQ &lt;&lt; #pdp &gt;&gt; 'Revert this method to the last published version?')) 				ifFalse: [^self].	^service revert</body><body package="Debugger-UI">selectHomeContext	self changeRequest		ifFalse:			[^self].	service selectHomeContext</body><body package="Debugger-UI">send	self changeRequest		ifFalse:			[^Dialog warn: (#CannotPerformOperationSrcChanged &lt;&lt; #pdp &gt;&gt; 'The operation cannot be performed because the source code has changed.')].	self performDebugOperation: #send.</body><body package="Debugger-UI">skipToCaret	self changeRequest		ifFalse:			[^Dialog warn: (#CannotPerformOperationSrcChanged &lt;&lt; #pdp &gt;&gt; 'The operation cannot be performed because the source code has changed.')].	self performDebugOperation: #skipToCaretAt: with: self textController selectionRange.</body><body package="Debugger-UI">step	self changeRequest		ifFalse:			[^Dialog warn: (#CannotPerformOperationSrcChanged &lt;&lt; #pdp &gt;&gt; 'The operation cannot be performed because the source code has changed.')].	self performDebugOperation: #step.</body><body package="Debugger-UI">stepIntoBlock	self changeRequest		ifFalse:			[^Dialog warn: (#CannotPerformOperationSrcChanged &lt;&lt; #pdp &gt;&gt; 'The operation cannot be performed because the source code has changed.')].	self performDebugOperation: #stepIntoBlock.</body><body package="Debugger-UI">toggleStackFiltering	enableStackFiltering		ifTrue: [self disableStackFiltering]		ifFalse: [self enableStackFiltering].	self refreshAll.</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient</class-id> <category>menus</category><body package="Debugger-UI">addBookmarkItemsTo: aMenu	| serviceTags |	serviceTags := service tagMenuList.	serviceTags isEmpty ifFalse: [aMenu addLine].	serviceTags keysAndValuesDo:		[:index :each | | item |		item := index &lt; 10			ifTrue: [MenuItem labeled: ('&amp;&lt;1p&gt;. &lt;2s&gt;' 						expandMacrosWith: index 						with: each)]			ifFalse: [MenuItem labeled: each].		item value: [service selectTag: each].		aMenu addItem: item]</body><body package="Debugger-UI">bookmarkMenu	| menu |	menu := self class bookmarkMenu.	self addBookmarkItemsTo: menu.	(menu atNameKey: #addTag) enabled: self canAddTag.	(menu atNameKey: #removeTag) enabled: self canRemoveTag.	^menu</body><body package="Debugger-UI">contextMenu	| mainMenu |	mainMenu := self class contextMenu.	self setQuerySubmenuBlocksIn: mainMenu.	self setVisibilityForStoreCommandsIn: mainMenu.	(mainMenu atNameKey: #bookmarkMenu) submenu: [self bookmarkMenu].	^mainMenu</body><body package="Debugger-UI">editMenu	"Evaluation and clipboard actions shortcuts need to be made	display-only to not steal keystrokes from the widget.	The value also has to be changed to make the widget performs it	when the item is selected using the mouse, because the application	does not understand these actions."	| menu |	menu := self textMenu.	#(cut copySelection paste accept find replace hardcopy) do:		[:each | | item |		item := menu menuItemWithValue: each.		item			value: [self textController perform: each];			makeShortcutDisplayOnly].	^menu</body><body package="Debugger-UI">executeMenu	^self class executeMenu</body><body package="Debugger-UI">setQuerySubmenuBlocksIn: aMenu	(aMenu atNameKey: #allSenders) submenu: [self querySubmenuSending: #browseAllReferences:].	(aMenu atNameKey: #allImplementors) submenu: [self querySubmenuSending: #browseAllImplementors:].	(aMenu atNameKey: #localSenders) submenu: [self querySubmenuSending: #browseLocalReferences:].	(aMenu atNameKey: #localImplementors) submenu: [self querySubmenuSending: #browseLocalImplementors:].</body><body package="Debugger-UI">setupMenuBarMenu: aMenu	(aMenu atNameKey: #stackMenu) submenu: [self stackMenu].	(aMenu atNameKey: #editMenu) submenu: self editMenu.	(aMenu atNameKey: #executeMenu) submenu: [self executeMenu].	self setQuerySubmenuBlocksIn: aMenu.	self setVisibilityForStoreCommandsIn: aMenu.</body><body package="Debugger-UI">setVisibilityForStoreCommandsIn: aMenu	| storeLoaded mi |	storeLoaded := service isStoreLoaded.	(mi := aMenu atNameKey: #revert) notNil		ifTrue: [mi visibility: storeLoaded].	(aMenu atNameKey: #browseVersions) 		ifNotNil: [:item | item visibility: storeLoaded].</body><body package="Debugger-UI">stackMenu	| menu |	menu := self class stackMenu.	self addBookmarkItemsTo: menu.	(menu atNameKey: #filterStack) indication: self stackFilteringEnabled.	(menu atNameKey: #newTag) enablement: self canIssueContextCommand.	(menu atNameKey: #removeTag) enablement: self canIssueContextCommand.	^menu</body><body package="Debugger-UI">textMenu	| pdpMenu textMenu |	pdpMenu := self class pdpTextMenuAdditions.	self validateTextProbeMenuItemsInMenu: pdpMenu.	textMenu := (Menu new)				addPart: self class acceptGroup;				addPart: (self withDisabledItemsHidden: self class browseGroup);				addPart: pdpMenu;				addPart: self class evaluateGroup;				addPart: self class editGroup;				addPart: self class hardcopyGroup;				addPart: self class cancelGroup;				yourself.	textMenu		augmentFrom: self class		to: ApplicationModel		menuName: #textMenu		for: self.	^textMenu</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient</class-id> <category>probes</category><body package="Debugger-UI">addBreakpoint		self changeRequest		ifFalse:			[^Dialog				warn:					#CannotInsertBreakSourceChanged &lt;&lt; #pdp &gt;&gt;							'A breakpoint cannot be inserted because the source code has changed.'].	PDPManager debugActive		ifFalse:			[Transcript show: #ProbesAreDisabled &lt;&lt; #pdp &gt;&gt; 'Probes are disabled'].	service addBreakpointAt: self textController selectionRange</body><body package="Debugger-UI">addProbe	self changeRequest		ifFalse:			[^Dialog warn: (#CannotInsertProbeSourceChanged &lt;&lt; #pdp &gt;&gt; 'A probe cannot be inserted because the source code has changed.')].	PDPManager debugActive		ifFalse: [PDPTransientWarning on: (#ProbesAreDisabled &lt;&lt; #pdp &gt;&gt; 'Probes are disabled')].	service addProbeAt: self textController selectionRange.</body><body package="Debugger-UI">areTextProbeCommandsLegal	^self canIssueContextCommand</body><body package="Debugger-UI">modifyProbe	| aController |	aController := self textController.	service isProbedMethod		ifFalse: [^aController view invalidate].	service modifyProbeAt: aController selectionRange from: aController text.</body><body package="Debugger-UI">removeAllProbes	"Removes all the probes from the selected method."	self textController textHasChanged		ifTrue:			[(Dialog				choose: (#RemovingProbesWillLoseChanges &lt;&lt; #pdp &gt;&gt; 'Removing the probes will result in losing your changes.&lt;n&gt;What do you want do?') expandMacros				labels: (Array with: (#RemoveProbes &lt;&lt; #pdp &gt;&gt; 'Remove Probes') with: (#Cancel &lt;&lt; #pdp &gt;&gt; 'Cancel'))				values: #(true false)				default: false)				ifFalse: [^self]].	service isProbedMethod		ifFalse: [^self textController view invalidate].	service removeAllProbes.</body><body package="Debugger-UI">removeProbe	| aController |	aController := self textController.	aController textHasChanged		ifTrue:			[(Dialog				choose: (#RemovingProbesWillLoseChanges &lt;&lt; #pdp &gt;&gt; 'Removing the probes will result in losing your changes.&lt;n&gt;What do you want do?') expandMacros				labels: (Array with: (#Remove &lt;&lt; #pdp &gt;&gt; 'Remove') with: (#Cancel &lt;&lt; #pdp &gt;&gt; 'Cancel'))				values: #(true false)				default: false)				ifFalse: [^self]].	service isProbedMethod		ifFalse: [^aController view invalidate].	service removeProbeAt: aController selectionRange from: aController text.</body><body package="Debugger-UI">validateTextProbeMenuItemsInMenu: aMenu	#(insertBreakpoint insertProbe modifyProbe removeSelectedProbe removeAllProbes) do:		[:each |		(aMenu atNameKey: each) enablementSelector: #areTextProbeCommandsLegal]</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient</class-id> <category>tags</category><body package="Debugger-UI">addTag	service addTag.	self refreshContextList</body><body package="Debugger-UI">removeTag	service removeTag.	self refreshContextList</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient</class-id> <category>actions-browsing</category><body package="Debugger-UI">browseAllImplementors	self browseAllImplementors: service selector</body><body package="Debugger-UI">browseAllImplementors: aSelector	| realSelector mc |	realSelector := aSelector == nil		ifTrue: [self chooseSelector: (#ViewImplementorsnofWhichSelector &lt;&lt; #pdp &gt;&gt; 'View implementors&lt;n&gt;of which selector?')]		ifFalse: [aSelector].	realSelector == nil ifTrue: [^self].	mc := self methodCollector.	^mc browseSelect: (mc implementorsOf: realSelector)</body><body package="Debugger-UI">browseAllReferences: aSelector	| realSelector mc |	realSelector := aSelector == nil		ifTrue: [self chooseSelector: (#ViewSendersnofWhichSelector &lt;&lt; #pdp &gt;&gt; 'View senders&lt;n&gt;of which selector?')]		ifFalse: [aSelector].	realSelector == nil ifTrue: [^self].	mc := self methodCollector.	^mc browseSelect: (mc referencesTo: realSelector)</body><body package="Debugger-UI">browseAllSenders	self browseAllReferences: service selector.</body><body package="Debugger-UI">browseClass	service browseClass</body><body package="Debugger-UI">browseClassFromSourceView	| binding |	binding := self selectedVariableBinding.	binding isNil ifTrue: [^self].	RefactoringBrowser open navigator		setBinding: binding;		changed</body><body package="Debugger-UI">browseClassReferencesFromSourceView	| binding |	binding := self selectedVariableBinding.	binding isNil ifTrue: [^self].	Cursor wait showWhile:		[(BrowserEnvironment new referencesTo: binding) openEditor]</body><body package="Debugger-UI">browseImplementorsFromSourceView	| node |	node := self findNode.	(node isNil or: [node isMessage not]) ifTrue: [^self].	(BrowserEnvironment new implementorsOf: node selector) openEditor</body><body package="Debugger-UI">browseInstanceVariableReaders	self selectedVariableName ifNotNil:		[:name | 		Cursor wait showWhile: 			[(BrowserEnvironment new instVarReadersTo: name in: service selectedClass) openEditor]]</body><body package="Debugger-UI">browseInstanceVariableReferences	self selectedVariableName ifNotNil:		[:name | 		Cursor wait showWhile: 			[(BrowserEnvironment new instVarRefsTo: name in: service selectedClass) openEditor]]</body><body package="Debugger-UI">browseInstanceVariableWriters	self selectedVariableName ifNotNil:		[:name | 		Cursor wait showWhile: 			[(BrowserEnvironment new instVarWritersTo: name in: service selectedClass) openEditor]]</body><body package="Debugger-UI">browseLocalImplementors	self browseLocalImplementors: service selector</body><body package="Debugger-UI">browseLocalImplementors: aSelector	| realSelector mc |	realSelector := aSelector == nil		ifTrue: [self chooseSelector: (#ViewLocalImplementorsOfWhichQ &lt;&lt; #pdp &gt;&gt; 'View local implementors&lt;n&gt;of which selector?')]		ifFalse: [aSelector].	realSelector == nil ifTrue: [^self].	mc := self methodCollector.	^mc browseSelect:			(mc searchClassHierarchy: service selectedClass)			&amp; (mc implementorsOf: realSelector)</body><body package="Debugger-UI">browseLocalReferences: aSelector	| realSelector mc |	realSelector := aSelector == nil		ifTrue: [self chooseSelector: (#ViewLocalSendersnofWhichSelector &lt;&lt; #pdp &gt;&gt; 'View local senders&lt;n&gt;of which selector?')]		ifFalse: [aSelector].	realSelector == nil ifTrue: [^self].	mc := self methodCollector.	^mc browseSelect:			(mc searchClassHierarchy: service selectedClass)			&amp; (mc referencesTo: realSelector)</body><body package="Debugger-UI">browseLocalSenders	self browseLocalReferences: service selector</body><body package="Debugger-UI">browseMethod	service browseMethod</body><body package="Debugger-UI">browseSendersFromSourceView	| node |	node := self findNode.	(node isNil or: [node isMessage not]) ifTrue: [^self].	(BrowserEnvironment new referencesTo: node selector) openEditor</body><body package="Debugger-UI">browseVersions	#{Store.DbRegistry} ifDefinedDo: 			[:dbRegistry |			dbRegistry doIfOnlineImage: 					[| list |					list := #{Store.Glorp.StoreMethodInPackage} value								allVersionsWithName: service selector								inClass: service selectedClass absoluteName.					#{Store.Glorp.DefinitionForListTool} value forMethods: list]]</body><body package="Debugger-UI">chooseSelector: label	| msgs |	msgs := service selectedMethod allSymbolLiterals asSortedCollection.	^Dialog choose: label expandMacros			fromList: msgs			values: msgs			lines: 20			cancel: []			for: self interfaceWindow</body><body package="Debugger-UI">chooseSelector: label from: def	| msgs |	msgs := def method allSymbolLiterals asSortedCollection.	^Dialog choose: label expandMacros			fromList: msgs			values: msgs			lines: 20			cancel: []			for: self interfaceWindow</body><body package="Debugger-UI">containingPackage	| pkgs |	pkgs := Store.Registry allContainingPackagesForSelector: service selector class: service selectedClass.	self showPackageList: pkgs loaded:true.</body><body package="Debugger-UI">querySubmenuSending: aSymbol	| selectors displayedSelectors submenu item methodSelector |	self hasValidContext		ifFalse: [^nil].	selectors := service context method homeMethod allSymbolLiterals.	methodSelector := service selector.	selectors remove: methodSelector ifAbsent: [].	submenu := Menu new.	methodSelector notNil ifTrue:		[item := MenuItem labeled: (methodSelector contractTo: MaxMenuEntryWidth).		item value: [self perform: aSymbol with: methodSelector].		submenu 			addItem: item;			addLine].	selectors isEmpty		ifTrue: [^submenu].	selectors := selectors asSortedCollection.	displayedSelectors := selectors		copyFrom: 1 		to: (selectors size min: MaxSelectorSubMenuEntries).	displayedSelectors do: 		[:each | 		item := MenuItem labeled: (each contractTo: MaxMenuEntryWidth).		item value: [self perform: aSymbol with: each].		submenu addItem: item].	displayedSelectors size ~= selectors size ifTrue:		[submenu addLine.		item := MenuItem labeled: (#MoreSelectorsDots &lt;&lt; #pdp &gt;&gt; 'More selectors...').		item value: [self perform: aSymbol with: nil].		submenu addItem: item].	^submenu</body><body package="Debugger-UI">showPackageList: packages loaded: aBoolean	"Show a message box with packages - separating overrides if appropiate."	| str |	packages isEmpty		ifTrue: [ ^Dialog warn: (#NotYetAssignedToAPackage &lt;&lt; #pdp &gt;&gt; 'Not yet assigned to a package') ].	str := ( String new: 50 ) writeStream.	str nextPutAll: packages first itemString; cr.	packages size &gt; 1		ifTrue: 			[ aBoolean				ifTrue: [ str nextPutAll: ( String new: packages first itemString size withAll: $_ ) ; cr ].				2 to: packages size do:					[ :index | | pkg |					pkg := packages at: index.										str nextPutAll: pkg itemString; cr					].			].	Dialog warn: str contents.</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient</class-id> <category>private</category><body package="Debugger-UI">buttonEnablement	| container edc priority notTerminated canIssueContextCommand |	builder == nil ifTrue: [^self].	container := self isToolbarBelowContexts				ifTrue: [(builder componentAt: #toolbarHolder) widget]				ifFalse: [builder componentAt: #toolbarMenu].	edc := self enableDebugCommand.	notTerminated := self isTerminated not.	canIssueContextCommand := self canIssueContextCommand.	(container componentAt: #step)		ifNotNil: [:c | c isEnabled: canIssueContextCommand].	(container componentAt: #send)		ifNotNil: [:c | c isEnabled: canIssueContextCommand &amp; (contextIndex = 1)].	(container componentAt: #stepIntoBlock)		ifNotNil: [:c | c isEnabled: canIssueContextCommand &amp; (contextIndex = 1)].	(container componentAt: #skip)		ifNotNil: [:c | c isEnabled: canIssueContextCommand].	(container componentAt: #return)		ifNotNil: [:c | c isEnabled: canIssueContextCommand].	(container componentAt: #reenter)		ifNotNil: [:c | c isEnabled: canIssueContextCommand].	(container componentAt: #jumpToCaret)		ifNotNil: [:c | c isEnabled: canIssueContextCommand].	(container componentAt: #firstLoop)		ifNotNil: [:c | c isEnabled: canIssueContextCommand].	(container componentAt: #nextLoop)		ifNotNil: 			[:c |			c isEnabled: (canIssueContextCommand and: [service hasLoopControlContext])].	(container componentAt: #selectHome)		ifNotNil: 			[:c |			c isEnabled: (canIssueContextCommand						and: [service isMethodContextSelected not])].	(container componentAt: #continue)		ifNotNil: [:c | c isEnabled: notTerminated &amp; busy not].	(builder componentAt: #stackList) ifNotNil: [:c | c isEnabled: busy not].	(container componentAt: #inspectContext) ifNotNil: [:c | c isEnabled: edc].	(container componentAt: #pause) ifNotNil: [:c | c isEnabled: busy].	self textWidget isEnabled: edc.	priority := self notBusy				ifTrue: [Processor userSchedulingPriority]				ifFalse: [Processor lowIOPriority - 1].	builder window windowProcess priority: priority</body><body package="Debugger-UI">canContextChange: aController	^self changeRequest</body><body package="Debugger-UI">changeRequest	| wrapper editor choice |	builder isNil		ifTrue: [^true].	wrapper := builder componentAt: #text.	(wrapper isNil or: [(editor := wrapper widget controller) updateRequest])		ifTrue: [^true].	choice := Dialog 		choose: ((#AcceptUnsavedTextChanges &lt;&lt; #dialogs &gt;&gt; 'Accept unsaved text changes?') expandMacros)		labels: (Array			with: #Yes &lt;&lt; #labels &gt;&gt; 'Yes'			with: #No &lt;&lt; #labels &gt;&gt; 'No'			with: #Cancel &lt;&lt; #labels &gt;&gt; 'Cancel')		values: #(#yes #no #cancel)		default: #yes.	choice = #cancel		ifTrue: [^false].	choice = #yes 		ifTrue: [self textAccepted: editor]		ifFalse: [editor cancel].	^true</body><body package="Debugger-UI">disableStackFiltering	enableStackFiltering := false.	service		stackFilterPatterns: #()		convertSelector: ContextListPolicyEditor ConversionSelector		matchSelector: ContextListPolicyEditor MatchSelector		displayAllLimit: ContextListPolicyEditor DisplayAllLimit.</body><body package="Debugger-UI">enableStackFiltering	| pats |	enableStackFiltering := true.	stackEmphases := Dictionary new.	pats := ContextListPolicyEditor Patterns collect:		[:p |		stackEmphases at: p name put: p color.		(ServerContextPatternSpec new) pattern: p pattern; name: p name; yourself].	service		stackFilterPatterns: pats		convertSelector: ContextListPolicyEditor ConversionSelector		matchSelector: ContextListPolicyEditor MatchSelector		displayAllLimit: ContextListPolicyEditor DisplayAllLimit.</body><body package="Debugger-UI">findNode	| tree node interval source |	interval := self selectedInterval.	interval isEmpty 		ifTrue: 			[| cursorPosition |			cursorPosition := self selectionIndex.			cursorPosition = 1 ifTrue: [^nil].			interval := cursorPosition to: cursorPosition].	source := self text asString.	source size &gt; 10000 ifTrue: [^nil].	tree := self parseSource: source.	tree isNil ifTrue: [^self parseSelection].	node := tree whichNodeIsContainedBy: interval.	node isNil ifTrue: [node := tree bestNodeFor: interval].	^node</body><body package="Debugger-UI">interfaceWindow	^builder window</body><body package="Debugger-UI">maybeSelectLineAndIfSelected: oneArgumentBlockClosure		self textControllerWithFocus		ifNotNil:			[:textController | 			textController maybeSelectCurrentLine.			textController hasRangeSelection				ifTrue: [oneArgumentBlockClosure value: textController]]</body><body package="Debugger-UI">methodCollector	^MethodCollector new browser: self</body><body package="Debugger-UI">parseSelection	^RBParser 		parseExpression: self selectedText		onError: [:str :pos | ^nil]</body><body package="Debugger-UI">parseSource: aString 	parsedSource = aString ifTrue: [^parseTree].	parsedSource := aString.	parseTree := nil.	^parseTree := service selector = #unboundMethod		ifTrue: [RBParser parseExpression: aString onError: [:str :error | ^nil]]		ifFalse: [RBParser parseMethod: aString onError: [:str :err | ^nil]]</body><body package="Debugger-UI">performDebugOperation: actionSym	busy := true.	self buttonEnablement.	service perform: actionSym</body><body package="Debugger-UI">performDebugOperation: actionSym with: anObject	^self performDebugOperation: actionSym withArgs: (Array with: anObject)</body><body package="Debugger-UI">performDebugOperation: actionSym withArgs: anArray	busy := true.	self buttonEnablement.	service perform: actionSym withArguments: anArray.</body><body package="Debugger-UI">requestComplete	busy := false.	self isTerminated.	self buttonEnablement.</body><body package="Debugger-UI">selectedInterval	| controller |	controller := self textController.	controller isNil ifTrue: [^1 to: 0].	^controller selectionStartIndex to: controller selectionStopIndex - 1</body><body package="Debugger-UI">selectedText	| interval |	interval := self selectedInterval.	interval isEmpty ifTrue: [^''].	^self textController text asString copyFrom: interval first		to: interval last</body><body package="Debugger-UI">selectedVariableBinding	| name |	name := self selectedVariableName.	name isNil ifTrue: [^nil].	^(name includes: $.)		ifTrue: [name asQualifiedReference bindingOrNil]		ifFalse: [service selectedClass environment bindingFor: name asSymbol]</body><body package="Debugger-UI">selectedVariableName	| node |	node := self findNode.	^(node notNil and: [node isVariable]) ifTrue: [node name] ifFalse: [nil]</body><body package="Debugger-UI">selectionIndex	| controller |	controller := self textController.	controller isNil ifTrue: [^1].	^controller selectionStartIndex</body><body package="Debugger-UI">stackView	^(builder componentAt: #stackList) widget</body><body package="Debugger-UI">textController	^self textWidget controller</body><body package="Debugger-UI">textControllerWithFocus	"Answer the focused controller that can process keystrokes like Ctrl+q (inspectIt). Answer nil if it is not a text controller."	| controller |	controller := self builder keyboardProcessor focusedEventHandler.	^(controller isKindOf: TextEditorController)		ifTrue: [controller]		ifFalse: [nil]</body><body package="Debugger-UI">textEditor: aTextController keyPress: aKeyPressedEvent	^aKeyPressedEvent keyValue = Graphics.TextConstants.Ctrlo		ifTrue: 			[self format. 			nil]		ifFalse:			[aKeyPressedEvent]</body><body package="Debugger-UI">textWidget	^(builder componentAt: #text) widget</body><body package="Debugger-UI">withDisabledItemsHidden: aMenu	aMenu menuItems do:		[:each | each visible: [each isEnabled]].	^aMenu</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient</class-id> <category>testing</category><body package="Debugger-UI">canAddTag	^self canIssueContextCommand and: [service isCurrentContextTagged not]</body><body package="Debugger-UI">canCorrectSpelling	^self canIssueContextCommand and: [service canCorrectSpelling]</body><body package="Debugger-UI">canDefineMethod	^self canIssueContextCommand and: [service canDefineMethod]</body><body package="Debugger-UI">canDoNextLoop	^self canIssueContextCommand and: [service hasLoopControlContext]</body><body package="Debugger-UI">canIssueContextCommand	^self hasValidContext and: [self notBusy and: [self isTerminated not]]</body><body package="Debugger-UI">canRemoveTag	^self canIssueContextCommand and: [service isCurrentContextTagged]</body><body package="Debugger-UI">canRun	^self notBusy and: [self isTerminated not]</body><body package="Debugger-UI">canSelectHome	^self canIssueContextCommand and: [service isMethodContextSelected not]</body><body package="Debugger-UI">canShowMore	^self isTerminated not</body><body package="Debugger-UI">enableDebugCommand	^self hasValidContext &amp; self notBusy</body><body package="Debugger-UI">enableSendCommand	^(contextIndex = 1) and: [self canIssueContextCommand]</body><body package="Debugger-UI">hasClassSelected	| node |	node := self findNode.	(node isNil or: [node isVariable not]) ifTrue: [^false].	^node name asQualifiedReference bindingOrNil		ifNil: [false]		ifNotNil: [:b | b isForClass]</body><body package="Debugger-UI">hasInstanceVariableSelected	| class name |	class := service selectedClass.	name := self selectedVariableName.	^class notNil and: [name notNil and: [(class allInstVarNames indexOf: name) &gt; 0]]</body><body package="Debugger-UI">hasMessageNodeSelected	| node |	node := self findNode.	^node notNil and: [node isMessage]</body><body package="Debugger-UI">hasValidContext	^contextIndex &gt; 0</body><body package="Debugger-UI">isDebugger	^true</body><body package="Debugger-UI">isTerminated	terminated		ifFalse:			[terminated := service isTerminated.			terminated				ifTrue: [self changed: #windowLabel with: service label]].	^terminated</body><body package="Debugger-UI">isToolbarBelowContexts	^(builder componentAt: #toolbarHolder) notNil</body><body package="Debugger-UI">notBusy	^busy not</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient</class-id> <category>updating</category><body package="Debugger-UI">changeWindowLabelTo: aString	^self changed: #windowLabel with: aString</body><body package="Debugger-UI">highlightRange: range	| tv |	builder isNil		ifTrue: [^self].	tv := self textWidget.	tv isOpen		ifFalse: [^self].	tv deselect.	tv controller selectAndScrollFrom: range value first to: range value last.	tv displaySelection: true.</body><body package="Debugger-UI">redisplayText	self textHolder setValue: self text.	builder isNil		ifTrue: [^self].	self textWidget updateTheDisplay.</body><body package="Debugger-UI">refreshAll	self changed: #windowLabel with: service label.	self updateContextList: service indexOfCurrentContext.	self redisplayText.	self highlightRange: service pcRange.	self buttonEnablement.</body><body package="Debugger-UI">refreshContextList	self updateContextList: service indexOfCurrentContext.</body><body package="Debugger-UI">showMessage: anObject	Dialog warn: anObject</body><body package="Debugger-UI">update: aSymbol with: anObject	aSymbol = #pcRange		ifTrue: [^builder window send: #highlightRange: to: self with: (Array with: anObject)].	aSymbol = #showMessage		ifTrue: [^builder window send: #showMessage: to: self with: (Array with: anObject)].	aSymbol = #contextList		ifTrue: [^builder window send: #updateContextList: to: self with: (Array with: anObject)].	aSymbol = #contextSelection		ifTrue: [^builder window send: #updateContextSelection: to: self with: (Array with: anObject)].	aSymbol = #text		ifTrue: [^builder window send: #redisplayText to: self].	aSymbol = #requestComplete		ifTrue: [^builder window send: #requestComplete to: self].	aSymbol = #windowLabel		ifTrue: [^builder window send: #changeWindowLabelTo: to: self with: (Array with: anObject)].	aSymbol = #closeDebugger		ifTrue: [^builder window send: #closeRequest to: self].	aSymbol = #debuggerSelectedTopContext		ifTrue: [^builder window send: #debuggerSelectedTopContext to: self].	aSymbol = #evaluationResult		ifTrue: [^builder window send: (anObject at: 1) to: self with: (Array with: (anObject at: 2) with: (anObject at: 3))]</body><body package="Debugger-UI">updateContextList: contextIdx	| scrollPosition nLines sv |	nLines := stackList list size.	sv := self stackView.	scrollPosition := sv scrollOffsetHolder value.	sv scrollOffsetHolder retractInterestIn: #value for: self.	stackList selectionIndexHolder retractInterestsFor: self.	stackList list: self contextList.	contextIndex := contextIdx.	stackList selectionIndex: contextIndex.	stackList list size &gt;= nLines		ifTrue: [sv scrollTo: scrollPosition].	service isFullStack		ifFalse:			[sv scrollOffsetHolder				expressInterestIn: #value				for: self				sendBack: #listScrolled].	stackList selectionIndexHolder onChangeSend: #contextChanged to: self</body><body package="Debugger-UI">updateContextSelection: contextIdx	stackList selectionIndexHolder retractInterestsFor: self.	contextIndex := contextIdx.	stackList selectionIndex: contextIndex.	stackList selectionIndexHolder onChangeSend: #contextChanged to: self</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient</class-id> <category>aspects</category><body package="Debugger-UI">contextInspector	^service contextInspector</body><body package="Debugger-UI">contextList	^service contextListForUI collect: 			[:a |			| emp txt str |			str := a at: 1.			txt := str asText.			(service isTagged: (a at: 1)) ifTrue: [txt := txt allBold].			emp := a at: 3.			emp notNil				ifTrue: [txt emphasizeAllWith: #color -&gt; (stackEmphases at: emp)].			txt]</body><body package="Debugger-UI">listScrolled	| sv |	sv := self stackView.	(sv scrollOffsetHolder value - sv visibleExtent + sv scrollableExtent) y &lt; 10		ifTrue: [self moreStack]</body><body package="Debugger-UI">receiverInspector	^service receiverInspector</body><body package="Debugger-UI">stackInspector	^service stackInspector</body><body package="Debugger-UI">stackList	^stackList</body><body package="Debugger-UI">text	^service text</body><body package="Debugger-UI">textHolder	^text</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient</class-id> <category>doIt/accept/explain</category><body package="Debugger-UI">debugit	self maybeSelectLineAndIfSelected:		[:textController|		service debugFrom: self textController]</body><body package="Debugger-UI">doItCompleted: result on: aTextController</body><body package="Debugger-UI">doit	self maybeSelectLineAndIfSelected:		[:textController|		self			performDebugOperation: #evaluateTextFrom:action:			withArgs: (Array with: textController with: #doItCompleted:on:)]</body><body package="Debugger-UI">doItContext	"Answer the context in which a text selection can be evaluated."	^service doItContext</body><body package="Debugger-UI">doItEnvironment	"Answer the object that should be informed of the result of evaluating a	text selection."	^service doItEnvironment</body><body package="Debugger-UI">doItReceiver	"Answer the object that should be informed of the result of evaluating a	text selection."	^service doItReceiver</body><body package="Debugger-UI">doItValue: anObject 	"Set the value to be returned when the interrupted process proceeds."	^service doItValue: anObject</body><body package="Debugger-UI">explain	service explainFor: self textController</body><body package="Debugger-UI">format	self textController == self textControllerWithFocus		ifTrue:	[service formatFor: self textController]		ifFalse:	[self textControllerWithFocus formatSelection]</body><body package="Debugger-UI">inspectItCompleted: result on: aTextController	result inspect</body><body package="Debugger-UI">inspectit	self maybeSelectLineAndIfSelected:		[:textController|		self			performDebugOperation: #evaluateTextFrom:action:			withArgs: (Array with: textController with: #inspectItCompleted:on:)]</body><body package="Debugger-UI">printItCompleted: result on: aTextController	aTextController		insertAndSelect: (' ' , result printString) 		at: aTextController selectionStopIndex</body><body package="Debugger-UI">printit		self maybeSelectLineAndIfSelected:		[:textController|		self		performDebugOperation: #evaluateTextFrom:action:		withArgs: (Array with: textController with: #printItCompleted:on:)]</body><body package="Debugger-UI">textAccepted: textController	"Recompile the method of the selected context."	service isInstalledMethodSourceOutOfSync		ifTrue:			[(Dialog				choose: (#SourcesOutOfSyncWhatToDo &lt;&lt; #pdp &gt;&gt; 'Installed method source and selected context original source areout of sync.  Accepting new source may result in losing prior changes.')				labels: (Array with: (#AcceptSource &lt;&lt; #pdp &gt;&gt; 'Accept Source') with: (#Cancel &lt;&lt; #pdp &gt;&gt; 'Cancel'))				values: #(true false)				default: false)				ifFalse: [^false]].	^service acceptTextFrom: textController.</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient</class-id> <category>private-return</category><body package="Debugger-UI">hookupMethodReturnFor: dialog	| aBuilder result accept pa |	aBuilder := dialog builder.	accept := dialog accept.	result := ValueHolder with: nil.	pa := PluggableAdaptor on: result.	pa 		getBlock: [:m | m]		putBlock: [:m :v | ]		updateBlock: [:m :a :p | a == #value ifTrue: [accept value: true]. true].	result addDependent: pa.	aBuilder		aspectAt: #returnSelf		put: [result value: #returnSelf:].	aBuilder		aspectAt: #returnTOS		put: [result value: #returnTOS:].	aBuilder		aspectAt: #returnLastDoIt		put: [result value: #returnLastDoIt:].	aBuilder		aspectAt: #returnNewExpr		put: [result value: #returnNewExpr:].	accept onChangeSend: #close to: dialog.	dialog cancel onChangeSend: #close to: dialog.	^result</body><body package="Debugger-UI">returnFromBlockContext	| windoe dialog aBuilder result returnType |	windoe := builder window.	dialog := SimpleDialog new.	dialog initializeBuilderFor: windoe.	aBuilder := dialog builder.	aBuilder source: self.	result := self hookupMethodReturnFor: dialog.	returnType := ValueHolder with: #return:.	aBuilder		aspectAt: #returnType		put: returnType.	aBuilder add: (UISpecification from: self class blockReturnSpec).	dialog initializeWindowFor: windoe.	service doesContextHaveInterimValues		ifFalse: [(aBuilder componentAt: #returnTOS) disable].	service contextHasHome		ifFalse:			[(aBuilder componentAt: #methodReturn) disable.			(aBuilder componentAt: #blockReturn) disable].	dialog preOpen.	aBuilder openDialogWithExtent: aBuilder window displayBox extent.	result value isNil		ifTrue: [^nil].	self perform: result value with: returnType value.</body><body package="Debugger-UI">returnFromMethodContext	| windoe dialog aBuilder result |	windoe := builder window.	dialog := SimpleDialog new.	dialog initializeBuilderFor: windoe.	aBuilder := dialog builder.	aBuilder source: self.	result := self hookupMethodReturnFor: dialog.	aBuilder add: (UISpecification from: self class methodReturnSpec).	dialog initializeWindowFor: windoe.	service doesContextHaveInterimValues		ifFalse: [(aBuilder componentAt: #returnTOS) disable].	dialog preOpen.	aBuilder openDialogWithExtent: aBuilder window displayBox extent.	result value isNil		ifTrue: [^nil].	self perform: result value with: #return:.</body><body package="Debugger-UI">returnLastDoIt: rtnMsg	self performDebugOperation: #returnLastDoIt: with: rtnMsg.</body><body package="Debugger-UI">returnNewExpr: rtnMsg	| string retry result |	[string := Dialog				request: (#EnterExpressionC &lt;&lt; #pdp &gt;&gt; 'Enter expression:')				initialAnswer: 'nil'.	string isEmpty		ifTrue: [^self].	result := service evaluateExpressionInReceiver: string.	result key		ifTrue: [retry := false]		ifFalse:			[retry := Dialog						confirm: (#ExprInvalidRetryQ &lt;&lt; #pdp &gt;&gt; 'The expression is invalid. Retry?')						initialAnswer: true.			retry				ifFalse: [^self]].	retry] whileTrue.	self performDebugOperation: #returnNewExpr:with: withArgs: (Array with: rtnMsg with: result value).</body><body package="Debugger-UI">returnSelf: rtnMsg	self performDebugOperation: #returnSelf: with: rtnMsg.</body><body package="Debugger-UI">returnTOS: rtnMsg	self performDebugOperation: #returnTOS: with: rtnMsg.</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient</class-id> <category>initialize - release</category><body package="Debugger-UI">initialize	super initialize.	busy := true.	terminated := false.	text := String new asValue.	contextIndex := 0.	stackList := SelectionInList new.	stackList list: List new.	stackList selectionIndexHolder onChangeSend: #contextChanged to: self.	stackEmphases := Dictionary new.	ContextListPolicyEditor Patterns		do: [:ps | stackEmphases at: ps name put: ps color].	closeAction := #terminate</body><body package="Debugger-UI">windowClosed	service perform: closeAction.</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient</class-id> <category>interface opening</category><body package="Debugger-UI">debuggerSelectedTopContext	service selectContextAt: 1.	self refreshAll.</body><body package="Debugger-UI">postBuildWith: aBuilder	self enableStackFiltering.	self textController 		autoAccept: false;		doNotHandleLocally: #explain;		keyboardHook: [:e :c | self textEditor: c keyPress: e].	self setupMenuBarMenu: (aBuilder menuAt: #menuBarMenu).	self stackView scrollOffsetHolder		expressInterestIn: #value		for: self		sendBack: #listScrolled.</body><body package="Debugger-UI">postOpenWith: aBuilder 	| windowProcess |	windowProcess := aBuilder window windowProcess.	windowProcess debugger: service.	windowProcess environmentAt: #WindowManagerUsagePolicy put: MakeNewWindowManagerUsagePolicy new.	aBuilder window when: #closed send: #windowClosed to: self.	service prepareTopContext.	"We are trusting that the preceding line will result in a #requestComplete	being sent back to this DebuggerClient at some point in the near future	(after bouncing between several processes). If this does not happen,	then the 'busy' instance variable, initialized to true, will not be set to false."</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient</class-id> <category>interface closing</category><body package="Debugger-UI">noticeOfWindowClose: aWindow		EventQueue allInstancesDo: [:each | each restoreReadSynchSignals].	service removeAllDependents.</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient</class-id> <category>private-menus</category><body package="Debugger-UI">canTextEditRedo	(builder componentAt: #text) ifNil: [^false].	^self textController currentUndo atEnd not</body><body package="Debugger-UI">canTextEditUndo	(builder componentAt: #text) ifNil: [^false].	^self textController currentUndo atStart not</body><body package="Debugger-UI">textEditRedoIcon	| icon |	icon := GeneralIcons editRedo.	^self canTextEditRedo ifTrue: [icon] ifFalse: [icon disabled]</body><body package="Debugger-UI">textEditRedoLabel	| cannotRedoLabel currentUndo |	cannotRedoLabel := #TextEditNothingToRedoLabel &lt;&lt; #menus				&gt;&gt; 'Nothing to redo'.	currentUndo := self textController currentUndo.	currentUndo atEnd ifTrue: [^cannotRedoLabel].	^#TextEditRedoLabel &lt;&lt; #menus &gt;&gt; 'Redo &lt;1s&gt;'		expandMacrosWith: currentUndo next operation</body><body package="Debugger-UI">textEditUndoIcon	| icon |	icon := GeneralIcons editUndo.	^self canTextEditUndo ifTrue: [icon] ifFalse: [icon disabled]</body><body package="Debugger-UI">textEditUndoLabel	| cannotUndoLabel currentUndo |	cannotUndoLabel := #TextEditNothingToUndoLabel &lt;&lt; #menus				&gt;&gt; 'Nothing to undo'.	currentUndo := self textController currentUndo.	currentUndo atStart ifTrue: [^cannotUndoLabel].	^#TextEditUndoLabel &lt;&lt; #menus &gt;&gt; 'Undo &lt;1s&gt;'		expandMacrosWith: currentUndo operation</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient class</class-id> <category>resources</category><body package="Debugger-UI">executeMenu	menuHolder isNil ifTrue: [self initializeMenu].	^menuHolder value decodeAsLiteralArray</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient class</class-id> <category>interface specs</category><body package="Debugger-UI">windowSpec	^PlaceToolbarBelowContexts		ifTrue: [self toolbarInTheMiddleWindowSpec]		ifFalse: [self toolbarOnTopWindowSpec]</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient class</class-id> <category>private</category><body package="Debugger-UI">classMethodsChanged	menuHolder := nil</body><body package="Debugger-UI">initializeMenu	"self initializeMenu"	self menuHolder value: self executeMenuDefault literalArrayEncoding</body><body package="Debugger-UI">menuHolder	^menuHolder		ifNil:			[menuHolder := self executeMenuDefault literalArrayEncoding asValue]</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient class</class-id> <category>instance creation</category><body package="Debugger-UI">openFullViewOn: aDebuggerService label: aString	[| win |	win := (self service: aDebuggerService) open window.	win label: aString.	win windowProcess name: aString.]		on: GetWindowManagerUsagePolicy		do: [:ex | ex resume: MakeNewWindowManagerUsagePolicy new]	"Smalltalk Professional Debug Package Version 3.1 (c) 2002 Crafted Smalltalk"</body><body package="Debugger-UI">openFullViewOn: aDebuggerService label: aString clientInto: aBlock	[| client win |	client := self service: aDebuggerService.	aBlock value: client.	win := client open window.	win label: aString.	win windowProcess name: aString.]		on: GetWindowManagerUsagePolicy		do: [:ex | ex resume: MakeNewWindowManagerUsagePolicy new]</body><body package="Debugger-UI">service: aDebuggerService	^self new service: aDebuggerService	"Smalltalk Professional Debug Package Version 3.0 (c) 2001 Crafted Smalltalk"</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient class</class-id> <category>support</category><body package="Debugger-UI">iconImportExpressions"ImageReader 	iconFromFile: '/Users/vb/Work/VisualWorks/Graphics/Debugger/step.gif' 	toClass: ToolbarIconLibrary	selector: #debugStep20x20.ImageReader 	iconFromFile: '/Users/vb/Work/VisualWorks/Graphics/Debugger/stepInto.gif' 	toClass: ToolbarIconLibrary	selector: #debugStepInto20x20.ImageReader 	iconFromFile: '/Users/vb/Work/VisualWorks/Graphics/Debugger/stepOverBlock.gif' 	toClass: ToolbarIconLibrary	selector: #debugStepOver20x20.ImageReader 	iconFromFile: '/Users/vb/Work/VisualWorks/Graphics/Debugger/run.gif' 	toClass: ToolbarIconLibrary	selector: #debugRun20x20.ImageReader 	iconFromFile: '/Users/vb/Work/VisualWorks/Graphics/Debugger/return.gif' 	toClass: ToolbarIconLibrary	selector: #debugReturn20x20.ImageReader 	iconFromFile: '/Users/vb/Work/VisualWorks/Graphics/Debugger/terminate.gif' 	toClass: ToolbarIconLibrary	selector: #debugTerminate20x20.ImageReader 	iconFromFile: '/Users/vb/Work/VisualWorks/Graphics/Debugger/restart.gif' 	toClass: ToolbarIconLibrary	selector: #debugRestart20x20.ImageReader 	iconFromFile: '/Users/vb/Work/VisualWorks/Graphics/Debugger/jumpToCaret.gif' 	toClass: ToolbarIconLibrary	selector: #debugJumpToCaret20x20.ImageReader 	iconFromFile: '/Users/vb/Work/VisualWorks/Graphics/Debugger/runToCaret.gif' 	toClass: ToolbarIconLibrary	selector: #debugRunToCaret20x20.ImageReader 	iconFromFile: '/Users/vb/Work/VisualWorks/Graphics/Debugger/runWithBreak.gif' 	toClass: ToolbarIconLibrary	selector: #debugFirstLoop20x20.ImageReader 	iconFromFile: '/Users/vb/Work/VisualWorks/Graphics/Debugger/runWithBreakNext.gif' 	toClass: ToolbarIconLibrary	selector: #debugNextLoop20x20."	self commentOnly</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient class</class-id> <category>class initialization</category><body package="Debugger-UI">initialize	"self initialize"	#{PlaceToolbarBelowContexts} initialize.	#{MaxMenuEntryWidth} initialize.	#{MaxSelectorSubMenuEntries} initialize.	self initializeMenu</body></methods><methods><class-id>CraftedSmalltalk.ContextListPolicyEditor</class-id> <category>commands</category><body package="Debugger-UI">accept	Patterns := OrderedCollection new: patternList size.	patternList list do:		[:ps |		ps name isEmpty			ifFalse: [Patterns add: ps copyWithoutText]].	MatchSelector := matchSelector value asSymbol.	ConversionSelector := conversionSelector value asSymbol.	DisplayAllLimit := displayAllLimit value truncated.	self closeRequest.</body><body package="Debugger-UI">cancel	self closeRequest.</body><body package="Debugger-UI">copy	buffer := selection value copy.</body><body package="Debugger-UI">help	| mod aBuilder spec |	aBuilder := self builderClass new.	aBuilder aspectAt: #helpText put: HelpText.	mod := ApplicationModel new.	mod builder: aBuilder.	aBuilder source: mod.	spec := self class interfaceSpecFor: #helpSpec.	mod hookUpWindow: nil spec: spec builder: aBuilder.	aBuilder add: spec.	aBuilder window model: mod.	aBuilder bindings at: #__specName put: #helpSpec.	aBuilder openFromWindowSpec: spec window.	aBuilder window displayPendingInvalidation.	^aBuilder</body><body package="Debugger-UI">newPattern	| idx |	idx := patternList selectionIndex + 1.	patternList list add: self emptyPattern beforeIndex: idx.	patternList selectionIndex: idx.</body><body package="Debugger-UI">paste	patternList list add: buffer copy beforeIndex: patternList selectionIndex + 1.</body><body package="Debugger-UI">removePattern	patternList list remove: selection value ifAbsent: [].</body><body package="Debugger-UI">selectColor	| dialog color |	dialog := ColorSelectionDialog new.	dialog selection: colorHolder value.	dialog open.	dialog accept value		ifFalse: [^self].	color := dialog selection.	colorHolder value: color.	self refreshColorButton.</body><body package="Debugger-UI">undo	| pattern uBuff command |	pattern := selection value.	uBuff := undoBuffer at: pattern ifAbsent: [^self].	command := uBuff removeLast.	uBuff isEmpty		ifTrue: [undoBuffer removeKey: pattern].	pattern perform: command key with: command value.	command key == #pattern:		ifFalse: [pattern emphasize].	command key == #color: 		ifTrue: [self refreshColorButton].	self refreshList.	selection changed: #value.</body></methods><methods><class-id>CraftedSmalltalk.ContextListPolicyEditor</class-id> <category>private</category><body package="Debugger-UI">addUndoCommand: symbol oldValue: obj	| uBuffer |	uBuffer := undoBuffer at: selection value ifAbsentPut: [OrderedCollection new]. 	uBuffer add: symbol -&gt; obj.</body><body package="Debugger-UI">emptyPattern	^(ClientContextPatternSpec new)		name: (#Everything &lt;&lt; #pdp &gt;&gt; 'Everything') asString;		pattern: '*';		color: ColorValue black;		yourself.</body><body package="Debugger-UI">patternColorHolder	| pa |	pa := (PluggableAdaptor on: selection)		getBlock: [:m | m value color]		putBlock:			[:m :v | 			self addUndoCommand: #color: oldValue: m value color.			(m value) color: v; emphasize]		updateBlock: [:m :a :p | a == #value].	pa onChangeSend: #refreshList to: self.	^pa</body><body package="Debugger-UI">refreshColorButton	(self widgetAt: #colorButton) widgetState colors: ((self widgetAt: #colorButton) lookPreferences setForegroundColor: selection value color).	(self widgetAt: #colorButton) invalidate.</body><body package="Debugger-UI">refreshList	(self widgetAt: #patternList) invalidate.</body></methods><methods><class-id>CraftedSmalltalk.ContextListPolicyEditor</class-id> <category>accessing</category><body package="Debugger-UI">buttonEnablement	| enable |	enable := self patternIsSelected.	(builder componentAt: #removeButton) isEnabled: enable.	(builder componentAt: #colorButton) isEnabled: enable.</body><body package="Debugger-UI">conversionSelector	^conversionSelector</body><body package="Debugger-UI">displayAllLimit	^displayAllLimit</body><body package="Debugger-UI">matchSelector	^matchSelector</body><body package="Debugger-UI">patternList	^patternList</body></methods><methods><class-id>CraftedSmalltalk.ContextListPolicyEditor</class-id> <category>aspects</category><body package="Debugger-UI">canPaste	^buffer notNil</body><body package="Debugger-UI">canUndo	^undoBuffer includesKey: selection value</body><body package="Debugger-UI">patternIsSelected	^patternList selection notNil</body><body package="Debugger-UI">patternName	| pa |	pa := (PluggableAdaptor on: selection)		getBlock: [:m | m value name string]		putBlock:			[:m :v | 			self addUndoCommand: #name: oldValue: m value name.			(m value) name: v; emphasize]		updateBlock: [:m :a :p | a == #value].	pa onChangeSend: #refreshList to: self.	^pa</body><body package="Debugger-UI">patternString	| pa |	pa := (PluggableAdaptor on: selection)		getBlock: [:m | m value pattern]		putBlock:			[:m :v | 			self addUndoCommand: #pattern: oldValue: m value pattern.			m value pattern: v string]		updateBlock: [:m :a :p | a == #value].	pa onChangeSend: #refreshList to: self.	^pa</body><body package="Debugger-UI">selectionChanged	| pat |	pat := patternList selection.	pat isNil		ifTrue: [pat := ClientContextPatternSpec new].	selection value: pat.	self refreshColorButton.	self buttonEnablement.</body></methods><methods><class-id>CraftedSmalltalk.ContextListPolicyEditor</class-id> <category>drag &amp; drop</category><body package="Debugger-UI">doDrag: aController 	"Drag the currently selected change. Include all available information so that the 	drop target can use whatever it needs."	| data |	data := DragDropData new.	data key: #ContextPatternSpec.	data contextWindow: self builder window.	data contextWidget: aController.	data contextApplication: self; contextApplicationType: #ContextListPolicyEditor.	data clientData: patternList selection.	(DragDropManager			withDropSource: DropSource new			withData: data) doDragDrop.</body><body package="Debugger-UI">dragEnter: aDragContext	"A drag has entered the class list of a change browser.	 If the receiver is happy to accept a drag from the target the	 fill-in the appropriate data and answer that dragging should continue."	self == aDragContext data contextApplication		ifFalse: [^#dropEffectNone].	aDragContext dropTarget clientData: self initialDropState.	^#dropEffectMove</body><body package="Debugger-UI">dragLeave: aDragContext	"A drag has left the change list of a change browser. If the drag contains a 	change, we must restore the state of the list."	self == aDragContext data contextApplication		ifTrue:			[self restoreListStateFrom: aDragContext dropTarget clientData.			aDragContext dropTarget clientData: nil].	^#dropEffectNone</body><body package="Debugger-UI">dragOver: aDragContext	^self == aDragContext data contextApplication		ifTrue: [			(self builder componentAt: #patternList) widget				showDropFeedbackIn: aDragContext				allowScrolling: true.			#dropEffectMove]		ifFalse: [#dropEffectNone]</body><body package="Debugger-UI">drop: aDragContext 	| view patternSpec list effectiveTargetIndex sourceIndex destIndex |	self == aDragContext data contextApplication		ifFalse: [^#dropEffectNone].	patternSpec := aDragContext data clientData.	list := patternList list.	view := (self builder componentAt: #patternList) widget.	effectiveTargetIndex := view elementIndexFor: view controller sensor cursorPoint.	destIndex := (effectiveTargetIndex min: list size) max: 1.	sourceIndex := list indexOf: patternSpec.	list removeAtIndex: sourceIndex.	destIndex &gt;= sourceIndex		ifTrue:			[destIndex &gt; list size				ifTrue: [list addLast: patternSpec]				ifFalse: [list add: patternSpec beforeIndex: destIndex]]		ifFalse:			[list add: patternSpec beforeIndex: destIndex].	patternList selection: patternSpec.	^#dropEffectNone</body><body package="Debugger-UI">initialDropState	"Answer the initial state of the list when a drag has begun within its 	bounds. The state will be used to re-establish the appearance of the list when 	a drag leaves."	| dict view ctrl |	ctrl := (view := (self builder componentAt: #patternList) widget) controller.	dict := IdentityDictionary new.	dict at: #ctrl put: ctrl.	dict at: #targetIndex put: view targetIndex.	dict at: #effectiveTargetIndex put: (view elementIndexFor: ctrl sensor cursorPoint).	dict at: #hasFocus put: ctrl view hasFocus.	ctrl view hasFocus: true.	^dict</body><body package="Debugger-UI">restoreListStateFrom: aDictionary 	"Reset the state of the list when a drag has left its bounds."	| ctrl |	ctrl := aDictionary at: #ctrl.	ctrl view targetIndex: (aDictionary at: #targetIndex).	ctrl view hasFocus: (aDictionary at: #hasFocus)</body><body package="Debugger-UI">wantToDrag: listController	"Answer true if the receiver wants to initiate a drag."	^patternList list size &gt; 1 and: [patternList selectionIndex &gt; 0]</body></methods><methods><class-id>CraftedSmalltalk.ContextListPolicyEditor</class-id> <category>initialize-release</category><body package="Debugger-UI">initialize	patternList := SelectionInList new.	patternList list: self initialList.	patternList selectionIndexHolder onChangeSend: #selectionChanged to: self.	conversionSelector := ConversionSelector asValue.	matchSelector := MatchSelector asValue.	selection := ClientContextPatternSpec new asValue.	colorHolder := self patternColorHolder.	displayAllLimit := DisplayAllLimit asValue.	undoBuffer := IdentityDictionary new.</body><body package="Debugger-UI">initialList	| list |	list := List new.	Patterns do: [:a | list add: a copyWithText].	^list</body></methods><methods><class-id>CraftedSmalltalk.ContextListPolicyEditor</class-id> <category>interface opening</category><body package="Debugger-UI">postBuildWith: aBuilder 	(self widgetAt: #patternList) displayStringSelector: #name</body><body package="Debugger-UI">postOpenWith: aBuilder 	self buttonEnablement.</body></methods><methods><class-id>CraftedSmalltalk.ContextListPolicyEditor class</class-id> <category>variables</category><body package="Debugger-UI">ConversionSelector	^ConversionSelector</body><body package="Debugger-UI">DisplayAllLimit	^DisplayAllLimit</body><body package="Debugger-UI">MatchSelector	^MatchSelector</body><body package="Debugger-UI">Patterns	^Patterns</body></methods><methods><class-id>UI.ScrollingView</class-id> <category>scrolling</category><body package="Debugger-UI">scrollOffsetHolder	^scrollOffset</body></methods><methods><class-id>Tools.Notifier class</class-id> <category>class initialization</category><body package="Debugger-UI">beDevelopment	"Initialize the current instance variable with a DevelopmentNotifier."	current := self developmentNotifier.</body></methods><methods><class-id>Tools.Notifier class</class-id> <category>accessing</category><body package="Debugger-UI">developmentNotifier	^DebuggerService</body></methods><methods><class-id>Tools.Notifier class</class-id> <category>testing</category><body package="Debugger-UI">isDevelopment	"Answer true if the current notifier is for a development image."	^current == self developmentNotifier</body></methods><methods><class-id>Core.SystemNotification</class-id> <category>private - actions</category><body package="Debugger-UI">defaultAction	self aboutToDebug.	^Notifier openException: self.</body></methods><methods><class-id>Tools.DebuggerIcons class</class-id> <category>png imports</category><body package="Debugger-UI">breakpoint	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'breakpoint.png'&gt;	&lt;md5sum: #[35 241 155 77 133 147 229 1 44 44 60 14 51 101 131 155]&gt;	^[AlphaCompositedImage image: ((Image extent: 24@24 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@O???0C???&lt;@????@O???0C???&lt;@????@O???1T@@@A\DA@1$!,[T+L$IF?SJ"*B42(* +L$IF&gt;RF1-RWA@PLQT@@@@@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;E@@@@$Q\WQ.\4MI??SD3(?5MS??=ST???S4?2?5MS??=ST???T5O??41L:N\4MI&gt;QE1]FAP@@@@C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???3XMCR/FG1=(?$YF;O=LSO??SD3??4]G4?=#X8??"H"]?4)J /=@PL;?RT''6?41L??=LSO?&gt;Q$[,1!&lt;_ZCXMCR,@????@O???0C???&lt;@????@O???0C???&lt;@????]QLSR.\-KZ3?P4O??4MC??=CP???M3^&gt;?4A@&amp;O???????????8^G''_=MSXO? HB[?49N$O&lt;?O&gt;;?P4O??4MC?&gt;\-KZ15D1MJ@O???0C???&lt;@????@O???0C???&lt;6B (+92 (+O&lt;;N???N3/??3\7;/=HRH;?ZV%&lt;?3T5"/???????????9NS)/=PTH''??????=WU5_&lt;3L&lt;_?N3/??3,;??&lt;;N??''JB",M (JJ0C???&lt;@????@O???0T@@@CFEAQ(?3H2??&lt;2L/??L#K??3L3&amp;_?8&gt;O#?.++B?2(*]/???????????9:^+/=KR8G??????&gt;C 8O&lt;+J:S?K2?/?3H2??&lt;2L/??L#K?1!PTZ@T@@@@@????@O???9DLCD[&gt;I2_,?2(*??&lt;*J/??J"+??2&lt;/''O?;&gt;?/?5]WU?2L#X/???????????:.+-?=FQ''+??????&gt;/+:?&lt;$IF+?[&amp;:H?3,;%O&lt;''I&gt;3?J"+??"\'';IDLCDX@????EP@@@N\UEY??HRG??2D!??&lt;!H_??HRG??2(*(O?8&gt;O#?:N#(?18^S????????????;&amp;90O=APWO???????[6=/&lt; HFK?8NC ??_7=?=FQ)C?HRG??2D!?&gt;\UEY&lt;U@@@@W@TEL_&lt;WE&gt;#?FQ''??1$Y??&lt;YF_??FQ''??2X&amp;(??5=_W?&gt;?/;?1,[O/?=?_7??????&lt;[F2O&lt;=OV3???????????&lt;^G%7?6]''Y??????=VU)+?FQ''??1$Y??&lt;WE&gt;!\APT1$ TET/&lt;PDO??DAC??0&lt;O;_&lt;OC?O?DAC??1&lt;_)??2&lt;/K??????10\N??;&gt;?/??????=GQ4_&lt;&lt;OFS???????????&lt;^G&amp;C?4=OS??????=_W9''?DAC??1@P??&lt;PDO&gt;RAPUR,0LC[?&lt;HBO/?H2N ?7!8''O=NS(''?B@#)?1$Y*/?.;.;??????2@ OO?9&gt;_''??????=''Y6_&lt;;N5;???????????&lt; HFO?2&lt;/M??????=''Y9_?B@#??0 H??&lt;HBO&gt;3@0M/40@@ /&lt;@@O_?XFBM???????=?_7?W%:O?1LS"??+:&gt;/??????79&gt;$??:&gt;/+???????G1&lt;_&gt;)*[''???????????=0\IG?7-; ??????=(ZI_?@@C??0@@??&lt;@@O?S@@BB40@@_?&lt;@@O#?E1^.?=GQ5????????????6)* /?(:N#???????????????????????????????????????????????????????????=(ZI[?@@C8?0@@&gt;O&lt;@@O#S@@A?,0@@Z_&lt;@@OK?@@C2?4]G!/????????????????????????????????????????????????????????????????????????????????=(ZI_?@@C2?0@@&lt;/&lt;@@OJ3@@A)$ @@SO&lt;@@N3?@@C,?0$I0/&gt;$)K[???????????????????????????????????????????????????????????????????????????=UUY''?@@C,?0@@;O&lt;@@N2R@@ALW@@@KO&lt;@@MC?@@C%?0@@9_&lt;/K8S?;^7.??????????????????????????????????????????????????????????????????????&lt;:N)[?@@C%?0@@9_&lt;@@MA\@@@,EP@@@N\@@H/?@@C_?0@@7?&lt;@@M/?M3]:?&gt;?/;????????????????????????????????????????????????????????????:J"-_&lt;NC+K?@@C_?0@@7&gt;\@@H,U@@@@@O???9D@@C3&gt;@@CI?0@@6_&lt;@@M''?@@CU?3,;__?$9N[?????????????????????????????????????????????????6-+_?2D!$O&lt;@@M''?@@CY? @@2YD@@C0@????@O???0T@@@CF@@AV?0@@4?&lt;@@MO?@@CS?0@@4_&lt;!HX7?_G2Z??/;&gt;?????????????????????????????????&gt;0,K7?K2&gt;@?0@@4?&lt;@@MO?@@CS1 @@U T@@@@@????@O???0C???&lt;6@@@"90@@"/&lt;@@L3?@@CL?0@@3O&lt;@@L3?@PF&lt;?3P4 ?=''Y9C?,+J&lt;?&gt;#(:O?X6M#?/[7B?45M^O&lt;MCY3?@@CL?0@@3O&lt;@@L3''@@BJM @@H C???&lt;@????@O???0C???&lt;@????]P@@N^\@@H[?@@CF?0@@1/&lt;@@L[?@@CF?0@@1/&lt;@@L[?@0N)?1TU#_&lt;JB)''?@@B&amp;?0@@0?&lt;@@L[?@@CF?0@@1.\@@HY5@@@9@O???0C???&lt;@????@O???0C???&lt;@????@O???3X@@BCF@@AO? @@,?&lt;@@LG?@@CA?0@@0_&lt;@@LG?@@CA?0@@0_&lt;@@LG?@@CA?0@@0_&lt;@@LG&gt;@@B31 @@S3X@@B@@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;E@@@@$P@@M^\@@G#?@@B0?0@@0_&lt;@@LG?@@CA?0@@0_&lt;@@LG?@@CA?0@@,N\@@G"Q@@@5AP@@@@C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???1T@@@A\@@@%$ @@O+L@@ESS@@A#40@@X;L@@ERR@@@&gt;W@@@IQT@@@@@????@O???0C???&lt;@????@O???0C???&lt;@????')))] once</body><body package="Debugger-UI">disabledBreakpoint	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'disabledBreakpoint.png'&gt;	&lt;md5sum: #[78 217 86 238 5 209 67 163 65 5 152 176 182 39 128 53]&gt;	^[AlphaCompositedImage image: ((Image extent: 24@24 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@O???0C???&lt;@????@O???0C???&lt;@????@O???1T@@@ATDA@P_!4]GYH*J"*%L3L3)SL3L9H*J")&gt;GQ4]UA@PDAT@@@@@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;E@@@@ A$YFZ%CP4N\]WU5$(&amp;I"YJI"X&amp;X_W5=$(&amp;I"YJI"X&amp;R"X&amp;I''GU5]Z%CP4N@FQ$YAP@@@@C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???3HNC :$I2\''&amp;W!8^IJI"X&amp;R"X&amp;I*&amp;1,[NQ+Z6/2"X&amp;I7UMST:%$YFRV XFA$(&amp;I"YJI"X&amp;Y^G!8)B\''I3HNC 8@????@O???0C???&lt;@????@O???0C???&lt;@????Y1(ZF*UKR4.R"X&amp;I$(&amp;I"YJI"X&amp;1V5-[3EQTUO?3&lt;?O?&lt;?O3&lt;(&amp;I"^AXVE#0!HRD6U5]WY%:^''*R"X&amp;I$(&amp;I"ZUKR4-''F!(Z@O???0C???&lt;@????@O???0C???&lt;2C 8N)T-KR9JI"X&amp;R"X&amp;I&amp;W):^-!ZV%+4Z&amp;)*4D-KR??3&lt;?O?&lt;?O3=IVU%]=^W%;?&lt;?O3?&lt;/K2:5!XVFR"X&amp;I$(&amp;I"YJI"X&amp;%R4-KL 8NC C???&lt;@????@O???0T@@@B$I2\''$(&amp;I"YJI"X&amp;R"X&amp;I2UEQT_?,;N3;-+Z65#4=O_?3&lt;?O?&lt;?O3=):^''.IZV%+?&lt;?O3?=WU5[9NS$:Y^7-;$(&amp;I"YJI"X&amp;R"X&amp;I)B\''I0T@@@@@????@O???8@YFQ&amp;Y^G!8$(&amp;I"YJI"X&amp;R"X&amp;I15MST??/;&gt;??2&lt;/K73H2L/?3&lt;?O?&lt;?O3&gt;Z&amp;)*^QUUUW?&lt;?O3?&gt;C 8M,7M3_2]GQ44%)ZV))8^G"R"X&amp;I&amp;W!8^H@YFQ$@????EP@@@J%CP4NR"X&amp;I$(&amp;I"YJI"X&amp;R"X&amp;I1UUUU_?,;N3?7]7]92,+J??3&lt;?O?&lt;?O3?KR4-N]PTEC?&lt;?O3?&gt;+*:-&lt;3L3O?5]WU?&gt;/+:=- XFBR"X&amp;I$(&amp;I"Z%CP4LU@@@@UA@PDI15]WVR"X&amp;I$(&amp;I"YJI"X&amp;R"X&amp;I1EQTUO?):^''?;&gt;?/;"P$IO?1&lt;_G?&lt;?O3?+:&gt;/.%MST7?&lt;?O3??O3&lt;&gt;D1LSG?3&lt;?O??O3&lt;==0\GBR"X&amp;I$(&amp;I"Y15]WUTDA@P_!4]GYJI"X&amp;R"X&amp;I&amp;''%9^Y]&gt;_'':R"X&amp;I0UUUU_?''9&gt;_?&lt;?O3&lt;RT%I_?/;&gt;??&lt;?O3?&lt;_G1&gt;5HRD#?&lt;?O3??O3&lt;&gt;D5MSW?2\''I??O3&lt;&gt;Q5]WVR"X&amp;I$(&amp;I"YJI"X%&gt;GQ4]$"(*J)RE!XWHVU%Y;8VE!^U&amp;Y&amp;Z\]''Y6/5]WU??#8&gt;O?&lt;?O3&lt;2 (JO?-;^7?&lt;?O3?&lt;?O3?AGQ4_?&lt;?O3??O3&lt;&gt;H9NS''&gt;0,KB??O3&lt;&gt;);^7.R"X&amp;I$(&amp;I"YJI"X&amp;RJ"(*)SL3L9VB (K,\WE1??O3&lt;??1&lt;_G*\WE13DMCP?? 8NC?&lt;?O3=(NC ??%9^W?0LC@?:2,+O")*Z''?&lt;?O3??O3&lt;?E&lt;_G3&gt;5]WU??O3&lt;&gt;-;^7.R"X&amp;I$(&amp;I"YJI"X&amp;%L3L3)SL3L9JI"X&amp;=W%9^?L/K2??3&lt;?O?&lt;?O3=GE1\_?]7]7?&lt;?O3??O3&lt;?&lt;4MCS?FQ$Y?1$YF_?.;.;?&lt;?O3??O3&lt;??3&lt;?O?&lt;?O3??O3&lt;&gt;-;^7.R"X&amp;I$(&amp;I"YJI"X&amp;%L3L3$"(*J)JI"X&amp;R"X&amp;I86M#X??3&lt;?O?&lt;?O3??O3&lt;??3&lt;?O?&lt;?O3??O3&lt;??A0\G?%IRT?1$YF_?.;.;?&lt;?O3??O3&lt;??3&lt;?O?&lt;?O3??O3&lt;&gt;)&gt;_'':R"X&amp;I$(&amp;I"YJI"X&amp;RJ"(*_!4]GYJI"X&amp;R"X&amp;I*&amp;%)Z_^''):_?&lt;?O3??O3&lt;??3&lt;?O?&lt;?O3??O3&lt;??3&lt;?O?(JB ?1$YF_?.;.;?&lt;?O3??O3&lt;??3&lt;?O?&lt;?O3??O3&lt;==8^G"R"X&amp;I$(&amp;I"YJI"X%&gt;GQ4]UA@PDI15]WVR"X&amp;I$(&amp;I"]YXVE#?8&gt;O#??O3&lt;??3&lt;?O?&lt;?O3??O3&lt;??3&lt;?O?(JB ?1$YF_?.;.;?&lt;?O3??O3&lt;??3&lt;?O?&lt;?O3??O3&lt;=M(ZF"R"X&amp;I$(&amp;I"Y15]WUTDA@PEP@@@J%CP4NR"X&amp;I$(&amp;I"YRD!HS^VE!X?&gt;S$9O?3&lt;?O?&lt;?O3??O3&lt;??3&lt;?O?(JB ?1$YF_?.;.;?&lt;?O3??O3&lt;??3&lt;?O?&lt;?O3=*^''):=''Y6^R"X&amp;I$(&amp;I"Z%CP4LU@@@@@O???8@YFQ&amp;Y^G!8$(&amp;I"YJI"X&amp;T!HRD7%1\WO;Z6-+?&lt;?O3??O3&lt;?&gt;5-[W?^W%9?1$YF_&gt;3,;O?3\7M??O3&lt;??3&lt;?O&lt;4=OS151\WIJI"X&amp;R"X&amp;I&amp;W!8^H@YFQ$@????@O???0T@@@B$I2\''$(&amp;I"YJI"X&amp;R"X&amp;I$8^G!&lt;]]WU70"(*J?&gt;7-;_&lt;YFQ''?FQ$Y?1$YF_&lt;YFQ''?[F1,??O3&lt;?"2,+KUVU%Y$(&amp;I"YJI"X&amp;R"X&amp;I)B\''I0T@@@@@????@O???0C???&lt;2C 8N)T-KR9JI"X&amp;R"X&amp;I$(&amp;I"YJI"X&amp;[^G!85U=_W&gt;%&lt;_G3:,[F1?=7]7_?N3,;&lt;.K"8:FM#X;I XFBR"X&amp;I$(&amp;I"YJI"X&amp;%R4-KL 8NC C???&lt;@????@O???0C???&lt;@????Y1(ZF*UKR4.R"X&amp;I$(&amp;I"YJI"X&amp;R"X&amp;I$(&amp;I"YJI"X&amp;$Z6-+/U1\WKA_W5&gt;$Y6]''%HVE!YJI"X&amp;R"X&amp;I$(&amp;I"ZUKR4-''F!(Z@O???0C???&lt;@????@O???0C???&lt;@????@O???3HNC :$I2\''&amp;W!8^IJI"X&amp;R"X&amp;I$(&amp;I"YJI"X&amp;R"X&amp;I$(&amp;I"YJI"X&amp;R"X&amp;I$(&amp;I"YJI"X&amp;Y^G!8)B\''I3HNC 8@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;E@@@@ A$YFZ%CP4N\]WU5$(&amp;I"YJI"X&amp;R"X&amp;I$(&amp;I"YJI"X&amp;R"X&amp;I''GU5]Z%CP4N@FQ$YAP@@@@C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???1T@@@ATDA@P_!4]GYH*J"*%L3L3)SL3L9H*J")&gt;GQ4]UA@PDAT@@@@@????@O???0C???&lt;@????@O???0C???&lt;@????')))] once</body><body package="Debugger-UI">homeContext	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'homeContext.png'&gt;	&lt;md5sum: #[172 201 114 121 190 140 69 206 250 160 247 159 119 30 89 246]&gt;	^[AlphaCompositedImage image: ((Image extent: 24@24 depth: 32 bitsPerPixel: 32 palette: (FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@$V8Z@7-$EQ6.^A9X/G,ZX+A4D ];WP\@ &amp;HG@@@@@@@@@@@@@@@@@@@@@@@@@@@@????@O???0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%7T#@''1&amp;E12&gt; 29T3H\.''\6DI-+J A3;0''0S=K!7B6Z"\@$@@@@@@GAUA @@@@@@@@@@@@@@@@@@@@@@????@O???0@@@@@@@@@@@@@@@@@@@@@@[EHF@O???1_C 2MS7YM@&amp;&gt;NUO]'']##K:58$''?&lt;&gt;CG/?I_1W?/G M?;Q8B.^/^@)H''F8I@MNAC@A\R@T@@@@@@@@@@@@@@@@@????@O???0@@@@@@@@@@@@@@@@BU\P B_E8GRJ*AB,+F_AK::)P6?&gt;ZTM/? $B7?5XX#?&lt;*BF_?@^1C?.G$J?;M:B/&gt;/^0+U)7\IK9A,B@B ]@$@S38D@@@@@@@@@@@@????@O???0@@@@@@@@@@@J2BB 2 ^P%5+8@J:;"ALO?Y/)/?8)!C?&gt;JOK_?W"2_?38P]?&lt;U?E_&gt;;^ 3?,W(J?:=;B/&gt;*^0+?)70I/I15BQ.EYP\@#F(H@@@@@@@@@@@@????@O???0ASR0T@.8(KH:!?BZV0]0+:0IUV??G-9/??????=].=?="KJ_?R"BC?1''&lt;W?;9&lt;C?&gt;4^P+?+W,J?:)&lt;B/&gt;&amp;_@''?('',I?9=8BZBS[0 M\ETF@G![A0@@@@@@????@O???0ASR T@:5P&lt;ZZM.B_WO+8O??????????????????????&gt;+@#??O 1#?0''8S?;!:B?&gt;0^0+?*''0J?:]&lt;B_&gt;"^0''?''GXI?89+BNQ8V0\0XD$E@FQLA @@@@@@????@O???0AXS@T@???5G=_U1M7????????????????????????????????_)&amp;C?0''4N?;Q:B/&gt;-_@+?*''4J?:A9B_&gt;NZ0#? 6DI?)&gt;ISV&gt;]#%(B@@@@@D&lt;&lt;A@@@@@@@????@O???0@@@@@@&gt;_''9F?+:&gt;-3?????3L";?&gt;G_6/?????????????????:????4Y@5?;E&gt;B/&gt;"^0''?#F(H?8E!CO&gt;V 43?**FH??+:&gt;%S1&lt;^0@=/[2@@@@@@@@@@@@????@O???0@@@@@@&gt;?/;F????=3?????$(%1?82D[_??????&gt;&gt;/R??3&amp;3O???????NSS?:)5D?=?W0;?&amp;H![?;"3)_?\6-S?&lt;/K1??+:&gt;%W-;^0@&lt;/K2@@@@@@@@@@@@????@O???0@@@@@@????F????=3?????''YU??9BG[???????1*E(?;N@B/?*.''''??????=;T0/&gt;5,*''?2&lt;/G?&lt;WC/??\6-S?&lt;/K1??+:&gt;%W1&lt;_D@&gt;_''9@@@@@@@@@@@@????@O???0@@@@@@6M#XHM[V5.C?????1K:+?:JY _??????3:%1?&lt;FJB??-*E#????????????A0[??1&lt;_G?=CO3_?\6-S?&lt;/K1?_+:&gt;%/_7=&lt;@=/[6@G5=_P@@@@@@????@O???0@@@@@@"(*JMH^G!?B[&amp;9/?1LSD?&gt;K!7_??????6YI8?;-7B??,+6W???????????&gt;?/;??2\''I?=/[6??''9&gt;[?4]GQ?;B0,H2#(:L@0\GA@HJB  @@@@@@????@O???0C???&lt;-&gt;_''9%.3,;O*)*Z''?%IRT?9&gt;_''??P3\/?2JY6?:=/B/?_+F+????????????A0\G?2\''I?;Z6-/&gt;P$IC? (JB?:F!([[K2&lt;,"-KR4@ @@@@@@@@@@????@O???0H6M#ZT=/[6?/??????????&lt;_G1?&lt;[F1/?G1,O?1*]9?;=:F_?)-''/???????W5=_&gt;Y&amp;Y''?\''I2?59^W/=/[6??*J"(?&gt;/+:?/9&gt;_%&gt;+Z6-C@@@@@D@@@@@????@O???0C???&lt;Z1LSDZ=ST5LG2&lt;/K5????????????????&gt;&gt;;V?&lt;*ZU_?]-(O?4]GQ?9&amp;Y&amp;_=DQDS?RT%I?7]7]??D1LS&gt;;N3,6M#X6G*(*J "PTEAA@@@@@@@@@@@????@O???0@@@@@@@@@@@P@@@AUIRT%P+Z6-)]?_7&gt;#????&gt;????????????????:N#(?9^W%?=]WU7?''9&gt;_?=[V5.KT5MRI****KE!XV@P@@@@@@PDA@@@@@@@@@@@@????@O???0@@@@@@@@@@@@@@@@@@@@@@????B! XFCZM#X6G2&lt;+I5_C0;_/???????????????? 8NC*3L3L&amp;J***#Y&amp;Y&amp;XG@@@@@CL3L0@@@@@@@@@@@@@@@@@@@@@@????@O???0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@JB (C@@@@HV)*Z&amp;"2,+J=7=?_9&gt;O#8:"1,[EB\''I2B PDA@C???&lt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@????@O???0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@SRT%IK7M3\0&lt;"H"H@????@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????')))] once</body><body package="Debugger-UI">inspector	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'inspector.png'&gt;	&lt;md5sum: #[219 241 53 212 190 225 164 228 57 74 9 185 218 205 194 100]&gt;	^[AlphaCompositedImage image: ((Image extent: 24@24 depth: 32 bitsPerPixel: 32 palette: (FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@@@@@@@@@@@@@@@@@@@@@@H@@@@D@@@@A0@@@@\@@@@E@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O???0C???&lt;@????@O???0C???&lt;@????@@@@@@@@@@@A@@@@A @@@F]KN2/RU$P2?5%EL?=YQSK?U4T2-EMAK$!DMRTE@@@@@P@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O???0C???&lt;@????@O???0C???&lt;@????@@@@@@D@@@@YGQTL051LN.U&lt;ZD#R1[A#:N?''0/3%5)[(9MZ#4+Z#Y&gt;U*U4M-Q# )AP@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O???0C???&lt;@????@O???0C???&lt;@????@@@@@@ @@@B*W5@&gt;9X-4Q-3 3GS?9MRS?&gt;[V%??&amp;5)''?9-ZY?&gt;[V&amp;M3Q-4;%^FYUWD1@L P@@@@@@@@@@@@@@@@@@@@@@@@@@O???0C???&lt;@????@O???0C???&lt;@????@ @@@CH&amp;G1_?^&amp;)Y4,V&amp;L/?Q-UO?5K%Z?=R:W/?V/FG?5+1 ?=R9W_?R-%_R-Y$&gt;87M#TP4@@@@A@@@@@@@@@@@@@@@@@@@@@O???0C???&lt;@????@O???0C???&lt;@????AP@@@HA!UD#?#W%T:LFXE?&gt;&gt;&amp;BK?1*P3?&lt;*)O_?L+DO?3J5C?&lt;**O??G)#_(0:P:?8I1XS ]E!DC@@@@@@@@@@@@@@@@@@@@@O???0C???&lt;@????@O???0C???&lt;@????A0@@@IM)WEG?&amp;XEJ?LF[I/?F)CO?2*(&gt;?&lt;6.Q??N+4#?3Z9F?&lt;")OO?D(#G&lt;/)$(?85?\E,=MR4E@@@@@@@@@@@@@@@@@@@@@O???0C???&lt;@????@O???0C???&lt;@????A0@@@I]+XU_?%(Y.:L6+L_?M+$W?4[YU?=Z&lt;XO?V/VO?5K)^?=F3T/?L+DG(0ZP??9*K_5H(H!4E@@@@@@@@@@@@@@@@@@@@@O???0C???&lt;@????@O???0C???&lt;@????BP@@@E, F1#?*I2R4+2!P??R-%[?6LI+?=7H^??_3HG?7\]9?=^&gt;Y/?P,5GR-I='':I*M " @@@@C@@@@@@@@@@@@@@@@@@@@@O???0C???&lt;@????@O???0C???&lt;@????AP@@@B$@@@C($HM89[F$%M3Q.6[?7&lt;)&gt;?&gt;[V&amp;O?(6*K?9MJS?=7G]=3C+&amp;/%,:*_(E)QRA @@@@A@@@@@@@@@@@@@@@@@@@@@O???0C???&lt;@????@O???0C???&lt;@????@ @@@AP@@@A8GQPK?:*^$&gt;V;,Z''R1KZP:L":%_3M0ZC(1[^R4,N5%&gt;W@-:??0KZ,^B0$F0&lt;@@@@@@@@@@@@@@@@@@@@@@@@@@O???0C???&lt;@????@O???0C???&lt;@????@@@@@@\@@@@#@@@@#!PJ@?VH^&amp;/?1+24?=ON1/?Q3,[?4\''F?;&gt;6+NQ,XEK?+JFV?&lt;;F/6))V44D@@@@@@@@@@@@@@@@@@@@@O???0C???&lt;@????@O???0C???&lt;@????@@@@@@D@@@@J@@@@K@@@@FL@@@B$MB0"6H&gt;F_=",**[M%IBJ%S\2KEH@@@C@M2$[?:2$&amp;_?H0[%,YU]JA @@@@@@@@@@@@@@@O???0C???&lt;@????@O???0C???&lt;@????@@@@@@@@@@@A@@@@A0@@@AT@@@@(@@@@M @@@C0@@@@8@@@@I0@@@A8@@@@:@@@@2S(+F?&gt;&amp;''H??1+&gt;6[FMVRPT@@@@@@@@@@O???0C???&lt;@????@O???0C???&lt;@????@@@@@@@@@@@@@@@@@@@@@@H@@@@D@@@@A0@@@@\@@@@F@@@@A@@@@@P@@@@S@@@@QP@@@N@&gt;KQ??''YJD?;.3*F!TQ#\C@@@@@O???0C???&lt;@????@O???0C???&lt;@????@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B@@@@D @@@DP@@@C^N2,[?9JD^K!1YUPH@@@@@O???0C???&lt;@????@O???0C???&lt;@????@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@0@@@AP@@@AA@@@@$24!E#P@@@@H@@@@@O???0C???&lt;@????@O???0C???&lt;@????@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@L@@@@O@@@@F@@@@@4@@@@B@@@@@O???0C???&lt;@????@O???0C???&lt;@????@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@A@@@@@ @@@@D@@@@@@@@@@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????')))] once</body><body package="Debugger-UI">jumpToCaret	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'jumpToCaret.png'&gt;	&lt;md5sum: #[63 73 77 4 88 140 143 117 132 249 114 144 35 147 152 175]&gt;	^[AlphaCompositedImage image: ((Image extent: 24@24 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@?????9![@O&gt;XV0@F&amp;E,@?9![@O&gt;XV0@@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O??????????&amp;E,@A/??????????????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C????9&amp;E,@?????0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C????9&amp;E,@&gt;_???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C????9&amp;E,@&gt;_???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????\0@@@@C???&lt;@????@O???0C????9&amp;E,@&gt;_???0C???&lt;@????@O???7L@@@@@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????\0@@@GL@@@@@????@O???0C????9&amp;E,@&gt;_???0C???&lt;@????\0@@@GL@@@A3????@O???0C???&lt;@????@O???0C???&lt;@????@O???7L@@@A3@@@@\0@@@GL@@@A3@@@@\0@@@GL@@@A3@@@@@O???0C????9&amp;E,@&gt;_???0C???=3@@@@\0@@@GL@@@A3@@@@\0@@@GL@@@A3@@@@\0@@@@C???&lt;@????@O???0C???=3????\????7O???=3????\0@@@GL@@@A3????\????0C????9&amp;E,@&gt;_???0C???&lt;@????\0@@@GL@@@A3????\????7O???=3????\????7O???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????\0@@@GO???=3????@O???0C????9&amp;E,@&gt;_???0C???&lt;@????@O???7L@@@A3????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???7O???&lt;@????@O???0C????9&amp;E,@&gt;_???0C???&lt;@????@O???0C???=3????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C????9&amp;E,@&gt;_???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C?????&amp;E,@&gt;_???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C?????&amp;E,@?????0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@?????9![@M.XV0@F&amp;E,@?9![@O&gt;XV0@@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O?????????[????A/??????????????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????')))] once</body><body package="Debugger-UI">nextLoop	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'nextLoop.png'&gt;	&lt;md5sum: #[144 147 188 244 181 129 249 179 178 46 245 128 178 130 74 4]&gt;	^[AlphaCompositedImage image: ((Image extent: 24@24 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????%/S4=??4=O_?=OS7%/S4=0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@??????S4=?&gt;$)JS?)JR$??S4=0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@ (JB@HJB  BB (H@ (JB@HJB  BB (H@ (JBFHJB #NB (H9 (JB@HJB  BB (H@ (JB??S4=?&gt;Y&amp;Y''?&amp;Y&amp;Y??S4=0BB (H@????@O???0C???&lt;@????@O???0C???&lt;@ (JB@HJB  BB (H@ (JB@HJB %*B (KC (JB?86M#_&gt;Z&amp;)+?''Y6]%/S4=??4=O_?=OS7??S4=?&gt;I"X''?"X&amp;I??S4=??4=O_?=OS7%/S4=0C???&lt;@????@O???0C???&lt;@ (JB@HJB  BB (HR (JB$HJB /&gt;X&amp;I#?8NC ??3&lt;?O?:&gt;//?&gt;_'':??S4=?=6]''[?]''Y6?7Y6]/=6]''[?]''Y6?7Y6]/=6]''[?]''Y6??S4=0C???&lt;@????@O???0C???&lt;@ (JB@HJB "6B (K? 8NC?;6=/_?:&gt;/+??O3=??3&lt;?O?:&gt;//?&gt;O#9??S4=?=!XVG?XVE!?6E!X_=!XVG?XVE!?6E!X_=!XVG?XVE!??S4=0C???&lt;@????@O???0C???&lt;@ (JB@HJB )ZB (K?2\''J??3&lt;?O?-=_G?3^[T??/;?O?9&gt;_+?=?_8??S4=??4=O_?=OS7??S4=?=MST7?ST5M??S4=??4=O_?=OS7%/S4=0C???&lt;@????@O???0C???&lt;@ (JBU8JB /&gt;$)JS?&gt;/+;??+:&gt;??];.K?A(T%?6F5^??!;.[?=_W7??K2=O?.;/G?:&gt;/.??S4=?&lt;:N#+?N#(:??S4=0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@ (JB0HJB /?Z6-/?&gt;O#9??#8&gt;/?\;NK?A(T%?1=&gt;E_&lt;L##S?][2L?&gt;S*:_?+:&gt;??9&gt;_+??S4=?&lt;*J"+?J"(*??S4=0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;U (JB?8.K#O?3&lt;?W?=_W7??[6=??Y:]??A(T%?353@O=@ 0O?IH8W?1ZRO_&gt;M0:C?9NS(%/S4=??4=O_?=OS7%/S4=0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;&lt; (JB?92\''_?2&lt;/S?&lt;/K4??K2=O?V9-3?A(T%?353@O=E 0C?S)L@?4R\BO&lt;#%!+?J))M?:KG,O?\7NC?6-+^?&lt;WE2LNB (H@????@O???0C???&lt;@????@O???0C???=H (JB?:F!(/?/;?G?;&gt;?1?&gt;;.&lt;_?R8-+?A(T%?353@O=E 0C?S)L@?5V!@O=A(P3?GIP]?3R\U_?B4\+?6]'']?&lt;''I3L&gt;B (H@????@O???0C???&lt;@????@O???0C???&lt;- (JB?9VU%_?,;N??:&gt;/.?&gt;+*;/?N7-W?A(T%?353@O=E 0C?O)DH?2FRF/&lt;$%4#?%&lt;F&amp;?=''Y7_?Y6]7?6]'']?&lt;C@0;^B (H@????@O???0C???&lt;@????@O???0C???&lt;C (JB?8NC ??!8^W?9&gt;_+?&gt;[&amp;:/?I6]K?A(T%?3U6A_&lt;_!!_?E9H=?8V;&amp;O?Y6]7?6]'']?=''Y7_?Y6]7?6]'']?:2,+''.B (H@????@O???0C???&lt;@????@O???0C???&lt;@ (JB!HJB /&gt;5-[_?9NS(?&gt;K"9/?G5&lt;??A(T%?06NM_=7-X3?4][W?=''Y7_?Y6]7?6]'']?=''Y7_?Y6]7?5MSX?8.K#A.B (H@????@O???0C???&lt;@????@O???0C???&lt;@ (JBF8JB /&gt;D!HS?4]GT?&gt;C 9O?I5-G?X*9;?&lt;3T4/?Y6]7?6]'']?=''Y7_?Y6]7?6]'']?=''Y7_?Y6]7?(:N$!8JB  BB (H@????@O???0C???&lt;@????@O???0C???&lt;@ (JB@HJB &amp;&amp;B (K?$)JS?=#X6??[6=??6]'']?=''Y7_?Y6]7?6]'']?=''Y7_?Y6]7?6]'']?=''Y7_&gt;8.K._ (JB@HJB  BB (H@????@O???0C???&lt;@????@O???0C???&lt;@ (JB@HJB  BB (JG (JB?8.K#O?@0LO?6]'']?=''Y7_?Y6]7?6]'']?=''Y7_?Y6]7?5MSX?:F!()&gt;B (H6 (JB@HJB  BB (H@????@O???0C???&lt;@????@O???0C???&lt;@ (JB@HJB  BB (H@ (JBS(JB +^B (K?''I2]?;^7./?H2L/?2L#K?&lt;KB1_&gt;,+J;?"(*K!8JB  BB (H@ (JB@HJB  BB (H@????@O???0C???&lt;@????@O???0C???&lt;@ (JB@HJB  BB (H@ (JB@HJB  BB (IK (JB''HJB ,2B (KL (JB/XJB ''.B (HX (JB@HJB  BB (H@ (JB@HJB  BB (H@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????')))] once</body><body package="Debugger-UI">oneShotBreakpoint	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'oneShotBreakpoint.png'&gt;	&lt;md5sum: #[151 150 79 234 79 22 239 229 88 64 192 4 230 168 63 63]&gt;	^[AlphaCompositedImage image: ((Image extent: 24@24 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@O???0C???&lt;@????@O???0C???&lt;@????@O???1T@@@A\DA@1$!,[T+L$IF?SJ"*B42(* +L$IF&gt;RF1-RWA@PLQT@@@@@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;E@@@@$Q\WQ.\4MI??SD3(?5MS??=ST???S4?2?5MS??=ST???T5O??41L:N\4MI&gt;QE1]FAP@@@@C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???3XMCR/FG1=(?$YF;O=LSO??SD3??4]G4?=#X8??"H"]?4)J /=@PL;?RT''6?41L??=LSO?&gt;Q$[,1!&lt;_ZCXMCR,@????@O???0C???&lt;@????@O???0C???&lt;@????]QLSR.\-KZ3?P4O??4MC??=CP???M3^&gt;?4A@&amp;O???????????8^G''_=MSXO? HB[?49N$O&lt;?O&gt;;?P4O??4MC?&gt;\-KZ15D1MJ@O???0C???&lt;@????@O???0C???&lt;6B (+92 (+O&lt;;N???N3/??3\7;/=HRH;?ZV%&lt;?3T5"/???????????9NS)/=PTH''??????=WU5_&lt;3L&lt;_?N3/??3,;??&lt;;N??''JB",M (JJ0C???&lt;@????@O???0T@@@CFEAQ(?3H2??&lt;2L/??L#K??3L3&amp;_?8&gt;O#?.++B?2(*]/???????????9:^+/=KR8G??????&gt;C 8O&lt;+J:S?K2?/?3H2??&lt;2L/??L#K?1!PTZ@T@@@@@????@O???9DLCD[&gt;I2_,?2(*??&lt;*J/??J"+??2&lt;/''O?;&gt;?/?5]WU?2L#X/???????????:.+-?=FQ''+??????&gt;/+:?&lt;$IF+?[&amp;:H?3,;%O&lt;''I&gt;3?J"+??"\'';IDLCDX@????EP@@@N\UEY??HRG??2D!??&lt;!H_??HRG??2(*(O?8&gt;O#?:N#(?18^S????????????;&amp;90O=APWO???????[6=/&lt; HFK?8NC ??_7=?=FQ)C?HRG??2D!?&gt;\UEY&lt;U@@@@W@TEL_&lt;WE&gt;#?FQ''??1$Y??&lt;YF_??FQ''??2X&amp;(??5=_W?&gt;?/;?1,[O/?=?_7??????&lt;[F2O&lt;=OV3???????????&lt;^G%7?6]''Y??????=VU)+?FQ''??1$Y??&lt;WE&gt;!\APT1$ TET/&lt;PDO??DAC??0&lt;O;_&lt;OC?O?DAC??1&lt;_)??2&lt;/K??????10\N??;&gt;?/??????=GQ4_&lt;&lt;OFS???????????&lt;^G&amp;C?4=OS??????=_W9''?DAC??1@P??&lt;PDO&gt;RAPUR,0LC[?&lt;HBO/?H2N ?7!8''O=NS(''?B@#)?1$Y*/?.;.;??????2@ OO?9&gt;_''??????=''Y6_&lt;;N5;???????????&lt; HFO?2&lt;/M??????=''Y9_?B@#??0 H??&lt;HBO&gt;3@0M/40@@ /&lt;@@O_?XFBM???????=?_7?W%:O?1LS"??+:&gt;/??????79&gt;$??0&lt;OC?1&lt;''K?;J5-?&gt;(*K#???????????=0\IG?7-; ??????=(ZI_?@@C??0@@??&lt;@@O?S@@BB40@@_?&lt;@@O#?E1^.?=GQ5????????????6)* /?(:N#???????????&lt;-M37?DA,"?1@[H/?:&gt;?/???????????????????????????=(ZI[?@@C8?0@@&gt;O&lt;@@O#S@@A?,0@@Z_&lt;@@OK?@@C2?4]G!/?????????????????????????????????H2,3?%92_?1@[H/?:&gt;?/???????????????????????????=(ZI_?@@C2?0@@&lt;/&lt;@@OJ3@@A)$ @@SO&lt;@@N3?@@C,?0$I0/&gt;$)K[?????????????????????????????????(:^*?1@[H/?:&gt;?/???????????????????????????=UUY''?@@C,?0@@;O&lt;@@N2R@@ALW@@@KO&lt;@@MC?@@C%?0@@9_&lt;/K8S?;^7.????????????????????????????(:^*?1@[H/?:&gt;?/???????????????????????????&lt;:N)[?@@C%?0@@9_&lt;@@MA\@@@,EP@@@N\@@H/?@@C_?0@@7?&lt;@@M/?M3]:?&gt;?/;???????????????????????(:^*?1@[H/?:&gt;?/??????????????????????:J"-_&lt;NC+K?@@C_?0@@7&gt;\@@H,U@@@@@O???9D@@C3&gt;@@CI?0@@6_&lt;@@M''?@@CU?3,;__?$9N[???????????&gt;&lt;/&lt;G?^W&gt;C?1@[H/&gt;9/K;?5-#Y????????????6-+_?2D!$O&lt;@@M''?@@CY? @@2YD@@C0@????@O???0T@@@CF@@AV?0@@4?&lt;@@MO?@@CS?0@@4_&lt;!HX7?_G2Z??''9&gt;_&lt;PF2K?DA,"?1@[H/&lt;PF2K?[GM7??????&gt;0,K7?K2&gt;@?0@@4?&lt;@@MO?@@CS1 @@U T@@@@@????@O???0C???&lt;6@@@"90@@"/&lt;@@L3?@@CL?0@@3O&lt;@@L3?@PF&lt;?3P4 ?=''Y9C?,+J&lt;?&gt;#(:O?X6M#?/[7B?45M^O&lt;MCY3?@@CL?0@@3O&lt;@@L3''@@BJM @@H C???&lt;@????@O???0C???&lt;@????]P@@N^\@@H[?@@CF?0@@1/&lt;@@L[?@@CF?0@@1/&lt;@@L[?@0N)?1TU#_&lt;JB)''?@@B&amp;?0@@0?&lt;@@L[?@@CF?0@@1.\@@HY5@@@9@O???0C???&lt;@????@O???0C???&lt;@????@O???3X@@BCF@@AO? @@,?&lt;@@LG?@@CA?0@@0_&lt;@@LG?@@CA?0@@0_&lt;@@LG?@@CA?0@@0_&lt;@@LG&gt;@@B31 @@S3X@@B@@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;E@@@@$P@@M^\@@G#?@@B0?0@@0_&lt;@@LG?@@CA?0@@0_&lt;@@LG?@@CA?0@@,N\@@G"Q@@@5AP@@@@C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???1T@@@A\@@@%$ @@O+L@@ESS@@A#40@@X;L@@ERR@@@&gt;W@@@IQT@@@@@????@O???0C???&lt;@????@O???0C???&lt;@????')))] once</body><body package="Debugger-UI">pause	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'pause.png'&gt;	&lt;md5sum: #[56 234 140 232 118 0 162 10 203 19 40 213 115 228 124 147]&gt;	^[AlphaCompositedImage image: ((Image extent: 24@24 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@?????3&gt;-9?&lt;=*NC?N:OZ?3*^5@C???&lt;@????@O????&lt;?+^_?OZ#!?3.#6?&lt;:''-P@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@?????32$6?&lt;,]Y;?OZ# ?3^U2@C???&lt;@????@O????&lt;&lt;)M3?KGV^?36(8O&lt;7%,$@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@?????3&amp;[4O&lt;,]Y;?OZ# ?3RL/@C???&lt;@????@O????&lt;9&amp;=C?KGV^?36(8O&lt;4#[4@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@?????3ZR1O&lt;,]Y;?OZ# ?3FD,PC???&lt;@????@O????&lt;6$,S?KGV^?36(8O&lt;1!KD@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@?????3NI.O&lt;,]Y;?OZ# ?29;)PC???&lt;@????@O????&lt;3"[''?KGV^?36(8O&lt;.^:T@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@?????3B@+_&lt;,]Y;?OZ# ?2-2&amp; C???&lt;@????@O????&lt;0 J7?KGV^?36(8O&lt;+\)(@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@?????258(_&lt;,]Y;?OZ# ?2!)# C???&lt;@????@O????&lt;-^JG?KGV^?36(8O&lt;(ZX8@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@?????2)/%_&lt;,]Y;?OZ# ?2U   C???&lt;@????@O????&lt;*[9W?KGV^?36(8O&lt;%XHH@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@?????2]&amp;"/&lt;,]Y;?OZ# ?2MZ^ C???&lt;@????@O????&lt;''Y(+?KGV^?36(8O&lt;#V''(@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@?????2Q]_/&lt;,]Y;?OZ# ?2MZ^ C???&lt;@????@O????&lt;$WW;?KGV^?36(8O&lt;#V''(@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@?????2MZ^/&lt;,]Y;?OZ# ?2MZ^ C???&lt;@????@O????&lt;#V''+?KGV^?36(8O&lt;#V''(@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@?????2MZ^/&lt;,]Y;?OZ# ?2MZ^ C???&lt;@????@O????&lt;#V''+?KGV^?36(8O&lt;#V''(@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@?????2MZ^/&lt;,]Y;?OZ# ?2MZ^ C???&lt;@????@O????&lt;#V''+?KGV^?36(8O&lt;#V''(@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@?????2MZ^/&lt;,]Y;?OZ# ?2MZ^ C???&lt;@????@O????&lt;#V''+?KGV^?36(8O&lt;#V''(@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@?????2MZ^/&lt;#V''+?H5):?2MZ^ C???&lt;@????@O????&lt;#V''+?H5):?2MZ^/&lt;#V''(@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????')))] once</body><body package="Debugger-UI">restart	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'restart.png'&gt;	&lt;md5sum: #[179 99 176 114 148 127 237 150 211 255 171 26 140 145 253 32]&gt;	^[AlphaCompositedImage image: ((Image extent: 24@24 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt; @@@@@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???2@@@@C @@@@HO???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????H@@@@N@@@@C?@@@@8O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????0@@@@O&lt;@@@C?@@@@?1TUE[\@@@BC@@@@IP@@@@C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????H@@@@O\XFA#?@@@@?&gt;C 8OF%)ZW_WU5]=P(JB(X(JB B@@@@@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???317]7_;F1,[?????1????=U????'',_G1?(9NS''XIRT%AHB@ @C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&gt;P@@@@R@@@@@C???&lt;@????@O???0C???&lt;&lt;]7]78O???0C???&lt;@????@O???2W1&lt;_G0LSD16G):^ K???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???2D@@@C-@@@@&amp;M?_74#???&lt;@????@O???0C???&lt;@????HO???0C???&lt;@????@O???0C???&lt;%C 8N&gt; &lt;OC8Z9.[$@????@O???0C???&lt;@????@O???0C???&lt;@????@O???9L@@@BQGA0\;_???1O???&lt;@????A\2Y@F__*A''Z9+=W6NV9R&amp;+]*2HE3I$@@O???0C???&lt;@????''!(ZF/U7]7\%????@O???0C???&lt;@????@O???0C???&lt;@????@O???&lt; @@@B),[F1 _???0C???&lt;@????[NB/J??+2''_?;=RQ?&gt;/H]/?#,39!6*@H@O???0C???&lt;@????U @@@M&lt;.K":C????@O???0C???&lt;@????@O???0C???&lt;@????@O???&gt;&lt;@@@CK:&gt;/+MO???0C???&lt;@????4M:(GO?''0E7?:\E(?&gt;/D\??''/E/K8J0+@O???0C???&lt;@????H @@@ODGA0^7????@O???0C???&lt;@????@O???0C???&lt;@????@O???&gt;(@@@C18NC DO???0C???&lt;@????2=.]@O?",C''?:&lt;Q3??SX+_?+1GOK8+@9@O???0C???&lt;@????H @@@N4C@0O*????@O???0C???&lt;@????@O???0C???&lt;@????@O???;\@@@C1):^''G_???0C???&lt;@????X]*^@O? +B/?9;1[?&gt;/D\??''/E-!7:,*@O???0C???&lt;@????U @@@LDMCP7*????@O???0C???&lt;@????@O???0C???&lt;@????@O???8L@@@C_WU5]T????0C???&lt;@????A\2Y@FGZ(@#K8J0+2&gt;J0NVG_*2(E3I$@@O???0C???&lt;@????# @@@J4&gt;O#:7????@O???0C???&lt;@????@O???0C???&lt;@????@O???2T@@@C5B (J'',_G10C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;#@@@@:0@@@I;C0&lt;NC????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&gt;FJB (&gt;#$9NRW1&lt;_D@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0H@@@CB@@@@!BT%I^/???&lt;%????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;B@@@@6BT%I_@1LSD%C 8N@O???0C???&lt;@????@O???0C???&lt;@????H0@@@LH@@@B:@PDA0/3&lt;?GG???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????AHB@ M!:^''+:C0&lt;O''!(ZF%X@@@@"@@@@H @@@EX@@@BN@@@@:0@@@HP%IRWB?O3&lt;._???0K???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0K???&gt;F.[&amp;9=W]7]=&lt;.K";1A0\G;PLC@&lt;DMCP6-O#8&gt;'',OC0&gt;/???=1????@/???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????I_???8O???&gt;7????:/???&gt;+???&gt;7???? ????2W???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????')))] once</body><body package="Debugger-UI">return	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'return.png'&gt;	&lt;md5sum: #[32 46 74 76 187 78 166 156 145 37 156 52 200 50 17 57]&gt;	^[AlphaCompositedImage image: ((Image extent: 24@24 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;0@H$*A BIJ C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C????C@H$*]PBIJ C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???5\@"R+?F84\;PBIJ!H@"R(@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????A BIJ-,@"R+?N9DJ?2&amp;TE((@"R(@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????\ BIJ/&lt;_"A#?S9P@?5F_@/$@"R(^@H$*@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;R@H$*;PBIJ/&lt;&gt;!0[?S9P@?5V @O&lt;/&amp;!R%@H$*@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&gt;M@H$*?1&gt;BE/=H!0C?S9P@?5V @O=X*PC&lt;@H$*L@BIJ C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???2P@"R+9@H$*?3=;@_=H!0C?S9P@?5V @O=Y*PC?M98Q. BIJ C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???: @"R+?HG(S?4E:@O=H!0C?S9P@?5V @O=Y*PC?V:0@?1*SG$ @"R(@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????O@BIJ/&lt;K RK?CHP"?06FH/&lt;N"RK?DH,"?1FNH/&lt;R#2K?D)@"?1JPH,&lt;@"R(C@H$*@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????G BIJ#L@"R(3@H$*L0BIJ#L@"R(3@H$*L0BIJ#L@"R(3@H$*L0BIJ#L@"R(I@H$*@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????DEQTUI=''Y6^? XFA/7):^#AUUUT@@@@@@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????''6I"X/&gt;\''I3?)*Z&amp;?9ZV%.=''Y6\PUEQT@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????/7A0\O&gt;X&amp;I#?''):^?9FQ$_=1\WE@UUUU@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????/5)ZV/=;^7/?$YFQ?82L#O=+Z6,0UUUU@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????LEUUU^= XFC?\WE1?6-+Z9=YVU$@@@@@@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@@@@@AATUEQ@UUUULEUUUP@@@@@@@@@@@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????')))] once</body><body package="Debugger-UI">run	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'run.png'&gt;	&lt;md5sum: #[232 240 248 118 195 26 8 107 189 28 107 23 35 14 0 46]&gt;	^[AlphaCompositedImage image: ((Image extent: 24@24 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???;\@"R(*@H$*@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O????&lt;@"R+&lt;@H$*''@BIJ! @"R(@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O????&lt;@"R+?L6L@?15:E_L@"R);@H$*C@BIJ C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O????&lt;@"R+?MFL@?3%,@O&lt;8^PS?HHXW90BIJ&amp;L@"R(@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O????&lt;@"R+?MFL@?3%,@O&lt;?]0C?QXL@?36NBO&lt; $A+O@H$*QPBIJ C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O????&lt;@"R+?MFL@?3%,@O&lt;?]0C?QXL@?42O@O=R&amp; C?N9,M?1&amp;RG;\@"R(*@H$*@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O????&lt;@"R+?MFL@?3%,@O&lt;?]0C?QXL@?42O@O=R&amp; C?U:P@?5.+@O&lt;4''QK&lt;@H$*&amp;PBIJ! @"R(@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O????&lt;@"R+?MFL@?3%,@O&lt;?]0C?QXL@?42O@O=R&amp; C?U:P@?5.+@O&lt;4''QK&lt;@H$*&amp;PBIJ! @"R(@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O????&lt;@"R+?MFL@?3%,@O&lt;?]0C?QXL@?42O@O=R&amp; C?M9(O?1RQHZ8@"R(*@H$*@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O????&lt;@"R+?MFL@?3%,@O&lt;?]0C?QXL@?3^MB?&lt;Z#!7F@H$*NPBIJ C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O????&lt;@"R+?MFL@?3%,@O&lt;3^ #?GH\Y5PBIJ%D@"R(@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O????&lt;@"R+?K&amp;\D?1)&lt;E&gt;\@"R)&amp;@H$*@0BIJ C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O????&lt;@"R+3@H$*^0BIJ 0@"R(@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???9X@"R(R@H$*@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????')))] once</body><body package="Debugger-UI">runContext	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'runContext.png'&gt;	&lt;md5sum: #[225 123 29 181 14 193 246 132 231 142 5 111 183 12 79 208]&gt;	^[AlphaCompositedImage image: ((Image extent: 24@24 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???5(F!RULA8X%@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C?????A(T%?0ZEI_&lt;F!RT@????@O???0C???&lt;@????@O???0C???&lt;@????@O???8@F!R[&gt;A8T$20*DH3PE!B\@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C?????A(T%?4&amp;M@O&lt;F!RT@????@O???0C???&lt;@????@O???0C???&lt;@????@O???8@F!R[?HG,S?"%=C?TJ!RJ0B(T#H@"GJ@C???&lt;@????@O???0C???&lt;@????@O???0C?????A(T%?4&amp;M@O&lt;F!RT@????@O???0C???&lt;@????@O???0C???&lt;@????@O???8@F!R[?HG,S?3=9@O=@ PK:I8 R= &amp;FH9HI!"LQ@H\^@O???0C???&lt;@????@O???0C?????A(T%?4&amp;M@O&lt;F!RT@????@O???0C???&lt;@????@O???0C???&lt;@????@O???8@F!R[?HG,S?3=9@O=C PC?RH(@?4ZR@?\##Q_3BHX$] &amp;FIP\@$"P@????@O???0C?????A(T%?4&amp;M@O&lt;F!RT@????@O???0C???&lt;@????@O???0C???&lt;@????@O???8@F!R[?HG,S?3=9@O=C PC?RH(@?42S@O=P&amp;0C?RI&lt;F=A2OF&gt;$J!2MYA(P%@PC?@@C?????A(T%?4&amp;M@O&lt;F!RT@????@O???0C???&lt;@????@O???0C???&lt;@????@O???8@F!R[?HG,S?3=9@O=C PC?RH(@?42S@O=P&amp;0C?UJP@?5^*@O&lt;0&amp;AK?A(T%%P^EI C?????A(T%?4&amp;M@O&lt;F!RT@????@O???0C???&lt;@????@O???0C???&lt;@????@O???8@F!R[?HG,S?3=9@O=C PC?RH(@?42S@O=P&amp;0C?RI&lt;F=A2OF&gt;$J!2MYA(P%@PC?@@C?????A(T%?4&amp;M@O&lt;F!RT@????@O???0C???&lt;@????@O???0C???&lt;@????@O???8@F!R[?HG,S?3=9@O=C PC?RH(@?4ZR@?\##Q_3BHX$] &amp;FIP\@$"P@????@O???0C?????A(T%?4&amp;M@O&lt;F!RT@????@O???0C???&lt;@????@O???0C???&lt;@????@O???8@F!R[?HG,S?3=9@O=@ PK:I8 R= &amp;FH9HI!"LQ@H\^@O???0C???&lt;@????@O???0C?????A(T%?4&amp;M@O&lt;F!RT@????@O???0C???&lt;@????@O???0C???&lt;@????@O???8@F!R[?HG,S?"%=C?TJ!RJ0B(T#H@"GJ@C???&lt;@????@O???0C???&lt;@????@O???0C?????A(T%?4&amp;M@O&lt;F!RT@????@O???0C???&lt;@????@O???0C???&lt;@????@O???8@F!R[&gt;A8T$20*DH3PE!B\@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C?????A(T%?4&amp;M@O&lt;F!RT@????@O???0C???&lt;@????@O???0C???&lt;@????@O???5(F!RULA8X%@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C?????A(T%?0ZEI_&lt;F!RT@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????')))] once</body><body package="Debugger-UI">runToCaret	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'runToCaret.png'&gt;	&lt;md5sum: #[108 194 121 252 75 168 100 1 163 23 133 117 225 100 1 11]&gt;	^[AlphaCompositedImage image: ((Image extent: 24@24 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@?????9![@O&gt;XV0@F&amp;E,@?9![@O&gt;XV0@@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O??????????&amp;E,@A/??????????????@O???0C???&lt;@????@O???0C???&lt;@????@O???18@"R+I@H$*M BIJ C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C????9&amp;E,@?????0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???18@"R+?A(T%?02DHZT@"R($@H$*@O???0C???&lt;@????@O???0C???&lt;@????@O???0C????9&amp;E,@&gt;_???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???18@"R+?A(T%?3-0@O&lt;% 1O9@H$*#PBIJ &lt;@"R(@????@O???0C???&lt;@????@O???0C????9&amp;E,@&gt;_???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???18@"R+?A(T%?3-0@O=C_ C?Q80A?2^QE.4@"R)2@H$*A BIJ C???&lt;@????@O???0C????9&amp;E,@&gt;_???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???18@"R+?A(T%?3-0@O=C_ C?R(0@?5JZ@O=L( [?JI X60BIJ%P@"R(@????@O???0C????9&amp;E,@&gt;_???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???18@"R+?A(T%?3-0@O=C_ C?R(0@?5JZ@O=X) C?VJ,A?22ZE/@@"R)H@H$*@O???0C????9&amp;E,@&gt;_???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???18@"R+?A(T%?3-0@O=C_ C?R(0@?5JZ@O&lt;0&amp;QO9@H$*#PBIJ!H@"R(@????@O???0C????9&amp;E,@&gt;_???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???18@"R+?A(T%?3-0@O=C_ C?KH,Q?0&gt;LH*T@"R(!@H$*@O???0C???&lt;@????@O???0C????9&amp;E,@&gt;_???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???18@"R+?A(T%?2%8C_&lt;S!!:=@H$*L@BIJ C???&lt;@????@O???0C???&lt;@????@O???0C????9&amp;E,@&gt;_???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???18@"R+?A(T%4 BIJ$ @"R(@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C????9&amp;E,@&gt;_???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???1H@"R)#@H$*@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C?????&amp;E,@&gt;_???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C?????&amp;E,@?????0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@?????9![@M.XV0@F&amp;E,@?9![@O&gt;XV0@@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O?????????[????A/??????????????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????')))] once</body><body package="Debugger-UI">step	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'step.png'&gt;	&lt;md5sum: #[145 228 133 168 11 153 232 217 139 245 81 44 214 175 184 60]&gt;	^[AlphaCompositedImage image: ((Image extent: 24@24 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???20@@@BY@@@@7 @@@O&lt;@@@C?@@@@?0@@@O&lt;@@@C?@@@@?0@@@O&lt;@@@C?@@@@8@@@@J@@@@@5@@@@@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???9$@@@B*F1,[*L_G1=;??????????????????????????????????????????=3\7OI#X6O^PDA@M_???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???=8@@@B&amp;3L3L&amp;O???2W???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???4Q1\WG2EAPT)/???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O????&lt;@@@C^????H_???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt; @@@@8@@@@O&lt;@@@C?@@@@?0@@@N@@@@@ @@@@@O???0C???&lt;@????@O???0C???&lt;@????@O????&lt;@@@C?????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????OG]7]?,[F1/?@@@@?1&lt;_G??_7=? ????HO???0C???&lt;@????@O???0C???&lt;@????@O????&lt;@@@C?????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???317]7_7NS$9?=?_7&gt;C???&lt; ????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C?????????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt; ????0O???2C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;E3I$@Y=&gt;(F]+&amp;/5_X9[%JZ-6+H WL&amp;P@@????@O???0C???&lt;@????@O???0C???&lt;@????A\2Y@F__*A''Z9+=W6NV9R&amp;+]*2HE3I$@@O???0C???&lt;@????@O???0C???=,8J&lt;+?&gt;/J]??/5IG?:&lt;!6?&gt;N3O&amp;GZ(@ @????@O???0C???&lt;@????@O???0C???&lt;@????[NB/J??+2''_?;=RQ?&gt;/H]/?#,39!6*@H@O???0C???&lt;@????@O???0C????P7* \?&gt;_@W_?)0V#?:&lt;Q3?&gt;^&lt;V&lt;/ +B,@????@O???0C???&lt;@????@O???0C???&lt;@????4M:(GO?''0E7?:\E(?&gt;/D\??''/E/K8J0+@O???0C???&lt;@????@O???0C????K694@?&gt;J0N_?+1GO?=M"-?&gt;/D\&lt;/",C$@????@O???0C???&lt;@????@O???0C???&lt;@????2=.]@O?",C''?:&lt;Q3??SX+_?+1GOK8+@9@O???0C???&lt;@????@O???0C???=!6)8@?&gt;B,J??''/E/?:&lt;Q3?&gt;^&lt;V6G_*2(@????@O???0C???&lt;@????@O???0C???&lt;@????X]*^@O? +B/?9;1[?&gt;/D\??''/E-!7:,*@O???0C???&lt;@????@O???0C???&lt;E3I$@X]* BL/ +B/K8+@9X]&gt;+J WL&amp;P@@????@O???0C???&lt;@????@O???0C???&lt;@????A\2Y@FGZ(@#K8J0+2&gt;J0NVG_*2(E3I$@@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????')))] once</body><body package="Debugger-UI">stepInto	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'stepInto.png'&gt;	&lt;md5sum: #[215 208 3 127 221 55 92 179 48 66 90 248 129 199 59 157]&gt;	^[AlphaCompositedImage image: ((Image extent: 24@24 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???50@@@B]@@@@4P@@@O\@@@CP@@@@''@@@@E,@@@@@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????[0@@@ML@@@B^U5]W,:&gt;/+=W''9&gt;_91,[F88&amp;I"^&lt;ZF!*_U5]W@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????5@@@@H2"(*KS????ZO???3#???&lt;T????NO???82T%IS8JR$)Z_???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@?????@@@@MW8&gt;O 3????@O???0C???&lt;@????@O???0$@@@C&lt;@PDA4O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@?????0@@@O3???&lt;F????@O???0C???&lt;@????@O???0C?????@@@@&gt;????0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@?????0@@@O????&lt;@????@O???0C???&lt;@????@O???0C?????@@@@?????0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O????????&lt;@????@O???0C???&lt;@????@O???0C?????@@@@?????0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0WL&amp;PA''7: Y6.Z?U=#%.T)*7Z,"A\2Y@@C???&lt;@????@O???0C?????@@@@?????0C???&lt;@????@O???0WL&amp;PA''7: Y6.Z?U=#%.T)*7Z,"A\2Y@@C???&lt;@????@O???63 +2/?:&lt;)7?&gt;?T$_?+2G[?8;L&gt;X]* B@C???&lt;@????@O???0C?????@@@@?????0C???&lt;@????@O???63 +2/?:&lt;)7?&gt;?T$_?+2G[?8;L&gt;X]* B@C???&lt;@????@O???=C^*A3?9&lt;A]?&gt;''AZO?+1GO?9;1[2&gt;B,J0C???&lt;@????@O???0C?????@@@@?????0C???&lt;@????@O???=C^*A3?9&lt;A]?&gt;''AZO?+1GO?9;1[2&gt;B,J0C???&lt;@????@O???&lt;/[''PC?8+@9?&gt;/D\??46J7?:&lt;Q32&gt;J0NPC???&lt;@????@O???0C?????@@@@?????0C???&lt;@????@O???&lt;/[''PC?8+@9?&gt;/D\??46J7?:&lt;Q32&gt;J0NPC???&lt;@????@O???6GZ'' C?8J0+?&gt;^&lt;V??+1GO?9;1[X]&gt;+J C???&lt;@????@O???0C?????@@@@?????0C???&lt;@????@O???6GZ'' C?8J0+?&gt;^&lt;V??+1GO?9;1[X]&gt;+J C???&lt;@????@O???0WL&amp;PA!6*@H2&gt;B,J&lt;/",C%!7:,*A\2Y@@C???&lt;@????@O???0C?????@@@@?????0C???&lt;@????@O???0WL&amp;PA!6*@H2&gt;B,J&lt;/",C%!7:,*A\2Y@@C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C?????@@@@?????0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt; @@@@8@@@@O&lt;@@@C?@@@@?0@@@N@@@@@ @@@@@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????OG]7]?,[F1/?@@@@?1&lt;_G??_7=? ????HO???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???317]7_7NS$9?=?_7&gt;C???&lt; ????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt; ????0O???2C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????')))] once</body><body package="Debugger-UI">stepOver	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'stepOver.png'&gt;	&lt;md5sum: #[33 230 181 197 146 126 159 129 152 49 161 184 112 155 202 17]&gt;	^[AlphaCompositedImage image: ((Image extent: 24@24 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@ @@@GD@@@B0@@@@:@@@@O&lt;@@@C?@@@@?0@@@O&lt;@@@C?@@@@?0@@@O&lt;@@@C?@@@@?0@@@NLC@0N$A XFMP@@@@C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????" @@@LD@@@B''^''):2M[V5/K????(????:O???&gt;#????(????:O???&gt;#????(????:O???&gt;/Y6]'':ZF!(:$)JR%_???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????:@@@@H7B0,KA????P????07???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;/LSD1;@8NC,3???&lt;@????@O???0C???&lt;@????@O???0C???&lt;A@@@@? @@@L7???&lt;&lt;????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????H@@@@N@@@@C?@@@@?0@@@O&lt;@@@C!@PDAH@@@@@C???&lt;@????@O???0C???&lt;C@@@@?@@@@NG???&lt;^????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???317]7_;F1,[?0@@@O&lt;_G1??7=?_8O???2C???&lt;@????@O???0C???&lt;F@@@@&gt;P@@@NS???&lt;[????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;&lt;]7]7=3$9N_?_7=? ????HO???0C???&lt;@????@O???0C???&lt;@????@O???=G???&lt;V????@O???0C???&lt;@?????0@@@O&lt;@@@@@?????0@@@O&lt;@@@@@????@O???0C???&lt;@????HO???&lt;C???&lt; ????@O???0C???&lt;@????@O???0WL&amp;PA''7: Y6.Z?U=#%.T)*7Z,"A\2Y@@C???&lt;@?????0@@@O????????????????&lt;@@@@@????@O???0WL&amp;PA''7: Y6.Z?U=#%.T)*7Z,"A\2Y@@C???&lt;@????@O???63 +2/?:&lt;)7?&gt;?T$_?+2G[?8;L&gt;X]* B@C???&lt;@?????0@@@O????&lt;@????@O????&lt;@@@@@????@O???63 +2/?:&lt;)7?&gt;?T$_?+2G[?8;L&gt;X]* B@C???&lt;@????@O???=C^*A3?9&lt;A]?&gt;''AZO?+1GO?9;1[2&gt;B,J0C???&lt;@?????0@@@O????&lt;@????@O????&lt;@@@@@????@O???=C^*A3?9&lt;A]?&gt;''AZO?+1GO?9;1[2&gt;B,J0C???&lt;@????@O???&lt;/[''PC?8+@9?&gt;/D\??46J7?:&lt;Q32&gt;J0NPC???&lt;@?????0@@@O????&lt;@????@O????&lt;@@@@@????@O???&lt;/[''PC?8+@9?&gt;/D\??46J7?:&lt;Q32&gt;J0NPC???&lt;@????@O???6GZ'' C?8J0+?&gt;^&lt;V??+1GO?9;1[X]&gt;+J C???&lt;@?????0@@@O????&lt;@????@O????&lt;@@@@@????@O???6GZ'' C?8J0+?&gt;^&lt;V??+1GO?9;1[X]&gt;+J C???&lt;@????@O???0WL&amp;PA!6*@H2&gt;B,J&lt;/",C%!7:,*A\2Y@@C???&lt;@?????0@@@O????&lt;@????@O????&lt;@@@@@????@O???0WL&amp;PA!6*@H2&gt;B,J&lt;/",C%!7:,*A\2Y@@C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@?????0@@@O&lt;@@@@@?????0@@@O&lt;@@@@@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O????????????????????????&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????')))] once</body><body package="Debugger-UI">terminate	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'terminate.png'&gt;	&lt;md5sum: #[181 53 58 193 181 245 226 136 138 16 93 14 227 106 178 34]&gt;	^[AlphaCompositedImage image: ((Image extent: 24@24 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@0AN;&amp;X@S.8@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0$@S.9 @D;.@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;C@D;.( AN;/&lt;@S.:V@D;.@O???0C???&lt;@????@O???0C???&lt;@????BPAN;+4@S.;?@D;._ AN; C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???=)@D;.?0AN;/&lt;@S.;?@D;.!0AN; C???&lt;@????@O???0C???&lt;F@D;.-0AN;/&lt;@S.;?@D;.&lt;0AN;!8@S.8@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;C@D7,''0AM;O&lt;@S^3?@D7,?0AM;GT@S^0@????@O???0X@S^21@D7,?0AM;O&lt;@S^33@D7,O@AM;@C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???9$@RN#?@D#(?0AH:O&lt;@RN!&amp;@D#(@0AH:J,@RN#?@D#(?0AH:OL@RN &lt;@D#(@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&gt;S@DK!?0AB8_&lt;@P.G&lt;@DK!1 AB8_&lt;@P.G?@DK!&lt;0AB8S0@P.D@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????!0@;6/&lt;@N=+?@C/Z?0@;6/&lt;@N=+3@C/ZO@@;6 C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????C@@34.D@L=K?@COR?0@34/&lt;@L=J\@COR@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;L@R+I00D*2_&lt;AJ,''?@R+I?0D*2_&lt;AJ,''?@R+I_ D*2PC???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???00AH,CC@RK@?0D"0O&lt;AH,C&lt;@RK@00D"0O&lt;AH,C?@RK@?0D"0G8AH,@@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????C@DZ.LLAF+#?@Q*8?0DZ.O$AF+!T@Q*8@0DZ.JTAF+#?@Q*8?0DZ.O&lt;AF+!&gt;@Q*8@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;L@QJ000DR,O&lt;AD+C?@QJ0= DR,D8AD+@@????@O???0LAD+B%@QJ0?0DR,O&lt;AD+C?@QJ0_ DR,@C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???=W@P.)?0DK*_&lt;AB:''6@P.)P DK*PC???&lt;@????@O???0C???&lt;C@P.))PDK*_&lt;AB:''?@P.);PDK*Q8AB:$@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????U@DE(&gt;(AAZL&lt;@PV#@O???0C???&lt;@????@O???0C???&lt;@????@0DE(:TAAZO[@PV#I@DE(0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0XA@Y&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0LA@Y&lt;O@PF_@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????')))] once</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient2 class</class-id> <category>resources</category><body package="Debugger-UI">bookmarkMenu	"Tools.MenuEditor new openOnClass: self andSelector: #bookmarkMenu"	&lt;resource: #menu&gt;	^#(#{UI.Menu} #(			#(#{UI.MenuItem} 				#rawLabel: #(#{Kernel.UserMessage} #key: #_Set #defaultString: '&amp;Set' #catalogID: #pdp) 				#nameKey: #addTag 				#value: #addTag 				#enablementSelector: #canAddTag ) 			#(#{UI.MenuItem} 				#rawLabel: #(#{Kernel.UserMessage} #key: #_Clear #defaultString: '&amp;Clear' #catalogID: #pdp) 				#nameKey: #removeTag 				#value: #removeTag 				#enablementSelector: #canRemoveTag ) ) #(2 ) nil ) decodeAsLiteralArray</body><body package="Debugger-UI">contextMenu	"Tools.MenuEditor new openOnClass: self andSelector: #contextMenu"	&lt;resource: #menu&gt;	^#(#{UI.Menu} #(			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_Browse 					#defaultString: '&amp;Browse' 					#catalogID: #pdp ) 				#nameKey: #browseClass 				#value: #browseClass 				#enablementSelector: #hasValidContext ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_Senders 					#defaultString: '&amp;Senders' 					#catalogID: #pdp ) 				#nameKey: #allSenders 				#value: #browseAllSenders 				#enablementSelector: #hasValidContext ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #I_mplementors 					#defaultString: 'I&amp;mplementors' 					#catalogID: #pdp ) 				#nameKey: #allImplementors 				#value: #browseAllImplementors 				#enablementSelector: #hasValidContext ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #HierarchySe_nders 					#defaultString: 'Hierarchy Se&amp;nders' 					#catalogID: #pdp ) 				#nameKey: #localSenders 				#value: #browseLocalSenders 				#enablementSelector: #hasValidContext ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #HierarchyIm_plementors 					#defaultString: 'Hierarchy Im&amp;plementors' 					#catalogID: #pdp ) 				#nameKey: #localImplementors 				#value: #browseLocalImplementors 				#enablementSelector: #hasValidContext ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #Select_HomeContext 					#defaultString: 'Select &amp;Home Context' 					#catalogID: #pdp ) 				#value: #selectHomeContext 				#enablementSelector: #canSelectHome 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #homeContext ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_CorrectSelector 					#defaultString: '&amp;Correct Selector' 					#catalogID: #pdp ) 				#nameKey: #correctSpelling 				#value: #correctSpelling 				#enablementSelector: #canCorrectSpelling ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_DefineMethod 					#defaultString: '&amp;Define Method' 					#catalogID: #pdp ) 				#nameKey: #defineMethod 				#value: #defineMethod 				#enablementSelector: #canDefineMethod ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_Inspect 					#defaultString: '&amp;Inspect' 					#catalogID: #pdp ) 				#nameKey: #inspectContext 				#value: #inspectContext 				#enablementSelector: #hasValidContext 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #inspector ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #Browse_Versions 					#defaultString: 'Browse &amp;Versions' 					#catalogID: #pdp ) 				#nameKey: #browseVersions 				#value: #browseVersions 				#enablementSelector: #hasValidContext ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #Re_vertDots 					#defaultString: 'Re&amp;vert...' 					#catalogID: #pdp ) 				#nameKey: #revert 				#value: #revert 				#enablementSelector: #enableDebugCommand ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_Bookmark 					#defaultString: '&amp;Bookmark' 					#catalogID: #pdp ) 				#nameKey: #bookmarkMenu ) ) #(1 2 2 4 2 1 ) nil ) decodeAsLiteralArray</body><body package="Debugger-UI">executeMenuDefault	"Tools.MenuEditor new openOnClass: self andSelector: #executeMenuDefault"	&lt;resource: #menu&gt;	^#(#{UI.Menu} #(			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #Step_Into 					#defaultString: 'Step &amp;Into' 					#catalogID: #IDE ) 				#nameKey: #send 				#value: #send 				#enablementSelector: #enableSendCommand 				#shortcutKeyCharacter: #F5 				#shortcutModifiers: 0 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #stepInto ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_Step 					#defaultString: '&amp;Step' 					#catalogID: #IDE ) 				#nameKey: #stepIntoBlock 				#value: #stepIntoBlock 				#enablementSelector: #enableSendCommand 				#shortcutKeyCharacter: #F6 				#shortcutModifiers: 0 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #step ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #Step_Over 					#defaultString: 'Step &amp;Over' 					#catalogID: #IDE ) 				#nameKey: #step 				#value: #step 				#enablementSelector: #canIssueContextCommand 				#shortcutKeyCharacter: #F7 				#shortcutModifiers: 0 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #stepOver ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #R_estart 					#defaultString: 'R&amp;estart' 					#catalogID: #IDE ) 				#nameKey: #reenter 				#value: #reenter 				#enablementSelector: #canIssueContextCommand 				#shortcutKeyCharacter: #F8 				#shortcutModifiers: 0 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #restart ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_Run 					#defaultString: '&amp;Run' 					#catalogID: #IDE ) 				#nameKey: #continue 				#value: #continue 				#enablementSelector: #canRun 				#shortcutKeyCharacter: #F9 				#shortcutModifiers: 0 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #run ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #RunUntilR_eturn 					#defaultString: 'Run until R&amp;eturn' 					#catalogID: #IDE ) 				#nameKey: #firstLoop 				#value: #firstLoop 				#enablementSelector: #canIssueContextCommand 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #runContext ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #RunWithBrea_kAgain 					#defaultString: 'Run with Brea&amp;k Again' 					#catalogID: #IDE ) 				#nameKey: #nextLoop 				#value: #nextLoop 				#enablementSelector: #canDoNextLoop 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #nextLoop ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #RunTo_Caret 					#defaultString: 'Run to &amp;Caret' 					#catalogID: #IDE ) 				#nameKey: #skip 				#value: #skipToCaret 				#enablementSelector: #canIssueContextCommand 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #runToCaret ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_JumpToCaret 					#defaultString: '&amp;Jump to Caret' 					#catalogID: #IDE ) 				#nameKey: #jump 				#value: #jumpToCaret 				#enablementSelector: #canIssueContextCommand 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #jumpToCaret ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #Ret_urnDots 					#defaultString: 'Ret&amp;urn...' 					#catalogID: #IDE ) 				#nameKey: #return 				#value: #return 				#enablementSelector: #canIssueContextCommand 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #return ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_Pause 					#defaultString: '&amp;Pause' 					#catalogID: #IDE ) 				#nameKey: #pauseDebugOperation 				#value: #pauseDebugOperation 				#enablementSelector: #isBusy 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #pause ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_Terminate 					#defaultString: '&amp;Terminate' 					#catalogID: #IDE ) 				#value: #closeRequest 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #terminate ) ) ) #(4 4 2 2 ) nil ) decodeAsLiteralArray</body><body package="Debugger-UI">mainMenu	"Tools.MenuEditor new openOnClass: self andSelector: #mainMenu"	&lt;resource: #menu&gt;	^#(#{UI.Menu} #(			#(#{UI.MenuItem} 				#commandID: #accept 				#value: #acceptDocument ) 			#(#{UI.MenuItem} 				#commandID: #format 				#value: #formatDocument ) 			#(#{UI.MenuItem} 				#commandID: #cancelText 				#value: #cancelDocument ) 			#(#{UI.MenuItem} 				#commandID: #find 				#value: #openFind ) 			#(#{UI.MenuItem} 				#commandID: #replace 				#value: #openFindAndReplace ) 			#(#{UI.MenuItem} 				#commandID: #findNext 				#value: #findNext 				#enabled: false 				#enablementSelector: #isFindOpen ) 			#(#{UI.MenuItem} 				#commandID: #findPrevious 				#value: #findPrevious 				#enabled: false 				#enablementSelector: #isFindOpen ) 			#(#{UI.MenuItem} 				#commandID: #undo 				#value: #undoDocumentEdit 				#enablementSelector: #canUndo ) 			#(#{UI.MenuItem} 				#commandID: #redo 				#value: #redoDocumentEdit 				#enablementSelector: #canRedo ) ) #(3 4 2 ) nil ) decodeAsLiteralArray</body><body package="Debugger-UI">menuBarMenu	"Tools.MenuEditor new openOnClass: self andSelector: #menuBarMenu"	&lt;resource: #menu&gt;	^#(#{UI.Menu} #(			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_Stack 					#defaultString: '&amp;Stack' 					#catalogID: #pdp ) 				#nameKey: #stackMenu ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_Method 					#defaultString: '&amp;Method' 					#catalogID: #pdp ) 				#submenu: #(#{UI.Menu} #(						#(#{UI.MenuItem} 							#rawLabel: 							#(#{Kernel.UserMessage} 								#key: #_Browse 								#defaultString: '&amp;Browse' 								#catalogID: #pdp ) 							#nameKey: #browseClass 							#value: #browseClass 							#enablementSelector: #hasValidContext ) 						#(#{UI.MenuItem} 							#rawLabel: 							#(#{Kernel.UserMessage} 								#key: #_Senders 								#defaultString: '&amp;Senders' 								#catalogID: #pdp ) 							#nameKey: #allSenders 							#value: #browseAllSenders 							#enablementSelector: #hasValidContext ) 						#(#{UI.MenuItem} 							#rawLabel: 							#(#{Kernel.UserMessage} 								#key: #_Implementors 								#defaultString: '&amp;Implementors' 								#catalogID: #pdp ) 							#nameKey: #allImplementors 							#value: #browseAllImplementors 							#enablementSelector: #hasValidContext ) 						#(#{UI.MenuItem} 							#rawLabel: 							#(#{Kernel.UserMessage} 								#key: #HierarchySe_nders 								#defaultString: 'Hierarchy Se&amp;nders' 								#catalogID: #pdp ) 							#nameKey: #localSenders 							#value: #browseLocalSenders 							#enablementSelector: #hasValidContext ) 						#(#{UI.MenuItem} 							#rawLabel: 							#(#{Kernel.UserMessage} 								#key: #HierarchyI_mplementors 								#defaultString: 'Hierarchy I&amp;mplementors' 								#catalogID: #pdp ) 							#nameKey: #localImplementors 							#value: #browseLocalImplementors 							#enablementSelector: #hasValidContext ) 						#(#{UI.MenuItem} 							#rawLabel: 							#(#{Kernel.UserMessage} 								#key: #Re_vertDots 								#defaultString: 'Re&amp;vert...' 								#catalogID: #pdp ) 							#nameKey: #revert 							#value: #revert 							#enablementSelector: #enableDebugCommand ) 						#(#{UI.MenuItem} 							#rawLabel: 							#(#{Kernel.UserMessage} 								#key: #Browse_Versions 								#defaultString: 'Browse &amp;Versions' 								#catalogID: #pdp ) 							#nameKey: #browseVersions 							#value: #browseVersions 							#enablementSelector: #hasValidContext ) 						#(#{UI.MenuItem} 							#rawLabel: 							#(#{Kernel.UserMessage} 								#key: #ShowContaining_PackageDots 								#defaultString: 'Show Containing &amp;Package...' 								#catalogID: #pdp ) 							#nameKey: #containingPackage 							#value: #containingPackage 							#enablementSelector: #hasValidContext ) 						#(#{UI.MenuItem} 							#rawLabel: 							#(#{Kernel.UserMessage} 								#key: #_RecompileWithFullBlocks 								#defaultString: '&amp;Recompile with Full Blocks' 								#catalogID: #pdp ) 							#nameKey: #makeFullMethod 							#value: #makeFullMethod 							#enablementSelector: #canIssueContextCommand ) ) #(1 2 2 3 1 ) nil ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_Edit 					#defaultString: '&amp;Edit' 					#catalogID: #pdp ) 				#nameKey: #editMenu ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #E_xecute 					#defaultString: 'E&amp;xecute' 					#catalogID: #pdp ) 				#nameKey: #executeMenu ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_Correct 					#defaultString: '&amp;Correct' 					#catalogID: #pdp ) 				#submenu: #(#{UI.Menu} #(						#(#{UI.MenuItem} 							#rawLabel: 							#(#{Kernel.UserMessage} 								#key: #_DefineMethod 								#defaultString: '&amp;Define Method' 								#catalogID: #pdp ) 							#nameKey: #defineMethod 							#value: #defineMethod 							#enablementSelector: #canDefineMethod 							#shortcutKeyCharacter: #F4 							#shortcutModifiers: 0 ) 						#(#{UI.MenuItem} 							#rawLabel: 							#(#{Kernel.UserMessage} 								#key: #_CorrectSelector 								#defaultString: '&amp;Correct Selector' 								#catalogID: #pdp ) 							#nameKey: #correctSpelling 							#value: #correctSpelling 							#enablementSelector: #canCorrectSpelling 							#shortcutKeyCharacter: #F4 							#shortcutModifiers: 2 ) ) #(2 ) nil ) ) ) #(5 ) nil ) decodeAsLiteralArray</body><body package="Debugger-UI">stackMenu	"Tools.MenuEditor new openOnClass: self andSelector: #stackMenu"	&lt;resource: #menu&gt;	^#(#{UI.Menu} #(			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_CopyStackReport 					#defaultString: '&amp;Copy Stack Report' 					#catalogID: #pdp ) 				#nameKey: #copyStack 				#value: #copyStack 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.GeneralIcons} #editCopy ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #Show_More 					#defaultString: 'Show &amp;More' 					#catalogID: #pdp ) 				#nameKey: #moreStack 				#value: #moreStack 				#enablementSelector: #canShowMore ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_FilterStack 					#defaultString: '&amp;Filter Stack' 					#catalogID: #pdp ) 				#nameKey: #filterStack 				#value: #toggleStackFiltering ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #Select_HomeContext 					#defaultString: 'Select &amp;Home Context' 					#catalogID: #pdp ) 				#nameKey: #selectHomeContext 				#value: #selectHomeContext 				#enablementSelector: #canSelectHome 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #homeContext ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_InspectContext 					#defaultString: '&amp;Inspect Context' 					#catalogID: #pdp ) 				#nameKey: #inspectContext 				#value: #inspectContext 				#enablementSelector: #hasValidContext 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #inspector ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_BookmarkContext 					#defaultString: '&amp;Bookmark Context' 					#catalogID: #pdp ) 				#nameKey: #newTag 				#value: #addTag 				#enablementSelector: #canAddTag 				#shortcutKeyCharacter: #F2 				#shortcutModifiers: 0 ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #Clear_Bookmark 					#defaultString: 'Clear &amp;Bookmark' 					#catalogID: #pdp ) 				#nameKey: #removeTag 				#value: #removeTag 				#enablementSelector: #canRemoveTag ) ) #(2 1 4 ) nil ) decodeAsLiteralArray</body><body package="Debugger-UI">toolbarMenu	"Tools.MenuEditor new openOnClass: self andSelector: #toolbarMenu"	&lt;resource: #menu&gt;	^#(#{UI.Menu} #(			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #StepInto 					#defaultString: 'Step Into' 					#catalogID: #IDE ) 				#nameKey: #send 				#value: #send 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #stepInto ) 				#helpText: 				#(#{Kernel.UserMessage} 					#key: #StepIntoButtonHelp 					#defaultString: 'Step, stepping into message sends' 					#catalogID: #IDE ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #Step 					#defaultString: 'Step' 					#catalogID: #IDE ) 				#nameKey: #stepIntoBlock 				#value: #stepIntoBlock 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #step ) 				#helpText: 				#(#{Kernel.UserMessage} 					#key: #Step					#defaultString: 'Step' 					#catalogID: #IDE ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #StepOver 					#defaultString: 'Step Over' 					#catalogID: #IDE ) 				#nameKey: #step 				#value: #step 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #stepOver ) 				#helpText: 				#(#{Kernel.UserMessage} 					#key: #StepOverButtonHelp 					#defaultString: 'Step, stepping over blocks' 					#catalogID: #IDE ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #Restart 					#defaultString: 'Restart' 					#catalogID: #IDE ) 				#nameKey: #reenter 				#value: #reenter 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #restart ) 				#helpText: 				#(#{Kernel.UserMessage} 					#key: #RestartButtonHelp 					#defaultString: 'Restart execution from the beginning of this context' 					#catalogID: #IDE ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #Run 					#defaultString: 'Run' 					#catalogID: #IDE ) 				#nameKey: #continue 				#value: #continue 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #run ) 				#helpText: 				#(#{Kernel.UserMessage} 					#key: #Run 					#defaultString: 'Run' 					#catalogID: #IDE ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #RunThisContext 					#defaultString: 'Run this context' 					#catalogID: #IDE ) 				#nameKey: #firstLoop 				#value: #firstLoop 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #runContext ) 				#helpText: 				#(#{Kernel.UserMessage} 					#key: #RunThisContext					#defaultString: 'Run this context' 					#catalogID: #IDE ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #RunToCaret 					#defaultString: 'Run to Caret' 					#catalogID: #IDE ) 				#nameKey: #skip 				#value: #skipToCaret 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #runToCaret ) 				#helpText: 				#(#{Kernel.UserMessage} 					#key: #RunToCaretButtonHelp 					#defaultString: 'Run to caret' 					#catalogID: #IDE ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #JumpToCaret 					#defaultString: 'Jump to Caret' 					#catalogID: #IDE ) 				#nameKey: #jumpToCaret 				#value: #jumpToCaret 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #jumpToCaret ) 				#helpText: 				#(#{Kernel.UserMessage} 					#key: #JumpToCaretButtonHelp 					#defaultString: 'Jump to caret without executing any code' 					#catalogID: #IDE ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #Return 					#defaultString: 'Return' 					#catalogID: #IDE ) 				#nameKey: #return 				#value: #return 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #return ) 				#helpText: 				#(#{Kernel.UserMessage} 					#key: #ReturnButtonHelp 					#defaultString: 'Return from this context' 					#catalogID: #IDE ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #Pause 					#defaultString: 'Pause' 					#catalogID: #IDE ) 				#nameKey: #pause 				#value: #pauseDebugOperation 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #pause ) 				#helpText: 				#(#{Kernel.UserMessage} 					#key: #PauseButtonHelp 					#defaultString: 'Pause current debug operation' 					#catalogID: #IDE ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #Terminate 					#defaultString: 'Terminate' 					#catalogID: #IDE ) 				#value: #closeRequest 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #terminate ) 				#helpText: 				#(#{Kernel.UserMessage} 					#key: #TerminateButtonHelp 					#defaultString: 'Terminate this process and close the debugger' 					#catalogID: #IDE ) ) ) #(4 3 2 2 ) nil ) decodeAsLiteralArray</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient2 class</class-id> <category>interface specs</category><body package="Debugger-UI">blockReturnSpec	"UIPainter new openOnClass: self andSelector: #blockReturnSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: #(#{Kernel.UserMessage} #key: #ReturnFromBlock #defaultString: 'Return from block' #catalogID: #pdp) 			#bounds: #(#{Graphics.Rectangle} 640 512 979 758 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.RadioButtonSpec} 					#layout: #(#{Core.Point} 204 42 ) 					#name: #methodReturn 					#model: #returnType 					#label: #(#{Kernel.UserMessage} #key: #MethodReturn #defaultString: 'Method Return' #catalogID: #pdp) 					#select: 					#methodReturn: ) 				#(#{UI.RadioButtonSpec} 					#layout: #(#{Core.Point} 204 74 ) 					#name: #blockReturn 					#model: #returnType 					#label: #(#{Kernel.UserMessage} #key: #BlockReturn #defaultString: 'Block Return' #catalogID: #pdp) 					#select: 					#return: ) 				#(#{UI.SubCanvasSpec} 					#layout: #(#{Graphics.Rectangle} 0 0 206 237 ) 					#flags: 0 					#majorKey: #{CraftedSmalltalk.DebuggerClient} 					#minorKey: #methodReturnSpec ) ) ) )</body><body package="Debugger-UI">methodReturnSpec	"Tools.UIPainter new openOnClass: self andSelector: #methodReturnSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 			#(#{Kernel.UserMessage} 				#key: #MethodReturn 				#defaultString: 'Method Return' 				#catalogID: #pdp ) 			#min: #(#{Core.Point} 200 246 ) 			#max: #(#{Core.Point} 200 246 ) 			#bounds: #(#{Graphics.Rectangle} 1180 597 1380 843 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 35 0 9 0 ) 					#label: 					#(#{Kernel.UserMessage} 						#key: #SelectReturnValue 						#defaultString: 'Select Return Value' 						#catalogID: #pdp ) ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 20 0 39 0 58 0 65 0 ) 					#name: #returnSelf 					#model: #returnSelf 					#label: 					#(#{Kernel.UserMessage} 						#key: #self 						#defaultString: 'self' 						#catalogID: #pdp ) 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 60 0 39 0 97 0 65 0 ) 					#name: #returnTrue 					#model: #returnTrue 					#label: 					#(#{Kernel.UserMessage} 						#key: #True 						#defaultString: 'True' 						#catalogID: #pdp ) 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 99 0 39 0 136 0 65 0 ) 					#name: #returnFalse 					#model: #returnFalse 					#label: 					#(#{Kernel.UserMessage} 						#key: #False 						#defaultString: 'False' 						#catalogID: #pdp ) 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 138 0 39 0 177 0 65 0 ) 					#name: #returnNil 					#model: #returnNil 					#label: 					#(#{Kernel.UserMessage} 						#key: #nil 						#defaultString: 'nil' 						#catalogID: #pdp ) 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 20 0 72 0 177 0 98 0 ) 					#name: #returnTOS 					#model: #returnTOS 					#label: 					#(#{Kernel.UserMessage} 						#key: #TopOfStack 						#defaultString: 'Top of Stack' 						#catalogID: #pdp ) 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 20 0 106 0 177 0 132 0 ) 					#name: #returnLastDoIt 					#model: #returnLastDoIt 					#label: 					#(#{Kernel.UserMessage} 						#key: #ResultOfLastDoIt 						#defaultString: 'Result of last DoIt' 						#catalogID: #pdp ) 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 20 0 140 0 177 0 166 0 ) 					#name: #returnNewExpr 					#model: #returnNewExpr 					#label: 					#(#{Kernel.UserMessage} 						#key: #EvaluateExpression 						#defaultString: 'Evaluate Expression' 						#catalogID: #pdp ) 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 20 0 191 0 177 0 217 0 ) 					#name: #cancel 					#model: #cancel 					#label: 					#(#{Kernel.UserMessage} 						#key: #Cancel 						#defaultString: 'Cancel' 						#catalogID: #pdp ) 					#defaultable: true ) ) ) )</body><body package="Debugger-UI">toolbarInTheMiddleWindowSpec	"Tools.UIPainter new openOnClass: self andSelector: #toolbarInTheMiddleWindowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#properties: #(#{UI.PropertyListDictionary} #sizeAutoSave true #positionAutoSave true #sizeType #lastSavedSize #openType #advanced #positionType #lastSavedPosition ) 			#label: ' ' 			#min: #(#{Core.Point} 40 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 620 316 1420 904 ) 			#flags: 4 			#menu: #menuBarMenu ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{Refactory.Browser.SourceCodeEditorSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 2 0.3 0 1 -2 0.8 ) 					#name: #document 					#isOpaque: true 					#model: #documentHolder 					#isWrapped: true 					#isReadOnly: false 					#showHiddenCharacters: false 					#showLineStriping: false 					#continuousAccept: false 					#showInputCursor: true 					#showSelection: true ) 				#(#{UI.SubCanvasSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 2 0.8 -2 0.5 0 1 ) 					#name: #receiverInspector 					#flags: 0 					#majorKey: #{Tools.Inspector} 					#minorKey: #windowSpec 					#clientKey: #receiverInspector ) 				#(#{UI.SubCanvasSpec} 					#layout: #(#{Graphics.LayoutFrame} 2 0.5 2 0.8 0 1 0 1 ) 					#name: #contextInspector 					#flags: 0 					#majorKey: #{Tools.Inspector} 					#minorKey: #windowSpec 					#clientKey: #contextInspector ) 				#(#{UI.ResizingSplitterSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 -2 0.8 0 1 2 0.8 ) 					#name: #BottomResizer 					#horizontal: true 					#minAboveSize: 60 					#minBelowSize: 60 					#aboveWidgets: '#document' 					#belowWidgets: '#receiverInspector #contextInspector #BotInspectResizer' ) 				#(#{UI.ResizingSplitterSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 -2 0.3 0 1 2 0.3 ) 					#name: #TopResizer 					#horizontal: true 					#minAboveSize: 60 					#minBelowSize: 60 					#aboveWidgets: 'TopComposite' 					#belowWidgets: 'document' ) 				#(#{UI.ResizingSplitterSpec} 					#layout: #(#{Graphics.LayoutFrame} -2 0.5 0 0.8 2 0.5 0 1 ) 					#name: #BotInspectResizer 					#horizontal: false 					#minAboveSize: 60 					#minBelowSize: 60 					#aboveWidgets: '#receiverInspector' 					#belowWidgets: 'contextInspector' ) 				#(#{UI.CompositeSpecCollection} 					#collection: #(						#(#{UI.SequenceViewSpec} 							#layout: #(#{Graphics.LayoutFrame} 0 0 0 0 -2 0.6 -28 1 ) 							#name: #stackList 							#model: #stackList 							#callbacksSpec: 							#(#{UI.UIEventCallbackSubSpec} 								#doubleClickSelector: #browseMethod 								#requestValueChangeSelector: 								#canContextChange: ) 							#menu: #contextMenu 							#useModifierKeys: true 							#selectionType: #highlight ) 						#(#{UI.SubCanvasSpec} 							#layout: #(#{Graphics.LayoutFrame} 2 0.6 0 0 0 1 -28 1 ) 							#name: #stackInspector 							#flags: 0 							#majorKey: #{CraftedSmalltalk.StackInspector} 							#minorKey: #windowSpec 							#clientKey: #stackInspector ) 						#(#{UI.ResizingSplitterSpec} 							#layout: #(#{Graphics.LayoutFrame} -2 0.6 0 0 2 0.6 -28 1 ) 							#name: #ResizingSplitter1 							#horizontal: false 							#minAboveSize: 60 							#minBelowSize: 60 							#aboveWidgets: '#stackList' 							#belowWidgets: '#stackInspector' ) 						#(#{UI.ArbitraryComponentSpec} 							#layout: #(#{Graphics.LayoutFrame} 0 0 -28 1 0 1 0 1 ) 							#name: #toolbarHolder 							#flags: 0 							#component: #toolbarView ) ) 					#compositeSpec: 					#(#{UI.CompositeSpec} 						#layout: #(#{Graphics.LayoutFrame} 0 0 0 0 0 1 -2 0.3 ) 						#name: #TopComposite ) ) ) ) )</body><body package="Debugger-UI">toolbarOnTopWindowSpec	"Tools.UIPainter new openOnClass: self andSelector: #toolbarOnTopWindowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#properties: #(#{UI.PropertyListDictionary} #sizeAutoSave true #positionAutoSave true #sizeType #lastSavedSize #openType #advanced #positionType #lastSavedPosition ) 			#label: ' ' 			#min: #(#{Core.Point} 40 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 620 316 1420 904 ) 			#flags: 4 			#menu: #menuBarMenu 			#toolBar: #toolbarMenu ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{Refactory.Browser.SourceCodeEditorSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 2 0.3 0 1 -2 0.8 ) 					#name: #document 					#isOpaque: true 					#model: #documentHolder 					#isWrapped: true 					#isReadOnly: false 					#showHiddenCharacters: false 					#showLineStriping: false 					#continuousAccept: false 					#showInputCursor: true 					#showSelection: true ) 				#(#{UI.SubCanvasSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 2 0.8 -2 0.5 0 1 ) 					#name: #receiverInspector 					#flags: 0 					#majorKey: #{Tools.Inspector} 					#minorKey: #windowSpec 					#clientKey: #receiverInspector ) 				#(#{UI.SubCanvasSpec} 					#layout: #(#{Graphics.LayoutFrame} 2 0.5 2 0.8 0 1 0 1 ) 					#name: #contextInspector 					#flags: 0 					#majorKey: #{Tools.Inspector} 					#minorKey: #windowSpec 					#clientKey: #contextInspector ) 				#(#{UI.ResizingSplitterSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 -2 0.8 0 1 2 0.8 ) 					#name: #BottomResizer 					#horizontal: true 					#minAboveSize: 30 					#minBelowSize: 30 					#aboveWidgets: '#document' 					#belowWidgets: '#receiverInspector #contextInspector #BotInspectResizer' ) 				#(#{UI.ResizingSplitterSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 -2 0.3 0 1 2 0.3 ) 					#name: #TopResizer 					#horizontal: true 					#minAboveSize: 30 					#minBelowSize: 30 					#aboveWidgets: 'TopComposite' 					#belowWidgets: 'document' ) 				#(#{UI.CompositeSpecCollection} 					#collection: #(						#(#{UI.SubCanvasSpec} 							#layout: #(#{Graphics.LayoutFrame} 2 0.6 0 0 0 1 0 1 ) 							#name: #stackInspector 							#flags: 0 							#majorKey: #{CraftedSmalltalk.StackInspector} 							#minorKey: #windowSpec 							#clientKey: #stackInspector ) 						#(#{UI.SequenceViewSpec} 							#layout: #(#{Graphics.LayoutFrame} 0 0 0 0 -2 0.6 0 1 ) 							#name: #stackList 							#model: #stackList 							#callbacksSpec: 							#(#{UI.UIEventCallbackSubSpec} 								#doubleClickSelector: #browseMethod 								#requestValueChangeSelector: 								#canContextChange: ) 							#menu: #contextMenu 							#useModifierKeys: true 							#selectionType: #highlight ) 						#(#{UI.ResizingSplitterSpec} 							#layout: #(#{Graphics.LayoutFrame} 0 0.6 -2 0 2 0.6 0 1 ) 							#name: #ResizingSplitter1 							#horizontal: false 							#minAboveSize: 30 							#minBelowSize: 30 							#aboveWidgets: '#stackList' 							#belowWidgets: '#stackInspector' ) ) 					#compositeSpec: 					#(#{UI.CompositeSpec} 						#layout: #(#{Graphics.LayoutFrame} 0 0 0 0 0 1 -2 0.3 ) 						#name: #TopComposite ) ) 				#(#{UI.ResizingSplitterSpec} 					#layout: #(#{Graphics.LayoutFrame} -2 0.5 0 0.8 2 0.5 0 1 ) 					#name: #BotInspectResizer 					#horizontal: false 					#minAboveSize: 30 					#minBelowSize: 30 					#aboveWidgets: '#receiverInspector' 					#belowWidgets: 'contextInspector' ) ) ) )</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient</class-id> <category>menus</category><body package="Debugger-UI">textEditRedoItem	&lt;itemInMenu: #(#textMenu) position: 0.2&gt;	^(MenuItem labeled: [self textEditRedoLabel])		labelImage: [self textEditRedoIcon];		enablement: [self canTextEditRedo];		shortcutKeyCharacter: $z;		shortcutModifiers: 3;		value: [self textController redo];		yourself</body><body package="Debugger-UI">textEditUndoItem	&lt;itemInMenu: #(#textMenu) position: 0.1&gt;	^(MenuItem labeled: [self textEditUndoLabel])		labelImage: [self textEditUndoIcon];		enablement: [self canTextEditUndo];		shortcutKeyCharacter: $z;		shortcutModifiers: 2;		value: [self textController undo];		yourself</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient class</class-id> <category>resources</category><body package="Debugger-UI">acceptGroup	"Tools.MenuEditor new openOnClass: self andSelector: #acceptGroup"	&lt;resource: #menu&gt;	^#(#{UI.Menu} #(			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_Accept 					#defaultString: '&amp;Accept' 					#catalogID: #menus ) 				#value: #accept 				#shortcutKeyCharacter: $s 				#shortcutModifiers: 2 )			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_Format 					#defaultString: '&amp;Format' 					#catalogID: #menus ) 				#value: #format 				#shortcutKeyCharacter: $O 				#shortcutModifiers: 2 ) ) #(2 ) nil ) decodeAsLiteralArray</body><body package="Debugger-UI">bookmarkMenu	"Tools.MenuEditor new openOnClass: self andSelector: #bookmarkMenu"	&lt;resource: #menu&gt;	^#(#{UI.Menu} #(			#(#{UI.MenuItem} 				#rawLabel: #(#{Kernel.UserMessage} #key: #_Set #defaultString: '&amp;Set' #catalogID: #pdp) 				#nameKey: #addTag 				#value: #addTag 				#enablementSelector: #canAddTag ) 			#(#{UI.MenuItem} 				#rawLabel: #(#{Kernel.UserMessage} #key: #_Clear #defaultString: '&amp;Clear' #catalogID: #pdp) 				#nameKey: #removeTag 				#value: #removeTag 				#enablementSelector: #canRemoveTag ) ) #(2 ) nil ) decodeAsLiteralArray</body><body package="Debugger-UI">browseGroup	"Tools.MenuEditor new openOnClass: self andSelector: #browseGroup"	&lt;resource: #menu&gt;	^#(#{UI.Menu} #(			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #BrowseClass 					#defaultString: 'Browse Class' 					#catalogID: #pdp ) 				#value: #browseClassFromSourceView 				#enablementSelector: #hasClassSelected 				#shortcutKeyCharacter: #F12 				#shortcutModifiers: 2 ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #BrowseReferencesToClass 					#defaultString: 'Browse References to Class' 					#catalogID: #pdp ) 				#value: #browseClassReferencesFromSourceView 				#enablementSelector: #hasClassSelected 				#shortcutKeyCharacter: #F11 				#shortcutModifiers: 2 ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #BrowseVariableReferences 					#defaultString: 'Browse Variable References'					#catalogID: #pdp ) 				#value: #browseInstanceVariableReferences 				#enablementSelector: #hasInstanceVariableSelected 				#shortcutKeyCharacter: #F11 				#shortcutModifiers: 2 ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #BrowseVariableReaders 					#defaultString: 'Browse Variable Readers' 					#catalogID: #pdp ) 				#value: #browseInstanceVariableReaders 				#enablementSelector: #hasInstanceVariableSelected ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #BrowseVariableWriters 					#defaultString: 'Browse Variable Writers' 					#catalogID: #pdp ) 				#value: #browseInstanceVariableWriters 				#enablementSelector: #hasInstanceVariableSelected ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #BrowseSendersOfSelector 					#defaultString: 'Browse Senders of Selector' 					#catalogID: #pdp ) 				#value: #browseSendersFromSourceView 				#enablementSelector: #hasMessageNodeSelected 				#shortcutKeyCharacter: #F11 				#shortcutModifiers: 2 ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #BrowseImplementorsOfSelector 					#defaultString: 'Browse Implementors of Selector' 					#catalogID: #pdp ) 				#value: #browseImplementorsFromSourceView 				#enablementSelector: #hasMessageNodeSelected 				#shortcutKeyCharacter: #F12 				#shortcutModifiers: 2 ) ) #(7 ) nil ) decodeAsLiteralArray</body><body package="Debugger-UI">cancelGroup	"Tools.MenuEditor new openOnClass: self andSelector: #cancelGroup"	&lt;resource: #menu&gt;	^#(#{UI.Menu} #(			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_Cancel 					#defaultString: '&amp;Cancel' 					#catalogID: #menus ) 				#value: #redisplayText ) ) #(1 ) nil ) decodeAsLiteralArray</body><body package="Debugger-UI">contextMenu	"Tools.MenuEditor new openOnClass: self andSelector: #contextMenu"	&lt;resource: #menu&gt;	^#(#{UI.Menu} #(			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_Browse 					#defaultString: '&amp;Browse' 					#catalogID: #pdp ) 				#nameKey: #browseClass 				#value: #browseClass 				#enablementSelector: #hasValidContext ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_Senders 					#defaultString: '&amp;Senders' 					#catalogID: #pdp ) 				#nameKey: #allSenders 				#value: #browseAllSenders 				#enablementSelector: #hasValidContext ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #I_mplementors 					#defaultString: 'I&amp;mplementors' 					#catalogID: #pdp ) 				#nameKey: #allImplementors 				#value: #browseAllImplementors 				#enablementSelector: #hasValidContext ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #HierarchySe_nders 					#defaultString: 'Hierarchy Se&amp;nders' 					#catalogID: #pdp ) 				#nameKey: #localSenders 				#value: #browseLocalSenders 				#enablementSelector: #hasValidContext ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #HierarchyIm_plementors 					#defaultString: 'Hierarchy Im&amp;plementors' 					#catalogID: #pdp ) 				#nameKey: #localImplementors 				#value: #browseLocalImplementors 				#enablementSelector: #hasValidContext ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #Select_HomeContext 					#defaultString: 'Select &amp;Home Context' 					#catalogID: #pdp ) 				#value: #selectHomeContext 				#enablementSelector: #canSelectHome 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #homeContext ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_CorrectSelector 					#defaultString: '&amp;Correct Selector' 					#catalogID: #pdp ) 				#nameKey: #correctSpelling 				#value: #correctSpelling 				#enablementSelector: #canCorrectSpelling ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_DefineMethod 					#defaultString: '&amp;Define Method' 					#catalogID: #pdp ) 				#nameKey: #defineMethod 				#value: #defineMethod 				#enablementSelector: #canDefineMethod ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_Inspect 					#defaultString: '&amp;Inspect' 					#catalogID: #pdp ) 				#nameKey: #inspectContext 				#value: #inspectContext 				#enablementSelector: #hasValidContext 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #inspector ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #Browse_Versions 					#defaultString: 'Browse &amp;Versions' 					#catalogID: #pdp ) 				#nameKey: #browseVersions 				#value: #browseVersions 				#enablementSelector: #hasValidContext ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #Re_vertDots 					#defaultString: 'Re&amp;vert...' 					#catalogID: #pdp ) 				#nameKey: #revert 				#value: #revert 				#enablementSelector: #enableDebugCommand ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_Bookmark 					#defaultString: '&amp;Bookmark' 					#catalogID: #pdp ) 				#nameKey: #bookmarkMenu ) ) #(1 2 2 4 2 1 ) nil ) decodeAsLiteralArray</body><body package="Debugger-UI">editGroup	"Tools.MenuEditor new openOnClass: self andSelector: #editGroup"	&lt;resource: #menu&gt;	^#(#{UI.Menu} #(			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #Cu_t 					#defaultString: 'Cu&amp;t' 					#catalogID: #menus ) 				#value: #cut 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.GeneralIcons} #editCut ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_Copy 					#defaultString: '&amp;Copy' 					#catalogID: #menus ) 				#value: #copySelection 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.GeneralIcons} #editCopy ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_Paste 					#defaultString: '&amp;Paste' 					#catalogID: #menus ) 				#value: #paste 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.GeneralIcons} #editPaste ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_FindDots 					#defaultString: '&amp;Find...' 					#catalogID: #menus ) 				#value: #find ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_ReplaceDots 					#defaultString: '&amp;Replace...' 					#catalogID: #menus ) 				#value: #replace ) ) #(3 2 ) nil ) decodeAsLiteralArray</body><body package="Debugger-UI">evaluateGroup	"Tools.MenuEditor new openOnClass: self andSelector: #evaluateGroup"	&lt;resource: #menu&gt;	^#(#{UI.Menu} #(			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_DoIt 					#defaultString: '&amp;Do it' 					#catalogID: #menus ) 				#value: #doit 				#command: #doIt 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.GeneralIcons} #doIt ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_PrintIt 					#defaultString: '&amp;Print it' 					#catalogID: #menus ) 				#value: #printit 				#command: #printIt 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.GeneralIcons} #printIt ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_InspectIt 					#defaultString: '&amp;Inspect it' 					#catalogID: #menus ) 				#value: #inspectit 				#command: #inspectIt				#labelImage: #(#{UI.ResourceRetriever} #{Tools.GeneralIcons} #inspectIt ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #De_bugIt 					#defaultString: 'De&amp;bug it' 					#catalogID: #menus ) 				#value: #debugit 				#command: #debugIt 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.GeneralIcons} #debugIt ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_Explain 					#defaultString: '&amp;Explain' 					#catalogID: #menus ) 				#value: #explain 				#command: #explain ) ) #(4 1 ) nil ) decodeAsLiteralArray</body><body package="Debugger-UI">executeMenuDefault	"Tools.MenuEditor new openOnClass: self andSelector: #executeMenuDefault"	&lt;resource: #menu&gt;	^#(#{UI.Menu} #(			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #Step_Into 					#defaultString: 'Step &amp;Into' 					#catalogID: #IDE ) 				#nameKey: #send 				#value: #send 				#enablementSelector: #enableSendCommand 				#shortcutKeyCharacter: #F5 				#shortcutModifiers: 0 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #stepInto ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_Step 					#defaultString: '&amp;Step' 					#catalogID: #IDE ) 				#nameKey: #stepIntoBlock 				#value: #stepIntoBlock 				#enablementSelector: #enableSendCommand 				#shortcutKeyCharacter: #F6 				#shortcutModifiers: 0 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #step ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #Step_Over 					#defaultString: 'Step &amp;Over' 					#catalogID: #IDE ) 				#nameKey: #step 				#value: #step 				#enablementSelector: #canIssueContextCommand 				#shortcutKeyCharacter: #F7 				#shortcutModifiers: 0 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #stepOver ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #R_estart 					#defaultString: 'R&amp;estart' 					#catalogID: #IDE ) 				#nameKey: #reenter 				#value: #reenter 				#enablementSelector: #canIssueContextCommand 				#shortcutKeyCharacter: #F8 				#shortcutModifiers: 0 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #restart ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_Run 					#defaultString: '&amp;Run' 					#catalogID: #IDE ) 				#nameKey: #continue 				#value: #continue 				#enablementSelector: #canRun 				#shortcutKeyCharacter: #F9 				#shortcutModifiers: 0 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #run ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #RunUntilR_eturn 					#defaultString: 'Run until R&amp;eturn' 					#catalogID: #IDE ) 				#nameKey: #firstLoop 				#value: #firstLoop 				#enablementSelector: #canIssueContextCommand 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #runContext ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #RunWithBrea_kAgain 					#defaultString: 'Run with Brea&amp;k Again' 					#catalogID: #IDE ) 				#nameKey: #nextLoop 				#value: #nextLoop 				#enablementSelector: #canDoNextLoop 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #nextLoop ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #RunTo_Caret 					#defaultString: 'Run to &amp;Caret' 					#catalogID: #IDE ) 				#nameKey: #skip 				#value: #skipToCaret 				#enablementSelector: #canIssueContextCommand 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #runToCaret ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_JumpToCaret 					#defaultString: '&amp;Jump to Caret' 					#catalogID: #IDE ) 				#nameKey: #jump 				#value: #jumpToCaret 				#enablementSelector: #canIssueContextCommand 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #jumpToCaret ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #Ret_urnDots 					#defaultString: 'Ret&amp;urn...' 					#catalogID: #IDE ) 				#nameKey: #return 				#value: #return 				#enablementSelector: #canIssueContextCommand 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #return ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_Pause 					#defaultString: '&amp;Pause' 					#catalogID: #IDE ) 				#nameKey: #pauseDebugOperation 				#value: #pauseDebugOperation 				#enablementSelector: #isBusy 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #pause ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_Terminate 					#defaultString: '&amp;Terminate' 					#catalogID: #IDE ) 				#value: #closeRequest 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #terminate ) ) ) #(4 4 2 2 ) nil ) decodeAsLiteralArray</body><body package="Debugger-UI">hardcopyGroup	"MenuEditor new openOnClass: self andSelector: #hardcopyGroup"	&lt;resource: #menu&gt;	^#(#{UI.Menu} #(			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_Hardcopy 					#defaultString: '&amp;Hardcopy' 					#catalogID: #menus ) 				#value: #hardcopy ) ) #(1 ) nil ) decodeAsLiteralArray</body><body package="Debugger-UI">menuBarMenu	"Tools.MenuEditor new openOnClass: self andSelector: #menuBarMenu"	&lt;resource: #menu&gt;	^#(#{UI.Menu} #(			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_Stack 					#defaultString: '&amp;Stack' 					#catalogID: #pdp ) 				#nameKey: #stackMenu ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_Method 					#defaultString: '&amp;Method' 					#catalogID: #pdp ) 				#submenu: #(#{UI.Menu} #(						#(#{UI.MenuItem} 							#rawLabel: 							#(#{Kernel.UserMessage} 								#key: #_Browse 								#defaultString: '&amp;Browse' 								#catalogID: #pdp ) 							#nameKey: #browseClass 							#value: #browseClass 							#enablementSelector: #hasValidContext ) 						#(#{UI.MenuItem} 							#rawLabel: 							#(#{Kernel.UserMessage} 								#key: #_Senders 								#defaultString: '&amp;Senders' 								#catalogID: #pdp ) 							#nameKey: #allSenders 							#value: #browseAllSenders 							#enablementSelector: #hasValidContext ) 						#(#{UI.MenuItem} 							#rawLabel: 							#(#{Kernel.UserMessage} 								#key: #_Implementors 								#defaultString: '&amp;Implementors' 								#catalogID: #pdp ) 							#nameKey: #allImplementors 							#value: #browseAllImplementors 							#enablementSelector: #hasValidContext ) 						#(#{UI.MenuItem} 							#rawLabel: 							#(#{Kernel.UserMessage} 								#key: #HierarchySe_nders 								#defaultString: 'Hierarchy Se&amp;nders' 								#catalogID: #pdp ) 							#nameKey: #localSenders 							#value: #browseLocalSenders 							#enablementSelector: #hasValidContext ) 						#(#{UI.MenuItem} 							#rawLabel: 							#(#{Kernel.UserMessage} 								#key: #HierarchyI_mplementors 								#defaultString: 'Hierarchy I&amp;mplementors' 								#catalogID: #pdp ) 							#nameKey: #localImplementors 							#value: #browseLocalImplementors 							#enablementSelector: #hasValidContext ) 						#(#{UI.MenuItem} 							#rawLabel: 							#(#{Kernel.UserMessage} 								#key: #Re_vertDots 								#defaultString: 'Re&amp;vert...' 								#catalogID: #pdp ) 							#nameKey: #revert 							#value: #revert 							#enablementSelector: #enableDebugCommand ) 						#(#{UI.MenuItem} 							#rawLabel: 							#(#{Kernel.UserMessage} 								#key: #Browse_Versions 								#defaultString: 'Browse &amp;Versions' 								#catalogID: #pdp ) 							#nameKey: #browseVersions 							#value: #browseVersions 							#enablementSelector: #hasValidContext ) 						#(#{UI.MenuItem} 							#rawLabel: 							#(#{Kernel.UserMessage} 								#key: #ShowContaining_PackageDots 								#defaultString: 'Show Containing &amp;Package...' 								#catalogID: #pdp ) 							#nameKey: #containingPackage 							#value: #containingPackage 							#enablementSelector: #hasValidContext ) 						#(#{UI.MenuItem} 							#rawLabel: 							#(#{Kernel.UserMessage} 								#key: #_RecompileWithFullBlocks 								#defaultString: '&amp;Recompile with Full Blocks' 								#catalogID: #pdp ) 							#nameKey: #makeFullMethod 							#value: #makeFullMethod 							#enablementSelector: #canIssueContextCommand ) ) #(1 2 2 3 1 ) nil ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_Edit 					#defaultString: '&amp;Edit' 					#catalogID: #pdp ) 				#nameKey: #editMenu ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #E_xecute 					#defaultString: 'E&amp;xecute' 					#catalogID: #pdp ) 				#nameKey: #executeMenu ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_Correct 					#defaultString: '&amp;Correct' 					#catalogID: #pdp ) 				#submenu: #(#{UI.Menu} #(						#(#{UI.MenuItem} 							#rawLabel: 							#(#{Kernel.UserMessage} 								#key: #_DefineMethod 								#defaultString: '&amp;Define Method' 								#catalogID: #pdp ) 							#nameKey: #defineMethod 							#value: #defineMethod 							#enablementSelector: #canDefineMethod 							#shortcutKeyCharacter: #F4 							#shortcutModifiers: 0 ) 						#(#{UI.MenuItem} 							#rawLabel: 							#(#{Kernel.UserMessage} 								#key: #_CorrectSelector 								#defaultString: '&amp;Correct Selector' 								#catalogID: #pdp ) 							#nameKey: #correctSpelling 							#value: #correctSpelling 							#enablementSelector: #canCorrectSpelling 							#shortcutKeyCharacter: #F4 							#shortcutModifiers: 2 ) ) #(2 ) nil ) ) ) #(5 ) nil ) decodeAsLiteralArray</body><body package="Debugger-UI">pdpTextMenuAdditions	"Tools.MenuEditor new openOnClass: self andSelector: #pdpTextMenuAdditions"	&lt;resource: #menu&gt;	^#(#{UI.Menu} #(			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #InsertBreakpoint 					#defaultString: 'Insert Breakpoint' 					#catalogID: #pdp ) 				#nameKey: #insertBreakpoint 				#value: #addBreakpoint ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #InsertProbeDots 					#defaultString: 'Insert Probe...' 					#catalogID: #pdp ) 				#nameKey: #insertProbe 				#value: #addProbe ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #EditProbeDots 					#defaultString: 'Edit Probe...' 					#catalogID: #pdp ) 				#nameKey: #modifyProbe 				#value: #modifyProbe ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #RemoveThisProbe 					#defaultString: 'Remove This Probe' 					#catalogID: #pdp ) 				#nameKey: #removeSelectedProbe 				#value: #removeProbe ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #RemoveAllProbes 					#defaultString: 'Remove All Probes' 					#catalogID: #pdp ) 				#nameKey: #removeAllProbes 				#value: #removeAllProbes ) ) #(5 ) nil ) decodeAsLiteralArray</body><body package="Debugger-UI">stackMenu	"Tools.MenuEditor new openOnClass: self andSelector: #stackMenu"	&lt;resource: #menu&gt;	^#(#{UI.Menu} #(			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_CopyStackReport 					#defaultString: '&amp;Copy Stack Report' 					#catalogID: #pdp ) 				#nameKey: #copyStack 				#value: #copyStack 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.GeneralIcons} #editCopy ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #Show_More 					#defaultString: 'Show &amp;More' 					#catalogID: #pdp ) 				#nameKey: #moreStack 				#value: #moreStack 				#enablementSelector: #canShowMore ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_FilterStack 					#defaultString: '&amp;Filter Stack' 					#catalogID: #pdp ) 				#nameKey: #filterStack 				#value: #toggleStackFiltering ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #Select_HomeContext 					#defaultString: 'Select &amp;Home Context' 					#catalogID: #pdp ) 				#nameKey: #selectHomeContext 				#value: #selectHomeContext 				#enablementSelector: #canSelectHome 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #homeContext ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_InspectContext 					#defaultString: '&amp;Inspect Context' 					#catalogID: #pdp ) 				#nameKey: #inspectContext 				#value: #inspectContext 				#enablementSelector: #hasValidContext 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #inspector ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_BookmarkContext 					#defaultString: '&amp;Bookmark Context' 					#catalogID: #pdp ) 				#nameKey: #newTag 				#value: #addTag 				#enablementSelector: #canAddTag 				#shortcutKeyCharacter: #F2 				#shortcutModifiers: 0 ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #Clear_Bookmark 					#defaultString: 'Clear &amp;Bookmark' 					#catalogID: #pdp ) 				#nameKey: #removeTag 				#value: #removeTag 				#enablementSelector: #canRemoveTag ) ) #(2 1 4 ) nil ) decodeAsLiteralArray</body><body package="Debugger-UI">textMenuExtras	"Tools.MenuEditor new openOnClass: self andSelector: #textMenuExtras"	&lt;resource: #menu&gt;	^#(#{UI.Menu} #(			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_Format 					#defaultString: '&amp;Format' 					#catalogID: #menus ) 				#nameKey: #Format 				#value: #format 				#command: #format ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #_Explain 					#defaultString: '&amp;Explain' 					#catalogID: #menus ) 				#value: #explain				#command: #explain ) ) #(2 ) nil ) decodeAsLiteralArray</body><body package="Debugger-UI">toolbarMenu	"Tools.MenuEditor new openOnClass: self andSelector: #toolbarMenu"	&lt;resource: #menu&gt;	^#(#{UI.Menu} #(			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #StepInto 					#defaultString: 'Step Into' 					#catalogID: #IDE ) 				#nameKey: #send 				#value: #send 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #stepInto ) 				#helpText: 				#(#{Kernel.UserMessage} 					#key: #StepIntoButtonHelp 					#defaultString: 'Step, stepping into message sends' 					#catalogID: #IDE ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #Step 					#defaultString: 'Step' 					#catalogID: #IDE ) 				#nameKey: #stepIntoBlock 				#value: #stepIntoBlock 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #step ) 				#helpText: 				#(#{Kernel.UserMessage} 					#key: #Step					#defaultString: 'Step' 					#catalogID: #IDE ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #StepOver 					#defaultString: 'Step Over' 					#catalogID: #IDE ) 				#nameKey: #step 				#value: #step 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #stepOver ) 				#helpText: 				#(#{Kernel.UserMessage} 					#key: #StepOverButtonHelp 					#defaultString: 'Step, stepping over blocks' 					#catalogID: #IDE ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #Restart 					#defaultString: 'Restart' 					#catalogID: #IDE ) 				#nameKey: #reenter 				#value: #reenter 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #restart ) 				#helpText: 				#(#{Kernel.UserMessage} 					#key: #RestartButtonHelp 					#defaultString: 'Restart execution from the beginning of this context' 					#catalogID: #IDE ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #Run 					#defaultString: 'Run' 					#catalogID: #IDE ) 				#nameKey: #continue 				#value: #continue 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #run ) 				#helpText: 				#(#{Kernel.UserMessage} 					#key: #Run 					#defaultString: 'Run' 					#catalogID: #IDE ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #RunThisContext 					#defaultString: 'Run this context' 					#catalogID: #IDE ) 				#nameKey: #firstLoop 				#value: #firstLoop 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #runContext ) 				#helpText: 				#(#{Kernel.UserMessage} 					#key: #RunThisContext					#defaultString: 'Run this context' 					#catalogID: #IDE ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #RunToCaret 					#defaultString: 'Run to Caret' 					#catalogID: #IDE ) 				#nameKey: #skip 				#value: #skipToCaret 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #runToCaret ) 				#helpText: 				#(#{Kernel.UserMessage} 					#key: #RunToCaretButtonHelp 					#defaultString: 'Run to caret' 					#catalogID: #IDE ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #JumpToCaret 					#defaultString: 'Jump to Caret' 					#catalogID: #IDE ) 				#nameKey: #jumpToCaret 				#value: #jumpToCaret 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #jumpToCaret ) 				#helpText: 				#(#{Kernel.UserMessage} 					#key: #JumpToCaretButtonHelp 					#defaultString: 'Jump to caret without executing any code' 					#catalogID: #IDE ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #Return 					#defaultString: 'Return' 					#catalogID: #IDE ) 				#nameKey: #return 				#value: #return 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #return ) 				#helpText: 				#(#{Kernel.UserMessage} 					#key: #ReturnButtonHelp 					#defaultString: 'Return from this context' 					#catalogID: #IDE ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #Pause 					#defaultString: 'Pause' 					#catalogID: #IDE ) 				#nameKey: #pause 				#value: #pauseDebugOperation 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #pause ) 				#helpText: 				#(#{Kernel.UserMessage} 					#key: #PauseButtonHelp 					#defaultString: 'Pause current debug operation' 					#catalogID: #IDE ) ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #Terminate 					#defaultString: 'Terminate' 					#catalogID: #IDE ) 				#value: #closeRequest 				#labelImage: #(#{UI.ResourceRetriever} #{Tools.DebuggerIcons} #terminate ) 				#helpText: 				#(#{Kernel.UserMessage} 					#key: #TerminateButtonHelp 					#defaultString: 'Terminate this process and close the debugger' 					#catalogID: #IDE ) ) ) #(4 3 2 2 ) nil ) decodeAsLiteralArray</body></methods><methods><class-id>CraftedSmalltalk.DebuggerClient class</class-id> <category>interface specs</category><body package="Debugger-UI">blockReturnSpec	"UIPainter new openOnClass: self andSelector: #blockReturnSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: #(#{Kernel.UserMessage} #key: #ReturnFromBlock #defaultString: 'Return from block' #catalogID: #pdp) 			#bounds: #(#{Graphics.Rectangle} 640 512 979 758 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.RadioButtonSpec} 					#layout: #(#{Core.Point} 204 42 ) 					#name: #methodReturn 					#model: #returnType 					#label: #(#{Kernel.UserMessage} #key: #MethodReturn #defaultString: 'Method Return' #catalogID: #pdp) 					#select: 					#methodReturn: ) 				#(#{UI.RadioButtonSpec} 					#layout: #(#{Core.Point} 204 74 ) 					#name: #blockReturn 					#model: #returnType 					#label: #(#{Kernel.UserMessage} #key: #BlockReturn #defaultString: 'Block Return' #catalogID: #pdp) 					#select: 					#return: ) 				#(#{UI.SubCanvasSpec} 					#layout: #(#{Graphics.Rectangle} 0 0 206 237 ) 					#flags: 0 					#majorKey: #{CraftedSmalltalk.DebuggerClient} 					#minorKey: #methodReturnSpec ) ) ) )</body><body package="Debugger-UI">methodReturnSpec	"UIPainter new openOnClass: self andSelector: #methodReturnSpec"	&lt;resource: #canvas&gt;	^#(#FullSpec 		#window: 		#(#WindowSpec 			#label: #(#{Kernel.UserMessage} #key: #MethodReturn #defaultString: 'Method Return' #catalogID: #pdp) 			#min: #(#Point 200 246 ) 			#max: #(#Point 200 246 ) 			#bounds: #(#Rectangle 614 301 814 547 ) ) 		#component: 		#(#SpecCollection 			#collection: #(				#(#LabelSpec 					#layout: #(#Point 35 9 ) 					#label: #(#{Kernel.UserMessage} #key: #SelectReturnValue #defaultString: 'Select Return Value' #catalogID: #pdp) ) 				#(#ActionButtonSpec 					#layout: #(#Rectangle 20 39 177 65 ) 					#model: #returnSelf 					#label: #(#{Kernel.UserMessage} #key: #self #defaultString: 'self' #catalogID: #pdp) 					#defaultable: true ) 				#(#ActionButtonSpec 					#layout: #(#Rectangle 20 72 177 98 ) 					#name: #returnTOS 					#model: #returnTOS 					#label: #(#{Kernel.UserMessage} #key: #TopOfStack #defaultString: 'Top of Stack' #catalogID: #pdp) 					#defaultable: true ) 				#(#ActionButtonSpec 					#layout: #(#Rectangle 20 106 177 132 ) 					#model: #returnLastDoIt 					#label: #(#{Kernel.UserMessage} #key: #ResultOfLastDoIt #defaultString: 'Result of last DoIt' #catalogID: #pdp) 					#defaultable: true ) 				#(#ActionButtonSpec 					#layout: #(#Rectangle 20 140 177 166 ) 					#model: #returnNewExpr 					#label: #(#{Kernel.UserMessage} #key: #EvaluateExpression #defaultString: 'Evaluate Expression' #catalogID: #pdp) 					#defaultable: true ) 				#(#ActionButtonSpec 					#layout: #(#Rectangle 20 191 177 217 ) 					#model: #cancel 					#label: #(#{Kernel.UserMessage} #key: #Cancel #defaultString: 'Cancel' #catalogID: #pdp) 					#defaultable: true ) ) ) )</body><body package="Debugger-UI">toolbarInTheMiddleWindowSpec	"Tools.UIPainter new openOnClass: self andSelector: #toolbarInTheMiddleWindowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#properties: #(#{UI.PropertyListDictionary} #sizeType #lastSavedSize #positionType #lastSavedPosition #openType #advanced #sizeAutoSave true #positionAutoSave true ) 			#label: ' ' 			#min: #(#{Core.Point} 40 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 350 201 931 789 ) 			#flags: 4 			#menu: #menuBarMenu ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 2 0.3 0 1 -2 0.8 ) 					#name: #text 					#model: #textHolder 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: 						#textAccepted: ) 					#tabable: true 					#menu: #textMenu 					#tabRequiresControl: true ) 				#(#{UI.SubCanvasSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 2 0.8 -2 0.5 0 1 ) 					#name: #receiverInspector 					#flags: 0 					#majorKey: #{Tools.Inspector} 					#minorKey: #windowSpec 					#clientKey: #receiverInspector ) 				#(#{UI.SubCanvasSpec} 					#layout: #(#{Graphics.LayoutFrame} 2 0.5 2 0.8 0 1 0 1 ) 					#name: #contextInspector 					#flags: 0 					#majorKey: #{Tools.Inspector} 					#minorKey: #windowSpec 					#clientKey: #contextInspector ) 				#(#{UI.ResizingSplitterSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 -2 0.8 0 1 2 0.8 ) 					#name: #BottomResizer 					#horizontal: true 					#minAboveSize: 60 					#minBelowSize: 60 					#aboveWidgets: '#text' 					#belowWidgets: '#receiverInspector #contextInspector #BotInspectResizer' ) 				#(#{UI.ResizingSplitterSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 -2 0.3 0 1 2 0.3 ) 					#name: #TopResizer 					#horizontal: true 					#minAboveSize: 60 					#minBelowSize: 60 					#aboveWidgets: 'TopComposite' 					#belowWidgets: 'text' ) 				#(#{UI.ResizingSplitterSpec} 					#layout: #(#{Graphics.LayoutFrame} -2 0.5 0 0.8 2 0.5 0 1 ) 					#name: #BotInspectResizer 					#horizontal: false 					#minAboveSize: 60 					#minBelowSize: 60 					#aboveWidgets: '#receiverInspector' 					#belowWidgets: 'contextInspector' ) 				#(#{UI.CompositeSpecCollection} 					#collection: #(						#(#{UI.SequenceViewSpec} 							#layout: #(#{Graphics.LayoutFrame} 0 0 0 0 -2 0.6 -28 1 ) 							#name: #stackList 							#model: #stackList 							#callbacksSpec: 							#(#{UI.UIEventCallbackSubSpec} 								#doubleClickSelector: #browseMethod 								#requestValueChangeSelector: 								#canContextChange: ) 							#menu: #contextMenu 							#useModifierKeys: true 							#selectionType: #highlight ) 						#(#{UI.SubCanvasSpec} 							#layout: #(#{Graphics.LayoutFrame} 2 0.6 0 0 0 1 -28 1 ) 							#name: #stackInspector 							#flags: 0 							#majorKey: #{CraftedSmalltalk.StackInspector} 							#minorKey: #windowSpec 							#clientKey: #stackInspector ) 						#(#{UI.ResizingSplitterSpec} 							#layout: #(#{Graphics.LayoutFrame} -2 0.6 0 0 2 0.6 -28 1 ) 							#name: #ResizingSplitter1 							#horizontal: false 							#minAboveSize: 60 							#minBelowSize: 60 							#aboveWidgets: '#stackList' 							#belowWidgets: '#stackInspector' ) 						#(#{UI.ArbitraryComponentSpec} 							#layout: #(#{Graphics.LayoutFrame} 0 0 -28 1 0 1 0 1 ) 							#name: #toolbarHolder 							#flags: 0 							#component: #toolbarView ) ) 					#compositeSpec: 					#(#{UI.CompositeSpec} 						#layout: #(#{Graphics.LayoutFrame} 0 0 0 0 0 1 -2 0.3 ) 						#name: #TopComposite ) ) ) ) )</body><body package="Debugger-UI">toolbarOnTopWindowSpec	"Tools.UIPainter new openOnClass: self andSelector: #toolbarOnTopWindowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#properties: #(#{UI.PropertyListDictionary} #sizeType #lastSavedSize #positionType #lastSavedPosition #openType #advanced #sizeAutoSave true #positionAutoSave true ) 			#label: ' ' 			#min: #(#{Core.Point} 40 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 516 325 1097 913 ) 			#flags: 4 			#menu: #menuBarMenu 			#toolBar: #toolbarMenu ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 2 0.3 0 1 -2 0.8 ) 					#name: #text 					#model: #textHolder 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: 						#textAccepted: ) 					#tabable: true 					#menu: #textMenu 					#tabRequiresControl: true ) 				#(#{UI.SubCanvasSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 2 0.8 -2 0.5 0 1 ) 					#name: #receiverInspector 					#flags: 0 					#majorKey: #{Tools.Inspector} 					#minorKey: #windowSpec 					#clientKey: #receiverInspector ) 				#(#{UI.SubCanvasSpec} 					#layout: #(#{Graphics.LayoutFrame} 2 0.5 2 0.8 0 1 0 1 ) 					#name: #contextInspector 					#flags: 0 					#majorKey: #{Tools.Inspector} 					#minorKey: #windowSpec 					#clientKey: #contextInspector ) 				#(#{UI.ResizingSplitterSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 -2 0.8 0 1 2 0.8 ) 					#name: #BottomResizer 					#horizontal: true 					#minAboveSize: 30 					#minBelowSize: 30 					#aboveWidgets: '#text' 					#belowWidgets: '#receiverInspector #contextInspector #BotInspectResizer' ) 				#(#{UI.ResizingSplitterSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 -2 0.3 0 1 2 0.3 ) 					#name: #TopResizer 					#horizontal: true 					#minAboveSize: 30 					#minBelowSize: 30 					#aboveWidgets: 'TopComposite' 					#belowWidgets: 'text' ) 				#(#{UI.CompositeSpecCollection} 					#collection: #(						#(#{UI.SubCanvasSpec} 							#layout: #(#{Graphics.LayoutFrame} 2 0.6 0 0 0 1 0 1 ) 							#name: #stackInspector 							#flags: 0 							#majorKey: #{CraftedSmalltalk.StackInspector} 							#minorKey: #windowSpec 							#clientKey: #stackInspector ) 						#(#{UI.SequenceViewSpec} 							#layout: #(#{Graphics.LayoutFrame} 0 0 0 0 -2 0.6 0 1 ) 							#name: #stackList 							#model: #stackList 							#callbacksSpec: 							#(#{UI.UIEventCallbackSubSpec} 								#doubleClickSelector: #browseMethod 								#requestValueChangeSelector: 								#canContextChange: ) 							#menu: #contextMenu 							#useModifierKeys: true 							#selectionType: #highlight ) 						#(#{UI.ResizingSplitterSpec} 							#layout: #(#{Graphics.LayoutFrame} 0 0.6 -2 0 2 0.6 0 1 ) 							#name: #ResizingSplitter1 							#horizontal: false 							#minAboveSize: 30 							#minBelowSize: 30 							#aboveWidgets: '#stackList' 							#belowWidgets: '#stackInspector' ) ) 					#compositeSpec: 					#(#{UI.CompositeSpec} 						#layout: #(#{Graphics.LayoutFrame} 0 0 0 0 0 1 -2 0.3 ) 						#name: #TopComposite ) ) 				#(#{UI.ResizingSplitterSpec} 					#layout: #(#{Graphics.LayoutFrame} -2 0.5 0 0.8 2 0.5 0 1 ) 					#name: #BotInspectResizer 					#horizontal: false 					#minAboveSize: 30 					#minBelowSize: 30 					#aboveWidgets: '#receiverInspector' 					#belowWidgets: 'contextInspector' ) ) ) )</body></methods><methods><class-id>CraftedSmalltalk.ContextListPolicyEditor class</class-id> <category>interface specs</category><body package="Debugger-UI">helpSpec	"UIPainter new openOnClass: self andSelector: #helpSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: #(#{Kernel.UserMessage} #key: #Help #defaultString: 'Help' #catalogID: #pdp) 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 1024 768 ) 			#bounds: #(#{Graphics.Rectangle} 640 512 1140 912 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 0 0 0 1 0 1 ) 					#name: #TextEditor 					#model: #helpText 					#isReadOnly: false 					#tabRequiresControl: true ) ) ) )</body><body package="Debugger-UI">windowSpec	"UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: #(#{Kernel.UserMessage} #key: #ContextListPolicyEditor #defaultString: 'Context list policy editor' #catalogID: #pdp) 			#min: #(#{Core.Point} 528 401 ) 			#max: #(#{Core.Point} 1024 768 ) 			#bounds: #(#{Graphics.Rectangle} 592 427 1120 828 ) 			#flags: 4 			#menu: #menuBar ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.LabelSpec} 					#layout: #(#{UI.AlignmentOrigin} 0 0.175 5 0 0.5 0 ) 					#name: #PatternListLabel 					#label: #(#{Kernel.UserMessage} #key: #Patterns #defaultString: 'Patterns' #catalogID: #pdp) ) 				#(#{UI.SequenceViewSpec} 					#properties: 					#(#{UI.PropertyListDictionary} #dragOkSelector 						#wantToDrag: #dragEnterSelector 						#dragEnter: #dragOverSelector 						#dragOver: #dragStartSelector 						#doDrag: #dropSelector 						#drop: #dragExitSelector 						#dragLeave: ) 					#layout: #(#{Graphics.LayoutFrame} 2 0 30 0 0 0.35 -60 1 ) 					#name: #patternList 					#model: #patternList 					#menu: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 25 0.35 30 0 90 0.35 53 0 ) 					#name: #newButton 					#model: #newPattern 					#label: #(#{Kernel.UserMessage} #key: #New #defaultString: 'New' #catalogID: #pdp) 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 115 0.35 30 0 180 0.35 53 0 ) 					#name: #removeButton 					#model: #removePattern 					#label: #(#{Kernel.UserMessage} #key: #Remove #defaultString: 'Remove' #catalogID: #pdp) 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 13 0.35 105 0 -9 0.75 128 0 ) 					#name: #patternNameInput 					#model: #patternName ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 8 0.75 105 0 87 0.75 128 0 ) 					#name: #colorButton 					#model: #selectColor 					#label: #(#{Kernel.UserMessage} #key: #PickColor #defaultString: 'Pick Color' #catalogID: #pdp) 					#defaultable: true ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.LayoutFrame} 13 0.35 160 0 -8 1 -155 1 ) 					#name: #TextEditor1 					#model: #patternString 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 13 0.35 85 0 ) 					#name: #Label1 					#label: #(#{Kernel.UserMessage} #key: #Name #defaultString: 'Name' #catalogID: #pdp) ) 				#(#{UI.LabelSpec} 					#layout: #(#{UI.AlignmentOrigin} 0 0.675 137 0 0.5 0 ) 					#name: #Label3 					#label: #(#{Kernel.UserMessage} #key: #PatternString #defaultString: 'Pattern String' #catalogID: #pdp) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.LayoutFrame} 6 0.35 65 0 -2 1 -145 1 ) 					#name: #GroupBox1 					#label: #(#{Kernel.UserMessage} #key: #Pattern #defaultString: 'Pattern' #catalogID: #pdp) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 12 0.35 -118 1 0 0.679924 -92 1 ) 					#name: #matchSelectorInputField 					#model: #matchSelector 					#type: #symbol ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 6 0.68 -118 1 -8 1 -92 1 ) 					#name: #conversionSelectorInputField 					#model: #conversionSelector 					#type: #symbol ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 12 0.35 -137 1 ) 					#name: #Label4 					#label: #(#{Kernel.UserMessage} #key: #MatchSelector #defaultString: 'Match Selector' #catalogID: #pdp) ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 6 0.68 -137 1 ) 					#name: #Label5 					#label: #(#{Kernel.UserMessage} #key: #ConversionSelector #defaultString: 'Conversion Selector' #catalogID: #pdp) ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutSizedOrigin} -100 0.5 -33 1 80 23 ) 					#name: #okButton 					#model: #accept 					#label: #(#{Kernel.UserMessage} #key: #Ok #defaultString: 'Ok' #catalogID: #pdp) 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutSizedOrigin} 20 0.5 -33 1 81 23 ) 					#name: #cancelButton 					#model: #cancel 					#label: #(#{Kernel.UserMessage} #key: #Cancel #defaultString: 'Cancel' #catalogID: #pdp) 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 12 0.35 -82 1 ) 					#name: #Label2 					#label: #(#{Kernel.UserMessage} #key: #DisplayAllLimit #defaultString: 'Display all limit' #catalogID: #pdp) ) 				#(#{UI.SpinButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 90 0.35 -83 1 150 0.35 -60 1 ) 					#name: #displayAllLimitField 					#model: #displayAllLimit 					#type: #number 					#formatString: '0' 					#low: 1 					#high: 100 					#interval: 1 ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{UI.AlignmentOrigin} -10 1 -10 1 1 1 ) 					#name: #HelpButton 					#model: #help 					#label: #(#{Kernel.UserMessage} #key: #Help #defaultString: 'Help' #catalogID: #pdp) 					#defaultable: true ) 				#(#{UI.DividerSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 -48 1 0 1 -44 1 ) 					#name: #Divider1 ) ) ) )</body></methods><methods><class-id>CraftedSmalltalk.ContextListPolicyEditor class</class-id> <category>resources</category><body package="Debugger-UI">menu	"MenuEditor new openOnClass: self andSelector: #menu"	&lt;resource: #menu&gt;	^#(#{UI.Menu} #(			#(#{UI.MenuItem} 				#rawLabel: #(#{Kernel.UserMessage} #key: #New #defaultString: 'New' #catalogID: #pdp) 				#value: #newPattern ) 			#(#{UI.MenuItem} 				#rawLabel: #(#{Kernel.UserMessage} #key: #Remove #defaultString: 'Remove' #catalogID: #pdp) 				#value: #removePattern 				#enablementSelector: #patternIsSelected ) 			#(#{UI.MenuItem} 				#rawLabel: #(#{Kernel.UserMessage} #key: #Undo #defaultString: 'Undo' #catalogID: #pdp) 				#nameKey: #undo 				#value: #undo 				#enablementSelector: #canUndo ) 			#(#{UI.MenuItem} 				#rawLabel: #(#{Kernel.UserMessage} #key: #Copy #defaultString: 'Copy' #catalogID: #pdp) 				#value: #copy 				#enablementSelector: #patternIsSelected ) 			#(#{UI.MenuItem} 				#rawLabel: #(#{Kernel.UserMessage} #key: #Paste #defaultString: 'Paste' #catalogID: #pdp) 				#value: #paste 				#enablementSelector: #canPaste ) ) #(2 1 2 ) nil ) decodeAsLiteralArray</body><body package="Debugger-UI">menuBar	"MenuEditor new openOnClass: self andSelector: #menuBar"	&lt;resource: #menu&gt;	^#(#{UI.Menu} #(			#(#{UI.MenuItem} 				#rawLabel: #(#{Kernel.UserMessage} #key: #Edit #defaultString: 'Edit' #catalogID: #pdp) 				#submenu: #(#{UI.Menu} #(						#(#{UI.MenuItem} 							#rawLabel: #(#{Kernel.UserMessage} #key: #New #defaultString: 'New' #catalogID: #pdp) 							#value: #newPattern ) 						#(#{UI.MenuItem} 							#rawLabel: #(#{Kernel.UserMessage} #key: #Remove #defaultString: 'Remove' #catalogID: #pdp) 							#value: #removePattern 							#enablementSelector: #patternIsSelected ) 						#(#{UI.MenuItem} 							#rawLabel: #(#{Kernel.UserMessage} #key: #Undo #defaultString: 'Undo' #catalogID: #pdp) 							#nameKey: #undo 							#value: #undo 							#enablementSelector: #canUndo ) 						#(#{UI.MenuItem} 							#rawLabel: #(#{Kernel.UserMessage} #key: #Copy #defaultString: 'Copy' #catalogID: #pdp) 							#value: #copy 							#enablementSelector: #patternIsSelected ) 						#(#{UI.MenuItem} 							#rawLabel: #(#{Kernel.UserMessage} #key: #Paste #defaultString: 'Paste' #catalogID: #pdp) 							#value: #paste 							#enablementSelector: #canPaste ) ) #(2 1 2 ) nil ) ) ) #(1 ) nil ) decodeAsLiteralArray</body></methods><methods><class-id>Tools.ToolbarIconLibrary class</class-id> <category>resources</category><body package="Debugger-UI">debugFirstLoop20x20	"UIMaskEditor new openOnClass: self andSelector: #debugFirstLoop20x20"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 20@20 depth: 6 bitsPerPixel: 8 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4593 64 321)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7163 7163 7163)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4658 578 771)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5878 7388 5621)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2795 2795 2795)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3501 0 225)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7773 7773 7773)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3244 3244 3244)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6039 7581 5750)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4593 578 771)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5718 7163 5461)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2955 2955 2955)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3822 0 225)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3951 0 257)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6746 6746 6746)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7934 7934 7934)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3405 3405 3405)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4465 1767 1767)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5364 6746 5139)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4465 64 321)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8095 8095 8095)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6938 6938 6938)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5653 2249 2249)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4208 0 257)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3148 3148 3148)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7388 7388 7388)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4786 1895 1895)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4658 0 289)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3309 3309 3309)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6199 7773 5910)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2730 2730 2730)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6232 6232 6232)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4304 0 257)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6392 6392 6392)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3533 450 578)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3437 32 225)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2891 2891 2891)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3565 32 257)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5975 2377 2377)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5525 6938 5300)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6553 6553 6553)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5204 6553 4979)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4079 0 257)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3052 3052 3052)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7581 7581 7581)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3501 418 578)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6135 6135 6135)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: '@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LCGA0\GA0C@0LC@0LC@0LC@0LC@B\C@0LC@2\@@0LC@0LC@0LC@0HC@0LC@0LC@0LB@0LC@0LC@0LJEQTUEQTUEQTUEQTJ@0LC@0LCEA@PDA4]DA@PDA@PDA@T@0LC@0LWA0\GGQ8]GP\GA0\GA1\C@0LCHR4-KR4HBP$IB@ -KR4-KRDC@0LXF!(ZF"0DA@PDAB0,F!(ZF@LC@2,A@PDAK@,KB0,KB0,,@PD+@0LCC!XVE!XLJB (JB LCAXVE 8C@0LMC0&lt;OC0TSD1LEAP&lt;OC0&lt;OCPLC@0L[JR$)AR(EAR$)JR$)JQ,C@0LC@2X"H"H_G2H"H"H"H"H"I LC@0LC@2L/K2&lt;/K2&lt;/K2&lt;/K2LC@0LC@0LC@28/K2&lt;/K2&lt;/K2&lt;.@0LC@0LC@0LC@2PRK2&lt;/K2&lt;RI@LC@0LC@0LC@0LC@0LFA XFA LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0@a'))</body><body package="Debugger-UI">debugFirstLoop20x20bw	"Tools.UIMaskEditor new openOnClass: self andSelector: #debugFirstLoop20x20bw"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 20@20 depth: 1 bitsPerPixel: 1 palette: CoveragePalette monoMaskPalette usingBits: #[0 0 0 0 0 0 0 0 0 248 0 0 3 6 0 0 4 1 0 0 8 0 128 0 17 128 64 0 17 96 64 0 33 24 32 0 33 6 32 0 33 1 32 0 33 6 32 0 33 24 32 0 17 96 64 0 17 128 64 0 8 0 128 0 4 1 0 0 3 6 0 0 0 248 0 0 0 0 0 0])</body><body package="Debugger-UI">debugFirstLoop20x20mask	"UIMaskEditor new openOnClass: self andSelector: #debugFirstLoop20x20mask"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 20@20 depth: 1 bitsPerPixel: 1 palette: CoveragePalette monoMaskPalette usingBits: #[0 0 0 0 0 0 0 0 0 248 0 0 3 254 0 0 7 255 0 0 15 255 128 0 31 255 192 0 31 255 192 0 63 255 224 0 63 255 224 0 63 255 224 0 63 255 224 0 63 255 224 0 31 255 192 0 31 255 192 0 15 255 128 0 7 255 0 0 3 254 0 0 0 248 0 0 0 0 0 0])</body><body package="Debugger-UI">debugJumpToCaret20x20	"UIMaskEditor new openOnClass: self andSelector: #debugJumpToCaret20x20"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 20@20 depth: 2 bitsPerPixel: 2 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1349 161 4272)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: #[170 170 170 170 170 0 0 0 170 170 170 170 170 0 0 0 170 168 32 170 170 0 0 0 170 170 138 170 170 0 0 0 170 170 138 170 170 0 0 0 170 170 138 170 170 0 0 0 170 170 138 170 170 0 0 0 170 154 138 154 170 0 0 0 170 150 138 90 170 0 0 0 165 85 137 85 106 0 0 0 170 150 138 90 170 0 0 0 170 154 138 154 170 0 0 0 170 170 138 170 170 0 0 0 170 170 138 170 170 0 0 0 170 170 138 170 170 0 0 0 170 170 138 170 170 0 0 0 170 168 32 170 170 0 0 0 170 170 170 170 170 0 0 0 170 170 170 170 170 0 0 0 170 170 170 170 170 0 0 0])</body><body package="Debugger-UI">debugJumpToCaret20x20mask	"UIMaskEditor new openOnClass: self andSelector: #debugJumpToCaret20x20mask"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 20@20 depth: 1 bitsPerPixel: 1 palette: CoveragePalette monoMaskPalette usingBits: #[0 0 0 0 0 0 0 0 1 176 0 0 0 64 0 0 0 64 0 0 0 64 0 0 0 64 0 0 4 68 0 0 6 76 0 0 63 95 128 0 6 76 0 0 4 68 0 0 0 64 0 0 0 64 0 0 0 64 0 0 0 64 0 0 1 176 0 0 0 0 0 0 0 0 0 0 0 0 0 0])</body><body package="Debugger-UI">debugNextLoop20x20	"UIMaskEditor new openOnClass: self andSelector: #debugNextLoop20x20"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 20@20 depth: 6 bitsPerPixel: 8 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4593 64 321)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7163 7163 7163)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4658 578 771)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5878 7388 5621)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2795 2795 2795)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3501 0 225)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7773 7773 7773)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3244 3244 3244)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1349 161 4272)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6039 7581 5750)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4593 578 771)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5718 7163 5461)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2955 2955 2955)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3951 0 257)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3822 0 225)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7934 7934 7934)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3405 3405 3405)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6746 6746 6746)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4465 1767 1767)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5364 6746 5139)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4465 64 321)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8095 8095 8095)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6938 6938 6938)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5653 2249 2249)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4208 0 257)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3148 3148 3148)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7388 7388 7388)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4786 1895 1895)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4658 0 289)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3309 3309 3309)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6199 7773 5910)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2730 2730 2730)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6232 6232 6232)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4304 0 257)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6392 6392 6392)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3533 450 578)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3437 32 225)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2891 2891 2891)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3565 32 257)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5975 2377 2377)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5525 6938 5300)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6553 6553 6553)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5204 6553 4979)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4079 0 257)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3052 3052 3052)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7581 7581 7581)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3501 418 578)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6135 6135 6135)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: '@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LIBPLC@0LC@0LC@0LCGQ4]GPLC@0$I@0LC@0LC@0LC@B C@0LC@0$IBP$IBPLC@0LC@0HC@0LC@0LCBP$IBP$I@0LC@0LKE!XVE!XVE LV@0$I@0LC@0LCEQ@PDA8^DA@PD@LCBP$C@0LC@0LXA0\GG!&lt;^G \GA0LC@0LC@0LCH"8.K"8HB (JB@ .K"8.K"HC@0LYF1,[F24DA@PDAB4-F1,[FPLC@20A@PDAKP0LC@0LC@0-@PD,@0LCC!\WE1\MJR$)JR$MCQ\WE08C@0LOD!HRD TTEAPEAQHRD!HRC0LC@0L\J"(*AR,EAR(*J"(*J!0C@0LC@2\#H2L HBL#H2L#H2L#I0LC@0LC@2P0LC@0LC@0LC@0LBPC@0LC@0LC@2&lt;0LC@0LC@0LC@/@0LC@0LC@0LC@2TSLC@0LC@SIPLC@0LC@0LC@0LC@0LFA XFA LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0@a'))</body><body package="Debugger-UI">debugNextLoop20x20bw	"Tools.UIMaskEditor new openOnClass: self andSelector: #debugNextLoop20x20bw"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 20@20 depth: 1 bitsPerPixel: 1 palette: CoveragePalette monoMaskPalette usingBits: #[0 0 0 0 0 1 128 0 0 241 128 0 3 7 224 0 4 7 224 0 8 1 128 0 17 129 128 0 17 96 0 0 33 24 32 0 33 6 32 0 33 1 32 0 33 6 32 0 33 24 32 0 17 96 64 0 17 128 64 0 8 0 128 0 4 1 0 0 3 6 0 0 0 248 0 0 0 0 0 0])</body><body package="Debugger-UI">debugNextLoop20x20mask	"UIMaskEditor new openOnClass: self andSelector: #debugNextLoop20x20mask"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 20@20 depth: 1 bitsPerPixel: 1 palette: CoveragePalette monoMaskPalette usingBits: #[0 3 192 0 0 3 192 0 0 255 240 0 3 255 240 0 7 255 240 0 15 255 240 0 31 255 224 0 31 255 192 0 63 255 224 0 63 255 224 0 63 255 224 0 63 255 224 0 63 255 224 0 31 255 192 0 31 255 192 0 15 255 128 0 7 255 0 0 3 254 0 0 0 248 0 0 0 0 0 0])</body><body package="Debugger-UI">debugRestart20x20	"UIMaskEditor new openOnClass: self andSelector: #debugRestart20x20"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 20@20 depth: 4 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3148 3148 3148)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1349 161 4272)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5846 5846 4529)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6874 6874 4658)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3373 3373 3373)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7870 7870 5332)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2955 2955 2955)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2795 2795 2795)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7388 7388 5011)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3501 3501 3501)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 5557)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4915 4915 3822)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: '@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BH"@@@@@@@@@@@@H @@H @@@@@@@@@B@@@@@B@@@@@@@@@B@J**@B@@@@@@@@@ B#.3(@H@@@@@@@@ AVY&amp;T@H@@@@@@@@ @Y&amp;YD@H@@@@@@@@ A&lt;QL\@H@@@@@@@@B@H"H@@@@@@@@@@@B@@@ @@@@@@@@@@@@H @"@@@@@@@@@@@@@BH"H@@@@@@@@@@@@@@"@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'))</body><body package="Debugger-UI">debugRestart20x20mask	"UIMaskEditor new openOnClass: self andSelector: #debugRestart20x20mask"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 20@20 depth: 1 bitsPerPixel: 1 palette: CoveragePalette monoMaskPalette usingBits: #[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 240 0 0 3 12 0 0 4 2 0 0 4 242 0 0 9 249 0 0 9 249 0 0 9 249 0 0 9 249 0 0 4 240 0 0 4 32 0 0 3 48 0 0 0 248 0 0 0 48 0 0 0 32 0 0 0 0 0 0 0 0 0 0])</body><body package="Debugger-UI">debugReturn20x20	"UIMaskEditor new openOnClass: self andSelector: #debugReturn20x20"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 20@20 depth: 5 bitsPerPixel: 8 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2281 2281 2281)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6553 6553 4433)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2505 2505 2505)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2345 2345 2345)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2827 2827 2827)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5653 7131 5429)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2409 2409 2409)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6424 8063 6135)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2730 2730 2730)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2570 2570 2570)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5878 7388 5621)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6264 7870 5975)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2313 2313 2313)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2634 2634 2634)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2795 2795 2795)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2698 2698 2698)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5493 6874 5236)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2859 2859 2859)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5332 6681 5075)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6746 6746 4593)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6649 6649 4497)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6071 7613 5814)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: '@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LO@0LC@0LC@0LC@0LC@0LC@0LCC0 O@0LC@0LC@0LC@0LC@0LC@0LOC@&lt;C@0LC@0LC@0LC@0LC@0LCC1XVE &lt;C@0LC@0LC@0LC@0LC@0LIB0,KBPLC@0LC@0LC@0LC@0LCD@XFA XFD@LC@0LC@0LC@0LC@0LBDQDQDQDB@0LC@0LC@0LC@0LC@!LSD1LSD1LB@0LC@0LC@0LC@0LB@ HB@ HB@ HC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@@@@@0LC@0LC@0LC@0LC@0LC@0@TEAP@@0LC@0LC@0LC@0LC@0LC@ATUEP@C@0LC@0LC@0LC@0LC@0L@@PDA@@LC@0LC@0LC@0LC@0LC@0L@@@@C@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0@a'))</body><body package="Debugger-UI">debugReturn20x20mask	"UIMaskEditor new openOnClass: self andSelector: #debugReturn20x20mask"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 20@20 depth: 1 bitsPerPixel: 1 palette: CoveragePalette monoMaskPalette usingBits: #[0 0 0 0 0 0 0 0 0 32 0 0 0 112 0 0 0 112 0 0 0 248 0 0 0 248 0 0 1 252 0 0 1 252 0 0 3 254 0 0 3 254 0 0 0 0 0 0 0 112 0 0 0 248 0 0 0 248 0 0 0 248 0 0 0 112 0 0 0 0 0 0 0 0 0 0 0 0 0 0])</body><body package="Debugger-UI">debugRun20x20	"UIMaskEditor new openOnClass: self andSelector: #debugRun20x20"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 20@20 depth: 5 bitsPerPixel: 8 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5621 7035 5364)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6521 8191 6232)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2505 2505 2505)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6135 7709 5846)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6360 7998 6071)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2827 2827 2827)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2345 2345 2345)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5364 6746 5139)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2409 2409 2409)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2730 2730 2730)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2570 2570 2570)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5268 6649 5043)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5878 7388 5621)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6264 7870 5975)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5718 7195 5493)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2473 2473 2473)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2634 2634 2634)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2313 2313 2313)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2795 2795 2795)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2698 2698 2698)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6007 7549 5750)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2859 2859 2859)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5493 6874 5236)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6456 8095 6167)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2281 2281 2281)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: '@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@1LS@0LC@0LC@0LC@0LC@0LC@0LCD0DSD0LC@0LC@0LC@0LC@0LC@0LSFA XD1LC@0LC@0LC@0LC@0LC@1LEAPTEAQLS@0LC@0LC@0LC@0LCB 8NC 8NC 8JB LC@0LC@0LC@0LTA@PDA@PDA@PDEAPC@0LC@0LC@0HUEQTUEQTUEQTUEPHC@0LC@0LC@ 4MCP4MCP4MCP4M@ LC@0LC@0LBC0&lt;OC0&lt;OC0&lt;O@ HC@0LC@0LC@1@@@@@@@@@@DA@C@0LC@0LC@0LCFQ\WE1\WFQ$C@0LC@0LC@0LC@0LYB@ HFQ$C@0LC@0LC@0LC@0LC@1$LFQ$C@0LC@0LC@0LC@0LC@0LCFQ$C@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0@a'))</body><body package="Debugger-UI">debugRun20x20bw	"Tools.UIMaskEditor new openOnClass: self andSelector: #debugRun20x20bw"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 20@20 depth: 1 bitsPerPixel: 1 palette: CoveragePalette monoMaskPalette usingBits: #[0 0 0 0 0 0 0 0 0 0 0 0 12 0 0 0 15 0 0 0 15 192 0 0 15 240 0 0 15 252 0 0 15 255 0 0 15 255 128 0 15 255 128 0 15 255 0 0 15 252 0 0 15 240 0 0 15 192 0 0 15 0 0 0 12 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])</body><body package="Debugger-UI">debugRun20x20mask	"UIMaskEditor new openOnClass: self andSelector: #debugRun20x20mask"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 20@20 depth: 1 bitsPerPixel: 1 palette: CoveragePalette monoMaskPalette usingBits: #[0 0 0 0 0 0 0 0 0 0 0 0 12 0 0 0 15 0 0 0 15 192 0 0 15 240 0 0 15 252 0 0 15 255 0 0 15 255 128 0 15 255 128 0 15 255 0 0 15 252 0 0 15 240 0 0 15 192 0 0 15 0 0 0 12 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])</body><body package="Debugger-UI">debugRunToCaret20x20	"UIMaskEditor new openOnClass: self andSelector: #debugRunToCaret20x20"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 20@20 depth: 4 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4915 6199 4722)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6521 8191 6232)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6296 7902 6007)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4690 5910 4497)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5975 7516 5718)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2827 2827 2827)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3212 3212 3212)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3373 3373 3373)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2634 2634 2634)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3019 3019 3019)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2538 2538 2538)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3501 3501 3501)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5621 7067 5364)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5236 6585 5011)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'UUUUUUUUUUUUUP@@UUUUUUUUUUUUUP@@UUUUUUUU@E@EUP@@UUUUUUUUUPUUUP@@UUUUUUUUUPUUUP@@UUW]UUUUUPUUUP@@UUWR7UUUUPUUUP@@UUVSL9%UUPUUUP@@UUVFY&amp;ZHUPUUUP@@UUV&gt;;.;.-PUUUP@@UUU???=7UPUUUP@@UUWAD\1UUPUUUP@@UUWD3EUUUPUUUP@@UUWLUUUUUPUUUP@@UUUUUUUUUPUUUP@@UUUUUUUUUPUUUP@@UUUUUUUU@E@EUP@@UUUUUUUUUUUUUP@@UUUUUUUUUUUUUP@@UUUUUUUUUUUUUP@@'))</body><body package="Debugger-UI">debugRunToCaret20x20mask	"UIMaskEditor new openOnClass: self andSelector: #debugRunToCaret20x20mask"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 20@20 depth: 1 bitsPerPixel: 1 palette: CoveragePalette monoMaskPalette usingBits: #[0 0 0 0 0 0 0 0 0 13 128 0 0 2 0 0 0 2 0 0 12 2 0 0 15 2 0 0 15 194 0 0 15 242 0 0 15 250 0 0 15 242 0 0 15 194 0 0 15 2 0 0 12 2 0 0 0 2 0 0 0 2 0 0 0 13 128 0 0 0 0 0 0 0 0 0 0 0 0 0])</body><body package="Debugger-UI">debugStep20x20	"UIMaskEditor new openOnClass: self andSelector: #debugStep20x20"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 20@20 depth: 5 bitsPerPixel: 8 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1702 2538 4047)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2762 3630 5043)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3212 3630 4336)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2409 3276 4754)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1413 2184 3662)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3758 4369 5493)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4658 5139 5975)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1959 2377 3116)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2987 3855 5236)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4561 5172 6199)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2762 3052 3533)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4047 4722 5942)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3758 4079 4658)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2216 2602 3276)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1992 2891 4433)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2955 3180 3662)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2505 3052 3983)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5043 5557 6456)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'A@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@$IBP$IA@PDA@PDA@PDA@PDA@PAA@PDA@PAA@PDA@PDA@PDA@PD@0PDA@PDA@PCA@PDA@PDA@PDA@POA@PDA@POC0&lt;OC0PDA@PDA@PDA@@DA@PDA@P@@@@DA@PDA@PDA@PDA@PDA@PDA@PEA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDD@4PA@PDA@PPCQ@DA@PDA@PDA@,GD \KA@PDB0\RA0,DA@PDA@PD@ (JB HDA@PBB (J@ PDA@PDA@PNA 0FC PDA@8FC@XNA@PDA@PDA@PHDP DA@PDA@ QB@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@@a'))</body><body package="Debugger-UI">debugStep20x20bw	"Tools.UIMaskEditor new openOnClass: self andSelector: #debugStep20x20bw"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 20@20 depth: 1 bitsPerPixel: 1 palette: CoveragePalette monoMaskPalette usingBits: #[0 0 0 0 0 0 0 0 0 0 0 0 1 240 0 0 2 8 0 0 4 4 0 0 4 31 0 0 4 14 0 0 0 4 0 0 0 0 0 0 14 14 0 0 17 17 0 0 17 17 0 0 17 17 0 0 14 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])</body><body package="Debugger-UI">debugStep20x20mask	"UIMaskEditor new openOnClass: self andSelector: #debugStep20x20mask"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 20@20 depth: 1 bitsPerPixel: 1 palette: CoveragePalette monoMaskPalette usingBits: #[0 0 0 0 0 0 0 0 0 0 0 0 1 240 0 0 2 8 0 0 4 4 0 0 4 31 0 0 4 14 0 0 0 4 0 0 0 0 0 0 14 14 0 0 31 31 0 0 31 31 0 0 31 31 0 0 14 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])</body><body package="Debugger-UI">debugStepInto20x20	"UIMaskEditor new openOnClass: self andSelector: #debugStepInto20x20"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 20@20 depth: 5 bitsPerPixel: 8 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1638 2473 3983)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1510 2313 3790)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1317 2056 3533)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3212 3630 4336)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3758 4369 5493)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1413 2184 3662)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4658 5139 5975)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1959 2377 3116)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2987 3855 5236)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2473 3341 4786)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2891 3758 5139)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2281 3148 4658)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2634 3501 4915)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2762 3052 3533)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3758 4079 4658)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4561 5172 6199)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2088 2987 4497)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2955 3180 3662)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2216 2602 3276)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4047 4722 5942)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1927 2795 4336)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2505 3052 3983)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1799 2634 4144)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2795 3630 5043)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5043 5557 6456)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'A@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@$IBP$DA@PDA@PDA@PDA@PDA@PKA@PDA@,DA@PDA@PDA@PDA@PDAA DA@PDF@PDA@PDA@PDA@PDA@PDA@PDA@PMA@PDA@PDA@PDA@PDAAHOD PDA@(DA@PRC1HDA@PDA@PNA1$GC PDC@PDC \YA08DA@PDA@LPDA@CA@PQA@PCDA@P@0PDA@PDD0TTAQLDAATDAALEE@TSA@PDA@PDBAXHA@PDE0PDA@ VB@PDA@PDA@PDA@PDA@P@A@PDA@PDA@PDA@PDA@PDA@PA@PDA@PPDA@PDA@PDA@PDA@PDA@PFA XDA@PDA@PDA@PDA@PDA@PDA@PBA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@@a'))</body><body package="Debugger-UI">debugStepInto20x20bw	"Tools.UIMaskEditor new openOnClass: self andSelector: #debugStepInto20x20bw"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 20@20 depth: 1 bitsPerPixel: 1 palette: CoveragePalette monoMaskPalette usingBits: #[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 7 128 0 0 8 64 0 0 8 64 0 0 0 64 0 0 28 71 0 0 34 72 128 0 34 72 128 0 34 72 128 0 28 71 0 0 0 64 0 0 1 240 0 0 0 224 0 0 0 64 0 0 0 0 0 0 0 0 0 0 0 0 0 0])</body><body package="Debugger-UI">debugStepInto20x20mask	"UIMaskEditor new openOnClass: self andSelector: #debugStepInto20x20mask"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 20@20 depth: 1 bitsPerPixel: 1 palette: CoveragePalette monoMaskPalette usingBits: #[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 7 128 0 0 8 64 0 0 8 64 0 0 0 64 0 0 28 71 0 0 62 79 128 0 62 79 128 0 62 79 128 0 28 71 0 0 0 64 0 0 1 240 0 0 0 224 0 0 0 64 0 0 0 0 0 0 0 0 0 0 0 0 0 0])</body><body package="Debugger-UI">debugStepOver20x20	"UIMaskEditor new openOnClass: self andSelector: #debugStepOver20x20"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 20@20 depth: 5 bitsPerPixel: 8 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1413 2024 3116)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(899 1285 1927)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3212 3630 4336)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3758 4369 5493)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4658 5139 5975)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(707 1028 1606)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1702 2473 3758)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1959 2377 3116)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1124 1606 2505)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(642 932 1478)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(803 1156 1799)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4561 5172 6199)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1028 1478 2216)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2762 3052 3533)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4047 4722 5942)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(803 1156 1767)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3758 4079 4658)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1028 1478 2184)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2955 3180 3662)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(964 1381 2088)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1060 1542 2313)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1510 2184 3405)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2216 2602 3276)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2505 3052 3983)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5043 5557 6456)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: '@ HB@ HB@ HB@ HB@ HB@ HB@ HB@ HB@ HB@ HB@ HB@ HB@ HB@ HB@ HB@ HB@ HB@ HB@ HB@ HB@ HB@ HSC 8NC 8NC!LB@ HB@ HB@ HBEPHB@ HB@ HB@!TB@ HB@ HB@ LB@ HB@ HB@ HB@!XB@ HB@ HBC@HB@ HB@ HB@!DAB@DQ@ HB@ HG@ HB@ HB@ HB@ (WB HB@ HB@ HB@ HB@ HB@ HB@ ,B@ HB@ HB@ HB@ @@@ @@@ HB@ HB@ HB@!PRE@HB@@HB@ @B@!PRE@HB@ HOA!(FC0H@@ HB@@HOA!(FC0HB@ PMCP4D@ @B@ H@@ PMCP4D@ HBF@TPAQ B@@HB@ @BF@TPAQ B@ HBBQ$I@ H@@ HB@@HBBQ$I@ HB@ HB@ HB@ @@@ @@@ HB@ HB@ HB@ HB@ HB@ HB@ HB@ HB@ HB@ HB@ HB@ HB@ HB@ HB@ HB@ HB@ HB@ HB@ HB@ HB@ HB@ HB@ HB@ HB@ HB@ HB@ HB@ HB@ HB@ @a'))</body><body package="Debugger-UI">debugStepOver20x20bw	"Tools.UIMaskEditor new openOnClass: self andSelector: #debugStepOver20x20bw"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 20@20 depth: 1 bitsPerPixel: 1 palette: CoveragePalette monoMaskPalette usingBits: #[0 0 0 0 0 0 0 0 0 0 0 0 7 252 0 0 8 2 0 0 16 1 0 0 16 7 192 0 16 3 128 0 0 1 0 0 1 176 0 0 57 19 128 0 69 20 64 0 69 20 64 0 69 20 64 0 57 19 128 0 1 176 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])</body><body package="Debugger-UI">debugStepOver20x20mask	"UIMaskEditor new openOnClass: self andSelector: #debugStepOver20x20mask"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 20@20 depth: 1 bitsPerPixel: 1 palette: CoveragePalette monoMaskPalette usingBits: #[0 0 0 0 0 0 0 0 0 0 0 0 7 252 0 0 8 2 0 0 16 1 0 0 16 7 192 0 16 3 128 0 0 1 0 0 1 176 0 0 57 19 128 0 125 23 192 0 125 23 192 0 125 23 192 0 57 19 128 0 1 176 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])</body><body package="Debugger-UI">debugTerminate20x20	"UIMaskEditor new openOnClass: self andSelector: #debugTerminate20x20"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 20@20 depth: 5 bitsPerPixel: 8 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7195 3244 2281)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2345 2345 2345)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3373 3373 3373)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2505 2505 2505)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7292 3565 2505)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7131 3052 2152)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6970 2538 1799)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2955 2955 2955)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2666 2666 2666)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2377 2377 2377)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7067 2859 2024)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3116 3116 3116)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6970 2602 1831)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7003 2666 1895)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3276 3276 3276)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7227 3341 2345)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7163 3148 2216)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2859 2859 2859)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7099 2955 2088)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2441 2441 2441)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2602 2602 2602)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7035 2762 1959)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3341 3341 3341)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7259 3437 2409)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3052 3052 3052)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2762 2762 2762)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7292 3501 2473)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3212 3212 3212)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: '@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDO@PDA@PDA@PDAC0DA@PDA@PDAC0TO@PDA@PDA@P&lt;EC0DA@PDA@P&lt;[F1,O@PDA@PDOF1,[C0DA@PDA@Q0XFA \@PDAGA XFA0A@PDA@PDA@Q$PDA@Y@Q$PDA@Y@PDA@PDA@PDA@Q$@@@@Y@@@@FPDA@PDA@PDA@PDA@P @@@@@@@ A@PDA@PDA@PDA@PDA@Q(FA XZ@PDA@PDA@PDA@PDA@PDZD1LSD1LZ@PDA@PDA@PDA@PDAA@,KB0PKB0,D@PDA@PDA@PDA@PPVE!XD@PPVE!XD@PDA@PDA@PDDC 8NA@DA@PPNC 8D@PDA@PDAE@4MCQPA@PDA@QPMCP4T@PDA@PDAB \J@PDA@PDA@P(GB DA@PDA@PDA@ DA@PDA@PDA@PHA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@P@a'))</body><body package="Debugger-UI">debugTerminate20x20mask	"UIMaskEditor new openOnClass: self andSelector: #debugTerminate20x20mask"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 20@20 depth: 1 bitsPerPixel: 1 palette: CoveragePalette monoMaskPalette usingBits: #[0 0 0 0 0 0 0 0 8 2 0 0 28 7 0 0 62 15 128 0 31 31 0 0 15 190 0 0 7 252 0 0 3 248 0 0 1 240 0 0 3 248 0 0 7 252 0 0 15 190 0 0 31 31 0 0 62 15 128 0 28 7 0 0 8 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0])</body></methods><initialize><class-id>CraftedSmalltalk.RestartSignal</class-id></initialize><initialize><class-id>CraftedSmalltalk.DebuggerClient2</class-id></initialize><initialize><class-id>CraftedSmalltalk.DebuggerClient</class-id></initialize><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>Object</name><environment>Core</environment><super></super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Kernel-Objects</category><attributes><package>Kernel-Objects</package></attributes></class><class><name>ApplicationModel</name><environment>UI</environment><super>UI.Model</super><private>false</private><indexed-type>none</indexed-type><inst-vars>builder uiSession eventHandlers </inst-vars><class-inst-vars>savedWindowInformation </class-inst-vars><imports></imports><category>UIBuilder-Framework</category><attributes><package>UIBuilder-Framework</package></attributes></class><class><name>SystemNotification</name><environment>Core</environment><super>Core.ControlInterrupt</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Kernel-Exception Handling</category><attributes><package>Kernel-Exception Handling</package></attributes></class><class><name>ScrollingView</name><environment>UI</environment><super>UI.SimpleView</super><private>false</private><indexed-type>none</indexed-type><inst-vars>scrollOffset </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>UIBasics-Support</category><attributes><package>UIBasics-Support</package></attributes></class><class><name>Notification</name><environment>Core</environment><super>Core.Exception</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Kernel-Exception Handling</category><attributes><package>Kernel-Exception Handling</package></attributes></class><class><name>AlphaBlendedIcons</name><environment>Smalltalk</environment><super>Core.Assets</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Tools-Resources</package></attributes></class></st-source>