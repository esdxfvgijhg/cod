<?xml version="1.0"?><st-source><!-- Name: RBTabbedToolsetsNotice: Copyright 1999-2016 Cincom Systems, Inc.  All rights reserved.Comment: This is a reimplementation of the RB_Tabs package. It is meant for the 7.6 Browser and above (aka 4xx browser). It is reimplemented because it takes advnantage of the changes made in the 7.6 browser.  This is an unsupported goodie, provided as is.DbIdentifier: bear73DbTrace: 490330DbUsername: trobinsonDbVersion: 8.2 - 1PackageName: RBTabbedToolsetsParcel: #('RBTabbedToolsets')ParcelName: RBTabbedToolsetsPrintStringCache: (8.2 - 1,trobinson)Version: 8.2 - 1Date: 10:04:06 AM April 29, 2016 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.2 (apr16.5) of April 29, 2016 on April 29, 2016 at 10:04:06 AM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>AutohideTabControlComposite</name><environment>Refactory.Browser</environment><super>UI.TabControlComposite</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>My Classes</category><attributes><package>RBTabbedToolsets</package></attributes></class><comment><class-id>Refactory.Browser.AutohideTabControlComposite</class-id><body>I extend my subclass behavior by adjusting the layout of my children based on whether the tab bar has more than one tab or not. If not, it is not shown, when 2+ exist, it is shown.</body></comment><methods><class-id>Refactory.Browser.AutohideTabControlComposite</class-id> <category>displaying</category><body package="RBTabbedToolsets">displayOn: gc	"set the clipping rectangle, otherwise the artis will draw the tab bar anywhere, even outside of our bounds (like when the tab bar is hidden)"	gc clippingRectangle: self bounds.	super displayOn: gc</body></methods><methods><class-id>Refactory.Browser.AutohideTabControlComposite</class-id> <category>testing</category><body package="RBTabbedToolsets">shouldShowTabBar	^self tabBar widget sequence size &gt; 1</body></methods><methods><class-id>Refactory.Browser.AutohideTabControlComposite</class-id> <category>initialize-release</category><body package="RBTabbedToolsets">tabBar: aTabBar subCanvas: aSubcanvas border: aBorder	| topOffset borderHeight tabBarLayout canvasLayout borderedWrapper |	topOffset := aTabBar preferredHeight.	borderHeight := aBorder top.	subCanvas := aSubcanvas.	"Overridden to assign a Block for bottomOffset and topOffset. The Blocks are evaluated every time the layout is required"	(tabBarLayout := LayoutFrame new)		bottomOffset: [(self shouldShowTabBar ifTrue:[topOffset] ifFalse:[0]) + borderHeight];		rightFraction: 1.	(canvasLayout := LayoutFrame new)		topOffset: [self shouldShowTabBar ifTrue:[topOffset] ifFalse:[0]];		rightFraction: 1;		bottomFraction: 1.	(borderedWrapper := self borderedWrapperClass on: aSubcanvas)		border: aBorder;		insideColor: self backgroundColor.	self add: borderedWrapper in: canvasLayout.	self add: aTabBar in: tabBarLayout</body></methods><methods><class-id>Refactory.Browser.RefactoringBrowser</class-id> <category>interface opening</category><body package="RBTabbedToolsets">addToolsetsTabs		| components compositeToWrap containerToInjectInto tabBarView tabComposite |	components := self builder window component components.	compositeToWrap := (components at: 3) bottomComponent.	containerToInjectInto := compositeToWrap container.	tabBarView := builder policy tabControlBarClass new.	tabBarView textStyle: builder policy class systemWidgetTextStyle.	tabBarView model: toolsetsList listHolder.	tabBarView selectionChannel: toolsetsList selectionIndexHolder.	tabBarView controller keyboardProcessor: builder keyboardProcessor.	tabComposite := AutohideTabControlComposite new.	"Hook things up so that the appropriate changes are picked up"	"#elementsInSequenceHaveChanged has quite a number of sideeffects:		- tells the view that its visuals are invalid (updating the labels of the tabs)		- tells the composite to invalidate its layout (making the tabs visible or invisible)		- redraws the tab bar"	self toolsets		expressInterestIn: #insert:		for: [tabBarView elementsInSequenceHaveChanged]		sendBack: #value.	self toolsets		expressInterestIn: #remove:		for: [tabBarView elementsInSequenceHaveChanged]		sendBack: #value.	navigator		expressInterestIn: nil		for: [tabBarView elementsInSequenceHaveChanged]		sendBack: #value.	containerToInjectInto component: tabComposite. 	tabComposite		tabBar: tabBarView		subCanvas: compositeToWrap		border: builder policy tabControlBorder.</body><body package="RBTabbedToolsets">postOpenWith: aBuilder	super postOpenWith: aBuilder.	self addFind.	self addToolsetsTabs.	builder window sensor invalidationSuppressWhile: [self updateToolbar].	self currentToolset updateDisplay</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>TabControlComposite</name><environment>UI</environment><super>Graphics.CompositePart</super><private>false</private><indexed-type>none</indexed-type><inst-vars>subCanvas </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>UIBasics-Components</category><attributes><package>UIBasics-Components</package></attributes></class><class><name>RefactoringBrowser</name><environment>Refactory.Browser</environment><super>Refactory.Browser.AbstractRefactoringBrowser</super><private>false</private><indexed-type>none</indexed-type><inst-vars>policyClass </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Browser-RB UI</category><attributes><package>Browser-BrowserUI</package></attributes></class></st-source>