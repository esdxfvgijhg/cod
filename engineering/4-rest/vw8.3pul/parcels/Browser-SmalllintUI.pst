<?xml version="1.0"?><st-source><!-- Name: Browser-SmalllintUINotice: Copyright 1999-2017 Cincom Systems, Inc.  All rights reserved.Comment: This package contains the UI components of Smalllint (the CodeCritic).Portions © 1998-2002 The Refactory, IncDbIdentifier: bear73DbTrace: 501799DbUsername: willowDbVersion: 8.3 - 1DevelopmentPrerequisites: #(#(#any 'Browser-BrowserUI' '') #(#any 'Browser-Smalllint' ''))PackageName: Browser-SmalllintUIParcel: #('Browser-SmalllintUI')ParcelName: Browser-SmalllintUIPrerequisiteParcels: #(#('Browser-BrowserUI' '') #('Browser-Smalllint' ''))PrintStringCache: (8.3 - 1,willow)Version: 8.3 - 1Pre-Unload Block: 	[:package | ]Date: 3:26:57 PM June 30, 2017 --><time-stamp>From VisualWorks®, Pre-Release 8.3 (jun17.4) of June 23, 2017 on June 30, 2017 at 3:26:57 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>SmalllintResultEditor</name><environment>Refactory.Browser</environment><super>Refactory.Browser.BrowserApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>label results resultsList </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Browser-Lint</category><attributes><package>Browser-SmalllintUI</package></attributes></class><comment><class-id>Refactory.Browser.SmalllintResultEditor</class-id><body>SmalllintResultEditor is a UI for displaying a list of Smalllint rule failures.Instance Variables:	label	&lt;String&gt;	the label of the window	results	&lt;Collection&gt;	the collection of lint rules that have failures	resultsList	&lt;SelectionInList&gt;	the selection in list of rules that have failures.</body></comment><class><name>Smalllint</name><environment>Refactory.Browser</environment><super>Refactory.Browser.BrowserApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>percentDone checkerProcess environmentEditor menuHolder ruleHolder checker </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Browser-Lint</category><attributes><package>Browser-SmalllintUI</package></attributes></class><comment><class-id>Refactory.Browser.Smalllint</class-id><body>Smalllint was the primary UI for running lint rules. However, it has been superceded by the Smalllint code tool. It is now only used for running a lint rule without opening a browser.Instance Variables:	checker	&lt;SmalllintChecker&gt;	the object that is used to run the individual rules	checkerProcess	&lt;Process&gt;	the process that is checking all rules	environmentEditor	&lt;EnvironmentEditor&gt;	the editor UI that allows the user to pick which classes that are to be run over	menuHolder	&lt;ValueModel&gt;	the menu of available lint rules	percentDone	&lt;ValueModel&gt;	percent done of the lint rule checking process	ruleHolder	&lt;ValueModel&gt;	the selected lint rule</body></comment><class><name>SmalllintCodeTool</name><environment>Refactory.Browser</environment><super>Refactory.Browser.CodeTool</super><private>false</private><indexed-type>none</indexed-type><inst-vars>lintRuleList transformationList percentDoneHolder actionHolder checkerProcess isTransformationRule </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Browser-Code Tools</category><attributes><package>Browser-SmalllintUI</package></attributes></class><comment><class-id>Refactory.Browser.SmalllintCodeTool</class-id><body>SmalllintCodeTool is a code tool for Smalllint..Instance Variables:	actionHolder	&lt;ValueModel&gt;	a description of what it is doing	checkerProcess	&lt;Process&gt;	the process that is running the lint checks	isTransformationRule	&lt;Boolean&gt;	are we showing the transformation rules or lint rules	lintRuleList	&lt;MultiSelectionInTree&gt;	the list of lint rules	percentDoneHolder	&lt;ValueModel&gt;	percent done for the lint rule	transformationList	&lt;SelectionInList&gt;	the list of tranformation lint rules</body></comment><class><name>RewriteCodeTool</name><environment>Refactory.Browser</environment><super>Refactory.Browser.SmalllintCodeTool</super><private>false</private><indexed-type>none</indexed-type><inst-vars>originalCode newCode method </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Browser-Code Tools</category><attributes><package>Browser-SmalllintUI</package></attributes></class><comment><class-id>Refactory.Browser.RewriteCodeTool</class-id><body>RewriteCodeTool integrates the rewrite tool into the RB. It allows one to perform rewrites on the selected objects.Instance Variables:	method	&lt;ValueModel&gt;	should we treat the search and replace expressions as methods	newCode	&lt;ValueModel&gt;	the replace expression	originalCode	&lt;ValueModel&gt;	the search expression	rewriteRuleEditor	&lt;RewriteRuleEditor&gt;	the rewrite rule editor UI</body></comment><class><name>MultiBrowserNavigator</name><environment>Refactory.Browser</environment><super>Refactory.Browser.BrowserNavigator</super><private>false</private><indexed-type>none</indexed-type><inst-vars>environmentDictionary environmentList </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Browser-Navigator</category><attributes><package>Browser-SmalllintUI</package></attributes></class><comment><class-id>Refactory.Browser.MultiBrowserNavigator</class-id><body>MultiBrowserNavigator is a special navigator for browsing certain Smalllint results (e.g., methods defined in all subclasses but not in superclass). These results normally have a description string and the list of method for that description, instead of just a list of methods.Instance Variables:	environmentDictionary	&lt;MultiEnvironment&gt;	the environment for this navigator	environmentList	&lt;SelectionInList&gt;	the keys of the multi-environment </body></comment><shared-variable><name>RuleSelectionBlock</name><environment>Refactory.Browser.Smalllint</environment><private>false</private><constant>false</constant><category>As yet unclassified</category><attributes><package>Browser-SmalllintUI</package></attributes></shared-variable><methods><class-id>Refactory.Browser.SmalllintResultEditor</class-id> <category>changing</category><body package="Browser-SmalllintUI">changedResult	(self selectedResult isNil or: [self selectedResult isComposite])		ifTrue: [self disableAll: #(#openResult #remove)]		ifFalse: [self enableAll: #(#openResult #remove)]</body></methods><methods><class-id>Refactory.Browser.SmalllintResultEditor</class-id> <category>initialize-release</category><body package="Browser-SmalllintUI">label: aLabel 	label := aLabel</body><body package="Browser-SmalllintUI">rule: aCompositeLintRule 	results := self flattenResults: aCompositeLintRule</body></methods><methods><class-id>Refactory.Browser.SmalllintResultEditor</class-id> <category>events</category><body package="Browser-SmalllintUI">noticeOfWindowClose: aWindow 	self release.	super noticeOfWindowClose: aWindow</body></methods><methods><class-id>Refactory.Browser.SmalllintResultEditor</class-id> <category>actions</category><body package="Browser-SmalllintUI">openResult	self selectedResult openEditor</body><body package="Browser-SmalllintUI">remove	results := self removeCurrentResultFrom: results.	self resultsList list: results asList.	self changedResult</body></methods><methods><class-id>Refactory.Browser.SmalllintResultEditor</class-id> <category>interface opening</category><body package="Browser-SmalllintUI">postBuildResultsList	self visualBlockFor: #resultsList		is: 			[:view :index | 			| each name |			each := view sequence at: index.			name := each displayName asText.			each isComposite ifTrue: [name := name allBold].			Label 				with: name				attributes: view textStyle				offset: ((self indentionLevelFor: each at: index) * 10) @ 0]</body><body package="Browser-SmalllintUI">postBuildWith: aBuilder 	super postBuildWith: aBuilder.	self resultsList list: results asList.	self postBuildResultsList</body><body package="Browser-SmalllintUI">postOpenWith: aBuilder 	super postOpenWith: aBuilder.	label notNil ifTrue: [self setLabel: ((#SmalllintResultsDash1s &lt;&lt; #browser &gt;&gt; 'Smalllint Results -- &lt;1s&gt;')			expandMacrosWith: label)].	self changedResult</body></methods><methods><class-id>Refactory.Browser.SmalllintResultEditor</class-id> <category>private</category><body package="Browser-SmalllintUI">flattenResults: aCompositeLintRule 	| flattenedResults |	flattenedResults := OrderedCollection new.	aCompositeLintRule rules do: 			[:each | 			each notEmpty 				ifTrue: 					[each isComposite 						ifTrue: 							[flattenedResults								add: each;								addAll: (self flattenResults: each)]						ifFalse: [flattenedResults add: each]]].	^flattenedResults</body><body package="Browser-SmalllintUI">indentionLevelFor: aRule at: anIndex 	| current level |	current := aRule.	level := 0.	anIndex to: 1		by: -1		do: 			[:i | 			| each |			each := results at: i.			(each isComposite and: [each rules includes: current]) 				ifTrue: 					[current := each.					level := level + 1]].	^level</body><body package="Browser-SmalllintUI">removeCurrentResultFrom: displayedResults 	| currentResult last newList |	currentResult := self selectedResult.	displayedResults remove: currentResult ifAbsent: [].	newList := displayedResults copy.	last := nil.	displayedResults reverseDo: 			[:each | 			(each isComposite and: [(each rules includes: last) not])				ifTrue: [newList remove: each ifAbsent: []]				ifFalse: [last := each]].	^newList</body><body package="Browser-SmalllintUI">selectedResult	^self resultsList selection</body></methods><methods><class-id>Refactory.Browser.SmalllintResultEditor</class-id> <category>aspects</category><body package="Browser-SmalllintUI">resultsList	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^resultsList isNil		ifTrue:			[resultsList := SelectionInList new]		ifFalse:			[resultsList]</body></methods><methods><class-id>Refactory.Browser.SmalllintResultEditor class</class-id> <category>interface opening</category><body package="Browser-SmalllintUI">openOn: aCompositeLintRule 	^self openOn: aCompositeLintRule label: nil</body><body package="Browser-SmalllintUI">openOn: aCompositeLintRule label: aLabel 	aCompositeLintRule isEmpty ifTrue: [Dialog warn: (#Nobody &lt;&lt; #browser &gt;&gt; 'Nobody')].	(self new)		rule: aCompositeLintRule;		label: aLabel;		open</body></methods><methods><class-id>Refactory.Browser.Smalllint</class-id> <category>actions</category><body package="Browser-SmalllintUI">abort	checkerProcess isNil ifTrue: [^self].	checkerProcess terminate.	checkerProcess := nil.	self resetButtons.	self percentDone: 0.0</body><body package="Browser-SmalllintUI">clearFilters	BasicLintRule filterDictionary: Dictionary new</body><body package="Browser-SmalllintUI">emptyCache	checker := SmalllintChecker newWithContext.	"We must set the current menu choice to nil before setting the menu -- bug in the MenuButtonView 	update:..."	self ruleHolder value: nil.	menuHolder value: self computeMenu</body><body package="Browser-SmalllintUI">loadFilters	| file fileStream |	file := self request: (#EnterNameOfIgnoresFile &lt;&lt; #browser &gt;&gt; 'Enter name of  ignores file:')				initialAnswer: 'Smalllint.ig'.	file isEmpty ifTrue: [^self].	fileStream := file asFilename readStream.	[self class compilerClass evaluate: fileStream contents] 		ensure: [fileStream close]</body><body package="Browser-SmalllintUI">run	checkerProcess notNil ifTrue: [^self].	self disableAll: #(#run #ruleHolder #emptyCache #results).	self enable: #abort.	checkerProcess := 			[[self runChecker] ensure: 					[self enableAll: #(#run #ruleHolder #emptyCache).					(self ruleHolder value isNil or: [self ruleHolder value isEmpty]) 						ifFalse: [self enable: #results].					self disable: #abort.					checkerProcess := nil]] 					fork</body><body package="Browser-SmalllintUI">runAbortInterface	checkerProcess notNil ifTrue: [^self].	self disableAll: #(#run #emptyCache #results).	self enable: #abort.	checkerProcess := 			[[self runChecker] ensure: 					[checkerProcess := nil.					self closeRequest]] 					fork</body><body package="Browser-SmalllintUI">saveFilters	| file fileStream |	file := self request: (#EnterFileToSaveIgnoresTo &lt;&lt; #browser &gt;&gt; 'Enter the file to save ignores to:')				initialAnswer: 'Smalllint.ig'.	file isEmpty ifTrue: [^self].	fileStream := file asFilename writeStream.	[BasicLintRule storeFiltersOn: fileStream] ensure: [fileStream close]</body><body package="Browser-SmalllintUI">viewResults	self currentRule openEditor</body></methods><methods><class-id>Refactory.Browser.Smalllint</class-id> <category>private</category><body package="Browser-SmalllintUI">changedRule	(self currentRule isKindOf: LintRule) &amp; checkerProcess isNil 		ifTrue: 			[self currentRule isEmpty 				ifTrue: [self disable: #results]				ifFalse: [self enable: #results].			self enable: #run]		ifFalse: [self disableAll: #(#run #results)].	self percentDone: 0</body><body package="Browser-SmalllintUI">computeMenu	| mb |	mb := MenuBuilder new.	self menuFor: self class rules builder: mb.	^mb menu</body><body package="Browser-SmalllintUI">menuFor: aCompositeLintRule builder: aMenuBuilder 	aCompositeLintRule hasConflicts 		ifFalse: 			[aMenuBuilder 				add: ((#x1sRunAll &lt;&lt; #browser &gt;&gt; '&lt;1s&gt; - Run all')			expandMacrosWith: aCompositeLintRule name) -&gt; aCompositeLintRule.			aMenuBuilder line].	aCompositeLintRule rules do: 			[:each | 			each isComposite 				ifTrue: 					[aMenuBuilder beginSubMenuLabeled: each name.					self menuFor: each builder: aMenuBuilder.					aMenuBuilder endSubMenu]				ifFalse: [aMenuBuilder add: each name -&gt; each]]</body><body package="Browser-SmalllintUI">resetButtons	self enableAll: #(#run #emptyCache).	(self currentRule isNil or: [self currentRule isEmpty]) 		ifTrue: [self disable: #results]		ifFalse: [self enable: #results].	self disable: #abort.	checkerProcess := nil</body><body package="Browser-SmalllintUI">runChecker	| numberSelectors searched |	searched := 0.	numberSelectors := environmentEditor selectedEnvironment numberSelectors.	environmentEditor selectedEnvironment isEmpty 		ifTrue: 			[^self 				warn: (#YouHaventSelectedClasses &lt;&lt; #browser &gt;&gt; 'You haven''t selected any classes.&lt;n&gt;All selected items will have a check by them.') 						expandMacros].	checker		rule: self currentRule;		environment: environmentEditor selectedEnvironment;		methodBlock: 				[searched := searched + 1.				self percentDone: searched / numberSelectors.				Processor yield];		run.	self currentRule isEmpty ifTrue: [self warn: (#Nobody &lt;&lt; #browser &gt;&gt; 'Nobody')].	self currentRule openEditor</body></methods><methods><class-id>Refactory.Browser.Smalllint</class-id> <category>accessing</category><body package="Browser-SmalllintUI">currentRule	^self ruleHolder value</body><body package="Browser-SmalllintUI">environmentEditor	environmentEditor isNil 		ifTrue: 			[environmentEditor := EnvironmentEditor new.			environmentEditor selectedEnvironment: ClassEnvironment new].	^environmentEditor</body><body package="Browser-SmalllintUI">percentDone: aValue	self percentDone value: aValue</body></methods><methods><class-id>Refactory.Browser.Smalllint</class-id> <category>initialize-release</category><body package="Browser-SmalllintUI">initialize	super initialize.	self ruleHolder onChangeSend: #changedRule to: self.	percentDone := 0.0 asValue</body><body package="Browser-SmalllintUI">release	self abort.	self environmentEditor release.	checker release.	super release</body></methods><methods><class-id>Refactory.Browser.Smalllint</class-id> <category>menu</category><body package="Browser-SmalllintUI">filterMenu	| menu |	menu := Menu new.	menu		addItem: ((MenuItem labeled: (#_LoadFiltersFromFile &lt;&lt; #browser &gt;&gt; '&amp;Load Filters from File...')) 					value: #loadFilters);		addItem: ((MenuItem labeled: (#_SaveFiltersToFile &lt;&lt; #browser &gt;&gt; '&amp;Save Filters to File...')) 					value: #saveFilters);		addItem: ((MenuItem labeled: (#_ClearFilters &lt;&lt; #browser &gt;&gt; '&amp;Clear Filters')) value: #clearFilters).	^menu</body><body package="Browser-SmalllintUI">menu	| menu |	menu := Menu new.	environmentEditor windowMenuItems 		do: [:each | menu addItem: ((MenuItem labeled: each key) submenu: each value)].	menu addItem: ((MenuItem labeled: (#_Filters &lt;&lt; #browser &gt;&gt; '&amp;Filters')) submenu: self filterMenu).	^menu</body><body package="Browser-SmalllintUI">ruleMenu	menuHolder isNil ifTrue: [menuHolder := self computeMenu asValue].	^menuHolder</body></methods><methods><class-id>Refactory.Browser.Smalllint</class-id> <category>events</category><body package="Browser-SmalllintUI">noticeOfWindowClose: aWidget 	self release.	super noticeOfWindowClose: aWidget</body></methods><methods><class-id>Refactory.Browser.Smalllint</class-id> <category>aspects</category><body package="Browser-SmalllintUI">percentDone	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^percentDone isNil		ifTrue:			[percentDone := 0 asValue]		ifFalse:			[percentDone]</body><body package="Browser-SmalllintUI">ruleHolder	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^ruleHolder isNil ifTrue: [ruleHolder := nil asValue] ifFalse: [ruleHolder]</body></methods><methods><class-id>Refactory.Browser.Smalllint</class-id> <category>interface opening</category><body package="Browser-SmalllintUI">postBuildWith: aBuilder 	super postBuildWith: aBuilder.	checker := (builder componentAt: #ruleHolder) isNil 				ifTrue: [SmalllintChecker new]				ifFalse: [SmalllintChecker newWithContext]</body></methods><methods><class-id>Refactory.Browser.Smalllint class</class-id> <category>accessing</category><body package="Browser-SmalllintUI">rules	^RuleSelectionBlock isNil 		ifTrue: [CompositeLintRule allRules]		ifFalse: [RuleSelectionBlock value]</body><body package="Browser-SmalllintUI">ruleSelectionBlock: aBlock 	RuleSelectionBlock := aBlock</body><body package="Browser-SmalllintUI">runRule: rule onEnvironment: browserEnvironment 	| lint |	lint := self new.	lint openInterface: #abortWindowSpec.	lint environmentEditor selectedEnvironment: browserEnvironment.	lint ruleHolder value: rule.	lint runAbortInterface</body></methods><methods><class-id>Refactory.Browser.SmalllintCodeTool</class-id> <category>private</category><body package="Browser-SmalllintUI">allLintChecks	^CompositeLintRule lintChecks</body><body package="Browser-SmalllintUI">distinctRules	| components |	components := OrderedCollection withAll: self lintRuleList selections.	components isEmpty 		ifTrue: [components := OrderedCollection with: self allLintChecks].	components copy 		do: [:each | each allRules do: [:rule | components remove: rule ifAbsent: []]].	^components</body><body package="Browser-SmalllintUI">emptyLabel	^''</body><body package="Browser-SmalllintUI">label: aString 	self actionHolder value: aString</body><body package="Browser-SmalllintUI">percentDone: aNumber 	self percentDoneHolder value: aNumber</body><body package="Browser-SmalllintUI">runChecker: aLintRule 	| numberSelectors searched environment count |	searched := 0.	environment := self selectedEnvironment.	numberSelectors := environment numberSelectors.	(SmalllintChecker new)		rule: aLintRule;		environment: environment;		methodBlock: 				[searched := searched + 1.				self percentDone: searched / numberSelectors.				Processor yield];		run.	count := aLintRule problemCount.	self label: (count = 0 				ifTrue: [(#NoResultsFound &lt;&lt; #browser &gt;&gt; 'No results found.')]				ifFalse: 					[(#ResultsFoundColon1p &lt;&lt; #browser &gt;&gt; 'Results found: &lt;1p&gt;.') expandMacrosWith: count]).	count = 0 ifTrue: [^self].	aLintRule openEditor</body><body package="Browser-SmalllintUI">runRule: aLintRule 	checkerProcess notNil ifTrue: [^self].	self label: (#RunningDots &lt;&lt; #browser &gt;&gt; 'Running...') asString.	self percentDone: 0.	checkerProcess := 			[self updateRunning.			[[self runChecker: aLintRule] ifCurtailed: [self label: (#Aborted &lt;&lt; #browser &gt;&gt; 'Aborted') asString]] 				ensure: 					[checkerProcess := nil.					self updateRunning]] 					fork</body><body package="Browser-SmalllintUI">selectedRule	isTransformationRule 		ifTrue: 			[self transformationList selection isNil ifTrue: [^CompositeLintRule new].			^CompositeLintRule rules: (Array with: self transformationList selection)]		ifFalse: 			[| allRules |			allRules := self distinctRules.			^CompositeLintRule rules: allRules]</body><body package="Browser-SmalllintUI">toggleTransformations	isTransformationRule := isTransformationRule not.	self updateLists</body></methods><methods><class-id>Refactory.Browser.SmalllintCodeTool</class-id> <category>aspects</category><body package="Browser-SmalllintUI">actionHolder	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^actionHolder isNil		ifTrue:			[actionHolder := String new asValue]		ifFalse:			[actionHolder]</body><body package="Browser-SmalllintUI">lintRuleList	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^lintRuleList isNil		ifTrue:			[lintRuleList := MultiSelectionInTree new]		ifFalse:			[lintRuleList]</body><body package="Browser-SmalllintUI">percentDoneHolder	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^percentDoneHolder isNil		ifTrue:			[percentDoneHolder := 0.5 asValue]		ifFalse:			[percentDoneHolder]</body><body package="Browser-SmalllintUI">transformationList	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^transformationList isNil		ifTrue:			[transformationList := SelectionInList new]		ifFalse:			[transformationList]</body></methods><methods><class-id>Refactory.Browser.SmalllintCodeTool</class-id> <category>interface opening</category><body package="Browser-SmalllintUI">postBuildWith: aBuilder 	super postBuildWith: aBuilder.	self		updateRunning;		updateLists;		updateLabel</body></methods><methods><class-id>Refactory.Browser.SmalllintCodeTool</class-id> <category>initialize-release</category><body package="Browser-SmalllintUI">initialize	super initialize.	isTransformationRule := false.	self lintRuleList treeHolder value: (TreeModel 				on: self allLintChecks				displayRoot: true				childrenWith: [:each | each rules]).	self lintRuleList treeHolder value expand: 1.	self lintRuleList selectionIndex: 1.	self transformationList 		list: CompositeLintRule transformations rules asList</body></methods><methods><class-id>Refactory.Browser.SmalllintCodeTool</class-id> <category>updating</category><body package="Browser-SmalllintUI">updateContents	super updateContents.	self updateLabel</body><body package="Browser-SmalllintUI">updateLabel	self label: self emptyLabel</body><body package="Browser-SmalllintUI">updateLists	isTransformationRule 		ifTrue: 			[self				hide: #lintRuleList;				show: #transformationList]		ifFalse: 			[self				hide: #transformationList;				show: #lintRuleList]</body><body package="Browser-SmalllintUI">updateRequest	super updateRequest ifFalse: [^false].	self isRunning 		ifTrue: 			[Dialog warn: (#ARuleIsCurrentlyRunning &lt;&lt; #browser &gt;&gt; 'A rule is currently running.').			^false].	^true</body><body package="Browser-SmalllintUI">updateRunning	checkerProcess notNil 		ifTrue: 			[self				show: #percentDone;				enable: #abort;				disable: #run]		ifFalse: 			[self				hide: #percentDone;				enable: #run;				disable: #abort]</body></methods><methods><class-id>Refactory.Browser.SmalllintCodeTool</class-id> <category>actions</category><body package="Browser-SmalllintUI">abort	checkerProcess isNil ifTrue: [^self].	checkerProcess terminate</body><body package="Browser-SmalllintUI">clearFilters	BasicLintRule filterDictionary: Dictionary new</body><body package="Browser-SmalllintUI">loadFilters	| file fileStream |	file := Dialog requestFileName: (#EnterNameOfIgnoresFile &lt;&lt; #browser &gt;&gt; 'Enter name of  ignores file:')				default: '*.ig'.	file isEmpty ifTrue: [^self].	fileStream := file asFilename readStream.	[self class compilerClass evaluate: fileStream contents] 		ensure: [fileStream close]</body><body package="Browser-SmalllintUI">run	| rule |	rule := self selectedRule.	rule rules isEmpty ifTrue: [^self].	self runRule: rule copy</body><body package="Browser-SmalllintUI">saveFilters	| file fileStream |	file := Dialog requestNewFileName: (#EnterFileToSaveIgnoresTo &lt;&lt; #browser &gt;&gt; 'Enter the file to save ignores to:')				default: '*.ig'.	file isEmpty ifTrue: [^self].	fileStream := file asFilename writeStream.	[BasicLintRule storeFiltersOn: fileStream] ensure: [fileStream close]</body></methods><methods><class-id>Refactory.Browser.SmalllintCodeTool</class-id> <category>menu accessing</category><body package="Browser-SmalllintUI">ruleActions	| actions |	actions := OrderedCollection new.	actions		add: ((isTransformationRule ifTrue: [RBCommand] ifFalse: [RBCheckedCommand]) 					named: (#_CodeCriticRules &lt;&lt; #browser &gt;&gt; '&amp;Code Critic Rules') asString					description: (#LintRules &lt;&lt; #browser &gt;&gt; 'Lint Rules') asString					action: [isTransformationRule ifTrue: [self toggleTransformations]]					receiver: #yourself);		add: ((isTransformationRule ifTrue: [RBCheckedCommand] ifFalse: [RBCommand]) 					named: (#_TransformationRules &lt;&lt; #browser &gt;&gt; '&amp;Transformation Rules') asString					description: (#TransformationRules &lt;&lt; #browser &gt;&gt; 'Transformation Rules') asString					action: [isTransformationRule ifFalse: [self toggleTransformations]]					receiver: #yourself).	^actions</body></methods><methods><class-id>Refactory.Browser.SmalllintCodeTool</class-id> <category>testing</category><body package="Browser-SmalllintUI">isRunning	^checkerProcess notNil</body></methods><methods><class-id>Refactory.Browser.SmalllintCodeTool</class-id> <category>help</category><body package="Browser-SmalllintUI">helpTopic	^'topic:vw.help.tools.browser.codeCritic'</body></methods><methods><class-id>Refactory.Browser.SmalllintCodeTool</class-id> <category>tab APIs</category><body package="Browser-SmalllintUI">isActive	^self narrowestSelectionType notNil</body><body package="Browser-SmalllintUI">tabName	^#CodeCritic &lt;&lt; #browser &gt;&gt; 'Code Critic'</body></methods><methods><class-id>Refactory.Browser.RewriteCodeTool</class-id> <category>actions</category><body package="Browser-SmalllintUI">find	(self verify: #originalCode) ifFalse: [^self].	self runRule: (ParseTreeLintRule 				createParseTreeRule: (Array with: self searchText)				method: self isMethod				name: ((#SearchFor1s &lt;&lt; #browser &gt;&gt; 'Search for: &lt;1s&gt;')					expandMacrosWith: self searchText))</body><body package="Browser-SmalllintUI">replace	((self verify: #originalCode) and: [self verify: #newCode]) 		ifFalse: [^self].	self runRule: (ParseTreeTransformationRule 				rewrite: (Array with: (Array with: self searchText with: self replaceText))				methods: self isMethod				name: ('&lt;1s&gt; -%&gt; &lt;2s&gt;'					expandMacrosWith: self searchText					with: self replaceText))</body><body package="Browser-SmalllintUI">verify: aSymbol 	| widget symbol controller |	widget := builder componentAt: aSymbol.	widget isNil ifTrue: [^false].	controller := widget widget controller.	symbol := self isMethod 				ifTrue: [#parseRewriteMethod:onError:]				ifFalse: [#parseRewriteExpression:onError:].	RBParser 		perform: symbol		with: controller text		with: 			[:aString :position | 			controller insertAndSelect:				((#x1s &lt;&lt; #browser &gt;&gt; '&lt;1s&gt; -%&gt;')					expandMacrosWith: aString) at: position.			^false].	^true</body></methods><methods><class-id>Refactory.Browser.RewriteCodeTool</class-id> <category>aspects</category><body package="Browser-SmalllintUI">method	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^method isNil		ifTrue:			[method := false asValue]		ifFalse:			[method]</body><body package="Browser-SmalllintUI">newCode	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^newCode isNil		ifTrue:			[newCode := String new asValue]		ifFalse:			[newCode]</body><body package="Browser-SmalllintUI">originalCode	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^originalCode isNil		ifTrue:			[originalCode := String new asValue]		ifFalse:			[originalCode]</body></methods><methods><class-id>Refactory.Browser.RewriteCodeTool</class-id> <category>accessing</category><body package="Browser-SmalllintUI">isMethod	^self method value</body><body package="Browser-SmalllintUI">replaceText	^newCode value asString</body><body package="Browser-SmalllintUI">searchText	^originalCode value asString</body></methods><methods><class-id>Refactory.Browser.RewriteCodeTool</class-id> <category>updating</category><body package="Browser-SmalllintUI">updateRunning	super updateRunning.	checkerProcess notNil 		ifTrue: [self disable: #replace]		ifFalse: [self enable: #replace]</body></methods><methods><class-id>Refactory.Browser.RewriteCodeTool</class-id> <category>help</category><body package="Browser-SmalllintUI">helpTopic	^'topic:vw.help.tools.browser.rewriteEditor'</body></methods><methods><class-id>Refactory.Browser.RewriteCodeTool</class-id> <category>tab APIs</category><body package="Browser-SmalllintUI">tabName	^#Rewrite &lt;&lt; #browser</body></methods><methods><class-id>Refactory.Browser.MultiBrowserNavigator</class-id> <category>accessing</category><body package="Browser-SmalllintUI">environment: aBrowserEnvironment 	environmentDictionary := aBrowserEnvironment.	environment := SelectorEnvironment new</body></methods><methods><class-id>Refactory.Browser.MultiBrowserNavigator</class-id> <category>aspects</category><body package="Browser-SmalllintUI">environmentList	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^environmentList isNil		ifTrue:			[environmentList := SelectionInList new]		ifFalse:			[environmentList]</body></methods><methods><class-id>Refactory.Browser.MultiBrowserNavigator</class-id> <category>interface opening</category><body package="Browser-SmalllintUI">postBuildWith: aBuilder 	self environmentList list: ((environmentDictionary environments asList)				sortWith: [:a :b | a displayString &lt; b displayString];				yourself).	super postBuildWith: aBuilder</body></methods><methods><class-id>Refactory.Browser.MultiBrowserNavigator</class-id> <category>accessing-browser</category><body package="Browser-SmalllintUI">spec	^self 		replace: #navigatorSpec		with: self windowSpecSymbol		in: self class HorizontalWindowSpec</body></methods><methods><class-id>Refactory.Browser.MultiBrowserNavigator</class-id> <category>changing</category><body package="Browser-SmalllintUI">changedEnvironment	environment := environmentDictionary 				environmentNamed: self environmentList selection.	self updateWithState: self navigatorStateClass new</body></methods><methods><class-id>Refactory.Browser.MultiBrowserNavigator class</class-id> <category>accessing</category><body package="Browser-SmalllintUI">navigatorTypes	^#()</body></methods><methods><class-id>Refactory.Browser.BasicLintRule</class-id> <category>private</category><body package="Browser-SmalllintUI">openWithFilters	^self filteredResult openEditor</body><body package="Browser-SmalllintUI">openWithoutFilters	^self result openEditor</body><body package="Browser-SmalllintUI">viewResults	^self perform: openSymbol</body></methods><methods><class-id>Refactory.Browser.CompositeLintRule</class-id> <category>private</category><body package="Browser-SmalllintUI">viewResults	rules do: [:each | each viewResults]</body></methods><methods><class-id>Refactory.Browser.BrowserNavigator</class-id> <category>Smalllint</category><body package="Browser-SmalllintUI">addFilterForClass	self changeRequest ifFalse: [^self].	self selectedClasses 		do: [:each | self environment addFilterForClass: each].	self refreshLists</body><body package="Browser-SmalllintUI">addFilterForSelector	self changeRequest ifFalse: [^self].	self definitions do: 			[:each | 			self environment addFilterForClass: each implementingClass				andSelector: each selector].	self refreshLists</body><body package="Browser-SmalllintUI">canFilterClasses	^self environment isForSmalllint</body><body package="Browser-SmalllintUI">canFilterSelectors	^self environment isForSmalllint 		and: [self environment canFilterSelectors]</body></methods><methods><class-id>Refactory.Browser.MultiEnvironment</class-id> <category>accessing</category><body package="Browser-SmalllintUI">navigatorClass	^MultiBrowserNavigator</body></methods><methods><class-id>Refactory.Browser.ParseTreeEnvironment</class-id> <category>accessing</category><body package="Browser-SmalllintUI">selectionIntervalFor: aString inMethod: selector class: cls 	| parseTree node |	matcher isNil ifTrue: [^super selectionIntervalFor: aString inMethod: selector class: cls].	parseTree := RBParser parseMethod: aString				onError: [:error :position | ^super selectionIntervalFor: aString inMethod: selector class: cls].	node := matcher executeTree: parseTree initialAnswer: nil.	^node isNil 		ifTrue: [super selectionIntervalFor: aString inMethod: selector class: cls]		ifFalse: [node sourceInterval]</body></methods><methods><class-id>Refactory.Browser.LintRule</class-id> <category>accessing</category><body package="Browser-SmalllintUI">openEditor	| rules |	rules := self failedRules.	rules isEmpty ifTrue: [^self].	rules size == 1 ifTrue: [^rules first viewResults].	SmalllintResultEditor openOn: self label: name</body><body package="Browser-SmalllintUI">run	^Smalllint runRule: self</body><body package="Browser-SmalllintUI">runOnEnvironment: anEnvironment 	^Smalllint runRule: self onEnvironment: anEnvironment</body></methods><methods><class-id>Refactory.Browser.LintRule</class-id> <category>private</category><body package="Browser-SmalllintUI">viewResults	self subclassResponsibility</body></methods><methods><class-id>Refactory.Browser.SmalllintResultEditor class</class-id> <category>interface specs</category><body package="Browser-SmalllintUI">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 			#(#{Kernel.UserMessage} 				#key: #CodeCriticResults 				#defaultString: 'Code Critic Results' 				#catalogID: #browser ) 			#min: #(#{Core.Point} 40 20 ) 			#bounds: #(#{Graphics.Rectangle} 554 398 1127 653 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 0 0 0 1 -30 1 ) 					#name: #resultsList 					#model: #resultsList 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #changedResult 						#doubleClickSelector: #openResult ) 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} -40 0.333333 -30 1 40 0.333333 0 1 ) 					#name: #openResult 					#flags: 40 					#model: #openResult 					#label: 					#(#{Kernel.UserMessage} 						#key: #BrowseDots 						#defaultString: 'Browse...' 						#catalogID: #browser ) 					#isDefault: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} -40 0.666666 -30 1 40 0.666666 0 1 ) 					#name: #remove 					#model: #remove 					#label: 					#(#{Kernel.UserMessage} 						#key: #Remove 						#defaultString: 'Remove' 						#catalogID: #browser ) ) ) ) )</body></methods><methods><class-id>Refactory.Browser.Smalllint class</class-id> <category>interface specs</category><body package="Browser-SmalllintUI">abortWindowSpec	"UIPainter new openOnClass: self andSelector: #abortWindowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: #(#{Kernel.UserMessage} #key: #CodeCritic #defaultString: 'Code Critic' #catalogID: #browser) 			#min: #(#{Core.Point} 40 20 ) 			#bounds: #(#{Graphics.Rectangle} 659 549 941 652 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ProgressWidgetSpec} 					#layout: #(#{Graphics.LayoutFrame} 5 0 30 0 -5 1 -35 1 ) 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#ColorValue #blue ) 						#setBackgroundColor: #(#ColorValue #white ) ) 					#model: #percentDone 					#direction: #horizontal 					#position: #topLeft 					#area: true 					#reverse: false ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} -30 0.5 -30 1 30 0.5 -2 1 ) 					#name: #abort 					#flags: 40 					#model: #abort 					#label: #(#{Kernel.UserMessage} #key: #Stop #defaultString: 'Stop' #catalogID: #IDE) ) 				#(#{UI.LabelSpec} 					#layout: #(#{UI.AlignmentOrigin} 0 0.5 5 0 0.5 0 ) 					#label: #(#{Kernel.UserMessage} #key: #RunningRuleDots #defaultString: 'Running rule...' #catalogID: #browser) ) ) ) )</body><body package="Browser-SmalllintUI">windowSpec	"UIPainter new openOnClass: self andSelector: #windowSpec"		&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: #(#{UI.WindowSpec} 			#label: #(#{Kernel.UserMessage} 				#key: #Smalllint 				#defaultString: 'Smalllint' 				#catalogID: #browser) 			#min: #(#{Core.Point} 40 20) 			#bounds: #(#{Graphics.Rectangle} 241 271 783 497) 			#flags: 4 			#menu: #menu) 		#component: #(#{UI.SpecCollection} 			#collection: #(#(#{UI.MenuButtonSpec} 				#layout: #(#{Graphics.LayoutFrame} 2 0 2 0 -1 0.666666 30 0) 				#name: #ruleHolder 				#model: #ruleHolder 				#menu: #ruleMenu) #(#{UI.ProgressWidgetSpec} 				#layout: #(#{Graphics.LayoutFrame} 2 0.666666 2 0 -1 1 30 0) 				#isOpaque: true 				#colors: #(#{UI.LookPreferences} 					#setForegroundColor: #(#ColorValue #blue) 					#setBackgroundColor: #(#ColorValue #white)) 				#model: #percentDone 				#direction: #horizontal 				#position: #topLeft 				#area: true 				#reverse: false) #(#{UI.SubCanvasSpec} 				#layout: #(#{Graphics.LayoutFrame} 0 0 62 0 0 1 0 1) 				#name: #environmentEditor 				#flags: 0 				#majorKey: #{Refactory.Browser.EnvironmentEditor} 				#minorKey: #classWindowSpec 				#clientKey: #environmentEditor) #(#{UI.ActionButtonSpec} 				#layout: #(#{Graphics.LayoutFrame} -45 0.2 32 0 45 0.2 60 0) 				#name: #run 				#flags: 40 				#model: #run 				#label: #(#{Kernel.UserMessage} 					#key: #Run 					#defaultString: 'Run' 					#catalogID: #browser)) #(#{UI.ActionButtonSpec} 				#layout: #(#{Graphics.LayoutFrame} -45 0.4 32 0 45 0.4 60 0) 				#name: #abort 				#flags: 40 				#model: #abort 				#label: #(#{Kernel.UserMessage} 					#key: #Stop 					#defaultString: 'Stop' 					#catalogID: #IDE)) #(#{UI.ActionButtonSpec} 				#layout: #(#{Graphics.LayoutFrame} -45 0.8 32 0 45 0.8 60 0) 				#name: #emptyCache 				#model: #emptyCache 				#label: #(#{Kernel.UserMessage} 					#key: #EmptyCache 					#defaultString: 'Empty cache' 					#catalogID: #browser)) #(#{UI.ActionButtonSpec} 				#layout: #(#{Graphics.LayoutFrame} -45 0.6 32 0 45 0.6 60 0) 				#name: #results 				#flags: 40 				#model: #viewResults 				#label: #(#{Kernel.UserMessage} 					#key: #Results 					#defaultString: 'Results' 					#catalogID: #browser)))))</body></methods><methods><class-id>Refactory.Browser.SmalllintCodeTool class</class-id> <category>interface specs</category><body package="Browser-SmalllintUI">windowSpec	"UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: #(#{Kernel.UserMessage} #key: #UnlabeledCanvas #defaultString: 'Unlabeled Canvas' #catalogID: #browser) 			#bounds: #(#{Graphics.Rectangle} 800 600 1204 880 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.TreeViewSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 0 0 0 1 -30 1 ) 					#name: #lintRuleList 					#model: #lintRuleList 					#multipleSelections: true 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 0 0 0 1 -30 1 ) 					#name: #transformationList 					#model: #transformationList 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 2 0 -25 1 66 0 -2 1 ) 					#name: #run 					#model: #run 					#label: #(#{Kernel.UserMessage} #key: #CheckDots #defaultString: 'Check...' #catalogID: #browser) ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 72 0 -25 1 136 0 -2 1 ) 					#name: #abort 					#flags: 40 					#model: #abort 					#label: #(#{Kernel.UserMessage} #key: #Stop #defaultString: 'Stop' #catalogID: #IDE) ) 				#(#{UI.ProgressWidgetSpec} 					#layout: #(#{Graphics.LayoutFrame} -125 1 -25 1 -2 1 -2 1 ) 					#name: #percentDone 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #blue ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #percentDoneHolder 					#direction: #horizontal 					#position: #topLeft 					#area: true 					#reverse: false ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.LayoutFrame} 142 0 -25 1 -127 1 -2 1 ) 					#name: #action 					#flags: 4 					#model: #actionHolder 					#isReadOnly: true 					#tabRequiresControl: true ) ) ) )</body></methods><methods><class-id>Refactory.Browser.SmalllintCodeTool class</class-id> <category>resources</category><body package="Browser-SmalllintUI">mainMenu	"MenuEditor new openOnClass: self andSelector: #mainMenu"	&lt;resource: #menu&gt;	^#(#{UI.Menu} #(			#(#{UI.MenuItem} 				#rawLabel: #(#{Kernel.UserMessage} #key: #View #defaultString: 'View' #catalogID: #browser) 				#nameKey: #View 				#submenu: #(#{UI.Menu} #(						#(#{UI.MenuItem} 							#rawLabel: #(#{Kernel.UserMessage} #key: #SmalllintRuleTypeListDesc #defaultString: 'View submenu' #catalogID: #browser) 							#nameKey: #'Smalllint Rule Type List' 							#value: #dynamicMenu ) ) #(1 ) nil ) ) 			#(#{UI.MenuItem} 				#rawLabel: #(#{Kernel.UserMessage} #key: #ClearFilters #defaultString: 'Clear Filters' #catalogID: #browser) 				#nameKey: #'Smalllint Clear Filters' 				#value: 				#action: ) 			#(#{UI.MenuItem} 				#rawLabel: #(#{Kernel.UserMessage} #key: #LoadFiltersDots #defaultString: 'Load Filters...' #catalogID: #browser) 				#nameKey: #'Smalllint Load Filters' 				#value: 				#action: ) 			#(#{UI.MenuItem} 				#rawLabel: #(#{Kernel.UserMessage} #key: #SaveFiltersDots #defaultString: 'Save Filters...' #catalogID: #browser) 				#nameKey: #'Smalllint Save Filters' 				#value: 				#action: ) ) #(1 3 ) nil ) decodeAsLiteralArray</body></methods><methods><class-id>Refactory.Browser.RewriteCodeTool class</class-id> <category>resources</category><body package="Browser-SmalllintUI">mainMenu	"MenuEditor new openOnClass: self andSelector: #mainMenu"	&lt;resource: #menu&gt;	^#(#{UI.Menu} #(			#(#{UI.MenuItem} 				#rawLabel: #(#{Kernel.UserMessage} #key: #SearchDots #defaultString: 'Search...' #catalogID: #browser) 				#nameKey: #'Rewriter Search' 				#value: 				#action: ) 			#(#{UI.MenuItem} 				#rawLabel: #(#{Kernel.UserMessage} #key: #ReplaceDots #defaultString: 'Replace...' #catalogID: #browser) 				#nameKey: #'Rewriter Replace' 				#value: 				#action: ) ) #(2 ) nil ) decodeAsLiteralArray</body></methods><methods><class-id>Refactory.Browser.RewriteCodeTool class</class-id> <category>interface specs</category><body package="Browser-SmalllintUI">windowSpec	"UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: #(#{Kernel.UserMessage} #key: #UnlabeledCanvas #defaultString: 'Unlabeled Canvas' #catalogID: #browser) 			#bounds: #(#{Graphics.Rectangle} 512 384 940 681 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.LayoutFrame} 2 0 25 0 -95 1 -16 0.5 ) 					#name: #originalCode 					#model: #originalCode 					#tabRequiresControl: true ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.LayoutFrame} 2 0 7 0.5 -95 1 -27 1 ) 					#name: #newCode 					#model: #newCode 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} -93 1 72 0 ) 					#name: #Label1 					#label: #(#{Kernel.UserMessage} #key: #RewriteToolQuickHelpLiteral #defaultString: '# = literal' #catalogID: #browser) ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} -93 1 54 0 ) 					#name: #Label2 					#label: #(#{Kernel.UserMessage} #key: #RewriteToolQuickHelpStatement #defaultString: '. = statement' #catalogID: #browser) ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} -93 1 34 0 ) 					#name: #Label3 					#label: #(#{Kernel.UserMessage} #key: #RewriteToolQuickHelpRecurseInto #defaultString: '` = recurse into' #catalogID: #browser) ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} -93 1 18 0 ) 					#name: #Label4 					#label: #(#{Kernel.UserMessage} #key: #RewriteToolQuickHelpList #defaultString: '@ = list' #catalogID: #browser) ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} -93 1 0 0 ) 					#name: #Label5 					#label: #(#{Kernel.UserMessage} #key: #RewriteToolQuickHelpMetaVar #defaultString: '` = meta var' #catalogID: #browser) ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 2 0 -15 0.5 ) 					#name: #Label6 					#label: #(#{Kernel.UserMessage} #key: #ReplaceWithC #defaultString: 'Replace with:' #catalogID: #browser) ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 2 2 ) 					#name: #Label7 					#label: #(#{Kernel.UserMessage} #key: #SearchForC #defaultString: 'Search for:' #catalogID: #browser) ) 				#(#{UI.CheckBoxSpec} 					#layout: #(#{Graphics.LayoutOrigin} -93 1 -126 1 ) 					#name: #method 					#model: #method 					#label: #(#{Kernel.UserMessage} #key: #Method #defaultString: 'Method' #catalogID: #browser) ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} -93 1 -106 1 -2 1 -83 1 ) 					#name: #run 					#model: #find 					#label: #(#{Kernel.UserMessage} #key: #SearchDots #defaultString: 'Search...' #catalogID: #browser) ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} -93 1 -78 1 -2 1 -55 1 ) 					#name: #replace 					#model: #replace 					#label: #(#{Kernel.UserMessage} #key: #ReplaceDots #defaultString: 'Replace...' #catalogID: #browser) ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} -93 1 -50 1 -2 1 -27 1 ) 					#name: #abort 					#flags: 40 					#model: #abort 					#label: #(#{Kernel.UserMessage} #key: #Stop #defaultString: 'Stop' #catalogID: #IDE) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 2 0 -25 1 -127 1 -2 1 ) 					#name: #action 					#flags: 0 					#model: #actionHolder ) 				#(#{UI.ProgressWidgetSpec} 					#layout: #(#{Graphics.LayoutFrame} -125 1 -25 1 -2 1 -2 1 ) 					#name: #percentDone 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #blue ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #percentDoneHolder 					#direction: #horizontal 					#position: #topLeft 					#area: true 					#reverse: false ) ) ) )</body></methods><methods><class-id>Refactory.Browser.MultiBrowserNavigator class</class-id> <category>interface specs</category><body package="Browser-SmalllintUI">HorizontalWindowSpec	"UIPainter new openOnClass: self andSelector: #HorizontalWindowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: #(#{Kernel.UserMessage} #key: #UnlabeledCanvas #defaultString: 'Unlabeled Canvas' #catalogID: #browser) 			#bounds: #(#{Graphics.Rectangle} 771 500 1411 700 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 0 0 -2 0.333333 0 1 ) 					#name: #environmentList 					#model: #environmentList 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #changedEnvironment 						#requestValueChangeSelector: #changeRequest ) 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.SubCanvasSpec} 					#layout: #(#{Graphics.LayoutFrame} 2 0.333333 0 0 0 1 0 1 ) 					#name: #navigator 					#flags: 0 					#minorKey: #navigatorSpec ) 				#(#{UI.ResizingSplitterSpec} 					#layout: #(#{Graphics.LayoutFrame} -2 0.333333 0 0 2 0.333333 0 1 ) 					#horizontal: false 					#minAboveSize: 30 					#minBelowSize: 60 					#aboveWidgets: 'environmentList' 					#belowWidgets: 'navigator' ) ) ) )</body></methods><methods><class-id>Refactory.Browser.CodeModel class</class-id> <category>tool registration</category><body package="Browser-SmalllintUI">rewriteToolClass	&lt;tool: 900&gt;	^RewriteCodeTool</body><body package="Browser-SmalllintUI">smalllintToolClass	&lt;tool: 950&gt;	^SmalllintCodeTool</body></methods><methods><class-id>Refactory.Browser.BrowserNavigator</class-id> <category>menus</category><body package="Browser-SmalllintUI">classFilterMenuItem	"Add the selected class to the Smalllint rules ignore list"	&lt;itemInMenu: #(#classMenu) position: 150.10&gt;	^(MenuItem labeled: #AddClassFilter &lt;&lt; #IDE &gt;&gt; 'Add Filter for Class')		value: #addFilterForClass;		visible: [self canFilterClasses];		enabled: [self isClassSelected];		yourself</body><body package="Browser-SmalllintUI">selectorFilterMenuItem	"Add the selected methods to the Smalllint rules ignore list"	&lt;itemInMenu: #(#selectorMenu) position: 150.15&gt;	^(MenuItem labeled: (#AddSelectorFilter &lt;&lt; #browser &gt;&gt; 'Add Filter for Selector'))		value: #addFilterForSelector;		visible: [self canFilterSelectors];		enabled: [self isSelectorSelected];		yourself</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>BrowserApplicationModel</name><environment>Refactory.Browser</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Browser-RB UI</category><attributes><package>Browser-BaseUI</package></attributes></class><class><name>LintRule</name><environment>Refactory.Browser</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>name </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Browser-Lint</category><attributes><package>Browser-Smalllint</package></attributes></class><class><name>CompositeLintRule</name><environment>Refactory.Browser</environment><super>Refactory.Browser.LintRule</super><private>false</private><indexed-type>none</indexed-type><inst-vars>rules </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Browser-Lint</category><attributes><package>Browser-Smalllint</package></attributes></class><class><name>ParseTreeEnvironment</name><environment>Refactory.Browser</environment><super>Refactory.Browser.SelectorEnvironment</super><private>false</private><indexed-type>none</indexed-type><inst-vars>matcher </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Browser-Lint</category><attributes><package>Browser-Smalllint</package></attributes></class><class><name>MultiEnvironment</name><environment>Refactory.Browser</environment><super>Refactory.Browser.BrowserEnvironmentWrapper</super><private>false</private><indexed-type>none</indexed-type><inst-vars>environmentDictionaries </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Browser-Environments</category><attributes><package>Browser-Smalllint</package></attributes></class><class><name>BasicLintRule</name><environment>Refactory.Browser</environment><super>Refactory.Browser.LintRule</super><private>false</private><indexed-type>none</indexed-type><inst-vars>result openSymbol </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Browser-Lint</category><attributes><package>Browser-Smalllint</package></attributes></class><class><name>CodeTool</name><environment>Refactory.Browser</environment><super>Refactory.Browser.BrowserApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>codeModel menu </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Browser-Code Tools</category><attributes><package>Browser-BrowserUI</package></attributes></class><class><name>BrowserNavigator</name><environment>Refactory.Browser</environment><super>Refactory.Browser.AbstractBrowserNavigator</super><private>false</private><indexed-type>none</indexed-type><inst-vars>history future </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Browser-Navigator</category><attributes><package>Browser-BrowserUI</package></attributes></class></st-source>