<?xml version="1.0"?><st-source><!-- Name: Roassal2-XtentionsNotice: Copyright (c) 2011-2016 ObjectProfile.com.Copyright (c) 2010 - 2011 Vanessa Pena, Alexandre BergelThis version of Roassal is distributed under the MIT License.Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.Comment: I have the extentions that creates overrides in other pharo systemsDbIdentifier: psql_public_cst_2007DbTrace: 94815DbUsername: niallrDbVersion: 2.59.1PackageName: Roassal2-XtentionsParcel: #('Roassal2-Xtentions')ParcelName: Roassal2-XtentionsPrintStringCache: (2.59.1,niallr)Version: 2.59.1Date: 8:18:01 AM January 19, 2017 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.2.1 (sep16.1) of September 22, 2016 on January 19, 2017 at 8:18:01 AM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><methods><class-id>OS.Filename</class-id> <category>testing</category><body package="Roassal2-Xtentions">basename	^ self baseName.</body><body package="Roassal2-Xtentions">baseName	"Answer the receiver's base name as a String. This is the	tail without the extension."	| array |	array := Filename splitExtension: self asString.	^(array size = 2 and: [array first notEmpty])		ifTrue: [array first asFilename tail]		ifFalse: [String new]</body></methods><methods><class-id>Core.Dictionary</class-id> <category>roassal2</category><body package="Roassal2-Xtentions">at: key ifPresent: oneArgBlock ifAbsent: absentBlock	"Lookup the given key in the receiver. If it is present, answer the value of evaluating the oneArgBlock with the value associated with the key, otherwise answer the value of absentBlock."		self at: key ifPresent: [ :v | ^oneArgBlock value: v ].	^absentBlock value</body></methods><methods><class-id>Core.Number</class-id> <category>trachel</category><body package="Roassal2-Xtentions">isNumber	^ true</body></methods><methods><class-id>Core.String</class-id> <category>converting</category><body package="Roassal2-Xtentions">asInteger	 ^ self asNumber asInteger</body></methods><methods><class-id>Core.Collection</class-id> <category>testing</category><body package="Roassal2-Xtentions">ifEmpty: aBlock	"Evaluate the given block with the receiver as argument, answering its value if the receiver is empty, otherwise answer the receiver."		"Note that the fact that this method returns its argument in case the receiver is not empty allows one to write expressions like the following ones: self classifyMethodAs: (myProtocol ifEmpty: ['As yet unclassified'])"	^ self isEmpty 		ifTrue: [ ^aBlock value ]		ifFalse: [ self ]</body><body package="Roassal2-Xtentions">ifEmpty: emptyBlock ifNotEmpty: notEmptyBlock	"Evaluate emptyBlock if I'm empty, notEmptyBlock otherwise"	" If the notEmptyBlock has an argument, eval with the receiver as its argument"	self isEmpty ifTrue: [ ^emptyBlock value ].	^notEmptyBlock cull: self</body><body package="Roassal2-Xtentions">ifNotEmpty: aBlock	"Evaluate the given block with the receiver as argument, answering its value      unless the receiver is empty, in which case answer the receiver      If the block has an argument, eval with the receiver as its argument,      but it might be better to use ifNotEmptyDo: to make the code easier to      understand"	"Note that the fact that this method returns its argument in case the receiver is empty	allows one to write expressions like the following ones:		self classifyMethodAs: (myProtocol ifEmpty: ['As yet unclassified']"	    ^self isEmpty          ifTrue: [self]          ifFalse: [aBlock cull: self]</body><body package="Roassal2-Xtentions">ifNotEmpty: notEmptyBlock ifEmpty: emptyBlock	"Evaluate emptyBlock if I'm empty, notEmptyBlock otherwise	 If the notEmptyBlock has an argument, eval with the receiver as its argument"	self isEmpty ifFalse: [ ^notEmptyBlock cull: self ].	^emptyBlock value</body></methods><methods><class-id>Core.Collection</class-id> <category>trachel</category><body package="Roassal2-Xtentions">max	^ self inject: self anyOne into: [:max :each | max max: each]</body><body package="Roassal2-Xtentions">min	^ self inject: self anyOne into: [:min :each | min min: each]</body><body package="Roassal2-Xtentions">sum	"#(10 20 30 40 50 66) asOrderedCollection sum."	^self inject: 0 into: [:aSum :aValue | aSum + aValue]</body></methods><methods><class-id>Core.SequenceableCollection</class-id> <category>accessing</category><body package="Roassal2-Xtentions">fifth	"Answer the third element of the receiver.  Provide an error 	notification if the receiver contains no elements."	self emptyCheck.	^ self at: 5</body><body package="Roassal2-Xtentions">fourth	"Answer the third element of the receiver.  Provide an error 	notification if the receiver contains no elements."	self emptyCheck.	^ self at: 4</body><body package="Roassal2-Xtentions">second	"Answer the third element of the receiver.  Provide an error 	notification if the receiver contains no elements."	self emptyCheck.	^ self at: 2</body><body package="Roassal2-Xtentions">sixth	"Answer the third element of the receiver.  Provide an error 	notification if the receiver contains no elements."	self emptyCheck.	^ self at: 6</body><body package="Roassal2-Xtentions">third	"Answer the third element of the receiver.  Provide an error 	notification if the receiver contains no elements."	self emptyCheck.	^ self at: 3</body></methods><methods><class-id>Core.OrderedCollection</class-id> <category>adding</category><body package="Roassal2-Xtentions">add: newObject afterIndex: index 	"Add the argument, newObject, as an element of the receiver. Put it in 	the sequence just after index. Answer newObject."	(index between: 0 and: self size) ifFalse:[^self subscriptBoundsErrorFor: #add:afterIndex: index: index].	self insert: newObject before: firstIndex + index.	^ newObject</body></methods><methods><class-id>Core.Object</class-id> <category>printing</category><body package="Roassal2-Xtentions">asString	^ self printString</body></methods><methods><class-id>Core.Object</class-id> <category>roassal2</category><body package="Roassal2-Xtentions">className	^ self class name.</body></methods><methods><class-id>Core.Object</class-id> <category>trachel</category><body package="Roassal2-Xtentions">isNumber	"Overridden to return true in Number, natch"	^ false</body></methods><methods><class-id>Core.Object</class-id> <category>roassal2</category><body package="Roassal2-Xtentions">value	^ self</body></methods><methods><class-id>Core.Message</class-id> <category>sending</category><body package="Roassal2-Xtentions">sendTo: receiver	"answer the result of sending this message to receiver"	^ receiver perform: selector withArguments: args</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>Object</name><environment>Core</environment><super></super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Kernel-Objects</category><attributes><package>Kernel-Objects</package></attributes></class><class><name>Collection</name><environment>Core</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Collections-Abstract</category><attributes><package>Collections-Abstract</package></attributes></class><class><name>Dictionary</name><environment>Core</environment><super>Core.Set</super><private>false</private><indexed-type>objects</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Collections-Unordered</category><attributes><package>Collections-Unordered</package></attributes></class><class><name>SequenceableCollection</name><environment>Core</environment><super>Core.Collection</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Collections-Abstract</category><attributes><package>Collections-Abstract</package></attributes></class><class><name>Message</name><environment>Core</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>selector args </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Kernel-Methods</category><attributes><package>Kernel-Methods</package></attributes></class><class><name>Number</name><environment>Core</environment><super>Core.ArithmeticValue</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Magnitude-Numbers</category><attributes><package>Magnitude-Numbers</package></attributes></class><class><name>OrderedCollection</name><environment>Core</environment><super>Core.SequenceableCollection</super><private>false</private><indexed-type>objects</indexed-type><inst-vars>firstIndex lastIndex </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Collections-Sequenceable</category><attributes><package>Collections-Sequenceable</package></attributes></class><class><name>Filename</name><environment>OS</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>osName publicName logicalName </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>OS-Support</category><attributes><package>OS-Support</package></attributes></class><class><name>String</name><environment>Core</environment><super>Core.CharacterArray</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Collections-Text</category><attributes><package>Collections-Text</package></attributes></class></st-source>