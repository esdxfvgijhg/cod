<?xml version="1.0"?><st-source><!-- Name: GHXhtmlSupportNotice: © Copyright 2013 Georg Heeg e.K.Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.(MIT License)Comment: GHXhtmlSupport provides the following functions1. GHXhtmlDTDPreloader, which provides the XHTML DTDs to the XMLParser so that it doesn't have to download them each time2. GHXhtmlDecoder, which can be used to decode Xhtml strings by resolving HTML Entities like &Auml;. It uses the XML Parser together with the XHTML DTDs to properly decode the HTML Entities.Usage	GHXhtmlDTDPreloader preloadDTDs (also executed in postload).	GHXhtmlDecoder decodeString:'&Auml;nc&ouml;d&uuml;ng'.	GHXhtmlDecoder decodeString:'<p>&Auml;nc&ouml;d&uuml;ng</p>'.DbIdentifier: magdi.heeg.de.postgresDbTrace: 61297DbUsername: georgDbVersion: 8.1.1 - 6DevelopmentPrerequisites: #(#(#any 'GHSpeedUpXMLParser' '') #(#any 'HTTP' ''))PackageName: GHXhtmlSupportParcel: #('GHXhtmlSupport')ParcelDirectory: c:\visworks\vw8.2.1 dec16.1\image\HeegContributions-vw8.2.1-2017-01-16\GHXhtmlSupportPrerequisiteDescriptions: #(#(#name 'GHSpeedUpXMLParser' #componentType #package) #(#name 'HTTP' #componentType #package))PrerequisiteParcels: #(#('GHSpeedUpXMLParser' '') #('HTTP' ''))PrintStringCache: (8.1.1 - 6,georg)Version: 8.1.1 - 6Date: 3:15:08 PM January 16, 2017 --><time-stamp>From VisualWorks®, Pre-Release 8.2.1 (dec16.1) of 22. Dezember 2016 on 16. Januar 2017 at 15:15:08</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>GHXhtmlDecoder</name><environment>Smalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>GHXhtmlSupport</package></attributes></class><comment><class-id>GHXhtmlDecoder</class-id><body>GHXhtmlDecoder is used to decode HTML Strings and extract their text. If the HTML String contains html tags, those are ignored.The GHXhtmlDecoder makes use of the GHSpeedUpXMLParser package and prefills the Sax Driver with the DTD files for XHTML. The parsed XHTML file would otherwise try to load the DTDs from w3c.org which takes ages and even times out eventually.Usage	GHXhtmlDecoder decodeString:'&amp;Auml;nc&amp;ouml;d&amp;uuml;ng' 	GHXhtmlDecoder decodeString:'&lt;p&gt;&amp;Auml;nc&amp;ouml;d&amp;uuml;ng&lt;/p&gt;' </body></comment><class><name>GHXhtmlDifferences</name><environment>Smalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>wordWiseDiff </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>GHXhtmlSupport</package></attributes></class><comment><class-id>GHXhtmlDifferences</class-id><body>GHXhtmlDifferences can diff HTML strings. It takes HTML Strings and returns an HTML String.There are two modes of operation: character wise diffing or wordwise-diffing. Word-wise diffing operates on the words of a text segment and character-wise diffing operates on the characters of a string.The difference between the two modes breaks down to the difference of:'today the sun shines' differences: 'today the rain falls'and'today the sun shines' wordFragments differences: 'today the rain falls' wordFragmentsTypically the word-wise diff is preferred because it's easier to understand the difference.Usage	GHXhtmlDifferences characterDifferencesBetween: '&lt;p&gt;test1&lt;/p&gt;&lt;p&gt;test2&lt;/p&gt;&lt;p&gt;test3&lt;/p&gt;' and:'&lt;p&gt;test&lt;/p&gt;&lt;p&gt;test3&lt;/p&gt;&lt;h1&gt;test3&lt;/h1&gt;'.	GHXhtmlDifferences wordDifferencesBetween: '&lt;p&gt;test1&lt;/p&gt;&lt;p&gt;test2&lt;/p&gt;&lt;p&gt;test3&lt;/p&gt;' and:'&lt;p&gt;test&lt;/p&gt;&lt;p&gt;test3&lt;/p&gt;&lt;h1&gt;test3&lt;/h1&gt;'</body></comment><class><name>GHXhtmlDTDPreloader</name><environment>Smalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars>state </class-inst-vars><imports></imports><category></category><attributes><package>GHXhtmlSupport</package></attributes></class><comment><class-id>GHXhtmlDTDPreloader</class-id><body>GHXhtmlDTDPreloader fills the SAXDriver's cache with the DTDs for XHTML. The XMLParser will then avoid to download the DTDs from w3c.org, which is slow and even times out typically.Usage	GHXhtmlDTDPreloader preloadDTDs</body></comment><methods><class-id>GHXhtmlDecoder</class-id> <category>utility</category><body package="GHXhtmlSupport">asXHTMLDocument: aString	| parser |	parser := (XML.XMLParser new)				validate: false;				yourself.	^parser parse: (self asXHTMLDocumentString: aString) readStream</body><body package="GHXhtmlSupport">asXHTMLDocumentString: aString	"add an XHTML header to the string and wrap it into &lt;content&gt;-tags. 	The XHTML Header is required for the XML Parser to know which DTDs to use, so that &amp;Auml; can be converted to Ä.	The &lt;content&gt; tags are required for the XML Parser to have a root object"	^'%&lt;?xml version="1.0" ?&gt;%&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt; %&lt;content&gt;&lt;1s&gt;%&lt;/content&gt;'		expandMacrosWith: aString</body></methods><methods><class-id>GHXhtmlDecoder</class-id> <category>accessing</category><body package="GHXhtmlSupport">decodeString: aString	| document |	GHXhtmlDTDPreloader preloadDTDs.	^	[document := self asXHTMLDocument: aString.	document root characterData]			on: Error			do: [:ex | ex return: aString]</body></methods><methods><class-id>GHXhtmlDecoder class</class-id> <category>accessing</category><body package="GHXhtmlSupport">decodeString: aString	(aString includes: $&amp;) ifFalse: [^aString].	^self new decodeString: aString</body></methods><methods><class-id>GHXhtmlDifferences</class-id> <category>private</category><body package="GHXhtmlSupport">addWrapperOfDifference: aDifference toElement: anElement	| wrapper |	anElement isText		ifTrue: 			[wrapper := self wrapperElementForDifference: aDifference.			wrapper addNode: anElement.			^wrapper].	^(anElement copy)		elements: (anElement elements					collect: [:each | self addWrapperOfDifference: aDifference toElement: each]);		yourself</body><body package="GHXhtmlSupport">characterDifferencesBetweenText: newText andText: oldText	| resultElement el |	resultElement := XML.Element tag: 'content'.	(oldText text differences: newText text) do: 			[:difference |			difference isMatch				ifTrue: [resultElement addNode: (self textOfCharacterDifference: difference)]				ifFalse: 					[el := self wrapperElementForDifference: difference.					el addNode: (self textOfCharacterDifference: difference).					resultElement addNode: el]].	^resultElement elements</body><body package="GHXhtmlSupport">differencesBetweenText: oldText andText: newText	"returns the differences between two XML.Text elements. 	result is an array of XML.Node objects"	oldText text = newText text		ifTrue: [^Array with: (XML.Text text: oldText text)].	wordWiseDiff ifTrue:[^self wordWiseDifferencesBetweenText: newText andText: oldText].	^self characterDifferencesBetweenText: newText andText: oldText</body><body package="GHXhtmlSupport">nonMatchingElementsFromDifference: aDifference	"returns an XML.Element that's either an &lt;ins&gt; or a &lt;del&gt;.	Wrapps the elements that are part of the difference"	| elements |	elements := self sequenceOfDifference: aDifference.	^elements		collect: [:each | self addWrapperOfDifference: aDifference toElement: each]</body><body package="GHXhtmlSupport">parse: aString	| htmlDocumentString document |	GHXhtmlDTDPreloader preloadDTDs.	htmlDocumentString := '%&lt;?xml version="1.0" ?&gt;%&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt; %&lt;content&gt;&lt;1s&gt;%&lt;/content&gt;'				expandMacrosWith: aString.	document := (XML.XMLParser new)				validate: false;				parse: htmlDocumentString readStream.	^document root</body><body package="GHXhtmlSupport">printHTML: xmlElements	"renders the xml elements to a string. It doesn't add extra white-space"	| ws |	ws := String new writeStream.	xmlElements do: [:aNode | self printHTMLNode: aNode on: ws].	^ws contents</body><body package="GHXhtmlSupport">printHTMLElement: aNode on: ws	ws nextPut: $&lt;.	ws nextPutAll: aNode tag asString .	aNode attributes do:[:attribute | ws space. attribute printCanonicalOn: ws.].	aNode elements isEmpty		ifTrue: [ws nextPutAll: ' /&gt;']		ifFalse: 			[ws nextPut: $&gt;.			aNode elements do: [:each | self printHTMLNode: each on: ws]. ws nextPutAll:'&lt;/';nextPutAll: aNode tag asString;nextPut:$&gt;].</body><body package="GHXhtmlSupport">printHTMLNode: aNode on: ws	^aNode isText		ifTrue: [aNode printHTMLOn: ws]		ifFalse: [self printHTMLElement: aNode on: ws]</body><body package="GHXhtmlSupport">sequenceOfDifference: difference		^difference sequence copyFrom: difference start to: difference stop</body><body package="GHXhtmlSupport">textOfCharacterDifference: difference	^XML.Text text: (self sequenceOfDifference: difference)</body><body package="GHXhtmlSupport">textOfWordDifference: difference	| words ws |	words := self sequenceOfDifference: difference.	ws := String new writeStream.	words do: [:each | ws nextPutAll: each] separatedBy: [ws space].	^XML.Text text: ws contents</body><body package="GHXhtmlSupport">wordWiseDifferencesBetweenText: newText andText: oldText	| resultElement el |	resultElement := XML.Element tag: 'content'.	(oldText text wordFragments differences: newText text wordFragments) do: 			[:difference |			difference isMatch				ifTrue: [resultElement addNode: (self textOfWordDifference: difference)]				ifFalse: 					[el := self wrapperElementForDifference: difference.					el addNode: (self textOfWordDifference: difference).					resultElement addNode: el]].	^resultElement elements</body><body package="GHXhtmlSupport">wrapperElementForDifference: difference	^XML.Element tag: (difference isInsert ifTrue: ['ins'] ifFalse: ['del'])</body></methods><methods><class-id>GHXhtmlDifferences</class-id> <category>initialize-release</category><body package="GHXhtmlSupport">forCharacterDifferences	wordWiseDiff := false</body><body package="GHXhtmlSupport">forWordDifferences	wordWiseDiff := true</body><body package="GHXhtmlSupport">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	self forWordDifferences.	^self</body></methods><methods><class-id>GHXhtmlDifferences</class-id> <category>public</category><body package="GHXhtmlSupport">asElement: oldNode	^oldNode isText		ifTrue: [XML.Element tag: 'span' elements: (Array with: oldNode)]		ifFalse: [oldNode]</body><body package="GHXhtmlSupport">differencesBetween: oldString and: newString	| differenceHtml |	differenceHtml := (self differencesBetweenHtml: (self parse: oldString)				andHtml: (self parse: newString)) first.	^self printHTML: differenceHtml elements</body><body package="GHXhtmlSupport">differencesBetweenHtml: oldNode andHtml: newNode	| oldElements newElements differences resultElements resultElement oldHtml newHtml oldIndex newIndex offset |	(oldNode isText and: [newNode isText])		ifTrue: [^self differencesBetweenText: oldNode andText: newNode].	oldHtml := self asElement: oldNode.	newHtml := self asElement: newNode.	oldElements := oldHtml elements.	newElements := newHtml elements.	differences := (SequenceableCollectionDifferences new)				comparisonFunction: [:a :b | self matchNode: a against: b];				differencesFrom: oldElements to: newElements.	resultElements := OrderedCollection new.	resultElement := oldHtml copy.	oldIndex := 0.	newIndex := 0.	differences do: 			[:each |			each isMatch				ifTrue: 					[(each start to: each stop) do: 							[:index |							offset := index - each start + 1.							resultElements addAll: (self										differencesBetweenHtml: (oldHtml elements at: oldIndex + offset)										andHtml: (newHtml elements at: newIndex + offset))]]				ifFalse: 					[resultElements addAll: (self nonMatchingElementsFromDifference: each)].			(each isDelete or: [each isMatch])				ifTrue: [oldIndex := oldIndex + each length].			(each isInsert or: [each isMatch])				ifTrue: [newIndex := newIndex + each length]].	resultElement elements: resultElements.	^Array with: resultElement</body><body package="GHXhtmlSupport">matchNode: a against: b	^(a isLike: b)</body></methods><methods><class-id>GHXhtmlDifferences class</class-id> <category>instance creation</category><body package="GHXhtmlSupport">characterDifferencesBetween: oldString and: newString	^self forCharacterDifferences differencesBetween: oldString and: newString</body><body package="GHXhtmlSupport">forCharacterDifferences	^(self new)		forCharacterDifferences;		yourself</body><body package="GHXhtmlSupport">forWordDifferences	^(self new)		forWordDifferences;		yourself</body><body package="GHXhtmlSupport">new	"Answer a newly created and initialized instance."	^super new initialize</body><body package="GHXhtmlSupport">wordDifferencesBetween: oldString and: newString	^self forWordDifferences differencesBetween: oldString and: newString</body></methods><methods><class-id>GHXhtmlDTDPreloader</class-id> <category>dtd</category><body package="GHXhtmlSupport">filesWithNamesDo: aBlock	| name url file |	(Pragma allNamed: #xmlCacheForURL:name: in: self class) do: 			[:each |			name := each argumentAt: 2.			url := each argumentAt: 1.			file := self perform: each selector.			aBlock value: file value: url value: name]</body></methods><methods><class-id>GHXhtmlDTDPreloader</class-id> <category>initialize-release</category><body package="GHXhtmlSupport">preloadDTDs	self filesWithNamesDo: 			[:file :systemID :publicKey |			XML.SAXDriver new				cacheFileContent: file				underPublicKey: publicKey				systemID: systemID]</body></methods><methods><class-id>GHXhtmlDTDPreloader class</class-id> <category>class initialization</category><body package="GHXhtmlSupport">initialize	state := nil.	self preloadDTDs</body></methods><methods><class-id>GHXhtmlDTDPreloader class</class-id> <category>instance creation</category><body package="GHXhtmlSupport">preloadDTDs	state = #preloaded ifTrue:[^self].	self new preloadDTDs.	state := #preloaded.</body></methods><methods><class-id>GHXhtmlDTDPreloader</class-id> <category>dtd</category><body package="GHXhtmlSupport">xhtmlLat1Ent	&lt;xmlCacheForURL: 'http://www.w3.org/TR/xhtml1/DTD/xhtml-lat1.ent'	name: '-//W3C//ENTITIES Latin 1 for XHTML//EN'&gt;	^'&lt;!-- Portions (C) International Organization for Standardization 1986     Permission to copy in any form is granted for use with     conforming SGML systems and applications as defined in     ISO 8879, provided this notice is included in all copies.--&gt;&lt;!-- Character entity set. Typical invocation:    &lt;!ENTITY % HTMLlat1 PUBLIC       "-//W3C//ENTITIES Latin 1 for XHTML//EN"       "http://www.w3.org/TR/xhtml1/DTD/xhtml-lat1.ent"&gt;    %HTMLlat1;--&gt;&lt;!ENTITY nbsp   "&amp;#160;"&gt; &lt;!-- no-break space = non-breaking space,                                  U+00A0 ISOnum --&gt;&lt;!ENTITY iexcl  "&amp;#161;"&gt; &lt;!-- inverted exclamation mark, U+00A1 ISOnum --&gt;&lt;!ENTITY cent   "&amp;#162;"&gt; &lt;!-- cent sign, U+00A2 ISOnum --&gt;&lt;!ENTITY pound  "&amp;#163;"&gt; &lt;!-- pound sign, U+00A3 ISOnum --&gt;&lt;!ENTITY curren "&amp;#164;"&gt; &lt;!-- currency sign, U+00A4 ISOnum --&gt;&lt;!ENTITY yen    "&amp;#165;"&gt; &lt;!-- yen sign = yuan sign, U+00A5 ISOnum --&gt;&lt;!ENTITY brvbar "&amp;#166;"&gt; &lt;!-- broken bar = broken vertical bar,                                  U+00A6 ISOnum --&gt;&lt;!ENTITY sect   "&amp;#167;"&gt; &lt;!-- section sign, U+00A7 ISOnum --&gt;&lt;!ENTITY uml    "&amp;#168;"&gt; &lt;!-- diaeresis = spacing diaeresis,                                  U+00A8 ISOdia --&gt;&lt;!ENTITY copy   "&amp;#169;"&gt; &lt;!-- copyright sign, U+00A9 ISOnum --&gt;&lt;!ENTITY ordf   "&amp;#170;"&gt; &lt;!-- feminine ordinal indicator, U+00AA ISOnum --&gt;&lt;!ENTITY laquo  "&amp;#171;"&gt; &lt;!-- left-pointing double angle quotation mark                                  = left pointing guillemet, U+00AB ISOnum --&gt;&lt;!ENTITY not    "&amp;#172;"&gt; &lt;!-- not sign = angled dash,                                  U+00AC ISOnum --&gt;&lt;!ENTITY shy    "&amp;#173;"&gt; &lt;!-- soft hyphen = discretionary hyphen,                                  U+00AD ISOnum --&gt;&lt;!ENTITY reg    "&amp;#174;"&gt; &lt;!-- registered sign = registered trade mark sign,                                  U+00AE ISOnum --&gt;&lt;!ENTITY macr   "&amp;#175;"&gt; &lt;!-- macron = spacing macron = overline                                  = APL overbar, U+00AF ISOdia --&gt;&lt;!ENTITY deg    "&amp;#176;"&gt; &lt;!-- degree sign, U+00B0 ISOnum --&gt;&lt;!ENTITY plusmn "&amp;#177;"&gt; &lt;!-- plus-minus sign = plus-or-minus sign,                                  U+00B1 ISOnum --&gt;&lt;!ENTITY sup2   "&amp;#178;"&gt; &lt;!-- superscript two = superscript digit two                                  = squared, U+00B2 ISOnum --&gt;&lt;!ENTITY sup3   "&amp;#179;"&gt; &lt;!-- superscript three = superscript digit three                                  = cubed, U+00B3 ISOnum --&gt;&lt;!ENTITY acute  "&amp;#180;"&gt; &lt;!-- acute accent = spacing acute,                                  U+00B4 ISOdia --&gt;&lt;!ENTITY micro  "&amp;#181;"&gt; &lt;!-- micro sign, U+00B5 ISOnum --&gt;&lt;!ENTITY para   "&amp;#182;"&gt; &lt;!-- pilcrow sign = paragraph sign,                                  U+00B6 ISOnum --&gt;&lt;!ENTITY middot "&amp;#183;"&gt; &lt;!-- middle dot = Georgian comma                                  = Greek middle dot, U+00B7 ISOnum --&gt;&lt;!ENTITY cedil  "&amp;#184;"&gt; &lt;!-- cedilla = spacing cedilla, U+00B8 ISOdia --&gt;&lt;!ENTITY sup1   "&amp;#185;"&gt; &lt;!-- superscript one = superscript digit one,                                  U+00B9 ISOnum --&gt;&lt;!ENTITY ordm   "&amp;#186;"&gt; &lt;!-- masculine ordinal indicator,                                  U+00BA ISOnum --&gt;&lt;!ENTITY raquo  "&amp;#187;"&gt; &lt;!-- right-pointing double angle quotation mark                                  = right pointing guillemet, U+00BB ISOnum --&gt;&lt;!ENTITY frac14 "&amp;#188;"&gt; &lt;!-- vulgar fraction one quarter                                  = fraction one quarter, U+00BC ISOnum --&gt;&lt;!ENTITY frac12 "&amp;#189;"&gt; &lt;!-- vulgar fraction one half                                  = fraction one half, U+00BD ISOnum --&gt;&lt;!ENTITY frac34 "&amp;#190;"&gt; &lt;!-- vulgar fraction three quarters                                  = fraction three quarters, U+00BE ISOnum --&gt;&lt;!ENTITY iquest "&amp;#191;"&gt; &lt;!-- inverted question mark                                  = turned question mark, U+00BF ISOnum --&gt;&lt;!ENTITY Agrave "&amp;#192;"&gt; &lt;!-- latin capital letter A with grave                                  = latin capital letter A grave,                                  U+00C0 ISOlat1 --&gt;&lt;!ENTITY Aacute "&amp;#193;"&gt; &lt;!-- latin capital letter A with acute,                                  U+00C1 ISOlat1 --&gt;&lt;!ENTITY Acirc  "&amp;#194;"&gt; &lt;!-- latin capital letter A with circumflex,                                  U+00C2 ISOlat1 --&gt;&lt;!ENTITY Atilde "&amp;#195;"&gt; &lt;!-- latin capital letter A with tilde,                                  U+00C3 ISOlat1 --&gt;&lt;!ENTITY Auml   "&amp;#196;"&gt; &lt;!-- latin capital letter A with diaeresis,                                  U+00C4 ISOlat1 --&gt;&lt;!ENTITY Aring  "&amp;#197;"&gt; &lt;!-- latin capital letter A with ring above                                  = latin capital letter A ring,                                  U+00C5 ISOlat1 --&gt;&lt;!ENTITY AElig  "&amp;#198;"&gt; &lt;!-- latin capital letter AE                                  = latin capital ligature AE,                                  U+00C6 ISOlat1 --&gt;&lt;!ENTITY Ccedil "&amp;#199;"&gt; &lt;!-- latin capital letter C with cedilla,                                  U+00C7 ISOlat1 --&gt;&lt;!ENTITY Egrave "&amp;#200;"&gt; &lt;!-- latin capital letter E with grave,                                  U+00C8 ISOlat1 --&gt;&lt;!ENTITY Eacute "&amp;#201;"&gt; &lt;!-- latin capital letter E with acute,                                  U+00C9 ISOlat1 --&gt;&lt;!ENTITY Ecirc  "&amp;#202;"&gt; &lt;!-- latin capital letter E with circumflex,                                  U+00CA ISOlat1 --&gt;&lt;!ENTITY Euml   "&amp;#203;"&gt; &lt;!-- latin capital letter E with diaeresis,                                  U+00CB ISOlat1 --&gt;&lt;!ENTITY Igrave "&amp;#204;"&gt; &lt;!-- latin capital letter I with grave,                                  U+00CC ISOlat1 --&gt;&lt;!ENTITY Iacute "&amp;#205;"&gt; &lt;!-- latin capital letter I with acute,                                  U+00CD ISOlat1 --&gt;&lt;!ENTITY Icirc  "&amp;#206;"&gt; &lt;!-- latin capital letter I with circumflex,                                  U+00CE ISOlat1 --&gt;&lt;!ENTITY Iuml   "&amp;#207;"&gt; &lt;!-- latin capital letter I with diaeresis,                                  U+00CF ISOlat1 --&gt;&lt;!ENTITY ETH    "&amp;#208;"&gt; &lt;!-- latin capital letter ETH, U+00D0 ISOlat1 --&gt;&lt;!ENTITY Ntilde "&amp;#209;"&gt; &lt;!-- latin capital letter N with tilde,                                  U+00D1 ISOlat1 --&gt;&lt;!ENTITY Ograve "&amp;#210;"&gt; &lt;!-- latin capital letter O with grave,                                  U+00D2 ISOlat1 --&gt;&lt;!ENTITY Oacute "&amp;#211;"&gt; &lt;!-- latin capital letter O with acute,                                  U+00D3 ISOlat1 --&gt;&lt;!ENTITY Ocirc  "&amp;#212;"&gt; &lt;!-- latin capital letter O with circumflex,                                  U+00D4 ISOlat1 --&gt;&lt;!ENTITY Otilde "&amp;#213;"&gt; &lt;!-- latin capital letter O with tilde,                                  U+00D5 ISOlat1 --&gt;&lt;!ENTITY Ouml   "&amp;#214;"&gt; &lt;!-- latin capital letter O with diaeresis,                                  U+00D6 ISOlat1 --&gt;&lt;!ENTITY times  "&amp;#215;"&gt; &lt;!-- multiplication sign, U+00D7 ISOnum --&gt;&lt;!ENTITY Oslash "&amp;#216;"&gt; &lt;!-- latin capital letter O with stroke                                  = latin capital letter O slash,                                  U+00D8 ISOlat1 --&gt;&lt;!ENTITY Ugrave "&amp;#217;"&gt; &lt;!-- latin capital letter U with grave,                                  U+00D9 ISOlat1 --&gt;&lt;!ENTITY Uacute "&amp;#218;"&gt; &lt;!-- latin capital letter U with acute,                                  U+00DA ISOlat1 --&gt;&lt;!ENTITY Ucirc  "&amp;#219;"&gt; &lt;!-- latin capital letter U with circumflex,                                  U+00DB ISOlat1 --&gt;&lt;!ENTITY Uuml   "&amp;#220;"&gt; &lt;!-- latin capital letter U with diaeresis,                                  U+00DC ISOlat1 --&gt;&lt;!ENTITY Yacute "&amp;#221;"&gt; &lt;!-- latin capital letter Y with acute,                                  U+00DD ISOlat1 --&gt;&lt;!ENTITY THORN  "&amp;#222;"&gt; &lt;!-- latin capital letter THORN,                                  U+00DE ISOlat1 --&gt;&lt;!ENTITY szlig  "&amp;#223;"&gt; &lt;!-- latin small letter sharp s = ess-zed,                                  U+00DF ISOlat1 --&gt;&lt;!ENTITY agrave "&amp;#224;"&gt; &lt;!-- latin small letter a with grave                                  = latin small letter a grave,                                  U+00E0 ISOlat1 --&gt;&lt;!ENTITY aacute "&amp;#225;"&gt; &lt;!-- latin small letter a with acute,                                  U+00E1 ISOlat1 --&gt;&lt;!ENTITY acirc  "&amp;#226;"&gt; &lt;!-- latin small letter a with circumflex,                                  U+00E2 ISOlat1 --&gt;&lt;!ENTITY atilde "&amp;#227;"&gt; &lt;!-- latin small letter a with tilde,                                  U+00E3 ISOlat1 --&gt;&lt;!ENTITY auml   "&amp;#228;"&gt; &lt;!-- latin small letter a with diaeresis,                                  U+00E4 ISOlat1 --&gt;&lt;!ENTITY aring  "&amp;#229;"&gt; &lt;!-- latin small letter a with ring above                                  = latin small letter a ring,                                  U+00E5 ISOlat1 --&gt;&lt;!ENTITY aelig  "&amp;#230;"&gt; &lt;!-- latin small letter ae                                  = latin small ligature ae, U+00E6 ISOlat1 --&gt;&lt;!ENTITY ccedil "&amp;#231;"&gt; &lt;!-- latin small letter c with cedilla,                                  U+00E7 ISOlat1 --&gt;&lt;!ENTITY egrave "&amp;#232;"&gt; &lt;!-- latin small letter e with grave,                                  U+00E8 ISOlat1 --&gt;&lt;!ENTITY eacute "&amp;#233;"&gt; &lt;!-- latin small letter e with acute,                                  U+00E9 ISOlat1 --&gt;&lt;!ENTITY ecirc  "&amp;#234;"&gt; &lt;!-- latin small letter e with circumflex,                                  U+00EA ISOlat1 --&gt;&lt;!ENTITY euml   "&amp;#235;"&gt; &lt;!-- latin small letter e with diaeresis,                                  U+00EB ISOlat1 --&gt;&lt;!ENTITY igrave "&amp;#236;"&gt; &lt;!-- latin small letter i with grave,                                  U+00EC ISOlat1 --&gt;&lt;!ENTITY iacute "&amp;#237;"&gt; &lt;!-- latin small letter i with acute,                                  U+00ED ISOlat1 --&gt;&lt;!ENTITY icirc  "&amp;#238;"&gt; &lt;!-- latin small letter i with circumflex,                                  U+00EE ISOlat1 --&gt;&lt;!ENTITY iuml   "&amp;#239;"&gt; &lt;!-- latin small letter i with diaeresis,                                  U+00EF ISOlat1 --&gt;&lt;!ENTITY eth    "&amp;#240;"&gt; &lt;!-- latin small letter eth, U+00F0 ISOlat1 --&gt;&lt;!ENTITY ntilde "&amp;#241;"&gt; &lt;!-- latin small letter n with tilde,                                  U+00F1 ISOlat1 --&gt;&lt;!ENTITY ograve "&amp;#242;"&gt; &lt;!-- latin small letter o with grave,                                  U+00F2 ISOlat1 --&gt;&lt;!ENTITY oacute "&amp;#243;"&gt; &lt;!-- latin small letter o with acute,                                  U+00F3 ISOlat1 --&gt;&lt;!ENTITY ocirc  "&amp;#244;"&gt; &lt;!-- latin small letter o with circumflex,                                  U+00F4 ISOlat1 --&gt;&lt;!ENTITY otilde "&amp;#245;"&gt; &lt;!-- latin small letter o with tilde,                                  U+00F5 ISOlat1 --&gt;&lt;!ENTITY ouml   "&amp;#246;"&gt; &lt;!-- latin small letter o with diaeresis,                                  U+00F6 ISOlat1 --&gt;&lt;!ENTITY divide "&amp;#247;"&gt; &lt;!-- division sign, U+00F7 ISOnum --&gt;&lt;!ENTITY oslash "&amp;#248;"&gt; &lt;!-- latin small letter o with stroke,                                  = latin small letter o slash,                                  U+00F8 ISOlat1 --&gt;&lt;!ENTITY ugrave "&amp;#249;"&gt; &lt;!-- latin small letter u with grave,                                  U+00F9 ISOlat1 --&gt;&lt;!ENTITY uacute "&amp;#250;"&gt; &lt;!-- latin small letter u with acute,                                  U+00FA ISOlat1 --&gt;&lt;!ENTITY ucirc  "&amp;#251;"&gt; &lt;!-- latin small letter u with circumflex,                                  U+00FB ISOlat1 --&gt;&lt;!ENTITY uuml   "&amp;#252;"&gt; &lt;!-- latin small letter u with diaeresis,                                  U+00FC ISOlat1 --&gt;&lt;!ENTITY yacute "&amp;#253;"&gt; &lt;!-- latin small letter y with acute,                                  U+00FD ISOlat1 --&gt;&lt;!ENTITY thorn  "&amp;#254;"&gt; &lt;!-- latin small letter thorn,                                  U+00FE ISOlat1 --&gt;&lt;!ENTITY yuml   "&amp;#255;"&gt; &lt;!-- latin small letter y with diaeresis,                                  U+00FF ISOlat1 --&gt;'</body><body package="GHXhtmlSupport">xhtmlSpecialEnt	&lt;xmlCacheForURL: 'http://www.w3.org/TR/xhtml1/DTD/xhtml-special.ent'	name: '-//W3C//ENTITIES Special for XHTML//EN'&gt;	^'&lt;!-- Special characters for XHTML --&gt;&lt;!-- Character entity set. Typical invocation:     &lt;!ENTITY % HTMLspecial PUBLIC        "-//W3C//ENTITIES Special for XHTML//EN"        "http://www.w3.org/TR/xhtml1/DTD/xhtml-special.ent"&gt;     %HTMLspecial;--&gt;&lt;!-- Portions (C) International Organization for Standardization 1986:     Permission to copy in any form is granted for use with     conforming SGML systems and applications as defined in     ISO 8879, provided this notice is included in all copies.--&gt;&lt;!-- Relevant ISO entity set is given unless names are newly introduced.     New names (i.e., not in ISO 8879 list) do not clash with any     existing ISO 8879 entity names. ISO 10646 character numbers     are given for each character, in hex. values are decimal     conversions of the ISO 10646 values and refer to the document     character set. Names are Unicode names. --&gt;&lt;!-- C0 Controls and Basic Latin --&gt;&lt;!ENTITY quot    "&amp;#34;"&gt; &lt;!--  quotation mark, U+0022 ISOnum --&gt;&lt;!ENTITY amp     "&amp;#38;#38;"&gt; &lt;!--  ampersand, U+0026 ISOnum --&gt;&lt;!ENTITY lt      "&amp;#38;#60;"&gt; &lt;!--  less-than sign, U+003C ISOnum --&gt;&lt;!ENTITY gt      "&amp;#62;"&gt; &lt;!--  greater-than sign, U+003E ISOnum --&gt;&lt;!ENTITY apos	 "&amp;#39;"&gt; &lt;!--  apostrophe = APL quote, U+0027 ISOnum --&gt;&lt;!-- Latin Extended-A --&gt;&lt;!ENTITY OElig   "&amp;#338;"&gt; &lt;!--  latin capital ligature OE,                                    U+0152 ISOlat2 --&gt;&lt;!ENTITY oelig   "&amp;#339;"&gt; &lt;!--  latin small ligature oe, U+0153 ISOlat2 --&gt;&lt;!-- ligature is a misnomer, this is a separate character in some languages --&gt;&lt;!ENTITY Scaron  "&amp;#352;"&gt; &lt;!--  latin capital letter S with caron,                                    U+0160 ISOlat2 --&gt;&lt;!ENTITY scaron  "&amp;#353;"&gt; &lt;!--  latin small letter s with caron,                                    U+0161 ISOlat2 --&gt;&lt;!ENTITY Yuml    "&amp;#376;"&gt; &lt;!--  latin capital letter Y with diaeresis,                                    U+0178 ISOlat2 --&gt;&lt;!-- Spacing Modifier Letters --&gt;&lt;!ENTITY circ    "&amp;#710;"&gt; &lt;!--  modifier letter circumflex accent,                                    U+02C6 ISOpub --&gt;&lt;!ENTITY tilde   "&amp;#732;"&gt; &lt;!--  small tilde, U+02DC ISOdia --&gt;&lt;!-- General Punctuation --&gt;&lt;!ENTITY ensp    "&amp;#8194;"&gt; &lt;!-- en space, U+2002 ISOpub --&gt;&lt;!ENTITY emsp    "&amp;#8195;"&gt; &lt;!-- em space, U+2003 ISOpub --&gt;&lt;!ENTITY thinsp  "&amp;#8201;"&gt; &lt;!-- thin space, U+2009 ISOpub --&gt;&lt;!ENTITY zwnj    "&amp;#8204;"&gt; &lt;!-- zero width non-joiner,                                    U+200C NEW RFC 2070 --&gt;&lt;!ENTITY zwj     "&amp;#8205;"&gt; &lt;!-- zero width joiner, U+200D NEW RFC 2070 --&gt;&lt;!ENTITY lrm     "&amp;#8206;"&gt; &lt;!-- left-to-right mark, U+200E NEW RFC 2070 --&gt;&lt;!ENTITY rlm     "&amp;#8207;"&gt; &lt;!-- right-to-left mark, U+200F NEW RFC 2070 --&gt;&lt;!ENTITY ndash   "&amp;#8211;"&gt; &lt;!-- en dash, U+2013 ISOpub --&gt;&lt;!ENTITY mdash   "&amp;#8212;"&gt; &lt;!-- em dash, U+2014 ISOpub --&gt;&lt;!ENTITY lsquo   "&amp;#8216;"&gt; &lt;!-- left single quotation mark,                                    U+2018 ISOnum --&gt;&lt;!ENTITY rsquo   "&amp;#8217;"&gt; &lt;!-- right single quotation mark,                                    U+2019 ISOnum --&gt;&lt;!ENTITY sbquo   "&amp;#8218;"&gt; &lt;!-- single low-9 quotation mark, U+201A NEW --&gt;&lt;!ENTITY ldquo   "&amp;#8220;"&gt; &lt;!-- left double quotation mark,                                    U+201C ISOnum --&gt;&lt;!ENTITY rdquo   "&amp;#8221;"&gt; &lt;!-- right double quotation mark,                                    U+201D ISOnum --&gt;&lt;!ENTITY bdquo   "&amp;#8222;"&gt; &lt;!-- double low-9 quotation mark, U+201E NEW --&gt;&lt;!ENTITY dagger  "&amp;#8224;"&gt; &lt;!-- dagger, U+2020 ISOpub --&gt;&lt;!ENTITY Dagger  "&amp;#8225;"&gt; &lt;!-- double dagger, U+2021 ISOpub --&gt;&lt;!ENTITY permil  "&amp;#8240;"&gt; &lt;!-- per mille sign, U+2030 ISOtech --&gt;&lt;!ENTITY lsaquo  "&amp;#8249;"&gt; &lt;!-- single left-pointing angle quotation mark,                                    U+2039 ISO proposed --&gt;&lt;!-- lsaquo is proposed but not yet ISO standardized --&gt;&lt;!ENTITY rsaquo  "&amp;#8250;"&gt; &lt;!-- single right-pointing angle quotation mark,                                    U+203A ISO proposed --&gt;&lt;!-- rsaquo is proposed but not yet ISO standardized --&gt;&lt;!-- Currency Symbols --&gt;&lt;!ENTITY euro   "&amp;#8364;"&gt; &lt;!--  euro sign, U+20AC NEW --&gt;'</body><body package="GHXhtmlSupport">xhtmlStrictDtd	&lt;xmlCacheForURL: 'http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd'	name: '-//W3C//DTD XHTML 1.0 Strict//EN'&gt;	^'&lt;!--   Extensible HTML version 1.0 Strict DTD   This is the same as HTML 4 Strict except for   changes due to the differences between XML and SGML.   Namespace = http://www.w3.org/1999/xhtml   For further information, see: http://www.w3.org/TR/xhtml1   Copyright (c) 1998-2002 W3C (MIT, INRIA, Keio),   All Rights Reserved.    This DTD module is identified by the PUBLIC and SYSTEM identifiers:   PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"   SYSTEM "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"   $Revision: 1.1 $   $Date: 2002/08/01 13:56:03 $--&gt;&lt;!--================ Character mnemonic entities =========================--&gt;&lt;!ENTITY % HTMLlat1 PUBLIC   "-//W3C//ENTITIES Latin 1 for XHTML//EN"   "xhtml-lat1.ent"&gt;%HTMLlat1;&lt;!ENTITY % HTMLsymbol PUBLIC   "-//W3C//ENTITIES Symbols for XHTML//EN"   "xhtml-symbol.ent"&gt;%HTMLsymbol;&lt;!ENTITY % HTMLspecial PUBLIC   "-//W3C//ENTITIES Special for XHTML//EN"   "xhtml-special.ent"&gt;%HTMLspecial;&lt;!--================== Imported Names ====================================--&gt;&lt;!ENTITY % ContentType "CDATA"&gt;    &lt;!-- media type, as per [RFC2045] --&gt;&lt;!ENTITY % ContentTypes "CDATA"&gt;    &lt;!-- comma-separated list of media types, as per [RFC2045] --&gt;&lt;!ENTITY % Charset "CDATA"&gt;    &lt;!-- a character encoding, as per [RFC2045] --&gt;&lt;!ENTITY % Charsets "CDATA"&gt;    &lt;!-- a space separated list of character encodings, as per [RFC2045] --&gt;&lt;!ENTITY % LanguageCode "NMTOKEN"&gt;    &lt;!-- a language code, as per [RFC3066] --&gt;&lt;!ENTITY % Character "CDATA"&gt;    &lt;!-- a single character, as per section 2.2 of [XML] --&gt;&lt;!ENTITY % Number "CDATA"&gt;    &lt;!-- one or more digits --&gt;&lt;!ENTITY % LinkTypes "CDATA"&gt;    &lt;!-- space-separated list of link types --&gt;&lt;!ENTITY % MediaDesc "CDATA"&gt;    &lt;!-- single or comma-separated list of media descriptors --&gt;&lt;!ENTITY % URI "CDATA"&gt;    &lt;!-- a Uniform Resource Identifier, see [RFC2396] --&gt;&lt;!ENTITY % UriList "CDATA"&gt;    &lt;!-- a space separated list of Uniform Resource Identifiers --&gt;&lt;!ENTITY % Datetime "CDATA"&gt;    &lt;!-- date and time information. ISO date format --&gt;&lt;!ENTITY % Script "CDATA"&gt;    &lt;!-- script expression --&gt;&lt;!ENTITY % StyleSheet "CDATA"&gt;    &lt;!-- style sheet data --&gt;&lt;!ENTITY % Text "CDATA"&gt;    &lt;!-- used for titles etc. --&gt;&lt;!ENTITY % Length "CDATA"&gt;    &lt;!-- nn for pixels or nn% for percentage length --&gt;&lt;!ENTITY % MultiLength "CDATA"&gt;    &lt;!-- pixel, percentage, or relative --&gt;&lt;!ENTITY % Pixels "CDATA"&gt;    &lt;!-- integer representing length in pixels --&gt;&lt;!-- these are used for image maps --&gt;&lt;!ENTITY % Shape "(rect|circle|poly|default)"&gt;&lt;!ENTITY % Coords "CDATA"&gt;    &lt;!-- comma separated list of lengths --&gt;&lt;!--=================== Generic Attributes ===============================--&gt;&lt;!-- core attributes common to most elements  id       document-wide unique id  class    space separated list of classes  style    associated style info  title    advisory title/amplification--&gt;&lt;!ENTITY % coreattrs "id          ID             #IMPLIED  class       CDATA          #IMPLIED  style       %StyleSheet;   #IMPLIED  title       %Text;         #IMPLIED"  &gt;&lt;!-- internationalization attributes  lang        language code (backwards compatible)  xml:lang    language code (as per XML 1.0 spec)  dir         direction for weak/neutral text--&gt;&lt;!ENTITY % i18n "lang        %LanguageCode; #IMPLIED  xml:lang    %LanguageCode; #IMPLIED  dir         (ltr|rtl)      #IMPLIED"  &gt;&lt;!-- attributes for common UI events  onclick     a pointer button was clicked  ondblclick  a pointer button was double clicked  onmousedown a pointer button was pressed down  onmouseup   a pointer button was released  onmousemove a pointer was moved onto the element  onmouseout  a pointer was moved away from the element  onkeypress  a key was pressed and released  onkeydown   a key was pressed down  onkeyup     a key was released--&gt;&lt;!ENTITY % events "onclick     %Script;       #IMPLIED  ondblclick  %Script;       #IMPLIED  onmousedown %Script;       #IMPLIED  onmouseup   %Script;       #IMPLIED  onmouseover %Script;       #IMPLIED  onmousemove %Script;       #IMPLIED  onmouseout  %Script;       #IMPLIED  onkeypress  %Script;       #IMPLIED  onkeydown   %Script;       #IMPLIED  onkeyup     %Script;       #IMPLIED"  &gt;&lt;!-- attributes for elements that can get the focus  accesskey   accessibility key character  tabindex    position in tabbing order  onfocus     the element got the focus  onblur      the element lost the focus--&gt;&lt;!ENTITY % focus "accesskey   %Character;    #IMPLIED  tabindex    %Number;       #IMPLIED  onfocus     %Script;       #IMPLIED  onblur      %Script;       #IMPLIED"  &gt;&lt;!ENTITY % attrs "%coreattrs; %i18n; %events;"&gt;&lt;!--=================== Text Elements ====================================--&gt;&lt;!ENTITY % special.pre   "br | span | bdo | map"&gt;&lt;!ENTITY % special   "%special.pre; | object | img "&gt;&lt;!ENTITY % fontstyle "tt | i | b | big | small "&gt;&lt;!ENTITY % phrase "em | strong | dfn | code | q |                   samp | kbd | var | cite | abbr | acronym | sub | sup "&gt;&lt;!ENTITY % inline.forms "input | select | textarea | label | button"&gt;&lt;!-- these can occur at block or inline level --&gt;&lt;!ENTITY % misc.inline "ins | del | script"&gt;&lt;!-- these can only occur at block level --&gt;&lt;!ENTITY % misc "noscript | %misc.inline;"&gt;&lt;!ENTITY % inline "a | %special; | %fontstyle; | %phrase; | %inline.forms;"&gt;&lt;!-- %Inline; covers inline or "text-level" elements --&gt;&lt;!ENTITY % Inline "(#PCDATA | %inline; | %misc.inline;)*"&gt;&lt;!--================== Block level elements ==============================--&gt;&lt;!ENTITY % heading "h1|h2|h3|h4|h5|h6"&gt;&lt;!ENTITY % lists "ul | ol | dl"&gt;&lt;!ENTITY % blocktext "pre | hr | blockquote | address"&gt;&lt;!ENTITY % block     "p | %heading; | div | %lists; | %blocktext; | fieldset | table"&gt;&lt;!ENTITY % Block "(%block; | form | %misc;)*"&gt;&lt;!-- %Flow; mixes block and inline and is used for list items etc. --&gt;&lt;!ENTITY % Flow "(#PCDATA | %block; | form | %inline; | %misc;)*"&gt;&lt;!--================== Content models for exclusions =====================--&gt;&lt;!-- a elements use %Inline; excluding a --&gt;&lt;!ENTITY % a.content   "(#PCDATA | %special; | %fontstyle; | %phrase; | %inline.forms; | %misc.inline;)*"&gt;&lt;!-- pre uses %Inline excluding big, small, sup or sup --&gt;&lt;!ENTITY % pre.content   "(#PCDATA | a | %fontstyle; | %phrase; | %special.pre; | %misc.inline;      | %inline.forms;)*"&gt;&lt;!-- form uses %Block; excluding form --&gt;&lt;!ENTITY % form.content "(%block; | %misc;)*"&gt;&lt;!-- button uses %Flow; but excludes a, form and form controls --&gt;&lt;!ENTITY % button.content   "(#PCDATA | p | %heading; | div | %lists; | %blocktext; |    table | %special; | %fontstyle; | %phrase; | %misc;)*"&gt;&lt;!--================ Document Structure ==================================--&gt;&lt;!-- the namespace URI designates the document profile --&gt;&lt;!ELEMENT html (head, body)&gt;&lt;!ATTLIST html  %i18n;  id          ID             #IMPLIED  xmlns       %URI;          #FIXED ''http://www.w3.org/1999/xhtml''  &gt;&lt;!--================ Document Head =======================================--&gt;&lt;!ENTITY % head.misc "(script|style|meta|link|object)*"&gt;&lt;!-- content model is %head.misc; combined with a single     title and an optional base element in any order --&gt;&lt;!ELEMENT head (%head.misc;,     ((title, %head.misc;, (base, %head.misc;)?) |      (base, %head.misc;, (title, %head.misc;))))&gt;&lt;!ATTLIST head  %i18n;  id          ID             #IMPLIED  profile     %URI;          #IMPLIED  &gt;&lt;!-- The title element is not considered part of the flow of text.       It should be displayed, for example as the page header or       window title. Exactly one title is required per document.    --&gt;&lt;!ELEMENT title (#PCDATA)&gt;&lt;!ATTLIST title   %i18n;  id          ID             #IMPLIED  &gt;&lt;!-- document base URI --&gt;&lt;!ELEMENT base EMPTY&gt;&lt;!ATTLIST base  href        %URI;          #REQUIRED  id          ID             #IMPLIED  &gt;&lt;!-- generic metainformation --&gt;&lt;!ELEMENT meta EMPTY&gt;&lt;!ATTLIST meta  %i18n;  id          ID             #IMPLIED  http-equiv  CDATA          #IMPLIED  name        CDATA          #IMPLIED  content     CDATA          #REQUIRED  scheme      CDATA          #IMPLIED  &gt;&lt;!--  Relationship values can be used in principle:   a) for document specific toolbars/menus when used      with the link element in document head e.g.        start, contents, previous, next, index, end, help   b) to link to a separate style sheet (rel="stylesheet")   c) to make a link to a script (rel="script")   d) by stylesheets to control how collections of      html nodes are rendered into printed documents   e) to make a link to a printable version of this document      e.g. a PostScript or PDF version (rel="alternate" media="print")--&gt;&lt;!ELEMENT link EMPTY&gt;&lt;!ATTLIST link  %attrs;  charset     %Charset;      #IMPLIED  href        %URI;          #IMPLIED  hreflang    %LanguageCode; #IMPLIED  type        %ContentType;  #IMPLIED  rel         %LinkTypes;    #IMPLIED  rev         %LinkTypes;    #IMPLIED  media       %MediaDesc;    #IMPLIED  &gt;&lt;!-- style info, which may include CDATA sections --&gt;&lt;!ELEMENT style (#PCDATA)&gt;&lt;!ATTLIST style  %i18n;  id          ID             #IMPLIED  type        %ContentType;  #REQUIRED  media       %MediaDesc;    #IMPLIED  title       %Text;         #IMPLIED  xml:space   (preserve)     #FIXED ''preserve''  &gt;&lt;!-- script statements, which may include CDATA sections --&gt;&lt;!ELEMENT script (#PCDATA)&gt;&lt;!ATTLIST script  id          ID             #IMPLIED  charset     %Charset;      #IMPLIED  type        %ContentType;  #REQUIRED  src         %URI;          #IMPLIED  defer       (defer)        #IMPLIED  xml:space   (preserve)     #FIXED ''preserve''  &gt;&lt;!-- alternate content container for non script-based rendering --&gt;&lt;!ELEMENT noscript %Block;&gt;&lt;!ATTLIST noscript  %attrs;  &gt;&lt;!--=================== Document Body ====================================--&gt;&lt;!ELEMENT body %Block;&gt;&lt;!ATTLIST body  %attrs;  onload          %Script;   #IMPLIED  onunload        %Script;   #IMPLIED  &gt;&lt;!ELEMENT div %Flow;&gt;  &lt;!-- generic language/style container --&gt;&lt;!ATTLIST div  %attrs;  &gt;&lt;!--=================== Paragraphs =======================================--&gt;&lt;!ELEMENT p %Inline;&gt;&lt;!ATTLIST p  %attrs;  &gt;&lt;!--=================== Headings =========================================--&gt;&lt;!--  There are six levels of headings from h1 (the most important)  to h6 (the least important).--&gt;&lt;!ELEMENT h1  %Inline;&gt;&lt;!ATTLIST h1   %attrs;   &gt;&lt;!ELEMENT h2 %Inline;&gt;&lt;!ATTLIST h2   %attrs;   &gt;&lt;!ELEMENT h3 %Inline;&gt;&lt;!ATTLIST h3   %attrs;   &gt;&lt;!ELEMENT h4 %Inline;&gt;&lt;!ATTLIST h4   %attrs;   &gt;&lt;!ELEMENT h5 %Inline;&gt;&lt;!ATTLIST h5   %attrs;   &gt;&lt;!ELEMENT h6 %Inline;&gt;&lt;!ATTLIST h6   %attrs;   &gt;&lt;!--=================== Lists ============================================--&gt;&lt;!-- Unordered list --&gt;&lt;!ELEMENT ul (li)+&gt;&lt;!ATTLIST ul  %attrs;  &gt;&lt;!-- Ordered (numbered) list --&gt;&lt;!ELEMENT ol (li)+&gt;&lt;!ATTLIST ol  %attrs;  &gt;&lt;!-- list item --&gt;&lt;!ELEMENT li %Flow;&gt;&lt;!ATTLIST li  %attrs;  &gt;&lt;!-- definition lists - dt for term, dd for its definition --&gt;&lt;!ELEMENT dl (dt|dd)+&gt;&lt;!ATTLIST dl  %attrs;  &gt;&lt;!ELEMENT dt %Inline;&gt;&lt;!ATTLIST dt  %attrs;  &gt;&lt;!ELEMENT dd %Flow;&gt;&lt;!ATTLIST dd  %attrs;  &gt;&lt;!--=================== Address ==========================================--&gt;&lt;!-- information on author --&gt;&lt;!ELEMENT address %Inline;&gt;&lt;!ATTLIST address  %attrs;  &gt;&lt;!--=================== Horizontal Rule ==================================--&gt;&lt;!ELEMENT hr EMPTY&gt;&lt;!ATTLIST hr  %attrs;  &gt;&lt;!--=================== Preformatted Text ================================--&gt;&lt;!-- content is %Inline; excluding "img|object|big|small|sub|sup" --&gt;&lt;!ELEMENT pre %pre.content;&gt;&lt;!ATTLIST pre  %attrs;  xml:space (preserve) #FIXED ''preserve''  &gt;&lt;!--=================== Block-like Quotes ================================--&gt;&lt;!ELEMENT blockquote %Block;&gt;&lt;!ATTLIST blockquote  %attrs;  cite        %URI;          #IMPLIED  &gt;&lt;!--=================== Inserted/Deleted Text ============================--&gt;&lt;!--  ins/del are allowed in block and inline content, but its  inappropriate to include block content within an ins element  occurring in inline content.--&gt;&lt;!ELEMENT ins %Flow;&gt;&lt;!ATTLIST ins  %attrs;  cite        %URI;          #IMPLIED  datetime    %Datetime;     #IMPLIED  &gt;&lt;!ELEMENT del %Flow;&gt;&lt;!ATTLIST del  %attrs;  cite        %URI;          #IMPLIED  datetime    %Datetime;     #IMPLIED  &gt;&lt;!--================== The Anchor Element ================================--&gt;&lt;!-- content is %Inline; except that anchors shouldn''t be nested --&gt;&lt;!ELEMENT a %a.content;&gt;&lt;!ATTLIST a  %attrs;  %focus;  charset     %Charset;      #IMPLIED  type        %ContentType;  #IMPLIED  name        NMTOKEN        #IMPLIED  href        %URI;          #IMPLIED  hreflang    %LanguageCode; #IMPLIED  rel         %LinkTypes;    #IMPLIED  rev         %LinkTypes;    #IMPLIED  shape       %Shape;        "rect"  coords      %Coords;       #IMPLIED  &gt;&lt;!--===================== Inline Elements ================================--&gt;&lt;!ELEMENT span %Inline;&gt; &lt;!-- generic language/style container --&gt;&lt;!ATTLIST span  %attrs;  &gt;&lt;!ELEMENT bdo %Inline;&gt;  &lt;!-- I18N BiDi over-ride --&gt;&lt;!ATTLIST bdo  %coreattrs;  %events;  lang        %LanguageCode; #IMPLIED  xml:lang    %LanguageCode; #IMPLIED  dir         (ltr|rtl)      #REQUIRED  &gt;&lt;!ELEMENT br EMPTY&gt;   &lt;!-- forced line break --&gt;&lt;!ATTLIST br  %coreattrs;  &gt;&lt;!ELEMENT em %Inline;&gt;   &lt;!-- emphasis --&gt;&lt;!ATTLIST em %attrs;&gt;&lt;!ELEMENT strong %Inline;&gt;   &lt;!-- strong emphasis --&gt;&lt;!ATTLIST strong %attrs;&gt;&lt;!ELEMENT dfn %Inline;&gt;   &lt;!-- definitional --&gt;&lt;!ATTLIST dfn %attrs;&gt;&lt;!ELEMENT code %Inline;&gt;   &lt;!-- program code --&gt;&lt;!ATTLIST code %attrs;&gt;&lt;!ELEMENT samp %Inline;&gt;   &lt;!-- sample --&gt;&lt;!ATTLIST samp %attrs;&gt;&lt;!ELEMENT kbd %Inline;&gt;  &lt;!-- something user would type --&gt;&lt;!ATTLIST kbd %attrs;&gt;&lt;!ELEMENT var %Inline;&gt;   &lt;!-- variable --&gt;&lt;!ATTLIST var %attrs;&gt;&lt;!ELEMENT cite %Inline;&gt;   &lt;!-- citation --&gt;&lt;!ATTLIST cite %attrs;&gt;&lt;!ELEMENT abbr %Inline;&gt;   &lt;!-- abbreviation --&gt;&lt;!ATTLIST abbr %attrs;&gt;&lt;!ELEMENT acronym %Inline;&gt;   &lt;!-- acronym --&gt;&lt;!ATTLIST acronym %attrs;&gt;&lt;!ELEMENT q %Inline;&gt;   &lt;!-- inlined quote --&gt;&lt;!ATTLIST q  %attrs;  cite        %URI;          #IMPLIED  &gt;&lt;!ELEMENT sub %Inline;&gt; &lt;!-- subscript --&gt;&lt;!ATTLIST sub %attrs;&gt;&lt;!ELEMENT sup %Inline;&gt; &lt;!-- superscript --&gt;&lt;!ATTLIST sup %attrs;&gt;&lt;!ELEMENT tt %Inline;&gt;   &lt;!-- fixed pitch font --&gt;&lt;!ATTLIST tt %attrs;&gt;&lt;!ELEMENT i %Inline;&gt;   &lt;!-- italic font --&gt;&lt;!ATTLIST i %attrs;&gt;&lt;!ELEMENT b %Inline;&gt;   &lt;!-- bold font --&gt;&lt;!ATTLIST b %attrs;&gt;&lt;!ELEMENT big %Inline;&gt;   &lt;!-- bigger font --&gt;&lt;!ATTLIST big %attrs;&gt;&lt;!ELEMENT small %Inline;&gt;   &lt;!-- smaller font --&gt;&lt;!ATTLIST small %attrs;&gt;&lt;!--==================== Object ======================================--&gt;&lt;!--  object is used to embed objects as part of HTML pages.  param elements should precede other content. Parameters  can also be expressed as attribute/value pairs on the  object element itself when brevity is desired.--&gt;&lt;!ELEMENT object (#PCDATA | param | %block; | form | %inline; | %misc;)*&gt;&lt;!ATTLIST object  %attrs;  declare     (declare)      #IMPLIED  classid     %URI;          #IMPLIED  codebase    %URI;          #IMPLIED  data        %URI;          #IMPLIED  type        %ContentType;  #IMPLIED  codetype    %ContentType;  #IMPLIED  archive     %UriList;      #IMPLIED  standby     %Text;         #IMPLIED  height      %Length;       #IMPLIED  width       %Length;       #IMPLIED  usemap      %URI;          #IMPLIED  name        NMTOKEN        #IMPLIED  tabindex    %Number;       #IMPLIED  &gt;&lt;!--  param is used to supply a named property value.  In XML it would seem natural to follow RDF and support an  abbreviated syntax where the param elements are replaced  by attribute value pairs on the object start tag.--&gt;&lt;!ELEMENT param EMPTY&gt;&lt;!ATTLIST param  id          ID             #IMPLIED  name        CDATA          #IMPLIED  value       CDATA          #IMPLIED  valuetype   (data|ref|object) "data"  type        %ContentType;  #IMPLIED  &gt;&lt;!--=================== Images ===========================================--&gt;&lt;!--   To avoid accessibility problems for people who aren''t   able to see the image, you should provide a text   description using the alt and longdesc attributes.   In addition, avoid the use of server-side image maps.   Note that in this DTD there is no name attribute. That   is only available in the transitional and frameset DTD.--&gt;&lt;!ELEMENT img EMPTY&gt;&lt;!ATTLIST img  %attrs;  src         %URI;          #REQUIRED  alt         %Text;         #REQUIRED  longdesc    %URI;          #IMPLIED  height      %Length;       #IMPLIED  width       %Length;       #IMPLIED  usemap      %URI;          #IMPLIED  ismap       (ismap)        #IMPLIED  &gt;&lt;!-- usemap points to a map element which may be in this document  or an external document, although the latter is not widely supported --&gt;&lt;!--================== Client-side image maps ============================--&gt;&lt;!-- These can be placed in the same document or grouped in a     separate document although this isn''t yet widely supported --&gt;&lt;!ELEMENT map ((%block; | form | %misc;)+ | area+)&gt;&lt;!ATTLIST map  %i18n;  %events;  id          ID             #REQUIRED  class       CDATA          #IMPLIED  style       %StyleSheet;   #IMPLIED  title       %Text;         #IMPLIED  name        NMTOKEN        #IMPLIED  &gt;&lt;!ELEMENT area EMPTY&gt;&lt;!ATTLIST area  %attrs;  %focus;  shape       %Shape;        "rect"  coords      %Coords;       #IMPLIED  href        %URI;          #IMPLIED  nohref      (nohref)       #IMPLIED  alt         %Text;         #REQUIRED  &gt;&lt;!--================ Forms ===============================================--&gt;&lt;!ELEMENT form %form.content;&gt;   &lt;!-- forms shouldn''t be nested --&gt;&lt;!ATTLIST form  %attrs;  action      %URI;          #REQUIRED  method      (get|post)     "get"  enctype     %ContentType;  "application/x-www-form-urlencoded"  onsubmit    %Script;       #IMPLIED  onreset     %Script;       #IMPLIED  accept      %ContentTypes; #IMPLIED  accept-charset %Charsets;  #IMPLIED  &gt;&lt;!--  Each label must not contain more than ONE field  Label elements shouldn''t be nested.--&gt;&lt;!ELEMENT label %Inline;&gt;&lt;!ATTLIST label  %attrs;  for         IDREF          #IMPLIED  accesskey   %Character;    #IMPLIED  onfocus     %Script;       #IMPLIED  onblur      %Script;       #IMPLIED  &gt;&lt;!ENTITY % InputType  "(text | password | checkbox |    radio | submit | reset |    file | hidden | image | button)"   &gt;&lt;!-- the name attribute is required for all but submit &amp; reset --&gt;&lt;!ELEMENT input EMPTY&gt;     &lt;!-- form control --&gt;&lt;!ATTLIST input  %attrs;  %focus;  type        %InputType;    "text"  name        CDATA          #IMPLIED  value       CDATA          #IMPLIED  checked     (checked)      #IMPLIED  disabled    (disabled)     #IMPLIED  readonly    (readonly)     #IMPLIED  size        CDATA          #IMPLIED  maxlength   %Number;       #IMPLIED  src         %URI;          #IMPLIED  alt         CDATA          #IMPLIED  usemap      %URI;          #IMPLIED  onselect    %Script;       #IMPLIED  onchange    %Script;       #IMPLIED  accept      %ContentTypes; #IMPLIED  &gt;&lt;!ELEMENT select (optgroup|option)+&gt;  &lt;!-- option selector --&gt;&lt;!ATTLIST select  %attrs;  name        CDATA          #IMPLIED  size        %Number;       #IMPLIED  multiple    (multiple)     #IMPLIED  disabled    (disabled)     #IMPLIED  tabindex    %Number;       #IMPLIED  onfocus     %Script;       #IMPLIED  onblur      %Script;       #IMPLIED  onchange    %Script;       #IMPLIED  &gt;&lt;!ELEMENT optgroup (option)+&gt;   &lt;!-- option group --&gt;&lt;!ATTLIST optgroup  %attrs;  disabled    (disabled)     #IMPLIED  label       %Text;         #REQUIRED  &gt;&lt;!ELEMENT option (#PCDATA)&gt;     &lt;!-- selectable choice --&gt;&lt;!ATTLIST option  %attrs;  selected    (selected)     #IMPLIED  disabled    (disabled)     #IMPLIED  label       %Text;         #IMPLIED  value       CDATA          #IMPLIED  &gt;&lt;!ELEMENT textarea (#PCDATA)&gt;     &lt;!-- multi-line text field --&gt;&lt;!ATTLIST textarea  %attrs;  %focus;  name        CDATA          #IMPLIED  rows        %Number;       #REQUIRED  cols        %Number;       #REQUIRED  disabled    (disabled)     #IMPLIED  readonly    (readonly)     #IMPLIED  onselect    %Script;       #IMPLIED  onchange    %Script;       #IMPLIED  &gt;&lt;!--  The fieldset element is used to group form fields.  Only one legend element should occur in the content  and if present should only be preceded by whitespace.--&gt;&lt;!ELEMENT fieldset (#PCDATA | legend | %block; | form | %inline; | %misc;)*&gt;&lt;!ATTLIST fieldset  %attrs;  &gt;&lt;!ELEMENT legend %Inline;&gt;     &lt;!-- fieldset label --&gt;&lt;!ATTLIST legend  %attrs;  accesskey   %Character;    #IMPLIED  &gt;&lt;!-- Content is %Flow; excluding a, form and form controls--&gt; &lt;!ELEMENT button %button.content;&gt;  &lt;!-- push button --&gt;&lt;!ATTLIST button  %attrs;  %focus;  name        CDATA          #IMPLIED  value       CDATA          #IMPLIED  type        (button|submit|reset) "submit"  disabled    (disabled)     #IMPLIED  &gt;&lt;!--======================= Tables =======================================--&gt;&lt;!-- Derived from IETF HTML table standard, see [RFC1942] --&gt;&lt;!-- The border attribute sets the thickness of the frame around the table. The default units are screen pixels. The frame attribute specifies which parts of the frame around the table should be rendered. The values are not the same as CALS to avoid a name clash with the valign attribute.--&gt;&lt;!ENTITY % TFrame "(void|above|below|hsides|lhs|rhs|vsides|box|border)"&gt;&lt;!-- The rules attribute defines which rules to draw between cells: If rules is absent then assume:     "none" if border is absent or border="0" otherwise "all"--&gt;&lt;!ENTITY % TRules "(none | groups | rows | cols | all)"&gt;  &lt;!-- horizontal alignment attributes for cell contents  char        alignment char, e.g. char='':''  charoff     offset for alignment char--&gt;&lt;!ENTITY % cellhalign  "align      (left|center|right|justify|char) #IMPLIED   char       %Character;    #IMPLIED   charoff    %Length;       #IMPLIED"  &gt;&lt;!-- vertical alignment attributes for cell contents --&gt;&lt;!ENTITY % cellvalign  "valign     (top|middle|bottom|baseline) #IMPLIED"  &gt;&lt;!ELEMENT table     (caption?, (col*|colgroup*), thead?, tfoot?, (tbody+|tr+))&gt;&lt;!ELEMENT caption  %Inline;&gt;&lt;!ELEMENT thead    (tr)+&gt;&lt;!ELEMENT tfoot    (tr)+&gt;&lt;!ELEMENT tbody    (tr)+&gt;&lt;!ELEMENT colgroup (col)*&gt;&lt;!ELEMENT col      EMPTY&gt;&lt;!ELEMENT tr       (th|td)+&gt;&lt;!ELEMENT th       %Flow;&gt;&lt;!ELEMENT td       %Flow;&gt;&lt;!ATTLIST table  %attrs;  summary     %Text;         #IMPLIED  width       %Length;       #IMPLIED  border      %Pixels;       #IMPLIED  frame       %TFrame;       #IMPLIED  rules       %TRules;       #IMPLIED  cellspacing %Length;       #IMPLIED  cellpadding %Length;       #IMPLIED  &gt;&lt;!ATTLIST caption  %attrs;  &gt;&lt;!--colgroup groups a set of col elements. It allows you to groupseveral semantically related columns together.--&gt;&lt;!ATTLIST colgroup  %attrs;  span        %Number;       "1"  width       %MultiLength;  #IMPLIED  %cellhalign;  %cellvalign;  &gt;&lt;!-- col elements define the alignment properties for cells in one or more columns. The width attribute specifies the width of the columns, e.g.     width=64        width in screen pixels     width=0.5*      relative width of 0.5 The span attribute causes the attributes of one col element to apply to more than one column.--&gt;&lt;!ATTLIST col  %attrs;  span        %Number;       "1"  width       %MultiLength;  #IMPLIED  %cellhalign;  %cellvalign;  &gt;&lt;!--    Use thead to duplicate headers when breaking table    across page boundaries, or for static headers when    tbody sections are rendered in scrolling panel.    Use tfoot to duplicate footers when breaking table    across page boundaries, or for static footers when    tbody sections are rendered in scrolling panel.    Use multiple tbody sections when rules are needed    between groups of table rows.--&gt;&lt;!ATTLIST thead  %attrs;  %cellhalign;  %cellvalign;  &gt;&lt;!ATTLIST tfoot  %attrs;  %cellhalign;  %cellvalign;  &gt;&lt;!ATTLIST tbody  %attrs;  %cellhalign;  %cellvalign;  &gt;&lt;!ATTLIST tr  %attrs;  %cellhalign;  %cellvalign;  &gt;&lt;!-- Scope is simpler than headers attribute for common tables --&gt;&lt;!ENTITY % Scope "(row|col|rowgroup|colgroup)"&gt;&lt;!-- th is for headers, td for data and for cells acting as both --&gt;&lt;!ATTLIST th  %attrs;  abbr        %Text;         #IMPLIED  axis        CDATA          #IMPLIED  headers     IDREFS         #IMPLIED  scope       %Scope;        #IMPLIED  rowspan     %Number;       "1"  colspan     %Number;       "1"  %cellhalign;  %cellvalign;  &gt;&lt;!ATTLIST td  %attrs;  abbr        %Text;         #IMPLIED  axis        CDATA          #IMPLIED  headers     IDREFS         #IMPLIED  scope       %Scope;        #IMPLIED  rowspan     %Number;       "1"  colspan     %Number;       "1"  %cellhalign;  %cellvalign;  &gt;'</body><body package="GHXhtmlSupport">xhtmlSymbolEnt	&lt;xmlCacheForURL: 'http://www.w3.org/TR/xhtml1/DTD/xhtml-symbol.ent'	name: '-//W3C//ENTITIES Symbols for XHTML//EN'&gt;	^'&lt;!-- Mathematical, Greek and Symbolic characters for XHTML --&gt;&lt;!-- Character entity set. Typical invocation:     &lt;!ENTITY % HTMLsymbol PUBLIC        "-//W3C//ENTITIES Symbols for XHTML//EN"        "http://www.w3.org/TR/xhtml1/DTD/xhtml-symbol.ent"&gt;     %HTMLsymbol;--&gt;&lt;!-- Portions (C) International Organization for Standardization 1986:     Permission to copy in any form is granted for use with     conforming SGML systems and applications as defined in     ISO 8879, provided this notice is included in all copies.--&gt;&lt;!-- Relevant ISO entity set is given unless names are newly introduced.     New names (i.e., not in ISO 8879 list) do not clash with any     existing ISO 8879 entity names. ISO 10646 character numbers     are given for each character, in hex. values are decimal     conversions of the ISO 10646 values and refer to the document     character set. Names are Unicode names. --&gt;&lt;!-- Latin Extended-B --&gt;&lt;!ENTITY fnof     "&amp;#402;"&gt; &lt;!-- latin small letter f with hook = function                                    = florin, U+0192 ISOtech --&gt;&lt;!-- Greek --&gt;&lt;!ENTITY Alpha    "&amp;#913;"&gt; &lt;!-- greek capital letter alpha, U+0391 --&gt;&lt;!ENTITY Beta     "&amp;#914;"&gt; &lt;!-- greek capital letter beta, U+0392 --&gt;&lt;!ENTITY Gamma    "&amp;#915;"&gt; &lt;!-- greek capital letter gamma,                                    U+0393 ISOgrk3 --&gt;&lt;!ENTITY Delta    "&amp;#916;"&gt; &lt;!-- greek capital letter delta,                                    U+0394 ISOgrk3 --&gt;&lt;!ENTITY Epsilon  "&amp;#917;"&gt; &lt;!-- greek capital letter epsilon, U+0395 --&gt;&lt;!ENTITY Zeta     "&amp;#918;"&gt; &lt;!-- greek capital letter zeta, U+0396 --&gt;&lt;!ENTITY Eta      "&amp;#919;"&gt; &lt;!-- greek capital letter eta, U+0397 --&gt;&lt;!ENTITY Theta    "&amp;#920;"&gt; &lt;!-- greek capital letter theta,                                    U+0398 ISOgrk3 --&gt;&lt;!ENTITY Iota     "&amp;#921;"&gt; &lt;!-- greek capital letter iota, U+0399 --&gt;&lt;!ENTITY Kappa    "&amp;#922;"&gt; &lt;!-- greek capital letter kappa, U+039A --&gt;&lt;!ENTITY Lambda   "&amp;#923;"&gt; &lt;!-- greek capital letter lamda,                                    U+039B ISOgrk3 --&gt;&lt;!ENTITY Mu       "&amp;#924;"&gt; &lt;!-- greek capital letter mu, U+039C --&gt;&lt;!ENTITY Nu       "&amp;#925;"&gt; &lt;!-- greek capital letter nu, U+039D --&gt;&lt;!ENTITY Xi       "&amp;#926;"&gt; &lt;!-- greek capital letter xi, U+039E ISOgrk3 --&gt;&lt;!ENTITY Omicron  "&amp;#927;"&gt; &lt;!-- greek capital letter omicron, U+039F --&gt;&lt;!ENTITY Pi       "&amp;#928;"&gt; &lt;!-- greek capital letter pi, U+03A0 ISOgrk3 --&gt;&lt;!ENTITY Rho      "&amp;#929;"&gt; &lt;!-- greek capital letter rho, U+03A1 --&gt;&lt;!-- there is no Sigmaf, and no U+03A2 character either --&gt;&lt;!ENTITY Sigma    "&amp;#931;"&gt; &lt;!-- greek capital letter sigma,                                    U+03A3 ISOgrk3 --&gt;&lt;!ENTITY Tau      "&amp;#932;"&gt; &lt;!-- greek capital letter tau, U+03A4 --&gt;&lt;!ENTITY Upsilon  "&amp;#933;"&gt; &lt;!-- greek capital letter upsilon,                                    U+03A5 ISOgrk3 --&gt;&lt;!ENTITY Phi      "&amp;#934;"&gt; &lt;!-- greek capital letter phi,                                    U+03A6 ISOgrk3 --&gt;&lt;!ENTITY Chi      "&amp;#935;"&gt; &lt;!-- greek capital letter chi, U+03A7 --&gt;&lt;!ENTITY Psi      "&amp;#936;"&gt; &lt;!-- greek capital letter psi,                                    U+03A8 ISOgrk3 --&gt;&lt;!ENTITY Omega    "&amp;#937;"&gt; &lt;!-- greek capital letter omega,                                    U+03A9 ISOgrk3 --&gt;&lt;!ENTITY alpha    "&amp;#945;"&gt; &lt;!-- greek small letter alpha,                                    U+03B1 ISOgrk3 --&gt;&lt;!ENTITY beta     "&amp;#946;"&gt; &lt;!-- greek small letter beta, U+03B2 ISOgrk3 --&gt;&lt;!ENTITY gamma    "&amp;#947;"&gt; &lt;!-- greek small letter gamma,                                    U+03B3 ISOgrk3 --&gt;&lt;!ENTITY delta    "&amp;#948;"&gt; &lt;!-- greek small letter delta,                                    U+03B4 ISOgrk3 --&gt;&lt;!ENTITY epsilon  "&amp;#949;"&gt; &lt;!-- greek small letter epsilon,                                    U+03B5 ISOgrk3 --&gt;&lt;!ENTITY zeta     "&amp;#950;"&gt; &lt;!-- greek small letter zeta, U+03B6 ISOgrk3 --&gt;&lt;!ENTITY eta      "&amp;#951;"&gt; &lt;!-- greek small letter eta, U+03B7 ISOgrk3 --&gt;&lt;!ENTITY theta    "&amp;#952;"&gt; &lt;!-- greek small letter theta,                                    U+03B8 ISOgrk3 --&gt;&lt;!ENTITY iota     "&amp;#953;"&gt; &lt;!-- greek small letter iota, U+03B9 ISOgrk3 --&gt;&lt;!ENTITY kappa    "&amp;#954;"&gt; &lt;!-- greek small letter kappa,                                    U+03BA ISOgrk3 --&gt;&lt;!ENTITY lambda   "&amp;#955;"&gt; &lt;!-- greek small letter lamda,                                    U+03BB ISOgrk3 --&gt;&lt;!ENTITY mu       "&amp;#956;"&gt; &lt;!-- greek small letter mu, U+03BC ISOgrk3 --&gt;&lt;!ENTITY nu       "&amp;#957;"&gt; &lt;!-- greek small letter nu, U+03BD ISOgrk3 --&gt;&lt;!ENTITY xi       "&amp;#958;"&gt; &lt;!-- greek small letter xi, U+03BE ISOgrk3 --&gt;&lt;!ENTITY omicron  "&amp;#959;"&gt; &lt;!-- greek small letter omicron, U+03BF NEW --&gt;&lt;!ENTITY pi       "&amp;#960;"&gt; &lt;!-- greek small letter pi, U+03C0 ISOgrk3 --&gt;&lt;!ENTITY rho      "&amp;#961;"&gt; &lt;!-- greek small letter rho, U+03C1 ISOgrk3 --&gt;&lt;!ENTITY sigmaf   "&amp;#962;"&gt; &lt;!-- greek small letter final sigma,                                    U+03C2 ISOgrk3 --&gt;&lt;!ENTITY sigma    "&amp;#963;"&gt; &lt;!-- greek small letter sigma,                                    U+03C3 ISOgrk3 --&gt;&lt;!ENTITY tau      "&amp;#964;"&gt; &lt;!-- greek small letter tau, U+03C4 ISOgrk3 --&gt;&lt;!ENTITY upsilon  "&amp;#965;"&gt; &lt;!-- greek small letter upsilon,                                    U+03C5 ISOgrk3 --&gt;&lt;!ENTITY phi      "&amp;#966;"&gt; &lt;!-- greek small letter phi, U+03C6 ISOgrk3 --&gt;&lt;!ENTITY chi      "&amp;#967;"&gt; &lt;!-- greek small letter chi, U+03C7 ISOgrk3 --&gt;&lt;!ENTITY psi      "&amp;#968;"&gt; &lt;!-- greek small letter psi, U+03C8 ISOgrk3 --&gt;&lt;!ENTITY omega    "&amp;#969;"&gt; &lt;!-- greek small letter omega,                                    U+03C9 ISOgrk3 --&gt;&lt;!ENTITY thetasym "&amp;#977;"&gt; &lt;!-- greek theta symbol,                                    U+03D1 NEW --&gt;&lt;!ENTITY upsih    "&amp;#978;"&gt; &lt;!-- greek upsilon with hook symbol,                                    U+03D2 NEW --&gt;&lt;!ENTITY piv      "&amp;#982;"&gt; &lt;!-- greek pi symbol, U+03D6 ISOgrk3 --&gt;&lt;!-- General Punctuation --&gt;&lt;!ENTITY bull     "&amp;#8226;"&gt; &lt;!-- bullet = black small circle,                                     U+2022 ISOpub  --&gt;&lt;!-- bullet is NOT the same as bullet operator, U+2219 --&gt;&lt;!ENTITY hellip   "&amp;#8230;"&gt; &lt;!-- horizontal ellipsis = three dot leader,                                     U+2026 ISOpub  --&gt;&lt;!ENTITY prime    "&amp;#8242;"&gt; &lt;!-- prime = minutes = feet, U+2032 ISOtech --&gt;&lt;!ENTITY Prime    "&amp;#8243;"&gt; &lt;!-- double prime = seconds = inches,                                     U+2033 ISOtech --&gt;&lt;!ENTITY oline    "&amp;#8254;"&gt; &lt;!-- overline = spacing overscore,                                     U+203E NEW --&gt;&lt;!ENTITY frasl    "&amp;#8260;"&gt; &lt;!-- fraction slash, U+2044 NEW --&gt;&lt;!-- Letterlike Symbols --&gt;&lt;!ENTITY weierp   "&amp;#8472;"&gt; &lt;!-- script capital P = power set                                     = Weierstrass p, U+2118 ISOamso --&gt;&lt;!ENTITY image    "&amp;#8465;"&gt; &lt;!-- black-letter capital I = imaginary part,                                     U+2111 ISOamso --&gt;&lt;!ENTITY real     "&amp;#8476;"&gt; &lt;!-- black-letter capital R = real part symbol,                                     U+211C ISOamso --&gt;&lt;!ENTITY trade    "&amp;#8482;"&gt; &lt;!-- trade mark sign, U+2122 ISOnum --&gt;&lt;!ENTITY alefsym  "&amp;#8501;"&gt; &lt;!-- alef symbol = first transfinite cardinal,                                     U+2135 NEW --&gt;&lt;!-- alef symbol is NOT the same as hebrew letter alef,     U+05D0 although the same glyph could be used to depict both characters --&gt;&lt;!-- Arrows --&gt;&lt;!ENTITY larr     "&amp;#8592;"&gt; &lt;!-- leftwards arrow, U+2190 ISOnum --&gt;&lt;!ENTITY uarr     "&amp;#8593;"&gt; &lt;!-- upwards arrow, U+2191 ISOnum--&gt;&lt;!ENTITY rarr     "&amp;#8594;"&gt; &lt;!-- rightwards arrow, U+2192 ISOnum --&gt;&lt;!ENTITY darr     "&amp;#8595;"&gt; &lt;!-- downwards arrow, U+2193 ISOnum --&gt;&lt;!ENTITY harr     "&amp;#8596;"&gt; &lt;!-- left right arrow, U+2194 ISOamsa --&gt;&lt;!ENTITY crarr    "&amp;#8629;"&gt; &lt;!-- downwards arrow with corner leftwards                                     = carriage return, U+21B5 NEW --&gt;&lt;!ENTITY lArr     "&amp;#8656;"&gt; &lt;!-- leftwards double arrow, U+21D0 ISOtech --&gt;&lt;!-- Unicode does not say that lArr is the same as the ''is implied by'' arrow    but also does not have any other character for that function. So lArr can    be used for ''is implied by'' as ISOtech suggests --&gt;&lt;!ENTITY uArr     "&amp;#8657;"&gt; &lt;!-- upwards double arrow, U+21D1 ISOamsa --&gt;&lt;!ENTITY rArr     "&amp;#8658;"&gt; &lt;!-- rightwards double arrow,                                     U+21D2 ISOtech --&gt;&lt;!-- Unicode does not say this is the ''implies'' character but does not have      another character with this function so rArr can be used for ''implies''     as ISOtech suggests --&gt;&lt;!ENTITY dArr     "&amp;#8659;"&gt; &lt;!-- downwards double arrow, U+21D3 ISOamsa --&gt;&lt;!ENTITY hArr     "&amp;#8660;"&gt; &lt;!-- left right double arrow,                                     U+21D4 ISOamsa --&gt;&lt;!-- Mathematical Operators --&gt;&lt;!ENTITY forall   "&amp;#8704;"&gt; &lt;!-- for all, U+2200 ISOtech --&gt;&lt;!ENTITY part     "&amp;#8706;"&gt; &lt;!-- partial differential, U+2202 ISOtech  --&gt;&lt;!ENTITY exist    "&amp;#8707;"&gt; &lt;!-- there exists, U+2203 ISOtech --&gt;&lt;!ENTITY empty    "&amp;#8709;"&gt; &lt;!-- empty set = null set, U+2205 ISOamso --&gt;&lt;!ENTITY nabla    "&amp;#8711;"&gt; &lt;!-- nabla = backward difference,                                     U+2207 ISOtech --&gt;&lt;!ENTITY isin     "&amp;#8712;"&gt; &lt;!-- element of, U+2208 ISOtech --&gt;&lt;!ENTITY notin    "&amp;#8713;"&gt; &lt;!-- not an element of, U+2209 ISOtech --&gt;&lt;!ENTITY ni       "&amp;#8715;"&gt; &lt;!-- contains as member, U+220B ISOtech --&gt;&lt;!ENTITY prod     "&amp;#8719;"&gt; &lt;!-- n-ary product = product sign,                                     U+220F ISOamsb --&gt;&lt;!-- prod is NOT the same character as U+03A0 ''greek capital letter pi'' though     the same glyph might be used for both --&gt;&lt;!ENTITY sum      "&amp;#8721;"&gt; &lt;!-- n-ary summation, U+2211 ISOamsb --&gt;&lt;!-- sum is NOT the same character as U+03A3 ''greek capital letter sigma''     though the same glyph might be used for both --&gt;&lt;!ENTITY minus    "&amp;#8722;"&gt; &lt;!-- minus sign, U+2212 ISOtech --&gt;&lt;!ENTITY lowast   "&amp;#8727;"&gt; &lt;!-- asterisk operator, U+2217 ISOtech --&gt;&lt;!ENTITY radic    "&amp;#8730;"&gt; &lt;!-- square root = radical sign,                                     U+221A ISOtech --&gt;&lt;!ENTITY prop     "&amp;#8733;"&gt; &lt;!-- proportional to, U+221D ISOtech --&gt;&lt;!ENTITY infin    "&amp;#8734;"&gt; &lt;!-- infinity, U+221E ISOtech --&gt;&lt;!ENTITY ang      "&amp;#8736;"&gt; &lt;!-- angle, U+2220 ISOamso --&gt;&lt;!ENTITY and      "&amp;#8743;"&gt; &lt;!-- logical and = wedge, U+2227 ISOtech --&gt;&lt;!ENTITY or       "&amp;#8744;"&gt; &lt;!-- logical or = vee, U+2228 ISOtech --&gt;&lt;!ENTITY cap      "&amp;#8745;"&gt; &lt;!-- intersection = cap, U+2229 ISOtech --&gt;&lt;!ENTITY cup      "&amp;#8746;"&gt; &lt;!-- union = cup, U+222A ISOtech --&gt;&lt;!ENTITY int      "&amp;#8747;"&gt; &lt;!-- integral, U+222B ISOtech --&gt;&lt;!ENTITY there4   "&amp;#8756;"&gt; &lt;!-- therefore, U+2234 ISOtech --&gt;&lt;!ENTITY sim      "&amp;#8764;"&gt; &lt;!-- tilde operator = varies with = similar to,                                     U+223C ISOtech --&gt;&lt;!-- tilde operator is NOT the same character as the tilde, U+007E,     although the same glyph might be used to represent both  --&gt;&lt;!ENTITY cong     "&amp;#8773;"&gt; &lt;!-- approximately equal to, U+2245 ISOtech --&gt;&lt;!ENTITY asymp    "&amp;#8776;"&gt; &lt;!-- almost equal to = asymptotic to,                                     U+2248 ISOamsr --&gt;&lt;!ENTITY ne       "&amp;#8800;"&gt; &lt;!-- not equal to, U+2260 ISOtech --&gt;&lt;!ENTITY equiv    "&amp;#8801;"&gt; &lt;!-- identical to, U+2261 ISOtech --&gt;&lt;!ENTITY le       "&amp;#8804;"&gt; &lt;!-- less-than or equal to, U+2264 ISOtech --&gt;&lt;!ENTITY ge       "&amp;#8805;"&gt; &lt;!-- greater-than or equal to,                                     U+2265 ISOtech --&gt;&lt;!ENTITY sub      "&amp;#8834;"&gt; &lt;!-- subset of, U+2282 ISOtech --&gt;&lt;!ENTITY sup      "&amp;#8835;"&gt; &lt;!-- superset of, U+2283 ISOtech --&gt;&lt;!ENTITY nsub     "&amp;#8836;"&gt; &lt;!-- not a subset of, U+2284 ISOamsn --&gt;&lt;!ENTITY sube     "&amp;#8838;"&gt; &lt;!-- subset of or equal to, U+2286 ISOtech --&gt;&lt;!ENTITY supe     "&amp;#8839;"&gt; &lt;!-- superset of or equal to,                                     U+2287 ISOtech --&gt;&lt;!ENTITY oplus    "&amp;#8853;"&gt; &lt;!-- circled plus = direct sum,                                     U+2295 ISOamsb --&gt;&lt;!ENTITY otimes   "&amp;#8855;"&gt; &lt;!-- circled times = vector product,                                     U+2297 ISOamsb --&gt;&lt;!ENTITY perp     "&amp;#8869;"&gt; &lt;!-- up tack = orthogonal to = perpendicular,                                     U+22A5 ISOtech --&gt;&lt;!ENTITY sdot     "&amp;#8901;"&gt; &lt;!-- dot operator, U+22C5 ISOamsb --&gt;&lt;!-- dot operator is NOT the same character as U+00B7 middle dot --&gt;&lt;!-- Miscellaneous Technical --&gt;&lt;!ENTITY lceil    "&amp;#8968;"&gt; &lt;!-- left ceiling = APL upstile,                                     U+2308 ISOamsc  --&gt;&lt;!ENTITY rceil    "&amp;#8969;"&gt; &lt;!-- right ceiling, U+2309 ISOamsc  --&gt;&lt;!ENTITY lfloor   "&amp;#8970;"&gt; &lt;!-- left floor = APL downstile,                                     U+230A ISOamsc  --&gt;&lt;!ENTITY rfloor   "&amp;#8971;"&gt; &lt;!-- right floor, U+230B ISOamsc  --&gt;&lt;!ENTITY lang     "&amp;#9001;"&gt; &lt;!-- left-pointing angle bracket = bra,                                     U+2329 ISOtech --&gt;&lt;!-- lang is NOT the same character as U+003C ''less than sign''      or U+2039 ''single left-pointing angle quotation mark'' --&gt;&lt;!ENTITY rang     "&amp;#9002;"&gt; &lt;!-- right-pointing angle bracket = ket,                                     U+232A ISOtech --&gt;&lt;!-- rang is NOT the same character as U+003E ''greater than sign''      or U+203A ''single right-pointing angle quotation mark'' --&gt;&lt;!-- Geometric Shapes --&gt;&lt;!ENTITY loz      "&amp;#9674;"&gt; &lt;!-- lozenge, U+25CA ISOpub --&gt;&lt;!-- Miscellaneous Symbols --&gt;&lt;!ENTITY spades   "&amp;#9824;"&gt; &lt;!-- black spade suit, U+2660 ISOpub --&gt;&lt;!-- black here seems to mean filled as opposed to hollow --&gt;&lt;!ENTITY clubs    "&amp;#9827;"&gt; &lt;!-- black club suit = shamrock,                                     U+2663 ISOpub --&gt;&lt;!ENTITY hearts   "&amp;#9829;"&gt; &lt;!-- black heart suit = valentine,                                     U+2665 ISOpub --&gt;&lt;!ENTITY diams    "&amp;#9830;"&gt; &lt;!-- black diamond suit, U+2666 ISOpub --&gt;'</body></methods><methods><class-id>GHXhtmlDTDPreloader class</class-id> <category>accessing</category><body package="GHXhtmlSupport">pragmas	&lt;pragmas: #instance&gt;	^#(#xmlCacheForURL:name:)</body></methods><initialize><class-id>GHXhtmlDTDPreloader</class-id></initialize><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>Object</name><environment>Core</environment><super></super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Kernel-Objects</category><attributes><package>Kernel-Objects</package></attributes></class></st-source>