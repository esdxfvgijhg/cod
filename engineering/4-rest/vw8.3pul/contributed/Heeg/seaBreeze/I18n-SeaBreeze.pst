<?xml version="1.0"?><st-source><!-- Name: I18n-SeaBreezeNotice: © Copyright 2010-2013 Georg Heeg e.K.Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.(MIT License)Comment: Package I18n-SeaBreeze contains enhancements of I18N for seaBreeze.This includes support for Slar-Arrays and the possibilities to export to Excel and HTML strings to separate files. Certainly these separate file can be merged also after being translated.DbIdentifier: magdi.heeg.de.postgresDbTrace: 60851DbUsername: danielDbVersion: 8.2 - 1DevelopmentPrerequisites: #(#(#any 'Internationalizer' ''))PackageName: I18n-SeaBreezeParcel: #('I18n-SeaBreeze')ParcelDirectory: c:\visworks\vw8.2 jun16.1\image\HeegContributions-vw8.2-2016-06-10\seaBreeze\I18n-SeaBreezePrerequisiteDescriptions: #(#(#name 'Internationalizer' #componentType #bundle))PrerequisiteParcels: #(#('Internationalizer' ''))PrintStringCache: (8.2 - 1,daniel)Version: 8.2 - 1Date: 2:36:45 PM June 10, 2016 --><time-stamp>From VisualWorks®, Pre-Release 8.2 (jun16.1) of 3. Juni 2016 on 10. Juni 2016 at 14:36:45</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>SeaBreezeCatalogsUIIcons</name><environment>I18nTools</environment><super>AlphaBlendedIcons</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>I18n-SeaBreeze</package></attributes></class><methods><class-id>I18nTools.CatalogsUI</class-id> <category>actions</category><body package="I18n-SeaBreeze">mergeCatalogAndHTMLFiles	"this method takes a -short.lbl catalog file as well as a folder full of html files. The folder and the catalog file have to have the same name.	The resulting catalog file will have both the translations of the short.lbl file as well as all the html files, whose name will be the key of the translation. Their file content is the default string.	The -short.lbl and html files can be created using the #writeCatalogAndHTMLFiles method."	| catName input val output |	catName := Dialog				requestFileName: #WhereDoYouHaveTheTranslatedCatalogFile &lt;&lt; #seaBreezeI18N						&gt;&gt; 'Where do you have the translated catalog file?'				default: '*-short.lbl'.	(catName isEmpty or: [('*-short.lbl' match: catName) not])		ifTrue: 			[Dialog warn: #CatalogFileDoesNotEndWithShortLbl &lt;&lt; #I18nTool						&gt;&gt; 'Catalog file does not end with -short.lbl'.			^self].	input := catName asFilename withEncoding: #UTF_8.	input := input readStream.	input lineEndAuto.	output := ((catName allButLast: '-short.lbl' size) , '.lbl') asFilename				withEncoding: #UTF_8.	output := output writeStream.	output lineEndTransparent.		[| directory |	output nextPutAll: input contents.	input close.	directory := (catName allButLast: '-short.lbl' size) asFilename				ensureDirectory.	directory directoryContents do: 			[:htmlFilename |			('*.html' match: htmlFilename)				ifTrue: 					[| key htmlFile |					key := htmlFilename allButLast: '.html' size.					htmlFile := ((directory construct: htmlFilename) asFilename								withEncoding: #utf8) readStream.					val := htmlFile contents.					htmlFile close.					output						nextPutAll: ('&lt;1s&gt; = &lt;2p&gt;' expandMacrosWith: key asString with: val);						cr]]]			ensure: [output close].	IndexedFileMessageCatalog		compileCatalogIndexFor: (catName allButLast: '-short.lbl' size)</body><body package="I18n-SeaBreeze">splitCatalog: catalog intoFolder: directory	| catalogStream fileName htmlDirectory hasHtmlKey newName |	fileName := directory / (catalog name , '-short.lbl').	catalogStream := (fileName withEncoding: #UTF_8) writeStream.	catalogStream lineEndTransparent.		[catalog writeCatalogHeaderWithName: catalog name		onCatalogStream: catalogStream.	htmlDirectory := (directory / catalog name) asFilename.	hasHtmlKey := false.	catalog withSortedKeysAndDefaultStringsDo: 			[:key :defaultString |			(('*&lt;p&gt;*' match: defaultString) or: ['*&lt;/div&gt;*' match: defaultString])				ifTrue: 					[| htmlFile |					hasHtmlKey := true.					htmlDirectory ensureDirectory.					htmlFile := (htmlDirectory / (key , '.html') withEncoding: #utf8)								writeStream.					htmlFile nextPutAll: defaultString.					htmlFile close]				ifFalse: 					[catalog						writeKey: key						defaultString: defaultString						onCatalogStream: catalogStream]]]			ensure: [catalogStream close].	hasHtmlKey		ifFalse: 			[newName := directory / (catalog name , '.lbl').			newName exists ifTrue:[newName delete].			fileName renameTo: newName.			fileName := newName].	^IndexedFileMessageCatalog		compileCatalogIndexFor: (fileName asString allButLast: 4)</body><body package="I18n-SeaBreeze">splitCatalogsFromDirectory: sourceDirectory into: targetDirectory	"	self new splitCatalogsFromDirectory: ('C:\Program Files (x86)\Cincom\vw7.10rc3\contributed\Heeg\messages\de' asFilename) into: ('.' asFilename / 'de') ensureDirectory 	"	(sourceDirectory directoryContents select: [:each | '*.lbl' match: each])		collect: 			[:each |			self splitCatalog: (UserMessageCatalog fromFile: sourceDirectory / each)				intoFolder: targetDirectory]</body><body package="I18n-SeaBreeze">writeCatalogAndHTMLFiles	"this method writes catalogs that have html text as default strings (like in catalog #seaBreezeDocs) both into a .lbl file as well as into a folder full of html files.	the lbl file does not contain the html texts and as such is shorter, hence its -short.lbl file name.	The -short.lbl catalog and the html files can be combined back into a normal lbl file using #mergeCatalogAndHTMLFiles"	| directoryName directory |	directoryName := Dialog				requestDirectoryName: #WhereDoYouWantToPutTheCatalogFile &lt;&lt; #I18nTool						&gt;&gt; 'Where do you want to put the catalog file?'.	directoryName isEmpty ifTrue: [^self].	directory := directoryName asFilename.	Cursor wait showWhile: 			[self selectedCatalogItems				do: [:catalogItem | self splitCatalog: catalogItem catalog intoFolder: directory]]</body></methods><methods><class-id>I18nCore.UserMessageCatalog class</class-id> <category>instance creation</category><body package="I18n-SeaBreeze">fromFile: aFilename	| rs tokens |	rs := (aFilename withEncoding: #source) readStream.		[tokens := Scanner new scanTokens: rs contents.	^self readNextFromScanner: tokens]			ensure: [rs close]</body><body package="I18n-SeaBreeze">readNextFromScanner: tokens	| messages catalogName rs token key message catalog |	messages := Set new.	catalogName := nil.	rs := tokens readStream.	[rs atEnd] whileFalse: 			[token := rs next.			token last = $:				ifTrue: 					[rs peek = #'#' ifTrue:[rs next].					token = #catalog:						ifTrue: [catalogName := rs next]						ifFalse: [rs next]]				ifFalse: 					[key := token.					"skip the #= "					rs next.					message := rs next.					messages add: (UserMessage defaultString: message key: key)]].	catalog := self named: catalogName.	messages do: 			[:each |			each catalogID: catalogName.			catalog messageMap at: each put: nil].	^catalog</body></methods><methods><class-id>I18nTools.SeaBreezeCatalogsUIIcons class</class-id> <category>png imports</category><body package="I18n-SeaBreeze">Merge	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'Merge.png'&gt;	&lt;md5sum: #[201 191 35 228 84 134 28 183 51 206 18 147 64 142 15 174]&gt;	^[AlphaCompositedImage image: ((Image extent: 24@24 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????A@@@@@C???="@@@@W0@@@@C???&lt;D@@@@@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;B@@@@@O???0C????\@@@@60@@@@C???&lt;@????@P@@@@C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;D@@@@@O???5\@@@C?@@@@?0@@@E(@@@@@????AP@@@@C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0D@@@@@????@ @@@L4@@@C?@@@@?0@@@L8@@@@A@@@@@O???0H@@@@@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0T@@@@@????U @@@O&lt;@@@C&lt;@@@@?@@@@O&lt;@@@AT@@@@@O???0P@@@@@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@ @@@@C???&lt;J@@@@8 @@@O&lt;@@@C&gt;@@@@?P@@@O&lt;@@@C @@@@B0@@@@C???&lt;B@@@@@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@ @@@@C???&lt;_@@@@^0@@@G4@@@C/@@@@&lt;@@@@G0@@@A&lt;@@@@G0@@@@C???&lt;B@@@@@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@P@@@@D@@@@A@@@@@P@@@@H@@@@A@@@@@O???0C????!@@@@8P@@@@C???&lt;@????@O???0H@@@@A@@@@@P@@@@D@@@@A@@@@@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;A@@@@@O???0\@@@C"@@@@80@@@@T@@@@@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0L@@@C"@@@@8 @@@@D@@@@@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????TP@@@L8@@@C@@@@@0P@@@LD@@@CB@@@@0@@@@LL@@@C8@@@@&gt;@@@@LH@@@CA@@@@0 @@@LD@@@CA@@@@/0@@@L8@@@AR@@@@@O???0C???&lt;@????@O???0C???&lt;@????\ @@@O&lt;@@@C?@@@@?0@@@O&lt;@@@C?@@@@?0@@@O&lt;@@@C?@@@@?0@@@O&lt;@@@C?@@@@?0@@@O&lt;@@@C?@@@@?0@@@O&lt;@@@A3@@@@@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????')))] once</body><body package="I18n-SeaBreeze">Split	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'Split.png'&gt;	&lt;md5sum: #[215 112 228 13 91 248 154 155 151 175 237 104 43 136 218 156]&gt;	^[AlphaCompositedImage image: ((Image extent: 24@24 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0D@@@@Z@@@@F0@@@@C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;B@@@@@O???0T@@@CT@@@@5P@@@@L@@@@@????@ @@@@C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;B@@@@@O???0T@@@C(@@@@:@@@@@P@@@@@????@ @@@@C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;B@@@@@O???0T@@@C @@@@8P@@@@P@@@@@????@ @@@@C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;B@@@@@O???0T@@@C"@@@@80@@@@P@@@@@????@ @@@@C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;B@@@@@O???0T@@@C"@@@@80@@@@P@@@@@????@ @@@@C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@P@@@@D@@@@B@@@@@O???0T@@@C"@@@@80@@@@P@@@@@????@P@@@@D@@@@A@@@@@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;D@@@@@P@@@@C???&lt;B@@@@@O???0T@@@C"@@@@80@@@@P@@@@@????@ @@@@C???&lt;A@@@@A@@@@@C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@0@@@@P@@@@@????@O???0$@@@@C@@@@@O???0T@@@C"@@@@80@@@@P@@@@@????@ @@@@$@@@@@????@O???0P@@@@C@@@@@O???0C???&lt;@????@O???0L@@@@C@@@@@O???0C???&lt;\@@@@( @@@G&lt;@@@@@????@O???0\@@@C#@@@@80@@@@X@@@@@????@O???7&lt;@@@B @@@@GP@@@@C???&lt;@????@0@@@@L@@@@@????@P@@@@C???&lt;@????HP@@@ID@@@C-@@@@?0@@@H0@@@@@????@O???0C???? @@@@8@@@@@C???&lt;@????@O???84@@@C?@@@@;0@@@H&lt;@@@@"@@@@@O???0C???&lt;A@@@@@O???3@@@@BU@@@@;P@@@O&lt;@@@C?@@@@?0@@@MT@@@B"@@@@) @@@J @@@C8@@@@&gt;@@@@J @@@B&amp;@@@@( @@@MX@@@C?@@@@?0@@@O&lt;@@@C-@@@@%P@@@C@@@@@@????@O???7P@@@C?@@@@?0@@@O&lt;@@@C9@@@@&gt;0@@@O&lt;@@@C?@@@@?0@@@O&lt;@@@C&gt;@@@@?P@@@O&lt;@@@C?@@@@?0@@@O&lt;@@@C;@@@@&gt;P@@@O&lt;@@@C?@@@@?0@@@GP@@@@@????@O???0C???&lt;Y@@@@!0@@@N&lt;@@@C?@@@@?0@@@I4@@@@Z@@@@K@@@@B$@@@@-@@@@KP@@@B$@@@@+@@@@F0@@@I4@@@C?@@@@?0@@@N8@@@BH@@@@F@@@@@C???&lt;@????@O???0C???&lt;@????@O???18@@@BD@@@@?0@@@IL@@@@@????@O???0C???&lt;@????@O???0C???&lt;@????@O???9P@@@C?@@@@!0@@@A0@@@@@????@O???0C???&lt;@????@O???0C???&lt;C@@@@A@@@@@C???&lt;@????J @@@C&lt;@@@@@????A@@@@@L@@@@C@@@@@0@@@@L@@@@C@@@@@O???4@@@@@)@@@@@O???0C???&lt;D@@@@@0@@@@C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????')))] once</body></methods><methods><class-id>I18nTools.CatalogsUI</class-id> <category>menu-items</category><body package="I18n-SeaBreeze">mergeHTMLFiles	&lt;itemInMenu: #(#toolbar) position: 61.1&gt;	&lt;itemInMenu: #(#menu #file) position: 61.1&gt;	&lt;itemInMenu: #(#contextMenu) position: 61.1&gt;	^(MenuItem		labeled: (#MergeHTMLFilesWithCatalogFile &lt;&lt; #i18nSeaBreeze	&gt;&gt; 'Merge HTML Files with Catalog File') asString )		labelImage: SeaBreezeCatalogsUIIcons Merge;		value: [self mergeCatalogAndHTMLFiles];		helpText: (#MergeTheShortLblCatalog___ortLblAndTheHtmlFiles_ &lt;&lt; #i18nSeaBreeze	&gt;&gt; 'Merge the *-short.lbl catalog file with the html files that were created using the Split function. The result is one lbl file containing all translations from the short.lbl and the html files.')		asString;		yourself</body><body package="I18n-SeaBreeze">writeHTMLFiles	&lt;itemInMenu: #(#toolbar) position: 61.0&gt;	&lt;itemInMenu: #(#menu #file) position: 61.0&gt;	&lt;itemInMenu: #(#contextMenu) position: 61.0&gt;	^(MenuItem		labeled: (#SplitCatalogIntoHTMLFiles &lt;&lt; #i18nSeaBreeze	&gt;&gt; 'Split Catalog into HTML Files') asString )		labelImage: SeaBreezeCatalogsUIIcons Split;		enablement: [self selectedCatalogItems notEmpty];		value: [self writeCatalogAndHTMLFiles];		helpText: (#WriteTheCatalogsIntoASh___dUsingTheMergeFunction &lt;&lt; #i18nSeaBreeze	&gt;&gt; 'Write the catalogs into a *-short.lbl catalog file and into html files containing one default string each. The html files and the short.lbl catalog file can be combined using the Merge function')		asString;		yourself</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>CatalogsUI</name><environment>I18nTools</environment><super>I18nTools.ChangeSetDependent</super><private>false</private><indexed-type>none</indexed-type><inst-vars>catalogsList selectedCatalog toolbar catalogsListContextMenu menu targetDirectory </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>I18n-Tools</package></attributes></class><class><name>AlphaBlendedIcons</name><environment>Smalltalk</environment><super>Core.Assets</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Tools-Resources</package></attributes></class></st-source>