<?xml version="1.0"?><st-source><!-- Name: GHWindowsPrinterSettingsNotice: © Copyright 2007-2013 Georg Heeg e.K.Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.(MIT License)Comment: This package adds the ability to set printer, paper size, paper orientation and number of copies to the visual works settings. this meens you don't have to do this settings everytime you open the print dialog.if you change something in the print dialog these settings are stored as well as if you change the settings in visualworks.This package provides class extensions for Win32PrinterInterface and VisualWorks settings. It also changes the default printer class on Windows, so that the RequestingPrinter is used. The new version of this package for 7.9 fixes a loading error, where the parcel can't be loaded because NTPrinterInterface was changed to Win32PrinterInterface. This version can not be loaded into any previous version of VisualWorks.DbIdentifier: magdi.heeg.de.postgresDbTrace: 42086DbUsername: georgDbVersion: 7.10 - 2DevelopmentPrerequisites: #(#(#any 'Windows Goodies' '') #(#any 'DLLCC' ''))DialectVersion: VisualWorks 7.9PackageName: GHWindowsPrinterSettingsParcel: #('GHWindowsPrinterSettings')ParcelDirectory: c:\visworks\vw8.0 sep14.2\image\HeegContributions-vw8.0-2014-09-25-2\GHWindowsPrinterSettingsParcelName: GHWindowsPrinterSettingsPrerequisiteParcels: #(#('Windows Goodies' ''))PrintStringCache: (7.10 - 2,georg)Version: 7.10 - 2Datum:3:30:58 PM September 25, 2014 --><time-stamp>Von VisualWorks®, 8.0 von 15. September 2014 am 25. September 2014 um 15:30:58</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>Win32PrinterSettings</name><environment>OS</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>colorMode hasCustomSize numberOfCopies orientation pageHeight pageWidth paperSizeSymbol selectedPrinter sorted </inst-vars><class-inst-vars>default </class-inst-vars><imports></imports><category></category><attributes><package>GHWindowsPrinterSettings</package></attributes></class><comment><class-id>OS.Win32PrinterSettings</class-id><body>Win32PrinterSettings stores the settings of the printer dialog in a singleton (use #default to access the singleton, use #new to create a new storage)Instance Variables	colorMode			&lt;ByteSymbol&gt;	#color or #monochrome	hasCustomSize		&lt;Boolean&gt;		true if pageWidth/pageHeight are used, otherwise pageSizeSymbol is used	numberOfCopies	&lt;SmallInteger&gt;		orientation			&lt;ByteSymbol&gt;	#portrait or #landscape	pageHeight			&lt;SmallInteger&gt;	height in mm	pageWidth			&lt;SmallInteger&gt;	width in mm	paperSizeSymbol	&lt;ByteSymbol&gt;	symbol of a paper size. This symbol is a method in Win32PrinterInterface and will return a number, when executed there	selectedPrinter		&lt;String&gt;		name of the selected printer	sorted				&lt;Boolean&gt;		print multiple copies sorted or not</body></comment><class><name>SettingsAspectMapper</name><environment>OS</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>devMode settingsStorage interface </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>GHWindowsPrinterSettings</package></attributes></class><comment><class-id>OS.SettingsAspectMapper</class-id><body>SettingsAspectMapper is class that knows how the aspects of the settingsStorage and the members of a devMode structure are connected. The devmode structure also has a member dmFields, which is a bitmask defining if a value is set or not. The aspectMapper also knows about this and will check if the field is set, before it tries to read the value. Same goes for writing the value, then the bitfield will be set.Usage	set up the SettingsAspectMapper with devMode, interface and settingsStorage, then call:	reading from the devmode structure:	settingsMapper readAspectFromDevMode:#colorMode using:[:member | member = 0 ifTrue:[#color] ifFalse:[#monochrome]].		writing to the devmode structure:	settingsMapper writeAspectToDevMode:#colorMode using:[:value | value = #color ifTrue:[0] ifFalse:[1]].Instance Variables	devMode			&lt;CComposite | CCompositePointer to a DEVMODE structure&gt;		interface			&lt;Win32PrinterInterface&gt;		settingsStorage		&lt;Win32PrinterSettings&gt;	</body></comment><methods><class-id>OS.Win32PrinterSettings</class-id> <category>accessing</category><body package="GHWindowsPrinterSettings">colorMode	^colorMode</body><body package="GHWindowsPrinterSettings">colorMode: anObject	colorMode := anObject</body><body package="GHWindowsPrinterSettings">hasCustomSize	^hasCustomSize</body><body package="GHWindowsPrinterSettings">hasCustomSize: anObject	hasCustomSize := anObject</body><body package="GHWindowsPrinterSettings">numberOfCopies	^numberOfCopies</body><body package="GHWindowsPrinterSettings">numberOfCopies: anObject	numberOfCopies := anObject</body><body package="GHWindowsPrinterSettings">orientation	^orientation</body><body package="GHWindowsPrinterSettings">orientation: anObject	orientation := anObject</body><body package="GHWindowsPrinterSettings">pageHeight	^pageHeight</body><body package="GHWindowsPrinterSettings">pageHeight: anObject	pageHeight := anObject</body><body package="GHWindowsPrinterSettings">pageWidth	^pageWidth</body><body package="GHWindowsPrinterSettings">pageWidth: anObject	pageWidth := anObject</body><body package="GHWindowsPrinterSettings">paperNamesAndDefines	^(Core.Dictionary new)		at: 'B5 Sheet, 182 x 257mm' put: #DMPAPER_B5;		at: 'Statement, 5.5" x 8.5"' put: #DMPAPER_STATEMENT;		at: '#9 Envelope, 3.875" x 8.875"' put: #DMPAPER_ENV_9;		at: 'German Standard Fanfold, 8.5" x 12"' put: #DMPAPER_FANFOLD_STD_GERMAN;		at: 'C6 Envelope, 114 x 162mm' put: #DMPAPER_ENV_C6;		at: 'Monarch Envelope, 3.875" x 7.5"' put: #DMPAPER_ENV_MONARCH;		at: 'C Sheet, 17" x 22"' put: #DMPAPER_CSHEET;		at: 'DL Envelope, 110 x 220mm' put: #DMPAPER_ENV_DL;		at: 'B5 Envelope, 176 x 250mm' put: #DMPAPER_ENV_B5;		at: 'A4 Small Sheet, 210 x 297mm' put: #DMPAPER_A4SMALL;		at: 'Letter, 8.5" x 11"' put: #DMPAPER_LETTER;		at: 'C5 Envelope, 162 x 229mm' put: #DMPAPER_ENV_C5;		at: 'D Sheet, 22" x 34"' put: #DMPAPER_DSHEET;		at: 'Letter Small, 8.5" x 11"' put: #DMPAPER_LETTERSMALL;		at: 'A3 Sheet, 297 x 420mm' put: #DMPAPER_A3;		at: 'Tabloid, 11" x 17"' put: #DMPAPER_TABLOID;		at: 'German Legal Fanfold, 8.5" x 13"' put: #DMPAPER_FANFOLD_LGL_GERMAN;		at: 'C3 Envelope, 324 x 458mm' put: #DMPAPER_ENV_C3;		at: 'C4 Envelope, 229 x 324mm' put: #DMPAPER_ENV_C4;		at: 'A5 Sheet, 148 x 210mm' put: #DMPAPER_A5;		at: 'B6 Envelope, 176 x 125mm' put: #DMPAPER_ENV_B6;		at: 'Legal, 8.5" x 14"' put: #DMPAPER_LEGAL;		at: 'Quarto, 215 x 275mm' put: #DMPAPER_QUARTO;		at: 'Note, 8.5" x 11"' put: #DMPAPER_NOTE;		at: 'B4 Envelope, 250 x 353mm' put: #DMPAPER_ENV_B4;		at: '#14 Envelope, 5" x 11.5"' put: #DMPAPER_ENV_14;		at: 'Folio, 8.5" x 13"' put: #DMPAPER_FOLIO;		at: 'E Sheet, 34" x 44"' put: #DMPAPER_ESHEET;		at: 'B4 Sheet, 250 x 354mm' put: #DMPAPER_B4;		at: 'Ledger, 17" x 11"' put: #DMPAPER_LEDGER;		at: 'C65 Envelope, 114 x 229mm' put: #DMPAPER_ENV_C65;		at: '11" x 17" Sheet' put: #DMPAPER_11X17;		at: 'Italy Envelope, 110 x 230mm' put: #DMPAPER_ENV_ITALY;		at: '10" x 14" Sheet' put: #DMPAPER_10X14;		at: 'US Standard Fanfold, 14.875" x 11"' put: #DMPAPER_FANFOLD_US;		at: '#12 Envelope, 4.75" x 11"' put: #DMPAPER_ENV_12;		at: '#10 Envelope, 4.125" x 9.5"' put: #DMPAPER_ENV_10;		at: '#11 Envelope, 4.5" x 10.375"' put: #DMPAPER_ENV_11;		at: '6.75 Envelope, 3.625" x 6.5"' put: #DMPAPER_ENV_PERSONAL;		at: 'Executive, 7.25" x 10.5"' put: #DMPAPER_EXECUTIVE;		at: 'A4 Sheet, 210 x 297mm' put: #DMPAPER_A4;		yourself</body><body package="GHWindowsPrinterSettings">paperSizeSymbol	^paperSizeSymbol</body><body package="GHWindowsPrinterSettings">paperSizeSymbol: anObject	paperSizeSymbol := anObject</body><body package="GHWindowsPrinterSettings">selectedPrinter	^selectedPrinter</body><body package="GHWindowsPrinterSettings">selectedPrinter: anObject	selectedPrinter := anObject</body><body package="GHWindowsPrinterSettings">sorted	^sorted</body><body package="GHWindowsPrinterSettings">sorted: anObject	sorted := anObject</body><body package="GHWindowsPrinterSettings">sortedPaperNames	"return all names for paper sizes in an ordered way"	^self paperNamesAndDefines keys sorted</body><body package="GHWindowsPrinterSettings">sortedPaperSizes	"return the symbols used for the paper sizes in the same order as their corresponding paper names"	^self sortedPaperNames		collect: [:each | self paperNamesAndDefines at: each]</body></methods><methods><class-id>OS.Win32PrinterSettings</class-id> <category>initialize-release</category><body package="GHWindowsPrinterSettings">initialize	super initialize.	colorMode := #color.	hasCustomSize := false.	numberOfCopies := 1.	orientation := #portrait.	pageHeight := 297.	pageWidth := 210.	paperSizeSymbol := #DMPAPER_A4.	selectedPrinter := ''.	sorted := true.	^self</body></methods><methods><class-id>OS.Win32PrinterSettings class</class-id> <category>instance creation</category><body package="GHWindowsPrinterSettings">default	default isNil ifTrue: [self initialize].	^default</body><body package="GHWindowsPrinterSettings">new	"Answer a newly created and initialized instance."	^super new initialize</body></methods><methods><class-id>OS.Win32PrinterSettings class</class-id> <category>class initialization</category><body package="GHWindowsPrinterSettings">initialize	default := self new</body></methods><methods><class-id>OS.SettingsAspectMapper</class-id> <category>accessing</category><body package="GHWindowsPrinterSettings">aspectMap	| dict |	dict := Dictionary new.	self aspectMapData do: [:each | dict at: each first put: each].	^dict</body><body package="GHWindowsPrinterSettings">aspectMapData	^(OrderedCollection new)		add: #(#colorMode #dmColor #DM_COLOR);		add: #(#numberOfCopies #dmCopies #DM_COPIES);		add: #(#orientation #dmOrientation #DM_ORIENTATION);		add: #(#pageHeight #dmPaperLength #DM_PAPERLENGTH);		add: #(#pageWidth #dmPaperWidth #DM_PAPERWIDTH);		add: #(#paperSizeSymbol #dmPaperSize #DM_PAPERSIZE);		add: #(#sorted #dmCollate #DM_COLLATE);		yourself</body><body package="GHWindowsPrinterSettings">devMode	^devMode</body><body package="GHWindowsPrinterSettings">devMode: anObject	devMode := anObject</body><body package="GHWindowsPrinterSettings">hasMemberForAspect: aSymbol	| fields |	fields := devMode memberAt: #dmFields.	^fields allMask: (self maskForAspect: aSymbol)</body><body package="GHWindowsPrinterSettings">interface	^interface</body><body package="GHWindowsPrinterSettings">interface: anObject	interface := anObject</body><body package="GHWindowsPrinterSettings">maskForAspect: aSymbol	| symbol |	symbol := (self aspectMap at: aSymbol ifAbsent:[^0]) at: self maskIndex.	^interface perform: symbol.</body><body package="GHWindowsPrinterSettings">maskIndex	^3</body><body package="GHWindowsPrinterSettings">memberForAspect: aSymbol	| symbol |	symbol := self memberSymbolForAspect: aSymbol.	^devMode memberAt: symbol</body><body package="GHWindowsPrinterSettings">memberForAspect: aSymbol put: aValue	| symbol |	symbol := self memberSymbolForAspect: aSymbol.	^devMode memberAt: symbol put: aValue</body><body package="GHWindowsPrinterSettings">memberIndex	^2</body><body package="GHWindowsPrinterSettings">memberSymbolForAspect: aSymbol	^(self aspectMap at: aSymbol) at: self memberIndex</body><body package="GHWindowsPrinterSettings">settingsStorage	^settingsStorage</body><body package="GHWindowsPrinterSettings">settingsStorage: anObject	settingsStorage := anObject</body></methods><methods><class-id>OS.SettingsAspectMapper</class-id> <category>public</category><body package="GHWindowsPrinterSettings">readAspectFromDevMode: aSymbol	self readAspectFromDevMode: aSymbol using: [:each | each]</body><body package="GHWindowsPrinterSettings">readAspectFromDevMode: aSymbol using: aBlock	| member |	(self hasMemberForAspect: aSymbol) ifFalse: [^self].	member := self memberForAspect: aSymbol.	settingsStorage perform: (aSymbol , ':') asSymbol		with: (aBlock value: member)</body><body package="GHWindowsPrinterSettings">writeAspectToDevMode: aSymbol	self writeAspectToDevMode: aSymbol using: [:each | each]</body><body package="GHWindowsPrinterSettings">writeAspectToDevMode: aSymbol using: aBlock	| newMember mask fields |	newMember := settingsStorage perform: aSymbol.	self memberForAspect: aSymbol put: (aBlock value: newMember).	mask := self maskForAspect: aSymbol.	fields := devMode memberAt: #dmFields.	devMode memberAt: #dmFields put: (fields bitOr: mask)</body></methods><methods><class-id>OS.SettingsAspectMapper</class-id> <category>initialize-release</category><body package="GHWindowsPrinterSettings">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Replace this comment with the appropriate initialization code *** "	^self</body></methods><methods><class-id>OS.SettingsAspectMapper class</class-id> <category>instance creation</category><body package="GHWindowsPrinterSettings">new	"Answer a newly created and initialized instance."	^super new initialize</body></methods><methods><class-id>OS.Win32PrinterInterface</class-id> <category>structs</category><body package="GHWindowsPrinterSettings">_devicemodeW	&lt;C: struct _devicemodeW {			TCHAR dmDeviceName[32];			WORD dmSpecVersion, dmDriverVersion, dmSize, dmDriverExtra;			DWORD dmFields;			short dmOrientation, dmPaperSize, dmPaperLength, dmPaperWidth, dmScale, dmCopies, dmDefaultSource, dmPrintQuality, dmColor, dmDuplex, dmYResolution, dmTTOption, dmCollate;			BYTE dmFormName[32];			WORD dmLogPixels;			DWORD dmBitsPerPel, dmPelsWidth, dmPelsHeight, dmDisplayFlags, dmDisplayFrequency, dmICMMethod, dmICMIntent, dmMediaType, dmDitherType, dmReserved1, dmReserved2, dmPanningWidth, dmPanningHeight;		}&gt;</body><body package="GHWindowsPrinterSettings">_PRINTER_INFO_1	&lt;C: struct _PRINTER_INFO_1 {			DWORD Flags;			LPTSTR pDescription, pName, pComment;		}&gt;</body></methods><methods><class-id>OS.Win32PrinterInterface</class-id> <category>private</category><body package="GHWindowsPrinterSettings">copyAsCString: aName toPointer: aDevNamePtr offset: startAddr	"copy the name as CString to the pointer. Append a zero at the end so that the string is really ended.	That's basically the same as String&gt;&gt;copyToHeap:encoding: except that we already have the space allocated"	| aPointer size bytes null |	bytes := aName asByteArrayEncoding: #utf16.	size := bytes size.	null := (ByteString new: 1) asByteArrayEncoding: #utf16.	aPointer := aDevNamePtr.	aPointer		copyAt: startAddr		from: bytes		size: size		startingAt: 1.	aPointer		copyAt: startAddr + size		from: null		size: null size		startingAt: 1.</body></methods><methods><class-id>OS.Win32PrinterInterface</class-id> <category>types</category><body package="GHWindowsPrinterSettings">DEVMODE	&lt;C: typedef void * DEVMODE&gt;</body></methods><methods><class-id>OS.Win32PrinterInterface</class-id> <category>private</category><body package="GHWindowsPrinterSettings">devModeStructurePtrWithPrefs: settingsStorage	"stores the settings made into a DEVMODE structure for the printDialog and returns a pointer to it"	"RequestingPrinter example2"	"alloc enough movable memory"	| devMode aGlobal settingsMapper |	aGlobal := self GlobalAlloc: self GMEM_MOVEABLE size: self DEVMODEW sizeof.	"cast the memory and lock the GLOBAL"	self lockGlobal: aGlobal		while: 			[:lockedGlobal |			devMode := self DEVMODEWPTR cast: lockedGlobal.			devMode memberAt: #dmSize put: self DEVMODEW sizeof.			devMode memberAt: #dmFields put: 0.			settingsMapper := (SettingsAspectMapper new)						interface: self;						devMode: devMode;						settingsStorage: settingsStorage;						yourself.			settingsMapper writeAspectToDevMode: #orientation				using: 					[:value |					value = #portrait						ifTrue: [self DMORIENT_PORTRAIT]						ifFalse: [self DMORIENT_LANDSCAPE]].			settingsStorage hasCustomSize				ifTrue: 					[settingsMapper writeAspectToDevMode: #pageWidth.					settingsMapper writeAspectToDevMode: #pageHeight]				ifFalse: 					[settingsMapper writeAspectToDevMode: #paperSizeSymbol						using: [:value | self perform: value]].			settingsMapper writeAspectToDevMode: #colorMode				using: 					[:value |					value = #color						ifTrue: [self DMCOLOR_COLOR]						ifFalse: [self DMCOLOR_MONOCHROME]].			settingsMapper writeAspectToDevMode: #sorted				using: [:value | value ifTrue: [self DMCOLLATE_TRUE] ifFalse: [self DMCOLLATE_FALSE]].			settingsMapper writeAspectToDevMode: #numberOfCopies].	^aGlobal</body></methods><methods><class-id>OS.Win32PrinterInterface</class-id> <category>types</category><body package="GHWindowsPrinterSettings">DEVMODEWPTR	&lt;C: typedef DEVMODEW* DEVMODEAPTR&gt;</body><body package="GHWindowsPrinterSettings">DEVNAMES	&lt;C: typedef  struct tagDEVNAMES DEVNAMES&gt;</body><body package="GHWindowsPrinterSettings">DEVNAMESPTR	&lt;C: typedef DEVNAMES* DEVNAMESPTR&gt;</body></methods><methods><class-id>OS.Win32PrinterInterface</class-id> <category>private</category><body package="GHWindowsPrinterSettings">devNamesPtrWithName: driverName	"returns a HGLOBAL to a DEVNAME structure and sets the preselected printername into DEVNAMES"	| aDevNamePtr aGlobal |	"alloc enough movable memory"	aGlobal := self GlobalAlloc: self GMEM_MOVEABLE				size: self DEVNAMES sizeof + (2 * (self sizeOfCString: driverName)).	"cast the memory and lock the GLOBAL"	self lockGlobal: aGlobal		while: 			[:lockedGlobal |			aDevNamePtr := self DEVNAMESPTR cast: lockedGlobal.			"set the member that is not used to 0 and store the pointer to the printer-name into #wDriverOffset and #wDeviceOffset. 	Don't forget that strings are zero terminated!"			aDevNamePtr memberAt: #wDriverOffset put: self DEVNAMES sizeof / self TCHAR sizeof.			aDevNamePtr memberAt: #wDeviceOffset				put: (self DEVNAMES sizeof + (self sizeOfCString: driverName)) / self TCHAR sizeof.			aDevNamePtr memberAt: #wOutputOffset put: 0.			aDevNamePtr memberAt: #wDefault put: 0.			"the name of the Printer is stored directly behind the struct so the position is Devnames sizeof.	copy the name twice, one for the device name and one for the driver name."			self				copyAsCString: driverName				toPointer: aDevNamePtr				offset: self DEVNAMES sizeof.			self				copyAsCString: driverName				toPointer: aDevNamePtr				offset: self DEVNAMES sizeof + (self sizeOfCString: driverName)].	^aGlobal</body></methods><methods><class-id>OS.Win32PrinterInterface</class-id> <category>defines</category><body package="GHWindowsPrinterSettings">DM_COLLATE	&lt;C: #define DM_COLLATE          0x00008000L	&gt;</body><body package="GHWindowsPrinterSettings">DM_COLOR	&lt;C: #define DM_COLOR            0x00000800L&gt;</body><body package="GHWindowsPrinterSettings">DM_COPIES	&lt;C: #define DM_COPIES           0x00000100L&gt;</body><body package="GHWindowsPrinterSettings">DM_ORIENTATION	&lt;C: #define DM_ORIENTATION      0x00000001L	&gt;</body><body package="GHWindowsPrinterSettings">DM_PAPERLENGTH	&lt;C: #define DM_PAPERLENGTH      0x00000004L	&gt;</body><body package="GHWindowsPrinterSettings">DM_PAPERSIZE	&lt;C: #define DM_PAPERSIZE        0x00000002L	&gt;</body><body package="GHWindowsPrinterSettings">DM_PAPERWIDTH	&lt;C: #define DM_PAPERWIDTH       0x00000008L	&gt;</body><body package="GHWindowsPrinterSettings">DMCOLLATE_FALSE	&lt;C: #define DMCOLLATE_FALSE  0	&gt;</body><body package="GHWindowsPrinterSettings">DMCOLLATE_TRUE	&lt;C: #define DMCOLLATE_TRUE   1	&gt;</body><body package="GHWindowsPrinterSettings">DMCOLOR_COLOR	&lt;C: #define DMCOLOR_COLOR       2  	&gt;</body><body package="GHWindowsPrinterSettings">DMCOLOR_MONOCHROME	&lt;C: #define DMCOLOR_MONOCHROME  1	&gt;</body><body package="GHWindowsPrinterSettings">DMORIENT_LANDSCAPE	&lt;C: #define DMORIENT_LANDSCAPE  2	&gt;</body><body package="GHWindowsPrinterSettings">DMORIENT_PORTRAIT	&lt;C: #define DMORIENT_PORTRAIT   1	&gt;</body></methods><methods><class-id>OS.Win32PrinterInterface</class-id> <category>printDefines</category><body package="GHWindowsPrinterSettings">DMPAPER_10X11 &lt;C: #define DMPAPER_10X11               45  /* 10 x 11 in                         */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_10X14 &lt;C: #define DMPAPER_10X14               16  /* 10x14 in                           */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_11X17 &lt;C: #define DMPAPER_11X17               17  /* 11x17 in                           */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_12X11 &lt;C: #define DMPAPER_12X11               90  /* 12 x 11 in                      */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_15X11 &lt;C: #define DMPAPER_15X11               46  /* 15 x 11 in                         */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_9X11 &lt;C: #define DMPAPER_9X11                44  /* 9 x 11 in                          */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_A_PLUS &lt;C: #define DMPAPER_A_PLUS              57  /* SuperA/SuperA/A4 227 x 356 mm      */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_A2 &lt;C: #define DMPAPER_A2                  66  /* A2 420 x 594 mm                    */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_A3 &lt;C: #define DMPAPER_A3                   8  /* A3 297 x 420 mm                    */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_A3_EXTRA &lt;C: #define DMPAPER_A3_EXTRA            63  /* A3 Extra 322 x 445 mm              */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_A3_EXTRA_TRANSVERSE &lt;C: #define DMPAPER_A3_EXTRA_TRANSVERSE 68  /* A3 Extra Transverse 322 x 445 mm   */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_A3_ROTATED &lt;C: #define DMPAPER_A3_ROTATED          76  /* A3 Rotated 420 x 297 mm         */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_A3_TRANSVERSE &lt;C: #define DMPAPER_A3_TRANSVERSE       67  /* A3 Transverse 297 x 420 mm         */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_A4 &lt;C: #define DMPAPER_A4                   9  /* A4 210 x 297 mm                    */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_A4_EXTRA &lt;C: #define DMPAPER_A4_EXTRA            53  /* A4 Extra 9.27 x 12.69 in           */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_A4_PLUS &lt;C: #define DMPAPER_A4_PLUS             60  /* A4 Plus 210 x 330 mm               */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_A4_ROTATED &lt;C: #define DMPAPER_A4_ROTATED          77  /* A4 Rotated 297 x 210 mm         */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_A4_TRANSVERSE &lt;C: #define DMPAPER_A4_TRANSVERSE       55  /* A4 Transverse 210 x 297 mm         */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_A4SMALL &lt;C: #define DMPAPER_A4SMALL             10  /* A4 Small 210 x 297 mm              */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_A5 &lt;C: #define DMPAPER_A5                  11  /* A5 148 x 210 mm                    */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_A5_EXTRA &lt;C: #define DMPAPER_A5_EXTRA            64  /* A5 Extra 174 x 235 mm              */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_A5_ROTATED &lt;C: #define DMPAPER_A5_ROTATED          78  /* A5 Rotated 210 x 148 mm         */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_A5_TRANSVERSE &lt;C: #define DMPAPER_A5_TRANSVERSE       61  /* A5 Transverse 148 x 210 mm         */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_A6 &lt;C: #define DMPAPER_A6                  70  /* A6 105 x 148 mm                 */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_A6_ROTATED &lt;C: #define DMPAPER_A6_ROTATED          83  /* A6 Rotated 148 x 105 mm         */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_B_PLUS &lt;C: #define DMPAPER_B_PLUS              58  /* SuperB/SuperB/A3 305 x 487 mm      */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_B4 &lt;C: #define DMPAPER_B4                  12  /* B4 (JIS) 250 x 354                 */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_B4_JIS_ROTATED &lt;C: #define DMPAPER_B4_JIS_ROTATED      79  /* B4 (JIS) Rotated 364 x 257 mm   */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_B5 &lt;C: #define DMPAPER_B5                  13  /* B5 (JIS) 182 x 257 mm              */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_B5_EXTRA &lt;C: #define DMPAPER_B5_EXTRA            65  /* B5 (ISO) Extra 201 x 276 mm        */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_B5_JIS_ROTATED &lt;C: #define DMPAPER_B5_JIS_ROTATED      80  /* B5 (JIS) Rotated 257 x 182 mm   */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_B5_TRANSVERSE &lt;C: #define DMPAPER_B5_TRANSVERSE       62  /* B5 (JIS) Transverse 182 x 257 mm   */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_B6_JIS &lt;C: #define DMPAPER_B6_JIS              88  /* B6 (JIS) 128 x 182 mm           */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_B6_JIS_ROTATED &lt;C: #define DMPAPER_B6_JIS_ROTATED      89  /* B6 (JIS) Rotated 182 x 128 mm   */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_CSHEET &lt;C: #define DMPAPER_CSHEET              24  /* C size sheet                       */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_DBL_JAPANESE_POSTCARD &lt;C: #define DMPAPER_DBL_JAPANESE_POSTCARD 69 /* Japanese Double Postcard 200 x 148 mm */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_DBL_JAPANESE_POSTCARD_ROTATED &lt;C: #define DMPAPER_DBL_JAPANESE_POSTCARD_ROTATED 82 /* Double Japanese Postcard Rotated 148 x 200 mm */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_DSHEET &lt;C: #define DMPAPER_DSHEET              25  /* D size sheet                       */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_ENV_10 &lt;C: #define DMPAPER_ENV_10              20  /* Envelope #10 4 1/8 x 9 1/2         */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_ENV_11 &lt;C: #define DMPAPER_ENV_11              21  /* Envelope #11 4 1/2 x 10 3/8        */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_ENV_12 &lt;C: #define DMPAPER_ENV_12              22  /* Envelope #12 4 \276 x 11           */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_ENV_14 &lt;C: #define DMPAPER_ENV_14              23  /* Envelope #14 5 x 11 1/2            */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_ENV_9 &lt;C: #define DMPAPER_ENV_9               19  /* Envelope #9 3 7/8 x 8 7/8          */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_ENV_B4 &lt;C: #define DMPAPER_ENV_B4              33  /* Envelope B4  250 x 353 mm          */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_ENV_B5 &lt;C: #define DMPAPER_ENV_B5              34  /* Envelope B5  176 x 250 mm          */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_ENV_B6 &lt;C: #define DMPAPER_ENV_B6              35  /* Envelope B6  176 x 125 mm          */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_ENV_C3 &lt;C: #define DMPAPER_ENV_C3              29  /* Envelope C3  324 x 458 mm          */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_ENV_C4 &lt;C: #define DMPAPER_ENV_C4              30  /* Envelope C4  229 x 324 mm          */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_ENV_C5 &lt;C: #define DMPAPER_ENV_C5              28  /* Envelope C5 162 x 229 mm           */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_ENV_C6 &lt;C: #define DMPAPER_ENV_C6              31  /* Envelope C6  114 x 162 mm          */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_ENV_C65 &lt;C: #define DMPAPER_ENV_C65             32  /* Envelope C65 114 x 229 mm          */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_ENV_DL &lt;C: #define DMPAPER_ENV_DL              27  /* Envelope DL 110 x 220mm            */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_ENV_INVITE &lt;C: #define DMPAPER_ENV_INVITE          47  /* Envelope Invite 220 x 220 mm       */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_ENV_ITALY &lt;C: #define DMPAPER_ENV_ITALY           36  /* Envelope 110 x 230 mm              */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_ENV_MONARCH &lt;C: #define DMPAPER_ENV_MONARCH         37  /* Envelope Monarch 3.875 x 7.5 in    */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_ENV_PERSONAL &lt;C: #define DMPAPER_ENV_PERSONAL        38  /* 6 3/4 Envelope 3 5/8 x 6 1/2 in    */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_ESHEET &lt;C: #define DMPAPER_ESHEET              26  /* E size sheet                       */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_EXECUTIVE &lt;C: #define DMPAPER_EXECUTIVE            7  /* Executive 7 1/4 x 10 1/2 in        */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_FANFOLD_LGL_GERMAN &lt;C: #define DMPAPER_FANFOLD_LGL_GERMAN  41  /* German Legal Fanfold 8 1/2 x 13 in */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_FANFOLD_STD_GERMAN &lt;C: #define DMPAPER_FANFOLD_STD_GERMAN  40  /* German Std Fanfold 8 1/2 x 12 in   */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_FANFOLD_US &lt;C: #define DMPAPER_FANFOLD_US          39  /* US Std Fanfold 14 7/8 x 11 in      */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_FOLIO &lt;C: #define DMPAPER_FOLIO               14  /* Folio 8 1/2 x 13 in                */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_ISO_B4 &lt;C: #define DMPAPER_ISO_B4              42  /* B4 (ISO) 250 x 353 mm              */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_JAPANESE_POSTCARD &lt;C: #define DMPAPER_JAPANESE_POSTCARD   43  /* Japanese Postcard 100 x 148 mm     */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_JAPANESE_POSTCARD_ROTATED &lt;C: #define DMPAPER_JAPANESE_POSTCARD_ROTATED 81 /* Japanese Postcard Rotated 148 x 100 mm */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_JENV_CHOU3 &lt;C: #define DMPAPER_JENV_CHOU3          73  /* Japanese Envelope Chou #3       */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_JENV_CHOU3_ROTATED &lt;C: #define DMPAPER_JENV_CHOU3_ROTATED  86  /* Japanese Envelope Chou #3 Rotated */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_JENV_CHOU4 &lt;C: #define DMPAPER_JENV_CHOU4          74  /* Japanese Envelope Chou #4       */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_JENV_CHOU4_ROTATED &lt;C: #define DMPAPER_JENV_CHOU4_ROTATED  87  /* Japanese Envelope Chou #4 Rotated */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_JENV_KAKU2 &lt;C: #define DMPAPER_JENV_KAKU2          71  /* Japanese Envelope Kaku #2       */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_JENV_KAKU2_ROTATED &lt;C: #define DMPAPER_JENV_KAKU2_ROTATED  84  /* Japanese Envelope Kaku #2 Rotated */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_JENV_KAKU3 &lt;C: #define DMPAPER_JENV_KAKU3          72  /* Japanese Envelope Kaku #3       */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_JENV_KAKU3_ROTATED &lt;C: #define DMPAPER_JENV_KAKU3_ROTATED  85  /* Japanese Envelope Kaku #3 Rotated */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_JENV_YOU4 &lt;C: #define DMPAPER_JENV_YOU4           91  /* Japanese Envelope You #4        */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_JENV_YOU4_ROTATED &lt;C: #define DMPAPER_JENV_YOU4_ROTATED   92  /* Japanese Envelope You #4 Rotated*/&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_LEDGER &lt;C: #define DMPAPER_LEDGER               4  /* Ledger 17 x 11 in                  */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_LEGAL &lt;C: #define DMPAPER_LEGAL                5  /* Legal 8 1/2 x 14 in                */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_LEGAL_EXTRA &lt;C: #define DMPAPER_LEGAL_EXTRA         51  /* Legal Extra 9 \275 x 15 in         */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_LETTER &lt;C: #define DMPAPER_LETTER               1  /* Letter 8 1/2 x 11 in               */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_LETTER_EXTRA &lt;C: #define DMPAPER_LETTER_EXTRA        50  /* Letter Extra 9 \275 x 12 in        */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_LETTER_EXTRA_TRANSVERSE &lt;C: #define DMPAPER_LETTER_EXTRA_TRANSVERSE 56 /* Letter Extra Transverse 9\275 x 12 in */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_LETTER_PLUS &lt;C: #define DMPAPER_LETTER_PLUS         59  /* Letter Plus 8.5 x 12.69 in         */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_LETTER_ROTATED &lt;C: #define DMPAPER_LETTER_ROTATED      75  /* Letter Rotated 11 x 8 1/2 11 in */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_LETTER_TRANSVERSE &lt;C: #define DMPAPER_LETTER_TRANSVERSE   54  /* Letter Transverse 8 \275 x 11 in   */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_LETTERSMALL &lt;C: #define DMPAPER_LETTERSMALL          2  /* Letter Small 8 1/2 x 11 in         */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_NOTE &lt;C: #define DMPAPER_NOTE                18  /* Note 8 1/2 x 11 in                 */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_P16K &lt;C: #define DMPAPER_P16K                93  /* PRC 16K 146 x 215 mm            */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_P16K_ROTATED &lt;C: #define DMPAPER_P16K_ROTATED        106 /* PRC 16K Rotated                 */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_P32K &lt;C: #define DMPAPER_P32K                94  /* PRC 32K 97 x 151 mm             */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_P32K_ROTATED &lt;C: #define DMPAPER_P32K_ROTATED        107 /* PRC 32K Rotated                 */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_P32KBIG &lt;C: #define DMPAPER_P32KBIG             95  /* PRC 32K(Big) 97 x 151 mm        */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_P32KBIG_ROTATED &lt;C: #define DMPAPER_P32KBIG_ROTATED     108 /* PRC 32K(Big) Rotated            */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_PENV_1 &lt;C: #define DMPAPER_PENV_1              96  /* PRC Envelope #1 102 x 165 mm    */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_PENV_1_ROTATED &lt;C: #define DMPAPER_PENV_1_ROTATED      109 /* PRC Envelope #1 Rotated 165 x 102 mm */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_PENV_10 &lt;C: #define DMPAPER_PENV_10             105 /* PRC Envelope #10 324 x 458 mm   */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_PENV_10_ROTATED &lt;C: #define DMPAPER_PENV_10_ROTATED     118 /* PRC Envelope #10 Rotated 458 x 324 mm */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_PENV_2 &lt;C: #define DMPAPER_PENV_2              97  /* PRC Envelope #2 102 x 176 mm    */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_PENV_2_ROTATED &lt;C: #define DMPAPER_PENV_2_ROTATED      110 /* PRC Envelope #2 Rotated 176 x 102 mm */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_PENV_3 &lt;C: #define DMPAPER_PENV_3              98  /* PRC Envelope #3 125 x 176 mm    */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_PENV_3_ROTATED &lt;C: #define DMPAPER_PENV_3_ROTATED      111 /* PRC Envelope #3 Rotated 176 x 125 mm */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_PENV_4 &lt;C: #define DMPAPER_PENV_4              99  /* PRC Envelope #4 110 x 208 mm    */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_PENV_4_ROTATED &lt;C: #define DMPAPER_PENV_4_ROTATED      112 /* PRC Envelope #4 Rotated 208 x 110 mm */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_PENV_5 &lt;C: #define DMPAPER_PENV_5              100 /* PRC Envelope #5 110 x 220 mm    */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_PENV_5_ROTATED &lt;C: #define DMPAPER_PENV_5_ROTATED      113 /* PRC Envelope #5 Rotated 220 x 110 mm */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_PENV_6 &lt;C: #define DMPAPER_PENV_6              101 /* PRC Envelope #6 120 x 230 mm    */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_PENV_6_ROTATED &lt;C: #define DMPAPER_PENV_6_ROTATED      114 /* PRC Envelope #6 Rotated 230 x 120 mm */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_PENV_7 &lt;C: #define DMPAPER_PENV_7              102 /* PRC Envelope #7 160 x 230 mm    */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_PENV_7_ROTATED &lt;C: #define DMPAPER_PENV_7_ROTATED      115 /* PRC Envelope #7 Rotated 230 x 160 mm */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_PENV_8 &lt;C: #define DMPAPER_PENV_8              103 /* PRC Envelope #8 120 x 309 mm    */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_PENV_8_ROTATED &lt;C: #define DMPAPER_PENV_8_ROTATED      116 /* PRC Envelope #8 Rotated 309 x 120 mm */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_PENV_9 &lt;C: #define DMPAPER_PENV_9              104 /* PRC Envelope #9 229 x 324 mm    */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_PENV_9_ROTATED &lt;C: #define DMPAPER_PENV_9_ROTATED      117 /* PRC Envelope #9 Rotated 324 x 229 mm */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_QUARTO &lt;C: #define DMPAPER_QUARTO              15  /* Quarto 215 x 275 mm                */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_RESERVED_48 &lt;C: #define DMPAPER_RESERVED_48         48  /* RESERVED--DO NOT USE               */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_RESERVED_49 &lt;C: #define DMPAPER_RESERVED_49         49  /* RESERVED--DO NOT USE               */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_STATEMENT &lt;C: #define DMPAPER_STATEMENT            6  /* Statement 5 1/2 x 8 1/2 in         */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_TABLOID &lt;C: #define DMPAPER_TABLOID              3  /* Tabloid 11 x 17 in                 */&gt;</body><body package="GHWindowsPrinterSettings">DMPAPER_TABLOID_EXTRA &lt;C: #define DMPAPER_TABLOID_EXTRA       52  /* Tabloid Extra 11.69 x 18 in        */&gt;</body></methods><methods><class-id>OS.Win32PrinterInterface</class-id> <category>private</category><body package="GHWindowsPrinterSettings">extractUserSettingsFromDialog: printDlgPtr intoSettings: anObject	| printerName |	self storeSettingsFromDevMode: (printDlgPtr memberAt: #hDevMode)		inSettings: anObject.	printerName := self				printerNameFromDevNamesPtr: (printDlgPtr memberAt: #hDevNames).	anObject selectedPrinter: printerName.	"We do not care about hDevNames so release it"	self GlobalFree: (printDlgPtr memberAt: #hDevNames)</body></methods><methods><class-id>OS.Win32PrinterInterface</class-id> <category>defines</category><body package="GHWindowsPrinterSettings">GMEM_MOVEABLE	&lt;C: #define GMEM_MOVEABLE 0x0002&gt;</body></methods><methods><class-id>OS.Win32PrinterInterface</class-id> <category>private</category><body package="GHWindowsPrinterSettings">inDevmode: aDevMode useMember: memberSymbol ifFieldIsSet: maskSymbol toStoreAspect: storageSymbol in: settingsStorage using: aBlock	| fields |	fields := aDevMode memberAt: #dmFields.	(fields allMask: (self perform: maskSymbol))		ifTrue: 			[settingsStorage perform: (storageSymbol , ':') asSymbol				with: (aBlock value: (aDevMode memberAt: memberSymbol))].	^fields</body><body package="GHWindowsPrinterSettings">initPrintDlg: aPrintDlg withSettingsFrom: printerSettings	"overridden to use a DevMode structure as parameter, so that the previous user selection is used again"	| flags |	flags := self PD_ALLPAGES				+ (self PD_COLLATE + self PD_RETURNDC + self PD_NOSELECTION						+ self PD_NOPAGENUMS + self PD_HIDEPRINTTOFILE).	aPrintDlg memberAt: #lStructSize put: aPrintDlg type sizeof.	aPrintDlg memberAt: #hwndOwner put: nil.	aPrintDlg memberAt: #hDevMode put: (self devModeStructurePtrWithPrefs: printerSettings).	aPrintDlg memberAt: #hDevNames put: (self devNamesPtrWithName: printerSettings selectedPrinter).	aPrintDlg memberAt: #hDC put: nil.	aPrintDlg memberAt: #Flags put: flags.	aPrintDlg memberAt: #nFromPage put: 0.	aPrintDlg memberAt: #nToPage put: 0.	aPrintDlg memberAt: #nMinPage put: 0.	aPrintDlg memberAt: #nMaxPage put: 0.	aPrintDlg memberAt: #nCopies put: 1.	aPrintDlg memberAt: #hInstance put: nil.	aPrintDlg memberAt: #lCustData put: 0.	aPrintDlg memberAt: #lpfnPrintHook put: nil.	aPrintDlg memberAt: #lpfnSetupHook put: nil.	aPrintDlg memberAt: #lpPrintTemplateName put: nil.	aPrintDlg memberAt: #lpSetupTemplateName put: nil.	aPrintDlg memberAt: #hPrintTemplate put: nil.	aPrintDlg memberAt: #hSetupTemplate put: nil.	^aPrintDlg</body><body package="GHWindowsPrinterSettings">listOfPrinterNames	"returns a list of all the printers localy connected to the PC"	| bufSize numPrinters printerListPtr printerList printerListPos |	bufSize := self DWORD gcMalloc.	numPrinters := self DWORD gcMalloc.	"first call enumPrinters to get the amount of memory needed"	self		EnumPrinters: self PRINTER_ENUM_LOCAL		with: nil		with: 1		with: nil		with: 0		with: bufSize		with: numPrinters.	"Level 1 information"	"set buffer size to 0 to get the correct size into bufSize"	printerListPtr := self BYTE gcMalloc: bufSize contents.	"then call enumPrinters to get the Printers in a list"	self		EnumPrinters: self PRINTER_ENUM_LOCAL		with: nil		with: 1		with: printerListPtr		with: bufSize contents		with: bufSize		with: numPrinters.	"Level 1 information"	"set the correct bufSize"	printerList := OrderedCollection new.	"now read the printers from the list"	0 to: numPrinters contents - 1		do: 			[:i |			printerListPos := ((self PRINTER_INFO_1PTR cast: printerListPtr) + i)						contents.			printerList				add: (printerListPos memberAt: #pName) copyUnicodeStringFromHeap asSymbol].	^printerList</body><body package="GHWindowsPrinterSettings">lockGlobal: aGlobal while: aBlock	[aBlock value: (self GlobalLock: aGlobal)]		ensure: [self GlobalUnlock: aGlobal]</body></methods><methods><class-id>OS.Win32PrinterInterface</class-id> <category>defines</category><body package="GHWindowsPrinterSettings">PRINTER_ENUM_LOCAL	&lt;C: #define PRINTER_ENUM_LOCAL       0x00000002&gt;</body><body package="GHWindowsPrinterSettings">PRINTER_ENUM_NAME	&lt;C: #define PRINTER_ENUM_NAME        0x00000008&gt;</body></methods><methods><class-id>OS.Win32PrinterInterface</class-id> <category>types</category><body package="GHWindowsPrinterSettings">PRINTER_INFO_1&lt;C: typedef struct _PRINTER_INFO_1 {   DWORD  Flags;   LPTSTR pDescription;   LPTSTR pName;   LPTSTR pComment; } PRINTER_INFO_1 &gt;</body><body package="GHWindowsPrinterSettings">PRINTER_INFO_1PTR&lt;C: typedef PRINTER_INFO_1* PRINTER_INFO_1PTR &gt;</body></methods><methods><class-id>OS.Win32PrinterInterface</class-id> <category>private</category><body package="GHWindowsPrinterSettings">printerNameFromDevNamesPtr: aGlobal	| driverName aDevName aDevNamePtr basePointer nameString |	self lockGlobal: aGlobal		while: 			[:lockedGlobal |			aDevNamePtr := self DEVNAMESPTR cast: lockedGlobal.			aDevName := aDevNamePtr contents.			"only the name of the driver is needed to be stored, as this is the only data required for preselecting the printer"			basePointer := CPointer newDatum: aDevNamePtr asInteger						ofType: self TCHAR pointerType.			driverName := basePointer + (aDevName memberAt: #wDeviceOffset).			nameString := driverName copyCStringFromHeap: #UTF16.			^nameString]</body><body package="GHWindowsPrinterSettings">privateOpen	"Overridden to extract the user's selection after the dialog was accepted"	| printDlg result printDlgPtr |	ObjectMemory is64Bit		ifTrue: 			[self PRINTDLGW typeDo: CStructureLayout defaultLayout.			self DEVMODEW typeDo: CStructureLayout defaultLayout]		ifFalse: 			[self PRINTDLGW typeDo: CStructureLayout dosLayout.			self DEVMODEW typeDo: CStructureLayout dosLayout].	printDlg := self PRINTDLGW new.	printDlg := self initPrintDlg: printDlg				withSettingsFrom: Win32PrinterSettings default.	printDlgPtr := printDlg gcCopyToHeap.	result := self PrintDlgW: printDlgPtr.	"A result of 0 can mean the the user canceled the request, or that maybe printing is not possible"	result = 0 ifTrue: [^nil].	self extractUserSettingsFromDialog: printDlgPtr intoSettings: Win32PrinterSettings default.	^printDlgPtr</body></methods><methods><class-id>OS.Win32PrinterInterface</class-id> <category>types</category><body package="GHWindowsPrinterSettings">SIZE_T	&lt;C: typedef void * SIZE_T&gt;</body></methods><methods><class-id>OS.Win32PrinterInterface</class-id> <category>private</category><body package="GHWindowsPrinterSettings">sizeOfCString: driverName	^(driverName , (ByteString new: 1) asByteArrayEncoding: #utf16) size</body><body package="GHWindowsPrinterSettings">storeSettingsFromDevMode: aGlobal inSettings: settingsStorage	"store the settings the user made in the print dialog, so that we can use them in the settings window and in the next print dialog"	| aDevMode settingsMapper |	self lockGlobal: aGlobal		while: 			[:lockedGlobal |			aDevMode := self DEVMODEWPTR cast: lockedGlobal.			settingsMapper := (SettingsAspectMapper new)						interface: self;						devMode: aDevMode;						settingsStorage: settingsStorage;						yourself.			settingsMapper readAspectFromDevMode: #orientation				using: 					[:member |					member = self DMORIENT_PORTRAIT ifTrue: [#portrait] ifFalse: [#landscape]].			settingsMapper readAspectFromDevMode: #sorted				using: [:member | member = self DMCOLLATE_TRUE].			settingsMapper readAspectFromDevMode: #colorMode				using: [:member | member = self DMCOLOR_COLOR ifTrue: [#color] ifFalse: [#monochrome]].			settingsMapper readAspectFromDevMode: #numberOfCopies.			(settingsMapper hasMemberForAspect: #paperSizeSymbol)				ifTrue: 					[settingsStorage hasCustomSize: false.					settingsMapper readAspectFromDevMode: #paperSizeSymbol						using: 							[:member |							settingsStorage sortedPaperSizes								detect: [:each | (self perform: each) = member]								ifNone: [#DMPAPER_A4]]]				ifFalse: 					[settingsStorage hasCustomSize: true.					settingsMapper readAspectFromDevMode: #pageHeight.					settingsMapper readAspectFromDevMode: #pageWidth]]</body></methods><methods><class-id>OS.Win32PrinterInterface</class-id> <category>structs</category><body package="GHWindowsPrinterSettings">tagDEVNAMES	&lt;C: struct tagDEVNAMES {			WORD wDriverOffset, wDeviceOffset, wOutputOffset, wDefault;		}&gt;</body></methods><methods><class-id>Tools.VisualWorksSettings class</class-id> <category>settings-printDialog</category><body package="GHWindowsPrinterSettings">printerSettingsDefaultStorage	"return an object that contains the default values, i.e. a fresh instance of the printer-settings"	^Win32PrinterSettings new</body><body package="GHWindowsPrinterSettings">printerSettingsStorage	"all printer settings are stored in the singleton of the printer settings class"	^Win32PrinterSettings default</body></methods><methods><class-id>Graphics.Printer class</class-id> <category>printing</category><body package="GHWindowsPrinterSettings">printerDeviceClass	"Answer the Class that represents the printing device on the host platform. Platforms where access	to the native printing system has been implemented can use HostPrinter. For all other systems, the	default is PostScriptPrinter. "	"overridden to use the RequestingHostPrinter, so that whenever something is printed, it first opens a dialog and then prints (at least on windows)"	| platformName |	self alwaysPrintWithPostScript ifTrue: [^PostScriptPrinter].	platformName := Screen default platformName.	platformName = 'MS-Windows' ifTrue: [^RequestingHostPrinter].	platformName = 'MacOSX' ifTrue: [^MacOSXPrinter].	^PostScriptPrinter</body></methods><methods><class-id>Tools.VisualWorksSettings class</class-id> <category>settings-printDialog</category><body package="GHWindowsPrinterSettings">wpOptions05PrinterSelect	&lt;setting: #(#wpOption #wpPrinterSelect)&gt;	| printerList |	printerList := Win32PrinterInterface new listOfPrinterNames.	^((EnumerationSetting choices: printerList labels: printerList)		on: self printerSettingsStorage		aspect: #selectedPrinter)		label: 'Selected Printer';		helpText: 'Choose a Printer to use';		yourself</body><body package="GHWindowsPrinterSettings">wpOptions10numCopies	&lt;setting: #(#wpOption #numCopies)&gt;	^((IntegerSetting min: 1 max: 1000) on: self printerSettingsStorage		aspect: #numberOfCopies)		default: self printerSettingsDefaultStorage numberOfCopies;		label: 'Number of Copies ';		helpText: 'How many copies do you want?';		yourself</body><body package="GHWindowsPrinterSettings">wpOptions15sorted	&lt;setting: #(#wpOption #sorted)&gt;	^(BooleanSetting on: self printerSettingsStorage aspect: #sorted)		default: self printerSettingsDefaultStorage sorted;		label: 'Sorted Printing';		helpText: 'Print in Sorted Order?';		yourself</body><body package="GHWindowsPrinterSettings">wpOptions40paperSize	&lt;setting: #(#wpOption #wpPaperSize)&gt;	| paperNames paperSizes |	paperNames := Win32PrinterSettings default sortedPaperNames.	paperSizes := Win32PrinterSettings default sortedPaperSizes.	^((EnumerationSetting choices: paperSizes labels: paperNames)		on: self printerSettingsStorage		aspect: #paperSizeSymbol)		default: self printerSettingsDefaultStorage paperSizeSymbol;		label: 'Paper size';		helpText: 'Choose what kind of paper you are using';		yourself</body><body package="GHWindowsPrinterSettings">wpOptions41customSize	&lt;setting: #(#wpOption #wpCustomSize)&gt;	^(BooleanSetting on: self printerSettingsStorage aspect: #hasCustomSize)		default: self printerSettingsDefaultStorage hasCustomSize;		label: 'Custom Page-size';		helpText: 'Select this option if you want to print to a paper with diffrent size then the preselectable sizes are';		yourself</body><body package="GHWindowsPrinterSettings">wpOptions45pageWidth	&lt;setting: #(#wpOption #wpPageWidth)&gt;	^((IntegerSetting min: 1 max: 1000) on: self printerSettingsStorage		aspect: #pageWidth)		default: self printerSettingsDefaultStorage pageWidth;		label: 'Page Width (in mm)';		helpText: 'Enter the width of your page';		yourself</body><body package="GHWindowsPrinterSettings">wpOptions50pageHight	&lt;setting: #(#wpOption #wpPageHight)&gt;	^((IntegerSetting min: 1 max: 1000) on: self printerSettingsStorage		aspect: #pageHeight)		default: self printerSettingsDefaultStorage pageHeight;		label: 'Page Length (in mm)';		helpText: 'Enter the length of your page';		yourself</body><body package="GHWindowsPrinterSettings">wpOptions55orientation	&lt;setting: #(#wpOption #wpLayoutOrientation)&gt;	^((EnumerationSetting choices: #(#landscape #portrait)		labels: (Array with: 'Landscape' with: 'Portrait'))			on: self printerSettingsStorage			aspect: #orientation)		default: self printerSettingsDefaultStorage orientation;		label: 'Layout Direction';		helpText: 'Choose the Layout Direction';		yourself</body><body package="GHWindowsPrinterSettings">wpOptions60color	&lt;setting: #(#wpOption #color)&gt;	^((EnumerationSetting choices: #(#color #monochrome)		labels: #('Color' 'Black and White')) on: self printerSettingsStorage			aspect: #colorMode)		default: self printerSettingsDefaultStorage colorMode;		label: 'Color';		yourself</body></methods><methods><class-id>Tools.VisualWorksSettings class</class-id> <category>pages</category><body package="GHWindowsPrinterSettings">wpOptionsPage	&lt;settingsPage: #(#system #printing #wpOptions)&gt;	^(ModularSettingsPage new)		label: 'Windows Options';		icon: (ListIconLibrary visualFor: #printer);		settings: (self settingsWithPrefix: #(#wpOption)					except: #(#wpLayoutOrientation #color));		useRadioButtonsForEnumerations;		addSetting: (self settingWithId: #(#wpOption #wpLayoutOrientation));		addSetting: (self settingWithId: #(#wpOption #color));		yourself</body></methods><methods><class-id>OS.Win32PrinterInterface</class-id> <category>procedures</category><body package="GHWindowsPrinterSettings">EnumPrinters: Flags with: Name with: Level with: pPrinterEnum with: cbBuf with: pcbNeeded with: pcReturned&lt;C: BOOL EnumPrintersW(  DWORD Flags,         // printer object types  LPTSTR Name,         // name of printer object  DWORD Level,         // information level  LPBYTE pPrinterEnum, // printer information buffer  DWORD cbBuf,         // size of printer information buffer  LPDWORD pcbNeeded,   // bytes received or required  LPDWORD pcReturned   // number of printers enumerated)&gt;</body><body package="GHWindowsPrinterSettings">GlobalAlloc: uFlags size: dwBytes 	&lt;C: HGLOBAL GlobalAlloc(  UINT uFlags,  SIZE_T dwBytes)&gt;	^self externalAccessFailedWith: _errorCode</body></methods><initialize><class-id>OS.Win32PrinterSettings</class-id></initialize><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>Object</name><environment>Core</environment><super></super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Kernel-Objects</category><attributes><package>Kernel-Objects</package></attributes></class><class><name>Win32PrinterInterface</name><environment>OS</environment><super>OS.Win32SystemSupport</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports>			private OS.Win32PrinterInterfaceDictionary.*			</imports><category>Windows Goodies-Printing</category><attributes><includeFiles></includeFiles><includeDirectories></includeDirectories><libraryFiles><item>user32.dll</item> <item>kernel32.dll</item> <item>comdlg32.dll</item> <item>gdi32.dll</item> <item>winspool.drv</item></libraryFiles><libraryDirectories></libraryDirectories><beVirtual>false</beVirtual><optimizationLevel>full</optimizationLevel><package>OS-PC</package></attributes></class></st-source>