encoding: #UTF_8catalog: packagesAbort = 'Abort'Add = 'Add'AddArrow = 'Add >'addChangeForDataNotInPackage = 'an add/change for data <1s>:<2s>" which is not in the package'addChangeForMispackagedMethod = 'an add/change for method <1s>%><2s>" which is not in the package'addChangeForMissingMethod = 'an add/change for method <1s>%><2s>" which is not in the system'AddedC = 'Added: 'AddedDataC = 'Added data:'AddedMethodsC = 'Added methods:'ancestorIsToBeUnloaded = '<1s> (its ancestor <2s> is in the package to be unloaded)'anEmptyChangeSet = 'an Empty ChangeSet'AvailableC = 'Available:'Backup = 'Backup'bundle = 'bundle'Bundle = 'Bundle'Bundle1s = 'Bundle <1s>'BundleCannotBeLoaded = '<1s><nn>WARNING: the Bundle cannot be loaded. Continue anyway?'BundleContentsC = 'Bundle contents:'BundleEditor = 'Bundle Editor'BundleHasIllegalCharacters = 'Bundle name "<1s>" can not contain any of these characters: <2s>.<n>Use a different bundle name.'BundleHasNotBeenChanged = 'There are no changes to this bundle or its components'BundleNameC = 'Bundle name: 'BundleNameConflict = 'The name <1s> is already in use.  Use another bundle name.'BundleShouldBeString = 'Bundle: <1s> is a symbol, not a string).'BundleSpecAltered = 'The bundle specification has been altered.  Do you wish to discard the changes?'Cancel = 'Cancel'CannotAdd1sTo2s = 'Cannot add <1s> to <2s><ntt>Continue?'CannotFindClass = 'Cannot find class'CannotLoadAComponent = 'Cannot load a component'CannotRenameNullPackage = 'Cannot rename the null package.'ChangedDataC = 'Changed data:'ChangedMethodsC = 'Changed methods:'changeSetForPackage = 'change set for package <1p> notes <2s>'CheckingMultiplePackagesOrNone = 'Checking/repairing methods in multiple packages or no package'ChooseAPackage = 'Choose a Package'ClassAdded = 'Class added.'ClassCommentChanged = 'Class comment changed.'ClassDefinitionRemoved = 'Class definition removed.'ClassesC = 'Classes:'classModelDifferentThanInPackage = 'class model "<1s>" is not the same as in package "<2p>"  it references: 'classModelNotInPackage = 'class model "<1s>" not in package "<2p>"  it references: 'classModelRefersToDifferentPackage = 'class model "<1s>" refers to package "<2p>" which is different from the loaded package'classModelRefersToNonloadedClass = 'class model "<1s>" in package "<2p>" refers to non-loaded class'classModelRefersToNonloadedSelector = 'class "<1p>" in package "<2p>" refers to non-loaded selector "<3s>"'classModelRefersToUnloadedPackage = 'class model "<1s>" refers to package "<2p>" which is not loaded'ClassOverridden = 'Class overridden.'ClassRedefined = 'Class redefined.'ClassRemoved = 'Class removed.'ClassRenamedFrom1s = 'Class renamed from <1s>.'ClassReorganized = 'Class reorganized.'ClassSideMethodsChangedC = 'Class side methods changed:'CommentChangedC = 'Comment changed: 'CreateDirectory1s = 'Create directory <1s>?'DataC = 'Data:'DataChangedC = 'Data changed:'dataInMultiplePackages = 'data <1s>:<2s> is in another package besides <3p>'doesNotExist = 'does not exist'Done = 'Done.'EnterBundleNameBeforeAccept = 'Enter a bundle name before accepting.'ErrorReinitializingImageModel = 'Error %<<1s>%> reinitializing the image model.<n>See PundleAccess%>initilialize'ExpectedAtSign = 'Expected at-sign to begin bundle name'ExpectedAtSignOrQuote = 'Expected at-sign or quote to begin component'ExpectedQuoteBeforePackageName = 'Expected quote to begin package name'ExpectedQuoteForPackageName = 'Malformed quote for package name expected'ExpectedSemicolon = 'Expected semi-colon to end bundle description'FileOutOnC = 'File out on:'FilingOut1s = 'Filing out <1s>'ForWhichDatabase = 'For which database?'GlobalPackageModelsCorrupted = 'The Global Package Model Dictionary May Be Corrupted'Help = 'Help'HideSourceOnLoad = 'Hide source on load'Ignore = 'Ignore'image = 'image'IncludeBundleStructure = 'Include bundle structure'InstanceMethodsChanged = 'Instance side methods changed:'InvalidClassName = 'Invalid class name'LoadOrderValidated = 'Load order validated.'MetaclassRedefined = 'Metaclass redefined.'MetaclassReorganized = 'Metaclass reorganized.'metaMethodInMultiplePackages = 'method <1s> class%><2s> is in another package besides <3p>'methodInMultiplePackages = 'method <1s>%><2s> is in another package besides <3p>'methodIsExtension = '<1s>%>%><2s> (an extension in package "<3s>")'MethodRefersToBogusClass = 'Method refers to non existing class'MethodsC = 'Methods:'MiscellaeonousOptions = 'Miscellaeonous Options'MiscellaneousOptions = 'Miscellaneous Options'modelDictEntryWrongName = 'model dictionary entry "<1s>" includes model "<2p>" with different name'modelDictWrongSlot = 'model dictionary wrong slot "<1s>" in package "<2p>"'modelEntryNil = 'model dictionary entry is nil: <1s>'modelEntryZeroSize = 'class model dictionary entry is zero size: <1s>'modelExtensionsNil = 'model dictionary extension is nil: <1s>'modelKeyNotSymbol = 'model dictionary key not a symbol: <1s>'modificationForSomethingNotInThePackage = 'a modification for "<1s>" which is not in the package'modificationForSomethingNotInTheSystem = 'a modification for "<1s>" which is not in the system'MoveDown = 'Move Down'MoveUp = 'Move Up'MovingMethodsToNewPackage = 'Moved <1s> methods in class <2s> to <3s>'NameSpaceAdded = 'NameSpace added.'NameSpaceCommentChanged = 'NameSpace comment changed.'NameSpaceDefinitionRemoved = 'NameSpace definition removed.'namespaceModelDifferentThanInPackage = 'namespace model <1s>" is not the same as in package "<2p>"  it references. 'namespaceModelHasClassNameWrong = 'namespace model dictionary entry "<1s>" includes class model "<2p>" with different name'namespaceModelWrongSlot = 'namespace model dictionary wrong slot "<1s>" in package "<2p>"'NameSpaceOverridden = 'NameSpace overridden.'NameSpaceRedefined = 'NameSpace redefined.'namespaceRefersToNonloadedDataKey = 'namespace "<1p>" in package "<2p>" refers to non-loaded datakey "<3s>"'NameSpaceRemoved = 'NameSpace removed.'NameSpaceRenamedFrom1sN = 'NameSpace renamed from <1s>.<n>'NameSpaceReorganized = 'NameSpace reorganized.'NameSpacesC = 'NameSpaces:'NoMatchingComponentDescription = 'No matching component description'NonexistentClass = 'Non-existent class'nonLoadedClass1s = 'model references non-loaded class <1s>'nonLoadedNameSpace2s = 'model references non-loaded name space <1s>'NoSouceForC1s = 'No souce for: <1s>'nRemovingNonexistant1s = '<n>Removing non-existant <1s>'OK = 'OK'OKtoOverwriteParcelQ = '<n><1s> exists: <n><n>Overwrite files?<n>'OtherChangesC = 'Other changes: 'OverriddenMethodsC = 'Overridden methods:'OverwriteExistingFiles = 'Overwrite existing files'package = 'package'Package = 'Package'Package1s = 'Package <1s>'PackageAlreadyExists = 'Package <1s> already exists.<n>Confirm. 'PackageChangesFor1s = 'Package Changes for <1s>'PackageConvertedFromParcel = 'Converted from parcel: <1s>  <2s>'PackageDifferencesFrom1sto2s = 'Package Differences from <1s> to <2s>'PackageShouldBeString = 'Package: <1s> is a symbol, not a string).'PadSource = 'Pad source'parcelHelp = 'The parcel will be saved in the Parcel Path + .pcl, the sources in Parcel Path +.pst.Include Bundle Structure if you would like the bundle to be recreated when loading the parcel into a Store image.  Saving Database Links will hook the components to a particular database. This saves the loader from needing to reconcile source before publishing a new version to the same database.Save source file will create the parcel sources (.pst) file.Hide sources on load will not effect the current image, but will supress sources when it is loaded into a another image. This is for deployment parcels and should not be used during development.Select republish to save with sources to a parcel that is currently loaded to the same file name.  Republishing does not hide sources. Republishing will invalidate other images that point to the original file.'parcelHelpWithSmalltalkArchives = 'Include Bundle Structure if you would like the bundle to be recreated when loading the parcel into a Store image.  Saving Database Links will hook the components to a particular database. This saves the loader from needing to reconcile source before publishing a new version to the same database.The Saving as Smalltalk Archive is selected, the development smalltalk archive will be saved in the Parcel Path + .store, the deployment archive in Parcel Path +.star.Save source file create a development archive (.store) file.The Saving as Smalltalk Archive is not selected, The parcel will be saved in the Parcel Path + .pcl, the sources in Parcel Path +.pst. Save source file will create the parcel sources (.pst) file.Hide sources on load will not effect the current image, but will supress sources when it is loaded into a another image. This is for deployment parcels and should not be used during development.Select republish to save with sources to a parcel that is currently loaded to the same file name.  Republishing does not hide sources. Republishing will invalidate other images that point to the original file.'ParcelOptions = 'Parcel options'ParcelPathC = 'Parcel Path:'parenImage = '(image)'ParentBundleC = 'Parent bundle:'ProblemOccurredWhatNowQ = 'The following problem occurred while loading <1s>  bundle:<nn><2s><nn>You can ignore the problem and continue loading the bundle<n>or you can abort the operation and unload already loaded <n>bundles and packages.<n>'PropertyChangesC = 'Property changes: 'Publish = 'Publish'PublishParcel = 'Publish Parcel'PundleHasUnpublishedChanges = '<1s> has unpublished changes. Database links cannot be saved.'RedefinedC = 'Redefined: 'Remove = '< Remove'RemovedC = 'Removed:'RemovedDataC = 'Removed data:'RemovedDefinitionC = 'Removed Definition:'RemovedMethodsC = 'Removed methods:'removeForDataStillInPackage = ' a remove for data <1s>:<2s>" which is still in the package'removeForMethodStillInPackage = 'a remove for method <1s>%><2s>" which is still in the package'removeOperationForSomethingInThePackage = 'a remove/remove definition for class "<1s>" still in the package'RemovingMisnamed1s = 'Attempting to Remove Internally Misnamed: <1s>'RemovingNonexistentC1s = 'Removing non-existent: <1s>'RemovingNonexistentExtension1s = 'Attempting to Remove non-existent extension: <1s>'RenamedC = 'Renamed: 'ReOrganizedCChangedC = 'ReOrganized: changed: 'Republish = 'Republish'RequestTOBCfileName = 'Write the bundle table of contents to:'RequestTOCfileName = 'Write the package table of contents to:'saveAsSmalltalkArchive = 'Save as Smalltalk Archive'SaveSourceFile = 'Save source file'SomeBundleComponentsHaveChanged = 'The following bundle components have been<n>modified (see component for details):'SourceOptions = 'Source options'SourceUnavailable = 'Source unavailable.'Store = 'Store'StoreOptions = 'Store options'SubdefChangesC = 'Subdef changes:'UnexpectedOwner = 'Unexpected owner.'unknown = 'unknown'UnknownParcelChange = 'Unknown parcel change (<1s>)<n> in <2s>'UnloadingPackageC1s = 'Unloading package: <1s>'UnloadingPackageWillModifyBundles = 'The package to be unloaded, "<1s>", is contained in the bundles<n>listed below.  Proceeding will modify these bundles.'UnloadingPackageWillModifySomeBundles = 'The package to be unloaded, "<1s>", is contained in the bundles<2s>listed below.  Proceeding will modify these bundles.'UnloadingPackageWillRemoveClasses = 'Proceeding will remove the following classes which are not in "<1s>", the package to be unloaded:'UnloadingPackageWillRemoveMethods = 'Proceeding will remove the following methods which are not in <n>"<1s>", the package to be unloaded:'unnamed = '*unnamed*'Unpackaged = '(Unpackaged)'UnpublishedModificationsMeanNoDBLinks = '<t><1s> has unpublished modifications.<n>This means that database links will not be included.<ntttt>Continue?'Validate = 'Validate'WarnModifiedPackage = 'Do you want to add <1s> to the previously unchanged package, <2s><ntttttt>OK to continue?'WithDatabaseLinks = 'With database links'WrongModificationType = 'Wrong modification type.'wrongRetrivalType = 'wrong retrival type'x1s2s = '<1s>%>%><2s>'x1s2sInPackages3s = '<1s>%>%><2s> in packages <3s>'x1sBecame2p = '<1s><t>became<t><2p>'x1sBothClassAndNamespace = '<1s> has both class and namespace models.'x1sDot2sInPackages3s = '<1s>.<2s> in packages <3s>'x1sInPackage = 'namespace model <1s>" in package "<2p>" refers to non-loaded namespace'x1sIsNotInAPackage = '<1s> is not in a package'x1sNotInPackage = 'namespace model <1s>" not in package "<2p>"  it references. 'x1sRefersToPackageDifferentThenLoaded = 'namespace model <1s>" refers to package "<2p>" which is different from the loaded package'x1sRefersToPackageNotLoaded = 'namespace model <1s>" refers to package "<2p>" which is not loaded'x1sStructureC = '"<1s> structure: "'x1sStructureChanged = '<1s> structure changed'x1sUnpackaged = '<1s> - Unpackaged'