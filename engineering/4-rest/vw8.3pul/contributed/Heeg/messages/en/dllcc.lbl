encoding: #UTF_8catalog: dllccaccessMethod = 'Access method'Add = 'Add'AddDot = 'Add...'addEnum = 'Enum Name:'addIncludeDirectory = 'Include Directory:'AddIncludeDirectoryDot = 'Add Include Directory...'addIncludeFile = 'Include File:'AddIncludeFilesDot = 'Add Include File...'addLibraryDirectory = 'Library Directory:'addLibraryFile = 'Library File:'AddMethods = 'Add Methods'AddMethodsToDot = 'Add Methods To...'addStruct = 'New Struct Name:'addUnion = 'New Union Name:'arg = 'argument <1p>'ArgumentTypes = 'Argument Types: 'Browse = 'Browse'BrowseExternals = 'Browse External Interfaces'Builder = 'Builder'builderLabel = 'External Interface Builder'bytes = 'bytes'CallingConvention = 'Calling convention:'Cancel = 'Cancel'canOnlyHoldExternals = '<1p> can only hold ExternalInterface or ExternalDictionary objects'CantFindFile1s = 'Can''t find file: <1s>'Category = 'Category'CategoryC = 'Category:'certainRemoveClass = 'Are you certain that you want to remove<n>class <1p> from the system?'Class = 'Class'class1sNoLongerExists = 'class <1s> no longer exists'classHasSubclassesQueryProceed = '<1p> has subclasses.<n>Proceed with removal?'ClassName = 'Class name:'Contents = 'Contents'CParserRequiresParserCompiler = 'The CParser class hierarchy requires a specialized ParserCompiler which is in the AT Parser Compiler parcel. Please load the parcel, otherwise contact Cincom Systems, Inc.'DefineClass = 'Define Class'DefineDot = 'Define...'defineTakesArguments = 'The #define macro should accept arguments.'defineTakesNoArguments = 'The #define should accept no arguments.'DeselectAll = 'Deselect All'DLLAndCConnect = 'DLL and C Connect'EnterNewClassName = 'Enter new ClassName'External = 'External'ExternalMethod = 'External method'Externals = 'Externals'FileOutAsDot = 'File Out As ...'FileOutOn = 'File out on'finderLabel = 'External Interface Finder'followingErrorOccurred = 'The following error occurred during the parse:'FollowingRegenerationError = 'The following error occurred during regeneration:'ForgetRecentlyVisitedClasses = 'Forget Recently Visited Classes'Help = 'Help'helpUnavailable = 'help unavailable'hierarchy = 'hierarchy'hyphenBytes = '--bytes--'InvalidMacroCall = 'Invalid macro call.'invalidStackSize = 'Invalid size for combining stack'isCdecl = 'C 32-bit'isFar = 'C 16-bit'isPascal = 'Pascal 16-bit'isStdcall = 'C Stdcall 32-bit'Location = 'Location'members = '--members--'mustBeAByteArray = 'must be a byte array'mustBeExternalInterfaceSubclass = 'The superclass must be a subclass of ExternalInterface.'MustParseHeadersFirst = 'You must parse header files first.'Name = 'Name:'New = 'New'NewDefine = 'New Define'NewDot = 'New...'NewMacro = 'New Macro'NewProcedure = 'New Procedure'NewTypedef = 'New Typedef'NewVariable = 'New Variable'noInterfaceClass = 'No interface class has been defined.'octalConstant = 'octal constant'OK = 'OK'OK_Browse = 'OK & Browse'Optimized = 'Optimized'ParcelOutAsDot = 'Parcel Out As ...'ParseFiles = 'Parse Files'pleaseParse = 'Please add the include files to parse.'reallyForgetWhichClasses = 'Really forget which classes<n>have recently been visited?'RecentlyVisitedClass = 'Recently Visited Class'Regenerate = 'Regenerate'Remove = 'Remove'RemoveDot = 'Remove...'RenameAsDot = 'Rename As...'ReturnType = 'Return Type:'SelectAll = 'Select All'Show = 'Show'ShowAllClasses = 'Show All Classes'ShowRecentlyVisitedClasses = 'Show Recently Visited Classes'sizeMismatch = 'size mismatch'SmalltalkClassName = 'Smalltalk class name'sNotAnExternalClass = '<1s> is not an ExternalInterface class'structInspecLabel = 'C Struct'Superclass = 'Superclass:'syntaxError = 'syntax error'syntaxErrorHere = 'syntax error ->'syntaxErrorInFileHere = '"<1s>:" syntax error ->'Type = 'Type:'Type1pValue2p = 'Type: <1p> value: <2p>'typeInspecLabel = 'C Type Members'UnlabeledCanvas = 'Unlabeled Canvas'UnmatchedQuote = 'Unmatched "'Update = 'Update'updateMemberDefinitions = 'updating member definitions not supported in this inspector'useBOSS = 'use BOSS'Value = 'Value:'View = 'View'Virtual = 'Virtual'voidMustBeEntireList = '''void'' in parameter list must be the entire list'WrongOfArgsForMacro = 'Wrong # of args for macro.'