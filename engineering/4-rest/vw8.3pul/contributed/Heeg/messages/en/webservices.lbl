encoding: #UTF_8catalog: webservicesAccept = 'Accept'AccessURL = 'Access URL'AccessURLIsEmpty = 'Access URL is empty!'Add = 'Add'Add1sSoapHeaderToSelectedOperations = 'Add <1s> Soap Header to selected operations'addAllFrom = 'Add all from...'addClass = 'Add class...'AddDomainTypeDescription = 'Add domain type description'AddDomainTypeDescriptionHelp = 'The page allows to import XML to object bindings. The bindings should describe complex types that will be used as parameters in Web Services operations, faults and headers'AddDot = 'Add...'AddFault = 'Add Fault'AddFaultDot = 'Add Fault...'AddFaultHeader = 'Add Fault Header'AddFaultToSelectedOperations = 'Add Fault to selected operations'AddHeaderDot = 'Add Header...'AddHeaderFault = 'Add Header Fault'AddInputHeaderToSelectedOperations = 'Add Input Header to selected operations 'AddInputSoapHeader = 'Add Input Soap Header'AddInterfaceFault = 'Add Interface Fault'AddInterfaceOperation = 'Add interface operation'AddOutputHeaderToSelectedOperations = 'Add Output Header to selected operations'AddOutputSoapHeader = 'Add Output Soap Header'AddSuperclassTypesWithTypes = 'Add the super class type only if it has type description'Advandec = 'Advanced...'AlwaysUseSuperclassType = 'Always add the super class type'AnXMLAttributeShouldNotBeValueForStrict = 'An XML Attribute should not be provided as a value for #strict processContents 'AnXMLElementShouldNotBeValueForStrict = 'An XML Element should not be provided as a value for #strict processContents 'AnyRelationMarshalerMarshalerIsNotFound = 'AnyRelationMarshaler:  Marshaler is not found for: <1s>'AServerWithMathingAddress = '"Add the application responder to a server.A server with matching address is found or a new one is created. If a new server is created it will also be started automatically."'Aspect = 'Aspect'AssignThemHereOrTheyRemoved = 'Assign methods here or the operations will be removed from the binding.'AttributeFormDefaultC = 'Default Attribute Form:'AttributeHasWrongFixedValue = 'The attribute <1s> has a wrong fixed value: <2s>. Expected <3s>'back = '< Back'BadRequest = 'Bad Request'BeforeUsingScriptAddCorrectImplementation = '"Before using this script, add correct implementation code to the service classes.'Binding1sNotRegistered = 'Binding <1s> is not registered!'BindingComponentSpecifiesOperationWithoutInterface1s = 'The binding component <1s> specifies operation/fault specific binding details but the interface component is not specified.'BindingDescriptionNotRegisteredYet = 'The binding description is not registered yet. Do you want to register X2O binding?'BindingDoesnotDefineTransportProtocol1s = 'The binding doesn''t define the transport protocol'BindingDoesnotDefineTransportType1s = 'The binding doesn''t define the transport type'BindingHasNoEndpoint = 'The binding has no endpoint address'BindingHasNoEndPoint = 'The binding has no end point address'BindingTool = 'Binding Tool'BindXMLType = 'Bind  XML Types to 'BrowseDots = 'Browse...'BrowseFile = 'Browse file...'BrowseObjectMarshalersHelp = 'The classes in the list represent complex data types used in XML Schema and XML To Object Binding specifications. This page allows you to add or update attribute type descriptions for the complex types.An empty circle symbol means that the class has unresolved types or this class doesn''t have attributes. A half empty circle symbol means that the class has partially resolved types.Buttons:Description - Opens a dialog for adding XML type descriptions. Add super class - Adds a superclass of the selected complex type, including the superclass as a complex type in the XML schema description. The selected complex type will have an extension element with the  superclass as its base attribute.Drop super class - Excludes the superclass of the selected type.	Add class - Adds a class to the XML schema complex types.Add all from - Adds all classes from the specified package to the XML shema complex typesDrop classes - Removes selected classes from the XML schema complex types.Settings - Allows XML to Object Binding and XML schema attributes to be set'ByteTypeInWrongRange = ' "xsd:byte" type decoded from: <1s> is in a wrong range 'Cancel = 'Cancel'CancelWizard = 'Cancel Wizard'CannotCreateMarshalerFor1s = 'Can not create marshaler for: <1s>'CannotCreateURLForImport = 'Can not create URI from import location attribute'CanNotEncodeNumber = 'Can not encode the number as XML decimal'CannotFindBodyMarshalerTag = 'Can not find SoapBodyMarshaler for: <1s>'CannotFindMarshalerForUnionType = 'Can not find marshaler for union type'CannotFindNamespaceForQualifier = 'Can not find namespace for: <1s>'CannotGetResourceFromPartialURL = 'Can not get resource from PartialURL. The parser has #baseURI as nil'CanNotParseBodyContents = 'Can not parse body contents'CanNotParseSimpleContent = 'Can not parse simple content'CanNotParseTheNode = 'Can not parse the node: <1s>'CanNotProcessComplexContent1s = 'Can not process complexContent <1s>. Expected nodes: (restriction | extension) 'CannotResolveAttributeGroupReference = 'Can not resolve attribute group reference'CannotResolveClassReference1s = 'Can not resolve class reference from the string: <1s>'CannotResolveGroupReference = 'Can not resolve group reference'CannotResolveImports = 'Cannot resolve schema imports'CanNotResolveInterfaceMessageElement = 'Can not resolve interface message element: <1s>'CannotResolveMessage1s = 'Can not resolve message: <1s>'CanNotResolveOperationFaultMessage1s = 'Cannot resolve the operation <1s>  fault message <2s>'CanNotResolveOperationInputMessage1s = 'Cannot resolve the operation <1s>  input message <2s>'CanNotResolveOperationOutputMessage1s = 'Cannot resolve the operation <1s>  output message <2s>'CannotResolvePartReference = 'Can not find marshaler for <1s>. 'CanNotResolveRestrictionBaseType1s = 'Can not resolve the restriction base type: <1s>'CannotResolveSoapHeaderFaultParts = 'Can not resolve Soap header fault parts'CannotResolveSoapHeaderParts = 'Can not resolve Soap header parts'CanNotResolveURI = 'Can not resolve URI'CanNotSetAspect = 'Can not set aspect'CannotUnmarshalUnionType = 'Can not unmarshal union type <1s>'CannotUseXMLAnyType = 'Can not use a marshaler with XML type #anyType in AnyRelationMarshaler. It can cause recursion'CanntEncodeBase64Value = 'Can not encode: <1s> into "xsd:base64Binary" 'CanntEncodeByteType = 'Can not encode: <1s> into "xsd:byte".  Wrong range'CanntEncodeLong = 'Can not encode: <1s> into "xsd:long". Wrong range 'CanntEncodeNegativeInteger = 'Can not encode: <1s> into "xsd:negativeInteger" type. Wrong range 'CanntEncodeNonNegativeInteger = 'Can not encode: <1s> into "xsd:nonNegativeInteger".  Wrong range 'CanntEncodeNonPositiveInteger = 'Can not encode: <1s> into "xsd:nonPositiveInteger". Wrong range 'CanntEncodePositiveInteger = 'Can not encode: <1s> into "xsd:positiveInteger".  Wrong range 'CanntEncodeShort = 'Can not encode: <1s> into: "xsd:short". Wrong range 'CanntEncodeUnsignedByteType = 'Can not encode: <1s> into "xsd:unsignedByte". Wrong range 'CanntEncodeUnsignedInt = 'Can not encode: <1s> into "xsd:unsignedInt". Wrong range 'CanntEncodeUnsignedLong = 'Can not encode: ,1s> into "xsd:unsignedLong". Wrong range 'CanntEncodeUnsignedShort = 'Can not encode: <1s> into "xsd:unsignedShort". Wrong range 'CanntEncodeValue = 'Can not encode: <1s> expected class: <2s>'CanntEncodeXsdInt = 'Can not encode: <1s> into "xsd:int". Wrong range 'CantDecodeBooleanString = 'Can not decode "xsd:boolean" from: <1s>'CantDecodeDate = 'Can not decode Date from: <1s>'CantDecodeHexBinary = 'Can not decode "xsd:hexBinary" from: <1s>'CantDecodeNumberFrom = 'Can not decode "xsd:<1s>"  from: <2s>'CantDecodeTime = 'Can not decode Time from: <1s> 'CantDecodeURI = 'Can not decode URI from: <1s> 'CantDecodeXsdBase64 = 'Can not decode "xsd:base64Binary" from: <1s> 'CantFindArrayInElement = 'Can not find array type in the element: <1s>'CantFindMarshalerFor = 'Can not find marshaler for <1s>'CantResolveKeyReference = 'Can''t resolve key reference'ChoiceOf = 'choice: 'ChoiceType = 'Choice type...'Class = 'Class: 'ClassAccessorHasUnderscores = 'If a schema element name has underscores:'Classes = 'Classes'ClassName = 'Class Name'ClassNameC = 'Class name:'ClassNameIsNotSpecified = 'Class name is not specified'ClientClass = 'Client class'ClientClassExistExc = 'Error creating client class: <1s>. The class exists.'ClientClassExistsInSystemDoYouWantToUse = 'The client class <1s> is already in the system. Do you still want to use this name?'ClientClassName = 'Client class name'Clients = 'Clients'Close = 'Close'Collection = '[collection:<1s>]'Collection1 = 'Collection'CollectionMarshalerExpectsInstaceOfElement = 'CollectionObjectMarshaler expects an instance of ElementMarshaler or ImplicitMarshaler. Received: <1s>'CollectionType = 'Collection type'CollectionTypeDotDotDot = 'Collection type...'ComplexType = 'Complex Type'ComplexType1sMissingMandatoryNode2s = 'Complex type: <1s> is missing mandatory node: <2s>'ComplexType1sMissingRequiredAttribute = 'Complex type: <1s> is missing required attribute: <2s>'ComplextypeDots = 'Complex type...'ComplexTypes = 'Complex Types'ConnectTo = 'Connect to'CreateApplicationFromWSDL = 'Create an application from a WSDL document'CreateBindingClassesDialogHelp = 'The Create Binding classes dialog displays classes that will be generated from the X2O specification. You can see the specificafion if you press "View X2O..." button.XML target namespace - allows to select XML Schema and specify Package and Namespace for this Schema.Package - package name where the binding classes for the selected XML target namespace will be createdNamespace - Smalltalk namespace where the classes will be definedXMLComplex types to Smalltalk classes binding - the table defines two columns where the left list column shows list of XML Complex Types as they defined by XML Schema. The right list column shows list of suggested class names as they are specified by the "smalltalkClass" attribute in the X2O specification. The left column allows to change the suggested class names.If there are the classes with number suffixes it indicates that these classes have duplicated bindings in the namespace specified by settings.Pressing Next button generates classes'CreateBindingForSchema = 'Create XML to object binding for schema data type'createBindingForSchemaHelpText = 'This option defines whether or not to create XML to object binding for schema data types. If this option is on the schema serializer will create, load and add the binding to a marshaling manager. By default the BindingBuilder class>>schemaParser creates default (to a dictionary) binding for XML complex types. The BindingBuilder class>>schemaParser can be set to create XML to object binding. This option can help to unmarshal DiffGram format (http://msdn.microsoft.com/library/default.asp?url=/library/en-us/cpguide/html/cpcondiffgrams.asp)'CreateClasses = 'Create Classes'CreateClient = '"Create the client"'CreateClientClassesTab = 'Create Client Classes'CreateClientClassesTabHelp = 'The Create Client classes dialog displays settings for client classes that will be generated from the WSDL specification. Package - package name where the client classes will be createdNamespace - Smalltalk namespace where the classes will be definedThe table has two columns where the left column shows list of WSDL port names. The right list column shows the list of suggested client class names. The left column allows to change the class names.Pressing Next button generates classes'CreateInterfaceFault = 'Create Interface Fault'CreateNewWebServices = 'Build new Web Services'CreateResponderClassTabHelp = 'The Create Responder class dialog displays settings for SOAP Responder class that will be generated from the WSDL specification. Package - package name where the server class will be createdNamespace - Smalltalk namespace where the class will be definedClass name - the server class name.Pressing Next button generates classes'CreateServerClass = 'Create Server Class'CreateServiceClassesTab = 'Create Service Classes'CreateServiceClassesTabHelp = 'The Create Service classes dialog displays settings for service classes that will be generated from the WSDL specification. Package - package name where the service classes will be createdNamespace - Smalltalk namespace where the classes will be definedThe table has two columns where the left column shows list of WSDL interface names. The right list column shows the list of suggested service class names. The left column allows to change the class names.Pressing Next button generates classes'CreateSoapHeader = 'Create Soap Header'CreateXMLSchemaHelp = 'Create XML Schema specification Destination section:Method - saves the schema to a class method with the specified name in the selected class.File out - saves the schema to an external text filePOST - posts the schema on the Http server using specified url'CreatingXMLToObjectBindingError = 'Creating XML to object binding error: <1s>'DecodingAnyType = ' decoding anyType <1s>'Default1ClassNamespaceHelpText = 'The name space in which all classes that are generated from a WSDL schema are placed, by default. While generating a Wsdl schema the types are resolved in this name space 'DefaultBindingPackage = 'Default binding package'DefaultBindingPackageHelpText = 'The package in which all classes that are generated from a X2O specification are placed, by default. If the package name does not exist in the system, it will be created. 'defaultCategory = 'Default category'defaultCategoryHelpText = 'The category in which all classes that are generated from a WSDL schema are placed, by default.'DefaultClassNamespace = 'Default class namespace'DefaultClassNamespaceC = 'Default class namespace:'DefaultServicePackage = 'Default service package'DefaultServicePackageHelpText = 'The package in which client, server and service classes that are generated from a WSDL schema are placed, by default. If the package name does not exist in the system, it will be created. 'defaultServiceProtocol = 'Default service protocol'defaultServiceProtocolHelpText = 'The protocol (class category) in which all web service interface stub methods are created, by default. While generating a Wsdl shema the methods from this protocol are used to create Wsdl operations'DefaultTargetNamespace = 'Default target namespace'DefaultTargetNamespaceHelpText = 'The URN for the default namespace of the service being defined by the target WSDL schema.'Describe1 = 'Describe...'DescribeComplexTypes = 'Describe complex types'DescribeFaultsTabHelp = 'Faults page allows you to add or remove Faults from an operation or Soap Headers for Wsdl 1.1.	Add Fault button allows to add a fault. The Add Fault dialog will display only classes that are derived from the Exception class. These fauls will be used to describe operations in the operations tab Description dialog. For Wsdl 2.0 these faults will be included in interface faults. The Add Fault dialog displays the fault name as the selected exception class name. The fault name can be changed. The fault names are unique for an interface. For WSDL 2.0 the dialog allows to set Soap Fault code and subcode. Remove  button allows to remove selected fault. The fault will be removed from all operations.Properties button is dispayed for WSDL 2.0 version and allows to update Soap Fault code and subcode.Add Header button is dispalayed for WSDL 2.0 version and allows to add Soap headers to the selected interface fault.'DescribeInterface = 'Describe Interface'DescribeInterfaceOperations = 'Describe Interface operations'DescribeInterfaceOperationsTabHelp = 'Operations page allows you to select the class that will provide a service, and specify its interfaces. Interfaces must be in a single protocol (default: ''public api'') but may include interfaces from superclasses.	Service class - Click Select... to select the class that provides the service. In the dialog that is opened, you can either enter the class name or select the class by browsing packages or namespaces.Use methods in protocol - The wizard will represent the operations in one protocol as the access API for the service. The default protocol is "public api". You may select a different protocol from the drop-down list. Including super class - The access API can include superclass methods as well. To do so, select the superclass up to which methods are to be included.When the class and protocol are selected, a list of operations is displayed. To describe an operation click on Describe... To add a new operation and the corresponding service class selector click on Add...To remove a selected operation and the corresponding service class selector click on Remove...Input Header button allows to select a Soap header and add it to all selected operation as input header.Output Header button allows to select a Soap header and add it to all selected operation as output header.Fault button allows to select a Fault and add it to all selected operation as output fault.If your interfaces are going to use interface Fault''s or Soap Headers you need to provide this information first before you start describing an operation. Use Faults and Soap Headers tabs to add Fault and Soap Header description'DescribeOperationParametersReturnFaultsHeaders = 'Describe operation parameters, return, faults and headers'DescribeSoapHeadersTabHelp = 'Soap Headers page allows you to add or remove Soap Headers to Wsdl document binding.Add Header button allows to add a Soap Header to the binding. These headers will be used to describe operations in Descriptions... The Add Header dialog for WSDL 2.0 has options for #mustUnderstand and #required attributes.For Wsdl 1.1 you can add header faults. To add or remove Header Fault use  Add Fault.. and Remove FaultRemove button allows to remove a Soap Header. The header will be removed from all operations also.Properties button is displayed for WSDL 2.0 and allows to update Soap Header attributes as #mustUnderstand and #required'Description = 'Description'Description1 = 'Description...'DescriptionFor = 'Description for:'Destination = 'Destination'DetectedWrongObject = 'Detected a wrong object. Sending <1s> to <2s>'Dictionaries = 'Dictionaries'document = 'document'documentation = 'Documentation'Documents = 'Documents'DoNotDeclareSOAPResponderPragma = 'Do not declare SOAP responders with pragmas (configuration is driven by WSDL)'DontUsePart1InSelector = 'Don''t use the first message part'DoYouWantToRemove = 'Do want to remove the operation?'dropClasses = 'Drop classes'DuplicateBindingsFoundFor1s = 'Duplicate bindings have been found for "<1s>" 'DuplicateBindingsFoundFor1sFrom2s = 'Duplicate bindings have been found for "<1s>" from <2s>. The classes won''t be created if the exception proceeds. New classes will be created in <2s> if the exception resumes with #createAll parameter'DuplicateKey = 'Duplicate key <1s>'ElementFormDefaultC = 'Default Element Form:'ElementIsMissingRequiredTypeAttribute = 'Attribute xsi:type is required in element <1s>. Its expected type <2s> is declared as abstract complex type.'encoded = 'encoded'EncodingAnyType = ' encoding anyType <1s>'ErrorCreatingClientClassNoServiceComponent = 'Error creating client class. The wsdl schema doesn''t have <service> component.'ErrorDecodingNCName = 'Error decoding NCName type. The value should not include colon <1s> 'ErrorParsingXMLDoc = 'Error parsing XML document: <1s>'ExpectArrayTypeRef = 'Expect array type ref'ExpectAttributeNode = 'Expect attribute node'ExpectedIndexableObject1s = 'Expected indexable object for: <1s>'ExpectedInstanceOf1sReceivedNil = 'Expected instance of: <1s>  at: <2s>. Received nil.'ExpectedNotEmptyCollectionAt1s = 'Expected not empty collection at: <1s>'ExpectedTypeOfObjectMarshalerOrSimpleTypeMarshaler = 'Expected type of ObjectMarshaler or SimpleTypeMarshaler'ExpectedTypeOfRelationMarshaler = 'Expected type of RelationMarshaler'ExpectXMLNode = 'Expect XML node'ExposeApplicationAsService = 'Expose an application as a web service'FailedToUnmarshalForwardRef = 'Failed to unmarshal (forward reference?)'FaultDot = 'Fault...'Fileout = 'File out'FinishingWebServicesWizard = 'Finishing the Web Services Wizard'ForDetailsReferToWSGuide = 'For examples, please refer to the Web Services Demo."'ForWSDL20UseSetPortFor = 'For WSDL 2.0 use #setPortAddress:for: method instead 'FoundMarshaler1sExceptedMarshalerDerived = 'Found marshaler:  <1s> for <2s>. Expected a marshaler derived from the abstract type: <3s>'FromApplicationHelpText = 'This option helps you to 	Build new Web Services		describe web services interfaces,		describe types for interface parameters,		create a server class,		create a client class,		test client-server communication,		create a WSDL document	Update existing WebServices'FromWSDLSchemaHelpText = 'This option helps you to 	load a WSDL document,	create Smalltalk classes from XML schema complex types,	create client classes,	create an server and service classes,	invoke web service requests.'Generate = 'Generate'GenerateClass = 'Generate class'GenerateClasses = 'Generate Classes'GenerateClientClass = 'Generate Client class'GenerateClientHelp = 'Check the Generate class box to generate an Client class for this service. Client class optionsName - the name for the client classPackage - the name of the containing packageName Space - the name of the containing name spaceConnect to sectionService URL - the URL at which the service will be requestedPort - the port on which the service will be offered'GenerateResponderHelp = 'This page specifies settings to generate an SOAP Responder class.   To generate the responder class, check the Generate class box, then provide the settings.Responder class section:Name - a name for the SOAP Responder classPackage - the package to contain the class definitionName Space - the name space to contain the class definitionWsdl document section:Service name - the Wsdl <service> element nameInterface name - the interface name, same as the service class nameAddress URL - the port access point URL, including the port number Documentation - a description for the port 'GenerateSOAPResponder = 'Generate SOAP Responder class'GenerateWsdlSchemaHelp = 'To generate a WSDL document, check the Generate box and set the options, then click Next. The document will be generated from the service class or the SOAP Server that provides a web service description. Schemas section.  Select one of the schema types:Wsdl document - Generates a Wsdl document.  A <service> element is included only if a SOAP Server class has been created.XML to object binding - Generates only the <schemaBindings> section for a schema.Destination section:Method - saves the document to a class method with the specified name in the selected class.File out - saves the document to an external text filePOST - posts the document on the Http server using specified url'GeneratingClasses = 'Generating classes....'GeneratingDocuments = 'Generating Documents'GeneratingWsdlDocuments = 'Generating Wsdl documents'HeaderEntryMarshalerNotFound = 'The header entry marshaler not found'HeaderError = 'Header error: <1s>: <2s>'HelpDots = 'Help...'ImportMayNotHaveSameNS = 'Import may not have the same namespace as its enclosing schema'ImportXMLObjectBindings = 'Import XML Object Bindings'in = 'in'IncludeSuperclass = 'Include superclass'IncludeSuperclasses = 'Include superclasses'Including1 = 'including 'IncludingMethod = 'Including method:'IncludingSuperClass = 'Including super class'InOut = 'In/Out'InputHeaderDot = 'Input Header...'InputPartName = 'Input part name'InputPartNameHelpText = 'This option works for #document style WSDL only and allows customizing the part name attribute in an input message. For example setting "parameters" value will result in the following input message description:<message name="someRequest">    <part name="parameters" element="tns:search"/></message>'InterfaceDescription = 'Interface description'InterfaceName = 'Interface name'InterfaceOperations = 'Interface operations'IntTypeInWrongRange = ' "xsd:int" type decoded from: <1s> is in a wrong range 'InvalidCharactersInXMLNormalizedString = 'Invalid characters in XML normalized string:  <1s>'InvalidCharactersInXMLString = 'Invalid characters in XML string:  <1s>'InvalidCharactersInXMLToken = 'Invalid "xsd:token" characters in <1s>'InvalidXsdStringCharacter1p = 'Invalid "xsd:string".  Character value: <1p>'IsMissingMandatoryValueFor = '<1s> is missing mandatory value for: <2s>'Item = 'Item'KeyNotFound = 'Key <1s> not found'literal = 'literal'LoaddocumentHelp = 'This page specifies the Wsdl document from which to generate classes and class generation settings."Wsdl document URL" section - Identify the document either as an Http or file URL, or from a file (click Browse file...). "Bind XML types to" sectionClasses - creates a Smalltalk class for each XML complex typeDictionaries - maps each XML complex type to a WebServices.Struct"Create Classes" sectionClients - Check this box to create client classes for issuing requests via an HttpClientServer  - Check this box to generate an SOAP Server for this documentServices  - Check this box to create a stub class and methods to implement the service described by the document.Pressing Next button displays dialogs to review and change the default settings for creating classes'LoadSiouXServerSecure = 'To create a listener with secure connection load SiouX-Server-Secure parcel'LoadWsdlDocument = 'Load Wsdl document'LongTypeInWrongRange = ' "xsd:long" type decoded from: <1s> is in a wrong range 'MapDerivedTypesToObjects = 'Mapping complex types with derivation to Struct can cause wrong marshaling results. Derived complex types should be mapped to Objects.'MappingUnboundedContentToStructException = 'Mapping complex type: <1s> with unbounded content (sequence or group) to Struct is not supported. If you resume the exception the type will be mapped to a Smalltalk class named: <1s>.'MaxOccurs = 'maxOccurs'MessageLabelAttributeMustBePresent1s = 'Operation: <1s>. #messageLabel attribute must be present if the message exchange pattern has more than one placeholder message with {direction} equal to the message direction 'MessageLabelMustMatchMessageDirection1s = 'Operation: <1s>. #messageLabel attribute value MUST match message direction'Method = 'Method'MethodC = 'Method:'MethodGeneratedByWSTool = '"This method was generated by Web Services Tool."'MethodSignature = 'Method signature:'MinOccurs = 'minOccurs:'MismatchNumberOfPartsAndArg = 'Mismatch number of parts  and arguments'MissedRestrictionValue = 'Missed restriction value 'MissingMethodsDialogHelp = 'The Missing Methods dialog displays interface operations that are missing corresponding methods in the service class or its superclasses. If you press on Proceed button the wizard proceeds and allows updating only the operations that have the service class methods.If you press on Close Wizard button the Wizard will be closed and you can try to restore the missing services'MissingRequiredAttributeTransportName = 'Missing required attribute: transportName 'MissingRequiredHeaderEntry = 'The SoapHeader is missing required header entry: <1s> 'MissingRequiredHeaders1s = 'Missing required headers: <1s> 'MissingReturnTypeValueForRequest = 'There is missing return Type value for Request-Response operation pattern.'MissingTypeValueFor1sParameter = 'There is missing Type value for #<1s> parameter'MissingWildcardElement = '<1s>'MultipleKeyRefsAreNotAllowed = 'Multliple key refs are not allowed'MustLoadRegex = 'Must load Regex to do pattern verification'MustUnderstand = 'must understand'Name = 'Name'NameAlreadyExist = '<1s> already exists and is not a NameSpace'NameC = 'Name:'NegativeIntegerTypeInWrongRange = '"xsd:negativeInteger" type decoded from: <1s> is in a wrong range'NewClassNameHasDuplicateBinding = 'New class name <1s> has duplicate binding in the <2s> namespace'NewClassNameHasSmalltalkBinding = 'New class name <1s> has duplicate binding in the Smalltalk namespace'NextX = 'Next >'NillableDefault = 'Use true as nillable default for Soap Array'nillableDefaultHelpText = 'This option allows to set nillable default for Soap Array items. By default a Soap Array item is described with the nillable="false" attribute.'NilValueNotAllowed1s = 'There is a nil value for element: <1s>  that has been described with nillable="false" 'NoBaseTypeSpecified = 'No base type specified'NoBindingForNS = 'No binding defined for namespace: <1s>'NoDefinedOperationFor = 'No defined operation for <1s>'NoHoldingFoundWithAcquisitionNumber = 'No holding found with acquisition number <1s>.'NoInterfaceForBinding1s = 'Interface not found for binding <1s>'NoMarshalerFor = 'No marshaler for: <1s>'NoMarshalerForCollection = 'No element marshaler for collection'NoMarshalerForRPCParameter1s = ' There is no marshaler for RPC parameter: <1s>'NonNegativeIntegerTypeInWrongRange = '"xsd:nonNegativeInteger" decoded from: <1s> is in a wrong range'NonPositiveIntegerTypeInWrongRange = ' "xsd:nonPositiveInteger" decoded from: <1s> is in a wrong range'NoOperationBindingFor1s = 'No operation binding for <1s>'NoServiceSpecified = 'No service specified'NoSpecifiedNamespace = 'No specified namespace for:<1s>'NotChangeAccessors = 'Use unchanged schema name'NotSupportedDoubleRepresentation = 'The double representation "<1s>" not supported yet'NotSupportedRestriction = 'Not supported restriction'NotSupportedSimpleTypeContent1s = 'Not supported the simple type content: <1s>'NotSupportedSoapVersion = 'The WSDL schema binding has non-supported Soap version: <1s>. Supported 1.1 and 1.2'NotSupportedTransportBinding = 'There is no marshaler for <Header> in the Soap binding <1s>'NotUseExistingNames = 'Create a new unique class name'NotYetImplemented = 'Not yet implemented'ObjectIsNotStructType = 'The object is not an Struct type: <1s>'ObjectMarshalerNotFoundFor1s = 'Object marshaler is not found for <1s>'ObjectNotAssociation = 'The object is not an Association type: <1s>'ObjectNotDictionaryOrStruct = 'The object is not a Dictionary or Struct type: <1s>'ObjectNotIdentityDictionary = 'The object is not an IdentityDictionary type: <1s>'OK = 'OK'OneOrMoreHeaderBlocksNotUnderstood = 'The following mandatory SOAP header blocks are not understood: 'OneWay = 'One-Way'OnlySimpleTypeCanBeRefined = 'Only simple types can be refined'Operation = 'Operation'Operation1sIsNotDefined = 'Operation <1s> is not defined'OperationDescription = 'Operation Description'OperationFaults = 'Operation Faults'OperationIsNotSpecified = 'The operation is not set. Can not unmarshal header entries'OperationName = 'Operation name:'OperationNameIsNotUnique = 'The operation name #<1s> is not unique. Overloaded operations are not supported'OperationsDontHaveAsiggnedMethods = 'The following operations don''t have assigned methods from the service class:'OperationsWithMissingMethods = 'Operations with missing methods'OthersNotSupported = '#others is not supported element value 'OutputHeaderDot = 'Output Header...'outputPartName = 'Output part name'outputPartNameHelpText = 'This option works for #document style WSDL only and  allows customizing the part name attribute in an output message.For example setting "parameters" value will result in the following output message description:<message name="someResponse">    <part name="parameters" element="tns:searchResult"/></message>'Part = 'Message Part'PartCantResolveRef = 'Part %<<1s>%>  of operation %<<2s>%>  can not resolve reference:  <3s>'PartHasNoTypeInfo = 'Part <1s> of operation <2s> has no type information'Password = 'Password'PleaseTypeAFileName = 'Please type a file name: 'PortIsNotProvided = 'Port is not provided!'PortName = 'Port name'PortsList = ' ports ='PositiveIntegerTypeInWrongRange = ' "xsd:positiveInteger" decoded from: <1s> is in a wrong range'POST = 'POST url'Procced = 'Proceed'PropertiesDot = 'Properties...'qualified = 'qualified'RaiseMissingValueException = 'Always raise missing value exception'RaiseMissingValueExceptionHelpText = 'Setting this option to true will allow raising MissingValueSignal while marshaling the nil value even if the value is defined as optional (minOccurs=0). The default is false and the exception will be raised only for mandatory values (minOccurs=1)'ReferencesHref = 'References: <1s>'RegisteredX2OBindings = 'Registered X2O Bindings'RegisterX2O = 'Register X2O'Relation = 'Relation'RelationalMarshalerNotFoundFor1s = 'Relational marshaler for the element found'ReleaseResponderFromServer = '"Release responders from the server and reset responder instances. "'Remove = 'Remove'RemoveDot = 'Remove...'RemoveFault = 'Remove Fault'RemoveRelation = 'Remove relation'RemoveSelection = 'Remove selection'RemoveSoapHeader = 'Remove Soap Header'RemoveUnderscoresInAccessors = 'Convert underscores'request1sNotImplemented = 'Request <1s> is not implemented'RequestResponse = 'Request-Response'RequestTimeout = 'Request Timeout'Required = 'required'Required1 = 'Required'Responder = 'Responder'ResponderClass = 'Responder class'ReturnDocumentLiteralResult = 'Return doc/literal results as a collection'ReviewAndChangeXMLToObjectBindingSpec = 'Review and Change XML Object Binding Specification'ReviewParametersForClassesGeneration = 'Review parameters for classes generation'ReviewParametersToGenerateClasses = 'Review parameters to generate classes'ReviewUpdateX2OHelp = 'In this dialog you can review and change the XML To Object Binding Specification. If you confirm to accept the changes the new XML To Object binding object will be built, verified and registered from the updated specification. Destination section:Method - saves the schema to a class method with the specified name in the selected class.File out - saves the schema to an external text filePOST - posts the schema on the Http server using specified url'rpc = 'rpc'RunOperation = '"Run operation #<1s>"'Save = 'Save'Select = 'Select'SelectClassThatProvidesServices = 'Select the class that provides the service'SelectDots = 'Select...'SelectingWsdlDocumentVersion = 'Selecting Wsdl document version'SelectingX2OBindingHelp = 'Select to update or create a new XML To Object Binding 'SelectingXMLToObjectBinding1 = 'Selecting XML To Object Binding'SelectServiceClassForBinding = 'Select service class for the binding'SelectToUpdateOrCreateNewWsdl = 'Select to update or create a new WSDL document'SelectToUpdateOrCreateNewWsdlHelp = 'Select to update or create a new WSDL document 'SelectType = 'Select Type'SelectWsdl = 'Select WSDL'SelectWsdlVersion = 'Select WSDL Version'SelectWsdlVersionHelp = 'Select WSDL Version.WSDL target namespace - To specify the WSDL document attribute: "targetNamespace"WSDL versionWSDL 2.0 option creates the document with the following operation description:pattern="http://www.w3.org/ns/wsdl/in-out" style="http://www.w3.org/ns/wsdl/style/iri"type="http://www.w3.org/ns/wsdl/soap" wsoap:mepDefault="http://www.w3.org/2003/05/soap/mep/request-response/" wsoap:protocol="http://www.w3.org/2003/05/soap/bindings/HTTP/" wsoap:version="1.2"WSDL 1.1 option allows to create Document or RPC style and Literal or Encoded use.'SelectXMLObjectBinding = 'Select or create a new XML Object Binding'Serviceclass = 'Service class:'ServiceClass = 'Service class'ServiceClassName = 'Service class name'ServiceMapMethosNotImplemented = '#serviceMap method is not implemented'ServiceName = 'WsdlService name=<1s>'Services = 'Services'ServicesInvocation = '"Services invocation"'ServiceURL = 'Service URL'SetOperationTypesHelp = 'This dialog allows you to set the operation name, input/output parameters, data types, faults, and documentation for an interface method.  The name, type, and in/out settings are required before a document can be generated.Name - Give a name to the operation, to be used for the <operation> element in the WSDL <portType> or <interface> element.Description - Enter a description of the operation.Request-Response and One-Way options  define the operation message exchange pattern. Setting One-Way on 	- In Wsdl 1.1 spec the operation output message won''t be created.	- In Wsdl 2.0 spec the operation pattern will be set to "http://www.w3.org/ns/wsdl/robust-in-only". (http://www.w3.org/TR/2007/REC-wsdl20-adjuncts-20070626/#robust-in-only)Using #One-Way option will remove the operation return Type  and output Soap Headers.Part column - identifies the item as either a parameter, result, fault, inputSoapHeader, or outputSoapHeader.Name column - provides a name for the message part in the Wsdl document.Type column - sets the type for the message part. The types are provided in a pop-up list, and will be stored as a pragma in the service class operation.In/Out - indentifies the parameter as an input or output parameter. The value of this column is used only for RPC-style document.  Right click menu actions:Simple and Complex - set the operation return or parameter typeCollection, Struct, or Choice - create a new type and set  the operation return or parameter type.Add fault - adds a new fault part to the operation.  For WSDL 2.0 it adds <outfault> for the operation. A dialog will prompt you to select a complex type that is derived from the exception class.Remove fault - removes fault from the operation.Add Input Soap Header - adds a header to the operation binding input messageAdd Output Soap Header - adds a header to the operation binding output message'SettingsDots = 'Settings...'ShortTypeInWrongRange = ' "xsd:short" decoded from: <1s> is in a wrong range'Simpletype = 'Simple type'SimpleType = 'Simple Type'SmalltalkClassIsNotDefined = 'Smalltalk class <1s> is not defined'SmalltalkClassIsNotSpecified = 'Smalltalk class is not specified'Soap11BindingNotFound = 'SOAP 1.1 Binding is not found at <1s>'Soap11EncodingNotFound = 'SOAP 1.1 Encoding binding is not found at <1s>'Soap12BindingNotFound = 'SOAP 1.2 Binding is not found at <1s>'SOAPAddressHasUnknownProtocol = 'SOAP Address has unknown protocol. Supported protocols http and https'SoapFaultCode = 'Soap Fault Code'SoapFaultSubcode = 'Soap Fault Subcode'SOAPHeaderNotUnderstood = 'SOAP Header not understood'SoapHeaders = 'Soap Headers'SoapStyleHelpText = 'Specifies the default SOAP message style (either "rpc" or "document").'StartClient = '"Start the client"'StopClient = '"Stop the client"'StringDoesnotMatchSoapFaultCodes = 'The string doesn''t match SOAP 1.2 Fault Codes. For more information see http://www.w3.org/TR/soap12-part1/#faultcodes 'StructType = 'Struct type'StructTypeDotDotDot = 'Struct type...'Style = 'Style'StyleAttribute = 'Style attribute'SupplyJSFrom = 'Supply Javascript code from:'SupplyJSFromHelpText = 'Select one of the options: Image methods - the js response will include a JavaScript text created from an ApplicationClient methodsScript File - the development option. The js response will include a .js file contents from the script directory'TargetNamespace = 'Target Namespace'TestingWsdlClient = 'Testing Wsdl client'TestingX2OBinding = 'Testing XML To Object Binding'TestServerClientScriptHelp = 'If there are a Server and Client for the WSDL targetNamespace, this page helps you to test the Web services. The script includes code that helps you to start the SOAP Server and invoke operations from the service provider. You will need to replace the parameter types with real values.If services require to use Soap headers the script won''t work until you implement interceptor classes. For more information see Web Services Demo  'TestX2OHelp = 'This page helps you to test the XML to Object Binding. The script marshals Smalltalk objects to XML document and unmarshals XML documents in to Smalltalk objects.'TheComplexTypeIsDeclaredAsAbstract = 'The complex type <1s> is declared to be "abstract", and an instance of this class can not be used in XML document'TheContentModelIsNotDeterministic = 'The content model is not deterministic. Unmarshaling XML can produce wrong results'TheMarshalerHasBeingDefined = 'The marshaler for the <1s> node has being already defined.'TheMessageDoesNotExpectParameters = 'The message does not expect any parameters'ThePageCannotBeDisplayed = 'The page cannot be displayed'ThereAreFewServers = 'There are a few servers that are using this service. <n>Select the server you want to update:'ThereIsAlreadyX2OBindingWithTargetNamespace1s = 'Target namespace <1s> of an imported schema matches an existing binding, but the associated attributes are different. The attributes have to be merged to continue.'ThereIsClientClassDoYouWantToRemove = 'There is the client class: <1s> that is using this binding. Do you want to remove the class?'ThereIsNilValueInCollection = 'There is nil value in the collection at: <1s>. The item is described as nillable=false'ThereIsNoBindingDescription = 'There is no binding description in the schema'ThereIsNoClass = 'There is no class: <1s>'ThereIsNoEndpointBindingDescriptorForService = 'There is no endpoint binding descriptor'ThereIsNoHeaderEntriesFotHttpBinding = 'There is no header entries for Http binding'ThereIsNoHeaderEntryMarshaler = 'There is no header entry marshaler for: <1s> 'ThereIsNoInterafecFaultNamed1s = 'There is no interface fault named: <1s> 'ThereIsNoInterfaceDescriptorForService = 'There is no interface descriptor for the service'ThereIsNoInterfaceDescriptorSet = 'There is no interface descriptor set for the operation binding'ThereIsNoMarshalerFor1s = 'There is no XML marshaler for: <1s>'ThereIsNoMarshalerForInlineType1s = 'There is no marshaler defined for inline type: <1s> 'ThereIsNoNameAttributeForInterfaceFault = 'There is no interface fault for the message:  <1s>'ThereIsNoPortDefinedForClient = 'There is no ports defined for the client'ThereIsNoQulifiedRef = 'There is no qualified reference for: <1s>'ThereIsNoRegisteredXMLObjectbinding = 'There is no registered XMLObjectBinding at: <1s> 'ThereisNoRequiredParametrForMessage = 'There is no required parameter for the message'ThereisNoRequiredSoapHeaderForMessage = 'There is no required SoapHeader for the message'ThereIsNoServiceClass = 'There is no service class'ThereIsNoServiceClassDefined = 'There is no services class:<1s> defined in the configuration'ThereIsNoServiceDescriptionForWSDL = 'There is no <service> description in WSDL'ThereIsNoSuchBinding = 'There is bo registered XMLObjectBinding at: <1s> 'ThereIsNoSuchBindingReference = 'There is no such binding reference: <1s> 'ThereIsNoSuchClass = 'There is no such class: <1s>'ThereIsNoWSDL = 'There is no WSDL schema provided'ThereIsNoWsdlBindingAt1s = 'There is no WsdlBinding registered at: <1s>'TheValueForAnyRelationMarshalerTaggedObject = 'The value for <1s> has to be an instance of TaggedObject'Type = 'Type'Type1sIsMissingMandatoryIndexedVariables = '<1s> is missing mandatory indexed variables'UnexpectedQualifierInNode = 'Unexpected qualifier in <1s>'UnknownBinding1s = 'Unknown binding for: <1s>'UnknownOperationForGetProvideAction = 'Unknown operation for GET request. Provide SOAP action header for the operation'UnknownOperationForGetRequest = 'Unknown operation for GET request'UnknownOperationForPOSTRequest = 'Unknown operation for POST request. Provide SOAP action header for the operation'UnknownSoapMep = 'Unknown SOAP MEP in the schema binding'UnknownTransport1s = 'Unknown transport: <1s>'UnknownWsdlSchemaNamespace = 'Unknown Wsdl schema root namespace'unqualified = 'unqualified'UnresolvedReference1sFrom2s = 'Unresolved reference <1s>  from selector: #<2s>'UnsignedByteInWrongRange = ' "xsd:unsignedByte" decoded from: <1s> is in a wrong range'UnsignedIntInWrongRange = ' "xsd:unsignedInt". decoded from: <1s> is in a wrong range'UnsignedLongInWrongRange = ' "xsd:unsignedLong". decoded from: <1s> is in a wrong range'UnsignedShortInWrongRange = ' "xsd:unsignedShort". decoded from: <1s> is in a wrong range'UpadteWebServices = 'Update Web Services'UpdateClass = 'Update class'UpdateSoapHeaderProperties = 'Update Soap Header properties: #required/#mustUnderstand'Use = 'Use'UseAttribute = 'Use attribute'UseCodefromImage = 'Image methods'UseEmptyLengthForDimension = 'Use empty dimension for encoding a Soap Array with nil value'UseEmptyLengthForDimensionHelpText = 'This option defines how to encode a Soap Array with the nil value. If the option is on a Soap Array with the nil value will be encoded using am empty dimension for the arrayType attribute. For example: <varArray SOAP-ENC:arrayType="ns1:string[]" xsi:nil="true" xsi:type="SOAP-ENC:Array">. The default option is false. In this case the Soap Array with the nil value will be encoded as <varArray xsi:nil="true"/>'UseExistingName = 'Use the existing class name'UseExistingNames = 'Use the existing class names'UseInlineType = 'Encode nodes with inline type'UseInlineTypeHelpText = 'This option chooses whether or not to add the inline type to a node when a message is marshaled. For example: node with inline type <cost xsi:type="xsd:float">29.95</cost> 'UseJSCodeFromFile = 'Script files'UseMethodsInProtocol = 'Use methods in protocol'UseOnlyServerMethods = 'Use only the service class methods'UsePart1InSelector = 'Use operation name and all message parts'UseReference = 'Use multi-reference encoding for identical objects'UseReferenceHelpText = 'This option chooses whether or not to use multi-reference encoding for identical objects (id/href attributes) which means that the only object will be encoded with some id attribute. The rest of the identical objects will be encoded as a reference (href) to this id. Choosing this option preserves object identity.For example, with the option on two accessors to the same string will appear, as follows:<greeting id="String-0">Hello</greeting><salutation href="#String-0"/>However, if the option is turned off, they will be encoded as two single-reference values as follows:<greeting>Hello</greeting><salutation>Hello</salutation>'username = 'User name'UseServerSuperMethods = 'Add the service super class methods'UseStructAsChoiceValueHelpText = 'Turning on this option will unmarshal choice elements as Structs. The default setting is false. By default the choice elements will be unmarshaled as Association where the key is the choice sub-element name and the value is the unmarshaled choice object.An example:<struct name="MyStruct"><choice name="choiceValue"><element name="a" ref="string"/><element name="b" ref="string"/></choice></struct>When the option is off the input parameter ismyStruct := Struct new		at: #choiceValue put: (''a''-> ''aa'');		yourself.Unmarshaling XML document with the option off will return an association at #choiceValue.When the option is on the input parameter ismyStruct := Struct new		at: #choiceValue put: (Struct new at: #a put: ''aa''; yourself );		yourself.Unmarshaling XML document with the option off will return a Struct at #choiceValue.'UseStructAsChoiceValueValue = 'Use Struct as Choice value'UseTypeHelpText = 'Specifies the default "use" attribute in the SOAP body binding description (either "literal" or "encoded").'UsingExistingClassName = 'If the class name to be created already exists:'UsingExistingName = 'If the client, service or server class name to be created already exists:'utf8 = 'utf-8'ValidateAndLoadXMLToObjectBinding = 'Validate and Load XML To Object Binding'ValidateSimpleTypes = 'Validate simple types restrictions'ValidateSimpleTypesHelpText = 'Setting this option to true will allow validate simple types restrictions'ValidationFailedFor = 'Validation failed for: <1s>. <2s>'ValueHref = ' Value: <1s>'VersionMismatch = 'VersionMismatch'ViewX2O = 'View X2O...'ViewXMLToObjectBinding = 'View XML To Object Binding'VWBindingBindingIsNotFound = 'VWBinding binding is not found at <1s>'WebServices = 'Web Services'WebServicesClassBuilder = 'Class Builder'WebServicesWizard = 'Web Services Wizard'WebServicesWorkspace = 'Web Services Workspace'WebServicesWsdlBuilder = 'Wsdl Builder'WebServicesWsdlBuilderSoapBinding = 'WSDL 1.1 Binding'WebServicesXMLSchemaBuilder = 'XML Schema Builder'WelcomeToWebServicesWizard = 'Welcome to the Web Services Wizard'welcomeToWsdlWizard = 'Welcome to the WSDL Wizard'WhileGeneratingClassSelectors = 'While generating service and client selectors:'WhileGeneratingClassSelectorsHelpText = 'Depending on this setting, the tool does the following:- If "Use operation name and all message parts" is selected, then the Wsdl Class Builder will generate the service and client class selectors as following: selector := operationNamePart1:part2:part3:.. For example: the BabelFish schema has operation name as #BabelFish and parts as #Translationmode and #Sourcedata. With this option on the selector will be created aClient>>babelFishTranslationmode:sourcedata:- If "Don''t use the first message part" is selected, selectors will be generated as following: selector := operationName:part2:part3:... This is the default option. For example: aClient>>babelFish:sourcedata: 'WhileGeneratingSchema = 'While generating the schema:'WhileGeneratingXMLSchemaTypes = 'While generating the XML schema types:'WrapDocumentLiteralResultHelpText = 'This option defines how to return results in document/literal style, bare or wrapped in a collection. The latter form used to be the behavior in previous releases. This option allows to restore the backward compatible behavior.'WrongChoiceValue1s = 'Wrong choice value <1s>. The object is not a Dictionary, or Struct, or Association'WrongCollectionSize = 'Wrong collection size'WrongFixedValue = 'Wrong attribute fixed value. Expected <1s> for: #<2s>'WrongHeaderValueToMarshal = 'Wrong header value to marshal: <1s>'WrongListType = 'Wrong list type: #<1s>. Selector: #<2s> should return SequenceableCollection.'WrongMarshalerType = 'Wrong marshaler type'WrongObjectSelector1sShouldReturnInstance = 'Wrong object. Selector: #<1s> should return an instance of: <2s>. Received: <3s>'WrongObjectTypeForAspect = 'Wrong type for aspect: <1s>. Expected: <2s>. Received: <3s>'WrongObjectTypeForCollection = 'Wrong type for collection: <1s>.'WrongParameterOrXMLSchema = 'Wrong parameter or XML schema type'WrongTypeOfElementMarshaler = 'Wrong type of the element marshaler: <1s>. Expected RelationMarshaler'WrongURL = 'Wrong url:<1s>'WrongXMLToObjectBindingFor1s2s = 'Wrong XML to object binding for <1s> in operation <2s>. RelationMarshaler is required to resolve the reference'wsdl11 = 'WSDL 1.1'Wsdl20 = 'WSDL 2.0'WSDLBindingIsNotFound = 'WSDL Binding is not found at <1s>'WsdlDocument = 'Wsdl document'WsdlDocumentURL = 'Wsdl document URL'WsdlDocumentURLContents = '\\Wsdl document URL contents:\'wsdlDocumentVersion = 'Wsdl document version'WSDLNotCompliantWithBPDocElement = 'The WSDL is not compliant with Basic Profile 1.1. In #document style WSDL the message <1s>  parts have to be defined using the element attribute'WSDLNotCompliantWithBPRpcType = 'The WSDL is not compliant with Basic Profile 1.1. In #rpc style WSDL the message <1s> parts have to be defined using the type attribute'WsdlOperation = 'Wsdl operation'WsdlSchemaDefinitionsOrDescriptionNodeNotFound = 'Wsdl schema definitions or description node is not found in the document'wsdlServiceName = 'Service name'WsdlWizardFinishingBlurbText = 'To generate another document, click the Back button.To close the wizard, click Finish.'WsdlWizardWelcomeBlurbText = 'This wizard guides you through the steps of exposing an existing Smalltalk application as a web service. Alternatively, given a WSDL document, it can generate Smalltalk classes to access (or implement) the service.<nn>Select one of the options:'X2OBindingSettings = 'XML to Object Binding Settings'X2OBindingSettingstHelpText = 'Name:  XML to Object Binding name or XML schema nameDefault Element Form: The global XML schema attribute that indicates whether or not locally declared elements must be set to "qualified" or "unqualified."Default Attribute Form: The global XML schema attribute that indicates whether or not locally declared attributes must be set to "qualified" or "unqualified."Default class namespace: The Smalltalk namespace where binding smalltalkClass attributes will be resolved 'X2OTool = 'X2O Tool'XMLComplexType = 'XML Complex Type'XMLComplexTypesSmalltalkClassesBinding = 'XML Complex types to Smalltalk classes binding:'XMLEncoding = 'XML encoding'XMLEncodingHelpText = 'Specifies the default XML document encoding'XMLObjectMapping = 'XMLSchema Mapping'XMLObjectMarshaling = 'XMLObject Marshaling'XMLRestrictionViolation = 'Value <1p> violates <2s> restriction'XMLSchemaSpecification = 'XML Schema Specification'XMLSchemaTargetNamespace = 'XML Schema targetNamespace'XMLTargetNamespace = 'XML target namespace:'XMLToSmalltalkObjectBinding = 'XML To Smalltalk Object Binding'XsdBindingBindingIsNotFound = 'XsdBinding binding is not found at <1s>'YouAreGoingToLoseOperationTypeDescription = 'You are going to lose operation type description for class: <1s>'