encoding: #UTF_8catalog: glorpBrowseFiles = 'Browse Files'CannotAutomaticallyDetermineJoin = 'Cannot automatically determine join'CannotMapVariable1sFromClass2sToClass3s = 'Cannot map variable <1s> from class <2s> to class <3s>. There is no connecting relation in the database'Class = 'Create Class'ClearProfile = 'Clear'Connect = 'AdHoc SQL'ConnectToDatabase = 'Connect to Database'CreateClassesFromDatabaseTables = 'Create Classes from Database Tables'CreateDescriptorWithPrefix = 'Create Descriptor System with prefix:'CreatePersistentObjectsHeader = 'Create Persistent Classes (and Descriptor System)'CreatingPersistentObjectsHelpText = 'This generates a descriptor system subclass for the selected tables and their relationships, plus a domain class for each such table.Package:  the classes will be created in the chosen package (which will be created if it is does not already exist).Namespace:  the classes will be created in the chosen namespace (which will be created if it is does not already exist).Domain superclass:  the parent of your domain classes	PersistentObject is compatible with any descriptor system.		Choose ActiveRecord or a subclass if you want to use ActiveRecordDescriptorSystem or a subclass.	Set a value in the Launcher''s Glorp Atlas settings page to add your own domain superclass to the list.(See the GlorpGuide.pdf for information on the general PersistentObject pattern and the specific ActiveRecord pattern.)Create Descriptor	Prefix:  check to create a system descriptor class with the chosen prefix.  (For example having the prefix "My" will create the class: MyDescriptorSystem.)	Superclass:  select a subclass of DescriptorSystem if you want to generate a DescriptorSystem with a more specific superclass.Moving to the next page generates selected domain classes and descriptor system.'DatabaseConnectionHeader = 'Specify the database connection'DatabaseConnectionHelpText = 'Provide the connection data.  If the database platform requires it (SQLite does not), the ''Get Schemas'' button will enable when the subform has connection data.  You can then click it to populate the schema drop-down.If desired,	- use the AdHoc SQL button to open a connected SQL window where you can run test queries on the database	- use the Clear button to reset all fields to their defaults	- use the Save button to add a connection profile to the drop-down list	(N.B. only the profile is saved;  the currently chosen schema is not saved.)See the DatabaseAppDevGuide.pdf for information on connection profiles.'DatabaseLoginHeader = 'Specify DB connection, then schema (if needed)'DatabaseLoginHelpText = 'Provide the connection data.  If the database platform requires it (SQLite does not), the ''Get Schemas'' button will enable when the subform has connection data; clicking it populates the schema drop-down.  Either with or without doing this, enter a schema, then move to the next screen to see the tables in that schema.If desired,	- use the AdHoc SQL button to open a connected SQL window where you can run test queries on the database	- use the Clear button to reset all fields to their defaults	- use the Save button to add a connection profile to the drop-down list	(N.B. only the profile is saved;  the currently chosen schema is not saved.)See the DatabaseAppDevGuide.pdf for information on connection profiles.'Delete = 'Delete'DescriptorClassPrefixHelpText = 'The descriptor class prefix:  the application descriptor system class name is constructed from this prefix and the descriptor superclass'' atlasNameExtension'DescriptorPrefix = 'Descriptor prefix'DescriptorSuperclassName = 'Descriptor superclass name'DescriptorSuperclassNameHelpText = 'The fullName of the default superclass for descriptor system classes generated from database schema'DomainSuper1sIncompatDescSuper2s = 'The descriptor system superclass<nt><1s><n>is not compatible with the domain superclass<nt><2s><n>Do you plan to change the other field before doing ''Next''?<n>(If ''No'', you must reset the current field to another value.)'DomainSuperclassName = 'Domain superclass name'DomainSuperclassNameHelpText = 'The fullName superclass of domain classes generated from the database tables'environment = 'Environment:'ErrorGeneratingClasses1s = 'Error generating classes:  <1s>'GetSchemas = 'Get Schemas'GlorpAtlas = 'Glorp Atlas'interface = 'Interface:'MapTablesToClassesHeader = 'Choose which tables are mapped to classes'MapTablesToClassesHelpText = 'This reads all or some of the tables in the chosen database (and schema).  It lets the user choose which tables will be mapped, and they can rename the suggested classes.Table names like: ... and/or unlike: ...	(un)check either box to (un)apply its criteria.  Only tables whose names match / do not match the strings are (re)read from the database.Mapping Table names to classes:  there are three columns	''Table'' holds the database tables names read from the database and schema.		- click on the label to (re)sort the list	''Create Classes'' determines which tables have domain classes generated from them		- click on the label to add/drop all tables		- click on a checkbox to add/drop that table	''Named'' shows the names that the domain classes will have		- edit a proposed class name if desired		- click on the label to (re)sort the listMoving to the next page saves your choices of which tables to map to which classes.'NameAlreadyExist = '<1s> already exists and is not a NameSpace'Named = 'Named'NamespaceName = 'Namespace name'NamespaceNameHelpText = 'The fullName of the namespace in which domain classes and the descriptor system class will be generated'PackageName = 'Package name'PackageNameHelpText = 'The name of the package in which domain classes and the descriptor system class will be generated'password = 'Password:'profile = 'Connection Profile:'Save = 'Save...'ShowTableNamesLike = 'Tables like:'ShowTableNamesUnLike = 'and unlike:'Table = 'Table'TestingRetrievingPersistentObjects = 'Testing Retrieving Persistent Objects'TestPersistentObjectHeader = 'Test Persistent Objects'TestPersistentObjectScriptHelp = 'The script shows code to login to your database and retrieve instances of the domain classes you have generated.  (And to logout when done;  this is not done automatically.)Local variables ''login'' ''system'' and ''session'' have been created for the workspace script to use as needed.'userName = 'User Name:'