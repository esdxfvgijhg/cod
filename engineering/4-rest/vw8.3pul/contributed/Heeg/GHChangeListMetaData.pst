<?xml version="1.0"?><st-source><!-- Name: GHChangeListMetaDataComment: This package logs the Time in the Change-File every minute so that it is easier to find the right spot in a ChangeList upon recovery. It also logs when a Pundle was published.DbIdentifier: magdi.heeg.de.postgresDbTrace: 47326DbUsername: karstenDbVersion: 7.9 - 1PackageName: GHChangeListMetaDataParcel: #('GHChangeListMetaData')ParcelDirectory: c:\visworks\vw8.0 sep14.2\image\HeegContributions-vw8.0-2014-09-25-2\GHChangeListMetaDataPrintStringCache: (7.9 - 1,karsten)Version: 7.9 - 1Date: 3:30:45 PM September 25, 2014 --><time-stamp>From VisualWorksÂ®, 8.0 of 15. September 2014 on 25. September 2014 at 15:30:45</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>ChangeListTimer</name><environment>Smalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars>lastChangeTimestamp </class-inst-vars><imports></imports><category></category><attributes><package>GHChangeListMetaData</package></attributes></class><comment><class-id>ChangeListTimer</class-id><body>ChangeListTimer sends Do-It changes to the ChangeSet that will help navigating the ChangeSet in case of Recovery. It will push timestamps there, when a publication was finished that will also be logged.Class Instance Variables		lastChangeTimestamp 		&lt;Timestamp&gt;	Timestamp when the ChangeSet last performed a Change. Only if new changes were performed, a new timestamp is logged so that the changefile doesn't flood.</body></comment><shared-variable><name>TimerVariable</name><environment>ChangeListTimer</environment><private>false</private><constant>false</constant><category>timer</category><initializer>nil</initializer><attributes><package>GHChangeListMetaData</package></attributes></shared-variable><methods><class-id>ChangeListTimer class</class-id> <category>class initialization</category><body package="GHChangeListMetaData">initialize	super initialize.	self reset</body></methods><methods><class-id>ChangeListTimer class</class-id> <category>initialize-release</category><body package="GHChangeListMetaData">obsolete	TimerVariable := nil.	#{Store.StorePublishDialog.Announcements}		ifDefinedDo: [:announcements | announcements unsubscribe: self].	^super obsolete</body></methods><methods><class-id>ChangeListTimer class</class-id> <category>instance creation</category><body package="GHChangeListMetaData">log: aString	SourceFileManager default addComment: aString</body><body package="GHChangeListMetaData">published: announcement	| ws |	ws := String new writeStream.	announcement specifications do: 			[:each |			ws				nextPutAll: each pundle name;				space;				nextPutAll: each version]		separatedBy: [ws nextPutAll: ' -- '].	self log: ('"Published: &lt;1s&gt; at: &lt;2p&gt;"' expandMacrosWith: ws contents				with: Timestamp now)</body><body package="GHChangeListMetaData">reset	lastChangeTimestamp := Timestamp fromSeconds: 0.	TimerVariable := Timer every: 1 minutes				do: [[self timerFired] on: Error do: [:ex | Transcript show:'Error sending Timestamp to ChangeSet' ]].	#{Store.StorePublishDialog.Announcements} ifDefinedDo: 			[:announcements |			announcements unsubscribe: self.			#{Store.StorePostPublish}				ifDefinedDo: [:postPublish | announcements when: postPublish send: #published: to: self]]</body><body package="GHChangeListMetaData">timerFired	| stamp |	stamp := ChangeSet current lastChangeTimestamp.	stamp &gt; lastChangeTimestamp		ifTrue: 			[lastChangeTimestamp := stamp.			self log: ('"Timestamp: &lt;1p&gt;"' expandMacrosWith: Timestamp now)]</body></methods><methods><class-id>Tools.NamedChangeSet</class-id> <category>accessing</category><body package="GHChangeListMetaData">lastChangeTimestamp	^Timestamp fromSeconds: lastChange</body></methods><methods><class-id>Core.SystemEventInterest class</class-id> <category>dependencies-pragma</category><body package="GHChangeListMetaData">changeListTimerStartup	&lt;triggerAtSystemEvent: #returnFromSnapshot&gt;	#{ChangeListTimer} ifDefinedDo: #reset</body></methods><initialize><class-id>ChangeListTimer</class-id></initialize><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>Object</name><environment>Core</environment><super></super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Kernel-Objects</category><attributes><package>Kernel-Objects</package></attributes></class><class><name>NamedChangeSet</name><environment>Tools</environment><super>Kernel.ChangeSet</super><private>false</private><indexed-type>none</indexed-type><inst-vars>changeSetName lastChange lastFileOut lastFileOutName dirty comment </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>System-Changes</category><attributes><package>System-Changes</package></attributes></class></st-source>