<?xml version="1.0"?><st-source><!-- Name: SUnitNamespaceTestsComment: These tests are for VisualWorks only.  They mainly test the namespaces that SUnit uses in VisualWorks (hence the package name) but can test anything that is VisualWorks-specific, either in the test's purpose (in which case the test will probably live here permanently) or in its implementation (in which case a dialect-neutral form will be sought and moved to SUnitTests when found).DbIdentifier: bear73DbTrace: 249128DevelopmentPrerequisites: #(#(#any 'SUnitTests' ''))PackageName: SUnitNamespaceTestsPackageName:: SUnitNamespaceTestsParcel: #('SUnitNamespaceTests')ParcelName: SUnitNamespaceTestsPrerequisiteDescriptions: #(#(#name 'SUnitTests' #componentType #package))PrerequisiteParcels: #(#('SUnitTests' ''))PrintStringCache: (Camp Smalltalk 3.3 RC1,nross)Version: Camp Smalltalk 3.3 RC1Date: 10:37:31 AM December 18, 2009 --><time-stamp>From VisualWorksÂ®, Pre-Release 7.8 (dec09.3) of December 18, 2009 on December 18, 2009 at 10:37:31 AM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><name-space><name>SUnitNamespaceTest</name><environment>XProgramming</environment><private>false</private><imports>			private Smalltalk.*			</imports><category></category><attributes><package>SUnitNamespaceTests</package></attributes></name-space><comment><name-space-id>XProgramming.SUnitNamespaceTest</name-space-id><body></body></comment><class><name>TestNamespace</name><environment>XProgramming.SUnitNamespaceTest</environment><super>XProgramming.SUnit.SUnitTest</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>SUnitNamespaceTest</category><attributes><package>SUnitNamespaceTests</package></attributes></class><comment><class-id>XProgramming.SUnitNamespaceTest.TestNamespace</class-id><body></body></comment><class><name>NamespaceTest</name><environment>XProgramming.SUnit</environment><super>XProgramming.SUnit.SUnitTest</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports>			XProgramming.SUnitNamespaceTest.*			</imports><category>SUnitNamespaceTest</category><attributes><package>SUnitNamespaceTests</package></attributes></class><comment><class-id>XProgramming.SUnit.NamespaceTest</class-id><body></body></comment><methods><class-id>XProgramming.SUnitNamespaceTest.TestNamespace</class-id> <category>testing</category><body package="SUnitNamespaceTests" selector="testNamespace">testNamespace	self assert: true</body></methods><methods><class-id>XProgramming.SUnit.NamespaceTest</class-id> <category>testing</category><body package="SUnitNamespaceTests" selector="testNamespaces">testNamespaces	self assert: TestNamespace suite tests size = 1</body></methods><methods><class-id>XProgramming.SUnit.SimpleTestResourceTestCase</class-id> <category>running</category><body package="SUnitNamespaceTests" selector="testDebugAsFailureTestWithResource">testDebugAsFailureTestWithResource	"The various implementations of debugAsFailure are sufficiently dialect-specific that a dialect-neutral test will take time to write and test.  Until then, let this VW-specific test live in this VW-specific package even though, since the tools look at where the class is defined for its tests, it will usually be run as part of the SUnitTests package."	self clearOuterResourceStateDuring:		[[[(self class selector: #setRun) debugAsFailure]			on: HaltInterrupt			do: [:ex | ex resume]]				ensure: [(Delay forMilliseconds: 100) wait]]."Last line is to ensure the semaphore-held resource-resetting thread has a chance to execute before we check that the resource has been reset."</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>SUnitTest</name><environment>XProgramming.SUnit</environment><super>XProgramming.SUnit.TestCase</super><private>false</private><indexed-type>none</indexed-type><inst-vars>hasRun hasSetup hasRanOnce </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>SUnitTests</category><attributes><package>SUnitTests</package></attributes></class><class><name>SimpleTestResourceTestCase</name><environment>XProgramming.SUnit</environment><super>XProgramming.SUnit.TestCase</super><private>false</private><indexed-type>none</indexed-type><inst-vars>resource </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>SUnitTests</category><attributes><package>SUnitTests</package></attributes></class></st-source>