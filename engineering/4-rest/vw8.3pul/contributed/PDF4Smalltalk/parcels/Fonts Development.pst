<?xml version="1.0"?><st-source><!-- Name: Fonts DevelopmentNotice: The MIT LicenseCopyright © 2011-2014 Christian HaiderPermission is hereby granted, free of charge, to any person obtaining a copyof this software and associated documentation files (the "Software"), to dealin the Software without restriction, including without limitation the rightsto use, copy, modify, merge, publish, distribute, sublicense, and/or sellcopies of the Software, and to permit persons to whom the Software isfurnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included inall copies or substantial portions of the Software.THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS ORIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THEAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHERLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS INTHE SOFTWARE.BundleName: Fonts DevelopmentBundleStructure: a Store.BundleForParcelComment: Support for external font types.Prerequisite for PDF.The package [Fonts for Windows] provides platform support for Windows.Nontheless, everything should work on non-windows environments, except for the glyph display in the FontExplorer.DevelopmentPrerequisites: #(#(#any 'Values Development' ''))PackageName: Fonts DevelopmentParcel: nilParcelName: Fonts DevelopmentPrerequisiteDescriptions: #(#(#name 'Values Development' #componentType #bundle))PrerequisiteParcels: #(#('Values Development' '') #('Values' '') #('SUnitToo' '') #('DLLCC' '') #('ExternalWebBrowser' '') #('Windows Goodies' ''))Version: 1.3.3.2Date: 12:24:33 PM June 17, 2016 --><time-stamp>From VisualWorks®, Pre-Release 8.2 (jun16.2) of 10 June 2016 on 17 June 2016 at 12:24:33</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><name-space><name>Fonts</name><environment>Graphics</environment><private>false</private><imports>			private Smalltalk.*			</imports><category></category><attributes><package>Fonts Basics</package></attributes></name-space><name-space><name>OpenType</name><environment>Graphics.Fonts</environment><private>false</private><imports>			private Smalltalk.*			</imports><category></category><attributes><package>OpenType</package></attributes></name-space><name-space><name>WindowsFonts</name><environment>Smalltalk</environment><private>false</private><imports>			private Smalltalk.*			</imports><category>WindowsFonts</category><attributes><package>Fonts for Windows</package></attributes></name-space><name-space><name>CFF</name><environment>Graphics.Fonts</environment><private>false</private><imports>			private Smalltalk.*			</imports><category></category><attributes><package>CompactFontFormat</package></attributes></name-space><class><name>Table</name><environment>Graphics.Fonts.OpenType</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>tag contents file </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Table</class-id><body>holds the contents of just one tabel of an OpenType font</body></comment><class><name>Gasp</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.Table</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Gasp</class-id><body>This table contains information which describes the preferred rasterization techniques for the typeface when it is rendered on grayscale-capable devices. This table also has some use for monochrome devices, which may use the table to turn off hinting at very large or small sizes, to improve performance.At very small sizes, the best appearance on grayscale devices can usually be achieved by rendering the glyphs in grayscale without using hints. At intermediate sizes, hinting and monochrome rendering will usually produce the best appearance. At large sizes, the combination of hinting and grayscale rendering will typically produce the best appearance.If the 'gasp' table is not present in a typeface, the rasterizer may apply default rules to decide how to render the glyphs on grayscale devices.</body></comment><class><name>Mapping</name><environment>Graphics.Fonts.CFF</environment><super>Value</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CompactFontFormat</package></attributes></class><comment><class-id>Graphics.Fonts.CFF.Mapping</class-id><body>a Mapping is the superclass of several unrelated but similar structures used for mapping</body></comment><class><name>EncodingSupplement</name><environment>Graphics.Fonts.CFF</environment><super>Graphics.Fonts.CFF.Mapping</super><private>false</private><indexed-type>none</indexed-type><inst-vars>glyphsAtCode </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CompactFontFormat</package></attributes></class><comment><class-id>Graphics.Fonts.CFF.EncodingSupplement</class-id><body>Encoding SupplementA few fonts have multiply-encoded glyphs which are not supported directly by any of the above formats.This situation is indicated by setting the high-order bit in the format byte and supplementing the encoding, regardless of format type.Each Supplement describes a single code-to-glyph mapping which provides another encoding for a glyph that has already been mentioned in the main encoding table.</body></comment><class><name>Charset</name><environment>Graphics.Fonts.CFF</environment><super>Graphics.Fonts.CFF.Mapping</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CompactFontFormat</package></attributes></class><comment><class-id>Graphics.Fonts.CFF.Charset</class-id><body>Charset data is located via the offset operand to the charset operator in the Top DICT.Each charset is described by a formattype identifier byte followed by format-specific data.Three formats are currently defined.</body></comment><class><name>Charset0</name><environment>Graphics.Fonts.CFF</environment><super>Graphics.Fonts.CFF.Charset</super><private>false</private><indexed-type>none</indexed-type><inst-vars>glyphs </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CompactFontFormat</package></attributes></class><comment><class-id>Graphics.Fonts.CFF.Charset0</class-id><body>Each element of the glyph array represents the name of the corresponding glyph.This format should be used when the SIDs are in a fairly random order.The number of glyphs (nGlyphs) is the value of the count field in the CharStrings INDEX.(There is one less element in the glyph name array than nGlyphs because the .notdef glyph name is omitted.)</body></comment><class><name>Font</name><environment>Graphics.Fonts</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>useAlternativeFont printFontDescription </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Fonts Basics</package></attributes></class><comment><class-id>Graphics.Fonts.Font</class-id><body>superclass of all font typesdefines the common protocol for all fonts to be used with PDF</body></comment><class><name>Type1Font</name><environment>Graphics.Fonts</environment><super>Graphics.Fonts.Font</super><private>false</private><indexed-type>none</indexed-type><inst-vars>metrics </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Type1</package></attributes></class><comment><class-id>Graphics.Fonts.Type1Font</class-id><body>A Type 1 PostScript font</body></comment><class><name>FontProgram</name><environment>Graphics.Fonts</environment><super>Value</super><private>false</private><indexed-type>none</indexed-type><inst-vars>header contents glyphs trailerExtra </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Type1</package></attributes></class><comment><class-id>Graphics.Fonts.FontProgram</class-id><body>An Adobe Type 1 Font ProgramInstances correspond to the contents of an PFA file (or windows PFB file, which has identical content).Documented in "Adobe Type 1 Font Format", 1990, ISBN 0-201-57044-0online at http://partners.adobe.com/public/developer/en/font/T1_SPEC.PDFParsing the information from these files is provisorial. Needs a proper PostScript interpreter to do it right.</body></comment><class><name>Range</name><environment>Graphics.Fonts.CFF</environment><super>Value</super><private>false</private><indexed-type>none</indexed-type><inst-vars>first nLeft </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CompactFontFormat</package></attributes></class><comment><class-id>Graphics.Fonts.CFF.Range</class-id><body>A Range encodes consecutive numbers.For example, the codes 51 52 53 54 55 could be represented by the Range: 51 4, and a perfectly ordered encoding of 256 codes can be described with the Range: 0 255.</body></comment><class><name>CharacterMetric</name><environment>Graphics.Fonts</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>c w n b l </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>PostScript</category><attributes><package>Type1</package></attributes></class><comment><class-id>Graphics.Fonts.CharacterMetric</class-id><body>Each character’s metrics are represented as a list of keys and values separated by semicolons, contained on one line. The characters are sorted by numerically ascending character code. Characters not encoded follow the encoded characters and are identified by character codes of –1. Byte codes for which no character is defined are not listed. Example: A character metric data line might look like this: C 102 ; WX 333 ; N f ; B 20 0 383 682 ; L i fi ; L l fl ;This section appears in the AFM file only. It is optional.</body></comment><class><name>AfmParser</name><environment>Graphics.Fonts</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>fontMetric stream stack </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>PostScript</category><attributes><package>Type1</package></attributes></class><comment><class-id>Graphics.Fonts.AfmParser</class-id><body>factored out from PostScriptFontBody classThis comment is from PostScriptFontBody class&gt;&gt;parseGenericEntry:stack:modify:	Generic parsing algorithm for keeping track of the	StartFoo / EndFoo delimiters that we encounter as we	parse the file.  Each StartFoo pushes on the stack the	name of the EndFoo line that terminates it, and a	message selector to use to parse the file until that	line is reached.  When the EndFoo line is reached, the	stack is popped, and the line checked to make sure	that it's the correct terminator--i.e., that it's an	EndFoo and not an EndBar, if an EndFoo was expected.	This stack maintenance is all that's needed for many	sections.  If information has to be extracted from a	section of the file, a different method selector should	be used to parse that part of the file.</body></comment><class><name>KernPair</name><environment>Graphics.Fonts</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>firstCharacter secondCharacter kerning </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>PostScript</category><attributes><package>Type1</package></attributes></class><comment><class-id>Graphics.Fonts.KernPair</class-id><body>KernPair specifies the kerning between two characters.Instance Variables:	firstCharacter		&lt;Symbol&gt;	description of firstCharacter	secondCharacter	&lt;Symbol&gt;	description of secondCharacter	kerning				&lt;Point&gt;		description of kerning</body></comment><class><name>Dict</name><environment>Graphics.Fonts.CFF</environment><super>Value</super><private>false</private><indexed-type>none</indexed-type><inst-vars>operations </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CompactFontFormat</package></attributes></class><comment><class-id>Graphics.Fonts.CFF.Dict</class-id><body>Font dictionary data comprising key-value pairs is represented in a compact tokenized format that is similar to that used to represent Type 1 charstrings.Dictionary keys are encoded as 1- or 2-byte operators and dictionary values are encoded as variable-size numeric operands that represent either integer or real values.An operator is preceded by the operand(s) that specify its value.A DICT is simply a sequence of operand(s)/operator bytes concatenated together.</body></comment><class><name>StandardFont</name><environment>Graphics.Fonts</environment><super>Graphics.Fonts.Type1Font</super><private>false</private><indexed-type>none</indexed-type><inst-vars>windowsFaceName </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Type1</package></attributes></class><comment><class-id>Graphics.Fonts.StandardFont</class-id><body>the 14 Adobe standard fonts.The metrics are read from the official .afm.There are no font programs for these fonts - they are build-in in PostScript and PDF.The corresponding windows font name is remembered as #windowsFaceName</body></comment><class><name>Operator</name><environment>Graphics.Fonts.CFF</environment><super>Value</super><private>false</private><indexed-type>none</indexed-type><inst-vars>value </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CompactFontFormat</package></attributes></class><comment><class-id>Graphics.Fonts.CFF.Operator</class-id><body>an Operator in a CFF DICT</body></comment><class><name>DictOperator</name><environment>Graphics.Fonts.CFF</environment><super>Graphics.Fonts.CFF.Operator</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CompactFontFormat</package></attributes></class><comment><class-id>Graphics.Fonts.CFF.DictOperator</class-id><body>single byte operator occuring in DICTs</body></comment><class><name>ExtTextMetrics</name><environment>Graphics.Fonts</environment><super>Value</super><private>false</private><indexed-type>none</indexed-type><inst-vars>capHeight xHeight lcAscent lcDescent slant superScript subScript superScriptSize subScriptSize ulOffset ulWidth dblUpperUlOffset dblLowerUlOffset dblUpperUlWidth dblLowerUlWidth soOffset soWidth </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Type1</package></attributes></class><comment><class-id>Graphics.Fonts.ExtTextMetrics</class-id><body>This section contains additional informations about the font (orientation, minimum and maximum acceptable size of the font, the cap height, the degree of obliqueness for italic fonts etc.)</body></comment><class><name>Prep</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.Table</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Prep</class-id><body>The Control Value Program consists of a set of TrueType instructions that will be executed whenever the font or point size or transformation matrix change and before each glyph is interpreted. Any instruction is legal in the CV Program but since no glyph is associated with it, instructions intended to move points within a particular glyph outline cannot be used in the CV Program. The name 'prep' is anachronistic (the table used to be known as the Pre Program table.)</body></comment><class><name>Colr</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.Table</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Colr</class-id><body>COLR - Color TableThe COLR table adds support for multi-colored glyphs in a manner that is compatible with existing text engines and easy to support with current OFF font files.The COLR table defines a list of base glyphs — which are regular glyphs, typically associated with a cmap entry. Each base glyph is associated by the COLR table to a list of glyphs, each corresponding to layers that can be combined, creating a colored representation of the base glyph. The layered glyphs are explicitly defined in bottom-up z-order and each of their advance widths must match those of the base glyph. If the font has vertical metrics, the associated layer glyphs must also have the same advance height and vertical Y origin as the base glyph.The COLR table works together with the CPAL table which holds the color palettes used by the color layers.Fonts using 'COLR' and 'CPAL' tables must implement GlyphID 1 as the .null glyph. If the COLR table is present in a font but no CPAL table exists, then the COLR table will not be supported for this font.</body></comment><class><name>Cmap</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.Table</super><private>false</private><indexed-type>none</indexed-type><inst-vars>encodingTables </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Cmap</class-id><body>This table defines the mapping of character codes to the glyph index values used in the font. It may contain more than one subtable, in order to support more than one character encoding scheme. Character codes that do not correspond to any glyph in the font should be mapped to glyph index 0. The glyph at this location must be a special glyph representing a missing character, commonly known as .notdef.The table header indicates the character encodings for which subtables are present. Each subtable is in one of seven possible formats and begins with a format code indicating the format used.The platform ID and platform-specific encoding ID in the header entry (and, in the case of the Macintosh platform, the language field in the subtable itself) are used to specify a particular 'cmap' encoding. The header entries must be sorted first by platform ID, then by platform-specific encoding ID, and then by the language field in the corresponding subtable. Each platform ID, platform-specific encoding ID, and subtable language combination may appear only once in the 'cmap' table.</body></comment><class><name>Svg</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.Table</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Svg</class-id><body>OpenType fonts with either TrueType or CFF outlines may also contain an optional ‘SVG ’ table, which allows some or all glyphs in the font to be defined with color, gradients, or animation.SVG - The SVG (Scalable Vector Graphics) tableThis table contains SVG descriptions for some or all of the glyphs in the font. For every SVG glyph description, there must also exist a corresponding CFF or TT glyph description in the font.</body></comment><class><name>CmapSubtable</name><environment>Graphics.Fonts.OpenType</environment><super>Value</super><private>false</private><indexed-type>none</indexed-type><inst-vars>platform encoding contents </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.CmapSubtable</class-id><body>A cmap subtable supports one character encoding scheme. Character codes that do not correspond to any glyph in the font should be mapped to glyph index 0. The glyph at this location must be a special glyph representing a missing character, commonly known as .notdef.The table header indicates the character encodings for which subtables are present. Each subtable is in one of seven possible formats and begins with a format code indicating the format used.The platform ID and platform-specific encoding ID in the header entry (and, in the case of the Macintosh platform, the language field in the subtable itself) are used to specify a particular 'cmap' encoding. The header entries must be sorted first by platform ID, then by platform-specific encoding ID, and then by the language field in the corresponding subtable. Each platform ID, platform-specific encoding ID, and subtable language combination may appear only once in the 'cmap' table.(see http://www.microsoft.com/typography/otspec/cmap.htm for specifications)</body></comment><class><name>CmapLanguageSubtable</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.CmapSubtable</super><private>false</private><indexed-type>none</indexed-type><inst-vars>language </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.CmapLanguageSubtable</class-id><body>A cmap Subtable with a language id</body></comment><class><name>CmapSubtable2</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.CmapLanguageSubtable</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.CmapSubtable2</class-id><body>Format 2: High-byte mapping through tableThis subtable is useful for the national character code standards used for Japanese, Chinese, and Korean characters. These code standards use a mixed 8/16-bit encoding, in which certain byte values signal the first byte of a 2-byte character (but these values are also legal as the second byte of a 2-byte character).In addition, even for the 2-byte characters, the mapping of character codes to glyph index values depends heavily on the first byte. Consequently, the table begins with an array that maps the first byte to a 4-word subHeader. For 2-byte character codes, the subHeader is used to map the second byte's value through a subArray, as described below. When processing mixed 8/16-bit text, subHeader 0 is special: it is used for single-byte character codes. When subHeader zero is used, a second byte is not needed; the single byte value is mapped through the subArray.(see http://www.microsoft.com/typography/otspec/cmap.htm for specifications)</body></comment><class><name>Gdef</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.Table</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Gdef</class-id><body>The Glyph Definition (GDEF) table contains four types of information in four independent tables:    * The GlyphClassDef table classifies the different types of glyphs in the font.    * The AttachmentList table identifies all attachment points on the glyphs, which streamlines data access and bitmap caching.    * The LigatureCaretList table contains positioning data for ligature carets, which the text-processing client uses on screen to select and highlight the individual components of a ligature glyph.    * The MarkAttachClassDef table classifies mark glyphs, to help group together marks that are positioned similarly.    * The MarkGlyphSetsTable allows the enumeration of an arbitrary number of glyph sets that can be used as an extension of the mark attachment class definition to allow lookups to filter mark glyphs by arbitrary sets of marks.The GSUB and GPOS tables may reference certain GDEF table information. See, for example, the LookupFlag bit enumeration in “OpenType Layout Common Table Formats”.</body></comment><class><name>Glyf</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.Table</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Glyf</class-id><body>This table contains information that describes the glyphs in the font in the TrueType outline format. Information regarding the rasterizer (scaler) refers to the TrueType rasterizer.</body></comment><class><name>Glyph</name><environment>Graphics.Fonts.OpenType</environment><super>Value</super><private>false</private><indexed-type>none</indexed-type><inst-vars>id name charString code hMetric </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Glyph</class-id><body>a character from a CFF</body></comment><class><name>HorMetric</name><environment>Graphics.Fonts.OpenType</environment><super>Value</super><private>false</private><indexed-type>none</indexed-type><inst-vars>advanceWidth lsb </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.HorMetric</class-id><body>Paired advance width and left side bearing values for a glyph.</body></comment><class><name>Post</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.Table</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Post</class-id><body>This table contains additional information needed to use TrueType or OpenType fonts on PostScript printers. This includes data for the FontInfo dictionary entry and the PostScript names of all the glyphs. For more information about PostScript names, see the Adobe document Unicode and Glyph Names.Versions 1.0, 2.0, and 2.5 refer to TrueType fonts and OpenType fonts with TrueType data. OpenType fonts with TrueType data may also use Version 3.0. OpenType fonts with CFF data use Version 3.0 only.</body></comment><class><name>AxisInfo</name><environment>WindowsFonts</environment><super>Value</super><private>false</private><indexed-type>none</indexed-type><inst-vars>minValue maxValue axisName </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Windows Fonts</category><attributes><package>Fonts for Windows</package></attributes></class><comment><class-id>WindowsFonts.AxisInfo</class-id><body>&lt;http://msdn2.microsoft.com/en-us/library/ms534037.aspx&gt;The AXISINFO structure contains information about an axis of a multiple master font.typedef struct tagAXISINFO {  LONG axMinValue;  LONG axMaxValue;  TCHAR axAxisName[MM_MAX_AXES_NAMELEN];} AXISINFO, *PAXISINFO;MembersaxMinValue    Minimum value for this axis. axMaxValue    Maximum value for this axis.axAxisName    Name of the axis, specified as an array of characters. RemarksThe AXISINFO structure contains the name of an axis in a multiple master font and also the minimum and maximum possible values for the axis. The length of the name is MM_MAX_AXES_NAMELEN, which equals 16. An application queries these values before setting its desired values in the DESIGNVECTOR array.The PostScript Open Type Font does not support multiple master functionality.For the ANSI version of this structure, axAxisName must be an array of bytes.Requirements  Windows NT/2000/XP/Vista: Included in Windows 2000 and later.  Windows 95/98/Me: Unsupported.  Header: Declared in Wingdi.h; include Windows.h.  Unicode: Declared as Unicode and ANSI structures.</body></comment><class><name>Logfont</name><environment>WindowsFonts</environment><super>Value</super><private>false</private><indexed-type>none</indexed-type><inst-vars>height width escapement orientation weight italic underline strikeOut charSet outPrecision clipPrecision quality pitchAndFamily faceName </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>smallCharts Font Tools</category><attributes><package>Fonts for Windows</package></attributes></class><comment><class-id>WindowsFonts.Logfont</class-id><body>The LOGFONT structure defines the attributes of a font.&lt;ms-help://MS.PSDKSVR2003R2.1033/gdi/fontext_1wmq.htm&gt;</body></comment><class><name>EnumLogfontEx</name><environment>WindowsFonts</environment><super>WindowsFonts.Logfont</super><private>false</private><indexed-type>none</indexed-type><inst-vars>fullName style script </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>smallCharts Font Tools</category><attributes><package>Fonts for Windows</package></attributes></class><comment><class-id>WindowsFonts.EnumLogfontEx</class-id><body>&lt;ms-help://MS.PSDKSVR2003R2.1033/gdi/fontext_3dki.htm&gt;The ENUMLOGFONTEX structure contains information about an enumerated font.typedef struct tagENUMLOGFONTEX {  LOGFONT  elfLogFont;  TCHAR  elfFullName[LF_FULLFACESIZE];  TCHAR  elfStyle[LF_FACESIZE];  TCHAR  elfScript[LF_FACESIZE];} ENUMLOGFONTEX, *LPENUMLOGFONTEX;MemberselfLogFont Specifies a LOGFONT structure that contains values defining the font attributes. Windows 95/98/Me: If not a TrueType font, the lfFaceName member of LOGFONT is filled with the unique name of the font. elfFullName Specifies a null-terminated string specifying the unique name of the font. For example, ABC Font Company TrueType Bold Italic Sans Serif. Windows 95/98/Me: Specifies the unique name of a TrueType font. For other type fonts, see explanation in elfLogFont. elfStyle Specifies a null-terminated string specifying the style of the font. For example, Bold Italic. elfScript Specifies a null-terminated string specifying the script, that is, the character set, of the font. For example, Cyrillic. Requirements   Windows NT/2000/XP: Included in Windows NT 4.0 and later.  Windows 95/98/Me: Included in Windows 95 and later.  Header: Declared in Wingdi.h; include Windows.h.  Unicode: Declared as Unicode and ANSI structures.</body></comment><class><name>EnumLogfontExDv</name><environment>WindowsFonts</environment><super>WindowsFonts.EnumLogfontEx</super><private>false</private><indexed-type>none</indexed-type><inst-vars>designVector </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Windows Fonts</category><attributes><package>Fonts for Windows</package></attributes></class><comment><class-id>WindowsFonts.EnumLogfontExDv</class-id><body>&lt;http://msdn2.microsoft.com/en-us/library/ms533972.aspx&gt;The ENUMLOGFONTEXDV structure contains the information used to create a font.typedef struct tagENUMLOGFONTEXDV {  ENUMLOGFONTEX elfEnumLogfontEx;  DESIGNVECTOR elfDesignVector;} ENUMLOGFONTEXDV, *PENUMLOGFONTEXDVMemberselfEnumLogfontEx    An ENUMLOGFONTEX structure that contains information about the logical attributes of the font. elfDesignVector    A DESIGNVECTOR structure. This is zero-filled unless the font described is a multiple master OpenType font. RemarksThe actual size of ENUMLOGFONTEXDV depends on that of DESIGNVECTOR, which, in turn depends on its dvNumAxes member.Windows 2000/XP: The EnumFonts, EnumFontFamilies, and EnumFontFamiliesEx functions have been modified to return pointers to ENUMTEXTMETRIC and ENUMLOGFONTEXDV to the callback function.Requirements  Windows NT/2000/XP/Vista: Included in Windows 2000 and later.  Windows 95/98/Me: Unsupported.  Header: Declared in Wingdi.h; include Windows.h.  Unicode: Declared as Unicode and ANSI structures.</body></comment><class><name>NewTextMetricEx</name><environment>WindowsFonts</environment><super>Value</super><private>false</private><indexed-type>none</indexed-type><inst-vars>newTextMetric fontSig </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Windows Fonts</category><attributes><package>Fonts for Windows</package></attributes></class><comment><class-id>WindowsFonts.NewTextMetricEx</class-id><body>&lt;http://msdn2.microsoft.com/en-us/library/ms533968.aspx&gt;The NEWTEXTMETRICEX structure contains information about a physical font.typedef struct tagNEWTEXTMETRICEX {  NEWTEXTMETRIC  ntmTm;  FONTSIGNATURE  ntmFontSig;} NEWTEXTMETRICEX;MembersntmTm    Specifies a NEWTEXTMETRIC structure.ntmFontSig    Specifies a FONTSIGNATURE structure indicating the coverage of the font. Requirements  Windows NT/2000/XP/Vista: Included in Windows NT 4.0 and later.  Windows 95/98/Me: Included in Windows 95 and later.  Header: Declared in Wingdi.h; include Windows.h.  Unicode: Declared as Unicode and ANSI structures.</body></comment><class><name>EnumTextMetric</name><environment>WindowsFonts</environment><super>WindowsFonts.NewTextMetricEx</super><private>false</private><indexed-type>none</indexed-type><inst-vars>axes </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Windows Fonts</category><attributes><package>Fonts for Windows</package></attributes></class><comment><class-id>WindowsFonts.EnumTextMetric</class-id><body>&lt;http://msdn2.microsoft.com/en-us/library/ms533913.aspx&gt;The ENUMTEXTMETRIC structure contains information about a physical font.typedef struct tagENUMTEXTMETRIC {  NEWTEXTMETRICEX etmNewTextMetricEx;  AXESLIST etmAxesList;} ENUMTEXTMETRIC, *PENUMTEXTMETRIC;MembersetmNewTextMetricEx    Name of a NEWTEXTMETRICEX structure, containing information about a physical font.etmAxesList    Name of an AXESLIST structure, containing information about the axes for the font. This is only used for multiple master fonts. RemarksENUMTEXTMETRIC is an extension of NEWTEXTMETRICEX that includes the axis information for a multiple master font.Windows 2000/XP: The EnumFonts, EnumFontFamilies, and EnumFontFamiliesEx functions have been modified to return pointers to the ENUMTEXTMETRIC and ENUMLOGFONTEXDV structures.Requirements  Windows NT/2000/XP/Vista: Included in Windows 2000 and later.  Windows 95/98/Me: Unsupported.  Header: Declared in Wingdi.h; include Windows.h.  Unicode: Declared as Unicode and ANSI structures.</body></comment><class><name>TreeRoot</name><environment>Graphics.Fonts</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>file groups </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Fonts UI Support</package></attributes></class><comment><class-id>Graphics.Fonts.TreeRoot</class-id><body>holds an OpenType file for a tree view</body></comment><class><name>ItemView</name><environment>Graphics.Fonts</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>item </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Fonts UI</package></attributes></class><comment><class-id>Graphics.Fonts.ItemView</class-id><body>Displays the details for an item</body></comment><class><name>Tableview</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.ItemView</super><private>false</private><indexed-type>none</indexed-type><inst-vars>descriptionText infoText titleText </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Fonts UI</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Tableview</class-id><body>Viewer for an OpenType Table</body></comment><class><name>FontExplorer</name><environment>Graphics.Fonts</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>font treeView detailsSubcanvas fileInfoText infoText </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Fonts UI</package></attributes></class><comment><class-id>Graphics.Fonts.FontExplorer</class-id><body>Exploration interface for Fonts</body></comment><class><name>CmapSubtable4</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.CmapLanguageSubtable</super><private>false</private><indexed-type>none</indexed-type><inst-vars>segments glyphIdArray indexToCode </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.CmapSubtable4</class-id><body>Format 4: Segment mapping to delta valuesThis is the Microsoft standard character to glyph index mapping table for fonts that support Unicode ranges other than the range [U+D800 - U+DFFF] (defined as Surrogates Area, in Unicode v 3.0) which is used for UCS-4 characters. If a font supports this character range (i.e. in turn supports the UCS-4 characters) a subtable in this format with a platform specific encoding ID 1 is yet needed, in addition to a subtable in format 12 with a platform specific encoding ID 10. Please see details on format 12 below, for fonts that support UCS-4 characters on Windows.This format is used when the character codes for the characters represented by a font fall into several contiguous ranges, possibly with holes in some or all of the ranges (that is, some of the codes in a range may not have a representation in the font). The format-dependent data is divided into three parts, which must occur in the following order:   1. A four-word header gives parameters for an optimized search of the segment list;   2. Four parallel arrays describe the segments (one segment for each contiguous range of codes);   3. A variable-length array of glyph IDs (unsigned words).(see http://www.microsoft.com/typography/otspec/cmap.htm for specifications)</body></comment><class><name>FontHeader</name><environment>Graphics.Fonts.OpenType</environment><super>Value</super><private>false</private><indexed-type>none</indexed-type><inst-vars>version fontRevision checkSumAdjustment flags unitsPerEm created modified glyphBBox macStyle lowestRecPPEM fontDirectionHint indexToLocFormat glyphDataFormat </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.FontHeader</class-id><body>head - Font HeaderThis table gives global information about the font. The bounding box values should be computed using only glyphs that have contours. Glyphs with no contours should be ignored for the purposes of these calculations.</body></comment><class><name>Encoding</name><environment>Graphics.Fonts.CFF</environment><super>Graphics.Fonts.CFF.Mapping</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CompactFontFormat</package></attributes></class><comment><class-id>Graphics.Fonts.CFF.Encoding</class-id><body>Superclass of the encoding formats</body></comment><class><name>PFMHeader</name><environment>Graphics.Fonts</environment><super>Value</super><private>false</private><indexed-type>none</indexed-type><inst-vars>copyright ascent internalLeading externalLeading italic underline strikeOut weight charSet pixHeight pitchAndFamily avgWidth maxWidth firstChar lastChar defaultChar breakChar </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Type1</package></attributes></class><comment><class-id>Graphics.Fonts.PFMHeader</class-id><body>The header section of a PFM file.This is only used for PostScript Type 1 fonts (PFM files are used in windows also for raster and other fonts).Fields fixed for this kind of PFM are implicit: the fixed value is hard coded and not stored or read from a variable.The implementation saves only the contents fields in values for later use.Internal file management data (offsets and counts) are read and written by the enclosing PostScriptFontMetrics.</body></comment><class><name>ByteReadStream</name><environment>Graphics.Fonts</environment><super>Core.ReadStream</super><private>false</private><indexed-type>none</indexed-type><inst-vars>bigEndian </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Fonts Basics</package></attributes></class><comment><class-id>Graphics.Fonts.ByteReadStream</class-id><body>experiment for a stream from which one can read binary data</body></comment><class><name>KernTrack</name><environment>Graphics.Fonts</environment><super>Value</super><private>false</private><indexed-type>none</indexed-type><inst-vars>degree minSize minAmount maxSize maxAmount </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Type1</package></attributes></class><comment><class-id>Graphics.Fonts.KernTrack</class-id><body>uniform kerning for a specified scaleThe KerningTracks table need not be present in a PFM file for a Type-1 font, if it exists it contains etmKernTracks (from the EXTTEXTMETRIC structure) entries. Each of these entries looks as follows:short ktDegreeThis field contains the amount to change the character spacing. Negative values mean closer together, positive values mean farther apart.short ktMinSizeThis field contains the minimum font height (in device units) for which to use linear track kerning.short ktMinAmountThis field contains the track kerning amount to use for font heights less or equal ktMinSize.short ktMaxSizeThis field contains the maximum font height (in device units) for which to use linear track kerning. For font heights between ktMinSize and ktMaxSize the track kerning amount has to increase linearily from ktMinAmount to ktMaxAmount.short ktMaxAmountThis field contains the track kerning amount to use for font heights greater or equal ktMaxSize. </body></comment><class><name>AdobeFontMetric</name><environment>Graphics.Fonts</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>font fileFormatVersion comment metricsSets fontName fullName familyName fontBBox weight version notice encodingScheme characterSet characters isBaseFont vVector isFixedV capHeight xHeight ascender descender stdHW stdVW directions charMetricsSize charMetrics trackKern kernPairsSize kernPairs composites </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>PostScript</category><attributes><package>Type1</package></attributes></class><comment><class-id>Graphics.Fonts.AdobeFontMetric</class-id><body>AdobeFontMetric represents the contents of an PostScript Type-1 Font Metric file (AFM).Only base fonts (Type-1) for now. No composite fonts (Type-0) in ACFM or CID.Also no master fonts in AMFM.All variables are privately set from the file, but publicly read as their proper Smalltalk values.Reference:Adobe Font Metrics FileFormat Specification	Version 4.1	7 October 1998		Adobe Systems Incorporated		Adobe Developer Technologies		345 Park Avenue		San Jose, CA 95110		http://partners.adobe.com/			PN LPS5004</body></comment><class><name>TwoByteOperator</name><environment>Graphics.Fonts.CFF</environment><super>Graphics.Fonts.CFF.Operator</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CompactFontFormat</package></attributes></class><comment><class-id>Graphics.Fonts.CFF.TwoByteOperator</class-id><body>An Operator encoded with two bytes (first byte is 12)</body></comment><class><name>TwoByteCharstringOperator</name><environment>Graphics.Fonts.CFF</environment><super>Graphics.Fonts.CFF.TwoByteOperator</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CompactFontFormat</package></attributes></class><comment><class-id>Graphics.Fonts.CFF.TwoByteCharstringOperator</class-id><body>two byte operator occuring in CharStrings</body></comment><class><name>Charset1</name><environment>Graphics.Fonts.CFF</environment><super>Graphics.Fonts.CFF.Charset</super><private>false</private><indexed-type>none</indexed-type><inst-vars>ranges </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CompactFontFormat</package></attributes></class><comment><class-id>Graphics.Fonts.CFF.Charset1</class-id><body>Each Range describes a group of sequential SIDs.The number of ranges is not explicitly specified in the font.Instead, software utilizing this data simply processes ranges until all glyphs in the font are covered.This format is particularly suited to charsets that are well ordered.</body></comment><class><name>Charset2</name><environment>Graphics.Fonts.CFF</environment><super>Graphics.Fonts.CFF.Charset1</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CompactFontFormat</package></attributes></class><comment><class-id>Graphics.Fonts.CFF.Charset2</class-id><body>Format 2 differs from format 1 only in the size of the nLeft field in each range.This format is most suitable for fonts with a large well-ordered charset — for example, for Asian CIDFonts.</body></comment><class><name>Vorg</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.Table</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Vorg</class-id><body>This table specifies the y coordinate of the vertical origin of every glyph in the font.This table may be optionally present only in CFF OpenType fonts. If present in TrueType OpenType fonts it must be ignored by font clients, just as any other unrecognized table would be. This is because this table is not needed for TrueType OpenType fonts: the Vertical Metrics ('vmtx') and Glyph Data ('glyf') tables in TrueType OpenType fonts provide all the information necessary to accurately calculate the y coordinate of a glyph's vertical origin. See the “Vertical Origin and Advance Height” section in the 'vmtx' table specification for more details.This table was added to version 1.3 of the OpenType specification. Note that the 'vmtx' and Vertical Header ('vhea') tables continue to be required for all OpenType fonts that support vertical writing. Advance heights must continue to be obtained from the 'vmtx' table; that is the only place they are stored.If a 'VORG' table is present in a CFF OpenType font, a font client may choose to obtain the y coordinate of a glyph's vertical origin either:   1. directly from the 'VORG', or:   2. by first calculating the top of the glyph's bounding box from the CFF charstring data and then adding to it the glyph's top side bearing from the 'vmtx' table.The former method offers the advantage of increased accuracy and efficiency, since bounding box results calculated from the CFF charstring as in the latter method can differ depending on the rounding decisions and data types of the bounding box algorithm. The latter method provides compatibility for font clients who are either unaware of or choose not to support the 'VORG'.Thus, the 'VORG' doesn't add any new font metric values per se; it simply improves accuracy and efficiency for CFF OpenType font clients, since the intermediate step of calculating bounding boxes from the CFF charstring is rendered unnecessary.See the section “OpenType CJK Font Guidelines“ for more information about constructing CJK (Chinese, Japanese, and Korean) fonts.</body></comment><class><name>Gsub</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.Table</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Gsub</class-id><body>The Glyph Substitution table (GSUB) contains information for substituting glyphs to render the scripts and language systems supported in a font. Many language systems require glyph substitutes. For example, in the Arabic script, the glyph shape that depicts a particular character varies according to its position in a word or text string. In other language systems, glyph substitutes are aesthetic options for the user, such as the use of ligature glyphs in the English language.</body></comment><class><name>Loca</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.Table</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Loca</class-id><body>The indexToLoc table stores the offsets to the locations of the glyphs in the font, relative to the beginning of the glyphData table. In order to compute the length of the last glyph element, there is an extra entry after the last valid index.By definition, index zero points to the “missing character,” which is the character that appears if a character is not found in the font. The missing character is commonly represented by a blank box or a space. If the font does not contain an outline for the missing character, then the first and second offsets should have the same value. This also applies to any other characters without an outline, such as the space character. If a glyph has no outline, then loca[n] = loca [n+1]. In the particular case of the last glyph(s), loca[n] will be equal the length of the glyph data ('glyf') table. The offsets must be in ascending order with loca[n] &lt;= loca[n+1].Most routines will look at the 'maxp' table to determine the number of glyphs in the font, but the value in the 'loca' table must agree.</body></comment><class><name>Ebsc</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.Table</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Ebsc</class-id><body>The 'EBSC' table provides a mechanism for describing embedded bitmaps which are created by scaling other embedded bitmaps. While this is the sort of thing that outline font technologies were invented to avoid, there are cases (small sizes of Kanji, for example) where scaling a bitmap produces a more legible font than scan-converting an outline. For this reason the 'EBSC' table allows a font to define a bitmap strike as a scaled version of another strike.</body></comment><class><name>Pclt</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.Table</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Pclt</class-id><body>The 'PCLT' table is strongly discouraged for OpenType™ fonts with TrueType outlines. Extra information on many of these fields can be found in the HP PCL 5 Printer Language Technical Reference Manual  available from Hewlett-Packard Boise Printer Division.</body></comment><class><name>Hdmx</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.Table</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Hdmx</class-id><body>The hdmx table relates to OpenType™ fonts with TrueType outlines. The Horizontal Device Metrics table stores integer advance widths scaled to particular pixel sizes. This allows the font manager to build integer width tables without calling the scaler for each glyph. Typically this table contains only selected screen sizes. This table is sorted by pixel size. The checksum for this table applies to both subtables listed.Note that for non-square pixel grids, the character width (in pixels) will be used to determine which device record to use. For example, a 12 point character on a device with a resolution of 72x96 would be 12 pixels high and 16 pixels wide. The hdmx device record for 16 pixel characters would be used.If bit 4 of the flag field in the 'head' table is not set, then it is assumed that the font scales linearly; in this case an 'hdmx' table is not necessary and should not be built. If bit 4 of the flag field is set, then one or more glyphs in the font are assumed to scale nonlinearly. In this case, performance can be improved by including the 'hdmx' table with one or more important DeviceRecord's for important sizes. Please see the chapter “Recommendations for OpenType Fonts” for more detail.</body></comment><class><name>Dsig</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.Table</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Dsig</class-id><body>The DSIG table contains the digital signature of the OpenType™ font. Signature formats are widely documented and rely on a key pair architecture. Software developers, or publishers posting material on the Internet, create signatures using a private key. Operating systems or applications authenticate the signature using a public key.The W3C and major software and operating system developers have specified security standards that describe signature formats, specify secure collections of web objects, and recommend authentication architecture. OpenType fonts with signatures will support these standards.OpenType fonts offer many security features:    * Operating systems and browsing applications can identify the source and integrity of font files before using them,    * Font developers can specify embedding restrictions in OpenType fonts, and these restrictions cannot be altered in a font signed by the developer.The enforcement of signatures is an administrative policy, enabled by the operating system. Windows will soon require installed software components, including fonts, to be signed. Internet browsers will also give users and administrators the ability to screen out unsigned objects obtained on-line, including web pages, fonts, graphics, and software components.Anyone can obtain identity certificates and encryption keys from a certifying agency, such as Verisign or GTE's Cybertrust, free or at a very low cost.</body></comment><class><name>Cblc</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.Table</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Cblc</class-id><body>CBLC - Color Bitmap Location TableTwo new tables are used to embed color bitmaps in OFF fonts. They are the 'CBLC' table, backward compatible with the existing EBLC table for embedded bitmap locators, and the 'CBDT' table for embedded color bitmap data.The 'CBLC' table begins with a header containing the table version and number of strikes. An OFF font may have one or more strikes embedded in the 'CBDT' table.</body></comment><class><name>CmapLanguageSubtable32</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.CmapLanguageSubtable</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.CmapLanguageSubtable32</class-id><body>A cmap Subtable with a 32 bit header</body></comment><class><name>CmapSubtable10</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.CmapLanguageSubtable32</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.CmapSubtable10</class-id><body>Format 10: Trimmed arrayFormat 10 is a bit like format 6, in that it defines a trimmed array for a tight range of 32-bit character codes:Type	Name	DescriptionUSHORT	format	Subtable format; set to 10.USHORT	reserved	Reserved; set to 0ULONG	length	Byte length of this subtable (including the header)ULONG	language	Please see “Note on the language field in 'cmap' subtables“ in this document.ULONG	startCharCode	First character code coveredULONG	numChars	Number of character codes coveredUSHORT	glyphs[]	Array of glyph indices for the character codes coveredThis format is not supported by Microsoft.(see http://www.microsoft.com/typography/otspec/cmap.htm for specifications)</body></comment><class><name>CFFTests</name><environment>Graphics.Fonts.CFF</environment><super>SUnit.TestCase</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Fonts tests</package></attributes></class><class><name>NamedValue</name><environment>WindowsFonts</environment><super>Value</super><private>false</private><indexed-type>none</indexed-type><inst-vars>name value </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Windows Fonts</category><attributes><package>Fonts for Windows</package></attributes></class><comment><class-id>WindowsFonts.NamedValue</class-id><body>NamedValue represents constants with a UI name and a value</body></comment><class><name>FontSignature</name><environment>WindowsFonts</environment><super>Value</super><private>false</private><indexed-type>none</indexed-type><inst-vars>usb csb </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Windows Fonts</category><attributes><package>Fonts for Windows</package></attributes></class><comment><class-id>WindowsFonts.FontSignature</class-id><body>&lt;http://msdn2.microsoft.com/en-us/library/ms776424.aspx&gt;International FeaturesFONTSIGNATUREContains information identifying the code pages and Unicode subranges for which a given font provides glyphs.typedef struct tagFONTSIGNATURE {  DWORD  fsUsb[4];  DWORD  fsCsb[2];} FONTSIGNATURE, *PFONTSIGNATURE; MembersfsUsb    A 128-bit Unicode subset bitfield (USB) identifying up to 126 Unicode subranges. Each bit, except the two most significant bits, represents a single subrange. The most significant bit is always 1 and identifies the bitfield as a font signature; the second most significant bit is reserved and must be 0. Unicode subranges are numbered in accordance with the ISO 10646 standard. For more information, see Unicode Subset Bitfields.fsCsb    A 64-bit, code-page bitfield (CPB) that identifies a specific character set or code page. Code pages are in the lower 32 bits of this bitfield. The high 32 are used for non-Windows code pages. For more information, see Code Page Bitfields. RemarksGDI relies on Windows code pages fitting within a 32-bit value. Furthermore, the highest 2 bits within this value are reserved for GDI internal use and may not be assigned to code pages.Requirements  Windows NT/2000/XP/Vista: Included in Windows NT 4.0 and later.  Windows 95/98/Me: Included in Windows 95 and later.  Header: Declared in Wingdi.h; include Windows.h.</body></comment><class><name>Pitch</name><environment>WindowsFonts</environment><super>WindowsFonts.NamedValue</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Windows Fonts</category><attributes><package>Fonts for Windows</package></attributes></class><comment><class-id>WindowsFonts.Pitch</class-id><body>Pitch is a NamedValueSpecifies the pitch of the font. The two low-order bits specify the pitch of the font and can be one of the following values.0 DEFAULT_PITCH1 FIXED_PITCH2 VARIABLE_PITCH</body></comment><class><name>TextMetric</name><environment>WindowsFonts</environment><super>Value</super><private>false</private><indexed-type>none</indexed-type><inst-vars>height ascent descent internalLeading externalLeading aveCharWidth maxCharWidth weight overhang digitizedAspectX digitizedAspectY firstChar lastChar defaultChar breakChar italic underlined struckOut pitchAndFamily charSet </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>smallCharts Font Tools</category><attributes><package>Fonts for Windows</package></attributes></class><comment><class-id>WindowsFonts.TextMetric</class-id><body>&lt;http://msdn2.microsoft.com/en-us/library/ms534202.aspx&gt;The TEXTMETRIC structure contains basic information about a physical font. All sizes are specified in logical units; that is, they depend on the current mapping mode of the display context.typedef struct tagTEXTMETRIC {   LONG tmHeight;   LONG tmAscent;   LONG tmDescent;   LONG tmInternalLeading;   LONG tmExternalLeading;   LONG tmAveCharWidth;   LONG tmMaxCharWidth;   LONG tmWeight;   LONG tmOverhang;   LONG tmDigitizedAspectX;   LONG tmDigitizedAspectY;   TCHAR tmFirstChar;   TCHAR tmLastChar;   TCHAR tmDefaultChar;   TCHAR tmBreakChar;   BYTE tmItalic;   BYTE tmUnderlined;   BYTE tmStruckOut;   BYTE tmPitchAndFamily;   BYTE tmCharSet; } TEXTMETRIC, *PTEXTMETRIC; MemberstmHeight    Specifies the height (ascent + descent) of characters. tmAscent    Specifies the ascent (units above the base line) of characters. tmDescent    Specifies the descent (units below the base line) of characters. tmInternalLeading    Specifies the amount of leading (space) inside the bounds set by the tmHeight member. Accent marks and other diacritical characters may occur in this area. The designer may set this member to zero. tmExternalLeading    Specifies the amount of extra leading (space) that the application adds between rows. Since this area is outside the font, it contains no marks and is not altered by text output calls in either OPAQUE or TRANSPARENT mode. The designer may set this member to zero. tmAveCharWidth    Specifies the average width of characters in the font (generally defined as the width of the letter x). This value does not include the overhang required for bold or italic characters. tmMaxCharWidth    Specifies the width of the widest character in the font. tmWeight    Specifies the weight of the font. tmOverhang    Specifies the extra width per string that may be added to some synthesized fonts. When synthesizing some attributes, such as bold or italic, graphics device interface (GDI) or a device may have to add width to a string on both a per-character and per-string basis. For example, GDI makes a string bold by expanding the spacing of each character and overstriking by an offset value; it italicizes a font by shearing the string. In either case, there is an overhang past the basic string. For bold strings, the overhang is the distance by which the overstrike is offset. For italic strings, the overhang is the amount the top of the font is sheared past the bottom of the font.    The tmOverhang member enables the application to determine how much of the character width returned by a GetTextExtentPoint32 function call on a single character is the actual character width and how much is the per-string extra width. The actual width is the extent minus the overhang. tmDigitizedAspectX    Specifies the horizontal aspect of the device for which the font was designed. tmDigitizedAspectY    Specifies the vertical aspect of the device for which the font was designed. The ratio of the tmDigitizedAspectX and tmDigitizedAspectY members is the aspect ratio of the device for which the font was designed. tmFirstChar    Specifies the value of the first character defined in the font. tmLastChar    Specifies the value of the last character defined in the font. tmDefaultChar    Specifies the value of the character to be substituted for characters not in the font. tmBreakChar    Specifies the value of the character that will be used to define word breaks for text justification. tmItalic    Specifies an italic font if it is nonzero. tmUnderlined    Specifies an underlined font if it is nonzero. tmStruckOut    Specifies a strikeout font if it is nonzero. tmPitchAndFamily    Specifies information about the pitch, the technology, and the family of a physical font.    The four low-order bits of this member specify information about the pitch and the technology of the font. A constant is defined for each of the four bits.    Constant 	Meaning    TMPF_FIXED_PITCH 	If this bit is set the font is a variable pitch font. If this bit is clear the font is a fixed pitch font. Note very carefully that those meanings are the opposite of what the constant name implies.    TMPF_VECTOR 	If this bit is set the font is a vector font.    TMPF_TRUETYPE 	If this bit is set the font is a TrueType font.    TMPF_DEVICE 	If this bit is set the font is a device font.    An application should carefully test for qualities encoded in these low-order bits, making no arbitrary assumptions. For example, besides having their own bits set, TrueType and PostScript fonts set the TMPF_VECTOR bit. A monospace bitmap font has all of these low-order bits clear; a proportional bitmap font sets the TMPF_FIXED_PITCH bit. A Postscript printer device font sets the TMPF_DEVICE, TMPF_VECTOR, and TMPF_FIXED_PITCH bits.    The four high-order bits of tmPitchAndFamily designate the font's font family. An application can use the value 0xF0 and the bitwise AND operator to mask out the four low-order bits of tmPitchAndFamily, thus obtaining a value that can be directly compared with font family names to find an identical match. For information about font families, see the description of the LOGFONT structure. tmCharSet    Specifies the character set of the font. The character set can be one of the following values.    ANSI_CHARSET    BALTIC_CHARSET    CHINESEBIG5_CHARSET    DEFAULT_CHARSET    EASTEUROPE_CHARSET    GB2312_CHARSET    GREEK_CHARSET    HANGUL_CHARSET    MAC_CHARSET    OEM_CHARSET    RUSSIAN_CHARSET    SHIFTJIS_CHARSET    SYMBOL_CHARSET    TURKISH_CHARSET    VIETNAMESE_CHARSET    Korean language edition of Windows:    JOHAB_CHARSET    Middle East language edition of Windows:    ARABIC_CHARSET    HEBREW_CHARSET    Thai language edition of Windows:    THAI_CHARSET Requirements  Windows NT/2000/XP/Vista: Included in Windows NT 3.1 and later.  Windows 95/98/Me: Included in Windows 95 and later.  Header: Declared in Wingdi.h; include Windows.h.  Unicode: Declared as Unicode and ANSI structures.</body></comment><class><name>NewTextMetric</name><environment>WindowsFonts</environment><super>WindowsFonts.TextMetric</super><private>false</private><indexed-type>none</indexed-type><inst-vars>flags sizeEM cellHeight avgWidth </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>smallCharts Font Tools</category><attributes><package>Fonts for Windows</package></attributes></class><comment><class-id>WindowsFonts.NewTextMetric</class-id><body>&lt;http://msdn2.microsoft.com/en-us/library/ms533970.aspx&gt;The NEWTEXTMETRIC structure contains data that describes a physical font.typedef struct tagNEWTEXTMETRIC {   LONG   tmHeight;   LONG   tmAscent;   LONG   tmDescent;   LONG   tmInternalLeading;   LONG   tmExternalLeading;   LONG   tmAveCharWidth;   LONG   tmMaxCharWidth;   LONG   tmWeight;   LONG   tmOverhang;   LONG   tmDigitizedAspectX;   LONG   tmDigitizedAspectY;   TCHAR  tmFirstChar;   TCHAR  tmLastChar;   TCHAR  tmDefaultChar;   TCHAR  tmBreakChar;   BYTE   tmItalic;   BYTE   tmUnderlined;   BYTE   tmStruckOut;   BYTE   tmPitchAndFamily;   BYTE   tmCharSet;   DWORD  ntmFlags;   UINT   ntmSizeEM;   UINT   ntmCellHeight;   UINT   ntmAvgWidth; } NEWTEXTMETRIC, *PNEWTEXTMETRIC; MemberstmHeight    Specifies the height (ascent + descent) of characters. tmAscent    Specifies the ascent (units above the base line) of characters. tmDescent    Specifies the descent (units below the base line) of characters. tmInternalLeading    Specifies the amount of leading (space) inside the bounds set by the tmHeight member. Accent marks and other diacritical characters may occur in this area. The designer may set this member to zero. tmExternalLeading    Specifies the amount of extra leading (space) that the application adds between rows. Since this area is outside the font, it contains no marks and is not altered by text output calls in either OPAQUE or TRANSPARENT mode. The designer may set this member to zero. tmAveCharWidth    Specifies the average width of characters in the font (generally defined as the width of the letter x). This value does not include overhang required for bold or italic characters. tmMaxCharWidth    Specifies the width of the widest character in the font. tmWeight    Specifies the weight of the font. tmOverhang    Specifies the extra width per string that may be added to some synthesized fonts. When synthesizing some attributes, such as bold or italic, graphics device interface (GDI) or a device may have to add width to a string on both a per-character and per-string basis. For example, GDI makes a string bold by expanding the spacing of each character and overstriking by an offset value; it italicizes a font by shearing the string. In either case, there is an overhang past the basic string. For bold strings, the overhang is the distance by which the overstrike is offset. For italic strings, the overhang is the amount the top of the font is sheared past the bottom of the font.    The tmOverhang member enables the application to determine how much of the character width returned by a GetTextExtentPoint32 function call on a single character is the actual character width and how much is the per-string extra width. The actual width is the extent minus the overhang. tmDigitizedAspectX    Specifies the horizontal aspect of the device for which the font was designed. tmDigitizedAspectY    Specifies the vertical aspect of the device for which the font was designed. The ratio of the tmDigitizedAspectX and tmDigitizedAspectY members is the aspect ratio of the device for which the font was designed. tmFirstChar    Specifies the value of the first character defined in the font. tmLastChar    Specifies the value of the last character defined in the font. tmDefaultChar    Specifies the value of the character to be substituted for characters that are not in the font. tmBreakChar    Specifies the value of the character to be used to define word breaks for text justification. tmItalic    Specifies an italic font if it is nonzero. tmUnderlined    Specifies an underlined font if it is nonzero. tmStruckOut    Specifies a strikeout font if it is nonzero. tmPitchAndFamily    Specifies the pitch and family of the selected font. The low-order bit (bit 0) specifies the pitch of the font. If it is 1, the font is variable pitch (or proportional). If it is 0, the font is fixed pitch (or monospace). Bits 1 and 2 specify the font type. If both bits are 0, the font is a raster font; if bit 1 is 1 and bit 2 is 0, the font is a vector font; if bit 1 is 0 and bit 2 is set, or if both bits are 1, the font is some other type. Bit 3 is 1 if the font is a device font; otherwise, it is 0.    The four high-order bits designate the font family. The tmPitchAndFamily member can be combined with the hexadecimal value 0xF0 by using the bitwise AND operator and can then be compared with the font family names for an identical match. For more information about the font families, see LOGFONT. tmCharSet    Specifies the character set of the font. ntmFlags    Specifies whether the font is italic, underscored, outlined, bold, and so forth. May be any reasonable combination of the following values.    Bit 	Name 	Meaning    0 	NTM_ITALIC 	italic    5 	NTM_BOLD 	bold    8 	NTM_REGULAR 	regular    16 	NTM_NONNEGATIVE_AC 	Windows 2000/XP: no glyph in a font at any size has a negative A or C space.    17 	NTM_PS_OPENTYPE 	Windows 2000/XP: PostScript OpenType font    18 	NTM_TT_OPENTYPE 	Windows 2000/XP: TrueType OpenType font    19 	NTM_MULTIPLEMASTER 	Windows 2000/XP: multiple master font    20 	NTM_TYPE1 	Windows 2000/XP: Type 1 font    21 	NTM_DSIG 	Windows 2000/XP: font with a digital signature. This allows traceability and ensures that the font has been tested and is not corruptedntmSizeEM    Specifies the size of the em square for the font. This value is in notional units (that is, the units for which the font was designed). ntmCellHeight    Specifies the height, in notional units, of the font. This value should be compared with the value of the ntmSizeEM member. ntmAvgWidth    Specifies the average width of characters in the font, in notional units. This value should be compared with the value of the ntmSizeEM member. RemarksThe last four members of the NEWTEXTMETRIC structure are not included in the TEXTMETRIC structure; in all other respects, the structures are identical.The sizes in the NEWTEXTMETRIC structure are typically specified in logical units; that is, they depend on the current mapping mode of the display context.Requirements  Windows NT/2000/XP/Vista: Included in Windows NT 3.1 and later.  Windows 95/98/Me: Included in Windows 95 and later.  Header: Declared in Wingdi.h; include Windows.h.  Unicode: Declared as Unicode and ANSI structures.</body></comment><class><name>Tablegroup</name><environment>Graphics.Fonts.OpenType</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>name tables file </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Fonts UI Support</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Tablegroup</class-id><body>tree node to group OpenType tables</body></comment><class><name>GlyphView</name><environment>Graphics.Fonts</environment><super>UI.View</super><private>false</private><indexed-type>none</indexed-type><inst-vars>font glyph scale translation </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Fonts UI</package></attributes></class><comment><class-id>Graphics.Fonts.GlyphView</class-id><body>displays a glyph</body></comment><class><name>Win32Fontsupport</name><environment>WindowsFonts</environment><super>External.ExternalInterface</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports>			private WindowsFonts.Win32FontsupportDictionary.*			</imports><category>BOSS</category><attributes><includeFiles></includeFiles><includeDirectories></includeDirectories><libraryFiles><item>gdi32.dll</item> <item>user32.dll</item> <item>comdlg32.dll</item> <item>Kernel32.dll</item></libraryFiles><libraryDirectories></libraryDirectories><beVirtual>false</beVirtual><optimizationLevel>full</optimizationLevel><package>Fonts for Windows</package></attributes></class><comment><class-id>WindowsFonts.Win32Fontsupport</class-id><body>C interface to the Windows Font API.Defines ChooseFont and EnumFontFamilies</body></comment><class><name>FontProgramHeader</name><environment>Graphics.Fonts</environment><super>Value</super><private>false</private><indexed-type>none</indexed-type><inst-vars>familyName fontBBox contents </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Type1</package></attributes></class><comment><class-id>Graphics.Fonts.FontProgramHeader</class-id><body>An Adobe Type 1 Font Program ascii headerInstances correspond to the header contents of an PFA file (or windows PFB file, which has identical content).Documented in "Adobe Type 1 Font Format", 1990, ISBN 0-201-57044-0online at http://partners.adobe.com/public/developer/en/font/T1_SPEC.PDFParsing the information from these files is provisorial. Needs a proper PostScript interpreter to do it right.</body></comment><class><name>CmapSubtable13</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.CmapLanguageSubtable32</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.CmapSubtable13</class-id><body>Format 13: Last Resort FontThis subtable deals with situations where the same glyph is used for dozens or even tens of thousands of consecutive characters, from one end of Unicode to the other. This is common when creating a “Last Resort” font. Here's the subtable format:Type		Name		DescriptionUSHORT	format		Subtable format; set to 13.USHORT	reserved	Reserved; set to 0ULONG		length		Byte length of this subtable (including the header)ULONG		language	Please see “Note on the language field in 'cmap' subtables“ in this document.ULONG		nGroups	Number of groupings which followHere follow the individual groups, each of which has the following format:Type		Name			DescriptionULONG		startCharCode	First character code in this groupULONG		endCharCode	Last character code in this groupULONG		glyphID			Glyph index to be used for all the characters in the group's range.(see http://www.microsoft.com/typography/otspec/cmap.htm for specifications)</body></comment><class><name>PairKern</name><environment>Graphics.Fonts</environment><super>Value</super><private>false</private><indexed-type>none</indexed-type><inst-vars>first second kernAmount </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Type1</package></attributes></class><comment><class-id>Graphics.Fonts.PairKern</class-id><body>The kerning between two charactersThe KerningPairs table need not be present in a PFM file for a Type-1 font, if it exists it contains etmKernPairs (from the EXTTEXTMETRIC structure) entries. Each of these entries looks as follows:BYTE kpFirstThis field contains the first (left) character of the kerning pair.BYTE kpSecondThis field contains the second (right) character of the kerning pair.short kpKernAmountThis field contains the kerning amount in font units, the value is mostly negative. The array of KERNPAIR structures is sorted in increasing order by the kpPair.both field.kpPair.bothSpecifies a WORD in which the first character in the kerning pair is in the low-order byte and the second character is in the high-order byte</body></comment><class><name>PostScriptFontMetrics</name><environment>Graphics.Fonts</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>font header extTextMetrics faceName driverInfo extentTable kerningPairs kerningTracks </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Type1</package></attributes></class><comment><class-id>Graphics.Fonts.PostScriptFontMetrics</class-id><body>the Smalltalk value of a .pfm (PostScript Font Metrics) file.The binary file is used by Windows with a .pfb file to install a Type 1 font.The implementation saves only the contents fields in values for later use.Internal file management data (offsets and counts) are discarted, since they can be reproduced from the contents.</body></comment><class><name>TwoByteDictOperator</name><environment>Graphics.Fonts.CFF</environment><super>Graphics.Fonts.CFF.TwoByteOperator</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CompactFontFormat</package></attributes></class><comment><class-id>Graphics.Fonts.CFF.TwoByteDictOperator</class-id><body>two byte operator occuring in DICTs</body></comment><class><name>TopDict</name><environment>Graphics.Fonts.CFF</environment><super>Graphics.Fonts.CFF.Dict</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CompactFontFormat</package></attributes></class><comment><class-id>Graphics.Fonts.CFF.TopDict</class-id><body>Top DICTThe names of the Top DICT operators are, where possible, the same as the corresponding Type 1 dict key.Several operators have been derived from FontInfo dict keys but have been grouped together with the Top DICT operators for simplicity.</body></comment><class><name>CIDTopDict</name><environment>Graphics.Fonts.CFF</environment><super>Graphics.Fonts.CFF.TopDict</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CompactFontFormat</package></attributes></class><comment><class-id>Graphics.Fonts.CFF.CIDTopDict</class-id><body>Top DICT for CIDFonts</body></comment><class><name>CharstringOperator</name><environment>Graphics.Fonts.CFF</environment><super>Graphics.Fonts.CFF.Operator</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CompactFontFormat</package></attributes></class><comment><class-id>Graphics.Fonts.CFF.CharstringOperator</class-id><body>single byte operator occuring in CharStrings</body></comment><class><name>Cvt</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.Table</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Cvt</class-id><body>This table contains a list of values that can be referenced by instructions. They can be used, among other things, to control characteristics for different glyphs. The length of the table must be an integral number of FWORD units.</body></comment><class><name>Vdmx</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.Table</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Vdmx</class-id><body>The VDMX table relates to OpenType™ fonts with TrueType outlines. Under Windows, the usWinAscent and usWinDescent values from the 'OS/2' table will be used to determine the maximum black height for a font at any given size. Windows calls this distance the Font Height. Because TrueType instructions can lead to Font Heights that differ from the actual scaled and rounded values, basing the Font Height strictly on the yMax and yMin can result in “lost pixels.” Windows will clip any pixels that extend above the yMax or below the yMin. In order to avoid grid fitting the entire font to determine the correct height, the VDMX table has been defined.</body></comment><class><name>Font</name><environment>Graphics.Fonts.CFF</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>file name topDict encoding charset privateDict charStrings strings localSubr globalSubr </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CompactFontFormat</package></attributes></class><comment><class-id>Graphics.Fonts.CFF.Font</class-id><body>A font stored in a font set of a CFF file</body></comment><class><name>CIDFont</name><environment>Graphics.Fonts.CFF</environment><super>Graphics.Fonts.CFF.Font</super><private>false</private><indexed-type>none</indexed-type><inst-vars>fontDicts fdSelect </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CompactFontFormat</package></attributes></class><comment><class-id>Graphics.Fonts.CFF.CIDFont</class-id><body>The representation of a CIDFont is designed to be separable from its encoding. In keeping with this strategy, the CFF representation does not include any encoding information which instead resides in a CMap file. If a need arises for a more compact representation of the CMap file, CFF can be extended to accommodate it.A CFF CIDFont has the CIDFontName in the Name INDEX and a corresponding Top DICT. The Top DICT begins with ROS operator which specifies the Registry-Ordering-Supplement for the font. This will indicate to a CFF parser that special CID processing should be applied to this font. Specifically:• The FDArray operator is expected to be present, with a single argument specifying an offset to the Font DICT INDEX. Each Font DICT in this array specifies information unique to a particular group of glyphs in the font. The mapping of glyphs to Font DICTs is specified by the FDSelect structure described below. Each Font DICT will specify a corresponding Private DICT with the Private DICT operator.• The charset data, although in the same format as non-CIDFonts, will represent CIDs rather than SIDs, i.e. charstrings are “named” by CIDs in a CIDFont. In a complete CIDFont the charset table will specify an identity mapping (where GID equals CID for all glyphs) as a single range beginning at CID 1 (CID 0, the .notdef glyph, is omitted) that covers all the glyphs in the font. Subset CIDFonts will generally need to use a more complex charset table representing a non-identity mapping (where CID doesn’t equal GID).• The Top DICT will include an FDSelect operator specifying an offset to a charset-like data structure (see next section) which contains a, possibly range-encoded, list of indexes, from which a single index may be derived for each glyph. The index identifies the Font DICT, and therefore the Private DICT, to be used when rasterizing a glyph.• The encoding data is omitted (see above); no Encoding operator will be present and the default StandardEncoding should not be applied.There are no predefined charsets for CID fonts.</body></comment><class><name>Subroutine</name><environment>Graphics.Fonts.CFF</environment><super>Value</super><private>false</private><indexed-type>none</indexed-type><inst-vars>bytes </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CompactFontFormat</package></attributes></class><comment><class-id>Graphics.Fonts.CFF.Subroutine</class-id><body>Both Type 1 and Type 2 charstrings support the notion of subroutines or subrs.A subr is typically a sequence of charstring bytes representing a sub-program that occurs in more than one place in a font’s charstring data.This subr may be stored once but referenced many times from within one or more charstrings by the use of the callsubr operator whose operand is the number of the subr to be called.The subrs are local to a particular font and cannot be shared between fonts.Type 2 charstrings also permit global subrs which function in the same way but are called by the callgsubr operator and may be shared across fonts.</body></comment><class><name>CmapSubtable14</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.CmapSubtable</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.CmapSubtable14</class-id><body>Format 14: Unicode Variation SequencesSubtable format 14 specifies the Unicode Variation Sequences (UVSes) supported by the font. A Variation Sequence, according to the Unicode Standard, comprises a base character followed by a variation selector; e.g. &lt;U+82A6, U+E0101&gt;.The subtable partitions the UVSes supported by the font into two categories: “default” and “non-default” UVSes. Given a UVS, if the glyph obtained by looking up the base character of that sequence in the Unicode cmap subtable (i.e. the UCS-4 or the BMP cmap subtable) is the glyph to use for that sequence, then the sequence is a “default” UVS; otherwise it is a “non-default” UVS, and the glyph to use for that sequence is specified in the format 14 subtable itself.The example at the bottom of the page shows how a font vendor can use format 14 for a JIS-2004–aware font.(see http://www.microsoft.com/typography/otspec/cmap.htm for specifications)</body></comment><class><name>Font</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.Font</super><private>false</private><indexed-type>none</indexed-type><inst-vars>filename sfntVersion numTables searchRange entrySelector rangeShift tables glyphs tabularGlyphIds header </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Font</class-id><body>holds an OpenType font contentThe data types are used in the OpenType font file. All OpenType fonts use Motorola-style byte ordering (Big Endian).(see http://www.microsoft.com/typography/otspec/default.htm for specifications)</body></comment><class><name>OS2</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.Table</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.OS2</class-id><body>The OS/2 table consists of a set of metrics that are required in OpenType fonts.</body></comment><class><name>ScriptRecord</name><environment>Graphics.Fonts.OpenType</environment><super>Value</super><private>false</private><indexed-type>none</indexed-type><inst-vars>tag offset </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.ScriptRecord</class-id><body>The ScriptRecord array stores the records alphabetically by a ScriptTag that identifies the script. Each ScriptRecord consists of a ScriptTag and an offset to a Script table.</body></comment><class><name>Kern</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.Table</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Kern</class-id><body>NOTE: Apple has extended the definition of the 'kern' table to provide additional functionality. The Apple extensions are not supported on Windows. Fonts intended for cross-platform use or for the Windows platform in general should conform to the 'kern' table format specified here.The kerning table contains the values that control the intercharacter spacing for the glyphs in a font. There is currently no system level support for kerning (other than returning the kern pairs and kern values). OpenType™ fonts containing CFF outlines are not supported by the 'kern' table and must use the 'GPOS' OpenType Layout table.Each subtable varies in format, and can contain information for vertical or horizontal text, and can contain kerning values or minimum values. Kerning values are used to adjust inter-character spacing, and minimum values are used to limit the amount of adjustment that the scaler applies by the combination of kerning and tracking. Because the adjustments are additive, the order of the subtables containing kerning values is not important. However, tables containing minimum values should usually be placed last, so that they can be used to limit the total effect of other subtables.</body></comment><class><name>Gpos</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.Table</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Gpos</class-id><body>The Glyph Positioning table (GPOS) provides precise control over glyph placement for sophisticated text layout and rendering in each script and language system that a font supports.</body></comment><class><name>FontProgramTests</name><environment>Graphics.Fonts</environment><super>SUnit.TestCase</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Fonts tests</package></attributes></class><class><name>OpenTypeTests</name><environment>Graphics.Fonts.OpenType</environment><super>SUnit.TestCase</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Fonts tests</package></attributes></class><class><name>CharacterDecodingTests</name><environment>Graphics</environment><super>SUnit.TestCase</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Fonts tests</package></attributes></class><class><name>SystemFont</name><environment>WindowsFonts</environment><super>Value</super><private>false</private><indexed-type>none</indexed-type><inst-vars>type font metric </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>smallCharts Font Tools</category><attributes><package>Fonts for Windows</package></attributes></class><comment><class-id>WindowsFonts.SystemFont</class-id><body>SystemFont was found on the system with #EnumFontFamiliesEx.Combination of a LogFont and its TextMetric.</body></comment><class><name>CharactersNode</name><environment>Graphics.Fonts.CFF</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>object </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Fonts UI Support</package></attributes></class><comment><class-id>Graphics.Fonts.CFF.CharactersNode</class-id><body>holds an Object</body></comment><class><name>TextView</name><environment>Graphics.Fonts</environment><super>Graphics.Fonts.ItemView</super><private>false</private><indexed-type>none</indexed-type><inst-vars>textHolder </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Fonts UI</package></attributes></class><comment><class-id>Graphics.Fonts.TextView</class-id><body>Displays simple text.Gets the contents from its item with: #descriptionText</body></comment><class><name>CharMetricEncodingTests</name><environment>Graphics.Fonts</environment><super>SUnit.TestCase</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>SmallCharts Testing</category><attributes><package>Fonts tests</package></attributes></class><class><name>FontError</name><environment>Graphics.Fonts</environment><super>Core.Error</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Fonts Basics</package></attributes></class><comment><class-id>Graphics.Fonts.FontError</class-id><body>errors related to the Fonts functionality</body></comment><class><name>FontNotFound</name><environment>Graphics.Fonts</environment><super>Graphics.Fonts.FontError</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Fonts Basics</package></attributes></class><comment><class-id>Graphics.Fonts.FontNotFound</class-id><body>the font was not found in the registry for loaded fonts</body></comment><class><name>FontSet</name><environment>Graphics.Fonts.CFF</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>version fonts </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CompactFontFormat</package></attributes></class><comment><class-id>Graphics.Fonts.CFF.FontSet</class-id><body>"The Compact Font Format Specification", Adobe Technical Note #5176.This document describes the specification of a font format that is suitable for compactly representing one or more Type 1 or CID-keyed fonts. Unlike previous Type 1 and CID-keyed font formats, CFF allows multiple fonts to be stored together in a unit called a FontSet. Principal space savings are a result of using a compact binary representation for most of the information, sharing of common data between fonts, and defaulting frequently occurring data.The CFF format is designed to be used in conjunction with Type 2 charstrings for the character description procedures (see Adobe Technical Note #5177: “The Type 2 Charstring Format”).The design supports the embedding of PostScript® language code which permits additional flexibility and extensibility of the format when used in printer environments.</body></comment><class><name>Glyphs</name><environment>Graphics.Fonts</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>glyphs font </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Type1</package></attributes></class><comment><class-id>Graphics.Fonts.Glyphs</class-id><body>a container for all glyphs of a font</body></comment><class><name>StandardEncoding</name><environment>Graphics.Fonts.CFF</environment><super>Graphics.Fonts.CFF.Encoding</super><private>false</private><indexed-type>none</indexed-type><inst-vars>name codes </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CompactFontFormat</package></attributes></class><comment><class-id>Graphics.Fonts.CFF.StandardEncoding</class-id><body>A standard encoding vector (Array[256])</body></comment><class><name>CustomFont</name><environment>Graphics.Fonts</environment><super>Graphics.Fonts.Type1Font</super><private>false</private><indexed-type>none</indexed-type><inst-vars>filename program </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Type1</package></attributes></class><comment><class-id>Graphics.Fonts.CustomFont</class-id><body>Non-standard Type 1 fontThe metrics and font program are read from the windows .pfm and .pfb files.The file name stem is remembered as #filename</body></comment><class><name>Type1Font</name><environment>Graphics.Fonts.CFF</environment><super>Graphics.Fonts.CFF.Font</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CompactFontFormat</package></attributes></class><comment><class-id>Graphics.Fonts.CFF.Type1Font</class-id><body>A Type-1 font stored in a font set of a CFF file</body></comment><class><name>Eblc</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.Table</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Eblc</class-id><body>Three tables are used to embed bitmaps in OpenType™ fonts. They are the 'EBLC' table for embedded bitmap locators, the 'EBDT' table for embedded bitmap data, and the 'EBSC' table for embedded bitmap scaling information. OpenType embedded bitmaps are called 'sbits' (for “scaler bitmaps”). A set of bitmaps for a face at a given size is called a strike.The 'EBLC' table identifies the sizes and glyph ranges of the sbits, and keeps offsets to glyph bitmap data in indexSubTables. The 'EBDT' table then stores the glyph bitmap data, also in a number of different possible formats. Glyph metrics information may be stored in either the 'EBLC' or 'EBDT' table, depending upon the indexSubTable and glyph bitmap formats. The 'EBSC' table identifies sizes that will be handled by scaling up or scaling down other sbit sizes.The 'EBLC' table uses the same format as the Apple Apple Advanced Typography (AAT) 'bloc' table.</body></comment><class><name>PrivateDict</name><environment>Graphics.Fonts.CFF</environment><super>Graphics.Fonts.CFF.Dict</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CompactFontFormat</package></attributes></class><comment><class-id>Graphics.Fonts.CFF.PrivateDict</class-id><body>Private DICTThe names of the Private DICT operators are, where possible, the same as the corresponding Type 1 dict keys.</body></comment><class><name>Base</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.Table</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Base</class-id><body>The Baseline table (BASE) provides information used to align glyphs of different scripts and sizes in a line of text, whether the glyphs are in the same font or in different fonts. To improve text layout, the Baseline table also provides minimum (min) and maximum (max) glyph extent values for each script, language system, or feature in a font.</body></comment><class><name>Math</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.Table</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Math</class-id><body>MATH - The mathematical typesetting tableMathematical formulas are complex text objects in which multiple elements with various metric, style or positioning attributes are combined. In order for a math handling engine to support layout of mathematical formulas, several types of font-specific information particular to the layout of formulas are required. The MATH table format defines data structures for font-specific information necessary for math formula layout.General structure of math formulas is hierarchical, with formulas composed of smaller sub-formula components, where each sub-formula may be composed of even simpler sub-formulas, and so on down to individual characters, e.g. letters or numbers. </body></comment><class><name>Cff</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.Table</super><private>false</private><indexed-type>none</indexed-type><inst-vars>fontSet </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Cff</class-id><body>This table contains a compact representation of a PostScript Type 1, or CIDFont and is structured according to Adobe Technical Note #5176: “The Compact Font Format Specification,” and Adobe Technical Note #5177: “Type 2 Charstring Format.”Existing TrueType fonts use a glyph index to specify and access glyphs within a font, e.g. to index the loca table and thereby access glyph data in the glyf table. This concept is retained in OpenType™ PostScript fonts except that glyph data is accessed through the CharStrings INDEX of the CFF table.</body></comment><class><name>Segment</name><environment>Graphics.Fonts.OpenType</environment><super>Value</super><private>false</private><indexed-type>none</indexed-type><inst-vars>startCode endCode delta </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Segment</class-id><body>Each segment is described by a startCode and endCode, along with an idDelta and an idRangeOffset, which are used for mapping the character codes in the segment. The segments are sorted in order of increasing endCode values, and the segment values are specified in four parallel arrays. You search for the first endCode that is greater than or equal to the character code you want to map. If the corresponding startCode is less than or equal to the character code, then you use the corresponding idDelta and idRangeOffset to map the character code to a glyph index (otherwise, the missingGlyph is returned). For the search to terminate, the final endCode value must be 0xFFFF. This segment need not contain any valid mappings. (It can just map the single character code 0xFFFF to missingGlyph). However, the segment must be present.If the idRangeOffset value for the segment is not 0, the mapping of character codes relies on glyphIdArray. The character code offset from startCode is added to the idRangeOffset value. This sum is used as an offset from the current location within idRangeOffset itself to index out the correct glyphIdArray value. This obscure indexing trick works because glyphIdArray immediately follows idRangeOffset in the font file. The C expression that yields the glyph index is:	* (idRangeOffset[i] / 2 	+ (c - startCount[i]) 	+ &amp;idRangeOffset[i])The value c is the character code in question, and i is the segment index in which c appears. If the value obtained from the indexing operation is not 0 (which indicates missingGlyph), idDelta[i] is added to it to get the glyph index. The idDelta arithmetic is modulo 65536.If the idRangeOffset is 0, the idDelta value is added directly to the character code offset (i.e. idDelta[i] + c) to get the corresponding glyph index. Again, the idDelta arithmetic is modulo 65536.(see http://www.microsoft.com/typography/otspec/cmap.htm for specifications)</body></comment><class><name>IndexedSegment</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.Segment</super><private>false</private><indexed-type>none</indexed-type><inst-vars>glyphIdArrayIndex </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.IndexedSegment</class-id><body>A segment with a idRangeOffset</body></comment><class><name>CmapSubtable12</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.CmapLanguageSubtable32</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.CmapSubtable12</class-id><body>Format 12: Segmented coverageThis is the Microsoft standard character to glyph index mapping table for fonts supporting the UCS-4 characters in the Unicode Surrogates Area (U+D800 - U+DFFF). It is a bit like format 4, in that it defines segments for sparse representation in 4-byte character space. Here's the subtable format:Type		Name		DescriptionUSHORT	format		Subtable format; set to 12.USHORT	reserved	Reserved; set to 0ULONG		length		Byte length of this subtable (including the header)ULONG		language	Please see “Note on the language field in 'cmap' subtables“ in this document.ULONG		nGroups	Number of groupings which follow(see http://www.microsoft.com/typography/otspec/cmap.htm for specifications)</body></comment><class><name>Ebdt</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.Table</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Ebdt</class-id><body>Three tables are used to embed bitmaps in OpenType™ fonts. They are the 'EBLC' table for embedded bitmap locators, the 'EBDT' table for embedded bitmap data, and the 'EBSC' table for embedded bitmap scaling information.OpenType embedded bitmaps are also called 'sbits' (for “scaler bitmaps”). A set of bitmaps for a face at a given size is called a strike.The 'EBLC' table identifies the sizes and glyph ranges of the sbits, and keeps offsets to glyph bitmap data in indexSubTables. The 'EBDT' table then stores the glyph bitmap data, in a number of different possible formats. Glyph metrics information may be stored in either the 'EBLC' or 'EBDT' table, depending upon the indexSubTable and glyph bitmap data formats. The 'EBSC' table identifies sizes that will be handled by scaling up or scaling down other sbit sizes.The 'EBDT' table is a super set of Apple's Apple Advanced Typography (AAT) 'bdat' table.</body></comment><class><name>Fpgm</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.Table</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Fpgm</class-id><body>This table is similar to the CVT Program, except that it is only run once, when the font is first used. It is used only for FDEFs and IDEFs. Thus the CVT Program need not contain function definitions. However, the CVT Program may redefine existing FDEFs or IDEFs.This table is optional.</body></comment><class><name>CmapSubtable6</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.CmapLanguageSubtable</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.CmapSubtable6</class-id><body>Format 6: Trimmed table mappingType	Name	DescriptionUSHORT	format	Format number is set to 6.USHORT	length	This is the length in bytes of the subtable.USHORT	language	Please see “Note on the language field in 'cmap' subtables“ in this document.USHORT	firstCode	First character code of subrange.USHORT	entryCount	Number of character codes in subrange.USHORT	glyphIdArray [entryCount]	Array of glyph index values for character codes in the range.The firstCode and entryCount values specify a subrange (beginning at firstCode,length = entryCount) within the range of possible character codes. Codes outside of this subrange are mapped to glyph index 0. The offset of the code (from the first code) within this subrange is used as index to the glyphIdArray, which provides the glyph index value.(see http://www.microsoft.com/typography/otspec/cmap.htm for specifications)</body></comment><class><name>AfmParsingTest</name><environment>Graphics.Fonts</environment><super>SUnit.TestCase</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>PostScript Testing</category><attributes><package>Fonts tests</package></attributes></class><class><name>BitCodepage</name><environment>WindowsFonts</environment><super>Value</super><private>false</private><indexed-type>none</indexed-type><inst-vars>bit codepage description </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>My Classes</category><attributes><package>Fonts for Windows</package></attributes></class><comment><class-id>WindowsFonts.BitCodepage</class-id><body>&lt;http://msdn2.microsoft.com/en-us/library/ms776441.aspx&gt;International FeaturesCode Page BitfieldsThe code page bitfields are used in the FONTSIGNATURE and LOCALESIGNATURE structures.Bit 	Code page 	DescriptionANSI 		0 	1252 	Latin 11 	1250 	Latin 2: Central Europe2 	1251 	Cyrillic3 	1253 	Greek4 	1254 	Turkish5 	1255 	Hebrew6 	1256 	Arabic7 	1257 	Baltic8 	1258 	Vietnamese9 - 15 		Reserved for ANSIANSI andOEM 		16 	874 	Thai17 	932 	Japanese, Shift-JIS18 	936 	Simplified Chinese (PRC, Singapore)19 	949 	Korean Unified Hangul Code (Hangul TongHabHyung Code)20 	950 	Traditional Chinese (Taiwan; Hong Kong SAR, PRC)21 	1361 	Korean (Johab)22 - 29 		Reserved for alternate ANSI and OEM30 - 31 		Reserved by system.OEM 		32 - 46 		Reserved for OEM47 	1258 	Vietnamese48 	869 	Modern Greek49 	866 	Russian50 	865 	Nordic51 	864 	Arabic52 	863 	Canadian French53 	862 	 54 	861 	Icelandic55 	860 	Portuguese56 	857 	Turkish57 	855 	Cyrillic; primarily Russian58 	852 	Latin 259 	775 	Baltic60 	737 	Greek; formerly 437G61 	708 	Arabic; ASMO 70862 	850 	Multilingual Latin 163 	437 	US</body></comment><class><name>CharSet</name><environment>WindowsFonts</environment><super>WindowsFonts.NamedValue</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Windows Fonts</category><attributes><package>Fonts for Windows</package></attributes></class><comment><class-id>WindowsFonts.CharSet</class-id><body>CharSet represents a Windows CharSet with a UI name and a value used for the Windows API</body></comment><class><name>FontListIcons</name><environment>Graphics.Fonts</environment><super>Tools.ListIconLibrary</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Fonts UI Support</package></attributes></class><comment><class-id>Graphics.Fonts.FontListIcons</class-id><body>list icons for fonts</body></comment><class><name>CharacterNamingTests</name><environment>Graphics</environment><super>SUnit.TestCase</super><private>false</private><indexed-type>none</indexed-type><inst-vars>oldDecodings oldEncodings newDecodings newEncodings decodingForNewFonts </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Fonts tests</package></attributes></class><class><name>PFMTests</name><environment>Graphics.Fonts</environment><super>SUnit.TestCase</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Fonts tests</package></attributes></class><class><name>Cbdt</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.Table</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Cbdt</class-id><body>CBDT - Color Bitmap Data TableTwo tables are used to embed color bitmaps in OFF fonts. They are the 'CBLC' table for embedded bitmap locators and the 'CBDT' table for embedded color bitmap data. The formats of these two tables are backward compatible with EBLC and EBDT used for embedded monochrome and grayscale bitmaps</body></comment><class><name>Index</name><environment>Graphics.Fonts.CFF</environment><super>Value</super><private>false</private><indexed-type>none</indexed-type><inst-vars>count offSize offset data </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CompactFontFormat</package></attributes></class><comment><class-id>Graphics.Fonts.CFF.Index</class-id><body>5. INDEX Data, pp.10An INDEX is an array of variable-sized objects. It comprises a header, an offset array, and object data. The offset array specifies offsets within the object data. An object is retrieved by indexing the offset array and fetching the object at the specified offset. The object’s length can be determined by subtracting its offset from the next offset in the offset array. An additional offset is added at the end of the offset array so the length of the last object may be determined. </body></comment><class><name>CmapSubtable0</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.CmapLanguageSubtable</super><private>false</private><indexed-type>none</indexed-type><inst-vars>glyphIdArray </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.CmapSubtable0</class-id><body>Format 0: Byte encoding tableThis is the Apple standard character to glyph index mapping table.Type 		Name 				DescriptionUSHORT 	format 				Format number is set to 0.USHORT 	length 				This is the length in bytes of the subtable.USHORT 	language 			Please see “Note on the language field in 'cmap' subtables“ in this document.BYTE 		glyphIdArray[256] 	An array that maps character codes to glyph index values.This is a simple 1 to 1 mapping of character codes to glyph indices. The glyph set is limited to 256. Note that if this format is used to index into a larger glyph set, only the first 256 glyphs will be accessible.(see http://www.microsoft.com/typography/otspec/cmap.htm for specifications)</body></comment><class><name>Operation</name><environment>Graphics.Fonts.CFF</environment><super>Value</super><private>false</private><indexed-type>none</indexed-type><inst-vars>operator operands </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CompactFontFormat</package></attributes></class><comment><class-id>Graphics.Fonts.CFF.Operation</class-id><body>a CFF operation with operands and operator</body></comment><class><name>Header</name><environment>Graphics.Fonts.CFF</environment><super>Value</super><private>false</private><indexed-type>none</indexed-type><inst-vars>major minor hdrSize offSize </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CompactFontFormat</package></attributes></class><comment><class-id>Graphics.Fonts.CFF.Header</class-id><body>6. Header, pp.11The binary data begins with a header</body></comment><class><name>ByteWriteStream</name><environment>Graphics.Fonts</environment><super>Core.WriteStream</super><private>false</private><indexed-type>none</indexed-type><inst-vars>bigEndian </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Fonts Basics</package></attributes></class><comment><class-id>Graphics.Fonts.ByteWriteStream</class-id><body>experiment for a stream onto which one can write binary data</body></comment><class><name>FontBody</name><environment>Graphics.Fonts</environment><super>Graphics.PostScriptFontBody</super><private>false</private><indexed-type>none</indexed-type><inst-vars>fontBBox </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>PostScript</category><attributes><package>Fonts Basics</package></attributes></class><comment><class-id>Graphics.Fonts.FontBody</class-id><body>Bugfix: A Fontbody which knows how to process afm (Ascii Font Metric) files correctly</body></comment><class><name>Charstring</name><environment>Graphics.Fonts.CFF</environment><super>Value</super><private>false</private><indexed-type>none</indexed-type><inst-vars>bytes </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CompactFontFormat</package></attributes></class><comment><class-id>Graphics.Fonts.CFF.Charstring</class-id><body>The Type 2 Charstring Format, Adobe Technical Note #5177, 16 March 2000The Type 2 format provides a method for compact encoding of glyph procedures in an outline font program. Type 2 charstrings must be used in a CFF (Compact Font Format) or OpenType font file to create a complete font program.</body></comment><class><name>DirectionalFontMetric</name><environment>Graphics.Fonts</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>underlinePosition underlineThickness italicAngle charWidth isFixedPitch </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>PostScript</category><attributes><package>Type1</package></attributes></class><comment><class-id>Graphics.Fonts.DirectionalFontMetric</class-id><body>DirectionalFontMetric defines metric data specific for a text direction.Instance Variables:	underlinePosition	&lt;Number&gt;	description of underlinePosition	underlineThickness	&lt;Number&gt;	description of underlineThickness	italicAngle			&lt;Number&gt;	description of italicAngle	charWidth			&lt;Point&gt;		description of charWidth	isFixedPitch		&lt;Boolean&gt;	description of isFixedPitch</body></comment><class><name>Encoding1</name><environment>Graphics.Fonts.CFF</environment><super>Graphics.Fonts.CFF.Encoding</super><private>false</private><indexed-type>none</indexed-type><inst-vars>ranges supplement </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CompactFontFormat</package></attributes></class><comment><class-id>Graphics.Fonts.CFF.Encoding1</class-id><body>Encoding Format 1Each Range1 describes a group of sequential codes.For example, the codes 51 52 53 54 55 could be represented by the Range1: 51 4,and a perfectly ordered encoding of 256 codes can be described with the Range1: 0 255.This format is particularly suited to encodings that are well ordered.</body></comment><class><name>Encoding0</name><environment>Graphics.Fonts.CFF</environment><super>Graphics.Fonts.CFF.Encoding</super><private>false</private><indexed-type>none</indexed-type><inst-vars>codes supplement </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CompactFontFormat</package></attributes></class><comment><class-id>Graphics.Fonts.CFF.Encoding0</class-id><body>Encoding Format 0Each element of the code array represents the encoding for the corresponding glyph.This format should be used when the codes are in a fairly random order.</body></comment><class><name>StandardCharset</name><environment>Graphics.Fonts.CFF</environment><super>Graphics.Fonts.CFF.Charset</super><private>false</private><indexed-type>none</indexed-type><inst-vars>name glyphs </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CompactFontFormat</package></attributes></class><comment><class-id>Graphics.Fonts.CFF.StandardCharset</class-id><body>A standard charset</body></comment><class><name>Hmtx</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.Table</super><private>false</private><indexed-type>none</indexed-type><inst-vars>hMetrics </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Hmtx</class-id><body>The type longHorMetric is defined as an array where each element has two parts: the advance width, which is of type USHORT, and the left side bearing, which is of type SHORT. These fields are in font design units.</body></comment><class><name>Ltsh</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.Table</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Ltsh</class-id><body>The LTSH table relates to OpenType™ fonts containing TrueType outlines. There are noticeable improvements to fonts on the screen when instructions are carefully applied to the sidebearings. The gain in readability is offset by the necessity for the OS to grid fit the glyphs in order to find the actual advance width for the glyphs (since instructions may be moving the sidebearing points). The TrueType outline format already has two mechanisms to side step the speed issues: the 'hdmx' table, where precomputed advance widths may be saved for selected ppem sizes, and the 'vdmx' table, where precomputed vertical advance widths may be saved for selected ppem sizes. The 'LTSH' table (Linear ThreSHold) is a second, complementary method.The LTSH table defines the point at which it is reasonable to assume linearly scaled advance widths on a glyph-by-glyph basis. This table should not be included unless bit 4 of the “flags” field in the 'head' table is set. The criteria for linear scaling is:a. (ppem size is ³50) AND (difference between the rounded linear width and the rounded instructed width £ 2% of the rounded linear width)or b. Linear width == Instructed widthThe LTSH table records the ppem for each glyph at which the scaling becomes linear again, despite instructions effecting the advance width. It is a requirement that, at and above the recorded threshold size, the glyph remain linear in its scaling (i.e., not legal to set threshold at 55 ppem if glyph becomes nonlinear again at 90 ppem).</body></comment><class><name>Vhea</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.Table</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Vhea</class-id><body>The vertical header table (tag name: 'vhea') contains information needed for vertical fonts. The glyphs of vertical fonts are written either top to bottom or bottom to top. This table contains information that is general to the font as a whole. Information that pertains to specific glyphs is given in the vertical metrics table (tag name: 'vmtx') described separately. The formats of these tables are similar to those for horizontal metrics (hhea and hmtx).Data in the vertical header table must be consistent with data that appears in the vertical metrics table. The advance height and top sidebearing values in the vertical metrics table must correspond with the maximum advance height and minimum bottom sidebearing values in the vertical header table.See the section “OpenType CJK Font Guidelines“ for more information about constructing CJK (Chinese, Japanese, and Korean) fonts.The difference between version 1.0 and version 1.1 is the name and definition of:    * ascender becomes vertTypoAscender    * descender becomes vertTypoDescender    * lineGap becomes vertTypoLineGap</body></comment><class><name>Hhea</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.Table</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Hhea</class-id><body>This table contains information for horizontal layout. The values in the minRightSidebearing, minLeftSideBearing and xMaxExtent should be computed using only glyphs that have contours. Glyphs with no contours should be ignored for the purposes of these calculations. All reserved areas must be set to 0.</body></comment><class><name>Vmtx</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.Table</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Vmtx</class-id><body>The vertical metrics table allows you to specify the vertical spacing for each glyph in a vertical font. This table consists of either one or two arrays that contain metric information (the advance heights and top sidebearings) for the vertical layout of each of the glyphs in the font.</body></comment><class><name>CmapSubtable8</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.CmapLanguageSubtable32</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.CmapSubtable8</class-id><body>Format 8: mixed 16-bit and 32-bit coverageFormat 8 is a bit like format 2, in that it provides for mixed-length character codes. If a font contains characters from the Unicode Surrogates Area (U+D800-U+DFFF), which are UCS-4 characters; it's likely that it will also include other, regular 16-bit Unicodes as well. We therefore need a format to map a mixture of 16-bit and 32-bit character codes, just as format 2 allows a mixture of 8-bit and 16-bit codes. A simplifying assumption is made: namely, that there are no 32-bit character codes which share the same first 16 bits as any 16-bit character code. This means that the determination as to whether a particular 16-bit value is a standalone character code or the start of a 32-bit character code can be made by looking at the 16-bit value directly, with no further information required.(see http://www.microsoft.com/typography/otspec/cmap.htm for specifications)</body></comment><class><name>Cpal</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.Table</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Cpal</class-id><body>CPAL - Color Palette TableThe palette table is a set of one or more palettes, each containing a predefined number of RGBA values arranged consecutively by palette index value. It may also contain name table IDs describing the palettes and their entries.The first palette, number 0, is the default palette. The palettes are referenced by colorRecordIndices, this is the index into the array of color records where the palette starts. Multiple colorRecordIndices may refer to the same palette, therefore the number of actual palettes in the table may be less than the numPalettes entry. A minimum of one palette, the default, must be provided in the table if the table is present. Each palette must have the same number of entries as defined by numPaletteEntries, which must be at least one entry. Any empty CPAL table, with no palettes and no color records is not permissible. It is permissible for palettes to overlap and share data; therefore, the total number of color records in the CPAL table may be less than the number of palette entries multiplied by the number of palettes.For each of the palettes, the first color record is index zero. There can be no more than numPaletteEntries of RGBA values.</body></comment><class><name>NameRecord</name><environment>Graphics.Fonts.OpenType</environment><super>Value</super><private>false</private><indexed-type>none</indexed-type><inst-vars>platformID encodingID languageID nameID bytes </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.NameRecord</class-id><body>substructure of the NameTable</body></comment><class><name>Jstf</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.Table</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Jstf</class-id><body>The Justification table (JSTF) provides font developers with additional control over glyph substitution and positioning in justified text. Text-processing clients now have more options to expand or shrink word and glyph spacing so text fills the specified line length.</body></comment><class><name>Head</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.Table</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Head</class-id><body>This table gives global information about the font. The bounding box values should be computed using only glyphs that have contours. Glyphs with no contours should be ignored for the purposes of these calculations.</body></comment><class><name>Name</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.Table</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Name</class-id><body>The naming table allows multilingual strings to be associated with the OpenTypeTM font file. These strings can represent copyright notices, font names, family names, style names, and so on. To keep this table short, the font manufacturer may wish to make a limited set of entries in some small set of languages; later, the font can be "localized" and the strings translated or added. Other parts of the OpenType font file that require these strings can then refer to them simply by their index number. Clients that need a particular string can look it up by its platform ID, character encoding ID, language ID and name ID. Note that some platforms may require single byte character strings, while others may require double byte strings.</body></comment><class><name>Maxp</name><environment>Graphics.Fonts.OpenType</environment><super>Graphics.Fonts.OpenType.Table</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>OpenType</package></attributes></class><comment><class-id>Graphics.Fonts.OpenType.Maxp</class-id><body>This table establishes the memory requirements for this font. Fonts with CFF data must use Version 0.5 of this table, specifying only the numGlyphs field. Fonts with TrueType outlines must use Version 1.0 of this table, where all data is required.</body></comment><class><name>FontEncodingTest</name><environment>Graphics.Fonts</environment><super>SUnit.TestCase</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>SmallCharts Testing</category><attributes><package>Fonts tests</package></attributes></class><class><name>Family</name><environment>WindowsFonts</environment><super>WindowsFonts.NamedValue</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Windows Fonts</category><attributes><package>Fonts for Windows</package></attributes></class><comment><class-id>WindowsFonts.Family</class-id><body>Family is a NamedValueBits 4 through 7 of the member specify the font family and can be one of the following values.FF_DECORATIVEFF_DONTCAREFF_MODERNFF_ROMANFF_SCRIPTFF_SWISSThe proper value can be obtained by using the Boolean OR operator to join one pitch constant with one family constant.Font families describe the look of a font in a general way. They are intended for specifying fonts when the exact typeface desired is not available. The values for font families are as follows.Value 	MeaningFF_DECORATIVE 	Novelty fonts. Old English is an example.FF_DONTCARE 	Use default font.FF_MODERN 	Fonts with constant stroke width (monospace), with or without serifs. Monospace fonts are usually modern. Pica, Elite, and CourierNew are examples.FF_ROMAN 	Fonts with variable stroke width (proportional) and with serifs. MS Serif is an example.FF_SCRIPT 	Fonts designed to look like handwriting. Script and Cursive are examples.FF_SWISS 	Fonts with variable stroke width (proportional) and without serifs. MS Sans Serif is an example.</body></comment><class><name>UnicodeSubset</name><environment>WindowsFonts</environment><super>Value</super><private>false</private><indexed-type>none</indexed-type><inst-vars>bit from to description </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Windows Fonts</category><attributes><package>Fonts for Windows</package></attributes></class><comment><class-id>WindowsFonts.UnicodeSubset</class-id><body>&lt;http://msdn2.microsoft.com/en-us/library/ms776439.aspx&gt;International FeaturesUnicode Subset BitfieldsThe Unicode subset bitfields (USBs) are used in the FONTSIGNATURE and LOCALESIGNATURE structures.Bit 	Unicodesubrange 	Description0 	0000 - 007F 	Basic Latin1 	0080 - 00FF 	Latin-1 Supplement2 	0100 - 017F 	Latin Extended-A3 	0180 - 024F 	Latin Extended-B4 	0250 - 02AF1D00 - 1D7F1D80 - 1DBF 	IPA ExtensionsPhonetic ExtensionsPhonetic Extensions Supplement5 	02B0 - 02FFA700 - A71F 	Spacing Modifier LettersModifier Tone Letters6 	0300 - 036F1DC0 - 1DFF 	Combining Diacritical MarksCombining Diacritical Marks Supplement7 	0370 - 03FF 	Greek and Coptic8 	2C80 - 2CFF 	Coptic9 	0400 - 04FF0500 - 052F 	CyrillicCyrillic Supplementary10 	0530 - 058F 	Armenian11 	0590 - 05FF 	Hebrew12 	  	Reserved13 	0600 - 06FF0750 - 077F 	ArabicArabic Supplement14 	07C0 - 07FF 	N'Ko15 	0900 - 097F 	Devanagari16 	0980 - 09FF 	Bengali17 	0A00 - 0A7F 	Gurmukhi18 	0A80 - 0AFF 	Gujarati19 	0B00 - 0B7F 	Oriya20 	0B80 - 0BFF 	Tamil21 	0C00 - 0C7F 	Telugu22 	0C80 - 0CFF 	Kannada23 	0D00 - 0D7F 	Malayalam24 	0E00 - 0E7F 	Thai25 	0E80 - 0EFF 	Lao26 	10A0 - 10FF2D00 - 2D2F 	GeorgianGeorgian Supplement27 	1B00 - 1B7F 	Balinese28 	1100 - 11FF 	Hangul Jamo29 	1E00 - 1EFF2C60 - 2C7FA720 - A7FF 	Latin Extended AdditionalLatin Extended-CLatin Extended-D30 	1F00 - 1FFF 	Greek Extended31 	2000 - 206F2E00 - 2E7F 	General PunctuationSupplemental Punctuation32 	2070 - 209F 	Superscripts and Subscripts33 	20A0 - 20CF 	Currency Symbols34 	20D0 - 20FF 	Combining Diacritical Marks for Symbols35 	2100 - 214F 	Letterlike Symbols36 	2150 - 218F 	Number Forms37 	2190 - 21FF27F0 - 27FF2900 - 297F2B00 - 2BFF 	ArrowsSupplemental Arrows-ASupplemental Arrows-BMiscellaneous Symbols and Arrows38 	2200 - 22FF27C0 - 27EF2980 - 29FF2A00 - 2AFF 	Mathematical OperatorsMiscellaneous Mathematical Symbols-AMiscellaneous Mathematical Symbols-BSupplemental Mathematical Operators39 	2300 - 23FF 	Miscellaneous Technical40 	2400 - 243F 	Control Pictures41 	2440 - 245F 	Optical Character Recognition42 	2460 - 24FF 	Enclosed Alphanumerics43 	2500 - 257F 	Box Drawing44 	2580 - 259F 	Block Elements45 	25A0 - 25FF 	Geometric Shapes46 	2600 - 26FF 	Miscellaneous Symbols47 	2700 - 27BF 	Dingbats48 	3000 - 303F 	Chinese, Japanese, and Korean (CJK) Symbols and Punctuation49 	3040 - 309F 	Hiragana50 	30A0 - 30FF31F0 - 31FF 	KatakanaKatakana Phonetic Extensions51 	3100 - 312F31A0 - 31Bf 	BopomofoBopomofo Extended52 	3130 - 318F 	Hangul Compatibility Jamo53 	A840 - A87F 	Phags-pa54 	3200 - 32FF 	Enclosed CJK Letters and Months55 	3300 - 33FF 	CJK Compatibility56 	AC00 - D7A3 	Hangul Syllables57 	D800 - DFFF 	Surrogates. Note that setting this bit implies that there is at least one supplementary code point beyond the Basic Multilingual Plane (BMP) that is supported by this font. See Surrogates and Supplementary Characters.58 	10900 - 1091F 	Phoenician59 	2E80 - 2EFF2F00 - 2FDF2FF0 - 2FFF3190 - 319F3400 - 4DBF4E00 - 9FFF20000 - 2A6DF 	CJK Radicals SupplementKangxi RadicalsIdeographic Description CharactersKanbunCJK Unified Ideographs Extension ACJK Unified IdeographsCJK Unified Ideographs Extension B60 	E000 - F8FF 	Private Use (Plane 0)61 	31C0 - 31EFF900 - FAFF2F800 - 2FA1F 	CJK StrokesCJK Compatibility IdeographsCJK Compatibility Ideographs Supplement62 	FB00 - FB4F 	Alphabetic Presentation Forms63 	FB50 - FDFF 	Arabic Presentation Forms-A64 	FE20 - FE2F 	Combining Half Marks65 	FE10 - FE1FFE30 - FE4F 	Vertical FormsCJK Compatibility Forms66 	FE50 - FE6F 	Small Form Variants67 	FE70 - FEFE 	Arabic Presentation Forms-B68 	FF00 - FFEF 	Halfwidth and Fullwidth Forms69 	FFF0 - FFFF 	Specials70 	0F00 - 0FFF 	Tibetan71 	0700 - 074F 	Syriac72 	0780 - 07BF 	Thaana73 	0D80 - 0DFF 	Sinhala74 	1000 - 109F 	Myanmar75 	1200 - 137F1380 - 139F2D80 - 2DDF 	EthiopicEthiopic SupplementEthiopic Extended76 	13A0 - 13FF 	Cherokee77 	1400 - 167F 	Unified Canadian Aboriginal Syllabics78 	1680 - 169F 	Ogham79 	16A0 - 16FF 	Runic80 	1780 - 17FF19E0 - 19FF 	KhmerKhmer Symbols81 	1800 - 18AF 	Mongolian82 	2800 - 28FF 	Braille Patterns83 	A000 - A48FA490 - A4CF 	Yi SyllablesYi Radicals84 	1700 - 171F1720 - 173F1740 - 175F1760 - 177F 	TagalogHanunooBuhidTagbanwa85 	10300 - 1032F 	Old Italic86 	10330 - 1034F 	Gothic87 	10400 - 1044F 	Deseret88 	1D000 - 1D0FF1D100 - 1D1FF1D200 - 1D24F 	Byzantine Musical SymbolsMusical SymbolsAncient Greek Musical Notation89 	1D400 - 1D7FF 	Mathematical Alphanumeric Symbols90 	FF000 - FFFFD100000 - 10FFFD 	Private Use (Plane 15)Private Use (Plane 16)91 	FE00 - FE0FE0100 - E01EF 	Variation SelectorsVariation Selectors Supplement92 	E0000 - E007F 	Tags93 	1900 - 194F 	Limbu94 	1950 - 197F 	Tai Le95 	1980 - 19DF 	New Tai Lue96 	1A00 - 1A1F 	Buginese97 	2C00 - 2C5F 	Glagolitic98 	2D30 - 2D7F 	Tifinagh99 	4DC0 - 4DFF 	Yijing Hexagram Symbols100 	A800 - A82F 	Syloti Nagri101 	10000 - 1007F10080 - 100FF10100 - 1013F 	Linear B SyllabaryLinear B IdeogramsAegean Numbers102 	10140 - 1018F 	Ancient Greek Numbers103 	10380 - 1039F 	Ugaritic104 	103A0 - 103DF 	Old Persian105 	10450 - 1047F 	Shavian106 	10480 - 104AF 	Osmanya107 	10800 - 1083F 	Cypriot Syllabary108 	10A00 - 10A5F 	Kharoshthi109 	1D300 - 1D35F 	Tai Xuan Jing Symbols110 	12000 - 123FF12400 - 1247F 	CuneiformCuneiform Numbers and Punctuation111 	1D360 - 1D37F 	Counting Rod Numerals112-122 	  	Reserved123 	  	Windows 2000 or later: Layout progress, horizontal from right to left124 	  	Windows 2000 or later: Layout progress, vertical before horizontal125 	  	Windows 2000 or later: Layout progress, vertical bottom to top126 	  	Reserved; must be 0127 	  	Reserved; must be 1</body></comment><class><name>CharsetView</name><environment>Graphics.Fonts</environment><super>Graphics.Fonts.ItemView</super><private>false</private><indexed-type>none</indexed-type><inst-vars>charStringHolder infoText characters glyphView </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Fonts UI</package></attributes></class><comment><class-id>Graphics.Fonts.CharsetView</class-id><body>displays a list of characters</body></comment><shared-variable><name>LoadedFonts</name><environment>Graphics.Fonts.Font</environment><private>false</private><constant>false</constant><category>font registry</category><attributes><package>Fonts Basics</package></attributes></shared-variable><shared-variable><name>MacRomanEncoder</name><environment>Graphics.Fonts.Font</environment><private>false</private><constant>false</constant><category>cached encoders</category><attributes><package>Fonts Basics</package></attributes></shared-variable><shared-variable><name>WinAnsiEncoder</name><environment>Graphics.Fonts.Font</environment><private>false</private><constant>false</constant><category>cached encoders</category><attributes><package>Fonts Basics</package></attributes></shared-variable><shared-variable><name>PDFDocEncoder</name><environment>Graphics.Fonts.Font</environment><private>false</private><constant>false</constant><category>cached encoders</category><attributes><package>Fonts Basics</package></attributes></shared-variable><shared-variable><name>StandardEncoder</name><environment>Graphics.Fonts.Font</environment><private>false</private><constant>false</constant><category>cached encoders</category><attributes><package>Fonts Basics</package></attributes></shared-variable><shared-variable><name>Win32FontsupportDictionary</name><environment>WindowsFonts</environment><private>false</private><constant>false</constant><category>external dictionaries</category><attributes><package>Fonts for Windows</package></attributes></shared-variable><methods><class-id>WindowsFonts.Win32Fontsupport</class-id> <category>procedures</category><body package="Fonts for Windows">ChooseFont: lpChooseFont	&lt;C: BOOL ChooseFontW(LPCHOOSEFONT lpChooseFont)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="Fonts for Windows">CreateFontIndirect: lpLogFont	&lt;C: HFONT _wincall CreateFontIndirectW(LPLOGFONT lpLogFont)&gt;	^self signalOsError: _errorCode</body><body package="Fonts for Windows">CreateSolidBrush: crColor	&lt;C: HBRUSH _wincall CreateSolidBrush(COLORREF crColor)&gt;	^self signalOsError: _errorCode</body><body package="Fonts for Windows">CreateSysColorBrush: nIndex	&lt;C: HBRUSH CreateSysColorBrush(int nIndex)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="Fonts for Windows">DeleteObject: hObject	&lt;C: BOOL _wincall DeleteObject(HGDIOBJ hObject)&gt;	^self signalOsError: _errorCode</body><body package="Fonts for Windows">EnumFontFamiliesEx: hdc with: lpLogfont with: lpEnumFontFamExProc with: lParam with: dwFlags	&lt;C: int EnumFontFamiliesExW(HDC hdc, LPLOGFONT lpLogfont, EnumFontFamExProc lpEnumFontFamExProc, LPARAM lParam, DWORD dwFlags)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="Fonts for Windows">GetGraphicsMode: hdc	&lt;C: int GetGraphicsMode(HDC hdc)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="Fonts for Windows">GetStockObject: fnObject	&lt;C: HGDIOBJ _wincall GetStockObject(int fnObject)&gt;	^self signalOsError: _errorCode</body><body package="Fonts for Windows">GetSysColorBrush: nIndex	&lt;C: HBRUSH GetSysColorBrush(int nIndex)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="Fonts for Windows">SetGraphicsMode: iMode for: hdc	&lt;C: int SetGraphicsMode(HDC hdc, int iMode)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="Fonts for Windows">TextOut: lpString size: cbString atX: nXStart y: nYStart in: hdc	&lt;C: BOOL _wincall TextOutW(HDC hdc, int nXStart, int nYStart, LPCTSTR lpString, int cbString)&gt;	^self signalOsError: _errorCode</body></methods><methods><class-id>OS.Win32SystemSupport</class-id> <category>procedures</category><body package="Fonts for Windows">CreateCompatibleDC: hdc	&lt;C: HDC CreateCompatibleDC(HDC hdc)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="Fonts for Windows">CreateFontIndirect: lpLogFont	&lt;C: HFONT _wincall CreateFontIndirectW(LPLOGFONT lpLogFont)&gt;	^self signalOsError: _errorCode</body><body package="Fonts for Windows">DeleteDC: hdc	&lt;C: BOOL _wincall DeleteDC(HDC hdc)&gt;	^self signalOsError: _errorCode</body><body package="Fonts for Windows">DeleteObject: hObject	&lt;C: BOOL _wincall DeleteObject(HGDIOBJ hObject)&gt;	^self signalOsError: _errorCode</body><body package="Fonts for Windows">ExtTextOut: lpString size: cbCount atX: x y: y options: fuOptions rect: lprc spacing: lpDx in: hdc	&lt;C: BOOL _wincall ExtTextOutW(HDC hdc, int x, int y, UINT fuOptions, PRECT* lprc, LPCTSTR lpString, UINT cbCount, INT* lpDx)&gt;	^self signalOsError: _errorCode</body><body package="Fonts for Windows">GetTextExtentExPoint: hdc string: lpszStr cchString: cchString nMaxExtent: nMaxExtent lpnFit: lpnFit alpDx: alpDx lpSize: lpSize	&lt;C: BOOL _wincall GetTextExtentExPointW(		HDC hdc,		LPCTSTR lpszStr,		int cchString,		int nMaxExtent,		LPINT lpnFit,		LPINT alpDx,		LPSIZE lpSize	)&gt;	^self signalOsError: _errorCode</body><body package="Fonts for Windows">GetTextExtentExPointI: hdc pgiIn: pgiIn cgi: cgi nMaxExtent: nMaxExtent lpnFit: lpnFit alpDx: alpDx lpSize: lpSize	&lt;C: BOOL _wincall GetTextExtentExPointI(		HDC hdc,		LPWORD pgiIn,		int cgi,		int nMaxExtent,		LPINT lpnFit,		LPINT alpDx,		LPSIZE lpSize	)&gt;	^self signalOsError: _errorCode</body><body package="Fonts for Windows">GetTextExtentPoint32: hdc lpString: lpString c: c lpSize: lpSize	&lt;C: BOOL _wincall GetTextExtentPoint32W(HDC hdc, LPCTSTR lpString, int c, LPSIZE lpSize)&gt;	^self signalOsError: _errorCode</body><body package="Fonts for Windows">GetTextExtentPointI: hdc pgiIn: pgiIn cgi: cgi lpSize: lpSize	&lt;C: BOOL _wincall GetTextExtentPointI(HDC hdc, LPWORD pgiIn, int cgi, LPSIZE lpSize)&gt;	^self signalOsError: _errorCode</body><body package="Fonts for Windows">GetTextMetrics: lptm in: hdc	&lt;C: BOOL _wincall GetTextMetricsW(HDC hdc, LPTEXTMETRIC lptm)&gt;	^self signalOsError: _errorCode</body><body package="Fonts for Windows">IntersectClipRect: hdc left: nLeftRect top: nTopRect right: nRightRect bottom: nBottomRect	&lt;C: int _wincall IntersectClipRect(HDC hdc, int nLeftRect, int nTopRect, int nRightRect, int nBottomRect)&gt;	^self signalOsError: _errorCode</body><body package="Fonts for Windows">SelectClipRgn: hdc region: hrgn	&lt;C: int _wincall SelectClipRgn(HDC hdc, HRGN hrgn)&gt;	^self signalOsError: _errorCode</body><body package="Fonts for Windows">SelectObject: hdc hGdiObj: hgdiobj	&lt;C: HGDIOBJ _wincall SelectObject(HDC hdc, HGDIOBJ hgdiobj)&gt;	^self signalOsError: _errorCode</body><body package="Fonts for Windows">SetBkMode: iBkMode in: hdc	&lt;C: int SetBkMode(HDC hdc, int iBkMode)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="Fonts for Windows">SetTextColor: crColor in: hdc	&lt;C: COLORREF SetTextColor(HDC hdc, COLORREF crColor)&gt;	^self externalAccessFailedWith: _errorCode</body></methods><methods><class-id>Graphics.Fonts.CFF.EncodingSupplement class</class-id> <category>specification</category><body package="CompactFontFormat">localSpecification	&lt;map: #glyphsAtCode&gt;</body></methods><methods><class-id>Graphics.Fonts.CFF.Charset0 class</class-id> <category>specification</category><body package="CompactFontFormat">localSpecification	&lt;sequence: #glyphs comment: 'Glyph name array'&gt;</body></methods><methods><class-id>Graphics.Fonts.Font class</class-id> <category>pragmas</category><body package="Fonts Basics">pragmas	&lt;pragmas: #class&gt;	^#(#font:)</body></methods><methods><class-id>Graphics.Fonts.FontProgram class</class-id> <category>specification</category><body package="Type1">localSpecification	&lt;constant: #header class: #{FontProgramHeader} comment: 'cleartext PostScript code'&gt;	&lt;constant: #contents class: #{ByteString} comment: 'the content of the binary part'&gt;	&lt;map: #glyphs comment: 'dictionary of charstrings'&gt;	&lt;constant: #trailerExtra class: #{String} comment: 'extra PostScript code after the standard trailer of 0''s and #cleartomark'&gt;</body></methods><methods><class-id>Graphics.Fonts.CFF.Range class</class-id> <category>specification</category><body package="CompactFontFormat">localSpecification	&lt;constant: #first class: #{SmallInteger}&gt;	&lt;constant: #nLeft class: #{SmallInteger}&gt;</body></methods><methods><class-id>Graphics.Fonts.CFF.Dict class</class-id> <category>specification</category><body package="CompactFontFormat">localSpecification	&lt;sequence: #operations&gt;</body></methods><methods><class-id>Graphics.Fonts.StandardFont class</class-id> <category>fonts</category><body package="Type1">courier	"from http://www.adobe.com/devnet/font.html "	&lt;font: #Courier&gt;	^self		windowsName: 'Courier New'		afm: 'StartFontMetrics 4.1Comment Copyright (c) 1989, 1990, 1991, 1992, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.Comment Creation Date: Thu May  1 17:27:09 1997Comment UniqueID 43050Comment VMusage 39754 50779FontName CourierFullName CourierFamilyName CourierWeight MediumItalicAngle 0IsFixedPitch trueCharacterSet ExtendedRomanFontBBox -23 -250 715 805 UnderlinePosition -100UnderlineThickness 50Version 003.000Notice Copyright (c) 1989, 1990, 1991, 1992, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.EncodingScheme AdobeStandardEncodingCapHeight 562XHeight 426Ascender 629Descender -157StdHW 51StdVW 51StartCharMetrics 315C 32 ; WX 600 ; N space ; B 0 0 0 0 ;C 33 ; WX 600 ; N exclam ; B 236 -15 364 572 ;C 34 ; WX 600 ; N quotedbl ; B 187 328 413 562 ;C 35 ; WX 600 ; N numbersign ; B 93 -32 507 639 ;C 36 ; WX 600 ; N dollar ; B 105 -126 496 662 ;C 37 ; WX 600 ; N percent ; B 81 -15 518 622 ;C 38 ; WX 600 ; N ampersand ; B 63 -15 538 543 ;C 39 ; WX 600 ; N quoteright ; B 213 328 376 562 ;C 40 ; WX 600 ; N parenleft ; B 269 -108 440 622 ;C 41 ; WX 600 ; N parenright ; B 160 -108 331 622 ;C 42 ; WX 600 ; N asterisk ; B 116 257 484 607 ;C 43 ; WX 600 ; N plus ; B 80 44 520 470 ;C 44 ; WX 600 ; N comma ; B 181 -112 344 122 ;C 45 ; WX 600 ; N hyphen ; B 103 231 497 285 ;C 46 ; WX 600 ; N period ; B 229 -15 371 109 ;C 47 ; WX 600 ; N slash ; B 125 -80 475 629 ;C 48 ; WX 600 ; N zero ; B 106 -15 494 622 ;C 49 ; WX 600 ; N one ; B 96 0 505 622 ;C 50 ; WX 600 ; N two ; B 70 0 471 622 ;C 51 ; WX 600 ; N three ; B 75 -15 466 622 ;C 52 ; WX 600 ; N four ; B 78 0 500 622 ;C 53 ; WX 600 ; N five ; B 92 -15 497 607 ;C 54 ; WX 600 ; N six ; B 111 -15 497 622 ;C 55 ; WX 600 ; N seven ; B 82 0 483 607 ;C 56 ; WX 600 ; N eight ; B 102 -15 498 622 ;C 57 ; WX 600 ; N nine ; B 96 -15 489 622 ;C 58 ; WX 600 ; N colon ; B 229 -15 371 385 ;C 59 ; WX 600 ; N semicolon ; B 181 -112 371 385 ;C 60 ; WX 600 ; N less ; B 41 42 519 472 ;C 61 ; WX 600 ; N equal ; B 80 138 520 376 ;C 62 ; WX 600 ; N greater ; B 66 42 544 472 ;C 63 ; WX 600 ; N question ; B 129 -15 492 572 ;C 64 ; WX 600 ; N at ; B 77 -15 533 622 ;C 65 ; WX 600 ; N A ; B 3 0 597 562 ;C 66 ; WX 600 ; N B ; B 43 0 559 562 ;C 67 ; WX 600 ; N C ; B 41 -18 540 580 ;C 68 ; WX 600 ; N D ; B 43 0 574 562 ;C 69 ; WX 600 ; N E ; B 53 0 550 562 ;C 70 ; WX 600 ; N F ; B 53 0 545 562 ;C 71 ; WX 600 ; N G ; B 31 -18 575 580 ;C 72 ; WX 600 ; N H ; B 32 0 568 562 ;C 73 ; WX 600 ; N I ; B 96 0 504 562 ;C 74 ; WX 600 ; N J ; B 34 -18 566 562 ;C 75 ; WX 600 ; N K ; B 38 0 582 562 ;C 76 ; WX 600 ; N L ; B 47 0 554 562 ;C 77 ; WX 600 ; N M ; B 4 0 596 562 ;C 78 ; WX 600 ; N N ; B 7 -13 593 562 ;C 79 ; WX 600 ; N O ; B 43 -18 557 580 ;C 80 ; WX 600 ; N P ; B 79 0 558 562 ;C 81 ; WX 600 ; N Q ; B 43 -138 557 580 ;C 82 ; WX 600 ; N R ; B 38 0 588 562 ;C 83 ; WX 600 ; N S ; B 72 -20 529 580 ;C 84 ; WX 600 ; N T ; B 38 0 563 562 ;C 85 ; WX 600 ; N U ; B 17 -18 583 562 ;C 86 ; WX 600 ; N V ; B -4 -13 604 562 ;C 87 ; WX 600 ; N W ; B -3 -13 603 562 ;C 88 ; WX 600 ; N X ; B 23 0 577 562 ;C 89 ; WX 600 ; N Y ; B 24 0 576 562 ;C 90 ; WX 600 ; N Z ; B 86 0 514 562 ;C 91 ; WX 600 ; N bracketleft ; B 269 -108 442 622 ;C 92 ; WX 600 ; N backslash ; B 118 -80 482 629 ;C 93 ; WX 600 ; N bracketright ; B 158 -108 331 622 ;C 94 ; WX 600 ; N asciicircum ; B 94 354 506 622 ;C 95 ; WX 600 ; N underscore ; B 0 -125 600 -75 ;C 96 ; WX 600 ; N quoteleft ; B 224 328 387 562 ;C 97 ; WX 600 ; N a ; B 53 -15 559 441 ;C 98 ; WX 600 ; N b ; B 14 -15 575 629 ;C 99 ; WX 600 ; N c ; B 66 -15 529 441 ;C 100 ; WX 600 ; N d ; B 45 -15 591 629 ;C 101 ; WX 600 ; N e ; B 66 -15 548 441 ;C 102 ; WX 600 ; N f ; B 114 0 531 629 ; L i fi ; L l fl ;C 103 ; WX 600 ; N g ; B 45 -157 566 441 ;C 104 ; WX 600 ; N h ; B 18 0 582 629 ;C 105 ; WX 600 ; N i ; B 95 0 505 657 ;C 106 ; WX 600 ; N j ; B 82 -157 410 657 ;C 107 ; WX 600 ; N k ; B 43 0 580 629 ;C 108 ; WX 600 ; N l ; B 95 0 505 629 ;C 109 ; WX 600 ; N m ; B -5 0 605 441 ;C 110 ; WX 600 ; N n ; B 26 0 575 441 ;C 111 ; WX 600 ; N o ; B 62 -15 538 441 ;C 112 ; WX 600 ; N p ; B 9 -157 555 441 ;C 113 ; WX 600 ; N q ; B 45 -157 591 441 ;C 114 ; WX 600 ; N r ; B 60 0 559 441 ;C 115 ; WX 600 ; N s ; B 80 -15 513 441 ;C 116 ; WX 600 ; N t ; B 87 -15 530 561 ;C 117 ; WX 600 ; N u ; B 21 -15 562 426 ;C 118 ; WX 600 ; N v ; B 10 -10 590 426 ;C 119 ; WX 600 ; N w ; B -4 -10 604 426 ;C 120 ; WX 600 ; N x ; B 20 0 580 426 ;C 121 ; WX 600 ; N y ; B 7 -157 592 426 ;C 122 ; WX 600 ; N z ; B 99 0 502 426 ;C 123 ; WX 600 ; N braceleft ; B 182 -108 437 622 ;C 124 ; WX 600 ; N bar ; B 275 -250 326 750 ;C 125 ; WX 600 ; N braceright ; B 163 -108 418 622 ;C 126 ; WX 600 ; N asciitilde ; B 63 197 540 320 ;C 161 ; WX 600 ; N exclamdown ; B 236 -157 364 430 ;C 162 ; WX 600 ; N cent ; B 96 -49 500 614 ;C 163 ; WX 600 ; N sterling ; B 84 -21 521 611 ;C 164 ; WX 600 ; N fraction ; B 92 -57 509 665 ;C 165 ; WX 600 ; N yen ; B 26 0 574 562 ;C 166 ; WX 600 ; N florin ; B 4 -143 539 622 ;C 167 ; WX 600 ; N section ; B 113 -78 488 580 ;C 168 ; WX 600 ; N currency ; B 73 58 527 506 ;C 169 ; WX 600 ; N quotesingle ; B 259 328 341 562 ;C 170 ; WX 600 ; N quotedblleft ; B 143 328 471 562 ;C 171 ; WX 600 ; N guillemotleft ; B 37 70 563 446 ;C 172 ; WX 600 ; N guilsinglleft ; B 149 70 451 446 ;C 173 ; WX 600 ; N guilsinglright ; B 149 70 451 446 ;C 174 ; WX 600 ; N fi ; B 3 0 597 629 ;C 175 ; WX 600 ; N fl ; B 3 0 597 629 ;C 177 ; WX 600 ; N endash ; B 75 231 525 285 ;C 178 ; WX 600 ; N dagger ; B 141 -78 459 580 ;C 179 ; WX 600 ; N daggerdbl ; B 141 -78 459 580 ;C 180 ; WX 600 ; N periodcentered ; B 222 189 378 327 ;C 182 ; WX 600 ; N paragraph ; B 50 -78 511 562 ;C 183 ; WX 600 ; N bullet ; B 172 130 428 383 ;C 184 ; WX 600 ; N quotesinglbase ; B 213 -134 376 100 ;C 185 ; WX 600 ; N quotedblbase ; B 143 -134 457 100 ;C 186 ; WX 600 ; N quotedblright ; B 143 328 457 562 ;C 187 ; WX 600 ; N guillemotright ; B 37 70 563 446 ;C 188 ; WX 600 ; N ellipsis ; B 37 -15 563 111 ;C 189 ; WX 600 ; N perthousand ; B 3 -15 600 622 ;C 191 ; WX 600 ; N questiondown ; B 108 -157 471 430 ;C 193 ; WX 600 ; N grave ; B 151 497 378 672 ;C 194 ; WX 600 ; N acute ; B 242 497 469 672 ;C 195 ; WX 600 ; N circumflex ; B 124 477 476 654 ;C 196 ; WX 600 ; N tilde ; B 105 489 503 606 ;C 197 ; WX 600 ; N macron ; B 120 525 480 565 ;C 198 ; WX 600 ; N breve ; B 153 501 447 609 ;C 199 ; WX 600 ; N dotaccent ; B 249 537 352 640 ;C 200 ; WX 600 ; N dieresis ; B 148 537 453 640 ;C 202 ; WX 600 ; N ring ; B 218 463 382 627 ;C 203 ; WX 600 ; N cedilla ; B 224 -151 362 10 ;C 205 ; WX 600 ; N hungarumlaut ; B 133 497 540 672 ;C 206 ; WX 600 ; N ogonek ; B 211 -172 407 4 ;C 207 ; WX 600 ; N caron ; B 124 492 476 669 ;C 208 ; WX 600 ; N emdash ; B 0 231 600 285 ;C 225 ; WX 600 ; N AE ; B 3 0 550 562 ;C 227 ; WX 600 ; N ordfeminine ; B 156 249 442 580 ;C 232 ; WX 600 ; N Lslash ; B 47 0 554 562 ;C 233 ; WX 600 ; N Oslash ; B 43 -80 557 629 ;C 234 ; WX 600 ; N OE ; B 7 0 567 562 ;C 235 ; WX 600 ; N ordmasculine ; B 157 249 443 580 ;C 241 ; WX 600 ; N ae ; B 19 -15 570 441 ;C 245 ; WX 600 ; N dotlessi ; B 95 0 505 426 ;C 248 ; WX 600 ; N lslash ; B 95 0 505 629 ;C 249 ; WX 600 ; N oslash ; B 62 -80 538 506 ;C 250 ; WX 600 ; N oe ; B 19 -15 559 441 ;C 251 ; WX 600 ; N germandbls ; B 48 -15 588 629 ;C -1 ; WX 600 ; N Idieresis ; B 96 0 504 753 ;C -1 ; WX 600 ; N eacute ; B 66 -15 548 672 ;C -1 ; WX 600 ; N abreve ; B 53 -15 559 609 ;C -1 ; WX 600 ; N uhungarumlaut ; B 21 -15 580 672 ;C -1 ; WX 600 ; N ecaron ; B 66 -15 548 669 ;C -1 ; WX 600 ; N Ydieresis ; B 24 0 576 753 ;C -1 ; WX 600 ; N divide ; B 87 48 513 467 ;C -1 ; WX 600 ; N Yacute ; B 24 0 576 805 ;C -1 ; WX 600 ; N Acircumflex ; B 3 0 597 787 ;C -1 ; WX 600 ; N aacute ; B 53 -15 559 672 ;C -1 ; WX 600 ; N Ucircumflex ; B 17 -18 583 787 ;C -1 ; WX 600 ; N yacute ; B 7 -157 592 672 ;C -1 ; WX 600 ; N scommaaccent ; B 80 -250 513 441 ;C -1 ; WX 600 ; N ecircumflex ; B 66 -15 548 654 ;C -1 ; WX 600 ; N Uring ; B 17 -18 583 760 ;C -1 ; WX 600 ; N Udieresis ; B 17 -18 583 753 ;C -1 ; WX 600 ; N aogonek ; B 53 -172 587 441 ;C -1 ; WX 600 ; N Uacute ; B 17 -18 583 805 ;C -1 ; WX 600 ; N uogonek ; B 21 -172 590 426 ;C -1 ; WX 600 ; N Edieresis ; B 53 0 550 753 ;C -1 ; WX 600 ; N Dcroat ; B 30 0 574 562 ;C -1 ; WX 600 ; N commaaccent ; B 198 -250 335 -58 ;C -1 ; WX 600 ; N copyright ; B 0 -18 600 580 ;C -1 ; WX 600 ; N Emacron ; B 53 0 550 698 ;C -1 ; WX 600 ; N ccaron ; B 66 -15 529 669 ;C -1 ; WX 600 ; N aring ; B 53 -15 559 627 ;C -1 ; WX 600 ; N Ncommaaccent ; B 7 -250 593 562 ;C -1 ; WX 600 ; N lacute ; B 95 0 505 805 ;C -1 ; WX 600 ; N agrave ; B 53 -15 559 672 ;C -1 ; WX 600 ; N Tcommaaccent ; B 38 -250 563 562 ;C -1 ; WX 600 ; N Cacute ; B 41 -18 540 805 ;C -1 ; WX 600 ; N atilde ; B 53 -15 559 606 ;C -1 ; WX 600 ; N Edotaccent ; B 53 0 550 753 ;C -1 ; WX 600 ; N scaron ; B 80 -15 513 669 ;C -1 ; WX 600 ; N scedilla ; B 80 -151 513 441 ;C -1 ; WX 600 ; N iacute ; B 95 0 505 672 ;C -1 ; WX 600 ; N lozenge ; B 18 0 443 706 ;C -1 ; WX 600 ; N Rcaron ; B 38 0 588 802 ;C -1 ; WX 600 ; N Gcommaaccent ; B 31 -250 575 580 ;C -1 ; WX 600 ; N ucircumflex ; B 21 -15 562 654 ;C -1 ; WX 600 ; N acircumflex ; B 53 -15 559 654 ;C -1 ; WX 600 ; N Amacron ; B 3 0 597 698 ;C -1 ; WX 600 ; N rcaron ; B 60 0 559 669 ;C -1 ; WX 600 ; N ccedilla ; B 66 -151 529 441 ;C -1 ; WX 600 ; N Zdotaccent ; B 86 0 514 753 ;C -1 ; WX 600 ; N Thorn ; B 79 0 538 562 ;C -1 ; WX 600 ; N Omacron ; B 43 -18 557 698 ;C -1 ; WX 600 ; N Racute ; B 38 0 588 805 ;C -1 ; WX 600 ; N Sacute ; B 72 -20 529 805 ;C -1 ; WX 600 ; N dcaron ; B 45 -15 715 629 ;C -1 ; WX 600 ; N Umacron ; B 17 -18 583 698 ;C -1 ; WX 600 ; N uring ; B 21 -15 562 627 ;C -1 ; WX 600 ; N threesuperior ; B 155 240 406 622 ;C -1 ; WX 600 ; N Ograve ; B 43 -18 557 805 ;C -1 ; WX 600 ; N Agrave ; B 3 0 597 805 ;C -1 ; WX 600 ; N Abreve ; B 3 0 597 732 ;C -1 ; WX 600 ; N multiply ; B 87 43 515 470 ;C -1 ; WX 600 ; N uacute ; B 21 -15 562 672 ;C -1 ; WX 600 ; N Tcaron ; B 38 0 563 802 ;C -1 ; WX 600 ; N partialdiff ; B 17 -38 459 710 ;C -1 ; WX 600 ; N ydieresis ; B 7 -157 592 620 ;C -1 ; WX 600 ; N Nacute ; B 7 -13 593 805 ;C -1 ; WX 600 ; N icircumflex ; B 94 0 505 654 ;C -1 ; WX 600 ; N Ecircumflex ; B 53 0 550 787 ;C -1 ; WX 600 ; N adieresis ; B 53 -15 559 620 ;C -1 ; WX 600 ; N edieresis ; B 66 -15 548 620 ;C -1 ; WX 600 ; N cacute ; B 66 -15 529 672 ;C -1 ; WX 600 ; N nacute ; B 26 0 575 672 ;C -1 ; WX 600 ; N umacron ; B 21 -15 562 565 ;C -1 ; WX 600 ; N Ncaron ; B 7 -13 593 802 ;C -1 ; WX 600 ; N Iacute ; B 96 0 504 805 ;C -1 ; WX 600 ; N plusminus ; B 87 44 513 558 ;C -1 ; WX 600 ; N brokenbar ; B 275 -175 326 675 ;C -1 ; WX 600 ; N registered ; B 0 -18 600 580 ;C -1 ; WX 600 ; N Gbreve ; B 31 -18 575 732 ;C -1 ; WX 600 ; N Idotaccent ; B 96 0 504 753 ;C -1 ; WX 600 ; N summation ; B 15 -10 585 706 ;C -1 ; WX 600 ; N Egrave ; B 53 0 550 805 ;C -1 ; WX 600 ; N racute ; B 60 0 559 672 ;C -1 ; WX 600 ; N omacron ; B 62 -15 538 565 ;C -1 ; WX 600 ; N Zacute ; B 86 0 514 805 ;C -1 ; WX 600 ; N Zcaron ; B 86 0 514 802 ;C -1 ; WX 600 ; N greaterequal ; B 98 0 502 710 ;C -1 ; WX 600 ; N Eth ; B 30 0 574 562 ;C -1 ; WX 600 ; N Ccedilla ; B 41 -151 540 580 ;C -1 ; WX 600 ; N lcommaaccent ; B 95 -250 505 629 ;C -1 ; WX 600 ; N tcaron ; B 87 -15 530 717 ;C -1 ; WX 600 ; N eogonek ; B 66 -172 548 441 ;C -1 ; WX 600 ; N Uogonek ; B 17 -172 583 562 ;C -1 ; WX 600 ; N Aacute ; B 3 0 597 805 ;C -1 ; WX 600 ; N Adieresis ; B 3 0 597 753 ;C -1 ; WX 600 ; N egrave ; B 66 -15 548 672 ;C -1 ; WX 600 ; N zacute ; B 99 0 502 672 ;C -1 ; WX 600 ; N iogonek ; B 95 -172 505 657 ;C -1 ; WX 600 ; N Oacute ; B 43 -18 557 805 ;C -1 ; WX 600 ; N oacute ; B 62 -15 538 672 ;C -1 ; WX 600 ; N amacron ; B 53 -15 559 565 ;C -1 ; WX 600 ; N sacute ; B 80 -15 513 672 ;C -1 ; WX 600 ; N idieresis ; B 95 0 505 620 ;C -1 ; WX 600 ; N Ocircumflex ; B 43 -18 557 787 ;C -1 ; WX 600 ; N Ugrave ; B 17 -18 583 805 ;C -1 ; WX 600 ; N Delta ; B 6 0 598 688 ;C -1 ; WX 600 ; N thorn ; B -6 -157 555 629 ;C -1 ; WX 600 ; N twosuperior ; B 177 249 424 622 ;C -1 ; WX 600 ; N Odieresis ; B 43 -18 557 753 ;C -1 ; WX 600 ; N mu ; B 21 -157 562 426 ;C -1 ; WX 600 ; N igrave ; B 95 0 505 672 ;C -1 ; WX 600 ; N ohungarumlaut ; B 62 -15 580 672 ;C -1 ; WX 600 ; N Eogonek ; B 53 -172 561 562 ;C -1 ; WX 600 ; N dcroat ; B 45 -15 591 629 ;C -1 ; WX 600 ; N threequarters ; B 8 -56 593 666 ;C -1 ; WX 600 ; N Scedilla ; B 72 -151 529 580 ;C -1 ; WX 600 ; N lcaron ; B 95 0 533 629 ;C -1 ; WX 600 ; N Kcommaaccent ; B 38 -250 582 562 ;C -1 ; WX 600 ; N Lacute ; B 47 0 554 805 ;C -1 ; WX 600 ; N trademark ; B -23 263 623 562 ;C -1 ; WX 600 ; N edotaccent ; B 66 -15 548 620 ;C -1 ; WX 600 ; N Igrave ; B 96 0 504 805 ;C -1 ; WX 600 ; N Imacron ; B 96 0 504 698 ;C -1 ; WX 600 ; N Lcaron ; B 47 0 554 562 ;C -1 ; WX 600 ; N onehalf ; B 0 -57 611 665 ;C -1 ; WX 600 ; N lessequal ; B 98 0 502 710 ;C -1 ; WX 600 ; N ocircumflex ; B 62 -15 538 654 ;C -1 ; WX 600 ; N ntilde ; B 26 0 575 606 ;C -1 ; WX 600 ; N Uhungarumlaut ; B 17 -18 590 805 ;C -1 ; WX 600 ; N Eacute ; B 53 0 550 805 ;C -1 ; WX 600 ; N emacron ; B 66 -15 548 565 ;C -1 ; WX 600 ; N gbreve ; B 45 -157 566 609 ;C -1 ; WX 600 ; N onequarter ; B 0 -57 600 665 ;C -1 ; WX 600 ; N Scaron ; B 72 -20 529 802 ;C -1 ; WX 600 ; N Scommaaccent ; B 72 -250 529 580 ;C -1 ; WX 600 ; N Ohungarumlaut ; B 43 -18 580 805 ;C -1 ; WX 600 ; N degree ; B 123 269 477 622 ;C -1 ; WX 600 ; N ograve ; B 62 -15 538 672 ;C -1 ; WX 600 ; N Ccaron ; B 41 -18 540 802 ;C -1 ; WX 600 ; N ugrave ; B 21 -15 562 672 ;C -1 ; WX 600 ; N radical ; B 3 -15 597 792 ;C -1 ; WX 600 ; N Dcaron ; B 43 0 574 802 ;C -1 ; WX 600 ; N rcommaaccent ; B 60 -250 559 441 ;C -1 ; WX 600 ; N Ntilde ; B 7 -13 593 729 ;C -1 ; WX 600 ; N otilde ; B 62 -15 538 606 ;C -1 ; WX 600 ; N Rcommaaccent ; B 38 -250 588 562 ;C -1 ; WX 600 ; N Lcommaaccent ; B 47 -250 554 562 ;C -1 ; WX 600 ; N Atilde ; B 3 0 597 729 ;C -1 ; WX 600 ; N Aogonek ; B 3 -172 608 562 ;C -1 ; WX 600 ; N Aring ; B 3 0 597 750 ;C -1 ; WX 600 ; N Otilde ; B 43 -18 557 729 ;C -1 ; WX 600 ; N zdotaccent ; B 99 0 502 620 ;C -1 ; WX 600 ; N Ecaron ; B 53 0 550 802 ;C -1 ; WX 600 ; N Iogonek ; B 96 -172 504 562 ;C -1 ; WX 600 ; N kcommaaccent ; B 43 -250 580 629 ;C -1 ; WX 600 ; N minus ; B 80 232 520 283 ;C -1 ; WX 600 ; N Icircumflex ; B 96 0 504 787 ;C -1 ; WX 600 ; N ncaron ; B 26 0 575 669 ;C -1 ; WX 600 ; N tcommaaccent ; B 87 -250 530 561 ;C -1 ; WX 600 ; N logicalnot ; B 87 108 513 369 ;C -1 ; WX 600 ; N odieresis ; B 62 -15 538 620 ;C -1 ; WX 600 ; N udieresis ; B 21 -15 562 620 ;C -1 ; WX 600 ; N notequal ; B 15 -16 540 529 ;C -1 ; WX 600 ; N gcommaaccent ; B 45 -157 566 708 ;C -1 ; WX 600 ; N eth ; B 62 -15 538 629 ;C -1 ; WX 600 ; N zcaron ; B 99 0 502 669 ;C -1 ; WX 600 ; N ncommaaccent ; B 26 -250 575 441 ;C -1 ; WX 600 ; N onesuperior ; B 172 249 428 622 ;C -1 ; WX 600 ; N imacron ; B 95 0 505 565 ;C -1 ; WX 600 ; N Euro ; B 0 0 0 0 ;EndCharMetricsEndFontMetrics'</body><body package="Type1">courierBold	"from http://www.adobe.com/devnet/font.html "	&lt;font: #'Courier-Bold'&gt;	^self		windowsName: 'Courier New'		afm: 'StartFontMetrics 4.1Comment Copyright (c) 1989, 1990, 1991, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.Comment Creation Date: Mon Jun 23 16:28:00 1997Comment UniqueID 43048Comment VMusage 41139 52164FontName Courier-BoldFullName Courier BoldFamilyName CourierWeight BoldItalicAngle 0IsFixedPitch trueCharacterSet ExtendedRomanFontBBox -113 -250 749 801 UnderlinePosition -100UnderlineThickness 50Version 003.000Notice Copyright (c) 1989, 1990, 1991, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.EncodingScheme AdobeStandardEncodingCapHeight 562XHeight 439Ascender 629Descender -157StdHW 84StdVW 106StartCharMetrics 315C 32 ; WX 600 ; N space ; B 0 0 0 0 ;C 33 ; WX 600 ; N exclam ; B 202 -15 398 572 ;C 34 ; WX 600 ; N quotedbl ; B 135 277 465 562 ;C 35 ; WX 600 ; N numbersign ; B 56 -45 544 651 ;C 36 ; WX 600 ; N dollar ; B 82 -126 519 666 ;C 37 ; WX 600 ; N percent ; B 5 -15 595 616 ;C 38 ; WX 600 ; N ampersand ; B 36 -15 546 543 ;C 39 ; WX 600 ; N quoteright ; B 171 277 423 562 ;C 40 ; WX 600 ; N parenleft ; B 219 -102 461 616 ;C 41 ; WX 600 ; N parenright ; B 139 -102 381 616 ;C 42 ; WX 600 ; N asterisk ; B 91 219 509 601 ;C 43 ; WX 600 ; N plus ; B 71 39 529 478 ;C 44 ; WX 600 ; N comma ; B 123 -111 393 174 ;C 45 ; WX 600 ; N hyphen ; B 100 203 500 313 ;C 46 ; WX 600 ; N period ; B 192 -15 408 171 ;C 47 ; WX 600 ; N slash ; B 98 -77 502 626 ;C 48 ; WX 600 ; N zero ; B 87 -15 513 616 ;C 49 ; WX 600 ; N one ; B 81 0 539 616 ;C 50 ; WX 600 ; N two ; B 61 0 499 616 ;C 51 ; WX 600 ; N three ; B 63 -15 501 616 ;C 52 ; WX 600 ; N four ; B 53 0 507 616 ;C 53 ; WX 600 ; N five ; B 70 -15 521 601 ;C 54 ; WX 600 ; N six ; B 90 -15 521 616 ;C 55 ; WX 600 ; N seven ; B 55 0 494 601 ;C 56 ; WX 600 ; N eight ; B 83 -15 517 616 ;C 57 ; WX 600 ; N nine ; B 79 -15 510 616 ;C 58 ; WX 600 ; N colon ; B 191 -15 407 425 ;C 59 ; WX 600 ; N semicolon ; B 123 -111 408 425 ;C 60 ; WX 600 ; N less ; B 66 15 523 501 ;C 61 ; WX 600 ; N equal ; B 71 118 529 398 ;C 62 ; WX 600 ; N greater ; B 77 15 534 501 ;C 63 ; WX 600 ; N question ; B 98 -14 501 580 ;C 64 ; WX 600 ; N at ; B 16 -15 584 616 ;C 65 ; WX 600 ; N A ; B -9 0 609 562 ;C 66 ; WX 600 ; N B ; B 30 0 573 562 ;C 67 ; WX 600 ; N C ; B 22 -18 560 580 ;C 68 ; WX 600 ; N D ; B 30 0 594 562 ;C 69 ; WX 600 ; N E ; B 25 0 560 562 ;C 70 ; WX 600 ; N F ; B 39 0 570 562 ;C 71 ; WX 600 ; N G ; B 22 -18 594 580 ;C 72 ; WX 600 ; N H ; B 20 0 580 562 ;C 73 ; WX 600 ; N I ; B 77 0 523 562 ;C 74 ; WX 600 ; N J ; B 37 -18 601 562 ;C 75 ; WX 600 ; N K ; B 21 0 599 562 ;C 76 ; WX 600 ; N L ; B 39 0 578 562 ;C 77 ; WX 600 ; N M ; B -2 0 602 562 ;C 78 ; WX 600 ; N N ; B 8 -12 610 562 ;C 79 ; WX 600 ; N O ; B 22 -18 578 580 ;C 80 ; WX 600 ; N P ; B 48 0 559 562 ;C 81 ; WX 600 ; N Q ; B 32 -138 578 580 ;C 82 ; WX 600 ; N R ; B 24 0 599 562 ;C 83 ; WX 600 ; N S ; B 47 -22 553 582 ;C 84 ; WX 600 ; N T ; B 21 0 579 562 ;C 85 ; WX 600 ; N U ; B 4 -18 596 562 ;C 86 ; WX 600 ; N V ; B -13 0 613 562 ;C 87 ; WX 600 ; N W ; B -18 0 618 562 ;C 88 ; WX 600 ; N X ; B 12 0 588 562 ;C 89 ; WX 600 ; N Y ; B 12 0 589 562 ;C 90 ; WX 600 ; N Z ; B 62 0 539 562 ;C 91 ; WX 600 ; N bracketleft ; B 245 -102 475 616 ;C 92 ; WX 600 ; N backslash ; B 99 -77 503 626 ;C 93 ; WX 600 ; N bracketright ; B 125 -102 355 616 ;C 94 ; WX 600 ; N asciicircum ; B 108 250 492 616 ;C 95 ; WX 600 ; N underscore ; B 0 -125 600 -75 ;C 96 ; WX 600 ; N quoteleft ; B 178 277 428 562 ;C 97 ; WX 600 ; N a ; B 35 -15 570 454 ;C 98 ; WX 600 ; N b ; B 0 -15 584 626 ;C 99 ; WX 600 ; N c ; B 40 -15 545 459 ;C 100 ; WX 600 ; N d ; B 20 -15 591 626 ;C 101 ; WX 600 ; N e ; B 40 -15 563 454 ;C 102 ; WX 600 ; N f ; B 83 0 547 626 ; L i fi ; L l fl ;C 103 ; WX 600 ; N g ; B 30 -146 580 454 ;C 104 ; WX 600 ; N h ; B 5 0 592 626 ;C 105 ; WX 600 ; N i ; B 77 0 523 658 ;C 106 ; WX 600 ; N j ; B 63 -146 440 658 ;C 107 ; WX 600 ; N k ; B 20 0 585 626 ;C 108 ; WX 600 ; N l ; B 77 0 523 626 ;C 109 ; WX 600 ; N m ; B -22 0 626 454 ;C 110 ; WX 600 ; N n ; B 18 0 592 454 ;C 111 ; WX 600 ; N o ; B 30 -15 570 454 ;C 112 ; WX 600 ; N p ; B -1 -142 570 454 ;C 113 ; WX 600 ; N q ; B 20 -142 591 454 ;C 114 ; WX 600 ; N r ; B 47 0 580 454 ;C 115 ; WX 600 ; N s ; B 68 -17 535 459 ;C 116 ; WX 600 ; N t ; B 47 -15 532 562 ;C 117 ; WX 600 ; N u ; B -1 -15 569 439 ;C 118 ; WX 600 ; N v ; B -1 0 601 439 ;C 119 ; WX 600 ; N w ; B -18 0 618 439 ;C 120 ; WX 600 ; N x ; B 6 0 594 439 ;C 121 ; WX 600 ; N y ; B -4 -142 601 439 ;C 122 ; WX 600 ; N z ; B 81 0 520 439 ;C 123 ; WX 600 ; N braceleft ; B 160 -102 464 616 ;C 124 ; WX 600 ; N bar ; B 255 -250 345 750 ;C 125 ; WX 600 ; N braceright ; B 136 -102 440 616 ;C 126 ; WX 600 ; N asciitilde ; B 71 153 530 356 ;C 161 ; WX 600 ; N exclamdown ; B 202 -146 398 449 ;C 162 ; WX 600 ; N cent ; B 66 -49 518 614 ;C 163 ; WX 600 ; N sterling ; B 72 -28 558 611 ;C 164 ; WX 600 ; N fraction ; B 25 -60 576 661 ;C 165 ; WX 600 ; N yen ; B 10 0 590 562 ;C 166 ; WX 600 ; N florin ; B -30 -131 572 616 ;C 167 ; WX 600 ; N section ; B 83 -70 517 580 ;C 168 ; WX 600 ; N currency ; B 54 49 546 517 ;C 169 ; WX 600 ; N quotesingle ; B 227 277 373 562 ;C 170 ; WX 600 ; N quotedblleft ; B 71 277 535 562 ;C 171 ; WX 600 ; N guillemotleft ; B 8 70 553 446 ;C 172 ; WX 600 ; N guilsinglleft ; B 141 70 459 446 ;C 173 ; WX 600 ; N guilsinglright ; B 141 70 459 446 ;C 174 ; WX 600 ; N fi ; B 12 0 593 626 ;C 175 ; WX 600 ; N fl ; B 12 0 593 626 ;C 177 ; WX 600 ; N endash ; B 65 203 535 313 ;C 178 ; WX 600 ; N dagger ; B 106 -70 494 580 ;C 179 ; WX 600 ; N daggerdbl ; B 106 -70 494 580 ;C 180 ; WX 600 ; N periodcentered ; B 196 165 404 351 ;C 182 ; WX 600 ; N paragraph ; B 6 -70 576 580 ;C 183 ; WX 600 ; N bullet ; B 140 132 460 430 ;C 184 ; WX 600 ; N quotesinglbase ; B 175 -142 427 143 ;C 185 ; WX 600 ; N quotedblbase ; B 65 -142 529 143 ;C 186 ; WX 600 ; N quotedblright ; B 61 277 525 562 ;C 187 ; WX 600 ; N guillemotright ; B 47 70 592 446 ;C 188 ; WX 600 ; N ellipsis ; B 26 -15 574 116 ;C 189 ; WX 600 ; N perthousand ; B -113 -15 713 616 ;C 191 ; WX 600 ; N questiondown ; B 99 -146 502 449 ;C 193 ; WX 600 ; N grave ; B 132 508 395 661 ;C 194 ; WX 600 ; N acute ; B 205 508 468 661 ;C 195 ; WX 600 ; N circumflex ; B 103 483 497 657 ;C 196 ; WX 600 ; N tilde ; B 89 493 512 636 ;C 197 ; WX 600 ; N macron ; B 88 505 512 585 ;C 198 ; WX 600 ; N breve ; B 83 468 517 631 ;C 199 ; WX 600 ; N dotaccent ; B 230 498 370 638 ;C 200 ; WX 600 ; N dieresis ; B 128 498 472 638 ;C 202 ; WX 600 ; N ring ; B 198 481 402 678 ;C 203 ; WX 600 ; N cedilla ; B 205 -206 387 0 ;C 205 ; WX 600 ; N hungarumlaut ; B 68 488 588 661 ;C 206 ; WX 600 ; N ogonek ; B 169 -199 400 0 ;C 207 ; WX 600 ; N caron ; B 103 493 497 667 ;C 208 ; WX 600 ; N emdash ; B -10 203 610 313 ;C 225 ; WX 600 ; N AE ; B -29 0 602 562 ;C 227 ; WX 600 ; N ordfeminine ; B 147 196 453 580 ;C 232 ; WX 600 ; N Lslash ; B 39 0 578 562 ;C 233 ; WX 600 ; N Oslash ; B 22 -22 578 584 ;C 234 ; WX 600 ; N OE ; B -25 0 595 562 ;C 235 ; WX 600 ; N ordmasculine ; B 147 196 453 580 ;C 241 ; WX 600 ; N ae ; B -4 -15 601 454 ;C 245 ; WX 600 ; N dotlessi ; B 77 0 523 439 ;C 248 ; WX 600 ; N lslash ; B 77 0 523 626 ;C 249 ; WX 600 ; N oslash ; B 30 -24 570 463 ;C 250 ; WX 600 ; N oe ; B -18 -15 611 454 ;C 251 ; WX 600 ; N germandbls ; B 22 -15 596 626 ;C -1 ; WX 600 ; N Idieresis ; B 77 0 523 761 ;C -1 ; WX 600 ; N eacute ; B 40 -15 563 661 ;C -1 ; WX 600 ; N abreve ; B 35 -15 570 661 ;C -1 ; WX 600 ; N uhungarumlaut ; B -1 -15 628 661 ;C -1 ; WX 600 ; N ecaron ; B 40 -15 563 667 ;C -1 ; WX 600 ; N Ydieresis ; B 12 0 589 761 ;C -1 ; WX 600 ; N divide ; B 71 16 529 500 ;C -1 ; WX 600 ; N Yacute ; B 12 0 589 784 ;C -1 ; WX 600 ; N Acircumflex ; B -9 0 609 780 ;C -1 ; WX 600 ; N aacute ; B 35 -15 570 661 ;C -1 ; WX 600 ; N Ucircumflex ; B 4 -18 596 780 ;C -1 ; WX 600 ; N yacute ; B -4 -142 601 661 ;C -1 ; WX 600 ; N scommaaccent ; B 68 -250 535 459 ;C -1 ; WX 600 ; N ecircumflex ; B 40 -15 563 657 ;C -1 ; WX 600 ; N Uring ; B 4 -18 596 801 ;C -1 ; WX 600 ; N Udieresis ; B 4 -18 596 761 ;C -1 ; WX 600 ; N aogonek ; B 35 -199 586 454 ;C -1 ; WX 600 ; N Uacute ; B 4 -18 596 784 ;C -1 ; WX 600 ; N uogonek ; B -1 -199 585 439 ;C -1 ; WX 600 ; N Edieresis ; B 25 0 560 761 ;C -1 ; WX 600 ; N Dcroat ; B 30 0 594 562 ;C -1 ; WX 600 ; N commaaccent ; B 205 -250 397 -57 ;C -1 ; WX 600 ; N copyright ; B 0 -18 600 580 ;C -1 ; WX 600 ; N Emacron ; B 25 0 560 708 ;C -1 ; WX 600 ; N ccaron ; B 40 -15 545 667 ;C -1 ; WX 600 ; N aring ; B 35 -15 570 678 ;C -1 ; WX 600 ; N Ncommaaccent ; B 8 -250 610 562 ;C -1 ; WX 600 ; N lacute ; B 77 0 523 801 ;C -1 ; WX 600 ; N agrave ; B 35 -15 570 661 ;C -1 ; WX 600 ; N Tcommaaccent ; B 21 -250 579 562 ;C -1 ; WX 600 ; N Cacute ; B 22 -18 560 784 ;C -1 ; WX 600 ; N atilde ; B 35 -15 570 636 ;C -1 ; WX 600 ; N Edotaccent ; B 25 0 560 761 ;C -1 ; WX 600 ; N scaron ; B 68 -17 535 667 ;C -1 ; WX 600 ; N scedilla ; B 68 -206 535 459 ;C -1 ; WX 600 ; N iacute ; B 77 0 523 661 ;C -1 ; WX 600 ; N lozenge ; B 66 0 534 740 ;C -1 ; WX 600 ; N Rcaron ; B 24 0 599 790 ;C -1 ; WX 600 ; N Gcommaaccent ; B 22 -250 594 580 ;C -1 ; WX 600 ; N ucircumflex ; B -1 -15 569 657 ;C -1 ; WX 600 ; N acircumflex ; B 35 -15 570 657 ;C -1 ; WX 600 ; N Amacron ; B -9 0 609 708 ;C -1 ; WX 600 ; N rcaron ; B 47 0 580 667 ;C -1 ; WX 600 ; N ccedilla ; B 40 -206 545 459 ;C -1 ; WX 600 ; N Zdotaccent ; B 62 0 539 761 ;C -1 ; WX 600 ; N Thorn ; B 48 0 557 562 ;C -1 ; WX 600 ; N Omacron ; B 22 -18 578 708 ;C -1 ; WX 600 ; N Racute ; B 24 0 599 784 ;C -1 ; WX 600 ; N Sacute ; B 47 -22 553 784 ;C -1 ; WX 600 ; N dcaron ; B 20 -15 727 626 ;C -1 ; WX 600 ; N Umacron ; B 4 -18 596 708 ;C -1 ; WX 600 ; N uring ; B -1 -15 569 678 ;C -1 ; WX 600 ; N threesuperior ; B 138 222 433 616 ;C -1 ; WX 600 ; N Ograve ; B 22 -18 578 784 ;C -1 ; WX 600 ; N Agrave ; B -9 0 609 784 ;C -1 ; WX 600 ; N Abreve ; B -9 0 609 784 ;C -1 ; WX 600 ; N multiply ; B 81 39 520 478 ;C -1 ; WX 600 ; N uacute ; B -1 -15 569 661 ;C -1 ; WX 600 ; N Tcaron ; B 21 0 579 790 ;C -1 ; WX 600 ; N partialdiff ; B 63 -38 537 728 ;C -1 ; WX 600 ; N ydieresis ; B -4 -142 601 638 ;C -1 ; WX 600 ; N Nacute ; B 8 -12 610 784 ;C -1 ; WX 600 ; N icircumflex ; B 73 0 523 657 ;C -1 ; WX 600 ; N Ecircumflex ; B 25 0 560 780 ;C -1 ; WX 600 ; N adieresis ; B 35 -15 570 638 ;C -1 ; WX 600 ; N edieresis ; B 40 -15 563 638 ;C -1 ; WX 600 ; N cacute ; B 40 -15 545 661 ;C -1 ; WX 600 ; N nacute ; B 18 0 592 661 ;C -1 ; WX 600 ; N umacron ; B -1 -15 569 585 ;C -1 ; WX 600 ; N Ncaron ; B 8 -12 610 790 ;C -1 ; WX 600 ; N Iacute ; B 77 0 523 784 ;C -1 ; WX 600 ; N plusminus ; B 71 24 529 515 ;C -1 ; WX 600 ; N brokenbar ; B 255 -175 345 675 ;C -1 ; WX 600 ; N registered ; B 0 -18 600 580 ;C -1 ; WX 600 ; N Gbreve ; B 22 -18 594 784 ;C -1 ; WX 600 ; N Idotaccent ; B 77 0 523 761 ;C -1 ; WX 600 ; N summation ; B 15 -10 586 706 ;C -1 ; WX 600 ; N Egrave ; B 25 0 560 784 ;C -1 ; WX 600 ; N racute ; B 47 0 580 661 ;C -1 ; WX 600 ; N omacron ; B 30 -15 570 585 ;C -1 ; WX 600 ; N Zacute ; B 62 0 539 784 ;C -1 ; WX 600 ; N Zcaron ; B 62 0 539 790 ;C -1 ; WX 600 ; N greaterequal ; B 26 0 523 696 ;C -1 ; WX 600 ; N Eth ; B 30 0 594 562 ;C -1 ; WX 600 ; N Ccedilla ; B 22 -206 560 580 ;C -1 ; WX 600 ; N lcommaaccent ; B 77 -250 523 626 ;C -1 ; WX 600 ; N tcaron ; B 47 -15 532 703 ;C -1 ; WX 600 ; N eogonek ; B 40 -199 563 454 ;C -1 ; WX 600 ; N Uogonek ; B 4 -199 596 562 ;C -1 ; WX 600 ; N Aacute ; B -9 0 609 784 ;C -1 ; WX 600 ; N Adieresis ; B -9 0 609 761 ;C -1 ; WX 600 ; N egrave ; B 40 -15 563 661 ;C -1 ; WX 600 ; N zacute ; B 81 0 520 661 ;C -1 ; WX 600 ; N iogonek ; B 77 -199 523 658 ;C -1 ; WX 600 ; N Oacute ; B 22 -18 578 784 ;C -1 ; WX 600 ; N oacute ; B 30 -15 570 661 ;C -1 ; WX 600 ; N amacron ; B 35 -15 570 585 ;C -1 ; WX 600 ; N sacute ; B 68 -17 535 661 ;C -1 ; WX 600 ; N idieresis ; B 77 0 523 618 ;C -1 ; WX 600 ; N Ocircumflex ; B 22 -18 578 780 ;C -1 ; WX 600 ; N Ugrave ; B 4 -18 596 784 ;C -1 ; WX 600 ; N Delta ; B 6 0 594 688 ;C -1 ; WX 600 ; N thorn ; B -14 -142 570 626 ;C -1 ; WX 600 ; N twosuperior ; B 143 230 436 616 ;C -1 ; WX 600 ; N Odieresis ; B 22 -18 578 761 ;C -1 ; WX 600 ; N mu ; B -1 -142 569 439 ;C -1 ; WX 600 ; N igrave ; B 77 0 523 661 ;C -1 ; WX 600 ; N ohungarumlaut ; B 30 -15 668 661 ;C -1 ; WX 600 ; N Eogonek ; B 25 -199 576 562 ;C -1 ; WX 600 ; N dcroat ; B 20 -15 591 626 ;C -1 ; WX 600 ; N threequarters ; B -47 -60 648 661 ;C -1 ; WX 600 ; N Scedilla ; B 47 -206 553 582 ;C -1 ; WX 600 ; N lcaron ; B 77 0 597 626 ;C -1 ; WX 600 ; N Kcommaaccent ; B 21 -250 599 562 ;C -1 ; WX 600 ; N Lacute ; B 39 0 578 784 ;C -1 ; WX 600 ; N trademark ; B -9 230 749 562 ;C -1 ; WX 600 ; N edotaccent ; B 40 -15 563 638 ;C -1 ; WX 600 ; N Igrave ; B 77 0 523 784 ;C -1 ; WX 600 ; N Imacron ; B 77 0 523 708 ;C -1 ; WX 600 ; N Lcaron ; B 39 0 637 562 ;C -1 ; WX 600 ; N onehalf ; B -47 -60 648 661 ;C -1 ; WX 600 ; N lessequal ; B 26 0 523 696 ;C -1 ; WX 600 ; N ocircumflex ; B 30 -15 570 657 ;C -1 ; WX 600 ; N ntilde ; B 18 0 592 636 ;C -1 ; WX 600 ; N Uhungarumlaut ; B 4 -18 638 784 ;C -1 ; WX 600 ; N Eacute ; B 25 0 560 784 ;C -1 ; WX 600 ; N emacron ; B 40 -15 563 585 ;C -1 ; WX 600 ; N gbreve ; B 30 -146 580 661 ;C -1 ; WX 600 ; N onequarter ; B -56 -60 656 661 ;C -1 ; WX 600 ; N Scaron ; B 47 -22 553 790 ;C -1 ; WX 600 ; N Scommaaccent ; B 47 -250 553 582 ;C -1 ; WX 600 ; N Ohungarumlaut ; B 22 -18 628 784 ;C -1 ; WX 600 ; N degree ; B 86 243 474 616 ;C -1 ; WX 600 ; N ograve ; B 30 -15 570 661 ;C -1 ; WX 600 ; N Ccaron ; B 22 -18 560 790 ;C -1 ; WX 600 ; N ugrave ; B -1 -15 569 661 ;C -1 ; WX 600 ; N radical ; B -19 -104 473 778 ;C -1 ; WX 600 ; N Dcaron ; B 30 0 594 790 ;C -1 ; WX 600 ; N rcommaaccent ; B 47 -250 580 454 ;C -1 ; WX 600 ; N Ntilde ; B 8 -12 610 759 ;C -1 ; WX 600 ; N otilde ; B 30 -15 570 636 ;C -1 ; WX 600 ; N Rcommaaccent ; B 24 -250 599 562 ;C -1 ; WX 600 ; N Lcommaaccent ; B 39 -250 578 562 ;C -1 ; WX 600 ; N Atilde ; B -9 0 609 759 ;C -1 ; WX 600 ; N Aogonek ; B -9 -199 625 562 ;C -1 ; WX 600 ; N Aring ; B -9 0 609 801 ;C -1 ; WX 600 ; N Otilde ; B 22 -18 578 759 ;C -1 ; WX 600 ; N zdotaccent ; B 81 0 520 638 ;C -1 ; WX 600 ; N Ecaron ; B 25 0 560 790 ;C -1 ; WX 600 ; N Iogonek ; B 77 -199 523 562 ;C -1 ; WX 600 ; N kcommaaccent ; B 20 -250 585 626 ;C -1 ; WX 600 ; N minus ; B 71 203 529 313 ;C -1 ; WX 600 ; N Icircumflex ; B 77 0 523 780 ;C -1 ; WX 600 ; N ncaron ; B 18 0 592 667 ;C -1 ; WX 600 ; N tcommaaccent ; B 47 -250 532 562 ;C -1 ; WX 600 ; N logicalnot ; B 71 103 529 413 ;C -1 ; WX 600 ; N odieresis ; B 30 -15 570 638 ;C -1 ; WX 600 ; N udieresis ; B -1 -15 569 638 ;C -1 ; WX 600 ; N notequal ; B 12 -47 537 563 ;C -1 ; WX 600 ; N gcommaaccent ; B 30 -146 580 714 ;C -1 ; WX 600 ; N eth ; B 58 -27 543 626 ;C -1 ; WX 600 ; N zcaron ; B 81 0 520 667 ;C -1 ; WX 600 ; N ncommaaccent ; B 18 -250 592 454 ;C -1 ; WX 600 ; N onesuperior ; B 153 230 447 616 ;C -1 ; WX 600 ; N imacron ; B 77 0 523 585 ;C -1 ; WX 600 ; N Euro ; B 0 0 0 0 ;EndCharMetricsEndFontMetrics'</body><body package="Type1">courierBoldOblique	"from http://www.adobe.com/devnet/font.html "	&lt;font: #'Courier-BoldOblique'&gt;	^self		windowsName: 'Courier New'		afm: 'StartFontMetrics 4.1Comment Copyright (c) 1989, 1990, 1991, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.Comment Creation Date: Mon Jun 23 16:28:46 1997Comment UniqueID 43049Comment VMusage 17529 79244FontName Courier-BoldObliqueFullName Courier Bold ObliqueFamilyName CourierWeight BoldItalicAngle -12IsFixedPitch trueCharacterSet ExtendedRomanFontBBox -57 -250 869 801 UnderlinePosition -100UnderlineThickness 50Version 003.000Notice Copyright (c) 1989, 1990, 1991, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.EncodingScheme AdobeStandardEncodingCapHeight 562XHeight 439Ascender 629Descender -157StdHW 84StdVW 106StartCharMetrics 315C 32 ; WX 600 ; N space ; B 0 0 0 0 ;C 33 ; WX 600 ; N exclam ; B 215 -15 495 572 ;C 34 ; WX 600 ; N quotedbl ; B 211 277 585 562 ;C 35 ; WX 600 ; N numbersign ; B 88 -45 641 651 ;C 36 ; WX 600 ; N dollar ; B 87 -126 630 666 ;C 37 ; WX 600 ; N percent ; B 101 -15 625 616 ;C 38 ; WX 600 ; N ampersand ; B 61 -15 595 543 ;C 39 ; WX 600 ; N quoteright ; B 229 277 543 562 ;C 40 ; WX 600 ; N parenleft ; B 265 -102 592 616 ;C 41 ; WX 600 ; N parenright ; B 117 -102 444 616 ;C 42 ; WX 600 ; N asterisk ; B 179 219 598 601 ;C 43 ; WX 600 ; N plus ; B 114 39 596 478 ;C 44 ; WX 600 ; N comma ; B 99 -111 430 174 ;C 45 ; WX 600 ; N hyphen ; B 143 203 567 313 ;C 46 ; WX 600 ; N period ; B 206 -15 427 171 ;C 47 ; WX 600 ; N slash ; B 90 -77 626 626 ;C 48 ; WX 600 ; N zero ; B 135 -15 593 616 ;C 49 ; WX 600 ; N one ; B 93 0 562 616 ;C 50 ; WX 600 ; N two ; B 61 0 594 616 ;C 51 ; WX 600 ; N three ; B 71 -15 571 616 ;C 52 ; WX 600 ; N four ; B 81 0 559 616 ;C 53 ; WX 600 ; N five ; B 77 -15 621 601 ;C 54 ; WX 600 ; N six ; B 135 -15 652 616 ;C 55 ; WX 600 ; N seven ; B 147 0 622 601 ;C 56 ; WX 600 ; N eight ; B 115 -15 604 616 ;C 57 ; WX 600 ; N nine ; B 75 -15 592 616 ;C 58 ; WX 600 ; N colon ; B 205 -15 480 425 ;C 59 ; WX 600 ; N semicolon ; B 99 -111 481 425 ;C 60 ; WX 600 ; N less ; B 120 15 613 501 ;C 61 ; WX 600 ; N equal ; B 96 118 614 398 ;C 62 ; WX 600 ; N greater ; B 97 15 589 501 ;C 63 ; WX 600 ; N question ; B 183 -14 592 580 ;C 64 ; WX 600 ; N at ; B 65 -15 642 616 ;C 65 ; WX 600 ; N A ; B -9 0 632 562 ;C 66 ; WX 600 ; N B ; B 30 0 630 562 ;C 67 ; WX 600 ; N C ; B 74 -18 675 580 ;C 68 ; WX 600 ; N D ; B 30 0 664 562 ;C 69 ; WX 600 ; N E ; B 25 0 670 562 ;C 70 ; WX 600 ; N F ; B 39 0 684 562 ;C 71 ; WX 600 ; N G ; B 74 -18 675 580 ;C 72 ; WX 600 ; N H ; B 20 0 700 562 ;C 73 ; WX 600 ; N I ; B 77 0 643 562 ;C 74 ; WX 600 ; N J ; B 58 -18 721 562 ;C 75 ; WX 600 ; N K ; B 21 0 692 562 ;C 76 ; WX 600 ; N L ; B 39 0 636 562 ;C 77 ; WX 600 ; N M ; B -2 0 722 562 ;C 78 ; WX 600 ; N N ; B 8 -12 730 562 ;C 79 ; WX 600 ; N O ; B 74 -18 645 580 ;C 80 ; WX 600 ; N P ; B 48 0 643 562 ;C 81 ; WX 600 ; N Q ; B 83 -138 636 580 ;C 82 ; WX 600 ; N R ; B 24 0 617 562 ;C 83 ; WX 600 ; N S ; B 54 -22 673 582 ;C 84 ; WX 600 ; N T ; B 86 0 679 562 ;C 85 ; WX 600 ; N U ; B 101 -18 716 562 ;C 86 ; WX 600 ; N V ; B 84 0 733 562 ;C 87 ; WX 600 ; N W ; B 79 0 738 562 ;C 88 ; WX 600 ; N X ; B 12 0 690 562 ;C 89 ; WX 600 ; N Y ; B 109 0 709 562 ;C 90 ; WX 600 ; N Z ; B 62 0 637 562 ;C 91 ; WX 600 ; N bracketleft ; B 223 -102 606 616 ;C 92 ; WX 600 ; N backslash ; B 222 -77 496 626 ;C 93 ; WX 600 ; N bracketright ; B 103 -102 486 616 ;C 94 ; WX 600 ; N asciicircum ; B 171 250 556 616 ;C 95 ; WX 600 ; N underscore ; B -27 -125 585 -75 ;C 96 ; WX 600 ; N quoteleft ; B 297 277 487 562 ;C 97 ; WX 600 ; N a ; B 61 -15 593 454 ;C 98 ; WX 600 ; N b ; B 13 -15 636 626 ;C 99 ; WX 600 ; N c ; B 81 -15 631 459 ;C 100 ; WX 600 ; N d ; B 60 -15 645 626 ;C 101 ; WX 600 ; N e ; B 81 -15 605 454 ;C 102 ; WX 600 ; N f ; B 83 0 677 626 ; L i fi ; L l fl ;C 103 ; WX 600 ; N g ; B 40 -146 674 454 ;C 104 ; WX 600 ; N h ; B 18 0 615 626 ;C 105 ; WX 600 ; N i ; B 77 0 546 658 ;C 106 ; WX 600 ; N j ; B 36 -146 580 658 ;C 107 ; WX 600 ; N k ; B 33 0 643 626 ;C 108 ; WX 600 ; N l ; B 77 0 546 626 ;C 109 ; WX 600 ; N m ; B -22 0 649 454 ;C 110 ; WX 600 ; N n ; B 18 0 615 454 ;C 111 ; WX 600 ; N o ; B 71 -15 622 454 ;C 112 ; WX 600 ; N p ; B -32 -142 622 454 ;C 113 ; WX 600 ; N q ; B 60 -142 685 454 ;C 114 ; WX 600 ; N r ; B 47 0 655 454 ;C 115 ; WX 600 ; N s ; B 66 -17 608 459 ;C 116 ; WX 600 ; N t ; B 118 -15 567 562 ;C 117 ; WX 600 ; N u ; B 70 -15 592 439 ;C 118 ; WX 600 ; N v ; B 70 0 695 439 ;C 119 ; WX 600 ; N w ; B 53 0 712 439 ;C 120 ; WX 600 ; N x ; B 6 0 671 439 ;C 121 ; WX 600 ; N y ; B -21 -142 695 439 ;C 122 ; WX 600 ; N z ; B 81 0 614 439 ;C 123 ; WX 600 ; N braceleft ; B 203 -102 595 616 ;C 124 ; WX 600 ; N bar ; B 201 -250 505 750 ;C 125 ; WX 600 ; N braceright ; B 114 -102 506 616 ;C 126 ; WX 600 ; N asciitilde ; B 120 153 590 356 ;C 161 ; WX 600 ; N exclamdown ; B 196 -146 477 449 ;C 162 ; WX 600 ; N cent ; B 121 -49 605 614 ;C 163 ; WX 600 ; N sterling ; B 106 -28 650 611 ;C 164 ; WX 600 ; N fraction ; B 22 -60 708 661 ;C 165 ; WX 600 ; N yen ; B 98 0 710 562 ;C 166 ; WX 600 ; N florin ; B -57 -131 702 616 ;C 167 ; WX 600 ; N section ; B 74 -70 620 580 ;C 168 ; WX 600 ; N currency ; B 77 49 644 517 ;C 169 ; WX 600 ; N quotesingle ; B 303 277 493 562 ;C 170 ; WX 600 ; N quotedblleft ; B 190 277 594 562 ;C 171 ; WX 600 ; N guillemotleft ; B 62 70 639 446 ;C 172 ; WX 600 ; N guilsinglleft ; B 195 70 545 446 ;C 173 ; WX 600 ; N guilsinglright ; B 165 70 514 446 ;C 174 ; WX 600 ; N fi ; B 12 0 644 626 ;C 175 ; WX 600 ; N fl ; B 12 0 644 626 ;C 177 ; WX 600 ; N endash ; B 108 203 602 313 ;C 178 ; WX 600 ; N dagger ; B 175 -70 586 580 ;C 179 ; WX 600 ; N daggerdbl ; B 121 -70 587 580 ;C 180 ; WX 600 ; N periodcentered ; B 248 165 461 351 ;C 182 ; WX 600 ; N paragraph ; B 61 -70 700 580 ;C 183 ; WX 600 ; N bullet ; B 196 132 523 430 ;C 184 ; WX 600 ; N quotesinglbase ; B 144 -142 458 143 ;C 185 ; WX 600 ; N quotedblbase ; B 34 -142 560 143 ;C 186 ; WX 600 ; N quotedblright ; B 119 277 645 562 ;C 187 ; WX 600 ; N guillemotright ; B 71 70 647 446 ;C 188 ; WX 600 ; N ellipsis ; B 35 -15 587 116 ;C 189 ; WX 600 ; N perthousand ; B -45 -15 743 616 ;C 191 ; WX 600 ; N questiondown ; B 100 -146 509 449 ;C 193 ; WX 600 ; N grave ; B 272 508 503 661 ;C 194 ; WX 600 ; N acute ; B 312 508 609 661 ;C 195 ; WX 600 ; N circumflex ; B 212 483 607 657 ;C 196 ; WX 600 ; N tilde ; B 199 493 643 636 ;C 197 ; WX 600 ; N macron ; B 195 505 637 585 ;C 198 ; WX 600 ; N breve ; B 217 468 652 631 ;C 199 ; WX 600 ; N dotaccent ; B 348 498 493 638 ;C 200 ; WX 600 ; N dieresis ; B 246 498 595 638 ;C 202 ; WX 600 ; N ring ; B 319 481 528 678 ;C 203 ; WX 600 ; N cedilla ; B 168 -206 368 0 ;C 205 ; WX 600 ; N hungarumlaut ; B 171 488 729 661 ;C 206 ; WX 600 ; N ogonek ; B 143 -199 367 0 ;C 207 ; WX 600 ; N caron ; B 238 493 633 667 ;C 208 ; WX 600 ; N emdash ; B 33 203 677 313 ;C 225 ; WX 600 ; N AE ; B -29 0 708 562 ;C 227 ; WX 600 ; N ordfeminine ; B 188 196 526 580 ;C 232 ; WX 600 ; N Lslash ; B 39 0 636 562 ;C 233 ; WX 600 ; N Oslash ; B 48 -22 673 584 ;C 234 ; WX 600 ; N OE ; B 26 0 701 562 ;C 235 ; WX 600 ; N ordmasculine ; B 188 196 543 580 ;C 241 ; WX 600 ; N ae ; B 21 -15 652 454 ;C 245 ; WX 600 ; N dotlessi ; B 77 0 546 439 ;C 248 ; WX 600 ; N lslash ; B 77 0 587 626 ;C 249 ; WX 600 ; N oslash ; B 54 -24 638 463 ;C 250 ; WX 600 ; N oe ; B 18 -15 662 454 ;C 251 ; WX 600 ; N germandbls ; B 22 -15 629 626 ;C -1 ; WX 600 ; N Idieresis ; B 77 0 643 761 ;C -1 ; WX 600 ; N eacute ; B 81 -15 609 661 ;C -1 ; WX 600 ; N abreve ; B 61 -15 658 661 ;C -1 ; WX 600 ; N uhungarumlaut ; B 70 -15 769 661 ;C -1 ; WX 600 ; N ecaron ; B 81 -15 633 667 ;C -1 ; WX 600 ; N Ydieresis ; B 109 0 709 761 ;C -1 ; WX 600 ; N divide ; B 114 16 596 500 ;C -1 ; WX 600 ; N Yacute ; B 109 0 709 784 ;C -1 ; WX 600 ; N Acircumflex ; B -9 0 632 780 ;C -1 ; WX 600 ; N aacute ; B 61 -15 609 661 ;C -1 ; WX 600 ; N Ucircumflex ; B 101 -18 716 780 ;C -1 ; WX 600 ; N yacute ; B -21 -142 695 661 ;C -1 ; WX 600 ; N scommaaccent ; B 66 -250 608 459 ;C -1 ; WX 600 ; N ecircumflex ; B 81 -15 607 657 ;C -1 ; WX 600 ; N Uring ; B 101 -18 716 801 ;C -1 ; WX 600 ; N Udieresis ; B 101 -18 716 761 ;C -1 ; WX 600 ; N aogonek ; B 61 -199 593 454 ;C -1 ; WX 600 ; N Uacute ; B 101 -18 716 784 ;C -1 ; WX 600 ; N uogonek ; B 70 -199 592 439 ;C -1 ; WX 600 ; N Edieresis ; B 25 0 670 761 ;C -1 ; WX 600 ; N Dcroat ; B 30 0 664 562 ;C -1 ; WX 600 ; N commaaccent ; B 151 -250 385 -57 ;C -1 ; WX 600 ; N copyright ; B 53 -18 667 580 ;C -1 ; WX 600 ; N Emacron ; B 25 0 670 708 ;C -1 ; WX 600 ; N ccaron ; B 81 -15 633 667 ;C -1 ; WX 600 ; N aring ; B 61 -15 593 678 ;C -1 ; WX 600 ; N Ncommaaccent ; B 8 -250 730 562 ;C -1 ; WX 600 ; N lacute ; B 77 0 639 801 ;C -1 ; WX 600 ; N agrave ; B 61 -15 593 661 ;C -1 ; WX 600 ; N Tcommaaccent ; B 86 -250 679 562 ;C -1 ; WX 600 ; N Cacute ; B 74 -18 675 784 ;C -1 ; WX 600 ; N atilde ; B 61 -15 643 636 ;C -1 ; WX 600 ; N Edotaccent ; B 25 0 670 761 ;C -1 ; WX 600 ; N scaron ; B 66 -17 633 667 ;C -1 ; WX 600 ; N scedilla ; B 66 -206 608 459 ;C -1 ; WX 600 ; N iacute ; B 77 0 609 661 ;C -1 ; WX 600 ; N lozenge ; B 145 0 614 740 ;C -1 ; WX 600 ; N Rcaron ; B 24 0 659 790 ;C -1 ; WX 600 ; N Gcommaaccent ; B 74 -250 675 580 ;C -1 ; WX 600 ; N ucircumflex ; B 70 -15 597 657 ;C -1 ; WX 600 ; N acircumflex ; B 61 -15 607 657 ;C -1 ; WX 600 ; N Amacron ; B -9 0 633 708 ;C -1 ; WX 600 ; N rcaron ; B 47 0 655 667 ;C -1 ; WX 600 ; N ccedilla ; B 81 -206 631 459 ;C -1 ; WX 600 ; N Zdotaccent ; B 62 0 637 761 ;C -1 ; WX 600 ; N Thorn ; B 48 0 620 562 ;C -1 ; WX 600 ; N Omacron ; B 74 -18 663 708 ;C -1 ; WX 600 ; N Racute ; B 24 0 665 784 ;C -1 ; WX 600 ; N Sacute ; B 54 -22 673 784 ;C -1 ; WX 600 ; N dcaron ; B 60 -15 861 626 ;C -1 ; WX 600 ; N Umacron ; B 101 -18 716 708 ;C -1 ; WX 600 ; N uring ; B 70 -15 592 678 ;C -1 ; WX 600 ; N threesuperior ; B 193 222 526 616 ;C -1 ; WX 600 ; N Ograve ; B 74 -18 645 784 ;C -1 ; WX 600 ; N Agrave ; B -9 0 632 784 ;C -1 ; WX 600 ; N Abreve ; B -9 0 684 784 ;C -1 ; WX 600 ; N multiply ; B 104 39 606 478 ;C -1 ; WX 600 ; N uacute ; B 70 -15 599 661 ;C -1 ; WX 600 ; N Tcaron ; B 86 0 679 790 ;C -1 ; WX 600 ; N partialdiff ; B 91 -38 627 728 ;C -1 ; WX 600 ; N ydieresis ; B -21 -142 695 638 ;C -1 ; WX 600 ; N Nacute ; B 8 -12 730 784 ;C -1 ; WX 600 ; N icircumflex ; B 77 0 577 657 ;C -1 ; WX 600 ; N Ecircumflex ; B 25 0 670 780 ;C -1 ; WX 600 ; N adieresis ; B 61 -15 595 638 ;C -1 ; WX 600 ; N edieresis ; B 81 -15 605 638 ;C -1 ; WX 600 ; N cacute ; B 81 -15 649 661 ;C -1 ; WX 600 ; N nacute ; B 18 0 639 661 ;C -1 ; WX 600 ; N umacron ; B 70 -15 637 585 ;C -1 ; WX 600 ; N Ncaron ; B 8 -12 730 790 ;C -1 ; WX 600 ; N Iacute ; B 77 0 643 784 ;C -1 ; WX 600 ; N plusminus ; B 76 24 614 515 ;C -1 ; WX 600 ; N brokenbar ; B 217 -175 489 675 ;C -1 ; WX 600 ; N registered ; B 53 -18 667 580 ;C -1 ; WX 600 ; N Gbreve ; B 74 -18 684 784 ;C -1 ; WX 600 ; N Idotaccent ; B 77 0 643 761 ;C -1 ; WX 600 ; N summation ; B 15 -10 672 706 ;C -1 ; WX 600 ; N Egrave ; B 25 0 670 784 ;C -1 ; WX 600 ; N racute ; B 47 0 655 661 ;C -1 ; WX 600 ; N omacron ; B 71 -15 637 585 ;C -1 ; WX 600 ; N Zacute ; B 62 0 665 784 ;C -1 ; WX 600 ; N Zcaron ; B 62 0 659 790 ;C -1 ; WX 600 ; N greaterequal ; B 26 0 627 696 ;C -1 ; WX 600 ; N Eth ; B 30 0 664 562 ;C -1 ; WX 600 ; N Ccedilla ; B 74 -206 675 580 ;C -1 ; WX 600 ; N lcommaaccent ; B 77 -250 546 626 ;C -1 ; WX 600 ; N tcaron ; B 118 -15 627 703 ;C -1 ; WX 600 ; N eogonek ; B 81 -199 605 454 ;C -1 ; WX 600 ; N Uogonek ; B 101 -199 716 562 ;C -1 ; WX 600 ; N Aacute ; B -9 0 655 784 ;C -1 ; WX 600 ; N Adieresis ; B -9 0 632 761 ;C -1 ; WX 600 ; N egrave ; B 81 -15 605 661 ;C -1 ; WX 600 ; N zacute ; B 81 0 614 661 ;C -1 ; WX 600 ; N iogonek ; B 77 -199 546 658 ;C -1 ; WX 600 ; N Oacute ; B 74 -18 645 784 ;C -1 ; WX 600 ; N oacute ; B 71 -15 649 661 ;C -1 ; WX 600 ; N amacron ; B 61 -15 637 585 ;C -1 ; WX 600 ; N sacute ; B 66 -17 609 661 ;C -1 ; WX 600 ; N idieresis ; B 77 0 561 618 ;C -1 ; WX 600 ; N Ocircumflex ; B 74 -18 645 780 ;C -1 ; WX 600 ; N Ugrave ; B 101 -18 716 784 ;C -1 ; WX 600 ; N Delta ; B 6 0 594 688 ;C -1 ; WX 600 ; N thorn ; B -32 -142 622 626 ;C -1 ; WX 600 ; N twosuperior ; B 191 230 542 616 ;C -1 ; WX 600 ; N Odieresis ; B 74 -18 645 761 ;C -1 ; WX 600 ; N mu ; B 49 -142 592 439 ;C -1 ; WX 600 ; N igrave ; B 77 0 546 661 ;C -1 ; WX 600 ; N ohungarumlaut ; B 71 -15 809 661 ;C -1 ; WX 600 ; N Eogonek ; B 25 -199 670 562 ;C -1 ; WX 600 ; N dcroat ; B 60 -15 712 626 ;C -1 ; WX 600 ; N threequarters ; B 8 -60 699 661 ;C -1 ; WX 600 ; N Scedilla ; B 54 -206 673 582 ;C -1 ; WX 600 ; N lcaron ; B 77 0 731 626 ;C -1 ; WX 600 ; N Kcommaaccent ; B 21 -250 692 562 ;C -1 ; WX 600 ; N Lacute ; B 39 0 636 784 ;C -1 ; WX 600 ; N trademark ; B 86 230 869 562 ;C -1 ; WX 600 ; N edotaccent ; B 81 -15 605 638 ;C -1 ; WX 600 ; N Igrave ; B 77 0 643 784 ;C -1 ; WX 600 ; N Imacron ; B 77 0 663 708 ;C -1 ; WX 600 ; N Lcaron ; B 39 0 757 562 ;C -1 ; WX 600 ; N onehalf ; B 22 -60 716 661 ;C -1 ; WX 600 ; N lessequal ; B 26 0 671 696 ;C -1 ; WX 600 ; N ocircumflex ; B 71 -15 622 657 ;C -1 ; WX 600 ; N ntilde ; B 18 0 643 636 ;C -1 ; WX 600 ; N Uhungarumlaut ; B 101 -18 805 784 ;C -1 ; WX 600 ; N Eacute ; B 25 0 670 784 ;C -1 ; WX 600 ; N emacron ; B 81 -15 637 585 ;C -1 ; WX 600 ; N gbreve ; B 40 -146 674 661 ;C -1 ; WX 600 ; N onequarter ; B 13 -60 707 661 ;C -1 ; WX 600 ; N Scaron ; B 54 -22 689 790 ;C -1 ; WX 600 ; N Scommaaccent ; B 54 -250 673 582 ;C -1 ; WX 600 ; N Ohungarumlaut ; B 74 -18 795 784 ;C -1 ; WX 600 ; N degree ; B 173 243 570 616 ;C -1 ; WX 600 ; N ograve ; B 71 -15 622 661 ;C -1 ; WX 600 ; N Ccaron ; B 74 -18 689 790 ;C -1 ; WX 600 ; N ugrave ; B 70 -15 592 661 ;C -1 ; WX 600 ; N radical ; B 67 -104 635 778 ;C -1 ; WX 600 ; N Dcaron ; B 30 0 664 790 ;C -1 ; WX 600 ; N rcommaaccent ; B 47 -250 655 454 ;C -1 ; WX 600 ; N Ntilde ; B 8 -12 730 759 ;C -1 ; WX 600 ; N otilde ; B 71 -15 643 636 ;C -1 ; WX 600 ; N Rcommaaccent ; B 24 -250 617 562 ;C -1 ; WX 600 ; N Lcommaaccent ; B 39 -250 636 562 ;C -1 ; WX 600 ; N Atilde ; B -9 0 669 759 ;C -1 ; WX 600 ; N Aogonek ; B -9 -199 632 562 ;C -1 ; WX 600 ; N Aring ; B -9 0 632 801 ;C -1 ; WX 600 ; N Otilde ; B 74 -18 669 759 ;C -1 ; WX 600 ; N zdotaccent ; B 81 0 614 638 ;C -1 ; WX 600 ; N Ecaron ; B 25 0 670 790 ;C -1 ; WX 600 ; N Iogonek ; B 77 -199 643 562 ;C -1 ; WX 600 ; N kcommaaccent ; B 33 -250 643 626 ;C -1 ; WX 600 ; N minus ; B 114 203 596 313 ;C -1 ; WX 600 ; N Icircumflex ; B 77 0 643 780 ;C -1 ; WX 600 ; N ncaron ; B 18 0 633 667 ;C -1 ; WX 600 ; N tcommaaccent ; B 118 -250 567 562 ;C -1 ; WX 600 ; N logicalnot ; B 135 103 617 413 ;C -1 ; WX 600 ; N odieresis ; B 71 -15 622 638 ;C -1 ; WX 600 ; N udieresis ; B 70 -15 595 638 ;C -1 ; WX 600 ; N notequal ; B 30 -47 626 563 ;C -1 ; WX 600 ; N gcommaaccent ; B 40 -146 674 714 ;C -1 ; WX 600 ; N eth ; B 93 -27 661 626 ;C -1 ; WX 600 ; N zcaron ; B 81 0 643 667 ;C -1 ; WX 600 ; N ncommaaccent ; B 18 -250 615 454 ;C -1 ; WX 600 ; N onesuperior ; B 212 230 514 616 ;C -1 ; WX 600 ; N imacron ; B 77 0 575 585 ;C -1 ; WX 600 ; N Euro ; B 0 0 0 0 ;EndCharMetricsEndFontMetrics'</body><body package="Type1">courierOblique	"from http://www.adobe.com/devnet/font.html "	&lt;font: #'Courier-Oblique'&gt;	^self		windowsName: 'Courier New'		afm: 'StartFontMetrics 4.1Comment Copyright (c) 1989, 1990, 1991, 1992, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.Comment Creation Date: Thu May  1 17:37:52 1997Comment UniqueID 43051Comment VMusage 16248 75829FontName Courier-ObliqueFullName Courier ObliqueFamilyName CourierWeight MediumItalicAngle -12IsFixedPitch trueCharacterSet ExtendedRomanFontBBox -27 -250 849 805 UnderlinePosition -100UnderlineThickness 50Version 003.000Notice Copyright (c) 1989, 1990, 1991, 1992, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.EncodingScheme AdobeStandardEncodingCapHeight 562XHeight 426Ascender 629Descender -157StdHW 51StdVW 51StartCharMetrics 315C 32 ; WX 600 ; N space ; B 0 0 0 0 ;C 33 ; WX 600 ; N exclam ; B 243 -15 464 572 ;C 34 ; WX 600 ; N quotedbl ; B 273 328 532 562 ;C 35 ; WX 600 ; N numbersign ; B 133 -32 596 639 ;C 36 ; WX 600 ; N dollar ; B 108 -126 596 662 ;C 37 ; WX 600 ; N percent ; B 134 -15 599 622 ;C 38 ; WX 600 ; N ampersand ; B 87 -15 580 543 ;C 39 ; WX 600 ; N quoteright ; B 283 328 495 562 ;C 40 ; WX 600 ; N parenleft ; B 313 -108 572 622 ;C 41 ; WX 600 ; N parenright ; B 137 -108 396 622 ;C 42 ; WX 600 ; N asterisk ; B 212 257 580 607 ;C 43 ; WX 600 ; N plus ; B 129 44 580 470 ;C 44 ; WX 600 ; N comma ; B 157 -112 370 122 ;C 45 ; WX 600 ; N hyphen ; B 152 231 558 285 ;C 46 ; WX 600 ; N period ; B 238 -15 382 109 ;C 47 ; WX 600 ; N slash ; B 112 -80 604 629 ;C 48 ; WX 600 ; N zero ; B 154 -15 575 622 ;C 49 ; WX 600 ; N one ; B 98 0 515 622 ;C 50 ; WX 600 ; N two ; B 70 0 568 622 ;C 51 ; WX 600 ; N three ; B 82 -15 538 622 ;C 52 ; WX 600 ; N four ; B 108 0 541 622 ;C 53 ; WX 600 ; N five ; B 99 -15 589 607 ;C 54 ; WX 600 ; N six ; B 155 -15 629 622 ;C 55 ; WX 600 ; N seven ; B 182 0 612 607 ;C 56 ; WX 600 ; N eight ; B 132 -15 588 622 ;C 57 ; WX 600 ; N nine ; B 93 -15 574 622 ;C 58 ; WX 600 ; N colon ; B 238 -15 441 385 ;C 59 ; WX 600 ; N semicolon ; B 157 -112 441 385 ;C 60 ; WX 600 ; N less ; B 96 42 610 472 ;C 61 ; WX 600 ; N equal ; B 109 138 600 376 ;C 62 ; WX 600 ; N greater ; B 85 42 599 472 ;C 63 ; WX 600 ; N question ; B 222 -15 583 572 ;C 64 ; WX 600 ; N at ; B 127 -15 582 622 ;C 65 ; WX 600 ; N A ; B 3 0 607 562 ;C 66 ; WX 600 ; N B ; B 43 0 616 562 ;C 67 ; WX 600 ; N C ; B 93 -18 655 580 ;C 68 ; WX 600 ; N D ; B 43 0 645 562 ;C 69 ; WX 600 ; N E ; B 53 0 660 562 ;C 70 ; WX 600 ; N F ; B 53 0 660 562 ;C 71 ; WX 600 ; N G ; B 83 -18 645 580 ;C 72 ; WX 600 ; N H ; B 32 0 687 562 ;C 73 ; WX 600 ; N I ; B 96 0 623 562 ;C 74 ; WX 600 ; N J ; B 52 -18 685 562 ;C 75 ; WX 600 ; N K ; B 38 0 671 562 ;C 76 ; WX 600 ; N L ; B 47 0 607 562 ;C 77 ; WX 600 ; N M ; B 4 0 715 562 ;C 78 ; WX 600 ; N N ; B 7 -13 712 562 ;C 79 ; WX 600 ; N O ; B 94 -18 625 580 ;C 80 ; WX 600 ; N P ; B 79 0 644 562 ;C 81 ; WX 600 ; N Q ; B 95 -138 625 580 ;C 82 ; WX 600 ; N R ; B 38 0 598 562 ;C 83 ; WX 600 ; N S ; B 76 -20 650 580 ;C 84 ; WX 600 ; N T ; B 108 0 665 562 ;C 85 ; WX 600 ; N U ; B 125 -18 702 562 ;C 86 ; WX 600 ; N V ; B 105 -13 723 562 ;C 87 ; WX 600 ; N W ; B 106 -13 722 562 ;C 88 ; WX 600 ; N X ; B 23 0 675 562 ;C 89 ; WX 600 ; N Y ; B 133 0 695 562 ;C 90 ; WX 600 ; N Z ; B 86 0 610 562 ;C 91 ; WX 600 ; N bracketleft ; B 246 -108 574 622 ;C 92 ; WX 600 ; N backslash ; B 249 -80 468 629 ;C 93 ; WX 600 ; N bracketright ; B 135 -108 463 622 ;C 94 ; WX 600 ; N asciicircum ; B 175 354 587 622 ;C 95 ; WX 600 ; N underscore ; B -27 -125 584 -75 ;C 96 ; WX 600 ; N quoteleft ; B 343 328 457 562 ;C 97 ; WX 600 ; N a ; B 76 -15 569 441 ;C 98 ; WX 600 ; N b ; B 29 -15 625 629 ;C 99 ; WX 600 ; N c ; B 106 -15 608 441 ;C 100 ; WX 600 ; N d ; B 85 -15 640 629 ;C 101 ; WX 600 ; N e ; B 106 -15 598 441 ;C 102 ; WX 600 ; N f ; B 114 0 662 629 ; L i fi ; L l fl ;C 103 ; WX 600 ; N g ; B 61 -157 657 441 ;C 104 ; WX 600 ; N h ; B 33 0 592 629 ;C 105 ; WX 600 ; N i ; B 95 0 515 657 ;C 106 ; WX 600 ; N j ; B 52 -157 550 657 ;C 107 ; WX 600 ; N k ; B 58 0 633 629 ;C 108 ; WX 600 ; N l ; B 95 0 515 629 ;C 109 ; WX 600 ; N m ; B -5 0 615 441 ;C 110 ; WX 600 ; N n ; B 26 0 585 441 ;C 111 ; WX 600 ; N o ; B 102 -15 588 441 ;C 112 ; WX 600 ; N p ; B -24 -157 605 441 ;C 113 ; WX 600 ; N q ; B 85 -157 682 441 ;C 114 ; WX 600 ; N r ; B 60 0 636 441 ;C 115 ; WX 600 ; N s ; B 78 -15 584 441 ;C 116 ; WX 600 ; N t ; B 167 -15 561 561 ;C 117 ; WX 600 ; N u ; B 101 -15 572 426 ;C 118 ; WX 600 ; N v ; B 90 -10 681 426 ;C 119 ; WX 600 ; N w ; B 76 -10 695 426 ;C 120 ; WX 600 ; N x ; B 20 0 655 426 ;C 121 ; WX 600 ; N y ; B -4 -157 683 426 ;C 122 ; WX 600 ; N z ; B 99 0 593 426 ;C 123 ; WX 600 ; N braceleft ; B 233 -108 569 622 ;C 124 ; WX 600 ; N bar ; B 222 -250 485 750 ;C 125 ; WX 600 ; N braceright ; B 140 -108 477 622 ;C 126 ; WX 600 ; N asciitilde ; B 116 197 600 320 ;C 161 ; WX 600 ; N exclamdown ; B 225 -157 445 430 ;C 162 ; WX 600 ; N cent ; B 151 -49 588 614 ;C 163 ; WX 600 ; N sterling ; B 124 -21 621 611 ;C 164 ; WX 600 ; N fraction ; B 84 -57 646 665 ;C 165 ; WX 600 ; N yen ; B 120 0 693 562 ;C 166 ; WX 600 ; N florin ; B -26 -143 671 622 ;C 167 ; WX 600 ; N section ; B 104 -78 590 580 ;C 168 ; WX 600 ; N currency ; B 94 58 628 506 ;C 169 ; WX 600 ; N quotesingle ; B 345 328 460 562 ;C 170 ; WX 600 ; N quotedblleft ; B 262 328 541 562 ;C 171 ; WX 600 ; N guillemotleft ; B 92 70 652 446 ;C 172 ; WX 600 ; N guilsinglleft ; B 204 70 540 446 ;C 173 ; WX 600 ; N guilsinglright ; B 170 70 506 446 ;C 174 ; WX 600 ; N fi ; B 3 0 619 629 ;C 175 ; WX 600 ; N fl ; B 3 0 619 629 ;C 177 ; WX 600 ; N endash ; B 124 231 586 285 ;C 178 ; WX 600 ; N dagger ; B 217 -78 546 580 ;C 179 ; WX 600 ; N daggerdbl ; B 163 -78 546 580 ;C 180 ; WX 600 ; N periodcentered ; B 275 189 434 327 ;C 182 ; WX 600 ; N paragraph ; B 100 -78 630 562 ;C 183 ; WX 600 ; N bullet ; B 224 130 485 383 ;C 184 ; WX 600 ; N quotesinglbase ; B 185 -134 397 100 ;C 185 ; WX 600 ; N quotedblbase ; B 115 -134 478 100 ;C 186 ; WX 600 ; N quotedblright ; B 213 328 576 562 ;C 187 ; WX 600 ; N guillemotright ; B 58 70 618 446 ;C 188 ; WX 600 ; N ellipsis ; B 46 -15 575 111 ;C 189 ; WX 600 ; N perthousand ; B 59 -15 627 622 ;C 191 ; WX 600 ; N questiondown ; B 105 -157 466 430 ;C 193 ; WX 600 ; N grave ; B 294 497 484 672 ;C 194 ; WX 600 ; N acute ; B 348 497 612 672 ;C 195 ; WX 600 ; N circumflex ; B 229 477 581 654 ;C 196 ; WX 600 ; N tilde ; B 212 489 629 606 ;C 197 ; WX 600 ; N macron ; B 232 525 600 565 ;C 198 ; WX 600 ; N breve ; B 279 501 576 609 ;C 199 ; WX 600 ; N dotaccent ; B 373 537 478 640 ;C 200 ; WX 600 ; N dieresis ; B 272 537 579 640 ;C 202 ; WX 600 ; N ring ; B 332 463 500 627 ;C 203 ; WX 600 ; N cedilla ; B 197 -151 344 10 ;C 205 ; WX 600 ; N hungarumlaut ; B 239 497 683 672 ;C 206 ; WX 600 ; N ogonek ; B 189 -172 377 4 ;C 207 ; WX 600 ; N caron ; B 262 492 614 669 ;C 208 ; WX 600 ; N emdash ; B 49 231 661 285 ;C 225 ; WX 600 ; N AE ; B 3 0 655 562 ;C 227 ; WX 600 ; N ordfeminine ; B 209 249 512 580 ;C 232 ; WX 600 ; N Lslash ; B 47 0 607 562 ;C 233 ; WX 600 ; N Oslash ; B 94 -80 625 629 ;C 234 ; WX 600 ; N OE ; B 59 0 672 562 ;C 235 ; WX 600 ; N ordmasculine ; B 210 249 535 580 ;C 241 ; WX 600 ; N ae ; B 41 -15 626 441 ;C 245 ; WX 600 ; N dotlessi ; B 95 0 515 426 ;C 248 ; WX 600 ; N lslash ; B 95 0 587 629 ;C 249 ; WX 600 ; N oslash ; B 102 -80 588 506 ;C 250 ; WX 600 ; N oe ; B 54 -15 615 441 ;C 251 ; WX 600 ; N germandbls ; B 48 -15 617 629 ;C -1 ; WX 600 ; N Idieresis ; B 96 0 623 753 ;C -1 ; WX 600 ; N eacute ; B 106 -15 612 672 ;C -1 ; WX 600 ; N abreve ; B 76 -15 576 609 ;C -1 ; WX 600 ; N uhungarumlaut ; B 101 -15 723 672 ;C -1 ; WX 600 ; N ecaron ; B 106 -15 614 669 ;C -1 ; WX 600 ; N Ydieresis ; B 133 0 695 753 ;C -1 ; WX 600 ; N divide ; B 136 48 573 467 ;C -1 ; WX 600 ; N Yacute ; B 133 0 695 805 ;C -1 ; WX 600 ; N Acircumflex ; B 3 0 607 787 ;C -1 ; WX 600 ; N aacute ; B 76 -15 612 672 ;C -1 ; WX 600 ; N Ucircumflex ; B 125 -18 702 787 ;C -1 ; WX 600 ; N yacute ; B -4 -157 683 672 ;C -1 ; WX 600 ; N scommaaccent ; B 78 -250 584 441 ;C -1 ; WX 600 ; N ecircumflex ; B 106 -15 598 654 ;C -1 ; WX 600 ; N Uring ; B 125 -18 702 760 ;C -1 ; WX 600 ; N Udieresis ; B 125 -18 702 753 ;C -1 ; WX 600 ; N aogonek ; B 76 -172 569 441 ;C -1 ; WX 600 ; N Uacute ; B 125 -18 702 805 ;C -1 ; WX 600 ; N uogonek ; B 101 -172 572 426 ;C -1 ; WX 600 ; N Edieresis ; B 53 0 660 753 ;C -1 ; WX 600 ; N Dcroat ; B 43 0 645 562 ;C -1 ; WX 600 ; N commaaccent ; B 145 -250 323 -58 ;C -1 ; WX 600 ; N copyright ; B 53 -18 667 580 ;C -1 ; WX 600 ; N Emacron ; B 53 0 660 698 ;C -1 ; WX 600 ; N ccaron ; B 106 -15 614 669 ;C -1 ; WX 600 ; N aring ; B 76 -15 569 627 ;C -1 ; WX 600 ; N Ncommaaccent ; B 7 -250 712 562 ;C -1 ; WX 600 ; N lacute ; B 95 0 640 805 ;C -1 ; WX 600 ; N agrave ; B 76 -15 569 672 ;C -1 ; WX 600 ; N Tcommaaccent ; B 108 -250 665 562 ;C -1 ; WX 600 ; N Cacute ; B 93 -18 655 805 ;C -1 ; WX 600 ; N atilde ; B 76 -15 629 606 ;C -1 ; WX 600 ; N Edotaccent ; B 53 0 660 753 ;C -1 ; WX 600 ; N scaron ; B 78 -15 614 669 ;C -1 ; WX 600 ; N scedilla ; B 78 -151 584 441 ;C -1 ; WX 600 ; N iacute ; B 95 0 612 672 ;C -1 ; WX 600 ; N lozenge ; B 94 0 519 706 ;C -1 ; WX 600 ; N Rcaron ; B 38 0 642 802 ;C -1 ; WX 600 ; N Gcommaaccent ; B 83 -250 645 580 ;C -1 ; WX 600 ; N ucircumflex ; B 101 -15 572 654 ;C -1 ; WX 600 ; N acircumflex ; B 76 -15 581 654 ;C -1 ; WX 600 ; N Amacron ; B 3 0 607 698 ;C -1 ; WX 600 ; N rcaron ; B 60 0 636 669 ;C -1 ; WX 600 ; N ccedilla ; B 106 -151 614 441 ;C -1 ; WX 600 ; N Zdotaccent ; B 86 0 610 753 ;C -1 ; WX 600 ; N Thorn ; B 79 0 606 562 ;C -1 ; WX 600 ; N Omacron ; B 94 -18 628 698 ;C -1 ; WX 600 ; N Racute ; B 38 0 670 805 ;C -1 ; WX 600 ; N Sacute ; B 76 -20 650 805 ;C -1 ; WX 600 ; N dcaron ; B 85 -15 849 629 ;C -1 ; WX 600 ; N Umacron ; B 125 -18 702 698 ;C -1 ; WX 600 ; N uring ; B 101 -15 572 627 ;C -1 ; WX 600 ; N threesuperior ; B 213 240 501 622 ;C -1 ; WX 600 ; N Ograve ; B 94 -18 625 805 ;C -1 ; WX 600 ; N Agrave ; B 3 0 607 805 ;C -1 ; WX 600 ; N Abreve ; B 3 0 607 732 ;C -1 ; WX 600 ; N multiply ; B 103 43 607 470 ;C -1 ; WX 600 ; N uacute ; B 101 -15 602 672 ;C -1 ; WX 600 ; N Tcaron ; B 108 0 665 802 ;C -1 ; WX 600 ; N partialdiff ; B 45 -38 546 710 ;C -1 ; WX 600 ; N ydieresis ; B -4 -157 683 620 ;C -1 ; WX 600 ; N Nacute ; B 7 -13 712 805 ;C -1 ; WX 600 ; N icircumflex ; B 95 0 551 654 ;C -1 ; WX 600 ; N Ecircumflex ; B 53 0 660 787 ;C -1 ; WX 600 ; N adieresis ; B 76 -15 575 620 ;C -1 ; WX 600 ; N edieresis ; B 106 -15 598 620 ;C -1 ; WX 600 ; N cacute ; B 106 -15 612 672 ;C -1 ; WX 600 ; N nacute ; B 26 0 602 672 ;C -1 ; WX 600 ; N umacron ; B 101 -15 600 565 ;C -1 ; WX 600 ; N Ncaron ; B 7 -13 712 802 ;C -1 ; WX 600 ; N Iacute ; B 96 0 640 805 ;C -1 ; WX 600 ; N plusminus ; B 96 44 594 558 ;C -1 ; WX 600 ; N brokenbar ; B 238 -175 469 675 ;C -1 ; WX 600 ; N registered ; B 53 -18 667 580 ;C -1 ; WX 600 ; N Gbreve ; B 83 -18 645 732 ;C -1 ; WX 600 ; N Idotaccent ; B 96 0 623 753 ;C -1 ; WX 600 ; N summation ; B 15 -10 670 706 ;C -1 ; WX 600 ; N Egrave ; B 53 0 660 805 ;C -1 ; WX 600 ; N racute ; B 60 0 636 672 ;C -1 ; WX 600 ; N omacron ; B 102 -15 600 565 ;C -1 ; WX 600 ; N Zacute ; B 86 0 670 805 ;C -1 ; WX 600 ; N Zcaron ; B 86 0 642 802 ;C -1 ; WX 600 ; N greaterequal ; B 98 0 594 710 ;C -1 ; WX 600 ; N Eth ; B 43 0 645 562 ;C -1 ; WX 600 ; N Ccedilla ; B 93 -151 658 580 ;C -1 ; WX 600 ; N lcommaaccent ; B 95 -250 515 629 ;C -1 ; WX 600 ; N tcaron ; B 167 -15 587 717 ;C -1 ; WX 600 ; N eogonek ; B 106 -172 598 441 ;C -1 ; WX 600 ; N Uogonek ; B 124 -172 702 562 ;C -1 ; WX 600 ; N Aacute ; B 3 0 660 805 ;C -1 ; WX 600 ; N Adieresis ; B 3 0 607 753 ;C -1 ; WX 600 ; N egrave ; B 106 -15 598 672 ;C -1 ; WX 600 ; N zacute ; B 99 0 612 672 ;C -1 ; WX 600 ; N iogonek ; B 95 -172 515 657 ;C -1 ; WX 600 ; N Oacute ; B 94 -18 640 805 ;C -1 ; WX 600 ; N oacute ; B 102 -15 612 672 ;C -1 ; WX 600 ; N amacron ; B 76 -15 600 565 ;C -1 ; WX 600 ; N sacute ; B 78 -15 612 672 ;C -1 ; WX 600 ; N idieresis ; B 95 0 545 620 ;C -1 ; WX 600 ; N Ocircumflex ; B 94 -18 625 787 ;C -1 ; WX 600 ; N Ugrave ; B 125 -18 702 805 ;C -1 ; WX 600 ; N Delta ; B 6 0 598 688 ;C -1 ; WX 600 ; N thorn ; B -24 -157 605 629 ;C -1 ; WX 600 ; N twosuperior ; B 230 249 535 622 ;C -1 ; WX 600 ; N Odieresis ; B 94 -18 625 753 ;C -1 ; WX 600 ; N mu ; B 72 -157 572 426 ;C -1 ; WX 600 ; N igrave ; B 95 0 515 672 ;C -1 ; WX 600 ; N ohungarumlaut ; B 102 -15 723 672 ;C -1 ; WX 600 ; N Eogonek ; B 53 -172 660 562 ;C -1 ; WX 600 ; N dcroat ; B 85 -15 704 629 ;C -1 ; WX 600 ; N threequarters ; B 73 -56 659 666 ;C -1 ; WX 600 ; N Scedilla ; B 76 -151 650 580 ;C -1 ; WX 600 ; N lcaron ; B 95 0 667 629 ;C -1 ; WX 600 ; N Kcommaaccent ; B 38 -250 671 562 ;C -1 ; WX 600 ; N Lacute ; B 47 0 607 805 ;C -1 ; WX 600 ; N trademark ; B 75 263 742 562 ;C -1 ; WX 600 ; N edotaccent ; B 106 -15 598 620 ;C -1 ; WX 600 ; N Igrave ; B 96 0 623 805 ;C -1 ; WX 600 ; N Imacron ; B 96 0 628 698 ;C -1 ; WX 600 ; N Lcaron ; B 47 0 632 562 ;C -1 ; WX 600 ; N onehalf ; B 65 -57 669 665 ;C -1 ; WX 600 ; N lessequal ; B 98 0 645 710 ;C -1 ; WX 600 ; N ocircumflex ; B 102 -15 588 654 ;C -1 ; WX 600 ; N ntilde ; B 26 0 629 606 ;C -1 ; WX 600 ; N Uhungarumlaut ; B 125 -18 761 805 ;C -1 ; WX 600 ; N Eacute ; B 53 0 670 805 ;C -1 ; WX 600 ; N emacron ; B 106 -15 600 565 ;C -1 ; WX 600 ; N gbreve ; B 61 -157 657 609 ;C -1 ; WX 600 ; N onequarter ; B 65 -57 674 665 ;C -1 ; WX 600 ; N Scaron ; B 76 -20 672 802 ;C -1 ; WX 600 ; N Scommaaccent ; B 76 -250 650 580 ;C -1 ; WX 600 ; N Ohungarumlaut ; B 94 -18 751 805 ;C -1 ; WX 600 ; N degree ; B 214 269 576 622 ;C -1 ; WX 600 ; N ograve ; B 102 -15 588 672 ;C -1 ; WX 600 ; N Ccaron ; B 93 -18 672 802 ;C -1 ; WX 600 ; N ugrave ; B 101 -15 572 672 ;C -1 ; WX 600 ; N radical ; B 85 -15 765 792 ;C -1 ; WX 600 ; N Dcaron ; B 43 0 645 802 ;C -1 ; WX 600 ; N rcommaaccent ; B 60 -250 636 441 ;C -1 ; WX 600 ; N Ntilde ; B 7 -13 712 729 ;C -1 ; WX 600 ; N otilde ; B 102 -15 629 606 ;C -1 ; WX 600 ; N Rcommaaccent ; B 38 -250 598 562 ;C -1 ; WX 600 ; N Lcommaaccent ; B 47 -250 607 562 ;C -1 ; WX 600 ; N Atilde ; B 3 0 655 729 ;C -1 ; WX 600 ; N Aogonek ; B 3 -172 607 562 ;C -1 ; WX 600 ; N Aring ; B 3 0 607 750 ;C -1 ; WX 600 ; N Otilde ; B 94 -18 655 729 ;C -1 ; WX 600 ; N zdotaccent ; B 99 0 593 620 ;C -1 ; WX 600 ; N Ecaron ; B 53 0 660 802 ;C -1 ; WX 600 ; N Iogonek ; B 96 -172 623 562 ;C -1 ; WX 600 ; N kcommaaccent ; B 58 -250 633 629 ;C -1 ; WX 600 ; N minus ; B 129 232 580 283 ;C -1 ; WX 600 ; N Icircumflex ; B 96 0 623 787 ;C -1 ; WX 600 ; N ncaron ; B 26 0 614 669 ;C -1 ; WX 600 ; N tcommaaccent ; B 165 -250 561 561 ;C -1 ; WX 600 ; N logicalnot ; B 155 108 591 369 ;C -1 ; WX 600 ; N odieresis ; B 102 -15 588 620 ;C -1 ; WX 600 ; N udieresis ; B 101 -15 575 620 ;C -1 ; WX 600 ; N notequal ; B 43 -16 621 529 ;C -1 ; WX 600 ; N gcommaaccent ; B 61 -157 657 708 ;C -1 ; WX 600 ; N eth ; B 102 -15 639 629 ;C -1 ; WX 600 ; N zcaron ; B 99 0 624 669 ;C -1 ; WX 600 ; N ncommaaccent ; B 26 -250 585 441 ;C -1 ; WX 600 ; N onesuperior ; B 231 249 491 622 ;C -1 ; WX 600 ; N imacron ; B 95 0 543 565 ;C -1 ; WX 600 ; N Euro ; B 0 0 0 0 ;EndCharMetricsEndFontMetrics'</body><body package="Type1">helvetica	"from http://www.adobe.com/devnet/font.html "	&lt;font: #Helvetica&gt;	^self		windowsName: 'Arial'		afm: 'StartFontMetrics 4.1Comment Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.Comment Creation Date: Thu May  1 12:38:23 1997Comment UniqueID 43054Comment VMusage 37069 48094FontName HelveticaFullName HelveticaFamilyName HelveticaWeight MediumItalicAngle 0IsFixedPitch falseCharacterSet ExtendedRomanFontBBox -166 -225 1000 931 UnderlinePosition -100UnderlineThickness 50Version 002.000Notice Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a trademark of Linotype-Hell AG and/or its subsidiaries.EncodingScheme WinAnsiEncodingCapHeight 718XHeight 523Ascender 718Descender -207StdHW 76StdVW 88StartCharMetrics 317C 32 ; WX 278 ; N space ; B 0 0 0 0 ;C 160 ; WX 278 ; N space ; B 0 0 0 0 ;C 33 ; WX 278 ; N exclam ; B 90 0 187 718 ;C 34 ; WX 355 ; N quotedbl ; B 70 463 285 718 ;C 35 ; WX 556 ; N numbersign ; B 28 0 529 688 ;C 36 ; WX 556 ; N dollar ; B 32 -115 520 775 ;C 37 ; WX 889 ; N percent ; B 39 -19 850 703 ;C 38 ; WX 667 ; N ampersand ; B 44 -15 645 718 ;C 146 ; WX 222 ; N quoteright ; B 53 463 157 718 ;C 40 ; WX 333 ; N parenleft ; B 68 -207 299 733 ;C 41 ; WX 333 ; N parenright ; B 34 -207 265 733 ;C 42 ; WX 389 ; N asterisk ; B 39 431 349 718 ;C 43 ; WX 584 ; N plus ; B 39 0 545 505 ;C 44 ; WX 278 ; N comma ; B 87 -147 191 106 ;C 45 ; WX 333 ; N hyphen ; B 44 232 289 322 ;C 173 ; WX 333 ; N hyphen ; B 44 232 289 322 ;C 46 ; WX 278 ; N period ; B 87 0 191 106 ;C 47 ; WX 278 ; N slash ; B -17 -19 295 737 ;C 48 ; WX 556 ; N zero ; B 37 -19 519 703 ;C 49 ; WX 556 ; N one ; B 101 0 359 703 ;C 50 ; WX 556 ; N two ; B 26 0 507 703 ;C 51 ; WX 556 ; N three ; B 34 -19 522 703 ;C 52 ; WX 556 ; N four ; B 25 0 523 703 ;C 53 ; WX 556 ; N five ; B 32 -19 514 688 ;C 54 ; WX 556 ; N six ; B 38 -19 518 703 ;C 55 ; WX 556 ; N seven ; B 37 0 523 688 ;C 56 ; WX 556 ; N eight ; B 38 -19 517 703 ;C 57 ; WX 556 ; N nine ; B 42 -19 514 703 ;C 58 ; WX 278 ; N colon ; B 87 0 191 516 ;C 59 ; WX 278 ; N semicolon ; B 87 -147 191 516 ;C 60 ; WX 584 ; N less ; B 48 11 536 495 ;C 61 ; WX 584 ; N equal ; B 39 115 545 390 ;C 62 ; WX 584 ; N greater ; B 48 11 536 495 ;C 63 ; WX 556 ; N question ; B 56 0 492 727 ;C 64 ; WX 1015 ; N at ; B 147 -19 868 737 ;C 65 ; WX 667 ; N A ; B 14 0 654 718 ;C 66 ; WX 667 ; N B ; B 74 0 627 718 ;C 67 ; WX 722 ; N C ; B 44 -19 681 737 ;C 68 ; WX 722 ; N D ; B 81 0 674 718 ;C 69 ; WX 667 ; N E ; B 86 0 616 718 ;C 70 ; WX 611 ; N F ; B 86 0 583 718 ;C 71 ; WX 778 ; N G ; B 48 -19 704 737 ;C 72 ; WX 722 ; N H ; B 77 0 646 718 ;C 73 ; WX 278 ; N I ; B 91 0 188 718 ;C 74 ; WX 500 ; N J ; B 17 -19 428 718 ;C 75 ; WX 667 ; N K ; B 76 0 663 718 ;C 76 ; WX 556 ; N L ; B 76 0 537 718 ;C 77 ; WX 833 ; N M ; B 73 0 761 718 ;C 78 ; WX 722 ; N N ; B 76 0 646 718 ;C 79 ; WX 778 ; N O ; B 39 -19 739 737 ;C 80 ; WX 667 ; N P ; B 86 0 622 718 ;C 81 ; WX 778 ; N Q ; B 39 -56 739 737 ;C 82 ; WX 722 ; N R ; B 88 0 684 718 ;C 83 ; WX 667 ; N S ; B 49 -19 620 737 ;C 84 ; WX 611 ; N T ; B 14 0 597 718 ;C 85 ; WX 722 ; N U ; B 79 -19 644 718 ;C 86 ; WX 667 ; N V ; B 20 0 647 718 ;C 87 ; WX 944 ; N W ; B 16 0 928 718 ;C 88 ; WX 667 ; N X ; B 19 0 648 718 ;C 89 ; WX 667 ; N Y ; B 14 0 653 718 ;C 90 ; WX 611 ; N Z ; B 23 0 588 718 ;C 91 ; WX 278 ; N bracketleft ; B 63 -196 250 722 ;C 92 ; WX 278 ; N backslash ; B -17 -19 295 737 ;C 93 ; WX 278 ; N bracketright ; B 28 -196 215 722 ;C 94 ; WX 469 ; N asciicircum ; B -14 264 483 688 ;C 95 ; WX 556 ; N underscore ; B 0 -125 556 -75 ;C 145 ; WX 222 ; N quoteleft ; B 65 470 169 725 ;C 97 ; WX 556 ; N a ; B 36 -15 530 538 ;C 98 ; WX 556 ; N b ; B 58 -15 517 718 ;C 99 ; WX 500 ; N c ; B 30 -15 477 538 ;C 100 ; WX 556 ; N d ; B 35 -15 499 718 ;C 101 ; WX 556 ; N e ; B 40 -15 516 538 ;C 102 ; WX 278 ; N f ; B 14 0 262 728 ; L i fi ; L l fl ;C 103 ; WX 556 ; N g ; B 40 -220 499 538 ;C 104 ; WX 556 ; N h ; B 65 0 491 718 ;C 105 ; WX 222 ; N i ; B 67 0 155 718 ;C 106 ; WX 222 ; N j ; B -16 -210 155 718 ;C 107 ; WX 500 ; N k ; B 67 0 501 718 ;C 108 ; WX 222 ; N l ; B 67 0 155 718 ;C 109 ; WX 833 ; N m ; B 65 0 769 538 ;C 110 ; WX 556 ; N n ; B 65 0 491 538 ;C 111 ; WX 556 ; N o ; B 35 -14 521 538 ;C 112 ; WX 556 ; N p ; B 58 -207 517 538 ;C 113 ; WX 556 ; N q ; B 35 -207 494 538 ;C 114 ; WX 333 ; N r ; B 77 0 332 538 ;C 115 ; WX 500 ; N s ; B 32 -15 464 538 ;C 116 ; WX 278 ; N t ; B 14 -7 257 669 ;C 117 ; WX 556 ; N u ; B 68 -15 489 523 ;C 118 ; WX 500 ; N v ; B 8 0 492 523 ;C 119 ; WX 722 ; N w ; B 14 0 709 523 ;C 120 ; WX 500 ; N x ; B 11 0 490 523 ;C 121 ; WX 500 ; N y ; B 11 -214 489 523 ;C 122 ; WX 500 ; N z ; B 31 0 469 523 ;C 123 ; WX 334 ; N braceleft ; B 42 -196 292 722 ;C 124 ; WX 260 ; N bar ; B 94 -225 167 775 ;C 125 ; WX 334 ; N braceright ; B 42 -196 292 722 ;C 126 ; WX 584 ; N asciitilde ; B 61 180 523 326 ;C 161 ; WX 333 ; N exclamdown ; B 118 -195 215 523 ;C 162 ; WX 556 ; N cent ; B 51 -115 513 623 ;C 163 ; WX 556 ; N sterling ; B 33 -16 539 718 ;C -1 ; WX 167 ; N fraction ; B -166 -19 333 703 ;C 165 ; WX 556 ; N yen ; B 3 0 553 688 ;C 131 ; WX 556 ; N florin ; B -11 -207 501 737 ;C 167 ; WX 556 ; N section ; B 43 -191 512 737 ;C 164 ; WX 556 ; N currency ; B 28 99 528 603 ;C 39 ; WX 191 ; N quotesingle ; B 59 463 132 718 ;C 147 ; WX 333 ; N quotedblleft ; B 38 470 307 725 ;C 170 ; WX 556 ; N guillemotleft ; B 97 108 459 446 ;C 139 ; WX 333 ; N guilsinglleft ; B 88 108 245 446 ;C 155 ; WX 333 ; N guilsinglright ; B 88 108 245 446 ;C -1 ; WX 500 ; N fi ; B 14 0 434 728 ;C -1 ; WX 500 ; N fl ; B 14 0 432 728 ;C 150 ; WX 556 ; N endash ; B 0 240 556 313 ;C 134 ; WX 556 ; N dagger ; B 43 -159 514 718 ;C 135 ; WX 556 ; N daggerdbl ; B 43 -159 514 718 ;C 183 ; WX 278 ; N periodcentered ; B 77 190 202 315 ;C 182 ; WX 537 ; N paragraph ; B 18 -173 497 718 ;C 149 ; WX 350 ; N bullet ; B 18 202 333 517 ;C 130 ; WX 222 ; N quotesinglbase ; B 53 -149 157 106 ;C 132 ; WX 333 ; N quotedblbase ; B 26 -149 295 106 ;C 148 ; WX 333 ; N quotedblright ; B 26 463 295 718 ;C 187 ; WX 556 ; N guillemotright ; B 97 108 459 446 ;C 133 ; WX 1000 ; N ellipsis ; B 115 0 885 106 ;C 137 ; WX 1000 ; N perthousand ; B 7 -19 994 703 ;C 191 ; WX 611 ; N questiondown ; B 91 -201 527 525 ;C 96 ; WX 333 ; N grave ; B 14 593 211 734 ;C 180 ; WX 333 ; N acute ; B 122 593 319 734 ;C 136 ; WX 333 ; N circumflex ; B 21 593 312 734 ;C 152 ; WX 333 ; N tilde ; B -4 606 337 722 ;C 175 ; WX 333 ; N macron ; B 10 627 323 684 ;C -1 ; WX 333 ; N breve ; B 13 595 321 731 ;C -1 ; WX 333 ; N dotaccent ; B 121 604 212 706 ;C 168 ; WX 333 ; N dieresis ; B 40 604 293 706 ;C -1 ; WX 333 ; N ring ; B 75 572 259 756 ;C 184 ; WX 333 ; N cedilla ; B 45 -225 259 0 ;C -1 ; WX 333 ; N hungarumlaut ; B 31 593 409 734 ;C -1 ; WX 333 ; N ogonek ; B 73 -225 287 0 ;C -1 ; WX 333 ; N caron ; B 21 593 312 734 ;C 151 ; WX 1000 ; N emdash ; B 0 240 1000 313 ;C 198 ; WX 1000 ; N AE ; B 8 0 951 718 ;C 170 ; WX 370 ; N ordfeminine ; B 24 405 346 737 ;C -1 ; WX 556 ; N Lslash ; B -20 0 537 718 ;C 216 ; WX 778 ; N Oslash ; B 39 -19 740 737 ;C 140 ; WX 1000 ; N OE ; B 36 -19 965 737 ;C 186 ; WX 365 ; N ordmasculine ; B 25 405 341 737 ;C 230 ; WX 889 ; N ae ; B 36 -15 847 538 ;C -1 ; WX 278 ; N dotlessi ; B 95 0 183 523 ;C -1 ; WX 222 ; N lslash ; B -20 0 242 718 ;C 248 ; WX 611 ; N oslash ; B 28 -22 537 545 ;C 156 ; WX 944 ; N oe ; B 35 -15 902 538 ;C 223 ; WX 611 ; N germandbls ; B 67 -15 571 728 ;C 207 ; WX 278 ; N Idieresis ; B 13 0 266 901 ;C 233 ; WX 556 ; N eacute ; B 40 -15 516 734 ;C -1 ; WX 556 ; N abreve ; B 36 -15 530 731 ;C -1 ; WX 556 ; N uhungarumlaut ; B 68 -15 521 734 ;C -1 ; WX 556 ; N ecaron ; B 40 -15 516 734 ;C 159 ; WX 667 ; N Ydieresis ; B 14 0 653 901 ;C 247 ; WX 584 ; N divide ; B 39 -19 545 524 ;C 221 ; WX 667 ; N Yacute ; B 14 0 653 929 ;C 194 ; WX 667 ; N Acircumflex ; B 14 0 654 929 ;C 225 ; WX 556 ; N aacute ; B 36 -15 530 734 ;C 219 ; WX 722 ; N Ucircumflex ; B 79 -19 644 929 ;C 253 ; WX 500 ; N yacute ; B 11 -214 489 734 ;C -1 ; WX 500 ; N scommaaccent ; B 32 -225 464 538 ;C 234 ; WX 556 ; N ecircumflex ; B 40 -15 516 734 ;C -1 ; WX 722 ; N Uring ; B 79 -19 644 931 ;C 220 ; WX 722 ; N Udieresis ; B 79 -19 644 901 ;C -1 ; WX 556 ; N aogonek ; B 36 -220 547 538 ;C 218 ; WX 722 ; N Uacute ; B 79 -19 644 929 ;C -1 ; WX 556 ; N uogonek ; B 68 -225 519 523 ;C 203 ; WX 667 ; N Edieresis ; B 86 0 616 901 ;C -1 ; WX 722 ; N Dcroat ; B 0 0 674 718 ;C -1 ; WX 250 ; N commaaccent ; B 87 -225 181 -40 ;C 169 ; WX 737 ; N copyright ; B -14 -19 752 737 ;C -1 ; WX 667 ; N Emacron ; B 86 0 616 879 ;C -1 ; WX 500 ; N ccaron ; B 30 -15 477 734 ;C 229 ; WX 556 ; N aring ; B 36 -15 530 756 ;C -1 ; WX 722 ; N Ncommaaccent ; B 76 -225 646 718 ;C -1 ; WX 222 ; N lacute ; B 67 0 264 929 ;C 224 ; WX 556 ; N agrave ; B 36 -15 530 734 ;C -1 ; WX 611 ; N Tcommaaccent ; B 14 -225 597 718 ;C -1 ; WX 722 ; N Cacute ; B 44 -19 681 929 ;C 227 ; WX 556 ; N atilde ; B 36 -15 530 722 ;C -1 ; WX 667 ; N Edotaccent ; B 86 0 616 901 ;C 154 ; WX 500 ; N scaron ; B 32 -15 464 734 ;C -1 ; WX 500 ; N scedilla ; B 32 -225 464 538 ;C 237 ; WX 278 ; N iacute ; B 95 0 292 734 ;C -1 ; WX 471 ; N lozenge ; B 10 0 462 728 ;C -1 ; WX 722 ; N Rcaron ; B 88 0 684 929 ;C -1 ; WX 778 ; N Gcommaaccent ; B 48 -225 704 737 ;C 251 ; WX 556 ; N ucircumflex ; B 68 -15 489 734 ;C 226 ; WX 556 ; N acircumflex ; B 36 -15 530 734 ;C -1 ; WX 667 ; N Amacron ; B 14 0 654 879 ;C -1 ; WX 333 ; N rcaron ; B 61 0 352 734 ;C 231 ; WX 500 ; N ccedilla ; B 30 -225 477 538 ;C -1 ; WX 611 ; N Zdotaccent ; B 23 0 588 901 ;C 222 ; WX 667 ; N Thorn ; B 86 0 622 718 ;C -1 ; WX 778 ; N Omacron ; B 39 -19 739 879 ;C -1 ; WX 722 ; N Racute ; B 88 0 684 929 ;C -1 ; WX 667 ; N Sacute ; B 49 -19 620 929 ;C -1 ; WX 643 ; N dcaron ; B 35 -15 655 718 ;C -1 ; WX 722 ; N Umacron ; B 79 -19 644 879 ;C -1 ; WX 556 ; N uring ; B 68 -15 489 756 ;C 179 ; WX 333 ; N threesuperior ; B 5 270 325 703 ;C 210 ; WX 778 ; N Ograve ; B 39 -19 739 929 ;C 192 ; WX 667 ; N Agrave ; B 14 0 654 929 ;C -1 ; WX 667 ; N Abreve ; B 14 0 654 926 ;C 215 ; WX 584 ; N multiply ; B 39 0 545 506 ;C 250 ; WX 556 ; N uacute ; B 68 -15 489 734 ;C -1 ; WX 611 ; N Tcaron ; B 14 0 597 929 ;C -1 ; WX 476 ; N partialdiff ; B 13 -38 463 714 ;C 255 ; WX 500 ; N ydieresis ; B 11 -214 489 706 ;C -1 ; WX 722 ; N Nacute ; B 76 0 646 929 ;C 238 ; WX 278 ; N icircumflex ; B -6 0 285 734 ;C 202 ; WX 667 ; N Ecircumflex ; B 86 0 616 929 ;C 228 ; WX 556 ; N adieresis ; B 36 -15 530 706 ;C 235 ; WX 556 ; N edieresis ; B 40 -15 516 706 ;C -1 ; WX 500 ; N cacute ; B 30 -15 477 734 ;C -1 ; WX 556 ; N nacute ; B 65 0 491 734 ;C -1 ; WX 556 ; N umacron ; B 68 -15 489 684 ;C -1 ; WX 722 ; N Ncaron ; B 76 0 646 929 ;C 205 ; WX 278 ; N Iacute ; B 91 0 292 929 ;C 177 ; WX 584 ; N plusminus ; B 39 0 545 506 ;C 166 ; WX 260 ; N brokenbar ; B 94 -150 167 700 ;C 174 ; WX 737 ; N registered ; B -14 -19 752 737 ;C -1 ; WX 778 ; N Gbreve ; B 48 -19 704 926 ;C -1 ; WX 278 ; N Idotaccent ; B 91 0 188 901 ;C -1 ; WX 600 ; N summation ; B 15 -10 586 706 ;C 200 ; WX 667 ; N Egrave ; B 86 0 616 929 ;C -1 ; WX 333 ; N racute ; B 77 0 332 734 ;C -1 ; WX 556 ; N omacron ; B 35 -14 521 684 ;C -1 ; WX 611 ; N Zacute ; B 23 0 588 929 ;C 142 ; WX 611 ; N Zcaron ; B 23 0 588 929 ;C -1 ; WX 549 ; N greaterequal ; B 26 0 523 674 ;C 208 ; WX 722 ; N Eth ; B 0 0 674 718 ;C 199 ; WX 722 ; N Ccedilla ; B 44 -225 681 737 ;C -1 ; WX 222 ; N lcommaaccent ; B 67 -225 167 718 ;C -1 ; WX 317 ; N tcaron ; B 14 -7 329 808 ;C -1 ; WX 556 ; N eogonek ; B 40 -225 516 538 ;C -1 ; WX 722 ; N Uogonek ; B 79 -225 644 718 ;C 193 ; WX 667 ; N Aacute ; B 14 0 654 929 ;C 196 ; WX 667 ; N Adieresis ; B 14 0 654 901 ;C 232 ; WX 556 ; N egrave ; B 40 -15 516 734 ;C -1 ; WX 500 ; N zacute ; B 31 0 469 734 ;C -1 ; WX 222 ; N iogonek ; B -31 -225 183 718 ;C 211 ; WX 778 ; N Oacute ; B 39 -19 739 929 ;C 243 ; WX 556 ; N oacute ; B 35 -14 521 734 ;C -1 ; WX 556 ; N amacron ; B 36 -15 530 684 ;C -1 ; WX 500 ; N sacute ; B 32 -15 464 734 ;C 239 ; WX 278 ; N idieresis ; B 13 0 266 706 ;C 212 ; WX 778 ; N Ocircumflex ; B 39 -19 739 929 ;C 217 ; WX 722 ; N Ugrave ; B 79 -19 644 929 ;C -1 ; WX 612 ; N Delta ; B 6 0 608 688 ;C 254 ; WX 556 ; N thorn ; B 58 -207 517 718 ;C 178 ; WX 333 ; N twosuperior ; B 4 281 323 703 ;C 214 ; WX 778 ; N Odieresis ; B 39 -19 739 901 ;C 181 ; WX 556 ; N mu ; B 68 -207 489 523 ;C 236 ; WX 278 ; N igrave ; B -13 0 184 734 ;C -1 ; WX 556 ; N ohungarumlaut ; B 35 -14 521 734 ;C -1 ; WX 667 ; N Eogonek ; B 86 -220 633 718 ;C -1 ; WX 556 ; N dcroat ; B 35 -15 550 718 ;C 190 ; WX 834 ; N threequarters ; B 45 -19 810 703 ;C -1 ; WX 667 ; N Scedilla ; B 49 -225 620 737 ;C -1 ; WX 299 ; N lcaron ; B 67 0 311 718 ;C -1 ; WX 667 ; N Kcommaaccent ; B 76 -225 663 718 ;C -1 ; WX 556 ; N Lacute ; B 76 0 537 929 ;C 153 ; WX 1000 ; N trademark ; B 46 306 903 718 ;C -1 ; WX 556 ; N edotaccent ; B 40 -15 516 706 ;C 204 ; WX 278 ; N Igrave ; B -13 0 188 929 ;C -1 ; WX 278 ; N Imacron ; B -17 0 296 879 ;C -1 ; WX 556 ; N Lcaron ; B 76 0 537 718 ;C 189 ; WX 834 ; N onehalf ; B 43 -19 773 703 ;C -1 ; WX 549 ; N lessequal ; B 26 0 523 674 ;C 244 ; WX 556 ; N ocircumflex ; B 35 -14 521 734 ;C 241 ; WX 556 ; N ntilde ; B 65 0 491 722 ;C -1 ; WX 722 ; N Uhungarumlaut ; B 79 -19 644 929 ;C 201 ; WX 667 ; N Eacute ; B 86 0 616 929 ;C -1 ; WX 556 ; N emacron ; B 40 -15 516 684 ;C -1 ; WX 556 ; N gbreve ; B 40 -220 499 731 ;C 188 ; WX 834 ; N onequarter ; B 73 -19 756 703 ;C 138 ; WX 667 ; N Scaron ; B 49 -19 620 929 ;C -1 ; WX 667 ; N Scommaaccent ; B 49 -225 620 737 ;C -1 ; WX 778 ; N Ohungarumlaut ; B 39 -19 739 929 ;C 176 ; WX 400 ; N degree ; B 54 411 346 703 ;C 242 ; WX 556 ; N ograve ; B 35 -14 521 734 ;C -1 ; WX 722 ; N Ccaron ; B 44 -19 681 929 ;C 249 ; WX 556 ; N ugrave ; B 68 -15 489 734 ;C -1 ; WX 453 ; N radical ; B -4 -80 458 762 ;C -1 ; WX 722 ; N Dcaron ; B 81 0 674 929 ;C -1 ; WX 333 ; N rcommaaccent ; B 77 -225 332 538 ;C 209 ; WX 722 ; N Ntilde ; B 76 0 646 917 ;C 245 ; WX 556 ; N otilde ; B 35 -14 521 722 ;C -1 ; WX 722 ; N Rcommaaccent ; B 88 -225 684 718 ;C -1 ; WX 556 ; N Lcommaaccent ; B 76 -225 537 718 ;C 195 ; WX 667 ; N Atilde ; B 14 0 654 917 ;C -1 ; WX 667 ; N Aogonek ; B 14 -225 654 718 ;C 197 ; WX 667 ; N Aring ; B 14 0 654 931 ;C 213 ; WX 778 ; N Otilde ; B 39 -19 739 917 ;C -1 ; WX 500 ; N zdotaccent ; B 31 0 469 706 ;C -1 ; WX 667 ; N Ecaron ; B 86 0 616 929 ;C -1 ; WX 278 ; N Iogonek ; B -3 -225 211 718 ;C -1 ; WX 500 ; N kcommaaccent ; B 67 -225 501 718 ;C -1 ; WX 584 ; N minus ; B 39 216 545 289 ;C 206 ; WX 278 ; N Icircumflex ; B -6 0 285 929 ;C -1 ; WX 556 ; N ncaron ; B 65 0 491 734 ;C -1 ; WX 278 ; N tcommaaccent ; B 14 -225 257 669 ;C 172 ; WX 584 ; N logicalnot ; B 39 108 545 390 ;C 246 ; WX 556 ; N odieresis ; B 35 -14 521 706 ;C 252 ; WX 556 ; N udieresis ; B 68 -15 489 706 ;C -1 ; WX 549 ; N notequal ; B 12 -35 537 551 ;C -1 ; WX 556 ; N gcommaaccent ; B 40 -220 499 822 ;C 240 ; WX 556 ; N eth ; B 35 -15 522 737 ;C 158 ; WX 500 ; N zcaron ; B 31 0 469 734 ;C -1 ; WX 556 ; N ncommaaccent ; B 65 -225 491 538 ;C 185 ; WX 333 ; N onesuperior ; B 43 281 222 703 ;C -1 ; WX 278 ; N imacron ; B 5 0 272 684 ;C 128 ; WX 556 ; N Euro ; B 0 0 0 0 ;EndCharMetricsStartKernDataStartKernPairs 2705KPX A C -30KPX A Cacute -30KPX A Ccaron -30KPX A Ccedilla -30KPX A G -30KPX A Gbreve -30KPX A Gcommaaccent -30KPX A O -30KPX A Oacute -30KPX A Ocircumflex -30KPX A Odieresis -30KPX A Ograve -30KPX A Ohungarumlaut -30KPX A Omacron -30KPX A Oslash -30KPX A Otilde -30KPX A Q -30KPX A T -120KPX A Tcaron -120KPX A Tcommaaccent -120KPX A U -50KPX A Uacute -50KPX A Ucircumflex -50KPX A Udieresis -50KPX A Ugrave -50KPX A Uhungarumlaut -50KPX A Umacron -50KPX A Uogonek -50KPX A Uring -50KPX A V -70KPX A W -50KPX A Y -100KPX A Yacute -100KPX A Ydieresis -100KPX A u -30KPX A uacute -30KPX A ucircumflex -30KPX A udieresis -30KPX A ugrave -30KPX A uhungarumlaut -30KPX A umacron -30KPX A uogonek -30KPX A uring -30KPX A v -40KPX A w -40KPX A y -40KPX A yacute -40KPX A ydieresis -40KPX Aacute C -30KPX Aacute Cacute -30KPX Aacute Ccaron -30KPX Aacute Ccedilla -30KPX Aacute G -30KPX Aacute Gbreve -30KPX Aacute Gcommaaccent -30KPX Aacute O -30KPX Aacute Oacute -30KPX Aacute Ocircumflex -30KPX Aacute Odieresis -30KPX Aacute Ograve -30KPX Aacute Ohungarumlaut -30KPX Aacute Omacron -30KPX Aacute Oslash -30KPX Aacute Otilde -30KPX Aacute Q -30KPX Aacute T -120KPX Aacute Tcaron -120KPX Aacute Tcommaaccent -120KPX Aacute U -50KPX Aacute Uacute -50KPX Aacute Ucircumflex -50KPX Aacute Udieresis -50KPX Aacute Ugrave -50KPX Aacute Uhungarumlaut -50KPX Aacute Umacron -50KPX Aacute Uogonek -50KPX Aacute Uring -50KPX Aacute V -70KPX Aacute W -50KPX Aacute Y -100KPX Aacute Yacute -100KPX Aacute Ydieresis -100KPX Aacute u -30KPX Aacute uacute -30KPX Aacute ucircumflex -30KPX Aacute udieresis -30KPX Aacute ugrave -30KPX Aacute uhungarumlaut -30KPX Aacute umacron -30KPX Aacute uogonek -30KPX Aacute uring -30KPX Aacute v -40KPX Aacute w -40KPX Aacute y -40KPX Aacute yacute -40KPX Aacute ydieresis -40KPX Abreve C -30KPX Abreve Cacute -30KPX Abreve Ccaron -30KPX Abreve Ccedilla -30KPX Abreve G -30KPX Abreve Gbreve -30KPX Abreve Gcommaaccent -30KPX Abreve O -30KPX Abreve Oacute -30KPX Abreve Ocircumflex -30KPX Abreve Odieresis -30KPX Abreve Ograve -30KPX Abreve Ohungarumlaut -30KPX Abreve Omacron -30KPX Abreve Oslash -30KPX Abreve Otilde -30KPX Abreve Q -30KPX Abreve T -120KPX Abreve Tcaron -120KPX Abreve Tcommaaccent -120KPX Abreve U -50KPX Abreve Uacute -50KPX Abreve Ucircumflex -50KPX Abreve Udieresis -50KPX Abreve Ugrave -50KPX Abreve Uhungarumlaut -50KPX Abreve Umacron -50KPX Abreve Uogonek -50KPX Abreve Uring -50KPX Abreve V -70KPX Abreve W -50KPX Abreve Y -100KPX Abreve Yacute -100KPX Abreve Ydieresis -100KPX Abreve u -30KPX Abreve uacute -30KPX Abreve ucircumflex -30KPX Abreve udieresis -30KPX Abreve ugrave -30KPX Abreve uhungarumlaut -30KPX Abreve umacron -30KPX Abreve uogonek -30KPX Abreve uring -30KPX Abreve v -40KPX Abreve w -40KPX Abreve y -40KPX Abreve yacute -40KPX Abreve ydieresis -40KPX Acircumflex C -30KPX Acircumflex Cacute -30KPX Acircumflex Ccaron -30KPX Acircumflex Ccedilla -30KPX Acircumflex G -30KPX Acircumflex Gbreve -30KPX Acircumflex Gcommaaccent -30KPX Acircumflex O -30KPX Acircumflex Oacute -30KPX Acircumflex Ocircumflex -30KPX Acircumflex Odieresis -30KPX Acircumflex Ograve -30KPX Acircumflex Ohungarumlaut -30KPX Acircumflex Omacron -30KPX Acircumflex Oslash -30KPX Acircumflex Otilde -30KPX Acircumflex Q -30KPX Acircumflex T -120KPX Acircumflex Tcaron -120KPX Acircumflex Tcommaaccent -120KPX Acircumflex U -50KPX Acircumflex Uacute -50KPX Acircumflex Ucircumflex -50KPX Acircumflex Udieresis -50KPX Acircumflex Ugrave -50KPX Acircumflex Uhungarumlaut -50KPX Acircumflex Umacron -50KPX Acircumflex Uogonek -50KPX Acircumflex Uring -50KPX Acircumflex V -70KPX Acircumflex W -50KPX Acircumflex Y -100KPX Acircumflex Yacute -100KPX Acircumflex Ydieresis -100KPX Acircumflex u -30KPX Acircumflex uacute -30KPX Acircumflex ucircumflex -30KPX Acircumflex udieresis -30KPX Acircumflex ugrave -30KPX Acircumflex uhungarumlaut -30KPX Acircumflex umacron -30KPX Acircumflex uogonek -30KPX Acircumflex uring -30KPX Acircumflex v -40KPX Acircumflex w -40KPX Acircumflex y -40KPX Acircumflex yacute -40KPX Acircumflex ydieresis -40KPX Adieresis C -30KPX Adieresis Cacute -30KPX Adieresis Ccaron -30KPX Adieresis Ccedilla -30KPX Adieresis G -30KPX Adieresis Gbreve -30KPX Adieresis Gcommaaccent -30KPX Adieresis O -30KPX Adieresis Oacute -30KPX Adieresis Ocircumflex -30KPX Adieresis Odieresis -30KPX Adieresis Ograve -30KPX Adieresis Ohungarumlaut -30KPX Adieresis Omacron -30KPX Adieresis Oslash -30KPX Adieresis Otilde -30KPX Adieresis Q -30KPX Adieresis T -120KPX Adieresis Tcaron -120KPX Adieresis Tcommaaccent -120KPX Adieresis U -50KPX Adieresis Uacute -50KPX Adieresis Ucircumflex -50KPX Adieresis Udieresis -50KPX Adieresis Ugrave -50KPX Adieresis Uhungarumlaut -50KPX Adieresis Umacron -50KPX Adieresis Uogonek -50KPX Adieresis Uring -50KPX Adieresis V -70KPX Adieresis W -50KPX Adieresis Y -100KPX Adieresis Yacute -100KPX Adieresis Ydieresis -100KPX Adieresis u -30KPX Adieresis uacute -30KPX Adieresis ucircumflex -30KPX Adieresis udieresis -30KPX Adieresis ugrave -30KPX Adieresis uhungarumlaut -30KPX Adieresis umacron -30KPX Adieresis uogonek -30KPX Adieresis uring -30KPX Adieresis v -40KPX Adieresis w -40KPX Adieresis y -40KPX Adieresis yacute -40KPX Adieresis ydieresis -40KPX Agrave C -30KPX Agrave Cacute -30KPX Agrave Ccaron -30KPX Agrave Ccedilla -30KPX Agrave G -30KPX Agrave Gbreve -30KPX Agrave Gcommaaccent -30KPX Agrave O -30KPX Agrave Oacute -30KPX Agrave Ocircumflex -30KPX Agrave Odieresis -30KPX Agrave Ograve -30KPX Agrave Ohungarumlaut -30KPX Agrave Omacron -30KPX Agrave Oslash -30KPX Agrave Otilde -30KPX Agrave Q -30KPX Agrave T -120KPX Agrave Tcaron -120KPX Agrave Tcommaaccent -120KPX Agrave U -50KPX Agrave Uacute -50KPX Agrave Ucircumflex -50KPX Agrave Udieresis -50KPX Agrave Ugrave -50KPX Agrave Uhungarumlaut -50KPX Agrave Umacron -50KPX Agrave Uogonek -50KPX Agrave Uring -50KPX Agrave V -70KPX Agrave W -50KPX Agrave Y -100KPX Agrave Yacute -100KPX Agrave Ydieresis -100KPX Agrave u -30KPX Agrave uacute -30KPX Agrave ucircumflex -30KPX Agrave udieresis -30KPX Agrave ugrave -30KPX Agrave uhungarumlaut -30KPX Agrave umacron -30KPX Agrave uogonek -30KPX Agrave uring -30KPX Agrave v -40KPX Agrave w -40KPX Agrave y -40KPX Agrave yacute -40KPX Agrave ydieresis -40KPX Amacron C -30KPX Amacron Cacute -30KPX Amacron Ccaron -30KPX Amacron Ccedilla -30KPX Amacron G -30KPX Amacron Gbreve -30KPX Amacron Gcommaaccent -30KPX Amacron O -30KPX Amacron Oacute -30KPX Amacron Ocircumflex -30KPX Amacron Odieresis -30KPX Amacron Ograve -30KPX Amacron Ohungarumlaut -30KPX Amacron Omacron -30KPX Amacron Oslash -30KPX Amacron Otilde -30KPX Amacron Q -30KPX Amacron T -120KPX Amacron Tcaron -120KPX Amacron Tcommaaccent -120KPX Amacron U -50KPX Amacron Uacute -50KPX Amacron Ucircumflex -50KPX Amacron Udieresis -50KPX Amacron Ugrave -50KPX Amacron Uhungarumlaut -50KPX Amacron Umacron -50KPX Amacron Uogonek -50KPX Amacron Uring -50KPX Amacron V -70KPX Amacron W -50KPX Amacron Y -100KPX Amacron Yacute -100KPX Amacron Ydieresis -100KPX Amacron u -30KPX Amacron uacute -30KPX Amacron ucircumflex -30KPX Amacron udieresis -30KPX Amacron ugrave -30KPX Amacron uhungarumlaut -30KPX Amacron umacron -30KPX Amacron uogonek -30KPX Amacron uring -30KPX Amacron v -40KPX Amacron w -40KPX Amacron y -40KPX Amacron yacute -40KPX Amacron ydieresis -40KPX Aogonek C -30KPX Aogonek Cacute -30KPX Aogonek Ccaron -30KPX Aogonek Ccedilla -30KPX Aogonek G -30KPX Aogonek Gbreve -30KPX Aogonek Gcommaaccent -30KPX Aogonek O -30KPX Aogonek Oacute -30KPX Aogonek Ocircumflex -30KPX Aogonek Odieresis -30KPX Aogonek Ograve -30KPX Aogonek Ohungarumlaut -30KPX Aogonek Omacron -30KPX Aogonek Oslash -30KPX Aogonek Otilde -30KPX Aogonek Q -30KPX Aogonek T -120KPX Aogonek Tcaron -120KPX Aogonek Tcommaaccent -120KPX Aogonek U -50KPX Aogonek Uacute -50KPX Aogonek Ucircumflex -50KPX Aogonek Udieresis -50KPX Aogonek Ugrave -50KPX Aogonek Uhungarumlaut -50KPX Aogonek Umacron -50KPX Aogonek Uogonek -50KPX Aogonek Uring -50KPX Aogonek V -70KPX Aogonek W -50KPX Aogonek Y -100KPX Aogonek Yacute -100KPX Aogonek Ydieresis -100KPX Aogonek u -30KPX Aogonek uacute -30KPX Aogonek ucircumflex -30KPX Aogonek udieresis -30KPX Aogonek ugrave -30KPX Aogonek uhungarumlaut -30KPX Aogonek umacron -30KPX Aogonek uogonek -30KPX Aogonek uring -30KPX Aogonek v -40KPX Aogonek w -40KPX Aogonek y -40KPX Aogonek yacute -40KPX Aogonek ydieresis -40KPX Aring C -30KPX Aring Cacute -30KPX Aring Ccaron -30KPX Aring Ccedilla -30KPX Aring G -30KPX Aring Gbreve -30KPX Aring Gcommaaccent -30KPX Aring O -30KPX Aring Oacute -30KPX Aring Ocircumflex -30KPX Aring Odieresis -30KPX Aring Ograve -30KPX Aring Ohungarumlaut -30KPX Aring Omacron -30KPX Aring Oslash -30KPX Aring Otilde -30KPX Aring Q -30KPX Aring T -120KPX Aring Tcaron -120KPX Aring Tcommaaccent -120KPX Aring U -50KPX Aring Uacute -50KPX Aring Ucircumflex -50KPX Aring Udieresis -50KPX Aring Ugrave -50KPX Aring Uhungarumlaut -50KPX Aring Umacron -50KPX Aring Uogonek -50KPX Aring Uring -50KPX Aring V -70KPX Aring W -50KPX Aring Y -100KPX Aring Yacute -100KPX Aring Ydieresis -100KPX Aring u -30KPX Aring uacute -30KPX Aring ucircumflex -30KPX Aring udieresis -30KPX Aring ugrave -30KPX Aring uhungarumlaut -30KPX Aring umacron -30KPX Aring uogonek -30KPX Aring uring -30KPX Aring v -40KPX Aring w -40KPX Aring y -40KPX Aring yacute -40KPX Aring ydieresis -40KPX Atilde C -30KPX Atilde Cacute -30KPX Atilde Ccaron -30KPX Atilde Ccedilla -30KPX Atilde G -30KPX Atilde Gbreve -30KPX Atilde Gcommaaccent -30KPX Atilde O -30KPX Atilde Oacute -30KPX Atilde Ocircumflex -30KPX Atilde Odieresis -30KPX Atilde Ograve -30KPX Atilde Ohungarumlaut -30KPX Atilde Omacron -30KPX Atilde Oslash -30KPX Atilde Otilde -30KPX Atilde Q -30KPX Atilde T -120KPX Atilde Tcaron -120KPX Atilde Tcommaaccent -120KPX Atilde U -50KPX Atilde Uacute -50KPX Atilde Ucircumflex -50KPX Atilde Udieresis -50KPX Atilde Ugrave -50KPX Atilde Uhungarumlaut -50KPX Atilde Umacron -50KPX Atilde Uogonek -50KPX Atilde Uring -50KPX Atilde V -70KPX Atilde W -50KPX Atilde Y -100KPX Atilde Yacute -100KPX Atilde Ydieresis -100KPX Atilde u -30KPX Atilde uacute -30KPX Atilde ucircumflex -30KPX Atilde udieresis -30KPX Atilde ugrave -30KPX Atilde uhungarumlaut -30KPX Atilde umacron -30KPX Atilde uogonek -30KPX Atilde uring -30KPX Atilde v -40KPX Atilde w -40KPX Atilde y -40KPX Atilde yacute -40KPX Atilde ydieresis -40KPX B U -10KPX B Uacute -10KPX B Ucircumflex -10KPX B Udieresis -10KPX B Ugrave -10KPX B Uhungarumlaut -10KPX B Umacron -10KPX B Uogonek -10KPX B Uring -10KPX B comma -20KPX B period -20KPX C comma -30KPX C period -30KPX Cacute comma -30KPX Cacute period -30KPX Ccaron comma -30KPX Ccaron period -30KPX Ccedilla comma -30KPX Ccedilla period -30KPX D A -40KPX D Aacute -40KPX D Abreve -40KPX D Acircumflex -40KPX D Adieresis -40KPX D Agrave -40KPX D Amacron -40KPX D Aogonek -40KPX D Aring -40KPX D Atilde -40KPX D V -70KPX D W -40KPX D Y -90KPX D Yacute -90KPX D Ydieresis -90KPX D comma -70KPX D period -70KPX Dcaron A -40KPX Dcaron Aacute -40KPX Dcaron Abreve -40KPX Dcaron Acircumflex -40KPX Dcaron Adieresis -40KPX Dcaron Agrave -40KPX Dcaron Amacron -40KPX Dcaron Aogonek -40KPX Dcaron Aring -40KPX Dcaron Atilde -40KPX Dcaron V -70KPX Dcaron W -40KPX Dcaron Y -90KPX Dcaron Yacute -90KPX Dcaron Ydieresis -90KPX Dcaron comma -70KPX Dcaron period -70KPX Dcroat A -40KPX Dcroat Aacute -40KPX Dcroat Abreve -40KPX Dcroat Acircumflex -40KPX Dcroat Adieresis -40KPX Dcroat Agrave -40KPX Dcroat Amacron -40KPX Dcroat Aogonek -40KPX Dcroat Aring -40KPX Dcroat Atilde -40KPX Dcroat V -70KPX Dcroat W -40KPX Dcroat Y -90KPX Dcroat Yacute -90KPX Dcroat Ydieresis -90KPX Dcroat comma -70KPX Dcroat period -70KPX F A -80KPX F Aacute -80KPX F Abreve -80KPX F Acircumflex -80KPX F Adieresis -80KPX F Agrave -80KPX F Amacron -80KPX F Aogonek -80KPX F Aring -80KPX F Atilde -80KPX F a -50KPX F aacute -50KPX F abreve -50KPX F acircumflex -50KPX F adieresis -50KPX F agrave -50KPX F amacron -50KPX F aogonek -50KPX F aring -50KPX F atilde -50KPX F comma -150KPX F e -30KPX F eacute -30KPX F ecaron -30KPX F ecircumflex -30KPX F edieresis -30KPX F edotaccent -30KPX F egrave -30KPX F emacron -30KPX F eogonek -30KPX F o -30KPX F oacute -30KPX F ocircumflex -30KPX F odieresis -30KPX F ograve -30KPX F ohungarumlaut -30KPX F omacron -30KPX F oslash -30KPX F otilde -30KPX F period -150KPX F r -45KPX F racute -45KPX F rcaron -45KPX F rcommaaccent -45KPX J A -20KPX J Aacute -20KPX J Abreve -20KPX J Acircumflex -20KPX J Adieresis -20KPX J Agrave -20KPX J Amacron -20KPX J Aogonek -20KPX J Aring -20KPX J Atilde -20KPX J a -20KPX J aacute -20KPX J abreve -20KPX J acircumflex -20KPX J adieresis -20KPX J agrave -20KPX J amacron -20KPX J aogonek -20KPX J aring -20KPX J atilde -20KPX J comma -30KPX J period -30KPX J u -20KPX J uacute -20KPX J ucircumflex -20KPX J udieresis -20KPX J ugrave -20KPX J uhungarumlaut -20KPX J umacron -20KPX J uogonek -20KPX J uring -20KPX K O -50KPX K Oacute -50KPX K Ocircumflex -50KPX K Odieresis -50KPX K Ograve -50KPX K Ohungarumlaut -50KPX K Omacron -50KPX K Oslash -50KPX K Otilde -50KPX K e -40KPX K eacute -40KPX K ecaron -40KPX K ecircumflex -40KPX K edieresis -40KPX K edotaccent -40KPX K egrave -40KPX K emacron -40KPX K eogonek -40KPX K o -40KPX K oacute -40KPX K ocircumflex -40KPX K odieresis -40KPX K ograve -40KPX K ohungarumlaut -40KPX K omacron -40KPX K oslash -40KPX K otilde -40KPX K u -30KPX K uacute -30KPX K ucircumflex -30KPX K udieresis -30KPX K ugrave -30KPX K uhungarumlaut -30KPX K umacron -30KPX K uogonek -30KPX K uring -30KPX K y -50KPX K yacute -50KPX K ydieresis -50KPX Kcommaaccent O -50KPX Kcommaaccent Oacute -50KPX Kcommaaccent Ocircumflex -50KPX Kcommaaccent Odieresis -50KPX Kcommaaccent Ograve -50KPX Kcommaaccent Ohungarumlaut -50KPX Kcommaaccent Omacron -50KPX Kcommaaccent Oslash -50KPX Kcommaaccent Otilde -50KPX Kcommaaccent e -40KPX Kcommaaccent eacute -40KPX Kcommaaccent ecaron -40KPX Kcommaaccent ecircumflex -40KPX Kcommaaccent edieresis -40KPX Kcommaaccent edotaccent -40KPX Kcommaaccent egrave -40KPX Kcommaaccent emacron -40KPX Kcommaaccent eogonek -40KPX Kcommaaccent o -40KPX Kcommaaccent oacute -40KPX Kcommaaccent ocircumflex -40KPX Kcommaaccent odieresis -40KPX Kcommaaccent ograve -40KPX Kcommaaccent ohungarumlaut -40KPX Kcommaaccent omacron -40KPX Kcommaaccent oslash -40KPX Kcommaaccent otilde -40KPX Kcommaaccent u -30KPX Kcommaaccent uacute -30KPX Kcommaaccent ucircumflex -30KPX Kcommaaccent udieresis -30KPX Kcommaaccent ugrave -30KPX Kcommaaccent uhungarumlaut -30KPX Kcommaaccent umacron -30KPX Kcommaaccent uogonek -30KPX Kcommaaccent uring -30KPX Kcommaaccent y -50KPX Kcommaaccent yacute -50KPX Kcommaaccent ydieresis -50KPX L T -110KPX L Tcaron -110KPX L Tcommaaccent -110KPX L V -110KPX L W -70KPX L Y -140KPX L Yacute -140KPX L Ydieresis -140KPX L quotedblright -140KPX L quoteright -160KPX L y -30KPX L yacute -30KPX L ydieresis -30KPX Lacute T -110KPX Lacute Tcaron -110KPX Lacute Tcommaaccent -110KPX Lacute V -110KPX Lacute W -70KPX Lacute Y -140KPX Lacute Yacute -140KPX Lacute Ydieresis -140KPX Lacute quotedblright -140KPX Lacute quoteright -160KPX Lacute y -30KPX Lacute yacute -30KPX Lacute ydieresis -30KPX Lcaron T -110KPX Lcaron Tcaron -110KPX Lcaron Tcommaaccent -110KPX Lcaron V -110KPX Lcaron W -70KPX Lcaron Y -140KPX Lcaron Yacute -140KPX Lcaron Ydieresis -140KPX Lcaron quotedblright -140KPX Lcaron quoteright -160KPX Lcaron y -30KPX Lcaron yacute -30KPX Lcaron ydieresis -30KPX Lcommaaccent T -110KPX Lcommaaccent Tcaron -110KPX Lcommaaccent Tcommaaccent -110KPX Lcommaaccent V -110KPX Lcommaaccent W -70KPX Lcommaaccent Y -140KPX Lcommaaccent Yacute -140KPX Lcommaaccent Ydieresis -140KPX Lcommaaccent quotedblright -140KPX Lcommaaccent quoteright -160KPX Lcommaaccent y -30KPX Lcommaaccent yacute -30KPX Lcommaaccent ydieresis -30KPX Lslash T -110KPX Lslash Tcaron -110KPX Lslash Tcommaaccent -110KPX Lslash V -110KPX Lslash W -70KPX Lslash Y -140KPX Lslash Yacute -140KPX Lslash Ydieresis -140KPX Lslash quotedblright -140KPX Lslash quoteright -160KPX Lslash y -30KPX Lslash yacute -30KPX Lslash ydieresis -30KPX O A -20KPX O Aacute -20KPX O Abreve -20KPX O Acircumflex -20KPX O Adieresis -20KPX O Agrave -20KPX O Amacron -20KPX O Aogonek -20KPX O Aring -20KPX O Atilde -20KPX O T -40KPX O Tcaron -40KPX O Tcommaaccent -40KPX O V -50KPX O W -30KPX O X -60KPX O Y -70KPX O Yacute -70KPX O Ydieresis -70KPX O comma -40KPX O period -40KPX Oacute A -20KPX Oacute Aacute -20KPX Oacute Abreve -20KPX Oacute Acircumflex -20KPX Oacute Adieresis -20KPX Oacute Agrave -20KPX Oacute Amacron -20KPX Oacute Aogonek -20KPX Oacute Aring -20KPX Oacute Atilde -20KPX Oacute T -40KPX Oacute Tcaron -40KPX Oacute Tcommaaccent -40KPX Oacute V -50KPX Oacute W -30KPX Oacute X -60KPX Oacute Y -70KPX Oacute Yacute -70KPX Oacute Ydieresis -70KPX Oacute comma -40KPX Oacute period -40KPX Ocircumflex A -20KPX Ocircumflex Aacute -20KPX Ocircumflex Abreve -20KPX Ocircumflex Acircumflex -20KPX Ocircumflex Adieresis -20KPX Ocircumflex Agrave -20KPX Ocircumflex Amacron -20KPX Ocircumflex Aogonek -20KPX Ocircumflex Aring -20KPX Ocircumflex Atilde -20KPX Ocircumflex T -40KPX Ocircumflex Tcaron -40KPX Ocircumflex Tcommaaccent -40KPX Ocircumflex V -50KPX Ocircumflex W -30KPX Ocircumflex X -60KPX Ocircumflex Y -70KPX Ocircumflex Yacute -70KPX Ocircumflex Ydieresis -70KPX Ocircumflex comma -40KPX Ocircumflex period -40KPX Odieresis A -20KPX Odieresis Aacute -20KPX Odieresis Abreve -20KPX Odieresis Acircumflex -20KPX Odieresis Adieresis -20KPX Odieresis Agrave -20KPX Odieresis Amacron -20KPX Odieresis Aogonek -20KPX Odieresis Aring -20KPX Odieresis Atilde -20KPX Odieresis T -40KPX Odieresis Tcaron -40KPX Odieresis Tcommaaccent -40KPX Odieresis V -50KPX Odieresis W -30KPX Odieresis X -60KPX Odieresis Y -70KPX Odieresis Yacute -70KPX Odieresis Ydieresis -70KPX Odieresis comma -40KPX Odieresis period -40KPX Ograve A -20KPX Ograve Aacute -20KPX Ograve Abreve -20KPX Ograve Acircumflex -20KPX Ograve Adieresis -20KPX Ograve Agrave -20KPX Ograve Amacron -20KPX Ograve Aogonek -20KPX Ograve Aring -20KPX Ograve Atilde -20KPX Ograve T -40KPX Ograve Tcaron -40KPX Ograve Tcommaaccent -40KPX Ograve V -50KPX Ograve W -30KPX Ograve X -60KPX Ograve Y -70KPX Ograve Yacute -70KPX Ograve Ydieresis -70KPX Ograve comma -40KPX Ograve period -40KPX Ohungarumlaut A -20KPX Ohungarumlaut Aacute -20KPX Ohungarumlaut Abreve -20KPX Ohungarumlaut Acircumflex -20KPX Ohungarumlaut Adieresis -20KPX Ohungarumlaut Agrave -20KPX Ohungarumlaut Amacron -20KPX Ohungarumlaut Aogonek -20KPX Ohungarumlaut Aring -20KPX Ohungarumlaut Atilde -20KPX Ohungarumlaut T -40KPX Ohungarumlaut Tcaron -40KPX Ohungarumlaut Tcommaaccent -40KPX Ohungarumlaut V -50KPX Ohungarumlaut W -30KPX Ohungarumlaut X -60KPX Ohungarumlaut Y -70KPX Ohungarumlaut Yacute -70KPX Ohungarumlaut Ydieresis -70KPX Ohungarumlaut comma -40KPX Ohungarumlaut period -40KPX Omacron A -20KPX Omacron Aacute -20KPX Omacron Abreve -20KPX Omacron Acircumflex -20KPX Omacron Adieresis -20KPX Omacron Agrave -20KPX Omacron Amacron -20KPX Omacron Aogonek -20KPX Omacron Aring -20KPX Omacron Atilde -20KPX Omacron T -40KPX Omacron Tcaron -40KPX Omacron Tcommaaccent -40KPX Omacron V -50KPX Omacron W -30KPX Omacron X -60KPX Omacron Y -70KPX Omacron Yacute -70KPX Omacron Ydieresis -70KPX Omacron comma -40KPX Omacron period -40KPX Oslash A -20KPX Oslash Aacute -20KPX Oslash Abreve -20KPX Oslash Acircumflex -20KPX Oslash Adieresis -20KPX Oslash Agrave -20KPX Oslash Amacron -20KPX Oslash Aogonek -20KPX Oslash Aring -20KPX Oslash Atilde -20KPX Oslash T -40KPX Oslash Tcaron -40KPX Oslash Tcommaaccent -40KPX Oslash V -50KPX Oslash W -30KPX Oslash X -60KPX Oslash Y -70KPX Oslash Yacute -70KPX Oslash Ydieresis -70KPX Oslash comma -40KPX Oslash period -40KPX Otilde A -20KPX Otilde Aacute -20KPX Otilde Abreve -20KPX Otilde Acircumflex -20KPX Otilde Adieresis -20KPX Otilde Agrave -20KPX Otilde Amacron -20KPX Otilde Aogonek -20KPX Otilde Aring -20KPX Otilde Atilde -20KPX Otilde T -40KPX Otilde Tcaron -40KPX Otilde Tcommaaccent -40KPX Otilde V -50KPX Otilde W -30KPX Otilde X -60KPX Otilde Y -70KPX Otilde Yacute -70KPX Otilde Ydieresis -70KPX Otilde comma -40KPX Otilde period -40KPX P A -120KPX P Aacute -120KPX P Abreve -120KPX P Acircumflex -120KPX P Adieresis -120KPX P Agrave -120KPX P Amacron -120KPX P Aogonek -120KPX P Aring -120KPX P Atilde -120KPX P a -40KPX P aacute -40KPX P abreve -40KPX P acircumflex -40KPX P adieresis -40KPX P agrave -40KPX P amacron -40KPX P aogonek -40KPX P aring -40KPX P atilde -40KPX P comma -180KPX P e -50KPX P eacute -50KPX P ecaron -50KPX P ecircumflex -50KPX P edieresis -50KPX P edotaccent -50KPX P egrave -50KPX P emacron -50KPX P eogonek -50KPX P o -50KPX P oacute -50KPX P ocircumflex -50KPX P odieresis -50KPX P ograve -50KPX P ohungarumlaut -50KPX P omacron -50KPX P oslash -50KPX P otilde -50KPX P period -180KPX Q U -10KPX Q Uacute -10KPX Q Ucircumflex -10KPX Q Udieresis -10KPX Q Ugrave -10KPX Q Uhungarumlaut -10KPX Q Umacron -10KPX Q Uogonek -10KPX Q Uring -10KPX R O -20KPX R Oacute -20KPX R Ocircumflex -20KPX R Odieresis -20KPX R Ograve -20KPX R Ohungarumlaut -20KPX R Omacron -20KPX R Oslash -20KPX R Otilde -20KPX R T -30KPX R Tcaron -30KPX R Tcommaaccent -30KPX R U -40KPX R Uacute -40KPX R Ucircumflex -40KPX R Udieresis -40KPX R Ugrave -40KPX R Uhungarumlaut -40KPX R Umacron -40KPX R Uogonek -40KPX R Uring -40KPX R V -50KPX R W -30KPX R Y -50KPX R Yacute -50KPX R Ydieresis -50KPX Racute O -20KPX Racute Oacute -20KPX Racute Ocircumflex -20KPX Racute Odieresis -20KPX Racute Ograve -20KPX Racute Ohungarumlaut -20KPX Racute Omacron -20KPX Racute Oslash -20KPX Racute Otilde -20KPX Racute T -30KPX Racute Tcaron -30KPX Racute Tcommaaccent -30KPX Racute U -40KPX Racute Uacute -40KPX Racute Ucircumflex -40KPX Racute Udieresis -40KPX Racute Ugrave -40KPX Racute Uhungarumlaut -40KPX Racute Umacron -40KPX Racute Uogonek -40KPX Racute Uring -40KPX Racute V -50KPX Racute W -30KPX Racute Y -50KPX Racute Yacute -50KPX Racute Ydieresis -50KPX Rcaron O -20KPX Rcaron Oacute -20KPX Rcaron Ocircumflex -20KPX Rcaron Odieresis -20KPX Rcaron Ograve -20KPX Rcaron Ohungarumlaut -20KPX Rcaron Omacron -20KPX Rcaron Oslash -20KPX Rcaron Otilde -20KPX Rcaron T -30KPX Rcaron Tcaron -30KPX Rcaron Tcommaaccent -30KPX Rcaron U -40KPX Rcaron Uacute -40KPX Rcaron Ucircumflex -40KPX Rcaron Udieresis -40KPX Rcaron Ugrave -40KPX Rcaron Uhungarumlaut -40KPX Rcaron Umacron -40KPX Rcaron Uogonek -40KPX Rcaron Uring -40KPX Rcaron V -50KPX Rcaron W -30KPX Rcaron Y -50KPX Rcaron Yacute -50KPX Rcaron Ydieresis -50KPX Rcommaaccent O -20KPX Rcommaaccent Oacute -20KPX Rcommaaccent Ocircumflex -20KPX Rcommaaccent Odieresis -20KPX Rcommaaccent Ograve -20KPX Rcommaaccent Ohungarumlaut -20KPX Rcommaaccent Omacron -20KPX Rcommaaccent Oslash -20KPX Rcommaaccent Otilde -20KPX Rcommaaccent T -30KPX Rcommaaccent Tcaron -30KPX Rcommaaccent Tcommaaccent -30KPX Rcommaaccent U -40KPX Rcommaaccent Uacute -40KPX Rcommaaccent Ucircumflex -40KPX Rcommaaccent Udieresis -40KPX Rcommaaccent Ugrave -40KPX Rcommaaccent Uhungarumlaut -40KPX Rcommaaccent Umacron -40KPX Rcommaaccent Uogonek -40KPX Rcommaaccent Uring -40KPX Rcommaaccent V -50KPX Rcommaaccent W -30KPX Rcommaaccent Y -50KPX Rcommaaccent Yacute -50KPX Rcommaaccent Ydieresis -50KPX S comma -20KPX S period -20KPX Sacute comma -20KPX Sacute period -20KPX Scaron comma -20KPX Scaron period -20KPX Scedilla comma -20KPX Scedilla period -20KPX Scommaaccent comma -20KPX Scommaaccent period -20KPX T A -120KPX T Aacute -120KPX T Abreve -120KPX T Acircumflex -120KPX T Adieresis -120KPX T Agrave -120KPX T Amacron -120KPX T Aogonek -120KPX T Aring -120KPX T Atilde -120KPX T O -40KPX T Oacute -40KPX T Ocircumflex -40KPX T Odieresis -40KPX T Ograve -40KPX T Ohungarumlaut -40KPX T Omacron -40KPX T Oslash -40KPX T Otilde -40KPX T a -120KPX T aacute -120KPX T abreve -60KPX T acircumflex -120KPX T adieresis -120KPX T agrave -120KPX T amacron -60KPX T aogonek -120KPX T aring -120KPX T atilde -60KPX T colon -20KPX T comma -120KPX T e -120KPX T eacute -120KPX T ecaron -120KPX T ecircumflex -120KPX T edieresis -120KPX T edotaccent -120KPX T egrave -60KPX T emacron -60KPX T eogonek -120KPX T hyphen -140KPX T o -120KPX T oacute -120KPX T ocircumflex -120KPX T odieresis -120KPX T ograve -120KPX T ohungarumlaut -120KPX T omacron -60KPX T oslash -120KPX T otilde -60KPX T period -120KPX T r -120KPX T racute -120KPX T rcaron -120KPX T rcommaaccent -120KPX T semicolon -20KPX T u -120KPX T uacute -120KPX T ucircumflex -120KPX T udieresis -120KPX T ugrave -120KPX T uhungarumlaut -120KPX T umacron -60KPX T uogonek -120KPX T uring -120KPX T w -120KPX T y -120KPX T yacute -120KPX T ydieresis -60KPX Tcaron A -120KPX Tcaron Aacute -120KPX Tcaron Abreve -120KPX Tcaron Acircumflex -120KPX Tcaron Adieresis -120KPX Tcaron Agrave -120KPX Tcaron Amacron -120KPX Tcaron Aogonek -120KPX Tcaron Aring -120KPX Tcaron Atilde -120KPX Tcaron O -40KPX Tcaron Oacute -40KPX Tcaron Ocircumflex -40KPX Tcaron Odieresis -40KPX Tcaron Ograve -40KPX Tcaron Ohungarumlaut -40KPX Tcaron Omacron -40KPX Tcaron Oslash -40KPX Tcaron Otilde -40KPX Tcaron a -120KPX Tcaron aacute -120KPX Tcaron abreve -60KPX Tcaron acircumflex -120KPX Tcaron adieresis -120KPX Tcaron agrave -120KPX Tcaron amacron -60KPX Tcaron aogonek -120KPX Tcaron aring -120KPX Tcaron atilde -60KPX Tcaron colon -20KPX Tcaron comma -120KPX Tcaron e -120KPX Tcaron eacute -120KPX Tcaron ecaron -120KPX Tcaron ecircumflex -120KPX Tcaron edieresis -120KPX Tcaron edotaccent -120KPX Tcaron egrave -60KPX Tcaron emacron -60KPX Tcaron eogonek -120KPX Tcaron hyphen -140KPX Tcaron o -120KPX Tcaron oacute -120KPX Tcaron ocircumflex -120KPX Tcaron odieresis -120KPX Tcaron ograve -120KPX Tcaron ohungarumlaut -120KPX Tcaron omacron -60KPX Tcaron oslash -120KPX Tcaron otilde -60KPX Tcaron period -120KPX Tcaron r -120KPX Tcaron racute -120KPX Tcaron rcaron -120KPX Tcaron rcommaaccent -120KPX Tcaron semicolon -20KPX Tcaron u -120KPX Tcaron uacute -120KPX Tcaron ucircumflex -120KPX Tcaron udieresis -120KPX Tcaron ugrave -120KPX Tcaron uhungarumlaut -120KPX Tcaron umacron -60KPX Tcaron uogonek -120KPX Tcaron uring -120KPX Tcaron w -120KPX Tcaron y -120KPX Tcaron yacute -120KPX Tcaron ydieresis -60KPX Tcommaaccent A -120KPX Tcommaaccent Aacute -120KPX Tcommaaccent Abreve -120KPX Tcommaaccent Acircumflex -120KPX Tcommaaccent Adieresis -120KPX Tcommaaccent Agrave -120KPX Tcommaaccent Amacron -120KPX Tcommaaccent Aogonek -120KPX Tcommaaccent Aring -120KPX Tcommaaccent Atilde -120KPX Tcommaaccent O -40KPX Tcommaaccent Oacute -40KPX Tcommaaccent Ocircumflex -40KPX Tcommaaccent Odieresis -40KPX Tcommaaccent Ograve -40KPX Tcommaaccent Ohungarumlaut -40KPX Tcommaaccent Omacron -40KPX Tcommaaccent Oslash -40KPX Tcommaaccent Otilde -40KPX Tcommaaccent a -120KPX Tcommaaccent aacute -120KPX Tcommaaccent abreve -60KPX Tcommaaccent acircumflex -120KPX Tcommaaccent adieresis -120KPX Tcommaaccent agrave -120KPX Tcommaaccent amacron -60KPX Tcommaaccent aogonek -120KPX Tcommaaccent aring -120KPX Tcommaaccent atilde -60KPX Tcommaaccent colon -20KPX Tcommaaccent comma -120KPX Tcommaaccent e -120KPX Tcommaaccent eacute -120KPX Tcommaaccent ecaron -120KPX Tcommaaccent ecircumflex -120KPX Tcommaaccent edieresis -120KPX Tcommaaccent edotaccent -120KPX Tcommaaccent egrave -60KPX Tcommaaccent emacron -60KPX Tcommaaccent eogonek -120KPX Tcommaaccent hyphen -140KPX Tcommaaccent o -120KPX Tcommaaccent oacute -120KPX Tcommaaccent ocircumflex -120KPX Tcommaaccent odieresis -120KPX Tcommaaccent ograve -120KPX Tcommaaccent ohungarumlaut -120KPX Tcommaaccent omacron -60KPX Tcommaaccent oslash -120KPX Tcommaaccent otilde -60KPX Tcommaaccent period -120KPX Tcommaaccent r -120KPX Tcommaaccent racute -120KPX Tcommaaccent rcaron -120KPX Tcommaaccent rcommaaccent -120KPX Tcommaaccent semicolon -20KPX Tcommaaccent u -120KPX Tcommaaccent uacute -120KPX Tcommaaccent ucircumflex -120KPX Tcommaaccent udieresis -120KPX Tcommaaccent ugrave -120KPX Tcommaaccent uhungarumlaut -120KPX Tcommaaccent umacron -60KPX Tcommaaccent uogonek -120KPX Tcommaaccent uring -120KPX Tcommaaccent w -120KPX Tcommaaccent y -120KPX Tcommaaccent yacute -120KPX Tcommaaccent ydieresis -60KPX U A -40KPX U Aacute -40KPX U Abreve -40KPX U Acircumflex -40KPX U Adieresis -40KPX U Agrave -40KPX U Amacron -40KPX U Aogonek -40KPX U Aring -40KPX U Atilde -40KPX U comma -40KPX U period -40KPX Uacute A -40KPX Uacute Aacute -40KPX Uacute Abreve -40KPX Uacute Acircumflex -40KPX Uacute Adieresis -40KPX Uacute Agrave -40KPX Uacute Amacron -40KPX Uacute Aogonek -40KPX Uacute Aring -40KPX Uacute Atilde -40KPX Uacute comma -40KPX Uacute period -40KPX Ucircumflex A -40KPX Ucircumflex Aacute -40KPX Ucircumflex Abreve -40KPX Ucircumflex Acircumflex -40KPX Ucircumflex Adieresis -40KPX Ucircumflex Agrave -40KPX Ucircumflex Amacron -40KPX Ucircumflex Aogonek -40KPX Ucircumflex Aring -40KPX Ucircumflex Atilde -40KPX Ucircumflex comma -40KPX Ucircumflex period -40KPX Udieresis A -40KPX Udieresis Aacute -40KPX Udieresis Abreve -40KPX Udieresis Acircumflex -40KPX Udieresis Adieresis -40KPX Udieresis Agrave -40KPX Udieresis Amacron -40KPX Udieresis Aogonek -40KPX Udieresis Aring -40KPX Udieresis Atilde -40KPX Udieresis comma -40KPX Udieresis period -40KPX Ugrave A -40KPX Ugrave Aacute -40KPX Ugrave Abreve -40KPX Ugrave Acircumflex -40KPX Ugrave Adieresis -40KPX Ugrave Agrave -40KPX Ugrave Amacron -40KPX Ugrave Aogonek -40KPX Ugrave Aring -40KPX Ugrave Atilde -40KPX Ugrave comma -40KPX Ugrave period -40KPX Uhungarumlaut A -40KPX Uhungarumlaut Aacute -40KPX Uhungarumlaut Abreve -40KPX Uhungarumlaut Acircumflex -40KPX Uhungarumlaut Adieresis -40KPX Uhungarumlaut Agrave -40KPX Uhungarumlaut Amacron -40KPX Uhungarumlaut Aogonek -40KPX Uhungarumlaut Aring -40KPX Uhungarumlaut Atilde -40KPX Uhungarumlaut comma -40KPX Uhungarumlaut period -40KPX Umacron A -40KPX Umacron Aacute -40KPX Umacron Abreve -40KPX Umacron Acircumflex -40KPX Umacron Adieresis -40KPX Umacron Agrave -40KPX Umacron Amacron -40KPX Umacron Aogonek -40KPX Umacron Aring -40KPX Umacron Atilde -40KPX Umacron comma -40KPX Umacron period -40KPX Uogonek A -40KPX Uogonek Aacute -40KPX Uogonek Abreve -40KPX Uogonek Acircumflex -40KPX Uogonek Adieresis -40KPX Uogonek Agrave -40KPX Uogonek Amacron -40KPX Uogonek Aogonek -40KPX Uogonek Aring -40KPX Uogonek Atilde -40KPX Uogonek comma -40KPX Uogonek period -40KPX Uring A -40KPX Uring Aacute -40KPX Uring Abreve -40KPX Uring Acircumflex -40KPX Uring Adieresis -40KPX Uring Agrave -40KPX Uring Amacron -40KPX Uring Aogonek -40KPX Uring Aring -40KPX Uring Atilde -40KPX Uring comma -40KPX Uring period -40KPX V A -80KPX V Aacute -80KPX V Abreve -80KPX V Acircumflex -80KPX V Adieresis -80KPX V Agrave -80KPX V Amacron -80KPX V Aogonek -80KPX V Aring -80KPX V Atilde -80KPX V G -40KPX V Gbreve -40KPX V Gcommaaccent -40KPX V O -40KPX V Oacute -40KPX V Ocircumflex -40KPX V Odieresis -40KPX V Ograve -40KPX V Ohungarumlaut -40KPX V Omacron -40KPX V Oslash -40KPX V Otilde -40KPX V a -70KPX V aacute -70KPX V abreve -70KPX V acircumflex -70KPX V adieresis -70KPX V agrave -70KPX V amacron -70KPX V aogonek -70KPX V aring -70KPX V atilde -70KPX V colon -40KPX V comma -125KPX V e -80KPX V eacute -80KPX V ecaron -80KPX V ecircumflex -80KPX V edieresis -80KPX V edotaccent -80KPX V egrave -80KPX V emacron -80KPX V eogonek -80KPX V hyphen -80KPX V o -80KPX V oacute -80KPX V ocircumflex -80KPX V odieresis -80KPX V ograve -80KPX V ohungarumlaut -80KPX V omacron -80KPX V oslash -80KPX V otilde -80KPX V period -125KPX V semicolon -40KPX V u -70KPX V uacute -70KPX V ucircumflex -70KPX V udieresis -70KPX V ugrave -70KPX V uhungarumlaut -70KPX V umacron -70KPX V uogonek -70KPX V uring -70KPX W A -50KPX W Aacute -50KPX W Abreve -50KPX W Acircumflex -50KPX W Adieresis -50KPX W Agrave -50KPX W Amacron -50KPX W Aogonek -50KPX W Aring -50KPX W Atilde -50KPX W O -20KPX W Oacute -20KPX W Ocircumflex -20KPX W Odieresis -20KPX W Ograve -20KPX W Ohungarumlaut -20KPX W Omacron -20KPX W Oslash -20KPX W Otilde -20KPX W a -40KPX W aacute -40KPX W abreve -40KPX W acircumflex -40KPX W adieresis -40KPX W agrave -40KPX W amacron -40KPX W aogonek -40KPX W aring -40KPX W atilde -40KPX W comma -80KPX W e -30KPX W eacute -30KPX W ecaron -30KPX W ecircumflex -30KPX W edieresis -30KPX W edotaccent -30KPX W egrave -30KPX W emacron -30KPX W eogonek -30KPX W hyphen -40KPX W o -30KPX W oacute -30KPX W ocircumflex -30KPX W odieresis -30KPX W ograve -30KPX W ohungarumlaut -30KPX W omacron -30KPX W oslash -30KPX W otilde -30KPX W period -80KPX W u -30KPX W uacute -30KPX W ucircumflex -30KPX W udieresis -30KPX W ugrave -30KPX W uhungarumlaut -30KPX W umacron -30KPX W uogonek -30KPX W uring -30KPX W y -20KPX W yacute -20KPX W ydieresis -20KPX Y A -110KPX Y Aacute -110KPX Y Abreve -110KPX Y Acircumflex -110KPX Y Adieresis -110KPX Y Agrave -110KPX Y Amacron -110KPX Y Aogonek -110KPX Y Aring -110KPX Y Atilde -110KPX Y O -85KPX Y Oacute -85KPX Y Ocircumflex -85KPX Y Odieresis -85KPX Y Ograve -85KPX Y Ohungarumlaut -85KPX Y Omacron -85KPX Y Oslash -85KPX Y Otilde -85KPX Y a -140KPX Y aacute -140KPX Y abreve -70KPX Y acircumflex -140KPX Y adieresis -140KPX Y agrave -140KPX Y amacron -70KPX Y aogonek -140KPX Y aring -140KPX Y atilde -140KPX Y colon -60KPX Y comma -140KPX Y e -140KPX Y eacute -140KPX Y ecaron -140KPX Y ecircumflex -140KPX Y edieresis -140KPX Y edotaccent -140KPX Y egrave -140KPX Y emacron -70KPX Y eogonek -140KPX Y hyphen -140KPX Y i -20KPX Y iacute -20KPX Y iogonek -20KPX Y o -140KPX Y oacute -140KPX Y ocircumflex -140KPX Y odieresis -140KPX Y ograve -140KPX Y ohungarumlaut -140KPX Y omacron -140KPX Y oslash -140KPX Y otilde -140KPX Y period -140KPX Y semicolon -60KPX Y u -110KPX Y uacute -110KPX Y ucircumflex -110KPX Y udieresis -110KPX Y ugrave -110KPX Y uhungarumlaut -110KPX Y umacron -110KPX Y uogonek -110KPX Y uring -110KPX Yacute A -110KPX Yacute Aacute -110KPX Yacute Abreve -110KPX Yacute Acircumflex -110KPX Yacute Adieresis -110KPX Yacute Agrave -110KPX Yacute Amacron -110KPX Yacute Aogonek -110KPX Yacute Aring -110KPX Yacute Atilde -110KPX Yacute O -85KPX Yacute Oacute -85KPX Yacute Ocircumflex -85KPX Yacute Odieresis -85KPX Yacute Ograve -85KPX Yacute Ohungarumlaut -85KPX Yacute Omacron -85KPX Yacute Oslash -85KPX Yacute Otilde -85KPX Yacute a -140KPX Yacute aacute -140KPX Yacute abreve -70KPX Yacute acircumflex -140KPX Yacute adieresis -140KPX Yacute agrave -140KPX Yacute amacron -70KPX Yacute aogonek -140KPX Yacute aring -140KPX Yacute atilde -70KPX Yacute colon -60KPX Yacute comma -140KPX Yacute e -140KPX Yacute eacute -140KPX Yacute ecaron -140KPX Yacute ecircumflex -140KPX Yacute edieresis -140KPX Yacute edotaccent -140KPX Yacute egrave -140KPX Yacute emacron -70KPX Yacute eogonek -140KPX Yacute hyphen -140KPX Yacute i -20KPX Yacute iacute -20KPX Yacute iogonek -20KPX Yacute o -140KPX Yacute oacute -140KPX Yacute ocircumflex -140KPX Yacute odieresis -140KPX Yacute ograve -140KPX Yacute ohungarumlaut -140KPX Yacute omacron -70KPX Yacute oslash -140KPX Yacute otilde -140KPX Yacute period -140KPX Yacute semicolon -60KPX Yacute u -110KPX Yacute uacute -110KPX Yacute ucircumflex -110KPX Yacute udieresis -110KPX Yacute ugrave -110KPX Yacute uhungarumlaut -110KPX Yacute umacron -110KPX Yacute uogonek -110KPX Yacute uring -110KPX Ydieresis A -110KPX Ydieresis Aacute -110KPX Ydieresis Abreve -110KPX Ydieresis Acircumflex -110KPX Ydieresis Adieresis -110KPX Ydieresis Agrave -110KPX Ydieresis Amacron -110KPX Ydieresis Aogonek -110KPX Ydieresis Aring -110KPX Ydieresis Atilde -110KPX Ydieresis O -85KPX Ydieresis Oacute -85KPX Ydieresis Ocircumflex -85KPX Ydieresis Odieresis -85KPX Ydieresis Ograve -85KPX Ydieresis Ohungarumlaut -85KPX Ydieresis Omacron -85KPX Ydieresis Oslash -85KPX Ydieresis Otilde -85KPX Ydieresis a -140KPX Ydieresis aacute -140KPX Ydieresis abreve -70KPX Ydieresis acircumflex -140KPX Ydieresis adieresis -140KPX Ydieresis agrave -140KPX Ydieresis amacron -70KPX Ydieresis aogonek -140KPX Ydieresis aring -140KPX Ydieresis atilde -70KPX Ydieresis colon -60KPX Ydieresis comma -140KPX Ydieresis e -140KPX Ydieresis eacute -140KPX Ydieresis ecaron -140KPX Ydieresis ecircumflex -140KPX Ydieresis edieresis -140KPX Ydieresis edotaccent -140KPX Ydieresis egrave -140KPX Ydieresis emacron -70KPX Ydieresis eogonek -140KPX Ydieresis hyphen -140KPX Ydieresis i -20KPX Ydieresis iacute -20KPX Ydieresis iogonek -20KPX Ydieresis o -140KPX Ydieresis oacute -140KPX Ydieresis ocircumflex -140KPX Ydieresis odieresis -140KPX Ydieresis ograve -140KPX Ydieresis ohungarumlaut -140KPX Ydieresis omacron -140KPX Ydieresis oslash -140KPX Ydieresis otilde -140KPX Ydieresis period -140KPX Ydieresis semicolon -60KPX Ydieresis u -110KPX Ydieresis uacute -110KPX Ydieresis ucircumflex -110KPX Ydieresis udieresis -110KPX Ydieresis ugrave -110KPX Ydieresis uhungarumlaut -110KPX Ydieresis umacron -110KPX Ydieresis uogonek -110KPX Ydieresis uring -110KPX a v -20KPX a w -20KPX a y -30KPX a yacute -30KPX a ydieresis -30KPX aacute v -20KPX aacute w -20KPX aacute y -30KPX aacute yacute -30KPX aacute ydieresis -30KPX abreve v -20KPX abreve w -20KPX abreve y -30KPX abreve yacute -30KPX abreve ydieresis -30KPX acircumflex v -20KPX acircumflex w -20KPX acircumflex y -30KPX acircumflex yacute -30KPX acircumflex ydieresis -30KPX adieresis v -20KPX adieresis w -20KPX adieresis y -30KPX adieresis yacute -30KPX adieresis ydieresis -30KPX agrave v -20KPX agrave w -20KPX agrave y -30KPX agrave yacute -30KPX agrave ydieresis -30KPX amacron v -20KPX amacron w -20KPX amacron y -30KPX amacron yacute -30KPX amacron ydieresis -30KPX aogonek v -20KPX aogonek w -20KPX aogonek y -30KPX aogonek yacute -30KPX aogonek ydieresis -30KPX aring v -20KPX aring w -20KPX aring y -30KPX aring yacute -30KPX aring ydieresis -30KPX atilde v -20KPX atilde w -20KPX atilde y -30KPX atilde yacute -30KPX atilde ydieresis -30KPX b b -10KPX b comma -40KPX b l -20KPX b lacute -20KPX b lcommaaccent -20KPX b lslash -20KPX b period -40KPX b u -20KPX b uacute -20KPX b ucircumflex -20KPX b udieresis -20KPX b ugrave -20KPX b uhungarumlaut -20KPX b umacron -20KPX b uogonek -20KPX b uring -20KPX b v -20KPX b y -20KPX b yacute -20KPX b ydieresis -20KPX c comma -15KPX c k -20KPX c kcommaaccent -20KPX cacute comma -15KPX cacute k -20KPX cacute kcommaaccent -20KPX ccaron comma -15KPX ccaron k -20KPX ccaron kcommaaccent -20KPX ccedilla comma -15KPX ccedilla k -20KPX ccedilla kcommaaccent -20KPX colon space -50KPX comma quotedblright -100KPX comma quoteright -100KPX e comma -15KPX e period -15KPX e v -30KPX e w -20KPX e x -30KPX e y -20KPX e yacute -20KPX e ydieresis -20KPX eacute comma -15KPX eacute period -15KPX eacute v -30KPX eacute w -20KPX eacute x -30KPX eacute y -20KPX eacute yacute -20KPX eacute ydieresis -20KPX ecaron comma -15KPX ecaron period -15KPX ecaron v -30KPX ecaron w -20KPX ecaron x -30KPX ecaron y -20KPX ecaron yacute -20KPX ecaron ydieresis -20KPX ecircumflex comma -15KPX ecircumflex period -15KPX ecircumflex v -30KPX ecircumflex w -20KPX ecircumflex x -30KPX ecircumflex y -20KPX ecircumflex yacute -20KPX ecircumflex ydieresis -20KPX edieresis comma -15KPX edieresis period -15KPX edieresis v -30KPX edieresis w -20KPX edieresis x -30KPX edieresis y -20KPX edieresis yacute -20KPX edieresis ydieresis -20KPX edotaccent comma -15KPX edotaccent period -15KPX edotaccent v -30KPX edotaccent w -20KPX edotaccent x -30KPX edotaccent y -20KPX edotaccent yacute -20KPX edotaccent ydieresis -20KPX egrave comma -15KPX egrave period -15KPX egrave v -30KPX egrave w -20KPX egrave x -30KPX egrave y -20KPX egrave yacute -20KPX egrave ydieresis -20KPX emacron comma -15KPX emacron period -15KPX emacron v -30KPX emacron w -20KPX emacron x -30KPX emacron y -20KPX emacron yacute -20KPX emacron ydieresis -20KPX eogonek comma -15KPX eogonek period -15KPX eogonek v -30KPX eogonek w -20KPX eogonek x -30KPX eogonek y -20KPX eogonek yacute -20KPX eogonek ydieresis -20KPX f a -30KPX f aacute -30KPX f abreve -30KPX f acircumflex -30KPX f adieresis -30KPX f agrave -30KPX f amacron -30KPX f aogonek -30KPX f aring -30KPX f atilde -30KPX f comma -30KPX f dotlessi -28KPX f e -30KPX f eacute -30KPX f ecaron -30KPX f ecircumflex -30KPX f edieresis -30KPX f edotaccent -30KPX f egrave -30KPX f emacron -30KPX f eogonek -30KPX f o -30KPX f oacute -30KPX f ocircumflex -30KPX f odieresis -30KPX f ograve -30KPX f ohungarumlaut -30KPX f omacron -30KPX f oslash -30KPX f otilde -30KPX f period -30KPX f quotedblright 60KPX f quoteright 50KPX g r -10KPX g racute -10KPX g rcaron -10KPX g rcommaaccent -10KPX gbreve r -10KPX gbreve racute -10KPX gbreve rcaron -10KPX gbreve rcommaaccent -10KPX gcommaaccent r -10KPX gcommaaccent racute -10KPX gcommaaccent rcaron -10KPX gcommaaccent rcommaaccent -10KPX h y -30KPX h yacute -30KPX h ydieresis -30KPX k e -20KPX k eacute -20KPX k ecaron -20KPX k ecircumflex -20KPX k edieresis -20KPX k edotaccent -20KPX k egrave -20KPX k emacron -20KPX k eogonek -20KPX k o -20KPX k oacute -20KPX k ocircumflex -20KPX k odieresis -20KPX k ograve -20KPX k ohungarumlaut -20KPX k omacron -20KPX k oslash -20KPX k otilde -20KPX kcommaaccent e -20KPX kcommaaccent eacute -20KPX kcommaaccent ecaron -20KPX kcommaaccent ecircumflex -20KPX kcommaaccent edieresis -20KPX kcommaaccent edotaccent -20KPX kcommaaccent egrave -20KPX kcommaaccent emacron -20KPX kcommaaccent eogonek -20KPX kcommaaccent o -20KPX kcommaaccent oacute -20KPX kcommaaccent ocircumflex -20KPX kcommaaccent odieresis -20KPX kcommaaccent ograve -20KPX kcommaaccent ohungarumlaut -20KPX kcommaaccent omacron -20KPX kcommaaccent oslash -20KPX kcommaaccent otilde -20KPX m u -10KPX m uacute -10KPX m ucircumflex -10KPX m udieresis -10KPX m ugrave -10KPX m uhungarumlaut -10KPX m umacron -10KPX m uogonek -10KPX m uring -10KPX m y -15KPX m yacute -15KPX m ydieresis -15KPX n u -10KPX n uacute -10KPX n ucircumflex -10KPX n udieresis -10KPX n ugrave -10KPX n uhungarumlaut -10KPX n umacron -10KPX n uogonek -10KPX n uring -10KPX n v -20KPX n y -15KPX n yacute -15KPX n ydieresis -15KPX nacute u -10KPX nacute uacute -10KPX nacute ucircumflex -10KPX nacute udieresis -10KPX nacute ugrave -10KPX nacute uhungarumlaut -10KPX nacute umacron -10KPX nacute uogonek -10KPX nacute uring -10KPX nacute v -20KPX nacute y -15KPX nacute yacute -15KPX nacute ydieresis -15KPX ncaron u -10KPX ncaron uacute -10KPX ncaron ucircumflex -10KPX ncaron udieresis -10KPX ncaron ugrave -10KPX ncaron uhungarumlaut -10KPX ncaron umacron -10KPX ncaron uogonek -10KPX ncaron uring -10KPX ncaron v -20KPX ncaron y -15KPX ncaron yacute -15KPX ncaron ydieresis -15KPX ncommaaccent u -10KPX ncommaaccent uacute -10KPX ncommaaccent ucircumflex -10KPX ncommaaccent udieresis -10KPX ncommaaccent ugrave -10KPX ncommaaccent uhungarumlaut -10KPX ncommaaccent umacron -10KPX ncommaaccent uogonek -10KPX ncommaaccent uring -10KPX ncommaaccent v -20KPX ncommaaccent y -15KPX ncommaaccent yacute -15KPX ncommaaccent ydieresis -15KPX ntilde u -10KPX ntilde uacute -10KPX ntilde ucircumflex -10KPX ntilde udieresis -10KPX ntilde ugrave -10KPX ntilde uhungarumlaut -10KPX ntilde umacron -10KPX ntilde uogonek -10KPX ntilde uring -10KPX ntilde v -20KPX ntilde y -15KPX ntilde yacute -15KPX ntilde ydieresis -15KPX o comma -40KPX o period -40KPX o v -15KPX o w -15KPX o x -30KPX o y -30KPX o yacute -30KPX o ydieresis -30KPX oacute comma -40KPX oacute period -40KPX oacute v -15KPX oacute w -15KPX oacute x -30KPX oacute y -30KPX oacute yacute -30KPX oacute ydieresis -30KPX ocircumflex comma -40KPX ocircumflex period -40KPX ocircumflex v -15KPX ocircumflex w -15KPX ocircumflex x -30KPX ocircumflex y -30KPX ocircumflex yacute -30KPX ocircumflex ydieresis -30KPX odieresis comma -40KPX odieresis period -40KPX odieresis v -15KPX odieresis w -15KPX odieresis x -30KPX odieresis y -30KPX odieresis yacute -30KPX odieresis ydieresis -30KPX ograve comma -40KPX ograve period -40KPX ograve v -15KPX ograve w -15KPX ograve x -30KPX ograve y -30KPX ograve yacute -30KPX ograve ydieresis -30KPX ohungarumlaut comma -40KPX ohungarumlaut period -40KPX ohungarumlaut v -15KPX ohungarumlaut w -15KPX ohungarumlaut x -30KPX ohungarumlaut y -30KPX ohungarumlaut yacute -30KPX ohungarumlaut ydieresis -30KPX omacron comma -40KPX omacron period -40KPX omacron v -15KPX omacron w -15KPX omacron x -30KPX omacron y -30KPX omacron yacute -30KPX omacron ydieresis -30KPX oslash a -55KPX oslash aacute -55KPX oslash abreve -55KPX oslash acircumflex -55KPX oslash adieresis -55KPX oslash agrave -55KPX oslash amacron -55KPX oslash aogonek -55KPX oslash aring -55KPX oslash atilde -55KPX oslash b -55KPX oslash c -55KPX oslash cacute -55KPX oslash ccaron -55KPX oslash ccedilla -55KPX oslash comma -95KPX oslash d -55KPX oslash dcroat -55KPX oslash e -55KPX oslash eacute -55KPX oslash ecaron -55KPX oslash ecircumflex -55KPX oslash edieresis -55KPX oslash edotaccent -55KPX oslash egrave -55KPX oslash emacron -55KPX oslash eogonek -55KPX oslash f -55KPX oslash g -55KPX oslash gbreve -55KPX oslash gcommaaccent -55KPX oslash h -55KPX oslash i -55KPX oslash iacute -55KPX oslash icircumflex -55KPX oslash idieresis -55KPX oslash igrave -55KPX oslash imacron -55KPX oslash iogonek -55KPX oslash j -55KPX oslash k -55KPX oslash kcommaaccent -55KPX oslash l -55KPX oslash lacute -55KPX oslash lcommaaccent -55KPX oslash lslash -55KPX oslash m -55KPX oslash n -55KPX oslash nacute -55KPX oslash ncaron -55KPX oslash ncommaaccent -55KPX oslash ntilde -55KPX oslash o -55KPX oslash oacute -55KPX oslash ocircumflex -55KPX oslash odieresis -55KPX oslash ograve -55KPX oslash ohungarumlaut -55KPX oslash omacron -55KPX oslash oslash -55KPX oslash otilde -55KPX oslash p -55KPX oslash period -95KPX oslash q -55KPX oslash r -55KPX oslash racute -55KPX oslash rcaron -55KPX oslash rcommaaccent -55KPX oslash s -55KPX oslash sacute -55KPX oslash scaron -55KPX oslash scedilla -55KPX oslash scommaaccent -55KPX oslash t -55KPX oslash tcommaaccent -55KPX oslash u -55KPX oslash uacute -55KPX oslash ucircumflex -55KPX oslash udieresis -55KPX oslash ugrave -55KPX oslash uhungarumlaut -55KPX oslash umacron -55KPX oslash uogonek -55KPX oslash uring -55KPX oslash v -70KPX oslash w -70KPX oslash x -85KPX oslash y -70KPX oslash yacute -70KPX oslash ydieresis -70KPX oslash z -55KPX oslash zacute -55KPX oslash zcaron -55KPX oslash zdotaccent -55KPX otilde comma -40KPX otilde period -40KPX otilde v -15KPX otilde w -15KPX otilde x -30KPX otilde y -30KPX otilde yacute -30KPX otilde ydieresis -30KPX p comma -35KPX p period -35KPX p y -30KPX p yacute -30KPX p ydieresis -30KPX period quotedblright -100KPX period quoteright -100KPX period space -60KPX quotedblright space -40KPX quoteleft quoteleft -57KPX quoteright d -50KPX quoteright dcroat -50KPX quoteright quoteright -57KPX quoteright r -50KPX quoteright racute -50KPX quoteright rcaron -50KPX quoteright rcommaaccent -50KPX quoteright s -50KPX quoteright sacute -50KPX quoteright scaron -50KPX quoteright scedilla -50KPX quoteright scommaaccent -50KPX quoteright space -70KPX r a -10KPX r aacute -10KPX r abreve -10KPX r acircumflex -10KPX r adieresis -10KPX r agrave -10KPX r amacron -10KPX r aogonek -10KPX r aring -10KPX r atilde -10KPX r colon 30KPX r comma -50KPX r i 15KPX r iacute 15KPX r icircumflex 15KPX r idieresis 15KPX r igrave 15KPX r imacron 15KPX r iogonek 15KPX r k 15KPX r kcommaaccent 15KPX r l 15KPX r lacute 15KPX r lcommaaccent 15KPX r lslash 15KPX r m 25KPX r n 25KPX r nacute 25KPX r ncaron 25KPX r ncommaaccent 25KPX r ntilde 25KPX r p 30KPX r period -50KPX r semicolon 30KPX r t 40KPX r tcommaaccent 40KPX r u 15KPX r uacute 15KPX r ucircumflex 15KPX r udieresis 15KPX r ugrave 15KPX r uhungarumlaut 15KPX r umacron 15KPX r uogonek 15KPX r uring 15KPX r v 30KPX r y 30KPX r yacute 30KPX r ydieresis 30KPX racute a -10KPX racute aacute -10KPX racute abreve -10KPX racute acircumflex -10KPX racute adieresis -10KPX racute agrave -10KPX racute amacron -10KPX racute aogonek -10KPX racute aring -10KPX racute atilde -10KPX racute colon 30KPX racute comma -50KPX racute i 15KPX racute iacute 15KPX racute icircumflex 15KPX racute idieresis 15KPX racute igrave 15KPX racute imacron 15KPX racute iogonek 15KPX racute k 15KPX racute kcommaaccent 15KPX racute l 15KPX racute lacute 15KPX racute lcommaaccent 15KPX racute lslash 15KPX racute m 25KPX racute n 25KPX racute nacute 25KPX racute ncaron 25KPX racute ncommaaccent 25KPX racute ntilde 25KPX racute p 30KPX racute period -50KPX racute semicolon 30KPX racute t 40KPX racute tcommaaccent 40KPX racute u 15KPX racute uacute 15KPX racute ucircumflex 15KPX racute udieresis 15KPX racute ugrave 15KPX racute uhungarumlaut 15KPX racute umacron 15KPX racute uogonek 15KPX racute uring 15KPX racute v 30KPX racute y 30KPX racute yacute 30KPX racute ydieresis 30KPX rcaron a -10KPX rcaron aacute -10KPX rcaron abreve -10KPX rcaron acircumflex -10KPX rcaron adieresis -10KPX rcaron agrave -10KPX rcaron amacron -10KPX rcaron aogonek -10KPX rcaron aring -10KPX rcaron atilde -10KPX rcaron colon 30KPX rcaron comma -50KPX rcaron i 15KPX rcaron iacute 15KPX rcaron icircumflex 15KPX rcaron idieresis 15KPX rcaron igrave 15KPX rcaron imacron 15KPX rcaron iogonek 15KPX rcaron k 15KPX rcaron kcommaaccent 15KPX rcaron l 15KPX rcaron lacute 15KPX rcaron lcommaaccent 15KPX rcaron lslash 15KPX rcaron m 25KPX rcaron n 25KPX rcaron nacute 25KPX rcaron ncaron 25KPX rcaron ncommaaccent 25KPX rcaron ntilde 25KPX rcaron p 30KPX rcaron period -50KPX rcaron semicolon 30KPX rcaron t 40KPX rcaron tcommaaccent 40KPX rcaron u 15KPX rcaron uacute 15KPX rcaron ucircumflex 15KPX rcaron udieresis 15KPX rcaron ugrave 15KPX rcaron uhungarumlaut 15KPX rcaron umacron 15KPX rcaron uogonek 15KPX rcaron uring 15KPX rcaron v 30KPX rcaron y 30KPX rcaron yacute 30KPX rcaron ydieresis 30KPX rcommaaccent a -10KPX rcommaaccent aacute -10KPX rcommaaccent abreve -10KPX rcommaaccent acircumflex -10KPX rcommaaccent adieresis -10KPX rcommaaccent agrave -10KPX rcommaaccent amacron -10KPX rcommaaccent aogonek -10KPX rcommaaccent aring -10KPX rcommaaccent atilde -10KPX rcommaaccent colon 30KPX rcommaaccent comma -50KPX rcommaaccent i 15KPX rcommaaccent iacute 15KPX rcommaaccent icircumflex 15KPX rcommaaccent idieresis 15KPX rcommaaccent igrave 15KPX rcommaaccent imacron 15KPX rcommaaccent iogonek 15KPX rcommaaccent k 15KPX rcommaaccent kcommaaccent 15KPX rcommaaccent l 15KPX rcommaaccent lacute 15KPX rcommaaccent lcommaaccent 15KPX rcommaaccent lslash 15KPX rcommaaccent m 25KPX rcommaaccent n 25KPX rcommaaccent nacute 25KPX rcommaaccent ncaron 25KPX rcommaaccent ncommaaccent 25KPX rcommaaccent ntilde 25KPX rcommaaccent p 30KPX rcommaaccent period -50KPX rcommaaccent semicolon 30KPX rcommaaccent t 40KPX rcommaaccent tcommaaccent 40KPX rcommaaccent u 15KPX rcommaaccent uacute 15KPX rcommaaccent ucircumflex 15KPX rcommaaccent udieresis 15KPX rcommaaccent ugrave 15KPX rcommaaccent uhungarumlaut 15KPX rcommaaccent umacron 15KPX rcommaaccent uogonek 15KPX rcommaaccent uring 15KPX rcommaaccent v 30KPX rcommaaccent y 30KPX rcommaaccent yacute 30KPX rcommaaccent ydieresis 30KPX s comma -15KPX s period -15KPX s w -30KPX sacute comma -15KPX sacute period -15KPX sacute w -30KPX scaron comma -15KPX scaron period -15KPX scaron w -30KPX scedilla comma -15KPX scedilla period -15KPX scedilla w -30KPX scommaaccent comma -15KPX scommaaccent period -15KPX scommaaccent w -30KPX semicolon space -50KPX space T -50KPX space Tcaron -50KPX space Tcommaaccent -50KPX space V -50KPX space W -40KPX space Y -90KPX space Yacute -90KPX space Ydieresis -90KPX space quotedblleft -30KPX space quoteleft -60KPX v a -25KPX v aacute -25KPX v abreve -25KPX v acircumflex -25KPX v adieresis -25KPX v agrave -25KPX v amacron -25KPX v aogonek -25KPX v aring -25KPX v atilde -25KPX v comma -80KPX v e -25KPX v eacute -25KPX v ecaron -25KPX v ecircumflex -25KPX v edieresis -25KPX v edotaccent -25KPX v egrave -25KPX v emacron -25KPX v eogonek -25KPX v o -25KPX v oacute -25KPX v ocircumflex -25KPX v odieresis -25KPX v ograve -25KPX v ohungarumlaut -25KPX v omacron -25KPX v oslash -25KPX v otilde -25KPX v period -80KPX w a -15KPX w aacute -15KPX w abreve -15KPX w acircumflex -15KPX w adieresis -15KPX w agrave -15KPX w amacron -15KPX w aogonek -15KPX w aring -15KPX w atilde -15KPX w comma -60KPX w e -10KPX w eacute -10KPX w ecaron -10KPX w ecircumflex -10KPX w edieresis -10KPX w edotaccent -10KPX w egrave -10KPX w emacron -10KPX w eogonek -10KPX w o -10KPX w oacute -10KPX w ocircumflex -10KPX w odieresis -10KPX w ograve -10KPX w ohungarumlaut -10KPX w omacron -10KPX w oslash -10KPX w otilde -10KPX w period -60KPX x e -30KPX x eacute -30KPX x ecaron -30KPX x ecircumflex -30KPX x edieresis -30KPX x edotaccent -30KPX x egrave -30KPX x emacron -30KPX x eogonek -30KPX y a -20KPX y aacute -20KPX y abreve -20KPX y acircumflex -20KPX y adieresis -20KPX y agrave -20KPX y amacron -20KPX y aogonek -20KPX y aring -20KPX y atilde -20KPX y comma -100KPX y e -20KPX y eacute -20KPX y ecaron -20KPX y ecircumflex -20KPX y edieresis -20KPX y edotaccent -20KPX y egrave -20KPX y emacron -20KPX y eogonek -20KPX y o -20KPX y oacute -20KPX y ocircumflex -20KPX y odieresis -20KPX y ograve -20KPX y ohungarumlaut -20KPX y omacron -20KPX y oslash -20KPX y otilde -20KPX y period -100KPX yacute a -20KPX yacute aacute -20KPX yacute abreve -20KPX yacute acircumflex -20KPX yacute adieresis -20KPX yacute agrave -20KPX yacute amacron -20KPX yacute aogonek -20KPX yacute aring -20KPX yacute atilde -20KPX yacute comma -100KPX yacute e -20KPX yacute eacute -20KPX yacute ecaron -20KPX yacute ecircumflex -20KPX yacute edieresis -20KPX yacute edotaccent -20KPX yacute egrave -20KPX yacute emacron -20KPX yacute eogonek -20KPX yacute o -20KPX yacute oacute -20KPX yacute ocircumflex -20KPX yacute odieresis -20KPX yacute ograve -20KPX yacute ohungarumlaut -20KPX yacute omacron -20KPX yacute oslash -20KPX yacute otilde -20KPX yacute period -100KPX ydieresis a -20KPX ydieresis aacute -20KPX ydieresis abreve -20KPX ydieresis acircumflex -20KPX ydieresis adieresis -20KPX ydieresis agrave -20KPX ydieresis amacron -20KPX ydieresis aogonek -20KPX ydieresis aring -20KPX ydieresis atilde -20KPX ydieresis comma -100KPX ydieresis e -20KPX ydieresis eacute -20KPX ydieresis ecaron -20KPX ydieresis ecircumflex -20KPX ydieresis edieresis -20KPX ydieresis edotaccent -20KPX ydieresis egrave -20KPX ydieresis emacron -20KPX ydieresis eogonek -20KPX ydieresis o -20KPX ydieresis oacute -20KPX ydieresis ocircumflex -20KPX ydieresis odieresis -20KPX ydieresis ograve -20KPX ydieresis ohungarumlaut -20KPX ydieresis omacron -20KPX ydieresis oslash -20KPX ydieresis otilde -20KPX ydieresis period -100KPX z e -15KPX z eacute -15KPX z ecaron -15KPX z ecircumflex -15KPX z edieresis -15KPX z edotaccent -15KPX z egrave -15KPX z emacron -15KPX z eogonek -15KPX z o -15KPX z oacute -15KPX z ocircumflex -15KPX z odieresis -15KPX z ograve -15KPX z ohungarumlaut -15KPX z omacron -15KPX z oslash -15KPX z otilde -15KPX zacute e -15KPX zacute eacute -15KPX zacute ecaron -15KPX zacute ecircumflex -15KPX zacute edieresis -15KPX zacute edotaccent -15KPX zacute egrave -15KPX zacute emacron -15KPX zacute eogonek -15KPX zacute o -15KPX zacute oacute -15KPX zacute ocircumflex -15KPX zacute odieresis -15KPX zacute ograve -15KPX zacute ohungarumlaut -15KPX zacute omacron -15KPX zacute oslash -15KPX zacute otilde -15KPX zcaron e -15KPX zcaron eacute -15KPX zcaron ecaron -15KPX zcaron ecircumflex -15KPX zcaron edieresis -15KPX zcaron edotaccent -15KPX zcaron egrave -15KPX zcaron emacron -15KPX zcaron eogonek -15KPX zcaron o -15KPX zcaron oacute -15KPX zcaron ocircumflex -15KPX zcaron odieresis -15KPX zcaron ograve -15KPX zcaron ohungarumlaut -15KPX zcaron omacron -15KPX zcaron oslash -15KPX zcaron otilde -15KPX zdotaccent e -15KPX zdotaccent eacute -15KPX zdotaccent ecaron -15KPX zdotaccent ecircumflex -15KPX zdotaccent edieresis -15KPX zdotaccent edotaccent -15KPX zdotaccent egrave -15KPX zdotaccent emacron -15KPX zdotaccent eogonek -15KPX zdotaccent o -15KPX zdotaccent oacute -15KPX zdotaccent ocircumflex -15KPX zdotaccent odieresis -15KPX zdotaccent ograve -15KPX zdotaccent ohungarumlaut -15KPX zdotaccent omacron -15KPX zdotaccent oslash -15KPX zdotaccent otilde -15EndKernPairsEndKernDataEndFontMetrics'</body><body package="Type1">helveticaBold	"from http://www.adobe.com/devnet/font.html "	&lt;font: #'Helvetica-Bold'&gt;	^self		windowsName: 'Arial'		afm: 'StartFontMetrics 4.1Comment Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.Comment Creation Date: Thu May  1 12:43:52 1997Comment UniqueID 43052Comment VMusage 37169 48194FontName Helvetica-BoldFullName Helvetica BoldFamilyName HelveticaWeight BoldItalicAngle 0IsFixedPitch falseCharacterSet ExtendedRomanFontBBox -170 -228 1003 962 UnderlinePosition -100UnderlineThickness 50Version 002.000Notice Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a trademark of Linotype-Hell AG and/or its subsidiaries.EncodingScheme AdobeStandardEncodingCapHeight 718XHeight 532Ascender 718Descender -207StdHW 118StdVW 140StartCharMetrics 315C 32 ; WX 278 ; N space ; B 0 0 0 0 ;C 33 ; WX 333 ; N exclam ; B 90 0 244 718 ;C 34 ; WX 474 ; N quotedbl ; B 98 447 376 718 ;C 35 ; WX 556 ; N numbersign ; B 18 0 538 698 ;C 36 ; WX 556 ; N dollar ; B 30 -115 523 775 ;C 37 ; WX 889 ; N percent ; B 28 -19 861 710 ;C 38 ; WX 722 ; N ampersand ; B 54 -19 701 718 ;C 39 ; WX 278 ; N quoteright ; B 69 445 209 718 ;C 40 ; WX 333 ; N parenleft ; B 35 -208 314 734 ;C 41 ; WX 333 ; N parenright ; B 19 -208 298 734 ;C 42 ; WX 389 ; N asterisk ; B 27 387 362 718 ;C 43 ; WX 584 ; N plus ; B 40 0 544 506 ;C 44 ; WX 278 ; N comma ; B 64 -168 214 146 ;C 45 ; WX 333 ; N hyphen ; B 27 215 306 345 ;C 46 ; WX 278 ; N period ; B 64 0 214 146 ;C 47 ; WX 278 ; N slash ; B -33 -19 311 737 ;C 48 ; WX 556 ; N zero ; B 32 -19 524 710 ;C 49 ; WX 556 ; N one ; B 69 0 378 710 ;C 50 ; WX 556 ; N two ; B 26 0 511 710 ;C 51 ; WX 556 ; N three ; B 27 -19 516 710 ;C 52 ; WX 556 ; N four ; B 27 0 526 710 ;C 53 ; WX 556 ; N five ; B 27 -19 516 698 ;C 54 ; WX 556 ; N six ; B 31 -19 520 710 ;C 55 ; WX 556 ; N seven ; B 25 0 528 698 ;C 56 ; WX 556 ; N eight ; B 32 -19 524 710 ;C 57 ; WX 556 ; N nine ; B 30 -19 522 710 ;C 58 ; WX 333 ; N colon ; B 92 0 242 512 ;C 59 ; WX 333 ; N semicolon ; B 92 -168 242 512 ;C 60 ; WX 584 ; N less ; B 38 -8 546 514 ;C 61 ; WX 584 ; N equal ; B 40 87 544 419 ;C 62 ; WX 584 ; N greater ; B 38 -8 546 514 ;C 63 ; WX 611 ; N question ; B 60 0 556 727 ;C 64 ; WX 975 ; N at ; B 118 -19 856 737 ;C 65 ; WX 722 ; N A ; B 20 0 702 718 ;C 66 ; WX 722 ; N B ; B 76 0 669 718 ;C 67 ; WX 722 ; N C ; B 44 -19 684 737 ;C 68 ; WX 722 ; N D ; B 76 0 685 718 ;C 69 ; WX 667 ; N E ; B 76 0 621 718 ;C 70 ; WX 611 ; N F ; B 76 0 587 718 ;C 71 ; WX 778 ; N G ; B 44 -19 713 737 ;C 72 ; WX 722 ; N H ; B 71 0 651 718 ;C 73 ; WX 278 ; N I ; B 64 0 214 718 ;C 74 ; WX 556 ; N J ; B 22 -18 484 718 ;C 75 ; WX 722 ; N K ; B 87 0 722 718 ;C 76 ; WX 611 ; N L ; B 76 0 583 718 ;C 77 ; WX 833 ; N M ; B 69 0 765 718 ;C 78 ; WX 722 ; N N ; B 69 0 654 718 ;C 79 ; WX 778 ; N O ; B 44 -19 734 737 ;C 80 ; WX 667 ; N P ; B 76 0 627 718 ;C 81 ; WX 778 ; N Q ; B 44 -52 737 737 ;C 82 ; WX 722 ; N R ; B 76 0 677 718 ;C 83 ; WX 667 ; N S ; B 39 -19 629 737 ;C 84 ; WX 611 ; N T ; B 14 0 598 718 ;C 85 ; WX 722 ; N U ; B 72 -19 651 718 ;C 86 ; WX 667 ; N V ; B 19 0 648 718 ;C 87 ; WX 944 ; N W ; B 16 0 929 718 ;C 88 ; WX 667 ; N X ; B 14 0 653 718 ;C 89 ; WX 667 ; N Y ; B 15 0 653 718 ;C 90 ; WX 611 ; N Z ; B 25 0 586 718 ;C 91 ; WX 333 ; N bracketleft ; B 63 -196 309 722 ;C 92 ; WX 278 ; N backslash ; B -33 -19 311 737 ;C 93 ; WX 333 ; N bracketright ; B 24 -196 270 722 ;C 94 ; WX 584 ; N asciicircum ; B 62 323 522 698 ;C 95 ; WX 556 ; N underscore ; B 0 -125 556 -75 ;C 96 ; WX 278 ; N quoteleft ; B 69 454 209 727 ;C 97 ; WX 556 ; N a ; B 29 -14 527 546 ;C 98 ; WX 611 ; N b ; B 61 -14 578 718 ;C 99 ; WX 556 ; N c ; B 34 -14 524 546 ;C 100 ; WX 611 ; N d ; B 34 -14 551 718 ;C 101 ; WX 556 ; N e ; B 23 -14 528 546 ;C 102 ; WX 333 ; N f ; B 10 0 318 727 ; L i fi ; L l fl ;C 103 ; WX 611 ; N g ; B 40 -217 553 546 ;C 104 ; WX 611 ; N h ; B 65 0 546 718 ;C 105 ; WX 278 ; N i ; B 69 0 209 725 ;C 106 ; WX 278 ; N j ; B 3 -214 209 725 ;C 107 ; WX 556 ; N k ; B 69 0 562 718 ;C 108 ; WX 278 ; N l ; B 69 0 209 718 ;C 109 ; WX 889 ; N m ; B 64 0 826 546 ;C 110 ; WX 611 ; N n ; B 65 0 546 546 ;C 111 ; WX 611 ; N o ; B 34 -14 578 546 ;C 112 ; WX 611 ; N p ; B 62 -207 578 546 ;C 113 ; WX 611 ; N q ; B 34 -207 552 546 ;C 114 ; WX 389 ; N r ; B 64 0 373 546 ;C 115 ; WX 556 ; N s ; B 30 -14 519 546 ;C 116 ; WX 333 ; N t ; B 10 -6 309 676 ;C 117 ; WX 611 ; N u ; B 66 -14 545 532 ;C 118 ; WX 556 ; N v ; B 13 0 543 532 ;C 119 ; WX 778 ; N w ; B 10 0 769 532 ;C 120 ; WX 556 ; N x ; B 15 0 541 532 ;C 121 ; WX 556 ; N y ; B 10 -214 539 532 ;C 122 ; WX 500 ; N z ; B 20 0 480 532 ;C 123 ; WX 389 ; N braceleft ; B 48 -196 365 722 ;C 124 ; WX 280 ; N bar ; B 84 -225 196 775 ;C 125 ; WX 389 ; N braceright ; B 24 -196 341 722 ;C 126 ; WX 584 ; N asciitilde ; B 61 163 523 343 ;C 161 ; WX 333 ; N exclamdown ; B 90 -186 244 532 ;C 162 ; WX 556 ; N cent ; B 34 -118 524 628 ;C 163 ; WX 556 ; N sterling ; B 28 -16 541 718 ;C 164 ; WX 167 ; N fraction ; B -170 -19 336 710 ;C 165 ; WX 556 ; N yen ; B -9 0 565 698 ;C 166 ; WX 556 ; N florin ; B -10 -210 516 737 ;C 167 ; WX 556 ; N section ; B 34 -184 522 727 ;C 168 ; WX 556 ; N currency ; B -3 76 559 636 ;C 169 ; WX 238 ; N quotesingle ; B 70 447 168 718 ;C 170 ; WX 500 ; N quotedblleft ; B 64 454 436 727 ;C 171 ; WX 556 ; N guillemotleft ; B 88 76 468 484 ;C 172 ; WX 333 ; N guilsinglleft ; B 83 76 250 484 ;C 173 ; WX 333 ; N guilsinglright ; B 83 76 250 484 ;C 174 ; WX 611 ; N fi ; B 10 0 542 727 ;C 175 ; WX 611 ; N fl ; B 10 0 542 727 ;C 177 ; WX 556 ; N endash ; B 0 227 556 333 ;C 178 ; WX 556 ; N dagger ; B 36 -171 520 718 ;C 179 ; WX 556 ; N daggerdbl ; B 36 -171 520 718 ;C 180 ; WX 278 ; N periodcentered ; B 58 172 220 334 ;C 182 ; WX 556 ; N paragraph ; B -8 -191 539 700 ;C 183 ; WX 350 ; N bullet ; B 10 194 340 524 ;C 184 ; WX 278 ; N quotesinglbase ; B 69 -146 209 127 ;C 185 ; WX 500 ; N quotedblbase ; B 64 -146 436 127 ;C 186 ; WX 500 ; N quotedblright ; B 64 445 436 718 ;C 187 ; WX 556 ; N guillemotright ; B 88 76 468 484 ;C 188 ; WX 1000 ; N ellipsis ; B 92 0 908 146 ;C 189 ; WX 1000 ; N perthousand ; B -3 -19 1003 710 ;C 191 ; WX 611 ; N questiondown ; B 55 -195 551 532 ;C 193 ; WX 333 ; N grave ; B -23 604 225 750 ;C 194 ; WX 333 ; N acute ; B 108 604 356 750 ;C 195 ; WX 333 ; N circumflex ; B -10 604 343 750 ;C 196 ; WX 333 ; N tilde ; B -17 610 350 737 ;C 197 ; WX 333 ; N macron ; B -6 604 339 678 ;C 198 ; WX 333 ; N breve ; B -2 604 335 750 ;C 199 ; WX 333 ; N dotaccent ; B 104 614 230 729 ;C 200 ; WX 333 ; N dieresis ; B 6 614 327 729 ;C 202 ; WX 333 ; N ring ; B 59 568 275 776 ;C 203 ; WX 333 ; N cedilla ; B 6 -228 245 0 ;C 205 ; WX 333 ; N hungarumlaut ; B 9 604 486 750 ;C 206 ; WX 333 ; N ogonek ; B 71 -228 304 0 ;C 207 ; WX 333 ; N caron ; B -10 604 343 750 ;C 208 ; WX 1000 ; N emdash ; B 0 227 1000 333 ;C 225 ; WX 1000 ; N AE ; B 5 0 954 718 ;C 227 ; WX 370 ; N ordfeminine ; B 22 401 347 737 ;C 232 ; WX 611 ; N Lslash ; B -20 0 583 718 ;C 233 ; WX 778 ; N Oslash ; B 33 -27 744 745 ;C 234 ; WX 1000 ; N OE ; B 37 -19 961 737 ;C 235 ; WX 365 ; N ordmasculine ; B 6 401 360 737 ;C 241 ; WX 889 ; N ae ; B 29 -14 858 546 ;C 245 ; WX 278 ; N dotlessi ; B 69 0 209 532 ;C 248 ; WX 278 ; N lslash ; B -18 0 296 718 ;C 249 ; WX 611 ; N oslash ; B 22 -29 589 560 ;C 250 ; WX 944 ; N oe ; B 34 -14 912 546 ;C 251 ; WX 611 ; N germandbls ; B 69 -14 579 731 ;C -1 ; WX 278 ; N Idieresis ; B -21 0 300 915 ;C -1 ; WX 556 ; N eacute ; B 23 -14 528 750 ;C -1 ; WX 556 ; N abreve ; B 29 -14 527 750 ;C -1 ; WX 611 ; N uhungarumlaut ; B 66 -14 625 750 ;C -1 ; WX 556 ; N ecaron ; B 23 -14 528 750 ;C -1 ; WX 667 ; N Ydieresis ; B 15 0 653 915 ;C -1 ; WX 584 ; N divide ; B 40 -42 544 548 ;C -1 ; WX 667 ; N Yacute ; B 15 0 653 936 ;C -1 ; WX 722 ; N Acircumflex ; B 20 0 702 936 ;C -1 ; WX 556 ; N aacute ; B 29 -14 527 750 ;C -1 ; WX 722 ; N Ucircumflex ; B 72 -19 651 936 ;C -1 ; WX 556 ; N yacute ; B 10 -214 539 750 ;C -1 ; WX 556 ; N scommaaccent ; B 30 -228 519 546 ;C -1 ; WX 556 ; N ecircumflex ; B 23 -14 528 750 ;C -1 ; WX 722 ; N Uring ; B 72 -19 651 962 ;C -1 ; WX 722 ; N Udieresis ; B 72 -19 651 915 ;C -1 ; WX 556 ; N aogonek ; B 29 -224 545 546 ;C -1 ; WX 722 ; N Uacute ; B 72 -19 651 936 ;C -1 ; WX 611 ; N uogonek ; B 66 -228 545 532 ;C -1 ; WX 667 ; N Edieresis ; B 76 0 621 915 ;C -1 ; WX 722 ; N Dcroat ; B -5 0 685 718 ;C -1 ; WX 250 ; N commaaccent ; B 64 -228 199 -50 ;C -1 ; WX 737 ; N copyright ; B -11 -19 749 737 ;C -1 ; WX 667 ; N Emacron ; B 76 0 621 864 ;C -1 ; WX 556 ; N ccaron ; B 34 -14 524 750 ;C -1 ; WX 556 ; N aring ; B 29 -14 527 776 ;C -1 ; WX 722 ; N Ncommaaccent ; B 69 -228 654 718 ;C -1 ; WX 278 ; N lacute ; B 69 0 329 936 ;C -1 ; WX 556 ; N agrave ; B 29 -14 527 750 ;C -1 ; WX 611 ; N Tcommaaccent ; B 14 -228 598 718 ;C -1 ; WX 722 ; N Cacute ; B 44 -19 684 936 ;C -1 ; WX 556 ; N atilde ; B 29 -14 527 737 ;C -1 ; WX 667 ; N Edotaccent ; B 76 0 621 915 ;C -1 ; WX 556 ; N scaron ; B 30 -14 519 750 ;C -1 ; WX 556 ; N scedilla ; B 30 -228 519 546 ;C -1 ; WX 278 ; N iacute ; B 69 0 329 750 ;C -1 ; WX 494 ; N lozenge ; B 10 0 484 745 ;C -1 ; WX 722 ; N Rcaron ; B 76 0 677 936 ;C -1 ; WX 778 ; N Gcommaaccent ; B 44 -228 713 737 ;C -1 ; WX 611 ; N ucircumflex ; B 66 -14 545 750 ;C -1 ; WX 556 ; N acircumflex ; B 29 -14 527 750 ;C -1 ; WX 722 ; N Amacron ; B 20 0 702 864 ;C -1 ; WX 389 ; N rcaron ; B 18 0 373 750 ;C -1 ; WX 556 ; N ccedilla ; B 34 -228 524 546 ;C -1 ; WX 611 ; N Zdotaccent ; B 25 0 586 915 ;C -1 ; WX 667 ; N Thorn ; B 76 0 627 718 ;C -1 ; WX 778 ; N Omacron ; B 44 -19 734 864 ;C -1 ; WX 722 ; N Racute ; B 76 0 677 936 ;C -1 ; WX 667 ; N Sacute ; B 39 -19 629 936 ;C -1 ; WX 743 ; N dcaron ; B 34 -14 750 718 ;C -1 ; WX 722 ; N Umacron ; B 72 -19 651 864 ;C -1 ; WX 611 ; N uring ; B 66 -14 545 776 ;C -1 ; WX 333 ; N threesuperior ; B 8 271 326 710 ;C -1 ; WX 778 ; N Ograve ; B 44 -19 734 936 ;C -1 ; WX 722 ; N Agrave ; B 20 0 702 936 ;C -1 ; WX 722 ; N Abreve ; B 20 0 702 936 ;C -1 ; WX 584 ; N multiply ; B 40 1 545 505 ;C -1 ; WX 611 ; N uacute ; B 66 -14 545 750 ;C -1 ; WX 611 ; N Tcaron ; B 14 0 598 936 ;C -1 ; WX 494 ; N partialdiff ; B 11 -21 494 750 ;C -1 ; WX 556 ; N ydieresis ; B 10 -214 539 729 ;C -1 ; WX 722 ; N Nacute ; B 69 0 654 936 ;C -1 ; WX 278 ; N icircumflex ; B -37 0 316 750 ;C -1 ; WX 667 ; N Ecircumflex ; B 76 0 621 936 ;C -1 ; WX 556 ; N adieresis ; B 29 -14 527 729 ;C -1 ; WX 556 ; N edieresis ; B 23 -14 528 729 ;C -1 ; WX 556 ; N cacute ; B 34 -14 524 750 ;C -1 ; WX 611 ; N nacute ; B 65 0 546 750 ;C -1 ; WX 611 ; N umacron ; B 66 -14 545 678 ;C -1 ; WX 722 ; N Ncaron ; B 69 0 654 936 ;C -1 ; WX 278 ; N Iacute ; B 64 0 329 936 ;C -1 ; WX 584 ; N plusminus ; B 40 0 544 506 ;C -1 ; WX 280 ; N brokenbar ; B 84 -150 196 700 ;C -1 ; WX 737 ; N registered ; B -11 -19 748 737 ;C -1 ; WX 778 ; N Gbreve ; B 44 -19 713 936 ;C -1 ; WX 278 ; N Idotaccent ; B 64 0 214 915 ;C -1 ; WX 600 ; N summation ; B 14 -10 585 706 ;C -1 ; WX 667 ; N Egrave ; B 76 0 621 936 ;C -1 ; WX 389 ; N racute ; B 64 0 384 750 ;C -1 ; WX 611 ; N omacron ; B 34 -14 578 678 ;C -1 ; WX 611 ; N Zacute ; B 25 0 586 936 ;C -1 ; WX 611 ; N Zcaron ; B 25 0 586 936 ;C -1 ; WX 549 ; N greaterequal ; B 26 0 523 704 ;C -1 ; WX 722 ; N Eth ; B -5 0 685 718 ;C -1 ; WX 722 ; N Ccedilla ; B 44 -228 684 737 ;C -1 ; WX 278 ; N lcommaaccent ; B 69 -228 213 718 ;C -1 ; WX 389 ; N tcaron ; B 10 -6 421 878 ;C -1 ; WX 556 ; N eogonek ; B 23 -228 528 546 ;C -1 ; WX 722 ; N Uogonek ; B 72 -228 651 718 ;C -1 ; WX 722 ; N Aacute ; B 20 0 702 936 ;C -1 ; WX 722 ; N Adieresis ; B 20 0 702 915 ;C -1 ; WX 556 ; N egrave ; B 23 -14 528 750 ;C -1 ; WX 500 ; N zacute ; B 20 0 480 750 ;C -1 ; WX 278 ; N iogonek ; B 16 -224 249 725 ;C -1 ; WX 778 ; N Oacute ; B 44 -19 734 936 ;C -1 ; WX 611 ; N oacute ; B 34 -14 578 750 ;C -1 ; WX 556 ; N amacron ; B 29 -14 527 678 ;C -1 ; WX 556 ; N sacute ; B 30 -14 519 750 ;C -1 ; WX 278 ; N idieresis ; B -21 0 300 729 ;C -1 ; WX 778 ; N Ocircumflex ; B 44 -19 734 936 ;C -1 ; WX 722 ; N Ugrave ; B 72 -19 651 936 ;C -1 ; WX 612 ; N Delta ; B 6 0 608 688 ;C -1 ; WX 611 ; N thorn ; B 62 -208 578 718 ;C -1 ; WX 333 ; N twosuperior ; B 9 283 324 710 ;C -1 ; WX 778 ; N Odieresis ; B 44 -19 734 915 ;C -1 ; WX 611 ; N mu ; B 66 -207 545 532 ;C -1 ; WX 278 ; N igrave ; B -50 0 209 750 ;C -1 ; WX 611 ; N ohungarumlaut ; B 34 -14 625 750 ;C -1 ; WX 667 ; N Eogonek ; B 76 -224 639 718 ;C -1 ; WX 611 ; N dcroat ; B 34 -14 650 718 ;C -1 ; WX 834 ; N threequarters ; B 16 -19 799 710 ;C -1 ; WX 667 ; N Scedilla ; B 39 -228 629 737 ;C -1 ; WX 400 ; N lcaron ; B 69 0 408 718 ;C -1 ; WX 722 ; N Kcommaaccent ; B 87 -228 722 718 ;C -1 ; WX 611 ; N Lacute ; B 76 0 583 936 ;C -1 ; WX 1000 ; N trademark ; B 44 306 956 718 ;C -1 ; WX 556 ; N edotaccent ; B 23 -14 528 729 ;C -1 ; WX 278 ; N Igrave ; B -50 0 214 936 ;C -1 ; WX 278 ; N Imacron ; B -33 0 312 864 ;C -1 ; WX 611 ; N Lcaron ; B 76 0 583 718 ;C -1 ; WX 834 ; N onehalf ; B 26 -19 794 710 ;C -1 ; WX 549 ; N lessequal ; B 29 0 526 704 ;C -1 ; WX 611 ; N ocircumflex ; B 34 -14 578 750 ;C -1 ; WX 611 ; N ntilde ; B 65 0 546 737 ;C -1 ; WX 722 ; N Uhungarumlaut ; B 72 -19 681 936 ;C -1 ; WX 667 ; N Eacute ; B 76 0 621 936 ;C -1 ; WX 556 ; N emacron ; B 23 -14 528 678 ;C -1 ; WX 611 ; N gbreve ; B 40 -217 553 750 ;C -1 ; WX 834 ; N onequarter ; B 26 -19 766 710 ;C -1 ; WX 667 ; N Scaron ; B 39 -19 629 936 ;C -1 ; WX 667 ; N Scommaaccent ; B 39 -228 629 737 ;C -1 ; WX 778 ; N Ohungarumlaut ; B 44 -19 734 936 ;C -1 ; WX 400 ; N degree ; B 57 426 343 712 ;C -1 ; WX 611 ; N ograve ; B 34 -14 578 750 ;C -1 ; WX 722 ; N Ccaron ; B 44 -19 684 936 ;C -1 ; WX 611 ; N ugrave ; B 66 -14 545 750 ;C -1 ; WX 549 ; N radical ; B 10 -46 512 850 ;C -1 ; WX 722 ; N Dcaron ; B 76 0 685 936 ;C -1 ; WX 389 ; N rcommaaccent ; B 64 -228 373 546 ;C -1 ; WX 722 ; N Ntilde ; B 69 0 654 923 ;C -1 ; WX 611 ; N otilde ; B 34 -14 578 737 ;C -1 ; WX 722 ; N Rcommaaccent ; B 76 -228 677 718 ;C -1 ; WX 611 ; N Lcommaaccent ; B 76 -228 583 718 ;C -1 ; WX 722 ; N Atilde ; B 20 0 702 923 ;C -1 ; WX 722 ; N Aogonek ; B 20 -224 742 718 ;C -1 ; WX 722 ; N Aring ; B 20 0 702 962 ;C -1 ; WX 778 ; N Otilde ; B 44 -19 734 923 ;C -1 ; WX 500 ; N zdotaccent ; B 20 0 480 729 ;C -1 ; WX 667 ; N Ecaron ; B 76 0 621 936 ;C -1 ; WX 278 ; N Iogonek ; B -11 -228 222 718 ;C -1 ; WX 556 ; N kcommaaccent ; B 69 -228 562 718 ;C -1 ; WX 584 ; N minus ; B 40 197 544 309 ;C -1 ; WX 278 ; N Icircumflex ; B -37 0 316 936 ;C -1 ; WX 611 ; N ncaron ; B 65 0 546 750 ;C -1 ; WX 333 ; N tcommaaccent ; B 10 -228 309 676 ;C -1 ; WX 584 ; N logicalnot ; B 40 108 544 419 ;C -1 ; WX 611 ; N odieresis ; B 34 -14 578 729 ;C -1 ; WX 611 ; N udieresis ; B 66 -14 545 729 ;C -1 ; WX 549 ; N notequal ; B 15 -49 540 570 ;C -1 ; WX 611 ; N gcommaaccent ; B 40 -217 553 850 ;C -1 ; WX 611 ; N eth ; B 34 -14 578 737 ;C -1 ; WX 500 ; N zcaron ; B 20 0 480 750 ;C -1 ; WX 611 ; N ncommaaccent ; B 65 -228 546 546 ;C -1 ; WX 333 ; N onesuperior ; B 26 283 237 710 ;C -1 ; WX 278 ; N imacron ; B -8 0 285 678 ;C -1 ; WX 556 ; N Euro ; B 0 0 0 0 ;EndCharMetricsStartKernDataStartKernPairs 2481KPX A C -40KPX A Cacute -40KPX A Ccaron -40KPX A Ccedilla -40KPX A G -50KPX A Gbreve -50KPX A Gcommaaccent -50KPX A O -40KPX A Oacute -40KPX A Ocircumflex -40KPX A Odieresis -40KPX A Ograve -40KPX A Ohungarumlaut -40KPX A Omacron -40KPX A Oslash -40KPX A Otilde -40KPX A Q -40KPX A T -90KPX A Tcaron -90KPX A Tcommaaccent -90KPX A U -50KPX A Uacute -50KPX A Ucircumflex -50KPX A Udieresis -50KPX A Ugrave -50KPX A Uhungarumlaut -50KPX A Umacron -50KPX A Uogonek -50KPX A Uring -50KPX A V -80KPX A W -60KPX A Y -110KPX A Yacute -110KPX A Ydieresis -110KPX A u -30KPX A uacute -30KPX A ucircumflex -30KPX A udieresis -30KPX A ugrave -30KPX A uhungarumlaut -30KPX A umacron -30KPX A uogonek -30KPX A uring -30KPX A v -40KPX A w -30KPX A y -30KPX A yacute -30KPX A ydieresis -30KPX Aacute C -40KPX Aacute Cacute -40KPX Aacute Ccaron -40KPX Aacute Ccedilla -40KPX Aacute G -50KPX Aacute Gbreve -50KPX Aacute Gcommaaccent -50KPX Aacute O -40KPX Aacute Oacute -40KPX Aacute Ocircumflex -40KPX Aacute Odieresis -40KPX Aacute Ograve -40KPX Aacute Ohungarumlaut -40KPX Aacute Omacron -40KPX Aacute Oslash -40KPX Aacute Otilde -40KPX Aacute Q -40KPX Aacute T -90KPX Aacute Tcaron -90KPX Aacute Tcommaaccent -90KPX Aacute U -50KPX Aacute Uacute -50KPX Aacute Ucircumflex -50KPX Aacute Udieresis -50KPX Aacute Ugrave -50KPX Aacute Uhungarumlaut -50KPX Aacute Umacron -50KPX Aacute Uogonek -50KPX Aacute Uring -50KPX Aacute V -80KPX Aacute W -60KPX Aacute Y -110KPX Aacute Yacute -110KPX Aacute Ydieresis -110KPX Aacute u -30KPX Aacute uacute -30KPX Aacute ucircumflex -30KPX Aacute udieresis -30KPX Aacute ugrave -30KPX Aacute uhungarumlaut -30KPX Aacute umacron -30KPX Aacute uogonek -30KPX Aacute uring -30KPX Aacute v -40KPX Aacute w -30KPX Aacute y -30KPX Aacute yacute -30KPX Aacute ydieresis -30KPX Abreve C -40KPX Abreve Cacute -40KPX Abreve Ccaron -40KPX Abreve Ccedilla -40KPX Abreve G -50KPX Abreve Gbreve -50KPX Abreve Gcommaaccent -50KPX Abreve O -40KPX Abreve Oacute -40KPX Abreve Ocircumflex -40KPX Abreve Odieresis -40KPX Abreve Ograve -40KPX Abreve Ohungarumlaut -40KPX Abreve Omacron -40KPX Abreve Oslash -40KPX Abreve Otilde -40KPX Abreve Q -40KPX Abreve T -90KPX Abreve Tcaron -90KPX Abreve Tcommaaccent -90KPX Abreve U -50KPX Abreve Uacute -50KPX Abreve Ucircumflex -50KPX Abreve Udieresis -50KPX Abreve Ugrave -50KPX Abreve Uhungarumlaut -50KPX Abreve Umacron -50KPX Abreve Uogonek -50KPX Abreve Uring -50KPX Abreve V -80KPX Abreve W -60KPX Abreve Y -110KPX Abreve Yacute -110KPX Abreve Ydieresis -110KPX Abreve u -30KPX Abreve uacute -30KPX Abreve ucircumflex -30KPX Abreve udieresis -30KPX Abreve ugrave -30KPX Abreve uhungarumlaut -30KPX Abreve umacron -30KPX Abreve uogonek -30KPX Abreve uring -30KPX Abreve v -40KPX Abreve w -30KPX Abreve y -30KPX Abreve yacute -30KPX Abreve ydieresis -30KPX Acircumflex C -40KPX Acircumflex Cacute -40KPX Acircumflex Ccaron -40KPX Acircumflex Ccedilla -40KPX Acircumflex G -50KPX Acircumflex Gbreve -50KPX Acircumflex Gcommaaccent -50KPX Acircumflex O -40KPX Acircumflex Oacute -40KPX Acircumflex Ocircumflex -40KPX Acircumflex Odieresis -40KPX Acircumflex Ograve -40KPX Acircumflex Ohungarumlaut -40KPX Acircumflex Omacron -40KPX Acircumflex Oslash -40KPX Acircumflex Otilde -40KPX Acircumflex Q -40KPX Acircumflex T -90KPX Acircumflex Tcaron -90KPX Acircumflex Tcommaaccent -90KPX Acircumflex U -50KPX Acircumflex Uacute -50KPX Acircumflex Ucircumflex -50KPX Acircumflex Udieresis -50KPX Acircumflex Ugrave -50KPX Acircumflex Uhungarumlaut -50KPX Acircumflex Umacron -50KPX Acircumflex Uogonek -50KPX Acircumflex Uring -50KPX Acircumflex V -80KPX Acircumflex W -60KPX Acircumflex Y -110KPX Acircumflex Yacute -110KPX Acircumflex Ydieresis -110KPX Acircumflex u -30KPX Acircumflex uacute -30KPX Acircumflex ucircumflex -30KPX Acircumflex udieresis -30KPX Acircumflex ugrave -30KPX Acircumflex uhungarumlaut -30KPX Acircumflex umacron -30KPX Acircumflex uogonek -30KPX Acircumflex uring -30KPX Acircumflex v -40KPX Acircumflex w -30KPX Acircumflex y -30KPX Acircumflex yacute -30KPX Acircumflex ydieresis -30KPX Adieresis C -40KPX Adieresis Cacute -40KPX Adieresis Ccaron -40KPX Adieresis Ccedilla -40KPX Adieresis G -50KPX Adieresis Gbreve -50KPX Adieresis Gcommaaccent -50KPX Adieresis O -40KPX Adieresis Oacute -40KPX Adieresis Ocircumflex -40KPX Adieresis Odieresis -40KPX Adieresis Ograve -40KPX Adieresis Ohungarumlaut -40KPX Adieresis Omacron -40KPX Adieresis Oslash -40KPX Adieresis Otilde -40KPX Adieresis Q -40KPX Adieresis T -90KPX Adieresis Tcaron -90KPX Adieresis Tcommaaccent -90KPX Adieresis U -50KPX Adieresis Uacute -50KPX Adieresis Ucircumflex -50KPX Adieresis Udieresis -50KPX Adieresis Ugrave -50KPX Adieresis Uhungarumlaut -50KPX Adieresis Umacron -50KPX Adieresis Uogonek -50KPX Adieresis Uring -50KPX Adieresis V -80KPX Adieresis W -60KPX Adieresis Y -110KPX Adieresis Yacute -110KPX Adieresis Ydieresis -110KPX Adieresis u -30KPX Adieresis uacute -30KPX Adieresis ucircumflex -30KPX Adieresis udieresis -30KPX Adieresis ugrave -30KPX Adieresis uhungarumlaut -30KPX Adieresis umacron -30KPX Adieresis uogonek -30KPX Adieresis uring -30KPX Adieresis v -40KPX Adieresis w -30KPX Adieresis y -30KPX Adieresis yacute -30KPX Adieresis ydieresis -30KPX Agrave C -40KPX Agrave Cacute -40KPX Agrave Ccaron -40KPX Agrave Ccedilla -40KPX Agrave G -50KPX Agrave Gbreve -50KPX Agrave Gcommaaccent -50KPX Agrave O -40KPX Agrave Oacute -40KPX Agrave Ocircumflex -40KPX Agrave Odieresis -40KPX Agrave Ograve -40KPX Agrave Ohungarumlaut -40KPX Agrave Omacron -40KPX Agrave Oslash -40KPX Agrave Otilde -40KPX Agrave Q -40KPX Agrave T -90KPX Agrave Tcaron -90KPX Agrave Tcommaaccent -90KPX Agrave U -50KPX Agrave Uacute -50KPX Agrave Ucircumflex -50KPX Agrave Udieresis -50KPX Agrave Ugrave -50KPX Agrave Uhungarumlaut -50KPX Agrave Umacron -50KPX Agrave Uogonek -50KPX Agrave Uring -50KPX Agrave V -80KPX Agrave W -60KPX Agrave Y -110KPX Agrave Yacute -110KPX Agrave Ydieresis -110KPX Agrave u -30KPX Agrave uacute -30KPX Agrave ucircumflex -30KPX Agrave udieresis -30KPX Agrave ugrave -30KPX Agrave uhungarumlaut -30KPX Agrave umacron -30KPX Agrave uogonek -30KPX Agrave uring -30KPX Agrave v -40KPX Agrave w -30KPX Agrave y -30KPX Agrave yacute -30KPX Agrave ydieresis -30KPX Amacron C -40KPX Amacron Cacute -40KPX Amacron Ccaron -40KPX Amacron Ccedilla -40KPX Amacron G -50KPX Amacron Gbreve -50KPX Amacron Gcommaaccent -50KPX Amacron O -40KPX Amacron Oacute -40KPX Amacron Ocircumflex -40KPX Amacron Odieresis -40KPX Amacron Ograve -40KPX Amacron Ohungarumlaut -40KPX Amacron Omacron -40KPX Amacron Oslash -40KPX Amacron Otilde -40KPX Amacron Q -40KPX Amacron T -90KPX Amacron Tcaron -90KPX Amacron Tcommaaccent -90KPX Amacron U -50KPX Amacron Uacute -50KPX Amacron Ucircumflex -50KPX Amacron Udieresis -50KPX Amacron Ugrave -50KPX Amacron Uhungarumlaut -50KPX Amacron Umacron -50KPX Amacron Uogonek -50KPX Amacron Uring -50KPX Amacron V -80KPX Amacron W -60KPX Amacron Y -110KPX Amacron Yacute -110KPX Amacron Ydieresis -110KPX Amacron u -30KPX Amacron uacute -30KPX Amacron ucircumflex -30KPX Amacron udieresis -30KPX Amacron ugrave -30KPX Amacron uhungarumlaut -30KPX Amacron umacron -30KPX Amacron uogonek -30KPX Amacron uring -30KPX Amacron v -40KPX Amacron w -30KPX Amacron y -30KPX Amacron yacute -30KPX Amacron ydieresis -30KPX Aogonek C -40KPX Aogonek Cacute -40KPX Aogonek Ccaron -40KPX Aogonek Ccedilla -40KPX Aogonek G -50KPX Aogonek Gbreve -50KPX Aogonek Gcommaaccent -50KPX Aogonek O -40KPX Aogonek Oacute -40KPX Aogonek Ocircumflex -40KPX Aogonek Odieresis -40KPX Aogonek Ograve -40KPX Aogonek Ohungarumlaut -40KPX Aogonek Omacron -40KPX Aogonek Oslash -40KPX Aogonek Otilde -40KPX Aogonek Q -40KPX Aogonek T -90KPX Aogonek Tcaron -90KPX Aogonek Tcommaaccent -90KPX Aogonek U -50KPX Aogonek Uacute -50KPX Aogonek Ucircumflex -50KPX Aogonek Udieresis -50KPX Aogonek Ugrave -50KPX Aogonek Uhungarumlaut -50KPX Aogonek Umacron -50KPX Aogonek Uogonek -50KPX Aogonek Uring -50KPX Aogonek V -80KPX Aogonek W -60KPX Aogonek Y -110KPX Aogonek Yacute -110KPX Aogonek Ydieresis -110KPX Aogonek u -30KPX Aogonek uacute -30KPX Aogonek ucircumflex -30KPX Aogonek udieresis -30KPX Aogonek ugrave -30KPX Aogonek uhungarumlaut -30KPX Aogonek umacron -30KPX Aogonek uogonek -30KPX Aogonek uring -30KPX Aogonek v -40KPX Aogonek w -30KPX Aogonek y -30KPX Aogonek yacute -30KPX Aogonek ydieresis -30KPX Aring C -40KPX Aring Cacute -40KPX Aring Ccaron -40KPX Aring Ccedilla -40KPX Aring G -50KPX Aring Gbreve -50KPX Aring Gcommaaccent -50KPX Aring O -40KPX Aring Oacute -40KPX Aring Ocircumflex -40KPX Aring Odieresis -40KPX Aring Ograve -40KPX Aring Ohungarumlaut -40KPX Aring Omacron -40KPX Aring Oslash -40KPX Aring Otilde -40KPX Aring Q -40KPX Aring T -90KPX Aring Tcaron -90KPX Aring Tcommaaccent -90KPX Aring U -50KPX Aring Uacute -50KPX Aring Ucircumflex -50KPX Aring Udieresis -50KPX Aring Ugrave -50KPX Aring Uhungarumlaut -50KPX Aring Umacron -50KPX Aring Uogonek -50KPX Aring Uring -50KPX Aring V -80KPX Aring W -60KPX Aring Y -110KPX Aring Yacute -110KPX Aring Ydieresis -110KPX Aring u -30KPX Aring uacute -30KPX Aring ucircumflex -30KPX Aring udieresis -30KPX Aring ugrave -30KPX Aring uhungarumlaut -30KPX Aring umacron -30KPX Aring uogonek -30KPX Aring uring -30KPX Aring v -40KPX Aring w -30KPX Aring y -30KPX Aring yacute -30KPX Aring ydieresis -30KPX Atilde C -40KPX Atilde Cacute -40KPX Atilde Ccaron -40KPX Atilde Ccedilla -40KPX Atilde G -50KPX Atilde Gbreve -50KPX Atilde Gcommaaccent -50KPX Atilde O -40KPX Atilde Oacute -40KPX Atilde Ocircumflex -40KPX Atilde Odieresis -40KPX Atilde Ograve -40KPX Atilde Ohungarumlaut -40KPX Atilde Omacron -40KPX Atilde Oslash -40KPX Atilde Otilde -40KPX Atilde Q -40KPX Atilde T -90KPX Atilde Tcaron -90KPX Atilde Tcommaaccent -90KPX Atilde U -50KPX Atilde Uacute -50KPX Atilde Ucircumflex -50KPX Atilde Udieresis -50KPX Atilde Ugrave -50KPX Atilde Uhungarumlaut -50KPX Atilde Umacron -50KPX Atilde Uogonek -50KPX Atilde Uring -50KPX Atilde V -80KPX Atilde W -60KPX Atilde Y -110KPX Atilde Yacute -110KPX Atilde Ydieresis -110KPX Atilde u -30KPX Atilde uacute -30KPX Atilde ucircumflex -30KPX Atilde udieresis -30KPX Atilde ugrave -30KPX Atilde uhungarumlaut -30KPX Atilde umacron -30KPX Atilde uogonek -30KPX Atilde uring -30KPX Atilde v -40KPX Atilde w -30KPX Atilde y -30KPX Atilde yacute -30KPX Atilde ydieresis -30KPX B A -30KPX B Aacute -30KPX B Abreve -30KPX B Acircumflex -30KPX B Adieresis -30KPX B Agrave -30KPX B Amacron -30KPX B Aogonek -30KPX B Aring -30KPX B Atilde -30KPX B U -10KPX B Uacute -10KPX B Ucircumflex -10KPX B Udieresis -10KPX B Ugrave -10KPX B Uhungarumlaut -10KPX B Umacron -10KPX B Uogonek -10KPX B Uring -10KPX D A -40KPX D Aacute -40KPX D Abreve -40KPX D Acircumflex -40KPX D Adieresis -40KPX D Agrave -40KPX D Amacron -40KPX D Aogonek -40KPX D Aring -40KPX D Atilde -40KPX D V -40KPX D W -40KPX D Y -70KPX D Yacute -70KPX D Ydieresis -70KPX D comma -30KPX D period -30KPX Dcaron A -40KPX Dcaron Aacute -40KPX Dcaron Abreve -40KPX Dcaron Acircumflex -40KPX Dcaron Adieresis -40KPX Dcaron Agrave -40KPX Dcaron Amacron -40KPX Dcaron Aogonek -40KPX Dcaron Aring -40KPX Dcaron Atilde -40KPX Dcaron V -40KPX Dcaron W -40KPX Dcaron Y -70KPX Dcaron Yacute -70KPX Dcaron Ydieresis -70KPX Dcaron comma -30KPX Dcaron period -30KPX Dcroat A -40KPX Dcroat Aacute -40KPX Dcroat Abreve -40KPX Dcroat Acircumflex -40KPX Dcroat Adieresis -40KPX Dcroat Agrave -40KPX Dcroat Amacron -40KPX Dcroat Aogonek -40KPX Dcroat Aring -40KPX Dcroat Atilde -40KPX Dcroat V -40KPX Dcroat W -40KPX Dcroat Y -70KPX Dcroat Yacute -70KPX Dcroat Ydieresis -70KPX Dcroat comma -30KPX Dcroat period -30KPX F A -80KPX F Aacute -80KPX F Abreve -80KPX F Acircumflex -80KPX F Adieresis -80KPX F Agrave -80KPX F Amacron -80KPX F Aogonek -80KPX F Aring -80KPX F Atilde -80KPX F a -20KPX F aacute -20KPX F abreve -20KPX F acircumflex -20KPX F adieresis -20KPX F agrave -20KPX F amacron -20KPX F aogonek -20KPX F aring -20KPX F atilde -20KPX F comma -100KPX F period -100KPX J A -20KPX J Aacute -20KPX J Abreve -20KPX J Acircumflex -20KPX J Adieresis -20KPX J Agrave -20KPX J Amacron -20KPX J Aogonek -20KPX J Aring -20KPX J Atilde -20KPX J comma -20KPX J period -20KPX J u -20KPX J uacute -20KPX J ucircumflex -20KPX J udieresis -20KPX J ugrave -20KPX J uhungarumlaut -20KPX J umacron -20KPX J uogonek -20KPX J uring -20KPX K O -30KPX K Oacute -30KPX K Ocircumflex -30KPX K Odieresis -30KPX K Ograve -30KPX K Ohungarumlaut -30KPX K Omacron -30KPX K Oslash -30KPX K Otilde -30KPX K e -15KPX K eacute -15KPX K ecaron -15KPX K ecircumflex -15KPX K edieresis -15KPX K edotaccent -15KPX K egrave -15KPX K emacron -15KPX K eogonek -15KPX K o -35KPX K oacute -35KPX K ocircumflex -35KPX K odieresis -35KPX K ograve -35KPX K ohungarumlaut -35KPX K omacron -35KPX K oslash -35KPX K otilde -35KPX K u -30KPX K uacute -30KPX K ucircumflex -30KPX K udieresis -30KPX K ugrave -30KPX K uhungarumlaut -30KPX K umacron -30KPX K uogonek -30KPX K uring -30KPX K y -40KPX K yacute -40KPX K ydieresis -40KPX Kcommaaccent O -30KPX Kcommaaccent Oacute -30KPX Kcommaaccent Ocircumflex -30KPX Kcommaaccent Odieresis -30KPX Kcommaaccent Ograve -30KPX Kcommaaccent Ohungarumlaut -30KPX Kcommaaccent Omacron -30KPX Kcommaaccent Oslash -30KPX Kcommaaccent Otilde -30KPX Kcommaaccent e -15KPX Kcommaaccent eacute -15KPX Kcommaaccent ecaron -15KPX Kcommaaccent ecircumflex -15KPX Kcommaaccent edieresis -15KPX Kcommaaccent edotaccent -15KPX Kcommaaccent egrave -15KPX Kcommaaccent emacron -15KPX Kcommaaccent eogonek -15KPX Kcommaaccent o -35KPX Kcommaaccent oacute -35KPX Kcommaaccent ocircumflex -35KPX Kcommaaccent odieresis -35KPX Kcommaaccent ograve -35KPX Kcommaaccent ohungarumlaut -35KPX Kcommaaccent omacron -35KPX Kcommaaccent oslash -35KPX Kcommaaccent otilde -35KPX Kcommaaccent u -30KPX Kcommaaccent uacute -30KPX Kcommaaccent ucircumflex -30KPX Kcommaaccent udieresis -30KPX Kcommaaccent ugrave -30KPX Kcommaaccent uhungarumlaut -30KPX Kcommaaccent umacron -30KPX Kcommaaccent uogonek -30KPX Kcommaaccent uring -30KPX Kcommaaccent y -40KPX Kcommaaccent yacute -40KPX Kcommaaccent ydieresis -40KPX L T -90KPX L Tcaron -90KPX L Tcommaaccent -90KPX L V -110KPX L W -80KPX L Y -120KPX L Yacute -120KPX L Ydieresis -120KPX L quotedblright -140KPX L quoteright -140KPX L y -30KPX L yacute -30KPX L ydieresis -30KPX Lacute T -90KPX Lacute Tcaron -90KPX Lacute Tcommaaccent -90KPX Lacute V -110KPX Lacute W -80KPX Lacute Y -120KPX Lacute Yacute -120KPX Lacute Ydieresis -120KPX Lacute quotedblright -140KPX Lacute quoteright -140KPX Lacute y -30KPX Lacute yacute -30KPX Lacute ydieresis -30KPX Lcommaaccent T -90KPX Lcommaaccent Tcaron -90KPX Lcommaaccent Tcommaaccent -90KPX Lcommaaccent V -110KPX Lcommaaccent W -80KPX Lcommaaccent Y -120KPX Lcommaaccent Yacute -120KPX Lcommaaccent Ydieresis -120KPX Lcommaaccent quotedblright -140KPX Lcommaaccent quoteright -140KPX Lcommaaccent y -30KPX Lcommaaccent yacute -30KPX Lcommaaccent ydieresis -30KPX Lslash T -90KPX Lslash Tcaron -90KPX Lslash Tcommaaccent -90KPX Lslash V -110KPX Lslash W -80KPX Lslash Y -120KPX Lslash Yacute -120KPX Lslash Ydieresis -120KPX Lslash quotedblright -140KPX Lslash quoteright -140KPX Lslash y -30KPX Lslash yacute -30KPX Lslash ydieresis -30KPX O A -50KPX O Aacute -50KPX O Abreve -50KPX O Acircumflex -50KPX O Adieresis -50KPX O Agrave -50KPX O Amacron -50KPX O Aogonek -50KPX O Aring -50KPX O Atilde -50KPX O T -40KPX O Tcaron -40KPX O Tcommaaccent -40KPX O V -50KPX O W -50KPX O X -50KPX O Y -70KPX O Yacute -70KPX O Ydieresis -70KPX O comma -40KPX O period -40KPX Oacute A -50KPX Oacute Aacute -50KPX Oacute Abreve -50KPX Oacute Acircumflex -50KPX Oacute Adieresis -50KPX Oacute Agrave -50KPX Oacute Amacron -50KPX Oacute Aogonek -50KPX Oacute Aring -50KPX Oacute Atilde -50KPX Oacute T -40KPX Oacute Tcaron -40KPX Oacute Tcommaaccent -40KPX Oacute V -50KPX Oacute W -50KPX Oacute X -50KPX Oacute Y -70KPX Oacute Yacute -70KPX Oacute Ydieresis -70KPX Oacute comma -40KPX Oacute period -40KPX Ocircumflex A -50KPX Ocircumflex Aacute -50KPX Ocircumflex Abreve -50KPX Ocircumflex Acircumflex -50KPX Ocircumflex Adieresis -50KPX Ocircumflex Agrave -50KPX Ocircumflex Amacron -50KPX Ocircumflex Aogonek -50KPX Ocircumflex Aring -50KPX Ocircumflex Atilde -50KPX Ocircumflex T -40KPX Ocircumflex Tcaron -40KPX Ocircumflex Tcommaaccent -40KPX Ocircumflex V -50KPX Ocircumflex W -50KPX Ocircumflex X -50KPX Ocircumflex Y -70KPX Ocircumflex Yacute -70KPX Ocircumflex Ydieresis -70KPX Ocircumflex comma -40KPX Ocircumflex period -40KPX Odieresis A -50KPX Odieresis Aacute -50KPX Odieresis Abreve -50KPX Odieresis Acircumflex -50KPX Odieresis Adieresis -50KPX Odieresis Agrave -50KPX Odieresis Amacron -50KPX Odieresis Aogonek -50KPX Odieresis Aring -50KPX Odieresis Atilde -50KPX Odieresis T -40KPX Odieresis Tcaron -40KPX Odieresis Tcommaaccent -40KPX Odieresis V -50KPX Odieresis W -50KPX Odieresis X -50KPX Odieresis Y -70KPX Odieresis Yacute -70KPX Odieresis Ydieresis -70KPX Odieresis comma -40KPX Odieresis period -40KPX Ograve A -50KPX Ograve Aacute -50KPX Ograve Abreve -50KPX Ograve Acircumflex -50KPX Ograve Adieresis -50KPX Ograve Agrave -50KPX Ograve Amacron -50KPX Ograve Aogonek -50KPX Ograve Aring -50KPX Ograve Atilde -50KPX Ograve T -40KPX Ograve Tcaron -40KPX Ograve Tcommaaccent -40KPX Ograve V -50KPX Ograve W -50KPX Ograve X -50KPX Ograve Y -70KPX Ograve Yacute -70KPX Ograve Ydieresis -70KPX Ograve comma -40KPX Ograve period -40KPX Ohungarumlaut A -50KPX Ohungarumlaut Aacute -50KPX Ohungarumlaut Abreve -50KPX Ohungarumlaut Acircumflex -50KPX Ohungarumlaut Adieresis -50KPX Ohungarumlaut Agrave -50KPX Ohungarumlaut Amacron -50KPX Ohungarumlaut Aogonek -50KPX Ohungarumlaut Aring -50KPX Ohungarumlaut Atilde -50KPX Ohungarumlaut T -40KPX Ohungarumlaut Tcaron -40KPX Ohungarumlaut Tcommaaccent -40KPX Ohungarumlaut V -50KPX Ohungarumlaut W -50KPX Ohungarumlaut X -50KPX Ohungarumlaut Y -70KPX Ohungarumlaut Yacute -70KPX Ohungarumlaut Ydieresis -70KPX Ohungarumlaut comma -40KPX Ohungarumlaut period -40KPX Omacron A -50KPX Omacron Aacute -50KPX Omacron Abreve -50KPX Omacron Acircumflex -50KPX Omacron Adieresis -50KPX Omacron Agrave -50KPX Omacron Amacron -50KPX Omacron Aogonek -50KPX Omacron Aring -50KPX Omacron Atilde -50KPX Omacron T -40KPX Omacron Tcaron -40KPX Omacron Tcommaaccent -40KPX Omacron V -50KPX Omacron W -50KPX Omacron X -50KPX Omacron Y -70KPX Omacron Yacute -70KPX Omacron Ydieresis -70KPX Omacron comma -40KPX Omacron period -40KPX Oslash A -50KPX Oslash Aacute -50KPX Oslash Abreve -50KPX Oslash Acircumflex -50KPX Oslash Adieresis -50KPX Oslash Agrave -50KPX Oslash Amacron -50KPX Oslash Aogonek -50KPX Oslash Aring -50KPX Oslash Atilde -50KPX Oslash T -40KPX Oslash Tcaron -40KPX Oslash Tcommaaccent -40KPX Oslash V -50KPX Oslash W -50KPX Oslash X -50KPX Oslash Y -70KPX Oslash Yacute -70KPX Oslash Ydieresis -70KPX Oslash comma -40KPX Oslash period -40KPX Otilde A -50KPX Otilde Aacute -50KPX Otilde Abreve -50KPX Otilde Acircumflex -50KPX Otilde Adieresis -50KPX Otilde Agrave -50KPX Otilde Amacron -50KPX Otilde Aogonek -50KPX Otilde Aring -50KPX Otilde Atilde -50KPX Otilde T -40KPX Otilde Tcaron -40KPX Otilde Tcommaaccent -40KPX Otilde V -50KPX Otilde W -50KPX Otilde X -50KPX Otilde Y -70KPX Otilde Yacute -70KPX Otilde Ydieresis -70KPX Otilde comma -40KPX Otilde period -40KPX P A -100KPX P Aacute -100KPX P Abreve -100KPX P Acircumflex -100KPX P Adieresis -100KPX P Agrave -100KPX P Amacron -100KPX P Aogonek -100KPX P Aring -100KPX P Atilde -100KPX P a -30KPX P aacute -30KPX P abreve -30KPX P acircumflex -30KPX P adieresis -30KPX P agrave -30KPX P amacron -30KPX P aogonek -30KPX P aring -30KPX P atilde -30KPX P comma -120KPX P e -30KPX P eacute -30KPX P ecaron -30KPX P ecircumflex -30KPX P edieresis -30KPX P edotaccent -30KPX P egrave -30KPX P emacron -30KPX P eogonek -30KPX P o -40KPX P oacute -40KPX P ocircumflex -40KPX P odieresis -40KPX P ograve -40KPX P ohungarumlaut -40KPX P omacron -40KPX P oslash -40KPX P otilde -40KPX P period -120KPX Q U -10KPX Q Uacute -10KPX Q Ucircumflex -10KPX Q Udieresis -10KPX Q Ugrave -10KPX Q Uhungarumlaut -10KPX Q Umacron -10KPX Q Uogonek -10KPX Q Uring -10KPX Q comma 20KPX Q period 20KPX R O -20KPX R Oacute -20KPX R Ocircumflex -20KPX R Odieresis -20KPX R Ograve -20KPX R Ohungarumlaut -20KPX R Omacron -20KPX R Oslash -20KPX R Otilde -20KPX R T -20KPX R Tcaron -20KPX R Tcommaaccent -20KPX R U -20KPX R Uacute -20KPX R Ucircumflex -20KPX R Udieresis -20KPX R Ugrave -20KPX R Uhungarumlaut -20KPX R Umacron -20KPX R Uogonek -20KPX R Uring -20KPX R V -50KPX R W -40KPX R Y -50KPX R Yacute -50KPX R Ydieresis -50KPX Racute O -20KPX Racute Oacute -20KPX Racute Ocircumflex -20KPX Racute Odieresis -20KPX Racute Ograve -20KPX Racute Ohungarumlaut -20KPX Racute Omacron -20KPX Racute Oslash -20KPX Racute Otilde -20KPX Racute T -20KPX Racute Tcaron -20KPX Racute Tcommaaccent -20KPX Racute U -20KPX Racute Uacute -20KPX Racute Ucircumflex -20KPX Racute Udieresis -20KPX Racute Ugrave -20KPX Racute Uhungarumlaut -20KPX Racute Umacron -20KPX Racute Uogonek -20KPX Racute Uring -20KPX Racute V -50KPX Racute W -40KPX Racute Y -50KPX Racute Yacute -50KPX Racute Ydieresis -50KPX Rcaron O -20KPX Rcaron Oacute -20KPX Rcaron Ocircumflex -20KPX Rcaron Odieresis -20KPX Rcaron Ograve -20KPX Rcaron Ohungarumlaut -20KPX Rcaron Omacron -20KPX Rcaron Oslash -20KPX Rcaron Otilde -20KPX Rcaron T -20KPX Rcaron Tcaron -20KPX Rcaron Tcommaaccent -20KPX Rcaron U -20KPX Rcaron Uacute -20KPX Rcaron Ucircumflex -20KPX Rcaron Udieresis -20KPX Rcaron Ugrave -20KPX Rcaron Uhungarumlaut -20KPX Rcaron Umacron -20KPX Rcaron Uogonek -20KPX Rcaron Uring -20KPX Rcaron V -50KPX Rcaron W -40KPX Rcaron Y -50KPX Rcaron Yacute -50KPX Rcaron Ydieresis -50KPX Rcommaaccent O -20KPX Rcommaaccent Oacute -20KPX Rcommaaccent Ocircumflex -20KPX Rcommaaccent Odieresis -20KPX Rcommaaccent Ograve -20KPX Rcommaaccent Ohungarumlaut -20KPX Rcommaaccent Omacron -20KPX Rcommaaccent Oslash -20KPX Rcommaaccent Otilde -20KPX Rcommaaccent T -20KPX Rcommaaccent Tcaron -20KPX Rcommaaccent Tcommaaccent -20KPX Rcommaaccent U -20KPX Rcommaaccent Uacute -20KPX Rcommaaccent Ucircumflex -20KPX Rcommaaccent Udieresis -20KPX Rcommaaccent Ugrave -20KPX Rcommaaccent Uhungarumlaut -20KPX Rcommaaccent Umacron -20KPX Rcommaaccent Uogonek -20KPX Rcommaaccent Uring -20KPX Rcommaaccent V -50KPX Rcommaaccent W -40KPX Rcommaaccent Y -50KPX Rcommaaccent Yacute -50KPX Rcommaaccent Ydieresis -50KPX T A -90KPX T Aacute -90KPX T Abreve -90KPX T Acircumflex -90KPX T Adieresis -90KPX T Agrave -90KPX T Amacron -90KPX T Aogonek -90KPX T Aring -90KPX T Atilde -90KPX T O -40KPX T Oacute -40KPX T Ocircumflex -40KPX T Odieresis -40KPX T Ograve -40KPX T Ohungarumlaut -40KPX T Omacron -40KPX T Oslash -40KPX T Otilde -40KPX T a -80KPX T aacute -80KPX T abreve -80KPX T acircumflex -80KPX T adieresis -80KPX T agrave -80KPX T amacron -80KPX T aogonek -80KPX T aring -80KPX T atilde -80KPX T colon -40KPX T comma -80KPX T e -60KPX T eacute -60KPX T ecaron -60KPX T ecircumflex -60KPX T edieresis -60KPX T edotaccent -60KPX T egrave -60KPX T emacron -60KPX T eogonek -60KPX T hyphen -120KPX T o -80KPX T oacute -80KPX T ocircumflex -80KPX T odieresis -80KPX T ograve -80KPX T ohungarumlaut -80KPX T omacron -80KPX T oslash -80KPX T otilde -80KPX T period -80KPX T r -80KPX T racute -80KPX T rcommaaccent -80KPX T semicolon -40KPX T u -90KPX T uacute -90KPX T ucircumflex -90KPX T udieresis -90KPX T ugrave -90KPX T uhungarumlaut -90KPX T umacron -90KPX T uogonek -90KPX T uring -90KPX T w -60KPX T y -60KPX T yacute -60KPX T ydieresis -60KPX Tcaron A -90KPX Tcaron Aacute -90KPX Tcaron Abreve -90KPX Tcaron Acircumflex -90KPX Tcaron Adieresis -90KPX Tcaron Agrave -90KPX Tcaron Amacron -90KPX Tcaron Aogonek -90KPX Tcaron Aring -90KPX Tcaron Atilde -90KPX Tcaron O -40KPX Tcaron Oacute -40KPX Tcaron Ocircumflex -40KPX Tcaron Odieresis -40KPX Tcaron Ograve -40KPX Tcaron Ohungarumlaut -40KPX Tcaron Omacron -40KPX Tcaron Oslash -40KPX Tcaron Otilde -40KPX Tcaron a -80KPX Tcaron aacute -80KPX Tcaron abreve -80KPX Tcaron acircumflex -80KPX Tcaron adieresis -80KPX Tcaron agrave -80KPX Tcaron amacron -80KPX Tcaron aogonek -80KPX Tcaron aring -80KPX Tcaron atilde -80KPX Tcaron colon -40KPX Tcaron comma -80KPX Tcaron e -60KPX Tcaron eacute -60KPX Tcaron ecaron -60KPX Tcaron ecircumflex -60KPX Tcaron edieresis -60KPX Tcaron edotaccent -60KPX Tcaron egrave -60KPX Tcaron emacron -60KPX Tcaron eogonek -60KPX Tcaron hyphen -120KPX Tcaron o -80KPX Tcaron oacute -80KPX Tcaron ocircumflex -80KPX Tcaron odieresis -80KPX Tcaron ograve -80KPX Tcaron ohungarumlaut -80KPX Tcaron omacron -80KPX Tcaron oslash -80KPX Tcaron otilde -80KPX Tcaron period -80KPX Tcaron r -80KPX Tcaron racute -80KPX Tcaron rcommaaccent -80KPX Tcaron semicolon -40KPX Tcaron u -90KPX Tcaron uacute -90KPX Tcaron ucircumflex -90KPX Tcaron udieresis -90KPX Tcaron ugrave -90KPX Tcaron uhungarumlaut -90KPX Tcaron umacron -90KPX Tcaron uogonek -90KPX Tcaron uring -90KPX Tcaron w -60KPX Tcaron y -60KPX Tcaron yacute -60KPX Tcaron ydieresis -60KPX Tcommaaccent A -90KPX Tcommaaccent Aacute -90KPX Tcommaaccent Abreve -90KPX Tcommaaccent Acircumflex -90KPX Tcommaaccent Adieresis -90KPX Tcommaaccent Agrave -90KPX Tcommaaccent Amacron -90KPX Tcommaaccent Aogonek -90KPX Tcommaaccent Aring -90KPX Tcommaaccent Atilde -90KPX Tcommaaccent O -40KPX Tcommaaccent Oacute -40KPX Tcommaaccent Ocircumflex -40KPX Tcommaaccent Odieresis -40KPX Tcommaaccent Ograve -40KPX Tcommaaccent Ohungarumlaut -40KPX Tcommaaccent Omacron -40KPX Tcommaaccent Oslash -40KPX Tcommaaccent Otilde -40KPX Tcommaaccent a -80KPX Tcommaaccent aacute -80KPX Tcommaaccent abreve -80KPX Tcommaaccent acircumflex -80KPX Tcommaaccent adieresis -80KPX Tcommaaccent agrave -80KPX Tcommaaccent amacron -80KPX Tcommaaccent aogonek -80KPX Tcommaaccent aring -80KPX Tcommaaccent atilde -80KPX Tcommaaccent colon -40KPX Tcommaaccent comma -80KPX Tcommaaccent e -60KPX Tcommaaccent eacute -60KPX Tcommaaccent ecaron -60KPX Tcommaaccent ecircumflex -60KPX Tcommaaccent edieresis -60KPX Tcommaaccent edotaccent -60KPX Tcommaaccent egrave -60KPX Tcommaaccent emacron -60KPX Tcommaaccent eogonek -60KPX Tcommaaccent hyphen -120KPX Tcommaaccent o -80KPX Tcommaaccent oacute -80KPX Tcommaaccent ocircumflex -80KPX Tcommaaccent odieresis -80KPX Tcommaaccent ograve -80KPX Tcommaaccent ohungarumlaut -80KPX Tcommaaccent omacron -80KPX Tcommaaccent oslash -80KPX Tcommaaccent otilde -80KPX Tcommaaccent period -80KPX Tcommaaccent r -80KPX Tcommaaccent racute -80KPX Tcommaaccent rcommaaccent -80KPX Tcommaaccent semicolon -40KPX Tcommaaccent u -90KPX Tcommaaccent uacute -90KPX Tcommaaccent ucircumflex -90KPX Tcommaaccent udieresis -90KPX Tcommaaccent ugrave -90KPX Tcommaaccent uhungarumlaut -90KPX Tcommaaccent umacron -90KPX Tcommaaccent uogonek -90KPX Tcommaaccent uring -90KPX Tcommaaccent w -60KPX Tcommaaccent y -60KPX Tcommaaccent yacute -60KPX Tcommaaccent ydieresis -60KPX U A -50KPX U Aacute -50KPX U Abreve -50KPX U Acircumflex -50KPX U Adieresis -50KPX U Agrave -50KPX U Amacron -50KPX U Aogonek -50KPX U Aring -50KPX U Atilde -50KPX U comma -30KPX U period -30KPX Uacute A -50KPX Uacute Aacute -50KPX Uacute Abreve -50KPX Uacute Acircumflex -50KPX Uacute Adieresis -50KPX Uacute Agrave -50KPX Uacute Amacron -50KPX Uacute Aogonek -50KPX Uacute Aring -50KPX Uacute Atilde -50KPX Uacute comma -30KPX Uacute period -30KPX Ucircumflex A -50KPX Ucircumflex Aacute -50KPX Ucircumflex Abreve -50KPX Ucircumflex Acircumflex -50KPX Ucircumflex Adieresis -50KPX Ucircumflex Agrave -50KPX Ucircumflex Amacron -50KPX Ucircumflex Aogonek -50KPX Ucircumflex Aring -50KPX Ucircumflex Atilde -50KPX Ucircumflex comma -30KPX Ucircumflex period -30KPX Udieresis A -50KPX Udieresis Aacute -50KPX Udieresis Abreve -50KPX Udieresis Acircumflex -50KPX Udieresis Adieresis -50KPX Udieresis Agrave -50KPX Udieresis Amacron -50KPX Udieresis Aogonek -50KPX Udieresis Aring -50KPX Udieresis Atilde -50KPX Udieresis comma -30KPX Udieresis period -30KPX Ugrave A -50KPX Ugrave Aacute -50KPX Ugrave Abreve -50KPX Ugrave Acircumflex -50KPX Ugrave Adieresis -50KPX Ugrave Agrave -50KPX Ugrave Amacron -50KPX Ugrave Aogonek -50KPX Ugrave Aring -50KPX Ugrave Atilde -50KPX Ugrave comma -30KPX Ugrave period -30KPX Uhungarumlaut A -50KPX Uhungarumlaut Aacute -50KPX Uhungarumlaut Abreve -50KPX Uhungarumlaut Acircumflex -50KPX Uhungarumlaut Adieresis -50KPX Uhungarumlaut Agrave -50KPX Uhungarumlaut Amacron -50KPX Uhungarumlaut Aogonek -50KPX Uhungarumlaut Aring -50KPX Uhungarumlaut Atilde -50KPX Uhungarumlaut comma -30KPX Uhungarumlaut period -30KPX Umacron A -50KPX Umacron Aacute -50KPX Umacron Abreve -50KPX Umacron Acircumflex -50KPX Umacron Adieresis -50KPX Umacron Agrave -50KPX Umacron Amacron -50KPX Umacron Aogonek -50KPX Umacron Aring -50KPX Umacron Atilde -50KPX Umacron comma -30KPX Umacron period -30KPX Uogonek A -50KPX Uogonek Aacute -50KPX Uogonek Abreve -50KPX Uogonek Acircumflex -50KPX Uogonek Adieresis -50KPX Uogonek Agrave -50KPX Uogonek Amacron -50KPX Uogonek Aogonek -50KPX Uogonek Aring -50KPX Uogonek Atilde -50KPX Uogonek comma -30KPX Uogonek period -30KPX Uring A -50KPX Uring Aacute -50KPX Uring Abreve -50KPX Uring Acircumflex -50KPX Uring Adieresis -50KPX Uring Agrave -50KPX Uring Amacron -50KPX Uring Aogonek -50KPX Uring Aring -50KPX Uring Atilde -50KPX Uring comma -30KPX Uring period -30KPX V A -80KPX V Aacute -80KPX V Abreve -80KPX V Acircumflex -80KPX V Adieresis -80KPX V Agrave -80KPX V Amacron -80KPX V Aogonek -80KPX V Aring -80KPX V Atilde -80KPX V G -50KPX V Gbreve -50KPX V Gcommaaccent -50KPX V O -50KPX V Oacute -50KPX V Ocircumflex -50KPX V Odieresis -50KPX V Ograve -50KPX V Ohungarumlaut -50KPX V Omacron -50KPX V Oslash -50KPX V Otilde -50KPX V a -60KPX V aacute -60KPX V abreve -60KPX V acircumflex -60KPX V adieresis -60KPX V agrave -60KPX V amacron -60KPX V aogonek -60KPX V aring -60KPX V atilde -60KPX V colon -40KPX V comma -120KPX V e -50KPX V eacute -50KPX V ecaron -50KPX V ecircumflex -50KPX V edieresis -50KPX V edotaccent -50KPX V egrave -50KPX V emacron -50KPX V eogonek -50KPX V hyphen -80KPX V o -90KPX V oacute -90KPX V ocircumflex -90KPX V odieresis -90KPX V ograve -90KPX V ohungarumlaut -90KPX V omacron -90KPX V oslash -90KPX V otilde -90KPX V period -120KPX V semicolon -40KPX V u -60KPX V uacute -60KPX V ucircumflex -60KPX V udieresis -60KPX V ugrave -60KPX V uhungarumlaut -60KPX V umacron -60KPX V uogonek -60KPX V uring -60KPX W A -60KPX W Aacute -60KPX W Abreve -60KPX W Acircumflex -60KPX W Adieresis -60KPX W Agrave -60KPX W Amacron -60KPX W Aogonek -60KPX W Aring -60KPX W Atilde -60KPX W O -20KPX W Oacute -20KPX W Ocircumflex -20KPX W Odieresis -20KPX W Ograve -20KPX W Ohungarumlaut -20KPX W Omacron -20KPX W Oslash -20KPX W Otilde -20KPX W a -40KPX W aacute -40KPX W abreve -40KPX W acircumflex -40KPX W adieresis -40KPX W agrave -40KPX W amacron -40KPX W aogonek -40KPX W aring -40KPX W atilde -40KPX W colon -10KPX W comma -80KPX W e -35KPX W eacute -35KPX W ecaron -35KPX W ecircumflex -35KPX W edieresis -35KPX W edotaccent -35KPX W egrave -35KPX W emacron -35KPX W eogonek -35KPX W hyphen -40KPX W o -60KPX W oacute -60KPX W ocircumflex -60KPX W odieresis -60KPX W ograve -60KPX W ohungarumlaut -60KPX W omacron -60KPX W oslash -60KPX W otilde -60KPX W period -80KPX W semicolon -10KPX W u -45KPX W uacute -45KPX W ucircumflex -45KPX W udieresis -45KPX W ugrave -45KPX W uhungarumlaut -45KPX W umacron -45KPX W uogonek -45KPX W uring -45KPX W y -20KPX W yacute -20KPX W ydieresis -20KPX Y A -110KPX Y Aacute -110KPX Y Abreve -110KPX Y Acircumflex -110KPX Y Adieresis -110KPX Y Agrave -110KPX Y Amacron -110KPX Y Aogonek -110KPX Y Aring -110KPX Y Atilde -110KPX Y O -70KPX Y Oacute -70KPX Y Ocircumflex -70KPX Y Odieresis -70KPX Y Ograve -70KPX Y Ohungarumlaut -70KPX Y Omacron -70KPX Y Oslash -70KPX Y Otilde -70KPX Y a -90KPX Y aacute -90KPX Y abreve -90KPX Y acircumflex -90KPX Y adieresis -90KPX Y agrave -90KPX Y amacron -90KPX Y aogonek -90KPX Y aring -90KPX Y atilde -90KPX Y colon -50KPX Y comma -100KPX Y e -80KPX Y eacute -80KPX Y ecaron -80KPX Y ecircumflex -80KPX Y edieresis -80KPX Y edotaccent -80KPX Y egrave -80KPX Y emacron -80KPX Y eogonek -80KPX Y o -100KPX Y oacute -100KPX Y ocircumflex -100KPX Y odieresis -100KPX Y ograve -100KPX Y ohungarumlaut -100KPX Y omacron -100KPX Y oslash -100KPX Y otilde -100KPX Y period -100KPX Y semicolon -50KPX Y u -100KPX Y uacute -100KPX Y ucircumflex -100KPX Y udieresis -100KPX Y ugrave -100KPX Y uhungarumlaut -100KPX Y umacron -100KPX Y uogonek -100KPX Y uring -100KPX Yacute A -110KPX Yacute Aacute -110KPX Yacute Abreve -110KPX Yacute Acircumflex -110KPX Yacute Adieresis -110KPX Yacute Agrave -110KPX Yacute Amacron -110KPX Yacute Aogonek -110KPX Yacute Aring -110KPX Yacute Atilde -110KPX Yacute O -70KPX Yacute Oacute -70KPX Yacute Ocircumflex -70KPX Yacute Odieresis -70KPX Yacute Ograve -70KPX Yacute Ohungarumlaut -70KPX Yacute Omacron -70KPX Yacute Oslash -70KPX Yacute Otilde -70KPX Yacute a -90KPX Yacute aacute -90KPX Yacute abreve -90KPX Yacute acircumflex -90KPX Yacute adieresis -90KPX Yacute agrave -90KPX Yacute amacron -90KPX Yacute aogonek -90KPX Yacute aring -90KPX Yacute atilde -90KPX Yacute colon -50KPX Yacute comma -100KPX Yacute e -80KPX Yacute eacute -80KPX Yacute ecaron -80KPX Yacute ecircumflex -80KPX Yacute edieresis -80KPX Yacute edotaccent -80KPX Yacute egrave -80KPX Yacute emacron -80KPX Yacute eogonek -80KPX Yacute o -100KPX Yacute oacute -100KPX Yacute ocircumflex -100KPX Yacute odieresis -100KPX Yacute ograve -100KPX Yacute ohungarumlaut -100KPX Yacute omacron -100KPX Yacute oslash -100KPX Yacute otilde -100KPX Yacute period -100KPX Yacute semicolon -50KPX Yacute u -100KPX Yacute uacute -100KPX Yacute ucircumflex -100KPX Yacute udieresis -100KPX Yacute ugrave -100KPX Yacute uhungarumlaut -100KPX Yacute umacron -100KPX Yacute uogonek -100KPX Yacute uring -100KPX Ydieresis A -110KPX Ydieresis Aacute -110KPX Ydieresis Abreve -110KPX Ydieresis Acircumflex -110KPX Ydieresis Adieresis -110KPX Ydieresis Agrave -110KPX Ydieresis Amacron -110KPX Ydieresis Aogonek -110KPX Ydieresis Aring -110KPX Ydieresis Atilde -110KPX Ydieresis O -70KPX Ydieresis Oacute -70KPX Ydieresis Ocircumflex -70KPX Ydieresis Odieresis -70KPX Ydieresis Ograve -70KPX Ydieresis Ohungarumlaut -70KPX Ydieresis Omacron -70KPX Ydieresis Oslash -70KPX Ydieresis Otilde -70KPX Ydieresis a -90KPX Ydieresis aacute -90KPX Ydieresis abreve -90KPX Ydieresis acircumflex -90KPX Ydieresis adieresis -90KPX Ydieresis agrave -90KPX Ydieresis amacron -90KPX Ydieresis aogonek -90KPX Ydieresis aring -90KPX Ydieresis atilde -90KPX Ydieresis colon -50KPX Ydieresis comma -100KPX Ydieresis e -80KPX Ydieresis eacute -80KPX Ydieresis ecaron -80KPX Ydieresis ecircumflex -80KPX Ydieresis edieresis -80KPX Ydieresis edotaccent -80KPX Ydieresis egrave -80KPX Ydieresis emacron -80KPX Ydieresis eogonek -80KPX Ydieresis o -100KPX Ydieresis oacute -100KPX Ydieresis ocircumflex -100KPX Ydieresis odieresis -100KPX Ydieresis ograve -100KPX Ydieresis ohungarumlaut -100KPX Ydieresis omacron -100KPX Ydieresis oslash -100KPX Ydieresis otilde -100KPX Ydieresis period -100KPX Ydieresis semicolon -50KPX Ydieresis u -100KPX Ydieresis uacute -100KPX Ydieresis ucircumflex -100KPX Ydieresis udieresis -100KPX Ydieresis ugrave -100KPX Ydieresis uhungarumlaut -100KPX Ydieresis umacron -100KPX Ydieresis uogonek -100KPX Ydieresis uring -100KPX a g -10KPX a gbreve -10KPX a gcommaaccent -10KPX a v -15KPX a w -15KPX a y -20KPX a yacute -20KPX a ydieresis -20KPX aacute g -10KPX aacute gbreve -10KPX aacute gcommaaccent -10KPX aacute v -15KPX aacute w -15KPX aacute y -20KPX aacute yacute -20KPX aacute ydieresis -20KPX abreve g -10KPX abreve gbreve -10KPX abreve gcommaaccent -10KPX abreve v -15KPX abreve w -15KPX abreve y -20KPX abreve yacute -20KPX abreve ydieresis -20KPX acircumflex g -10KPX acircumflex gbreve -10KPX acircumflex gcommaaccent -10KPX acircumflex v -15KPX acircumflex w -15KPX acircumflex y -20KPX acircumflex yacute -20KPX acircumflex ydieresis -20KPX adieresis g -10KPX adieresis gbreve -10KPX adieresis gcommaaccent -10KPX adieresis v -15KPX adieresis w -15KPX adieresis y -20KPX adieresis yacute -20KPX adieresis ydieresis -20KPX agrave g -10KPX agrave gbreve -10KPX agrave gcommaaccent -10KPX agrave v -15KPX agrave w -15KPX agrave y -20KPX agrave yacute -20KPX agrave ydieresis -20KPX amacron g -10KPX amacron gbreve -10KPX amacron gcommaaccent -10KPX amacron v -15KPX amacron w -15KPX amacron y -20KPX amacron yacute -20KPX amacron ydieresis -20KPX aogonek g -10KPX aogonek gbreve -10KPX aogonek gcommaaccent -10KPX aogonek v -15KPX aogonek w -15KPX aogonek y -20KPX aogonek yacute -20KPX aogonek ydieresis -20KPX aring g -10KPX aring gbreve -10KPX aring gcommaaccent -10KPX aring v -15KPX aring w -15KPX aring y -20KPX aring yacute -20KPX aring ydieresis -20KPX atilde g -10KPX atilde gbreve -10KPX atilde gcommaaccent -10KPX atilde v -15KPX atilde w -15KPX atilde y -20KPX atilde yacute -20KPX atilde ydieresis -20KPX b l -10KPX b lacute -10KPX b lcommaaccent -10KPX b lslash -10KPX b u -20KPX b uacute -20KPX b ucircumflex -20KPX b udieresis -20KPX b ugrave -20KPX b uhungarumlaut -20KPX b umacron -20KPX b uogonek -20KPX b uring -20KPX b v -20KPX b y -20KPX b yacute -20KPX b ydieresis -20KPX c h -10KPX c k -20KPX c kcommaaccent -20KPX c l -20KPX c lacute -20KPX c lcommaaccent -20KPX c lslash -20KPX c y -10KPX c yacute -10KPX c ydieresis -10KPX cacute h -10KPX cacute k -20KPX cacute kcommaaccent -20KPX cacute l -20KPX cacute lacute -20KPX cacute lcommaaccent -20KPX cacute lslash -20KPX cacute y -10KPX cacute yacute -10KPX cacute ydieresis -10KPX ccaron h -10KPX ccaron k -20KPX ccaron kcommaaccent -20KPX ccaron l -20KPX ccaron lacute -20KPX ccaron lcommaaccent -20KPX ccaron lslash -20KPX ccaron y -10KPX ccaron yacute -10KPX ccaron ydieresis -10KPX ccedilla h -10KPX ccedilla k -20KPX ccedilla kcommaaccent -20KPX ccedilla l -20KPX ccedilla lacute -20KPX ccedilla lcommaaccent -20KPX ccedilla lslash -20KPX ccedilla y -10KPX ccedilla yacute -10KPX ccedilla ydieresis -10KPX colon space -40KPX comma quotedblright -120KPX comma quoteright -120KPX comma space -40KPX d d -10KPX d dcroat -10KPX d v -15KPX d w -15KPX d y -15KPX d yacute -15KPX d ydieresis -15KPX dcroat d -10KPX dcroat dcroat -10KPX dcroat v -15KPX dcroat w -15KPX dcroat y -15KPX dcroat yacute -15KPX dcroat ydieresis -15KPX e comma 10KPX e period 20KPX e v -15KPX e w -15KPX e x -15KPX e y -15KPX e yacute -15KPX e ydieresis -15KPX eacute comma 10KPX eacute period 20KPX eacute v -15KPX eacute w -15KPX eacute x -15KPX eacute y -15KPX eacute yacute -15KPX eacute ydieresis -15KPX ecaron comma 10KPX ecaron period 20KPX ecaron v -15KPX ecaron w -15KPX ecaron x -15KPX ecaron y -15KPX ecaron yacute -15KPX ecaron ydieresis -15KPX ecircumflex comma 10KPX ecircumflex period 20KPX ecircumflex v -15KPX ecircumflex w -15KPX ecircumflex x -15KPX ecircumflex y -15KPX ecircumflex yacute -15KPX ecircumflex ydieresis -15KPX edieresis comma 10KPX edieresis period 20KPX edieresis v -15KPX edieresis w -15KPX edieresis x -15KPX edieresis y -15KPX edieresis yacute -15KPX edieresis ydieresis -15KPX edotaccent comma 10KPX edotaccent period 20KPX edotaccent v -15KPX edotaccent w -15KPX edotaccent x -15KPX edotaccent y -15KPX edotaccent yacute -15KPX edotaccent ydieresis -15KPX egrave comma 10KPX egrave period 20KPX egrave v -15KPX egrave w -15KPX egrave x -15KPX egrave y -15KPX egrave yacute -15KPX egrave ydieresis -15KPX emacron comma 10KPX emacron period 20KPX emacron v -15KPX emacron w -15KPX emacron x -15KPX emacron y -15KPX emacron yacute -15KPX emacron ydieresis -15KPX eogonek comma 10KPX eogonek period 20KPX eogonek v -15KPX eogonek w -15KPX eogonek x -15KPX eogonek y -15KPX eogonek yacute -15KPX eogonek ydieresis -15KPX f comma -10KPX f e -10KPX f eacute -10KPX f ecaron -10KPX f ecircumflex -10KPX f edieresis -10KPX f edotaccent -10KPX f egrave -10KPX f emacron -10KPX f eogonek -10KPX f o -20KPX f oacute -20KPX f ocircumflex -20KPX f odieresis -20KPX f ograve -20KPX f ohungarumlaut -20KPX f omacron -20KPX f oslash -20KPX f otilde -20KPX f period -10KPX f quotedblright 30KPX f quoteright 30KPX g e 10KPX g eacute 10KPX g ecaron 10KPX g ecircumflex 10KPX g edieresis 10KPX g edotaccent 10KPX g egrave 10KPX g emacron 10KPX g eogonek 10KPX g g -10KPX g gbreve -10KPX g gcommaaccent -10KPX gbreve e 10KPX gbreve eacute 10KPX gbreve ecaron 10KPX gbreve ecircumflex 10KPX gbreve edieresis 10KPX gbreve edotaccent 10KPX gbreve egrave 10KPX gbreve emacron 10KPX gbreve eogonek 10KPX gbreve g -10KPX gbreve gbreve -10KPX gbreve gcommaaccent -10KPX gcommaaccent e 10KPX gcommaaccent eacute 10KPX gcommaaccent ecaron 10KPX gcommaaccent ecircumflex 10KPX gcommaaccent edieresis 10KPX gcommaaccent edotaccent 10KPX gcommaaccent egrave 10KPX gcommaaccent emacron 10KPX gcommaaccent eogonek 10KPX gcommaaccent g -10KPX gcommaaccent gbreve -10KPX gcommaaccent gcommaaccent -10KPX h y -20KPX h yacute -20KPX h ydieresis -20KPX k o -15KPX k oacute -15KPX k ocircumflex -15KPX k odieresis -15KPX k ograve -15KPX k ohungarumlaut -15KPX k omacron -15KPX k oslash -15KPX k otilde -15KPX kcommaaccent o -15KPX kcommaaccent oacute -15KPX kcommaaccent ocircumflex -15KPX kcommaaccent odieresis -15KPX kcommaaccent ograve -15KPX kcommaaccent ohungarumlaut -15KPX kcommaaccent omacron -15KPX kcommaaccent oslash -15KPX kcommaaccent otilde -15KPX l w -15KPX l y -15KPX l yacute -15KPX l ydieresis -15KPX lacute w -15KPX lacute y -15KPX lacute yacute -15KPX lacute ydieresis -15KPX lcommaaccent w -15KPX lcommaaccent y -15KPX lcommaaccent yacute -15KPX lcommaaccent ydieresis -15KPX lslash w -15KPX lslash y -15KPX lslash yacute -15KPX lslash ydieresis -15KPX m u -20KPX m uacute -20KPX m ucircumflex -20KPX m udieresis -20KPX m ugrave -20KPX m uhungarumlaut -20KPX m umacron -20KPX m uogonek -20KPX m uring -20KPX m y -30KPX m yacute -30KPX m ydieresis -30KPX n u -10KPX n uacute -10KPX n ucircumflex -10KPX n udieresis -10KPX n ugrave -10KPX n uhungarumlaut -10KPX n umacron -10KPX n uogonek -10KPX n uring -10KPX n v -40KPX n y -20KPX n yacute -20KPX n ydieresis -20KPX nacute u -10KPX nacute uacute -10KPX nacute ucircumflex -10KPX nacute udieresis -10KPX nacute ugrave -10KPX nacute uhungarumlaut -10KPX nacute umacron -10KPX nacute uogonek -10KPX nacute uring -10KPX nacute v -40KPX nacute y -20KPX nacute yacute -20KPX nacute ydieresis -20KPX ncaron u -10KPX ncaron uacute -10KPX ncaron ucircumflex -10KPX ncaron udieresis -10KPX ncaron ugrave -10KPX ncaron uhungarumlaut -10KPX ncaron umacron -10KPX ncaron uogonek -10KPX ncaron uring -10KPX ncaron v -40KPX ncaron y -20KPX ncaron yacute -20KPX ncaron ydieresis -20KPX ncommaaccent u -10KPX ncommaaccent uacute -10KPX ncommaaccent ucircumflex -10KPX ncommaaccent udieresis -10KPX ncommaaccent ugrave -10KPX ncommaaccent uhungarumlaut -10KPX ncommaaccent umacron -10KPX ncommaaccent uogonek -10KPX ncommaaccent uring -10KPX ncommaaccent v -40KPX ncommaaccent y -20KPX ncommaaccent yacute -20KPX ncommaaccent ydieresis -20KPX ntilde u -10KPX ntilde uacute -10KPX ntilde ucircumflex -10KPX ntilde udieresis -10KPX ntilde ugrave -10KPX ntilde uhungarumlaut -10KPX ntilde umacron -10KPX ntilde uogonek -10KPX ntilde uring -10KPX ntilde v -40KPX ntilde y -20KPX ntilde yacute -20KPX ntilde ydieresis -20KPX o v -20KPX o w -15KPX o x -30KPX o y -20KPX o yacute -20KPX o ydieresis -20KPX oacute v -20KPX oacute w -15KPX oacute x -30KPX oacute y -20KPX oacute yacute -20KPX oacute ydieresis -20KPX ocircumflex v -20KPX ocircumflex w -15KPX ocircumflex x -30KPX ocircumflex y -20KPX ocircumflex yacute -20KPX ocircumflex ydieresis -20KPX odieresis v -20KPX odieresis w -15KPX odieresis x -30KPX odieresis y -20KPX odieresis yacute -20KPX odieresis ydieresis -20KPX ograve v -20KPX ograve w -15KPX ograve x -30KPX ograve y -20KPX ograve yacute -20KPX ograve ydieresis -20KPX ohungarumlaut v -20KPX ohungarumlaut w -15KPX ohungarumlaut x -30KPX ohungarumlaut y -20KPX ohungarumlaut yacute -20KPX ohungarumlaut ydieresis -20KPX omacron v -20KPX omacron w -15KPX omacron x -30KPX omacron y -20KPX omacron yacute -20KPX omacron ydieresis -20KPX oslash v -20KPX oslash w -15KPX oslash x -30KPX oslash y -20KPX oslash yacute -20KPX oslash ydieresis -20KPX otilde v -20KPX otilde w -15KPX otilde x -30KPX otilde y -20KPX otilde yacute -20KPX otilde ydieresis -20KPX p y -15KPX p yacute -15KPX p ydieresis -15KPX period quotedblright -120KPX period quoteright -120KPX period space -40KPX quotedblright space -80KPX quoteleft quoteleft -46KPX quoteright d -80KPX quoteright dcroat -80KPX quoteright l -20KPX quoteright lacute -20KPX quoteright lcommaaccent -20KPX quoteright lslash -20KPX quoteright quoteright -46KPX quoteright r -40KPX quoteright racute -40KPX quoteright rcaron -40KPX quoteright rcommaaccent -40KPX quoteright s -60KPX quoteright sacute -60KPX quoteright scaron -60KPX quoteright scedilla -60KPX quoteright scommaaccent -60KPX quoteright space -80KPX quoteright v -20KPX r c -20KPX r cacute -20KPX r ccaron -20KPX r ccedilla -20KPX r comma -60KPX r d -20KPX r dcroat -20KPX r g -15KPX r gbreve -15KPX r gcommaaccent -15KPX r hyphen -20KPX r o -20KPX r oacute -20KPX r ocircumflex -20KPX r odieresis -20KPX r ograve -20KPX r ohungarumlaut -20KPX r omacron -20KPX r oslash -20KPX r otilde -20KPX r period -60KPX r q -20KPX r s -15KPX r sacute -15KPX r scaron -15KPX r scedilla -15KPX r scommaaccent -15KPX r t 20KPX r tcommaaccent 20KPX r v 10KPX r y 10KPX r yacute 10KPX r ydieresis 10KPX racute c -20KPX racute cacute -20KPX racute ccaron -20KPX racute ccedilla -20KPX racute comma -60KPX racute d -20KPX racute dcroat -20KPX racute g -15KPX racute gbreve -15KPX racute gcommaaccent -15KPX racute hyphen -20KPX racute o -20KPX racute oacute -20KPX racute ocircumflex -20KPX racute odieresis -20KPX racute ograve -20KPX racute ohungarumlaut -20KPX racute omacron -20KPX racute oslash -20KPX racute otilde -20KPX racute period -60KPX racute q -20KPX racute s -15KPX racute sacute -15KPX racute scaron -15KPX racute scedilla -15KPX racute scommaaccent -15KPX racute t 20KPX racute tcommaaccent 20KPX racute v 10KPX racute y 10KPX racute yacute 10KPX racute ydieresis 10KPX rcaron c -20KPX rcaron cacute -20KPX rcaron ccaron -20KPX rcaron ccedilla -20KPX rcaron comma -60KPX rcaron d -20KPX rcaron dcroat -20KPX rcaron g -15KPX rcaron gbreve -15KPX rcaron gcommaaccent -15KPX rcaron hyphen -20KPX rcaron o -20KPX rcaron oacute -20KPX rcaron ocircumflex -20KPX rcaron odieresis -20KPX rcaron ograve -20KPX rcaron ohungarumlaut -20KPX rcaron omacron -20KPX rcaron oslash -20KPX rcaron otilde -20KPX rcaron period -60KPX rcaron q -20KPX rcaron s -15KPX rcaron sacute -15KPX rcaron scaron -15KPX rcaron scedilla -15KPX rcaron scommaaccent -15KPX rcaron t 20KPX rcaron tcommaaccent 20KPX rcaron v 10KPX rcaron y 10KPX rcaron yacute 10KPX rcaron ydieresis 10KPX rcommaaccent c -20KPX rcommaaccent cacute -20KPX rcommaaccent ccaron -20KPX rcommaaccent ccedilla -20KPX rcommaaccent comma -60KPX rcommaaccent d -20KPX rcommaaccent dcroat -20KPX rcommaaccent g -15KPX rcommaaccent gbreve -15KPX rcommaaccent gcommaaccent -15KPX rcommaaccent hyphen -20KPX rcommaaccent o -20KPX rcommaaccent oacute -20KPX rcommaaccent ocircumflex -20KPX rcommaaccent odieresis -20KPX rcommaaccent ograve -20KPX rcommaaccent ohungarumlaut -20KPX rcommaaccent omacron -20KPX rcommaaccent oslash -20KPX rcommaaccent otilde -20KPX rcommaaccent period -60KPX rcommaaccent q -20KPX rcommaaccent s -15KPX rcommaaccent sacute -15KPX rcommaaccent scaron -15KPX rcommaaccent scedilla -15KPX rcommaaccent scommaaccent -15KPX rcommaaccent t 20KPX rcommaaccent tcommaaccent 20KPX rcommaaccent v 10KPX rcommaaccent y 10KPX rcommaaccent yacute 10KPX rcommaaccent ydieresis 10KPX s w -15KPX sacute w -15KPX scaron w -15KPX scedilla w -15KPX scommaaccent w -15KPX semicolon space -40KPX space T -100KPX space Tcaron -100KPX space Tcommaaccent -100KPX space V -80KPX space W -80KPX space Y -120KPX space Yacute -120KPX space Ydieresis -120KPX space quotedblleft -80KPX space quoteleft -60KPX v a -20KPX v aacute -20KPX v abreve -20KPX v acircumflex -20KPX v adieresis -20KPX v agrave -20KPX v amacron -20KPX v aogonek -20KPX v aring -20KPX v atilde -20KPX v comma -80KPX v o -30KPX v oacute -30KPX v ocircumflex -30KPX v odieresis -30KPX v ograve -30KPX v ohungarumlaut -30KPX v omacron -30KPX v oslash -30KPX v otilde -30KPX v period -80KPX w comma -40KPX w o -20KPX w oacute -20KPX w ocircumflex -20KPX w odieresis -20KPX w ograve -20KPX w ohungarumlaut -20KPX w omacron -20KPX w oslash -20KPX w otilde -20KPX w period -40KPX x e -10KPX x eacute -10KPX x ecaron -10KPX x ecircumflex -10KPX x edieresis -10KPX x edotaccent -10KPX x egrave -10KPX x emacron -10KPX x eogonek -10KPX y a -30KPX y aacute -30KPX y abreve -30KPX y acircumflex -30KPX y adieresis -30KPX y agrave -30KPX y amacron -30KPX y aogonek -30KPX y aring -30KPX y atilde -30KPX y comma -80KPX y e -10KPX y eacute -10KPX y ecaron -10KPX y ecircumflex -10KPX y edieresis -10KPX y edotaccent -10KPX y egrave -10KPX y emacron -10KPX y eogonek -10KPX y o -25KPX y oacute -25KPX y ocircumflex -25KPX y odieresis -25KPX y ograve -25KPX y ohungarumlaut -25KPX y omacron -25KPX y oslash -25KPX y otilde -25KPX y period -80KPX yacute a -30KPX yacute aacute -30KPX yacute abreve -30KPX yacute acircumflex -30KPX yacute adieresis -30KPX yacute agrave -30KPX yacute amacron -30KPX yacute aogonek -30KPX yacute aring -30KPX yacute atilde -30KPX yacute comma -80KPX yacute e -10KPX yacute eacute -10KPX yacute ecaron -10KPX yacute ecircumflex -10KPX yacute edieresis -10KPX yacute edotaccent -10KPX yacute egrave -10KPX yacute emacron -10KPX yacute eogonek -10KPX yacute o -25KPX yacute oacute -25KPX yacute ocircumflex -25KPX yacute odieresis -25KPX yacute ograve -25KPX yacute ohungarumlaut -25KPX yacute omacron -25KPX yacute oslash -25KPX yacute otilde -25KPX yacute period -80KPX ydieresis a -30KPX ydieresis aacute -30KPX ydieresis abreve -30KPX ydieresis acircumflex -30KPX ydieresis adieresis -30KPX ydieresis agrave -30KPX ydieresis amacron -30KPX ydieresis aogonek -30KPX ydieresis aring -30KPX ydieresis atilde -30KPX ydieresis comma -80KPX ydieresis e -10KPX ydieresis eacute -10KPX ydieresis ecaron -10KPX ydieresis ecircumflex -10KPX ydieresis edieresis -10KPX ydieresis edotaccent -10KPX ydieresis egrave -10KPX ydieresis emacron -10KPX ydieresis eogonek -10KPX ydieresis o -25KPX ydieresis oacute -25KPX ydieresis ocircumflex -25KPX ydieresis odieresis -25KPX ydieresis ograve -25KPX ydieresis ohungarumlaut -25KPX ydieresis omacron -25KPX ydieresis oslash -25KPX ydieresis otilde -25KPX ydieresis period -80KPX z e 10KPX z eacute 10KPX z ecaron 10KPX z ecircumflex 10KPX z edieresis 10KPX z edotaccent 10KPX z egrave 10KPX z emacron 10KPX z eogonek 10KPX zacute e 10KPX zacute eacute 10KPX zacute ecaron 10KPX zacute ecircumflex 10KPX zacute edieresis 10KPX zacute edotaccent 10KPX zacute egrave 10KPX zacute emacron 10KPX zacute eogonek 10KPX zcaron e 10KPX zcaron eacute 10KPX zcaron ecaron 10KPX zcaron ecircumflex 10KPX zcaron edieresis 10KPX zcaron edotaccent 10KPX zcaron egrave 10KPX zcaron emacron 10KPX zcaron eogonek 10KPX zdotaccent e 10KPX zdotaccent eacute 10KPX zdotaccent ecaron 10KPX zdotaccent ecircumflex 10KPX zdotaccent edieresis 10KPX zdotaccent edotaccent 10KPX zdotaccent egrave 10KPX zdotaccent emacron 10KPX zdotaccent eogonek 10EndKernPairsEndKernDataEndFontMetrics'</body><body package="Type1">helveticaBoldOblique	"from http://www.adobe.com/devnet/font.html "	&lt;font: #'Helvetica-BoldOblique'&gt;	^self		windowsName: 'Arial'		afm: 'StartFontMetrics 4.1Comment Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.Comment Creation Date: Thu May  1 12:45:12 1997Comment UniqueID 43053Comment VMusage 14482 68586FontName Helvetica-BoldObliqueFullName Helvetica Bold ObliqueFamilyName HelveticaWeight BoldItalicAngle -12IsFixedPitch falseCharacterSet ExtendedRomanFontBBox -174 -228 1114 962 UnderlinePosition -100UnderlineThickness 50Version 002.000Notice Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a trademark of Linotype-Hell AG and/or its subsidiaries.EncodingScheme AdobeStandardEncodingCapHeight 718XHeight 532Ascender 718Descender -207StdHW 118StdVW 140StartCharMetrics 315C 32 ; WX 278 ; N space ; B 0 0 0 0 ;C 33 ; WX 333 ; N exclam ; B 94 0 397 718 ;C 34 ; WX 474 ; N quotedbl ; B 193 447 529 718 ;C 35 ; WX 556 ; N numbersign ; B 60 0 644 698 ;C 36 ; WX 556 ; N dollar ; B 67 -115 622 775 ;C 37 ; WX 889 ; N percent ; B 136 -19 901 710 ;C 38 ; WX 722 ; N ampersand ; B 89 -19 732 718 ;C 39 ; WX 278 ; N quoteright ; B 167 445 362 718 ;C 40 ; WX 333 ; N parenleft ; B 76 -208 470 734 ;C 41 ; WX 333 ; N parenright ; B -25 -208 369 734 ;C 42 ; WX 389 ; N asterisk ; B 146 387 481 718 ;C 43 ; WX 584 ; N plus ; B 82 0 610 506 ;C 44 ; WX 278 ; N comma ; B 28 -168 245 146 ;C 45 ; WX 333 ; N hyphen ; B 73 215 379 345 ;C 46 ; WX 278 ; N period ; B 64 0 245 146 ;C 47 ; WX 278 ; N slash ; B -37 -19 468 737 ;C 48 ; WX 556 ; N zero ; B 86 -19 617 710 ;C 49 ; WX 556 ; N one ; B 173 0 529 710 ;C 50 ; WX 556 ; N two ; B 26 0 619 710 ;C 51 ; WX 556 ; N three ; B 65 -19 608 710 ;C 52 ; WX 556 ; N four ; B 60 0 598 710 ;C 53 ; WX 556 ; N five ; B 64 -19 636 698 ;C 54 ; WX 556 ; N six ; B 85 -19 619 710 ;C 55 ; WX 556 ; N seven ; B 125 0 676 698 ;C 56 ; WX 556 ; N eight ; B 69 -19 616 710 ;C 57 ; WX 556 ; N nine ; B 78 -19 615 710 ;C 58 ; WX 333 ; N colon ; B 92 0 351 512 ;C 59 ; WX 333 ; N semicolon ; B 56 -168 351 512 ;C 60 ; WX 584 ; N less ; B 82 -8 655 514 ;C 61 ; WX 584 ; N equal ; B 58 87 633 419 ;C 62 ; WX 584 ; N greater ; B 36 -8 609 514 ;C 63 ; WX 611 ; N question ; B 165 0 671 727 ;C 64 ; WX 975 ; N at ; B 186 -19 954 737 ;C 65 ; WX 722 ; N A ; B 20 0 702 718 ;C 66 ; WX 722 ; N B ; B 76 0 764 718 ;C 67 ; WX 722 ; N C ; B 107 -19 789 737 ;C 68 ; WX 722 ; N D ; B 76 0 777 718 ;C 69 ; WX 667 ; N E ; B 76 0 757 718 ;C 70 ; WX 611 ; N F ; B 76 0 740 718 ;C 71 ; WX 778 ; N G ; B 108 -19 817 737 ;C 72 ; WX 722 ; N H ; B 71 0 804 718 ;C 73 ; WX 278 ; N I ; B 64 0 367 718 ;C 74 ; WX 556 ; N J ; B 60 -18 637 718 ;C 75 ; WX 722 ; N K ; B 87 0 858 718 ;C 76 ; WX 611 ; N L ; B 76 0 611 718 ;C 77 ; WX 833 ; N M ; B 69 0 918 718 ;C 78 ; WX 722 ; N N ; B 69 0 807 718 ;C 79 ; WX 778 ; N O ; B 107 -19 823 737 ;C 80 ; WX 667 ; N P ; B 76 0 738 718 ;C 81 ; WX 778 ; N Q ; B 107 -52 823 737 ;C 82 ; WX 722 ; N R ; B 76 0 778 718 ;C 83 ; WX 667 ; N S ; B 81 -19 718 737 ;C 84 ; WX 611 ; N T ; B 140 0 751 718 ;C 85 ; WX 722 ; N U ; B 116 -19 804 718 ;C 86 ; WX 667 ; N V ; B 172 0 801 718 ;C 87 ; WX 944 ; N W ; B 169 0 1082 718 ;C 88 ; WX 667 ; N X ; B 14 0 791 718 ;C 89 ; WX 667 ; N Y ; B 168 0 806 718 ;C 90 ; WX 611 ; N Z ; B 25 0 737 718 ;C 91 ; WX 333 ; N bracketleft ; B 21 -196 462 722 ;C 92 ; WX 278 ; N backslash ; B 124 -19 307 737 ;C 93 ; WX 333 ; N bracketright ; B -18 -196 423 722 ;C 94 ; WX 584 ; N asciicircum ; B 131 323 591 698 ;C 95 ; WX 556 ; N underscore ; B -27 -125 540 -75 ;C 96 ; WX 278 ; N quoteleft ; B 165 454 361 727 ;C 97 ; WX 556 ; N a ; B 55 -14 583 546 ;C 98 ; WX 611 ; N b ; B 61 -14 645 718 ;C 99 ; WX 556 ; N c ; B 79 -14 599 546 ;C 100 ; WX 611 ; N d ; B 82 -14 704 718 ;C 101 ; WX 556 ; N e ; B 70 -14 593 546 ;C 102 ; WX 333 ; N f ; B 87 0 469 727 ; L i fi ; L l fl ;C 103 ; WX 611 ; N g ; B 38 -217 666 546 ;C 104 ; WX 611 ; N h ; B 65 0 629 718 ;C 105 ; WX 278 ; N i ; B 69 0 363 725 ;C 106 ; WX 278 ; N j ; B -42 -214 363 725 ;C 107 ; WX 556 ; N k ; B 69 0 670 718 ;C 108 ; WX 278 ; N l ; B 69 0 362 718 ;C 109 ; WX 889 ; N m ; B 64 0 909 546 ;C 110 ; WX 611 ; N n ; B 65 0 629 546 ;C 111 ; WX 611 ; N o ; B 82 -14 643 546 ;C 112 ; WX 611 ; N p ; B 18 -207 645 546 ;C 113 ; WX 611 ; N q ; B 80 -207 665 546 ;C 114 ; WX 389 ; N r ; B 64 0 489 546 ;C 115 ; WX 556 ; N s ; B 63 -14 584 546 ;C 116 ; WX 333 ; N t ; B 100 -6 422 676 ;C 117 ; WX 611 ; N u ; B 98 -14 658 532 ;C 118 ; WX 556 ; N v ; B 126 0 656 532 ;C 119 ; WX 778 ; N w ; B 123 0 882 532 ;C 120 ; WX 556 ; N x ; B 15 0 648 532 ;C 121 ; WX 556 ; N y ; B 42 -214 652 532 ;C 122 ; WX 500 ; N z ; B 20 0 583 532 ;C 123 ; WX 389 ; N braceleft ; B 94 -196 518 722 ;C 124 ; WX 280 ; N bar ; B 36 -225 361 775 ;C 125 ; WX 389 ; N braceright ; B -18 -196 407 722 ;C 126 ; WX 584 ; N asciitilde ; B 115 163 577 343 ;C 161 ; WX 333 ; N exclamdown ; B 50 -186 353 532 ;C 162 ; WX 556 ; N cent ; B 79 -118 599 628 ;C 163 ; WX 556 ; N sterling ; B 50 -16 635 718 ;C 164 ; WX 167 ; N fraction ; B -174 -19 487 710 ;C 165 ; WX 556 ; N yen ; B 60 0 713 698 ;C 166 ; WX 556 ; N florin ; B -50 -210 669 737 ;C 167 ; WX 556 ; N section ; B 61 -184 598 727 ;C 168 ; WX 556 ; N currency ; B 27 76 680 636 ;C 169 ; WX 238 ; N quotesingle ; B 165 447 321 718 ;C 170 ; WX 500 ; N quotedblleft ; B 160 454 588 727 ;C 171 ; WX 556 ; N guillemotleft ; B 135 76 571 484 ;C 172 ; WX 333 ; N guilsinglleft ; B 130 76 353 484 ;C 173 ; WX 333 ; N guilsinglright ; B 99 76 322 484 ;C 174 ; WX 611 ; N fi ; B 87 0 696 727 ;C 175 ; WX 611 ; N fl ; B 87 0 695 727 ;C 177 ; WX 556 ; N endash ; B 48 227 627 333 ;C 178 ; WX 556 ; N dagger ; B 118 -171 626 718 ;C 179 ; WX 556 ; N daggerdbl ; B 46 -171 628 718 ;C 180 ; WX 278 ; N periodcentered ; B 110 172 276 334 ;C 182 ; WX 556 ; N paragraph ; B 98 -191 688 700 ;C 183 ; WX 350 ; N bullet ; B 83 194 420 524 ;C 184 ; WX 278 ; N quotesinglbase ; B 41 -146 236 127 ;C 185 ; WX 500 ; N quotedblbase ; B 36 -146 463 127 ;C 186 ; WX 500 ; N quotedblright ; B 162 445 589 718 ;C 187 ; WX 556 ; N guillemotright ; B 104 76 540 484 ;C 188 ; WX 1000 ; N ellipsis ; B 92 0 939 146 ;C 189 ; WX 1000 ; N perthousand ; B 76 -19 1038 710 ;C 191 ; WX 611 ; N questiondown ; B 53 -195 559 532 ;C 193 ; WX 333 ; N grave ; B 136 604 353 750 ;C 194 ; WX 333 ; N acute ; B 236 604 515 750 ;C 195 ; WX 333 ; N circumflex ; B 118 604 471 750 ;C 196 ; WX 333 ; N tilde ; B 113 610 507 737 ;C 197 ; WX 333 ; N macron ; B 122 604 483 678 ;C 198 ; WX 333 ; N breve ; B 156 604 494 750 ;C 199 ; WX 333 ; N dotaccent ; B 235 614 385 729 ;C 200 ; WX 333 ; N dieresis ; B 137 614 482 729 ;C 202 ; WX 333 ; N ring ; B 200 568 420 776 ;C 203 ; WX 333 ; N cedilla ; B -37 -228 220 0 ;C 205 ; WX 333 ; N hungarumlaut ; B 137 604 645 750 ;C 206 ; WX 333 ; N ogonek ; B 41 -228 264 0 ;C 207 ; WX 333 ; N caron ; B 149 604 502 750 ;C 208 ; WX 1000 ; N emdash ; B 48 227 1071 333 ;C 225 ; WX 1000 ; N AE ; B 5 0 1100 718 ;C 227 ; WX 370 ; N ordfeminine ; B 125 401 465 737 ;C 232 ; WX 611 ; N Lslash ; B 34 0 611 718 ;C 233 ; WX 778 ; N Oslash ; B 35 -27 894 745 ;C 234 ; WX 1000 ; N OE ; B 99 -19 1114 737 ;C 235 ; WX 365 ; N ordmasculine ; B 123 401 485 737 ;C 241 ; WX 889 ; N ae ; B 56 -14 923 546 ;C 245 ; WX 278 ; N dotlessi ; B 69 0 322 532 ;C 248 ; WX 278 ; N lslash ; B 40 0 407 718 ;C 249 ; WX 611 ; N oslash ; B 22 -29 701 560 ;C 250 ; WX 944 ; N oe ; B 82 -14 977 546 ;C 251 ; WX 611 ; N germandbls ; B 69 -14 657 731 ;C -1 ; WX 278 ; N Idieresis ; B 64 0 494 915 ;C -1 ; WX 556 ; N eacute ; B 70 -14 627 750 ;C -1 ; WX 556 ; N abreve ; B 55 -14 606 750 ;C -1 ; WX 611 ; N uhungarumlaut ; B 98 -14 784 750 ;C -1 ; WX 556 ; N ecaron ; B 70 -14 614 750 ;C -1 ; WX 667 ; N Ydieresis ; B 168 0 806 915 ;C -1 ; WX 584 ; N divide ; B 82 -42 610 548 ;C -1 ; WX 667 ; N Yacute ; B 168 0 806 936 ;C -1 ; WX 722 ; N Acircumflex ; B 20 0 706 936 ;C -1 ; WX 556 ; N aacute ; B 55 -14 627 750 ;C -1 ; WX 722 ; N Ucircumflex ; B 116 -19 804 936 ;C -1 ; WX 556 ; N yacute ; B 42 -214 652 750 ;C -1 ; WX 556 ; N scommaaccent ; B 63 -228 584 546 ;C -1 ; WX 556 ; N ecircumflex ; B 70 -14 593 750 ;C -1 ; WX 722 ; N Uring ; B 116 -19 804 962 ;C -1 ; WX 722 ; N Udieresis ; B 116 -19 804 915 ;C -1 ; WX 556 ; N aogonek ; B 55 -224 583 546 ;C -1 ; WX 722 ; N Uacute ; B 116 -19 804 936 ;C -1 ; WX 611 ; N uogonek ; B 98 -228 658 532 ;C -1 ; WX 667 ; N Edieresis ; B 76 0 757 915 ;C -1 ; WX 722 ; N Dcroat ; B 62 0 777 718 ;C -1 ; WX 250 ; N commaaccent ; B 16 -228 188 -50 ;C -1 ; WX 737 ; N copyright ; B 56 -19 835 737 ;C -1 ; WX 667 ; N Emacron ; B 76 0 757 864 ;C -1 ; WX 556 ; N ccaron ; B 79 -14 614 750 ;C -1 ; WX 556 ; N aring ; B 55 -14 583 776 ;C -1 ; WX 722 ; N Ncommaaccent ; B 69 -228 807 718 ;C -1 ; WX 278 ; N lacute ; B 69 0 528 936 ;C -1 ; WX 556 ; N agrave ; B 55 -14 583 750 ;C -1 ; WX 611 ; N Tcommaaccent ; B 140 -228 751 718 ;C -1 ; WX 722 ; N Cacute ; B 107 -19 789 936 ;C -1 ; WX 556 ; N atilde ; B 55 -14 619 737 ;C -1 ; WX 667 ; N Edotaccent ; B 76 0 757 915 ;C -1 ; WX 556 ; N scaron ; B 63 -14 614 750 ;C -1 ; WX 556 ; N scedilla ; B 63 -228 584 546 ;C -1 ; WX 278 ; N iacute ; B 69 0 488 750 ;C -1 ; WX 494 ; N lozenge ; B 90 0 564 745 ;C -1 ; WX 722 ; N Rcaron ; B 76 0 778 936 ;C -1 ; WX 778 ; N Gcommaaccent ; B 108 -228 817 737 ;C -1 ; WX 611 ; N ucircumflex ; B 98 -14 658 750 ;C -1 ; WX 556 ; N acircumflex ; B 55 -14 583 750 ;C -1 ; WX 722 ; N Amacron ; B 20 0 718 864 ;C -1 ; WX 389 ; N rcaron ; B 64 0 530 750 ;C -1 ; WX 556 ; N ccedilla ; B 79 -228 599 546 ;C -1 ; WX 611 ; N Zdotaccent ; B 25 0 737 915 ;C -1 ; WX 667 ; N Thorn ; B 76 0 716 718 ;C -1 ; WX 778 ; N Omacron ; B 107 -19 823 864 ;C -1 ; WX 722 ; N Racute ; B 76 0 778 936 ;C -1 ; WX 667 ; N Sacute ; B 81 -19 722 936 ;C -1 ; WX 743 ; N dcaron ; B 82 -14 903 718 ;C -1 ; WX 722 ; N Umacron ; B 116 -19 804 864 ;C -1 ; WX 611 ; N uring ; B 98 -14 658 776 ;C -1 ; WX 333 ; N threesuperior ; B 91 271 441 710 ;C -1 ; WX 778 ; N Ograve ; B 107 -19 823 936 ;C -1 ; WX 722 ; N Agrave ; B 20 0 702 936 ;C -1 ; WX 722 ; N Abreve ; B 20 0 729 936 ;C -1 ; WX 584 ; N multiply ; B 57 1 635 505 ;C -1 ; WX 611 ; N uacute ; B 98 -14 658 750 ;C -1 ; WX 611 ; N Tcaron ; B 140 0 751 936 ;C -1 ; WX 494 ; N partialdiff ; B 43 -21 585 750 ;C -1 ; WX 556 ; N ydieresis ; B 42 -214 652 729 ;C -1 ; WX 722 ; N Nacute ; B 69 0 807 936 ;C -1 ; WX 278 ; N icircumflex ; B 69 0 444 750 ;C -1 ; WX 667 ; N Ecircumflex ; B 76 0 757 936 ;C -1 ; WX 556 ; N adieresis ; B 55 -14 594 729 ;C -1 ; WX 556 ; N edieresis ; B 70 -14 594 729 ;C -1 ; WX 556 ; N cacute ; B 79 -14 627 750 ;C -1 ; WX 611 ; N nacute ; B 65 0 654 750 ;C -1 ; WX 611 ; N umacron ; B 98 -14 658 678 ;C -1 ; WX 722 ; N Ncaron ; B 69 0 807 936 ;C -1 ; WX 278 ; N Iacute ; B 64 0 528 936 ;C -1 ; WX 584 ; N plusminus ; B 40 0 625 506 ;C -1 ; WX 280 ; N brokenbar ; B 52 -150 345 700 ;C -1 ; WX 737 ; N registered ; B 55 -19 834 737 ;C -1 ; WX 778 ; N Gbreve ; B 108 -19 817 936 ;C -1 ; WX 278 ; N Idotaccent ; B 64 0 397 915 ;C -1 ; WX 600 ; N summation ; B 14 -10 670 706 ;C -1 ; WX 667 ; N Egrave ; B 76 0 757 936 ;C -1 ; WX 389 ; N racute ; B 64 0 543 750 ;C -1 ; WX 611 ; N omacron ; B 82 -14 643 678 ;C -1 ; WX 611 ; N Zacute ; B 25 0 737 936 ;C -1 ; WX 611 ; N Zcaron ; B 25 0 737 936 ;C -1 ; WX 549 ; N greaterequal ; B 26 0 629 704 ;C -1 ; WX 722 ; N Eth ; B 62 0 777 718 ;C -1 ; WX 722 ; N Ccedilla ; B 107 -228 789 737 ;C -1 ; WX 278 ; N lcommaaccent ; B 30 -228 362 718 ;C -1 ; WX 389 ; N tcaron ; B 100 -6 608 878 ;C -1 ; WX 556 ; N eogonek ; B 70 -228 593 546 ;C -1 ; WX 722 ; N Uogonek ; B 116 -228 804 718 ;C -1 ; WX 722 ; N Aacute ; B 20 0 750 936 ;C -1 ; WX 722 ; N Adieresis ; B 20 0 716 915 ;C -1 ; WX 556 ; N egrave ; B 70 -14 593 750 ;C -1 ; WX 500 ; N zacute ; B 20 0 599 750 ;C -1 ; WX 278 ; N iogonek ; B -14 -224 363 725 ;C -1 ; WX 778 ; N Oacute ; B 107 -19 823 936 ;C -1 ; WX 611 ; N oacute ; B 82 -14 654 750 ;C -1 ; WX 556 ; N amacron ; B 55 -14 595 678 ;C -1 ; WX 556 ; N sacute ; B 63 -14 627 750 ;C -1 ; WX 278 ; N idieresis ; B 69 0 455 729 ;C -1 ; WX 778 ; N Ocircumflex ; B 107 -19 823 936 ;C -1 ; WX 722 ; N Ugrave ; B 116 -19 804 936 ;C -1 ; WX 612 ; N Delta ; B 6 0 608 688 ;C -1 ; WX 611 ; N thorn ; B 18 -208 645 718 ;C -1 ; WX 333 ; N twosuperior ; B 69 283 449 710 ;C -1 ; WX 778 ; N Odieresis ; B 107 -19 823 915 ;C -1 ; WX 611 ; N mu ; B 22 -207 658 532 ;C -1 ; WX 278 ; N igrave ; B 69 0 326 750 ;C -1 ; WX 611 ; N ohungarumlaut ; B 82 -14 784 750 ;C -1 ; WX 667 ; N Eogonek ; B 76 -224 757 718 ;C -1 ; WX 611 ; N dcroat ; B 82 -14 789 718 ;C -1 ; WX 834 ; N threequarters ; B 99 -19 839 710 ;C -1 ; WX 667 ; N Scedilla ; B 81 -228 718 737 ;C -1 ; WX 400 ; N lcaron ; B 69 0 561 718 ;C -1 ; WX 722 ; N Kcommaaccent ; B 87 -228 858 718 ;C -1 ; WX 611 ; N Lacute ; B 76 0 611 936 ;C -1 ; WX 1000 ; N trademark ; B 179 306 1109 718 ;C -1 ; WX 556 ; N edotaccent ; B 70 -14 593 729 ;C -1 ; WX 278 ; N Igrave ; B 64 0 367 936 ;C -1 ; WX 278 ; N Imacron ; B 64 0 496 864 ;C -1 ; WX 611 ; N Lcaron ; B 76 0 643 718 ;C -1 ; WX 834 ; N onehalf ; B 132 -19 858 710 ;C -1 ; WX 549 ; N lessequal ; B 29 0 676 704 ;C -1 ; WX 611 ; N ocircumflex ; B 82 -14 643 750 ;C -1 ; WX 611 ; N ntilde ; B 65 0 646 737 ;C -1 ; WX 722 ; N Uhungarumlaut ; B 116 -19 880 936 ;C -1 ; WX 667 ; N Eacute ; B 76 0 757 936 ;C -1 ; WX 556 ; N emacron ; B 70 -14 595 678 ;C -1 ; WX 611 ; N gbreve ; B 38 -217 666 750 ;C -1 ; WX 834 ; N onequarter ; B 132 -19 806 710 ;C -1 ; WX 667 ; N Scaron ; B 81 -19 718 936 ;C -1 ; WX 667 ; N Scommaaccent ; B 81 -228 718 737 ;C -1 ; WX 778 ; N Ohungarumlaut ; B 107 -19 908 936 ;C -1 ; WX 400 ; N degree ; B 175 426 467 712 ;C -1 ; WX 611 ; N ograve ; B 82 -14 643 750 ;C -1 ; WX 722 ; N Ccaron ; B 107 -19 789 936 ;C -1 ; WX 611 ; N ugrave ; B 98 -14 658 750 ;C -1 ; WX 549 ; N radical ; B 112 -46 689 850 ;C -1 ; WX 722 ; N Dcaron ; B 76 0 777 936 ;C -1 ; WX 389 ; N rcommaaccent ; B 26 -228 489 546 ;C -1 ; WX 722 ; N Ntilde ; B 69 0 807 923 ;C -1 ; WX 611 ; N otilde ; B 82 -14 646 737 ;C -1 ; WX 722 ; N Rcommaaccent ; B 76 -228 778 718 ;C -1 ; WX 611 ; N Lcommaaccent ; B 76 -228 611 718 ;C -1 ; WX 722 ; N Atilde ; B 20 0 741 923 ;C -1 ; WX 722 ; N Aogonek ; B 20 -224 702 718 ;C -1 ; WX 722 ; N Aring ; B 20 0 702 962 ;C -1 ; WX 778 ; N Otilde ; B 107 -19 823 923 ;C -1 ; WX 500 ; N zdotaccent ; B 20 0 583 729 ;C -1 ; WX 667 ; N Ecaron ; B 76 0 757 936 ;C -1 ; WX 278 ; N Iogonek ; B -41 -228 367 718 ;C -1 ; WX 556 ; N kcommaaccent ; B 69 -228 670 718 ;C -1 ; WX 584 ; N minus ; B 82 197 610 309 ;C -1 ; WX 278 ; N Icircumflex ; B 64 0 484 936 ;C -1 ; WX 611 ; N ncaron ; B 65 0 641 750 ;C -1 ; WX 333 ; N tcommaaccent ; B 58 -228 422 676 ;C -1 ; WX 584 ; N logicalnot ; B 105 108 633 419 ;C -1 ; WX 611 ; N odieresis ; B 82 -14 643 729 ;C -1 ; WX 611 ; N udieresis ; B 98 -14 658 729 ;C -1 ; WX 549 ; N notequal ; B 32 -49 630 570 ;C -1 ; WX 611 ; N gcommaaccent ; B 38 -217 666 850 ;C -1 ; WX 611 ; N eth ; B 82 -14 670 737 ;C -1 ; WX 500 ; N zcaron ; B 20 0 586 750 ;C -1 ; WX 611 ; N ncommaaccent ; B 65 -228 629 546 ;C -1 ; WX 333 ; N onesuperior ; B 148 283 388 710 ;C -1 ; WX 278 ; N imacron ; B 69 0 429 678 ;C -1 ; WX 556 ; N Euro ; B 0 0 0 0 ;EndCharMetricsStartKernDataStartKernPairs 2481KPX A C -40KPX A Cacute -40KPX A Ccaron -40KPX A Ccedilla -40KPX A G -50KPX A Gbreve -50KPX A Gcommaaccent -50KPX A O -40KPX A Oacute -40KPX A Ocircumflex -40KPX A Odieresis -40KPX A Ograve -40KPX A Ohungarumlaut -40KPX A Omacron -40KPX A Oslash -40KPX A Otilde -40KPX A Q -40KPX A T -90KPX A Tcaron -90KPX A Tcommaaccent -90KPX A U -50KPX A Uacute -50KPX A Ucircumflex -50KPX A Udieresis -50KPX A Ugrave -50KPX A Uhungarumlaut -50KPX A Umacron -50KPX A Uogonek -50KPX A Uring -50KPX A V -80KPX A W -60KPX A Y -110KPX A Yacute -110KPX A Ydieresis -110KPX A u -30KPX A uacute -30KPX A ucircumflex -30KPX A udieresis -30KPX A ugrave -30KPX A uhungarumlaut -30KPX A umacron -30KPX A uogonek -30KPX A uring -30KPX A v -40KPX A w -30KPX A y -30KPX A yacute -30KPX A ydieresis -30KPX Aacute C -40KPX Aacute Cacute -40KPX Aacute Ccaron -40KPX Aacute Ccedilla -40KPX Aacute G -50KPX Aacute Gbreve -50KPX Aacute Gcommaaccent -50KPX Aacute O -40KPX Aacute Oacute -40KPX Aacute Ocircumflex -40KPX Aacute Odieresis -40KPX Aacute Ograve -40KPX Aacute Ohungarumlaut -40KPX Aacute Omacron -40KPX Aacute Oslash -40KPX Aacute Otilde -40KPX Aacute Q -40KPX Aacute T -90KPX Aacute Tcaron -90KPX Aacute Tcommaaccent -90KPX Aacute U -50KPX Aacute Uacute -50KPX Aacute Ucircumflex -50KPX Aacute Udieresis -50KPX Aacute Ugrave -50KPX Aacute Uhungarumlaut -50KPX Aacute Umacron -50KPX Aacute Uogonek -50KPX Aacute Uring -50KPX Aacute V -80KPX Aacute W -60KPX Aacute Y -110KPX Aacute Yacute -110KPX Aacute Ydieresis -110KPX Aacute u -30KPX Aacute uacute -30KPX Aacute ucircumflex -30KPX Aacute udieresis -30KPX Aacute ugrave -30KPX Aacute uhungarumlaut -30KPX Aacute umacron -30KPX Aacute uogonek -30KPX Aacute uring -30KPX Aacute v -40KPX Aacute w -30KPX Aacute y -30KPX Aacute yacute -30KPX Aacute ydieresis -30KPX Abreve C -40KPX Abreve Cacute -40KPX Abreve Ccaron -40KPX Abreve Ccedilla -40KPX Abreve G -50KPX Abreve Gbreve -50KPX Abreve Gcommaaccent -50KPX Abreve O -40KPX Abreve Oacute -40KPX Abreve Ocircumflex -40KPX Abreve Odieresis -40KPX Abreve Ograve -40KPX Abreve Ohungarumlaut -40KPX Abreve Omacron -40KPX Abreve Oslash -40KPX Abreve Otilde -40KPX Abreve Q -40KPX Abreve T -90KPX Abreve Tcaron -90KPX Abreve Tcommaaccent -90KPX Abreve U -50KPX Abreve Uacute -50KPX Abreve Ucircumflex -50KPX Abreve Udieresis -50KPX Abreve Ugrave -50KPX Abreve Uhungarumlaut -50KPX Abreve Umacron -50KPX Abreve Uogonek -50KPX Abreve Uring -50KPX Abreve V -80KPX Abreve W -60KPX Abreve Y -110KPX Abreve Yacute -110KPX Abreve Ydieresis -110KPX Abreve u -30KPX Abreve uacute -30KPX Abreve ucircumflex -30KPX Abreve udieresis -30KPX Abreve ugrave -30KPX Abreve uhungarumlaut -30KPX Abreve umacron -30KPX Abreve uogonek -30KPX Abreve uring -30KPX Abreve v -40KPX Abreve w -30KPX Abreve y -30KPX Abreve yacute -30KPX Abreve ydieresis -30KPX Acircumflex C -40KPX Acircumflex Cacute -40KPX Acircumflex Ccaron -40KPX Acircumflex Ccedilla -40KPX Acircumflex G -50KPX Acircumflex Gbreve -50KPX Acircumflex Gcommaaccent -50KPX Acircumflex O -40KPX Acircumflex Oacute -40KPX Acircumflex Ocircumflex -40KPX Acircumflex Odieresis -40KPX Acircumflex Ograve -40KPX Acircumflex Ohungarumlaut -40KPX Acircumflex Omacron -40KPX Acircumflex Oslash -40KPX Acircumflex Otilde -40KPX Acircumflex Q -40KPX Acircumflex T -90KPX Acircumflex Tcaron -90KPX Acircumflex Tcommaaccent -90KPX Acircumflex U -50KPX Acircumflex Uacute -50KPX Acircumflex Ucircumflex -50KPX Acircumflex Udieresis -50KPX Acircumflex Ugrave -50KPX Acircumflex Uhungarumlaut -50KPX Acircumflex Umacron -50KPX Acircumflex Uogonek -50KPX Acircumflex Uring -50KPX Acircumflex V -80KPX Acircumflex W -60KPX Acircumflex Y -110KPX Acircumflex Yacute -110KPX Acircumflex Ydieresis -110KPX Acircumflex u -30KPX Acircumflex uacute -30KPX Acircumflex ucircumflex -30KPX Acircumflex udieresis -30KPX Acircumflex ugrave -30KPX Acircumflex uhungarumlaut -30KPX Acircumflex umacron -30KPX Acircumflex uogonek -30KPX Acircumflex uring -30KPX Acircumflex v -40KPX Acircumflex w -30KPX Acircumflex y -30KPX Acircumflex yacute -30KPX Acircumflex ydieresis -30KPX Adieresis C -40KPX Adieresis Cacute -40KPX Adieresis Ccaron -40KPX Adieresis Ccedilla -40KPX Adieresis G -50KPX Adieresis Gbreve -50KPX Adieresis Gcommaaccent -50KPX Adieresis O -40KPX Adieresis Oacute -40KPX Adieresis Ocircumflex -40KPX Adieresis Odieresis -40KPX Adieresis Ograve -40KPX Adieresis Ohungarumlaut -40KPX Adieresis Omacron -40KPX Adieresis Oslash -40KPX Adieresis Otilde -40KPX Adieresis Q -40KPX Adieresis T -90KPX Adieresis Tcaron -90KPX Adieresis Tcommaaccent -90KPX Adieresis U -50KPX Adieresis Uacute -50KPX Adieresis Ucircumflex -50KPX Adieresis Udieresis -50KPX Adieresis Ugrave -50KPX Adieresis Uhungarumlaut -50KPX Adieresis Umacron -50KPX Adieresis Uogonek -50KPX Adieresis Uring -50KPX Adieresis V -80KPX Adieresis W -60KPX Adieresis Y -110KPX Adieresis Yacute -110KPX Adieresis Ydieresis -110KPX Adieresis u -30KPX Adieresis uacute -30KPX Adieresis ucircumflex -30KPX Adieresis udieresis -30KPX Adieresis ugrave -30KPX Adieresis uhungarumlaut -30KPX Adieresis umacron -30KPX Adieresis uogonek -30KPX Adieresis uring -30KPX Adieresis v -40KPX Adieresis w -30KPX Adieresis y -30KPX Adieresis yacute -30KPX Adieresis ydieresis -30KPX Agrave C -40KPX Agrave Cacute -40KPX Agrave Ccaron -40KPX Agrave Ccedilla -40KPX Agrave G -50KPX Agrave Gbreve -50KPX Agrave Gcommaaccent -50KPX Agrave O -40KPX Agrave Oacute -40KPX Agrave Ocircumflex -40KPX Agrave Odieresis -40KPX Agrave Ograve -40KPX Agrave Ohungarumlaut -40KPX Agrave Omacron -40KPX Agrave Oslash -40KPX Agrave Otilde -40KPX Agrave Q -40KPX Agrave T -90KPX Agrave Tcaron -90KPX Agrave Tcommaaccent -90KPX Agrave U -50KPX Agrave Uacute -50KPX Agrave Ucircumflex -50KPX Agrave Udieresis -50KPX Agrave Ugrave -50KPX Agrave Uhungarumlaut -50KPX Agrave Umacron -50KPX Agrave Uogonek -50KPX Agrave Uring -50KPX Agrave V -80KPX Agrave W -60KPX Agrave Y -110KPX Agrave Yacute -110KPX Agrave Ydieresis -110KPX Agrave u -30KPX Agrave uacute -30KPX Agrave ucircumflex -30KPX Agrave udieresis -30KPX Agrave ugrave -30KPX Agrave uhungarumlaut -30KPX Agrave umacron -30KPX Agrave uogonek -30KPX Agrave uring -30KPX Agrave v -40KPX Agrave w -30KPX Agrave y -30KPX Agrave yacute -30KPX Agrave ydieresis -30KPX Amacron C -40KPX Amacron Cacute -40KPX Amacron Ccaron -40KPX Amacron Ccedilla -40KPX Amacron G -50KPX Amacron Gbreve -50KPX Amacron Gcommaaccent -50KPX Amacron O -40KPX Amacron Oacute -40KPX Amacron Ocircumflex -40KPX Amacron Odieresis -40KPX Amacron Ograve -40KPX Amacron Ohungarumlaut -40KPX Amacron Omacron -40KPX Amacron Oslash -40KPX Amacron Otilde -40KPX Amacron Q -40KPX Amacron T -90KPX Amacron Tcaron -90KPX Amacron Tcommaaccent -90KPX Amacron U -50KPX Amacron Uacute -50KPX Amacron Ucircumflex -50KPX Amacron Udieresis -50KPX Amacron Ugrave -50KPX Amacron Uhungarumlaut -50KPX Amacron Umacron -50KPX Amacron Uogonek -50KPX Amacron Uring -50KPX Amacron V -80KPX Amacron W -60KPX Amacron Y -110KPX Amacron Yacute -110KPX Amacron Ydieresis -110KPX Amacron u -30KPX Amacron uacute -30KPX Amacron ucircumflex -30KPX Amacron udieresis -30KPX Amacron ugrave -30KPX Amacron uhungarumlaut -30KPX Amacron umacron -30KPX Amacron uogonek -30KPX Amacron uring -30KPX Amacron v -40KPX Amacron w -30KPX Amacron y -30KPX Amacron yacute -30KPX Amacron ydieresis -30KPX Aogonek C -40KPX Aogonek Cacute -40KPX Aogonek Ccaron -40KPX Aogonek Ccedilla -40KPX Aogonek G -50KPX Aogonek Gbreve -50KPX Aogonek Gcommaaccent -50KPX Aogonek O -40KPX Aogonek Oacute -40KPX Aogonek Ocircumflex -40KPX Aogonek Odieresis -40KPX Aogonek Ograve -40KPX Aogonek Ohungarumlaut -40KPX Aogonek Omacron -40KPX Aogonek Oslash -40KPX Aogonek Otilde -40KPX Aogonek Q -40KPX Aogonek T -90KPX Aogonek Tcaron -90KPX Aogonek Tcommaaccent -90KPX Aogonek U -50KPX Aogonek Uacute -50KPX Aogonek Ucircumflex -50KPX Aogonek Udieresis -50KPX Aogonek Ugrave -50KPX Aogonek Uhungarumlaut -50KPX Aogonek Umacron -50KPX Aogonek Uogonek -50KPX Aogonek Uring -50KPX Aogonek V -80KPX Aogonek W -60KPX Aogonek Y -110KPX Aogonek Yacute -110KPX Aogonek Ydieresis -110KPX Aogonek u -30KPX Aogonek uacute -30KPX Aogonek ucircumflex -30KPX Aogonek udieresis -30KPX Aogonek ugrave -30KPX Aogonek uhungarumlaut -30KPX Aogonek umacron -30KPX Aogonek uogonek -30KPX Aogonek uring -30KPX Aogonek v -40KPX Aogonek w -30KPX Aogonek y -30KPX Aogonek yacute -30KPX Aogonek ydieresis -30KPX Aring C -40KPX Aring Cacute -40KPX Aring Ccaron -40KPX Aring Ccedilla -40KPX Aring G -50KPX Aring Gbreve -50KPX Aring Gcommaaccent -50KPX Aring O -40KPX Aring Oacute -40KPX Aring Ocircumflex -40KPX Aring Odieresis -40KPX Aring Ograve -40KPX Aring Ohungarumlaut -40KPX Aring Omacron -40KPX Aring Oslash -40KPX Aring Otilde -40KPX Aring Q -40KPX Aring T -90KPX Aring Tcaron -90KPX Aring Tcommaaccent -90KPX Aring U -50KPX Aring Uacute -50KPX Aring Ucircumflex -50KPX Aring Udieresis -50KPX Aring Ugrave -50KPX Aring Uhungarumlaut -50KPX Aring Umacron -50KPX Aring Uogonek -50KPX Aring Uring -50KPX Aring V -80KPX Aring W -60KPX Aring Y -110KPX Aring Yacute -110KPX Aring Ydieresis -110KPX Aring u -30KPX Aring uacute -30KPX Aring ucircumflex -30KPX Aring udieresis -30KPX Aring ugrave -30KPX Aring uhungarumlaut -30KPX Aring umacron -30KPX Aring uogonek -30KPX Aring uring -30KPX Aring v -40KPX Aring w -30KPX Aring y -30KPX Aring yacute -30KPX Aring ydieresis -30KPX Atilde C -40KPX Atilde Cacute -40KPX Atilde Ccaron -40KPX Atilde Ccedilla -40KPX Atilde G -50KPX Atilde Gbreve -50KPX Atilde Gcommaaccent -50KPX Atilde O -40KPX Atilde Oacute -40KPX Atilde Ocircumflex -40KPX Atilde Odieresis -40KPX Atilde Ograve -40KPX Atilde Ohungarumlaut -40KPX Atilde Omacron -40KPX Atilde Oslash -40KPX Atilde Otilde -40KPX Atilde Q -40KPX Atilde T -90KPX Atilde Tcaron -90KPX Atilde Tcommaaccent -90KPX Atilde U -50KPX Atilde Uacute -50KPX Atilde Ucircumflex -50KPX Atilde Udieresis -50KPX Atilde Ugrave -50KPX Atilde Uhungarumlaut -50KPX Atilde Umacron -50KPX Atilde Uogonek -50KPX Atilde Uring -50KPX Atilde V -80KPX Atilde W -60KPX Atilde Y -110KPX Atilde Yacute -110KPX Atilde Ydieresis -110KPX Atilde u -30KPX Atilde uacute -30KPX Atilde ucircumflex -30KPX Atilde udieresis -30KPX Atilde ugrave -30KPX Atilde uhungarumlaut -30KPX Atilde umacron -30KPX Atilde uogonek -30KPX Atilde uring -30KPX Atilde v -40KPX Atilde w -30KPX Atilde y -30KPX Atilde yacute -30KPX Atilde ydieresis -30KPX B A -30KPX B Aacute -30KPX B Abreve -30KPX B Acircumflex -30KPX B Adieresis -30KPX B Agrave -30KPX B Amacron -30KPX B Aogonek -30KPX B Aring -30KPX B Atilde -30KPX B U -10KPX B Uacute -10KPX B Ucircumflex -10KPX B Udieresis -10KPX B Ugrave -10KPX B Uhungarumlaut -10KPX B Umacron -10KPX B Uogonek -10KPX B Uring -10KPX D A -40KPX D Aacute -40KPX D Abreve -40KPX D Acircumflex -40KPX D Adieresis -40KPX D Agrave -40KPX D Amacron -40KPX D Aogonek -40KPX D Aring -40KPX D Atilde -40KPX D V -40KPX D W -40KPX D Y -70KPX D Yacute -70KPX D Ydieresis -70KPX D comma -30KPX D period -30KPX Dcaron A -40KPX Dcaron Aacute -40KPX Dcaron Abreve -40KPX Dcaron Acircumflex -40KPX Dcaron Adieresis -40KPX Dcaron Agrave -40KPX Dcaron Amacron -40KPX Dcaron Aogonek -40KPX Dcaron Aring -40KPX Dcaron Atilde -40KPX Dcaron V -40KPX Dcaron W -40KPX Dcaron Y -70KPX Dcaron Yacute -70KPX Dcaron Ydieresis -70KPX Dcaron comma -30KPX Dcaron period -30KPX Dcroat A -40KPX Dcroat Aacute -40KPX Dcroat Abreve -40KPX Dcroat Acircumflex -40KPX Dcroat Adieresis -40KPX Dcroat Agrave -40KPX Dcroat Amacron -40KPX Dcroat Aogonek -40KPX Dcroat Aring -40KPX Dcroat Atilde -40KPX Dcroat V -40KPX Dcroat W -40KPX Dcroat Y -70KPX Dcroat Yacute -70KPX Dcroat Ydieresis -70KPX Dcroat comma -30KPX Dcroat period -30KPX F A -80KPX F Aacute -80KPX F Abreve -80KPX F Acircumflex -80KPX F Adieresis -80KPX F Agrave -80KPX F Amacron -80KPX F Aogonek -80KPX F Aring -80KPX F Atilde -80KPX F a -20KPX F aacute -20KPX F abreve -20KPX F acircumflex -20KPX F adieresis -20KPX F agrave -20KPX F amacron -20KPX F aogonek -20KPX F aring -20KPX F atilde -20KPX F comma -100KPX F period -100KPX J A -20KPX J Aacute -20KPX J Abreve -20KPX J Acircumflex -20KPX J Adieresis -20KPX J Agrave -20KPX J Amacron -20KPX J Aogonek -20KPX J Aring -20KPX J Atilde -20KPX J comma -20KPX J period -20KPX J u -20KPX J uacute -20KPX J ucircumflex -20KPX J udieresis -20KPX J ugrave -20KPX J uhungarumlaut -20KPX J umacron -20KPX J uogonek -20KPX J uring -20KPX K O -30KPX K Oacute -30KPX K Ocircumflex -30KPX K Odieresis -30KPX K Ograve -30KPX K Ohungarumlaut -30KPX K Omacron -30KPX K Oslash -30KPX K Otilde -30KPX K e -15KPX K eacute -15KPX K ecaron -15KPX K ecircumflex -15KPX K edieresis -15KPX K edotaccent -15KPX K egrave -15KPX K emacron -15KPX K eogonek -15KPX K o -35KPX K oacute -35KPX K ocircumflex -35KPX K odieresis -35KPX K ograve -35KPX K ohungarumlaut -35KPX K omacron -35KPX K oslash -35KPX K otilde -35KPX K u -30KPX K uacute -30KPX K ucircumflex -30KPX K udieresis -30KPX K ugrave -30KPX K uhungarumlaut -30KPX K umacron -30KPX K uogonek -30KPX K uring -30KPX K y -40KPX K yacute -40KPX K ydieresis -40KPX Kcommaaccent O -30KPX Kcommaaccent Oacute -30KPX Kcommaaccent Ocircumflex -30KPX Kcommaaccent Odieresis -30KPX Kcommaaccent Ograve -30KPX Kcommaaccent Ohungarumlaut -30KPX Kcommaaccent Omacron -30KPX Kcommaaccent Oslash -30KPX Kcommaaccent Otilde -30KPX Kcommaaccent e -15KPX Kcommaaccent eacute -15KPX Kcommaaccent ecaron -15KPX Kcommaaccent ecircumflex -15KPX Kcommaaccent edieresis -15KPX Kcommaaccent edotaccent -15KPX Kcommaaccent egrave -15KPX Kcommaaccent emacron -15KPX Kcommaaccent eogonek -15KPX Kcommaaccent o -35KPX Kcommaaccent oacute -35KPX Kcommaaccent ocircumflex -35KPX Kcommaaccent odieresis -35KPX Kcommaaccent ograve -35KPX Kcommaaccent ohungarumlaut -35KPX Kcommaaccent omacron -35KPX Kcommaaccent oslash -35KPX Kcommaaccent otilde -35KPX Kcommaaccent u -30KPX Kcommaaccent uacute -30KPX Kcommaaccent ucircumflex -30KPX Kcommaaccent udieresis -30KPX Kcommaaccent ugrave -30KPX Kcommaaccent uhungarumlaut -30KPX Kcommaaccent umacron -30KPX Kcommaaccent uogonek -30KPX Kcommaaccent uring -30KPX Kcommaaccent y -40KPX Kcommaaccent yacute -40KPX Kcommaaccent ydieresis -40KPX L T -90KPX L Tcaron -90KPX L Tcommaaccent -90KPX L V -110KPX L W -80KPX L Y -120KPX L Yacute -120KPX L Ydieresis -120KPX L quotedblright -140KPX L quoteright -140KPX L y -30KPX L yacute -30KPX L ydieresis -30KPX Lacute T -90KPX Lacute Tcaron -90KPX Lacute Tcommaaccent -90KPX Lacute V -110KPX Lacute W -80KPX Lacute Y -120KPX Lacute Yacute -120KPX Lacute Ydieresis -120KPX Lacute quotedblright -140KPX Lacute quoteright -140KPX Lacute y -30KPX Lacute yacute -30KPX Lacute ydieresis -30KPX Lcommaaccent T -90KPX Lcommaaccent Tcaron -90KPX Lcommaaccent Tcommaaccent -90KPX Lcommaaccent V -110KPX Lcommaaccent W -80KPX Lcommaaccent Y -120KPX Lcommaaccent Yacute -120KPX Lcommaaccent Ydieresis -120KPX Lcommaaccent quotedblright -140KPX Lcommaaccent quoteright -140KPX Lcommaaccent y -30KPX Lcommaaccent yacute -30KPX Lcommaaccent ydieresis -30KPX Lslash T -90KPX Lslash Tcaron -90KPX Lslash Tcommaaccent -90KPX Lslash V -110KPX Lslash W -80KPX Lslash Y -120KPX Lslash Yacute -120KPX Lslash Ydieresis -120KPX Lslash quotedblright -140KPX Lslash quoteright -140KPX Lslash y -30KPX Lslash yacute -30KPX Lslash ydieresis -30KPX O A -50KPX O Aacute -50KPX O Abreve -50KPX O Acircumflex -50KPX O Adieresis -50KPX O Agrave -50KPX O Amacron -50KPX O Aogonek -50KPX O Aring -50KPX O Atilde -50KPX O T -40KPX O Tcaron -40KPX O Tcommaaccent -40KPX O V -50KPX O W -50KPX O X -50KPX O Y -70KPX O Yacute -70KPX O Ydieresis -70KPX O comma -40KPX O period -40KPX Oacute A -50KPX Oacute Aacute -50KPX Oacute Abreve -50KPX Oacute Acircumflex -50KPX Oacute Adieresis -50KPX Oacute Agrave -50KPX Oacute Amacron -50KPX Oacute Aogonek -50KPX Oacute Aring -50KPX Oacute Atilde -50KPX Oacute T -40KPX Oacute Tcaron -40KPX Oacute Tcommaaccent -40KPX Oacute V -50KPX Oacute W -50KPX Oacute X -50KPX Oacute Y -70KPX Oacute Yacute -70KPX Oacute Ydieresis -70KPX Oacute comma -40KPX Oacute period -40KPX Ocircumflex A -50KPX Ocircumflex Aacute -50KPX Ocircumflex Abreve -50KPX Ocircumflex Acircumflex -50KPX Ocircumflex Adieresis -50KPX Ocircumflex Agrave -50KPX Ocircumflex Amacron -50KPX Ocircumflex Aogonek -50KPX Ocircumflex Aring -50KPX Ocircumflex Atilde -50KPX Ocircumflex T -40KPX Ocircumflex Tcaron -40KPX Ocircumflex Tcommaaccent -40KPX Ocircumflex V -50KPX Ocircumflex W -50KPX Ocircumflex X -50KPX Ocircumflex Y -70KPX Ocircumflex Yacute -70KPX Ocircumflex Ydieresis -70KPX Ocircumflex comma -40KPX Ocircumflex period -40KPX Odieresis A -50KPX Odieresis Aacute -50KPX Odieresis Abreve -50KPX Odieresis Acircumflex -50KPX Odieresis Adieresis -50KPX Odieresis Agrave -50KPX Odieresis Amacron -50KPX Odieresis Aogonek -50KPX Odieresis Aring -50KPX Odieresis Atilde -50KPX Odieresis T -40KPX Odieresis Tcaron -40KPX Odieresis Tcommaaccent -40KPX Odieresis V -50KPX Odieresis W -50KPX Odieresis X -50KPX Odieresis Y -70KPX Odieresis Yacute -70KPX Odieresis Ydieresis -70KPX Odieresis comma -40KPX Odieresis period -40KPX Ograve A -50KPX Ograve Aacute -50KPX Ograve Abreve -50KPX Ograve Acircumflex -50KPX Ograve Adieresis -50KPX Ograve Agrave -50KPX Ograve Amacron -50KPX Ograve Aogonek -50KPX Ograve Aring -50KPX Ograve Atilde -50KPX Ograve T -40KPX Ograve Tcaron -40KPX Ograve Tcommaaccent -40KPX Ograve V -50KPX Ograve W -50KPX Ograve X -50KPX Ograve Y -70KPX Ograve Yacute -70KPX Ograve Ydieresis -70KPX Ograve comma -40KPX Ograve period -40KPX Ohungarumlaut A -50KPX Ohungarumlaut Aacute -50KPX Ohungarumlaut Abreve -50KPX Ohungarumlaut Acircumflex -50KPX Ohungarumlaut Adieresis -50KPX Ohungarumlaut Agrave -50KPX Ohungarumlaut Amacron -50KPX Ohungarumlaut Aogonek -50KPX Ohungarumlaut Aring -50KPX Ohungarumlaut Atilde -50KPX Ohungarumlaut T -40KPX Ohungarumlaut Tcaron -40KPX Ohungarumlaut Tcommaaccent -40KPX Ohungarumlaut V -50KPX Ohungarumlaut W -50KPX Ohungarumlaut X -50KPX Ohungarumlaut Y -70KPX Ohungarumlaut Yacute -70KPX Ohungarumlaut Ydieresis -70KPX Ohungarumlaut comma -40KPX Ohungarumlaut period -40KPX Omacron A -50KPX Omacron Aacute -50KPX Omacron Abreve -50KPX Omacron Acircumflex -50KPX Omacron Adieresis -50KPX Omacron Agrave -50KPX Omacron Amacron -50KPX Omacron Aogonek -50KPX Omacron Aring -50KPX Omacron Atilde -50KPX Omacron T -40KPX Omacron Tcaron -40KPX Omacron Tcommaaccent -40KPX Omacron V -50KPX Omacron W -50KPX Omacron X -50KPX Omacron Y -70KPX Omacron Yacute -70KPX Omacron Ydieresis -70KPX Omacron comma -40KPX Omacron period -40KPX Oslash A -50KPX Oslash Aacute -50KPX Oslash Abreve -50KPX Oslash Acircumflex -50KPX Oslash Adieresis -50KPX Oslash Agrave -50KPX Oslash Amacron -50KPX Oslash Aogonek -50KPX Oslash Aring -50KPX Oslash Atilde -50KPX Oslash T -40KPX Oslash Tcaron -40KPX Oslash Tcommaaccent -40KPX Oslash V -50KPX Oslash W -50KPX Oslash X -50KPX Oslash Y -70KPX Oslash Yacute -70KPX Oslash Ydieresis -70KPX Oslash comma -40KPX Oslash period -40KPX Otilde A -50KPX Otilde Aacute -50KPX Otilde Abreve -50KPX Otilde Acircumflex -50KPX Otilde Adieresis -50KPX Otilde Agrave -50KPX Otilde Amacron -50KPX Otilde Aogonek -50KPX Otilde Aring -50KPX Otilde Atilde -50KPX Otilde T -40KPX Otilde Tcaron -40KPX Otilde Tcommaaccent -40KPX Otilde V -50KPX Otilde W -50KPX Otilde X -50KPX Otilde Y -70KPX Otilde Yacute -70KPX Otilde Ydieresis -70KPX Otilde comma -40KPX Otilde period -40KPX P A -100KPX P Aacute -100KPX P Abreve -100KPX P Acircumflex -100KPX P Adieresis -100KPX P Agrave -100KPX P Amacron -100KPX P Aogonek -100KPX P Aring -100KPX P Atilde -100KPX P a -30KPX P aacute -30KPX P abreve -30KPX P acircumflex -30KPX P adieresis -30KPX P agrave -30KPX P amacron -30KPX P aogonek -30KPX P aring -30KPX P atilde -30KPX P comma -120KPX P e -30KPX P eacute -30KPX P ecaron -30KPX P ecircumflex -30KPX P edieresis -30KPX P edotaccent -30KPX P egrave -30KPX P emacron -30KPX P eogonek -30KPX P o -40KPX P oacute -40KPX P ocircumflex -40KPX P odieresis -40KPX P ograve -40KPX P ohungarumlaut -40KPX P omacron -40KPX P oslash -40KPX P otilde -40KPX P period -120KPX Q U -10KPX Q Uacute -10KPX Q Ucircumflex -10KPX Q Udieresis -10KPX Q Ugrave -10KPX Q Uhungarumlaut -10KPX Q Umacron -10KPX Q Uogonek -10KPX Q Uring -10KPX Q comma 20KPX Q period 20KPX R O -20KPX R Oacute -20KPX R Ocircumflex -20KPX R Odieresis -20KPX R Ograve -20KPX R Ohungarumlaut -20KPX R Omacron -20KPX R Oslash -20KPX R Otilde -20KPX R T -20KPX R Tcaron -20KPX R Tcommaaccent -20KPX R U -20KPX R Uacute -20KPX R Ucircumflex -20KPX R Udieresis -20KPX R Ugrave -20KPX R Uhungarumlaut -20KPX R Umacron -20KPX R Uogonek -20KPX R Uring -20KPX R V -50KPX R W -40KPX R Y -50KPX R Yacute -50KPX R Ydieresis -50KPX Racute O -20KPX Racute Oacute -20KPX Racute Ocircumflex -20KPX Racute Odieresis -20KPX Racute Ograve -20KPX Racute Ohungarumlaut -20KPX Racute Omacron -20KPX Racute Oslash -20KPX Racute Otilde -20KPX Racute T -20KPX Racute Tcaron -20KPX Racute Tcommaaccent -20KPX Racute U -20KPX Racute Uacute -20KPX Racute Ucircumflex -20KPX Racute Udieresis -20KPX Racute Ugrave -20KPX Racute Uhungarumlaut -20KPX Racute Umacron -20KPX Racute Uogonek -20KPX Racute Uring -20KPX Racute V -50KPX Racute W -40KPX Racute Y -50KPX Racute Yacute -50KPX Racute Ydieresis -50KPX Rcaron O -20KPX Rcaron Oacute -20KPX Rcaron Ocircumflex -20KPX Rcaron Odieresis -20KPX Rcaron Ograve -20KPX Rcaron Ohungarumlaut -20KPX Rcaron Omacron -20KPX Rcaron Oslash -20KPX Rcaron Otilde -20KPX Rcaron T -20KPX Rcaron Tcaron -20KPX Rcaron Tcommaaccent -20KPX Rcaron U -20KPX Rcaron Uacute -20KPX Rcaron Ucircumflex -20KPX Rcaron Udieresis -20KPX Rcaron Ugrave -20KPX Rcaron Uhungarumlaut -20KPX Rcaron Umacron -20KPX Rcaron Uogonek -20KPX Rcaron Uring -20KPX Rcaron V -50KPX Rcaron W -40KPX Rcaron Y -50KPX Rcaron Yacute -50KPX Rcaron Ydieresis -50KPX Rcommaaccent O -20KPX Rcommaaccent Oacute -20KPX Rcommaaccent Ocircumflex -20KPX Rcommaaccent Odieresis -20KPX Rcommaaccent Ograve -20KPX Rcommaaccent Ohungarumlaut -20KPX Rcommaaccent Omacron -20KPX Rcommaaccent Oslash -20KPX Rcommaaccent Otilde -20KPX Rcommaaccent T -20KPX Rcommaaccent Tcaron -20KPX Rcommaaccent Tcommaaccent -20KPX Rcommaaccent U -20KPX Rcommaaccent Uacute -20KPX Rcommaaccent Ucircumflex -20KPX Rcommaaccent Udieresis -20KPX Rcommaaccent Ugrave -20KPX Rcommaaccent Uhungarumlaut -20KPX Rcommaaccent Umacron -20KPX Rcommaaccent Uogonek -20KPX Rcommaaccent Uring -20KPX Rcommaaccent V -50KPX Rcommaaccent W -40KPX Rcommaaccent Y -50KPX Rcommaaccent Yacute -50KPX Rcommaaccent Ydieresis -50KPX T A -90KPX T Aacute -90KPX T Abreve -90KPX T Acircumflex -90KPX T Adieresis -90KPX T Agrave -90KPX T Amacron -90KPX T Aogonek -90KPX T Aring -90KPX T Atilde -90KPX T O -40KPX T Oacute -40KPX T Ocircumflex -40KPX T Odieresis -40KPX T Ograve -40KPX T Ohungarumlaut -40KPX T Omacron -40KPX T Oslash -40KPX T Otilde -40KPX T a -80KPX T aacute -80KPX T abreve -80KPX T acircumflex -80KPX T adieresis -80KPX T agrave -80KPX T amacron -80KPX T aogonek -80KPX T aring -80KPX T atilde -80KPX T colon -40KPX T comma -80KPX T e -60KPX T eacute -60KPX T ecaron -60KPX T ecircumflex -60KPX T edieresis -60KPX T edotaccent -60KPX T egrave -60KPX T emacron -60KPX T eogonek -60KPX T hyphen -120KPX T o -80KPX T oacute -80KPX T ocircumflex -80KPX T odieresis -80KPX T ograve -80KPX T ohungarumlaut -80KPX T omacron -80KPX T oslash -80KPX T otilde -80KPX T period -80KPX T r -80KPX T racute -80KPX T rcommaaccent -80KPX T semicolon -40KPX T u -90KPX T uacute -90KPX T ucircumflex -90KPX T udieresis -90KPX T ugrave -90KPX T uhungarumlaut -90KPX T umacron -90KPX T uogonek -90KPX T uring -90KPX T w -60KPX T y -60KPX T yacute -60KPX T ydieresis -60KPX Tcaron A -90KPX Tcaron Aacute -90KPX Tcaron Abreve -90KPX Tcaron Acircumflex -90KPX Tcaron Adieresis -90KPX Tcaron Agrave -90KPX Tcaron Amacron -90KPX Tcaron Aogonek -90KPX Tcaron Aring -90KPX Tcaron Atilde -90KPX Tcaron O -40KPX Tcaron Oacute -40KPX Tcaron Ocircumflex -40KPX Tcaron Odieresis -40KPX Tcaron Ograve -40KPX Tcaron Ohungarumlaut -40KPX Tcaron Omacron -40KPX Tcaron Oslash -40KPX Tcaron Otilde -40KPX Tcaron a -80KPX Tcaron aacute -80KPX Tcaron abreve -80KPX Tcaron acircumflex -80KPX Tcaron adieresis -80KPX Tcaron agrave -80KPX Tcaron amacron -80KPX Tcaron aogonek -80KPX Tcaron aring -80KPX Tcaron atilde -80KPX Tcaron colon -40KPX Tcaron comma -80KPX Tcaron e -60KPX Tcaron eacute -60KPX Tcaron ecaron -60KPX Tcaron ecircumflex -60KPX Tcaron edieresis -60KPX Tcaron edotaccent -60KPX Tcaron egrave -60KPX Tcaron emacron -60KPX Tcaron eogonek -60KPX Tcaron hyphen -120KPX Tcaron o -80KPX Tcaron oacute -80KPX Tcaron ocircumflex -80KPX Tcaron odieresis -80KPX Tcaron ograve -80KPX Tcaron ohungarumlaut -80KPX Tcaron omacron -80KPX Tcaron oslash -80KPX Tcaron otilde -80KPX Tcaron period -80KPX Tcaron r -80KPX Tcaron racute -80KPX Tcaron rcommaaccent -80KPX Tcaron semicolon -40KPX Tcaron u -90KPX Tcaron uacute -90KPX Tcaron ucircumflex -90KPX Tcaron udieresis -90KPX Tcaron ugrave -90KPX Tcaron uhungarumlaut -90KPX Tcaron umacron -90KPX Tcaron uogonek -90KPX Tcaron uring -90KPX Tcaron w -60KPX Tcaron y -60KPX Tcaron yacute -60KPX Tcaron ydieresis -60KPX Tcommaaccent A -90KPX Tcommaaccent Aacute -90KPX Tcommaaccent Abreve -90KPX Tcommaaccent Acircumflex -90KPX Tcommaaccent Adieresis -90KPX Tcommaaccent Agrave -90KPX Tcommaaccent Amacron -90KPX Tcommaaccent Aogonek -90KPX Tcommaaccent Aring -90KPX Tcommaaccent Atilde -90KPX Tcommaaccent O -40KPX Tcommaaccent Oacute -40KPX Tcommaaccent Ocircumflex -40KPX Tcommaaccent Odieresis -40KPX Tcommaaccent Ograve -40KPX Tcommaaccent Ohungarumlaut -40KPX Tcommaaccent Omacron -40KPX Tcommaaccent Oslash -40KPX Tcommaaccent Otilde -40KPX Tcommaaccent a -80KPX Tcommaaccent aacute -80KPX Tcommaaccent abreve -80KPX Tcommaaccent acircumflex -80KPX Tcommaaccent adieresis -80KPX Tcommaaccent agrave -80KPX Tcommaaccent amacron -80KPX Tcommaaccent aogonek -80KPX Tcommaaccent aring -80KPX Tcommaaccent atilde -80KPX Tcommaaccent colon -40KPX Tcommaaccent comma -80KPX Tcommaaccent e -60KPX Tcommaaccent eacute -60KPX Tcommaaccent ecaron -60KPX Tcommaaccent ecircumflex -60KPX Tcommaaccent edieresis -60KPX Tcommaaccent edotaccent -60KPX Tcommaaccent egrave -60KPX Tcommaaccent emacron -60KPX Tcommaaccent eogonek -60KPX Tcommaaccent hyphen -120KPX Tcommaaccent o -80KPX Tcommaaccent oacute -80KPX Tcommaaccent ocircumflex -80KPX Tcommaaccent odieresis -80KPX Tcommaaccent ograve -80KPX Tcommaaccent ohungarumlaut -80KPX Tcommaaccent omacron -80KPX Tcommaaccent oslash -80KPX Tcommaaccent otilde -80KPX Tcommaaccent period -80KPX Tcommaaccent r -80KPX Tcommaaccent racute -80KPX Tcommaaccent rcommaaccent -80KPX Tcommaaccent semicolon -40KPX Tcommaaccent u -90KPX Tcommaaccent uacute -90KPX Tcommaaccent ucircumflex -90KPX Tcommaaccent udieresis -90KPX Tcommaaccent ugrave -90KPX Tcommaaccent uhungarumlaut -90KPX Tcommaaccent umacron -90KPX Tcommaaccent uogonek -90KPX Tcommaaccent uring -90KPX Tcommaaccent w -60KPX Tcommaaccent y -60KPX Tcommaaccent yacute -60KPX Tcommaaccent ydieresis -60KPX U A -50KPX U Aacute -50KPX U Abreve -50KPX U Acircumflex -50KPX U Adieresis -50KPX U Agrave -50KPX U Amacron -50KPX U Aogonek -50KPX U Aring -50KPX U Atilde -50KPX U comma -30KPX U period -30KPX Uacute A -50KPX Uacute Aacute -50KPX Uacute Abreve -50KPX Uacute Acircumflex -50KPX Uacute Adieresis -50KPX Uacute Agrave -50KPX Uacute Amacron -50KPX Uacute Aogonek -50KPX Uacute Aring -50KPX Uacute Atilde -50KPX Uacute comma -30KPX Uacute period -30KPX Ucircumflex A -50KPX Ucircumflex Aacute -50KPX Ucircumflex Abreve -50KPX Ucircumflex Acircumflex -50KPX Ucircumflex Adieresis -50KPX Ucircumflex Agrave -50KPX Ucircumflex Amacron -50KPX Ucircumflex Aogonek -50KPX Ucircumflex Aring -50KPX Ucircumflex Atilde -50KPX Ucircumflex comma -30KPX Ucircumflex period -30KPX Udieresis A -50KPX Udieresis Aacute -50KPX Udieresis Abreve -50KPX Udieresis Acircumflex -50KPX Udieresis Adieresis -50KPX Udieresis Agrave -50KPX Udieresis Amacron -50KPX Udieresis Aogonek -50KPX Udieresis Aring -50KPX Udieresis Atilde -50KPX Udieresis comma -30KPX Udieresis period -30KPX Ugrave A -50KPX Ugrave Aacute -50KPX Ugrave Abreve -50KPX Ugrave Acircumflex -50KPX Ugrave Adieresis -50KPX Ugrave Agrave -50KPX Ugrave Amacron -50KPX Ugrave Aogonek -50KPX Ugrave Aring -50KPX Ugrave Atilde -50KPX Ugrave comma -30KPX Ugrave period -30KPX Uhungarumlaut A -50KPX Uhungarumlaut Aacute -50KPX Uhungarumlaut Abreve -50KPX Uhungarumlaut Acircumflex -50KPX Uhungarumlaut Adieresis -50KPX Uhungarumlaut Agrave -50KPX Uhungarumlaut Amacron -50KPX Uhungarumlaut Aogonek -50KPX Uhungarumlaut Aring -50KPX Uhungarumlaut Atilde -50KPX Uhungarumlaut comma -30KPX Uhungarumlaut period -30KPX Umacron A -50KPX Umacron Aacute -50KPX Umacron Abreve -50KPX Umacron Acircumflex -50KPX Umacron Adieresis -50KPX Umacron Agrave -50KPX Umacron Amacron -50KPX Umacron Aogonek -50KPX Umacron Aring -50KPX Umacron Atilde -50KPX Umacron comma -30KPX Umacron period -30KPX Uogonek A -50KPX Uogonek Aacute -50KPX Uogonek Abreve -50KPX Uogonek Acircumflex -50KPX Uogonek Adieresis -50KPX Uogonek Agrave -50KPX Uogonek Amacron -50KPX Uogonek Aogonek -50KPX Uogonek Aring -50KPX Uogonek Atilde -50KPX Uogonek comma -30KPX Uogonek period -30KPX Uring A -50KPX Uring Aacute -50KPX Uring Abreve -50KPX Uring Acircumflex -50KPX Uring Adieresis -50KPX Uring Agrave -50KPX Uring Amacron -50KPX Uring Aogonek -50KPX Uring Aring -50KPX Uring Atilde -50KPX Uring comma -30KPX Uring period -30KPX V A -80KPX V Aacute -80KPX V Abreve -80KPX V Acircumflex -80KPX V Adieresis -80KPX V Agrave -80KPX V Amacron -80KPX V Aogonek -80KPX V Aring -80KPX V Atilde -80KPX V G -50KPX V Gbreve -50KPX V Gcommaaccent -50KPX V O -50KPX V Oacute -50KPX V Ocircumflex -50KPX V Odieresis -50KPX V Ograve -50KPX V Ohungarumlaut -50KPX V Omacron -50KPX V Oslash -50KPX V Otilde -50KPX V a -60KPX V aacute -60KPX V abreve -60KPX V acircumflex -60KPX V adieresis -60KPX V agrave -60KPX V amacron -60KPX V aogonek -60KPX V aring -60KPX V atilde -60KPX V colon -40KPX V comma -120KPX V e -50KPX V eacute -50KPX V ecaron -50KPX V ecircumflex -50KPX V edieresis -50KPX V edotaccent -50KPX V egrave -50KPX V emacron -50KPX V eogonek -50KPX V hyphen -80KPX V o -90KPX V oacute -90KPX V ocircumflex -90KPX V odieresis -90KPX V ograve -90KPX V ohungarumlaut -90KPX V omacron -90KPX V oslash -90KPX V otilde -90KPX V period -120KPX V semicolon -40KPX V u -60KPX V uacute -60KPX V ucircumflex -60KPX V udieresis -60KPX V ugrave -60KPX V uhungarumlaut -60KPX V umacron -60KPX V uogonek -60KPX V uring -60KPX W A -60KPX W Aacute -60KPX W Abreve -60KPX W Acircumflex -60KPX W Adieresis -60KPX W Agrave -60KPX W Amacron -60KPX W Aogonek -60KPX W Aring -60KPX W Atilde -60KPX W O -20KPX W Oacute -20KPX W Ocircumflex -20KPX W Odieresis -20KPX W Ograve -20KPX W Ohungarumlaut -20KPX W Omacron -20KPX W Oslash -20KPX W Otilde -20KPX W a -40KPX W aacute -40KPX W abreve -40KPX W acircumflex -40KPX W adieresis -40KPX W agrave -40KPX W amacron -40KPX W aogonek -40KPX W aring -40KPX W atilde -40KPX W colon -10KPX W comma -80KPX W e -35KPX W eacute -35KPX W ecaron -35KPX W ecircumflex -35KPX W edieresis -35KPX W edotaccent -35KPX W egrave -35KPX W emacron -35KPX W eogonek -35KPX W hyphen -40KPX W o -60KPX W oacute -60KPX W ocircumflex -60KPX W odieresis -60KPX W ograve -60KPX W ohungarumlaut -60KPX W omacron -60KPX W oslash -60KPX W otilde -60KPX W period -80KPX W semicolon -10KPX W u -45KPX W uacute -45KPX W ucircumflex -45KPX W udieresis -45KPX W ugrave -45KPX W uhungarumlaut -45KPX W umacron -45KPX W uogonek -45KPX W uring -45KPX W y -20KPX W yacute -20KPX W ydieresis -20KPX Y A -110KPX Y Aacute -110KPX Y Abreve -110KPX Y Acircumflex -110KPX Y Adieresis -110KPX Y Agrave -110KPX Y Amacron -110KPX Y Aogonek -110KPX Y Aring -110KPX Y Atilde -110KPX Y O -70KPX Y Oacute -70KPX Y Ocircumflex -70KPX Y Odieresis -70KPX Y Ograve -70KPX Y Ohungarumlaut -70KPX Y Omacron -70KPX Y Oslash -70KPX Y Otilde -70KPX Y a -90KPX Y aacute -90KPX Y abreve -90KPX Y acircumflex -90KPX Y adieresis -90KPX Y agrave -90KPX Y amacron -90KPX Y aogonek -90KPX Y aring -90KPX Y atilde -90KPX Y colon -50KPX Y comma -100KPX Y e -80KPX Y eacute -80KPX Y ecaron -80KPX Y ecircumflex -80KPX Y edieresis -80KPX Y edotaccent -80KPX Y egrave -80KPX Y emacron -80KPX Y eogonek -80KPX Y o -100KPX Y oacute -100KPX Y ocircumflex -100KPX Y odieresis -100KPX Y ograve -100KPX Y ohungarumlaut -100KPX Y omacron -100KPX Y oslash -100KPX Y otilde -100KPX Y period -100KPX Y semicolon -50KPX Y u -100KPX Y uacute -100KPX Y ucircumflex -100KPX Y udieresis -100KPX Y ugrave -100KPX Y uhungarumlaut -100KPX Y umacron -100KPX Y uogonek -100KPX Y uring -100KPX Yacute A -110KPX Yacute Aacute -110KPX Yacute Abreve -110KPX Yacute Acircumflex -110KPX Yacute Adieresis -110KPX Yacute Agrave -110KPX Yacute Amacron -110KPX Yacute Aogonek -110KPX Yacute Aring -110KPX Yacute Atilde -110KPX Yacute O -70KPX Yacute Oacute -70KPX Yacute Ocircumflex -70KPX Yacute Odieresis -70KPX Yacute Ograve -70KPX Yacute Ohungarumlaut -70KPX Yacute Omacron -70KPX Yacute Oslash -70KPX Yacute Otilde -70KPX Yacute a -90KPX Yacute aacute -90KPX Yacute abreve -90KPX Yacute acircumflex -90KPX Yacute adieresis -90KPX Yacute agrave -90KPX Yacute amacron -90KPX Yacute aogonek -90KPX Yacute aring -90KPX Yacute atilde -90KPX Yacute colon -50KPX Yacute comma -100KPX Yacute e -80KPX Yacute eacute -80KPX Yacute ecaron -80KPX Yacute ecircumflex -80KPX Yacute edieresis -80KPX Yacute edotaccent -80KPX Yacute egrave -80KPX Yacute emacron -80KPX Yacute eogonek -80KPX Yacute o -100KPX Yacute oacute -100KPX Yacute ocircumflex -100KPX Yacute odieresis -100KPX Yacute ograve -100KPX Yacute ohungarumlaut -100KPX Yacute omacron -100KPX Yacute oslash -100KPX Yacute otilde -100KPX Yacute period -100KPX Yacute semicolon -50KPX Yacute u -100KPX Yacute uacute -100KPX Yacute ucircumflex -100KPX Yacute udieresis -100KPX Yacute ugrave -100KPX Yacute uhungarumlaut -100KPX Yacute umacron -100KPX Yacute uogonek -100KPX Yacute uring -100KPX Ydieresis A -110KPX Ydieresis Aacute -110KPX Ydieresis Abreve -110KPX Ydieresis Acircumflex -110KPX Ydieresis Adieresis -110KPX Ydieresis Agrave -110KPX Ydieresis Amacron -110KPX Ydieresis Aogonek -110KPX Ydieresis Aring -110KPX Ydieresis Atilde -110KPX Ydieresis O -70KPX Ydieresis Oacute -70KPX Ydieresis Ocircumflex -70KPX Ydieresis Odieresis -70KPX Ydieresis Ograve -70KPX Ydieresis Ohungarumlaut -70KPX Ydieresis Omacron -70KPX Ydieresis Oslash -70KPX Ydieresis Otilde -70KPX Ydieresis a -90KPX Ydieresis aacute -90KPX Ydieresis abreve -90KPX Ydieresis acircumflex -90KPX Ydieresis adieresis -90KPX Ydieresis agrave -90KPX Ydieresis amacron -90KPX Ydieresis aogonek -90KPX Ydieresis aring -90KPX Ydieresis atilde -90KPX Ydieresis colon -50KPX Ydieresis comma -100KPX Ydieresis e -80KPX Ydieresis eacute -80KPX Ydieresis ecaron -80KPX Ydieresis ecircumflex -80KPX Ydieresis edieresis -80KPX Ydieresis edotaccent -80KPX Ydieresis egrave -80KPX Ydieresis emacron -80KPX Ydieresis eogonek -80KPX Ydieresis o -100KPX Ydieresis oacute -100KPX Ydieresis ocircumflex -100KPX Ydieresis odieresis -100KPX Ydieresis ograve -100KPX Ydieresis ohungarumlaut -100KPX Ydieresis omacron -100KPX Ydieresis oslash -100KPX Ydieresis otilde -100KPX Ydieresis period -100KPX Ydieresis semicolon -50KPX Ydieresis u -100KPX Ydieresis uacute -100KPX Ydieresis ucircumflex -100KPX Ydieresis udieresis -100KPX Ydieresis ugrave -100KPX Ydieresis uhungarumlaut -100KPX Ydieresis umacron -100KPX Ydieresis uogonek -100KPX Ydieresis uring -100KPX a g -10KPX a gbreve -10KPX a gcommaaccent -10KPX a v -15KPX a w -15KPX a y -20KPX a yacute -20KPX a ydieresis -20KPX aacute g -10KPX aacute gbreve -10KPX aacute gcommaaccent -10KPX aacute v -15KPX aacute w -15KPX aacute y -20KPX aacute yacute -20KPX aacute ydieresis -20KPX abreve g -10KPX abreve gbreve -10KPX abreve gcommaaccent -10KPX abreve v -15KPX abreve w -15KPX abreve y -20KPX abreve yacute -20KPX abreve ydieresis -20KPX acircumflex g -10KPX acircumflex gbreve -10KPX acircumflex gcommaaccent -10KPX acircumflex v -15KPX acircumflex w -15KPX acircumflex y -20KPX acircumflex yacute -20KPX acircumflex ydieresis -20KPX adieresis g -10KPX adieresis gbreve -10KPX adieresis gcommaaccent -10KPX adieresis v -15KPX adieresis w -15KPX adieresis y -20KPX adieresis yacute -20KPX adieresis ydieresis -20KPX agrave g -10KPX agrave gbreve -10KPX agrave gcommaaccent -10KPX agrave v -15KPX agrave w -15KPX agrave y -20KPX agrave yacute -20KPX agrave ydieresis -20KPX amacron g -10KPX amacron gbreve -10KPX amacron gcommaaccent -10KPX amacron v -15KPX amacron w -15KPX amacron y -20KPX amacron yacute -20KPX amacron ydieresis -20KPX aogonek g -10KPX aogonek gbreve -10KPX aogonek gcommaaccent -10KPX aogonek v -15KPX aogonek w -15KPX aogonek y -20KPX aogonek yacute -20KPX aogonek ydieresis -20KPX aring g -10KPX aring gbreve -10KPX aring gcommaaccent -10KPX aring v -15KPX aring w -15KPX aring y -20KPX aring yacute -20KPX aring ydieresis -20KPX atilde g -10KPX atilde gbreve -10KPX atilde gcommaaccent -10KPX atilde v -15KPX atilde w -15KPX atilde y -20KPX atilde yacute -20KPX atilde ydieresis -20KPX b l -10KPX b lacute -10KPX b lcommaaccent -10KPX b lslash -10KPX b u -20KPX b uacute -20KPX b ucircumflex -20KPX b udieresis -20KPX b ugrave -20KPX b uhungarumlaut -20KPX b umacron -20KPX b uogonek -20KPX b uring -20KPX b v -20KPX b y -20KPX b yacute -20KPX b ydieresis -20KPX c h -10KPX c k -20KPX c kcommaaccent -20KPX c l -20KPX c lacute -20KPX c lcommaaccent -20KPX c lslash -20KPX c y -10KPX c yacute -10KPX c ydieresis -10KPX cacute h -10KPX cacute k -20KPX cacute kcommaaccent -20KPX cacute l -20KPX cacute lacute -20KPX cacute lcommaaccent -20KPX cacute lslash -20KPX cacute y -10KPX cacute yacute -10KPX cacute ydieresis -10KPX ccaron h -10KPX ccaron k -20KPX ccaron kcommaaccent -20KPX ccaron l -20KPX ccaron lacute -20KPX ccaron lcommaaccent -20KPX ccaron lslash -20KPX ccaron y -10KPX ccaron yacute -10KPX ccaron ydieresis -10KPX ccedilla h -10KPX ccedilla k -20KPX ccedilla kcommaaccent -20KPX ccedilla l -20KPX ccedilla lacute -20KPX ccedilla lcommaaccent -20KPX ccedilla lslash -20KPX ccedilla y -10KPX ccedilla yacute -10KPX ccedilla ydieresis -10KPX colon space -40KPX comma quotedblright -120KPX comma quoteright -120KPX comma space -40KPX d d -10KPX d dcroat -10KPX d v -15KPX d w -15KPX d y -15KPX d yacute -15KPX d ydieresis -15KPX dcroat d -10KPX dcroat dcroat -10KPX dcroat v -15KPX dcroat w -15KPX dcroat y -15KPX dcroat yacute -15KPX dcroat ydieresis -15KPX e comma 10KPX e period 20KPX e v -15KPX e w -15KPX e x -15KPX e y -15KPX e yacute -15KPX e ydieresis -15KPX eacute comma 10KPX eacute period 20KPX eacute v -15KPX eacute w -15KPX eacute x -15KPX eacute y -15KPX eacute yacute -15KPX eacute ydieresis -15KPX ecaron comma 10KPX ecaron period 20KPX ecaron v -15KPX ecaron w -15KPX ecaron x -15KPX ecaron y -15KPX ecaron yacute -15KPX ecaron ydieresis -15KPX ecircumflex comma 10KPX ecircumflex period 20KPX ecircumflex v -15KPX ecircumflex w -15KPX ecircumflex x -15KPX ecircumflex y -15KPX ecircumflex yacute -15KPX ecircumflex ydieresis -15KPX edieresis comma 10KPX edieresis period 20KPX edieresis v -15KPX edieresis w -15KPX edieresis x -15KPX edieresis y -15KPX edieresis yacute -15KPX edieresis ydieresis -15KPX edotaccent comma 10KPX edotaccent period 20KPX edotaccent v -15KPX edotaccent w -15KPX edotaccent x -15KPX edotaccent y -15KPX edotaccent yacute -15KPX edotaccent ydieresis -15KPX egrave comma 10KPX egrave period 20KPX egrave v -15KPX egrave w -15KPX egrave x -15KPX egrave y -15KPX egrave yacute -15KPX egrave ydieresis -15KPX emacron comma 10KPX emacron period 20KPX emacron v -15KPX emacron w -15KPX emacron x -15KPX emacron y -15KPX emacron yacute -15KPX emacron ydieresis -15KPX eogonek comma 10KPX eogonek period 20KPX eogonek v -15KPX eogonek w -15KPX eogonek x -15KPX eogonek y -15KPX eogonek yacute -15KPX eogonek ydieresis -15KPX f comma -10KPX f e -10KPX f eacute -10KPX f ecaron -10KPX f ecircumflex -10KPX f edieresis -10KPX f edotaccent -10KPX f egrave -10KPX f emacron -10KPX f eogonek -10KPX f o -20KPX f oacute -20KPX f ocircumflex -20KPX f odieresis -20KPX f ograve -20KPX f ohungarumlaut -20KPX f omacron -20KPX f oslash -20KPX f otilde -20KPX f period -10KPX f quotedblright 30KPX f quoteright 30KPX g e 10KPX g eacute 10KPX g ecaron 10KPX g ecircumflex 10KPX g edieresis 10KPX g edotaccent 10KPX g egrave 10KPX g emacron 10KPX g eogonek 10KPX g g -10KPX g gbreve -10KPX g gcommaaccent -10KPX gbreve e 10KPX gbreve eacute 10KPX gbreve ecaron 10KPX gbreve ecircumflex 10KPX gbreve edieresis 10KPX gbreve edotaccent 10KPX gbreve egrave 10KPX gbreve emacron 10KPX gbreve eogonek 10KPX gbreve g -10KPX gbreve gbreve -10KPX gbreve gcommaaccent -10KPX gcommaaccent e 10KPX gcommaaccent eacute 10KPX gcommaaccent ecaron 10KPX gcommaaccent ecircumflex 10KPX gcommaaccent edieresis 10KPX gcommaaccent edotaccent 10KPX gcommaaccent egrave 10KPX gcommaaccent emacron 10KPX gcommaaccent eogonek 10KPX gcommaaccent g -10KPX gcommaaccent gbreve -10KPX gcommaaccent gcommaaccent -10KPX h y -20KPX h yacute -20KPX h ydieresis -20KPX k o -15KPX k oacute -15KPX k ocircumflex -15KPX k odieresis -15KPX k ograve -15KPX k ohungarumlaut -15KPX k omacron -15KPX k oslash -15KPX k otilde -15KPX kcommaaccent o -15KPX kcommaaccent oacute -15KPX kcommaaccent ocircumflex -15KPX kcommaaccent odieresis -15KPX kcommaaccent ograve -15KPX kcommaaccent ohungarumlaut -15KPX kcommaaccent omacron -15KPX kcommaaccent oslash -15KPX kcommaaccent otilde -15KPX l w -15KPX l y -15KPX l yacute -15KPX l ydieresis -15KPX lacute w -15KPX lacute y -15KPX lacute yacute -15KPX lacute ydieresis -15KPX lcommaaccent w -15KPX lcommaaccent y -15KPX lcommaaccent yacute -15KPX lcommaaccent ydieresis -15KPX lslash w -15KPX lslash y -15KPX lslash yacute -15KPX lslash ydieresis -15KPX m u -20KPX m uacute -20KPX m ucircumflex -20KPX m udieresis -20KPX m ugrave -20KPX m uhungarumlaut -20KPX m umacron -20KPX m uogonek -20KPX m uring -20KPX m y -30KPX m yacute -30KPX m ydieresis -30KPX n u -10KPX n uacute -10KPX n ucircumflex -10KPX n udieresis -10KPX n ugrave -10KPX n uhungarumlaut -10KPX n umacron -10KPX n uogonek -10KPX n uring -10KPX n v -40KPX n y -20KPX n yacute -20KPX n ydieresis -20KPX nacute u -10KPX nacute uacute -10KPX nacute ucircumflex -10KPX nacute udieresis -10KPX nacute ugrave -10KPX nacute uhungarumlaut -10KPX nacute umacron -10KPX nacute uogonek -10KPX nacute uring -10KPX nacute v -40KPX nacute y -20KPX nacute yacute -20KPX nacute ydieresis -20KPX ncaron u -10KPX ncaron uacute -10KPX ncaron ucircumflex -10KPX ncaron udieresis -10KPX ncaron ugrave -10KPX ncaron uhungarumlaut -10KPX ncaron umacron -10KPX ncaron uogonek -10KPX ncaron uring -10KPX ncaron v -40KPX ncaron y -20KPX ncaron yacute -20KPX ncaron ydieresis -20KPX ncommaaccent u -10KPX ncommaaccent uacute -10KPX ncommaaccent ucircumflex -10KPX ncommaaccent udieresis -10KPX ncommaaccent ugrave -10KPX ncommaaccent uhungarumlaut -10KPX ncommaaccent umacron -10KPX ncommaaccent uogonek -10KPX ncommaaccent uring -10KPX ncommaaccent v -40KPX ncommaaccent y -20KPX ncommaaccent yacute -20KPX ncommaaccent ydieresis -20KPX ntilde u -10KPX ntilde uacute -10KPX ntilde ucircumflex -10KPX ntilde udieresis -10KPX ntilde ugrave -10KPX ntilde uhungarumlaut -10KPX ntilde umacron -10KPX ntilde uogonek -10KPX ntilde uring -10KPX ntilde v -40KPX ntilde y -20KPX ntilde yacute -20KPX ntilde ydieresis -20KPX o v -20KPX o w -15KPX o x -30KPX o y -20KPX o yacute -20KPX o ydieresis -20KPX oacute v -20KPX oacute w -15KPX oacute x -30KPX oacute y -20KPX oacute yacute -20KPX oacute ydieresis -20KPX ocircumflex v -20KPX ocircumflex w -15KPX ocircumflex x -30KPX ocircumflex y -20KPX ocircumflex yacute -20KPX ocircumflex ydieresis -20KPX odieresis v -20KPX odieresis w -15KPX odieresis x -30KPX odieresis y -20KPX odieresis yacute -20KPX odieresis ydieresis -20KPX ograve v -20KPX ograve w -15KPX ograve x -30KPX ograve y -20KPX ograve yacute -20KPX ograve ydieresis -20KPX ohungarumlaut v -20KPX ohungarumlaut w -15KPX ohungarumlaut x -30KPX ohungarumlaut y -20KPX ohungarumlaut yacute -20KPX ohungarumlaut ydieresis -20KPX omacron v -20KPX omacron w -15KPX omacron x -30KPX omacron y -20KPX omacron yacute -20KPX omacron ydieresis -20KPX oslash v -20KPX oslash w -15KPX oslash x -30KPX oslash y -20KPX oslash yacute -20KPX oslash ydieresis -20KPX otilde v -20KPX otilde w -15KPX otilde x -30KPX otilde y -20KPX otilde yacute -20KPX otilde ydieresis -20KPX p y -15KPX p yacute -15KPX p ydieresis -15KPX period quotedblright -120KPX period quoteright -120KPX period space -40KPX quotedblright space -80KPX quoteleft quoteleft -46KPX quoteright d -80KPX quoteright dcroat -80KPX quoteright l -20KPX quoteright lacute -20KPX quoteright lcommaaccent -20KPX quoteright lslash -20KPX quoteright quoteright -46KPX quoteright r -40KPX quoteright racute -40KPX quoteright rcaron -40KPX quoteright rcommaaccent -40KPX quoteright s -60KPX quoteright sacute -60KPX quoteright scaron -60KPX quoteright scedilla -60KPX quoteright scommaaccent -60KPX quoteright space -80KPX quoteright v -20KPX r c -20KPX r cacute -20KPX r ccaron -20KPX r ccedilla -20KPX r comma -60KPX r d -20KPX r dcroat -20KPX r g -15KPX r gbreve -15KPX r gcommaaccent -15KPX r hyphen -20KPX r o -20KPX r oacute -20KPX r ocircumflex -20KPX r odieresis -20KPX r ograve -20KPX r ohungarumlaut -20KPX r omacron -20KPX r oslash -20KPX r otilde -20KPX r period -60KPX r q -20KPX r s -15KPX r sacute -15KPX r scaron -15KPX r scedilla -15KPX r scommaaccent -15KPX r t 20KPX r tcommaaccent 20KPX r v 10KPX r y 10KPX r yacute 10KPX r ydieresis 10KPX racute c -20KPX racute cacute -20KPX racute ccaron -20KPX racute ccedilla -20KPX racute comma -60KPX racute d -20KPX racute dcroat -20KPX racute g -15KPX racute gbreve -15KPX racute gcommaaccent -15KPX racute hyphen -20KPX racute o -20KPX racute oacute -20KPX racute ocircumflex -20KPX racute odieresis -20KPX racute ograve -20KPX racute ohungarumlaut -20KPX racute omacron -20KPX racute oslash -20KPX racute otilde -20KPX racute period -60KPX racute q -20KPX racute s -15KPX racute sacute -15KPX racute scaron -15KPX racute scedilla -15KPX racute scommaaccent -15KPX racute t 20KPX racute tcommaaccent 20KPX racute v 10KPX racute y 10KPX racute yacute 10KPX racute ydieresis 10KPX rcaron c -20KPX rcaron cacute -20KPX rcaron ccaron -20KPX rcaron ccedilla -20KPX rcaron comma -60KPX rcaron d -20KPX rcaron dcroat -20KPX rcaron g -15KPX rcaron gbreve -15KPX rcaron gcommaaccent -15KPX rcaron hyphen -20KPX rcaron o -20KPX rcaron oacute -20KPX rcaron ocircumflex -20KPX rcaron odieresis -20KPX rcaron ograve -20KPX rcaron ohungarumlaut -20KPX rcaron omacron -20KPX rcaron oslash -20KPX rcaron otilde -20KPX rcaron period -60KPX rcaron q -20KPX rcaron s -15KPX rcaron sacute -15KPX rcaron scaron -15KPX rcaron scedilla -15KPX rcaron scommaaccent -15KPX rcaron t 20KPX rcaron tcommaaccent 20KPX rcaron v 10KPX rcaron y 10KPX rcaron yacute 10KPX rcaron ydieresis 10KPX rcommaaccent c -20KPX rcommaaccent cacute -20KPX rcommaaccent ccaron -20KPX rcommaaccent ccedilla -20KPX rcommaaccent comma -60KPX rcommaaccent d -20KPX rcommaaccent dcroat -20KPX rcommaaccent g -15KPX rcommaaccent gbreve -15KPX rcommaaccent gcommaaccent -15KPX rcommaaccent hyphen -20KPX rcommaaccent o -20KPX rcommaaccent oacute -20KPX rcommaaccent ocircumflex -20KPX rcommaaccent odieresis -20KPX rcommaaccent ograve -20KPX rcommaaccent ohungarumlaut -20KPX rcommaaccent omacron -20KPX rcommaaccent oslash -20KPX rcommaaccent otilde -20KPX rcommaaccent period -60KPX rcommaaccent q -20KPX rcommaaccent s -15KPX rcommaaccent sacute -15KPX rcommaaccent scaron -15KPX rcommaaccent scedilla -15KPX rcommaaccent scommaaccent -15KPX rcommaaccent t 20KPX rcommaaccent tcommaaccent 20KPX rcommaaccent v 10KPX rcommaaccent y 10KPX rcommaaccent yacute 10KPX rcommaaccent ydieresis 10KPX s w -15KPX sacute w -15KPX scaron w -15KPX scedilla w -15KPX scommaaccent w -15KPX semicolon space -40KPX space T -100KPX space Tcaron -100KPX space Tcommaaccent -100KPX space V -80KPX space W -80KPX space Y -120KPX space Yacute -120KPX space Ydieresis -120KPX space quotedblleft -80KPX space quoteleft -60KPX v a -20KPX v aacute -20KPX v abreve -20KPX v acircumflex -20KPX v adieresis -20KPX v agrave -20KPX v amacron -20KPX v aogonek -20KPX v aring -20KPX v atilde -20KPX v comma -80KPX v o -30KPX v oacute -30KPX v ocircumflex -30KPX v odieresis -30KPX v ograve -30KPX v ohungarumlaut -30KPX v omacron -30KPX v oslash -30KPX v otilde -30KPX v period -80KPX w comma -40KPX w o -20KPX w oacute -20KPX w ocircumflex -20KPX w odieresis -20KPX w ograve -20KPX w ohungarumlaut -20KPX w omacron -20KPX w oslash -20KPX w otilde -20KPX w period -40KPX x e -10KPX x eacute -10KPX x ecaron -10KPX x ecircumflex -10KPX x edieresis -10KPX x edotaccent -10KPX x egrave -10KPX x emacron -10KPX x eogonek -10KPX y a -30KPX y aacute -30KPX y abreve -30KPX y acircumflex -30KPX y adieresis -30KPX y agrave -30KPX y amacron -30KPX y aogonek -30KPX y aring -30KPX y atilde -30KPX y comma -80KPX y e -10KPX y eacute -10KPX y ecaron -10KPX y ecircumflex -10KPX y edieresis -10KPX y edotaccent -10KPX y egrave -10KPX y emacron -10KPX y eogonek -10KPX y o -25KPX y oacute -25KPX y ocircumflex -25KPX y odieresis -25KPX y ograve -25KPX y ohungarumlaut -25KPX y omacron -25KPX y oslash -25KPX y otilde -25KPX y period -80KPX yacute a -30KPX yacute aacute -30KPX yacute abreve -30KPX yacute acircumflex -30KPX yacute adieresis -30KPX yacute agrave -30KPX yacute amacron -30KPX yacute aogonek -30KPX yacute aring -30KPX yacute atilde -30KPX yacute comma -80KPX yacute e -10KPX yacute eacute -10KPX yacute ecaron -10KPX yacute ecircumflex -10KPX yacute edieresis -10KPX yacute edotaccent -10KPX yacute egrave -10KPX yacute emacron -10KPX yacute eogonek -10KPX yacute o -25KPX yacute oacute -25KPX yacute ocircumflex -25KPX yacute odieresis -25KPX yacute ograve -25KPX yacute ohungarumlaut -25KPX yacute omacron -25KPX yacute oslash -25KPX yacute otilde -25KPX yacute period -80KPX ydieresis a -30KPX ydieresis aacute -30KPX ydieresis abreve -30KPX ydieresis acircumflex -30KPX ydieresis adieresis -30KPX ydieresis agrave -30KPX ydieresis amacron -30KPX ydieresis aogonek -30KPX ydieresis aring -30KPX ydieresis atilde -30KPX ydieresis comma -80KPX ydieresis e -10KPX ydieresis eacute -10KPX ydieresis ecaron -10KPX ydieresis ecircumflex -10KPX ydieresis edieresis -10KPX ydieresis edotaccent -10KPX ydieresis egrave -10KPX ydieresis emacron -10KPX ydieresis eogonek -10KPX ydieresis o -25KPX ydieresis oacute -25KPX ydieresis ocircumflex -25KPX ydieresis odieresis -25KPX ydieresis ograve -25KPX ydieresis ohungarumlaut -25KPX ydieresis omacron -25KPX ydieresis oslash -25KPX ydieresis otilde -25KPX ydieresis period -80KPX z e 10KPX z eacute 10KPX z ecaron 10KPX z ecircumflex 10KPX z edieresis 10KPX z edotaccent 10KPX z egrave 10KPX z emacron 10KPX z eogonek 10KPX zacute e 10KPX zacute eacute 10KPX zacute ecaron 10KPX zacute ecircumflex 10KPX zacute edieresis 10KPX zacute edotaccent 10KPX zacute egrave 10KPX zacute emacron 10KPX zacute eogonek 10KPX zcaron e 10KPX zcaron eacute 10KPX zcaron ecaron 10KPX zcaron ecircumflex 10KPX zcaron edieresis 10KPX zcaron edotaccent 10KPX zcaron egrave 10KPX zcaron emacron 10KPX zcaron eogonek 10KPX zdotaccent e 10KPX zdotaccent eacute 10KPX zdotaccent ecaron 10KPX zdotaccent ecircumflex 10KPX zdotaccent edieresis 10KPX zdotaccent edotaccent 10KPX zdotaccent egrave 10KPX zdotaccent emacron 10KPX zdotaccent eogonek 10EndKernPairsEndKernDataEndFontMetrics'</body><body package="Type1">helveticaOblique	"from http://www.adobe.com/devnet/font.html "	&lt;font: #'Helvetica-Oblique'&gt;	^self		windowsName: 'Arial'		afm: 'StartFontMetrics 4.1Comment Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.Comment Creation Date: Thu May  1 12:44:31 1997Comment UniqueID 43055Comment VMusage 14960 69346FontName Helvetica-ObliqueFullName Helvetica ObliqueFamilyName HelveticaWeight MediumItalicAngle -12IsFixedPitch falseCharacterSet ExtendedRomanFontBBox -170 -225 1116 931 UnderlinePosition -100UnderlineThickness 50Version 002.000Notice Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a trademark of Linotype-Hell AG and/or its subsidiaries.EncodingScheme AdobeStandardEncodingCapHeight 718XHeight 523Ascender 718Descender -207StdHW 76StdVW 88StartCharMetrics 315C 32 ; WX 278 ; N space ; B 0 0 0 0 ;C 33 ; WX 278 ; N exclam ; B 90 0 340 718 ;C 34 ; WX 355 ; N quotedbl ; B 168 463 438 718 ;C 35 ; WX 556 ; N numbersign ; B 73 0 631 688 ;C 36 ; WX 556 ; N dollar ; B 69 -115 617 775 ;C 37 ; WX 889 ; N percent ; B 147 -19 889 703 ;C 38 ; WX 667 ; N ampersand ; B 77 -15 647 718 ;C 39 ; WX 222 ; N quoteright ; B 151 463 310 718 ;C 40 ; WX 333 ; N parenleft ; B 108 -207 454 733 ;C 41 ; WX 333 ; N parenright ; B -9 -207 337 733 ;C 42 ; WX 389 ; N asterisk ; B 165 431 475 718 ;C 43 ; WX 584 ; N plus ; B 85 0 606 505 ;C 44 ; WX 278 ; N comma ; B 56 -147 214 106 ;C 45 ; WX 333 ; N hyphen ; B 93 232 357 322 ;C 46 ; WX 278 ; N period ; B 87 0 214 106 ;C 47 ; WX 278 ; N slash ; B -21 -19 452 737 ;C 48 ; WX 556 ; N zero ; B 93 -19 608 703 ;C 49 ; WX 556 ; N one ; B 207 0 508 703 ;C 50 ; WX 556 ; N two ; B 26 0 617 703 ;C 51 ; WX 556 ; N three ; B 75 -19 610 703 ;C 52 ; WX 556 ; N four ; B 61 0 576 703 ;C 53 ; WX 556 ; N five ; B 68 -19 621 688 ;C 54 ; WX 556 ; N six ; B 91 -19 615 703 ;C 55 ; WX 556 ; N seven ; B 137 0 669 688 ;C 56 ; WX 556 ; N eight ; B 74 -19 607 703 ;C 57 ; WX 556 ; N nine ; B 82 -19 609 703 ;C 58 ; WX 278 ; N colon ; B 87 0 301 516 ;C 59 ; WX 278 ; N semicolon ; B 56 -147 301 516 ;C 60 ; WX 584 ; N less ; B 94 11 641 495 ;C 61 ; WX 584 ; N equal ; B 63 115 628 390 ;C 62 ; WX 584 ; N greater ; B 50 11 597 495 ;C 63 ; WX 556 ; N question ; B 161 0 610 727 ;C 64 ; WX 1015 ; N at ; B 215 -19 965 737 ;C 65 ; WX 667 ; N A ; B 14 0 654 718 ;C 66 ; WX 667 ; N B ; B 74 0 712 718 ;C 67 ; WX 722 ; N C ; B 108 -19 782 737 ;C 68 ; WX 722 ; N D ; B 81 0 764 718 ;C 69 ; WX 667 ; N E ; B 86 0 762 718 ;C 70 ; WX 611 ; N F ; B 86 0 736 718 ;C 71 ; WX 778 ; N G ; B 111 -19 799 737 ;C 72 ; WX 722 ; N H ; B 77 0 799 718 ;C 73 ; WX 278 ; N I ; B 91 0 341 718 ;C 74 ; WX 500 ; N J ; B 47 -19 581 718 ;C 75 ; WX 667 ; N K ; B 76 0 808 718 ;C 76 ; WX 556 ; N L ; B 76 0 555 718 ;C 77 ; WX 833 ; N M ; B 73 0 914 718 ;C 78 ; WX 722 ; N N ; B 76 0 799 718 ;C 79 ; WX 778 ; N O ; B 105 -19 826 737 ;C 80 ; WX 667 ; N P ; B 86 0 737 718 ;C 81 ; WX 778 ; N Q ; B 105 -56 826 737 ;C 82 ; WX 722 ; N R ; B 88 0 773 718 ;C 83 ; WX 667 ; N S ; B 90 -19 713 737 ;C 84 ; WX 611 ; N T ; B 148 0 750 718 ;C 85 ; WX 722 ; N U ; B 123 -19 797 718 ;C 86 ; WX 667 ; N V ; B 173 0 800 718 ;C 87 ; WX 944 ; N W ; B 169 0 1081 718 ;C 88 ; WX 667 ; N X ; B 19 0 790 718 ;C 89 ; WX 667 ; N Y ; B 167 0 806 718 ;C 90 ; WX 611 ; N Z ; B 23 0 741 718 ;C 91 ; WX 278 ; N bracketleft ; B 21 -196 403 722 ;C 92 ; WX 278 ; N backslash ; B 140 -19 291 737 ;C 93 ; WX 278 ; N bracketright ; B -14 -196 368 722 ;C 94 ; WX 469 ; N asciicircum ; B 42 264 539 688 ;C 95 ; WX 556 ; N underscore ; B -27 -125 540 -75 ;C 96 ; WX 222 ; N quoteleft ; B 165 470 323 725 ;C 97 ; WX 556 ; N a ; B 61 -15 559 538 ;C 98 ; WX 556 ; N b ; B 58 -15 584 718 ;C 99 ; WX 500 ; N c ; B 74 -15 553 538 ;C 100 ; WX 556 ; N d ; B 84 -15 652 718 ;C 101 ; WX 556 ; N e ; B 84 -15 578 538 ;C 102 ; WX 278 ; N f ; B 86 0 416 728 ; L i fi ; L l fl ;C 103 ; WX 556 ; N g ; B 42 -220 610 538 ;C 104 ; WX 556 ; N h ; B 65 0 573 718 ;C 105 ; WX 222 ; N i ; B 67 0 308 718 ;C 106 ; WX 222 ; N j ; B -60 -210 308 718 ;C 107 ; WX 500 ; N k ; B 67 0 600 718 ;C 108 ; WX 222 ; N l ; B 67 0 308 718 ;C 109 ; WX 833 ; N m ; B 65 0 852 538 ;C 110 ; WX 556 ; N n ; B 65 0 573 538 ;C 111 ; WX 556 ; N o ; B 83 -14 585 538 ;C 112 ; WX 556 ; N p ; B 14 -207 584 538 ;C 113 ; WX 556 ; N q ; B 84 -207 605 538 ;C 114 ; WX 333 ; N r ; B 77 0 446 538 ;C 115 ; WX 500 ; N s ; B 63 -15 529 538 ;C 116 ; WX 278 ; N t ; B 102 -7 368 669 ;C 117 ; WX 556 ; N u ; B 94 -15 600 523 ;C 118 ; WX 500 ; N v ; B 119 0 603 523 ;C 119 ; WX 722 ; N w ; B 125 0 820 523 ;C 120 ; WX 500 ; N x ; B 11 0 594 523 ;C 121 ; WX 500 ; N y ; B 15 -214 600 523 ;C 122 ; WX 500 ; N z ; B 31 0 571 523 ;C 123 ; WX 334 ; N braceleft ; B 92 -196 445 722 ;C 124 ; WX 260 ; N bar ; B 46 -225 332 775 ;C 125 ; WX 334 ; N braceright ; B 0 -196 354 722 ;C 126 ; WX 584 ; N asciitilde ; B 111 180 580 326 ;C 161 ; WX 333 ; N exclamdown ; B 77 -195 326 523 ;C 162 ; WX 556 ; N cent ; B 95 -115 584 623 ;C 163 ; WX 556 ; N sterling ; B 49 -16 634 718 ;C 164 ; WX 167 ; N fraction ; B -170 -19 482 703 ;C 165 ; WX 556 ; N yen ; B 81 0 699 688 ;C 166 ; WX 556 ; N florin ; B -52 -207 654 737 ;C 167 ; WX 556 ; N section ; B 76 -191 584 737 ;C 168 ; WX 556 ; N currency ; B 60 99 646 603 ;C 169 ; WX 191 ; N quotesingle ; B 157 463 285 718 ;C 170 ; WX 333 ; N quotedblleft ; B 138 470 461 725 ;C 171 ; WX 556 ; N guillemotleft ; B 146 108 554 446 ;C 172 ; WX 333 ; N guilsinglleft ; B 137 108 340 446 ;C 173 ; WX 333 ; N guilsinglright ; B 111 108 314 446 ;C 174 ; WX 500 ; N fi ; B 86 0 587 728 ;C 175 ; WX 500 ; N fl ; B 86 0 585 728 ;C 177 ; WX 556 ; N endash ; B 51 240 623 313 ;C 178 ; WX 556 ; N dagger ; B 135 -159 622 718 ;C 179 ; WX 556 ; N daggerdbl ; B 52 -159 623 718 ;C 180 ; WX 278 ; N periodcentered ; B 129 190 257 315 ;C 182 ; WX 537 ; N paragraph ; B 126 -173 650 718 ;C 183 ; WX 350 ; N bullet ; B 91 202 413 517 ;C 184 ; WX 222 ; N quotesinglbase ; B 21 -149 180 106 ;C 185 ; WX 333 ; N quotedblbase ; B -6 -149 318 106 ;C 186 ; WX 333 ; N quotedblright ; B 124 463 448 718 ;C 187 ; WX 556 ; N guillemotright ; B 120 108 528 446 ;C 188 ; WX 1000 ; N ellipsis ; B 115 0 908 106 ;C 189 ; WX 1000 ; N perthousand ; B 88 -19 1029 703 ;C 191 ; WX 611 ; N questiondown ; B 85 -201 534 525 ;C 193 ; WX 333 ; N grave ; B 170 593 337 734 ;C 194 ; WX 333 ; N acute ; B 248 593 475 734 ;C 195 ; WX 333 ; N circumflex ; B 147 593 438 734 ;C 196 ; WX 333 ; N tilde ; B 125 606 490 722 ;C 197 ; WX 333 ; N macron ; B 143 627 468 684 ;C 198 ; WX 333 ; N breve ; B 167 595 476 731 ;C 199 ; WX 333 ; N dotaccent ; B 249 604 362 706 ;C 200 ; WX 333 ; N dieresis ; B 168 604 443 706 ;C 202 ; WX 333 ; N ring ; B 214 572 402 756 ;C 203 ; WX 333 ; N cedilla ; B 2 -225 232 0 ;C 205 ; WX 333 ; N hungarumlaut ; B 157 593 565 734 ;C 206 ; WX 333 ; N ogonek ; B 43 -225 249 0 ;C 207 ; WX 333 ; N caron ; B 177 593 468 734 ;C 208 ; WX 1000 ; N emdash ; B 51 240 1067 313 ;C 225 ; WX 1000 ; N AE ; B 8 0 1097 718 ;C 227 ; WX 370 ; N ordfeminine ; B 127 405 449 737 ;C 232 ; WX 556 ; N Lslash ; B 41 0 555 718 ;C 233 ; WX 778 ; N Oslash ; B 43 -19 890 737 ;C 234 ; WX 1000 ; N OE ; B 98 -19 1116 737 ;C 235 ; WX 365 ; N ordmasculine ; B 141 405 468 737 ;C 241 ; WX 889 ; N ae ; B 61 -15 909 538 ;C 245 ; WX 278 ; N dotlessi ; B 95 0 294 523 ;C 248 ; WX 222 ; N lslash ; B 41 0 347 718 ;C 249 ; WX 611 ; N oslash ; B 29 -22 647 545 ;C 250 ; WX 944 ; N oe ; B 83 -15 964 538 ;C 251 ; WX 611 ; N germandbls ; B 67 -15 658 728 ;C -1 ; WX 278 ; N Idieresis ; B 91 0 458 901 ;C -1 ; WX 556 ; N eacute ; B 84 -15 587 734 ;C -1 ; WX 556 ; N abreve ; B 61 -15 578 731 ;C -1 ; WX 556 ; N uhungarumlaut ; B 94 -15 677 734 ;C -1 ; WX 556 ; N ecaron ; B 84 -15 580 734 ;C -1 ; WX 667 ; N Ydieresis ; B 167 0 806 901 ;C -1 ; WX 584 ; N divide ; B 85 -19 606 524 ;C -1 ; WX 667 ; N Yacute ; B 167 0 806 929 ;C -1 ; WX 667 ; N Acircumflex ; B 14 0 654 929 ;C -1 ; WX 556 ; N aacute ; B 61 -15 587 734 ;C -1 ; WX 722 ; N Ucircumflex ; B 123 -19 797 929 ;C -1 ; WX 500 ; N yacute ; B 15 -214 600 734 ;C -1 ; WX 500 ; N scommaaccent ; B 63 -225 529 538 ;C -1 ; WX 556 ; N ecircumflex ; B 84 -15 578 734 ;C -1 ; WX 722 ; N Uring ; B 123 -19 797 931 ;C -1 ; WX 722 ; N Udieresis ; B 123 -19 797 901 ;C -1 ; WX 556 ; N aogonek ; B 61 -220 559 538 ;C -1 ; WX 722 ; N Uacute ; B 123 -19 797 929 ;C -1 ; WX 556 ; N uogonek ; B 94 -225 600 523 ;C -1 ; WX 667 ; N Edieresis ; B 86 0 762 901 ;C -1 ; WX 722 ; N Dcroat ; B 69 0 764 718 ;C -1 ; WX 250 ; N commaaccent ; B 39 -225 172 -40 ;C -1 ; WX 737 ; N copyright ; B 54 -19 837 737 ;C -1 ; WX 667 ; N Emacron ; B 86 0 762 879 ;C -1 ; WX 500 ; N ccaron ; B 74 -15 553 734 ;C -1 ; WX 556 ; N aring ; B 61 -15 559 756 ;C -1 ; WX 722 ; N Ncommaaccent ; B 76 -225 799 718 ;C -1 ; WX 222 ; N lacute ; B 67 0 461 929 ;C -1 ; WX 556 ; N agrave ; B 61 -15 559 734 ;C -1 ; WX 611 ; N Tcommaaccent ; B 148 -225 750 718 ;C -1 ; WX 722 ; N Cacute ; B 108 -19 782 929 ;C -1 ; WX 556 ; N atilde ; B 61 -15 592 722 ;C -1 ; WX 667 ; N Edotaccent ; B 86 0 762 901 ;C -1 ; WX 500 ; N scaron ; B 63 -15 552 734 ;C -1 ; WX 500 ; N scedilla ; B 63 -225 529 538 ;C -1 ; WX 278 ; N iacute ; B 95 0 448 734 ;C -1 ; WX 471 ; N lozenge ; B 88 0 540 728 ;C -1 ; WX 722 ; N Rcaron ; B 88 0 773 929 ;C -1 ; WX 778 ; N Gcommaaccent ; B 111 -225 799 737 ;C -1 ; WX 556 ; N ucircumflex ; B 94 -15 600 734 ;C -1 ; WX 556 ; N acircumflex ; B 61 -15 559 734 ;C -1 ; WX 667 ; N Amacron ; B 14 0 677 879 ;C -1 ; WX 333 ; N rcaron ; B 77 0 508 734 ;C -1 ; WX 500 ; N ccedilla ; B 74 -225 553 538 ;C -1 ; WX 611 ; N Zdotaccent ; B 23 0 741 901 ;C -1 ; WX 667 ; N Thorn ; B 86 0 712 718 ;C -1 ; WX 778 ; N Omacron ; B 105 -19 826 879 ;C -1 ; WX 722 ; N Racute ; B 88 0 773 929 ;C -1 ; WX 667 ; N Sacute ; B 90 -19 713 929 ;C -1 ; WX 643 ; N dcaron ; B 84 -15 808 718 ;C -1 ; WX 722 ; N Umacron ; B 123 -19 797 879 ;C -1 ; WX 556 ; N uring ; B 94 -15 600 756 ;C -1 ; WX 333 ; N threesuperior ; B 90 270 436 703 ;C -1 ; WX 778 ; N Ograve ; B 105 -19 826 929 ;C -1 ; WX 667 ; N Agrave ; B 14 0 654 929 ;C -1 ; WX 667 ; N Abreve ; B 14 0 685 926 ;C -1 ; WX 584 ; N multiply ; B 50 0 642 506 ;C -1 ; WX 556 ; N uacute ; B 94 -15 600 734 ;C -1 ; WX 611 ; N Tcaron ; B 148 0 750 929 ;C -1 ; WX 476 ; N partialdiff ; B 41 -38 550 714 ;C -1 ; WX 500 ; N ydieresis ; B 15 -214 600 706 ;C -1 ; WX 722 ; N Nacute ; B 76 0 799 929 ;C -1 ; WX 278 ; N icircumflex ; B 95 0 411 734 ;C -1 ; WX 667 ; N Ecircumflex ; B 86 0 762 929 ;C -1 ; WX 556 ; N adieresis ; B 61 -15 559 706 ;C -1 ; WX 556 ; N edieresis ; B 84 -15 578 706 ;C -1 ; WX 500 ; N cacute ; B 74 -15 559 734 ;C -1 ; WX 556 ; N nacute ; B 65 0 587 734 ;C -1 ; WX 556 ; N umacron ; B 94 -15 600 684 ;C -1 ; WX 722 ; N Ncaron ; B 76 0 799 929 ;C -1 ; WX 278 ; N Iacute ; B 91 0 489 929 ;C -1 ; WX 584 ; N plusminus ; B 39 0 618 506 ;C -1 ; WX 260 ; N brokenbar ; B 62 -150 316 700 ;C -1 ; WX 737 ; N registered ; B 54 -19 837 737 ;C -1 ; WX 778 ; N Gbreve ; B 111 -19 799 926 ;C -1 ; WX 278 ; N Idotaccent ; B 91 0 377 901 ;C -1 ; WX 600 ; N summation ; B 15 -10 671 706 ;C -1 ; WX 667 ; N Egrave ; B 86 0 762 929 ;C -1 ; WX 333 ; N racute ; B 77 0 475 734 ;C -1 ; WX 556 ; N omacron ; B 83 -14 585 684 ;C -1 ; WX 611 ; N Zacute ; B 23 0 741 929 ;C -1 ; WX 611 ; N Zcaron ; B 23 0 741 929 ;C -1 ; WX 549 ; N greaterequal ; B 26 0 620 674 ;C -1 ; WX 722 ; N Eth ; B 69 0 764 718 ;C -1 ; WX 722 ; N Ccedilla ; B 108 -225 782 737 ;C -1 ; WX 222 ; N lcommaaccent ; B 25 -225 308 718 ;C -1 ; WX 317 ; N tcaron ; B 102 -7 501 808 ;C -1 ; WX 556 ; N eogonek ; B 84 -225 578 538 ;C -1 ; WX 722 ; N Uogonek ; B 123 -225 797 718 ;C -1 ; WX 667 ; N Aacute ; B 14 0 683 929 ;C -1 ; WX 667 ; N Adieresis ; B 14 0 654 901 ;C -1 ; WX 556 ; N egrave ; B 84 -15 578 734 ;C -1 ; WX 500 ; N zacute ; B 31 0 571 734 ;C -1 ; WX 222 ; N iogonek ; B -61 -225 308 718 ;C -1 ; WX 778 ; N Oacute ; B 105 -19 826 929 ;C -1 ; WX 556 ; N oacute ; B 83 -14 587 734 ;C -1 ; WX 556 ; N amacron ; B 61 -15 580 684 ;C -1 ; WX 500 ; N sacute ; B 63 -15 559 734 ;C -1 ; WX 278 ; N idieresis ; B 95 0 416 706 ;C -1 ; WX 778 ; N Ocircumflex ; B 105 -19 826 929 ;C -1 ; WX 722 ; N Ugrave ; B 123 -19 797 929 ;C -1 ; WX 612 ; N Delta ; B 6 0 608 688 ;C -1 ; WX 556 ; N thorn ; B 14 -207 584 718 ;C -1 ; WX 333 ; N twosuperior ; B 64 281 449 703 ;C -1 ; WX 778 ; N Odieresis ; B 105 -19 826 901 ;C -1 ; WX 556 ; N mu ; B 24 -207 600 523 ;C -1 ; WX 278 ; N igrave ; B 95 0 310 734 ;C -1 ; WX 556 ; N ohungarumlaut ; B 83 -14 677 734 ;C -1 ; WX 667 ; N Eogonek ; B 86 -220 762 718 ;C -1 ; WX 556 ; N dcroat ; B 84 -15 689 718 ;C -1 ; WX 834 ; N threequarters ; B 130 -19 861 703 ;C -1 ; WX 667 ; N Scedilla ; B 90 -225 713 737 ;C -1 ; WX 299 ; N lcaron ; B 67 0 464 718 ;C -1 ; WX 667 ; N Kcommaaccent ; B 76 -225 808 718 ;C -1 ; WX 556 ; N Lacute ; B 76 0 555 929 ;C -1 ; WX 1000 ; N trademark ; B 186 306 1056 718 ;C -1 ; WX 556 ; N edotaccent ; B 84 -15 578 706 ;C -1 ; WX 278 ; N Igrave ; B 91 0 351 929 ;C -1 ; WX 278 ; N Imacron ; B 91 0 483 879 ;C -1 ; WX 556 ; N Lcaron ; B 76 0 570 718 ;C -1 ; WX 834 ; N onehalf ; B 114 -19 839 703 ;C -1 ; WX 549 ; N lessequal ; B 26 0 666 674 ;C -1 ; WX 556 ; N ocircumflex ; B 83 -14 585 734 ;C -1 ; WX 556 ; N ntilde ; B 65 0 592 722 ;C -1 ; WX 722 ; N Uhungarumlaut ; B 123 -19 801 929 ;C -1 ; WX 667 ; N Eacute ; B 86 0 762 929 ;C -1 ; WX 556 ; N emacron ; B 84 -15 580 684 ;C -1 ; WX 556 ; N gbreve ; B 42 -220 610 731 ;C -1 ; WX 834 ; N onequarter ; B 150 -19 802 703 ;C -1 ; WX 667 ; N Scaron ; B 90 -19 713 929 ;C -1 ; WX 667 ; N Scommaaccent ; B 90 -225 713 737 ;C -1 ; WX 778 ; N Ohungarumlaut ; B 105 -19 829 929 ;C -1 ; WX 400 ; N degree ; B 169 411 468 703 ;C -1 ; WX 556 ; N ograve ; B 83 -14 585 734 ;C -1 ; WX 722 ; N Ccaron ; B 108 -19 782 929 ;C -1 ; WX 556 ; N ugrave ; B 94 -15 600 734 ;C -1 ; WX 453 ; N radical ; B 79 -80 617 762 ;C -1 ; WX 722 ; N Dcaron ; B 81 0 764 929 ;C -1 ; WX 333 ; N rcommaaccent ; B 30 -225 446 538 ;C -1 ; WX 722 ; N Ntilde ; B 76 0 799 917 ;C -1 ; WX 556 ; N otilde ; B 83 -14 602 722 ;C -1 ; WX 722 ; N Rcommaaccent ; B 88 -225 773 718 ;C -1 ; WX 556 ; N Lcommaaccent ; B 76 -225 555 718 ;C -1 ; WX 667 ; N Atilde ; B 14 0 699 917 ;C -1 ; WX 667 ; N Aogonek ; B 14 -225 654 718 ;C -1 ; WX 667 ; N Aring ; B 14 0 654 931 ;C -1 ; WX 778 ; N Otilde ; B 105 -19 826 917 ;C -1 ; WX 500 ; N zdotaccent ; B 31 0 571 706 ;C -1 ; WX 667 ; N Ecaron ; B 86 0 762 929 ;C -1 ; WX 278 ; N Iogonek ; B -33 -225 341 718 ;C -1 ; WX 500 ; N kcommaaccent ; B 67 -225 600 718 ;C -1 ; WX 584 ; N minus ; B 85 216 606 289 ;C -1 ; WX 278 ; N Icircumflex ; B 91 0 452 929 ;C -1 ; WX 556 ; N ncaron ; B 65 0 580 734 ;C -1 ; WX 278 ; N tcommaaccent ; B 63 -225 368 669 ;C -1 ; WX 584 ; N logicalnot ; B 106 108 628 390 ;C -1 ; WX 556 ; N odieresis ; B 83 -14 585 706 ;C -1 ; WX 556 ; N udieresis ; B 94 -15 600 706 ;C -1 ; WX 549 ; N notequal ; B 34 -35 623 551 ;C -1 ; WX 556 ; N gcommaaccent ; B 42 -220 610 822 ;C -1 ; WX 556 ; N eth ; B 81 -15 617 737 ;C -1 ; WX 500 ; N zcaron ; B 31 0 571 734 ;C -1 ; WX 556 ; N ncommaaccent ; B 65 -225 573 538 ;C -1 ; WX 333 ; N onesuperior ; B 166 281 371 703 ;C -1 ; WX 278 ; N imacron ; B 95 0 417 684 ;C -1 ; WX 556 ; N Euro ; B 0 0 0 0 ;EndCharMetricsStartKernDataStartKernPairs 2705KPX A C -30KPX A Cacute -30KPX A Ccaron -30KPX A Ccedilla -30KPX A G -30KPX A Gbreve -30KPX A Gcommaaccent -30KPX A O -30KPX A Oacute -30KPX A Ocircumflex -30KPX A Odieresis -30KPX A Ograve -30KPX A Ohungarumlaut -30KPX A Omacron -30KPX A Oslash -30KPX A Otilde -30KPX A Q -30KPX A T -120KPX A Tcaron -120KPX A Tcommaaccent -120KPX A U -50KPX A Uacute -50KPX A Ucircumflex -50KPX A Udieresis -50KPX A Ugrave -50KPX A Uhungarumlaut -50KPX A Umacron -50KPX A Uogonek -50KPX A Uring -50KPX A V -70KPX A W -50KPX A Y -100KPX A Yacute -100KPX A Ydieresis -100KPX A u -30KPX A uacute -30KPX A ucircumflex -30KPX A udieresis -30KPX A ugrave -30KPX A uhungarumlaut -30KPX A umacron -30KPX A uogonek -30KPX A uring -30KPX A v -40KPX A w -40KPX A y -40KPX A yacute -40KPX A ydieresis -40KPX Aacute C -30KPX Aacute Cacute -30KPX Aacute Ccaron -30KPX Aacute Ccedilla -30KPX Aacute G -30KPX Aacute Gbreve -30KPX Aacute Gcommaaccent -30KPX Aacute O -30KPX Aacute Oacute -30KPX Aacute Ocircumflex -30KPX Aacute Odieresis -30KPX Aacute Ograve -30KPX Aacute Ohungarumlaut -30KPX Aacute Omacron -30KPX Aacute Oslash -30KPX Aacute Otilde -30KPX Aacute Q -30KPX Aacute T -120KPX Aacute Tcaron -120KPX Aacute Tcommaaccent -120KPX Aacute U -50KPX Aacute Uacute -50KPX Aacute Ucircumflex -50KPX Aacute Udieresis -50KPX Aacute Ugrave -50KPX Aacute Uhungarumlaut -50KPX Aacute Umacron -50KPX Aacute Uogonek -50KPX Aacute Uring -50KPX Aacute V -70KPX Aacute W -50KPX Aacute Y -100KPX Aacute Yacute -100KPX Aacute Ydieresis -100KPX Aacute u -30KPX Aacute uacute -30KPX Aacute ucircumflex -30KPX Aacute udieresis -30KPX Aacute ugrave -30KPX Aacute uhungarumlaut -30KPX Aacute umacron -30KPX Aacute uogonek -30KPX Aacute uring -30KPX Aacute v -40KPX Aacute w -40KPX Aacute y -40KPX Aacute yacute -40KPX Aacute ydieresis -40KPX Abreve C -30KPX Abreve Cacute -30KPX Abreve Ccaron -30KPX Abreve Ccedilla -30KPX Abreve G -30KPX Abreve Gbreve -30KPX Abreve Gcommaaccent -30KPX Abreve O -30KPX Abreve Oacute -30KPX Abreve Ocircumflex -30KPX Abreve Odieresis -30KPX Abreve Ograve -30KPX Abreve Ohungarumlaut -30KPX Abreve Omacron -30KPX Abreve Oslash -30KPX Abreve Otilde -30KPX Abreve Q -30KPX Abreve T -120KPX Abreve Tcaron -120KPX Abreve Tcommaaccent -120KPX Abreve U -50KPX Abreve Uacute -50KPX Abreve Ucircumflex -50KPX Abreve Udieresis -50KPX Abreve Ugrave -50KPX Abreve Uhungarumlaut -50KPX Abreve Umacron -50KPX Abreve Uogonek -50KPX Abreve Uring -50KPX Abreve V -70KPX Abreve W -50KPX Abreve Y -100KPX Abreve Yacute -100KPX Abreve Ydieresis -100KPX Abreve u -30KPX Abreve uacute -30KPX Abreve ucircumflex -30KPX Abreve udieresis -30KPX Abreve ugrave -30KPX Abreve uhungarumlaut -30KPX Abreve umacron -30KPX Abreve uogonek -30KPX Abreve uring -30KPX Abreve v -40KPX Abreve w -40KPX Abreve y -40KPX Abreve yacute -40KPX Abreve ydieresis -40KPX Acircumflex C -30KPX Acircumflex Cacute -30KPX Acircumflex Ccaron -30KPX Acircumflex Ccedilla -30KPX Acircumflex G -30KPX Acircumflex Gbreve -30KPX Acircumflex Gcommaaccent -30KPX Acircumflex O -30KPX Acircumflex Oacute -30KPX Acircumflex Ocircumflex -30KPX Acircumflex Odieresis -30KPX Acircumflex Ograve -30KPX Acircumflex Ohungarumlaut -30KPX Acircumflex Omacron -30KPX Acircumflex Oslash -30KPX Acircumflex Otilde -30KPX Acircumflex Q -30KPX Acircumflex T -120KPX Acircumflex Tcaron -120KPX Acircumflex Tcommaaccent -120KPX Acircumflex U -50KPX Acircumflex Uacute -50KPX Acircumflex Ucircumflex -50KPX Acircumflex Udieresis -50KPX Acircumflex Ugrave -50KPX Acircumflex Uhungarumlaut -50KPX Acircumflex Umacron -50KPX Acircumflex Uogonek -50KPX Acircumflex Uring -50KPX Acircumflex V -70KPX Acircumflex W -50KPX Acircumflex Y -100KPX Acircumflex Yacute -100KPX Acircumflex Ydieresis -100KPX Acircumflex u -30KPX Acircumflex uacute -30KPX Acircumflex ucircumflex -30KPX Acircumflex udieresis -30KPX Acircumflex ugrave -30KPX Acircumflex uhungarumlaut -30KPX Acircumflex umacron -30KPX Acircumflex uogonek -30KPX Acircumflex uring -30KPX Acircumflex v -40KPX Acircumflex w -40KPX Acircumflex y -40KPX Acircumflex yacute -40KPX Acircumflex ydieresis -40KPX Adieresis C -30KPX Adieresis Cacute -30KPX Adieresis Ccaron -30KPX Adieresis Ccedilla -30KPX Adieresis G -30KPX Adieresis Gbreve -30KPX Adieresis Gcommaaccent -30KPX Adieresis O -30KPX Adieresis Oacute -30KPX Adieresis Ocircumflex -30KPX Adieresis Odieresis -30KPX Adieresis Ograve -30KPX Adieresis Ohungarumlaut -30KPX Adieresis Omacron -30KPX Adieresis Oslash -30KPX Adieresis Otilde -30KPX Adieresis Q -30KPX Adieresis T -120KPX Adieresis Tcaron -120KPX Adieresis Tcommaaccent -120KPX Adieresis U -50KPX Adieresis Uacute -50KPX Adieresis Ucircumflex -50KPX Adieresis Udieresis -50KPX Adieresis Ugrave -50KPX Adieresis Uhungarumlaut -50KPX Adieresis Umacron -50KPX Adieresis Uogonek -50KPX Adieresis Uring -50KPX Adieresis V -70KPX Adieresis W -50KPX Adieresis Y -100KPX Adieresis Yacute -100KPX Adieresis Ydieresis -100KPX Adieresis u -30KPX Adieresis uacute -30KPX Adieresis ucircumflex -30KPX Adieresis udieresis -30KPX Adieresis ugrave -30KPX Adieresis uhungarumlaut -30KPX Adieresis umacron -30KPX Adieresis uogonek -30KPX Adieresis uring -30KPX Adieresis v -40KPX Adieresis w -40KPX Adieresis y -40KPX Adieresis yacute -40KPX Adieresis ydieresis -40KPX Agrave C -30KPX Agrave Cacute -30KPX Agrave Ccaron -30KPX Agrave Ccedilla -30KPX Agrave G -30KPX Agrave Gbreve -30KPX Agrave Gcommaaccent -30KPX Agrave O -30KPX Agrave Oacute -30KPX Agrave Ocircumflex -30KPX Agrave Odieresis -30KPX Agrave Ograve -30KPX Agrave Ohungarumlaut -30KPX Agrave Omacron -30KPX Agrave Oslash -30KPX Agrave Otilde -30KPX Agrave Q -30KPX Agrave T -120KPX Agrave Tcaron -120KPX Agrave Tcommaaccent -120KPX Agrave U -50KPX Agrave Uacute -50KPX Agrave Ucircumflex -50KPX Agrave Udieresis -50KPX Agrave Ugrave -50KPX Agrave Uhungarumlaut -50KPX Agrave Umacron -50KPX Agrave Uogonek -50KPX Agrave Uring -50KPX Agrave V -70KPX Agrave W -50KPX Agrave Y -100KPX Agrave Yacute -100KPX Agrave Ydieresis -100KPX Agrave u -30KPX Agrave uacute -30KPX Agrave ucircumflex -30KPX Agrave udieresis -30KPX Agrave ugrave -30KPX Agrave uhungarumlaut -30KPX Agrave umacron -30KPX Agrave uogonek -30KPX Agrave uring -30KPX Agrave v -40KPX Agrave w -40KPX Agrave y -40KPX Agrave yacute -40KPX Agrave ydieresis -40KPX Amacron C -30KPX Amacron Cacute -30KPX Amacron Ccaron -30KPX Amacron Ccedilla -30KPX Amacron G -30KPX Amacron Gbreve -30KPX Amacron Gcommaaccent -30KPX Amacron O -30KPX Amacron Oacute -30KPX Amacron Ocircumflex -30KPX Amacron Odieresis -30KPX Amacron Ograve -30KPX Amacron Ohungarumlaut -30KPX Amacron Omacron -30KPX Amacron Oslash -30KPX Amacron Otilde -30KPX Amacron Q -30KPX Amacron T -120KPX Amacron Tcaron -120KPX Amacron Tcommaaccent -120KPX Amacron U -50KPX Amacron Uacute -50KPX Amacron Ucircumflex -50KPX Amacron Udieresis -50KPX Amacron Ugrave -50KPX Amacron Uhungarumlaut -50KPX Amacron Umacron -50KPX Amacron Uogonek -50KPX Amacron Uring -50KPX Amacron V -70KPX Amacron W -50KPX Amacron Y -100KPX Amacron Yacute -100KPX Amacron Ydieresis -100KPX Amacron u -30KPX Amacron uacute -30KPX Amacron ucircumflex -30KPX Amacron udieresis -30KPX Amacron ugrave -30KPX Amacron uhungarumlaut -30KPX Amacron umacron -30KPX Amacron uogonek -30KPX Amacron uring -30KPX Amacron v -40KPX Amacron w -40KPX Amacron y -40KPX Amacron yacute -40KPX Amacron ydieresis -40KPX Aogonek C -30KPX Aogonek Cacute -30KPX Aogonek Ccaron -30KPX Aogonek Ccedilla -30KPX Aogonek G -30KPX Aogonek Gbreve -30KPX Aogonek Gcommaaccent -30KPX Aogonek O -30KPX Aogonek Oacute -30KPX Aogonek Ocircumflex -30KPX Aogonek Odieresis -30KPX Aogonek Ograve -30KPX Aogonek Ohungarumlaut -30KPX Aogonek Omacron -30KPX Aogonek Oslash -30KPX Aogonek Otilde -30KPX Aogonek Q -30KPX Aogonek T -120KPX Aogonek Tcaron -120KPX Aogonek Tcommaaccent -120KPX Aogonek U -50KPX Aogonek Uacute -50KPX Aogonek Ucircumflex -50KPX Aogonek Udieresis -50KPX Aogonek Ugrave -50KPX Aogonek Uhungarumlaut -50KPX Aogonek Umacron -50KPX Aogonek Uogonek -50KPX Aogonek Uring -50KPX Aogonek V -70KPX Aogonek W -50KPX Aogonek Y -100KPX Aogonek Yacute -100KPX Aogonek Ydieresis -100KPX Aogonek u -30KPX Aogonek uacute -30KPX Aogonek ucircumflex -30KPX Aogonek udieresis -30KPX Aogonek ugrave -30KPX Aogonek uhungarumlaut -30KPX Aogonek umacron -30KPX Aogonek uogonek -30KPX Aogonek uring -30KPX Aogonek v -40KPX Aogonek w -40KPX Aogonek y -40KPX Aogonek yacute -40KPX Aogonek ydieresis -40KPX Aring C -30KPX Aring Cacute -30KPX Aring Ccaron -30KPX Aring Ccedilla -30KPX Aring G -30KPX Aring Gbreve -30KPX Aring Gcommaaccent -30KPX Aring O -30KPX Aring Oacute -30KPX Aring Ocircumflex -30KPX Aring Odieresis -30KPX Aring Ograve -30KPX Aring Ohungarumlaut -30KPX Aring Omacron -30KPX Aring Oslash -30KPX Aring Otilde -30KPX Aring Q -30KPX Aring T -120KPX Aring Tcaron -120KPX Aring Tcommaaccent -120KPX Aring U -50KPX Aring Uacute -50KPX Aring Ucircumflex -50KPX Aring Udieresis -50KPX Aring Ugrave -50KPX Aring Uhungarumlaut -50KPX Aring Umacron -50KPX Aring Uogonek -50KPX Aring Uring -50KPX Aring V -70KPX Aring W -50KPX Aring Y -100KPX Aring Yacute -100KPX Aring Ydieresis -100KPX Aring u -30KPX Aring uacute -30KPX Aring ucircumflex -30KPX Aring udieresis -30KPX Aring ugrave -30KPX Aring uhungarumlaut -30KPX Aring umacron -30KPX Aring uogonek -30KPX Aring uring -30KPX Aring v -40KPX Aring w -40KPX Aring y -40KPX Aring yacute -40KPX Aring ydieresis -40KPX Atilde C -30KPX Atilde Cacute -30KPX Atilde Ccaron -30KPX Atilde Ccedilla -30KPX Atilde G -30KPX Atilde Gbreve -30KPX Atilde Gcommaaccent -30KPX Atilde O -30KPX Atilde Oacute -30KPX Atilde Ocircumflex -30KPX Atilde Odieresis -30KPX Atilde Ograve -30KPX Atilde Ohungarumlaut -30KPX Atilde Omacron -30KPX Atilde Oslash -30KPX Atilde Otilde -30KPX Atilde Q -30KPX Atilde T -120KPX Atilde Tcaron -120KPX Atilde Tcommaaccent -120KPX Atilde U -50KPX Atilde Uacute -50KPX Atilde Ucircumflex -50KPX Atilde Udieresis -50KPX Atilde Ugrave -50KPX Atilde Uhungarumlaut -50KPX Atilde Umacron -50KPX Atilde Uogonek -50KPX Atilde Uring -50KPX Atilde V -70KPX Atilde W -50KPX Atilde Y -100KPX Atilde Yacute -100KPX Atilde Ydieresis -100KPX Atilde u -30KPX Atilde uacute -30KPX Atilde ucircumflex -30KPX Atilde udieresis -30KPX Atilde ugrave -30KPX Atilde uhungarumlaut -30KPX Atilde umacron -30KPX Atilde uogonek -30KPX Atilde uring -30KPX Atilde v -40KPX Atilde w -40KPX Atilde y -40KPX Atilde yacute -40KPX Atilde ydieresis -40KPX B U -10KPX B Uacute -10KPX B Ucircumflex -10KPX B Udieresis -10KPX B Ugrave -10KPX B Uhungarumlaut -10KPX B Umacron -10KPX B Uogonek -10KPX B Uring -10KPX B comma -20KPX B period -20KPX C comma -30KPX C period -30KPX Cacute comma -30KPX Cacute period -30KPX Ccaron comma -30KPX Ccaron period -30KPX Ccedilla comma -30KPX Ccedilla period -30KPX D A -40KPX D Aacute -40KPX D Abreve -40KPX D Acircumflex -40KPX D Adieresis -40KPX D Agrave -40KPX D Amacron -40KPX D Aogonek -40KPX D Aring -40KPX D Atilde -40KPX D V -70KPX D W -40KPX D Y -90KPX D Yacute -90KPX D Ydieresis -90KPX D comma -70KPX D period -70KPX Dcaron A -40KPX Dcaron Aacute -40KPX Dcaron Abreve -40KPX Dcaron Acircumflex -40KPX Dcaron Adieresis -40KPX Dcaron Agrave -40KPX Dcaron Amacron -40KPX Dcaron Aogonek -40KPX Dcaron Aring -40KPX Dcaron Atilde -40KPX Dcaron V -70KPX Dcaron W -40KPX Dcaron Y -90KPX Dcaron Yacute -90KPX Dcaron Ydieresis -90KPX Dcaron comma -70KPX Dcaron period -70KPX Dcroat A -40KPX Dcroat Aacute -40KPX Dcroat Abreve -40KPX Dcroat Acircumflex -40KPX Dcroat Adieresis -40KPX Dcroat Agrave -40KPX Dcroat Amacron -40KPX Dcroat Aogonek -40KPX Dcroat Aring -40KPX Dcroat Atilde -40KPX Dcroat V -70KPX Dcroat W -40KPX Dcroat Y -90KPX Dcroat Yacute -90KPX Dcroat Ydieresis -90KPX Dcroat comma -70KPX Dcroat period -70KPX F A -80KPX F Aacute -80KPX F Abreve -80KPX F Acircumflex -80KPX F Adieresis -80KPX F Agrave -80KPX F Amacron -80KPX F Aogonek -80KPX F Aring -80KPX F Atilde -80KPX F a -50KPX F aacute -50KPX F abreve -50KPX F acircumflex -50KPX F adieresis -50KPX F agrave -50KPX F amacron -50KPX F aogonek -50KPX F aring -50KPX F atilde -50KPX F comma -150KPX F e -30KPX F eacute -30KPX F ecaron -30KPX F ecircumflex -30KPX F edieresis -30KPX F edotaccent -30KPX F egrave -30KPX F emacron -30KPX F eogonek -30KPX F o -30KPX F oacute -30KPX F ocircumflex -30KPX F odieresis -30KPX F ograve -30KPX F ohungarumlaut -30KPX F omacron -30KPX F oslash -30KPX F otilde -30KPX F period -150KPX F r -45KPX F racute -45KPX F rcaron -45KPX F rcommaaccent -45KPX J A -20KPX J Aacute -20KPX J Abreve -20KPX J Acircumflex -20KPX J Adieresis -20KPX J Agrave -20KPX J Amacron -20KPX J Aogonek -20KPX J Aring -20KPX J Atilde -20KPX J a -20KPX J aacute -20KPX J abreve -20KPX J acircumflex -20KPX J adieresis -20KPX J agrave -20KPX J amacron -20KPX J aogonek -20KPX J aring -20KPX J atilde -20KPX J comma -30KPX J period -30KPX J u -20KPX J uacute -20KPX J ucircumflex -20KPX J udieresis -20KPX J ugrave -20KPX J uhungarumlaut -20KPX J umacron -20KPX J uogonek -20KPX J uring -20KPX K O -50KPX K Oacute -50KPX K Ocircumflex -50KPX K Odieresis -50KPX K Ograve -50KPX K Ohungarumlaut -50KPX K Omacron -50KPX K Oslash -50KPX K Otilde -50KPX K e -40KPX K eacute -40KPX K ecaron -40KPX K ecircumflex -40KPX K edieresis -40KPX K edotaccent -40KPX K egrave -40KPX K emacron -40KPX K eogonek -40KPX K o -40KPX K oacute -40KPX K ocircumflex -40KPX K odieresis -40KPX K ograve -40KPX K ohungarumlaut -40KPX K omacron -40KPX K oslash -40KPX K otilde -40KPX K u -30KPX K uacute -30KPX K ucircumflex -30KPX K udieresis -30KPX K ugrave -30KPX K uhungarumlaut -30KPX K umacron -30KPX K uogonek -30KPX K uring -30KPX K y -50KPX K yacute -50KPX K ydieresis -50KPX Kcommaaccent O -50KPX Kcommaaccent Oacute -50KPX Kcommaaccent Ocircumflex -50KPX Kcommaaccent Odieresis -50KPX Kcommaaccent Ograve -50KPX Kcommaaccent Ohungarumlaut -50KPX Kcommaaccent Omacron -50KPX Kcommaaccent Oslash -50KPX Kcommaaccent Otilde -50KPX Kcommaaccent e -40KPX Kcommaaccent eacute -40KPX Kcommaaccent ecaron -40KPX Kcommaaccent ecircumflex -40KPX Kcommaaccent edieresis -40KPX Kcommaaccent edotaccent -40KPX Kcommaaccent egrave -40KPX Kcommaaccent emacron -40KPX Kcommaaccent eogonek -40KPX Kcommaaccent o -40KPX Kcommaaccent oacute -40KPX Kcommaaccent ocircumflex -40KPX Kcommaaccent odieresis -40KPX Kcommaaccent ograve -40KPX Kcommaaccent ohungarumlaut -40KPX Kcommaaccent omacron -40KPX Kcommaaccent oslash -40KPX Kcommaaccent otilde -40KPX Kcommaaccent u -30KPX Kcommaaccent uacute -30KPX Kcommaaccent ucircumflex -30KPX Kcommaaccent udieresis -30KPX Kcommaaccent ugrave -30KPX Kcommaaccent uhungarumlaut -30KPX Kcommaaccent umacron -30KPX Kcommaaccent uogonek -30KPX Kcommaaccent uring -30KPX Kcommaaccent y -50KPX Kcommaaccent yacute -50KPX Kcommaaccent ydieresis -50KPX L T -110KPX L Tcaron -110KPX L Tcommaaccent -110KPX L V -110KPX L W -70KPX L Y -140KPX L Yacute -140KPX L Ydieresis -140KPX L quotedblright -140KPX L quoteright -160KPX L y -30KPX L yacute -30KPX L ydieresis -30KPX Lacute T -110KPX Lacute Tcaron -110KPX Lacute Tcommaaccent -110KPX Lacute V -110KPX Lacute W -70KPX Lacute Y -140KPX Lacute Yacute -140KPX Lacute Ydieresis -140KPX Lacute quotedblright -140KPX Lacute quoteright -160KPX Lacute y -30KPX Lacute yacute -30KPX Lacute ydieresis -30KPX Lcaron T -110KPX Lcaron Tcaron -110KPX Lcaron Tcommaaccent -110KPX Lcaron V -110KPX Lcaron W -70KPX Lcaron Y -140KPX Lcaron Yacute -140KPX Lcaron Ydieresis -140KPX Lcaron quotedblright -140KPX Lcaron quoteright -160KPX Lcaron y -30KPX Lcaron yacute -30KPX Lcaron ydieresis -30KPX Lcommaaccent T -110KPX Lcommaaccent Tcaron -110KPX Lcommaaccent Tcommaaccent -110KPX Lcommaaccent V -110KPX Lcommaaccent W -70KPX Lcommaaccent Y -140KPX Lcommaaccent Yacute -140KPX Lcommaaccent Ydieresis -140KPX Lcommaaccent quotedblright -140KPX Lcommaaccent quoteright -160KPX Lcommaaccent y -30KPX Lcommaaccent yacute -30KPX Lcommaaccent ydieresis -30KPX Lslash T -110KPX Lslash Tcaron -110KPX Lslash Tcommaaccent -110KPX Lslash V -110KPX Lslash W -70KPX Lslash Y -140KPX Lslash Yacute -140KPX Lslash Ydieresis -140KPX Lslash quotedblright -140KPX Lslash quoteright -160KPX Lslash y -30KPX Lslash yacute -30KPX Lslash ydieresis -30KPX O A -20KPX O Aacute -20KPX O Abreve -20KPX O Acircumflex -20KPX O Adieresis -20KPX O Agrave -20KPX O Amacron -20KPX O Aogonek -20KPX O Aring -20KPX O Atilde -20KPX O T -40KPX O Tcaron -40KPX O Tcommaaccent -40KPX O V -50KPX O W -30KPX O X -60KPX O Y -70KPX O Yacute -70KPX O Ydieresis -70KPX O comma -40KPX O period -40KPX Oacute A -20KPX Oacute Aacute -20KPX Oacute Abreve -20KPX Oacute Acircumflex -20KPX Oacute Adieresis -20KPX Oacute Agrave -20KPX Oacute Amacron -20KPX Oacute Aogonek -20KPX Oacute Aring -20KPX Oacute Atilde -20KPX Oacute T -40KPX Oacute Tcaron -40KPX Oacute Tcommaaccent -40KPX Oacute V -50KPX Oacute W -30KPX Oacute X -60KPX Oacute Y -70KPX Oacute Yacute -70KPX Oacute Ydieresis -70KPX Oacute comma -40KPX Oacute period -40KPX Ocircumflex A -20KPX Ocircumflex Aacute -20KPX Ocircumflex Abreve -20KPX Ocircumflex Acircumflex -20KPX Ocircumflex Adieresis -20KPX Ocircumflex Agrave -20KPX Ocircumflex Amacron -20KPX Ocircumflex Aogonek -20KPX Ocircumflex Aring -20KPX Ocircumflex Atilde -20KPX Ocircumflex T -40KPX Ocircumflex Tcaron -40KPX Ocircumflex Tcommaaccent -40KPX Ocircumflex V -50KPX Ocircumflex W -30KPX Ocircumflex X -60KPX Ocircumflex Y -70KPX Ocircumflex Yacute -70KPX Ocircumflex Ydieresis -70KPX Ocircumflex comma -40KPX Ocircumflex period -40KPX Odieresis A -20KPX Odieresis Aacute -20KPX Odieresis Abreve -20KPX Odieresis Acircumflex -20KPX Odieresis Adieresis -20KPX Odieresis Agrave -20KPX Odieresis Amacron -20KPX Odieresis Aogonek -20KPX Odieresis Aring -20KPX Odieresis Atilde -20KPX Odieresis T -40KPX Odieresis Tcaron -40KPX Odieresis Tcommaaccent -40KPX Odieresis V -50KPX Odieresis W -30KPX Odieresis X -60KPX Odieresis Y -70KPX Odieresis Yacute -70KPX Odieresis Ydieresis -70KPX Odieresis comma -40KPX Odieresis period -40KPX Ograve A -20KPX Ograve Aacute -20KPX Ograve Abreve -20KPX Ograve Acircumflex -20KPX Ograve Adieresis -20KPX Ograve Agrave -20KPX Ograve Amacron -20KPX Ograve Aogonek -20KPX Ograve Aring -20KPX Ograve Atilde -20KPX Ograve T -40KPX Ograve Tcaron -40KPX Ograve Tcommaaccent -40KPX Ograve V -50KPX Ograve W -30KPX Ograve X -60KPX Ograve Y -70KPX Ograve Yacute -70KPX Ograve Ydieresis -70KPX Ograve comma -40KPX Ograve period -40KPX Ohungarumlaut A -20KPX Ohungarumlaut Aacute -20KPX Ohungarumlaut Abreve -20KPX Ohungarumlaut Acircumflex -20KPX Ohungarumlaut Adieresis -20KPX Ohungarumlaut Agrave -20KPX Ohungarumlaut Amacron -20KPX Ohungarumlaut Aogonek -20KPX Ohungarumlaut Aring -20KPX Ohungarumlaut Atilde -20KPX Ohungarumlaut T -40KPX Ohungarumlaut Tcaron -40KPX Ohungarumlaut Tcommaaccent -40KPX Ohungarumlaut V -50KPX Ohungarumlaut W -30KPX Ohungarumlaut X -60KPX Ohungarumlaut Y -70KPX Ohungarumlaut Yacute -70KPX Ohungarumlaut Ydieresis -70KPX Ohungarumlaut comma -40KPX Ohungarumlaut period -40KPX Omacron A -20KPX Omacron Aacute -20KPX Omacron Abreve -20KPX Omacron Acircumflex -20KPX Omacron Adieresis -20KPX Omacron Agrave -20KPX Omacron Amacron -20KPX Omacron Aogonek -20KPX Omacron Aring -20KPX Omacron Atilde -20KPX Omacron T -40KPX Omacron Tcaron -40KPX Omacron Tcommaaccent -40KPX Omacron V -50KPX Omacron W -30KPX Omacron X -60KPX Omacron Y -70KPX Omacron Yacute -70KPX Omacron Ydieresis -70KPX Omacron comma -40KPX Omacron period -40KPX Oslash A -20KPX Oslash Aacute -20KPX Oslash Abreve -20KPX Oslash Acircumflex -20KPX Oslash Adieresis -20KPX Oslash Agrave -20KPX Oslash Amacron -20KPX Oslash Aogonek -20KPX Oslash Aring -20KPX Oslash Atilde -20KPX Oslash T -40KPX Oslash Tcaron -40KPX Oslash Tcommaaccent -40KPX Oslash V -50KPX Oslash W -30KPX Oslash X -60KPX Oslash Y -70KPX Oslash Yacute -70KPX Oslash Ydieresis -70KPX Oslash comma -40KPX Oslash period -40KPX Otilde A -20KPX Otilde Aacute -20KPX Otilde Abreve -20KPX Otilde Acircumflex -20KPX Otilde Adieresis -20KPX Otilde Agrave -20KPX Otilde Amacron -20KPX Otilde Aogonek -20KPX Otilde Aring -20KPX Otilde Atilde -20KPX Otilde T -40KPX Otilde Tcaron -40KPX Otilde Tcommaaccent -40KPX Otilde V -50KPX Otilde W -30KPX Otilde X -60KPX Otilde Y -70KPX Otilde Yacute -70KPX Otilde Ydieresis -70KPX Otilde comma -40KPX Otilde period -40KPX P A -120KPX P Aacute -120KPX P Abreve -120KPX P Acircumflex -120KPX P Adieresis -120KPX P Agrave -120KPX P Amacron -120KPX P Aogonek -120KPX P Aring -120KPX P Atilde -120KPX P a -40KPX P aacute -40KPX P abreve -40KPX P acircumflex -40KPX P adieresis -40KPX P agrave -40KPX P amacron -40KPX P aogonek -40KPX P aring -40KPX P atilde -40KPX P comma -180KPX P e -50KPX P eacute -50KPX P ecaron -50KPX P ecircumflex -50KPX P edieresis -50KPX P edotaccent -50KPX P egrave -50KPX P emacron -50KPX P eogonek -50KPX P o -50KPX P oacute -50KPX P ocircumflex -50KPX P odieresis -50KPX P ograve -50KPX P ohungarumlaut -50KPX P omacron -50KPX P oslash -50KPX P otilde -50KPX P period -180KPX Q U -10KPX Q Uacute -10KPX Q Ucircumflex -10KPX Q Udieresis -10KPX Q Ugrave -10KPX Q Uhungarumlaut -10KPX Q Umacron -10KPX Q Uogonek -10KPX Q Uring -10KPX R O -20KPX R Oacute -20KPX R Ocircumflex -20KPX R Odieresis -20KPX R Ograve -20KPX R Ohungarumlaut -20KPX R Omacron -20KPX R Oslash -20KPX R Otilde -20KPX R T -30KPX R Tcaron -30KPX R Tcommaaccent -30KPX R U -40KPX R Uacute -40KPX R Ucircumflex -40KPX R Udieresis -40KPX R Ugrave -40KPX R Uhungarumlaut -40KPX R Umacron -40KPX R Uogonek -40KPX R Uring -40KPX R V -50KPX R W -30KPX R Y -50KPX R Yacute -50KPX R Ydieresis -50KPX Racute O -20KPX Racute Oacute -20KPX Racute Ocircumflex -20KPX Racute Odieresis -20KPX Racute Ograve -20KPX Racute Ohungarumlaut -20KPX Racute Omacron -20KPX Racute Oslash -20KPX Racute Otilde -20KPX Racute T -30KPX Racute Tcaron -30KPX Racute Tcommaaccent -30KPX Racute U -40KPX Racute Uacute -40KPX Racute Ucircumflex -40KPX Racute Udieresis -40KPX Racute Ugrave -40KPX Racute Uhungarumlaut -40KPX Racute Umacron -40KPX Racute Uogonek -40KPX Racute Uring -40KPX Racute V -50KPX Racute W -30KPX Racute Y -50KPX Racute Yacute -50KPX Racute Ydieresis -50KPX Rcaron O -20KPX Rcaron Oacute -20KPX Rcaron Ocircumflex -20KPX Rcaron Odieresis -20KPX Rcaron Ograve -20KPX Rcaron Ohungarumlaut -20KPX Rcaron Omacron -20KPX Rcaron Oslash -20KPX Rcaron Otilde -20KPX Rcaron T -30KPX Rcaron Tcaron -30KPX Rcaron Tcommaaccent -30KPX Rcaron U -40KPX Rcaron Uacute -40KPX Rcaron Ucircumflex -40KPX Rcaron Udieresis -40KPX Rcaron Ugrave -40KPX Rcaron Uhungarumlaut -40KPX Rcaron Umacron -40KPX Rcaron Uogonek -40KPX Rcaron Uring -40KPX Rcaron V -50KPX Rcaron W -30KPX Rcaron Y -50KPX Rcaron Yacute -50KPX Rcaron Ydieresis -50KPX Rcommaaccent O -20KPX Rcommaaccent Oacute -20KPX Rcommaaccent Ocircumflex -20KPX Rcommaaccent Odieresis -20KPX Rcommaaccent Ograve -20KPX Rcommaaccent Ohungarumlaut -20KPX Rcommaaccent Omacron -20KPX Rcommaaccent Oslash -20KPX Rcommaaccent Otilde -20KPX Rcommaaccent T -30KPX Rcommaaccent Tcaron -30KPX Rcommaaccent Tcommaaccent -30KPX Rcommaaccent U -40KPX Rcommaaccent Uacute -40KPX Rcommaaccent Ucircumflex -40KPX Rcommaaccent Udieresis -40KPX Rcommaaccent Ugrave -40KPX Rcommaaccent Uhungarumlaut -40KPX Rcommaaccent Umacron -40KPX Rcommaaccent Uogonek -40KPX Rcommaaccent Uring -40KPX Rcommaaccent V -50KPX Rcommaaccent W -30KPX Rcommaaccent Y -50KPX Rcommaaccent Yacute -50KPX Rcommaaccent Ydieresis -50KPX S comma -20KPX S period -20KPX Sacute comma -20KPX Sacute period -20KPX Scaron comma -20KPX Scaron period -20KPX Scedilla comma -20KPX Scedilla period -20KPX Scommaaccent comma -20KPX Scommaaccent period -20KPX T A -120KPX T Aacute -120KPX T Abreve -120KPX T Acircumflex -120KPX T Adieresis -120KPX T Agrave -120KPX T Amacron -120KPX T Aogonek -120KPX T Aring -120KPX T Atilde -120KPX T O -40KPX T Oacute -40KPX T Ocircumflex -40KPX T Odieresis -40KPX T Ograve -40KPX T Ohungarumlaut -40KPX T Omacron -40KPX T Oslash -40KPX T Otilde -40KPX T a -120KPX T aacute -120KPX T abreve -60KPX T acircumflex -120KPX T adieresis -120KPX T agrave -120KPX T amacron -60KPX T aogonek -120KPX T aring -120KPX T atilde -60KPX T colon -20KPX T comma -120KPX T e -120KPX T eacute -120KPX T ecaron -120KPX T ecircumflex -120KPX T edieresis -120KPX T edotaccent -120KPX T egrave -60KPX T emacron -60KPX T eogonek -120KPX T hyphen -140KPX T o -120KPX T oacute -120KPX T ocircumflex -120KPX T odieresis -120KPX T ograve -120KPX T ohungarumlaut -120KPX T omacron -60KPX T oslash -120KPX T otilde -60KPX T period -120KPX T r -120KPX T racute -120KPX T rcaron -120KPX T rcommaaccent -120KPX T semicolon -20KPX T u -120KPX T uacute -120KPX T ucircumflex -120KPX T udieresis -120KPX T ugrave -120KPX T uhungarumlaut -120KPX T umacron -60KPX T uogonek -120KPX T uring -120KPX T w -120KPX T y -120KPX T yacute -120KPX T ydieresis -60KPX Tcaron A -120KPX Tcaron Aacute -120KPX Tcaron Abreve -120KPX Tcaron Acircumflex -120KPX Tcaron Adieresis -120KPX Tcaron Agrave -120KPX Tcaron Amacron -120KPX Tcaron Aogonek -120KPX Tcaron Aring -120KPX Tcaron Atilde -120KPX Tcaron O -40KPX Tcaron Oacute -40KPX Tcaron Ocircumflex -40KPX Tcaron Odieresis -40KPX Tcaron Ograve -40KPX Tcaron Ohungarumlaut -40KPX Tcaron Omacron -40KPX Tcaron Oslash -40KPX Tcaron Otilde -40KPX Tcaron a -120KPX Tcaron aacute -120KPX Tcaron abreve -60KPX Tcaron acircumflex -120KPX Tcaron adieresis -120KPX Tcaron agrave -120KPX Tcaron amacron -60KPX Tcaron aogonek -120KPX Tcaron aring -120KPX Tcaron atilde -60KPX Tcaron colon -20KPX Tcaron comma -120KPX Tcaron e -120KPX Tcaron eacute -120KPX Tcaron ecaron -120KPX Tcaron ecircumflex -120KPX Tcaron edieresis -120KPX Tcaron edotaccent -120KPX Tcaron egrave -60KPX Tcaron emacron -60KPX Tcaron eogonek -120KPX Tcaron hyphen -140KPX Tcaron o -120KPX Tcaron oacute -120KPX Tcaron ocircumflex -120KPX Tcaron odieresis -120KPX Tcaron ograve -120KPX Tcaron ohungarumlaut -120KPX Tcaron omacron -60KPX Tcaron oslash -120KPX Tcaron otilde -60KPX Tcaron period -120KPX Tcaron r -120KPX Tcaron racute -120KPX Tcaron rcaron -120KPX Tcaron rcommaaccent -120KPX Tcaron semicolon -20KPX Tcaron u -120KPX Tcaron uacute -120KPX Tcaron ucircumflex -120KPX Tcaron udieresis -120KPX Tcaron ugrave -120KPX Tcaron uhungarumlaut -120KPX Tcaron umacron -60KPX Tcaron uogonek -120KPX Tcaron uring -120KPX Tcaron w -120KPX Tcaron y -120KPX Tcaron yacute -120KPX Tcaron ydieresis -60KPX Tcommaaccent A -120KPX Tcommaaccent Aacute -120KPX Tcommaaccent Abreve -120KPX Tcommaaccent Acircumflex -120KPX Tcommaaccent Adieresis -120KPX Tcommaaccent Agrave -120KPX Tcommaaccent Amacron -120KPX Tcommaaccent Aogonek -120KPX Tcommaaccent Aring -120KPX Tcommaaccent Atilde -120KPX Tcommaaccent O -40KPX Tcommaaccent Oacute -40KPX Tcommaaccent Ocircumflex -40KPX Tcommaaccent Odieresis -40KPX Tcommaaccent Ograve -40KPX Tcommaaccent Ohungarumlaut -40KPX Tcommaaccent Omacron -40KPX Tcommaaccent Oslash -40KPX Tcommaaccent Otilde -40KPX Tcommaaccent a -120KPX Tcommaaccent aacute -120KPX Tcommaaccent abreve -60KPX Tcommaaccent acircumflex -120KPX Tcommaaccent adieresis -120KPX Tcommaaccent agrave -120KPX Tcommaaccent amacron -60KPX Tcommaaccent aogonek -120KPX Tcommaaccent aring -120KPX Tcommaaccent atilde -60KPX Tcommaaccent colon -20KPX Tcommaaccent comma -120KPX Tcommaaccent e -120KPX Tcommaaccent eacute -120KPX Tcommaaccent ecaron -120KPX Tcommaaccent ecircumflex -120KPX Tcommaaccent edieresis -120KPX Tcommaaccent edotaccent -120KPX Tcommaaccent egrave -60KPX Tcommaaccent emacron -60KPX Tcommaaccent eogonek -120KPX Tcommaaccent hyphen -140KPX Tcommaaccent o -120KPX Tcommaaccent oacute -120KPX Tcommaaccent ocircumflex -120KPX Tcommaaccent odieresis -120KPX Tcommaaccent ograve -120KPX Tcommaaccent ohungarumlaut -120KPX Tcommaaccent omacron -60KPX Tcommaaccent oslash -120KPX Tcommaaccent otilde -60KPX Tcommaaccent period -120KPX Tcommaaccent r -120KPX Tcommaaccent racute -120KPX Tcommaaccent rcaron -120KPX Tcommaaccent rcommaaccent -120KPX Tcommaaccent semicolon -20KPX Tcommaaccent u -120KPX Tcommaaccent uacute -120KPX Tcommaaccent ucircumflex -120KPX Tcommaaccent udieresis -120KPX Tcommaaccent ugrave -120KPX Tcommaaccent uhungarumlaut -120KPX Tcommaaccent umacron -60KPX Tcommaaccent uogonek -120KPX Tcommaaccent uring -120KPX Tcommaaccent w -120KPX Tcommaaccent y -120KPX Tcommaaccent yacute -120KPX Tcommaaccent ydieresis -60KPX U A -40KPX U Aacute -40KPX U Abreve -40KPX U Acircumflex -40KPX U Adieresis -40KPX U Agrave -40KPX U Amacron -40KPX U Aogonek -40KPX U Aring -40KPX U Atilde -40KPX U comma -40KPX U period -40KPX Uacute A -40KPX Uacute Aacute -40KPX Uacute Abreve -40KPX Uacute Acircumflex -40KPX Uacute Adieresis -40KPX Uacute Agrave -40KPX Uacute Amacron -40KPX Uacute Aogonek -40KPX Uacute Aring -40KPX Uacute Atilde -40KPX Uacute comma -40KPX Uacute period -40KPX Ucircumflex A -40KPX Ucircumflex Aacute -40KPX Ucircumflex Abreve -40KPX Ucircumflex Acircumflex -40KPX Ucircumflex Adieresis -40KPX Ucircumflex Agrave -40KPX Ucircumflex Amacron -40KPX Ucircumflex Aogonek -40KPX Ucircumflex Aring -40KPX Ucircumflex Atilde -40KPX Ucircumflex comma -40KPX Ucircumflex period -40KPX Udieresis A -40KPX Udieresis Aacute -40KPX Udieresis Abreve -40KPX Udieresis Acircumflex -40KPX Udieresis Adieresis -40KPX Udieresis Agrave -40KPX Udieresis Amacron -40KPX Udieresis Aogonek -40KPX Udieresis Aring -40KPX Udieresis Atilde -40KPX Udieresis comma -40KPX Udieresis period -40KPX Ugrave A -40KPX Ugrave Aacute -40KPX Ugrave Abreve -40KPX Ugrave Acircumflex -40KPX Ugrave Adieresis -40KPX Ugrave Agrave -40KPX Ugrave Amacron -40KPX Ugrave Aogonek -40KPX Ugrave Aring -40KPX Ugrave Atilde -40KPX Ugrave comma -40KPX Ugrave period -40KPX Uhungarumlaut A -40KPX Uhungarumlaut Aacute -40KPX Uhungarumlaut Abreve -40KPX Uhungarumlaut Acircumflex -40KPX Uhungarumlaut Adieresis -40KPX Uhungarumlaut Agrave -40KPX Uhungarumlaut Amacron -40KPX Uhungarumlaut Aogonek -40KPX Uhungarumlaut Aring -40KPX Uhungarumlaut Atilde -40KPX Uhungarumlaut comma -40KPX Uhungarumlaut period -40KPX Umacron A -40KPX Umacron Aacute -40KPX Umacron Abreve -40KPX Umacron Acircumflex -40KPX Umacron Adieresis -40KPX Umacron Agrave -40KPX Umacron Amacron -40KPX Umacron Aogonek -40KPX Umacron Aring -40KPX Umacron Atilde -40KPX Umacron comma -40KPX Umacron period -40KPX Uogonek A -40KPX Uogonek Aacute -40KPX Uogonek Abreve -40KPX Uogonek Acircumflex -40KPX Uogonek Adieresis -40KPX Uogonek Agrave -40KPX Uogonek Amacron -40KPX Uogonek Aogonek -40KPX Uogonek Aring -40KPX Uogonek Atilde -40KPX Uogonek comma -40KPX Uogonek period -40KPX Uring A -40KPX Uring Aacute -40KPX Uring Abreve -40KPX Uring Acircumflex -40KPX Uring Adieresis -40KPX Uring Agrave -40KPX Uring Amacron -40KPX Uring Aogonek -40KPX Uring Aring -40KPX Uring Atilde -40KPX Uring comma -40KPX Uring period -40KPX V A -80KPX V Aacute -80KPX V Abreve -80KPX V Acircumflex -80KPX V Adieresis -80KPX V Agrave -80KPX V Amacron -80KPX V Aogonek -80KPX V Aring -80KPX V Atilde -80KPX V G -40KPX V Gbreve -40KPX V Gcommaaccent -40KPX V O -40KPX V Oacute -40KPX V Ocircumflex -40KPX V Odieresis -40KPX V Ograve -40KPX V Ohungarumlaut -40KPX V Omacron -40KPX V Oslash -40KPX V Otilde -40KPX V a -70KPX V aacute -70KPX V abreve -70KPX V acircumflex -70KPX V adieresis -70KPX V agrave -70KPX V amacron -70KPX V aogonek -70KPX V aring -70KPX V atilde -70KPX V colon -40KPX V comma -125KPX V e -80KPX V eacute -80KPX V ecaron -80KPX V ecircumflex -80KPX V edieresis -80KPX V edotaccent -80KPX V egrave -80KPX V emacron -80KPX V eogonek -80KPX V hyphen -80KPX V o -80KPX V oacute -80KPX V ocircumflex -80KPX V odieresis -80KPX V ograve -80KPX V ohungarumlaut -80KPX V omacron -80KPX V oslash -80KPX V otilde -80KPX V period -125KPX V semicolon -40KPX V u -70KPX V uacute -70KPX V ucircumflex -70KPX V udieresis -70KPX V ugrave -70KPX V uhungarumlaut -70KPX V umacron -70KPX V uogonek -70KPX V uring -70KPX W A -50KPX W Aacute -50KPX W Abreve -50KPX W Acircumflex -50KPX W Adieresis -50KPX W Agrave -50KPX W Amacron -50KPX W Aogonek -50KPX W Aring -50KPX W Atilde -50KPX W O -20KPX W Oacute -20KPX W Ocircumflex -20KPX W Odieresis -20KPX W Ograve -20KPX W Ohungarumlaut -20KPX W Omacron -20KPX W Oslash -20KPX W Otilde -20KPX W a -40KPX W aacute -40KPX W abreve -40KPX W acircumflex -40KPX W adieresis -40KPX W agrave -40KPX W amacron -40KPX W aogonek -40KPX W aring -40KPX W atilde -40KPX W comma -80KPX W e -30KPX W eacute -30KPX W ecaron -30KPX W ecircumflex -30KPX W edieresis -30KPX W edotaccent -30KPX W egrave -30KPX W emacron -30KPX W eogonek -30KPX W hyphen -40KPX W o -30KPX W oacute -30KPX W ocircumflex -30KPX W odieresis -30KPX W ograve -30KPX W ohungarumlaut -30KPX W omacron -30KPX W oslash -30KPX W otilde -30KPX W period -80KPX W u -30KPX W uacute -30KPX W ucircumflex -30KPX W udieresis -30KPX W ugrave -30KPX W uhungarumlaut -30KPX W umacron -30KPX W uogonek -30KPX W uring -30KPX W y -20KPX W yacute -20KPX W ydieresis -20KPX Y A -110KPX Y Aacute -110KPX Y Abreve -110KPX Y Acircumflex -110KPX Y Adieresis -110KPX Y Agrave -110KPX Y Amacron -110KPX Y Aogonek -110KPX Y Aring -110KPX Y Atilde -110KPX Y O -85KPX Y Oacute -85KPX Y Ocircumflex -85KPX Y Odieresis -85KPX Y Ograve -85KPX Y Ohungarumlaut -85KPX Y Omacron -85KPX Y Oslash -85KPX Y Otilde -85KPX Y a -140KPX Y aacute -140KPX Y abreve -70KPX Y acircumflex -140KPX Y adieresis -140KPX Y agrave -140KPX Y amacron -70KPX Y aogonek -140KPX Y aring -140KPX Y atilde -140KPX Y colon -60KPX Y comma -140KPX Y e -140KPX Y eacute -140KPX Y ecaron -140KPX Y ecircumflex -140KPX Y edieresis -140KPX Y edotaccent -140KPX Y egrave -140KPX Y emacron -70KPX Y eogonek -140KPX Y hyphen -140KPX Y i -20KPX Y iacute -20KPX Y iogonek -20KPX Y o -140KPX Y oacute -140KPX Y ocircumflex -140KPX Y odieresis -140KPX Y ograve -140KPX Y ohungarumlaut -140KPX Y omacron -140KPX Y oslash -140KPX Y otilde -140KPX Y period -140KPX Y semicolon -60KPX Y u -110KPX Y uacute -110KPX Y ucircumflex -110KPX Y udieresis -110KPX Y ugrave -110KPX Y uhungarumlaut -110KPX Y umacron -110KPX Y uogonek -110KPX Y uring -110KPX Yacute A -110KPX Yacute Aacute -110KPX Yacute Abreve -110KPX Yacute Acircumflex -110KPX Yacute Adieresis -110KPX Yacute Agrave -110KPX Yacute Amacron -110KPX Yacute Aogonek -110KPX Yacute Aring -110KPX Yacute Atilde -110KPX Yacute O -85KPX Yacute Oacute -85KPX Yacute Ocircumflex -85KPX Yacute Odieresis -85KPX Yacute Ograve -85KPX Yacute Ohungarumlaut -85KPX Yacute Omacron -85KPX Yacute Oslash -85KPX Yacute Otilde -85KPX Yacute a -140KPX Yacute aacute -140KPX Yacute abreve -70KPX Yacute acircumflex -140KPX Yacute adieresis -140KPX Yacute agrave -140KPX Yacute amacron -70KPX Yacute aogonek -140KPX Yacute aring -140KPX Yacute atilde -70KPX Yacute colon -60KPX Yacute comma -140KPX Yacute e -140KPX Yacute eacute -140KPX Yacute ecaron -140KPX Yacute ecircumflex -140KPX Yacute edieresis -140KPX Yacute edotaccent -140KPX Yacute egrave -140KPX Yacute emacron -70KPX Yacute eogonek -140KPX Yacute hyphen -140KPX Yacute i -20KPX Yacute iacute -20KPX Yacute iogonek -20KPX Yacute o -140KPX Yacute oacute -140KPX Yacute ocircumflex -140KPX Yacute odieresis -140KPX Yacute ograve -140KPX Yacute ohungarumlaut -140KPX Yacute omacron -70KPX Yacute oslash -140KPX Yacute otilde -140KPX Yacute period -140KPX Yacute semicolon -60KPX Yacute u -110KPX Yacute uacute -110KPX Yacute ucircumflex -110KPX Yacute udieresis -110KPX Yacute ugrave -110KPX Yacute uhungarumlaut -110KPX Yacute umacron -110KPX Yacute uogonek -110KPX Yacute uring -110KPX Ydieresis A -110KPX Ydieresis Aacute -110KPX Ydieresis Abreve -110KPX Ydieresis Acircumflex -110KPX Ydieresis Adieresis -110KPX Ydieresis Agrave -110KPX Ydieresis Amacron -110KPX Ydieresis Aogonek -110KPX Ydieresis Aring -110KPX Ydieresis Atilde -110KPX Ydieresis O -85KPX Ydieresis Oacute -85KPX Ydieresis Ocircumflex -85KPX Ydieresis Odieresis -85KPX Ydieresis Ograve -85KPX Ydieresis Ohungarumlaut -85KPX Ydieresis Omacron -85KPX Ydieresis Oslash -85KPX Ydieresis Otilde -85KPX Ydieresis a -140KPX Ydieresis aacute -140KPX Ydieresis abreve -70KPX Ydieresis acircumflex -140KPX Ydieresis adieresis -140KPX Ydieresis agrave -140KPX Ydieresis amacron -70KPX Ydieresis aogonek -140KPX Ydieresis aring -140KPX Ydieresis atilde -70KPX Ydieresis colon -60KPX Ydieresis comma -140KPX Ydieresis e -140KPX Ydieresis eacute -140KPX Ydieresis ecaron -140KPX Ydieresis ecircumflex -140KPX Ydieresis edieresis -140KPX Ydieresis edotaccent -140KPX Ydieresis egrave -140KPX Ydieresis emacron -70KPX Ydieresis eogonek -140KPX Ydieresis hyphen -140KPX Ydieresis i -20KPX Ydieresis iacute -20KPX Ydieresis iogonek -20KPX Ydieresis o -140KPX Ydieresis oacute -140KPX Ydieresis ocircumflex -140KPX Ydieresis odieresis -140KPX Ydieresis ograve -140KPX Ydieresis ohungarumlaut -140KPX Ydieresis omacron -140KPX Ydieresis oslash -140KPX Ydieresis otilde -140KPX Ydieresis period -140KPX Ydieresis semicolon -60KPX Ydieresis u -110KPX Ydieresis uacute -110KPX Ydieresis ucircumflex -110KPX Ydieresis udieresis -110KPX Ydieresis ugrave -110KPX Ydieresis uhungarumlaut -110KPX Ydieresis umacron -110KPX Ydieresis uogonek -110KPX Ydieresis uring -110KPX a v -20KPX a w -20KPX a y -30KPX a yacute -30KPX a ydieresis -30KPX aacute v -20KPX aacute w -20KPX aacute y -30KPX aacute yacute -30KPX aacute ydieresis -30KPX abreve v -20KPX abreve w -20KPX abreve y -30KPX abreve yacute -30KPX abreve ydieresis -30KPX acircumflex v -20KPX acircumflex w -20KPX acircumflex y -30KPX acircumflex yacute -30KPX acircumflex ydieresis -30KPX adieresis v -20KPX adieresis w -20KPX adieresis y -30KPX adieresis yacute -30KPX adieresis ydieresis -30KPX agrave v -20KPX agrave w -20KPX agrave y -30KPX agrave yacute -30KPX agrave ydieresis -30KPX amacron v -20KPX amacron w -20KPX amacron y -30KPX amacron yacute -30KPX amacron ydieresis -30KPX aogonek v -20KPX aogonek w -20KPX aogonek y -30KPX aogonek yacute -30KPX aogonek ydieresis -30KPX aring v -20KPX aring w -20KPX aring y -30KPX aring yacute -30KPX aring ydieresis -30KPX atilde v -20KPX atilde w -20KPX atilde y -30KPX atilde yacute -30KPX atilde ydieresis -30KPX b b -10KPX b comma -40KPX b l -20KPX b lacute -20KPX b lcommaaccent -20KPX b lslash -20KPX b period -40KPX b u -20KPX b uacute -20KPX b ucircumflex -20KPX b udieresis -20KPX b ugrave -20KPX b uhungarumlaut -20KPX b umacron -20KPX b uogonek -20KPX b uring -20KPX b v -20KPX b y -20KPX b yacute -20KPX b ydieresis -20KPX c comma -15KPX c k -20KPX c kcommaaccent -20KPX cacute comma -15KPX cacute k -20KPX cacute kcommaaccent -20KPX ccaron comma -15KPX ccaron k -20KPX ccaron kcommaaccent -20KPX ccedilla comma -15KPX ccedilla k -20KPX ccedilla kcommaaccent -20KPX colon space -50KPX comma quotedblright -100KPX comma quoteright -100KPX e comma -15KPX e period -15KPX e v -30KPX e w -20KPX e x -30KPX e y -20KPX e yacute -20KPX e ydieresis -20KPX eacute comma -15KPX eacute period -15KPX eacute v -30KPX eacute w -20KPX eacute x -30KPX eacute y -20KPX eacute yacute -20KPX eacute ydieresis -20KPX ecaron comma -15KPX ecaron period -15KPX ecaron v -30KPX ecaron w -20KPX ecaron x -30KPX ecaron y -20KPX ecaron yacute -20KPX ecaron ydieresis -20KPX ecircumflex comma -15KPX ecircumflex period -15KPX ecircumflex v -30KPX ecircumflex w -20KPX ecircumflex x -30KPX ecircumflex y -20KPX ecircumflex yacute -20KPX ecircumflex ydieresis -20KPX edieresis comma -15KPX edieresis period -15KPX edieresis v -30KPX edieresis w -20KPX edieresis x -30KPX edieresis y -20KPX edieresis yacute -20KPX edieresis ydieresis -20KPX edotaccent comma -15KPX edotaccent period -15KPX edotaccent v -30KPX edotaccent w -20KPX edotaccent x -30KPX edotaccent y -20KPX edotaccent yacute -20KPX edotaccent ydieresis -20KPX egrave comma -15KPX egrave period -15KPX egrave v -30KPX egrave w -20KPX egrave x -30KPX egrave y -20KPX egrave yacute -20KPX egrave ydieresis -20KPX emacron comma -15KPX emacron period -15KPX emacron v -30KPX emacron w -20KPX emacron x -30KPX emacron y -20KPX emacron yacute -20KPX emacron ydieresis -20KPX eogonek comma -15KPX eogonek period -15KPX eogonek v -30KPX eogonek w -20KPX eogonek x -30KPX eogonek y -20KPX eogonek yacute -20KPX eogonek ydieresis -20KPX f a -30KPX f aacute -30KPX f abreve -30KPX f acircumflex -30KPX f adieresis -30KPX f agrave -30KPX f amacron -30KPX f aogonek -30KPX f aring -30KPX f atilde -30KPX f comma -30KPX f dotlessi -28KPX f e -30KPX f eacute -30KPX f ecaron -30KPX f ecircumflex -30KPX f edieresis -30KPX f edotaccent -30KPX f egrave -30KPX f emacron -30KPX f eogonek -30KPX f o -30KPX f oacute -30KPX f ocircumflex -30KPX f odieresis -30KPX f ograve -30KPX f ohungarumlaut -30KPX f omacron -30KPX f oslash -30KPX f otilde -30KPX f period -30KPX f quotedblright 60KPX f quoteright 50KPX g r -10KPX g racute -10KPX g rcaron -10KPX g rcommaaccent -10KPX gbreve r -10KPX gbreve racute -10KPX gbreve rcaron -10KPX gbreve rcommaaccent -10KPX gcommaaccent r -10KPX gcommaaccent racute -10KPX gcommaaccent rcaron -10KPX gcommaaccent rcommaaccent -10KPX h y -30KPX h yacute -30KPX h ydieresis -30KPX k e -20KPX k eacute -20KPX k ecaron -20KPX k ecircumflex -20KPX k edieresis -20KPX k edotaccent -20KPX k egrave -20KPX k emacron -20KPX k eogonek -20KPX k o -20KPX k oacute -20KPX k ocircumflex -20KPX k odieresis -20KPX k ograve -20KPX k ohungarumlaut -20KPX k omacron -20KPX k oslash -20KPX k otilde -20KPX kcommaaccent e -20KPX kcommaaccent eacute -20KPX kcommaaccent ecaron -20KPX kcommaaccent ecircumflex -20KPX kcommaaccent edieresis -20KPX kcommaaccent edotaccent -20KPX kcommaaccent egrave -20KPX kcommaaccent emacron -20KPX kcommaaccent eogonek -20KPX kcommaaccent o -20KPX kcommaaccent oacute -20KPX kcommaaccent ocircumflex -20KPX kcommaaccent odieresis -20KPX kcommaaccent ograve -20KPX kcommaaccent ohungarumlaut -20KPX kcommaaccent omacron -20KPX kcommaaccent oslash -20KPX kcommaaccent otilde -20KPX m u -10KPX m uacute -10KPX m ucircumflex -10KPX m udieresis -10KPX m ugrave -10KPX m uhungarumlaut -10KPX m umacron -10KPX m uogonek -10KPX m uring -10KPX m y -15KPX m yacute -15KPX m ydieresis -15KPX n u -10KPX n uacute -10KPX n ucircumflex -10KPX n udieresis -10KPX n ugrave -10KPX n uhungarumlaut -10KPX n umacron -10KPX n uogonek -10KPX n uring -10KPX n v -20KPX n y -15KPX n yacute -15KPX n ydieresis -15KPX nacute u -10KPX nacute uacute -10KPX nacute ucircumflex -10KPX nacute udieresis -10KPX nacute ugrave -10KPX nacute uhungarumlaut -10KPX nacute umacron -10KPX nacute uogonek -10KPX nacute uring -10KPX nacute v -20KPX nacute y -15KPX nacute yacute -15KPX nacute ydieresis -15KPX ncaron u -10KPX ncaron uacute -10KPX ncaron ucircumflex -10KPX ncaron udieresis -10KPX ncaron ugrave -10KPX ncaron uhungarumlaut -10KPX ncaron umacron -10KPX ncaron uogonek -10KPX ncaron uring -10KPX ncaron v -20KPX ncaron y -15KPX ncaron yacute -15KPX ncaron ydieresis -15KPX ncommaaccent u -10KPX ncommaaccent uacute -10KPX ncommaaccent ucircumflex -10KPX ncommaaccent udieresis -10KPX ncommaaccent ugrave -10KPX ncommaaccent uhungarumlaut -10KPX ncommaaccent umacron -10KPX ncommaaccent uogonek -10KPX ncommaaccent uring -10KPX ncommaaccent v -20KPX ncommaaccent y -15KPX ncommaaccent yacute -15KPX ncommaaccent ydieresis -15KPX ntilde u -10KPX ntilde uacute -10KPX ntilde ucircumflex -10KPX ntilde udieresis -10KPX ntilde ugrave -10KPX ntilde uhungarumlaut -10KPX ntilde umacron -10KPX ntilde uogonek -10KPX ntilde uring -10KPX ntilde v -20KPX ntilde y -15KPX ntilde yacute -15KPX ntilde ydieresis -15KPX o comma -40KPX o period -40KPX o v -15KPX o w -15KPX o x -30KPX o y -30KPX o yacute -30KPX o ydieresis -30KPX oacute comma -40KPX oacute period -40KPX oacute v -15KPX oacute w -15KPX oacute x -30KPX oacute y -30KPX oacute yacute -30KPX oacute ydieresis -30KPX ocircumflex comma -40KPX ocircumflex period -40KPX ocircumflex v -15KPX ocircumflex w -15KPX ocircumflex x -30KPX ocircumflex y -30KPX ocircumflex yacute -30KPX ocircumflex ydieresis -30KPX odieresis comma -40KPX odieresis period -40KPX odieresis v -15KPX odieresis w -15KPX odieresis x -30KPX odieresis y -30KPX odieresis yacute -30KPX odieresis ydieresis -30KPX ograve comma -40KPX ograve period -40KPX ograve v -15KPX ograve w -15KPX ograve x -30KPX ograve y -30KPX ograve yacute -30KPX ograve ydieresis -30KPX ohungarumlaut comma -40KPX ohungarumlaut period -40KPX ohungarumlaut v -15KPX ohungarumlaut w -15KPX ohungarumlaut x -30KPX ohungarumlaut y -30KPX ohungarumlaut yacute -30KPX ohungarumlaut ydieresis -30KPX omacron comma -40KPX omacron period -40KPX omacron v -15KPX omacron w -15KPX omacron x -30KPX omacron y -30KPX omacron yacute -30KPX omacron ydieresis -30KPX oslash a -55KPX oslash aacute -55KPX oslash abreve -55KPX oslash acircumflex -55KPX oslash adieresis -55KPX oslash agrave -55KPX oslash amacron -55KPX oslash aogonek -55KPX oslash aring -55KPX oslash atilde -55KPX oslash b -55KPX oslash c -55KPX oslash cacute -55KPX oslash ccaron -55KPX oslash ccedilla -55KPX oslash comma -95KPX oslash d -55KPX oslash dcroat -55KPX oslash e -55KPX oslash eacute -55KPX oslash ecaron -55KPX oslash ecircumflex -55KPX oslash edieresis -55KPX oslash edotaccent -55KPX oslash egrave -55KPX oslash emacron -55KPX oslash eogonek -55KPX oslash f -55KPX oslash g -55KPX oslash gbreve -55KPX oslash gcommaaccent -55KPX oslash h -55KPX oslash i -55KPX oslash iacute -55KPX oslash icircumflex -55KPX oslash idieresis -55KPX oslash igrave -55KPX oslash imacron -55KPX oslash iogonek -55KPX oslash j -55KPX oslash k -55KPX oslash kcommaaccent -55KPX oslash l -55KPX oslash lacute -55KPX oslash lcommaaccent -55KPX oslash lslash -55KPX oslash m -55KPX oslash n -55KPX oslash nacute -55KPX oslash ncaron -55KPX oslash ncommaaccent -55KPX oslash ntilde -55KPX oslash o -55KPX oslash oacute -55KPX oslash ocircumflex -55KPX oslash odieresis -55KPX oslash ograve -55KPX oslash ohungarumlaut -55KPX oslash omacron -55KPX oslash oslash -55KPX oslash otilde -55KPX oslash p -55KPX oslash period -95KPX oslash q -55KPX oslash r -55KPX oslash racute -55KPX oslash rcaron -55KPX oslash rcommaaccent -55KPX oslash s -55KPX oslash sacute -55KPX oslash scaron -55KPX oslash scedilla -55KPX oslash scommaaccent -55KPX oslash t -55KPX oslash tcommaaccent -55KPX oslash u -55KPX oslash uacute -55KPX oslash ucircumflex -55KPX oslash udieresis -55KPX oslash ugrave -55KPX oslash uhungarumlaut -55KPX oslash umacron -55KPX oslash uogonek -55KPX oslash uring -55KPX oslash v -70KPX oslash w -70KPX oslash x -85KPX oslash y -70KPX oslash yacute -70KPX oslash ydieresis -70KPX oslash z -55KPX oslash zacute -55KPX oslash zcaron -55KPX oslash zdotaccent -55KPX otilde comma -40KPX otilde period -40KPX otilde v -15KPX otilde w -15KPX otilde x -30KPX otilde y -30KPX otilde yacute -30KPX otilde ydieresis -30KPX p comma -35KPX p period -35KPX p y -30KPX p yacute -30KPX p ydieresis -30KPX period quotedblright -100KPX period quoteright -100KPX period space -60KPX quotedblright space -40KPX quoteleft quoteleft -57KPX quoteright d -50KPX quoteright dcroat -50KPX quoteright quoteright -57KPX quoteright r -50KPX quoteright racute -50KPX quoteright rcaron -50KPX quoteright rcommaaccent -50KPX quoteright s -50KPX quoteright sacute -50KPX quoteright scaron -50KPX quoteright scedilla -50KPX quoteright scommaaccent -50KPX quoteright space -70KPX r a -10KPX r aacute -10KPX r abreve -10KPX r acircumflex -10KPX r adieresis -10KPX r agrave -10KPX r amacron -10KPX r aogonek -10KPX r aring -10KPX r atilde -10KPX r colon 30KPX r comma -50KPX r i 15KPX r iacute 15KPX r icircumflex 15KPX r idieresis 15KPX r igrave 15KPX r imacron 15KPX r iogonek 15KPX r k 15KPX r kcommaaccent 15KPX r l 15KPX r lacute 15KPX r lcommaaccent 15KPX r lslash 15KPX r m 25KPX r n 25KPX r nacute 25KPX r ncaron 25KPX r ncommaaccent 25KPX r ntilde 25KPX r p 30KPX r period -50KPX r semicolon 30KPX r t 40KPX r tcommaaccent 40KPX r u 15KPX r uacute 15KPX r ucircumflex 15KPX r udieresis 15KPX r ugrave 15KPX r uhungarumlaut 15KPX r umacron 15KPX r uogonek 15KPX r uring 15KPX r v 30KPX r y 30KPX r yacute 30KPX r ydieresis 30KPX racute a -10KPX racute aacute -10KPX racute abreve -10KPX racute acircumflex -10KPX racute adieresis -10KPX racute agrave -10KPX racute amacron -10KPX racute aogonek -10KPX racute aring -10KPX racute atilde -10KPX racute colon 30KPX racute comma -50KPX racute i 15KPX racute iacute 15KPX racute icircumflex 15KPX racute idieresis 15KPX racute igrave 15KPX racute imacron 15KPX racute iogonek 15KPX racute k 15KPX racute kcommaaccent 15KPX racute l 15KPX racute lacute 15KPX racute lcommaaccent 15KPX racute lslash 15KPX racute m 25KPX racute n 25KPX racute nacute 25KPX racute ncaron 25KPX racute ncommaaccent 25KPX racute ntilde 25KPX racute p 30KPX racute period -50KPX racute semicolon 30KPX racute t 40KPX racute tcommaaccent 40KPX racute u 15KPX racute uacute 15KPX racute ucircumflex 15KPX racute udieresis 15KPX racute ugrave 15KPX racute uhungarumlaut 15KPX racute umacron 15KPX racute uogonek 15KPX racute uring 15KPX racute v 30KPX racute y 30KPX racute yacute 30KPX racute ydieresis 30KPX rcaron a -10KPX rcaron aacute -10KPX rcaron abreve -10KPX rcaron acircumflex -10KPX rcaron adieresis -10KPX rcaron agrave -10KPX rcaron amacron -10KPX rcaron aogonek -10KPX rcaron aring -10KPX rcaron atilde -10KPX rcaron colon 30KPX rcaron comma -50KPX rcaron i 15KPX rcaron iacute 15KPX rcaron icircumflex 15KPX rcaron idieresis 15KPX rcaron igrave 15KPX rcaron imacron 15KPX rcaron iogonek 15KPX rcaron k 15KPX rcaron kcommaaccent 15KPX rcaron l 15KPX rcaron lacute 15KPX rcaron lcommaaccent 15KPX rcaron lslash 15KPX rcaron m 25KPX rcaron n 25KPX rcaron nacute 25KPX rcaron ncaron 25KPX rcaron ncommaaccent 25KPX rcaron ntilde 25KPX rcaron p 30KPX rcaron period -50KPX rcaron semicolon 30KPX rcaron t 40KPX rcaron tcommaaccent 40KPX rcaron u 15KPX rcaron uacute 15KPX rcaron ucircumflex 15KPX rcaron udieresis 15KPX rcaron ugrave 15KPX rcaron uhungarumlaut 15KPX rcaron umacron 15KPX rcaron uogonek 15KPX rcaron uring 15KPX rcaron v 30KPX rcaron y 30KPX rcaron yacute 30KPX rcaron ydieresis 30KPX rcommaaccent a -10KPX rcommaaccent aacute -10KPX rcommaaccent abreve -10KPX rcommaaccent acircumflex -10KPX rcommaaccent adieresis -10KPX rcommaaccent agrave -10KPX rcommaaccent amacron -10KPX rcommaaccent aogonek -10KPX rcommaaccent aring -10KPX rcommaaccent atilde -10KPX rcommaaccent colon 30KPX rcommaaccent comma -50KPX rcommaaccent i 15KPX rcommaaccent iacute 15KPX rcommaaccent icircumflex 15KPX rcommaaccent idieresis 15KPX rcommaaccent igrave 15KPX rcommaaccent imacron 15KPX rcommaaccent iogonek 15KPX rcommaaccent k 15KPX rcommaaccent kcommaaccent 15KPX rcommaaccent l 15KPX rcommaaccent lacute 15KPX rcommaaccent lcommaaccent 15KPX rcommaaccent lslash 15KPX rcommaaccent m 25KPX rcommaaccent n 25KPX rcommaaccent nacute 25KPX rcommaaccent ncaron 25KPX rcommaaccent ncommaaccent 25KPX rcommaaccent ntilde 25KPX rcommaaccent p 30KPX rcommaaccent period -50KPX rcommaaccent semicolon 30KPX rcommaaccent t 40KPX rcommaaccent tcommaaccent 40KPX rcommaaccent u 15KPX rcommaaccent uacute 15KPX rcommaaccent ucircumflex 15KPX rcommaaccent udieresis 15KPX rcommaaccent ugrave 15KPX rcommaaccent uhungarumlaut 15KPX rcommaaccent umacron 15KPX rcommaaccent uogonek 15KPX rcommaaccent uring 15KPX rcommaaccent v 30KPX rcommaaccent y 30KPX rcommaaccent yacute 30KPX rcommaaccent ydieresis 30KPX s comma -15KPX s period -15KPX s w -30KPX sacute comma -15KPX sacute period -15KPX sacute w -30KPX scaron comma -15KPX scaron period -15KPX scaron w -30KPX scedilla comma -15KPX scedilla period -15KPX scedilla w -30KPX scommaaccent comma -15KPX scommaaccent period -15KPX scommaaccent w -30KPX semicolon space -50KPX space T -50KPX space Tcaron -50KPX space Tcommaaccent -50KPX space V -50KPX space W -40KPX space Y -90KPX space Yacute -90KPX space Ydieresis -90KPX space quotedblleft -30KPX space quoteleft -60KPX v a -25KPX v aacute -25KPX v abreve -25KPX v acircumflex -25KPX v adieresis -25KPX v agrave -25KPX v amacron -25KPX v aogonek -25KPX v aring -25KPX v atilde -25KPX v comma -80KPX v e -25KPX v eacute -25KPX v ecaron -25KPX v ecircumflex -25KPX v edieresis -25KPX v edotaccent -25KPX v egrave -25KPX v emacron -25KPX v eogonek -25KPX v o -25KPX v oacute -25KPX v ocircumflex -25KPX v odieresis -25KPX v ograve -25KPX v ohungarumlaut -25KPX v omacron -25KPX v oslash -25KPX v otilde -25KPX v period -80KPX w a -15KPX w aacute -15KPX w abreve -15KPX w acircumflex -15KPX w adieresis -15KPX w agrave -15KPX w amacron -15KPX w aogonek -15KPX w aring -15KPX w atilde -15KPX w comma -60KPX w e -10KPX w eacute -10KPX w ecaron -10KPX w ecircumflex -10KPX w edieresis -10KPX w edotaccent -10KPX w egrave -10KPX w emacron -10KPX w eogonek -10KPX w o -10KPX w oacute -10KPX w ocircumflex -10KPX w odieresis -10KPX w ograve -10KPX w ohungarumlaut -10KPX w omacron -10KPX w oslash -10KPX w otilde -10KPX w period -60KPX x e -30KPX x eacute -30KPX x ecaron -30KPX x ecircumflex -30KPX x edieresis -30KPX x edotaccent -30KPX x egrave -30KPX x emacron -30KPX x eogonek -30KPX y a -20KPX y aacute -20KPX y abreve -20KPX y acircumflex -20KPX y adieresis -20KPX y agrave -20KPX y amacron -20KPX y aogonek -20KPX y aring -20KPX y atilde -20KPX y comma -100KPX y e -20KPX y eacute -20KPX y ecaron -20KPX y ecircumflex -20KPX y edieresis -20KPX y edotaccent -20KPX y egrave -20KPX y emacron -20KPX y eogonek -20KPX y o -20KPX y oacute -20KPX y ocircumflex -20KPX y odieresis -20KPX y ograve -20KPX y ohungarumlaut -20KPX y omacron -20KPX y oslash -20KPX y otilde -20KPX y period -100KPX yacute a -20KPX yacute aacute -20KPX yacute abreve -20KPX yacute acircumflex -20KPX yacute adieresis -20KPX yacute agrave -20KPX yacute amacron -20KPX yacute aogonek -20KPX yacute aring -20KPX yacute atilde -20KPX yacute comma -100KPX yacute e -20KPX yacute eacute -20KPX yacute ecaron -20KPX yacute ecircumflex -20KPX yacute edieresis -20KPX yacute edotaccent -20KPX yacute egrave -20KPX yacute emacron -20KPX yacute eogonek -20KPX yacute o -20KPX yacute oacute -20KPX yacute ocircumflex -20KPX yacute odieresis -20KPX yacute ograve -20KPX yacute ohungarumlaut -20KPX yacute omacron -20KPX yacute oslash -20KPX yacute otilde -20KPX yacute period -100KPX ydieresis a -20KPX ydieresis aacute -20KPX ydieresis abreve -20KPX ydieresis acircumflex -20KPX ydieresis adieresis -20KPX ydieresis agrave -20KPX ydieresis amacron -20KPX ydieresis aogonek -20KPX ydieresis aring -20KPX ydieresis atilde -20KPX ydieresis comma -100KPX ydieresis e -20KPX ydieresis eacute -20KPX ydieresis ecaron -20KPX ydieresis ecircumflex -20KPX ydieresis edieresis -20KPX ydieresis edotaccent -20KPX ydieresis egrave -20KPX ydieresis emacron -20KPX ydieresis eogonek -20KPX ydieresis o -20KPX ydieresis oacute -20KPX ydieresis ocircumflex -20KPX ydieresis odieresis -20KPX ydieresis ograve -20KPX ydieresis ohungarumlaut -20KPX ydieresis omacron -20KPX ydieresis oslash -20KPX ydieresis otilde -20KPX ydieresis period -100KPX z e -15KPX z eacute -15KPX z ecaron -15KPX z ecircumflex -15KPX z edieresis -15KPX z edotaccent -15KPX z egrave -15KPX z emacron -15KPX z eogonek -15KPX z o -15KPX z oacute -15KPX z ocircumflex -15KPX z odieresis -15KPX z ograve -15KPX z ohungarumlaut -15KPX z omacron -15KPX z oslash -15KPX z otilde -15KPX zacute e -15KPX zacute eacute -15KPX zacute ecaron -15KPX zacute ecircumflex -15KPX zacute edieresis -15KPX zacute edotaccent -15KPX zacute egrave -15KPX zacute emacron -15KPX zacute eogonek -15KPX zacute o -15KPX zacute oacute -15KPX zacute ocircumflex -15KPX zacute odieresis -15KPX zacute ograve -15KPX zacute ohungarumlaut -15KPX zacute omacron -15KPX zacute oslash -15KPX zacute otilde -15KPX zcaron e -15KPX zcaron eacute -15KPX zcaron ecaron -15KPX zcaron ecircumflex -15KPX zcaron edieresis -15KPX zcaron edotaccent -15KPX zcaron egrave -15KPX zcaron emacron -15KPX zcaron eogonek -15KPX zcaron o -15KPX zcaron oacute -15KPX zcaron ocircumflex -15KPX zcaron odieresis -15KPX zcaron ograve -15KPX zcaron ohungarumlaut -15KPX zcaron omacron -15KPX zcaron oslash -15KPX zcaron otilde -15KPX zdotaccent e -15KPX zdotaccent eacute -15KPX zdotaccent ecaron -15KPX zdotaccent ecircumflex -15KPX zdotaccent edieresis -15KPX zdotaccent edotaccent -15KPX zdotaccent egrave -15KPX zdotaccent emacron -15KPX zdotaccent eogonek -15KPX zdotaccent o -15KPX zdotaccent oacute -15KPX zdotaccent ocircumflex -15KPX zdotaccent odieresis -15KPX zdotaccent ograve -15KPX zdotaccent ohungarumlaut -15KPX zdotaccent omacron -15KPX zdotaccent oslash -15KPX zdotaccent otilde -15EndKernPairsEndKernDataEndFontMetrics'</body><body package="Type1">symbol	"from http://www.adobe.com/devnet/font.html "	&lt;font: #Symbol&gt;	^self		windowsName: 'Arial'		afm: 'StartFontMetrics 4.1Comment Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated. All rights reserved.Comment Creation Date: Thu May  1 15:12:25 1997Comment UniqueID 43064Comment VMusage 30820 39997FontName SymbolFullName SymbolFamilyName SymbolWeight MediumItalicAngle 0IsFixedPitch falseCharacterSet SpecialFontBBox -180 -293 1090 1010 UnderlinePosition -100UnderlineThickness 50Version 001.008Notice Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated. All rights reserved.EncodingScheme FontSpecificStdHW 92StdVW 85StartCharMetrics 190C 32 ; WX 250 ; N space ; B 0 0 0 0 ;C 33 ; WX 333 ; N exclam ; B 128 -17 240 672 ;C 34 ; WX 713 ; N universal ; B 31 0 681 705 ;C 35 ; WX 500 ; N numbersign ; B 20 -16 481 673 ;C 36 ; WX 549 ; N existential ; B 25 0 478 707 ;C 37 ; WX 833 ; N percent ; B 63 -36 771 655 ;C 38 ; WX 778 ; N ampersand ; B 41 -18 750 661 ;C 39 ; WX 439 ; N suchthat ; B 48 -17 414 500 ;C 40 ; WX 333 ; N parenleft ; B 53 -191 300 673 ;C 41 ; WX 333 ; N parenright ; B 30 -191 277 673 ;C 42 ; WX 500 ; N asteriskmath ; B 65 134 427 551 ;C 43 ; WX 549 ; N plus ; B 10 0 539 533 ;C 44 ; WX 250 ; N comma ; B 56 -152 194 104 ;C 45 ; WX 549 ; N minus ; B 11 233 535 288 ;C 46 ; WX 250 ; N period ; B 69 -17 181 95 ;C 47 ; WX 278 ; N slash ; B 0 -18 254 646 ;C 48 ; WX 500 ; N zero ; B 24 -14 476 685 ;C 49 ; WX 500 ; N one ; B 117 0 390 673 ;C 50 ; WX 500 ; N two ; B 25 0 475 685 ;C 51 ; WX 500 ; N three ; B 43 -14 435 685 ;C 52 ; WX 500 ; N four ; B 15 0 469 685 ;C 53 ; WX 500 ; N five ; B 32 -14 445 690 ;C 54 ; WX 500 ; N six ; B 34 -14 468 685 ;C 55 ; WX 500 ; N seven ; B 24 -16 448 673 ;C 56 ; WX 500 ; N eight ; B 56 -14 445 685 ;C 57 ; WX 500 ; N nine ; B 30 -18 459 685 ;C 58 ; WX 278 ; N colon ; B 81 -17 193 460 ;C 59 ; WX 278 ; N semicolon ; B 83 -152 221 460 ;C 60 ; WX 549 ; N less ; B 26 0 523 522 ;C 61 ; WX 549 ; N equal ; B 11 141 537 390 ;C 62 ; WX 549 ; N greater ; B 26 0 523 522 ;C 63 ; WX 444 ; N question ; B 70 -17 412 686 ;C 64 ; WX 549 ; N congruent ; B 11 0 537 475 ;C 65 ; WX 722 ; N Alpha ; B 4 0 684 673 ;C 66 ; WX 667 ; N Beta ; B 29 0 592 673 ;C 67 ; WX 722 ; N Chi ; B -9 0 704 673 ;C 68 ; WX 612 ; N Delta ; B 6 0 608 688 ;C 69 ; WX 611 ; N Epsilon ; B 32 0 617 673 ;C 70 ; WX 763 ; N Phi ; B 26 0 741 673 ;C 71 ; WX 603 ; N Gamma ; B 24 0 609 673 ;C 72 ; WX 722 ; N Eta ; B 39 0 729 673 ;C 73 ; WX 333 ; N Iota ; B 32 0 316 673 ;C 74 ; WX 631 ; N theta1 ; B 18 -18 623 689 ;C 75 ; WX 722 ; N Kappa ; B 35 0 722 673 ;C 76 ; WX 686 ; N Lambda ; B 6 0 680 688 ;C 77 ; WX 889 ; N Mu ; B 28 0 887 673 ;C 78 ; WX 722 ; N Nu ; B 29 -8 720 673 ;C 79 ; WX 722 ; N Omicron ; B 41 -17 715 685 ;C 80 ; WX 768 ; N Pi ; B 25 0 745 673 ;C 81 ; WX 741 ; N Theta ; B 41 -17 715 685 ;C 82 ; WX 556 ; N Rho ; B 28 0 563 673 ;C 83 ; WX 592 ; N Sigma ; B 5 0 589 673 ;C 84 ; WX 611 ; N Tau ; B 33 0 607 673 ;C 85 ; WX 690 ; N Upsilon ; B -8 0 694 673 ;C 86 ; WX 439 ; N sigma1 ; B 40 -233 436 500 ;C 87 ; WX 768 ; N Omega ; B 34 0 736 688 ;C 88 ; WX 645 ; N Xi ; B 40 0 599 673 ;C 89 ; WX 795 ; N Psi ; B 15 0 781 684 ;C 90 ; WX 611 ; N Zeta ; B 44 0 636 673 ;C 91 ; WX 333 ; N bracketleft ; B 86 -155 299 674 ;C 92 ; WX 863 ; N therefore ; B 163 0 701 487 ;C 93 ; WX 333 ; N bracketright ; B 33 -155 246 674 ;C 94 ; WX 658 ; N perpendicular ; B 15 0 652 674 ;C 95 ; WX 500 ; N underscore ; B -2 -125 502 -75 ;C 96 ; WX 500 ; N radicalex ; B 480 881 1090 917 ;C 97 ; WX 631 ; N alpha ; B 41 -18 622 500 ;C 98 ; WX 549 ; N beta ; B 61 -223 515 741 ;C 99 ; WX 549 ; N chi ; B 12 -231 522 499 ;C 100 ; WX 494 ; N delta ; B 40 -19 481 740 ;C 101 ; WX 439 ; N epsilon ; B 22 -19 427 502 ;C 102 ; WX 521 ; N phi ; B 28 -224 492 673 ;C 103 ; WX 411 ; N gamma ; B 5 -225 484 499 ;C 104 ; WX 603 ; N eta ; B 0 -202 527 514 ;C 105 ; WX 329 ; N iota ; B 0 -17 301 503 ;C 106 ; WX 603 ; N phi1 ; B 36 -224 587 499 ;C 107 ; WX 549 ; N kappa ; B 33 0 558 501 ;C 108 ; WX 549 ; N lambda ; B 24 -17 548 739 ;C 109 ; WX 576 ; N mu ; B 33 -223 567 500 ;C 110 ; WX 521 ; N nu ; B -9 -16 475 507 ;C 111 ; WX 549 ; N omicron ; B 35 -19 501 499 ;C 112 ; WX 549 ; N pi ; B 10 -19 530 487 ;C 113 ; WX 521 ; N theta ; B 43 -17 485 690 ;C 114 ; WX 549 ; N rho ; B 50 -230 490 499 ;C 115 ; WX 603 ; N sigma ; B 30 -21 588 500 ;C 116 ; WX 439 ; N tau ; B 10 -19 418 500 ;C 117 ; WX 576 ; N upsilon ; B 7 -18 535 507 ;C 118 ; WX 713 ; N omega1 ; B 12 -18 671 583 ;C 119 ; WX 686 ; N omega ; B 42 -17 684 500 ;C 120 ; WX 493 ; N xi ; B 27 -224 469 766 ;C 121 ; WX 686 ; N psi ; B 12 -228 701 500 ;C 122 ; WX 494 ; N zeta ; B 60 -225 467 756 ;C 123 ; WX 480 ; N braceleft ; B 58 -183 397 673 ;C 124 ; WX 200 ; N bar ; B 65 -293 135 707 ;C 125 ; WX 480 ; N braceright ; B 79 -183 418 673 ;C 126 ; WX 549 ; N similar ; B 17 203 529 307 ;C 160 ; WX 750 ; N Euro ; B 20 -12 714 685 ;C 161 ; WX 620 ; N Upsilon1 ; B -2 0 610 685 ;C 162 ; WX 247 ; N minute ; B 27 459 228 735 ;C 163 ; WX 549 ; N lessequal ; B 29 0 526 639 ;C 164 ; WX 167 ; N fraction ; B -180 -12 340 677 ;C 165 ; WX 713 ; N infinity ; B 26 124 688 404 ;C 166 ; WX 500 ; N florin ; B 2 -193 494 686 ;C 167 ; WX 753 ; N club ; B 86 -26 660 533 ;C 168 ; WX 753 ; N diamond ; B 142 -36 600 550 ;C 169 ; WX 753 ; N heart ; B 117 -33 631 532 ;C 170 ; WX 753 ; N spade ; B 113 -36 629 548 ;C 171 ; WX 1042 ; N arrowboth ; B 24 -15 1024 511 ;C 172 ; WX 987 ; N arrowleft ; B 32 -15 942 511 ;C 173 ; WX 603 ; N arrowup ; B 45 0 571 910 ;C 174 ; WX 987 ; N arrowright ; B 49 -15 959 511 ;C 175 ; WX 603 ; N arrowdown ; B 45 -22 571 888 ;C 176 ; WX 400 ; N degree ; B 50 385 350 685 ;C 177 ; WX 549 ; N plusminus ; B 10 0 539 645 ;C 178 ; WX 411 ; N second ; B 20 459 413 737 ;C 179 ; WX 549 ; N greaterequal ; B 29 0 526 639 ;C 180 ; WX 549 ; N multiply ; B 17 8 533 524 ;C 181 ; WX 713 ; N proportional ; B 27 123 639 404 ;C 182 ; WX 494 ; N partialdiff ; B 26 -20 462 746 ;C 183 ; WX 460 ; N bullet ; B 50 113 410 473 ;C 184 ; WX 549 ; N divide ; B 10 71 536 456 ;C 185 ; WX 549 ; N notequal ; B 15 -25 540 549 ;C 186 ; WX 549 ; N equivalence ; B 14 82 538 443 ;C 187 ; WX 549 ; N approxequal ; B 14 135 527 394 ;C 188 ; WX 1000 ; N ellipsis ; B 111 -17 889 95 ;C 189 ; WX 603 ; N arrowvertex ; B 280 -120 336 1010 ;C 190 ; WX 1000 ; N arrowhorizex ; B -60 220 1050 276 ;C 191 ; WX 658 ; N carriagereturn ; B 15 -16 602 629 ;C 192 ; WX 823 ; N aleph ; B 175 -18 661 658 ;C 193 ; WX 686 ; N Ifraktur ; B 10 -53 578 740 ;C 194 ; WX 795 ; N Rfraktur ; B 26 -15 759 734 ;C 195 ; WX 987 ; N weierstrass ; B 159 -211 870 573 ;C 196 ; WX 768 ; N circlemultiply ; B 43 -17 733 673 ;C 197 ; WX 768 ; N circleplus ; B 43 -15 733 675 ;C 198 ; WX 823 ; N emptyset ; B 39 -24 781 719 ;C 199 ; WX 768 ; N intersection ; B 40 0 732 509 ;C 200 ; WX 768 ; N union ; B 40 -17 732 492 ;C 201 ; WX 713 ; N propersuperset ; B 20 0 673 470 ;C 202 ; WX 713 ; N reflexsuperset ; B 20 -125 673 470 ;C 203 ; WX 713 ; N notsubset ; B 36 -70 690 540 ;C 204 ; WX 713 ; N propersubset ; B 37 0 690 470 ;C 205 ; WX 713 ; N reflexsubset ; B 37 -125 690 470 ;C 206 ; WX 713 ; N element ; B 45 0 505 468 ;C 207 ; WX 713 ; N notelement ; B 45 -58 505 555 ;C 208 ; WX 768 ; N angle ; B 26 0 738 673 ;C 209 ; WX 713 ; N gradient ; B 36 -19 681 718 ;C 210 ; WX 790 ; N registerserif ; B 50 -17 740 673 ;C 211 ; WX 790 ; N copyrightserif ; B 51 -15 741 675 ;C 212 ; WX 890 ; N trademarkserif ; B 18 293 855 673 ;C 213 ; WX 823 ; N product ; B 25 -101 803 751 ;C 214 ; WX 549 ; N radical ; B 10 -38 515 917 ;C 215 ; WX 250 ; N dotmath ; B 69 210 169 310 ;C 216 ; WX 713 ; N logicalnot ; B 15 0 680 288 ;C 217 ; WX 603 ; N logicaland ; B 23 0 583 454 ;C 218 ; WX 603 ; N logicalor ; B 30 0 578 477 ;C 219 ; WX 1042 ; N arrowdblboth ; B 27 -20 1023 510 ;C 220 ; WX 987 ; N arrowdblleft ; B 30 -15 939 513 ;C 221 ; WX 603 ; N arrowdblup ; B 39 2 567 911 ;C 222 ; WX 987 ; N arrowdblright ; B 45 -20 954 508 ;C 223 ; WX 603 ; N arrowdbldown ; B 44 -19 572 890 ;C 224 ; WX 494 ; N lozenge ; B 18 0 466 745 ;C 225 ; WX 329 ; N angleleft ; B 25 -198 306 746 ;C 226 ; WX 790 ; N registersans ; B 50 -20 740 670 ;C 227 ; WX 790 ; N copyrightsans ; B 49 -15 739 675 ;C 228 ; WX 786 ; N trademarksans ; B 5 293 725 673 ;C 229 ; WX 713 ; N summation ; B 14 -108 695 752 ;C 230 ; WX 384 ; N parenlefttp ; B 24 -293 436 926 ;C 231 ; WX 384 ; N parenleftex ; B 24 -85 108 925 ;C 232 ; WX 384 ; N parenleftbt ; B 24 -293 436 926 ;C 233 ; WX 384 ; N bracketlefttp ; B 0 -80 349 926 ;C 234 ; WX 384 ; N bracketleftex ; B 0 -79 77 925 ;C 235 ; WX 384 ; N bracketleftbt ; B 0 -80 349 926 ;C 236 ; WX 494 ; N bracelefttp ; B 209 -85 445 925 ;C 237 ; WX 494 ; N braceleftmid ; B 20 -85 284 935 ;C 238 ; WX 494 ; N braceleftbt ; B 209 -75 445 935 ;C 239 ; WX 494 ; N braceex ; B 209 -85 284 935 ;C 241 ; WX 329 ; N angleright ; B 21 -198 302 746 ;C 242 ; WX 274 ; N integral ; B 2 -107 291 916 ;C 243 ; WX 686 ; N integraltp ; B 308 -88 675 920 ;C 244 ; WX 686 ; N integralex ; B 308 -88 378 975 ;C 245 ; WX 686 ; N integralbt ; B 11 -87 378 921 ;C 246 ; WX 384 ; N parenrighttp ; B 54 -293 466 926 ;C 247 ; WX 384 ; N parenrightex ; B 382 -85 466 925 ;C 248 ; WX 384 ; N parenrightbt ; B 54 -293 466 926 ;C 249 ; WX 384 ; N bracketrighttp ; B 22 -80 371 926 ;C 250 ; WX 384 ; N bracketrightex ; B 294 -79 371 925 ;C 251 ; WX 384 ; N bracketrightbt ; B 22 -80 371 926 ;C 252 ; WX 494 ; N bracerighttp ; B 48 -85 284 925 ;C 253 ; WX 494 ; N bracerightmid ; B 209 -85 473 935 ;C 254 ; WX 494 ; N bracerightbt ; B 48 -75 284 935 ;C -1 ; WX 790 ; N apple ; B 56 -3 733 808 ;EndCharMetricsEndFontMetrics'</body><body package="Type1">timesBold	"from http://www.adobe.com/devnet/font.html "	&lt;font: #'Times-Bold'&gt;	^self		windowsName: 'Times New Roman'		afm: 'StartFontMetrics 4.1Comment Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.Comment Creation Date: Thu May  1 12:52:56 1997Comment UniqueID 43065Comment VMusage 41636 52661FontName Times-BoldFullName Times BoldFamilyName TimesWeight BoldItalicAngle 0IsFixedPitch falseCharacterSet ExtendedRomanFontBBox -168 -218 1000 935 UnderlinePosition -100UnderlineThickness 50Version 002.000Notice Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype-Hell AG and/or its subsidiaries.EncodingScheme AdobeStandardEncodingCapHeight 676XHeight 461Ascender 683Descender -217StdHW 44StdVW 139StartCharMetrics 315C 32 ; WX 250 ; N space ; B 0 0 0 0 ;C 33 ; WX 333 ; N exclam ; B 81 -13 251 691 ;C 34 ; WX 555 ; N quotedbl ; B 83 404 472 691 ;C 35 ; WX 500 ; N numbersign ; B 4 0 496 700 ;C 36 ; WX 500 ; N dollar ; B 29 -99 472 750 ;C 37 ; WX 1000 ; N percent ; B 124 -14 877 692 ;C 38 ; WX 833 ; N ampersand ; B 62 -16 787 691 ;C 39 ; WX 333 ; N quoteright ; B 79 356 263 691 ;C 40 ; WX 333 ; N parenleft ; B 46 -168 306 694 ;C 41 ; WX 333 ; N parenright ; B 27 -168 287 694 ;C 42 ; WX 500 ; N asterisk ; B 56 255 447 691 ;C 43 ; WX 570 ; N plus ; B 33 0 537 506 ;C 44 ; WX 250 ; N comma ; B 39 -180 223 155 ;C 45 ; WX 333 ; N hyphen ; B 44 171 287 287 ;C 46 ; WX 250 ; N period ; B 41 -13 210 156 ;C 47 ; WX 278 ; N slash ; B -24 -19 302 691 ;C 48 ; WX 500 ; N zero ; B 24 -13 476 688 ;C 49 ; WX 500 ; N one ; B 65 0 442 688 ;C 50 ; WX 500 ; N two ; B 17 0 478 688 ;C 51 ; WX 500 ; N three ; B 16 -14 468 688 ;C 52 ; WX 500 ; N four ; B 19 0 475 688 ;C 53 ; WX 500 ; N five ; B 22 -8 470 676 ;C 54 ; WX 500 ; N six ; B 28 -13 475 688 ;C 55 ; WX 500 ; N seven ; B 17 0 477 676 ;C 56 ; WX 500 ; N eight ; B 28 -13 472 688 ;C 57 ; WX 500 ; N nine ; B 26 -13 473 688 ;C 58 ; WX 333 ; N colon ; B 82 -13 251 472 ;C 59 ; WX 333 ; N semicolon ; B 82 -180 266 472 ;C 60 ; WX 570 ; N less ; B 31 -8 539 514 ;C 61 ; WX 570 ; N equal ; B 33 107 537 399 ;C 62 ; WX 570 ; N greater ; B 31 -8 539 514 ;C 63 ; WX 500 ; N question ; B 57 -13 445 689 ;C 64 ; WX 930 ; N at ; B 108 -19 822 691 ;C 65 ; WX 722 ; N A ; B 9 0 689 690 ;C 66 ; WX 667 ; N B ; B 16 0 619 676 ;C 67 ; WX 722 ; N C ; B 49 -19 687 691 ;C 68 ; WX 722 ; N D ; B 14 0 690 676 ;C 69 ; WX 667 ; N E ; B 16 0 641 676 ;C 70 ; WX 611 ; N F ; B 16 0 583 676 ;C 71 ; WX 778 ; N G ; B 37 -19 755 691 ;C 72 ; WX 778 ; N H ; B 21 0 759 676 ;C 73 ; WX 389 ; N I ; B 20 0 370 676 ;C 74 ; WX 500 ; N J ; B 3 -96 479 676 ;C 75 ; WX 778 ; N K ; B 30 0 769 676 ;C 76 ; WX 667 ; N L ; B 19 0 638 676 ;C 77 ; WX 944 ; N M ; B 14 0 921 676 ;C 78 ; WX 722 ; N N ; B 16 -18 701 676 ;C 79 ; WX 778 ; N O ; B 35 -19 743 691 ;C 80 ; WX 611 ; N P ; B 16 0 600 676 ;C 81 ; WX 778 ; N Q ; B 35 -176 743 691 ;C 82 ; WX 722 ; N R ; B 26 0 715 676 ;C 83 ; WX 556 ; N S ; B 35 -19 513 692 ;C 84 ; WX 667 ; N T ; B 31 0 636 676 ;C 85 ; WX 722 ; N U ; B 16 -19 701 676 ;C 86 ; WX 722 ; N V ; B 16 -18 701 676 ;C 87 ; WX 1000 ; N W ; B 19 -15 981 676 ;C 88 ; WX 722 ; N X ; B 16 0 699 676 ;C 89 ; WX 722 ; N Y ; B 15 0 699 676 ;C 90 ; WX 667 ; N Z ; B 28 0 634 676 ;C 91 ; WX 333 ; N bracketleft ; B 67 -149 301 678 ;C 92 ; WX 278 ; N backslash ; B -25 -19 303 691 ;C 93 ; WX 333 ; N bracketright ; B 32 -149 266 678 ;C 94 ; WX 581 ; N asciicircum ; B 73 311 509 676 ;C 95 ; WX 500 ; N underscore ; B 0 -125 500 -75 ;C 96 ; WX 333 ; N quoteleft ; B 70 356 254 691 ;C 97 ; WX 500 ; N a ; B 25 -14 488 473 ;C 98 ; WX 556 ; N b ; B 17 -14 521 676 ;C 99 ; WX 444 ; N c ; B 25 -14 430 473 ;C 100 ; WX 556 ; N d ; B 25 -14 534 676 ;C 101 ; WX 444 ; N e ; B 25 -14 426 473 ;C 102 ; WX 333 ; N f ; B 14 0 389 691 ; L i fi ; L l fl ;C 103 ; WX 500 ; N g ; B 28 -206 483 473 ;C 104 ; WX 556 ; N h ; B 16 0 534 676 ;C 105 ; WX 278 ; N i ; B 16 0 255 691 ;C 106 ; WX 333 ; N j ; B -57 -203 263 691 ;C 107 ; WX 556 ; N k ; B 22 0 543 676 ;C 108 ; WX 278 ; N l ; B 16 0 255 676 ;C 109 ; WX 833 ; N m ; B 16 0 814 473 ;C 110 ; WX 556 ; N n ; B 21 0 539 473 ;C 111 ; WX 500 ; N o ; B 25 -14 476 473 ;C 112 ; WX 556 ; N p ; B 19 -205 524 473 ;C 113 ; WX 556 ; N q ; B 34 -205 536 473 ;C 114 ; WX 444 ; N r ; B 29 0 434 473 ;C 115 ; WX 389 ; N s ; B 25 -14 361 473 ;C 116 ; WX 333 ; N t ; B 20 -12 332 630 ;C 117 ; WX 556 ; N u ; B 16 -14 537 461 ;C 118 ; WX 500 ; N v ; B 21 -14 485 461 ;C 119 ; WX 722 ; N w ; B 23 -14 707 461 ;C 120 ; WX 500 ; N x ; B 12 0 484 461 ;C 121 ; WX 500 ; N y ; B 16 -205 480 461 ;C 122 ; WX 444 ; N z ; B 21 0 420 461 ;C 123 ; WX 394 ; N braceleft ; B 22 -175 340 698 ;C 124 ; WX 220 ; N bar ; B 66 -218 154 782 ;C 125 ; WX 394 ; N braceright ; B 54 -175 372 698 ;C 126 ; WX 520 ; N asciitilde ; B 29 173 491 333 ;C 161 ; WX 333 ; N exclamdown ; B 82 -203 252 501 ;C 162 ; WX 500 ; N cent ; B 53 -140 458 588 ;C 163 ; WX 500 ; N sterling ; B 21 -14 477 684 ;C 164 ; WX 167 ; N fraction ; B -168 -12 329 688 ;C 165 ; WX 500 ; N yen ; B -64 0 547 676 ;C 166 ; WX 500 ; N florin ; B 0 -155 498 706 ;C 167 ; WX 500 ; N section ; B 57 -132 443 691 ;C 168 ; WX 500 ; N currency ; B -26 61 526 613 ;C 169 ; WX 278 ; N quotesingle ; B 75 404 204 691 ;C 170 ; WX 500 ; N quotedblleft ; B 32 356 486 691 ;C 171 ; WX 500 ; N guillemotleft ; B 23 36 473 415 ;C 172 ; WX 333 ; N guilsinglleft ; B 51 36 305 415 ;C 173 ; WX 333 ; N guilsinglright ; B 28 36 282 415 ;C 174 ; WX 556 ; N fi ; B 14 0 536 691 ;C 175 ; WX 556 ; N fl ; B 14 0 536 691 ;C 177 ; WX 500 ; N endash ; B 0 181 500 271 ;C 178 ; WX 500 ; N dagger ; B 47 -134 453 691 ;C 179 ; WX 500 ; N daggerdbl ; B 45 -132 456 691 ;C 180 ; WX 250 ; N periodcentered ; B 41 248 210 417 ;C 182 ; WX 540 ; N paragraph ; B 0 -186 519 676 ;C 183 ; WX 350 ; N bullet ; B 35 198 315 478 ;C 184 ; WX 333 ; N quotesinglbase ; B 79 -180 263 155 ;C 185 ; WX 500 ; N quotedblbase ; B 14 -180 468 155 ;C 186 ; WX 500 ; N quotedblright ; B 14 356 468 691 ;C 187 ; WX 500 ; N guillemotright ; B 27 36 477 415 ;C 188 ; WX 1000 ; N ellipsis ; B 82 -13 917 156 ;C 189 ; WX 1000 ; N perthousand ; B 7 -29 995 706 ;C 191 ; WX 500 ; N questiondown ; B 55 -201 443 501 ;C 193 ; WX 333 ; N grave ; B 8 528 246 713 ;C 194 ; WX 333 ; N acute ; B 86 528 324 713 ;C 195 ; WX 333 ; N circumflex ; B -2 528 335 704 ;C 196 ; WX 333 ; N tilde ; B -16 547 349 674 ;C 197 ; WX 333 ; N macron ; B 1 565 331 637 ;C 198 ; WX 333 ; N breve ; B 15 528 318 691 ;C 199 ; WX 333 ; N dotaccent ; B 103 536 258 691 ;C 200 ; WX 333 ; N dieresis ; B -2 537 335 667 ;C 202 ; WX 333 ; N ring ; B 60 527 273 740 ;C 203 ; WX 333 ; N cedilla ; B 68 -218 294 0 ;C 205 ; WX 333 ; N hungarumlaut ; B -13 528 425 713 ;C 206 ; WX 333 ; N ogonek ; B 90 -193 319 24 ;C 207 ; WX 333 ; N caron ; B -2 528 335 704 ;C 208 ; WX 1000 ; N emdash ; B 0 181 1000 271 ;C 225 ; WX 1000 ; N AE ; B 4 0 951 676 ;C 227 ; WX 300 ; N ordfeminine ; B -1 397 301 688 ;C 232 ; WX 667 ; N Lslash ; B 19 0 638 676 ;C 233 ; WX 778 ; N Oslash ; B 35 -74 743 737 ;C 234 ; WX 1000 ; N OE ; B 22 -5 981 684 ;C 235 ; WX 330 ; N ordmasculine ; B 18 397 312 688 ;C 241 ; WX 722 ; N ae ; B 33 -14 693 473 ;C 245 ; WX 278 ; N dotlessi ; B 16 0 255 461 ;C 248 ; WX 278 ; N lslash ; B -22 0 303 676 ;C 249 ; WX 500 ; N oslash ; B 25 -92 476 549 ;C 250 ; WX 722 ; N oe ; B 22 -14 696 473 ;C 251 ; WX 556 ; N germandbls ; B 19 -12 517 691 ;C -1 ; WX 389 ; N Idieresis ; B 20 0 370 877 ;C -1 ; WX 444 ; N eacute ; B 25 -14 426 713 ;C -1 ; WX 500 ; N abreve ; B 25 -14 488 691 ;C -1 ; WX 556 ; N uhungarumlaut ; B 16 -14 557 713 ;C -1 ; WX 444 ; N ecaron ; B 25 -14 426 704 ;C -1 ; WX 722 ; N Ydieresis ; B 15 0 699 877 ;C -1 ; WX 570 ; N divide ; B 33 -31 537 537 ;C -1 ; WX 722 ; N Yacute ; B 15 0 699 923 ;C -1 ; WX 722 ; N Acircumflex ; B 9 0 689 914 ;C -1 ; WX 500 ; N aacute ; B 25 -14 488 713 ;C -1 ; WX 722 ; N Ucircumflex ; B 16 -19 701 914 ;C -1 ; WX 500 ; N yacute ; B 16 -205 480 713 ;C -1 ; WX 389 ; N scommaaccent ; B 25 -218 361 473 ;C -1 ; WX 444 ; N ecircumflex ; B 25 -14 426 704 ;C -1 ; WX 722 ; N Uring ; B 16 -19 701 935 ;C -1 ; WX 722 ; N Udieresis ; B 16 -19 701 877 ;C -1 ; WX 500 ; N aogonek ; B 25 -193 504 473 ;C -1 ; WX 722 ; N Uacute ; B 16 -19 701 923 ;C -1 ; WX 556 ; N uogonek ; B 16 -193 539 461 ;C -1 ; WX 667 ; N Edieresis ; B 16 0 641 877 ;C -1 ; WX 722 ; N Dcroat ; B 6 0 690 676 ;C -1 ; WX 250 ; N commaaccent ; B 47 -218 203 -50 ;C -1 ; WX 747 ; N copyright ; B 26 -19 721 691 ;C -1 ; WX 667 ; N Emacron ; B 16 0 641 847 ;C -1 ; WX 444 ; N ccaron ; B 25 -14 430 704 ;C -1 ; WX 500 ; N aring ; B 25 -14 488 740 ;C -1 ; WX 722 ; N Ncommaaccent ; B 16 -188 701 676 ;C -1 ; WX 278 ; N lacute ; B 16 0 297 923 ;C -1 ; WX 500 ; N agrave ; B 25 -14 488 713 ;C -1 ; WX 667 ; N Tcommaaccent ; B 31 -218 636 676 ;C -1 ; WX 722 ; N Cacute ; B 49 -19 687 923 ;C -1 ; WX 500 ; N atilde ; B 25 -14 488 674 ;C -1 ; WX 667 ; N Edotaccent ; B 16 0 641 901 ;C -1 ; WX 389 ; N scaron ; B 25 -14 363 704 ;C -1 ; WX 389 ; N scedilla ; B 25 -218 361 473 ;C -1 ; WX 278 ; N iacute ; B 16 0 289 713 ;C -1 ; WX 494 ; N lozenge ; B 10 0 484 745 ;C -1 ; WX 722 ; N Rcaron ; B 26 0 715 914 ;C -1 ; WX 778 ; N Gcommaaccent ; B 37 -218 755 691 ;C -1 ; WX 556 ; N ucircumflex ; B 16 -14 537 704 ;C -1 ; WX 500 ; N acircumflex ; B 25 -14 488 704 ;C -1 ; WX 722 ; N Amacron ; B 9 0 689 847 ;C -1 ; WX 444 ; N rcaron ; B 29 0 434 704 ;C -1 ; WX 444 ; N ccedilla ; B 25 -218 430 473 ;C -1 ; WX 667 ; N Zdotaccent ; B 28 0 634 901 ;C -1 ; WX 611 ; N Thorn ; B 16 0 600 676 ;C -1 ; WX 778 ; N Omacron ; B 35 -19 743 847 ;C -1 ; WX 722 ; N Racute ; B 26 0 715 923 ;C -1 ; WX 556 ; N Sacute ; B 35 -19 513 923 ;C -1 ; WX 672 ; N dcaron ; B 25 -14 681 682 ;C -1 ; WX 722 ; N Umacron ; B 16 -19 701 847 ;C -1 ; WX 556 ; N uring ; B 16 -14 537 740 ;C -1 ; WX 300 ; N threesuperior ; B 3 268 297 688 ;C -1 ; WX 778 ; N Ograve ; B 35 -19 743 923 ;C -1 ; WX 722 ; N Agrave ; B 9 0 689 923 ;C -1 ; WX 722 ; N Abreve ; B 9 0 689 901 ;C -1 ; WX 570 ; N multiply ; B 48 16 522 490 ;C -1 ; WX 556 ; N uacute ; B 16 -14 537 713 ;C -1 ; WX 667 ; N Tcaron ; B 31 0 636 914 ;C -1 ; WX 494 ; N partialdiff ; B 11 -21 494 750 ;C -1 ; WX 500 ; N ydieresis ; B 16 -205 480 667 ;C -1 ; WX 722 ; N Nacute ; B 16 -18 701 923 ;C -1 ; WX 278 ; N icircumflex ; B -37 0 300 704 ;C -1 ; WX 667 ; N Ecircumflex ; B 16 0 641 914 ;C -1 ; WX 500 ; N adieresis ; B 25 -14 488 667 ;C -1 ; WX 444 ; N edieresis ; B 25 -14 426 667 ;C -1 ; WX 444 ; N cacute ; B 25 -14 430 713 ;C -1 ; WX 556 ; N nacute ; B 21 0 539 713 ;C -1 ; WX 556 ; N umacron ; B 16 -14 537 637 ;C -1 ; WX 722 ; N Ncaron ; B 16 -18 701 914 ;C -1 ; WX 389 ; N Iacute ; B 20 0 370 923 ;C -1 ; WX 570 ; N plusminus ; B 33 0 537 506 ;C -1 ; WX 220 ; N brokenbar ; B 66 -143 154 707 ;C -1 ; WX 747 ; N registered ; B 26 -19 721 691 ;C -1 ; WX 778 ; N Gbreve ; B 37 -19 755 901 ;C -1 ; WX 389 ; N Idotaccent ; B 20 0 370 901 ;C -1 ; WX 600 ; N summation ; B 14 -10 585 706 ;C -1 ; WX 667 ; N Egrave ; B 16 0 641 923 ;C -1 ; WX 444 ; N racute ; B 29 0 434 713 ;C -1 ; WX 500 ; N omacron ; B 25 -14 476 637 ;C -1 ; WX 667 ; N Zacute ; B 28 0 634 923 ;C -1 ; WX 667 ; N Zcaron ; B 28 0 634 914 ;C -1 ; WX 549 ; N greaterequal ; B 26 0 523 704 ;C -1 ; WX 722 ; N Eth ; B 6 0 690 676 ;C -1 ; WX 722 ; N Ccedilla ; B 49 -218 687 691 ;C -1 ; WX 278 ; N lcommaaccent ; B 16 -218 255 676 ;C -1 ; WX 416 ; N tcaron ; B 20 -12 425 815 ;C -1 ; WX 444 ; N eogonek ; B 25 -193 426 473 ;C -1 ; WX 722 ; N Uogonek ; B 16 -193 701 676 ;C -1 ; WX 722 ; N Aacute ; B 9 0 689 923 ;C -1 ; WX 722 ; N Adieresis ; B 9 0 689 877 ;C -1 ; WX 444 ; N egrave ; B 25 -14 426 713 ;C -1 ; WX 444 ; N zacute ; B 21 0 420 713 ;C -1 ; WX 278 ; N iogonek ; B 16 -193 274 691 ;C -1 ; WX 778 ; N Oacute ; B 35 -19 743 923 ;C -1 ; WX 500 ; N oacute ; B 25 -14 476 713 ;C -1 ; WX 500 ; N amacron ; B 25 -14 488 637 ;C -1 ; WX 389 ; N sacute ; B 25 -14 361 713 ;C -1 ; WX 278 ; N idieresis ; B -37 0 300 667 ;C -1 ; WX 778 ; N Ocircumflex ; B 35 -19 743 914 ;C -1 ; WX 722 ; N Ugrave ; B 16 -19 701 923 ;C -1 ; WX 612 ; N Delta ; B 6 0 608 688 ;C -1 ; WX 556 ; N thorn ; B 19 -205 524 676 ;C -1 ; WX 300 ; N twosuperior ; B 0 275 300 688 ;C -1 ; WX 778 ; N Odieresis ; B 35 -19 743 877 ;C -1 ; WX 556 ; N mu ; B 33 -206 536 461 ;C -1 ; WX 278 ; N igrave ; B -27 0 255 713 ;C -1 ; WX 500 ; N ohungarumlaut ; B 25 -14 529 713 ;C -1 ; WX 667 ; N Eogonek ; B 16 -193 644 676 ;C -1 ; WX 556 ; N dcroat ; B 25 -14 534 676 ;C -1 ; WX 750 ; N threequarters ; B 23 -12 733 688 ;C -1 ; WX 556 ; N Scedilla ; B 35 -218 513 692 ;C -1 ; WX 394 ; N lcaron ; B 16 0 412 682 ;C -1 ; WX 778 ; N Kcommaaccent ; B 30 -218 769 676 ;C -1 ; WX 667 ; N Lacute ; B 19 0 638 923 ;C -1 ; WX 1000 ; N trademark ; B 24 271 977 676 ;C -1 ; WX 444 ; N edotaccent ; B 25 -14 426 691 ;C -1 ; WX 389 ; N Igrave ; B 20 0 370 923 ;C -1 ; WX 389 ; N Imacron ; B 20 0 370 847 ;C -1 ; WX 667 ; N Lcaron ; B 19 0 652 682 ;C -1 ; WX 750 ; N onehalf ; B -7 -12 775 688 ;C -1 ; WX 549 ; N lessequal ; B 29 0 526 704 ;C -1 ; WX 500 ; N ocircumflex ; B 25 -14 476 704 ;C -1 ; WX 556 ; N ntilde ; B 21 0 539 674 ;C -1 ; WX 722 ; N Uhungarumlaut ; B 16 -19 701 923 ;C -1 ; WX 667 ; N Eacute ; B 16 0 641 923 ;C -1 ; WX 444 ; N emacron ; B 25 -14 426 637 ;C -1 ; WX 500 ; N gbreve ; B 28 -206 483 691 ;C -1 ; WX 750 ; N onequarter ; B 28 -12 743 688 ;C -1 ; WX 556 ; N Scaron ; B 35 -19 513 914 ;C -1 ; WX 556 ; N Scommaaccent ; B 35 -218 513 692 ;C -1 ; WX 778 ; N Ohungarumlaut ; B 35 -19 743 923 ;C -1 ; WX 400 ; N degree ; B 57 402 343 688 ;C -1 ; WX 500 ; N ograve ; B 25 -14 476 713 ;C -1 ; WX 722 ; N Ccaron ; B 49 -19 687 914 ;C -1 ; WX 556 ; N ugrave ; B 16 -14 537 713 ;C -1 ; WX 549 ; N radical ; B 10 -46 512 850 ;C -1 ; WX 722 ; N Dcaron ; B 14 0 690 914 ;C -1 ; WX 444 ; N rcommaaccent ; B 29 -218 434 473 ;C -1 ; WX 722 ; N Ntilde ; B 16 -18 701 884 ;C -1 ; WX 500 ; N otilde ; B 25 -14 476 674 ;C -1 ; WX 722 ; N Rcommaaccent ; B 26 -218 715 676 ;C -1 ; WX 667 ; N Lcommaaccent ; B 19 -218 638 676 ;C -1 ; WX 722 ; N Atilde ; B 9 0 689 884 ;C -1 ; WX 722 ; N Aogonek ; B 9 -193 699 690 ;C -1 ; WX 722 ; N Aring ; B 9 0 689 935 ;C -1 ; WX 778 ; N Otilde ; B 35 -19 743 884 ;C -1 ; WX 444 ; N zdotaccent ; B 21 0 420 691 ;C -1 ; WX 667 ; N Ecaron ; B 16 0 641 914 ;C -1 ; WX 389 ; N Iogonek ; B 20 -193 370 676 ;C -1 ; WX 556 ; N kcommaaccent ; B 22 -218 543 676 ;C -1 ; WX 570 ; N minus ; B 33 209 537 297 ;C -1 ; WX 389 ; N Icircumflex ; B 20 0 370 914 ;C -1 ; WX 556 ; N ncaron ; B 21 0 539 704 ;C -1 ; WX 333 ; N tcommaaccent ; B 20 -218 332 630 ;C -1 ; WX 570 ; N logicalnot ; B 33 108 537 399 ;C -1 ; WX 500 ; N odieresis ; B 25 -14 476 667 ;C -1 ; WX 556 ; N udieresis ; B 16 -14 537 667 ;C -1 ; WX 549 ; N notequal ; B 15 -49 540 570 ;C -1 ; WX 500 ; N gcommaaccent ; B 28 -206 483 829 ;C -1 ; WX 500 ; N eth ; B 25 -14 476 691 ;C -1 ; WX 444 ; N zcaron ; B 21 0 420 704 ;C -1 ; WX 556 ; N ncommaaccent ; B 21 -218 539 473 ;C -1 ; WX 300 ; N onesuperior ; B 28 275 273 688 ;C -1 ; WX 278 ; N imacron ; B -8 0 272 637 ;C -1 ; WX 500 ; N Euro ; B 0 0 0 0 ;EndCharMetricsStartKernDataStartKernPairs 2242KPX A C -55KPX A Cacute -55KPX A Ccaron -55KPX A Ccedilla -55KPX A G -55KPX A Gbreve -55KPX A Gcommaaccent -55KPX A O -45KPX A Oacute -45KPX A Ocircumflex -45KPX A Odieresis -45KPX A Ograve -45KPX A Ohungarumlaut -45KPX A Omacron -45KPX A Oslash -45KPX A Otilde -45KPX A Q -45KPX A T -95KPX A Tcaron -95KPX A Tcommaaccent -95KPX A U -50KPX A Uacute -50KPX A Ucircumflex -50KPX A Udieresis -50KPX A Ugrave -50KPX A Uhungarumlaut -50KPX A Umacron -50KPX A Uogonek -50KPX A Uring -50KPX A V -145KPX A W -130KPX A Y -100KPX A Yacute -100KPX A Ydieresis -100KPX A p -25KPX A quoteright -74KPX A u -50KPX A uacute -50KPX A ucircumflex -50KPX A udieresis -50KPX A ugrave -50KPX A uhungarumlaut -50KPX A umacron -50KPX A uogonek -50KPX A uring -50KPX A v -100KPX A w -90KPX A y -74KPX A yacute -74KPX A ydieresis -74KPX Aacute C -55KPX Aacute Cacute -55KPX Aacute Ccaron -55KPX Aacute Ccedilla -55KPX Aacute G -55KPX Aacute Gbreve -55KPX Aacute Gcommaaccent -55KPX Aacute O -45KPX Aacute Oacute -45KPX Aacute Ocircumflex -45KPX Aacute Odieresis -45KPX Aacute Ograve -45KPX Aacute Ohungarumlaut -45KPX Aacute Omacron -45KPX Aacute Oslash -45KPX Aacute Otilde -45KPX Aacute Q -45KPX Aacute T -95KPX Aacute Tcaron -95KPX Aacute Tcommaaccent -95KPX Aacute U -50KPX Aacute Uacute -50KPX Aacute Ucircumflex -50KPX Aacute Udieresis -50KPX Aacute Ugrave -50KPX Aacute Uhungarumlaut -50KPX Aacute Umacron -50KPX Aacute Uogonek -50KPX Aacute Uring -50KPX Aacute V -145KPX Aacute W -130KPX Aacute Y -100KPX Aacute Yacute -100KPX Aacute Ydieresis -100KPX Aacute p -25KPX Aacute quoteright -74KPX Aacute u -50KPX Aacute uacute -50KPX Aacute ucircumflex -50KPX Aacute udieresis -50KPX Aacute ugrave -50KPX Aacute uhungarumlaut -50KPX Aacute umacron -50KPX Aacute uogonek -50KPX Aacute uring -50KPX Aacute v -100KPX Aacute w -90KPX Aacute y -74KPX Aacute yacute -74KPX Aacute ydieresis -74KPX Abreve C -55KPX Abreve Cacute -55KPX Abreve Ccaron -55KPX Abreve Ccedilla -55KPX Abreve G -55KPX Abreve Gbreve -55KPX Abreve Gcommaaccent -55KPX Abreve O -45KPX Abreve Oacute -45KPX Abreve Ocircumflex -45KPX Abreve Odieresis -45KPX Abreve Ograve -45KPX Abreve Ohungarumlaut -45KPX Abreve Omacron -45KPX Abreve Oslash -45KPX Abreve Otilde -45KPX Abreve Q -45KPX Abreve T -95KPX Abreve Tcaron -95KPX Abreve Tcommaaccent -95KPX Abreve U -50KPX Abreve Uacute -50KPX Abreve Ucircumflex -50KPX Abreve Udieresis -50KPX Abreve Ugrave -50KPX Abreve Uhungarumlaut -50KPX Abreve Umacron -50KPX Abreve Uogonek -50KPX Abreve Uring -50KPX Abreve V -145KPX Abreve W -130KPX Abreve Y -100KPX Abreve Yacute -100KPX Abreve Ydieresis -100KPX Abreve p -25KPX Abreve quoteright -74KPX Abreve u -50KPX Abreve uacute -50KPX Abreve ucircumflex -50KPX Abreve udieresis -50KPX Abreve ugrave -50KPX Abreve uhungarumlaut -50KPX Abreve umacron -50KPX Abreve uogonek -50KPX Abreve uring -50KPX Abreve v -100KPX Abreve w -90KPX Abreve y -74KPX Abreve yacute -74KPX Abreve ydieresis -74KPX Acircumflex C -55KPX Acircumflex Cacute -55KPX Acircumflex Ccaron -55KPX Acircumflex Ccedilla -55KPX Acircumflex G -55KPX Acircumflex Gbreve -55KPX Acircumflex Gcommaaccent -55KPX Acircumflex O -45KPX Acircumflex Oacute -45KPX Acircumflex Ocircumflex -45KPX Acircumflex Odieresis -45KPX Acircumflex Ograve -45KPX Acircumflex Ohungarumlaut -45KPX Acircumflex Omacron -45KPX Acircumflex Oslash -45KPX Acircumflex Otilde -45KPX Acircumflex Q -45KPX Acircumflex T -95KPX Acircumflex Tcaron -95KPX Acircumflex Tcommaaccent -95KPX Acircumflex U -50KPX Acircumflex Uacute -50KPX Acircumflex Ucircumflex -50KPX Acircumflex Udieresis -50KPX Acircumflex Ugrave -50KPX Acircumflex Uhungarumlaut -50KPX Acircumflex Umacron -50KPX Acircumflex Uogonek -50KPX Acircumflex Uring -50KPX Acircumflex V -145KPX Acircumflex W -130KPX Acircumflex Y -100KPX Acircumflex Yacute -100KPX Acircumflex Ydieresis -100KPX Acircumflex p -25KPX Acircumflex quoteright -74KPX Acircumflex u -50KPX Acircumflex uacute -50KPX Acircumflex ucircumflex -50KPX Acircumflex udieresis -50KPX Acircumflex ugrave -50KPX Acircumflex uhungarumlaut -50KPX Acircumflex umacron -50KPX Acircumflex uogonek -50KPX Acircumflex uring -50KPX Acircumflex v -100KPX Acircumflex w -90KPX Acircumflex y -74KPX Acircumflex yacute -74KPX Acircumflex ydieresis -74KPX Adieresis C -55KPX Adieresis Cacute -55KPX Adieresis Ccaron -55KPX Adieresis Ccedilla -55KPX Adieresis G -55KPX Adieresis Gbreve -55KPX Adieresis Gcommaaccent -55KPX Adieresis O -45KPX Adieresis Oacute -45KPX Adieresis Ocircumflex -45KPX Adieresis Odieresis -45KPX Adieresis Ograve -45KPX Adieresis Ohungarumlaut -45KPX Adieresis Omacron -45KPX Adieresis Oslash -45KPX Adieresis Otilde -45KPX Adieresis Q -45KPX Adieresis T -95KPX Adieresis Tcaron -95KPX Adieresis Tcommaaccent -95KPX Adieresis U -50KPX Adieresis Uacute -50KPX Adieresis Ucircumflex -50KPX Adieresis Udieresis -50KPX Adieresis Ugrave -50KPX Adieresis Uhungarumlaut -50KPX Adieresis Umacron -50KPX Adieresis Uogonek -50KPX Adieresis Uring -50KPX Adieresis V -145KPX Adieresis W -130KPX Adieresis Y -100KPX Adieresis Yacute -100KPX Adieresis Ydieresis -100KPX Adieresis p -25KPX Adieresis quoteright -74KPX Adieresis u -50KPX Adieresis uacute -50KPX Adieresis ucircumflex -50KPX Adieresis udieresis -50KPX Adieresis ugrave -50KPX Adieresis uhungarumlaut -50KPX Adieresis umacron -50KPX Adieresis uogonek -50KPX Adieresis uring -50KPX Adieresis v -100KPX Adieresis w -90KPX Adieresis y -74KPX Adieresis yacute -74KPX Adieresis ydieresis -74KPX Agrave C -55KPX Agrave Cacute -55KPX Agrave Ccaron -55KPX Agrave Ccedilla -55KPX Agrave G -55KPX Agrave Gbreve -55KPX Agrave Gcommaaccent -55KPX Agrave O -45KPX Agrave Oacute -45KPX Agrave Ocircumflex -45KPX Agrave Odieresis -45KPX Agrave Ograve -45KPX Agrave Ohungarumlaut -45KPX Agrave Omacron -45KPX Agrave Oslash -45KPX Agrave Otilde -45KPX Agrave Q -45KPX Agrave T -95KPX Agrave Tcaron -95KPX Agrave Tcommaaccent -95KPX Agrave U -50KPX Agrave Uacute -50KPX Agrave Ucircumflex -50KPX Agrave Udieresis -50KPX Agrave Ugrave -50KPX Agrave Uhungarumlaut -50KPX Agrave Umacron -50KPX Agrave Uogonek -50KPX Agrave Uring -50KPX Agrave V -145KPX Agrave W -130KPX Agrave Y -100KPX Agrave Yacute -100KPX Agrave Ydieresis -100KPX Agrave p -25KPX Agrave quoteright -74KPX Agrave u -50KPX Agrave uacute -50KPX Agrave ucircumflex -50KPX Agrave udieresis -50KPX Agrave ugrave -50KPX Agrave uhungarumlaut -50KPX Agrave umacron -50KPX Agrave uogonek -50KPX Agrave uring -50KPX Agrave v -100KPX Agrave w -90KPX Agrave y -74KPX Agrave yacute -74KPX Agrave ydieresis -74KPX Amacron C -55KPX Amacron Cacute -55KPX Amacron Ccaron -55KPX Amacron Ccedilla -55KPX Amacron G -55KPX Amacron Gbreve -55KPX Amacron Gcommaaccent -55KPX Amacron O -45KPX Amacron Oacute -45KPX Amacron Ocircumflex -45KPX Amacron Odieresis -45KPX Amacron Ograve -45KPX Amacron Ohungarumlaut -45KPX Amacron Omacron -45KPX Amacron Oslash -45KPX Amacron Otilde -45KPX Amacron Q -45KPX Amacron T -95KPX Amacron Tcaron -95KPX Amacron Tcommaaccent -95KPX Amacron U -50KPX Amacron Uacute -50KPX Amacron Ucircumflex -50KPX Amacron Udieresis -50KPX Amacron Ugrave -50KPX Amacron Uhungarumlaut -50KPX Amacron Umacron -50KPX Amacron Uogonek -50KPX Amacron Uring -50KPX Amacron V -145KPX Amacron W -130KPX Amacron Y -100KPX Amacron Yacute -100KPX Amacron Ydieresis -100KPX Amacron p -25KPX Amacron quoteright -74KPX Amacron u -50KPX Amacron uacute -50KPX Amacron ucircumflex -50KPX Amacron udieresis -50KPX Amacron ugrave -50KPX Amacron uhungarumlaut -50KPX Amacron umacron -50KPX Amacron uogonek -50KPX Amacron uring -50KPX Amacron v -100KPX Amacron w -90KPX Amacron y -74KPX Amacron yacute -74KPX Amacron ydieresis -74KPX Aogonek C -55KPX Aogonek Cacute -55KPX Aogonek Ccaron -55KPX Aogonek Ccedilla -55KPX Aogonek G -55KPX Aogonek Gbreve -55KPX Aogonek Gcommaaccent -55KPX Aogonek O -45KPX Aogonek Oacute -45KPX Aogonek Ocircumflex -45KPX Aogonek Odieresis -45KPX Aogonek Ograve -45KPX Aogonek Ohungarumlaut -45KPX Aogonek Omacron -45KPX Aogonek Oslash -45KPX Aogonek Otilde -45KPX Aogonek Q -45KPX Aogonek T -95KPX Aogonek Tcaron -95KPX Aogonek Tcommaaccent -95KPX Aogonek U -50KPX Aogonek Uacute -50KPX Aogonek Ucircumflex -50KPX Aogonek Udieresis -50KPX Aogonek Ugrave -50KPX Aogonek Uhungarumlaut -50KPX Aogonek Umacron -50KPX Aogonek Uogonek -50KPX Aogonek Uring -50KPX Aogonek V -145KPX Aogonek W -130KPX Aogonek Y -100KPX Aogonek Yacute -100KPX Aogonek Ydieresis -100KPX Aogonek p -25KPX Aogonek quoteright -74KPX Aogonek u -50KPX Aogonek uacute -50KPX Aogonek ucircumflex -50KPX Aogonek udieresis -50KPX Aogonek ugrave -50KPX Aogonek uhungarumlaut -50KPX Aogonek umacron -50KPX Aogonek uogonek -50KPX Aogonek uring -50KPX Aogonek v -100KPX Aogonek w -90KPX Aogonek y -34KPX Aogonek yacute -34KPX Aogonek ydieresis -34KPX Aring C -55KPX Aring Cacute -55KPX Aring Ccaron -55KPX Aring Ccedilla -55KPX Aring G -55KPX Aring Gbreve -55KPX Aring Gcommaaccent -55KPX Aring O -45KPX Aring Oacute -45KPX Aring Ocircumflex -45KPX Aring Odieresis -45KPX Aring Ograve -45KPX Aring Ohungarumlaut -45KPX Aring Omacron -45KPX Aring Oslash -45KPX Aring Otilde -45KPX Aring Q -45KPX Aring T -95KPX Aring Tcaron -95KPX Aring Tcommaaccent -95KPX Aring U -50KPX Aring Uacute -50KPX Aring Ucircumflex -50KPX Aring Udieresis -50KPX Aring Ugrave -50KPX Aring Uhungarumlaut -50KPX Aring Umacron -50KPX Aring Uogonek -50KPX Aring Uring -50KPX Aring V -145KPX Aring W -130KPX Aring Y -100KPX Aring Yacute -100KPX Aring Ydieresis -100KPX Aring p -25KPX Aring quoteright -74KPX Aring u -50KPX Aring uacute -50KPX Aring ucircumflex -50KPX Aring udieresis -50KPX Aring ugrave -50KPX Aring uhungarumlaut -50KPX Aring umacron -50KPX Aring uogonek -50KPX Aring uring -50KPX Aring v -100KPX Aring w -90KPX Aring y -74KPX Aring yacute -74KPX Aring ydieresis -74KPX Atilde C -55KPX Atilde Cacute -55KPX Atilde Ccaron -55KPX Atilde Ccedilla -55KPX Atilde G -55KPX Atilde Gbreve -55KPX Atilde Gcommaaccent -55KPX Atilde O -45KPX Atilde Oacute -45KPX Atilde Ocircumflex -45KPX Atilde Odieresis -45KPX Atilde Ograve -45KPX Atilde Ohungarumlaut -45KPX Atilde Omacron -45KPX Atilde Oslash -45KPX Atilde Otilde -45KPX Atilde Q -45KPX Atilde T -95KPX Atilde Tcaron -95KPX Atilde Tcommaaccent -95KPX Atilde U -50KPX Atilde Uacute -50KPX Atilde Ucircumflex -50KPX Atilde Udieresis -50KPX Atilde Ugrave -50KPX Atilde Uhungarumlaut -50KPX Atilde Umacron -50KPX Atilde Uogonek -50KPX Atilde Uring -50KPX Atilde V -145KPX Atilde W -130KPX Atilde Y -100KPX Atilde Yacute -100KPX Atilde Ydieresis -100KPX Atilde p -25KPX Atilde quoteright -74KPX Atilde u -50KPX Atilde uacute -50KPX Atilde ucircumflex -50KPX Atilde udieresis -50KPX Atilde ugrave -50KPX Atilde uhungarumlaut -50KPX Atilde umacron -50KPX Atilde uogonek -50KPX Atilde uring -50KPX Atilde v -100KPX Atilde w -90KPX Atilde y -74KPX Atilde yacute -74KPX Atilde ydieresis -74KPX B A -30KPX B Aacute -30KPX B Abreve -30KPX B Acircumflex -30KPX B Adieresis -30KPX B Agrave -30KPX B Amacron -30KPX B Aogonek -30KPX B Aring -30KPX B Atilde -30KPX B U -10KPX B Uacute -10KPX B Ucircumflex -10KPX B Udieresis -10KPX B Ugrave -10KPX B Uhungarumlaut -10KPX B Umacron -10KPX B Uogonek -10KPX B Uring -10KPX D A -35KPX D Aacute -35KPX D Abreve -35KPX D Acircumflex -35KPX D Adieresis -35KPX D Agrave -35KPX D Amacron -35KPX D Aogonek -35KPX D Aring -35KPX D Atilde -35KPX D V -40KPX D W -40KPX D Y -40KPX D Yacute -40KPX D Ydieresis -40KPX D period -20KPX Dcaron A -35KPX Dcaron Aacute -35KPX Dcaron Abreve -35KPX Dcaron Acircumflex -35KPX Dcaron Adieresis -35KPX Dcaron Agrave -35KPX Dcaron Amacron -35KPX Dcaron Aogonek -35KPX Dcaron Aring -35KPX Dcaron Atilde -35KPX Dcaron V -40KPX Dcaron W -40KPX Dcaron Y -40KPX Dcaron Yacute -40KPX Dcaron Ydieresis -40KPX Dcaron period -20KPX Dcroat A -35KPX Dcroat Aacute -35KPX Dcroat Abreve -35KPX Dcroat Acircumflex -35KPX Dcroat Adieresis -35KPX Dcroat Agrave -35KPX Dcroat Amacron -35KPX Dcroat Aogonek -35KPX Dcroat Aring -35KPX Dcroat Atilde -35KPX Dcroat V -40KPX Dcroat W -40KPX Dcroat Y -40KPX Dcroat Yacute -40KPX Dcroat Ydieresis -40KPX Dcroat period -20KPX F A -90KPX F Aacute -90KPX F Abreve -90KPX F Acircumflex -90KPX F Adieresis -90KPX F Agrave -90KPX F Amacron -90KPX F Aogonek -90KPX F Aring -90KPX F Atilde -90KPX F a -25KPX F aacute -25KPX F abreve -25KPX F acircumflex -25KPX F adieresis -25KPX F agrave -25KPX F amacron -25KPX F aogonek -25KPX F aring -25KPX F atilde -25KPX F comma -92KPX F e -25KPX F eacute -25KPX F ecaron -25KPX F ecircumflex -25KPX F edieresis -25KPX F edotaccent -25KPX F egrave -25KPX F emacron -25KPX F eogonek -25KPX F o -25KPX F oacute -25KPX F ocircumflex -25KPX F odieresis -25KPX F ograve -25KPX F ohungarumlaut -25KPX F omacron -25KPX F oslash -25KPX F otilde -25KPX F period -110KPX J A -30KPX J Aacute -30KPX J Abreve -30KPX J Acircumflex -30KPX J Adieresis -30KPX J Agrave -30KPX J Amacron -30KPX J Aogonek -30KPX J Aring -30KPX J Atilde -30KPX J a -15KPX J aacute -15KPX J abreve -15KPX J acircumflex -15KPX J adieresis -15KPX J agrave -15KPX J amacron -15KPX J aogonek -15KPX J aring -15KPX J atilde -15KPX J e -15KPX J eacute -15KPX J ecaron -15KPX J ecircumflex -15KPX J edieresis -15KPX J edotaccent -15KPX J egrave -15KPX J emacron -15KPX J eogonek -15KPX J o -15KPX J oacute -15KPX J ocircumflex -15KPX J odieresis -15KPX J ograve -15KPX J ohungarumlaut -15KPX J omacron -15KPX J oslash -15KPX J otilde -15KPX J period -20KPX J u -15KPX J uacute -15KPX J ucircumflex -15KPX J udieresis -15KPX J ugrave -15KPX J uhungarumlaut -15KPX J umacron -15KPX J uogonek -15KPX J uring -15KPX K O -30KPX K Oacute -30KPX K Ocircumflex -30KPX K Odieresis -30KPX K Ograve -30KPX K Ohungarumlaut -30KPX K Omacron -30KPX K Oslash -30KPX K Otilde -30KPX K e -25KPX K eacute -25KPX K ecaron -25KPX K ecircumflex -25KPX K edieresis -25KPX K edotaccent -25KPX K egrave -25KPX K emacron -25KPX K eogonek -25KPX K o -25KPX K oacute -25KPX K ocircumflex -25KPX K odieresis -25KPX K ograve -25KPX K ohungarumlaut -25KPX K omacron -25KPX K oslash -25KPX K otilde -25KPX K u -15KPX K uacute -15KPX K ucircumflex -15KPX K udieresis -15KPX K ugrave -15KPX K uhungarumlaut -15KPX K umacron -15KPX K uogonek -15KPX K uring -15KPX K y -45KPX K yacute -45KPX K ydieresis -45KPX Kcommaaccent O -30KPX Kcommaaccent Oacute -30KPX Kcommaaccent Ocircumflex -30KPX Kcommaaccent Odieresis -30KPX Kcommaaccent Ograve -30KPX Kcommaaccent Ohungarumlaut -30KPX Kcommaaccent Omacron -30KPX Kcommaaccent Oslash -30KPX Kcommaaccent Otilde -30KPX Kcommaaccent e -25KPX Kcommaaccent eacute -25KPX Kcommaaccent ecaron -25KPX Kcommaaccent ecircumflex -25KPX Kcommaaccent edieresis -25KPX Kcommaaccent edotaccent -25KPX Kcommaaccent egrave -25KPX Kcommaaccent emacron -25KPX Kcommaaccent eogonek -25KPX Kcommaaccent o -25KPX Kcommaaccent oacute -25KPX Kcommaaccent ocircumflex -25KPX Kcommaaccent odieresis -25KPX Kcommaaccent ograve -25KPX Kcommaaccent ohungarumlaut -25KPX Kcommaaccent omacron -25KPX Kcommaaccent oslash -25KPX Kcommaaccent otilde -25KPX Kcommaaccent u -15KPX Kcommaaccent uacute -15KPX Kcommaaccent ucircumflex -15KPX Kcommaaccent udieresis -15KPX Kcommaaccent ugrave -15KPX Kcommaaccent uhungarumlaut -15KPX Kcommaaccent umacron -15KPX Kcommaaccent uogonek -15KPX Kcommaaccent uring -15KPX Kcommaaccent y -45KPX Kcommaaccent yacute -45KPX Kcommaaccent ydieresis -45KPX L T -92KPX L Tcaron -92KPX L Tcommaaccent -92KPX L V -92KPX L W -92KPX L Y -92KPX L Yacute -92KPX L Ydieresis -92KPX L quotedblright -20KPX L quoteright -110KPX L y -55KPX L yacute -55KPX L ydieresis -55KPX Lacute T -92KPX Lacute Tcaron -92KPX Lacute Tcommaaccent -92KPX Lacute V -92KPX Lacute W -92KPX Lacute Y -92KPX Lacute Yacute -92KPX Lacute Ydieresis -92KPX Lacute quotedblright -20KPX Lacute quoteright -110KPX Lacute y -55KPX Lacute yacute -55KPX Lacute ydieresis -55KPX Lcommaaccent T -92KPX Lcommaaccent Tcaron -92KPX Lcommaaccent Tcommaaccent -92KPX Lcommaaccent V -92KPX Lcommaaccent W -92KPX Lcommaaccent Y -92KPX Lcommaaccent Yacute -92KPX Lcommaaccent Ydieresis -92KPX Lcommaaccent quotedblright -20KPX Lcommaaccent quoteright -110KPX Lcommaaccent y -55KPX Lcommaaccent yacute -55KPX Lcommaaccent ydieresis -55KPX Lslash T -92KPX Lslash Tcaron -92KPX Lslash Tcommaaccent -92KPX Lslash V -92KPX Lslash W -92KPX Lslash Y -92KPX Lslash Yacute -92KPX Lslash Ydieresis -92KPX Lslash quotedblright -20KPX Lslash quoteright -110KPX Lslash y -55KPX Lslash yacute -55KPX Lslash ydieresis -55KPX N A -20KPX N Aacute -20KPX N Abreve -20KPX N Acircumflex -20KPX N Adieresis -20KPX N Agrave -20KPX N Amacron -20KPX N Aogonek -20KPX N Aring -20KPX N Atilde -20KPX Nacute A -20KPX Nacute Aacute -20KPX Nacute Abreve -20KPX Nacute Acircumflex -20KPX Nacute Adieresis -20KPX Nacute Agrave -20KPX Nacute Amacron -20KPX Nacute Aogonek -20KPX Nacute Aring -20KPX Nacute Atilde -20KPX Ncaron A -20KPX Ncaron Aacute -20KPX Ncaron Abreve -20KPX Ncaron Acircumflex -20KPX Ncaron Adieresis -20KPX Ncaron Agrave -20KPX Ncaron Amacron -20KPX Ncaron Aogonek -20KPX Ncaron Aring -20KPX Ncaron Atilde -20KPX Ncommaaccent A -20KPX Ncommaaccent Aacute -20KPX Ncommaaccent Abreve -20KPX Ncommaaccent Acircumflex -20KPX Ncommaaccent Adieresis -20KPX Ncommaaccent Agrave -20KPX Ncommaaccent Amacron -20KPX Ncommaaccent Aogonek -20KPX Ncommaaccent Aring -20KPX Ncommaaccent Atilde -20KPX Ntilde A -20KPX Ntilde Aacute -20KPX Ntilde Abreve -20KPX Ntilde Acircumflex -20KPX Ntilde Adieresis -20KPX Ntilde Agrave -20KPX Ntilde Amacron -20KPX Ntilde Aogonek -20KPX Ntilde Aring -20KPX Ntilde Atilde -20KPX O A -40KPX O Aacute -40KPX O Abreve -40KPX O Acircumflex -40KPX O Adieresis -40KPX O Agrave -40KPX O Amacron -40KPX O Aogonek -40KPX O Aring -40KPX O Atilde -40KPX O T -40KPX O Tcaron -40KPX O Tcommaaccent -40KPX O V -50KPX O W -50KPX O X -40KPX O Y -50KPX O Yacute -50KPX O Ydieresis -50KPX Oacute A -40KPX Oacute Aacute -40KPX Oacute Abreve -40KPX Oacute Acircumflex -40KPX Oacute Adieresis -40KPX Oacute Agrave -40KPX Oacute Amacron -40KPX Oacute Aogonek -40KPX Oacute Aring -40KPX Oacute Atilde -40KPX Oacute T -40KPX Oacute Tcaron -40KPX Oacute Tcommaaccent -40KPX Oacute V -50KPX Oacute W -50KPX Oacute X -40KPX Oacute Y -50KPX Oacute Yacute -50KPX Oacute Ydieresis -50KPX Ocircumflex A -40KPX Ocircumflex Aacute -40KPX Ocircumflex Abreve -40KPX Ocircumflex Acircumflex -40KPX Ocircumflex Adieresis -40KPX Ocircumflex Agrave -40KPX Ocircumflex Amacron -40KPX Ocircumflex Aogonek -40KPX Ocircumflex Aring -40KPX Ocircumflex Atilde -40KPX Ocircumflex T -40KPX Ocircumflex Tcaron -40KPX Ocircumflex Tcommaaccent -40KPX Ocircumflex V -50KPX Ocircumflex W -50KPX Ocircumflex X -40KPX Ocircumflex Y -50KPX Ocircumflex Yacute -50KPX Ocircumflex Ydieresis -50KPX Odieresis A -40KPX Odieresis Aacute -40KPX Odieresis Abreve -40KPX Odieresis Acircumflex -40KPX Odieresis Adieresis -40KPX Odieresis Agrave -40KPX Odieresis Amacron -40KPX Odieresis Aogonek -40KPX Odieresis Aring -40KPX Odieresis Atilde -40KPX Odieresis T -40KPX Odieresis Tcaron -40KPX Odieresis Tcommaaccent -40KPX Odieresis V -50KPX Odieresis W -50KPX Odieresis X -40KPX Odieresis Y -50KPX Odieresis Yacute -50KPX Odieresis Ydieresis -50KPX Ograve A -40KPX Ograve Aacute -40KPX Ograve Abreve -40KPX Ograve Acircumflex -40KPX Ograve Adieresis -40KPX Ograve Agrave -40KPX Ograve Amacron -40KPX Ograve Aogonek -40KPX Ograve Aring -40KPX Ograve Atilde -40KPX Ograve T -40KPX Ograve Tcaron -40KPX Ograve Tcommaaccent -40KPX Ograve V -50KPX Ograve W -50KPX Ograve X -40KPX Ograve Y -50KPX Ograve Yacute -50KPX Ograve Ydieresis -50KPX Ohungarumlaut A -40KPX Ohungarumlaut Aacute -40KPX Ohungarumlaut Abreve -40KPX Ohungarumlaut Acircumflex -40KPX Ohungarumlaut Adieresis -40KPX Ohungarumlaut Agrave -40KPX Ohungarumlaut Amacron -40KPX Ohungarumlaut Aogonek -40KPX Ohungarumlaut Aring -40KPX Ohungarumlaut Atilde -40KPX Ohungarumlaut T -40KPX Ohungarumlaut Tcaron -40KPX Ohungarumlaut Tcommaaccent -40KPX Ohungarumlaut V -50KPX Ohungarumlaut W -50KPX Ohungarumlaut X -40KPX Ohungarumlaut Y -50KPX Ohungarumlaut Yacute -50KPX Ohungarumlaut Ydieresis -50KPX Omacron A -40KPX Omacron Aacute -40KPX Omacron Abreve -40KPX Omacron Acircumflex -40KPX Omacron Adieresis -40KPX Omacron Agrave -40KPX Omacron Amacron -40KPX Omacron Aogonek -40KPX Omacron Aring -40KPX Omacron Atilde -40KPX Omacron T -40KPX Omacron Tcaron -40KPX Omacron Tcommaaccent -40KPX Omacron V -50KPX Omacron W -50KPX Omacron X -40KPX Omacron Y -50KPX Omacron Yacute -50KPX Omacron Ydieresis -50KPX Oslash A -40KPX Oslash Aacute -40KPX Oslash Abreve -40KPX Oslash Acircumflex -40KPX Oslash Adieresis -40KPX Oslash Agrave -40KPX Oslash Amacron -40KPX Oslash Aogonek -40KPX Oslash Aring -40KPX Oslash Atilde -40KPX Oslash T -40KPX Oslash Tcaron -40KPX Oslash Tcommaaccent -40KPX Oslash V -50KPX Oslash W -50KPX Oslash X -40KPX Oslash Y -50KPX Oslash Yacute -50KPX Oslash Ydieresis -50KPX Otilde A -40KPX Otilde Aacute -40KPX Otilde Abreve -40KPX Otilde Acircumflex -40KPX Otilde Adieresis -40KPX Otilde Agrave -40KPX Otilde Amacron -40KPX Otilde Aogonek -40KPX Otilde Aring -40KPX Otilde Atilde -40KPX Otilde T -40KPX Otilde Tcaron -40KPX Otilde Tcommaaccent -40KPX Otilde V -50KPX Otilde W -50KPX Otilde X -40KPX Otilde Y -50KPX Otilde Yacute -50KPX Otilde Ydieresis -50KPX P A -74KPX P Aacute -74KPX P Abreve -74KPX P Acircumflex -74KPX P Adieresis -74KPX P Agrave -74KPX P Amacron -74KPX P Aogonek -74KPX P Aring -74KPX P Atilde -74KPX P a -10KPX P aacute -10KPX P abreve -10KPX P acircumflex -10KPX P adieresis -10KPX P agrave -10KPX P amacron -10KPX P aogonek -10KPX P aring -10KPX P atilde -10KPX P comma -92KPX P e -20KPX P eacute -20KPX P ecaron -20KPX P ecircumflex -20KPX P edieresis -20KPX P edotaccent -20KPX P egrave -20KPX P emacron -20KPX P eogonek -20KPX P o -20KPX P oacute -20KPX P ocircumflex -20KPX P odieresis -20KPX P ograve -20KPX P ohungarumlaut -20KPX P omacron -20KPX P oslash -20KPX P otilde -20KPX P period -110KPX Q U -10KPX Q Uacute -10KPX Q Ucircumflex -10KPX Q Udieresis -10KPX Q Ugrave -10KPX Q Uhungarumlaut -10KPX Q Umacron -10KPX Q Uogonek -10KPX Q Uring -10KPX Q period -20KPX R O -30KPX R Oacute -30KPX R Ocircumflex -30KPX R Odieresis -30KPX R Ograve -30KPX R Ohungarumlaut -30KPX R Omacron -30KPX R Oslash -30KPX R Otilde -30KPX R T -40KPX R Tcaron -40KPX R Tcommaaccent -40KPX R U -30KPX R Uacute -30KPX R Ucircumflex -30KPX R Udieresis -30KPX R Ugrave -30KPX R Uhungarumlaut -30KPX R Umacron -30KPX R Uogonek -30KPX R Uring -30KPX R V -55KPX R W -35KPX R Y -35KPX R Yacute -35KPX R Ydieresis -35KPX Racute O -30KPX Racute Oacute -30KPX Racute Ocircumflex -30KPX Racute Odieresis -30KPX Racute Ograve -30KPX Racute Ohungarumlaut -30KPX Racute Omacron -30KPX Racute Oslash -30KPX Racute Otilde -30KPX Racute T -40KPX Racute Tcaron -40KPX Racute Tcommaaccent -40KPX Racute U -30KPX Racute Uacute -30KPX Racute Ucircumflex -30KPX Racute Udieresis -30KPX Racute Ugrave -30KPX Racute Uhungarumlaut -30KPX Racute Umacron -30KPX Racute Uogonek -30KPX Racute Uring -30KPX Racute V -55KPX Racute W -35KPX Racute Y -35KPX Racute Yacute -35KPX Racute Ydieresis -35KPX Rcaron O -30KPX Rcaron Oacute -30KPX Rcaron Ocircumflex -30KPX Rcaron Odieresis -30KPX Rcaron Ograve -30KPX Rcaron Ohungarumlaut -30KPX Rcaron Omacron -30KPX Rcaron Oslash -30KPX Rcaron Otilde -30KPX Rcaron T -40KPX Rcaron Tcaron -40KPX Rcaron Tcommaaccent -40KPX Rcaron U -30KPX Rcaron Uacute -30KPX Rcaron Ucircumflex -30KPX Rcaron Udieresis -30KPX Rcaron Ugrave -30KPX Rcaron Uhungarumlaut -30KPX Rcaron Umacron -30KPX Rcaron Uogonek -30KPX Rcaron Uring -30KPX Rcaron V -55KPX Rcaron W -35KPX Rcaron Y -35KPX Rcaron Yacute -35KPX Rcaron Ydieresis -35KPX Rcommaaccent O -30KPX Rcommaaccent Oacute -30KPX Rcommaaccent Ocircumflex -30KPX Rcommaaccent Odieresis -30KPX Rcommaaccent Ograve -30KPX Rcommaaccent Ohungarumlaut -30KPX Rcommaaccent Omacron -30KPX Rcommaaccent Oslash -30KPX Rcommaaccent Otilde -30KPX Rcommaaccent T -40KPX Rcommaaccent Tcaron -40KPX Rcommaaccent Tcommaaccent -40KPX Rcommaaccent U -30KPX Rcommaaccent Uacute -30KPX Rcommaaccent Ucircumflex -30KPX Rcommaaccent Udieresis -30KPX Rcommaaccent Ugrave -30KPX Rcommaaccent Uhungarumlaut -30KPX Rcommaaccent Umacron -30KPX Rcommaaccent Uogonek -30KPX Rcommaaccent Uring -30KPX Rcommaaccent V -55KPX Rcommaaccent W -35KPX Rcommaaccent Y -35KPX Rcommaaccent Yacute -35KPX Rcommaaccent Ydieresis -35KPX T A -90KPX T Aacute -90KPX T Abreve -90KPX T Acircumflex -90KPX T Adieresis -90KPX T Agrave -90KPX T Amacron -90KPX T Aogonek -90KPX T Aring -90KPX T Atilde -90KPX T O -18KPX T Oacute -18KPX T Ocircumflex -18KPX T Odieresis -18KPX T Ograve -18KPX T Ohungarumlaut -18KPX T Omacron -18KPX T Oslash -18KPX T Otilde -18KPX T a -92KPX T aacute -92KPX T abreve -52KPX T acircumflex -52KPX T adieresis -52KPX T agrave -52KPX T amacron -52KPX T aogonek -92KPX T aring -92KPX T atilde -52KPX T colon -74KPX T comma -74KPX T e -92KPX T eacute -92KPX T ecaron -92KPX T ecircumflex -92KPX T edieresis -52KPX T edotaccent -92KPX T egrave -52KPX T emacron -52KPX T eogonek -92KPX T hyphen -92KPX T i -18KPX T iacute -18KPX T iogonek -18KPX T o -92KPX T oacute -92KPX T ocircumflex -92KPX T odieresis -92KPX T ograve -92KPX T ohungarumlaut -92KPX T omacron -92KPX T oslash -92KPX T otilde -92KPX T period -90KPX T r -74KPX T racute -74KPX T rcaron -74KPX T rcommaaccent -74KPX T semicolon -74KPX T u -92KPX T uacute -92KPX T ucircumflex -92KPX T udieresis -92KPX T ugrave -92KPX T uhungarumlaut -92KPX T umacron -92KPX T uogonek -92KPX T uring -92KPX T w -74KPX T y -34KPX T yacute -34KPX T ydieresis -34KPX Tcaron A -90KPX Tcaron Aacute -90KPX Tcaron Abreve -90KPX Tcaron Acircumflex -90KPX Tcaron Adieresis -90KPX Tcaron Agrave -90KPX Tcaron Amacron -90KPX Tcaron Aogonek -90KPX Tcaron Aring -90KPX Tcaron Atilde -90KPX Tcaron O -18KPX Tcaron Oacute -18KPX Tcaron Ocircumflex -18KPX Tcaron Odieresis -18KPX Tcaron Ograve -18KPX Tcaron Ohungarumlaut -18KPX Tcaron Omacron -18KPX Tcaron Oslash -18KPX Tcaron Otilde -18KPX Tcaron a -92KPX Tcaron aacute -92KPX Tcaron abreve -52KPX Tcaron acircumflex -52KPX Tcaron adieresis -52KPX Tcaron agrave -52KPX Tcaron amacron -52KPX Tcaron aogonek -92KPX Tcaron aring -92KPX Tcaron atilde -52KPX Tcaron colon -74KPX Tcaron comma -74KPX Tcaron e -92KPX Tcaron eacute -92KPX Tcaron ecaron -92KPX Tcaron ecircumflex -92KPX Tcaron edieresis -52KPX Tcaron edotaccent -92KPX Tcaron egrave -52KPX Tcaron emacron -52KPX Tcaron eogonek -92KPX Tcaron hyphen -92KPX Tcaron i -18KPX Tcaron iacute -18KPX Tcaron iogonek -18KPX Tcaron o -92KPX Tcaron oacute -92KPX Tcaron ocircumflex -92KPX Tcaron odieresis -92KPX Tcaron ograve -92KPX Tcaron ohungarumlaut -92KPX Tcaron omacron -92KPX Tcaron oslash -92KPX Tcaron otilde -92KPX Tcaron period -90KPX Tcaron r -74KPX Tcaron racute -74KPX Tcaron rcaron -74KPX Tcaron rcommaaccent -74KPX Tcaron semicolon -74KPX Tcaron u -92KPX Tcaron uacute -92KPX Tcaron ucircumflex -92KPX Tcaron udieresis -92KPX Tcaron ugrave -92KPX Tcaron uhungarumlaut -92KPX Tcaron umacron -92KPX Tcaron uogonek -92KPX Tcaron uring -92KPX Tcaron w -74KPX Tcaron y -34KPX Tcaron yacute -34KPX Tcaron ydieresis -34KPX Tcommaaccent A -90KPX Tcommaaccent Aacute -90KPX Tcommaaccent Abreve -90KPX Tcommaaccent Acircumflex -90KPX Tcommaaccent Adieresis -90KPX Tcommaaccent Agrave -90KPX Tcommaaccent Amacron -90KPX Tcommaaccent Aogonek -90KPX Tcommaaccent Aring -90KPX Tcommaaccent Atilde -90KPX Tcommaaccent O -18KPX Tcommaaccent Oacute -18KPX Tcommaaccent Ocircumflex -18KPX Tcommaaccent Odieresis -18KPX Tcommaaccent Ograve -18KPX Tcommaaccent Ohungarumlaut -18KPX Tcommaaccent Omacron -18KPX Tcommaaccent Oslash -18KPX Tcommaaccent Otilde -18KPX Tcommaaccent a -92KPX Tcommaaccent aacute -92KPX Tcommaaccent abreve -52KPX Tcommaaccent acircumflex -52KPX Tcommaaccent adieresis -52KPX Tcommaaccent agrave -52KPX Tcommaaccent amacron -52KPX Tcommaaccent aogonek -92KPX Tcommaaccent aring -92KPX Tcommaaccent atilde -52KPX Tcommaaccent colon -74KPX Tcommaaccent comma -74KPX Tcommaaccent e -92KPX Tcommaaccent eacute -92KPX Tcommaaccent ecaron -92KPX Tcommaaccent ecircumflex -92KPX Tcommaaccent edieresis -52KPX Tcommaaccent edotaccent -92KPX Tcommaaccent egrave -52KPX Tcommaaccent emacron -52KPX Tcommaaccent eogonek -92KPX Tcommaaccent hyphen -92KPX Tcommaaccent i -18KPX Tcommaaccent iacute -18KPX Tcommaaccent iogonek -18KPX Tcommaaccent o -92KPX Tcommaaccent oacute -92KPX Tcommaaccent ocircumflex -92KPX Tcommaaccent odieresis -92KPX Tcommaaccent ograve -92KPX Tcommaaccent ohungarumlaut -92KPX Tcommaaccent omacron -92KPX Tcommaaccent oslash -92KPX Tcommaaccent otilde -92KPX Tcommaaccent period -90KPX Tcommaaccent r -74KPX Tcommaaccent racute -74KPX Tcommaaccent rcaron -74KPX Tcommaaccent rcommaaccent -74KPX Tcommaaccent semicolon -74KPX Tcommaaccent u -92KPX Tcommaaccent uacute -92KPX Tcommaaccent ucircumflex -92KPX Tcommaaccent udieresis -92KPX Tcommaaccent ugrave -92KPX Tcommaaccent uhungarumlaut -92KPX Tcommaaccent umacron -92KPX Tcommaaccent uogonek -92KPX Tcommaaccent uring -92KPX Tcommaaccent w -74KPX Tcommaaccent y -34KPX Tcommaaccent yacute -34KPX Tcommaaccent ydieresis -34KPX U A -60KPX U Aacute -60KPX U Abreve -60KPX U Acircumflex -60KPX U Adieresis -60KPX U Agrave -60KPX U Amacron -60KPX U Aogonek -60KPX U Aring -60KPX U Atilde -60KPX U comma -50KPX U period -50KPX Uacute A -60KPX Uacute Aacute -60KPX Uacute Abreve -60KPX Uacute Acircumflex -60KPX Uacute Adieresis -60KPX Uacute Agrave -60KPX Uacute Amacron -60KPX Uacute Aogonek -60KPX Uacute Aring -60KPX Uacute Atilde -60KPX Uacute comma -50KPX Uacute period -50KPX Ucircumflex A -60KPX Ucircumflex Aacute -60KPX Ucircumflex Abreve -60KPX Ucircumflex Acircumflex -60KPX Ucircumflex Adieresis -60KPX Ucircumflex Agrave -60KPX Ucircumflex Amacron -60KPX Ucircumflex Aogonek -60KPX Ucircumflex Aring -60KPX Ucircumflex Atilde -60KPX Ucircumflex comma -50KPX Ucircumflex period -50KPX Udieresis A -60KPX Udieresis Aacute -60KPX Udieresis Abreve -60KPX Udieresis Acircumflex -60KPX Udieresis Adieresis -60KPX Udieresis Agrave -60KPX Udieresis Amacron -60KPX Udieresis Aogonek -60KPX Udieresis Aring -60KPX Udieresis Atilde -60KPX Udieresis comma -50KPX Udieresis period -50KPX Ugrave A -60KPX Ugrave Aacute -60KPX Ugrave Abreve -60KPX Ugrave Acircumflex -60KPX Ugrave Adieresis -60KPX Ugrave Agrave -60KPX Ugrave Amacron -60KPX Ugrave Aogonek -60KPX Ugrave Aring -60KPX Ugrave Atilde -60KPX Ugrave comma -50KPX Ugrave period -50KPX Uhungarumlaut A -60KPX Uhungarumlaut Aacute -60KPX Uhungarumlaut Abreve -60KPX Uhungarumlaut Acircumflex -60KPX Uhungarumlaut Adieresis -60KPX Uhungarumlaut Agrave -60KPX Uhungarumlaut Amacron -60KPX Uhungarumlaut Aogonek -60KPX Uhungarumlaut Aring -60KPX Uhungarumlaut Atilde -60KPX Uhungarumlaut comma -50KPX Uhungarumlaut period -50KPX Umacron A -60KPX Umacron Aacute -60KPX Umacron Abreve -60KPX Umacron Acircumflex -60KPX Umacron Adieresis -60KPX Umacron Agrave -60KPX Umacron Amacron -60KPX Umacron Aogonek -60KPX Umacron Aring -60KPX Umacron Atilde -60KPX Umacron comma -50KPX Umacron period -50KPX Uogonek A -60KPX Uogonek Aacute -60KPX Uogonek Abreve -60KPX Uogonek Acircumflex -60KPX Uogonek Adieresis -60KPX Uogonek Agrave -60KPX Uogonek Amacron -60KPX Uogonek Aogonek -60KPX Uogonek Aring -60KPX Uogonek Atilde -60KPX Uogonek comma -50KPX Uogonek period -50KPX Uring A -60KPX Uring Aacute -60KPX Uring Abreve -60KPX Uring Acircumflex -60KPX Uring Adieresis -60KPX Uring Agrave -60KPX Uring Amacron -60KPX Uring Aogonek -60KPX Uring Aring -60KPX Uring Atilde -60KPX Uring comma -50KPX Uring period -50KPX V A -135KPX V Aacute -135KPX V Abreve -135KPX V Acircumflex -135KPX V Adieresis -135KPX V Agrave -135KPX V Amacron -135KPX V Aogonek -135KPX V Aring -135KPX V Atilde -135KPX V G -30KPX V Gbreve -30KPX V Gcommaaccent -30KPX V O -45KPX V Oacute -45KPX V Ocircumflex -45KPX V Odieresis -45KPX V Ograve -45KPX V Ohungarumlaut -45KPX V Omacron -45KPX V Oslash -45KPX V Otilde -45KPX V a -92KPX V aacute -92KPX V abreve -92KPX V acircumflex -92KPX V adieresis -92KPX V agrave -92KPX V amacron -92KPX V aogonek -92KPX V aring -92KPX V atilde -92KPX V colon -92KPX V comma -129KPX V e -100KPX V eacute -100KPX V ecaron -100KPX V ecircumflex -100KPX V edieresis -100KPX V edotaccent -100KPX V egrave -100KPX V emacron -100KPX V eogonek -100KPX V hyphen -74KPX V i -37KPX V iacute -37KPX V icircumflex -37KPX V idieresis -37KPX V igrave -37KPX V imacron -37KPX V iogonek -37KPX V o -100KPX V oacute -100KPX V ocircumflex -100KPX V odieresis -100KPX V ograve -100KPX V ohungarumlaut -100KPX V omacron -100KPX V oslash -100KPX V otilde -100KPX V period -145KPX V semicolon -92KPX V u -92KPX V uacute -92KPX V ucircumflex -92KPX V udieresis -92KPX V ugrave -92KPX V uhungarumlaut -92KPX V umacron -92KPX V uogonek -92KPX V uring -92KPX W A -120KPX W Aacute -120KPX W Abreve -120KPX W Acircumflex -120KPX W Adieresis -120KPX W Agrave -120KPX W Amacron -120KPX W Aogonek -120KPX W Aring -120KPX W Atilde -120KPX W O -10KPX W Oacute -10KPX W Ocircumflex -10KPX W Odieresis -10KPX W Ograve -10KPX W Ohungarumlaut -10KPX W Omacron -10KPX W Oslash -10KPX W Otilde -10KPX W a -65KPX W aacute -65KPX W abreve -65KPX W acircumflex -65KPX W adieresis -65KPX W agrave -65KPX W amacron -65KPX W aogonek -65KPX W aring -65KPX W atilde -65KPX W colon -55KPX W comma -92KPX W e -65KPX W eacute -65KPX W ecaron -65KPX W ecircumflex -65KPX W edieresis -65KPX W edotaccent -65KPX W egrave -65KPX W emacron -65KPX W eogonek -65KPX W hyphen -37KPX W i -18KPX W iacute -18KPX W iogonek -18KPX W o -75KPX W oacute -75KPX W ocircumflex -75KPX W odieresis -75KPX W ograve -75KPX W ohungarumlaut -75KPX W omacron -75KPX W oslash -75KPX W otilde -75KPX W period -92KPX W semicolon -55KPX W u -50KPX W uacute -50KPX W ucircumflex -50KPX W udieresis -50KPX W ugrave -50KPX W uhungarumlaut -50KPX W umacron -50KPX W uogonek -50KPX W uring -50KPX W y -60KPX W yacute -60KPX W ydieresis -60KPX Y A -110KPX Y Aacute -110KPX Y Abreve -110KPX Y Acircumflex -110KPX Y Adieresis -110KPX Y Agrave -110KPX Y Amacron -110KPX Y Aogonek -110KPX Y Aring -110KPX Y Atilde -110KPX Y O -35KPX Y Oacute -35KPX Y Ocircumflex -35KPX Y Odieresis -35KPX Y Ograve -35KPX Y Ohungarumlaut -35KPX Y Omacron -35KPX Y Oslash -35KPX Y Otilde -35KPX Y a -85KPX Y aacute -85KPX Y abreve -85KPX Y acircumflex -85KPX Y adieresis -85KPX Y agrave -85KPX Y amacron -85KPX Y aogonek -85KPX Y aring -85KPX Y atilde -85KPX Y colon -92KPX Y comma -92KPX Y e -111KPX Y eacute -111KPX Y ecaron -111KPX Y ecircumflex -111KPX Y edieresis -71KPX Y edotaccent -111KPX Y egrave -71KPX Y emacron -71KPX Y eogonek -111KPX Y hyphen -92KPX Y i -37KPX Y iacute -37KPX Y iogonek -37KPX Y o -111KPX Y oacute -111KPX Y ocircumflex -111KPX Y odieresis -111KPX Y ograve -111KPX Y ohungarumlaut -111KPX Y omacron -111KPX Y oslash -111KPX Y otilde -111KPX Y period -92KPX Y semicolon -92KPX Y u -92KPX Y uacute -92KPX Y ucircumflex -92KPX Y udieresis -92KPX Y ugrave -92KPX Y uhungarumlaut -92KPX Y umacron -92KPX Y uogonek -92KPX Y uring -92KPX Yacute A -110KPX Yacute Aacute -110KPX Yacute Abreve -110KPX Yacute Acircumflex -110KPX Yacute Adieresis -110KPX Yacute Agrave -110KPX Yacute Amacron -110KPX Yacute Aogonek -110KPX Yacute Aring -110KPX Yacute Atilde -110KPX Yacute O -35KPX Yacute Oacute -35KPX Yacute Ocircumflex -35KPX Yacute Odieresis -35KPX Yacute Ograve -35KPX Yacute Ohungarumlaut -35KPX Yacute Omacron -35KPX Yacute Oslash -35KPX Yacute Otilde -35KPX Yacute a -85KPX Yacute aacute -85KPX Yacute abreve -85KPX Yacute acircumflex -85KPX Yacute adieresis -85KPX Yacute agrave -85KPX Yacute amacron -85KPX Yacute aogonek -85KPX Yacute aring -85KPX Yacute atilde -85KPX Yacute colon -92KPX Yacute comma -92KPX Yacute e -111KPX Yacute eacute -111KPX Yacute ecaron -111KPX Yacute ecircumflex -111KPX Yacute edieresis -71KPX Yacute edotaccent -111KPX Yacute egrave -71KPX Yacute emacron -71KPX Yacute eogonek -111KPX Yacute hyphen -92KPX Yacute i -37KPX Yacute iacute -37KPX Yacute iogonek -37KPX Yacute o -111KPX Yacute oacute -111KPX Yacute ocircumflex -111KPX Yacute odieresis -111KPX Yacute ograve -111KPX Yacute ohungarumlaut -111KPX Yacute omacron -111KPX Yacute oslash -111KPX Yacute otilde -111KPX Yacute period -92KPX Yacute semicolon -92KPX Yacute u -92KPX Yacute uacute -92KPX Yacute ucircumflex -92KPX Yacute udieresis -92KPX Yacute ugrave -92KPX Yacute uhungarumlaut -92KPX Yacute umacron -92KPX Yacute uogonek -92KPX Yacute uring -92KPX Ydieresis A -110KPX Ydieresis Aacute -110KPX Ydieresis Abreve -110KPX Ydieresis Acircumflex -110KPX Ydieresis Adieresis -110KPX Ydieresis Agrave -110KPX Ydieresis Amacron -110KPX Ydieresis Aogonek -110KPX Ydieresis Aring -110KPX Ydieresis Atilde -110KPX Ydieresis O -35KPX Ydieresis Oacute -35KPX Ydieresis Ocircumflex -35KPX Ydieresis Odieresis -35KPX Ydieresis Ograve -35KPX Ydieresis Ohungarumlaut -35KPX Ydieresis Omacron -35KPX Ydieresis Oslash -35KPX Ydieresis Otilde -35KPX Ydieresis a -85KPX Ydieresis aacute -85KPX Ydieresis abreve -85KPX Ydieresis acircumflex -85KPX Ydieresis adieresis -85KPX Ydieresis agrave -85KPX Ydieresis amacron -85KPX Ydieresis aogonek -85KPX Ydieresis aring -85KPX Ydieresis atilde -85KPX Ydieresis colon -92KPX Ydieresis comma -92KPX Ydieresis e -111KPX Ydieresis eacute -111KPX Ydieresis ecaron -111KPX Ydieresis ecircumflex -111KPX Ydieresis edieresis -71KPX Ydieresis edotaccent -111KPX Ydieresis egrave -71KPX Ydieresis emacron -71KPX Ydieresis eogonek -111KPX Ydieresis hyphen -92KPX Ydieresis i -37KPX Ydieresis iacute -37KPX Ydieresis iogonek -37KPX Ydieresis o -111KPX Ydieresis oacute -111KPX Ydieresis ocircumflex -111KPX Ydieresis odieresis -111KPX Ydieresis ograve -111KPX Ydieresis ohungarumlaut -111KPX Ydieresis omacron -111KPX Ydieresis oslash -111KPX Ydieresis otilde -111KPX Ydieresis period -92KPX Ydieresis semicolon -92KPX Ydieresis u -92KPX Ydieresis uacute -92KPX Ydieresis ucircumflex -92KPX Ydieresis udieresis -92KPX Ydieresis ugrave -92KPX Ydieresis uhungarumlaut -92KPX Ydieresis umacron -92KPX Ydieresis uogonek -92KPX Ydieresis uring -92KPX a v -25KPX aacute v -25KPX abreve v -25KPX acircumflex v -25KPX adieresis v -25KPX agrave v -25KPX amacron v -25KPX aogonek v -25KPX aring v -25KPX atilde v -25KPX b b -10KPX b period -40KPX b u -20KPX b uacute -20KPX b ucircumflex -20KPX b udieresis -20KPX b ugrave -20KPX b uhungarumlaut -20KPX b umacron -20KPX b uogonek -20KPX b uring -20KPX b v -15KPX comma quotedblright -45KPX comma quoteright -55KPX d w -15KPX dcroat w -15KPX e v -15KPX eacute v -15KPX ecaron v -15KPX ecircumflex v -15KPX edieresis v -15KPX edotaccent v -15KPX egrave v -15KPX emacron v -15KPX eogonek v -15KPX f comma -15KPX f dotlessi -35KPX f i -25KPX f o -25KPX f oacute -25KPX f ocircumflex -25KPX f odieresis -25KPX f ograve -25KPX f ohungarumlaut -25KPX f omacron -25KPX f oslash -25KPX f otilde -25KPX f period -15KPX f quotedblright 50KPX f quoteright 55KPX g period -15KPX gbreve period -15KPX gcommaaccent period -15KPX h y -15KPX h yacute -15KPX h ydieresis -15KPX i v -10KPX iacute v -10KPX icircumflex v -10KPX idieresis v -10KPX igrave v -10KPX imacron v -10KPX iogonek v -10KPX k e -10KPX k eacute -10KPX k ecaron -10KPX k ecircumflex -10KPX k edieresis -10KPX k edotaccent -10KPX k egrave -10KPX k emacron -10KPX k eogonek -10KPX k o -15KPX k oacute -15KPX k ocircumflex -15KPX k odieresis -15KPX k ograve -15KPX k ohungarumlaut -15KPX k omacron -15KPX k oslash -15KPX k otilde -15KPX k y -15KPX k yacute -15KPX k ydieresis -15KPX kcommaaccent e -10KPX kcommaaccent eacute -10KPX kcommaaccent ecaron -10KPX kcommaaccent ecircumflex -10KPX kcommaaccent edieresis -10KPX kcommaaccent edotaccent -10KPX kcommaaccent egrave -10KPX kcommaaccent emacron -10KPX kcommaaccent eogonek -10KPX kcommaaccent o -15KPX kcommaaccent oacute -15KPX kcommaaccent ocircumflex -15KPX kcommaaccent odieresis -15KPX kcommaaccent ograve -15KPX kcommaaccent ohungarumlaut -15KPX kcommaaccent omacron -15KPX kcommaaccent oslash -15KPX kcommaaccent otilde -15KPX kcommaaccent y -15KPX kcommaaccent yacute -15KPX kcommaaccent ydieresis -15KPX n v -40KPX nacute v -40KPX ncaron v -40KPX ncommaaccent v -40KPX ntilde v -40KPX o v -10KPX o w -10KPX oacute v -10KPX oacute w -10KPX ocircumflex v -10KPX ocircumflex w -10KPX odieresis v -10KPX odieresis w -10KPX ograve v -10KPX ograve w -10KPX ohungarumlaut v -10KPX ohungarumlaut w -10KPX omacron v -10KPX omacron w -10KPX oslash v -10KPX oslash w -10KPX otilde v -10KPX otilde w -10KPX period quotedblright -55KPX period quoteright -55KPX quotedblleft A -10KPX quotedblleft Aacute -10KPX quotedblleft Abreve -10KPX quotedblleft Acircumflex -10KPX quotedblleft Adieresis -10KPX quotedblleft Agrave -10KPX quotedblleft Amacron -10KPX quotedblleft Aogonek -10KPX quotedblleft Aring -10KPX quotedblleft Atilde -10KPX quoteleft A -10KPX quoteleft Aacute -10KPX quoteleft Abreve -10KPX quoteleft Acircumflex -10KPX quoteleft Adieresis -10KPX quoteleft Agrave -10KPX quoteleft Amacron -10KPX quoteleft Aogonek -10KPX quoteleft Aring -10KPX quoteleft Atilde -10KPX quoteleft quoteleft -63KPX quoteright d -20KPX quoteright dcroat -20KPX quoteright quoteright -63KPX quoteright r -20KPX quoteright racute -20KPX quoteright rcaron -20KPX quoteright rcommaaccent -20KPX quoteright s -37KPX quoteright sacute -37KPX quoteright scaron -37KPX quoteright scedilla -37KPX quoteright scommaaccent -37KPX quoteright space -74KPX quoteright v -20KPX r c -18KPX r cacute -18KPX r ccaron -18KPX r ccedilla -18KPX r comma -92KPX r e -18KPX r eacute -18KPX r ecaron -18KPX r ecircumflex -18KPX r edieresis -18KPX r edotaccent -18KPX r egrave -18KPX r emacron -18KPX r eogonek -18KPX r g -10KPX r gbreve -10KPX r gcommaaccent -10KPX r hyphen -37KPX r n -15KPX r nacute -15KPX r ncaron -15KPX r ncommaaccent -15KPX r ntilde -15KPX r o -18KPX r oacute -18KPX r ocircumflex -18KPX r odieresis -18KPX r ograve -18KPX r ohungarumlaut -18KPX r omacron -18KPX r oslash -18KPX r otilde -18KPX r p -10KPX r period -100KPX r q -18KPX r v -10KPX racute c -18KPX racute cacute -18KPX racute ccaron -18KPX racute ccedilla -18KPX racute comma -92KPX racute e -18KPX racute eacute -18KPX racute ecaron -18KPX racute ecircumflex -18KPX racute edieresis -18KPX racute edotaccent -18KPX racute egrave -18KPX racute emacron -18KPX racute eogonek -18KPX racute g -10KPX racute gbreve -10KPX racute gcommaaccent -10KPX racute hyphen -37KPX racute n -15KPX racute nacute -15KPX racute ncaron -15KPX racute ncommaaccent -15KPX racute ntilde -15KPX racute o -18KPX racute oacute -18KPX racute ocircumflex -18KPX racute odieresis -18KPX racute ograve -18KPX racute ohungarumlaut -18KPX racute omacron -18KPX racute oslash -18KPX racute otilde -18KPX racute p -10KPX racute period -100KPX racute q -18KPX racute v -10KPX rcaron c -18KPX rcaron cacute -18KPX rcaron ccaron -18KPX rcaron ccedilla -18KPX rcaron comma -92KPX rcaron e -18KPX rcaron eacute -18KPX rcaron ecaron -18KPX rcaron ecircumflex -18KPX rcaron edieresis -18KPX rcaron edotaccent -18KPX rcaron egrave -18KPX rcaron emacron -18KPX rcaron eogonek -18KPX rcaron g -10KPX rcaron gbreve -10KPX rcaron gcommaaccent -10KPX rcaron hyphen -37KPX rcaron n -15KPX rcaron nacute -15KPX rcaron ncaron -15KPX rcaron ncommaaccent -15KPX rcaron ntilde -15KPX rcaron o -18KPX rcaron oacute -18KPX rcaron ocircumflex -18KPX rcaron odieresis -18KPX rcaron ograve -18KPX rcaron ohungarumlaut -18KPX rcaron omacron -18KPX rcaron oslash -18KPX rcaron otilde -18KPX rcaron p -10KPX rcaron period -100KPX rcaron q -18KPX rcaron v -10KPX rcommaaccent c -18KPX rcommaaccent cacute -18KPX rcommaaccent ccaron -18KPX rcommaaccent ccedilla -18KPX rcommaaccent comma -92KPX rcommaaccent e -18KPX rcommaaccent eacute -18KPX rcommaaccent ecaron -18KPX rcommaaccent ecircumflex -18KPX rcommaaccent edieresis -18KPX rcommaaccent edotaccent -18KPX rcommaaccent egrave -18KPX rcommaaccent emacron -18KPX rcommaaccent eogonek -18KPX rcommaaccent g -10KPX rcommaaccent gbreve -10KPX rcommaaccent gcommaaccent -10KPX rcommaaccent hyphen -37KPX rcommaaccent n -15KPX rcommaaccent nacute -15KPX rcommaaccent ncaron -15KPX rcommaaccent ncommaaccent -15KPX rcommaaccent ntilde -15KPX rcommaaccent o -18KPX rcommaaccent oacute -18KPX rcommaaccent ocircumflex -18KPX rcommaaccent odieresis -18KPX rcommaaccent ograve -18KPX rcommaaccent ohungarumlaut -18KPX rcommaaccent omacron -18KPX rcommaaccent oslash -18KPX rcommaaccent otilde -18KPX rcommaaccent p -10KPX rcommaaccent period -100KPX rcommaaccent q -18KPX rcommaaccent v -10KPX space A -55KPX space Aacute -55KPX space Abreve -55KPX space Acircumflex -55KPX space Adieresis -55KPX space Agrave -55KPX space Amacron -55KPX space Aogonek -55KPX space Aring -55KPX space Atilde -55KPX space T -30KPX space Tcaron -30KPX space Tcommaaccent -30KPX space V -45KPX space W -30KPX space Y -55KPX space Yacute -55KPX space Ydieresis -55KPX v a -10KPX v aacute -10KPX v abreve -10KPX v acircumflex -10KPX v adieresis -10KPX v agrave -10KPX v amacron -10KPX v aogonek -10KPX v aring -10KPX v atilde -10KPX v comma -55KPX v e -10KPX v eacute -10KPX v ecaron -10KPX v ecircumflex -10KPX v edieresis -10KPX v edotaccent -10KPX v egrave -10KPX v emacron -10KPX v eogonek -10KPX v o -10KPX v oacute -10KPX v ocircumflex -10KPX v odieresis -10KPX v ograve -10KPX v ohungarumlaut -10KPX v omacron -10KPX v oslash -10KPX v otilde -10KPX v period -70KPX w comma -55KPX w o -10KPX w oacute -10KPX w ocircumflex -10KPX w odieresis -10KPX w ograve -10KPX w ohungarumlaut -10KPX w omacron -10KPX w oslash -10KPX w otilde -10KPX w period -70KPX y comma -55KPX y e -10KPX y eacute -10KPX y ecaron -10KPX y ecircumflex -10KPX y edieresis -10KPX y edotaccent -10KPX y egrave -10KPX y emacron -10KPX y eogonek -10KPX y o -25KPX y oacute -25KPX y ocircumflex -25KPX y odieresis -25KPX y ograve -25KPX y ohungarumlaut -25KPX y omacron -25KPX y oslash -25KPX y otilde -25KPX y period -70KPX yacute comma -55KPX yacute e -10KPX yacute eacute -10KPX yacute ecaron -10KPX yacute ecircumflex -10KPX yacute edieresis -10KPX yacute edotaccent -10KPX yacute egrave -10KPX yacute emacron -10KPX yacute eogonek -10KPX yacute o -25KPX yacute oacute -25KPX yacute ocircumflex -25KPX yacute odieresis -25KPX yacute ograve -25KPX yacute ohungarumlaut -25KPX yacute omacron -25KPX yacute oslash -25KPX yacute otilde -25KPX yacute period -70KPX ydieresis comma -55KPX ydieresis e -10KPX ydieresis eacute -10KPX ydieresis ecaron -10KPX ydieresis ecircumflex -10KPX ydieresis edieresis -10KPX ydieresis edotaccent -10KPX ydieresis egrave -10KPX ydieresis emacron -10KPX ydieresis eogonek -10KPX ydieresis o -25KPX ydieresis oacute -25KPX ydieresis ocircumflex -25KPX ydieresis odieresis -25KPX ydieresis ograve -25KPX ydieresis ohungarumlaut -25KPX ydieresis omacron -25KPX ydieresis oslash -25KPX ydieresis otilde -25KPX ydieresis period -70EndKernPairsEndKernDataEndFontMetrics'</body><body package="Type1">timesBoldItalic	"from http://www.adobe.com/devnet/font.html "	&lt;font: #'Times-BoldItalic'&gt;	^self		windowsName: 'Times New Roman'		afm: 'StartFontMetrics 4.1Comment Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.Comment Creation Date: Thu May  1 13:04:06 1997Comment UniqueID 43066Comment VMusage 45874 56899FontName Times-BoldItalicFullName Times Bold ItalicFamilyName TimesWeight BoldItalicAngle -15IsFixedPitch falseCharacterSet ExtendedRomanFontBBox -200 -218 996 921 UnderlinePosition -100UnderlineThickness 50Version 002.000Notice Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype-Hell AG and/or its subsidiaries.EncodingScheme AdobeStandardEncodingCapHeight 669XHeight 462Ascender 683Descender -217StdHW 42StdVW 121StartCharMetrics 315C 32 ; WX 250 ; N space ; B 0 0 0 0 ;C 33 ; WX 389 ; N exclam ; B 67 -13 370 684 ;C 34 ; WX 555 ; N quotedbl ; B 136 398 536 685 ;C 35 ; WX 500 ; N numbersign ; B -33 0 533 700 ;C 36 ; WX 500 ; N dollar ; B -20 -100 497 733 ;C 37 ; WX 833 ; N percent ; B 39 -10 793 692 ;C 38 ; WX 778 ; N ampersand ; B 5 -19 699 682 ;C 39 ; WX 333 ; N quoteright ; B 98 369 302 685 ;C 40 ; WX 333 ; N parenleft ; B 28 -179 344 685 ;C 41 ; WX 333 ; N parenright ; B -44 -179 271 685 ;C 42 ; WX 500 ; N asterisk ; B 65 249 456 685 ;C 43 ; WX 570 ; N plus ; B 33 0 537 506 ;C 44 ; WX 250 ; N comma ; B -60 -182 144 134 ;C 45 ; WX 333 ; N hyphen ; B 2 166 271 282 ;C 46 ; WX 250 ; N period ; B -9 -13 139 135 ;C 47 ; WX 278 ; N slash ; B -64 -18 342 685 ;C 48 ; WX 500 ; N zero ; B 17 -14 477 683 ;C 49 ; WX 500 ; N one ; B 5 0 419 683 ;C 50 ; WX 500 ; N two ; B -27 0 446 683 ;C 51 ; WX 500 ; N three ; B -15 -13 450 683 ;C 52 ; WX 500 ; N four ; B -15 0 503 683 ;C 53 ; WX 500 ; N five ; B -11 -13 487 669 ;C 54 ; WX 500 ; N six ; B 23 -15 509 679 ;C 55 ; WX 500 ; N seven ; B 52 0 525 669 ;C 56 ; WX 500 ; N eight ; B 3 -13 476 683 ;C 57 ; WX 500 ; N nine ; B -12 -10 475 683 ;C 58 ; WX 333 ; N colon ; B 23 -13 264 459 ;C 59 ; WX 333 ; N semicolon ; B -25 -183 264 459 ;C 60 ; WX 570 ; N less ; B 31 -8 539 514 ;C 61 ; WX 570 ; N equal ; B 33 107 537 399 ;C 62 ; WX 570 ; N greater ; B 31 -8 539 514 ;C 63 ; WX 500 ; N question ; B 79 -13 470 684 ;C 64 ; WX 832 ; N at ; B 63 -18 770 685 ;C 65 ; WX 667 ; N A ; B -67 0 593 683 ;C 66 ; WX 667 ; N B ; B -24 0 624 669 ;C 67 ; WX 667 ; N C ; B 32 -18 677 685 ;C 68 ; WX 722 ; N D ; B -46 0 685 669 ;C 69 ; WX 667 ; N E ; B -27 0 653 669 ;C 70 ; WX 667 ; N F ; B -13 0 660 669 ;C 71 ; WX 722 ; N G ; B 21 -18 706 685 ;C 72 ; WX 778 ; N H ; B -24 0 799 669 ;C 73 ; WX 389 ; N I ; B -32 0 406 669 ;C 74 ; WX 500 ; N J ; B -46 -99 524 669 ;C 75 ; WX 667 ; N K ; B -21 0 702 669 ;C 76 ; WX 611 ; N L ; B -22 0 590 669 ;C 77 ; WX 889 ; N M ; B -29 -12 917 669 ;C 78 ; WX 722 ; N N ; B -27 -15 748 669 ;C 79 ; WX 722 ; N O ; B 27 -18 691 685 ;C 80 ; WX 611 ; N P ; B -27 0 613 669 ;C 81 ; WX 722 ; N Q ; B 27 -208 691 685 ;C 82 ; WX 667 ; N R ; B -29 0 623 669 ;C 83 ; WX 556 ; N S ; B 2 -18 526 685 ;C 84 ; WX 611 ; N T ; B 50 0 650 669 ;C 85 ; WX 722 ; N U ; B 67 -18 744 669 ;C 86 ; WX 667 ; N V ; B 65 -18 715 669 ;C 87 ; WX 889 ; N W ; B 65 -18 940 669 ;C 88 ; WX 667 ; N X ; B -24 0 694 669 ;C 89 ; WX 611 ; N Y ; B 73 0 659 669 ;C 90 ; WX 611 ; N Z ; B -11 0 590 669 ;C 91 ; WX 333 ; N bracketleft ; B -37 -159 362 674 ;C 92 ; WX 278 ; N backslash ; B -1 -18 279 685 ;C 93 ; WX 333 ; N bracketright ; B -56 -157 343 674 ;C 94 ; WX 570 ; N asciicircum ; B 67 304 503 669 ;C 95 ; WX 500 ; N underscore ; B 0 -125 500 -75 ;C 96 ; WX 333 ; N quoteleft ; B 128 369 332 685 ;C 97 ; WX 500 ; N a ; B -21 -14 455 462 ;C 98 ; WX 500 ; N b ; B -14 -13 444 699 ;C 99 ; WX 444 ; N c ; B -5 -13 392 462 ;C 100 ; WX 500 ; N d ; B -21 -13 517 699 ;C 101 ; WX 444 ; N e ; B 5 -13 398 462 ;C 102 ; WX 333 ; N f ; B -169 -205 446 698 ; L i fi ; L l fl ;C 103 ; WX 500 ; N g ; B -52 -203 478 462 ;C 104 ; WX 556 ; N h ; B -13 -9 498 699 ;C 105 ; WX 278 ; N i ; B 2 -9 263 684 ;C 106 ; WX 278 ; N j ; B -189 -207 279 684 ;C 107 ; WX 500 ; N k ; B -23 -8 483 699 ;C 108 ; WX 278 ; N l ; B 2 -9 290 699 ;C 109 ; WX 778 ; N m ; B -14 -9 722 462 ;C 110 ; WX 556 ; N n ; B -6 -9 493 462 ;C 111 ; WX 500 ; N o ; B -3 -13 441 462 ;C 112 ; WX 500 ; N p ; B -120 -205 446 462 ;C 113 ; WX 500 ; N q ; B 1 -205 471 462 ;C 114 ; WX 389 ; N r ; B -21 0 389 462 ;C 115 ; WX 389 ; N s ; B -19 -13 333 462 ;C 116 ; WX 278 ; N t ; B -11 -9 281 594 ;C 117 ; WX 556 ; N u ; B 15 -9 492 462 ;C 118 ; WX 444 ; N v ; B 16 -13 401 462 ;C 119 ; WX 667 ; N w ; B 16 -13 614 462 ;C 120 ; WX 500 ; N x ; B -46 -13 469 462 ;C 121 ; WX 444 ; N y ; B -94 -205 392 462 ;C 122 ; WX 389 ; N z ; B -43 -78 368 449 ;C 123 ; WX 348 ; N braceleft ; B 5 -187 436 686 ;C 124 ; WX 220 ; N bar ; B 66 -218 154 782 ;C 125 ; WX 348 ; N braceright ; B -129 -187 302 686 ;C 126 ; WX 570 ; N asciitilde ; B 54 173 516 333 ;C 161 ; WX 389 ; N exclamdown ; B 19 -205 322 492 ;C 162 ; WX 500 ; N cent ; B 42 -143 439 576 ;C 163 ; WX 500 ; N sterling ; B -32 -12 510 683 ;C 164 ; WX 167 ; N fraction ; B -169 -14 324 683 ;C 165 ; WX 500 ; N yen ; B 33 0 628 669 ;C 166 ; WX 500 ; N florin ; B -87 -156 537 707 ;C 167 ; WX 500 ; N section ; B 36 -143 459 685 ;C 168 ; WX 500 ; N currency ; B -26 34 526 586 ;C 169 ; WX 278 ; N quotesingle ; B 128 398 268 685 ;C 170 ; WX 500 ; N quotedblleft ; B 53 369 513 685 ;C 171 ; WX 500 ; N guillemotleft ; B 12 32 468 415 ;C 172 ; WX 333 ; N guilsinglleft ; B 32 32 303 415 ;C 173 ; WX 333 ; N guilsinglright ; B 10 32 281 415 ;C 174 ; WX 556 ; N fi ; B -188 -205 514 703 ;C 175 ; WX 556 ; N fl ; B -186 -205 553 704 ;C 177 ; WX 500 ; N endash ; B -40 178 477 269 ;C 178 ; WX 500 ; N dagger ; B 91 -145 494 685 ;C 179 ; WX 500 ; N daggerdbl ; B 10 -139 493 685 ;C 180 ; WX 250 ; N periodcentered ; B 51 257 199 405 ;C 182 ; WX 500 ; N paragraph ; B -57 -193 562 669 ;C 183 ; WX 350 ; N bullet ; B 0 175 350 525 ;C 184 ; WX 333 ; N quotesinglbase ; B -5 -182 199 134 ;C 185 ; WX 500 ; N quotedblbase ; B -57 -182 403 134 ;C 186 ; WX 500 ; N quotedblright ; B 53 369 513 685 ;C 187 ; WX 500 ; N guillemotright ; B 12 32 468 415 ;C 188 ; WX 1000 ; N ellipsis ; B 40 -13 852 135 ;C 189 ; WX 1000 ; N perthousand ; B 7 -29 996 706 ;C 191 ; WX 500 ; N questiondown ; B 30 -205 421 492 ;C 193 ; WX 333 ; N grave ; B 85 516 297 697 ;C 194 ; WX 333 ; N acute ; B 139 516 379 697 ;C 195 ; WX 333 ; N circumflex ; B 40 516 367 690 ;C 196 ; WX 333 ; N tilde ; B 48 536 407 655 ;C 197 ; WX 333 ; N macron ; B 51 553 393 623 ;C 198 ; WX 333 ; N breve ; B 71 516 387 678 ;C 199 ; WX 333 ; N dotaccent ; B 163 550 298 684 ;C 200 ; WX 333 ; N dieresis ; B 55 550 402 684 ;C 202 ; WX 333 ; N ring ; B 127 516 340 729 ;C 203 ; WX 333 ; N cedilla ; B -80 -218 156 5 ;C 205 ; WX 333 ; N hungarumlaut ; B 69 516 498 697 ;C 206 ; WX 333 ; N ogonek ; B 15 -183 244 34 ;C 207 ; WX 333 ; N caron ; B 79 516 411 690 ;C 208 ; WX 1000 ; N emdash ; B -40 178 977 269 ;C 225 ; WX 944 ; N AE ; B -64 0 918 669 ;C 227 ; WX 266 ; N ordfeminine ; B 16 399 330 685 ;C 232 ; WX 611 ; N Lslash ; B -22 0 590 669 ;C 233 ; WX 722 ; N Oslash ; B 27 -125 691 764 ;C 234 ; WX 944 ; N OE ; B 23 -8 946 677 ;C 235 ; WX 300 ; N ordmasculine ; B 56 400 347 685 ;C 241 ; WX 722 ; N ae ; B -5 -13 673 462 ;C 245 ; WX 278 ; N dotlessi ; B 2 -9 238 462 ;C 248 ; WX 278 ; N lslash ; B -7 -9 307 699 ;C 249 ; WX 500 ; N oslash ; B -3 -119 441 560 ;C 250 ; WX 722 ; N oe ; B 6 -13 674 462 ;C 251 ; WX 500 ; N germandbls ; B -200 -200 473 705 ;C -1 ; WX 389 ; N Idieresis ; B -32 0 450 862 ;C -1 ; WX 444 ; N eacute ; B 5 -13 435 697 ;C -1 ; WX 500 ; N abreve ; B -21 -14 471 678 ;C -1 ; WX 556 ; N uhungarumlaut ; B 15 -9 610 697 ;C -1 ; WX 444 ; N ecaron ; B 5 -13 467 690 ;C -1 ; WX 611 ; N Ydieresis ; B 73 0 659 862 ;C -1 ; WX 570 ; N divide ; B 33 -29 537 535 ;C -1 ; WX 611 ; N Yacute ; B 73 0 659 904 ;C -1 ; WX 667 ; N Acircumflex ; B -67 0 593 897 ;C -1 ; WX 500 ; N aacute ; B -21 -14 463 697 ;C -1 ; WX 722 ; N Ucircumflex ; B 67 -18 744 897 ;C -1 ; WX 444 ; N yacute ; B -94 -205 435 697 ;C -1 ; WX 389 ; N scommaaccent ; B -19 -218 333 462 ;C -1 ; WX 444 ; N ecircumflex ; B 5 -13 423 690 ;C -1 ; WX 722 ; N Uring ; B 67 -18 744 921 ;C -1 ; WX 722 ; N Udieresis ; B 67 -18 744 862 ;C -1 ; WX 500 ; N aogonek ; B -21 -183 455 462 ;C -1 ; WX 722 ; N Uacute ; B 67 -18 744 904 ;C -1 ; WX 556 ; N uogonek ; B 15 -183 492 462 ;C -1 ; WX 667 ; N Edieresis ; B -27 0 653 862 ;C -1 ; WX 722 ; N Dcroat ; B -31 0 700 669 ;C -1 ; WX 250 ; N commaaccent ; B -36 -218 131 -50 ;C -1 ; WX 747 ; N copyright ; B 30 -18 718 685 ;C -1 ; WX 667 ; N Emacron ; B -27 0 653 830 ;C -1 ; WX 444 ; N ccaron ; B -5 -13 467 690 ;C -1 ; WX 500 ; N aring ; B -21 -14 455 729 ;C -1 ; WX 722 ; N Ncommaaccent ; B -27 -218 748 669 ;C -1 ; WX 278 ; N lacute ; B 2 -9 392 904 ;C -1 ; WX 500 ; N agrave ; B -21 -14 455 697 ;C -1 ; WX 611 ; N Tcommaaccent ; B 50 -218 650 669 ;C -1 ; WX 667 ; N Cacute ; B 32 -18 677 904 ;C -1 ; WX 500 ; N atilde ; B -21 -14 491 655 ;C -1 ; WX 667 ; N Edotaccent ; B -27 0 653 862 ;C -1 ; WX 389 ; N scaron ; B -19 -13 424 690 ;C -1 ; WX 389 ; N scedilla ; B -19 -218 333 462 ;C -1 ; WX 278 ; N iacute ; B 2 -9 352 697 ;C -1 ; WX 494 ; N lozenge ; B 10 0 484 745 ;C -1 ; WX 667 ; N Rcaron ; B -29 0 623 897 ;C -1 ; WX 722 ; N Gcommaaccent ; B 21 -218 706 685 ;C -1 ; WX 556 ; N ucircumflex ; B 15 -9 492 690 ;C -1 ; WX 500 ; N acircumflex ; B -21 -14 455 690 ;C -1 ; WX 667 ; N Amacron ; B -67 0 593 830 ;C -1 ; WX 389 ; N rcaron ; B -21 0 424 690 ;C -1 ; WX 444 ; N ccedilla ; B -5 -218 392 462 ;C -1 ; WX 611 ; N Zdotaccent ; B -11 0 590 862 ;C -1 ; WX 611 ; N Thorn ; B -27 0 573 669 ;C -1 ; WX 722 ; N Omacron ; B 27 -18 691 830 ;C -1 ; WX 667 ; N Racute ; B -29 0 623 904 ;C -1 ; WX 556 ; N Sacute ; B 2 -18 531 904 ;C -1 ; WX 608 ; N dcaron ; B -21 -13 675 708 ;C -1 ; WX 722 ; N Umacron ; B 67 -18 744 830 ;C -1 ; WX 556 ; N uring ; B 15 -9 492 729 ;C -1 ; WX 300 ; N threesuperior ; B 17 265 321 683 ;C -1 ; WX 722 ; N Ograve ; B 27 -18 691 904 ;C -1 ; WX 667 ; N Agrave ; B -67 0 593 904 ;C -1 ; WX 667 ; N Abreve ; B -67 0 593 885 ;C -1 ; WX 570 ; N multiply ; B 48 16 522 490 ;C -1 ; WX 556 ; N uacute ; B 15 -9 492 697 ;C -1 ; WX 611 ; N Tcaron ; B 50 0 650 897 ;C -1 ; WX 494 ; N partialdiff ; B 11 -21 494 750 ;C -1 ; WX 444 ; N ydieresis ; B -94 -205 443 655 ;C -1 ; WX 722 ; N Nacute ; B -27 -15 748 904 ;C -1 ; WX 278 ; N icircumflex ; B -3 -9 324 690 ;C -1 ; WX 667 ; N Ecircumflex ; B -27 0 653 897 ;C -1 ; WX 500 ; N adieresis ; B -21 -14 476 655 ;C -1 ; WX 444 ; N edieresis ; B 5 -13 448 655 ;C -1 ; WX 444 ; N cacute ; B -5 -13 435 697 ;C -1 ; WX 556 ; N nacute ; B -6 -9 493 697 ;C -1 ; WX 556 ; N umacron ; B 15 -9 492 623 ;C -1 ; WX 722 ; N Ncaron ; B -27 -15 748 897 ;C -1 ; WX 389 ; N Iacute ; B -32 0 432 904 ;C -1 ; WX 570 ; N plusminus ; B 33 0 537 506 ;C -1 ; WX 220 ; N brokenbar ; B 66 -143 154 707 ;C -1 ; WX 747 ; N registered ; B 30 -18 718 685 ;C -1 ; WX 722 ; N Gbreve ; B 21 -18 706 885 ;C -1 ; WX 389 ; N Idotaccent ; B -32 0 406 862 ;C -1 ; WX 600 ; N summation ; B 14 -10 585 706 ;C -1 ; WX 667 ; N Egrave ; B -27 0 653 904 ;C -1 ; WX 389 ; N racute ; B -21 0 407 697 ;C -1 ; WX 500 ; N omacron ; B -3 -13 462 623 ;C -1 ; WX 611 ; N Zacute ; B -11 0 590 904 ;C -1 ; WX 611 ; N Zcaron ; B -11 0 590 897 ;C -1 ; WX 549 ; N greaterequal ; B 26 0 523 704 ;C -1 ; WX 722 ; N Eth ; B -31 0 700 669 ;C -1 ; WX 667 ; N Ccedilla ; B 32 -218 677 685 ;C -1 ; WX 278 ; N lcommaaccent ; B -42 -218 290 699 ;C -1 ; WX 366 ; N tcaron ; B -11 -9 434 754 ;C -1 ; WX 444 ; N eogonek ; B 5 -183 398 462 ;C -1 ; WX 722 ; N Uogonek ; B 67 -183 744 669 ;C -1 ; WX 667 ; N Aacute ; B -67 0 593 904 ;C -1 ; WX 667 ; N Adieresis ; B -67 0 593 862 ;C -1 ; WX 444 ; N egrave ; B 5 -13 398 697 ;C -1 ; WX 389 ; N zacute ; B -43 -78 407 697 ;C -1 ; WX 278 ; N iogonek ; B -20 -183 263 684 ;C -1 ; WX 722 ; N Oacute ; B 27 -18 691 904 ;C -1 ; WX 500 ; N oacute ; B -3 -13 463 697 ;C -1 ; WX 500 ; N amacron ; B -21 -14 467 623 ;C -1 ; WX 389 ; N sacute ; B -19 -13 407 697 ;C -1 ; WX 278 ; N idieresis ; B 2 -9 364 655 ;C -1 ; WX 722 ; N Ocircumflex ; B 27 -18 691 897 ;C -1 ; WX 722 ; N Ugrave ; B 67 -18 744 904 ;C -1 ; WX 612 ; N Delta ; B 6 0 608 688 ;C -1 ; WX 500 ; N thorn ; B -120 -205 446 699 ;C -1 ; WX 300 ; N twosuperior ; B 2 274 313 683 ;C -1 ; WX 722 ; N Odieresis ; B 27 -18 691 862 ;C -1 ; WX 576 ; N mu ; B -60 -207 516 449 ;C -1 ; WX 278 ; N igrave ; B 2 -9 259 697 ;C -1 ; WX 500 ; N ohungarumlaut ; B -3 -13 582 697 ;C -1 ; WX 667 ; N Eogonek ; B -27 -183 653 669 ;C -1 ; WX 500 ; N dcroat ; B -21 -13 552 699 ;C -1 ; WX 750 ; N threequarters ; B 7 -14 726 683 ;C -1 ; WX 556 ; N Scedilla ; B 2 -218 526 685 ;C -1 ; WX 382 ; N lcaron ; B 2 -9 448 708 ;C -1 ; WX 667 ; N Kcommaaccent ; B -21 -218 702 669 ;C -1 ; WX 611 ; N Lacute ; B -22 0 590 904 ;C -1 ; WX 1000 ; N trademark ; B 32 263 968 669 ;C -1 ; WX 444 ; N edotaccent ; B 5 -13 398 655 ;C -1 ; WX 389 ; N Igrave ; B -32 0 406 904 ;C -1 ; WX 389 ; N Imacron ; B -32 0 461 830 ;C -1 ; WX 611 ; N Lcaron ; B -22 0 671 718 ;C -1 ; WX 750 ; N onehalf ; B -9 -14 723 683 ;C -1 ; WX 549 ; N lessequal ; B 29 0 526 704 ;C -1 ; WX 500 ; N ocircumflex ; B -3 -13 451 690 ;C -1 ; WX 556 ; N ntilde ; B -6 -9 504 655 ;C -1 ; WX 722 ; N Uhungarumlaut ; B 67 -18 744 904 ;C -1 ; WX 667 ; N Eacute ; B -27 0 653 904 ;C -1 ; WX 444 ; N emacron ; B 5 -13 439 623 ;C -1 ; WX 500 ; N gbreve ; B -52 -203 478 678 ;C -1 ; WX 750 ; N onequarter ; B 7 -14 721 683 ;C -1 ; WX 556 ; N Scaron ; B 2 -18 553 897 ;C -1 ; WX 556 ; N Scommaaccent ; B 2 -218 526 685 ;C -1 ; WX 722 ; N Ohungarumlaut ; B 27 -18 723 904 ;C -1 ; WX 400 ; N degree ; B 83 397 369 683 ;C -1 ; WX 500 ; N ograve ; B -3 -13 441 697 ;C -1 ; WX 667 ; N Ccaron ; B 32 -18 677 897 ;C -1 ; WX 556 ; N ugrave ; B 15 -9 492 697 ;C -1 ; WX 549 ; N radical ; B 10 -46 512 850 ;C -1 ; WX 722 ; N Dcaron ; B -46 0 685 897 ;C -1 ; WX 389 ; N rcommaaccent ; B -67 -218 389 462 ;C -1 ; WX 722 ; N Ntilde ; B -27 -15 748 862 ;C -1 ; WX 500 ; N otilde ; B -3 -13 491 655 ;C -1 ; WX 667 ; N Rcommaaccent ; B -29 -218 623 669 ;C -1 ; WX 611 ; N Lcommaaccent ; B -22 -218 590 669 ;C -1 ; WX 667 ; N Atilde ; B -67 0 593 862 ;C -1 ; WX 667 ; N Aogonek ; B -67 -183 604 683 ;C -1 ; WX 667 ; N Aring ; B -67 0 593 921 ;C -1 ; WX 722 ; N Otilde ; B 27 -18 691 862 ;C -1 ; WX 389 ; N zdotaccent ; B -43 -78 368 655 ;C -1 ; WX 667 ; N Ecaron ; B -27 0 653 897 ;C -1 ; WX 389 ; N Iogonek ; B -32 -183 406 669 ;C -1 ; WX 500 ; N kcommaaccent ; B -23 -218 483 699 ;C -1 ; WX 606 ; N minus ; B 51 209 555 297 ;C -1 ; WX 389 ; N Icircumflex ; B -32 0 450 897 ;C -1 ; WX 556 ; N ncaron ; B -6 -9 523 690 ;C -1 ; WX 278 ; N tcommaaccent ; B -62 -218 281 594 ;C -1 ; WX 606 ; N logicalnot ; B 51 108 555 399 ;C -1 ; WX 500 ; N odieresis ; B -3 -13 471 655 ;C -1 ; WX 556 ; N udieresis ; B 15 -9 499 655 ;C -1 ; WX 549 ; N notequal ; B 15 -49 540 570 ;C -1 ; WX 500 ; N gcommaaccent ; B -52 -203 478 767 ;C -1 ; WX 500 ; N eth ; B -3 -13 454 699 ;C -1 ; WX 389 ; N zcaron ; B -43 -78 424 690 ;C -1 ; WX 556 ; N ncommaaccent ; B -6 -218 493 462 ;C -1 ; WX 300 ; N onesuperior ; B 30 274 301 683 ;C -1 ; WX 278 ; N imacron ; B 2 -9 294 623 ;C -1 ; WX 500 ; N Euro ; B 0 0 0 0 ;EndCharMetricsStartKernDataStartKernPairs 2038KPX A C -65KPX A Cacute -65KPX A Ccaron -65KPX A Ccedilla -65KPX A G -60KPX A Gbreve -60KPX A Gcommaaccent -60KPX A O -50KPX A Oacute -50KPX A Ocircumflex -50KPX A Odieresis -50KPX A Ograve -50KPX A Ohungarumlaut -50KPX A Omacron -50KPX A Oslash -50KPX A Otilde -50KPX A Q -55KPX A T -55KPX A Tcaron -55KPX A Tcommaaccent -55KPX A U -50KPX A Uacute -50KPX A Ucircumflex -50KPX A Udieresis -50KPX A Ugrave -50KPX A Uhungarumlaut -50KPX A Umacron -50KPX A Uogonek -50KPX A Uring -50KPX A V -95KPX A W -100KPX A Y -70KPX A Yacute -70KPX A Ydieresis -70KPX A quoteright -74KPX A u -30KPX A uacute -30KPX A ucircumflex -30KPX A udieresis -30KPX A ugrave -30KPX A uhungarumlaut -30KPX A umacron -30KPX A uogonek -30KPX A uring -30KPX A v -74KPX A w -74KPX A y -74KPX A yacute -74KPX A ydieresis -74KPX Aacute C -65KPX Aacute Cacute -65KPX Aacute Ccaron -65KPX Aacute Ccedilla -65KPX Aacute G -60KPX Aacute Gbreve -60KPX Aacute Gcommaaccent -60KPX Aacute O -50KPX Aacute Oacute -50KPX Aacute Ocircumflex -50KPX Aacute Odieresis -50KPX Aacute Ograve -50KPX Aacute Ohungarumlaut -50KPX Aacute Omacron -50KPX Aacute Oslash -50KPX Aacute Otilde -50KPX Aacute Q -55KPX Aacute T -55KPX Aacute Tcaron -55KPX Aacute Tcommaaccent -55KPX Aacute U -50KPX Aacute Uacute -50KPX Aacute Ucircumflex -50KPX Aacute Udieresis -50KPX Aacute Ugrave -50KPX Aacute Uhungarumlaut -50KPX Aacute Umacron -50KPX Aacute Uogonek -50KPX Aacute Uring -50KPX Aacute V -95KPX Aacute W -100KPX Aacute Y -70KPX Aacute Yacute -70KPX Aacute Ydieresis -70KPX Aacute quoteright -74KPX Aacute u -30KPX Aacute uacute -30KPX Aacute ucircumflex -30KPX Aacute udieresis -30KPX Aacute ugrave -30KPX Aacute uhungarumlaut -30KPX Aacute umacron -30KPX Aacute uogonek -30KPX Aacute uring -30KPX Aacute v -74KPX Aacute w -74KPX Aacute y -74KPX Aacute yacute -74KPX Aacute ydieresis -74KPX Abreve C -65KPX Abreve Cacute -65KPX Abreve Ccaron -65KPX Abreve Ccedilla -65KPX Abreve G -60KPX Abreve Gbreve -60KPX Abreve Gcommaaccent -60KPX Abreve O -50KPX Abreve Oacute -50KPX Abreve Ocircumflex -50KPX Abreve Odieresis -50KPX Abreve Ograve -50KPX Abreve Ohungarumlaut -50KPX Abreve Omacron -50KPX Abreve Oslash -50KPX Abreve Otilde -50KPX Abreve Q -55KPX Abreve T -55KPX Abreve Tcaron -55KPX Abreve Tcommaaccent -55KPX Abreve U -50KPX Abreve Uacute -50KPX Abreve Ucircumflex -50KPX Abreve Udieresis -50KPX Abreve Ugrave -50KPX Abreve Uhungarumlaut -50KPX Abreve Umacron -50KPX Abreve Uogonek -50KPX Abreve Uring -50KPX Abreve V -95KPX Abreve W -100KPX Abreve Y -70KPX Abreve Yacute -70KPX Abreve Ydieresis -70KPX Abreve quoteright -74KPX Abreve u -30KPX Abreve uacute -30KPX Abreve ucircumflex -30KPX Abreve udieresis -30KPX Abreve ugrave -30KPX Abreve uhungarumlaut -30KPX Abreve umacron -30KPX Abreve uogonek -30KPX Abreve uring -30KPX Abreve v -74KPX Abreve w -74KPX Abreve y -74KPX Abreve yacute -74KPX Abreve ydieresis -74KPX Acircumflex C -65KPX Acircumflex Cacute -65KPX Acircumflex Ccaron -65KPX Acircumflex Ccedilla -65KPX Acircumflex G -60KPX Acircumflex Gbreve -60KPX Acircumflex Gcommaaccent -60KPX Acircumflex O -50KPX Acircumflex Oacute -50KPX Acircumflex Ocircumflex -50KPX Acircumflex Odieresis -50KPX Acircumflex Ograve -50KPX Acircumflex Ohungarumlaut -50KPX Acircumflex Omacron -50KPX Acircumflex Oslash -50KPX Acircumflex Otilde -50KPX Acircumflex Q -55KPX Acircumflex T -55KPX Acircumflex Tcaron -55KPX Acircumflex Tcommaaccent -55KPX Acircumflex U -50KPX Acircumflex Uacute -50KPX Acircumflex Ucircumflex -50KPX Acircumflex Udieresis -50KPX Acircumflex Ugrave -50KPX Acircumflex Uhungarumlaut -50KPX Acircumflex Umacron -50KPX Acircumflex Uogonek -50KPX Acircumflex Uring -50KPX Acircumflex V -95KPX Acircumflex W -100KPX Acircumflex Y -70KPX Acircumflex Yacute -70KPX Acircumflex Ydieresis -70KPX Acircumflex quoteright -74KPX Acircumflex u -30KPX Acircumflex uacute -30KPX Acircumflex ucircumflex -30KPX Acircumflex udieresis -30KPX Acircumflex ugrave -30KPX Acircumflex uhungarumlaut -30KPX Acircumflex umacron -30KPX Acircumflex uogonek -30KPX Acircumflex uring -30KPX Acircumflex v -74KPX Acircumflex w -74KPX Acircumflex y -74KPX Acircumflex yacute -74KPX Acircumflex ydieresis -74KPX Adieresis C -65KPX Adieresis Cacute -65KPX Adieresis Ccaron -65KPX Adieresis Ccedilla -65KPX Adieresis G -60KPX Adieresis Gbreve -60KPX Adieresis Gcommaaccent -60KPX Adieresis O -50KPX Adieresis Oacute -50KPX Adieresis Ocircumflex -50KPX Adieresis Odieresis -50KPX Adieresis Ograve -50KPX Adieresis Ohungarumlaut -50KPX Adieresis Omacron -50KPX Adieresis Oslash -50KPX Adieresis Otilde -50KPX Adieresis Q -55KPX Adieresis T -55KPX Adieresis Tcaron -55KPX Adieresis Tcommaaccent -55KPX Adieresis U -50KPX Adieresis Uacute -50KPX Adieresis Ucircumflex -50KPX Adieresis Udieresis -50KPX Adieresis Ugrave -50KPX Adieresis Uhungarumlaut -50KPX Adieresis Umacron -50KPX Adieresis Uogonek -50KPX Adieresis Uring -50KPX Adieresis V -95KPX Adieresis W -100KPX Adieresis Y -70KPX Adieresis Yacute -70KPX Adieresis Ydieresis -70KPX Adieresis quoteright -74KPX Adieresis u -30KPX Adieresis uacute -30KPX Adieresis ucircumflex -30KPX Adieresis udieresis -30KPX Adieresis ugrave -30KPX Adieresis uhungarumlaut -30KPX Adieresis umacron -30KPX Adieresis uogonek -30KPX Adieresis uring -30KPX Adieresis v -74KPX Adieresis w -74KPX Adieresis y -74KPX Adieresis yacute -74KPX Adieresis ydieresis -74KPX Agrave C -65KPX Agrave Cacute -65KPX Agrave Ccaron -65KPX Agrave Ccedilla -65KPX Agrave G -60KPX Agrave Gbreve -60KPX Agrave Gcommaaccent -60KPX Agrave O -50KPX Agrave Oacute -50KPX Agrave Ocircumflex -50KPX Agrave Odieresis -50KPX Agrave Ograve -50KPX Agrave Ohungarumlaut -50KPX Agrave Omacron -50KPX Agrave Oslash -50KPX Agrave Otilde -50KPX Agrave Q -55KPX Agrave T -55KPX Agrave Tcaron -55KPX Agrave Tcommaaccent -55KPX Agrave U -50KPX Agrave Uacute -50KPX Agrave Ucircumflex -50KPX Agrave Udieresis -50KPX Agrave Ugrave -50KPX Agrave Uhungarumlaut -50KPX Agrave Umacron -50KPX Agrave Uogonek -50KPX Agrave Uring -50KPX Agrave V -95KPX Agrave W -100KPX Agrave Y -70KPX Agrave Yacute -70KPX Agrave Ydieresis -70KPX Agrave quoteright -74KPX Agrave u -30KPX Agrave uacute -30KPX Agrave ucircumflex -30KPX Agrave udieresis -30KPX Agrave ugrave -30KPX Agrave uhungarumlaut -30KPX Agrave umacron -30KPX Agrave uogonek -30KPX Agrave uring -30KPX Agrave v -74KPX Agrave w -74KPX Agrave y -74KPX Agrave yacute -74KPX Agrave ydieresis -74KPX Amacron C -65KPX Amacron Cacute -65KPX Amacron Ccaron -65KPX Amacron Ccedilla -65KPX Amacron G -60KPX Amacron Gbreve -60KPX Amacron Gcommaaccent -60KPX Amacron O -50KPX Amacron Oacute -50KPX Amacron Ocircumflex -50KPX Amacron Odieresis -50KPX Amacron Ograve -50KPX Amacron Ohungarumlaut -50KPX Amacron Omacron -50KPX Amacron Oslash -50KPX Amacron Otilde -50KPX Amacron Q -55KPX Amacron T -55KPX Amacron Tcaron -55KPX Amacron Tcommaaccent -55KPX Amacron U -50KPX Amacron Uacute -50KPX Amacron Ucircumflex -50KPX Amacron Udieresis -50KPX Amacron Ugrave -50KPX Amacron Uhungarumlaut -50KPX Amacron Umacron -50KPX Amacron Uogonek -50KPX Amacron Uring -50KPX Amacron V -95KPX Amacron W -100KPX Amacron Y -70KPX Amacron Yacute -70KPX Amacron Ydieresis -70KPX Amacron quoteright -74KPX Amacron u -30KPX Amacron uacute -30KPX Amacron ucircumflex -30KPX Amacron udieresis -30KPX Amacron ugrave -30KPX Amacron uhungarumlaut -30KPX Amacron umacron -30KPX Amacron uogonek -30KPX Amacron uring -30KPX Amacron v -74KPX Amacron w -74KPX Amacron y -74KPX Amacron yacute -74KPX Amacron ydieresis -74KPX Aogonek C -65KPX Aogonek Cacute -65KPX Aogonek Ccaron -65KPX Aogonek Ccedilla -65KPX Aogonek G -60KPX Aogonek Gbreve -60KPX Aogonek Gcommaaccent -60KPX Aogonek O -50KPX Aogonek Oacute -50KPX Aogonek Ocircumflex -50KPX Aogonek Odieresis -50KPX Aogonek Ograve -50KPX Aogonek Ohungarumlaut -50KPX Aogonek Omacron -50KPX Aogonek Oslash -50KPX Aogonek Otilde -50KPX Aogonek Q -55KPX Aogonek T -55KPX Aogonek Tcaron -55KPX Aogonek Tcommaaccent -55KPX Aogonek U -50KPX Aogonek Uacute -50KPX Aogonek Ucircumflex -50KPX Aogonek Udieresis -50KPX Aogonek Ugrave -50KPX Aogonek Uhungarumlaut -50KPX Aogonek Umacron -50KPX Aogonek Uogonek -50KPX Aogonek Uring -50KPX Aogonek V -95KPX Aogonek W -100KPX Aogonek Y -70KPX Aogonek Yacute -70KPX Aogonek Ydieresis -70KPX Aogonek quoteright -74KPX Aogonek u -30KPX Aogonek uacute -30KPX Aogonek ucircumflex -30KPX Aogonek udieresis -30KPX Aogonek ugrave -30KPX Aogonek uhungarumlaut -30KPX Aogonek umacron -30KPX Aogonek uogonek -30KPX Aogonek uring -30KPX Aogonek v -74KPX Aogonek w -74KPX Aogonek y -34KPX Aogonek yacute -34KPX Aogonek ydieresis -34KPX Aring C -65KPX Aring Cacute -65KPX Aring Ccaron -65KPX Aring Ccedilla -65KPX Aring G -60KPX Aring Gbreve -60KPX Aring Gcommaaccent -60KPX Aring O -50KPX Aring Oacute -50KPX Aring Ocircumflex -50KPX Aring Odieresis -50KPX Aring Ograve -50KPX Aring Ohungarumlaut -50KPX Aring Omacron -50KPX Aring Oslash -50KPX Aring Otilde -50KPX Aring Q -55KPX Aring T -55KPX Aring Tcaron -55KPX Aring Tcommaaccent -55KPX Aring U -50KPX Aring Uacute -50KPX Aring Ucircumflex -50KPX Aring Udieresis -50KPX Aring Ugrave -50KPX Aring Uhungarumlaut -50KPX Aring Umacron -50KPX Aring Uogonek -50KPX Aring Uring -50KPX Aring V -95KPX Aring W -100KPX Aring Y -70KPX Aring Yacute -70KPX Aring Ydieresis -70KPX Aring quoteright -74KPX Aring u -30KPX Aring uacute -30KPX Aring ucircumflex -30KPX Aring udieresis -30KPX Aring ugrave -30KPX Aring uhungarumlaut -30KPX Aring umacron -30KPX Aring uogonek -30KPX Aring uring -30KPX Aring v -74KPX Aring w -74KPX Aring y -74KPX Aring yacute -74KPX Aring ydieresis -74KPX Atilde C -65KPX Atilde Cacute -65KPX Atilde Ccaron -65KPX Atilde Ccedilla -65KPX Atilde G -60KPX Atilde Gbreve -60KPX Atilde Gcommaaccent -60KPX Atilde O -50KPX Atilde Oacute -50KPX Atilde Ocircumflex -50KPX Atilde Odieresis -50KPX Atilde Ograve -50KPX Atilde Ohungarumlaut -50KPX Atilde Omacron -50KPX Atilde Oslash -50KPX Atilde Otilde -50KPX Atilde Q -55KPX Atilde T -55KPX Atilde Tcaron -55KPX Atilde Tcommaaccent -55KPX Atilde U -50KPX Atilde Uacute -50KPX Atilde Ucircumflex -50KPX Atilde Udieresis -50KPX Atilde Ugrave -50KPX Atilde Uhungarumlaut -50KPX Atilde Umacron -50KPX Atilde Uogonek -50KPX Atilde Uring -50KPX Atilde V -95KPX Atilde W -100KPX Atilde Y -70KPX Atilde Yacute -70KPX Atilde Ydieresis -70KPX Atilde quoteright -74KPX Atilde u -30KPX Atilde uacute -30KPX Atilde ucircumflex -30KPX Atilde udieresis -30KPX Atilde ugrave -30KPX Atilde uhungarumlaut -30KPX Atilde umacron -30KPX Atilde uogonek -30KPX Atilde uring -30KPX Atilde v -74KPX Atilde w -74KPX Atilde y -74KPX Atilde yacute -74KPX Atilde ydieresis -74KPX B A -25KPX B Aacute -25KPX B Abreve -25KPX B Acircumflex -25KPX B Adieresis -25KPX B Agrave -25KPX B Amacron -25KPX B Aogonek -25KPX B Aring -25KPX B Atilde -25KPX B U -10KPX B Uacute -10KPX B Ucircumflex -10KPX B Udieresis -10KPX B Ugrave -10KPX B Uhungarumlaut -10KPX B Umacron -10KPX B Uogonek -10KPX B Uring -10KPX D A -25KPX D Aacute -25KPX D Abreve -25KPX D Acircumflex -25KPX D Adieresis -25KPX D Agrave -25KPX D Amacron -25KPX D Aogonek -25KPX D Aring -25KPX D Atilde -25KPX D V -50KPX D W -40KPX D Y -50KPX D Yacute -50KPX D Ydieresis -50KPX Dcaron A -25KPX Dcaron Aacute -25KPX Dcaron Abreve -25KPX Dcaron Acircumflex -25KPX Dcaron Adieresis -25KPX Dcaron Agrave -25KPX Dcaron Amacron -25KPX Dcaron Aogonek -25KPX Dcaron Aring -25KPX Dcaron Atilde -25KPX Dcaron V -50KPX Dcaron W -40KPX Dcaron Y -50KPX Dcaron Yacute -50KPX Dcaron Ydieresis -50KPX Dcroat A -25KPX Dcroat Aacute -25KPX Dcroat Abreve -25KPX Dcroat Acircumflex -25KPX Dcroat Adieresis -25KPX Dcroat Agrave -25KPX Dcroat Amacron -25KPX Dcroat Aogonek -25KPX Dcroat Aring -25KPX Dcroat Atilde -25KPX Dcroat V -50KPX Dcroat W -40KPX Dcroat Y -50KPX Dcroat Yacute -50KPX Dcroat Ydieresis -50KPX F A -100KPX F Aacute -100KPX F Abreve -100KPX F Acircumflex -100KPX F Adieresis -100KPX F Agrave -100KPX F Amacron -100KPX F Aogonek -100KPX F Aring -100KPX F Atilde -100KPX F a -95KPX F aacute -95KPX F abreve -95KPX F acircumflex -95KPX F adieresis -95KPX F agrave -95KPX F amacron -95KPX F aogonek -95KPX F aring -95KPX F atilde -95KPX F comma -129KPX F e -100KPX F eacute -100KPX F ecaron -100KPX F ecircumflex -100KPX F edieresis -100KPX F edotaccent -100KPX F egrave -100KPX F emacron -100KPX F eogonek -100KPX F i -40KPX F iacute -40KPX F icircumflex -40KPX F idieresis -40KPX F igrave -40KPX F imacron -40KPX F iogonek -40KPX F o -70KPX F oacute -70KPX F ocircumflex -70KPX F odieresis -70KPX F ograve -70KPX F ohungarumlaut -70KPX F omacron -70KPX F oslash -70KPX F otilde -70KPX F period -129KPX F r -50KPX F racute -50KPX F rcaron -50KPX F rcommaaccent -50KPX J A -25KPX J Aacute -25KPX J Abreve -25KPX J Acircumflex -25KPX J Adieresis -25KPX J Agrave -25KPX J Amacron -25KPX J Aogonek -25KPX J Aring -25KPX J Atilde -25KPX J a -40KPX J aacute -40KPX J abreve -40KPX J acircumflex -40KPX J adieresis -40KPX J agrave -40KPX J amacron -40KPX J aogonek -40KPX J aring -40KPX J atilde -40KPX J comma -10KPX J e -40KPX J eacute -40KPX J ecaron -40KPX J ecircumflex -40KPX J edieresis -40KPX J edotaccent -40KPX J egrave -40KPX J emacron -40KPX J eogonek -40KPX J o -40KPX J oacute -40KPX J ocircumflex -40KPX J odieresis -40KPX J ograve -40KPX J ohungarumlaut -40KPX J omacron -40KPX J oslash -40KPX J otilde -40KPX J period -10KPX J u -40KPX J uacute -40KPX J ucircumflex -40KPX J udieresis -40KPX J ugrave -40KPX J uhungarumlaut -40KPX J umacron -40KPX J uogonek -40KPX J uring -40KPX K O -30KPX K Oacute -30KPX K Ocircumflex -30KPX K Odieresis -30KPX K Ograve -30KPX K Ohungarumlaut -30KPX K Omacron -30KPX K Oslash -30KPX K Otilde -30KPX K e -25KPX K eacute -25KPX K ecaron -25KPX K ecircumflex -25KPX K edieresis -25KPX K edotaccent -25KPX K egrave -25KPX K emacron -25KPX K eogonek -25KPX K o -25KPX K oacute -25KPX K ocircumflex -25KPX K odieresis -25KPX K ograve -25KPX K ohungarumlaut -25KPX K omacron -25KPX K oslash -25KPX K otilde -25KPX K u -20KPX K uacute -20KPX K ucircumflex -20KPX K udieresis -20KPX K ugrave -20KPX K uhungarumlaut -20KPX K umacron -20KPX K uogonek -20KPX K uring -20KPX K y -20KPX K yacute -20KPX K ydieresis -20KPX Kcommaaccent O -30KPX Kcommaaccent Oacute -30KPX Kcommaaccent Ocircumflex -30KPX Kcommaaccent Odieresis -30KPX Kcommaaccent Ograve -30KPX Kcommaaccent Ohungarumlaut -30KPX Kcommaaccent Omacron -30KPX Kcommaaccent Oslash -30KPX Kcommaaccent Otilde -30KPX Kcommaaccent e -25KPX Kcommaaccent eacute -25KPX Kcommaaccent ecaron -25KPX Kcommaaccent ecircumflex -25KPX Kcommaaccent edieresis -25KPX Kcommaaccent edotaccent -25KPX Kcommaaccent egrave -25KPX Kcommaaccent emacron -25KPX Kcommaaccent eogonek -25KPX Kcommaaccent o -25KPX Kcommaaccent oacute -25KPX Kcommaaccent ocircumflex -25KPX Kcommaaccent odieresis -25KPX Kcommaaccent ograve -25KPX Kcommaaccent ohungarumlaut -25KPX Kcommaaccent omacron -25KPX Kcommaaccent oslash -25KPX Kcommaaccent otilde -25KPX Kcommaaccent u -20KPX Kcommaaccent uacute -20KPX Kcommaaccent ucircumflex -20KPX Kcommaaccent udieresis -20KPX Kcommaaccent ugrave -20KPX Kcommaaccent uhungarumlaut -20KPX Kcommaaccent umacron -20KPX Kcommaaccent uogonek -20KPX Kcommaaccent uring -20KPX Kcommaaccent y -20KPX Kcommaaccent yacute -20KPX Kcommaaccent ydieresis -20KPX L T -18KPX L Tcaron -18KPX L Tcommaaccent -18KPX L V -37KPX L W -37KPX L Y -37KPX L Yacute -37KPX L Ydieresis -37KPX L quoteright -55KPX L y -37KPX L yacute -37KPX L ydieresis -37KPX Lacute T -18KPX Lacute Tcaron -18KPX Lacute Tcommaaccent -18KPX Lacute V -37KPX Lacute W -37KPX Lacute Y -37KPX Lacute Yacute -37KPX Lacute Ydieresis -37KPX Lacute quoteright -55KPX Lacute y -37KPX Lacute yacute -37KPX Lacute ydieresis -37KPX Lcommaaccent T -18KPX Lcommaaccent Tcaron -18KPX Lcommaaccent Tcommaaccent -18KPX Lcommaaccent V -37KPX Lcommaaccent W -37KPX Lcommaaccent Y -37KPX Lcommaaccent Yacute -37KPX Lcommaaccent Ydieresis -37KPX Lcommaaccent quoteright -55KPX Lcommaaccent y -37KPX Lcommaaccent yacute -37KPX Lcommaaccent ydieresis -37KPX Lslash T -18KPX Lslash Tcaron -18KPX Lslash Tcommaaccent -18KPX Lslash V -37KPX Lslash W -37KPX Lslash Y -37KPX Lslash Yacute -37KPX Lslash Ydieresis -37KPX Lslash quoteright -55KPX Lslash y -37KPX Lslash yacute -37KPX Lslash ydieresis -37KPX N A -30KPX N Aacute -30KPX N Abreve -30KPX N Acircumflex -30KPX N Adieresis -30KPX N Agrave -30KPX N Amacron -30KPX N Aogonek -30KPX N Aring -30KPX N Atilde -30KPX Nacute A -30KPX Nacute Aacute -30KPX Nacute Abreve -30KPX Nacute Acircumflex -30KPX Nacute Adieresis -30KPX Nacute Agrave -30KPX Nacute Amacron -30KPX Nacute Aogonek -30KPX Nacute Aring -30KPX Nacute Atilde -30KPX Ncaron A -30KPX Ncaron Aacute -30KPX Ncaron Abreve -30KPX Ncaron Acircumflex -30KPX Ncaron Adieresis -30KPX Ncaron Agrave -30KPX Ncaron Amacron -30KPX Ncaron Aogonek -30KPX Ncaron Aring -30KPX Ncaron Atilde -30KPX Ncommaaccent A -30KPX Ncommaaccent Aacute -30KPX Ncommaaccent Abreve -30KPX Ncommaaccent Acircumflex -30KPX Ncommaaccent Adieresis -30KPX Ncommaaccent Agrave -30KPX Ncommaaccent Amacron -30KPX Ncommaaccent Aogonek -30KPX Ncommaaccent Aring -30KPX Ncommaaccent Atilde -30KPX Ntilde A -30KPX Ntilde Aacute -30KPX Ntilde Abreve -30KPX Ntilde Acircumflex -30KPX Ntilde Adieresis -30KPX Ntilde Agrave -30KPX Ntilde Amacron -30KPX Ntilde Aogonek -30KPX Ntilde Aring -30KPX Ntilde Atilde -30KPX O A -40KPX O Aacute -40KPX O Abreve -40KPX O Acircumflex -40KPX O Adieresis -40KPX O Agrave -40KPX O Amacron -40KPX O Aogonek -40KPX O Aring -40KPX O Atilde -40KPX O T -40KPX O Tcaron -40KPX O Tcommaaccent -40KPX O V -50KPX O W -50KPX O X -40KPX O Y -50KPX O Yacute -50KPX O Ydieresis -50KPX Oacute A -40KPX Oacute Aacute -40KPX Oacute Abreve -40KPX Oacute Acircumflex -40KPX Oacute Adieresis -40KPX Oacute Agrave -40KPX Oacute Amacron -40KPX Oacute Aogonek -40KPX Oacute Aring -40KPX Oacute Atilde -40KPX Oacute T -40KPX Oacute Tcaron -40KPX Oacute Tcommaaccent -40KPX Oacute V -50KPX Oacute W -50KPX Oacute X -40KPX Oacute Y -50KPX Oacute Yacute -50KPX Oacute Ydieresis -50KPX Ocircumflex A -40KPX Ocircumflex Aacute -40KPX Ocircumflex Abreve -40KPX Ocircumflex Acircumflex -40KPX Ocircumflex Adieresis -40KPX Ocircumflex Agrave -40KPX Ocircumflex Amacron -40KPX Ocircumflex Aogonek -40KPX Ocircumflex Aring -40KPX Ocircumflex Atilde -40KPX Ocircumflex T -40KPX Ocircumflex Tcaron -40KPX Ocircumflex Tcommaaccent -40KPX Ocircumflex V -50KPX Ocircumflex W -50KPX Ocircumflex X -40KPX Ocircumflex Y -50KPX Ocircumflex Yacute -50KPX Ocircumflex Ydieresis -50KPX Odieresis A -40KPX Odieresis Aacute -40KPX Odieresis Abreve -40KPX Odieresis Acircumflex -40KPX Odieresis Adieresis -40KPX Odieresis Agrave -40KPX Odieresis Amacron -40KPX Odieresis Aogonek -40KPX Odieresis Aring -40KPX Odieresis Atilde -40KPX Odieresis T -40KPX Odieresis Tcaron -40KPX Odieresis Tcommaaccent -40KPX Odieresis V -50KPX Odieresis W -50KPX Odieresis X -40KPX Odieresis Y -50KPX Odieresis Yacute -50KPX Odieresis Ydieresis -50KPX Ograve A -40KPX Ograve Aacute -40KPX Ograve Abreve -40KPX Ograve Acircumflex -40KPX Ograve Adieresis -40KPX Ograve Agrave -40KPX Ograve Amacron -40KPX Ograve Aogonek -40KPX Ograve Aring -40KPX Ograve Atilde -40KPX Ograve T -40KPX Ograve Tcaron -40KPX Ograve Tcommaaccent -40KPX Ograve V -50KPX Ograve W -50KPX Ograve X -40KPX Ograve Y -50KPX Ograve Yacute -50KPX Ograve Ydieresis -50KPX Ohungarumlaut A -40KPX Ohungarumlaut Aacute -40KPX Ohungarumlaut Abreve -40KPX Ohungarumlaut Acircumflex -40KPX Ohungarumlaut Adieresis -40KPX Ohungarumlaut Agrave -40KPX Ohungarumlaut Amacron -40KPX Ohungarumlaut Aogonek -40KPX Ohungarumlaut Aring -40KPX Ohungarumlaut Atilde -40KPX Ohungarumlaut T -40KPX Ohungarumlaut Tcaron -40KPX Ohungarumlaut Tcommaaccent -40KPX Ohungarumlaut V -50KPX Ohungarumlaut W -50KPX Ohungarumlaut X -40KPX Ohungarumlaut Y -50KPX Ohungarumlaut Yacute -50KPX Ohungarumlaut Ydieresis -50KPX Omacron A -40KPX Omacron Aacute -40KPX Omacron Abreve -40KPX Omacron Acircumflex -40KPX Omacron Adieresis -40KPX Omacron Agrave -40KPX Omacron Amacron -40KPX Omacron Aogonek -40KPX Omacron Aring -40KPX Omacron Atilde -40KPX Omacron T -40KPX Omacron Tcaron -40KPX Omacron Tcommaaccent -40KPX Omacron V -50KPX Omacron W -50KPX Omacron X -40KPX Omacron Y -50KPX Omacron Yacute -50KPX Omacron Ydieresis -50KPX Oslash A -40KPX Oslash Aacute -40KPX Oslash Abreve -40KPX Oslash Acircumflex -40KPX Oslash Adieresis -40KPX Oslash Agrave -40KPX Oslash Amacron -40KPX Oslash Aogonek -40KPX Oslash Aring -40KPX Oslash Atilde -40KPX Oslash T -40KPX Oslash Tcaron -40KPX Oslash Tcommaaccent -40KPX Oslash V -50KPX Oslash W -50KPX Oslash X -40KPX Oslash Y -50KPX Oslash Yacute -50KPX Oslash Ydieresis -50KPX Otilde A -40KPX Otilde Aacute -40KPX Otilde Abreve -40KPX Otilde Acircumflex -40KPX Otilde Adieresis -40KPX Otilde Agrave -40KPX Otilde Amacron -40KPX Otilde Aogonek -40KPX Otilde Aring -40KPX Otilde Atilde -40KPX Otilde T -40KPX Otilde Tcaron -40KPX Otilde Tcommaaccent -40KPX Otilde V -50KPX Otilde W -50KPX Otilde X -40KPX Otilde Y -50KPX Otilde Yacute -50KPX Otilde Ydieresis -50KPX P A -85KPX P Aacute -85KPX P Abreve -85KPX P Acircumflex -85KPX P Adieresis -85KPX P Agrave -85KPX P Amacron -85KPX P Aogonek -85KPX P Aring -85KPX P Atilde -85KPX P a -40KPX P aacute -40KPX P abreve -40KPX P acircumflex -40KPX P adieresis -40KPX P agrave -40KPX P amacron -40KPX P aogonek -40KPX P aring -40KPX P atilde -40KPX P comma -129KPX P e -50KPX P eacute -50KPX P ecaron -50KPX P ecircumflex -50KPX P edieresis -50KPX P edotaccent -50KPX P egrave -50KPX P emacron -50KPX P eogonek -50KPX P o -55KPX P oacute -55KPX P ocircumflex -55KPX P odieresis -55KPX P ograve -55KPX P ohungarumlaut -55KPX P omacron -55KPX P oslash -55KPX P otilde -55KPX P period -129KPX Q U -10KPX Q Uacute -10KPX Q Ucircumflex -10KPX Q Udieresis -10KPX Q Ugrave -10KPX Q Uhungarumlaut -10KPX Q Umacron -10KPX Q Uogonek -10KPX Q Uring -10KPX R O -40KPX R Oacute -40KPX R Ocircumflex -40KPX R Odieresis -40KPX R Ograve -40KPX R Ohungarumlaut -40KPX R Omacron -40KPX R Oslash -40KPX R Otilde -40KPX R T -30KPX R Tcaron -30KPX R Tcommaaccent -30KPX R U -40KPX R Uacute -40KPX R Ucircumflex -40KPX R Udieresis -40KPX R Ugrave -40KPX R Uhungarumlaut -40KPX R Umacron -40KPX R Uogonek -40KPX R Uring -40KPX R V -18KPX R W -18KPX R Y -18KPX R Yacute -18KPX R Ydieresis -18KPX Racute O -40KPX Racute Oacute -40KPX Racute Ocircumflex -40KPX Racute Odieresis -40KPX Racute Ograve -40KPX Racute Ohungarumlaut -40KPX Racute Omacron -40KPX Racute Oslash -40KPX Racute Otilde -40KPX Racute T -30KPX Racute Tcaron -30KPX Racute Tcommaaccent -30KPX Racute U -40KPX Racute Uacute -40KPX Racute Ucircumflex -40KPX Racute Udieresis -40KPX Racute Ugrave -40KPX Racute Uhungarumlaut -40KPX Racute Umacron -40KPX Racute Uogonek -40KPX Racute Uring -40KPX Racute V -18KPX Racute W -18KPX Racute Y -18KPX Racute Yacute -18KPX Racute Ydieresis -18KPX Rcaron O -40KPX Rcaron Oacute -40KPX Rcaron Ocircumflex -40KPX Rcaron Odieresis -40KPX Rcaron Ograve -40KPX Rcaron Ohungarumlaut -40KPX Rcaron Omacron -40KPX Rcaron Oslash -40KPX Rcaron Otilde -40KPX Rcaron T -30KPX Rcaron Tcaron -30KPX Rcaron Tcommaaccent -30KPX Rcaron U -40KPX Rcaron Uacute -40KPX Rcaron Ucircumflex -40KPX Rcaron Udieresis -40KPX Rcaron Ugrave -40KPX Rcaron Uhungarumlaut -40KPX Rcaron Umacron -40KPX Rcaron Uogonek -40KPX Rcaron Uring -40KPX Rcaron V -18KPX Rcaron W -18KPX Rcaron Y -18KPX Rcaron Yacute -18KPX Rcaron Ydieresis -18KPX Rcommaaccent O -40KPX Rcommaaccent Oacute -40KPX Rcommaaccent Ocircumflex -40KPX Rcommaaccent Odieresis -40KPX Rcommaaccent Ograve -40KPX Rcommaaccent Ohungarumlaut -40KPX Rcommaaccent Omacron -40KPX Rcommaaccent Oslash -40KPX Rcommaaccent Otilde -40KPX Rcommaaccent T -30KPX Rcommaaccent Tcaron -30KPX Rcommaaccent Tcommaaccent -30KPX Rcommaaccent U -40KPX Rcommaaccent Uacute -40KPX Rcommaaccent Ucircumflex -40KPX Rcommaaccent Udieresis -40KPX Rcommaaccent Ugrave -40KPX Rcommaaccent Uhungarumlaut -40KPX Rcommaaccent Umacron -40KPX Rcommaaccent Uogonek -40KPX Rcommaaccent Uring -40KPX Rcommaaccent V -18KPX Rcommaaccent W -18KPX Rcommaaccent Y -18KPX Rcommaaccent Yacute -18KPX Rcommaaccent Ydieresis -18KPX T A -55KPX T Aacute -55KPX T Abreve -55KPX T Acircumflex -55KPX T Adieresis -55KPX T Agrave -55KPX T Amacron -55KPX T Aogonek -55KPX T Aring -55KPX T Atilde -55KPX T O -18KPX T Oacute -18KPX T Ocircumflex -18KPX T Odieresis -18KPX T Ograve -18KPX T Ohungarumlaut -18KPX T Omacron -18KPX T Oslash -18KPX T Otilde -18KPX T a -92KPX T aacute -92KPX T abreve -92KPX T acircumflex -92KPX T adieresis -92KPX T agrave -92KPX T amacron -92KPX T aogonek -92KPX T aring -92KPX T atilde -92KPX T colon -74KPX T comma -92KPX T e -92KPX T eacute -92KPX T ecaron -92KPX T ecircumflex -92KPX T edieresis -52KPX T edotaccent -92KPX T egrave -52KPX T emacron -52KPX T eogonek -92KPX T hyphen -92KPX T i -37KPX T iacute -37KPX T iogonek -37KPX T o -95KPX T oacute -95KPX T ocircumflex -95KPX T odieresis -95KPX T ograve -95KPX T ohungarumlaut -95KPX T omacron -95KPX T oslash -95KPX T otilde -95KPX T period -92KPX T r -37KPX T racute -37KPX T rcaron -37KPX T rcommaaccent -37KPX T semicolon -74KPX T u -37KPX T uacute -37KPX T ucircumflex -37KPX T udieresis -37KPX T ugrave -37KPX T uhungarumlaut -37KPX T umacron -37KPX T uogonek -37KPX T uring -37KPX T w -37KPX T y -37KPX T yacute -37KPX T ydieresis -37KPX Tcaron A -55KPX Tcaron Aacute -55KPX Tcaron Abreve -55KPX Tcaron Acircumflex -55KPX Tcaron Adieresis -55KPX Tcaron Agrave -55KPX Tcaron Amacron -55KPX Tcaron Aogonek -55KPX Tcaron Aring -55KPX Tcaron Atilde -55KPX Tcaron O -18KPX Tcaron Oacute -18KPX Tcaron Ocircumflex -18KPX Tcaron Odieresis -18KPX Tcaron Ograve -18KPX Tcaron Ohungarumlaut -18KPX Tcaron Omacron -18KPX Tcaron Oslash -18KPX Tcaron Otilde -18KPX Tcaron a -92KPX Tcaron aacute -92KPX Tcaron abreve -92KPX Tcaron acircumflex -92KPX Tcaron adieresis -92KPX Tcaron agrave -92KPX Tcaron amacron -92KPX Tcaron aogonek -92KPX Tcaron aring -92KPX Tcaron atilde -92KPX Tcaron colon -74KPX Tcaron comma -92KPX Tcaron e -92KPX Tcaron eacute -92KPX Tcaron ecaron -92KPX Tcaron ecircumflex -92KPX Tcaron edieresis -52KPX Tcaron edotaccent -92KPX Tcaron egrave -52KPX Tcaron emacron -52KPX Tcaron eogonek -92KPX Tcaron hyphen -92KPX Tcaron i -37KPX Tcaron iacute -37KPX Tcaron iogonek -37KPX Tcaron o -95KPX Tcaron oacute -95KPX Tcaron ocircumflex -95KPX Tcaron odieresis -95KPX Tcaron ograve -95KPX Tcaron ohungarumlaut -95KPX Tcaron omacron -95KPX Tcaron oslash -95KPX Tcaron otilde -95KPX Tcaron period -92KPX Tcaron r -37KPX Tcaron racute -37KPX Tcaron rcaron -37KPX Tcaron rcommaaccent -37KPX Tcaron semicolon -74KPX Tcaron u -37KPX Tcaron uacute -37KPX Tcaron ucircumflex -37KPX Tcaron udieresis -37KPX Tcaron ugrave -37KPX Tcaron uhungarumlaut -37KPX Tcaron umacron -37KPX Tcaron uogonek -37KPX Tcaron uring -37KPX Tcaron w -37KPX Tcaron y -37KPX Tcaron yacute -37KPX Tcaron ydieresis -37KPX Tcommaaccent A -55KPX Tcommaaccent Aacute -55KPX Tcommaaccent Abreve -55KPX Tcommaaccent Acircumflex -55KPX Tcommaaccent Adieresis -55KPX Tcommaaccent Agrave -55KPX Tcommaaccent Amacron -55KPX Tcommaaccent Aogonek -55KPX Tcommaaccent Aring -55KPX Tcommaaccent Atilde -55KPX Tcommaaccent O -18KPX Tcommaaccent Oacute -18KPX Tcommaaccent Ocircumflex -18KPX Tcommaaccent Odieresis -18KPX Tcommaaccent Ograve -18KPX Tcommaaccent Ohungarumlaut -18KPX Tcommaaccent Omacron -18KPX Tcommaaccent Oslash -18KPX Tcommaaccent Otilde -18KPX Tcommaaccent a -92KPX Tcommaaccent aacute -92KPX Tcommaaccent abreve -92KPX Tcommaaccent acircumflex -92KPX Tcommaaccent adieresis -92KPX Tcommaaccent agrave -92KPX Tcommaaccent amacron -92KPX Tcommaaccent aogonek -92KPX Tcommaaccent aring -92KPX Tcommaaccent atilde -92KPX Tcommaaccent colon -74KPX Tcommaaccent comma -92KPX Tcommaaccent e -92KPX Tcommaaccent eacute -92KPX Tcommaaccent ecaron -92KPX Tcommaaccent ecircumflex -92KPX Tcommaaccent edieresis -52KPX Tcommaaccent edotaccent -92KPX Tcommaaccent egrave -52KPX Tcommaaccent emacron -52KPX Tcommaaccent eogonek -92KPX Tcommaaccent hyphen -92KPX Tcommaaccent i -37KPX Tcommaaccent iacute -37KPX Tcommaaccent iogonek -37KPX Tcommaaccent o -95KPX Tcommaaccent oacute -95KPX Tcommaaccent ocircumflex -95KPX Tcommaaccent odieresis -95KPX Tcommaaccent ograve -95KPX Tcommaaccent ohungarumlaut -95KPX Tcommaaccent omacron -95KPX Tcommaaccent oslash -95KPX Tcommaaccent otilde -95KPX Tcommaaccent period -92KPX Tcommaaccent r -37KPX Tcommaaccent racute -37KPX Tcommaaccent rcaron -37KPX Tcommaaccent rcommaaccent -37KPX Tcommaaccent semicolon -74KPX Tcommaaccent u -37KPX Tcommaaccent uacute -37KPX Tcommaaccent ucircumflex -37KPX Tcommaaccent udieresis -37KPX Tcommaaccent ugrave -37KPX Tcommaaccent uhungarumlaut -37KPX Tcommaaccent umacron -37KPX Tcommaaccent uogonek -37KPX Tcommaaccent uring -37KPX Tcommaaccent w -37KPX Tcommaaccent y -37KPX Tcommaaccent yacute -37KPX Tcommaaccent ydieresis -37KPX U A -45KPX U Aacute -45KPX U Abreve -45KPX U Acircumflex -45KPX U Adieresis -45KPX U Agrave -45KPX U Amacron -45KPX U Aogonek -45KPX U Aring -45KPX U Atilde -45KPX Uacute A -45KPX Uacute Aacute -45KPX Uacute Abreve -45KPX Uacute Acircumflex -45KPX Uacute Adieresis -45KPX Uacute Agrave -45KPX Uacute Amacron -45KPX Uacute Aogonek -45KPX Uacute Aring -45KPX Uacute Atilde -45KPX Ucircumflex A -45KPX Ucircumflex Aacute -45KPX Ucircumflex Abreve -45KPX Ucircumflex Acircumflex -45KPX Ucircumflex Adieresis -45KPX Ucircumflex Agrave -45KPX Ucircumflex Amacron -45KPX Ucircumflex Aogonek -45KPX Ucircumflex Aring -45KPX Ucircumflex Atilde -45KPX Udieresis A -45KPX Udieresis Aacute -45KPX Udieresis Abreve -45KPX Udieresis Acircumflex -45KPX Udieresis Adieresis -45KPX Udieresis Agrave -45KPX Udieresis Amacron -45KPX Udieresis Aogonek -45KPX Udieresis Aring -45KPX Udieresis Atilde -45KPX Ugrave A -45KPX Ugrave Aacute -45KPX Ugrave Abreve -45KPX Ugrave Acircumflex -45KPX Ugrave Adieresis -45KPX Ugrave Agrave -45KPX Ugrave Amacron -45KPX Ugrave Aogonek -45KPX Ugrave Aring -45KPX Ugrave Atilde -45KPX Uhungarumlaut A -45KPX Uhungarumlaut Aacute -45KPX Uhungarumlaut Abreve -45KPX Uhungarumlaut Acircumflex -45KPX Uhungarumlaut Adieresis -45KPX Uhungarumlaut Agrave -45KPX Uhungarumlaut Amacron -45KPX Uhungarumlaut Aogonek -45KPX Uhungarumlaut Aring -45KPX Uhungarumlaut Atilde -45KPX Umacron A -45KPX Umacron Aacute -45KPX Umacron Abreve -45KPX Umacron Acircumflex -45KPX Umacron Adieresis -45KPX Umacron Agrave -45KPX Umacron Amacron -45KPX Umacron Aogonek -45KPX Umacron Aring -45KPX Umacron Atilde -45KPX Uogonek A -45KPX Uogonek Aacute -45KPX Uogonek Abreve -45KPX Uogonek Acircumflex -45KPX Uogonek Adieresis -45KPX Uogonek Agrave -45KPX Uogonek Amacron -45KPX Uogonek Aogonek -45KPX Uogonek Aring -45KPX Uogonek Atilde -45KPX Uring A -45KPX Uring Aacute -45KPX Uring Abreve -45KPX Uring Acircumflex -45KPX Uring Adieresis -45KPX Uring Agrave -45KPX Uring Amacron -45KPX Uring Aogonek -45KPX Uring Aring -45KPX Uring Atilde -45KPX V A -85KPX V Aacute -85KPX V Abreve -85KPX V Acircumflex -85KPX V Adieresis -85KPX V Agrave -85KPX V Amacron -85KPX V Aogonek -85KPX V Aring -85KPX V Atilde -85KPX V G -10KPX V Gbreve -10KPX V Gcommaaccent -10KPX V O -30KPX V Oacute -30KPX V Ocircumflex -30KPX V Odieresis -30KPX V Ograve -30KPX V Ohungarumlaut -30KPX V Omacron -30KPX V Oslash -30KPX V Otilde -30KPX V a -111KPX V aacute -111KPX V abreve -111KPX V acircumflex -111KPX V adieresis -111KPX V agrave -111KPX V amacron -111KPX V aogonek -111KPX V aring -111KPX V atilde -111KPX V colon -74KPX V comma -129KPX V e -111KPX V eacute -111KPX V ecaron -111KPX V ecircumflex -111KPX V edieresis -71KPX V edotaccent -111KPX V egrave -71KPX V emacron -71KPX V eogonek -111KPX V hyphen -70KPX V i -55KPX V iacute -55KPX V iogonek -55KPX V o -111KPX V oacute -111KPX V ocircumflex -111KPX V odieresis -111KPX V ograve -111KPX V ohungarumlaut -111KPX V omacron -111KPX V oslash -111KPX V otilde -111KPX V period -129KPX V semicolon -74KPX V u -55KPX V uacute -55KPX V ucircumflex -55KPX V udieresis -55KPX V ugrave -55KPX V uhungarumlaut -55KPX V umacron -55KPX V uogonek -55KPX V uring -55KPX W A -74KPX W Aacute -74KPX W Abreve -74KPX W Acircumflex -74KPX W Adieresis -74KPX W Agrave -74KPX W Amacron -74KPX W Aogonek -74KPX W Aring -74KPX W Atilde -74KPX W O -15KPX W Oacute -15KPX W Ocircumflex -15KPX W Odieresis -15KPX W Ograve -15KPX W Ohungarumlaut -15KPX W Omacron -15KPX W Oslash -15KPX W Otilde -15KPX W a -85KPX W aacute -85KPX W abreve -85KPX W acircumflex -85KPX W adieresis -85KPX W agrave -85KPX W amacron -85KPX W aogonek -85KPX W aring -85KPX W atilde -85KPX W colon -55KPX W comma -74KPX W e -90KPX W eacute -90KPX W ecaron -90KPX W ecircumflex -90KPX W edieresis -50KPX W edotaccent -90KPX W egrave -50KPX W emacron -50KPX W eogonek -90KPX W hyphen -50KPX W i -37KPX W iacute -37KPX W iogonek -37KPX W o -80KPX W oacute -80KPX W ocircumflex -80KPX W odieresis -80KPX W ograve -80KPX W ohungarumlaut -80KPX W omacron -80KPX W oslash -80KPX W otilde -80KPX W period -74KPX W semicolon -55KPX W u -55KPX W uacute -55KPX W ucircumflex -55KPX W udieresis -55KPX W ugrave -55KPX W uhungarumlaut -55KPX W umacron -55KPX W uogonek -55KPX W uring -55KPX W y -55KPX W yacute -55KPX W ydieresis -55KPX Y A -74KPX Y Aacute -74KPX Y Abreve -74KPX Y Acircumflex -74KPX Y Adieresis -74KPX Y Agrave -74KPX Y Amacron -74KPX Y Aogonek -74KPX Y Aring -74KPX Y Atilde -74KPX Y O -25KPX Y Oacute -25KPX Y Ocircumflex -25KPX Y Odieresis -25KPX Y Ograve -25KPX Y Ohungarumlaut -25KPX Y Omacron -25KPX Y Oslash -25KPX Y Otilde -25KPX Y a -92KPX Y aacute -92KPX Y abreve -92KPX Y acircumflex -92KPX Y adieresis -92KPX Y agrave -92KPX Y amacron -92KPX Y aogonek -92KPX Y aring -92KPX Y atilde -92KPX Y colon -92KPX Y comma -92KPX Y e -111KPX Y eacute -111KPX Y ecaron -111KPX Y ecircumflex -71KPX Y edieresis -71KPX Y edotaccent -111KPX Y egrave -71KPX Y emacron -71KPX Y eogonek -111KPX Y hyphen -92KPX Y i -55KPX Y iacute -55KPX Y iogonek -55KPX Y o -111KPX Y oacute -111KPX Y ocircumflex -111KPX Y odieresis -111KPX Y ograve -111KPX Y ohungarumlaut -111KPX Y omacron -111KPX Y oslash -111KPX Y otilde -111KPX Y period -74KPX Y semicolon -92KPX Y u -92KPX Y uacute -92KPX Y ucircumflex -92KPX Y udieresis -92KPX Y ugrave -92KPX Y uhungarumlaut -92KPX Y umacron -92KPX Y uogonek -92KPX Y uring -92KPX Yacute A -74KPX Yacute Aacute -74KPX Yacute Abreve -74KPX Yacute Acircumflex -74KPX Yacute Adieresis -74KPX Yacute Agrave -74KPX Yacute Amacron -74KPX Yacute Aogonek -74KPX Yacute Aring -74KPX Yacute Atilde -74KPX Yacute O -25KPX Yacute Oacute -25KPX Yacute Ocircumflex -25KPX Yacute Odieresis -25KPX Yacute Ograve -25KPX Yacute Ohungarumlaut -25KPX Yacute Omacron -25KPX Yacute Oslash -25KPX Yacute Otilde -25KPX Yacute a -92KPX Yacute aacute -92KPX Yacute abreve -92KPX Yacute acircumflex -92KPX Yacute adieresis -92KPX Yacute agrave -92KPX Yacute amacron -92KPX Yacute aogonek -92KPX Yacute aring -92KPX Yacute atilde -92KPX Yacute colon -92KPX Yacute comma -92KPX Yacute e -111KPX Yacute eacute -111KPX Yacute ecaron -111KPX Yacute ecircumflex -71KPX Yacute edieresis -71KPX Yacute edotaccent -111KPX Yacute egrave -71KPX Yacute emacron -71KPX Yacute eogonek -111KPX Yacute hyphen -92KPX Yacute i -55KPX Yacute iacute -55KPX Yacute iogonek -55KPX Yacute o -111KPX Yacute oacute -111KPX Yacute ocircumflex -111KPX Yacute odieresis -111KPX Yacute ograve -111KPX Yacute ohungarumlaut -111KPX Yacute omacron -111KPX Yacute oslash -111KPX Yacute otilde -111KPX Yacute period -74KPX Yacute semicolon -92KPX Yacute u -92KPX Yacute uacute -92KPX Yacute ucircumflex -92KPX Yacute udieresis -92KPX Yacute ugrave -92KPX Yacute uhungarumlaut -92KPX Yacute umacron -92KPX Yacute uogonek -92KPX Yacute uring -92KPX Ydieresis A -74KPX Ydieresis Aacute -74KPX Ydieresis Abreve -74KPX Ydieresis Acircumflex -74KPX Ydieresis Adieresis -74KPX Ydieresis Agrave -74KPX Ydieresis Amacron -74KPX Ydieresis Aogonek -74KPX Ydieresis Aring -74KPX Ydieresis Atilde -74KPX Ydieresis O -25KPX Ydieresis Oacute -25KPX Ydieresis Ocircumflex -25KPX Ydieresis Odieresis -25KPX Ydieresis Ograve -25KPX Ydieresis Ohungarumlaut -25KPX Ydieresis Omacron -25KPX Ydieresis Oslash -25KPX Ydieresis Otilde -25KPX Ydieresis a -92KPX Ydieresis aacute -92KPX Ydieresis abreve -92KPX Ydieresis acircumflex -92KPX Ydieresis adieresis -92KPX Ydieresis agrave -92KPX Ydieresis amacron -92KPX Ydieresis aogonek -92KPX Ydieresis aring -92KPX Ydieresis atilde -92KPX Ydieresis colon -92KPX Ydieresis comma -92KPX Ydieresis e -111KPX Ydieresis eacute -111KPX Ydieresis ecaron -111KPX Ydieresis ecircumflex -71KPX Ydieresis edieresis -71KPX Ydieresis edotaccent -111KPX Ydieresis egrave -71KPX Ydieresis emacron -71KPX Ydieresis eogonek -111KPX Ydieresis hyphen -92KPX Ydieresis i -55KPX Ydieresis iacute -55KPX Ydieresis iogonek -55KPX Ydieresis o -111KPX Ydieresis oacute -111KPX Ydieresis ocircumflex -111KPX Ydieresis odieresis -111KPX Ydieresis ograve -111KPX Ydieresis ohungarumlaut -111KPX Ydieresis omacron -111KPX Ydieresis oslash -111KPX Ydieresis otilde -111KPX Ydieresis period -74KPX Ydieresis semicolon -92KPX Ydieresis u -92KPX Ydieresis uacute -92KPX Ydieresis ucircumflex -92KPX Ydieresis udieresis -92KPX Ydieresis ugrave -92KPX Ydieresis uhungarumlaut -92KPX Ydieresis umacron -92KPX Ydieresis uogonek -92KPX Ydieresis uring -92KPX b b -10KPX b period -40KPX b u -20KPX b uacute -20KPX b ucircumflex -20KPX b udieresis -20KPX b ugrave -20KPX b uhungarumlaut -20KPX b umacron -20KPX b uogonek -20KPX b uring -20KPX c h -10KPX c k -10KPX c kcommaaccent -10KPX cacute h -10KPX cacute k -10KPX cacute kcommaaccent -10KPX ccaron h -10KPX ccaron k -10KPX ccaron kcommaaccent -10KPX ccedilla h -10KPX ccedilla k -10KPX ccedilla kcommaaccent -10KPX comma quotedblright -95KPX comma quoteright -95KPX e b -10KPX eacute b -10KPX ecaron b -10KPX ecircumflex b -10KPX edieresis b -10KPX edotaccent b -10KPX egrave b -10KPX emacron b -10KPX eogonek b -10KPX f comma -10KPX f dotlessi -30KPX f e -10KPX f eacute -10KPX f edotaccent -10KPX f eogonek -10KPX f f -18KPX f o -10KPX f oacute -10KPX f ocircumflex -10KPX f ograve -10KPX f ohungarumlaut -10KPX f oslash -10KPX f otilde -10KPX f period -10KPX f quoteright 55KPX k e -30KPX k eacute -30KPX k ecaron -30KPX k ecircumflex -30KPX k edieresis -30KPX k edotaccent -30KPX k egrave -30KPX k emacron -30KPX k eogonek -30KPX k o -10KPX k oacute -10KPX k ocircumflex -10KPX k odieresis -10KPX k ograve -10KPX k ohungarumlaut -10KPX k omacron -10KPX k oslash -10KPX k otilde -10KPX kcommaaccent e -30KPX kcommaaccent eacute -30KPX kcommaaccent ecaron -30KPX kcommaaccent ecircumflex -30KPX kcommaaccent edieresis -30KPX kcommaaccent edotaccent -30KPX kcommaaccent egrave -30KPX kcommaaccent emacron -30KPX kcommaaccent eogonek -30KPX kcommaaccent o -10KPX kcommaaccent oacute -10KPX kcommaaccent ocircumflex -10KPX kcommaaccent odieresis -10KPX kcommaaccent ograve -10KPX kcommaaccent ohungarumlaut -10KPX kcommaaccent omacron -10KPX kcommaaccent oslash -10KPX kcommaaccent otilde -10KPX n v -40KPX nacute v -40KPX ncaron v -40KPX ncommaaccent v -40KPX ntilde v -40KPX o v -15KPX o w -25KPX o x -10KPX o y -10KPX o yacute -10KPX o ydieresis -10KPX oacute v -15KPX oacute w -25KPX oacute x -10KPX oacute y -10KPX oacute yacute -10KPX oacute ydieresis -10KPX ocircumflex v -15KPX ocircumflex w -25KPX ocircumflex x -10KPX ocircumflex y -10KPX ocircumflex yacute -10KPX ocircumflex ydieresis -10KPX odieresis v -15KPX odieresis w -25KPX odieresis x -10KPX odieresis y -10KPX odieresis yacute -10KPX odieresis ydieresis -10KPX ograve v -15KPX ograve w -25KPX ograve x -10KPX ograve y -10KPX ograve yacute -10KPX ograve ydieresis -10KPX ohungarumlaut v -15KPX ohungarumlaut w -25KPX ohungarumlaut x -10KPX ohungarumlaut y -10KPX ohungarumlaut yacute -10KPX ohungarumlaut ydieresis -10KPX omacron v -15KPX omacron w -25KPX omacron x -10KPX omacron y -10KPX omacron yacute -10KPX omacron ydieresis -10KPX oslash v -15KPX oslash w -25KPX oslash x -10KPX oslash y -10KPX oslash yacute -10KPX oslash ydieresis -10KPX otilde v -15KPX otilde w -25KPX otilde x -10KPX otilde y -10KPX otilde yacute -10KPX otilde ydieresis -10KPX period quotedblright -95KPX period quoteright -95KPX quoteleft quoteleft -74KPX quoteright d -15KPX quoteright dcroat -15KPX quoteright quoteright -74KPX quoteright r -15KPX quoteright racute -15KPX quoteright rcaron -15KPX quoteright rcommaaccent -15KPX quoteright s -74KPX quoteright sacute -74KPX quoteright scaron -74KPX quoteright scedilla -74KPX quoteright scommaaccent -74KPX quoteright space -74KPX quoteright t -37KPX quoteright tcommaaccent -37KPX quoteright v -15KPX r comma -65KPX r period -65KPX racute comma -65KPX racute period -65KPX rcaron comma -65KPX rcaron period -65KPX rcommaaccent comma -65KPX rcommaaccent period -65KPX space A -37KPX space Aacute -37KPX space Abreve -37KPX space Acircumflex -37KPX space Adieresis -37KPX space Agrave -37KPX space Amacron -37KPX space Aogonek -37KPX space Aring -37KPX space Atilde -37KPX space V -70KPX space W -70KPX space Y -70KPX space Yacute -70KPX space Ydieresis -70KPX v comma -37KPX v e -15KPX v eacute -15KPX v ecaron -15KPX v ecircumflex -15KPX v edieresis -15KPX v edotaccent -15KPX v egrave -15KPX v emacron -15KPX v eogonek -15KPX v o -15KPX v oacute -15KPX v ocircumflex -15KPX v odieresis -15KPX v ograve -15KPX v ohungarumlaut -15KPX v omacron -15KPX v oslash -15KPX v otilde -15KPX v period -37KPX w a -10KPX w aacute -10KPX w abreve -10KPX w acircumflex -10KPX w adieresis -10KPX w agrave -10KPX w amacron -10KPX w aogonek -10KPX w aring -10KPX w atilde -10KPX w comma -37KPX w e -10KPX w eacute -10KPX w ecaron -10KPX w ecircumflex -10KPX w edieresis -10KPX w edotaccent -10KPX w egrave -10KPX w emacron -10KPX w eogonek -10KPX w o -15KPX w oacute -15KPX w ocircumflex -15KPX w odieresis -15KPX w ograve -15KPX w ohungarumlaut -15KPX w omacron -15KPX w oslash -15KPX w otilde -15KPX w period -37KPX x e -10KPX x eacute -10KPX x ecaron -10KPX x ecircumflex -10KPX x edieresis -10KPX x edotaccent -10KPX x egrave -10KPX x emacron -10KPX x eogonek -10KPX y comma -37KPX y period -37KPX yacute comma -37KPX yacute period -37KPX ydieresis comma -37KPX ydieresis period -37EndKernPairsEndKernDataEndFontMetrics'</body><body package="Type1">timesItalic	"from http://www.adobe.com/devnet/font.html "	&lt;font: #'Times-Italic'&gt;	^self		windowsName: 'Times New Roman'		afm: 'StartFontMetrics 4.1Comment Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.Comment Creation Date: Thu May  1 12:56:55 1997Comment UniqueID 43067Comment VMusage 47727 58752FontName Times-ItalicFullName Times ItalicFamilyName TimesWeight MediumItalicAngle -15.5IsFixedPitch falseCharacterSet ExtendedRomanFontBBox -169 -217 1010 883 UnderlinePosition -100UnderlineThickness 50Version 002.000Notice Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype-Hell AG and/or its subsidiaries.EncodingScheme AdobeStandardEncodingCapHeight 653XHeight 441Ascender 683Descender -217StdHW 32StdVW 76StartCharMetrics 315C 32 ; WX 250 ; N space ; B 0 0 0 0 ;C 33 ; WX 333 ; N exclam ; B 39 -11 302 667 ;C 34 ; WX 420 ; N quotedbl ; B 144 421 432 666 ;C 35 ; WX 500 ; N numbersign ; B 2 0 540 676 ;C 36 ; WX 500 ; N dollar ; B 31 -89 497 731 ;C 37 ; WX 833 ; N percent ; B 79 -13 790 676 ;C 38 ; WX 778 ; N ampersand ; B 76 -18 723 666 ;C 39 ; WX 333 ; N quoteright ; B 151 436 290 666 ;C 40 ; WX 333 ; N parenleft ; B 42 -181 315 669 ;C 41 ; WX 333 ; N parenright ; B 16 -180 289 669 ;C 42 ; WX 500 ; N asterisk ; B 128 255 492 666 ;C 43 ; WX 675 ; N plus ; B 86 0 590 506 ;C 44 ; WX 250 ; N comma ; B -4 -129 135 101 ;C 45 ; WX 333 ; N hyphen ; B 49 192 282 255 ;C 46 ; WX 250 ; N period ; B 27 -11 138 100 ;C 47 ; WX 278 ; N slash ; B -65 -18 386 666 ;C 48 ; WX 500 ; N zero ; B 32 -7 497 676 ;C 49 ; WX 500 ; N one ; B 49 0 409 676 ;C 50 ; WX 500 ; N two ; B 12 0 452 676 ;C 51 ; WX 500 ; N three ; B 15 -7 465 676 ;C 52 ; WX 500 ; N four ; B 1 0 479 676 ;C 53 ; WX 500 ; N five ; B 15 -7 491 666 ;C 54 ; WX 500 ; N six ; B 30 -7 521 686 ;C 55 ; WX 500 ; N seven ; B 75 -8 537 666 ;C 56 ; WX 500 ; N eight ; B 30 -7 493 676 ;C 57 ; WX 500 ; N nine ; B 23 -17 492 676 ;C 58 ; WX 333 ; N colon ; B 50 -11 261 441 ;C 59 ; WX 333 ; N semicolon ; B 27 -129 261 441 ;C 60 ; WX 675 ; N less ; B 84 -8 592 514 ;C 61 ; WX 675 ; N equal ; B 86 120 590 386 ;C 62 ; WX 675 ; N greater ; B 84 -8 592 514 ;C 63 ; WX 500 ; N question ; B 132 -12 472 664 ;C 64 ; WX 920 ; N at ; B 118 -18 806 666 ;C 65 ; WX 611 ; N A ; B -51 0 564 668 ;C 66 ; WX 611 ; N B ; B -8 0 588 653 ;C 67 ; WX 667 ; N C ; B 66 -18 689 666 ;C 68 ; WX 722 ; N D ; B -8 0 700 653 ;C 69 ; WX 611 ; N E ; B -1 0 634 653 ;C 70 ; WX 611 ; N F ; B 8 0 645 653 ;C 71 ; WX 722 ; N G ; B 52 -18 722 666 ;C 72 ; WX 722 ; N H ; B -8 0 767 653 ;C 73 ; WX 333 ; N I ; B -8 0 384 653 ;C 74 ; WX 444 ; N J ; B -6 -18 491 653 ;C 75 ; WX 667 ; N K ; B 7 0 722 653 ;C 76 ; WX 556 ; N L ; B -8 0 559 653 ;C 77 ; WX 833 ; N M ; B -18 0 873 653 ;C 78 ; WX 667 ; N N ; B -20 -15 727 653 ;C 79 ; WX 722 ; N O ; B 60 -18 699 666 ;C 80 ; WX 611 ; N P ; B 0 0 605 653 ;C 81 ; WX 722 ; N Q ; B 59 -182 699 666 ;C 82 ; WX 611 ; N R ; B -13 0 588 653 ;C 83 ; WX 500 ; N S ; B 17 -18 508 667 ;C 84 ; WX 556 ; N T ; B 59 0 633 653 ;C 85 ; WX 722 ; N U ; B 102 -18 765 653 ;C 86 ; WX 611 ; N V ; B 76 -18 688 653 ;C 87 ; WX 833 ; N W ; B 71 -18 906 653 ;C 88 ; WX 611 ; N X ; B -29 0 655 653 ;C 89 ; WX 556 ; N Y ; B 78 0 633 653 ;C 90 ; WX 556 ; N Z ; B -6 0 606 653 ;C 91 ; WX 389 ; N bracketleft ; B 21 -153 391 663 ;C 92 ; WX 278 ; N backslash ; B -41 -18 319 666 ;C 93 ; WX 389 ; N bracketright ; B 12 -153 382 663 ;C 94 ; WX 422 ; N asciicircum ; B 0 301 422 666 ;C 95 ; WX 500 ; N underscore ; B 0 -125 500 -75 ;C 96 ; WX 333 ; N quoteleft ; B 171 436 310 666 ;C 97 ; WX 500 ; N a ; B 17 -11 476 441 ;C 98 ; WX 500 ; N b ; B 23 -11 473 683 ;C 99 ; WX 444 ; N c ; B 30 -11 425 441 ;C 100 ; WX 500 ; N d ; B 15 -13 527 683 ;C 101 ; WX 444 ; N e ; B 31 -11 412 441 ;C 102 ; WX 278 ; N f ; B -147 -207 424 678 ; L i fi ; L l fl ;C 103 ; WX 500 ; N g ; B 8 -206 472 441 ;C 104 ; WX 500 ; N h ; B 19 -9 478 683 ;C 105 ; WX 278 ; N i ; B 49 -11 264 654 ;C 106 ; WX 278 ; N j ; B -124 -207 276 654 ;C 107 ; WX 444 ; N k ; B 14 -11 461 683 ;C 108 ; WX 278 ; N l ; B 41 -11 279 683 ;C 109 ; WX 722 ; N m ; B 12 -9 704 441 ;C 110 ; WX 500 ; N n ; B 14 -9 474 441 ;C 111 ; WX 500 ; N o ; B 27 -11 468 441 ;C 112 ; WX 500 ; N p ; B -75 -205 469 441 ;C 113 ; WX 500 ; N q ; B 25 -209 483 441 ;C 114 ; WX 389 ; N r ; B 45 0 412 441 ;C 115 ; WX 389 ; N s ; B 16 -13 366 442 ;C 116 ; WX 278 ; N t ; B 37 -11 296 546 ;C 117 ; WX 500 ; N u ; B 42 -11 475 441 ;C 118 ; WX 444 ; N v ; B 21 -18 426 441 ;C 119 ; WX 667 ; N w ; B 16 -18 648 441 ;C 120 ; WX 444 ; N x ; B -27 -11 447 441 ;C 121 ; WX 444 ; N y ; B -24 -206 426 441 ;C 122 ; WX 389 ; N z ; B -2 -81 380 428 ;C 123 ; WX 400 ; N braceleft ; B 51 -177 407 687 ;C 124 ; WX 275 ; N bar ; B 105 -217 171 783 ;C 125 ; WX 400 ; N braceright ; B -7 -177 349 687 ;C 126 ; WX 541 ; N asciitilde ; B 40 183 502 323 ;C 161 ; WX 389 ; N exclamdown ; B 59 -205 322 473 ;C 162 ; WX 500 ; N cent ; B 77 -143 472 560 ;C 163 ; WX 500 ; N sterling ; B 10 -6 517 670 ;C 164 ; WX 167 ; N fraction ; B -169 -10 337 676 ;C 165 ; WX 500 ; N yen ; B 27 0 603 653 ;C 166 ; WX 500 ; N florin ; B 25 -182 507 682 ;C 167 ; WX 500 ; N section ; B 53 -162 461 666 ;C 168 ; WX 500 ; N currency ; B -22 53 522 597 ;C 169 ; WX 214 ; N quotesingle ; B 132 421 241 666 ;C 170 ; WX 556 ; N quotedblleft ; B 166 436 514 666 ;C 171 ; WX 500 ; N guillemotleft ; B 53 37 445 403 ;C 172 ; WX 333 ; N guilsinglleft ; B 51 37 281 403 ;C 173 ; WX 333 ; N guilsinglright ; B 52 37 282 403 ;C 174 ; WX 500 ; N fi ; B -141 -207 481 681 ;C 175 ; WX 500 ; N fl ; B -141 -204 518 682 ;C 177 ; WX 500 ; N endash ; B -6 197 505 243 ;C 178 ; WX 500 ; N dagger ; B 101 -159 488 666 ;C 179 ; WX 500 ; N daggerdbl ; B 22 -143 491 666 ;C 180 ; WX 250 ; N periodcentered ; B 70 199 181 310 ;C 182 ; WX 523 ; N paragraph ; B 55 -123 616 653 ;C 183 ; WX 350 ; N bullet ; B 40 191 310 461 ;C 184 ; WX 333 ; N quotesinglbase ; B 44 -129 183 101 ;C 185 ; WX 556 ; N quotedblbase ; B 57 -129 405 101 ;C 186 ; WX 556 ; N quotedblright ; B 151 436 499 666 ;C 187 ; WX 500 ; N guillemotright ; B 55 37 447 403 ;C 188 ; WX 889 ; N ellipsis ; B 57 -11 762 100 ;C 189 ; WX 1000 ; N perthousand ; B 25 -19 1010 706 ;C 191 ; WX 500 ; N questiondown ; B 28 -205 368 471 ;C 193 ; WX 333 ; N grave ; B 121 492 311 664 ;C 194 ; WX 333 ; N acute ; B 180 494 403 664 ;C 195 ; WX 333 ; N circumflex ; B 91 492 385 661 ;C 196 ; WX 333 ; N tilde ; B 100 517 427 624 ;C 197 ; WX 333 ; N macron ; B 99 532 411 583 ;C 198 ; WX 333 ; N breve ; B 117 492 418 650 ;C 199 ; WX 333 ; N dotaccent ; B 207 548 305 646 ;C 200 ; WX 333 ; N dieresis ; B 107 548 405 646 ;C 202 ; WX 333 ; N ring ; B 155 492 355 691 ;C 203 ; WX 333 ; N cedilla ; B -30 -217 182 0 ;C 205 ; WX 333 ; N hungarumlaut ; B 93 494 486 664 ;C 206 ; WX 333 ; N ogonek ; B 20 -169 203 40 ;C 207 ; WX 333 ; N caron ; B 121 492 426 661 ;C 208 ; WX 889 ; N emdash ; B -6 197 894 243 ;C 225 ; WX 889 ; N AE ; B -27 0 911 653 ;C 227 ; WX 276 ; N ordfeminine ; B 42 406 352 676 ;C 232 ; WX 556 ; N Lslash ; B -8 0 559 653 ;C 233 ; WX 722 ; N Oslash ; B 60 -105 699 722 ;C 234 ; WX 944 ; N OE ; B 49 -8 964 666 ;C 235 ; WX 310 ; N ordmasculine ; B 67 406 362 676 ;C 241 ; WX 667 ; N ae ; B 23 -11 640 441 ;C 245 ; WX 278 ; N dotlessi ; B 49 -11 235 441 ;C 248 ; WX 278 ; N lslash ; B 41 -11 312 683 ;C 249 ; WX 500 ; N oslash ; B 28 -135 469 554 ;C 250 ; WX 667 ; N oe ; B 20 -12 646 441 ;C 251 ; WX 500 ; N germandbls ; B -168 -207 493 679 ;C -1 ; WX 333 ; N Idieresis ; B -8 0 435 818 ;C -1 ; WX 444 ; N eacute ; B 31 -11 459 664 ;C -1 ; WX 500 ; N abreve ; B 17 -11 502 650 ;C -1 ; WX 500 ; N uhungarumlaut ; B 42 -11 580 664 ;C -1 ; WX 444 ; N ecaron ; B 31 -11 482 661 ;C -1 ; WX 556 ; N Ydieresis ; B 78 0 633 818 ;C -1 ; WX 675 ; N divide ; B 86 -11 590 517 ;C -1 ; WX 556 ; N Yacute ; B 78 0 633 876 ;C -1 ; WX 611 ; N Acircumflex ; B -51 0 564 873 ;C -1 ; WX 500 ; N aacute ; B 17 -11 487 664 ;C -1 ; WX 722 ; N Ucircumflex ; B 102 -18 765 873 ;C -1 ; WX 444 ; N yacute ; B -24 -206 459 664 ;C -1 ; WX 389 ; N scommaaccent ; B 16 -217 366 442 ;C -1 ; WX 444 ; N ecircumflex ; B 31 -11 441 661 ;C -1 ; WX 722 ; N Uring ; B 102 -18 765 883 ;C -1 ; WX 722 ; N Udieresis ; B 102 -18 765 818 ;C -1 ; WX 500 ; N aogonek ; B 17 -169 476 441 ;C -1 ; WX 722 ; N Uacute ; B 102 -18 765 876 ;C -1 ; WX 500 ; N uogonek ; B 42 -169 477 441 ;C -1 ; WX 611 ; N Edieresis ; B -1 0 634 818 ;C -1 ; WX 722 ; N Dcroat ; B -8 0 700 653 ;C -1 ; WX 250 ; N commaaccent ; B 8 -217 133 -50 ;C -1 ; WX 760 ; N copyright ; B 41 -18 719 666 ;C -1 ; WX 611 ; N Emacron ; B -1 0 634 795 ;C -1 ; WX 444 ; N ccaron ; B 30 -11 482 661 ;C -1 ; WX 500 ; N aring ; B 17 -11 476 691 ;C -1 ; WX 667 ; N Ncommaaccent ; B -20 -187 727 653 ;C -1 ; WX 278 ; N lacute ; B 41 -11 395 876 ;C -1 ; WX 500 ; N agrave ; B 17 -11 476 664 ;C -1 ; WX 556 ; N Tcommaaccent ; B 59 -217 633 653 ;C -1 ; WX 667 ; N Cacute ; B 66 -18 690 876 ;C -1 ; WX 500 ; N atilde ; B 17 -11 511 624 ;C -1 ; WX 611 ; N Edotaccent ; B -1 0 634 818 ;C -1 ; WX 389 ; N scaron ; B 16 -13 454 661 ;C -1 ; WX 389 ; N scedilla ; B 16 -217 366 442 ;C -1 ; WX 278 ; N iacute ; B 49 -11 355 664 ;C -1 ; WX 471 ; N lozenge ; B 13 0 459 724 ;C -1 ; WX 611 ; N Rcaron ; B -13 0 588 873 ;C -1 ; WX 722 ; N Gcommaaccent ; B 52 -217 722 666 ;C -1 ; WX 500 ; N ucircumflex ; B 42 -11 475 661 ;C -1 ; WX 500 ; N acircumflex ; B 17 -11 476 661 ;C -1 ; WX 611 ; N Amacron ; B -51 0 564 795 ;C -1 ; WX 389 ; N rcaron ; B 45 0 434 661 ;C -1 ; WX 444 ; N ccedilla ; B 30 -217 425 441 ;C -1 ; WX 556 ; N Zdotaccent ; B -6 0 606 818 ;C -1 ; WX 611 ; N Thorn ; B 0 0 569 653 ;C -1 ; WX 722 ; N Omacron ; B 60 -18 699 795 ;C -1 ; WX 611 ; N Racute ; B -13 0 588 876 ;C -1 ; WX 500 ; N Sacute ; B 17 -18 508 876 ;C -1 ; WX 544 ; N dcaron ; B 15 -13 658 683 ;C -1 ; WX 722 ; N Umacron ; B 102 -18 765 795 ;C -1 ; WX 500 ; N uring ; B 42 -11 475 691 ;C -1 ; WX 300 ; N threesuperior ; B 43 268 339 676 ;C -1 ; WX 722 ; N Ograve ; B 60 -18 699 876 ;C -1 ; WX 611 ; N Agrave ; B -51 0 564 876 ;C -1 ; WX 611 ; N Abreve ; B -51 0 564 862 ;C -1 ; WX 675 ; N multiply ; B 93 8 582 497 ;C -1 ; WX 500 ; N uacute ; B 42 -11 477 664 ;C -1 ; WX 556 ; N Tcaron ; B 59 0 633 873 ;C -1 ; WX 476 ; N partialdiff ; B 17 -38 459 710 ;C -1 ; WX 444 ; N ydieresis ; B -24 -206 441 606 ;C -1 ; WX 667 ; N Nacute ; B -20 -15 727 876 ;C -1 ; WX 278 ; N icircumflex ; B 33 -11 327 661 ;C -1 ; WX 611 ; N Ecircumflex ; B -1 0 634 873 ;C -1 ; WX 500 ; N adieresis ; B 17 -11 489 606 ;C -1 ; WX 444 ; N edieresis ; B 31 -11 451 606 ;C -1 ; WX 444 ; N cacute ; B 30 -11 459 664 ;C -1 ; WX 500 ; N nacute ; B 14 -9 477 664 ;C -1 ; WX 500 ; N umacron ; B 42 -11 485 583 ;C -1 ; WX 667 ; N Ncaron ; B -20 -15 727 873 ;C -1 ; WX 333 ; N Iacute ; B -8 0 433 876 ;C -1 ; WX 675 ; N plusminus ; B 86 0 590 506 ;C -1 ; WX 275 ; N brokenbar ; B 105 -142 171 708 ;C -1 ; WX 760 ; N registered ; B 41 -18 719 666 ;C -1 ; WX 722 ; N Gbreve ; B 52 -18 722 862 ;C -1 ; WX 333 ; N Idotaccent ; B -8 0 384 818 ;C -1 ; WX 600 ; N summation ; B 15 -10 585 706 ;C -1 ; WX 611 ; N Egrave ; B -1 0 634 876 ;C -1 ; WX 389 ; N racute ; B 45 0 431 664 ;C -1 ; WX 500 ; N omacron ; B 27 -11 495 583 ;C -1 ; WX 556 ; N Zacute ; B -6 0 606 876 ;C -1 ; WX 556 ; N Zcaron ; B -6 0 606 873 ;C -1 ; WX 549 ; N greaterequal ; B 26 0 523 658 ;C -1 ; WX 722 ; N Eth ; B -8 0 700 653 ;C -1 ; WX 667 ; N Ccedilla ; B 66 -217 689 666 ;C -1 ; WX 278 ; N lcommaaccent ; B 22 -217 279 683 ;C -1 ; WX 300 ; N tcaron ; B 37 -11 407 681 ;C -1 ; WX 444 ; N eogonek ; B 31 -169 412 441 ;C -1 ; WX 722 ; N Uogonek ; B 102 -184 765 653 ;C -1 ; WX 611 ; N Aacute ; B -51 0 564 876 ;C -1 ; WX 611 ; N Adieresis ; B -51 0 564 818 ;C -1 ; WX 444 ; N egrave ; B 31 -11 412 664 ;C -1 ; WX 389 ; N zacute ; B -2 -81 431 664 ;C -1 ; WX 278 ; N iogonek ; B 49 -169 264 654 ;C -1 ; WX 722 ; N Oacute ; B 60 -18 699 876 ;C -1 ; WX 500 ; N oacute ; B 27 -11 487 664 ;C -1 ; WX 500 ; N amacron ; B 17 -11 495 583 ;C -1 ; WX 389 ; N sacute ; B 16 -13 431 664 ;C -1 ; WX 278 ; N idieresis ; B 49 -11 352 606 ;C -1 ; WX 722 ; N Ocircumflex ; B 60 -18 699 873 ;C -1 ; WX 722 ; N Ugrave ; B 102 -18 765 876 ;C -1 ; WX 612 ; N Delta ; B 6 0 608 688 ;C -1 ; WX 500 ; N thorn ; B -75 -205 469 683 ;C -1 ; WX 300 ; N twosuperior ; B 33 271 324 676 ;C -1 ; WX 722 ; N Odieresis ; B 60 -18 699 818 ;C -1 ; WX 500 ; N mu ; B -30 -209 497 428 ;C -1 ; WX 278 ; N igrave ; B 49 -11 284 664 ;C -1 ; WX 500 ; N ohungarumlaut ; B 27 -11 590 664 ;C -1 ; WX 611 ; N Eogonek ; B -1 -169 634 653 ;C -1 ; WX 500 ; N dcroat ; B 15 -13 572 683 ;C -1 ; WX 750 ; N threequarters ; B 23 -10 736 676 ;C -1 ; WX 500 ; N Scedilla ; B 17 -217 508 667 ;C -1 ; WX 300 ; N lcaron ; B 41 -11 407 683 ;C -1 ; WX 667 ; N Kcommaaccent ; B 7 -217 722 653 ;C -1 ; WX 556 ; N Lacute ; B -8 0 559 876 ;C -1 ; WX 980 ; N trademark ; B 30 247 957 653 ;C -1 ; WX 444 ; N edotaccent ; B 31 -11 412 606 ;C -1 ; WX 333 ; N Igrave ; B -8 0 384 876 ;C -1 ; WX 333 ; N Imacron ; B -8 0 441 795 ;C -1 ; WX 611 ; N Lcaron ; B -8 0 586 653 ;C -1 ; WX 750 ; N onehalf ; B 34 -10 749 676 ;C -1 ; WX 549 ; N lessequal ; B 26 0 523 658 ;C -1 ; WX 500 ; N ocircumflex ; B 27 -11 468 661 ;C -1 ; WX 500 ; N ntilde ; B 14 -9 476 624 ;C -1 ; WX 722 ; N Uhungarumlaut ; B 102 -18 765 876 ;C -1 ; WX 611 ; N Eacute ; B -1 0 634 876 ;C -1 ; WX 444 ; N emacron ; B 31 -11 457 583 ;C -1 ; WX 500 ; N gbreve ; B 8 -206 487 650 ;C -1 ; WX 750 ; N onequarter ; B 33 -10 736 676 ;C -1 ; WX 500 ; N Scaron ; B 17 -18 520 873 ;C -1 ; WX 500 ; N Scommaaccent ; B 17 -217 508 667 ;C -1 ; WX 722 ; N Ohungarumlaut ; B 60 -18 699 876 ;C -1 ; WX 400 ; N degree ; B 101 390 387 676 ;C -1 ; WX 500 ; N ograve ; B 27 -11 468 664 ;C -1 ; WX 667 ; N Ccaron ; B 66 -18 689 873 ;C -1 ; WX 500 ; N ugrave ; B 42 -11 475 664 ;C -1 ; WX 453 ; N radical ; B 2 -60 452 768 ;C -1 ; WX 722 ; N Dcaron ; B -8 0 700 873 ;C -1 ; WX 389 ; N rcommaaccent ; B -3 -217 412 441 ;C -1 ; WX 667 ; N Ntilde ; B -20 -15 727 836 ;C -1 ; WX 500 ; N otilde ; B 27 -11 496 624 ;C -1 ; WX 611 ; N Rcommaaccent ; B -13 -187 588 653 ;C -1 ; WX 556 ; N Lcommaaccent ; B -8 -217 559 653 ;C -1 ; WX 611 ; N Atilde ; B -51 0 566 836 ;C -1 ; WX 611 ; N Aogonek ; B -51 -169 566 668 ;C -1 ; WX 611 ; N Aring ; B -51 0 564 883 ;C -1 ; WX 722 ; N Otilde ; B 60 -18 699 836 ;C -1 ; WX 389 ; N zdotaccent ; B -2 -81 380 606 ;C -1 ; WX 611 ; N Ecaron ; B -1 0 634 873 ;C -1 ; WX 333 ; N Iogonek ; B -8 -169 384 653 ;C -1 ; WX 444 ; N kcommaaccent ; B 14 -187 461 683 ;C -1 ; WX 675 ; N minus ; B 86 220 590 286 ;C -1 ; WX 333 ; N Icircumflex ; B -8 0 425 873 ;C -1 ; WX 500 ; N ncaron ; B 14 -9 510 661 ;C -1 ; WX 278 ; N tcommaaccent ; B 2 -217 296 546 ;C -1 ; WX 675 ; N logicalnot ; B 86 108 590 386 ;C -1 ; WX 500 ; N odieresis ; B 27 -11 489 606 ;C -1 ; WX 500 ; N udieresis ; B 42 -11 479 606 ;C -1 ; WX 549 ; N notequal ; B 12 -29 537 541 ;C -1 ; WX 500 ; N gcommaaccent ; B 8 -206 472 706 ;C -1 ; WX 500 ; N eth ; B 27 -11 482 683 ;C -1 ; WX 389 ; N zcaron ; B -2 -81 434 661 ;C -1 ; WX 500 ; N ncommaaccent ; B 14 -187 474 441 ;C -1 ; WX 300 ; N onesuperior ; B 43 271 284 676 ;C -1 ; WX 278 ; N imacron ; B 46 -11 311 583 ;C -1 ; WX 500 ; N Euro ; B 0 0 0 0 ;EndCharMetricsStartKernDataStartKernPairs 2321KPX A C -30KPX A Cacute -30KPX A Ccaron -30KPX A Ccedilla -30KPX A G -35KPX A Gbreve -35KPX A Gcommaaccent -35KPX A O -40KPX A Oacute -40KPX A Ocircumflex -40KPX A Odieresis -40KPX A Ograve -40KPX A Ohungarumlaut -40KPX A Omacron -40KPX A Oslash -40KPX A Otilde -40KPX A Q -40KPX A T -37KPX A Tcaron -37KPX A Tcommaaccent -37KPX A U -50KPX A Uacute -50KPX A Ucircumflex -50KPX A Udieresis -50KPX A Ugrave -50KPX A Uhungarumlaut -50KPX A Umacron -50KPX A Uogonek -50KPX A Uring -50KPX A V -105KPX A W -95KPX A Y -55KPX A Yacute -55KPX A Ydieresis -55KPX A quoteright -37KPX A u -20KPX A uacute -20KPX A ucircumflex -20KPX A udieresis -20KPX A ugrave -20KPX A uhungarumlaut -20KPX A umacron -20KPX A uogonek -20KPX A uring -20KPX A v -55KPX A w -55KPX A y -55KPX A yacute -55KPX A ydieresis -55KPX Aacute C -30KPX Aacute Cacute -30KPX Aacute Ccaron -30KPX Aacute Ccedilla -30KPX Aacute G -35KPX Aacute Gbreve -35KPX Aacute Gcommaaccent -35KPX Aacute O -40KPX Aacute Oacute -40KPX Aacute Ocircumflex -40KPX Aacute Odieresis -40KPX Aacute Ograve -40KPX Aacute Ohungarumlaut -40KPX Aacute Omacron -40KPX Aacute Oslash -40KPX Aacute Otilde -40KPX Aacute Q -40KPX Aacute T -37KPX Aacute Tcaron -37KPX Aacute Tcommaaccent -37KPX Aacute U -50KPX Aacute Uacute -50KPX Aacute Ucircumflex -50KPX Aacute Udieresis -50KPX Aacute Ugrave -50KPX Aacute Uhungarumlaut -50KPX Aacute Umacron -50KPX Aacute Uogonek -50KPX Aacute Uring -50KPX Aacute V -105KPX Aacute W -95KPX Aacute Y -55KPX Aacute Yacute -55KPX Aacute Ydieresis -55KPX Aacute quoteright -37KPX Aacute u -20KPX Aacute uacute -20KPX Aacute ucircumflex -20KPX Aacute udieresis -20KPX Aacute ugrave -20KPX Aacute uhungarumlaut -20KPX Aacute umacron -20KPX Aacute uogonek -20KPX Aacute uring -20KPX Aacute v -55KPX Aacute w -55KPX Aacute y -55KPX Aacute yacute -55KPX Aacute ydieresis -55KPX Abreve C -30KPX Abreve Cacute -30KPX Abreve Ccaron -30KPX Abreve Ccedilla -30KPX Abreve G -35KPX Abreve Gbreve -35KPX Abreve Gcommaaccent -35KPX Abreve O -40KPX Abreve Oacute -40KPX Abreve Ocircumflex -40KPX Abreve Odieresis -40KPX Abreve Ograve -40KPX Abreve Ohungarumlaut -40KPX Abreve Omacron -40KPX Abreve Oslash -40KPX Abreve Otilde -40KPX Abreve Q -40KPX Abreve T -37KPX Abreve Tcaron -37KPX Abreve Tcommaaccent -37KPX Abreve U -50KPX Abreve Uacute -50KPX Abreve Ucircumflex -50KPX Abreve Udieresis -50KPX Abreve Ugrave -50KPX Abreve Uhungarumlaut -50KPX Abreve Umacron -50KPX Abreve Uogonek -50KPX Abreve Uring -50KPX Abreve V -105KPX Abreve W -95KPX Abreve Y -55KPX Abreve Yacute -55KPX Abreve Ydieresis -55KPX Abreve quoteright -37KPX Abreve u -20KPX Abreve uacute -20KPX Abreve ucircumflex -20KPX Abreve udieresis -20KPX Abreve ugrave -20KPX Abreve uhungarumlaut -20KPX Abreve umacron -20KPX Abreve uogonek -20KPX Abreve uring -20KPX Abreve v -55KPX Abreve w -55KPX Abreve y -55KPX Abreve yacute -55KPX Abreve ydieresis -55KPX Acircumflex C -30KPX Acircumflex Cacute -30KPX Acircumflex Ccaron -30KPX Acircumflex Ccedilla -30KPX Acircumflex G -35KPX Acircumflex Gbreve -35KPX Acircumflex Gcommaaccent -35KPX Acircumflex O -40KPX Acircumflex Oacute -40KPX Acircumflex Ocircumflex -40KPX Acircumflex Odieresis -40KPX Acircumflex Ograve -40KPX Acircumflex Ohungarumlaut -40KPX Acircumflex Omacron -40KPX Acircumflex Oslash -40KPX Acircumflex Otilde -40KPX Acircumflex Q -40KPX Acircumflex T -37KPX Acircumflex Tcaron -37KPX Acircumflex Tcommaaccent -37KPX Acircumflex U -50KPX Acircumflex Uacute -50KPX Acircumflex Ucircumflex -50KPX Acircumflex Udieresis -50KPX Acircumflex Ugrave -50KPX Acircumflex Uhungarumlaut -50KPX Acircumflex Umacron -50KPX Acircumflex Uogonek -50KPX Acircumflex Uring -50KPX Acircumflex V -105KPX Acircumflex W -95KPX Acircumflex Y -55KPX Acircumflex Yacute -55KPX Acircumflex Ydieresis -55KPX Acircumflex quoteright -37KPX Acircumflex u -20KPX Acircumflex uacute -20KPX Acircumflex ucircumflex -20KPX Acircumflex udieresis -20KPX Acircumflex ugrave -20KPX Acircumflex uhungarumlaut -20KPX Acircumflex umacron -20KPX Acircumflex uogonek -20KPX Acircumflex uring -20KPX Acircumflex v -55KPX Acircumflex w -55KPX Acircumflex y -55KPX Acircumflex yacute -55KPX Acircumflex ydieresis -55KPX Adieresis C -30KPX Adieresis Cacute -30KPX Adieresis Ccaron -30KPX Adieresis Ccedilla -30KPX Adieresis G -35KPX Adieresis Gbreve -35KPX Adieresis Gcommaaccent -35KPX Adieresis O -40KPX Adieresis Oacute -40KPX Adieresis Ocircumflex -40KPX Adieresis Odieresis -40KPX Adieresis Ograve -40KPX Adieresis Ohungarumlaut -40KPX Adieresis Omacron -40KPX Adieresis Oslash -40KPX Adieresis Otilde -40KPX Adieresis Q -40KPX Adieresis T -37KPX Adieresis Tcaron -37KPX Adieresis Tcommaaccent -37KPX Adieresis U -50KPX Adieresis Uacute -50KPX Adieresis Ucircumflex -50KPX Adieresis Udieresis -50KPX Adieresis Ugrave -50KPX Adieresis Uhungarumlaut -50KPX Adieresis Umacron -50KPX Adieresis Uogonek -50KPX Adieresis Uring -50KPX Adieresis V -105KPX Adieresis W -95KPX Adieresis Y -55KPX Adieresis Yacute -55KPX Adieresis Ydieresis -55KPX Adieresis quoteright -37KPX Adieresis u -20KPX Adieresis uacute -20KPX Adieresis ucircumflex -20KPX Adieresis udieresis -20KPX Adieresis ugrave -20KPX Adieresis uhungarumlaut -20KPX Adieresis umacron -20KPX Adieresis uogonek -20KPX Adieresis uring -20KPX Adieresis v -55KPX Adieresis w -55KPX Adieresis y -55KPX Adieresis yacute -55KPX Adieresis ydieresis -55KPX Agrave C -30KPX Agrave Cacute -30KPX Agrave Ccaron -30KPX Agrave Ccedilla -30KPX Agrave G -35KPX Agrave Gbreve -35KPX Agrave Gcommaaccent -35KPX Agrave O -40KPX Agrave Oacute -40KPX Agrave Ocircumflex -40KPX Agrave Odieresis -40KPX Agrave Ograve -40KPX Agrave Ohungarumlaut -40KPX Agrave Omacron -40KPX Agrave Oslash -40KPX Agrave Otilde -40KPX Agrave Q -40KPX Agrave T -37KPX Agrave Tcaron -37KPX Agrave Tcommaaccent -37KPX Agrave U -50KPX Agrave Uacute -50KPX Agrave Ucircumflex -50KPX Agrave Udieresis -50KPX Agrave Ugrave -50KPX Agrave Uhungarumlaut -50KPX Agrave Umacron -50KPX Agrave Uogonek -50KPX Agrave Uring -50KPX Agrave V -105KPX Agrave W -95KPX Agrave Y -55KPX Agrave Yacute -55KPX Agrave Ydieresis -55KPX Agrave quoteright -37KPX Agrave u -20KPX Agrave uacute -20KPX Agrave ucircumflex -20KPX Agrave udieresis -20KPX Agrave ugrave -20KPX Agrave uhungarumlaut -20KPX Agrave umacron -20KPX Agrave uogonek -20KPX Agrave uring -20KPX Agrave v -55KPX Agrave w -55KPX Agrave y -55KPX Agrave yacute -55KPX Agrave ydieresis -55KPX Amacron C -30KPX Amacron Cacute -30KPX Amacron Ccaron -30KPX Amacron Ccedilla -30KPX Amacron G -35KPX Amacron Gbreve -35KPX Amacron Gcommaaccent -35KPX Amacron O -40KPX Amacron Oacute -40KPX Amacron Ocircumflex -40KPX Amacron Odieresis -40KPX Amacron Ograve -40KPX Amacron Ohungarumlaut -40KPX Amacron Omacron -40KPX Amacron Oslash -40KPX Amacron Otilde -40KPX Amacron Q -40KPX Amacron T -37KPX Amacron Tcaron -37KPX Amacron Tcommaaccent -37KPX Amacron U -50KPX Amacron Uacute -50KPX Amacron Ucircumflex -50KPX Amacron Udieresis -50KPX Amacron Ugrave -50KPX Amacron Uhungarumlaut -50KPX Amacron Umacron -50KPX Amacron Uogonek -50KPX Amacron Uring -50KPX Amacron V -105KPX Amacron W -95KPX Amacron Y -55KPX Amacron Yacute -55KPX Amacron Ydieresis -55KPX Amacron quoteright -37KPX Amacron u -20KPX Amacron uacute -20KPX Amacron ucircumflex -20KPX Amacron udieresis -20KPX Amacron ugrave -20KPX Amacron uhungarumlaut -20KPX Amacron umacron -20KPX Amacron uogonek -20KPX Amacron uring -20KPX Amacron v -55KPX Amacron w -55KPX Amacron y -55KPX Amacron yacute -55KPX Amacron ydieresis -55KPX Aogonek C -30KPX Aogonek Cacute -30KPX Aogonek Ccaron -30KPX Aogonek Ccedilla -30KPX Aogonek G -35KPX Aogonek Gbreve -35KPX Aogonek Gcommaaccent -35KPX Aogonek O -40KPX Aogonek Oacute -40KPX Aogonek Ocircumflex -40KPX Aogonek Odieresis -40KPX Aogonek Ograve -40KPX Aogonek Ohungarumlaut -40KPX Aogonek Omacron -40KPX Aogonek Oslash -40KPX Aogonek Otilde -40KPX Aogonek Q -40KPX Aogonek T -37KPX Aogonek Tcaron -37KPX Aogonek Tcommaaccent -37KPX Aogonek U -50KPX Aogonek Uacute -50KPX Aogonek Ucircumflex -50KPX Aogonek Udieresis -50KPX Aogonek Ugrave -50KPX Aogonek Uhungarumlaut -50KPX Aogonek Umacron -50KPX Aogonek Uogonek -50KPX Aogonek Uring -50KPX Aogonek V -105KPX Aogonek W -95KPX Aogonek Y -55KPX Aogonek Yacute -55KPX Aogonek Ydieresis -55KPX Aogonek quoteright -37KPX Aogonek u -20KPX Aogonek uacute -20KPX Aogonek ucircumflex -20KPX Aogonek udieresis -20KPX Aogonek ugrave -20KPX Aogonek uhungarumlaut -20KPX Aogonek umacron -20KPX Aogonek uogonek -20KPX Aogonek uring -20KPX Aogonek v -55KPX Aogonek w -55KPX Aogonek y -55KPX Aogonek yacute -55KPX Aogonek ydieresis -55KPX Aring C -30KPX Aring Cacute -30KPX Aring Ccaron -30KPX Aring Ccedilla -30KPX Aring G -35KPX Aring Gbreve -35KPX Aring Gcommaaccent -35KPX Aring O -40KPX Aring Oacute -40KPX Aring Ocircumflex -40KPX Aring Odieresis -40KPX Aring Ograve -40KPX Aring Ohungarumlaut -40KPX Aring Omacron -40KPX Aring Oslash -40KPX Aring Otilde -40KPX Aring Q -40KPX Aring T -37KPX Aring Tcaron -37KPX Aring Tcommaaccent -37KPX Aring U -50KPX Aring Uacute -50KPX Aring Ucircumflex -50KPX Aring Udieresis -50KPX Aring Ugrave -50KPX Aring Uhungarumlaut -50KPX Aring Umacron -50KPX Aring Uogonek -50KPX Aring Uring -50KPX Aring V -105KPX Aring W -95KPX Aring Y -55KPX Aring Yacute -55KPX Aring Ydieresis -55KPX Aring quoteright -37KPX Aring u -20KPX Aring uacute -20KPX Aring ucircumflex -20KPX Aring udieresis -20KPX Aring ugrave -20KPX Aring uhungarumlaut -20KPX Aring umacron -20KPX Aring uogonek -20KPX Aring uring -20KPX Aring v -55KPX Aring w -55KPX Aring y -55KPX Aring yacute -55KPX Aring ydieresis -55KPX Atilde C -30KPX Atilde Cacute -30KPX Atilde Ccaron -30KPX Atilde Ccedilla -30KPX Atilde G -35KPX Atilde Gbreve -35KPX Atilde Gcommaaccent -35KPX Atilde O -40KPX Atilde Oacute -40KPX Atilde Ocircumflex -40KPX Atilde Odieresis -40KPX Atilde Ograve -40KPX Atilde Ohungarumlaut -40KPX Atilde Omacron -40KPX Atilde Oslash -40KPX Atilde Otilde -40KPX Atilde Q -40KPX Atilde T -37KPX Atilde Tcaron -37KPX Atilde Tcommaaccent -37KPX Atilde U -50KPX Atilde Uacute -50KPX Atilde Ucircumflex -50KPX Atilde Udieresis -50KPX Atilde Ugrave -50KPX Atilde Uhungarumlaut -50KPX Atilde Umacron -50KPX Atilde Uogonek -50KPX Atilde Uring -50KPX Atilde V -105KPX Atilde W -95KPX Atilde Y -55KPX Atilde Yacute -55KPX Atilde Ydieresis -55KPX Atilde quoteright -37KPX Atilde u -20KPX Atilde uacute -20KPX Atilde ucircumflex -20KPX Atilde udieresis -20KPX Atilde ugrave -20KPX Atilde uhungarumlaut -20KPX Atilde umacron -20KPX Atilde uogonek -20KPX Atilde uring -20KPX Atilde v -55KPX Atilde w -55KPX Atilde y -55KPX Atilde yacute -55KPX Atilde ydieresis -55KPX B A -25KPX B Aacute -25KPX B Abreve -25KPX B Acircumflex -25KPX B Adieresis -25KPX B Agrave -25KPX B Amacron -25KPX B Aogonek -25KPX B Aring -25KPX B Atilde -25KPX B U -10KPX B Uacute -10KPX B Ucircumflex -10KPX B Udieresis -10KPX B Ugrave -10KPX B Uhungarumlaut -10KPX B Umacron -10KPX B Uogonek -10KPX B Uring -10KPX D A -35KPX D Aacute -35KPX D Abreve -35KPX D Acircumflex -35KPX D Adieresis -35KPX D Agrave -35KPX D Amacron -35KPX D Aogonek -35KPX D Aring -35KPX D Atilde -35KPX D V -40KPX D W -40KPX D Y -40KPX D Yacute -40KPX D Ydieresis -40KPX Dcaron A -35KPX Dcaron Aacute -35KPX Dcaron Abreve -35KPX Dcaron Acircumflex -35KPX Dcaron Adieresis -35KPX Dcaron Agrave -35KPX Dcaron Amacron -35KPX Dcaron Aogonek -35KPX Dcaron Aring -35KPX Dcaron Atilde -35KPX Dcaron V -40KPX Dcaron W -40KPX Dcaron Y -40KPX Dcaron Yacute -40KPX Dcaron Ydieresis -40KPX Dcroat A -35KPX Dcroat Aacute -35KPX Dcroat Abreve -35KPX Dcroat Acircumflex -35KPX Dcroat Adieresis -35KPX Dcroat Agrave -35KPX Dcroat Amacron -35KPX Dcroat Aogonek -35KPX Dcroat Aring -35KPX Dcroat Atilde -35KPX Dcroat V -40KPX Dcroat W -40KPX Dcroat Y -40KPX Dcroat Yacute -40KPX Dcroat Ydieresis -40KPX F A -115KPX F Aacute -115KPX F Abreve -115KPX F Acircumflex -115KPX F Adieresis -115KPX F Agrave -115KPX F Amacron -115KPX F Aogonek -115KPX F Aring -115KPX F Atilde -115KPX F a -75KPX F aacute -75KPX F abreve -75KPX F acircumflex -75KPX F adieresis -75KPX F agrave -75KPX F amacron -75KPX F aogonek -75KPX F aring -75KPX F atilde -75KPX F comma -135KPX F e -75KPX F eacute -75KPX F ecaron -75KPX F ecircumflex -75KPX F edieresis -75KPX F edotaccent -75KPX F egrave -75KPX F emacron -75KPX F eogonek -75KPX F i -45KPX F iacute -45KPX F icircumflex -45KPX F idieresis -45KPX F igrave -45KPX F imacron -45KPX F iogonek -45KPX F o -105KPX F oacute -105KPX F ocircumflex -105KPX F odieresis -105KPX F ograve -105KPX F ohungarumlaut -105KPX F omacron -105KPX F oslash -105KPX F otilde -105KPX F period -135KPX F r -55KPX F racute -55KPX F rcaron -55KPX F rcommaaccent -55KPX J A -40KPX J Aacute -40KPX J Abreve -40KPX J Acircumflex -40KPX J Adieresis -40KPX J Agrave -40KPX J Amacron -40KPX J Aogonek -40KPX J Aring -40KPX J Atilde -40KPX J a -35KPX J aacute -35KPX J abreve -35KPX J acircumflex -35KPX J adieresis -35KPX J agrave -35KPX J amacron -35KPX J aogonek -35KPX J aring -35KPX J atilde -35KPX J comma -25KPX J e -25KPX J eacute -25KPX J ecaron -25KPX J ecircumflex -25KPX J edieresis -25KPX J edotaccent -25KPX J egrave -25KPX J emacron -25KPX J eogonek -25KPX J o -25KPX J oacute -25KPX J ocircumflex -25KPX J odieresis -25KPX J ograve -25KPX J ohungarumlaut -25KPX J omacron -25KPX J oslash -25KPX J otilde -25KPX J period -25KPX J u -35KPX J uacute -35KPX J ucircumflex -35KPX J udieresis -35KPX J ugrave -35KPX J uhungarumlaut -35KPX J umacron -35KPX J uogonek -35KPX J uring -35KPX K O -50KPX K Oacute -50KPX K Ocircumflex -50KPX K Odieresis -50KPX K Ograve -50KPX K Ohungarumlaut -50KPX K Omacron -50KPX K Oslash -50KPX K Otilde -50KPX K e -35KPX K eacute -35KPX K ecaron -35KPX K ecircumflex -35KPX K edieresis -35KPX K edotaccent -35KPX K egrave -35KPX K emacron -35KPX K eogonek -35KPX K o -40KPX K oacute -40KPX K ocircumflex -40KPX K odieresis -40KPX K ograve -40KPX K ohungarumlaut -40KPX K omacron -40KPX K oslash -40KPX K otilde -40KPX K u -40KPX K uacute -40KPX K ucircumflex -40KPX K udieresis -40KPX K ugrave -40KPX K uhungarumlaut -40KPX K umacron -40KPX K uogonek -40KPX K uring -40KPX K y -40KPX K yacute -40KPX K ydieresis -40KPX Kcommaaccent O -50KPX Kcommaaccent Oacute -50KPX Kcommaaccent Ocircumflex -50KPX Kcommaaccent Odieresis -50KPX Kcommaaccent Ograve -50KPX Kcommaaccent Ohungarumlaut -50KPX Kcommaaccent Omacron -50KPX Kcommaaccent Oslash -50KPX Kcommaaccent Otilde -50KPX Kcommaaccent e -35KPX Kcommaaccent eacute -35KPX Kcommaaccent ecaron -35KPX Kcommaaccent ecircumflex -35KPX Kcommaaccent edieresis -35KPX Kcommaaccent edotaccent -35KPX Kcommaaccent egrave -35KPX Kcommaaccent emacron -35KPX Kcommaaccent eogonek -35KPX Kcommaaccent o -40KPX Kcommaaccent oacute -40KPX Kcommaaccent ocircumflex -40KPX Kcommaaccent odieresis -40KPX Kcommaaccent ograve -40KPX Kcommaaccent ohungarumlaut -40KPX Kcommaaccent omacron -40KPX Kcommaaccent oslash -40KPX Kcommaaccent otilde -40KPX Kcommaaccent u -40KPX Kcommaaccent uacute -40KPX Kcommaaccent ucircumflex -40KPX Kcommaaccent udieresis -40KPX Kcommaaccent ugrave -40KPX Kcommaaccent uhungarumlaut -40KPX Kcommaaccent umacron -40KPX Kcommaaccent uogonek -40KPX Kcommaaccent uring -40KPX Kcommaaccent y -40KPX Kcommaaccent yacute -40KPX Kcommaaccent ydieresis -40KPX L T -20KPX L Tcaron -20KPX L Tcommaaccent -20KPX L V -55KPX L W -55KPX L Y -20KPX L Yacute -20KPX L Ydieresis -20KPX L quoteright -37KPX L y -30KPX L yacute -30KPX L ydieresis -30KPX Lacute T -20KPX Lacute Tcaron -20KPX Lacute Tcommaaccent -20KPX Lacute V -55KPX Lacute W -55KPX Lacute Y -20KPX Lacute Yacute -20KPX Lacute Ydieresis -20KPX Lacute quoteright -37KPX Lacute y -30KPX Lacute yacute -30KPX Lacute ydieresis -30KPX Lcommaaccent T -20KPX Lcommaaccent Tcaron -20KPX Lcommaaccent Tcommaaccent -20KPX Lcommaaccent V -55KPX Lcommaaccent W -55KPX Lcommaaccent Y -20KPX Lcommaaccent Yacute -20KPX Lcommaaccent Ydieresis -20KPX Lcommaaccent quoteright -37KPX Lcommaaccent y -30KPX Lcommaaccent yacute -30KPX Lcommaaccent ydieresis -30KPX Lslash T -20KPX Lslash Tcaron -20KPX Lslash Tcommaaccent -20KPX Lslash V -55KPX Lslash W -55KPX Lslash Y -20KPX Lslash Yacute -20KPX Lslash Ydieresis -20KPX Lslash quoteright -37KPX Lslash y -30KPX Lslash yacute -30KPX Lslash ydieresis -30KPX N A -27KPX N Aacute -27KPX N Abreve -27KPX N Acircumflex -27KPX N Adieresis -27KPX N Agrave -27KPX N Amacron -27KPX N Aogonek -27KPX N Aring -27KPX N Atilde -27KPX Nacute A -27KPX Nacute Aacute -27KPX Nacute Abreve -27KPX Nacute Acircumflex -27KPX Nacute Adieresis -27KPX Nacute Agrave -27KPX Nacute Amacron -27KPX Nacute Aogonek -27KPX Nacute Aring -27KPX Nacute Atilde -27KPX Ncaron A -27KPX Ncaron Aacute -27KPX Ncaron Abreve -27KPX Ncaron Acircumflex -27KPX Ncaron Adieresis -27KPX Ncaron Agrave -27KPX Ncaron Amacron -27KPX Ncaron Aogonek -27KPX Ncaron Aring -27KPX Ncaron Atilde -27KPX Ncommaaccent A -27KPX Ncommaaccent Aacute -27KPX Ncommaaccent Abreve -27KPX Ncommaaccent Acircumflex -27KPX Ncommaaccent Adieresis -27KPX Ncommaaccent Agrave -27KPX Ncommaaccent Amacron -27KPX Ncommaaccent Aogonek -27KPX Ncommaaccent Aring -27KPX Ncommaaccent Atilde -27KPX Ntilde A -27KPX Ntilde Aacute -27KPX Ntilde Abreve -27KPX Ntilde Acircumflex -27KPX Ntilde Adieresis -27KPX Ntilde Agrave -27KPX Ntilde Amacron -27KPX Ntilde Aogonek -27KPX Ntilde Aring -27KPX Ntilde Atilde -27KPX O A -55KPX O Aacute -55KPX O Abreve -55KPX O Acircumflex -55KPX O Adieresis -55KPX O Agrave -55KPX O Amacron -55KPX O Aogonek -55KPX O Aring -55KPX O Atilde -55KPX O T -40KPX O Tcaron -40KPX O Tcommaaccent -40KPX O V -50KPX O W -50KPX O X -40KPX O Y -50KPX O Yacute -50KPX O Ydieresis -50KPX Oacute A -55KPX Oacute Aacute -55KPX Oacute Abreve -55KPX Oacute Acircumflex -55KPX Oacute Adieresis -55KPX Oacute Agrave -55KPX Oacute Amacron -55KPX Oacute Aogonek -55KPX Oacute Aring -55KPX Oacute Atilde -55KPX Oacute T -40KPX Oacute Tcaron -40KPX Oacute Tcommaaccent -40KPX Oacute V -50KPX Oacute W -50KPX Oacute X -40KPX Oacute Y -50KPX Oacute Yacute -50KPX Oacute Ydieresis -50KPX Ocircumflex A -55KPX Ocircumflex Aacute -55KPX Ocircumflex Abreve -55KPX Ocircumflex Acircumflex -55KPX Ocircumflex Adieresis -55KPX Ocircumflex Agrave -55KPX Ocircumflex Amacron -55KPX Ocircumflex Aogonek -55KPX Ocircumflex Aring -55KPX Ocircumflex Atilde -55KPX Ocircumflex T -40KPX Ocircumflex Tcaron -40KPX Ocircumflex Tcommaaccent -40KPX Ocircumflex V -50KPX Ocircumflex W -50KPX Ocircumflex X -40KPX Ocircumflex Y -50KPX Ocircumflex Yacute -50KPX Ocircumflex Ydieresis -50KPX Odieresis A -55KPX Odieresis Aacute -55KPX Odieresis Abreve -55KPX Odieresis Acircumflex -55KPX Odieresis Adieresis -55KPX Odieresis Agrave -55KPX Odieresis Amacron -55KPX Odieresis Aogonek -55KPX Odieresis Aring -55KPX Odieresis Atilde -55KPX Odieresis T -40KPX Odieresis Tcaron -40KPX Odieresis Tcommaaccent -40KPX Odieresis V -50KPX Odieresis W -50KPX Odieresis X -40KPX Odieresis Y -50KPX Odieresis Yacute -50KPX Odieresis Ydieresis -50KPX Ograve A -55KPX Ograve Aacute -55KPX Ograve Abreve -55KPX Ograve Acircumflex -55KPX Ograve Adieresis -55KPX Ograve Agrave -55KPX Ograve Amacron -55KPX Ograve Aogonek -55KPX Ograve Aring -55KPX Ograve Atilde -55KPX Ograve T -40KPX Ograve Tcaron -40KPX Ograve Tcommaaccent -40KPX Ograve V -50KPX Ograve W -50KPX Ograve X -40KPX Ograve Y -50KPX Ograve Yacute -50KPX Ograve Ydieresis -50KPX Ohungarumlaut A -55KPX Ohungarumlaut Aacute -55KPX Ohungarumlaut Abreve -55KPX Ohungarumlaut Acircumflex -55KPX Ohungarumlaut Adieresis -55KPX Ohungarumlaut Agrave -55KPX Ohungarumlaut Amacron -55KPX Ohungarumlaut Aogonek -55KPX Ohungarumlaut Aring -55KPX Ohungarumlaut Atilde -55KPX Ohungarumlaut T -40KPX Ohungarumlaut Tcaron -40KPX Ohungarumlaut Tcommaaccent -40KPX Ohungarumlaut V -50KPX Ohungarumlaut W -50KPX Ohungarumlaut X -40KPX Ohungarumlaut Y -50KPX Ohungarumlaut Yacute -50KPX Ohungarumlaut Ydieresis -50KPX Omacron A -55KPX Omacron Aacute -55KPX Omacron Abreve -55KPX Omacron Acircumflex -55KPX Omacron Adieresis -55KPX Omacron Agrave -55KPX Omacron Amacron -55KPX Omacron Aogonek -55KPX Omacron Aring -55KPX Omacron Atilde -55KPX Omacron T -40KPX Omacron Tcaron -40KPX Omacron Tcommaaccent -40KPX Omacron V -50KPX Omacron W -50KPX Omacron X -40KPX Omacron Y -50KPX Omacron Yacute -50KPX Omacron Ydieresis -50KPX Oslash A -55KPX Oslash Aacute -55KPX Oslash Abreve -55KPX Oslash Acircumflex -55KPX Oslash Adieresis -55KPX Oslash Agrave -55KPX Oslash Amacron -55KPX Oslash Aogonek -55KPX Oslash Aring -55KPX Oslash Atilde -55KPX Oslash T -40KPX Oslash Tcaron -40KPX Oslash Tcommaaccent -40KPX Oslash V -50KPX Oslash W -50KPX Oslash X -40KPX Oslash Y -50KPX Oslash Yacute -50KPX Oslash Ydieresis -50KPX Otilde A -55KPX Otilde Aacute -55KPX Otilde Abreve -55KPX Otilde Acircumflex -55KPX Otilde Adieresis -55KPX Otilde Agrave -55KPX Otilde Amacron -55KPX Otilde Aogonek -55KPX Otilde Aring -55KPX Otilde Atilde -55KPX Otilde T -40KPX Otilde Tcaron -40KPX Otilde Tcommaaccent -40KPX Otilde V -50KPX Otilde W -50KPX Otilde X -40KPX Otilde Y -50KPX Otilde Yacute -50KPX Otilde Ydieresis -50KPX P A -90KPX P Aacute -90KPX P Abreve -90KPX P Acircumflex -90KPX P Adieresis -90KPX P Agrave -90KPX P Amacron -90KPX P Aogonek -90KPX P Aring -90KPX P Atilde -90KPX P a -80KPX P aacute -80KPX P abreve -80KPX P acircumflex -80KPX P adieresis -80KPX P agrave -80KPX P amacron -80KPX P aogonek -80KPX P aring -80KPX P atilde -80KPX P comma -135KPX P e -80KPX P eacute -80KPX P ecaron -80KPX P ecircumflex -80KPX P edieresis -80KPX P edotaccent -80KPX P egrave -80KPX P emacron -80KPX P eogonek -80KPX P o -80KPX P oacute -80KPX P ocircumflex -80KPX P odieresis -80KPX P ograve -80KPX P ohungarumlaut -80KPX P omacron -80KPX P oslash -80KPX P otilde -80KPX P period -135KPX Q U -10KPX Q Uacute -10KPX Q Ucircumflex -10KPX Q Udieresis -10KPX Q Ugrave -10KPX Q Uhungarumlaut -10KPX Q Umacron -10KPX Q Uogonek -10KPX Q Uring -10KPX R O -40KPX R Oacute -40KPX R Ocircumflex -40KPX R Odieresis -40KPX R Ograve -40KPX R Ohungarumlaut -40KPX R Omacron -40KPX R Oslash -40KPX R Otilde -40KPX R U -40KPX R Uacute -40KPX R Ucircumflex -40KPX R Udieresis -40KPX R Ugrave -40KPX R Uhungarumlaut -40KPX R Umacron -40KPX R Uogonek -40KPX R Uring -40KPX R V -18KPX R W -18KPX R Y -18KPX R Yacute -18KPX R Ydieresis -18KPX Racute O -40KPX Racute Oacute -40KPX Racute Ocircumflex -40KPX Racute Odieresis -40KPX Racute Ograve -40KPX Racute Ohungarumlaut -40KPX Racute Omacron -40KPX Racute Oslash -40KPX Racute Otilde -40KPX Racute U -40KPX Racute Uacute -40KPX Racute Ucircumflex -40KPX Racute Udieresis -40KPX Racute Ugrave -40KPX Racute Uhungarumlaut -40KPX Racute Umacron -40KPX Racute Uogonek -40KPX Racute Uring -40KPX Racute V -18KPX Racute W -18KPX Racute Y -18KPX Racute Yacute -18KPX Racute Ydieresis -18KPX Rcaron O -40KPX Rcaron Oacute -40KPX Rcaron Ocircumflex -40KPX Rcaron Odieresis -40KPX Rcaron Ograve -40KPX Rcaron Ohungarumlaut -40KPX Rcaron Omacron -40KPX Rcaron Oslash -40KPX Rcaron Otilde -40KPX Rcaron U -40KPX Rcaron Uacute -40KPX Rcaron Ucircumflex -40KPX Rcaron Udieresis -40KPX Rcaron Ugrave -40KPX Rcaron Uhungarumlaut -40KPX Rcaron Umacron -40KPX Rcaron Uogonek -40KPX Rcaron Uring -40KPX Rcaron V -18KPX Rcaron W -18KPX Rcaron Y -18KPX Rcaron Yacute -18KPX Rcaron Ydieresis -18KPX Rcommaaccent O -40KPX Rcommaaccent Oacute -40KPX Rcommaaccent Ocircumflex -40KPX Rcommaaccent Odieresis -40KPX Rcommaaccent Ograve -40KPX Rcommaaccent Ohungarumlaut -40KPX Rcommaaccent Omacron -40KPX Rcommaaccent Oslash -40KPX Rcommaaccent Otilde -40KPX Rcommaaccent U -40KPX Rcommaaccent Uacute -40KPX Rcommaaccent Ucircumflex -40KPX Rcommaaccent Udieresis -40KPX Rcommaaccent Ugrave -40KPX Rcommaaccent Uhungarumlaut -40KPX Rcommaaccent Umacron -40KPX Rcommaaccent Uogonek -40KPX Rcommaaccent Uring -40KPX Rcommaaccent V -18KPX Rcommaaccent W -18KPX Rcommaaccent Y -18KPX Rcommaaccent Yacute -18KPX Rcommaaccent Ydieresis -18KPX T A -50KPX T Aacute -50KPX T Abreve -50KPX T Acircumflex -50KPX T Adieresis -50KPX T Agrave -50KPX T Amacron -50KPX T Aogonek -50KPX T Aring -50KPX T Atilde -50KPX T O -18KPX T Oacute -18KPX T Ocircumflex -18KPX T Odieresis -18KPX T Ograve -18KPX T Ohungarumlaut -18KPX T Omacron -18KPX T Oslash -18KPX T Otilde -18KPX T a -92KPX T aacute -92KPX T abreve -92KPX T acircumflex -92KPX T adieresis -92KPX T agrave -92KPX T amacron -92KPX T aogonek -92KPX T aring -92KPX T atilde -92KPX T colon -55KPX T comma -74KPX T e -92KPX T eacute -92KPX T ecaron -92KPX T ecircumflex -52KPX T edieresis -52KPX T edotaccent -92KPX T egrave -52KPX T emacron -52KPX T eogonek -92KPX T hyphen -74KPX T i -55KPX T iacute -55KPX T iogonek -55KPX T o -92KPX T oacute -92KPX T ocircumflex -92KPX T odieresis -92KPX T ograve -92KPX T ohungarumlaut -92KPX T omacron -92KPX T oslash -92KPX T otilde -92KPX T period -74KPX T r -55KPX T racute -55KPX T rcaron -55KPX T rcommaaccent -55KPX T semicolon -65KPX T u -55KPX T uacute -55KPX T ucircumflex -55KPX T udieresis -55KPX T ugrave -55KPX T uhungarumlaut -55KPX T umacron -55KPX T uogonek -55KPX T uring -55KPX T w -74KPX T y -74KPX T yacute -74KPX T ydieresis -34KPX Tcaron A -50KPX Tcaron Aacute -50KPX Tcaron Abreve -50KPX Tcaron Acircumflex -50KPX Tcaron Adieresis -50KPX Tcaron Agrave -50KPX Tcaron Amacron -50KPX Tcaron Aogonek -50KPX Tcaron Aring -50KPX Tcaron Atilde -50KPX Tcaron O -18KPX Tcaron Oacute -18KPX Tcaron Ocircumflex -18KPX Tcaron Odieresis -18KPX Tcaron Ograve -18KPX Tcaron Ohungarumlaut -18KPX Tcaron Omacron -18KPX Tcaron Oslash -18KPX Tcaron Otilde -18KPX Tcaron a -92KPX Tcaron aacute -92KPX Tcaron abreve -92KPX Tcaron acircumflex -92KPX Tcaron adieresis -92KPX Tcaron agrave -92KPX Tcaron amacron -92KPX Tcaron aogonek -92KPX Tcaron aring -92KPX Tcaron atilde -92KPX Tcaron colon -55KPX Tcaron comma -74KPX Tcaron e -92KPX Tcaron eacute -92KPX Tcaron ecaron -92KPX Tcaron ecircumflex -52KPX Tcaron edieresis -52KPX Tcaron edotaccent -92KPX Tcaron egrave -52KPX Tcaron emacron -52KPX Tcaron eogonek -92KPX Tcaron hyphen -74KPX Tcaron i -55KPX Tcaron iacute -55KPX Tcaron iogonek -55KPX Tcaron o -92KPX Tcaron oacute -92KPX Tcaron ocircumflex -92KPX Tcaron odieresis -92KPX Tcaron ograve -92KPX Tcaron ohungarumlaut -92KPX Tcaron omacron -92KPX Tcaron oslash -92KPX Tcaron otilde -92KPX Tcaron period -74KPX Tcaron r -55KPX Tcaron racute -55KPX Tcaron rcaron -55KPX Tcaron rcommaaccent -55KPX Tcaron semicolon -65KPX Tcaron u -55KPX Tcaron uacute -55KPX Tcaron ucircumflex -55KPX Tcaron udieresis -55KPX Tcaron ugrave -55KPX Tcaron uhungarumlaut -55KPX Tcaron umacron -55KPX Tcaron uogonek -55KPX Tcaron uring -55KPX Tcaron w -74KPX Tcaron y -74KPX Tcaron yacute -74KPX Tcaron ydieresis -34KPX Tcommaaccent A -50KPX Tcommaaccent Aacute -50KPX Tcommaaccent Abreve -50KPX Tcommaaccent Acircumflex -50KPX Tcommaaccent Adieresis -50KPX Tcommaaccent Agrave -50KPX Tcommaaccent Amacron -50KPX Tcommaaccent Aogonek -50KPX Tcommaaccent Aring -50KPX Tcommaaccent Atilde -50KPX Tcommaaccent O -18KPX Tcommaaccent Oacute -18KPX Tcommaaccent Ocircumflex -18KPX Tcommaaccent Odieresis -18KPX Tcommaaccent Ograve -18KPX Tcommaaccent Ohungarumlaut -18KPX Tcommaaccent Omacron -18KPX Tcommaaccent Oslash -18KPX Tcommaaccent Otilde -18KPX Tcommaaccent a -92KPX Tcommaaccent aacute -92KPX Tcommaaccent abreve -92KPX Tcommaaccent acircumflex -92KPX Tcommaaccent adieresis -92KPX Tcommaaccent agrave -92KPX Tcommaaccent amacron -92KPX Tcommaaccent aogonek -92KPX Tcommaaccent aring -92KPX Tcommaaccent atilde -92KPX Tcommaaccent colon -55KPX Tcommaaccent comma -74KPX Tcommaaccent e -92KPX Tcommaaccent eacute -92KPX Tcommaaccent ecaron -92KPX Tcommaaccent ecircumflex -52KPX Tcommaaccent edieresis -52KPX Tcommaaccent edotaccent -92KPX Tcommaaccent egrave -52KPX Tcommaaccent emacron -52KPX Tcommaaccent eogonek -92KPX Tcommaaccent hyphen -74KPX Tcommaaccent i -55KPX Tcommaaccent iacute -55KPX Tcommaaccent iogonek -55KPX Tcommaaccent o -92KPX Tcommaaccent oacute -92KPX Tcommaaccent ocircumflex -92KPX Tcommaaccent odieresis -92KPX Tcommaaccent ograve -92KPX Tcommaaccent ohungarumlaut -92KPX Tcommaaccent omacron -92KPX Tcommaaccent oslash -92KPX Tcommaaccent otilde -92KPX Tcommaaccent period -74KPX Tcommaaccent r -55KPX Tcommaaccent racute -55KPX Tcommaaccent rcaron -55KPX Tcommaaccent rcommaaccent -55KPX Tcommaaccent semicolon -65KPX Tcommaaccent u -55KPX Tcommaaccent uacute -55KPX Tcommaaccent ucircumflex -55KPX Tcommaaccent udieresis -55KPX Tcommaaccent ugrave -55KPX Tcommaaccent uhungarumlaut -55KPX Tcommaaccent umacron -55KPX Tcommaaccent uogonek -55KPX Tcommaaccent uring -55KPX Tcommaaccent w -74KPX Tcommaaccent y -74KPX Tcommaaccent yacute -74KPX Tcommaaccent ydieresis -34KPX U A -40KPX U Aacute -40KPX U Abreve -40KPX U Acircumflex -40KPX U Adieresis -40KPX U Agrave -40KPX U Amacron -40KPX U Aogonek -40KPX U Aring -40KPX U Atilde -40KPX U comma -25KPX U period -25KPX Uacute A -40KPX Uacute Aacute -40KPX Uacute Abreve -40KPX Uacute Acircumflex -40KPX Uacute Adieresis -40KPX Uacute Agrave -40KPX Uacute Amacron -40KPX Uacute Aogonek -40KPX Uacute Aring -40KPX Uacute Atilde -40KPX Uacute comma -25KPX Uacute period -25KPX Ucircumflex A -40KPX Ucircumflex Aacute -40KPX Ucircumflex Abreve -40KPX Ucircumflex Acircumflex -40KPX Ucircumflex Adieresis -40KPX Ucircumflex Agrave -40KPX Ucircumflex Amacron -40KPX Ucircumflex Aogonek -40KPX Ucircumflex Aring -40KPX Ucircumflex Atilde -40KPX Ucircumflex comma -25KPX Ucircumflex period -25KPX Udieresis A -40KPX Udieresis Aacute -40KPX Udieresis Abreve -40KPX Udieresis Acircumflex -40KPX Udieresis Adieresis -40KPX Udieresis Agrave -40KPX Udieresis Amacron -40KPX Udieresis Aogonek -40KPX Udieresis Aring -40KPX Udieresis Atilde -40KPX Udieresis comma -25KPX Udieresis period -25KPX Ugrave A -40KPX Ugrave Aacute -40KPX Ugrave Abreve -40KPX Ugrave Acircumflex -40KPX Ugrave Adieresis -40KPX Ugrave Agrave -40KPX Ugrave Amacron -40KPX Ugrave Aogonek -40KPX Ugrave Aring -40KPX Ugrave Atilde -40KPX Ugrave comma -25KPX Ugrave period -25KPX Uhungarumlaut A -40KPX Uhungarumlaut Aacute -40KPX Uhungarumlaut Abreve -40KPX Uhungarumlaut Acircumflex -40KPX Uhungarumlaut Adieresis -40KPX Uhungarumlaut Agrave -40KPX Uhungarumlaut Amacron -40KPX Uhungarumlaut Aogonek -40KPX Uhungarumlaut Aring -40KPX Uhungarumlaut Atilde -40KPX Uhungarumlaut comma -25KPX Uhungarumlaut period -25KPX Umacron A -40KPX Umacron Aacute -40KPX Umacron Abreve -40KPX Umacron Acircumflex -40KPX Umacron Adieresis -40KPX Umacron Agrave -40KPX Umacron Amacron -40KPX Umacron Aogonek -40KPX Umacron Aring -40KPX Umacron Atilde -40KPX Umacron comma -25KPX Umacron period -25KPX Uogonek A -40KPX Uogonek Aacute -40KPX Uogonek Abreve -40KPX Uogonek Acircumflex -40KPX Uogonek Adieresis -40KPX Uogonek Agrave -40KPX Uogonek Amacron -40KPX Uogonek Aogonek -40KPX Uogonek Aring -40KPX Uogonek Atilde -40KPX Uogonek comma -25KPX Uogonek period -25KPX Uring A -40KPX Uring Aacute -40KPX Uring Abreve -40KPX Uring Acircumflex -40KPX Uring Adieresis -40KPX Uring Agrave -40KPX Uring Amacron -40KPX Uring Aogonek -40KPX Uring Aring -40KPX Uring Atilde -40KPX Uring comma -25KPX Uring period -25KPX V A -60KPX V Aacute -60KPX V Abreve -60KPX V Acircumflex -60KPX V Adieresis -60KPX V Agrave -60KPX V Amacron -60KPX V Aogonek -60KPX V Aring -60KPX V Atilde -60KPX V O -30KPX V Oacute -30KPX V Ocircumflex -30KPX V Odieresis -30KPX V Ograve -30KPX V Ohungarumlaut -30KPX V Omacron -30KPX V Oslash -30KPX V Otilde -30KPX V a -111KPX V aacute -111KPX V abreve -111KPX V acircumflex -111KPX V adieresis -111KPX V agrave -111KPX V amacron -111KPX V aogonek -111KPX V aring -111KPX V atilde -111KPX V colon -65KPX V comma -129KPX V e -111KPX V eacute -111KPX V ecaron -111KPX V ecircumflex -111KPX V edieresis -71KPX V edotaccent -111KPX V egrave -71KPX V emacron -71KPX V eogonek -111KPX V hyphen -55KPX V i -74KPX V iacute -74KPX V icircumflex -34KPX V idieresis -34KPX V igrave -34KPX V imacron -34KPX V iogonek -74KPX V o -111KPX V oacute -111KPX V ocircumflex -111KPX V odieresis -111KPX V ograve -111KPX V ohungarumlaut -111KPX V omacron -111KPX V oslash -111KPX V otilde -111KPX V period -129KPX V semicolon -74KPX V u -74KPX V uacute -74KPX V ucircumflex -74KPX V udieresis -74KPX V ugrave -74KPX V uhungarumlaut -74KPX V umacron -74KPX V uogonek -74KPX V uring -74KPX W A -60KPX W Aacute -60KPX W Abreve -60KPX W Acircumflex -60KPX W Adieresis -60KPX W Agrave -60KPX W Amacron -60KPX W Aogonek -60KPX W Aring -60KPX W Atilde -60KPX W O -25KPX W Oacute -25KPX W Ocircumflex -25KPX W Odieresis -25KPX W Ograve -25KPX W Ohungarumlaut -25KPX W Omacron -25KPX W Oslash -25KPX W Otilde -25KPX W a -92KPX W aacute -92KPX W abreve -92KPX W acircumflex -92KPX W adieresis -92KPX W agrave -92KPX W amacron -92KPX W aogonek -92KPX W aring -92KPX W atilde -92KPX W colon -65KPX W comma -92KPX W e -92KPX W eacute -92KPX W ecaron -92KPX W ecircumflex -92KPX W edieresis -52KPX W edotaccent -92KPX W egrave -52KPX W emacron -52KPX W eogonek -92KPX W hyphen -37KPX W i -55KPX W iacute -55KPX W iogonek -55KPX W o -92KPX W oacute -92KPX W ocircumflex -92KPX W odieresis -92KPX W ograve -92KPX W ohungarumlaut -92KPX W omacron -92KPX W oslash -92KPX W otilde -92KPX W period -92KPX W semicolon -65KPX W u -55KPX W uacute -55KPX W ucircumflex -55KPX W udieresis -55KPX W ugrave -55KPX W uhungarumlaut -55KPX W umacron -55KPX W uogonek -55KPX W uring -55KPX W y -70KPX W yacute -70KPX W ydieresis -70KPX Y A -50KPX Y Aacute -50KPX Y Abreve -50KPX Y Acircumflex -50KPX Y Adieresis -50KPX Y Agrave -50KPX Y Amacron -50KPX Y Aogonek -50KPX Y Aring -50KPX Y Atilde -50KPX Y O -15KPX Y Oacute -15KPX Y Ocircumflex -15KPX Y Odieresis -15KPX Y Ograve -15KPX Y Ohungarumlaut -15KPX Y Omacron -15KPX Y Oslash -15KPX Y Otilde -15KPX Y a -92KPX Y aacute -92KPX Y abreve -92KPX Y acircumflex -92KPX Y adieresis -92KPX Y agrave -92KPX Y amacron -92KPX Y aogonek -92KPX Y aring -92KPX Y atilde -92KPX Y colon -65KPX Y comma -92KPX Y e -92KPX Y eacute -92KPX Y ecaron -92KPX Y ecircumflex -92KPX Y edieresis -52KPX Y edotaccent -92KPX Y egrave -52KPX Y emacron -52KPX Y eogonek -92KPX Y hyphen -74KPX Y i -74KPX Y iacute -74KPX Y icircumflex -34KPX Y idieresis -34KPX Y igrave -34KPX Y imacron -34KPX Y iogonek -74KPX Y o -92KPX Y oacute -92KPX Y ocircumflex -92KPX Y odieresis -92KPX Y ograve -92KPX Y ohungarumlaut -92KPX Y omacron -92KPX Y oslash -92KPX Y otilde -92KPX Y period -92KPX Y semicolon -65KPX Y u -92KPX Y uacute -92KPX Y ucircumflex -92KPX Y udieresis -92KPX Y ugrave -92KPX Y uhungarumlaut -92KPX Y umacron -92KPX Y uogonek -92KPX Y uring -92KPX Yacute A -50KPX Yacute Aacute -50KPX Yacute Abreve -50KPX Yacute Acircumflex -50KPX Yacute Adieresis -50KPX Yacute Agrave -50KPX Yacute Amacron -50KPX Yacute Aogonek -50KPX Yacute Aring -50KPX Yacute Atilde -50KPX Yacute O -15KPX Yacute Oacute -15KPX Yacute Ocircumflex -15KPX Yacute Odieresis -15KPX Yacute Ograve -15KPX Yacute Ohungarumlaut -15KPX Yacute Omacron -15KPX Yacute Oslash -15KPX Yacute Otilde -15KPX Yacute a -92KPX Yacute aacute -92KPX Yacute abreve -92KPX Yacute acircumflex -92KPX Yacute adieresis -92KPX Yacute agrave -92KPX Yacute amacron -92KPX Yacute aogonek -92KPX Yacute aring -92KPX Yacute atilde -92KPX Yacute colon -65KPX Yacute comma -92KPX Yacute e -92KPX Yacute eacute -92KPX Yacute ecaron -92KPX Yacute ecircumflex -92KPX Yacute edieresis -52KPX Yacute edotaccent -92KPX Yacute egrave -52KPX Yacute emacron -52KPX Yacute eogonek -92KPX Yacute hyphen -74KPX Yacute i -74KPX Yacute iacute -74KPX Yacute icircumflex -34KPX Yacute idieresis -34KPX Yacute igrave -34KPX Yacute imacron -34KPX Yacute iogonek -74KPX Yacute o -92KPX Yacute oacute -92KPX Yacute ocircumflex -92KPX Yacute odieresis -92KPX Yacute ograve -92KPX Yacute ohungarumlaut -92KPX Yacute omacron -92KPX Yacute oslash -92KPX Yacute otilde -92KPX Yacute period -92KPX Yacute semicolon -65KPX Yacute u -92KPX Yacute uacute -92KPX Yacute ucircumflex -92KPX Yacute udieresis -92KPX Yacute ugrave -92KPX Yacute uhungarumlaut -92KPX Yacute umacron -92KPX Yacute uogonek -92KPX Yacute uring -92KPX Ydieresis A -50KPX Ydieresis Aacute -50KPX Ydieresis Abreve -50KPX Ydieresis Acircumflex -50KPX Ydieresis Adieresis -50KPX Ydieresis Agrave -50KPX Ydieresis Amacron -50KPX Ydieresis Aogonek -50KPX Ydieresis Aring -50KPX Ydieresis Atilde -50KPX Ydieresis O -15KPX Ydieresis Oacute -15KPX Ydieresis Ocircumflex -15KPX Ydieresis Odieresis -15KPX Ydieresis Ograve -15KPX Ydieresis Ohungarumlaut -15KPX Ydieresis Omacron -15KPX Ydieresis Oslash -15KPX Ydieresis Otilde -15KPX Ydieresis a -92KPX Ydieresis aacute -92KPX Ydieresis abreve -92KPX Ydieresis acircumflex -92KPX Ydieresis adieresis -92KPX Ydieresis agrave -92KPX Ydieresis amacron -92KPX Ydieresis aogonek -92KPX Ydieresis aring -92KPX Ydieresis atilde -92KPX Ydieresis colon -65KPX Ydieresis comma -92KPX Ydieresis e -92KPX Ydieresis eacute -92KPX Ydieresis ecaron -92KPX Ydieresis ecircumflex -92KPX Ydieresis edieresis -52KPX Ydieresis edotaccent -92KPX Ydieresis egrave -52KPX Ydieresis emacron -52KPX Ydieresis eogonek -92KPX Ydieresis hyphen -74KPX Ydieresis i -74KPX Ydieresis iacute -74KPX Ydieresis icircumflex -34KPX Ydieresis idieresis -34KPX Ydieresis igrave -34KPX Ydieresis imacron -34KPX Ydieresis iogonek -74KPX Ydieresis o -92KPX Ydieresis oacute -92KPX Ydieresis ocircumflex -92KPX Ydieresis odieresis -92KPX Ydieresis ograve -92KPX Ydieresis ohungarumlaut -92KPX Ydieresis omacron -92KPX Ydieresis oslash -92KPX Ydieresis otilde -92KPX Ydieresis period -92KPX Ydieresis semicolon -65KPX Ydieresis u -92KPX Ydieresis uacute -92KPX Ydieresis ucircumflex -92KPX Ydieresis udieresis -92KPX Ydieresis ugrave -92KPX Ydieresis uhungarumlaut -92KPX Ydieresis umacron -92KPX Ydieresis uogonek -92KPX Ydieresis uring -92KPX a g -10KPX a gbreve -10KPX a gcommaaccent -10KPX aacute g -10KPX aacute gbreve -10KPX aacute gcommaaccent -10KPX abreve g -10KPX abreve gbreve -10KPX abreve gcommaaccent -10KPX acircumflex g -10KPX acircumflex gbreve -10KPX acircumflex gcommaaccent -10KPX adieresis g -10KPX adieresis gbreve -10KPX adieresis gcommaaccent -10KPX agrave g -10KPX agrave gbreve -10KPX agrave gcommaaccent -10KPX amacron g -10KPX amacron gbreve -10KPX amacron gcommaaccent -10KPX aogonek g -10KPX aogonek gbreve -10KPX aogonek gcommaaccent -10KPX aring g -10KPX aring gbreve -10KPX aring gcommaaccent -10KPX atilde g -10KPX atilde gbreve -10KPX atilde gcommaaccent -10KPX b period -40KPX b u -20KPX b uacute -20KPX b ucircumflex -20KPX b udieresis -20KPX b ugrave -20KPX b uhungarumlaut -20KPX b umacron -20KPX b uogonek -20KPX b uring -20KPX c h -15KPX c k -20KPX c kcommaaccent -20KPX cacute h -15KPX cacute k -20KPX cacute kcommaaccent -20KPX ccaron h -15KPX ccaron k -20KPX ccaron kcommaaccent -20KPX ccedilla h -15KPX ccedilla k -20KPX ccedilla kcommaaccent -20KPX comma quotedblright -140KPX comma quoteright -140KPX e comma -10KPX e g -40KPX e gbreve -40KPX e gcommaaccent -40KPX e period -15KPX e v -15KPX e w -15KPX e x -20KPX e y -30KPX e yacute -30KPX e ydieresis -30KPX eacute comma -10KPX eacute g -40KPX eacute gbreve -40KPX eacute gcommaaccent -40KPX eacute period -15KPX eacute v -15KPX eacute w -15KPX eacute x -20KPX eacute y -30KPX eacute yacute -30KPX eacute ydieresis -30KPX ecaron comma -10KPX ecaron g -40KPX ecaron gbreve -40KPX ecaron gcommaaccent -40KPX ecaron period -15KPX ecaron v -15KPX ecaron w -15KPX ecaron x -20KPX ecaron y -30KPX ecaron yacute -30KPX ecaron ydieresis -30KPX ecircumflex comma -10KPX ecircumflex g -40KPX ecircumflex gbreve -40KPX ecircumflex gcommaaccent -40KPX ecircumflex period -15KPX ecircumflex v -15KPX ecircumflex w -15KPX ecircumflex x -20KPX ecircumflex y -30KPX ecircumflex yacute -30KPX ecircumflex ydieresis -30KPX edieresis comma -10KPX edieresis g -40KPX edieresis gbreve -40KPX edieresis gcommaaccent -40KPX edieresis period -15KPX edieresis v -15KPX edieresis w -15KPX edieresis x -20KPX edieresis y -30KPX edieresis yacute -30KPX edieresis ydieresis -30KPX edotaccent comma -10KPX edotaccent g -40KPX edotaccent gbreve -40KPX edotaccent gcommaaccent -40KPX edotaccent period -15KPX edotaccent v -15KPX edotaccent w -15KPX edotaccent x -20KPX edotaccent y -30KPX edotaccent yacute -30KPX edotaccent ydieresis -30KPX egrave comma -10KPX egrave g -40KPX egrave gbreve -40KPX egrave gcommaaccent -40KPX egrave period -15KPX egrave v -15KPX egrave w -15KPX egrave x -20KPX egrave y -30KPX egrave yacute -30KPX egrave ydieresis -30KPX emacron comma -10KPX emacron g -40KPX emacron gbreve -40KPX emacron gcommaaccent -40KPX emacron period -15KPX emacron v -15KPX emacron w -15KPX emacron x -20KPX emacron y -30KPX emacron yacute -30KPX emacron ydieresis -30KPX eogonek comma -10KPX eogonek g -40KPX eogonek gbreve -40KPX eogonek gcommaaccent -40KPX eogonek period -15KPX eogonek v -15KPX eogonek w -15KPX eogonek x -20KPX eogonek y -30KPX eogonek yacute -30KPX eogonek ydieresis -30KPX f comma -10KPX f dotlessi -60KPX f f -18KPX f i -20KPX f iogonek -20KPX f period -15KPX f quoteright 92KPX g comma -10KPX g e -10KPX g eacute -10KPX g ecaron -10KPX g ecircumflex -10KPX g edieresis -10KPX g edotaccent -10KPX g egrave -10KPX g emacron -10KPX g eogonek -10KPX g g -10KPX g gbreve -10KPX g gcommaaccent -10KPX g period -15KPX gbreve comma -10KPX gbreve e -10KPX gbreve eacute -10KPX gbreve ecaron -10KPX gbreve ecircumflex -10KPX gbreve edieresis -10KPX gbreve edotaccent -10KPX gbreve egrave -10KPX gbreve emacron -10KPX gbreve eogonek -10KPX gbreve g -10KPX gbreve gbreve -10KPX gbreve gcommaaccent -10KPX gbreve period -15KPX gcommaaccent comma -10KPX gcommaaccent e -10KPX gcommaaccent eacute -10KPX gcommaaccent ecaron -10KPX gcommaaccent ecircumflex -10KPX gcommaaccent edieresis -10KPX gcommaaccent edotaccent -10KPX gcommaaccent egrave -10KPX gcommaaccent emacron -10KPX gcommaaccent eogonek -10KPX gcommaaccent g -10KPX gcommaaccent gbreve -10KPX gcommaaccent gcommaaccent -10KPX gcommaaccent period -15KPX k e -10KPX k eacute -10KPX k ecaron -10KPX k ecircumflex -10KPX k edieresis -10KPX k edotaccent -10KPX k egrave -10KPX k emacron -10KPX k eogonek -10KPX k o -10KPX k oacute -10KPX k ocircumflex -10KPX k odieresis -10KPX k ograve -10KPX k ohungarumlaut -10KPX k omacron -10KPX k oslash -10KPX k otilde -10KPX k y -10KPX k yacute -10KPX k ydieresis -10KPX kcommaaccent e -10KPX kcommaaccent eacute -10KPX kcommaaccent ecaron -10KPX kcommaaccent ecircumflex -10KPX kcommaaccent edieresis -10KPX kcommaaccent edotaccent -10KPX kcommaaccent egrave -10KPX kcommaaccent emacron -10KPX kcommaaccent eogonek -10KPX kcommaaccent o -10KPX kcommaaccent oacute -10KPX kcommaaccent ocircumflex -10KPX kcommaaccent odieresis -10KPX kcommaaccent ograve -10KPX kcommaaccent ohungarumlaut -10KPX kcommaaccent omacron -10KPX kcommaaccent oslash -10KPX kcommaaccent otilde -10KPX kcommaaccent y -10KPX kcommaaccent yacute -10KPX kcommaaccent ydieresis -10KPX n v -40KPX nacute v -40KPX ncaron v -40KPX ncommaaccent v -40KPX ntilde v -40KPX o g -10KPX o gbreve -10KPX o gcommaaccent -10KPX o v -10KPX oacute g -10KPX oacute gbreve -10KPX oacute gcommaaccent -10KPX oacute v -10KPX ocircumflex g -10KPX ocircumflex gbreve -10KPX ocircumflex gcommaaccent -10KPX ocircumflex v -10KPX odieresis g -10KPX odieresis gbreve -10KPX odieresis gcommaaccent -10KPX odieresis v -10KPX ograve g -10KPX ograve gbreve -10KPX ograve gcommaaccent -10KPX ograve v -10KPX ohungarumlaut g -10KPX ohungarumlaut gbreve -10KPX ohungarumlaut gcommaaccent -10KPX ohungarumlaut v -10KPX omacron g -10KPX omacron gbreve -10KPX omacron gcommaaccent -10KPX omacron v -10KPX oslash g -10KPX oslash gbreve -10KPX oslash gcommaaccent -10KPX oslash v -10KPX otilde g -10KPX otilde gbreve -10KPX otilde gcommaaccent -10KPX otilde v -10KPX period quotedblright -140KPX period quoteright -140KPX quoteleft quoteleft -111KPX quoteright d -25KPX quoteright dcroat -25KPX quoteright quoteright -111KPX quoteright r -25KPX quoteright racute -25KPX quoteright rcaron -25KPX quoteright rcommaaccent -25KPX quoteright s -40KPX quoteright sacute -40KPX quoteright scaron -40KPX quoteright scedilla -40KPX quoteright scommaaccent -40KPX quoteright space -111KPX quoteright t -30KPX quoteright tcommaaccent -30KPX quoteright v -10KPX r a -15KPX r aacute -15KPX r abreve -15KPX r acircumflex -15KPX r adieresis -15KPX r agrave -15KPX r amacron -15KPX r aogonek -15KPX r aring -15KPX r atilde -15KPX r c -37KPX r cacute -37KPX r ccaron -37KPX r ccedilla -37KPX r comma -111KPX r d -37KPX r dcroat -37KPX r e -37KPX r eacute -37KPX r ecaron -37KPX r ecircumflex -37KPX r edieresis -37KPX r edotaccent -37KPX r egrave -37KPX r emacron -37KPX r eogonek -37KPX r g -37KPX r gbreve -37KPX r gcommaaccent -37KPX r hyphen -20KPX r o -45KPX r oacute -45KPX r ocircumflex -45KPX r odieresis -45KPX r ograve -45KPX r ohungarumlaut -45KPX r omacron -45KPX r oslash -45KPX r otilde -45KPX r period -111KPX r q -37KPX r s -10KPX r sacute -10KPX r scaron -10KPX r scedilla -10KPX r scommaaccent -10KPX racute a -15KPX racute aacute -15KPX racute abreve -15KPX racute acircumflex -15KPX racute adieresis -15KPX racute agrave -15KPX racute amacron -15KPX racute aogonek -15KPX racute aring -15KPX racute atilde -15KPX racute c -37KPX racute cacute -37KPX racute ccaron -37KPX racute ccedilla -37KPX racute comma -111KPX racute d -37KPX racute dcroat -37KPX racute e -37KPX racute eacute -37KPX racute ecaron -37KPX racute ecircumflex -37KPX racute edieresis -37KPX racute edotaccent -37KPX racute egrave -37KPX racute emacron -37KPX racute eogonek -37KPX racute g -37KPX racute gbreve -37KPX racute gcommaaccent -37KPX racute hyphen -20KPX racute o -45KPX racute oacute -45KPX racute ocircumflex -45KPX racute odieresis -45KPX racute ograve -45KPX racute ohungarumlaut -45KPX racute omacron -45KPX racute oslash -45KPX racute otilde -45KPX racute period -111KPX racute q -37KPX racute s -10KPX racute sacute -10KPX racute scaron -10KPX racute scedilla -10KPX racute scommaaccent -10KPX rcaron a -15KPX rcaron aacute -15KPX rcaron abreve -15KPX rcaron acircumflex -15KPX rcaron adieresis -15KPX rcaron agrave -15KPX rcaron amacron -15KPX rcaron aogonek -15KPX rcaron aring -15KPX rcaron atilde -15KPX rcaron c -37KPX rcaron cacute -37KPX rcaron ccaron -37KPX rcaron ccedilla -37KPX rcaron comma -111KPX rcaron d -37KPX rcaron dcroat -37KPX rcaron e -37KPX rcaron eacute -37KPX rcaron ecaron -37KPX rcaron ecircumflex -37KPX rcaron edieresis -37KPX rcaron edotaccent -37KPX rcaron egrave -37KPX rcaron emacron -37KPX rcaron eogonek -37KPX rcaron g -37KPX rcaron gbreve -37KPX rcaron gcommaaccent -37KPX rcaron hyphen -20KPX rcaron o -45KPX rcaron oacute -45KPX rcaron ocircumflex -45KPX rcaron odieresis -45KPX rcaron ograve -45KPX rcaron ohungarumlaut -45KPX rcaron omacron -45KPX rcaron oslash -45KPX rcaron otilde -45KPX rcaron period -111KPX rcaron q -37KPX rcaron s -10KPX rcaron sacute -10KPX rcaron scaron -10KPX rcaron scedilla -10KPX rcaron scommaaccent -10KPX rcommaaccent a -15KPX rcommaaccent aacute -15KPX rcommaaccent abreve -15KPX rcommaaccent acircumflex -15KPX rcommaaccent adieresis -15KPX rcommaaccent agrave -15KPX rcommaaccent amacron -15KPX rcommaaccent aogonek -15KPX rcommaaccent aring -15KPX rcommaaccent atilde -15KPX rcommaaccent c -37KPX rcommaaccent cacute -37KPX rcommaaccent ccaron -37KPX rcommaaccent ccedilla -37KPX rcommaaccent comma -111KPX rcommaaccent d -37KPX rcommaaccent dcroat -37KPX rcommaaccent e -37KPX rcommaaccent eacute -37KPX rcommaaccent ecaron -37KPX rcommaaccent ecircumflex -37KPX rcommaaccent edieresis -37KPX rcommaaccent edotaccent -37KPX rcommaaccent egrave -37KPX rcommaaccent emacron -37KPX rcommaaccent eogonek -37KPX rcommaaccent g -37KPX rcommaaccent gbreve -37KPX rcommaaccent gcommaaccent -37KPX rcommaaccent hyphen -20KPX rcommaaccent o -45KPX rcommaaccent oacute -45KPX rcommaaccent ocircumflex -45KPX rcommaaccent odieresis -45KPX rcommaaccent ograve -45KPX rcommaaccent ohungarumlaut -45KPX rcommaaccent omacron -45KPX rcommaaccent oslash -45KPX rcommaaccent otilde -45KPX rcommaaccent period -111KPX rcommaaccent q -37KPX rcommaaccent s -10KPX rcommaaccent sacute -10KPX rcommaaccent scaron -10KPX rcommaaccent scedilla -10KPX rcommaaccent scommaaccent -10KPX space A -18KPX space Aacute -18KPX space Abreve -18KPX space Acircumflex -18KPX space Adieresis -18KPX space Agrave -18KPX space Amacron -18KPX space Aogonek -18KPX space Aring -18KPX space Atilde -18KPX space T -18KPX space Tcaron -18KPX space Tcommaaccent -18KPX space V -35KPX space W -40KPX space Y -75KPX space Yacute -75KPX space Ydieresis -75KPX v comma -74KPX v period -74KPX w comma -74KPX w period -74KPX y comma -55KPX y period -55KPX yacute comma -55KPX yacute period -55KPX ydieresis comma -55KPX ydieresis period -55EndKernPairsEndKernDataEndFontMetrics'</body><body package="Type1">timesRoman	"from http://www.adobe.com/devnet/font.html "	&lt;font: #'Times-Roman'&gt;	^self		windowsName: 'Times New Roman'		afm: 'StartFontMetrics 4.1Comment Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.Comment Creation Date: Thu May  1 12:49:17 1997Comment UniqueID 43068Comment VMusage 43909 54934FontName Times-RomanFullName Times RomanFamilyName TimesWeight RomanItalicAngle 0IsFixedPitch falseCharacterSet ExtendedRomanFontBBox -168 -218 1000 898 UnderlinePosition -100UnderlineThickness 50Version 002.000Notice Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype-Hell AG and/or its subsidiaries.EncodingScheme AdobeStandardEncodingCapHeight 662XHeight 450Ascender 683Descender -217StdHW 28StdVW 84StartCharMetrics 315C 32 ; WX 250 ; N space ; B 0 0 0 0 ;C 33 ; WX 333 ; N exclam ; B 130 -9 238 676 ;C 34 ; WX 408 ; N quotedbl ; B 77 431 331 676 ;C 35 ; WX 500 ; N numbersign ; B 5 0 496 662 ;C 36 ; WX 500 ; N dollar ; B 44 -87 457 727 ;C 37 ; WX 833 ; N percent ; B 61 -13 772 676 ;C 38 ; WX 778 ; N ampersand ; B 42 -13 750 676 ;C 39 ; WX 333 ; N quoteright ; B 79 433 218 676 ;C 40 ; WX 333 ; N parenleft ; B 48 -177 304 676 ;C 41 ; WX 333 ; N parenright ; B 29 -177 285 676 ;C 42 ; WX 500 ; N asterisk ; B 69 265 432 676 ;C 43 ; WX 564 ; N plus ; B 30 0 534 506 ;C 44 ; WX 250 ; N comma ; B 56 -141 195 102 ;C 45 ; WX 333 ; N hyphen ; B 39 194 285 257 ;C 46 ; WX 250 ; N period ; B 70 -11 181 100 ;C 47 ; WX 278 ; N slash ; B -9 -14 287 676 ;C 48 ; WX 500 ; N zero ; B 24 -14 476 676 ;C 49 ; WX 500 ; N one ; B 111 0 394 676 ;C 50 ; WX 500 ; N two ; B 30 0 475 676 ;C 51 ; WX 500 ; N three ; B 43 -14 431 676 ;C 52 ; WX 500 ; N four ; B 12 0 472 676 ;C 53 ; WX 500 ; N five ; B 32 -14 438 688 ;C 54 ; WX 500 ; N six ; B 34 -14 468 684 ;C 55 ; WX 500 ; N seven ; B 20 -8 449 662 ;C 56 ; WX 500 ; N eight ; B 56 -14 445 676 ;C 57 ; WX 500 ; N nine ; B 30 -22 459 676 ;C 58 ; WX 278 ; N colon ; B 81 -11 192 459 ;C 59 ; WX 278 ; N semicolon ; B 80 -141 219 459 ;C 60 ; WX 564 ; N less ; B 28 -8 536 514 ;C 61 ; WX 564 ; N equal ; B 30 120 534 386 ;C 62 ; WX 564 ; N greater ; B 28 -8 536 514 ;C 63 ; WX 444 ; N question ; B 68 -8 414 676 ;C 64 ; WX 921 ; N at ; B 116 -14 809 676 ;C 65 ; WX 722 ; N A ; B 15 0 706 674 ;C 66 ; WX 667 ; N B ; B 17 0 593 662 ;C 67 ; WX 667 ; N C ; B 28 -14 633 676 ;C 68 ; WX 722 ; N D ; B 16 0 685 662 ;C 69 ; WX 611 ; N E ; B 12 0 597 662 ;C 70 ; WX 556 ; N F ; B 12 0 546 662 ;C 71 ; WX 722 ; N G ; B 32 -14 709 676 ;C 72 ; WX 722 ; N H ; B 19 0 702 662 ;C 73 ; WX 333 ; N I ; B 18 0 315 662 ;C 74 ; WX 389 ; N J ; B 10 -14 370 662 ;C 75 ; WX 722 ; N K ; B 34 0 723 662 ;C 76 ; WX 611 ; N L ; B 12 0 598 662 ;C 77 ; WX 889 ; N M ; B 12 0 863 662 ;C 78 ; WX 722 ; N N ; B 12 -11 707 662 ;C 79 ; WX 722 ; N O ; B 34 -14 688 676 ;C 80 ; WX 556 ; N P ; B 16 0 542 662 ;C 81 ; WX 722 ; N Q ; B 34 -178 701 676 ;C 82 ; WX 667 ; N R ; B 17 0 659 662 ;C 83 ; WX 556 ; N S ; B 42 -14 491 676 ;C 84 ; WX 611 ; N T ; B 17 0 593 662 ;C 85 ; WX 722 ; N U ; B 14 -14 705 662 ;C 86 ; WX 722 ; N V ; B 16 -11 697 662 ;C 87 ; WX 944 ; N W ; B 5 -11 932 662 ;C 88 ; WX 722 ; N X ; B 10 0 704 662 ;C 89 ; WX 722 ; N Y ; B 22 0 703 662 ;C 90 ; WX 611 ; N Z ; B 9 0 597 662 ;C 91 ; WX 333 ; N bracketleft ; B 88 -156 299 662 ;C 92 ; WX 278 ; N backslash ; B -9 -14 287 676 ;C 93 ; WX 333 ; N bracketright ; B 34 -156 245 662 ;C 94 ; WX 469 ; N asciicircum ; B 24 297 446 662 ;C 95 ; WX 500 ; N underscore ; B 0 -125 500 -75 ;C 96 ; WX 333 ; N quoteleft ; B 115 433 254 676 ;C 97 ; WX 444 ; N a ; B 37 -10 442 460 ;C 98 ; WX 500 ; N b ; B 3 -10 468 683 ;C 99 ; WX 444 ; N c ; B 25 -10 412 460 ;C 100 ; WX 500 ; N d ; B 27 -10 491 683 ;C 101 ; WX 444 ; N e ; B 25 -10 424 460 ;C 102 ; WX 333 ; N f ; B 20 0 383 683 ; L i fi ; L l fl ;C 103 ; WX 500 ; N g ; B 28 -218 470 460 ;C 104 ; WX 500 ; N h ; B 9 0 487 683 ;C 105 ; WX 278 ; N i ; B 16 0 253 683 ;C 106 ; WX 278 ; N j ; B -70 -218 194 683 ;C 107 ; WX 500 ; N k ; B 7 0 505 683 ;C 108 ; WX 278 ; N l ; B 19 0 257 683 ;C 109 ; WX 778 ; N m ; B 16 0 775 460 ;C 110 ; WX 500 ; N n ; B 16 0 485 460 ;C 111 ; WX 500 ; N o ; B 29 -10 470 460 ;C 112 ; WX 500 ; N p ; B 5 -217 470 460 ;C 113 ; WX 500 ; N q ; B 24 -217 488 460 ;C 114 ; WX 333 ; N r ; B 5 0 335 460 ;C 115 ; WX 389 ; N s ; B 51 -10 348 460 ;C 116 ; WX 278 ; N t ; B 13 -10 279 579 ;C 117 ; WX 500 ; N u ; B 9 -10 479 450 ;C 118 ; WX 500 ; N v ; B 19 -14 477 450 ;C 119 ; WX 722 ; N w ; B 21 -14 694 450 ;C 120 ; WX 500 ; N x ; B 17 0 479 450 ;C 121 ; WX 500 ; N y ; B 14 -218 475 450 ;C 122 ; WX 444 ; N z ; B 27 0 418 450 ;C 123 ; WX 480 ; N braceleft ; B 100 -181 350 680 ;C 124 ; WX 200 ; N bar ; B 67 -218 133 782 ;C 125 ; WX 480 ; N braceright ; B 130 -181 380 680 ;C 126 ; WX 541 ; N asciitilde ; B 40 183 502 323 ;C 161 ; WX 333 ; N exclamdown ; B 97 -218 205 467 ;C 162 ; WX 500 ; N cent ; B 53 -138 448 579 ;C 163 ; WX 500 ; N sterling ; B 12 -8 490 676 ;C 164 ; WX 167 ; N fraction ; B -168 -14 331 676 ;C 165 ; WX 500 ; N yen ; B -53 0 512 662 ;C 166 ; WX 500 ; N florin ; B 7 -189 490 676 ;C 167 ; WX 500 ; N section ; B 70 -148 426 676 ;C 168 ; WX 500 ; N currency ; B -22 58 522 602 ;C 169 ; WX 180 ; N quotesingle ; B 48 431 133 676 ;C 170 ; WX 444 ; N quotedblleft ; B 43 433 414 676 ;C 171 ; WX 500 ; N guillemotleft ; B 42 33 456 416 ;C 172 ; WX 333 ; N guilsinglleft ; B 63 33 285 416 ;C 173 ; WX 333 ; N guilsinglright ; B 48 33 270 416 ;C 174 ; WX 556 ; N fi ; B 31 0 521 683 ;C 175 ; WX 556 ; N fl ; B 32 0 521 683 ;C 177 ; WX 500 ; N endash ; B 0 201 500 250 ;C 178 ; WX 500 ; N dagger ; B 59 -149 442 676 ;C 179 ; WX 500 ; N daggerdbl ; B 58 -153 442 676 ;C 180 ; WX 250 ; N periodcentered ; B 70 199 181 310 ;C 182 ; WX 453 ; N paragraph ; B -22 -154 450 662 ;C 183 ; WX 350 ; N bullet ; B 40 196 310 466 ;C 184 ; WX 333 ; N quotesinglbase ; B 79 -141 218 102 ;C 185 ; WX 444 ; N quotedblbase ; B 45 -141 416 102 ;C 186 ; WX 444 ; N quotedblright ; B 30 433 401 676 ;C 187 ; WX 500 ; N guillemotright ; B 44 33 458 416 ;C 188 ; WX 1000 ; N ellipsis ; B 111 -11 888 100 ;C 189 ; WX 1000 ; N perthousand ; B 7 -19 994 706 ;C 191 ; WX 444 ; N questiondown ; B 30 -218 376 466 ;C 193 ; WX 333 ; N grave ; B 19 507 242 678 ;C 194 ; WX 333 ; N acute ; B 93 507 317 678 ;C 195 ; WX 333 ; N circumflex ; B 11 507 322 674 ;C 196 ; WX 333 ; N tilde ; B 1 532 331 638 ;C 197 ; WX 333 ; N macron ; B 11 547 322 601 ;C 198 ; WX 333 ; N breve ; B 26 507 307 664 ;C 199 ; WX 333 ; N dotaccent ; B 118 581 216 681 ;C 200 ; WX 333 ; N dieresis ; B 18 581 315 681 ;C 202 ; WX 333 ; N ring ; B 67 512 266 711 ;C 203 ; WX 333 ; N cedilla ; B 52 -215 261 0 ;C 205 ; WX 333 ; N hungarumlaut ; B -3 507 377 678 ;C 206 ; WX 333 ; N ogonek ; B 62 -165 243 0 ;C 207 ; WX 333 ; N caron ; B 11 507 322 674 ;C 208 ; WX 1000 ; N emdash ; B 0 201 1000 250 ;C 225 ; WX 889 ; N AE ; B 0 0 863 662 ;C 227 ; WX 276 ; N ordfeminine ; B 4 394 270 676 ;C 232 ; WX 611 ; N Lslash ; B 12 0 598 662 ;C 233 ; WX 722 ; N Oslash ; B 34 -80 688 734 ;C 234 ; WX 889 ; N OE ; B 30 -6 885 668 ;C 235 ; WX 310 ; N ordmasculine ; B 6 394 304 676 ;C 241 ; WX 667 ; N ae ; B 38 -10 632 460 ;C 245 ; WX 278 ; N dotlessi ; B 16 0 253 460 ;C 248 ; WX 278 ; N lslash ; B 19 0 259 683 ;C 249 ; WX 500 ; N oslash ; B 29 -112 470 551 ;C 250 ; WX 722 ; N oe ; B 30 -10 690 460 ;C 251 ; WX 500 ; N germandbls ; B 12 -9 468 683 ;C -1 ; WX 333 ; N Idieresis ; B 18 0 315 835 ;C -1 ; WX 444 ; N eacute ; B 25 -10 424 678 ;C -1 ; WX 444 ; N abreve ; B 37 -10 442 664 ;C -1 ; WX 500 ; N uhungarumlaut ; B 9 -10 501 678 ;C -1 ; WX 444 ; N ecaron ; B 25 -10 424 674 ;C -1 ; WX 722 ; N Ydieresis ; B 22 0 703 835 ;C -1 ; WX 564 ; N divide ; B 30 -10 534 516 ;C -1 ; WX 722 ; N Yacute ; B 22 0 703 890 ;C -1 ; WX 722 ; N Acircumflex ; B 15 0 706 886 ;C -1 ; WX 444 ; N aacute ; B 37 -10 442 678 ;C -1 ; WX 722 ; N Ucircumflex ; B 14 -14 705 886 ;C -1 ; WX 500 ; N yacute ; B 14 -218 475 678 ;C -1 ; WX 389 ; N scommaaccent ; B 51 -218 348 460 ;C -1 ; WX 444 ; N ecircumflex ; B 25 -10 424 674 ;C -1 ; WX 722 ; N Uring ; B 14 -14 705 898 ;C -1 ; WX 722 ; N Udieresis ; B 14 -14 705 835 ;C -1 ; WX 444 ; N aogonek ; B 37 -165 469 460 ;C -1 ; WX 722 ; N Uacute ; B 14 -14 705 890 ;C -1 ; WX 500 ; N uogonek ; B 9 -155 487 450 ;C -1 ; WX 611 ; N Edieresis ; B 12 0 597 835 ;C -1 ; WX 722 ; N Dcroat ; B 16 0 685 662 ;C -1 ; WX 250 ; N commaaccent ; B 59 -218 184 -50 ;C -1 ; WX 760 ; N copyright ; B 38 -14 722 676 ;C -1 ; WX 611 ; N Emacron ; B 12 0 597 813 ;C -1 ; WX 444 ; N ccaron ; B 25 -10 412 674 ;C -1 ; WX 444 ; N aring ; B 37 -10 442 711 ;C -1 ; WX 722 ; N Ncommaaccent ; B 12 -198 707 662 ;C -1 ; WX 278 ; N lacute ; B 19 0 290 890 ;C -1 ; WX 444 ; N agrave ; B 37 -10 442 678 ;C -1 ; WX 611 ; N Tcommaaccent ; B 17 -218 593 662 ;C -1 ; WX 667 ; N Cacute ; B 28 -14 633 890 ;C -1 ; WX 444 ; N atilde ; B 37 -10 442 638 ;C -1 ; WX 611 ; N Edotaccent ; B 12 0 597 835 ;C -1 ; WX 389 ; N scaron ; B 39 -10 350 674 ;C -1 ; WX 389 ; N scedilla ; B 51 -215 348 460 ;C -1 ; WX 278 ; N iacute ; B 16 0 290 678 ;C -1 ; WX 471 ; N lozenge ; B 13 0 459 724 ;C -1 ; WX 667 ; N Rcaron ; B 17 0 659 886 ;C -1 ; WX 722 ; N Gcommaaccent ; B 32 -218 709 676 ;C -1 ; WX 500 ; N ucircumflex ; B 9 -10 479 674 ;C -1 ; WX 444 ; N acircumflex ; B 37 -10 442 674 ;C -1 ; WX 722 ; N Amacron ; B 15 0 706 813 ;C -1 ; WX 333 ; N rcaron ; B 5 0 335 674 ;C -1 ; WX 444 ; N ccedilla ; B 25 -215 412 460 ;C -1 ; WX 611 ; N Zdotaccent ; B 9 0 597 835 ;C -1 ; WX 556 ; N Thorn ; B 16 0 542 662 ;C -1 ; WX 722 ; N Omacron ; B 34 -14 688 813 ;C -1 ; WX 667 ; N Racute ; B 17 0 659 890 ;C -1 ; WX 556 ; N Sacute ; B 42 -14 491 890 ;C -1 ; WX 588 ; N dcaron ; B 27 -10 589 695 ;C -1 ; WX 722 ; N Umacron ; B 14 -14 705 813 ;C -1 ; WX 500 ; N uring ; B 9 -10 479 711 ;C -1 ; WX 300 ; N threesuperior ; B 15 262 291 676 ;C -1 ; WX 722 ; N Ograve ; B 34 -14 688 890 ;C -1 ; WX 722 ; N Agrave ; B 15 0 706 890 ;C -1 ; WX 722 ; N Abreve ; B 15 0 706 876 ;C -1 ; WX 564 ; N multiply ; B 38 8 527 497 ;C -1 ; WX 500 ; N uacute ; B 9 -10 479 678 ;C -1 ; WX 611 ; N Tcaron ; B 17 0 593 886 ;C -1 ; WX 476 ; N partialdiff ; B 17 -38 459 710 ;C -1 ; WX 500 ; N ydieresis ; B 14 -218 475 623 ;C -1 ; WX 722 ; N Nacute ; B 12 -11 707 890 ;C -1 ; WX 278 ; N icircumflex ; B -16 0 295 674 ;C -1 ; WX 611 ; N Ecircumflex ; B 12 0 597 886 ;C -1 ; WX 444 ; N adieresis ; B 37 -10 442 623 ;C -1 ; WX 444 ; N edieresis ; B 25 -10 424 623 ;C -1 ; WX 444 ; N cacute ; B 25 -10 413 678 ;C -1 ; WX 500 ; N nacute ; B 16 0 485 678 ;C -1 ; WX 500 ; N umacron ; B 9 -10 479 601 ;C -1 ; WX 722 ; N Ncaron ; B 12 -11 707 886 ;C -1 ; WX 333 ; N Iacute ; B 18 0 317 890 ;C -1 ; WX 564 ; N plusminus ; B 30 0 534 506 ;C -1 ; WX 200 ; N brokenbar ; B 67 -143 133 707 ;C -1 ; WX 760 ; N registered ; B 38 -14 722 676 ;C -1 ; WX 722 ; N Gbreve ; B 32 -14 709 876 ;C -1 ; WX 333 ; N Idotaccent ; B 18 0 315 835 ;C -1 ; WX 600 ; N summation ; B 15 -10 585 706 ;C -1 ; WX 611 ; N Egrave ; B 12 0 597 890 ;C -1 ; WX 333 ; N racute ; B 5 0 335 678 ;C -1 ; WX 500 ; N omacron ; B 29 -10 470 601 ;C -1 ; WX 611 ; N Zacute ; B 9 0 597 890 ;C -1 ; WX 611 ; N Zcaron ; B 9 0 597 886 ;C -1 ; WX 549 ; N greaterequal ; B 26 0 523 666 ;C -1 ; WX 722 ; N Eth ; B 16 0 685 662 ;C -1 ; WX 667 ; N Ccedilla ; B 28 -215 633 676 ;C -1 ; WX 278 ; N lcommaaccent ; B 19 -218 257 683 ;C -1 ; WX 326 ; N tcaron ; B 13 -10 318 722 ;C -1 ; WX 444 ; N eogonek ; B 25 -165 424 460 ;C -1 ; WX 722 ; N Uogonek ; B 14 -165 705 662 ;C -1 ; WX 722 ; N Aacute ; B 15 0 706 890 ;C -1 ; WX 722 ; N Adieresis ; B 15 0 706 835 ;C -1 ; WX 444 ; N egrave ; B 25 -10 424 678 ;C -1 ; WX 444 ; N zacute ; B 27 0 418 678 ;C -1 ; WX 278 ; N iogonek ; B 16 -165 265 683 ;C -1 ; WX 722 ; N Oacute ; B 34 -14 688 890 ;C -1 ; WX 500 ; N oacute ; B 29 -10 470 678 ;C -1 ; WX 444 ; N amacron ; B 37 -10 442 601 ;C -1 ; WX 389 ; N sacute ; B 51 -10 348 678 ;C -1 ; WX 278 ; N idieresis ; B -9 0 288 623 ;C -1 ; WX 722 ; N Ocircumflex ; B 34 -14 688 886 ;C -1 ; WX 722 ; N Ugrave ; B 14 -14 705 890 ;C -1 ; WX 612 ; N Delta ; B 6 0 608 688 ;C -1 ; WX 500 ; N thorn ; B 5 -217 470 683 ;C -1 ; WX 300 ; N twosuperior ; B 1 270 296 676 ;C -1 ; WX 722 ; N Odieresis ; B 34 -14 688 835 ;C -1 ; WX 500 ; N mu ; B 36 -218 512 450 ;C -1 ; WX 278 ; N igrave ; B -8 0 253 678 ;C -1 ; WX 500 ; N ohungarumlaut ; B 29 -10 491 678 ;C -1 ; WX 611 ; N Eogonek ; B 12 -165 597 662 ;C -1 ; WX 500 ; N dcroat ; B 27 -10 500 683 ;C -1 ; WX 750 ; N threequarters ; B 15 -14 718 676 ;C -1 ; WX 556 ; N Scedilla ; B 42 -215 491 676 ;C -1 ; WX 344 ; N lcaron ; B 19 0 347 695 ;C -1 ; WX 722 ; N Kcommaaccent ; B 34 -198 723 662 ;C -1 ; WX 611 ; N Lacute ; B 12 0 598 890 ;C -1 ; WX 980 ; N trademark ; B 30 256 957 662 ;C -1 ; WX 444 ; N edotaccent ; B 25 -10 424 623 ;C -1 ; WX 333 ; N Igrave ; B 18 0 315 890 ;C -1 ; WX 333 ; N Imacron ; B 11 0 322 813 ;C -1 ; WX 611 ; N Lcaron ; B 12 0 598 676 ;C -1 ; WX 750 ; N onehalf ; B 31 -14 746 676 ;C -1 ; WX 549 ; N lessequal ; B 26 0 523 666 ;C -1 ; WX 500 ; N ocircumflex ; B 29 -10 470 674 ;C -1 ; WX 500 ; N ntilde ; B 16 0 485 638 ;C -1 ; WX 722 ; N Uhungarumlaut ; B 14 -14 705 890 ;C -1 ; WX 611 ; N Eacute ; B 12 0 597 890 ;C -1 ; WX 444 ; N emacron ; B 25 -10 424 601 ;C -1 ; WX 500 ; N gbreve ; B 28 -218 470 664 ;C -1 ; WX 750 ; N onequarter ; B 37 -14 718 676 ;C -1 ; WX 556 ; N Scaron ; B 42 -14 491 886 ;C -1 ; WX 556 ; N Scommaaccent ; B 42 -218 491 676 ;C -1 ; WX 722 ; N Ohungarumlaut ; B 34 -14 688 890 ;C -1 ; WX 400 ; N degree ; B 57 390 343 676 ;C -1 ; WX 500 ; N ograve ; B 29 -10 470 678 ;C -1 ; WX 667 ; N Ccaron ; B 28 -14 633 886 ;C -1 ; WX 500 ; N ugrave ; B 9 -10 479 678 ;C -1 ; WX 453 ; N radical ; B 2 -60 452 768 ;C -1 ; WX 722 ; N Dcaron ; B 16 0 685 886 ;C -1 ; WX 333 ; N rcommaaccent ; B 5 -218 335 460 ;C -1 ; WX 722 ; N Ntilde ; B 12 -11 707 850 ;C -1 ; WX 500 ; N otilde ; B 29 -10 470 638 ;C -1 ; WX 667 ; N Rcommaaccent ; B 17 -198 659 662 ;C -1 ; WX 611 ; N Lcommaaccent ; B 12 -218 598 662 ;C -1 ; WX 722 ; N Atilde ; B 15 0 706 850 ;C -1 ; WX 722 ; N Aogonek ; B 15 -165 738 674 ;C -1 ; WX 722 ; N Aring ; B 15 0 706 898 ;C -1 ; WX 722 ; N Otilde ; B 34 -14 688 850 ;C -1 ; WX 444 ; N zdotaccent ; B 27 0 418 623 ;C -1 ; WX 611 ; N Ecaron ; B 12 0 597 886 ;C -1 ; WX 333 ; N Iogonek ; B 18 -165 315 662 ;C -1 ; WX 500 ; N kcommaaccent ; B 7 -218 505 683 ;C -1 ; WX 564 ; N minus ; B 30 220 534 286 ;C -1 ; WX 333 ; N Icircumflex ; B 11 0 322 886 ;C -1 ; WX 500 ; N ncaron ; B 16 0 485 674 ;C -1 ; WX 278 ; N tcommaaccent ; B 13 -218 279 579 ;C -1 ; WX 564 ; N logicalnot ; B 30 108 534 386 ;C -1 ; WX 500 ; N odieresis ; B 29 -10 470 623 ;C -1 ; WX 500 ; N udieresis ; B 9 -10 479 623 ;C -1 ; WX 549 ; N notequal ; B 12 -31 537 547 ;C -1 ; WX 500 ; N gcommaaccent ; B 28 -218 470 749 ;C -1 ; WX 500 ; N eth ; B 29 -10 471 686 ;C -1 ; WX 444 ; N zcaron ; B 27 0 418 674 ;C -1 ; WX 500 ; N ncommaaccent ; B 16 -218 485 460 ;C -1 ; WX 300 ; N onesuperior ; B 57 270 248 676 ;C -1 ; WX 278 ; N imacron ; B 6 0 271 601 ;C -1 ; WX 500 ; N Euro ; B 0 0 0 0 ;EndCharMetricsStartKernDataStartKernPairs 2073KPX A C -40KPX A Cacute -40KPX A Ccaron -40KPX A Ccedilla -40KPX A G -40KPX A Gbreve -40KPX A Gcommaaccent -40KPX A O -55KPX A Oacute -55KPX A Ocircumflex -55KPX A Odieresis -55KPX A Ograve -55KPX A Ohungarumlaut -55KPX A Omacron -55KPX A Oslash -55KPX A Otilde -55KPX A Q -55KPX A T -111KPX A Tcaron -111KPX A Tcommaaccent -111KPX A U -55KPX A Uacute -55KPX A Ucircumflex -55KPX A Udieresis -55KPX A Ugrave -55KPX A Uhungarumlaut -55KPX A Umacron -55KPX A Uogonek -55KPX A Uring -55KPX A V -135KPX A W -90KPX A Y -105KPX A Yacute -105KPX A Ydieresis -105KPX A quoteright -111KPX A v -74KPX A w -92KPX A y -92KPX A yacute -92KPX A ydieresis -92KPX Aacute C -40KPX Aacute Cacute -40KPX Aacute Ccaron -40KPX Aacute Ccedilla -40KPX Aacute G -40KPX Aacute Gbreve -40KPX Aacute Gcommaaccent -40KPX Aacute O -55KPX Aacute Oacute -55KPX Aacute Ocircumflex -55KPX Aacute Odieresis -55KPX Aacute Ograve -55KPX Aacute Ohungarumlaut -55KPX Aacute Omacron -55KPX Aacute Oslash -55KPX Aacute Otilde -55KPX Aacute Q -55KPX Aacute T -111KPX Aacute Tcaron -111KPX Aacute Tcommaaccent -111KPX Aacute U -55KPX Aacute Uacute -55KPX Aacute Ucircumflex -55KPX Aacute Udieresis -55KPX Aacute Ugrave -55KPX Aacute Uhungarumlaut -55KPX Aacute Umacron -55KPX Aacute Uogonek -55KPX Aacute Uring -55KPX Aacute V -135KPX Aacute W -90KPX Aacute Y -105KPX Aacute Yacute -105KPX Aacute Ydieresis -105KPX Aacute quoteright -111KPX Aacute v -74KPX Aacute w -92KPX Aacute y -92KPX Aacute yacute -92KPX Aacute ydieresis -92KPX Abreve C -40KPX Abreve Cacute -40KPX Abreve Ccaron -40KPX Abreve Ccedilla -40KPX Abreve G -40KPX Abreve Gbreve -40KPX Abreve Gcommaaccent -40KPX Abreve O -55KPX Abreve Oacute -55KPX Abreve Ocircumflex -55KPX Abreve Odieresis -55KPX Abreve Ograve -55KPX Abreve Ohungarumlaut -55KPX Abreve Omacron -55KPX Abreve Oslash -55KPX Abreve Otilde -55KPX Abreve Q -55KPX Abreve T -111KPX Abreve Tcaron -111KPX Abreve Tcommaaccent -111KPX Abreve U -55KPX Abreve Uacute -55KPX Abreve Ucircumflex -55KPX Abreve Udieresis -55KPX Abreve Ugrave -55KPX Abreve Uhungarumlaut -55KPX Abreve Umacron -55KPX Abreve Uogonek -55KPX Abreve Uring -55KPX Abreve V -135KPX Abreve W -90KPX Abreve Y -105KPX Abreve Yacute -105KPX Abreve Ydieresis -105KPX Abreve quoteright -111KPX Abreve v -74KPX Abreve w -92KPX Abreve y -92KPX Abreve yacute -92KPX Abreve ydieresis -92KPX Acircumflex C -40KPX Acircumflex Cacute -40KPX Acircumflex Ccaron -40KPX Acircumflex Ccedilla -40KPX Acircumflex G -40KPX Acircumflex Gbreve -40KPX Acircumflex Gcommaaccent -40KPX Acircumflex O -55KPX Acircumflex Oacute -55KPX Acircumflex Ocircumflex -55KPX Acircumflex Odieresis -55KPX Acircumflex Ograve -55KPX Acircumflex Ohungarumlaut -55KPX Acircumflex Omacron -55KPX Acircumflex Oslash -55KPX Acircumflex Otilde -55KPX Acircumflex Q -55KPX Acircumflex T -111KPX Acircumflex Tcaron -111KPX Acircumflex Tcommaaccent -111KPX Acircumflex U -55KPX Acircumflex Uacute -55KPX Acircumflex Ucircumflex -55KPX Acircumflex Udieresis -55KPX Acircumflex Ugrave -55KPX Acircumflex Uhungarumlaut -55KPX Acircumflex Umacron -55KPX Acircumflex Uogonek -55KPX Acircumflex Uring -55KPX Acircumflex V -135KPX Acircumflex W -90KPX Acircumflex Y -105KPX Acircumflex Yacute -105KPX Acircumflex Ydieresis -105KPX Acircumflex quoteright -111KPX Acircumflex v -74KPX Acircumflex w -92KPX Acircumflex y -92KPX Acircumflex yacute -92KPX Acircumflex ydieresis -92KPX Adieresis C -40KPX Adieresis Cacute -40KPX Adieresis Ccaron -40KPX Adieresis Ccedilla -40KPX Adieresis G -40KPX Adieresis Gbreve -40KPX Adieresis Gcommaaccent -40KPX Adieresis O -55KPX Adieresis Oacute -55KPX Adieresis Ocircumflex -55KPX Adieresis Odieresis -55KPX Adieresis Ograve -55KPX Adieresis Ohungarumlaut -55KPX Adieresis Omacron -55KPX Adieresis Oslash -55KPX Adieresis Otilde -55KPX Adieresis Q -55KPX Adieresis T -111KPX Adieresis Tcaron -111KPX Adieresis Tcommaaccent -111KPX Adieresis U -55KPX Adieresis Uacute -55KPX Adieresis Ucircumflex -55KPX Adieresis Udieresis -55KPX Adieresis Ugrave -55KPX Adieresis Uhungarumlaut -55KPX Adieresis Umacron -55KPX Adieresis Uogonek -55KPX Adieresis Uring -55KPX Adieresis V -135KPX Adieresis W -90KPX Adieresis Y -105KPX Adieresis Yacute -105KPX Adieresis Ydieresis -105KPX Adieresis quoteright -111KPX Adieresis v -74KPX Adieresis w -92KPX Adieresis y -92KPX Adieresis yacute -92KPX Adieresis ydieresis -92KPX Agrave C -40KPX Agrave Cacute -40KPX Agrave Ccaron -40KPX Agrave Ccedilla -40KPX Agrave G -40KPX Agrave Gbreve -40KPX Agrave Gcommaaccent -40KPX Agrave O -55KPX Agrave Oacute -55KPX Agrave Ocircumflex -55KPX Agrave Odieresis -55KPX Agrave Ograve -55KPX Agrave Ohungarumlaut -55KPX Agrave Omacron -55KPX Agrave Oslash -55KPX Agrave Otilde -55KPX Agrave Q -55KPX Agrave T -111KPX Agrave Tcaron -111KPX Agrave Tcommaaccent -111KPX Agrave U -55KPX Agrave Uacute -55KPX Agrave Ucircumflex -55KPX Agrave Udieresis -55KPX Agrave Ugrave -55KPX Agrave Uhungarumlaut -55KPX Agrave Umacron -55KPX Agrave Uogonek -55KPX Agrave Uring -55KPX Agrave V -135KPX Agrave W -90KPX Agrave Y -105KPX Agrave Yacute -105KPX Agrave Ydieresis -105KPX Agrave quoteright -111KPX Agrave v -74KPX Agrave w -92KPX Agrave y -92KPX Agrave yacute -92KPX Agrave ydieresis -92KPX Amacron C -40KPX Amacron Cacute -40KPX Amacron Ccaron -40KPX Amacron Ccedilla -40KPX Amacron G -40KPX Amacron Gbreve -40KPX Amacron Gcommaaccent -40KPX Amacron O -55KPX Amacron Oacute -55KPX Amacron Ocircumflex -55KPX Amacron Odieresis -55KPX Amacron Ograve -55KPX Amacron Ohungarumlaut -55KPX Amacron Omacron -55KPX Amacron Oslash -55KPX Amacron Otilde -55KPX Amacron Q -55KPX Amacron T -111KPX Amacron Tcaron -111KPX Amacron Tcommaaccent -111KPX Amacron U -55KPX Amacron Uacute -55KPX Amacron Ucircumflex -55KPX Amacron Udieresis -55KPX Amacron Ugrave -55KPX Amacron Uhungarumlaut -55KPX Amacron Umacron -55KPX Amacron Uogonek -55KPX Amacron Uring -55KPX Amacron V -135KPX Amacron W -90KPX Amacron Y -105KPX Amacron Yacute -105KPX Amacron Ydieresis -105KPX Amacron quoteright -111KPX Amacron v -74KPX Amacron w -92KPX Amacron y -92KPX Amacron yacute -92KPX Amacron ydieresis -92KPX Aogonek C -40KPX Aogonek Cacute -40KPX Aogonek Ccaron -40KPX Aogonek Ccedilla -40KPX Aogonek G -40KPX Aogonek Gbreve -40KPX Aogonek Gcommaaccent -40KPX Aogonek O -55KPX Aogonek Oacute -55KPX Aogonek Ocircumflex -55KPX Aogonek Odieresis -55KPX Aogonek Ograve -55KPX Aogonek Ohungarumlaut -55KPX Aogonek Omacron -55KPX Aogonek Oslash -55KPX Aogonek Otilde -55KPX Aogonek Q -55KPX Aogonek T -111KPX Aogonek Tcaron -111KPX Aogonek Tcommaaccent -111KPX Aogonek U -55KPX Aogonek Uacute -55KPX Aogonek Ucircumflex -55KPX Aogonek Udieresis -55KPX Aogonek Ugrave -55KPX Aogonek Uhungarumlaut -55KPX Aogonek Umacron -55KPX Aogonek Uogonek -55KPX Aogonek Uring -55KPX Aogonek V -135KPX Aogonek W -90KPX Aogonek Y -105KPX Aogonek Yacute -105KPX Aogonek Ydieresis -105KPX Aogonek quoteright -111KPX Aogonek v -74KPX Aogonek w -52KPX Aogonek y -52KPX Aogonek yacute -52KPX Aogonek ydieresis -52KPX Aring C -40KPX Aring Cacute -40KPX Aring Ccaron -40KPX Aring Ccedilla -40KPX Aring G -40KPX Aring Gbreve -40KPX Aring Gcommaaccent -40KPX Aring O -55KPX Aring Oacute -55KPX Aring Ocircumflex -55KPX Aring Odieresis -55KPX Aring Ograve -55KPX Aring Ohungarumlaut -55KPX Aring Omacron -55KPX Aring Oslash -55KPX Aring Otilde -55KPX Aring Q -55KPX Aring T -111KPX Aring Tcaron -111KPX Aring Tcommaaccent -111KPX Aring U -55KPX Aring Uacute -55KPX Aring Ucircumflex -55KPX Aring Udieresis -55KPX Aring Ugrave -55KPX Aring Uhungarumlaut -55KPX Aring Umacron -55KPX Aring Uogonek -55KPX Aring Uring -55KPX Aring V -135KPX Aring W -90KPX Aring Y -105KPX Aring Yacute -105KPX Aring Ydieresis -105KPX Aring quoteright -111KPX Aring v -74KPX Aring w -92KPX Aring y -92KPX Aring yacute -92KPX Aring ydieresis -92KPX Atilde C -40KPX Atilde Cacute -40KPX Atilde Ccaron -40KPX Atilde Ccedilla -40KPX Atilde G -40KPX Atilde Gbreve -40KPX Atilde Gcommaaccent -40KPX Atilde O -55KPX Atilde Oacute -55KPX Atilde Ocircumflex -55KPX Atilde Odieresis -55KPX Atilde Ograve -55KPX Atilde Ohungarumlaut -55KPX Atilde Omacron -55KPX Atilde Oslash -55KPX Atilde Otilde -55KPX Atilde Q -55KPX Atilde T -111KPX Atilde Tcaron -111KPX Atilde Tcommaaccent -111KPX Atilde U -55KPX Atilde Uacute -55KPX Atilde Ucircumflex -55KPX Atilde Udieresis -55KPX Atilde Ugrave -55KPX Atilde Uhungarumlaut -55KPX Atilde Umacron -55KPX Atilde Uogonek -55KPX Atilde Uring -55KPX Atilde V -135KPX Atilde W -90KPX Atilde Y -105KPX Atilde Yacute -105KPX Atilde Ydieresis -105KPX Atilde quoteright -111KPX Atilde v -74KPX Atilde w -92KPX Atilde y -92KPX Atilde yacute -92KPX Atilde ydieresis -92KPX B A -35KPX B Aacute -35KPX B Abreve -35KPX B Acircumflex -35KPX B Adieresis -35KPX B Agrave -35KPX B Amacron -35KPX B Aogonek -35KPX B Aring -35KPX B Atilde -35KPX B U -10KPX B Uacute -10KPX B Ucircumflex -10KPX B Udieresis -10KPX B Ugrave -10KPX B Uhungarumlaut -10KPX B Umacron -10KPX B Uogonek -10KPX B Uring -10KPX D A -40KPX D Aacute -40KPX D Abreve -40KPX D Acircumflex -40KPX D Adieresis -40KPX D Agrave -40KPX D Amacron -40KPX D Aogonek -40KPX D Aring -40KPX D Atilde -40KPX D V -40KPX D W -30KPX D Y -55KPX D Yacute -55KPX D Ydieresis -55KPX Dcaron A -40KPX Dcaron Aacute -40KPX Dcaron Abreve -40KPX Dcaron Acircumflex -40KPX Dcaron Adieresis -40KPX Dcaron Agrave -40KPX Dcaron Amacron -40KPX Dcaron Aogonek -40KPX Dcaron Aring -40KPX Dcaron Atilde -40KPX Dcaron V -40KPX Dcaron W -30KPX Dcaron Y -55KPX Dcaron Yacute -55KPX Dcaron Ydieresis -55KPX Dcroat A -40KPX Dcroat Aacute -40KPX Dcroat Abreve -40KPX Dcroat Acircumflex -40KPX Dcroat Adieresis -40KPX Dcroat Agrave -40KPX Dcroat Amacron -40KPX Dcroat Aogonek -40KPX Dcroat Aring -40KPX Dcroat Atilde -40KPX Dcroat V -40KPX Dcroat W -30KPX Dcroat Y -55KPX Dcroat Yacute -55KPX Dcroat Ydieresis -55KPX F A -74KPX F Aacute -74KPX F Abreve -74KPX F Acircumflex -74KPX F Adieresis -74KPX F Agrave -74KPX F Amacron -74KPX F Aogonek -74KPX F Aring -74KPX F Atilde -74KPX F a -15KPX F aacute -15KPX F abreve -15KPX F acircumflex -15KPX F adieresis -15KPX F agrave -15KPX F amacron -15KPX F aogonek -15KPX F aring -15KPX F atilde -15KPX F comma -80KPX F o -15KPX F oacute -15KPX F ocircumflex -15KPX F odieresis -15KPX F ograve -15KPX F ohungarumlaut -15KPX F omacron -15KPX F oslash -15KPX F otilde -15KPX F period -80KPX J A -60KPX J Aacute -60KPX J Abreve -60KPX J Acircumflex -60KPX J Adieresis -60KPX J Agrave -60KPX J Amacron -60KPX J Aogonek -60KPX J Aring -60KPX J Atilde -60KPX K O -30KPX K Oacute -30KPX K Ocircumflex -30KPX K Odieresis -30KPX K Ograve -30KPX K Ohungarumlaut -30KPX K Omacron -30KPX K Oslash -30KPX K Otilde -30KPX K e -25KPX K eacute -25KPX K ecaron -25KPX K ecircumflex -25KPX K edieresis -25KPX K edotaccent -25KPX K egrave -25KPX K emacron -25KPX K eogonek -25KPX K o -35KPX K oacute -35KPX K ocircumflex -35KPX K odieresis -35KPX K ograve -35KPX K ohungarumlaut -35KPX K omacron -35KPX K oslash -35KPX K otilde -35KPX K u -15KPX K uacute -15KPX K ucircumflex -15KPX K udieresis -15KPX K ugrave -15KPX K uhungarumlaut -15KPX K umacron -15KPX K uogonek -15KPX K uring -15KPX K y -25KPX K yacute -25KPX K ydieresis -25KPX Kcommaaccent O -30KPX Kcommaaccent Oacute -30KPX Kcommaaccent Ocircumflex -30KPX Kcommaaccent Odieresis -30KPX Kcommaaccent Ograve -30KPX Kcommaaccent Ohungarumlaut -30KPX Kcommaaccent Omacron -30KPX Kcommaaccent Oslash -30KPX Kcommaaccent Otilde -30KPX Kcommaaccent e -25KPX Kcommaaccent eacute -25KPX Kcommaaccent ecaron -25KPX Kcommaaccent ecircumflex -25KPX Kcommaaccent edieresis -25KPX Kcommaaccent edotaccent -25KPX Kcommaaccent egrave -25KPX Kcommaaccent emacron -25KPX Kcommaaccent eogonek -25KPX Kcommaaccent o -35KPX Kcommaaccent oacute -35KPX Kcommaaccent ocircumflex -35KPX Kcommaaccent odieresis -35KPX Kcommaaccent ograve -35KPX Kcommaaccent ohungarumlaut -35KPX Kcommaaccent omacron -35KPX Kcommaaccent oslash -35KPX Kcommaaccent otilde -35KPX Kcommaaccent u -15KPX Kcommaaccent uacute -15KPX Kcommaaccent ucircumflex -15KPX Kcommaaccent udieresis -15KPX Kcommaaccent ugrave -15KPX Kcommaaccent uhungarumlaut -15KPX Kcommaaccent umacron -15KPX Kcommaaccent uogonek -15KPX Kcommaaccent uring -15KPX Kcommaaccent y -25KPX Kcommaaccent yacute -25KPX Kcommaaccent ydieresis -25KPX L T -92KPX L Tcaron -92KPX L Tcommaaccent -92KPX L V -100KPX L W -74KPX L Y -100KPX L Yacute -100KPX L Ydieresis -100KPX L quoteright -92KPX L y -55KPX L yacute -55KPX L ydieresis -55KPX Lacute T -92KPX Lacute Tcaron -92KPX Lacute Tcommaaccent -92KPX Lacute V -100KPX Lacute W -74KPX Lacute Y -100KPX Lacute Yacute -100KPX Lacute Ydieresis -100KPX Lacute quoteright -92KPX Lacute y -55KPX Lacute yacute -55KPX Lacute ydieresis -55KPX Lcaron quoteright -92KPX Lcaron y -55KPX Lcaron yacute -55KPX Lcaron ydieresis -55KPX Lcommaaccent T -92KPX Lcommaaccent Tcaron -92KPX Lcommaaccent Tcommaaccent -92KPX Lcommaaccent V -100KPX Lcommaaccent W -74KPX Lcommaaccent Y -100KPX Lcommaaccent Yacute -100KPX Lcommaaccent Ydieresis -100KPX Lcommaaccent quoteright -92KPX Lcommaaccent y -55KPX Lcommaaccent yacute -55KPX Lcommaaccent ydieresis -55KPX Lslash T -92KPX Lslash Tcaron -92KPX Lslash Tcommaaccent -92KPX Lslash V -100KPX Lslash W -74KPX Lslash Y -100KPX Lslash Yacute -100KPX Lslash Ydieresis -100KPX Lslash quoteright -92KPX Lslash y -55KPX Lslash yacute -55KPX Lslash ydieresis -55KPX N A -35KPX N Aacute -35KPX N Abreve -35KPX N Acircumflex -35KPX N Adieresis -35KPX N Agrave -35KPX N Amacron -35KPX N Aogonek -35KPX N Aring -35KPX N Atilde -35KPX Nacute A -35KPX Nacute Aacute -35KPX Nacute Abreve -35KPX Nacute Acircumflex -35KPX Nacute Adieresis -35KPX Nacute Agrave -35KPX Nacute Amacron -35KPX Nacute Aogonek -35KPX Nacute Aring -35KPX Nacute Atilde -35KPX Ncaron A -35KPX Ncaron Aacute -35KPX Ncaron Abreve -35KPX Ncaron Acircumflex -35KPX Ncaron Adieresis -35KPX Ncaron Agrave -35KPX Ncaron Amacron -35KPX Ncaron Aogonek -35KPX Ncaron Aring -35KPX Ncaron Atilde -35KPX Ncommaaccent A -35KPX Ncommaaccent Aacute -35KPX Ncommaaccent Abreve -35KPX Ncommaaccent Acircumflex -35KPX Ncommaaccent Adieresis -35KPX Ncommaaccent Agrave -35KPX Ncommaaccent Amacron -35KPX Ncommaaccent Aogonek -35KPX Ncommaaccent Aring -35KPX Ncommaaccent Atilde -35KPX Ntilde A -35KPX Ntilde Aacute -35KPX Ntilde Abreve -35KPX Ntilde Acircumflex -35KPX Ntilde Adieresis -35KPX Ntilde Agrave -35KPX Ntilde Amacron -35KPX Ntilde Aogonek -35KPX Ntilde Aring -35KPX Ntilde Atilde -35KPX O A -35KPX O Aacute -35KPX O Abreve -35KPX O Acircumflex -35KPX O Adieresis -35KPX O Agrave -35KPX O Amacron -35KPX O Aogonek -35KPX O Aring -35KPX O Atilde -35KPX O T -40KPX O Tcaron -40KPX O Tcommaaccent -40KPX O V -50KPX O W -35KPX O X -40KPX O Y -50KPX O Yacute -50KPX O Ydieresis -50KPX Oacute A -35KPX Oacute Aacute -35KPX Oacute Abreve -35KPX Oacute Acircumflex -35KPX Oacute Adieresis -35KPX Oacute Agrave -35KPX Oacute Amacron -35KPX Oacute Aogonek -35KPX Oacute Aring -35KPX Oacute Atilde -35KPX Oacute T -40KPX Oacute Tcaron -40KPX Oacute Tcommaaccent -40KPX Oacute V -50KPX Oacute W -35KPX Oacute X -40KPX Oacute Y -50KPX Oacute Yacute -50KPX Oacute Ydieresis -50KPX Ocircumflex A -35KPX Ocircumflex Aacute -35KPX Ocircumflex Abreve -35KPX Ocircumflex Acircumflex -35KPX Ocircumflex Adieresis -35KPX Ocircumflex Agrave -35KPX Ocircumflex Amacron -35KPX Ocircumflex Aogonek -35KPX Ocircumflex Aring -35KPX Ocircumflex Atilde -35KPX Ocircumflex T -40KPX Ocircumflex Tcaron -40KPX Ocircumflex Tcommaaccent -40KPX Ocircumflex V -50KPX Ocircumflex W -35KPX Ocircumflex X -40KPX Ocircumflex Y -50KPX Ocircumflex Yacute -50KPX Ocircumflex Ydieresis -50KPX Odieresis A -35KPX Odieresis Aacute -35KPX Odieresis Abreve -35KPX Odieresis Acircumflex -35KPX Odieresis Adieresis -35KPX Odieresis Agrave -35KPX Odieresis Amacron -35KPX Odieresis Aogonek -35KPX Odieresis Aring -35KPX Odieresis Atilde -35KPX Odieresis T -40KPX Odieresis Tcaron -40KPX Odieresis Tcommaaccent -40KPX Odieresis V -50KPX Odieresis W -35KPX Odieresis X -40KPX Odieresis Y -50KPX Odieresis Yacute -50KPX Odieresis Ydieresis -50KPX Ograve A -35KPX Ograve Aacute -35KPX Ograve Abreve -35KPX Ograve Acircumflex -35KPX Ograve Adieresis -35KPX Ograve Agrave -35KPX Ograve Amacron -35KPX Ograve Aogonek -35KPX Ograve Aring -35KPX Ograve Atilde -35KPX Ograve T -40KPX Ograve Tcaron -40KPX Ograve Tcommaaccent -40KPX Ograve V -50KPX Ograve W -35KPX Ograve X -40KPX Ograve Y -50KPX Ograve Yacute -50KPX Ograve Ydieresis -50KPX Ohungarumlaut A -35KPX Ohungarumlaut Aacute -35KPX Ohungarumlaut Abreve -35KPX Ohungarumlaut Acircumflex -35KPX Ohungarumlaut Adieresis -35KPX Ohungarumlaut Agrave -35KPX Ohungarumlaut Amacron -35KPX Ohungarumlaut Aogonek -35KPX Ohungarumlaut Aring -35KPX Ohungarumlaut Atilde -35KPX Ohungarumlaut T -40KPX Ohungarumlaut Tcaron -40KPX Ohungarumlaut Tcommaaccent -40KPX Ohungarumlaut V -50KPX Ohungarumlaut W -35KPX Ohungarumlaut X -40KPX Ohungarumlaut Y -50KPX Ohungarumlaut Yacute -50KPX Ohungarumlaut Ydieresis -50KPX Omacron A -35KPX Omacron Aacute -35KPX Omacron Abreve -35KPX Omacron Acircumflex -35KPX Omacron Adieresis -35KPX Omacron Agrave -35KPX Omacron Amacron -35KPX Omacron Aogonek -35KPX Omacron Aring -35KPX Omacron Atilde -35KPX Omacron T -40KPX Omacron Tcaron -40KPX Omacron Tcommaaccent -40KPX Omacron V -50KPX Omacron W -35KPX Omacron X -40KPX Omacron Y -50KPX Omacron Yacute -50KPX Omacron Ydieresis -50KPX Oslash A -35KPX Oslash Aacute -35KPX Oslash Abreve -35KPX Oslash Acircumflex -35KPX Oslash Adieresis -35KPX Oslash Agrave -35KPX Oslash Amacron -35KPX Oslash Aogonek -35KPX Oslash Aring -35KPX Oslash Atilde -35KPX Oslash T -40KPX Oslash Tcaron -40KPX Oslash Tcommaaccent -40KPX Oslash V -50KPX Oslash W -35KPX Oslash X -40KPX Oslash Y -50KPX Oslash Yacute -50KPX Oslash Ydieresis -50KPX Otilde A -35KPX Otilde Aacute -35KPX Otilde Abreve -35KPX Otilde Acircumflex -35KPX Otilde Adieresis -35KPX Otilde Agrave -35KPX Otilde Amacron -35KPX Otilde Aogonek -35KPX Otilde Aring -35KPX Otilde Atilde -35KPX Otilde T -40KPX Otilde Tcaron -40KPX Otilde Tcommaaccent -40KPX Otilde V -50KPX Otilde W -35KPX Otilde X -40KPX Otilde Y -50KPX Otilde Yacute -50KPX Otilde Ydieresis -50KPX P A -92KPX P Aacute -92KPX P Abreve -92KPX P Acircumflex -92KPX P Adieresis -92KPX P Agrave -92KPX P Amacron -92KPX P Aogonek -92KPX P Aring -92KPX P Atilde -92KPX P a -15KPX P aacute -15KPX P abreve -15KPX P acircumflex -15KPX P adieresis -15KPX P agrave -15KPX P amacron -15KPX P aogonek -15KPX P aring -15KPX P atilde -15KPX P comma -111KPX P period -111KPX Q U -10KPX Q Uacute -10KPX Q Ucircumflex -10KPX Q Udieresis -10KPX Q Ugrave -10KPX Q Uhungarumlaut -10KPX Q Umacron -10KPX Q Uogonek -10KPX Q Uring -10KPX R O -40KPX R Oacute -40KPX R Ocircumflex -40KPX R Odieresis -40KPX R Ograve -40KPX R Ohungarumlaut -40KPX R Omacron -40KPX R Oslash -40KPX R Otilde -40KPX R T -60KPX R Tcaron -60KPX R Tcommaaccent -60KPX R U -40KPX R Uacute -40KPX R Ucircumflex -40KPX R Udieresis -40KPX R Ugrave -40KPX R Uhungarumlaut -40KPX R Umacron -40KPX R Uogonek -40KPX R Uring -40KPX R V -80KPX R W -55KPX R Y -65KPX R Yacute -65KPX R Ydieresis -65KPX Racute O -40KPX Racute Oacute -40KPX Racute Ocircumflex -40KPX Racute Odieresis -40KPX Racute Ograve -40KPX Racute Ohungarumlaut -40KPX Racute Omacron -40KPX Racute Oslash -40KPX Racute Otilde -40KPX Racute T -60KPX Racute Tcaron -60KPX Racute Tcommaaccent -60KPX Racute U -40KPX Racute Uacute -40KPX Racute Ucircumflex -40KPX Racute Udieresis -40KPX Racute Ugrave -40KPX Racute Uhungarumlaut -40KPX Racute Umacron -40KPX Racute Uogonek -40KPX Racute Uring -40KPX Racute V -80KPX Racute W -55KPX Racute Y -65KPX Racute Yacute -65KPX Racute Ydieresis -65KPX Rcaron O -40KPX Rcaron Oacute -40KPX Rcaron Ocircumflex -40KPX Rcaron Odieresis -40KPX Rcaron Ograve -40KPX Rcaron Ohungarumlaut -40KPX Rcaron Omacron -40KPX Rcaron Oslash -40KPX Rcaron Otilde -40KPX Rcaron T -60KPX Rcaron Tcaron -60KPX Rcaron Tcommaaccent -60KPX Rcaron U -40KPX Rcaron Uacute -40KPX Rcaron Ucircumflex -40KPX Rcaron Udieresis -40KPX Rcaron Ugrave -40KPX Rcaron Uhungarumlaut -40KPX Rcaron Umacron -40KPX Rcaron Uogonek -40KPX Rcaron Uring -40KPX Rcaron V -80KPX Rcaron W -55KPX Rcaron Y -65KPX Rcaron Yacute -65KPX Rcaron Ydieresis -65KPX Rcommaaccent O -40KPX Rcommaaccent Oacute -40KPX Rcommaaccent Ocircumflex -40KPX Rcommaaccent Odieresis -40KPX Rcommaaccent Ograve -40KPX Rcommaaccent Ohungarumlaut -40KPX Rcommaaccent Omacron -40KPX Rcommaaccent Oslash -40KPX Rcommaaccent Otilde -40KPX Rcommaaccent T -60KPX Rcommaaccent Tcaron -60KPX Rcommaaccent Tcommaaccent -60KPX Rcommaaccent U -40KPX Rcommaaccent Uacute -40KPX Rcommaaccent Ucircumflex -40KPX Rcommaaccent Udieresis -40KPX Rcommaaccent Ugrave -40KPX Rcommaaccent Uhungarumlaut -40KPX Rcommaaccent Umacron -40KPX Rcommaaccent Uogonek -40KPX Rcommaaccent Uring -40KPX Rcommaaccent V -80KPX Rcommaaccent W -55KPX Rcommaaccent Y -65KPX Rcommaaccent Yacute -65KPX Rcommaaccent Ydieresis -65KPX T A -93KPX T Aacute -93KPX T Abreve -93KPX T Acircumflex -93KPX T Adieresis -93KPX T Agrave -93KPX T Amacron -93KPX T Aogonek -93KPX T Aring -93KPX T Atilde -93KPX T O -18KPX T Oacute -18KPX T Ocircumflex -18KPX T Odieresis -18KPX T Ograve -18KPX T Ohungarumlaut -18KPX T Omacron -18KPX T Oslash -18KPX T Otilde -18KPX T a -80KPX T aacute -80KPX T abreve -80KPX T acircumflex -80KPX T adieresis -40KPX T agrave -40KPX T amacron -40KPX T aogonek -80KPX T aring -80KPX T atilde -40KPX T colon -50KPX T comma -74KPX T e -70KPX T eacute -70KPX T ecaron -70KPX T ecircumflex -70KPX T edieresis -30KPX T edotaccent -70KPX T egrave -70KPX T emacron -30KPX T eogonek -70KPX T hyphen -92KPX T i -35KPX T iacute -35KPX T iogonek -35KPX T o -80KPX T oacute -80KPX T ocircumflex -80KPX T odieresis -80KPX T ograve -80KPX T ohungarumlaut -80KPX T omacron -80KPX T oslash -80KPX T otilde -80KPX T period -74KPX T r -35KPX T racute -35KPX T rcaron -35KPX T rcommaaccent -35KPX T semicolon -55KPX T u -45KPX T uacute -45KPX T ucircumflex -45KPX T udieresis -45KPX T ugrave -45KPX T uhungarumlaut -45KPX T umacron -45KPX T uogonek -45KPX T uring -45KPX T w -80KPX T y -80KPX T yacute -80KPX T ydieresis -80KPX Tcaron A -93KPX Tcaron Aacute -93KPX Tcaron Abreve -93KPX Tcaron Acircumflex -93KPX Tcaron Adieresis -93KPX Tcaron Agrave -93KPX Tcaron Amacron -93KPX Tcaron Aogonek -93KPX Tcaron Aring -93KPX Tcaron Atilde -93KPX Tcaron O -18KPX Tcaron Oacute -18KPX Tcaron Ocircumflex -18KPX Tcaron Odieresis -18KPX Tcaron Ograve -18KPX Tcaron Ohungarumlaut -18KPX Tcaron Omacron -18KPX Tcaron Oslash -18KPX Tcaron Otilde -18KPX Tcaron a -80KPX Tcaron aacute -80KPX Tcaron abreve -80KPX Tcaron acircumflex -80KPX Tcaron adieresis -40KPX Tcaron agrave -40KPX Tcaron amacron -40KPX Tcaron aogonek -80KPX Tcaron aring -80KPX Tcaron atilde -40KPX Tcaron colon -50KPX Tcaron comma -74KPX Tcaron e -70KPX Tcaron eacute -70KPX Tcaron ecaron -70KPX Tcaron ecircumflex -30KPX Tcaron edieresis -30KPX Tcaron edotaccent -70KPX Tcaron egrave -70KPX Tcaron emacron -30KPX Tcaron eogonek -70KPX Tcaron hyphen -92KPX Tcaron i -35KPX Tcaron iacute -35KPX Tcaron iogonek -35KPX Tcaron o -80KPX Tcaron oacute -80KPX Tcaron ocircumflex -80KPX Tcaron odieresis -80KPX Tcaron ograve -80KPX Tcaron ohungarumlaut -80KPX Tcaron omacron -80KPX Tcaron oslash -80KPX Tcaron otilde -80KPX Tcaron period -74KPX Tcaron r -35KPX Tcaron racute -35KPX Tcaron rcaron -35KPX Tcaron rcommaaccent -35KPX Tcaron semicolon -55KPX Tcaron u -45KPX Tcaron uacute -45KPX Tcaron ucircumflex -45KPX Tcaron udieresis -45KPX Tcaron ugrave -45KPX Tcaron uhungarumlaut -45KPX Tcaron umacron -45KPX Tcaron uogonek -45KPX Tcaron uring -45KPX Tcaron w -80KPX Tcaron y -80KPX Tcaron yacute -80KPX Tcaron ydieresis -80KPX Tcommaaccent A -93KPX Tcommaaccent Aacute -93KPX Tcommaaccent Abreve -93KPX Tcommaaccent Acircumflex -93KPX Tcommaaccent Adieresis -93KPX Tcommaaccent Agrave -93KPX Tcommaaccent Amacron -93KPX Tcommaaccent Aogonek -93KPX Tcommaaccent Aring -93KPX Tcommaaccent Atilde -93KPX Tcommaaccent O -18KPX Tcommaaccent Oacute -18KPX Tcommaaccent Ocircumflex -18KPX Tcommaaccent Odieresis -18KPX Tcommaaccent Ograve -18KPX Tcommaaccent Ohungarumlaut -18KPX Tcommaaccent Omacron -18KPX Tcommaaccent Oslash -18KPX Tcommaaccent Otilde -18KPX Tcommaaccent a -80KPX Tcommaaccent aacute -80KPX Tcommaaccent abreve -80KPX Tcommaaccent acircumflex -80KPX Tcommaaccent adieresis -40KPX Tcommaaccent agrave -40KPX Tcommaaccent amacron -40KPX Tcommaaccent aogonek -80KPX Tcommaaccent aring -80KPX Tcommaaccent atilde -40KPX Tcommaaccent colon -50KPX Tcommaaccent comma -74KPX Tcommaaccent e -70KPX Tcommaaccent eacute -70KPX Tcommaaccent ecaron -70KPX Tcommaaccent ecircumflex -30KPX Tcommaaccent edieresis -30KPX Tcommaaccent edotaccent -70KPX Tcommaaccent egrave -30KPX Tcommaaccent emacron -70KPX Tcommaaccent eogonek -70KPX Tcommaaccent hyphen -92KPX Tcommaaccent i -35KPX Tcommaaccent iacute -35KPX Tcommaaccent iogonek -35KPX Tcommaaccent o -80KPX Tcommaaccent oacute -80KPX Tcommaaccent ocircumflex -80KPX Tcommaaccent odieresis -80KPX Tcommaaccent ograve -80KPX Tcommaaccent ohungarumlaut -80KPX Tcommaaccent omacron -80KPX Tcommaaccent oslash -80KPX Tcommaaccent otilde -80KPX Tcommaaccent period -74KPX Tcommaaccent r -35KPX Tcommaaccent racute -35KPX Tcommaaccent rcaron -35KPX Tcommaaccent rcommaaccent -35KPX Tcommaaccent semicolon -55KPX Tcommaaccent u -45KPX Tcommaaccent uacute -45KPX Tcommaaccent ucircumflex -45KPX Tcommaaccent udieresis -45KPX Tcommaaccent ugrave -45KPX Tcommaaccent uhungarumlaut -45KPX Tcommaaccent umacron -45KPX Tcommaaccent uogonek -45KPX Tcommaaccent uring -45KPX Tcommaaccent w -80KPX Tcommaaccent y -80KPX Tcommaaccent yacute -80KPX Tcommaaccent ydieresis -80KPX U A -40KPX U Aacute -40KPX U Abreve -40KPX U Acircumflex -40KPX U Adieresis -40KPX U Agrave -40KPX U Amacron -40KPX U Aogonek -40KPX U Aring -40KPX U Atilde -40KPX Uacute A -40KPX Uacute Aacute -40KPX Uacute Abreve -40KPX Uacute Acircumflex -40KPX Uacute Adieresis -40KPX Uacute Agrave -40KPX Uacute Amacron -40KPX Uacute Aogonek -40KPX Uacute Aring -40KPX Uacute Atilde -40KPX Ucircumflex A -40KPX Ucircumflex Aacute -40KPX Ucircumflex Abreve -40KPX Ucircumflex Acircumflex -40KPX Ucircumflex Adieresis -40KPX Ucircumflex Agrave -40KPX Ucircumflex Amacron -40KPX Ucircumflex Aogonek -40KPX Ucircumflex Aring -40KPX Ucircumflex Atilde -40KPX Udieresis A -40KPX Udieresis Aacute -40KPX Udieresis Abreve -40KPX Udieresis Acircumflex -40KPX Udieresis Adieresis -40KPX Udieresis Agrave -40KPX Udieresis Amacron -40KPX Udieresis Aogonek -40KPX Udieresis Aring -40KPX Udieresis Atilde -40KPX Ugrave A -40KPX Ugrave Aacute -40KPX Ugrave Abreve -40KPX Ugrave Acircumflex -40KPX Ugrave Adieresis -40KPX Ugrave Agrave -40KPX Ugrave Amacron -40KPX Ugrave Aogonek -40KPX Ugrave Aring -40KPX Ugrave Atilde -40KPX Uhungarumlaut A -40KPX Uhungarumlaut Aacute -40KPX Uhungarumlaut Abreve -40KPX Uhungarumlaut Acircumflex -40KPX Uhungarumlaut Adieresis -40KPX Uhungarumlaut Agrave -40KPX Uhungarumlaut Amacron -40KPX Uhungarumlaut Aogonek -40KPX Uhungarumlaut Aring -40KPX Uhungarumlaut Atilde -40KPX Umacron A -40KPX Umacron Aacute -40KPX Umacron Abreve -40KPX Umacron Acircumflex -40KPX Umacron Adieresis -40KPX Umacron Agrave -40KPX Umacron Amacron -40KPX Umacron Aogonek -40KPX Umacron Aring -40KPX Umacron Atilde -40KPX Uogonek A -40KPX Uogonek Aacute -40KPX Uogonek Abreve -40KPX Uogonek Acircumflex -40KPX Uogonek Adieresis -40KPX Uogonek Agrave -40KPX Uogonek Amacron -40KPX Uogonek Aogonek -40KPX Uogonek Aring -40KPX Uogonek Atilde -40KPX Uring A -40KPX Uring Aacute -40KPX Uring Abreve -40KPX Uring Acircumflex -40KPX Uring Adieresis -40KPX Uring Agrave -40KPX Uring Amacron -40KPX Uring Aogonek -40KPX Uring Aring -40KPX Uring Atilde -40KPX V A -135KPX V Aacute -135KPX V Abreve -135KPX V Acircumflex -135KPX V Adieresis -135KPX V Agrave -135KPX V Amacron -135KPX V Aogonek -135KPX V Aring -135KPX V Atilde -135KPX V G -15KPX V Gbreve -15KPX V Gcommaaccent -15KPX V O -40KPX V Oacute -40KPX V Ocircumflex -40KPX V Odieresis -40KPX V Ograve -40KPX V Ohungarumlaut -40KPX V Omacron -40KPX V Oslash -40KPX V Otilde -40KPX V a -111KPX V aacute -111KPX V abreve -111KPX V acircumflex -71KPX V adieresis -71KPX V agrave -71KPX V amacron -71KPX V aogonek -111KPX V aring -111KPX V atilde -71KPX V colon -74KPX V comma -129KPX V e -111KPX V eacute -111KPX V ecaron -71KPX V ecircumflex -71KPX V edieresis -71KPX V edotaccent -111KPX V egrave -71KPX V emacron -71KPX V eogonek -111KPX V hyphen -100KPX V i -60KPX V iacute -60KPX V icircumflex -20KPX V idieresis -20KPX V igrave -20KPX V imacron -20KPX V iogonek -60KPX V o -129KPX V oacute -129KPX V ocircumflex -129KPX V odieresis -89KPX V ograve -89KPX V ohungarumlaut -129KPX V omacron -89KPX V oslash -129KPX V otilde -89KPX V period -129KPX V semicolon -74KPX V u -75KPX V uacute -75KPX V ucircumflex -75KPX V udieresis -75KPX V ugrave -75KPX V uhungarumlaut -75KPX V umacron -75KPX V uogonek -75KPX V uring -75KPX W A -120KPX W Aacute -120KPX W Abreve -120KPX W Acircumflex -120KPX W Adieresis -120KPX W Agrave -120KPX W Amacron -120KPX W Aogonek -120KPX W Aring -120KPX W Atilde -120KPX W O -10KPX W Oacute -10KPX W Ocircumflex -10KPX W Odieresis -10KPX W Ograve -10KPX W Ohungarumlaut -10KPX W Omacron -10KPX W Oslash -10KPX W Otilde -10KPX W a -80KPX W aacute -80KPX W abreve -80KPX W acircumflex -80KPX W adieresis -80KPX W agrave -80KPX W amacron -80KPX W aogonek -80KPX W aring -80KPX W atilde -80KPX W colon -37KPX W comma -92KPX W e -80KPX W eacute -80KPX W ecaron -80KPX W ecircumflex -80KPX W edieresis -40KPX W edotaccent -80KPX W egrave -40KPX W emacron -40KPX W eogonek -80KPX W hyphen -65KPX W i -40KPX W iacute -40KPX W iogonek -40KPX W o -80KPX W oacute -80KPX W ocircumflex -80KPX W odieresis -80KPX W ograve -80KPX W ohungarumlaut -80KPX W omacron -80KPX W oslash -80KPX W otilde -80KPX W period -92KPX W semicolon -37KPX W u -50KPX W uacute -50KPX W ucircumflex -50KPX W udieresis -50KPX W ugrave -50KPX W uhungarumlaut -50KPX W umacron -50KPX W uogonek -50KPX W uring -50KPX W y -73KPX W yacute -73KPX W ydieresis -73KPX Y A -120KPX Y Aacute -120KPX Y Abreve -120KPX Y Acircumflex -120KPX Y Adieresis -120KPX Y Agrave -120KPX Y Amacron -120KPX Y Aogonek -120KPX Y Aring -120KPX Y Atilde -120KPX Y O -30KPX Y Oacute -30KPX Y Ocircumflex -30KPX Y Odieresis -30KPX Y Ograve -30KPX Y Ohungarumlaut -30KPX Y Omacron -30KPX Y Oslash -30KPX Y Otilde -30KPX Y a -100KPX Y aacute -100KPX Y abreve -100KPX Y acircumflex -100KPX Y adieresis -60KPX Y agrave -60KPX Y amacron -60KPX Y aogonek -100KPX Y aring -100KPX Y atilde -60KPX Y colon -92KPX Y comma -129KPX Y e -100KPX Y eacute -100KPX Y ecaron -100KPX Y ecircumflex -100KPX Y edieresis -60KPX Y edotaccent -100KPX Y egrave -60KPX Y emacron -60KPX Y eogonek -100KPX Y hyphen -111KPX Y i -55KPX Y iacute -55KPX Y iogonek -55KPX Y o -110KPX Y oacute -110KPX Y ocircumflex -110KPX Y odieresis -70KPX Y ograve -70KPX Y ohungarumlaut -110KPX Y omacron -70KPX Y oslash -110KPX Y otilde -70KPX Y period -129KPX Y semicolon -92KPX Y u -111KPX Y uacute -111KPX Y ucircumflex -111KPX Y udieresis -71KPX Y ugrave -71KPX Y uhungarumlaut -111KPX Y umacron -71KPX Y uogonek -111KPX Y uring -111KPX Yacute A -120KPX Yacute Aacute -120KPX Yacute Abreve -120KPX Yacute Acircumflex -120KPX Yacute Adieresis -120KPX Yacute Agrave -120KPX Yacute Amacron -120KPX Yacute Aogonek -120KPX Yacute Aring -120KPX Yacute Atilde -120KPX Yacute O -30KPX Yacute Oacute -30KPX Yacute Ocircumflex -30KPX Yacute Odieresis -30KPX Yacute Ograve -30KPX Yacute Ohungarumlaut -30KPX Yacute Omacron -30KPX Yacute Oslash -30KPX Yacute Otilde -30KPX Yacute a -100KPX Yacute aacute -100KPX Yacute abreve -100KPX Yacute acircumflex -100KPX Yacute adieresis -60KPX Yacute agrave -60KPX Yacute amacron -60KPX Yacute aogonek -100KPX Yacute aring -100KPX Yacute atilde -60KPX Yacute colon -92KPX Yacute comma -129KPX Yacute e -100KPX Yacute eacute -100KPX Yacute ecaron -100KPX Yacute ecircumflex -100KPX Yacute edieresis -60KPX Yacute edotaccent -100KPX Yacute egrave -60KPX Yacute emacron -60KPX Yacute eogonek -100KPX Yacute hyphen -111KPX Yacute i -55KPX Yacute iacute -55KPX Yacute iogonek -55KPX Yacute o -110KPX Yacute oacute -110KPX Yacute ocircumflex -110KPX Yacute odieresis -70KPX Yacute ograve -70KPX Yacute ohungarumlaut -110KPX Yacute omacron -70KPX Yacute oslash -110KPX Yacute otilde -70KPX Yacute period -129KPX Yacute semicolon -92KPX Yacute u -111KPX Yacute uacute -111KPX Yacute ucircumflex -111KPX Yacute udieresis -71KPX Yacute ugrave -71KPX Yacute uhungarumlaut -111KPX Yacute umacron -71KPX Yacute uogonek -111KPX Yacute uring -111KPX Ydieresis A -120KPX Ydieresis Aacute -120KPX Ydieresis Abreve -120KPX Ydieresis Acircumflex -120KPX Ydieresis Adieresis -120KPX Ydieresis Agrave -120KPX Ydieresis Amacron -120KPX Ydieresis Aogonek -120KPX Ydieresis Aring -120KPX Ydieresis Atilde -120KPX Ydieresis O -30KPX Ydieresis Oacute -30KPX Ydieresis Ocircumflex -30KPX Ydieresis Odieresis -30KPX Ydieresis Ograve -30KPX Ydieresis Ohungarumlaut -30KPX Ydieresis Omacron -30KPX Ydieresis Oslash -30KPX Ydieresis Otilde -30KPX Ydieresis a -100KPX Ydieresis aacute -100KPX Ydieresis abreve -100KPX Ydieresis acircumflex -100KPX Ydieresis adieresis -60KPX Ydieresis agrave -60KPX Ydieresis amacron -60KPX Ydieresis aogonek -100KPX Ydieresis aring -100KPX Ydieresis atilde -100KPX Ydieresis colon -92KPX Ydieresis comma -129KPX Ydieresis e -100KPX Ydieresis eacute -100KPX Ydieresis ecaron -100KPX Ydieresis ecircumflex -100KPX Ydieresis edieresis -60KPX Ydieresis edotaccent -100KPX Ydieresis egrave -60KPX Ydieresis emacron -60KPX Ydieresis eogonek -100KPX Ydieresis hyphen -111KPX Ydieresis i -55KPX Ydieresis iacute -55KPX Ydieresis iogonek -55KPX Ydieresis o -110KPX Ydieresis oacute -110KPX Ydieresis ocircumflex -110KPX Ydieresis odieresis -70KPX Ydieresis ograve -70KPX Ydieresis ohungarumlaut -110KPX Ydieresis omacron -70KPX Ydieresis oslash -110KPX Ydieresis otilde -70KPX Ydieresis period -129KPX Ydieresis semicolon -92KPX Ydieresis u -111KPX Ydieresis uacute -111KPX Ydieresis ucircumflex -111KPX Ydieresis udieresis -71KPX Ydieresis ugrave -71KPX Ydieresis uhungarumlaut -111KPX Ydieresis umacron -71KPX Ydieresis uogonek -111KPX Ydieresis uring -111KPX a v -20KPX a w -15KPX aacute v -20KPX aacute w -15KPX abreve v -20KPX abreve w -15KPX acircumflex v -20KPX acircumflex w -15KPX adieresis v -20KPX adieresis w -15KPX agrave v -20KPX agrave w -15KPX amacron v -20KPX amacron w -15KPX aogonek v -20KPX aogonek w -15KPX aring v -20KPX aring w -15KPX atilde v -20KPX atilde w -15KPX b period -40KPX b u -20KPX b uacute -20KPX b ucircumflex -20KPX b udieresis -20KPX b ugrave -20KPX b uhungarumlaut -20KPX b umacron -20KPX b uogonek -20KPX b uring -20KPX b v -15KPX c y -15KPX c yacute -15KPX c ydieresis -15KPX cacute y -15KPX cacute yacute -15KPX cacute ydieresis -15KPX ccaron y -15KPX ccaron yacute -15KPX ccaron ydieresis -15KPX ccedilla y -15KPX ccedilla yacute -15KPX ccedilla ydieresis -15KPX comma quotedblright -70KPX comma quoteright -70KPX e g -15KPX e gbreve -15KPX e gcommaaccent -15KPX e v -25KPX e w -25KPX e x -15KPX e y -15KPX e yacute -15KPX e ydieresis -15KPX eacute g -15KPX eacute gbreve -15KPX eacute gcommaaccent -15KPX eacute v -25KPX eacute w -25KPX eacute x -15KPX eacute y -15KPX eacute yacute -15KPX eacute ydieresis -15KPX ecaron g -15KPX ecaron gbreve -15KPX ecaron gcommaaccent -15KPX ecaron v -25KPX ecaron w -25KPX ecaron x -15KPX ecaron y -15KPX ecaron yacute -15KPX ecaron ydieresis -15KPX ecircumflex g -15KPX ecircumflex gbreve -15KPX ecircumflex gcommaaccent -15KPX ecircumflex v -25KPX ecircumflex w -25KPX ecircumflex x -15KPX ecircumflex y -15KPX ecircumflex yacute -15KPX ecircumflex ydieresis -15KPX edieresis g -15KPX edieresis gbreve -15KPX edieresis gcommaaccent -15KPX edieresis v -25KPX edieresis w -25KPX edieresis x -15KPX edieresis y -15KPX edieresis yacute -15KPX edieresis ydieresis -15KPX edotaccent g -15KPX edotaccent gbreve -15KPX edotaccent gcommaaccent -15KPX edotaccent v -25KPX edotaccent w -25KPX edotaccent x -15KPX edotaccent y -15KPX edotaccent yacute -15KPX edotaccent ydieresis -15KPX egrave g -15KPX egrave gbreve -15KPX egrave gcommaaccent -15KPX egrave v -25KPX egrave w -25KPX egrave x -15KPX egrave y -15KPX egrave yacute -15KPX egrave ydieresis -15KPX emacron g -15KPX emacron gbreve -15KPX emacron gcommaaccent -15KPX emacron v -25KPX emacron w -25KPX emacron x -15KPX emacron y -15KPX emacron yacute -15KPX emacron ydieresis -15KPX eogonek g -15KPX eogonek gbreve -15KPX eogonek gcommaaccent -15KPX eogonek v -25KPX eogonek w -25KPX eogonek x -15KPX eogonek y -15KPX eogonek yacute -15KPX eogonek ydieresis -15KPX f a -10KPX f aacute -10KPX f abreve -10KPX f acircumflex -10KPX f adieresis -10KPX f agrave -10KPX f amacron -10KPX f aogonek -10KPX f aring -10KPX f atilde -10KPX f dotlessi -50KPX f f -25KPX f i -20KPX f iacute -20KPX f quoteright 55KPX g a -5KPX g aacute -5KPX g abreve -5KPX g acircumflex -5KPX g adieresis -5KPX g agrave -5KPX g amacron -5KPX g aogonek -5KPX g aring -5KPX g atilde -5KPX gbreve a -5KPX gbreve aacute -5KPX gbreve abreve -5KPX gbreve acircumflex -5KPX gbreve adieresis -5KPX gbreve agrave -5KPX gbreve amacron -5KPX gbreve aogonek -5KPX gbreve aring -5KPX gbreve atilde -5KPX gcommaaccent a -5KPX gcommaaccent aacute -5KPX gcommaaccent abreve -5KPX gcommaaccent acircumflex -5KPX gcommaaccent adieresis -5KPX gcommaaccent agrave -5KPX gcommaaccent amacron -5KPX gcommaaccent aogonek -5KPX gcommaaccent aring -5KPX gcommaaccent atilde -5KPX h y -5KPX h yacute -5KPX h ydieresis -5KPX i v -25KPX iacute v -25KPX icircumflex v -25KPX idieresis v -25KPX igrave v -25KPX imacron v -25KPX iogonek v -25KPX k e -10KPX k eacute -10KPX k ecaron -10KPX k ecircumflex -10KPX k edieresis -10KPX k edotaccent -10KPX k egrave -10KPX k emacron -10KPX k eogonek -10KPX k o -10KPX k oacute -10KPX k ocircumflex -10KPX k odieresis -10KPX k ograve -10KPX k ohungarumlaut -10KPX k omacron -10KPX k oslash -10KPX k otilde -10KPX k y -15KPX k yacute -15KPX k ydieresis -15KPX kcommaaccent e -10KPX kcommaaccent eacute -10KPX kcommaaccent ecaron -10KPX kcommaaccent ecircumflex -10KPX kcommaaccent edieresis -10KPX kcommaaccent edotaccent -10KPX kcommaaccent egrave -10KPX kcommaaccent emacron -10KPX kcommaaccent eogonek -10KPX kcommaaccent o -10KPX kcommaaccent oacute -10KPX kcommaaccent ocircumflex -10KPX kcommaaccent odieresis -10KPX kcommaaccent ograve -10KPX kcommaaccent ohungarumlaut -10KPX kcommaaccent omacron -10KPX kcommaaccent oslash -10KPX kcommaaccent otilde -10KPX kcommaaccent y -15KPX kcommaaccent yacute -15KPX kcommaaccent ydieresis -15KPX l w -10KPX lacute w -10KPX lcommaaccent w -10KPX lslash w -10KPX n v -40KPX n y -15KPX n yacute -15KPX n ydieresis -15KPX nacute v -40KPX nacute y -15KPX nacute yacute -15KPX nacute ydieresis -15KPX ncaron v -40KPX ncaron y -15KPX ncaron yacute -15KPX ncaron ydieresis -15KPX ncommaaccent v -40KPX ncommaaccent y -15KPX ncommaaccent yacute -15KPX ncommaaccent ydieresis -15KPX ntilde v -40KPX ntilde y -15KPX ntilde yacute -15KPX ntilde ydieresis -15KPX o v -15KPX o w -25KPX o y -10KPX o yacute -10KPX o ydieresis -10KPX oacute v -15KPX oacute w -25KPX oacute y -10KPX oacute yacute -10KPX oacute ydieresis -10KPX ocircumflex v -15KPX ocircumflex w -25KPX ocircumflex y -10KPX ocircumflex yacute -10KPX ocircumflex ydieresis -10KPX odieresis v -15KPX odieresis w -25KPX odieresis y -10KPX odieresis yacute -10KPX odieresis ydieresis -10KPX ograve v -15KPX ograve w -25KPX ograve y -10KPX ograve yacute -10KPX ograve ydieresis -10KPX ohungarumlaut v -15KPX ohungarumlaut w -25KPX ohungarumlaut y -10KPX ohungarumlaut yacute -10KPX ohungarumlaut ydieresis -10KPX omacron v -15KPX omacron w -25KPX omacron y -10KPX omacron yacute -10KPX omacron ydieresis -10KPX oslash v -15KPX oslash w -25KPX oslash y -10KPX oslash yacute -10KPX oslash ydieresis -10KPX otilde v -15KPX otilde w -25KPX otilde y -10KPX otilde yacute -10KPX otilde ydieresis -10KPX p y -10KPX p yacute -10KPX p ydieresis -10KPX period quotedblright -70KPX period quoteright -70KPX quotedblleft A -80KPX quotedblleft Aacute -80KPX quotedblleft Abreve -80KPX quotedblleft Acircumflex -80KPX quotedblleft Adieresis -80KPX quotedblleft Agrave -80KPX quotedblleft Amacron -80KPX quotedblleft Aogonek -80KPX quotedblleft Aring -80KPX quotedblleft Atilde -80KPX quoteleft A -80KPX quoteleft Aacute -80KPX quoteleft Abreve -80KPX quoteleft Acircumflex -80KPX quoteleft Adieresis -80KPX quoteleft Agrave -80KPX quoteleft Amacron -80KPX quoteleft Aogonek -80KPX quoteleft Aring -80KPX quoteleft Atilde -80KPX quoteleft quoteleft -74KPX quoteright d -50KPX quoteright dcroat -50KPX quoteright l -10KPX quoteright lacute -10KPX quoteright lcommaaccent -10KPX quoteright lslash -10KPX quoteright quoteright -74KPX quoteright r -50KPX quoteright racute -50KPX quoteright rcaron -50KPX quoteright rcommaaccent -50KPX quoteright s -55KPX quoteright sacute -55KPX quoteright scaron -55KPX quoteright scedilla -55KPX quoteright scommaaccent -55KPX quoteright space -74KPX quoteright t -18KPX quoteright tcommaaccent -18KPX quoteright v -50KPX r comma -40KPX r g -18KPX r gbreve -18KPX r gcommaaccent -18KPX r hyphen -20KPX r period -55KPX racute comma -40KPX racute g -18KPX racute gbreve -18KPX racute gcommaaccent -18KPX racute hyphen -20KPX racute period -55KPX rcaron comma -40KPX rcaron g -18KPX rcaron gbreve -18KPX rcaron gcommaaccent -18KPX rcaron hyphen -20KPX rcaron period -55KPX rcommaaccent comma -40KPX rcommaaccent g -18KPX rcommaaccent gbreve -18KPX rcommaaccent gcommaaccent -18KPX rcommaaccent hyphen -20KPX rcommaaccent period -55KPX space A -55KPX space Aacute -55KPX space Abreve -55KPX space Acircumflex -55KPX space Adieresis -55KPX space Agrave -55KPX space Amacron -55KPX space Aogonek -55KPX space Aring -55KPX space Atilde -55KPX space T -18KPX space Tcaron -18KPX space Tcommaaccent -18KPX space V -50KPX space W -30KPX space Y -90KPX space Yacute -90KPX space Ydieresis -90KPX v a -25KPX v aacute -25KPX v abreve -25KPX v acircumflex -25KPX v adieresis -25KPX v agrave -25KPX v amacron -25KPX v aogonek -25KPX v aring -25KPX v atilde -25KPX v comma -65KPX v e -15KPX v eacute -15KPX v ecaron -15KPX v ecircumflex -15KPX v edieresis -15KPX v edotaccent -15KPX v egrave -15KPX v emacron -15KPX v eogonek -15KPX v o -20KPX v oacute -20KPX v ocircumflex -20KPX v odieresis -20KPX v ograve -20KPX v ohungarumlaut -20KPX v omacron -20KPX v oslash -20KPX v otilde -20KPX v period -65KPX w a -10KPX w aacute -10KPX w abreve -10KPX w acircumflex -10KPX w adieresis -10KPX w agrave -10KPX w amacron -10KPX w aogonek -10KPX w aring -10KPX w atilde -10KPX w comma -65KPX w o -10KPX w oacute -10KPX w ocircumflex -10KPX w odieresis -10KPX w ograve -10KPX w ohungarumlaut -10KPX w omacron -10KPX w oslash -10KPX w otilde -10KPX w period -65KPX x e -15KPX x eacute -15KPX x ecaron -15KPX x ecircumflex -15KPX x edieresis -15KPX x edotaccent -15KPX x egrave -15KPX x emacron -15KPX x eogonek -15KPX y comma -65KPX y period -65KPX yacute comma -65KPX yacute period -65KPX ydieresis comma -65KPX ydieresis period -65EndKernPairsEndKernDataEndFontMetrics'</body><body package="Type1">zapfDingbats	"from http://www.adobe.com/devnet/font.html "	&lt;font: #ZapfDingbats&gt;	^self		windowsName: 'Arial'		afm: 'StartFontMetrics 4.1Comment Copyright (c) 1985, 1987, 1988, 1989, 1997 Adobe Systems Incorporated. All Rights Reserved.Comment Creation Date: Thu May  1 15:14:13 1997Comment UniqueID 43082Comment VMusage 45775 55535FontName ZapfDingbatsFullName ITC Zapf DingbatsFamilyName ZapfDingbatsWeight MediumItalicAngle 0IsFixedPitch falseCharacterSet SpecialFontBBox -1 -143 981 820 UnderlinePosition -100UnderlineThickness 50Version 002.000Notice Copyright (c) 1985, 1987, 1988, 1989, 1997 Adobe Systems Incorporated. All Rights Reserved.ITC Zapf Dingbats is a registered trademark of International Typeface Corporation.EncodingScheme FontSpecificStdHW 28StdVW 90StartCharMetrics 202C 32 ; WX 278 ; N space ; B 0 0 0 0 ;C 33 ; WX 974 ; N a1 ; B 35 72 939 621 ;C 34 ; WX 961 ; N a2 ; B 35 81 927 611 ;C 35 ; WX 974 ; N a202 ; B 35 72 939 621 ;C 36 ; WX 980 ; N a3 ; B 35 0 945 692 ;C 37 ; WX 719 ; N a4 ; B 34 139 685 566 ;C 38 ; WX 789 ; N a5 ; B 35 -14 755 705 ;C 39 ; WX 790 ; N a119 ; B 35 -14 755 705 ;C 40 ; WX 791 ; N a118 ; B 35 -13 761 705 ;C 41 ; WX 690 ; N a117 ; B 34 138 655 553 ;C 42 ; WX 960 ; N a11 ; B 35 123 925 568 ;C 43 ; WX 939 ; N a12 ; B 35 134 904 559 ;C 44 ; WX 549 ; N a13 ; B 29 -11 516 705 ;C 45 ; WX 855 ; N a14 ; B 34 59 820 632 ;C 46 ; WX 911 ; N a15 ; B 35 50 876 642 ;C 47 ; WX 933 ; N a16 ; B 35 139 899 550 ;C 48 ; WX 911 ; N a105 ; B 35 50 876 642 ;C 49 ; WX 945 ; N a17 ; B 35 139 909 553 ;C 50 ; WX 974 ; N a18 ; B 35 104 938 587 ;C 51 ; WX 755 ; N a19 ; B 34 -13 721 705 ;C 52 ; WX 846 ; N a20 ; B 36 -14 811 705 ;C 53 ; WX 762 ; N a21 ; B 35 0 727 692 ;C 54 ; WX 761 ; N a22 ; B 35 0 727 692 ;C 55 ; WX 571 ; N a23 ; B -1 -68 571 661 ;C 56 ; WX 677 ; N a24 ; B 36 -13 642 705 ;C 57 ; WX 763 ; N a25 ; B 35 0 728 692 ;C 58 ; WX 760 ; N a26 ; B 35 0 726 692 ;C 59 ; WX 759 ; N a27 ; B 35 0 725 692 ;C 60 ; WX 754 ; N a28 ; B 35 0 720 692 ;C 61 ; WX 494 ; N a6 ; B 35 0 460 692 ;C 62 ; WX 552 ; N a7 ; B 35 0 517 692 ;C 63 ; WX 537 ; N a8 ; B 35 0 503 692 ;C 64 ; WX 577 ; N a9 ; B 35 96 542 596 ;C 65 ; WX 692 ; N a10 ; B 35 -14 657 705 ;C 66 ; WX 786 ; N a29 ; B 35 -14 751 705 ;C 67 ; WX 788 ; N a30 ; B 35 -14 752 705 ;C 68 ; WX 788 ; N a31 ; B 35 -14 753 705 ;C 69 ; WX 790 ; N a32 ; B 35 -14 756 705 ;C 70 ; WX 793 ; N a33 ; B 35 -13 759 705 ;C 71 ; WX 794 ; N a34 ; B 35 -13 759 705 ;C 72 ; WX 816 ; N a35 ; B 35 -14 782 705 ;C 73 ; WX 823 ; N a36 ; B 35 -14 787 705 ;C 74 ; WX 789 ; N a37 ; B 35 -14 754 705 ;C 75 ; WX 841 ; N a38 ; B 35 -14 807 705 ;C 76 ; WX 823 ; N a39 ; B 35 -14 789 705 ;C 77 ; WX 833 ; N a40 ; B 35 -14 798 705 ;C 78 ; WX 816 ; N a41 ; B 35 -13 782 705 ;C 79 ; WX 831 ; N a42 ; B 35 -14 796 705 ;C 80 ; WX 923 ; N a43 ; B 35 -14 888 705 ;C 81 ; WX 744 ; N a44 ; B 35 0 710 692 ;C 82 ; WX 723 ; N a45 ; B 35 0 688 692 ;C 83 ; WX 749 ; N a46 ; B 35 0 714 692 ;C 84 ; WX 790 ; N a47 ; B 34 -14 756 705 ;C 85 ; WX 792 ; N a48 ; B 35 -14 758 705 ;C 86 ; WX 695 ; N a49 ; B 35 -14 661 706 ;C 87 ; WX 776 ; N a50 ; B 35 -6 741 699 ;C 88 ; WX 768 ; N a51 ; B 35 -7 734 699 ;C 89 ; WX 792 ; N a52 ; B 35 -14 757 705 ;C 90 ; WX 759 ; N a53 ; B 35 0 725 692 ;C 91 ; WX 707 ; N a54 ; B 35 -13 672 704 ;C 92 ; WX 708 ; N a55 ; B 35 -14 672 705 ;C 93 ; WX 682 ; N a56 ; B 35 -14 647 705 ;C 94 ; WX 701 ; N a57 ; B 35 -14 666 705 ;C 95 ; WX 826 ; N a58 ; B 35 -14 791 705 ;C 96 ; WX 815 ; N a59 ; B 35 -14 780 705 ;C 97 ; WX 789 ; N a60 ; B 35 -14 754 705 ;C 98 ; WX 789 ; N a61 ; B 35 -14 754 705 ;C 99 ; WX 707 ; N a62 ; B 34 -14 673 705 ;C 100 ; WX 687 ; N a63 ; B 36 0 651 692 ;C 101 ; WX 696 ; N a64 ; B 35 0 661 691 ;C 102 ; WX 689 ; N a65 ; B 35 0 655 692 ;C 103 ; WX 786 ; N a66 ; B 34 -14 751 705 ;C 104 ; WX 787 ; N a67 ; B 35 -14 752 705 ;C 105 ; WX 713 ; N a68 ; B 35 -14 678 705 ;C 106 ; WX 791 ; N a69 ; B 35 -14 756 705 ;C 107 ; WX 785 ; N a70 ; B 36 -14 751 705 ;C 108 ; WX 791 ; N a71 ; B 35 -14 757 705 ;C 109 ; WX 873 ; N a72 ; B 35 -14 838 705 ;C 110 ; WX 761 ; N a73 ; B 35 0 726 692 ;C 111 ; WX 762 ; N a74 ; B 35 0 727 692 ;C 112 ; WX 762 ; N a203 ; B 35 0 727 692 ;C 113 ; WX 759 ; N a75 ; B 35 0 725 692 ;C 114 ; WX 759 ; N a204 ; B 35 0 725 692 ;C 115 ; WX 892 ; N a76 ; B 35 0 858 705 ;C 116 ; WX 892 ; N a77 ; B 35 -14 858 692 ;C 117 ; WX 788 ; N a78 ; B 35 -14 754 705 ;C 118 ; WX 784 ; N a79 ; B 35 -14 749 705 ;C 119 ; WX 438 ; N a81 ; B 35 -14 403 705 ;C 120 ; WX 138 ; N a82 ; B 35 0 104 692 ;C 121 ; WX 277 ; N a83 ; B 35 0 242 692 ;C 122 ; WX 415 ; N a84 ; B 35 0 380 692 ;C 123 ; WX 392 ; N a97 ; B 35 263 357 705 ;C 124 ; WX 392 ; N a98 ; B 34 263 357 705 ;C 125 ; WX 668 ; N a99 ; B 35 263 633 705 ;C 126 ; WX 668 ; N a100 ; B 36 263 634 705 ;C 128 ; WX 390 ; N a89 ; B 35 -14 356 705 ;C 129 ; WX 390 ; N a90 ; B 35 -14 355 705 ;C 130 ; WX 317 ; N a93 ; B 35 0 283 692 ;C 131 ; WX 317 ; N a94 ; B 35 0 283 692 ;C 132 ; WX 276 ; N a91 ; B 35 0 242 692 ;C 133 ; WX 276 ; N a92 ; B 35 0 242 692 ;C 134 ; WX 509 ; N a205 ; B 35 0 475 692 ;C 135 ; WX 509 ; N a85 ; B 35 0 475 692 ;C 136 ; WX 410 ; N a206 ; B 35 0 375 692 ;C 137 ; WX 410 ; N a86 ; B 35 0 375 692 ;C 138 ; WX 234 ; N a87 ; B 35 -14 199 705 ;C 139 ; WX 234 ; N a88 ; B 35 -14 199 705 ;C 140 ; WX 334 ; N a95 ; B 35 0 299 692 ;C 141 ; WX 334 ; N a96 ; B 35 0 299 692 ;C 161 ; WX 732 ; N a101 ; B 35 -143 697 806 ;C 162 ; WX 544 ; N a102 ; B 56 -14 488 706 ;C 163 ; WX 544 ; N a103 ; B 34 -14 508 705 ;C 164 ; WX 910 ; N a104 ; B 35 40 875 651 ;C 165 ; WX 667 ; N a106 ; B 35 -14 633 705 ;C 166 ; WX 760 ; N a107 ; B 35 -14 726 705 ;C 167 ; WX 760 ; N a108 ; B 0 121 758 569 ;C 168 ; WX 776 ; N a112 ; B 35 0 741 705 ;C 169 ; WX 595 ; N a111 ; B 34 -14 560 705 ;C 170 ; WX 694 ; N a110 ; B 35 -14 659 705 ;C 171 ; WX 626 ; N a109 ; B 34 0 591 705 ;C 172 ; WX 788 ; N a120 ; B 35 -14 754 705 ;C 173 ; WX 788 ; N a121 ; B 35 -14 754 705 ;C 174 ; WX 788 ; N a122 ; B 35 -14 754 705 ;C 175 ; WX 788 ; N a123 ; B 35 -14 754 705 ;C 176 ; WX 788 ; N a124 ; B 35 -14 754 705 ;C 177 ; WX 788 ; N a125 ; B 35 -14 754 705 ;C 178 ; WX 788 ; N a126 ; B 35 -14 754 705 ;C 179 ; WX 788 ; N a127 ; B 35 -14 754 705 ;C 180 ; WX 788 ; N a128 ; B 35 -14 754 705 ;C 181 ; WX 788 ; N a129 ; B 35 -14 754 705 ;C 182 ; WX 788 ; N a130 ; B 35 -14 754 705 ;C 183 ; WX 788 ; N a131 ; B 35 -14 754 705 ;C 184 ; WX 788 ; N a132 ; B 35 -14 754 705 ;C 185 ; WX 788 ; N a133 ; B 35 -14 754 705 ;C 186 ; WX 788 ; N a134 ; B 35 -14 754 705 ;C 187 ; WX 788 ; N a135 ; B 35 -14 754 705 ;C 188 ; WX 788 ; N a136 ; B 35 -14 754 705 ;C 189 ; WX 788 ; N a137 ; B 35 -14 754 705 ;C 190 ; WX 788 ; N a138 ; B 35 -14 754 705 ;C 191 ; WX 788 ; N a139 ; B 35 -14 754 705 ;C 192 ; WX 788 ; N a140 ; B 35 -14 754 705 ;C 193 ; WX 788 ; N a141 ; B 35 -14 754 705 ;C 194 ; WX 788 ; N a142 ; B 35 -14 754 705 ;C 195 ; WX 788 ; N a143 ; B 35 -14 754 705 ;C 196 ; WX 788 ; N a144 ; B 35 -14 754 705 ;C 197 ; WX 788 ; N a145 ; B 35 -14 754 705 ;C 198 ; WX 788 ; N a146 ; B 35 -14 754 705 ;C 199 ; WX 788 ; N a147 ; B 35 -14 754 705 ;C 200 ; WX 788 ; N a148 ; B 35 -14 754 705 ;C 201 ; WX 788 ; N a149 ; B 35 -14 754 705 ;C 202 ; WX 788 ; N a150 ; B 35 -14 754 705 ;C 203 ; WX 788 ; N a151 ; B 35 -14 754 705 ;C 204 ; WX 788 ; N a152 ; B 35 -14 754 705 ;C 205 ; WX 788 ; N a153 ; B 35 -14 754 705 ;C 206 ; WX 788 ; N a154 ; B 35 -14 754 705 ;C 207 ; WX 788 ; N a155 ; B 35 -14 754 705 ;C 208 ; WX 788 ; N a156 ; B 35 -14 754 705 ;C 209 ; WX 788 ; N a157 ; B 35 -14 754 705 ;C 210 ; WX 788 ; N a158 ; B 35 -14 754 705 ;C 211 ; WX 788 ; N a159 ; B 35 -14 754 705 ;C 212 ; WX 894 ; N a160 ; B 35 58 860 634 ;C 213 ; WX 838 ; N a161 ; B 35 152 803 540 ;C 214 ; WX 1016 ; N a163 ; B 34 152 981 540 ;C 215 ; WX 458 ; N a164 ; B 35 -127 422 820 ;C 216 ; WX 748 ; N a196 ; B 35 94 698 597 ;C 217 ; WX 924 ; N a165 ; B 35 140 890 552 ;C 218 ; WX 748 ; N a192 ; B 35 94 698 597 ;C 219 ; WX 918 ; N a166 ; B 35 166 884 526 ;C 220 ; WX 927 ; N a167 ; B 35 32 892 660 ;C 221 ; WX 928 ; N a168 ; B 35 129 891 562 ;C 222 ; WX 928 ; N a169 ; B 35 128 893 563 ;C 223 ; WX 834 ; N a170 ; B 35 155 799 537 ;C 224 ; WX 873 ; N a171 ; B 35 93 838 599 ;C 225 ; WX 828 ; N a172 ; B 35 104 791 588 ;C 226 ; WX 924 ; N a173 ; B 35 98 889 594 ;C 227 ; WX 924 ; N a162 ; B 35 98 889 594 ;C 228 ; WX 917 ; N a174 ; B 35 0 882 692 ;C 229 ; WX 930 ; N a175 ; B 35 84 896 608 ;C 230 ; WX 931 ; N a176 ; B 35 84 896 608 ;C 231 ; WX 463 ; N a177 ; B 35 -99 429 791 ;C 232 ; WX 883 ; N a178 ; B 35 71 848 623 ;C 233 ; WX 836 ; N a179 ; B 35 44 802 648 ;C 234 ; WX 836 ; N a193 ; B 35 44 802 648 ;C 235 ; WX 867 ; N a180 ; B 35 101 832 591 ;C 236 ; WX 867 ; N a199 ; B 35 101 832 591 ;C 237 ; WX 696 ; N a181 ; B 35 44 661 648 ;C 238 ; WX 696 ; N a200 ; B 35 44 661 648 ;C 239 ; WX 874 ; N a182 ; B 35 77 840 619 ;C 241 ; WX 874 ; N a201 ; B 35 73 840 615 ;C 242 ; WX 760 ; N a183 ; B 35 0 725 692 ;C 243 ; WX 946 ; N a184 ; B 35 160 911 533 ;C 244 ; WX 771 ; N a197 ; B 34 37 736 655 ;C 245 ; WX 865 ; N a185 ; B 35 207 830 481 ;C 246 ; WX 771 ; N a194 ; B 34 37 736 655 ;C 247 ; WX 888 ; N a198 ; B 34 -19 853 712 ;C 248 ; WX 967 ; N a186 ; B 35 124 932 568 ;C 249 ; WX 888 ; N a195 ; B 34 -19 853 712 ;C 250 ; WX 831 ; N a187 ; B 35 113 796 579 ;C 251 ; WX 873 ; N a188 ; B 36 118 838 578 ;C 252 ; WX 927 ; N a189 ; B 35 150 891 542 ;C 253 ; WX 970 ; N a190 ; B 35 76 931 616 ;C 254 ; WX 918 ; N a191 ; B 34 99 884 593 ;EndCharMetricsEndFontMetrics'</body></methods><methods><class-id>Graphics.Fonts.CFF.Operator class</class-id> <category>specification</category><body package="CompactFontFormat">localSpecification	&lt;constant: #value class: #{SmallInteger}&gt;</body></methods><methods><class-id>Graphics.Fonts.ExtTextMetrics class</class-id> <category>specification</category><body package="Type1">localSpecification	"&lt;constant: #etmSize class: #{Integer} comment: 'short: This field contains the size (in bytes) of the EXTTEXTMETRIC structure. The value is always 0x0034'&gt;"	"&lt;constant: #pointSize class: #{Integer} comment: 'short: This field contains the nominal point size of the font in twips (this is a twentieth of a point or 1/1440 inch). This is the intended graphics art size of the font, the actual size may differ slightly depending on the resolution of the output device. In PFM files for Type-1 fonts this value should be set to 0x00f0 (240 twips or 12 pt)'&gt;"	"&lt;constant: #orientation class: #{Integer} comment: 'short: This field contains the orientation of the font. This value refers to the ability of the font to be imaged on a page of a given orientation. It can be one of the following values:    0x0000: any orientation    0x0001: portrait (page width is smaller that its height)    0x0002: landscape (page width is greater than its height) In PFM files for Type-1 fonts this field is always 0x0000 since a Type-1 font can be arbitrarily rotated'&gt;"	"&lt;constant: #masterHeight class: #{Integer} comment: 'short: This field contains the font size in device units for which the values in the ExtentTable table are exact. Since Type-1 fonts are by convention defined in a box of 1000 x 1000 units, PFM files for Type-1 fonts have the value 0x03E8 (1000, the number of units per em) in this field'&gt;"	"&lt;constant: #minScale class: #{Integer} comment: 'short: This field contains the minimum valid size for the font in device units. The minimum valid point size can then be calculated as follows:(etmMinScale * points-per-inch) / dfVertResThe value for »points-per-inch« is normally 72, the dfVertRes field can be found in the PFMHEADER structure, it contains the vertical resolution at which the font was digitized (this value is in dots per inch).In PFM files for Type-1 fonts the value should be set to 0x0003'&gt;"	"&lt;constant: #maxScale class: #{Integer} comment: 'short: This field contains the maximum valid size for the font in device units. The maximum valid point size can then be calculated as follows:(etmMaxScale * points-per-inch) / dfVertRes(see also above etmMinScale).In PFM files for Type-1 fonts the value should be set to 0x03E8 (1000)'&gt;"	"&lt;constant: #masterUnits class: #{Integer} comment: 'short: This field contains the integer number of units per em where an em equals etmMasterHeight in the EXTTEXTMETRIC structure. In other words, the etmMasterHeight value is expressed in font units rather than device units.In PFM files for Type-1 fonts the value should be set to 0x03E8 (1000)'&gt;"	&lt;constant: #capHeight class: #{Integer} comment: 'short: This field contains the height for uppercase characters in the font (the value is in font units). Typically, the character ''H'' is used for measurement purposes.For Type-1 fonts you may find this value in the AFM file'&gt;	&lt;constant: #xHeight class: #{Integer} comment: 'short: This field contains the height for lowercase characters in the font (the value is in font units). Typically, the character ''x'' is used for measurement purposes.For Type-1 fonts you may find this value in the AFM file'&gt;	&lt;constant: #lcAscent class: #{Integer} comment: 'lowerCaseAscentshort: This field contains the distance (in font units) that the ascender of lowercase letters extends above the baseline. This distance is typically specified for a lowercase character ''d''.For Type-1 fonts you may find this value in the AFM file'&gt;	&lt;constant: #lcDescent class: #{Integer} comment: 'lowerCaseDescentshort: This field contains the distance (in font units) that the descender of lowercase letters extends below the baseline. This distance is typically specified for a lowercase character ''p''.For Type-1 fonts you may find this value in the AFM file'&gt;	&lt;constant: #slant class: #{Integer} comment: 'short: This field contains the angle in tenth of degrees clockwise from the upright version of the font. The value is typically not zero only for an italic or oblique font.For Type-1 fonts you may find this value in the AFM file (search for the entry »ItalicAngle« and multiply it by 10)'&gt;	&lt;constant: #superScript class: #{Integer} comment: 'short: This field contains the recommended amount (in font units) to offset superscript characters from the baseline. This amount is typically specified by a negative offset'&gt;	&lt;constant: #subScript class: #{Integer} comment: 'short: This field contains the recommended amount (in font units) to offset subscript characters from the baseline. This amount is typically specified by a positive offset'&gt;	&lt;constant: #superScriptSize class: #{Integer} comment: 'short: This field contains the recommended size (in font units) for superscript characters in the font'&gt;	&lt;constant: #subScriptSize class: #{Integer} comment: 'short: This field contains the recommended size (in font units) for subscript characters in the font'&gt;	&lt;constant: #ulOffset class: #{Integer} comment: 'underlineOffsetshort: This field contains the offset (in font units) downward from the baseline where the top of a single underline bar should appear.For Type-1 fonts you may find this value in the AFM file'&gt;	&lt;constant: #ulWidth class: #{Integer} comment: 'underlineWidthshort: This field contains the thickness (in font units) of the underline bar.For Type-1 fonts you may find this value in the AFM file'&gt;	&lt;constant: #dblUpperUlOffset class: #{Integer} comment: 'doubleUpperUnderlineOffsetshort: This field contains the offset (in font units) downward from the baseline where the top of the upper, double underline bar should appear'&gt;	&lt;constant: #dblLowerUlOffset class: #{Integer} comment: 'doubleLowerUnderlineOffsetshort: This field contains the offset (in font units) downward from the baseline where the top of the lower, double underline bar should appear'&gt;	&lt;constant: #dblUpperUlWidth class: #{Integer} comment: 'doubleUpperUnderlineWidthshort: This field contains the thickness (in font units) of the upper, double underline bar'&gt;	&lt;constant: #dblLowerUlWidth class: #{Integer} comment: 'doubleLowerUnderlineWidthshort: This field contains the thickness (in font units) of the lower, double underline bar'&gt;	&lt;constant: #soOffset class: #{Integer} comment: 'strikeOutOffsetshort: This field contains the offset (in font units) upward from the baseline where the top of a strikeout bar should appear'&gt;	&lt;constant: #soWidth class: #{Integer} comment: 'strikeOutWidthshort: This field contains the thickness (in font units) of the strikeout bar'&gt;	"&lt;constant: #kernPairs class: #{Integer} comment: 'WORD: This field contains the number of kerning pairs defined in the KerningPairs table in this PFM file. The number (and therefore the table) may not be greater than 512. If the PFM file doesn''t contain a KerningPairs table the value is zero'&gt;"	"&lt;constant: #kernTracks class: #{Integer} comment: 'WORD: This field contains the number of kerning tracks defined in the KerningTracks table in this PFM file. The number (and therefore the table) may not be greater than 16. If the PFM file doesn''t contain a KerningTracks table the value is zero'&gt;"</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable class</class-id> <category>specification</category><body package="OpenType">localSpecification	&lt;constant: #platform class: #{Integer} comment: 'Platform ID'&gt;	&lt;constant: #encoding class: #{Integer} comment: 'Platform-specific encoding ID'&gt;	&lt;constant: #contents class: #{ByteArray} comment: 'Bytes of this subtable'&gt;</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapLanguageSubtable class</class-id> <category>specification</category><body package="OpenType">localSpecification	&lt;constant: #language class: #{Integer} comment: 'Please see “Note on the language field in ''cmap'' subtables“ in this document'&gt;</body></methods><methods><class-id>Graphics.Fonts.OpenType.Glyph class</class-id> <category>specification</category><body package="OpenType">localSpecification	&lt;constant: #id class: #{Integer}&gt;	&lt;constant: #name class: #{Symbol}&gt;	&lt;constant: #charString class: #{Graphics.Fonts.CFF.Charstring}&gt;	&lt;constant: #code class: #{Integer}&gt;	&lt;constant: #hMetric class: #{HorMetric}&gt;</body></methods><methods><class-id>Graphics.Fonts.OpenType.HorMetric class</class-id> <category>specification</category><body package="OpenType">localSpecification	&lt;constant: #advanceWidth class: #{Integer}&gt;	&lt;constant: #lsb class: #{Integer}&gt;</body></methods><methods><class-id>WindowsFonts.AxisInfo class</class-id> <category>specification</category><body package="Fonts for Windows">localSpecification	&lt;constant: #minValue class: #{Integer}&gt;	&lt;constant: #maxValue class: #{Integer}&gt;	&lt;constant: #axisName class: #{String}&gt;</body></methods><methods><class-id>WindowsFonts.Logfont class</class-id> <category>specification</category><body package="Fonts for Windows">localSpecification	&lt;constant: #height class: #{Integer}&gt;	&lt;constant: #width class: #{Integer}&gt;	&lt;constant: #escapement class: #{Integer}&gt;	&lt;constant: #orientation class: #{Integer}&gt;	&lt;constant: #weight class: #{Integer}&gt;	&lt;constant: #italic class: #{Integer}&gt;	&lt;constant: #underline class: #{Integer}&gt;	&lt;constant: #strikeOut class: #{Integer}&gt;	&lt;constant: #charSet class: #{Integer}&gt;	&lt;constant: #outPrecision class: #{Integer}&gt;	&lt;constant: #clipPrecision class: #{Integer}&gt;	&lt;constant: #quality class: #{Integer}&gt;	&lt;constant: #pitchAndFamily class: #{Integer}&gt;	&lt;constant: #faceName class: #{String}&gt;</body></methods><methods><class-id>WindowsFonts.EnumLogfontEx class</class-id> <category>specification</category><body package="Fonts for Windows">localSpecification	&lt;constant: #fullName class: #{String}&gt;	&lt;constant: #style class: #{String}&gt;	&lt;constant: #script class: #{String}&gt;</body></methods><methods><class-id>WindowsFonts.EnumLogfontExDv class</class-id> <category>specification</category><body package="Fonts for Windows">localSpecification	&lt;sequence: #designVector&gt;</body></methods><methods><class-id>WindowsFonts.NewTextMetricEx class</class-id> <category>specification</category><body package="Fonts for Windows">localSpecification	&lt;constant: #newTextMetric class: #{NewTextMetric}&gt;	&lt;constant: #fontSig class: #{FontSignature}&gt;</body></methods><methods><class-id>WindowsFonts.EnumTextMetric class</class-id> <category>specification</category><body package="Fonts for Windows">localSpecification	&lt;sequence: #axes&gt;</body></methods><methods><class-id>Graphics.Fonts.OpenType.Tableview class</class-id> <category>interface specs</category><body package="Fonts UI">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: '' 			#min: #(#{Core.Point} 0 0 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 400 180 1200 980 ) 			#menu: #menuBar ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 0 0 0 1 24 0 ) 					#name: #TitleTextEditor 					#flags: 12 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #titleText 					#tabable: false 					#style: #large 					#isReadOnly: true 					#tabRequiresControl: true ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 24 0 0 1 50 0 ) 					#name: #InfoTextEditor 					#flags: 12 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7167 8191 8191 ) ) 					#model: #infoText 					#tabable: false 					#isReadOnly: true 					#tabRequiresControl: false ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 50 0 0 1 0 1 ) 					#name: #DescriptionTextEditor 					#flags: 12 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) ) 					#model: #descriptionText 					#tabable: false 					#isReadOnly: true 					#tabRequiresControl: true 					#isWrapped: true ) ) ) )</body></methods><methods><class-id>Graphics.Fonts.FontExplorer</class-id> <category>menus</category><body package="Fonts UI">openMenuItem	&lt;itemInMenu: #(#menuBar #FontMenu) position: 20&gt;	| menuItem |	menuItem := MenuItem labeled: 'Open OpenType &amp;Font...'.	menuItem value: #openFile.	menuItem labelImage: (ToolbarIconLibrary visualFor: #fileOpen).	menuItem helpText: 'Open OpenType &amp;Font...'.	^menuItem</body></methods><methods><class-id>Graphics.Fonts.FontExplorer class</class-id> <category>resources</category><body package="Fonts UI">openTypeIconFigure	"UIMaskEditor new openOnClass: self andSelector: #openTypeIconFigure"	&lt;resource: #image&gt;	^CachedImage on: ((Image extent: 32@32 depth: 10 bitsPerPixel: 16 palette: (MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6488 7130 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7355 7259 7163)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6584 7098 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6552 7163 8062)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4529 5621 7548)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4529 5557 7612)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5942 6649 7837)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6745 6777 6906)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1798 1798 1863)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7323 7644 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7677 7709 7773)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5557 6199 7323)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5107 6103 7869)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6584 7066 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6584 7195 8030)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6617 7195 7998)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2280 2280 2280)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4464 5653 7612)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4786 5653 7291)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6617 7130 8062)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3469 4368 5814)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8158 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5814 6681 7966)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7355 7677 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2762 2698 2762)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5846 6199 7066)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1188 1284 1670)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(770 3372 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6617 7195 8030)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1284 4015 1573)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3661 5942 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5942 6681 7869)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5814 6681 7998)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5814 6745 7934)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6777 6777 6938)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7420 7644 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7387 7709 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7355 7709 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5203 6199 7741)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7130 7259 7484)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6617 7291 7966)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6617 7130 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7195 7323 7355)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(995 4561 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7773 7773 7709)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6617 7227 8062)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7195 7259 7452)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5492 5749 6584)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(867 931 1060)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3501 4400 5846)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5653 6777 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6231 6745 7580)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1027 3918 642)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1766 1863 1959)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(995 4593 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5910 6745 7901)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5846 6713 7998)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5814 6681 8062)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7452 7709 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7805 7773 7709)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5846 5460 7901)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1316 1413 1509)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1413 1413 1413)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4753 4914 5460)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6552 7227 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7259 7259 7420)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(449 2409 32)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5846 6713 8030)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5878 6681 8030)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1863 1895 1863)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7484 7741 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7548 7709 8062)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7452 7677 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6263 6392 6584)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5589 6231 7420)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5139 6199 7901)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1252 1381 1638)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7420 7741 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7773 7773 7773)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7805 7741 7773)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6584 7259 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7323 7195 7452)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4818 5685 7387)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5492 5749 6649)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5814 5878 6199)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5910 6745 7966)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2698 2794 2890)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(770 3533 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3661 4850 6681)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 96 128)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7323 7387 7291)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6681 7259 8062)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2312 2376 2344)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2344 2344 2344)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4625 5717 7580)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6649 7291 8062)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6006 6777 7869)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5878 6745 8030)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5717 6777 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5364 5492 5717)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4818 5107 6649)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7516 7709 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7484 7741 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7837 7805 7741)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5878 6263 7163)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3886 4786 6552)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6713 7291 8030)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6713 7227 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5267 4850 7837)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(995 995 995)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2569 4143 7163)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6360 6809 7516)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1060 4657 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3918 4111 4497)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3950 4079 4497)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7548 7741 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4625 6552 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5942 6295 7098)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6327 6424 6584)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4978 5043 5235)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4561 4497 6199)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4497 4593 6167)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7355 7355 7355)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6745 7291 8030)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1413 3950 1734)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5589 5814 6584)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6038 6841 7837)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6103 6777 7837)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5942 6777 7998)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5974 6713 8030)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2923 4914 4721)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7837 7837 7773)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7516 7805 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2826 2826 2826)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7548 7805 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5557 6295 7516)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7773 7805 7869)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6327 6456 6584)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(803 3597 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4818 5010 5460)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4561 4561 6167)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4529 4561 6199)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7387 7291 7420)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1541 4175 1413)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4657 5749 7612)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5814 6006 6199)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3726 4368 5846)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6038 6809 7901)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6038 6713 7998)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5942 6745 8062)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1124 3790 867)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3950 4079 4561)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7805 7805 7869)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7516 7773 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6360 6392 6649)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6392 6360 6649)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4529 4529 6263)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6841 7291 7998)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3083 4368 6520)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6006 6681 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5749 6841 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6038 6777 7966)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1060 4753 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3950 4111 4561)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3918 4143 4561)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7580 7773 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7773 7805 7934)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7612 7773 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3950 4143 4529)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6360 6456 6617)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4015 4047 4561)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4593 4529 6231)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6745 7291 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6809 7227 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2216 4400 3308)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6006 6745 8062)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6135 6584 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4593 5492 6649)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3950 4079 4625)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7580 7837 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7548 7837 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7805 7837 7901)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5396 6295 7773)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6360 6488 6617)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1509 1477 1509)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(899 3533 64)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4593 4593 6199)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6777 7291 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2441 2376 2409)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4850 5781 7484)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4786 5781 7548)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5557 5910 6649)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2216 4400 3340)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6199 6584 8062)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5974 6874 7998)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6167 6649 8030)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1959 1959 1959)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5846 6874 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6006 6841 7998)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6231 6552 8062)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3983 4111 4593)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7837 7837 7901)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6424 6392 6681)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(835 3501 192)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4593 4529 6295)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4657 4561 6199)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6713 7387 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6874 7387 7966)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7484 7387 7355)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5942 6841 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6199 6584 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6231 6552 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3950 4175 4593)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7580 7869 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7612 7805 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7677 7869 8062)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7837 7901 7869)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5332 6327 7869)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5653 6360 7516)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5846 6874 6809)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3983 4143 4593)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6360 6488 6681)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6392 6456 6681)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6841 7291 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7420 7420 7420)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6038 6777 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6167 6617 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5878 6841 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2023 1991 1927)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1092 4850 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6103 6809 7998)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7612 7869 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7869 7934 7837)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7837 7869 7934)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3983 4111 4657)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5107 6392 8062)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6424 6488 6649)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4593 4529 6360)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6809 7323 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3629 4529 5974)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5974 6841 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6231 6617 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6295 6906 7741)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6167 6584 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6070 6809 8062)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6103 6777 8062)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4978 5107 6777)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4015 4143 4625)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7677 7869 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7709 7773 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7869 7869 7934)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1541 1541 1541)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(899 3661 64)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(835 3790 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4561 4689 6263)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6938 7387 7998)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6809 7323 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4786 5878 7580)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4015 5717 4432)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1092 1092 1092)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6327 6520 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6263 6584 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6231 6617 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5974 6874 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5974 6841 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6103 6841 8030)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7644 7869 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6424 6488 6713)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2505 4914 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4914 5043 5589)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(899 3758 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6809 7420 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6777 7387 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6809 7355 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6231 6584 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6199 6681 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6167 6809 8030)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5942 6970 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5043 5589 6295)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5942 6874 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6263 6552 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6199 6649 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7644 7901 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7677 7869 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4015 4143 4689)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5942 6456 7259)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4368 4368 6841)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(867 3822 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(931 3726 32)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4593 4689 6295)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6906 7355 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7484 7484 7420)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5364 5878 7066)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5653 5910 6745)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6295 6552 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6263 6649 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1991 2055 2023)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5942 6906 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5428 5557 5974)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6135 6809 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(706 674 610)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3469 5396 4015)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7709 7901 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7773 7901 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7644 7966 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7901 7901 7966)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6970 7323 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6938 7452 8030)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6841 7387 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7002 7387 8030)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6874 7452 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6263 6649 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6006 6938 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6167 6938 7966)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7741 7934 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7773 7837 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(835 3918 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4561 4753 6327)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4657 4689 6295)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6841 7452 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7484 7484 7484)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6906 7355 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6809 7452 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6874 7387 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6488 6874 7741)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5974 6938 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1156 3822 1156)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6167 6874 8062)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6263 6874 7966)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6360 6552 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3501 5460 3983)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7966 7966 7901)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5717 6424 7612)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5460 6424 7869)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6520 6552 6681)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1638 1606 1541)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3051 4946 7677)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4368 4432 6874)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4400 4497 6777)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7516 7516 7452)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2505 2505 2505)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2537 2569 2409)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6006 6038 6360)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4914 5878 7612)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6038 6906 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6070 6874 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6199 6906 8030)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6231 6874 8030)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7837 7901 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7805 7934 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7741 7934 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7966 7901 7998)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6520 6552 6713)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6520 6488 6777)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4464 4400 6841)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4946 5107 5653)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4432 4432 6841)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4432 4529 6745)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6841 7548 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7452 7452 7612)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7034 7420 8062)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6970 7484 8062)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7002 7452 8062)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7548 7516 7452)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(995 1060 1413)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6070 6938 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4336 5524 7227)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(513 706 899)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7869 7934 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7966 7966 7966)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6488 6552 6777)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6038 6488 7291)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(899 3886 64)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4497 4400 6841)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4497 4497 6745)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7516 7516 7516)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6874 7484 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6970 7452 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6199 6906 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3404 5621 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4400 5460 7259)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7741 7998 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5749 6456 7644)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5653 6649 7548)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1606 1606 1670)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(899 3983 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4497 4464 6809)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4432 4529 6809)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4657 4689 6424)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6906 7484 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6970 7420 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5396 5974 7130)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1220 1188 1124)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6231 6938 8062)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2087 2087 2087)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6263 6970 7998)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1124 4047 1092)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4368 5460 7323)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6263 6906 8062)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6070 6970 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6295 6874 8062)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7837 7966 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5203 5203 5396)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4432 4497 6874)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4497 4432 6874)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7034 7484 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6938 7484 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7066 7452 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6874 7548 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6199 6938 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6103 6970 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6231 7002 8030)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4047 4207 4850)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7869 7998 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7998 7998 7998)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6520 6584 6809)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5492 6456 7966)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(931 4015 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4529 4529 6777)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7002 7484 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6970 7548 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6038 6103 6424)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4946 5942 7677)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3597 5075 5814)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6295 7002 7998)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6135 6970 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7966 7998 8062)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5814 6456 7677)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4464 4464 6938)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4464 4561 6841)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4529 4497 6841)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7098 7516 8062)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7580 7580 7516)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2537 2601 2569)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5749 6006 6841)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6295 7002 8030)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6199 6938 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6424 6874 8030)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4336 5492 7420)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3597 5524 4047)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7869 7998 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7901 7966 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6038 6552 7387)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7998 7998 8062)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(899 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(289 417 224)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7034 7548 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6970 7548 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7612 7580 7516)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6456 7034 7869)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6360 7034 7966)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2505 3886 6809)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7901 8030 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8030 8030 8030)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8062 7998 8030)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7934 7998 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5749 6584 7677)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5492 6520 7998)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4175 4304 4721)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(899 4143 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7580 7580 7580)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7034 7516 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7098 7548 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7066 7580 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1252 1252 1188)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4689 4625 5267)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2698 4529 7355)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3693 5589 3950)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(931 4143 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7066 7516 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7002 7580 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5460 6038 7195)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6327 6970 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6295 7002 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3180 5010 5075)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7998 7998 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8094 8062 7998)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4143 4336 4786)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(899 4207 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1702 1702 1702)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7130 7516 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7484 7612 7709)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5717 6745 6263)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5717 6070 6938)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1252 1252 1252)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6488 6970 7998)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6263 7002 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6167 7098 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2120 2152 2216)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6392 7066 7998)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6424 6970 8062)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5460 5589 6327)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8062 8062 8062)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8030 8094 8062)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7966 8030 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1959 4336 2923)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5107 6809 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7934 8062 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(995 4143 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7130 7580 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7163 7580 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7548 7580 7709)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7098 7548 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6424 7098 7966)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1702 2087 2730)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7998 8094 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6617 6713 6809)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1702 1702 1766)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4529 4625 6906)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3115 5203 3661)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7227 7548 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7163 7580 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2055 2537 3308)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4753 4818 5139)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4175 4368 4818)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7998 8062 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5653 6617 7901)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1670 1638 1895)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4175 5524 6392)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2730 5171 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7227 7548 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7098 7612 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5749 6135 6938)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1734 2055 2794)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1413 4015 1156)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4400 5621 7452)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4175 4336 4882)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8094 8094 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7998 8094 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6167 6617 7420)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1573 1798 1863)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7644 7644 7644)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7130 7644 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7163 7612 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6424 7066 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6488 7098 7998)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6392 7098 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4432 5621 7452)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8062 8062 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(931 4336 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7259 7580 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7130 7644 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7195 7612 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5267 5974 7644)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5524 6103 7259)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5717 5203 7966)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2087 2569 3340)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4753 4818 5235)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6552 7130 7934)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6488 7291 7837)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7227 7291 7098)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4432 5589 7516)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4432 5685 7420)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4464 5653 7420)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8094 8094 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5878 6552 7837)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(963 4336 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7259 7580 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7291 7612 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7709 7677 7612)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2569 2698 2762)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5107 6038 7773)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6456 7130 8062)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6488 7098 8062)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4432 5653 7484)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8126 8126 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6135 6649 7516)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(963 3597 770)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1766 1702 1863)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6649 6777 6874)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7227 7644 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7323 7709 7998)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7195 7677 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7323 7644 8062)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5492 6135 7323)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7355 7580 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7227 7612 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3661 5171 6038)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4464 5653 7484)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4464 5557 7580)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4497 5589 7516)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5781 6552 7998)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6649 6777 6906)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(963 4400 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4786 4946 6520)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7709 7709 7644)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7227 7644 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3726 5171 6006)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6552 7034 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6617 7130 7966)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5492 5557 6584)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4529 5621 7484)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4561 5589 7484)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3404 4400 5749)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8126 8126 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7323 7644 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7323 7612 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7387 7644 8062)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7323 7580 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2698 2666 2762)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7195 7195 7355)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1284 3918 1573)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6520 7259 7966)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4432 5685 7548)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5139 4561 7966)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6584 7163 7998)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8158 8158 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8158 8126 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5749 6584 8062)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(995 4432 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7355 7677 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7420 7677 8030)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7259 7677 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1316 1349 1413)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: '@_LA&lt;0G3@_L@M@FK@OH@1@@!@@\BKPF-@X@AS C\@D0@C@H"@]$A"PD&amp;@$@A7P@F@AXA&lt;0G3@_LA&lt;0G3@_LA&lt;0G3@_LA&lt;0G3@RP@E I!@U&lt;AW0EM@N(@!P@.@$,A=0G7@NH@8 AC@DL@@PGJ@KLA'' F''@V$A;0G3@_LA&lt;0G3@_LA&lt;0G3@_LA&lt;0AR@_LA&lt;0G3@%PBD HE@\XA. FS@V@AL@C:@N$@-PA5@F\A PG2@F,@PPE4@^LA2@G3@_LA&lt;0G3@_LA&lt;0G3@_L@C0H,@%PA&gt;0G0@\$A.0F:@U&lt;ALPD0@Q4@-PA5@F @Z@I$@H$@] E=@E(AC0F!@_\A;0G3@_LA&lt;0G3@_LA&lt;0G3@"XAW0HE@_LA&lt;0GF@WHAW0E @O(@:PCX@J\@! A(@C0@F@H!@A&lt;BBPDN@J@AYPG&lt;@@,A&lt;0G3@_LA&lt;0G3@_LA&lt;0GC@]8BG@GI@YLAO@E^@S4AG@C)@KX@! AH@C0BY@IU@%X@D0ER@]P@\@GE@IPAK@IZ@Z0A&lt;0G3@_LA&lt;0G3@_LA90E_@Y&lt;A.0FS@SHAL@C)@J\@! B[@F @IPIU@%TBU H/@ (@O H#@F8BW ES@]L@B@C+@_L@A G3@_LA&lt;0G3@TXAW0E?@U&lt;ALPD\@O,@:PBF@D @O@I$@%TBL@H^@ @A= F1@]\AZ FG@OLAH@HD@VH@-0G3@@XA&lt;0G3@_LA&lt;0C4@VDALPD]@M$@50B6@H @Y0@&lt;@#4BU0F%@MD@ PA"@J8AZ0E,@PDAP0D9@VP@;@B+@J A&lt;0G3@_LA&lt;0G3@_L@\PD3@S@AC@B5@J$@! @&lt;@C0AV@H2@^X@V0AD@I A&lt;P@D@K&lt;AM@D$@O@@00F$@JT@*0BJ@_LA&lt;0G3@_LA&lt;0G3@CT@6 C)@J$@RPAH@C0@JPI''@R8A\PIS@EPA9@B;@H0AR@E0@"$@/PA=@QPAY CJ@J,@" G3@_LA&lt;0G3@_LA&lt;0H8@F$@! B6@D(BYPA%@CH@L HM@W8A@0H&lt;@$0A5PC?@\4@,@ID@B @WPD(@W @-@B+@H(A&lt;0G3@_LA&lt;0G3@_LBD0@=@GT@I AO@G$@O0FB@V8A#0IQ@&amp;XBO HV@M4AHPH]@CXBQPC@@A@@1PFD@N0@*0BJ@_LA&lt;0G3@_LA&lt;0G3@[0@B0@&lt;@B\@R0EQ@R(A" C1@"(AMPIX@ DA&gt;@DD@XLBRPGM@$PBJP@T@PXA+ B&amp;@J,@" G3@_LA&lt;0G3@_LA&lt;0E5@ED@B H?@C\AU D*@A,BC0B8@!\BG0HK@\&lt;A.PG @B4A=@H)@F@@@@DG@UP@2 B+@H(A&lt;0G3@_LA&lt;0G3@_LAG0H1@$DA%@A^@K8@. @U@%DA"@IB@]@A0PE:@IDBK B$@X8@APEY@_$AB@F/@L(@*0BJ@_LA&lt;0G3@_LA&lt;0G3@G\BLPG5@E @V@@Q@CH@D F(@"@A6@G@@V @[@D"@&amp;L@90CB@%4AS0HX@QTAU@C,@J,@*@G3@_LA&lt;0G3@_LA&lt;0A*@\HA= G=@A$A: AN@!,@NPGQ@ZXA^0ED@T0A/ @8@C A*PH+@[XA1@D9@V\@&amp;PB+@H(A&lt;0G3@_LA&lt;0G3@_L@F F2@^HA  IY@^(B@ H6@B&lt;A%0FX@QD@J DP@"8@\ @^@!,A20G(@X4@=PE&amp;@N0@*0BJ@_LA&lt;0G3@_LA&lt;0G3@ 0A[PFY@C&lt;A,0@I@CLBF0CP@Y(AM DR@R&lt;A(0II@WXA\@BR@^ A''@FP@NPA!PA3@J,@" G3@_LA&lt;0G3@_LA&lt;0G%@UTAM0H:@U\@9 H$@%HAQPEA@PHBI0C&gt;@]XA5 G\@!,ABPF[@S(AE C3@XP@-@B+@H(A&lt;0G3@_LA&lt;0G3@_LA-@D%@S @#P@7@D\@L F8@H@AD0I\@ 8AO D&gt;@HPBJP@M@Z,A$PEG@OXAJPE7@MX@*0BJ@_LA&lt;0G3@_LA&lt;0G3@R\@8 B_@K4BA0B:@]HA&gt; HH@_&lt;@&amp;@AY@%,BSPIF@D4A- EZ@R,@10CH@OLAY@CV@J,@" G3@_LA&lt;0G3@_LA&lt;0CA@MH@8PA!@F4AF@HT@[&lt;@G@CM@G8BP0@D@$PBA E/@YDAJ0DJ@NT@(PDG@XT@)PB+@H(A&lt;0G3@_LA&lt;0G3@_L@_0A\@J&lt;@K0@]@$&lt;@C A#@M,@/0H3@ZH@40G)@Z,AV0DW@Q$@( A$@C(@&lt;0ET@GP@^@BJ@_LA&lt;0G3@_LA&lt;0G3@ET@$@A-@DH@J0@B@#PBF@G+@Z(A''PD;@S,AN0DK@OX@%PBB@IX@ 0@W@Q(A!@C,@J,@" G3@_LA&lt;0G3@_LA&lt;0@1@B0@@0I_@$8BFPHZ@^0A6 G[@U0A_@EI@R4@:@B#@I\@QP@"@C,@H DG@YT@) B+@J A&lt;0G3@_LA&lt;0G3@_LA;PH(@@LBMPIN@^0A-0F5@YHAR E]@W0@=0C#@KD@U0AF@BL@H IG@&amp;HAA0FV@O$@*0BZ@_LA&lt;0G3@_LA&lt;0G3@%@@&lt;0DT@P\AJPCT@Q,AA0C$@NPAF0B2@P ANPDH@P @9@CI@MTAEPEK@N4A,@G_@VH@20G3@_LA&lt;0G3@_LA&lt;0A&amp;@O BR D?@T@A! D#@P@@/@B-@J4@^ B-@H8@^ B-@L8@30C/@G,@#0B^@_8BIP@$@O0A&lt;0G3@_LA&lt;0G3@_L@L@AV@"TA3@C,@JT@-@CJ@JT@)PB4@M8@)PB*@M8@)PBY@J(@)PD^@J0BD@HC@IL@P0F=@_LA&lt;0G3@_LA&lt;0G3@I(@P0H;@VLACPCL@K$@.PC_@J,@*0C.@G @8@B\@L0@''PBK@N@@*0DM@U@BR@AS@J A&lt;0@V@_Lb')))</body><body package="Fonts UI">openTypeIconMask	"UIMaskEditor new openOnClass: self andSelector: #openTypeIconMask"	&lt;resource: #image&gt;	^CachedImage on: ((Image extent: 32@32 depth: 1 bitsPerPixel: 1 palette: CoveragePalette monoMaskPalette usingBits: #[255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255]))</body></methods><methods><class-id>Graphics.Fonts.FontExplorer class</class-id> <category>interface specs</category><body package="Fonts UI">emptySpec	"Tools.UIPainter new openOnClass: self andSelector: #emptySpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#properties: #(#{UI.PropertyListDictionary} #sizeAutoSave true #positionAutoSave true #sizeType #lastSavedSize #openType #advanced #positionType #lastSavedPosition ) 			#label: 'Font Explorer' 			#min: #(#{Core.Point} 0 0 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 709 321 1509 1121 ) 			#flags: 4 ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #() ) )</body><body package="Fonts UI">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#properties: #(#{UI.PropertyListDictionary} #sizeAutoSave true #positionAutoSave true #sizeType #lastSavedSize #openType #advanced #positionType #lastSavedPosition ) 			#label: 'Font Explorer' 			#min: #(#{Core.Point} 0 0 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 709 321 1509 1121 ) 			#flags: 4 			#menu: #menuBar ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 0 0 0 0.33 24 0 ) 					#name: #FileInfoTextEditor 					#flags: 12 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #fileInfoText 					#tabable: false 					#isReadOnly: true 					#tabRequiresControl: true 					#isWrapped: false ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 24 0 0 0.33 48 0 ) 					#name: #InfoTextEditor 					#flags: 12 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 7167 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 7167 ) ) 					#model: #infoText 					#tabable: false 					#isReadOnly: true 					#tabRequiresControl: true ) 				#(#{UI.TreeViewSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 48 0 0 0.33 0 1 ) 					#name: #TreeView 					#flags: 15 					#model: #treeView 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #itemSelected ) 					#menu: #treeMenu 					#useModifierKeys: true 					#selectionType: #highlight 					#displayStringSelector: #listText 					#useIcons: #other 					#iconSelectors: #(#listIcon ) ) 				#(#{UI.SubCanvasSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0.33 0 0 0 1 0 1 ) 					#name: #DetailsSubcanvas 					#minorKey: #emptySpec ) ) ) )</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable4 class</class-id> <category>specification</category><body package="OpenType">localSpecification	&lt;sequence: #segments comment: 'code ranges'&gt;	&lt;sequence: #glyphIdArray comment: 'Glyph index array'&gt;	&lt;map: #indexToCode comment: 'Cache for the index to code mapping'&gt;</body></methods><methods><class-id>Graphics.Fonts.OpenType.FontHeader class</class-id> <category>specification</category><body package="OpenType">localSpecification	&lt;constant: #version class: #{FixedPoint} comment: 'should be 1.0'&gt;	&lt;constant: #fontRevision class: #{FixedPoint} comment: 'Set by font manufacturer'&gt;	&lt;constant: #checkSumAdjustment class: #{Integer}&gt;	&lt;constant: #flags class: #{Integer} comment: 'Bit 0: Baseline for font at y=0;Bit 1: Left sidebearing point at x=0;Bit 2: Instructions may depend on point size;Bit 3: Force ppem to integer values for all internal scaler math; may use fractional ppem sizes if this bit is clear;Bit 4: Instructions may alter advance width (the advance widths might not scale linearly);Bits 5-10: These should be set according to Apple''s specification . However, they are not implemented in OpenType.Bit 11: Font data is ‘lossless’ as a results of having been subjected to optimizing transformation and/or compression (such as e.g. compression mechanisms defined by ISO/IEC 14496-18, MicroType Express, WOFF 2.0 or similar) where the original font functionality and features are retained but the binary compatibility between input and output font files is not guaranteed. As a result of the applied transform, the ‘DSIG’ Table may also be invalidated.Bit 12: Font converted (produce compatible metrics)Bit 13: Font optimized for ClearType™. Note, fonts that rely on embedded bitmaps (EBDT) for rendering should not be considered optimized for ClearType, and therefore should keep this bit cleared.Bit 14: Last Resort font. If set, indicates that the glyphs encoded in the cmap subtables are simply generic symbolic representations of code point ranges and don’t truly represent support for those code points. If unset, indicates that the glyphs encoded in the cmap subtables represent proper support for those code points.Bit 15: Reserved, set to 0 '&gt;	&lt;constant: #unitsPerEm class: #{Integer} comment: 'Valid range is from 16 to 16384. This value should be a power of 2 for fonts that have TrueType outlines.'&gt;	&lt;constant: #created class: #{Timestamp}&gt;	&lt;constant: #modified class: #{Timestamp}&gt;	&lt;constant: #glyphBBox class: #{Rectangle} comment: 'For all glyph bounding boxes.'&gt;	&lt;constant: #macStyle class: #{Integer} comment: 'Bit 0: Bold (if set to 1);Bit 1: Italic (if set to 1)Bit 2: Underline (if set to 1)Bit 3: Outline (if set to 1)Bit 4: Shadow (if set to 1)Bit 5: Condensed (if set to 1)Bit 6: Extended (if set to 1)Bits 7-15: Reserved (set to 0).Note that the macStyle bits must agree with the ''OS/2'' table fsSelection bits. The fsSelection bits are used over the macStyle bits in Microsoft Windows. The PANOSE values and ''post'' table values are ignored for determining bold or italic fonts.'&gt;	&lt;constant: #lowestRecPPEM class: #{Integer} comment: 'Smallest readable size in pixels.'&gt;	&lt;constant: #fontDirectionHint class: #{Integer} comment: 'Deprecated (Set to 2).0: Fully mixed directional glyphs;1: Only strongly left to right;2: Like 1 but also contains neutrals;-1: Only strongly right to left;-2: Like -1 but also contains neutrals.'&gt;	&lt;constant: #indexToLocFormat class: #{Integer} comment: '0 for short offsets, 1 for long.'&gt;	&lt;constant: #glyphDataFormat class: #{Integer} comment: '0 for current format.'&gt;</body></methods><methods><class-id>Graphics.Fonts.PFMHeader</class-id> <category>accessing</category><body package="Fonts Development">inspectorExtraAttributes	&lt;inspectorFields&gt;	^Array		with: (Tools.Trippy.DerivedAttribute label: 'pitch' valueBlock: [			self pitchSymbol])		with: (Tools.Trippy.DerivedAttribute label: 'family' valueBlock: [			self familySymbol])</body></methods><methods><class-id>Graphics.Fonts.PFMHeader class</class-id> <category>specification</category><body package="Type1">localSpecification	"&lt;constant: #version class: #{Integer} comment: 'WORD: A user-defined version number for the resource data that tools can use to read and write resource files'&gt;"	"&lt;constant: #fileSize class: #{Integer} comment: 'DWORD: The size of the file, in bytes'&gt;"	&lt;constant: #copyright class: #{String} comment: 'CHAR[60]: The font supplier''s copyright information'&gt;	"&lt;constant: #type class: #{Integer} comment: 'WORD: The type of font file'&gt;"	"&lt;constant: #points class: #{Integer} comment: 'WORD: The point size at which this character set looks best'&gt;"	"&lt;constant: #vertRes class: #{Integer} comment: 'WORD: The vertical resolution, in dots per inch, at which this character set was digitized'&gt;"	"&lt;constant: #horizRes class: #{Integer} comment: 'WORD: The horizontal resolution, in dots per inch, at which this character set was digitized'&gt;"	&lt;constant: #ascent class: #{Integer} comment: 'WORD: The distance from the top of a character definition cell to the baseline of the typographical font'&gt;	&lt;constant: #internalLeading class: #{Integer} comment: 'WORD: The amount of leading inside the bounds set by pixHeight. Accent marks and other diacritical characters can occur in this area'&gt;	&lt;constant: #externalLeading class: #{Integer} comment: 'WORD: The amount of extra leading that the application adds between rows'&gt;	&lt;constant: #italic class: #{Boolean} comment: 'BYTE: An italic font if not equal to zero'&gt;	&lt;constant: #underline class: #{Boolean} comment: 'BYTE: An underlined font if not equal to zero'&gt;	&lt;constant: #strikeOut class: #{Boolean} comment: 'BYTE: An strikeout font if not equal to zero'&gt;	&lt;constant: #weight class: #{Integer} comment: 'WORD: The weight of the font in the range 0 through 1000. For example, 400 is roman and 700 is bold. If this value is zero, a default weight is used'&gt;	&lt;constant: #charSet class: #{Integer} comment: 'BYTE: The character set of the font'&gt;	"&lt;constant: #pixWidth class: #{Integer} comment: 'WORD: The width of the grid on which a vector font was digitized. For raster fonts, if the member is not equal to zero, it represents the width for all the characters in the bitmap. If the member is equal to zero, the font has variable-width characters'&gt;"	&lt;constant: #pixHeight class: #{Integer} comment: 'WORD: The height of the character bitmap for raster fonts or the height of the grid on which a vector font was digitized'&gt;	&lt;constant: #pitchAndFamily class: #{Integer} comment: 'BYTE: The pitch and the family of the font'&gt;	&lt;constant: #avgWidth class: #{Integer} comment: 'WORD: The average width of characters in the font (generally defined as the width of the letter x). This value does not include the overhang required for bold or italic characters'&gt;	&lt;constant: #maxWidth class: #{Integer} comment: 'WORD: The width of the widest character in the font'&gt;	&lt;constant: #firstChar class: #{Integer} comment: 'BYTE: The first character code defined in the font'&gt;	&lt;constant: #lastChar class: #{Integer} comment: 'BYTE: The last character code defined in the font'&gt;	&lt;constant: #defaultChar class: #{Integer} comment: 'BYTE: The character to substitute for characters not in the font'&gt;	&lt;constant: #breakChar class: #{Integer} comment: 'BYTE: The character that will be used to define word breaks for text justification'&gt;	"&lt;constant: #widthBytes class: #{Integer} comment: 'WORD: The number of bytes in each row of the bitmap. This value is always even so that the rows start on word boundaries. For vector fonts, this member has no meaning'&gt;"	"&lt;constant: #device class: #{Integer} comment: 'DWORD: The offset in the file to a null-terminated string that specifies a device name. For a generic font, this value is zero'&gt;"	"&lt;constant: #face class: #{Integer} comment: 'DWORD: The offset in the file to a null-terminated string that names the typeface'&gt;"	"&lt;constant: #bitsPointer class: #{Integer} comment: 'DWORD: This member is reserved'&gt;"	"&lt;constant: #bitsOffset class: #{Integer} comment: 'DWORD: The name of the device if this font file is designated for a specific device'&gt;"</body></methods><methods><class-id>Graphics.Fonts.KernTrack class</class-id> <category>specification</category><body package="Type1">localSpecification	&lt;constant: #degree class: #{Integer} comment: 'short: the amount to change the character spacing. Negative values mean closer together, positive values mean farther apart'&gt;	&lt;constant: #minSize class: #{Integer} comment: 'short: the minimum font height (in device units) for which to use linear track kerning'&gt;	&lt;constant: #minAmount class: #{Integer} comment: 'short: the track kerning amount to use for font heights less or equal minSize'&gt;	&lt;constant: #maxSize class: #{Integer} comment: 'short: the maximum font height (in device units) for which to use linear track kerning. For font heights between minSize and maxSize the track kerning amount has to increase linearily from minAmount to maxAmount'&gt;	&lt;constant: #maxAmount class: #{Integer} comment: 'short: the track kerning amount to use for font heights greater or equal maxSize'&gt;</body></methods><methods><class-id>Graphics.Fonts.CFF.Charset1 class</class-id> <category>specification</category><body package="CompactFontFormat">localSpecification	&lt;sequence: #ranges&gt;</body></methods><methods><class-id>WindowsFonts.NamedValue class</class-id> <category>specification</category><body package="Fonts for Windows">localSpecification	&lt;constant: #name class: #{String}&gt;	&lt;constant: #value class: #{Integer}&gt;</body></methods><methods><class-id>WindowsFonts.FontSignature class</class-id> <category>specification</category><body package="Fonts for Windows">localSpecification	&lt;constant: #usb class: #{Integer}&gt;	&lt;constant: #csb class: #{Integer}&gt;</body></methods><methods><class-id>WindowsFonts.TextMetric class</class-id> <category>specification</category><body package="Fonts for Windows">localSpecification	&lt;constant: #height class: #{Integer}&gt;	&lt;constant: #ascent class: #{Integer}&gt;	&lt;constant: #descent class: #{Integer}&gt;	&lt;constant: #internalLeading class: #{Integer}&gt;	&lt;constant: #externalLeading class: #{Integer}&gt;	&lt;constant: #aveCharWidth class: #{Integer}&gt;	&lt;constant: #maxCharWidth class: #{Integer}&gt;	&lt;constant: #weight class: #{Integer}&gt;	&lt;constant: #overhang class: #{Integer}&gt;	&lt;constant: #digitizedAspectX class: #{Integer}&gt;	&lt;constant: #digitizedAspectY class: #{Integer}&gt;	&lt;constant: #firstChar class: #{Character}&gt;	&lt;constant: #lastChar class: #{Character}&gt;	&lt;constant: #defaultChar class: #{Character}&gt;	&lt;constant: #breakChar class: #{Character}&gt;	&lt;constant: #italic class: #{Integer}&gt;	&lt;constant: #underlined class: #{Integer}&gt;	&lt;constant: #struckOut class: #{Integer}&gt;	&lt;constant: #pitchAndFamily class: #{Integer}&gt;	&lt;constant: #charSet class: #{Integer}&gt;</body></methods><methods><class-id>WindowsFonts.NewTextMetric class</class-id> <category>specification</category><body package="Fonts for Windows">localSpecification	&lt;constant: #flags class: #{Integer}&gt;	&lt;constant: #sizeEM class: #{Integer}&gt;	&lt;constant: #cellHeight class: #{Integer}&gt;	&lt;constant: #avgWidth class: #{Integer}&gt;</body></methods><methods><class-id>Graphics.Fonts.FontProgramHeader class</class-id> <category>specification</category><body package="Type1">localSpecification	&lt;constant: #familyName class: #{String} comment: 'The name of the typeface family to which the font belongs'&gt;	&lt;constant: #fontBBox class: #{Rectangle} comment: 'the font bounding box'&gt;	&lt;constant: #contents class: #{String} comment: 'cleartext PostScript code'&gt;</body></methods><methods><class-id>Graphics.Fonts.PairKern class</class-id> <category>specification</category><body package="Type1">localSpecification	&lt;constant: #first class: #{Integer} comment: 'BYTE: the first (left) character of the kerning pair'&gt;	&lt;constant: #second class: #{Integer} comment: 'BYTE: the second (right) character of the kerning pair'&gt;	&lt;constant: #kernAmount class: #{Integer} comment: 'short: the kerning amount in font units, the value is mostly negative'&gt;</body></methods><methods><class-id>Graphics.Fonts.PostScriptFontMetrics class</class-id> <category>specification</category><body package="Type1">localSpecification	&lt;constant: #header class: #{PFMHeader} comment: 'The header (117 Bytes) with basic information'&gt;	"&lt;constant: #extension class: #{PFMExtension} comment: 'The extension (30 Bytes) with offsets to other structures'&gt;"	&lt;constant: #extTextMetrics class: #{ExtTextMetrics} comment: 'This section (52 Bytes) contains additional informations about the font (orientation, minimum and maximum acceptable size of the font, the cap height, the degree of obliqueness for italic fonts etc.)'&gt;	"&lt;constant: #deviceName class: #{String} comment: 'the name of the printer driver family'&gt;"	&lt;constant: #faceName class: #{String} comment: 'the name of the font face, normally without suffixes like »-Bold«, »-Italic« etc.'&gt;	&lt;constant: #driverInfo class: #{String} comment: 'additional informations for the printer driver like the name of the font, sequences necessary for selecting the font etc. '&gt;	&lt;sequence: #extentTable comment: 'the character widths for scalable fonts'&gt;	&lt;sequence: #kerningPairs comment: 'kerning pairs together with the kerning amount for every pair'&gt;	&lt;sequence: #kerningTracks comment: 'informations for globally font kerning according to the size the font is printed with'&gt;</body></methods><methods><class-id>Graphics.Fonts.CFF.Subroutine class</class-id> <category>specification</category><body package="CompactFontFormat">localSpecification	&lt;sequence: #bytes&gt;</body></methods><methods><class-id>Graphics.Fonts.OpenType.Font class</class-id> <category>fonts</category><body package="Fonts test resources">freeSansBold	"Example font for testing - contains thousends of glyphs.	GNU FreeFont (see method comment of #freeSansBoldCOPYING for the licence).	See http://savannah.gnu.org/projects/freefont/"	&lt;font: #FreeSansBold&gt;	^self		file: 'FreeSansBold.otf'		contents: (ByteArray fromPackedString: 'S5QTS0@N@H@@@0A P4YFHI8C-W0@@BI,@@J4PTYFUD5T&amp;KIM@@L\V@@@@A1GQDUF-)&gt;&gt;P@@B5+@@@@J$Q5AOT1D4+-$@@.SD@@@7$$]SUTJ_(R K@@KYU@@@B7AOT2&lt;2\I+!I0@@@U@@@@A X65!\HRZ=1L@@A/T@@@F]&amp;!%XVS48-Z,@@@@;@@@@CY(ZFU!A)HK^0@@@RP@@@@$ZF54^A")JB\@@114@@@&amp;%F-%\&amp;9''"A?@@@MCB@@BUGQ-XW!0BZUP@@@@@T @@@@F[&amp;E-YZ?''(*&lt;@@@F0@@@ZIGA/\7S?Q AE@@@"S@@@@B@@@P@@@@D2&lt;U^)SEY_C335@ ,C:@@@@@CH.;@9@@@@@L";,C''&lt;N_84A!PDL@@A@@ @@@@@@@@@@@@A@@@C:O;T@E(E7_09?RPFE@@A@@@@@@@@@@@@@@@@@@@I)P@@T@@I)P@@@@LB_ J&lt;@@T@@@JJ@+,@K0BL@((B.?=]@]&lt;@LPDB@@@BB0\D@ HB@ HD9@HN?4@@8W&lt;@@A@ @@@@@D]NUR@@H@@ ??4CHO&lt;8@@@C:@D,X@@A/0@@@@@BG@KZ@B@@H@@D@@@@R M&gt;@@D@@@@@@@@@QPBL@@D@@@@@@@D@B@C$@@D@@@@@@@H@A@C7@@D@@@@@@@L@J ER@@D@@@@@@@P@C F[@@D@@@@@@@T@F0G"@@D@@@@@@@X@C@HX@@D@@@@@@@ @@0H-@@D@@@@@@@,@J0JI@@D@@@@@@@4D3P1Q@@D@@@@@@@8@IAE)@@L@@PPB@@H@D!X&gt;@@L@@PPB@@P@I!YR@@L@@PPE@@H@B!XR@@L@@PPE@@P@G!X^@@L@@PPF@@H@A!W.@@L@@PPF@@P@F!W6@@L@@PPG@@H@BAT&gt;@@L@@PPG@@P@GAUH@@L@@PPH@@H@CATN@@L@@PPH@@P@HAT\@@L@@PPI@@@@" @@@@L@@PPI@@D@D@CR@@L@@PPI@@H@B@C-@@L@@PPI@@L@U@C&lt;@@L@@PPI@@P@G@E=@@L@@PPI@@T@M F*@@L@@PPI@@X@F@G&gt;@@L@@PPI@@ @A H%@@L@@PPI@@,@U H1@@L@@PPI@@4I&amp; J5@@L@@PPI@@8@RAD_@@L@@PPJ@@H@C!H6@@L@@PPJ@@P@H!IF@@L@@PPK@@H@D!VN@@L@@PPK@@P@I!V"@@L@@PPL@@H@BAU&amp;@@L@@PPL@@P@GAU0@@L@@PPN@@H@DASV@@L@@PPN@@P@IAS(@@L@@PPP@@H@D!QV@@L@@PPP@@P@I!Q*@@L@@PPS@@H@A!WJ@@L@@PPS@@P@F!WR@@L@@PPT@@H@C!N"@@L@@PPT@@P@H!N2@@L@@PPU@@H@EAM"@@L@@PPU@@P@JAM8@@L@@PPV@@H@C!L.@@L@@PPV@@P@H!L&gt;@@L@@PPX@@H@BALF@@L@@PPX@@P@GALP@@L@@PPY@@H@EAKF@@L@@PPY@@P@JAK\@@L@@PP[@@H@B!JZ@@L@@PP[@@P@G!J&amp;@@L@@PP]@@H@A!HR@@L@@PP]@@P@F!HZ@@L@@PP_@@H@B!G&amp;@@L@@PP_@@P@G!G2@@L@@PP!@@H@E!RR@@L@@PP!@@P@J!R*@@L@@PP"@@H@CAF6@@L@@PP"@@P@HAGD@@L@@PP$@@H@CAI*@@L@@PP$@@P@HAI8@@L@@PP&amp;@@H@E!PR@@L@@PP&amp;@@P@J!P*@@L@@PP''@@H@D!OV@@L@@PP''@@P@I!O*@@L@@PP*@@H@BAFN@@L@@PP*@@P@GAFX@@L@@PP-@@H@B!Y:@@L@@PP-@@P@G!ZF@DL@[0A0@G$@[@A%@FX@]@@ @CH@L@@0@CH@K@@ @CH@L@@0@CL@K@@ @CH@L@@0@CT@K@@ @CH@L@@0@C @K@@ @CH@L@@0@C$@K@@ @CH@L@@1@C@@H@AF@GH@YPA%@B@@T0A/@FX@]@A7@FD@\ A%@B@@Q A/@GT@[ A$@FD@]@A)@F&lt;@[ @.@@AC[7A9[FU&amp;]B@2LC@2KB@2LC@3KB@2LC@5KB@2LC@8KB@2LC@9KB@2LCD0HDY2YVT T6=&amp;]G]!\&amp;T Q&amp;=5[&amp;Q!]F%/["8@@DX@\ A%@FT@T0A!@F8@\0@@Q''I%YUM![''L@@DH@[0A,@FP@@DI/[FP@@DX@[0A.@GP@Q A/@GH@Y0A%@B@@L @.@C@@H@@:@B@@Q A2@FT@YP@ @EL@XPA.@GL@H@AB@F&lt;@[@A$@B@@N @ @CD@NP@-@C$@KP@2@C@@LP@0@@AF[694Q&amp;=2Y6T L"80HC( Q''I%YRASXV93HDI/[FP N"@1NR49KSH0LS@@@DX@\ A%@FT@H@AS@FD@[ A3@B@@P A/@F0@Y@@@Q''I%YRASXV93HDI/[FP@@EX@YPA2@GL@ZPA/@F8@H@@$@EH@YPA6@F$@\0A)@F&lt;@[ @:@B@@LP@.@CD@NP@9@B@@I@@ @@AVYWI3ZV=.HBQRYWY)\6%/[#( LR81NS$ IB@@@DX@\ A%@FT@T0A!@F8@\0AB@F&lt;@[@A$@@AF\&amp;U%T6E.\4I/[FP@@D\@S AU@@AGS%T@@F @]@A4@G@@\0@:@B&lt;@K0A3@FD@] A!@F8@[ A!@F @K A''@F8@]P@.@F&lt;@\ A''@B&lt;@\@A2@F&lt;@Z A%@FL@]@A3@B&lt;@Y A2@FT@YPA&amp;@F&lt;@[ A4@B&lt;@@F!4]GA3N"&lt;/\6E6XV9.XV .Y695K&amp;=2Y2=0\&amp;=*YVM4\2=&amp;\&amp;U%Y&amp;=.]B&lt;@@EP@Z@A)@GL@H@A#@F&lt;@[PA0@GT@]@A%@GH@H@A&amp;@F&lt;@[ A4@B@@ZPA3@B@@\@A!@GH@]@@ @F&lt;@Y @ @D\@S AU@B@@Q A2@FT@YPAF@F&lt;@[ A4@B8@H@@ @D$@]@@ @F$@\0@ @FX@\ A%@FT@H@A3@F&lt;@Y A4@G\@XPA2@FT@N @ @G$@[0A5@B@@X0A!@F8@H@A2@FT@Y@A)@GL@]@A2@F$@X A5@GP@YP@ @F$@]@@ @FD@[ A$@B&lt;@[0A2@B@@[PA/@FP@ZPA&amp;@G$@H@A)@GP@H@A5@F8@Y@A%@GH@H@A4@F @YP@ @GP@YPA2@F4@\0@ @F&lt;@Y @ @GP@Z@A%@B@@Q0AN@ET@H@AG@FT@[ A%@GH@XPA,@B@@T@A5@FH@[@A)@FL@H@AL@F$@X0A%@F8@\0A%@B@@XPA3@B@@\@A5@FH@[@A)@GL@Z@A%@FP@H@A"@G$@H@A4@F @YP@ @DX@\ A%@FT@H@AS@F&lt;@Y A4@G\@XPA2@FT@H@AF@F&lt;@]PA.@FP@XPA4@F$@[0A.@B0@H@A%@F$@]@A(@FT@\ @ @GX@YPA2@GL@ZPA/@F8@H@@3@B@@[0A&amp;@B@@]@A(@FT@H@AL@F$@X0A%@F8@\0A%@B0@H@A/@GH@H@@(@FD@]@@ @G$@[0A5@GH@H@A/@G@@]@A)@F&lt;@[ @)@B@@XPA.@G$@H@A,@FD@]@A%@GH@H@A6@FT@\ A3@F$@[0A.@B8@B @J@EP@Z@A)@GL@H@A0@GH@[0A''@GH@XPA-@B@@ZPA3@B@@Y@A)@GL@]@A2@F$@X A5@GP@YPA$@B@@ZPA.@B@@]@A(@FT@H@A(@F&lt;@\@A%@B@@]@A(@FD@]@@ @F$@]@@ @G\@ZPA,@F0@H@A"@FT@H@A5@GL@YPA&amp;@GT@[@@,@B@@X A5@GP@H@AW@D$@U@AH@D&lt;@UPAT@B@@PPAN@E$@H@AW@DD@T AR@DD@S AT@E$@N0@ @G\@ZPA4@F @[0A5@GP@H@A%@GX@YPA.@B@@]@A(@FT@H@A)@F4@\@A,@F$@YPA$@B@@]0A!@GH@\ A!@F8@]@A9@B@@[0A&amp;@B@@SPAE@EH@P0AH@DD@S AT@DD@P AI@D0@RPAT@E$@H@A/@GH@H@AF@D$@U@AN@DT@T0AS@B@@Q AO@EH@H@AA@B@@T@AA@EH@U@AI@DL@UPAL@DD@T @ @E@@UPAR@E@@S0AS@DT@K @ @B@@T0A%@FT@H@A4@F @YP@ @D\@S AU@B@@Q0A%@F8@YPA2@FD@[@@ @E@@]PA"@F0@ZPA#@B@@S@A)@FL@YPA.@GL@YP@ @FX@[0A2@B@@[PA/@GH@YP@ @FP@YPA4@FD@ZPA,@GL@K @J@@(@VPA/@GT@H@A3@F @[0A5@F0@Y@@ @F @XPA6@FT@H@A2@FT@X0A%@F$@] A%@FP@H@A!@B@@X0A/@G@@^P@ @F&lt;@Y @ @GP@Z@A%@B@@Q0AN@ET@H@AG@FT@[ A%@GH@XPA,@B@@T@A5@FH@[@A)@FL@H@AL@F$@X0A%@F8@\0A%@B@@XPA,@F&lt;@[ A''@B@@]0A)@GP@Z@@ @GP@Z@A)@GL@H@A0@GH@[0A''@GH@XPA-@B8@H@@ @D$@Y @ @F8@[0A4@B0@H@A3@FT@YP@ @C0@Z@A4@GP@\@@:@B&lt;@K0A7@G\@]0@.@F\@[ A5@B8@[0A2@F\@K0A,@F$@X0A%@F8@\0A%@GL@K0@&gt;@B8@B @J@DD@\0@ @FD@H@A3@G@@YPA#@F$@XPA,@B@@YPA8@FL@YPA0@GP@ZPA/@F8@K@@ @F$@Y @ @G$@[0A5@B@@X0A2@FT@XPA4@FT@H@A!@B@@Y@A/@FL@]PA-@FT@[ A4@B@@]0A(@F$@X0A(@B@@]PA3@FT@\0@ @GP@Z@A)@GL@H@A&amp;@F&lt;@[ A4@B0@H@A!@F8@Y@@ @FT@[PA"@FT@Y@@ @GP@Z@A)@GL@H@A&amp;@F&lt;@[ A4@B@@[0A2@B@@]PA.@FD@[@A4@FT@\ A%@FP@H@A0@F&lt;@\ A4@F$@[0A.@GL@H@A/@FX@H@A4@F @ZPA3@B@@Y A/@F8@]@@ @F$@[ A4@F&lt;@H@A4@F @YP@ @FP@[0A#@GT@[PA%@F8@]@@,@B@@]@A(@F$@\0@ @FX@[0A.@GP@H@A$@F&lt;@YPA3@B@@[ A/@GP@H@A"@G$@H@A)@GP@\0A%@F0@Y @ @FL@XPA5@GL@YP@ @GP@Z@A%@B@@\ A%@GL@]PA,@GP@ZPA.@F\@H@A$@F&lt;@X0A5@F4@YPA.@GP@H@A4@F&lt;@H@A"@FT@H@A#@F&lt;@] A%@GH@YPA$@B@@X A9@B@@]@A(@FT@H@AG@D8@UP@ @D\@YPA.@FT@\ A!@F0@H@AP@GT@X A,@F$@X0@ @D0@ZPA#@FT@[ A3@FT@K @ @EP@Z@A)@GL@H@A%@G @X0A%@G@@]@A)@F&lt;@[ @ @FP@[0A%@GL@H@A.@F&lt;@]@@ @F @[0A7@FT@] A%@GH@H@A)@F8@] A!@F0@ZPA$@FD@]@A%@B@@XPA.@G$@H@A/@GP@Z@A%@GH@H@A2@FT@XPA3@F&lt;@[ A3@B@@]0A(@G$@H@A4@F @YP@ @FP@[0A#@GT@[PA%@F8@]@@ @F4@ZPA''@F @]@@ @FH@YP@ @FL@[0A6@FT@\ A%@FP@H@A"@G$@H@A4@F @YP@ @D\@S AU@B@@Q0A%@F8@YPA2@FD@[@@ @E@@]PA"@F0@ZPA#@B@@S@A)@FL@YPA.@GL@YP@.@B@@RPA&amp;@B@@^PA/@GT@H@A-@F&lt;@Y@A)@FX@^P@ @GP@Z@A)@GL@H@A&amp;@F&lt;@[ A4@B0@H@A9@F&lt;@]P@ @F4@XPA9@B@@YPA8@GP@YPA.@FP@H@A4@F @ZPA3@B@@YPA8@FL@YPA0@GP@ZPA/@F8@H@A4@F&lt;@H@A9@F&lt;@]PA2@B@@] A%@GH@\0A)@F&lt;@[ @ @F&lt;@Y @ @GP@Z@A%@B@@Y A/@F8@]@@,@B@@X A5@GP@H@A9@F&lt;@]P@ @FD@\ A%@B@@[ A/@GP@H@A/@FH@[@A)@F\@XPA4@FT@Y@@ @GP@[0@ @FP@[0@ @GL@[0@.@B@@RPA&amp;@B@@^PA/@GT@H@A$@F&lt;@H@A.@F&lt;@]@@ @G\@ZPA3@F @H@A4@F&lt;@H@A$@F&lt;@H@A3@F&lt;@K@@ @FP@YPA,@FT@]@A%@B@@]@A(@F$@\0@ @FT@^@A#@FT@\@A4@F$@[0A.@B@@\0A4@FD@]@A%@F4@YPA.@GP@H@A&amp;@GH@[0A-@B@@^PA/@GT@\ @ @GX@YPA2@GL@ZPA/@F8@K @@UF!)\2A#[650]WQ%\"A&amp;[694HF%3HGA!\''P [6X Q49UHDY2YVUF[694K"@ RWP ZWL Y''I%YRA3[6Y4]6E2YS( ^V=5HFM!["A2YVQ)\7Q2ZVI5]FT ZWP XV9$K6=2HF5/YF%&amp;^RA)]BA5[&amp;Q%\"A4ZFT ]FU2[WL [6X ]F!%HD]NURAGYV9%\&amp;E,HEA5X&amp;1)X2ALZVM%[''M%HFE3HGA5X&amp;1)\6!%YBA"^RA4ZFT Q''I%YRAS[6Y4]6E2YRAF[7U.YFE4ZV=.KBA%ZWQ(YWH ]&amp;U2\6%/["@3HF=&amp;HGQ(YRALZVM%[''M%KBA/\"@(XWP ^V=5\"A/\GQ)[68)HFE.^RA,XWQ%\"A6YWI3ZV=.K (JUF!)\2A0\&amp;=''\&amp;E-HF%3HFQ)\7Q2ZVI5]FU$HF%.HGQ(YRA([7A%HGQ(XWP ZWP ]6%,[BA"YRA5\6U&amp;]V0,HFI5]BAWRUQHS5UTHDENVRAWPUIRPT9TVS, ]6%4ZF=5]BA%]&amp;U.HGQ(YRA)[WA,ZVU$HG]!\''I![''Q9HF=&amp;HD5ET$MHPT9TPTIISD%TVRA/\"AFRUQNQUMSHDYOT"AAHEAAT%QIP5ULPUH TEURTD=SQR8 HEM%YRA4ZFT Q49UHD]%[&amp;U2XV0 TGU"[F%#HD1)X6U.\6T Y&amp;=2HF5/\&amp;T YFU4XV%,\28JB%%/]RA3ZF=5[FP ZFE6YRA2YVM%ZWY%YBA!HFM/\G$ [6X ]F!%HD]NURAGYV9%\&amp;E,HEA5X&amp;1)X2ALZVM%[''M%HFE,[69''HG])]F  ]F!)\2A0\&amp;=''\&amp;E-K"@ RVX [&amp;=4KBA3YVT OF!4]G@:K2=7]7\.Y695K&amp;=2Y2=,ZVM%[''M%\2&lt;&gt;K (JPWL XRA3\FU#ZVE,HFU8X6U0]F%/["0 ZVX ^V=5HFM2YVE4YRA!HFQ/X7U-YV94HG](ZVM(HGU3YWL ]F!)\2A&amp;[694KBA![&amp;P YV5"YVP ]F!)\2A&amp;[694HF=2HGU.XV14YWI%YBA0[7I4ZV=.\2A/Y"A4ZF%3HFY/[''P ZV94[2A4ZFT YF=#]V5%[''P,HGQ(ZWL Y&amp;=.]BA$[6U3HF9/]BA"^RA)]GM%[FX X6E5\6T ]F!%HGI%\7U,]F%.Y2A$[6M5[VU.]BA4[2A"YRA#[7Y%\&amp;U$HFI9HGQ(YRAGS%T Q6U.YWI![BAP]VI,ZVL SF%#YV93YR8 UF!)\2A%^FM%\GQ)[68 YF=%\2A.[7P ZF=7YWY%\"A)[''Y![F%$XWQ%HFE.^RA/]F!%\"A2YVE3[693HG](^RA4ZFT YF=#]V5%[''P [V%''ZGP X&amp;T X6=6YWI%YBA"^RA4ZFT Q49UHD]%[&amp;U2XV0 TGU"[F%#HD1)X6U.\6T.HD%&amp;HG%/]RA-[6Q)Y''$ ]F!)\2A&amp;[694KBA9[7T [VE9HFU8]FU.YBA4ZF%3HFU8X6U0]F%/["A4[2A9[7U2HGY%\''M)[68 [6X ]F!%HFY/[''P,HFI5]BA9[7T XWI%HF9/]BA/X&amp;1)Y6E4YVP ]F&lt; YF&lt; \6&lt;.HD%&amp;HG%/]RA$[2A.[7P ]6%3ZBA4[2A$[2A3[20 YFU,YWQ%HGQ(ZWL YW!#YWA4ZV=.HGM4XWQ%[VU.]BA&amp;\&amp;=-HG%/]WH ]&amp;U2\6%/["8@@F @]@A4@G@@N @/@B&lt;@]0A7@G\@K A''@F8@]P@.@F&lt;@\ A''@B&lt;@X0A/@G@@^PA,@FT@Y A4@B&lt;@Y0A0@F0@K A(@GP@[PA,@@A(]GQ0N"&lt;/]7]7K&amp;].]R9/\&amp;\/X6=0^V1%Y''P/Y7A,K&amp;!4[V0@@QD@8 L#@F4@@@AF@GH@YPA%@B@@T0A!@F8@\0@ @QD@8 L#@F4@@@P6AC DP@P=AC DNP@@@DX@\ A%@FT@H@AS@FD@[ A3@B@DM P8AD@DOPP8AC$@@@AK@FD@[@D1@F8@@@AF@GH@YPA%@B@@T0A!@F8@\0@ @D,@XPA,@SD@[ @@@DX@YPA4@@@@Q A2@FT@YP@ @EL@XPA.@GL@H@AF@FT@]@@@@D8@YPA''@GH@ZPA4@FD@@@AF@GH@YPA%@B@@T0A!@F8@\0@ @D8@YPA''@GH@ZPA4@FD@@@AK@GH@YPA0@F,@[0@@@DX@\ A%@FT@H@AS@FD@[ A3@B@@R0A2@FT@\@A+@F&lt;@@@AT@GTACPA.@N$@@@AF@GH@YPA%@B@@T0A!@F8@\0@ @EP@]PDM@F8@:P@@AA&lt;DO P;ADLDM P8AD@DOPQKAC$@@@AF@GH@YPA%@B@@T0A!@F8@\0@ AA&lt;DO P;ADLDM P8AD@DOPQKAC$@@@A''@GH@[0A3@@@@Q A2@FT@YP@ @EL@XPA.@GL@H@A''@GH@[0A3@@@@S A%@F\@\ A)@GP@[0@@@DX@\ A%@FT@H@AS@FD@[ A3@B@@S A%@F\@\ A)@GP@[0@@@E@@[0A''@GH@]PA"@F$@[0A.@G$@@@AF@GH@YPA%@B@@T0A!@F8@\0@ @E@@[0A''@GH@]PA"@F$@[0A.@G$@@@AH@FD@[@A6@FX@YPA4@@@@Q A2@FT@YP@ @EL@XPA.@GL@H@AH@FD@[@A6@FX@YPA4@@@@\@A5@GL@Z A5@F&lt;@Y@A)@GL@@@AF@GH@YPA%@B@@T0A!@F8@\0@ @G@@]PA3@F(@]PA/@FP@ZPA3@@@@]@A2@FT@Z0A.@GH@XPA+@GL@]@A3@@@@Q A2@FT@YP@ @EL@XPA.@GL@H@A4@GH@YPA+@F8@\ A!@F,@\0A4@GL@@@AG@GH@XPA3@GL@YPA4@GP@[0@@@DX@\ A%@FT@H@AS@FD@[ A3@B@@Q0A2@FD@\0A3@FT@]@A4@F&lt;@@@A(@GT@\ A5@FX@H@A4@FT@X A!@F0@@@AF@GH@YPA%@B@@T0A!@F8@\0@ @F @]PA2@GT@Y @ @GP@YPA"@FD@[@@@@DX@:PA,@F,@= A6@N$@\ @@@DX@\ A%@FT@H@AS@FD@[ A3@B@@Q C)@F0@Z0C6@GX@:PA2@@@C"@N=@&lt;PC/0N=@;D@@@AF@GH@YPA%@B@@T0A!@F8@\0@ @8 C/POD@;&lt;C/PN1@@@@Q A%@GP@]@@@@DX@\ A%@FT@H@AS@FD@[ A3@B@@Q A%@GP@]@@@@D\@\ A!@GL@@@AF@GH@YPA%@B@@T0A!@F8@\0@ @D\@\ A!@GL@@@AL@F$@Z@A!@GX@[0A)@GP@]P@@@DX@\ A%@FT@H@AS@FD@[ A3@B@@S@A)@F @XPA6@F&lt;@ZPA4@GT@@@AV@FT@]@@@@DX@\ A%@FT@H@AS@FD@[ A3@B@@U A%@GP@@@A&amp;@FT@Y@@@@DX@\ A%@FT@H@AS@FD@[ A3@B@@Y A%@FP@@@A4@GTACPA.@N$@@@AF@GH@YPA%@B@@T0A!@F8@\0@ @GP@]PDM@F8@:P@@AC&lt;DO P;ADLDQ0P5AD@DMPP=@@@@Q A2@FT@YP@ @EL@XPA.@GL@H@P?AC8DN0QCAD\DMPQ@ACTDOP@@@D0@[0A$@F$@XP@@@DX@\ A%@FT@H@AS@FD@[ A3@B@@S@A/@FP@ZPA!@@@@@@@C@@@@@0@@@A0@@P@@@@@D[@@C@@D@@@@\@@PDT@@@@Q@A@@@G@A@@_ F;@_TBG0H3@#\C[0M5@7(C_ NJ@80C(PON@=\C&lt;PO5AFDD\0Q?AO$ED0T_AUXEW0VGAX(E.PWDA^(E=@(CB (JD@((B#@JL0(6B#$JO@)BB$ JSP)QB%0JW )5DL@P=QC9DO0S=A:[G/$_EQ&lt;]G4T_SQ=WG5$_V1=]G74_-A?DG=L_61?/G?P_?"A$HGD #"BTHJX *BB,HK@ -RB8HML 52C!HO@!@RDCHP$!C"DQHQP!E2D\HRH!I2D+HR8!L"D8HS,!QBEKHT8!_2F[HZ !2"H@H L"A2HRH!T"F"H+H&amp;@"YRP#I\,%;2X,I&amp;\&amp;[2]@KVT-[28W)83;A_,W&gt;3[;OO,&gt;&gt;4G;QO-O??7??0@@@B@@(@F&gt;@_\BI@H7@%@C]@M:@78C!@NL@88C(0OQ@?@C=@P@AG@D_@RBAQ@EF T1AU$EXPVIA[@E.0WPA_@J@P(EB &lt;JD0(*B#HJMP(8B#0JO )GB$,JTP)YB%8JY!B DM@P&gt;QC;D:@^@A: G0@_FA&lt; G4 _TA=YG5,_WQ=_G8@_-!?FG=X_7Q?2G?X @BA0HGP $BB#HJ  *"B0HKT .BCPHMX 62C%HP@!@2DEHP8!DRDSHQX!GBD HRX!JRD.HSH!MRD:HTD!R2EMHUL!$BF^H\P"@BHBH X"DRHUH!("J2I H&amp;P$H2WJI^&lt;&amp;KBY I&amp;$''PB40KV&lt;.E:^H&gt;0C;D?,]&gt;3#;O/-@&gt;4O;Q/?=????8??B?&lt;C?/?&gt;;?;#?(O&gt;\?9#?%_&gt;P?8??#/&gt;M?8/?\?=1?6_?V_=Q?4??N_&lt;3?2K?HO&lt;_?1;&gt;&gt;_;8?.7&gt;:O+\&gt;-/:5?+U&gt;-S:4?+R&gt;-G:3?+N&gt;,+:2O+E&gt;+;:/_*6=H34__Q:=G''15._K9&lt;_''0^^?9;7''.&gt;^99;#''-&gt;^69;W'',&gt;^29;G''+&gt;^.9:3''*&gt;^*99?''''^^\98;''#^^L98''''!^^C963''Z.]''96S''U^]T95O''S&gt;]M943''R&gt;]G94S''P^]@93;''N&gt;\993#''L&gt;\-923''JN\X91[&amp;&gt;&gt;[F9,W&amp;0&gt;Z:9+#&amp;-NZ$9''C&amp;[^R080+"9&gt;J+8''#"]&gtlt;@L@@1@CH@L0@4@CT@M @7@C @NP@:@C,@O@@=@C8@O0A@@DD@P AC@DP@QPAF@D\@R@AI@D(@R0AL@D4@S AO@E@@TPAR@EL@U@AU@EX@U0AX@E$@V A[@E0@WPA^@E&lt;@X@A!@@@@! BG@H$@"0BS@I @'' B#@JH@)@B&amp;@JT@)0B)@J,@* B,@J4@+0B.@K@@,PB3@KT@-@B6@K @-0B&lt;@K,@/PB&gt;A&lt;(@\ A$@FT@ZP_L@G @(PA0@F,HY A6@F(H4@BH@I(@@@A3BMDH4 A''@G\H10#K@@@CSP#O@F0@_@L6@J @. BA@FL@[ #N@UP@@@#I@F4@_P_P@FH@  BE@I\AE@DUA;4G/ _FA&lt;\G0 _C@K$H5@CA@S(G;  8A&gt;LG9@%,BV4G20A9A&lt;PG2@_Z@HP@#@BC@H4@" BO@I@@$PBN@IT@% @@@IP@''@B]@I,@&lt;0I&amp;@''0@\PI8@''$B^ A:@''4B^0I''@@@@@0@@@@@@@O=C@DT@@@@@@@@@@@@@@@@@@@@@@@@@@@D@A@P@@PDACTY2YVUSXV93P&amp;=,Y@@A@ @A@DH\B" @G@()@Q0JJ H\B",C&gt;APD&gt;2&lt;L@=@LAO9\?F@\A!S:1@T]@@AYZP&lt;]@@@@@A@]@@A,,!D]@@@@NA4@@'' !D "%@ @A@@X@E @&amp;@C@@MP@&lt;@DL@RPAO@EX@WPA#@F$@]@A?@H$@$0BY@I&lt;@)PB+@KD@-0B&gt;@LT@20CQ@M,@9PC,@OL@&gt;PC?@P(AEPD[@RDAJ0D5@TDASPEX@VLAY0E+@WDA]0E&gt;@XTA"0FQ@Y A''0F)@Z,A+PF8@\LA30G[@^\A;PG3@_&lt;BB0HQ@!\BF0H_@"TBJ0H7@$LBRPIO@%(BWPI @&amp;\B[ I4@''(B!0JT@)(B(@J,@+ B/ KD@,(B4@K[@.XB; K6@/8CA LL@1HCE LZ@2@CI L-@3PCN M@@4TCR MW@6PCZ0M2@74C"@NS@98C)@N*@;PC/ OC@&lt;(C4POX@=&lt;C9 O-@?PC&gt;0PBA@$DD@PWAA8DIPP,ACLDN QAAD DS0QVAE4DY@Q+AGHD^PR@AH\D# RUAI$D'' R#AJ(D,PR8AK&lt;D1 SMAMPD60S"AN$D&lt;@S7AO8E@0THAP&lt;EE T]ARPEJ0T2ASXEOPUDAT,ET UYAV@EY0U.AWTE_@VCAX(E$PVXAY&lt;E) V-A[PE.0WBA\$E4@WWA]8E9PW,A_LE&gt; XAA  FC0XVA!4FI@X+A#HFNPY@A$\FS YUA%0FX0Y*A''@F] Y=A(PF"0ZRA)$F(@Z''A*8F-PZ&lt;A,LF2 [QA- F7@[#A.(F=@[&gt;A0TGC@\WA2HGJP\0A3\GO ]EA40GT0]ZA6DGZ@]/A7XG_P^DA8,G$ ^YA:@G)0^.A;TG/@_CA&lt;(G5 _"A&gt;$G&lt;@_7A?8HAP LBALHF  !BB HK0 6BC4HQ@!KBEHHVP! BF\H[ !5BG0H!@"KBIHH&amp;P" BJ\H+ "5BK0H00#JBMDH6@#_BNXH;P#4BO,I@ $IBQLIF $!BRXIKP$4BS,IP %IBU@IU0%^BVTI[@%3BW(I P&amp;HBX&lt;I% &amp;]BZPI*0&amp;2B[4I1@''KB]HI6P''"B^8I&lt;0''6B  JD0(ZB!&lt;JI (*B#XJN0)@B$TJR )SB%(JW0)"B&amp;$J]@*EB)LJ&amp;0*(B+DJ/@+FB,&lt;J60+"B.,J&lt;@+&gt;B0&lt;KE0,[B2DKH0,''B24KM@,;B4HKRP-PB5\KW -$B68K]@-:B8PK%@.^B:PK* .2B;4K2P/SB&gt;@K;P/9C@\LGP0$CB(LL@07CC8LS@1SCF@L\ 19CH@L!02YCJ&lt;L1@3XCNDL;@33CO,M@ 4ICQ@ME04^CRTMK@49CTDMR@5OCU,MX 5)CW@M]05&gt;CXTM#@6SCY(M(P6(CZ&lt;M- 6=C\PM207RC]$M8@7''C^8M=P7&gt;C \NEP8^C"\NL 8;C$\NU@9!C&amp; N]09?C)LN* :6C+4N3P; C.4O@ &lt;TC1,OH &lt;)C3@OM0&lt;?C5HOVP= C6\O]@=;C8HO# &gt;UC:DO+P&gt;7C&lt;@O30?]C?PP@Q@SDB@PMQABDE@PV!A''DGXP"1B_DKTP2!C^DNTP;AC;DPHQBQDPDQ\QG!D1DS,QSAESDU(QXQE(DV&lt;Q]!E=DXPQ"1FRDY$Q(AF''DZ8Q-QF&lt;D\LQ2!GQD] Q71G&amp;D^4Q=AG;D HRBQHPD!\RG!H%D"0RL1H:D$DRRAIOD%XRWQI$D&amp;,R\!I9D(@R!1JTD),R(AJ-D+\R0AKLD-PR7QK)D/TR?1LPD1TSFQL^D2LSJ!L.D3DSM!L:D3&lt;SQQMGD4$SR1MRD5PSU1M\D5&lt;SY!M)D60S[1M4D8@S#1NYD:TS+QN6D&lt;(S31OSD= S7QO$D&gt; S:1O0D?PS&gt;QO?E@XTBAPJEADTD1PVEA0THQP$EB,TK!P1ECPTNQQEEEPTXAQ,EGXT!!RQEI T''1R#EJ$T,AR7EK8T1QSLEM0T9!S1EO0UAQTPEQ$UH1T-ES UP1UOEU(UZ!U8EXPU#QVWEZDU*1V5E[&lt;U2!WTE]8U;QW7E DVB1XUE!8VJAX2E#0VQ!YOE%$VYAY/E''(V!QZRE*HV+!Z&gt;E,&lt;V6Q[#E.0V=!\@E0(WEA\^E2$WL1\=E40WU!] E6(W]A]=E8\W$Q^[E:TW+!^8E&lt;LW3!_YE&gt;PW&lt;Q AF@4XGQ .FC XP!!RFE0XY1!2FG,X!!"OFI$X(1".FK$X1Q#PFN@X;!#:FP\YEA$[FRHYJ1$4FTXYVA%"FV0Y_A&amp;LFZTY+A&amp;3F[(Y0Q''HF\&lt;Y5!'']F^PY:1''2F_$Z@A(GF 8ZEQ(\F"LZJ!(1F# ZO1)FF$4ZUA)[F&amp;HZZQ)0F''\Z_!*EF(0Z$1*ZF*DZ*A*/F+XZ/Q+DF,,Z4!+YF.@Z91+.F/TZ?A,CF0([DQ,XF1&lt;[I!,-F3P[N1-BF4$[TA-WF58[YQ-,F7L[^!.AF8 [#1.VF94[)A.+F;H[.Q/@F&lt;\[3!/UF=0[81/*F?D[&gt;A/?G@X\CQ0TGA,\H!06GC4\QA1KGEH\VQ1 GF\\[!15GG0\ 12JGID\&amp;A2_GJX\+Q24GK,\0!3IGM@\513^GNT\;A33GO(]@Q4HGP&lt;]E!4]GRP]J142GS$]PA5GGT8]UQ5\GVL]Z!51GW ]_16FGX4]%A6[GZH]*Q60G[\]/!7EG\0]417ZG^D]:A7/G_X]?Q8DG ,^D!8YG"@^I18.G#T^OA9CG$(^TQ9XG%&lt;^Y!9-G''P^^1:BG(4^%A:[G*H^*Q:0G+,^0!;MG-P^61;"G.$^&lt;A;7G0H_BQ&lt;TG1,_H!&lt;)G3@_M1&lt;&gt;G4T_TA=WG58_YQ=,G7L_^!&gt;AG8 _#1&gt;VG94_)!&gt;/G; _0Q?LG=T_7!?)G?T @B@IHAT HB@+HCT O"AKHE\ YRA3HG4 !"BQHI0 )BB-HK  0RCJHML 8RC*HOT!@2DLHQ(!H2D/HS$!Q"ENHU8!ZRE2HW0!!"FOHY,!)2F3H[&lt;!3"GUH]0!82G*H_D!&gt;BG?H X"CRHTH!,"H"H)H#@"M2H&gt;H$T"SBISH%("XRI(H&amp;&lt;"]"I=H(P""2JRH)$"(BJ''H*8"-RJ&lt;H,L"2"KQH- "72K&amp;H.4"=BK;H0H#BRLPH1\#G"L%H20#L2L:H4D#RBMOH5X#WRM$H6,#\"M9H8@#!2NNH9T#''BN#H:(#,RN8H;&lt;#1"OMH=P#62O"H&gt;$#&lt;BO7H?8$ARPLIAL$F"P!IB $K2P6IC4$QBQKIEH$VRQ IF\$["Q5IG0$ 2RJIID$&amp;BR_IJX$+RR4IK,$0"SIIM@$52S^INT$;BS3IO(%@RTHIP&lt;%E"T]IRP%J2T2IS$%PBUGIT8%URU\IVL%Z"U1IW %_2VFIX4%%BV[IZH%*RV0I[\%/"WEI\0%42WZI^D%:BW/I_X%?RXDI ,&amp;D"XYI"@&amp;I2X.I#T&amp;OBYCI$(&amp;TRYXI%&lt;&amp;Y"Y-I''P&amp;^2ZBI($&amp;$BZWI)8&amp;)RZ,I+L&amp;."[AI, &amp;32[VI-4&amp;9B[+I/H&amp;&gt;R\@I0\''C"\UI10''H2\*I3D''NB\?I4X''SR]TI5,''X"])I7@'']2]&gt;I8T''#B^SI9(''(R^(I:&lt;''-"^=I&lt;P''22_RI=$''8B_''I&gt;8''=R_&lt;J@L(B" QJA (G2 &amp;JB4(MB ;JDH(RR!PJE\(W"!(JGH(^R"@JH\(#""UJI0()""0JK\(/"#EJL0(42#ZJND(:B#/JOX(?R$DJP,)D"$YJR@)I2$.JS )P"%IJU@)V"%$JV,)\"%9JX@)!2&amp;NJYT)''B&amp;#JZ(),R&amp;8J[&lt;)1"''MJ]P)62''"J^$)&lt;B''7J_8*AR(LJ!L*F"(!J" *L"(&lt;J$L*R")QJ% *W2)&amp;J&amp;4*]B);J(H*"R*PJ)\*''"*%J*0*,2*:J,D*2B+RJ-0*82+*J/D*&gt;B+?J0X+CR,TJ18+JB,1J3(+PR-HJ4&lt;+U"-]J6P+["-8J8D+"".QJ9 +''2.&amp;J:4+-B.;J&lt;H+2R/PJ=\+7"/%J&gt;0+&lt;2/:K@D,BB0NKAP,F"0 KB$,L"09KD@,Q21NKET,WB1#KF(,\R18KG&lt;,!"2MKIP,&amp;22"KJ$,,B27KK8,1R3LKML,6"3!KN ,;236KO4-AB4KKQH-FR4 KR\-K"45KS0-P25JKUD-VB5_KVX-[R54KW,- "6IKY@-%"6]KZP-*262K[$-0B7GK\8-5R7\K^L-:"71K_ -?28FK 4.EB8[K"H.JR80K#\.O"9EK$0.T29ZK&amp;D.ZB9/K''X._R:DK(,.$":YK*@.)2:.K+T./B;CK,(.4R;XK-&lt;.9";-K/P.&gt;2&lt;BK0$/C2&lt;UK10/H2&lt;*K3D/NB&lt;?K4X/SR=TK5,/X"=)K7@/]2=&gt;K8T/#B&gt;SK9(/(R&gt;(K:&lt;/-"&gt;=K&lt;P/22?RK=$/8B?''K&gt;8/=R?&lt;L@L0B#@QLA 0G3@&amp;LB40MC@;LDH0RSAPLE\0W#A%LF00\3A:LHD0"CBOLIX0''SB$LJ,0,#B9LL@013CNLMT07CC#LN(0&lt;SC8LO&lt;1A#DMLQP1F3D"LR$1LCD7LS81QSELLUL1V#E!LV 1[3E6LW41!CFKLYH1&amp;SF LZ\1+#F5L[0103GJL]D16CG_L^X1;SG4L_,2@#HIL!@2E3H^L"T2KCH3L#(2PSIHL$&lt;2U#I]L&amp;P2Z3I2L''$2 CJGL(82%SJ\L*L2*#J1L+ 2/3KFL,425CK[L.H2:SK0L/\2?#LEL003D3LZL2D3JCL/L3X3OSMDL4,3T#MYL6@3Y3M.L7T3_CNCL8(3$SNXL9&lt;3)#N-L;P3.3OBL&lt;$34COWL=839SO,L?L3&gt;#PAM@X4ECPYMBP4NCP?MDX4SSQTME,4X#Q)MG@4]3Q&gt;MH 4$SR!MJ 4+3R6MK441CSKMMH46SS MN\4&lt;SS:MP(5DSTXMQ&lt;5I#T-MSP5N3UBMT$5TCUWMU85YSU3MX@5!SVLMYL5&amp;#V!MZ 5+3V6M[451CWKM\&lt;55CW[M^H5:SW0M_\5?#XEM 06D3XZM"D6JCX/M#X6OSYDM$,6T#Y[M&amp;H6[3Y&lt;M(L6"#ZQM) 6''3Z&amp;M*46-CZ;M,H62S[PM-\67#[%M.06&lt;3\@M0\7C#\UM107IS\,M3P7N3]BM4$7TC]WM587YS],M7L7^#^AM8 7#3^VM947)C^+M;H7.S_@M&lt;\73#_UM=0783_*M?D7&gt;C_?N@X8CS TNA,8H# )NC@8M3 &gt;ND(8U3!$NG@8]3"DNH,8$#"YNJ@8)3",NK@8-C";NLH823#ONML86##!NN 8&gt;S$KNQH9FS$ NR\9K#$5NS09P3%JNUD9VC%_NVX9[S%4NW,9 #&amp;INY@9%3&amp;^NZT9+C&amp;3N[(90S''HN\&lt;95#'']N^P9:#''2N_\9?#(EN!@:FC(_N"X:KS(4N#,:P#)IN%@:U3)^N&amp;T:[C)3N''(: S*HN(&lt;:%#*]N*P:*3*2N+$:0C+GN,8:5S+\N.L::#+1N/ :?3,FN04;EC,[N2H;JS,0N3\;O#-EN40;T3-ZN6D;ZC-/N7X;_S.DN8,;$#.YN:@;)3..N;T;/C/CN&lt;0;43/]N&gt;X;;3/8N?&lt;&lt;A#0MOAP&lt;F30"OB$&lt;LC07OC8&lt;QS1LOEL&lt;V#1!OF &lt;]C1;OHH&lt;"S2POI\&lt;''#2%OJ8&lt;.S3DOL8&lt;5#3_ONX&lt;;S35OO4=A#4ROQ$=HC4&amp;OSD=NC4=OTX=TS5UOVL=ZC5/OW0= 36NOY0=(36*O[D=.C6?O\X=3S7TO],=8#7)O_@==37&gt;O T&gt;CC8SO!(&gt;HS8(O"&lt;&gt;M#8=O$P&gt;R39RO%$&gt;XC9''O&amp;8&gt;]S9&lt;O(L&gt;"#:QO) &gt;''3:&amp;O*4&gt;-C:;O,H&gt;2S;PO-\&gt;7#;%O.0&gt;&lt;3;:O0D?BC&lt;OO1X?GS&lt;$O2,?L#&lt;9O4@?Q3=TO6D?[C=4O70?"#&gt;VO:P?-3?KO=&lt;?&lt;4@GP@=@E4@_PB]@K4@7PD=@Y4A6PG9@%4B/PK=@34C+PO=AD4D''PS-AS4E#PW]A"4F_P[MA14G[P^=B@4HWP"-BO4ISP&amp;]B^4JOP*MB-4KKP-=B&lt;4LGP0=CH4L7P4-CW4M3P8]C&amp;4N/P&lt;MC54O+P?=DA4P_QC]DS4Q''QG=D!$RMQI%D)TR1QK5D2TSPQM]D:DS8QO=EA$TMQQQEF4T"QR%ELDT7QT!EVDU/QXUE%DV$Q[QE04WTQ^UE&lt;4XBQ!MFH$X1Q$UFUDY%Q''QF 4ZUQ*!F-$[GQ-YF9$[6Q0UGD4\ Q25GNT]HQ4=GXT^&amp;Q;QG/B9.]V1,[&amp;=.[VE2Z6%.Y7I%]GU2[&amp;9/[&amp;I2YVE+ZV9''\7A!X6U3[6Y4ZG%0ZFU.[V%#\&amp;=A[VE#\&amp;=.XV5!X7I/[$E"\&amp;U6YVE"\&amp;U6YTE/Y6=.YV-![6]/[&amp;U+P6E#]WQ%X6E#]WQ%P6M)\&amp;M5[VY,YW!#X6%2X7U-Y&amp;1%^DM$[7Q!X6M%[''Q#YF=4XVM#YV94P6M!\&amp;=.X6M!\&amp;=.QFM!\&amp;=.YFM!\&amp;=.QFM2[6E4YFM2[6E4QV5!X7I/[&amp;U-XVM2[69EX''I%]&amp;U%X''I%]&amp;UEYF=4XVM#YV94YVQ/]FE#X6U.]DU/Y6=.YV-%[6]/[&amp;U+QVM!\&amp;=.YVM!\&amp;=.Q6M)\&amp;M5[VY,YW!''X6%2X7U-Y&amp;1%^D]"\&amp;U6YV]"\&amp;U6YT]$[7Q!X6M%[''Q''YF=4XVM#YV94Q6M/[V5!XVM#YV94Y6M/[V5!XVM#YV94RFM)\&amp;M5[VY,YW!(X6%2X7U-Y&amp;1%^D!"XWI(X&amp;E2RWQ)[FQ%ZWQ)[FQ%RV5!X7I/[&amp;%-XVM2[69IX''I%]&amp;U)X''I%]&amp;UI[6]/[&amp;U+ZV=''[69%Z4%$[7Q!X6M%[''QIR&amp;%*R&amp;M)\&amp;M5[VY,YW!*X6%2X7U-Y&amp;1%^D-#[65-XVE#X6U.]F-#[65-XVE#X6U.]F-''\&amp;U%[&amp;1![&amp;Q)X41!X7U4YV1!X7U4YT1#[65-XVE#X6U.]F1#[65-XVE#X6U.]D1#XWI/[&amp;1#XWI/[$1$[7Q,YF=4S&amp;E#]WQ%[&amp;E#]WQ%S&amp;M/[V5!XVM#YV94[&amp;M/[V5!XVM#YV94S&amp;M!\&amp;=.[&amp;M!\&amp;=.[&amp;E0[7M4\&amp;=0ZFUE[&amp;]%[&amp;]O[VE#\&amp;=.[65!X7I/[$="\&amp;U6YV="\&amp;U6YT=(]V9''XWI5[V1!]WQ/ZGU.Y6E2]V5,XWU4T&amp;E#]WQ%\&amp;E#]WQ%T&amp;M/[V5!XVM#YV94\&amp;M/[V5!XVM#YV94T&amp;M!\&amp;=.\&amp;M!\&amp;=.T6E#]WQ%\6E#]WQ%T6M)\&amp;M5[VY,YW!3X6%2X7U-Y&amp;1%^EM#YVQ)[F1!\6M%YF%,[FETX6U$ZV1,XWQ#YVQ)[F1!UFM!\&amp;=.]FM!\&amp;=.UFI!\''Q"XWIU]F%,YFU5]F%,YFUU[VE#\&amp;=.]V5!X7I/[%U"\&amp;U6YWU"\&amp;U6YUU2ZV9'']WI)[&amp;]UZGU.Y6E2]V5,XWU4]V!5[&amp;]!\''U-[FE5]EU/Y6=.YV-5[6]/[&amp;U+U6M)\&amp;M5[VY,YW!7X6%2X7U-Y&amp;1%^E%#ZWI#]V5&amp;[FU8^VM)\&amp;M5[VY,YW!ZXVM5]FU:XVM5]FUZYF=4XVM#YV94^&amp;Q/]FE#X6U.]F1/[&amp;]3]V9)LCD8LGU.ZS@1NCE5[&amp;$0LS 2]V9)LCD8L7U.ZS@1NCQ5[&amp;$0LS 5]V9)LCD8M''U.ZS@1NC]5[&amp;$0LS 8]V9)LCD8NWU.ZS@1NDE5[&amp;$0LS!B]V9)LCD8P7U.ZS@1NDQ5[&amp;$0LS!E]V9)LCD8Q''U.ZS@1NSA5[&amp;$0LS$1]V9)LCD9L7U.ZS@1NSQ5[&amp;$0LS$5]V9)LCD9M''U.ZS@1NS]5[&amp;$0LS$8]V9)LCD9NWU.ZS@1NVE5[&amp;$0LS%B]V9)LCD9P7U.ZS@1NTQ5[&amp;$0LS%ES6I!\$=([7I.[6!/\&amp;95[&amp;$0LTD2]V9)LCE!L7U.ZS@1PSQ5[&amp;$0LTD5]V9)LCEAM''U.ZS@1PS]5[&amp;$0LTD8]V9)LCEANWU.ZS@1XVE5[&amp;$0LTEB]V9)LCEAP7U.ZS@1PTQ5[&amp;$0LTEEUV!/\&amp;95ZF=2[''U.ZS@1P#E5[&amp;$0LVH2]V9)LCEBL7U.ZS@1P#Q5[&amp;$0LTH5]V9)LCEBM%%/Y6!5[&amp;$0LTH8]V9)LCE"NWU.ZS@1X&amp;E5[&amp;$0LVI"]V9)LCE"YWU.ZS@1X&amp;Y5[&amp;$0LVL0]V9)LCE#LWU.ZS@1X3I5[&amp;$0LVL3]V9)LCECMGU.ZS@1P3U5[&amp;$0LTL6]V9)LCECM7U.ZS@1P3!5[&amp;$0LTL9]V9)LCECPWU.ZS@1P4I5[&amp;$0LTMC]V9)LCECQGU.ZS@1P4U5[&amp;$0LTMF]V9)LCEDLGU.ZS@1QCE5[&amp;$0LTP2]V9)LCEDL7U.ZS@1QCQ5[&amp;$0LTP5]V9)LCEDM''U.ZS@1QC]5[&amp;$0LTP8]V9)LCEDNWU.ZS@1QDE5[&amp;$0LTQB]V9)LCEDP7U.ZS@1QDQ5[&amp;$0LTQE]V9)LCEDQ''U.ZS@1QSA5[&amp;$0LTT1]V9)LCEEL''U.ZS@1QSM5[&amp;$0LTT4]V9)LCEEMT]#XWI/[&amp;]#XWI/[''U.ZS@1QS!5[&amp;$0LTT9S6=''[69%Z6=/Y6=.YV-5[&amp;$0LTUC]V9)LCEEQGU.ZS@1QTU5[&amp;$0LTUF]V9)LCEFLGU.ZS@1Q#E5[&amp;$0LTX2]V9)LCEFL7U.ZS@1Q#Q5[&amp;$0LTX5U7%.[''U.ZS@1Q#!5[&amp;$0LTX9PWI)[&amp;]!X7U4YVE2ZV9''XVM5]FUAQVE#]WQ%XVU!X7U4YT=3[FE3ZFE#]WQ%[7M,XWM(XVM5]FU5[&amp;$0L#@0]V9)LCH0LWU.ZS@2LCI5[&amp;$0L#@3]V9)LCH0MGU.ZS@2LCU5[&amp;$0L#@6]V9)LCH0M7U.ZS@2LC!5[&amp;$0L#@9]V9)LCH0PWU.ZS@2LDI5[&amp;$0L#AC]V9)LCH0QGU.ZS@2LDU5[&amp;$0L#AF]V9)LCH1LGU.ZS@2LSE5[&amp;$0L#D2]V9)LCH1L7U.ZS@2LSQ5[&amp;$0L#D5]V9)LCH1M''U.ZS@2LS]SX6=-[VE!X6M%[''Q3X6=-[VE!X6M%[''Q5[&amp;$0L#EA]V9)LCH1P''U.ZS@2LVM5[&amp;$0L#E$]V9)LCH1QWU.ZS@2LTY5[&amp;$0L#H4]V9)LCH2MWU.ZS@2L#Y5[&amp;$0L#H7]V9)LCH2NGU.ZS@2L#%5[&amp;$0L#IA]V9)LCH2P''U.ZS@2L$M5[&amp;$0L#ID]V9)LCH2QWU.ZS@2L$Y5[&amp;$0L#L0]V9)LCH3LWU.ZS@2L3I5[&amp;$0L#L3YF=4[FU3\6)5[&amp;$0L#T0]V9)LCH5LWU.ZS@2MSI5[&amp;$0L#T3]V9)LCH5MGU.ZS@2MSU5[&amp;$0L#T6]V9)LCH5M7U.ZS@2MS!5[&amp;$0L#T9]V9)LCH5PWU.ZS@2MTI5[&amp;$0L#UC]V9)LCH5QGU.ZS@2MTU5[&amp;$0L#UF]V9)LCH6LGU.ZS@2M#E5[&amp;$0L#X2Y6E-[VE,XWQ)[''U.ZS@2M#Q5[&amp;$0L#X5ZF!/[6-5[&amp;$0L#X7]V9)LCH6NGU.ZS@2M#%5[&amp;$0L#YA]V9)LCH6P''U.ZS@2M$M5[&amp;$0L#YD]V9)LCH6QWU.ZS@2M$Y5[&amp;$0L#\0]V9)LCH7LWU.ZS@2M3I5[&amp;$0L#\3]V9)LCH7MGU.ZS@2M3U5[&amp;$0L#\6]V9)LCH7M7U.ZS@2M3!5[&amp;$0L#\9]V9)LCH7PWI4]WI.\''Q([6=+]V9)LCH7P7U.ZS@2M4Q5[&amp;$0L#]E]V9)LCH7Q%I3[VE,[FM!\EI3[VE,[FM!\F%.]''M([6=+YWM(YF=4[FU3\6)3]GI/Z6U([6=+YWM(\6!/\''Q2YWY%\6!#]WI,]GQ5\&amp;94\''Q([6=+]VI!\''U0\6%,[69,XWQ)[''Y([6=+]''Q5\&amp;97]GU2[''%4]WI.VWM-XV1,X6E0^''I4ZF=/Z7)#]WI,YW)(YW)(X7U2[F],[7Q4XV13]F=0Y61/]GQ![GM4[7A2YWY)[''Y''[F=4]FE,\7Q/\F%.]&amp;M3]GI%]FM(X&amp;%,XVI)XV1#[F%#Z4I3[VE,[FM!\FU/\FU.X61/\6U$Q7M-XV1,ZF=/Z4!3[VE,[FM!\F)#\&amp;=3\6U$]FE)[F-4]WI.YVQL\65![F1#XWA1ZF=/Z6],[7Q4XV13]F=0X&amp;E2Y61/]GQ![GM4[7A"XWI2YWY$^&amp;E,]F=.YVQ%^&amp;!$^&amp;M5\&amp;14\7Q%\6!4X6M5\&amp;15[&amp;$0L&amp;D9]V9)LCI!XWU.ZS@2XVI5[&amp;$0L$EC]V9)LCI!YGU.ZS@2XVU5[&amp;$0L&amp;E&amp;ZGM5\FU2ZF!/[6-3]WA%\&amp;)3]WA%\''I3]WA%\''I4]WI.\7U0YWI2]GU2[''I4ZF=/Z7M5\FU2T''Q5\&amp;93]WA%\'']3]WA%\''%3]WA%\''A2ZV5%[V=$\GI)[VU$X&amp;1-[6Q1]V=4YV1%Y''Q-[6Q!\F=3]GI/\F!%XWA/\7Q2[7A(YWI%]''I)[&amp;](XV1&amp;\&amp;%''ZGQ2ZV9''ZFE,Y&amp;1%Y''Q''[F=4]FE,\7Q/\F5/YF],[7Q4XV13]F=0\&amp;U6YWI3YVQ-[6Q&amp;\&amp;=.]FU$X&amp;E#Z6U$\&amp;E)\6U$[F=7YWI%YGU.ZS@2X3!-XVM2[69-[6Q)Y&amp;%%\''U.ZS@2P4E''\&amp;E6YV5/YF%&amp;ZVU2]&amp;U2]F%#XV1,ZV9%[F=7[V=$]V9)LCI#YGU.ZS@2X6U5[&amp;$0L&amp;M&amp;X6=,[694\&amp;%![&amp;]5[FE2[V=$X6=,[694\&amp;%![&amp;]5[FE2ZFE,Y&amp;5/YGI)[&amp;](XV1&amp;\&amp;%''ZGQ#YV94YWI%YGI)[&amp;](XV1&amp;[FU&amp;]FM%[''Q%\&amp;U$]FE#Z7U0[V%$]FE#Z6Q/]69-ZVQ0[GU3[V=$[V%.]WM-[6Q5[&amp;$0L$QE]V9)LCIDQ''U.ZS@2QSA5[&amp;$0L$T1]V9)LCIEL''U.ZS@2QSM5[&amp;$0L$T4]F=.YVU8]GI!ZF%''ZGQ/[&amp;U(ZV](]F=.YV5)YGQ/[&amp;U,[7]4[69%YW!4\&amp;E,[7]5[&amp;$0L$UA]V9)LCIEP''U.ZS@2YVM5[&amp;$0L$UD]V9)LCI%YWU.ZS@2QTY5[&amp;$0L$X0]V9)LCIFLWU.ZS@2Q#I5[&amp;$0L&amp;X3]V9)LCIFMGU.ZS@2Q#U5[&amp;$0L$X6]V9)LCIFM7U.ZS@2Q#!5[&amp;$0L$X9]V9)LCIFPWU.ZS@2Q$I5[&amp;$0L$YC]V9)LCI&amp;YGU.ZS@2Q$U5[&amp;$0L$YFY7I!]&amp;U#[65"XVM5]FU#[65"X6%2X7U-Y&amp;1%^FM/[VI4ZV1$YVM/[VI-XVM2[69#[VI/]&amp;U2[F%.YVM-X&amp;I2YWY%X6=-X&amp;Q/]FE#X6U.]FM-X&amp;Q)XVU2YWM)\6M/[VI([6=+XVI/]&amp;U#[65"\&amp;%.Y6M-X&amp;!5[&amp;]!\''U-[FE5]FM-X&amp;M!\&amp;=.X65"]&amp;U2]F%#XV1,ZV9%XVI/]&amp;U#[VI$X&amp;16YWI4ZVM![F1)[&amp;U!X&amp;=6YVM-X&amp;]2XWY%YFI,[&amp;=3\GU.ZS@3LSA"\&amp;U6YV%.]&amp;U2]FU$X65"X6=-[VE4]WI.YVQ!X&amp;=6YVM-X&amp;M/[V5!XVI/]&amp;U#[VI#[65-XWI%]&amp;U2\6U$XVI/]&amp;U#[VI#[65-XVE"[7Y%\&amp;%''ZGQ#[VI5[&amp;$0L3D6]V9)LCL1M7U.ZS@3LS!5[&amp;$0L3D9]V9)LCL1PV!/\&amp;9#[65"\&amp;%.Y61%Y''Q(XV1&amp;\7U"[&amp;=3\GU.ZS@3LTQ5[&amp;$0L3EE]V9)LCL1Q&amp;5)[''U3X&amp;U,[7]#[VI5[&amp;$0L3H1]V9)LCL2L&amp;Q/]FI%[F=7X6=-X''U.ZS@3L#Q2ZV9''X&amp;U,[7]#[VI#[65-XWM5X&amp;9/\7A#YVQ)[F1!X65"[6]/[&amp;U+X65"[F%.YWY%\''Q3]VI.[7M0X''I)YF]%X&amp;U,[7]#[VI$X&amp;1!\&amp;M(ZV96YWI4YVQ"YV1/]6M-X&amp;M!\&amp;=.X&amp;U,[7]#[VI#ZWI#]V5&amp;[FU8X&amp;U,[7]#[VI"\&amp;U6YVI%[F=7X65"X''I%]&amp;U)[''Y%\''Q%YFI%[F=7X65"]F%,YFU"YV1/]6M-X&amp;5!X7I/[&amp;I%[F=7X65"[F=7[F%.YVM-X&amp;Q"[F1/]61)[&amp;U#[VI4ZV1$YV=6YWI,XW%#[VI3]GI/Z6U3ZF=2]F=6YWI,XW%#[VI3]GI/Z6U,[69''[7Y%\&amp;1!^VM-X''M/[F%$]WM3ZF=2]F=6YWI,XW%#[VI3[61)YGU3[F=.Y6=6YWI,XW%#[VI2ZV9''\&amp;%''ZGQ(XV1&amp;\7U"[&amp;=3\GU.ZS@3L4E5[&amp;$0L3MB\6U!Y7U,[FI%[F=7X65"]V9)LCL3QGU.ZS@3L4U5[&amp;$0L3MF]V9)LCL4LGU.ZS@3MCE0YWI)\7A/[VU.ZV]2YVU+X65"Z6=2[69)\6M-X&amp;Q)XV19]F%+XWQ/[&amp;=3X65"]V9)LCL4MWU.ZS@3MCY5[&amp;$0L3P7]V9)LCL4NGU.ZS@3MC%5[&amp;$0L3QA]V9)LCL4P''U.ZS@3MDM5[&amp;$0L3QD]V9)LCL4QWU.ZS@3MFY5[&amp;$0L3T0]V9)LCL5LWU.ZS@3MSI5[&amp;$0L3T3]V9)LCL5MGU.ZS@3MSU5[&amp;$0L3T6]V9)LCL5M7U.ZS@3MS!5[&amp;$0L3T9]V9)LCL5PWU.ZS@3MTI5[&amp;$0L3UC]V9)LCL5QGU.ZS@3MTU5[&amp;$0L3UF]V9)LCL6LGU.ZS@3M#E5[&amp;$0L3X2]V9)LCL6L7U.ZS@3M#Q5[&amp;$0L3X5]V9)LCL6M''U.ZS@3M#]5[&amp;$0L3X8]V9)LCL6NWU.ZS@3M$E5[&amp;$0L3YB]V9)LCL6P7U.ZS@3M$Q5[&amp;$0L3YE]V9)LCL6Q''U.ZS@3M3Q5[&amp;$0L3\5^WA/Y6U''\&amp;E-[VU.ZWU.ZS@3M4U4[69/\6Q)YWI%\6%3]F=.[7MA[GA(XWQ/[&amp;=3XV9/]FU,YV%!QWA3ZV1/[''Q/[&amp;=3QWQ!]F=.[7MI[7Q!]F=.[7MO[V%#\&amp;=.]F=.[7MU\GM)[F=.]F=.[7MO[VU''XWQ/[&amp;=3ZV=4XVQ)YWI%\6%3]F=.[7MA[GA(XTI%]FEGXV5-XTQ%[GQ!QWA3ZV1/[%)%]FEE]FETZFU4XT%/]FEKXWA0XT1![VI$XT55S''UXZT=-ZVM2[69PZUI([5M)Y65!UFE5UWA3ZV1/[%A(ZTM(ZUA3ZT=-YV]!RV=4XVQ)YWI%\6%3UWA3ZV1/[&amp;Q)YWI%\6%3XV10ZFE4[69/\6U0\6%,[694[69/\6U4XWQ/[&amp;=3ZV=4XWQ/[&amp;=3]WA3ZV1/[&amp;Q)YWI%\6%3]F=.[7M![GA(XVI%]FE''XV5-XVQ%[GQ!YWA3ZV1/['')%]FE%]FE4ZFU4XV%/]FE+XWA0XV1![VI$XWU.ZS@3P$M.]W!)[65)X7I/[''A)\&amp;!/\6%''[VD1\6%''[VE4XWU5\GM)[F=.\F!)X6!)\GM)[65%Y6E)[7Q!YF%%\&amp;U3ZWM5\GM)[F=.YF%%\&amp;U3ZWM/[V%#\&amp;=.]F=.[7M5\GM)[F=.]F=.[7M/[VU''XWQ/[&amp;=3]F!%]FE3^V5"[61''\&amp;U%Z5U0\6%,[69([6=+]V9)LCMDL7U.ZS@3QCQ0ZF$1[65%Y6D1]V9)LCMDM7U.ZS@3Q#A5[&amp;$0L4X1]V9)LCM&amp;MGU.ZS@3Q#UIYVM9\&amp;%,[F%#W6]2XWY%RV=#^WI)[F1)X4Q*YVM9\&amp;%,[F%#Q6)%X7%2ZV1,ZVMEX7%2ZV1,ZVMD^&amp;U#^WI)[F1)X4%#^WI)[F1)X5%)X7%2ZV1,ZVMJYVM9\&amp;%,[F%#SF)%X7%2ZV1,ZVMNZ&amp;U#^WI)[F1)X5Q3ZFU#^WI)[F1)X4-*YVM9\&amp;%,[F%#RV%#^WI)[F1)X5=''\&amp;E6YUU3ZF=2]FM9\&amp;%,[F%#QG)(YVM9\&amp;%,[F%#PVM9\&amp;%,[F%#P&amp;U#^WI)[F1)X5Y%X7%2ZV1,ZVMGYVM9\&amp;%,[F%#QFU#^WI)[F1)X4%%X7%2ZV1,ZVMZZFU#^WI)[F1)X5)%X7%2ZV1,ZVMIZVM9\&amp;%,[F%#RV%3ZF=2]FM9\&amp;%,[F%#R6E#^WI)[F1)X4U,X7%2ZV1,ZVME[VM9\&amp;%,[F%#QV9#^WI)[F1)X4=#^WI)[F1)X5A%X7%2ZV1,ZVME\&amp;M9\&amp;%,[F%#QWM#^WI)[F1)X5Q%X7%2ZV1,ZVMUX7%2ZV1,ZVMEY&amp;M9\&amp;%,[F%#R6!!X7%2ZV1,ZVMT\6U#^WI)[F1)X4M(YVM9\&amp;%,[F%#T6!!X7%2ZV1,ZVMSZFM(XVM9\&amp;%,[F%#RFE2YGM)Y69#^WI)[F1)X5%%\&amp;%#^WI)[F1)X5M/Y''Q3ZV].X7%2ZV1,ZVME\&amp;U6YWI3YVQ#^WI)[F1)X4%UX7%2ZV1,ZVMIPVM9\&amp;%,[F%#XVM9\&amp;%,[F%#X&amp;U#^WI)[F1)X7Y%X7%2ZV1,ZVM''YVM9\&amp;%,[F%#YFU#^WI)[F1)X6%%X7%2ZV1,ZVM:ZFU#^WI)[F1)X7)%X7%2ZV1,ZVM)ZVM9\&amp;%,[F%#ZV%3ZF=2]FM9\&amp;%,[F%#Z6E#^WI)[F1)X6U,X7%2ZV1,ZVM%[VM9\&amp;%,[F%#YV9#^WI)[F1)X6=#^WI)[F1)X7A%X7%2ZV1,ZVM%\&amp;M9\&amp;%,[F%#YWM#^WI)[F1)X7Q%X7%2ZV1,ZVM5X7%2ZV1,ZVM%Y&amp;M9\&amp;%,[F%#Z6!!X7%2ZV1,ZVM4\6U#^WI)[F1)X6M(YVM9\&amp;%,[F%#\6!!X7%2ZV1,ZVM3ZFM(XVM9\&amp;%,[F%#ZFE2YGM)Y69#^WI)[F1)X7%%\&amp;%#^WI)[F1)X7M/Y''Q3ZV].X7%2ZV1,ZVM%\&amp;U6YWI3YVQ#^WI)[F1)X6%5X7%2ZV1,ZVM)XVM9\&amp;%,[F%#ZVU#^WI)[F1)X5=''\&amp;E6YV%/X7%2ZV1,ZVM$Z&amp;U#^WI)[F1)X6]*YVM9\&amp;%,[F%#YVM9\&amp;%,[F%#YG)%X7%2ZV1,ZVM)X7%2ZV1,ZVM9ZVM9\&amp;%,[F%#Z&amp;U#^WI)[F1)X61*YVM9\&amp;%,[F%#[&amp;)%X7%2ZV1,ZVM4\6!%X7%2ZV1,ZVM+Z&amp;U#^WI)[F1)X6%)X7%2ZV1,ZVM_Y7I!]&amp;U5\6!/\''Q#^WI)[F1)X6Q:ZFU#^WI)[F1)X4=-YV]!X7%2ZV1,ZVM/[VU''XVM9\&amp;%,[F%#]V9)LCP7LGU.ZS@4M3E!Y&amp;%)LS@1MC]!Y&amp;%)LS@1NSUO[VU''XWQ)]F1/X7%2ZV1,ZVM/[VU''XWQ)]F1/X7%2ZV1,ZVMO]FM9\&amp;%,[F%#[7Q#^WI)[F1)X7Q([7U3XV9$X7%2ZV1,ZVM4ZWQ,[6M9\&amp;%,[F%#X65"\FE,XWQ![F%:XWQ)[69#^WI)[F1)X6M-X''U.ZS@4NCU5[&amp;$0MC 6]V9)LCP8M7U.ZS@4NC!5[&amp;$0MC 9]V9)LCP8XWU.ZS@4NFI5[&amp;$0MC!C]V9)LCP8QGU.ZS@4NDU5[&amp;$0MC!F]V9)LCP9LGU.ZS@4NSE5[&amp;$0MC$2]V9)LCP9L7U.ZS@4NSQ5[&amp;$0MC$5]V9)LCP9M''U.ZS@4NS]5[&amp;$0MC$8]V9)LCP9NWU.ZS@4NTE5[&amp;$0MC%B]V9)LCP9P7U.ZS@4NTQ5[&amp;$0MC%E]V9)LCP9Q''U.ZS@4PSA5[&amp;$0MDD1]V9)LCQAL''U.ZS@4PSM5[&amp;$0MDD4]V9)LCQAMWU.ZS@4PSY5[&amp;$0MDD7]V9)LCQANGU.ZS@4PS%5[&amp;$0MDEA]V9)LCQAP''U.ZS@4PTM5[&amp;$0MDED]V9)LCQAQWU.ZS@4PTY5[&amp;$0MDH0]V9)LCQBLWU.ZS@4P#I5[&amp;$0MDH3]V9)LCQBMGU.ZS@4P#U5[&amp;$0MDH6]V9)LCQBM7U.ZS@4P#!5[&amp;$0MDH9]V9)LCQBPWU.ZS@4P$I5[&amp;$0MDIC]V9)LCQBQGU.ZS@4P$U5[&amp;$0MDIF]V9)LCQCLGU.ZS@4P3E5[&amp;$0MDL2]V9)LCQCL7U.ZS@4P3Q5[&amp;$0MDL5]V9)LCQCM''U.ZS@4P3]5[&amp;$0MDL8]V9)LCQCNWU.ZS@4P4E5[&amp;$0MDMB]V9)LCQCP7U.ZS@4P4Q5[&amp;$0MDME]V9)LCQ#Y''U.ZS@4QCA5[&amp;$0MDP1]V9)LCQDL''U.ZS@4QCM5[&amp;$0MDP4]V9)LCQDMWU.ZS@4QCY5[&amp;$0MDP7]V9)LCQDNGU.ZS@4YC%5[&amp;$0MDQA]V9)LCQDP''U.ZS@4QDM5[&amp;$0MDQD]V9)LCQDQWU.ZS@4QDYD^&amp;U!X&amp;-(XWM)XV9#^WI)[F1)X7U.ZS@4QSE5[&amp;$0MDT2]V9)LCQEL7U.ZS@4QSQ5[&amp;$0MDT5]V9)LCQEM''U.ZS@4QS]5[&amp;$0MDT8]V9)LCQENWU.ZS@4QTE5[&amp;$0MDUB]V9)LCQEP7U.ZS@4QTQ5[&amp;$0MDUE]V9)LCQEQ''U.ZS@4Q#A5[&amp;$0MDX1]V9)LCQFL''U.ZS@4Q#M5[&amp;$0MDX4]V9)LCQFMWU.ZS@4Y#Y5[&amp;$0MFX7]V9)LCQFNGU.ZS@4Q#%5[&amp;$0MSD0]V9)LCT1LWU.ZS@5LSI5[&amp;$0MSD3]V9)LCT1XWU.ZS@5LVI5[&amp;$0MSE#]V9)LCT1YGU.ZS@5LVU5[&amp;$0MSE&amp;]V9)LCT3LWU.ZS@5L3I5[&amp;$0MSL3]V9)LCT3MGU.ZS@5L3U5[&amp;$0MSL6]V9)LCT3M7U.ZS@5L3!5[&amp;$0MSL9]V9)LCT3PWU.ZS@5L4I5[&amp;$0MSMC]V9)LCT3QGU.ZS@5L4U5[&amp;$0MSMF]V9)LCT4LGU.ZS@5MCE5[&amp;$0MSP2]V9)LCT4L7U.ZS@5MCQ5[&amp;$0MSP5]V9)LCT4M''U.ZS@5MC]5[&amp;$0MSP8]V9)LCT4NWU.ZS@5MDE5[&amp;$0MSQB]V9)LCT4P7U.ZS@5MDQ5[&amp;$0MSQE]V9)LCT4Q''U.ZS@5MSA5[&amp;$0MST1]V9)LCT5L''U.ZS@5MSM5[&amp;$0MST4]V9)LCT5MWU.ZS@5MSY5[&amp;$0MST9]V9)LCT5PWU.ZS@5MTI5[&amp;$0MSUC]V9)LCT5QGU.ZS@5MTU5[&amp;$0MSUF]V9)LCT6LWU.ZS@5M#I5[&amp;$0MSX3]V9)LCT6MFU#ZFE2[VU.ZVE.]V9)LCT6M''U.ZS@5M#]5[&amp;$0MSX8]V9)LCT6NWU.ZS@5M$E)[&amp;%!\&amp;5%[&amp;%![''U.ZS@5M$M8YV!!\&amp;5%[&amp;%![''U.ZS@5M$U5[&amp;$0MSYF]V9)LCT7LGU.ZS@5M3E5[&amp;$0MS\2]V9)LCT7L65%[&amp;E2[VU.ZVE.]V9)LCT7MV9/]6E2[VU.ZVE.]V9)LCT7M7U.ZS@5M3!5[&amp;$0MS\9]V9)LCT7PWU.ZS@5M4I5[&amp;$0MS]C]V9)LCT7QGY%]6E2[VU.ZVE.]V9)LCT7Q''U.ZS@5NCA5[&amp;$0MS 1]V9)LCT8L''U.ZS@5NCM5[&amp;$0MS 4]V9)LCT8MWU.ZS@5NCY5[&amp;$0MS 7]V9)LCT8NWU.ZS@5NDE!Y&amp;%)MS\7NS%!Y&amp;%)MS\8LCE!Y&amp;%)MS\8LCA!Y&amp;%)MS\8LCI(ZWI)\V!%X''I%]6E&amp;ZV$5M3\9MFE&amp;ZV$5M3\9MWA!]FE(ZFU"\&amp;U7\VE-XWQ3ZFU"\&amp;U7ZF=,XV5(YVI2YW]!Y&amp;%)MS\7NSY$XV]%\6!(YVI2YW]3ZV15\V!%X''I%]65!\VE&amp;ZFU"\&amp;U7\&amp;E&amp;YV!%X''I%]6E&amp;ZV$5M3 4L''M(ZV9$[7Q(YVI2YW]3ZV9$[7Q(YVI2YW]3[6Y0XWM5\V!%X''I%]7U0\FU2YF=4ZFU"\&amp;U7XV1%Y&amp;!%X''I%]6I%]F!%X''I%]6])[VU,ZFU"\&amp;U7YFE,YWQ(YVI2YW](YV!%X''I%]7Y!]&amp;!%X''I%]7)!^V%.ZFU"\&amp;U7ZFU4ZFU"\&amp;U7]FU4ZFU"\&amp;U7^V=$ZFU"\&amp;U7Y&amp;%.XV1+XVY(YVI2YW]+XVY(YVI2YW],XV5%YF!%X''I%]6Y)[&amp;E,[VU-ZFU"\&amp;U7[VU-ZFU"\&amp;U7Y&amp;%.XV1.]V9(YVI2YW].]V9(YVI2YW]3XV5%Z6!(YVI2YW]!^V%.ZFU"\&amp;U7Y&amp;%.XV10YV!%X''I%]7A%ZFU"\&amp;U7Y&amp;%.XV14\6E$ZV!%X''I%]7Q3XVQ)ZFU"\&amp;U7\V=&amp;ZFU"\&amp;U7\&amp;U3ZF!%X''I%]7M(ZV9(YVI2YW]4XWY(YVI2YW]6XWY6XWY(YVI2YW]6XWY9[6Q(YVI2YW]9[6Q9[6Q(YVI2YW]''YWI%\6!(YVI2YW]''YWI3ZFE9ZV5(YVI2YW]5[&amp;$0PS@1]V9)LDD0L''U.ZSAALCM5[&amp;$0PS@5]V9)LDD0M''U.ZSAALC]5[&amp;$0PS@8]V9)LDD0NWU.ZSAALDE5[&amp;$0PSAF]V9)LDD1LGU.ZSAALSM5[&amp;$0PSD4]V9)LDD1MWU.ZSAALSY5[&amp;$0PSD7]V9)LDD1NGU.ZSAALS%5[&amp;$0PSEA]V9)LDD1P''U.ZSAALTM5[&amp;$0PSED]V9)LDD1QWU.ZSAALTY5[&amp;$0PSH0]V9)LDD2LWU.ZSAAL#I5[&amp;$0PSH3]V9)LDD2MGU.ZSAAL#U5[&amp;$0PSH6]V9)LDD2M7U.ZSAAL#!5[&amp;$0PSIA]V9)LDD2P''U.ZSAAL$M5[&amp;$0PSID]V9)LDD2QWU.ZSAAL$Y5[&amp;$0PSL0]V9)LDD3L''U.ZSAAL3M5[&amp;$0PSL5]V9)LDD3M''U.ZSAAL3!5[&amp;$0PSL9]V9)LDD3P7U.ZSAAL4U5[&amp;$0PSMF]V9)LDD4LGU.ZSAAMCE5[&amp;$0PSP2]V9)LDD4M7U.ZSAAMC!5[&amp;$0PSQB]V9)LDD4P7U.ZSAAMDQ5[&amp;$0XST1]V9)LDD5NWU.ZSAAMTE5[&amp;$0PSUB]V9)LDD5P7U.ZSAAMTU5[&amp;$0PSX6]V9)LDD6M7U.ZSAAM#!5[&amp;$0PSX9]V9)LDD6PWU.ZSAAM$I5[&amp;$0PSYC]V9)LDD6QGU.ZSAAM$U5[&amp;$0PSYF]V9)LDD7LGU.ZSAAM3E5[&amp;$0PS\2]V9)LDD7L7U.ZSAAM3Q5[&amp;$0XS\5]V9)LSAALGU.ZSD0PSE5[&amp;$1LDD2]V9)LSAAL7U.ZSD0PSQ5[&amp;$1LDD5]V9)LSAAM''U.ZSD0PS]5[&amp;$1LDD8]V9)LSAANWU.ZSD0PTE5[&amp;$1LDEB]V9)LSAAP7U.ZSD0PTQ5[&amp;$1LDEE]V9)LSAAQ''U.ZSD0P#A5[&amp;$1LDH1]V9)LSABL''U.ZSD0P#M5[&amp;$1LDH4]V9)LSABMWU.ZSD0P#Y5[&amp;$1LDH7]V9)LSABNGU.ZSD0P#%5[&amp;$1LDIA]V9)LSABP''U.ZSD0P$M5[&amp;$1LDID]V9)LSABQWU.ZSD0P$Y5[&amp;$1LDL0]V9)LSADLGU.ZSD0QCE5[&amp;$1LFP2]V9)LSADL7U.ZSD0QCQ5[&amp;$1LDP5]V9)LSADM''U.ZSD0QC]5[&amp;$1LDP8]V9)LSADNWU.ZSD0QDE5[&amp;$1LDQB]V9)LSADP7U.ZSD0QDQ5[&amp;$1LDQE]V9)LSADQ''U.ZSD0QSA5[&amp;$1LDT1]V9)LSAEL''U.ZSD0QSM5[&amp;$1LDT4]V9)LSAEMWU.ZSD0QSY5[&amp;$1LDT7]V9)LSAENGU.ZSD0QS%5[&amp;$1LDUA]V9)LSAEP''U.ZSD0QTM5[&amp;$1LDUD]V9)LSAEQWU.ZSD0QTY5[&amp;$1LDX0]V9)LSAFLWU.ZSD0Q#I5[&amp;$1LDX3]V9)LSAFMGU.ZSD0Q#U5[&amp;$1LFX9]V9)LSA&amp;X''U.ZSD0Y&amp;M5[&amp;$1L4D0]V9)LSMALWU.ZSD3PSI5[&amp;$1L4D3]V9)LSMAMGU.ZSD3PSU5[&amp;$1L4D6]V9)LSMAM7U.ZSD3PS!5[&amp;$1L4D9]V9)LSMAPWU.ZSD3PTI5[&amp;$1L4EC]V9)LSMAQGU.ZSD3PTU5[&amp;$1L4EF]V9)LSMBLGU.ZSD3P#E5[&amp;$1L4H2]V9)LSMBL7U.ZSD3P#Q5[&amp;$1L4H5]V9)LSMBM''U.ZSD3P#]5[&amp;$1L4H8]V9)LSMBNWU.ZSD3P$E5[&amp;$1L4IB]V9)LSMBP7U.ZSD3P$Q5[&amp;$1L4IE]V9)LSMBQ''U.ZSD3P3A5[&amp;$1L4L1]V9)LSMCL''U.ZSD3P3M5[&amp;$1L4L4]V9)LSMCMWU.ZSD3P3Y5[&amp;$1L4L7]V9)LSMCNGU.ZSD3P3%5[&amp;$1L4MA]V9)LSMCP''U.ZSD3P4M5[&amp;$1L4MD]V9)LSMCQWU.ZSD3P4Y5[&amp;$1L4P0]V9)LSMDLWU.ZSD3QCI5[&amp;$1L4P3]V9)LSMDMGU.ZSD3QCU5[&amp;$1L4P6]V9)LSMDM7U.ZSD3QC!5[&amp;$1L4P9]V9)LSMDPWU.ZSD3QDI5[&amp;$1L4QC]V9)LSMDQGU.ZSD3QDU5[&amp;$1L4QF]V9)LSMELGU.ZSD3QSE5[&amp;$1L4T2]V9)LSMEL7U.ZSD3QSQ5[&amp;$1L4T5]V9)LSMEM''U.ZSD3QS]5[&amp;$1L4T8]V9)LSMENWU.ZSD3QTE5[&amp;$1L4UB]V9)LSMEP7U.ZSD3QTQ5[&amp;$1L4UE]V9)LSMEQ''U.ZSD3Q#A5[&amp;$1L4X1]V9)LSMFL''U.ZSD3Q#M5[&amp;$1L4X4]V9)LTT0LGU.ZSEELCEBYF=4XVM#YV94X&amp;Q/]FE#X6U.]GU.ZSEELCQ5[&amp;$1QS@5]V9)LTT0M''U.ZSEELC]5[&amp;$1QS@8]V9)LTT0NTQ$[7Q!X6M%[''Q$YF=4XVM#YV94]V9)LTT0P7U.ZSEELDQ5[&amp;$1QSAE]V9)LTT0Q''U.ZSEELSA5[&amp;$1QSD1]V9)LTT1L''U.ZSEELSM5[&amp;$1QSD4]V9)LTT1MWU.ZSEELSY5[&amp;$1QSD7]V9)LTT1NGU.ZSEELS%5[&amp;$1QSEA]V9)LTT1P''U.ZSEELTM5[&amp;$1QSEDQ&amp;Q/]FE#X6U.]FY$[7Q!X6M%[''Q5[&amp;$1QSH0]V9)LTT2LT!$[7Q!X6M%[''Q(YF=4XVM#YV94]V9)LTT2MGU.ZSEEL#U5[&amp;$1QSH6]V9)LTT2M7U.ZSEEL#!5[&amp;$1QSH9]V9)LTT2PWU.ZSEEL$I5[&amp;$1QSIC]V9)LTT2QGU.ZSEEL$U5[&amp;$1QSIF]V9)LTT3LGU.ZSEEL3E5[&amp;$1QSL2]V9)LTT3L7U.ZSEEL3Q5[&amp;$1QSL5]V9)LTT3M''U.ZSEEL3]5[&amp;$1QSL8]V9)LTT3NWU.ZSEEL4E5[&amp;$1QSMB]V9)LTT3P7U.ZSEEL4Q5[&amp;$1QSME]V9)LTT3Q$5$[7Q!X6M%[''Q-YF=4XVM#YV94]V9)LTT4L''U.ZSEEMCM5[&amp;$1QSP4]V9)LTT4MWU.ZSEEMCY5[&amp;$1QSP7]V9)LTT4NGU.ZSEEMC%5[&amp;$1QSQA]V9)LTT4P''U.ZSEEMDM5[&amp;$1QSQD]V9)LTT4QWU.ZSEEMDY5[&amp;$1QST0]V9)LTT5LWU.ZSEEMSI5[&amp;$1QST3]V9)LTT5MGU.ZSEEMSUPYF=4XVM#YV94\FQ/]FE#X6U.]GU.ZSEEMS!5[&amp;$1QST9]V9)LTT5PWU.ZSEEMTI5[&amp;$1QSUC]V9)LTT5QGU.ZSEEMTU5[&amp;$1QSUFT6Q/]FE#X6U.]GM$[7Q!X6M%[''QSYF=4X&amp;U,[7]3YF=4X&amp;U,[7]5[&amp;$1QSX4]V9)LTT6MWU.ZSEEM#Y5[&amp;$1QSX7]V9)LTT6NGU.ZSEEM#%TYF=4XVM#YV94]FQ/]FE#X6U.]EQ$[7Q"YV1/]7Q$[7Q"YV1/]7U.ZSEEM$U5[&amp;$1QSYF]V9)LTT7LGU.ZSEEM3E5[&amp;$1QS\2]V9)LTT7L7U.ZSEEM3Q5[&amp;$1QS\5]V9)LTT7M''U.ZSEEM3]5[&amp;$1QS\8]V9)LTT7NWU.ZSEEM4E5[&amp;$1QS]B]V9)LTT7P7U.ZSEEM4Q5[&amp;$1QS]E]V9)LTT7Q%]''\&amp;E6YW]''\&amp;E6YU]!X7U4YW]!X7U4YU]$ZVU2YWM)\7]$ZVU2YWM)\7U.ZSEENCY5[&amp;$1QS 7]V9)LTT8NGU.ZSEENC%5[&amp;$1QS!A]V9)LTT8P''U.ZSEENDM5[&amp;$1QS!D]V9)LTT8QWU.ZSEENDY5[&amp;$1QS$0]V9)LTT9LWU.ZSEENSI5[&amp;$1QS$3]V9)LTT9MGU.ZSEENSU5[&amp;$1QS$6]V9)LTT9M7U.ZSEENS!5[&amp;$1QS$9]V9)LVT9XWU.ZSEENTI5[&amp;$1QTD0]V9)LTUALWU.ZSE%XSI5[&amp;$1YVD3]V9)LTUAMGU.ZSEEPSU5[&amp;$1QTD6]V9)LTUAM7U.ZSE%XS!5[&amp;$1YVD9]V9)LTUAPWU.ZSEEPTI5[&amp;$1QTEC]V9)LTUAQGU.ZSEEPTU5[&amp;$1QTEF]V9)LTUBLGU.ZSEEP#E5[&amp;$1YVH2]V9)LVU"L7U.ZSEEP#Q5[&amp;$1QTH5]V9)LTUBM''U.ZSEEP#]5[&amp;$1QTH8]V9)LTUBNWU.ZSE%X&amp;E5[&amp;$1YVI"QWQ)[FQ%]V9)LTUBQGU.ZSEEP$U5[&amp;$1QTIF]V9)LTUCLGU.ZSEEP3E5[&amp;$1YVL2]V9)LVU#L7U.ZSEEP3Q5[&amp;$1QTL5]V9)LTUCM''U.ZSEEP3]5[&amp;$1YVL8]V9)LVU#NWU.ZSEEP4E5[&amp;$1QTMB]V9)LTUCP7U.ZSEEP4Q5[&amp;$1YVM%]V9)LVU#Y''U.ZSEEQCA5[&amp;$1QTP1]V9)LTUDL''U.ZSEEQCM5[&amp;$1YVP4]V9)LVU$MWU.ZSEEQCY5[&amp;$1QTP7]V9)LTUDNGU.ZSEEQC%5[&amp;$1QTQA]V9)LTUDP''U.ZSEEQDM5[&amp;$1QTQD]V9)LVU$YWU.ZSE%YFY5[&amp;$1QTT0]V9)LTUELWU.ZSEEQSI5[&amp;$1QTT3]V9)LTUEMGU.ZSEEQSU5[&amp;$1YVT6]V9)LVU%M7U.ZSEEQS!5[&amp;$1QTT9]V9)LTUEPWU.ZSEEQTI5[&amp;$1YVU#]V9)LVU%YGU.ZSEEQTU5[&amp;$1QTUF]V9)LTUFLGU.ZSEEQ#EYY7I!]&amp;U9Y7I!]&amp;U5[&amp;$1QTX4]V9)LTUFMWU.ZSE%Y#Y5[&amp;$1YVX7]V9)LTUFNGU.ZSEEQ#%5[&amp;$1Q#@0]V9)LTX0LWU.ZSEFLCI5[&amp;$1Q#@3]V9)LTX0MGU.ZSEFLCU5[&amp;$1Q#@6]V9)LTX0M7U.ZSEFLC!5[&amp;$1Q#@9]V9)LTX0PWU.ZSEFLDI5[&amp;$1Q#AC]V9)LTX0QGU.ZSEFLDU5[&amp;$1Q#AF]V9)LTX1LGU.ZSEFLSE5[&amp;$1Q#D2]V9)LTX1L7U.ZSEFLSQ5[&amp;$1Q#D5]V9)LTX1NGU.ZSEFLS%5[&amp;$1Q#EA]V9)LTX1P''U.ZSEFLTM5[&amp;$1Q#ED]V9)LTX2LGU.ZSEFL#E5[&amp;$1Q#H2]V9)LTX2L7U.ZSEFL#Q5[&amp;$1Q#H5]V9)LTX2M''U.ZSEFL#]5[&amp;$1Q#H8]V9)LTX2NWU.ZSEFL$E5[&amp;$1Q#IB]V9)LTX2P7U.ZSEFL$Q5[&amp;$1Q#IE]V9)LTX2Q''U.ZSEFL3A5[&amp;$1Q#L1]V9)LTX3L''U.ZSEFL3M5[&amp;$1Q#L4]V9)LTX3MWU.ZSEFL3Y5[&amp;$1Q#L7]V9)LTX3NGU.ZSEFL3%5[&amp;$1Q#MA]V9)LTX3P''U.ZSEFL4M5[&amp;$1Q#MD]V9)LTX3QWU.ZSEFL4Y5[&amp;$1Q#P0]V9)LTX4LWU.ZSEFMCI5[&amp;$1Q#P3]V9)LTX4MGU.ZSEFMCU5[&amp;$1Q#P8]V9)LTX4NWU.ZSEFMDE5[&amp;$1Q#QB]V9)LTX4P7U.ZSEFMDQ5[&amp;$1Q#T0]V9)LTX5LWU.ZSEFMSI5[&amp;$1Q#T3]V9)LTX5MGU.ZSEFMSU5[&amp;$1Q#T6]V9)LTX5M7U.ZSEFMS%5[&amp;$1Q#UB]V9)LTX5QGU.ZSEFMTY5[&amp;$1Q#X0]V9)LTX6LWU.ZSEFM#I5[&amp;$1Q#X3]V9)LTX6MGU.ZSEFM#U5[&amp;$1Q#X6]V9)LTX6M7U.ZSEFM#!5[&amp;$1Q#X9]V9)LTX6PWU.ZSEFM$I5[&amp;$1Q#YC]V9)LTX6QGU.ZSEFM$U5[&amp;$1Q#YF]V9)LTX7LGU.ZSEFM3E5[&amp;$1Q#\2]V9)LTX7L7U.ZSEFM3Q5[&amp;$1Q#\5]V9)LTX7M''U.ZSEFM3]5[&amp;$1Q#\8]V9)LTX7NWU.ZSEFM4E5[&amp;$1Q#]B]V9)LTX7P7U.ZSEFM4Q5[&amp;$1Q# 0]V9)LTX8LWU.ZSEFNCI5[&amp;$1Q# 3]V9)LTX8MGU.ZSEFNCU5[&amp;$1Q# 6]V9)LTX8M7U.ZSEFNC!5[&amp;$1Q# 9]V9)LTX8PWU.ZSEFNDI5[&amp;$1Q#!C]V9)LTX8QGU.ZSEFNDU5[&amp;$1Q#!F]V9)LTX9LGU.ZSEFNSE5[&amp;$1Q#$2]V9)LTX9L7U.ZSEFNSQ5[&amp;$1Q#$5]V9)LTX9M''U.ZSEFNS]5[&amp;$1Q#$8]V9)LTX9NWU.ZSEFNTE5[&amp;$1Q#%B]V9)LTX9P7U.ZSEFNTQ5[&amp;$1Q#%E]V9)LTX9Q''U.ZSEFPSA5[&amp;$1Q$D1]V9)LTYAL''U.ZSEFPSM5[&amp;$1Q$D4]V9)LTYAMWU.ZSEFPSY5[&amp;$1Q$D7]V9)LTYANGU.ZSEFPS%5[&amp;$1Q$EA]V9)LTYAP''U.ZSEFPTM5[&amp;$1Q$ED]V9)LTYAQWU.ZSEFPTY5[&amp;$1Q$H0]V9)LTYBLWU.ZSEFP#I5[&amp;$1Q$H3]V9)LTYBMGU.ZSEFP#Y5[&amp;$1Q$H7]V9)LTYBNGU.ZSEFP#%5[&amp;$1Q$IA]V9)LTYBP''U.ZSEFP$M,YV9)\7A2[7M''YV]2XV5-YV9)\GM)[F%0YWI)\7A/[VU.ZVQ)XV19]F%+XWA%\&amp;%3\F=-YV9)]V9)LTYCL''U.ZSEFP3M5[&amp;$1Q$L4]V9)LTYCM''U.ZSEFP3]5[&amp;$1Q$L8]V9)LTYCNWU.ZSEFP4E5[&amp;$1Q$MB]V9)LTYCP7A3ZV1)]&amp;E2ZVE0\6%,ZV=8ZVE0\6%,ZWA%\&amp;%3\F=-YV9)]V9)LTYDLGU.ZSEFQCE5[&amp;$1Q$P2]V9)LTYDL7U.ZSEFQCY5[&amp;$1Q$P7]V9)LTYDNGU.ZSEFQC%5[&amp;$1Q$QA]V9)LTYDP&amp;Q!\6%!]&amp;E2ZVE$XWM)XV=8ZVE$XWM)XWA%\&amp;%3\F=-YV9)]V9)LTYELGU.ZSEFQSE5[&amp;$1Q$T2]V9)LTYEL7U.ZSEFQSQ5[&amp;$1Q$T5]V9)LTYEM''U.ZSEFQS]5[&amp;$1Q$T8]V9)LTYENWU.ZSEFQTE5[&amp;$1Q$UB]V9)LTYEP6Q)XV19]F%+XWY!\&amp;%!YF%![G%4ZV-![7!)XWY!\&amp;%!]V9)LTYFL''U.ZSEFQ#M5[&amp;$1Q$X4]V9)LTYFM''U.ZSEFQ#]5[&amp;$1Q$X8]V9)LTYFNWU.ZSEFQ$E5[&amp;$1Q$YB]V9)LTYFP6=8ZVE$XWM)XWU.ZSH0LCA5[&amp;$2LC@1]V9)L#@0L''U.ZSH0LCM5[&amp;$2LC@4]V9)L#@0MWU.ZSH0LCY5[&amp;$2LC@7]V9)L#@0NGU.ZSH0LC%5[&amp;$2LCA!]V9)L#@0X''U.ZSH0LFM5[&amp;$2LCA$]V9)L#@0YWU.ZSH0LFY5[&amp;$2LCD0]V9)L#@1LVE&amp;ZV$0LCH0NGU.ZSH0LSY5[&amp;Q%\''M#[7I%YFI,\WU/]FU2YWY%\''M%YGU.ZSH0LVY5[&amp;$2LCH3]V9)L#@2MGU.ZSH0L#U5[&amp;$2LCH7]V9)L#@2NGU.ZSH0L#%5[&amp;$2LCI!]V9)L#@2X''U.ZSH0L&amp;M5[&amp;$2LCI$]V9)L#@2YWU.ZSH0L&amp;Y5[&amp;$2LCL1]V9)L#@3L''U.ZSH0L3M5[&amp;$2LCL4\GI)[VU2YWY%\''M%YGU.ZSH0L3Y5[&amp;$2LCL7]V9)L#@3NGU.ZSH0L6I%^FM,XV5$X&amp;15[&amp;$2LCM$[7Y%\&amp;1)[&amp;U5[&amp;$2LCM&amp;]V9)L#@4LGU.ZSH0MCE5[&amp;$2LCP2]V9)L#@4L7U.ZSH0MCU5[&amp;$2LCP6]V9)L#@4M7U.ZSH0MC!5[&amp;$2LCP9]V9)L#@4XWU.ZSH0MFI5[&amp;$2LCQ#]V9)L#@4YGU.ZSH0MFU5[&amp;$2LCQ&amp;]V9)L#@5LGU.ZSH0MSE5[&amp;$2LCT2]V9)L#@5L7U.ZSH0MSQ5[&amp;$2LCT5]V9)L#@5M''U.ZSH0MS]5[&amp;$2LCT8]V9)L#@5NWU.ZSH0MVE5[&amp;$2LCU"]V9)L#@5X7U.ZSH0MVQ5[&amp;$2LCU%]V9)L#@5Y''U.ZSH0M#A5[&amp;$2LCX1]V9)L#@6L''U.ZSH0M#M5[&amp;$2LCX4]V9)L#@7LWA,]WM3]WA%\&amp;%/\&amp;5)[''U3\7U0YWI)[7I%\WU![GM5\FU2ZV=2\F15\6%.Y&amp;U2ZV=2]V9)L#@8P&amp;U1]VE,ZV9&amp;YWI)[7I5[&amp;$2LC$0]V9)L#@9LWU.ZSH0NSI5[&amp;$2LC$3]V9)L#@9MFY2XV9#[F%2XV5)[F15[&amp;$2LDD6]V9)L#AANFE&amp;ZV$5M3X3M&amp;Q/[&amp;]E]WI/]V9)L#ABLGU.ZSH0P#U5[&amp;$2LFH8[FU&amp;]F!!\''A/[69!X6M%[''Q2ZV](]F!!\''A/[69!X6M%[''Q5[&amp;$2LDP2]V9)L#ADL7U.ZSH0QCY5[&amp;$2LDP7]V9)L#ADP''U.ZSH0QDM5[&amp;$2LDQD]V9)L#ADQWU.ZSH0QDY5[&amp;$2LFT0]V9)L#AELWU.ZSH0QSU5[&amp;$2LDT6]V9)L#AEM7U.ZSH0QS!5[&amp;$2LDT9]V9)L#AEPWU.ZSH0QTI5[&amp;$2LDUC]V9)L#AEQGU.ZSH0QTU5[&amp;$2LDUF]V9)L#AFLGU.ZSH1LCA5[&amp;$2LS@1]V9)L#D0L7U.ZSH1LCU5[&amp;$2LS@6]V9)L#D0M7M#\''U0[FU5[&amp;$2LS@9\F1![&amp;M+RVY2XV-4]WI,ZWQ2YWU.ZSH1LSQ5[&amp;$2LSD6\&amp;U#[7I$\&amp;%''ZGQRY''I!Z7Q5\''U.ZSH1L#A5[&amp;$2LSH1]V9)L#D2M''U.ZSH1L#]5[&amp;$2LSH9]V9)L#D2XWU.ZSH1L&amp;I5[&amp;$2LSI%]V9)L#D3L''U.ZSH1L3U5[&amp;$2LSL6]V9)L#D3M7U.ZSH1L3!5[&amp;$2LSM!]V9)L#D3X''U.ZSH1MCE5[&amp;$2LSP2]V9)L#D4L7U.ZSH1MCQ5[&amp;$2LSQ"]V9)L#D4YGU.ZSH1MFU5[&amp;$2LST5]V9)L#D5M''U.ZSH1MS]5[&amp;$2LST8]V9)L#D5NWU.ZSH1MTE5[&amp;$2LSUF]V9)L#D6LGU.ZSH1M#E5[&amp;$2LSX2]V9)L#D6L7U.ZSH1M#Q5[&amp;$2LSX5]V9)L#D6M''U.ZSH1M#]5[&amp;$2LSX8]V9)L#D6NWU.ZSH1M$E5[&amp;$2LSYB]V9)L#D6P7U.ZSH1M$Q5[&amp;$2LSYE]V9)L#D6Q''U.ZSH1M3A5[&amp;$2LS\1]V9)L#D7L''U.ZSH1M3M5[&amp;$2LS\4]V9)L#D7MWU.ZSH1M3Y5[&amp;$2LS\7]V9)L#D7NGU.ZSH1M3%5[&amp;$2LS]A]V9)L#D7P''U.ZSH1M4M5[&amp;$2LS]D]V9)L#D7QWU.ZSH1M4Y!\''I/]61%Y''Q!\''I/]7U0XWI2[7]2ZV](]FE2\&amp;=7YF=7[&amp;E2\&amp;=7X&amp;=4ZFE2\&amp;=7]WA$[''U.ZSH1NSY5[&amp;$2LS$7]V9)L#D9NGU.ZSH1NS%5[&amp;$2LS%A]V9)L#D9P''U.ZSH1NTU5[&amp;$2LS%F]V9)L#EALGU.ZSH1PSE5[&amp;$2LTD2]V9)L#EAL7U.ZSH1PSQ5[&amp;$2LTD5]V9)L#EAM''U.ZSH1PS]!\''I/]7U0YF9"\6U5[&amp;$2LTL4]V9)L#ECMWU.ZSH1P3Y5[&amp;$2LTL7]V9)L#ECNGU.ZSH1P3%5[&amp;$2LTMA]V9)]&amp;U2\6E,\FE2]F%![FQ)Y&amp;Y%^F%3]FU.]F%![DQ%[GQ!K&amp;5!]F!''\&amp;E$ZVU.]GM5[V5!]F%/[''U.ZSH2LSU2XVQ)X6E,ZV94YV]2XV1.[7Q%\WU![F1%\7M%\WU![F]2YVE4YWI%\WU![GU.ZSH4L#M,[7)%[&amp;]%X6%2X61%[FE2Y6U#ZWI#[FU5[&amp;$2M#IC\7A!YFU(YVE2]F=0YV9$ZVE-[69$[7A%[&amp;M,]VI3\FE$YWM5ZWQ7ZF%4YV!%XWI4YF%![V=.YFM,]VI3]V%4]6!)]FU5[&amp;$2M#X9[WU3ZVM![F9/]FU-]WM)X6E,[&amp;=4YVQ"[GU.ZSH6M$M5[&amp;$2M#YD]V9)L#X6QWU.ZSH6M$Y5[&amp;$2M3P0]V9)L$P3LGU.ZSIDL3E5[&amp;$2QCL2]V9)L$P3L7U.ZSIDL3Q5[&amp;$2QCL5]V9)L$P3M''U.ZSIDL3]5[&amp;$2QCL8]V9)L$P3NWU.ZSIDL4E5[&amp;$2QCMB]V9)L$P3P7U.ZSIDL4Q5[&amp;$2QCME]V9)L$P3Q''U.ZSIDMCA5[&amp;$2QCP1]V9)L$P4L''U.ZSIDMCM5[&amp;$2QCP4]V9)L$P4MWU.ZSIDMCY5[&amp;$2QCP7]V9)L$P4NGU.ZSIDMC%5[&amp;$2QCQA]V9)L$P4P''U.ZSIDMDM5[&amp;$2QCQD]V9)L$P4QWU.ZSIDMDY5[&amp;$2QCT0]V9)L$P5LWU.ZSIDMSI5[&amp;$2QCT3]V9)L$P5MGU.ZSIDMSU5[&amp;$2QCT6]V9)L$P5M7U.ZSIDMS!5[&amp;$2QCT9]V9)L$P5PWU.ZSIDMTI5[&amp;$2QCUC]V9)L$P5QGU.ZSIDMTU5[&amp;$2QCUF]V9)L$P6LGU.ZSIDM#E5[&amp;$2QCX2]V9)L$P6L7U.ZSIDM#Q5[&amp;$2QCX5]V9)L$P6Q''U.ZSI%LS],[7]#ZWI#]V5&amp;[FU8X6=,[69-[6Q)Y&amp;%%\''M([7I4YWE5XV13T6E,]F%,[F=3XV14ZV1,[6M2YWM#W6M9\&amp;%,[F%#YF=4W6M9\&amp;%,[F%#]F%4[F=_X7%2ZV1,ZVM9ZU=9ZU=,ZV]_]V-2XV%.ZVE.]V9)LDD3LE=5[&amp;$0PSQDK&amp;I,]6Y5[&amp;$0PSL5W7U.ZSAAMDP.X&amp;17Y''U.ZSAAL3%_]V9)LDD4QB9"[G]&amp;]V9)LDD2Q%=5[&amp;$0PSQDK''A3]FY''[G%0ZCD5L&amp;],^WA(LST3Y619\F 1MSQ''[G%0ZCD5MV],^WA(LST6Y619\F 1MS]5[&amp;%AL3A_PSQDK&amp;I,]6Y_PSP1K&amp;I,]7M5[&amp;%AL3%_PSQDK&amp;I,]6Y_PSP1K&amp;I,]7M.[7U.ZVM/YFU_L5&lt;1W3M''[G%0ZCD6LWU.ZSAAL3A_PSQDK&amp;I,]6Y_PSP2K&amp;I,]7M5[&amp;%AL3%_PSQDK&amp;I,]6Y_PSP2K&amp;I,]7M.[7U.ZVM/YFU_L5&lt;1W3I&amp;[&amp;=5[&amp;%#[6Q%W3M_LU&lt;3LGU.ZSAAL#!_]V9)LDD4L%=5[&amp;$0PS\0K&amp;E"]''M5[&amp;$0PSMEW7U.ZSAALCH.XVI6\7U.ZSAALC%_]V9)LDD7LR90\7Q3]V9)LDD0PU=5[&amp;$0PS\1K''A3]GM5[&amp;$0PSD3W7U.ZSAAM3D.\GM4\7U.ZSAALSU_]V9)LDD3P29.]V-4]V9)LDD1NE=5[&amp;$0PSMCK&amp;95Z7Q5[&amp;$0PSD9W7U.ZSAAL4L.[''U+]GU.ZSAALTE_]V9)LDD3P29.]V-4]V9)LDD1P%=5[&amp;$0PSMCK&amp;95Z7Q5[&amp;$0PSEDW7U.ZSAAL4L.[''U+]GU.ZSAALTU_]V9)LDD3P29.]V-4]V9)LDD1Q%=5[&amp;$0PSMCK&amp;95Z7Q5[&amp;$0PSH0W7U.ZSAAL4L.[''U+]GU.ZSAAL#I_]V9)LDD3P29.]V-4]V9)LDD2L5=5[&amp;$0PSMCK&amp;95Z7Q5[&amp;$0PSH4W7U.ZSAAL4L.[''U+]GU.ZSAAL#U_]V9)LDD3P29.]V-4]V9)LDD2M%=5[&amp;$0PSMCK&amp;95Z7Q5[&amp;$0PSH7W7U.ZSAAL4L.[''U+]GU.ZSAAL#!_]V9)LDD3P29.]V-4]V9)LDD2PU=5[&amp;$0PSMCK&amp;95Z7Q5[&amp;$0PSICW7U.ZSAAL4L.[''U+]GU.ZSAAL$Q_]V9)LDD3P29.]V-4]V9)LDD2QU=5[&amp;$0PSMCK&amp;95Z7Q5[&amp;$0PSIFW7U.ZSAAL4L.[''U+]GU.ZSAAL3A_]V9)LDD3P29.]V-4]V9)LDD3MU=5[&amp;$0PSMCK&amp;95Z7Q''[G%0ZCD9MGU.ZSAAL3%_]V9)LDD3P29.]V-4]V9)LDD0MU=5[&amp;$0PSMCK&amp;95Z7Q5[&amp;$0PS@6W7U.ZSAAL4L.[''U+]GU.ZSAALC]_]V9)LDD3P29.]V-4]V9)LDD0NE=5[&amp;$0PSMCK&amp;95Z7Q5[&amp;$0PS@9W7U.ZSAAL4L.[''U+]GU.ZSAALDE_]V9)LDD3P29.]V-4]V9)LDD0Q%=5[&amp;$0PSMCK&amp;95Z7Q5[&amp;$0PSD0W7U.ZSAAL4L.[''U+]GU.ZSAALSM_]V9)LDD3P29.]V-4]V9)LDD1ME=5[&amp;$0PSMCK&amp;95Z7Q5[&amp;$0PS@6W7U.ZSAALCH.XVI6\6],^WA(L#@7]V9)PSL5W4D4QB9"[G]&amp;W4D4LR9"[G]3]V9)PSL5W4D4QB9"[G]&amp;W4D4L"9"[G]3]V9)PSL0W4D4QB9"[G]&amp;W4D4QB9"[G]3]V9)PSL9W4D4QB9"[G]&amp;W4D4QB9"[G]3]V9)PSL5W4D4QB9"[G]&amp;W4D4QB9"[G]3QV9''\6E-ZV1/[&amp;]3W7Q-W69_XWI-YV9)XV9-W6U_XWI-YV9)XV9-W6%_XWI-YV9)XV96W69_XWI-YV9)XV9-W7!_XWI-YV9)XV95[&amp;%FP#ED]V9)Q$H1QW%/YG%/YGA!]FE(ZFU"\&amp;U7XW%)[&amp;E,]F=.YV!%X''I%]7U.ZTYBL#E5[&amp;%FP#H2]V9)Q$H2L7U.ZTYBL#Q5[&amp;%FP#H5]V9)Q$H2M''U.ZTYBL#]5[&amp;%FP#H8]V9)Q$H2NWM(ZV93ZF%.YF=4ZFU"\&amp;U7\6!)[''M)[&amp;Q/]F!%X''I%]7M(ZV9$XV]%\6!3ZF%.YF=4ZFU"\&amp;U7\6!)[&amp;Q!Y6U3ZGM)[&amp;Q/]F!%X''I%]6E,YVY0XWQ!ZF!%X''I%]6E,YVY1XV5!]GM(YVI2YW]![FU&amp;YFE''YWM(ZFU"\&amp;U7X&amp;U4YFE''YWM(ZFU"\&amp;U7Y6%-YV1$XV]%\6!(YVI2YW]$XV1%]FQ!Y6U3ZF!%X''I%]6!%YFE''YWM(ZFU"\&amp;U7]&amp;E6YFE''YWM(ZFU"\&amp;U7^&amp;E9ZV9$XV]%\6!(YVI2YW]4YWQ$XV]%\6!(YVI2YW]9[6Q$XV]%\6!(YVI2YW]&amp;ZV9![F-!Y&amp;Q!Y6U3ZF!%X''I%]6-!Y&amp;Q!Y6U3ZF!%X''I%]61![VU$YFE''YWM(ZFU"\&amp;U7[VU-YFE''YWM(ZFU"\&amp;U7[''U.YFE''YWM(ZFU"\&amp;U7\6E-YV-(YFE''YWM(ZFU"\&amp;U7\FU&amp;ZV9![FQ!Y6U3ZF!%X''I%]7A%YFE''YWM(ZFU"\&amp;U7]GM!YF%$XV]%\6!(YVI2YW]1[6Y$XV]%\6!(YVI2YW]2YWM(YFE''YWM(ZFU"\&amp;U7\6!)[&amp;Q!Y6U3ZF!%X''I%]7Q!]&amp;Q!Y6U3ZF!%X''I%]7Y!]&amp;!/[FE-ZFU"\&amp;U7X&amp;U4\&amp;E&amp;YV!%X''I%]6-!Y''I!Y&amp;U(YVI2YW]0YWI!Y&amp;U(YVI2YW]![FU&amp;[FE-YVQ(YVI2YW]5[&amp;%FQ$YDIEI%]&amp;%3ZV=.N"@1K#D9NR@$P6=0^V1%Y''P L#@0L"0 L#@0L20 L#@0MR0 L#@0NB0 L#@0NR0 L#@1LBAF\&amp;U%HEM/Y''Q7XWI%HDY/]V9$XWQ)[68.Q''I%YRASXV93HDI/[FQF\&amp;U%T6E.\0@@@@FG@X @@P@B@@L@A@@E@@X@A0A(@@$@B @K@@0@CP@N@@&lt;@D@@Q@AH@D0@T@AT@E @W@A @FP@Z@A,@G@@]@A8@G0@ @BD@H @#@BP@IP@&amp;@B\@J@@)@B(@J0@,@B4@K @/@C@@LP@2@CL@M@@5@CX@M0@8@C$@N @;@C0@OP@&gt;@C&lt;@P@A&lt;@DH@P0AD@DT@Q AG@D @RPAJ@D,@S@AM@D8@S0AP@ED@T AS@EP@UPAV@E\@V@AY@E(@V0A\@E4@W A_@X$@X@A!@FH@Y0A$@J@@Y BC@J(@"0A*@I\A" B%@H@@(PB\@JP@*PA=@X,@\0A2@HT@% BO@G @'' B[@JL@^0B.@J,@+@B0@J4@+0BJ@KD@-PB2@KL@-@B9@KX@-0B8@I(@. B&gt;@K,@/@B?@K4@*@BM@LP@0PCB@LL@1PB]@IT@20CH@L$@3PCJ@L0@$@CN@MH@30CP@MD@5 CS@MP@5PB''@M\@60CX@M$@7@CZ@I&lt;@$0C!@M8@70C @NH@( C#@X0A#PFN@X&lt;A$@FQ@YHA$0FT@YTA% FW@Y A&amp;PFZ@Y,A''@F]@Y8A''0F @ZDA( F#@ZPA)PF&amp;@Z\A*@F)@Z(A*0F,@Z4A+ F/@[@A,PF2@[LA-@F5@[XA-0F8@[$A. F;@[0@$PF=@[8A/0G@@\DA0 GC@\PA1PGF@\\A2@GI@\(A20BL@IHA3@GM@\8A30GP@]DA4 GS@]PA5PGV@]\A6@GY@](@# BT@],A7@G]@]8A70G @^DA8 G#@^PA9PG&amp;@L@@7PG''@^ A:PG*@^,A;@G-@^8A;0G0@_DA&lt; G3@_PA=PG6@_\A&gt;@G9@_(A&gt;0G&lt;@LXA?PG&gt;@_&lt;B@@CG@NPB@PHB@ LBA@HE@ XBA0HH@ $BB HK@ 0BCPHN@ &lt;BD@HQ@!HBD0A%@!PBEPHV@!\BF@HY@!(BF0H\@!4BG H_@"@BHPH"@"LBI@H%@"XBI0H(@"$BJ H+@"0BKPH.@"&lt;BL@H1@#HBL0H4@#TBM H7@# BNPH:@#,BO@H=@#8BO0I@@$DBP IC@$PBQPIF@$\BR@II@$(BR0IL@$4BS IO@%@BTPIR@%LBU@IU@%XBU0IX@%$BV I[@%0BWPI^@%&lt;BX@I!@&amp;HBX0I$@&amp;TBY I''@&amp; BZPI*@&amp;,B[@I-@&amp;8B[0I0@''DB\ I3@''PB]PI6@''\B^@I9@''(B^0I&lt;@''4B_ I?@(@B PJB@(LB!@JE@(XB!0JH@($B" JK@(0B#PJN@(&lt;B$@JQ@)HB$0JT@)TB% JW@) B&amp;PJZ@),B''@J]@)8B''0J @*DB( J#@*PB)PJ&amp;@*\B*@J)@*(B*0J,@*4B+ J/@+@B,PJ2@+LB-@J5@+XB-0J8@+$B. J;@+0B/PJ&gt;@+&lt;B0@KA@,HB00KD@,TB1 KG@, B2PKJ@,,B3@KM@,8B30KP@-DB4 KS@-PB5PKV@-\B6@KY@-(B60K\@-4B7 K_@.@B8PK"@.LB9@K%@.XB90K(@.$B: K+@.0B;PK.@.&lt;B&lt;@K1@/HB&lt;0K4@/TB= K7@/ B&gt;PK:@/,B?@K=@/8B?0L@@0DC@ LC@0PCAPLF@0\CB@LI@0(CB0LL@04CC LO@1@CDPLR@1LCE@LU@1XCE0LX@1$CF L[@10CGPL^@1&lt;CH@L!@2HCH0L$@G8@"@L%@2XCI0L(@2$CJ L+@20CKPL.@2&lt;CL@L1@3HCL0L4@HD@  BD@H\@_0BF@3TCM L7@3 CNPL:@3,CO@L=@38CO0M@@4DCP MC@4PCQPMF@4\CR@MI@4(CR0ML@44CS MO@5@CTPMR@5LCU@MU@5XCU0MX@5$CV M[@50CWPM^@5&lt;CX@M!@6HCX0M$@6TCY M''@6 CZPM*@6,C[@M-@68C[0M0@7DC\ M3@7PC]PM6@7\C^@M9@7(C^0M&lt;@74C_ M?@8@C PNB@8LC!@NE@8XC!0NH@8$C" NK@80C#PNN@8&lt;C$@NQ@9HC$0NT@9TC% NW@9 C&amp;PNZ@9,C''@N]@98C''0N @:DC( N#@:PC)PN&amp;@:\C*@N)@:(C*0N,@:4C+ N/@;@C,PN2@;LC-@N5@;XC-0N8@;$C. N;@;0C/PN&gt;@;&lt;C0@OA@&lt;HC00OD@&lt;TC1 OG@&lt; C2POJ@&lt;,C3@OM@&lt;8C30OP@=DC4 OS@=PC5POV@=\C6@OY@=(C60O\@=4C7 O_@&gt;@C8PO"@&gt;LC9@O%@&gt;XC90O(@&gt;$C: O+@&gt;0C;PO.@&gt;&lt;C&lt;@O1@?HC&lt;0O4@?TC= O7@? C&gt;PO:@?,C?@O=@?8C?0P@A@DD@ PCA@PDAPPFA@\DB@PIA@(DB0PLA@4DC POAA@DDPPRAALDE@PUAAXDE0PXAA$DF P[AA0DGPP^AA&lt;DH@P!ABHDH0P$ABTDI P''AB DJPP*AB,DK@P-AB8DK0P0ACDDL P3ACPDMPP6AC\DN@P9AC(DN0P&lt;AC4DO P?AD@DPPQBADLDQ@QEADXDQ0QHAD$DR QKAD0DSPQNAD&lt;DT@QQAEHDT0QTAETDU QWAE DVPQZAE,DW@Q]AE8DW0Q AFDDX Q#AFPDYPQ&amp;AF\DZ@Q)AF(DZ0Q,AF4D[ Q/AG@D\PQ2AGLD]@Q5AGXD]0Q8AG$D^ Q;AG0D_PQ&gt;AG&lt;D @RAAHHD 0RDAHTD! RGAH D"PRJAH,D#@RMAH8D#0RPAIDD$ RSAIPD%PRVAI\D&amp;@RYAI(D&amp;0R\AI4D'' R_AJ@D(PR"AJLD)@R%AJXD)0R(AJ$D* R+AJ0D+PR.AJ&lt;D,@R1AKHD,0R4AKTD- R7AK D.PR:AK,D/@R=AK8D/0S@ALDD0 SCALPD1PSFAL\D2@SIAL(D20SLAL4D3 SOAM@D4PSRAMLD5@SUAMXD50SXAM$D6 S[AM0D7PS^AM&lt;D8@S!ANHD80S$ANTD9 S''AN D:PS*AN,D;@S-AN8D;0S0AODD&lt; S3AOPD=PS6AO\D&gt;@S9AO(D&gt;0S&lt;AO4D? S?AP@E@PTBAPLEA@TEAPXEA0THAP$EB TKAP0ECPTNAP&lt;ED@TQAQHED0TTAQTEE TWAQ EFPTZAQ,EG@T]AQ8EG0T ARDEH T#ARPEIPT&amp;AR\EJ@T)AR(EJ0T,AR4EK T/AS@ELPT2ASLEM@T5ASXEM0T8AS$EN T;AS0EOPT&gt;AS&lt;EP@UAATHEP0UDATTEQ UGAT ERPUJAT,ES@UMAT8ES0UPAUDET USAUPEUPUVAU\EV@UYAU(EV0U\AU4EW U_AV@EXPU"AVLEY@U%AVXEY0U(AV$EZ U+AV0E[PU.AV&lt;E\@U1AWHE\0U4AWTE] U7AW E^PU:AW,E_@U=AW8E_0V@AXDE  VCAXPE!PVFAX\E"@VIAX(E"0VLAX4E# VOAY@E$PVRAYLE%@VUAYXE%0VXAY$E&amp; V[AY0E''PV^AY&lt;E(@V!AZHE(0V$AZTE) V''AZ E*PV*AZ,E+@V-AZ8E+0V0A[DE, V3A[PE-PV6A[\E.@V9A[(E.0V&lt;A[4E/ V?A\@E0PWBA\LE1@WEA\XE10WHA\$E2 WKA\0E3PWNA\&lt;E4@WQA]HE40WTA]TE5 WWA] E6PWZA],E7@W]A]8E70W A^DE8 W#A^PE9PW&amp;A^\E:@W)A^(E:0W,A^4E; W/A_@E&lt;PW2A_LE=@W5A_XE=0W8A_$E&gt; W;A_0E?PW&gt;A_&lt;F@@XAA HF@0XDA TFA XGA  FBPXJA ,FC@XMA 8FC0XPA!DFD XSA!PFEPXVA!\FF@XYA!(FF0X\A!4FG X_A"@FHPX"A"LFI@X%A"XFI0X(A"$FJ X+A"0FKPX.A"&lt;FL@X1A#HFL0X4A#TFM X7A# FNPX:A#,FO@X=A#8FO0Y@A$DFP YCA$PFQPYFA$\FR@YIA$(FR0YLA$4FS YOA%@FTPYRA%LFU@YUA%XFU0YXA%$FV Y[A%0FWPY^A%&lt;FX@Y!A&amp;HFX0Y$A&amp;TFY Y''A&amp; FZPY*A&amp;,F[@Y-A&amp;8F[0Y0A''DF\ Y3A''PF]PY6A''\F^@Y9A''(F^0Y&lt;A''4F_ Y?A(@F PZBA(LF!@ZEA(XF!0ZHA($F" ZKA(0F#PZNA(&lt;F$@ZQA)HF$0ZTA)TF% ZWA) F&amp;PZZA),F''@Z]A)8F''0Z A*DF( Z#A*PF)PZ&amp;A*\F*@Z)A*(F*0Z,A*4F+ Z/A+@F,PZ2A+LF-@Z5A+XF-0Z8A+$F. Z;A+0F/PZ&gt;A+&lt;F0@[AA,HF00[DA,TF1 [GA, F2P[JA,,F3@[MA,8F30[PA-DF4 [SA-PF5P[VA-\F6@[YA-(F60[\A-4F7 [_A.@F8P["A.LF9@[%A.XF90[(A.$F: [+A.0F;P[.A.&lt;F&lt;@[1A/HF&lt;0[4A/TF= [7A/ F&gt;P[:A/,F?@[=A/8F?0\@A0DG@ \CA0PGAP\FA0\GB@\IA0(GB0\LA04GC \OA1@GDP\RA1LGE@\UA1XGE0\XA1$GF \[A10GGP\^A1&lt;GH@\!A2HGH0\$A2TGI \''A2 GJP\*A2,GK@\-A28GK0\0A3DGL \3A3PGMP\6A3\GN@\9A3(GN0\&lt;A34GO \?A4@GPP]BA4LGQ@]EA4XGQ0]HA4$GR ]KA40GSP]NA4&lt;GT@]QA5HGT0]TA5TGU ]WA5 GVP]ZA5,GW@]]A58GW0] A6DGX ]#A6PGYP]&amp;A6\GZ@])A6(GZ0],A64G[ ]/A7@G\P]2A7LG]@]5A7XG]0]8A7$G^ ];A70G_P]&gt;A7&lt;G @^AA8HG 0^DA8TG! ^GA8 G"P^JA8,G#@^MA88G#0^PA9DG$ ^SA9PG%P^VA9\G&amp;@^YA9(G&amp;0^\A94G'' ^_A:@G(P^"A:LG)@^%A:XG)0^(A:$G* ^+A:0G+P^.A:&lt;G,@^1A;HG,0^4A;TG- ^7A; G.P^:A;,G/@^=A;8G/0_@A&lt;DG0 _CA&lt;PG1P_FA&lt;\G2@_IA&lt;(G20_LA&lt;4G3 _OA=@G4P_RA=LG5@_UA=XG50_XA=$G6 _[A=0G7P_^A=&lt;G8@_!A&gt;HG80_$A&gt;TG9 _''A&gt; G:P_*A&gt;,G;@_-A&gt;8G;0_0A?DG&lt; _3A?PG=P_6A?\G&gt;@_9A?(G&gt;0_&lt;A?4G? _?B@@H@P BB@LHA@ EB@XHA0 HB@$HB  KB@0HCP NB@&lt;HD@ QBAHHD0 TBATHE  WBA HFP ZBA,HG@ ]BA8HG0  BBDHH  #BBPHIP &amp;BB\HJ@ )BB(HJ0 ,BB4HK  /BC@HLP 2BCLHM@ 5BCXHM0 8BC$HN  ;BC0HOP &gt;BC&lt;HP@!ABDHHP0!DBDTHQ !GBD HRP!JBD,HS@!MBD8HS0!PBEDHT !SBEPHUP!VBE\HV@!YBE(HV0!\BE4HW !_BF@HXP!"BFLHY@!%BFXHY0!(BF$HZ !+BF0H[P!.BF&lt;H\@!1BGHAN A/@H$H\0!4BGT@PP@H@GTH] A)@G\@] !7@G@@\PA4BG H^P!:@G$H^0!&lt;BG4H_ !?BH@H P"BBHL@^ "DBHTH! "GBH H"P"JBH,@Z0A,BH0H#P"NBH&lt;H$@"QBIHH$0"T@FLH%P"VBI\H&amp;@"YBI(H&amp;0"\BI4H'' "_BJ@H(P""BJLH)@"%BJXH)0"(BJ$H* "+BJ0H+P".BJ&lt;H,@"1BKHH,0"4@TXH-PEG@T ARPEJ@T,AS@"6BK\H.@C+@N0AAPEM@T8AS0EP@UDAT ES@UPAUPEVBK$H. ";@P4AC "&lt;BK4H/ "?BL@H0P#BBLLH1@#EBLXH10#HBL$H2 #KBL0H3P#NBL&lt;H4@#QBMHH40#TBMTH5 #WBM H6P#ZBM,H7@#]BM8H70# BNDH8 ##BNPH9P#&amp;BN\H:@#)BN(H:0#,BN4H; #/BO@H&lt;P#2BOLH=@#5@I$H= #7BO H&gt;P#:BO,H?@#=BO8H?0$@BPDI@ $CBPPIAP$FBP\IB@$I@TPAQP$JBP,IC@$MBP8IC0E@@TDAP ECBQ@IDP$RBQLIE@$UBQXIE0$XBQ$IF $[BQ0IGP$^BQ&lt;IH@$!BRHIH0$$BRTII $''BR IJP$*BR,IK@$-BR8IK0$0BSDIL $3BSPIMP$6BS\IN@$9BS(IN0$&lt;BS4IO $?BT@IPP%BBTLIQ@%EBTXIQ0%HBT$IR %KBT0ISP%NBT&lt;IT@%QBUHIT0%T@JXIUP%VBU\IV@%YBU(IV0%\BU4IW %_BV@IXP%"BVLIY@%%BVXIY0%(BV$IZ %+BV0I[P%.BV&lt;I\@%1BWHI\0%4BWTI] %7BW I^P%:BW,I_@%=BW8I_0&amp;@BXDI  &amp;CBXPI!P&amp;FBX\I"@&amp;IBX(I"0&amp;LBX4I# &amp;OBY@I$P&amp;RBYLI%@&amp;UBYXI%0&amp;XBY$I&amp; &amp;[BY0I''P&amp;^BY&lt;I(@&amp;!BZHI(0&amp;$BZTI) &amp;''BZ I*P&amp;*BZ,I+@&amp;-BZ8I+0&amp;0B[DI, &amp;3B[PI-P&amp;6B[\I.@&amp;9B[(I.0&amp;&lt;B[4I/ &amp;?B\@I0P''BB\LI1@''EB\XI10''HB\$I2 ''KB\0I3P''NB\&lt;I4@''QB]HI40''TB]TI5 ''WB] I6P''ZB],I7@'']B]8I70'' B^DI8 ''#B^PI9P''&amp;B^\I:@'')B^(I:0'',B^4I; ''/B_@I&lt;P''2@P(@[PA.@P,AC@''3B_PI=P''6B_\I&gt;@''9B_(I&gt;0''&lt;B_4I? ''?B @J@P(BB LJA@(EB XJA0(HB $JB (KB 0JCP(NB &lt;JD@(QB!HJD0(TB!TJE (WB! JFP(ZB!,JG@(]B!8JG0( B"DJH (#B"PJIP(&amp;B"\I)PL@@@D@@A @@A$@@A,@@A8@@B4@@C8@@I\@@QX@@W$@@ 8@@! @@$(@@''0@@(X@@(&lt;@@) @@*H@@*0@@+&lt;@@1D@@2(@@7P@@=\@A@\@AEX@AK(@ANT@AT(@AZH@A[D@A\@@A]8@A^0@A_L@A H@A+H@A,H@A-\@A.@@A.4@A/X@A/&lt;@A0$@A1H@A10@A2P@A24@A3X@A4@@A4\@A5\@A6T@A7T@A8P@A84@A9X@A98@A:T@A:4@A;X@A;&lt;@A&lt; @A=8@A&gt;8@B@L@BBD@BB(@BCL@BDH@BED@BE(@BF @BG\@BHD@BID@BI(@BJ$@BK @BLD@BL,@BMP@BM0@BN,@BO(@BP @BQD@BQ(@BRP@BR,@BSH@BS(@BTL@BT,@BUT@BZP@B[D@B @@B$X@B$$@B&amp; @B+8@B4T@B;@@B?L@C@ @CJ0@CK4@CPP@CW4@CX0@C[T@C[&lt;@C!$@C"L@C#@@C%\@C&amp;D@C&amp;(@C''P@C+4@C.L@C.0@C/P@C/8@C3X@C4X@C6P@C70@C9$@C&gt;T@C?0@DAL@DB$@DC&lt;@DE4@DG @DH$@DIH@DJD@DKD@DLD@DM\@DNX@DOT@DPP@DQ,@DR$@DS @DU@@DV @DX@@DY @D[\@D^T@D_,@D (@D!$@D" @D#8@D$4@D''\@D-,@D/D@D0\@D18@D3T@D5H@D60@D8H@D8,@D:@@D;P@D&lt;$@D&gt;P@D?L@E@H@EAD@EB @EID@EJD@EKX@EL(@EM&lt;@EOT@EQ@@ER\@ES,@ET,@EU,@EV,@EXH@EYD@E]L@E^$@E_&lt;@E!X@E"0@E$L@E)X@E10@E20@E3,@E4(@E5$@E6 @E7\@E8\@E9X@E:4@E&lt;L@E=D@FA4@FB4@FDH@FEH@FF @FG @FH0@FML@FT8@FU4@FWD@FXH@FY @FZ @F[8@F\&lt;@F^P@F_P@F!8@F"4@F#0@F&amp;&lt;@F* @F+ @F, @F.H@F/0@F00@F10@F5H@F9D@F:@@F:(@F;8@F= @F&gt; @F?\@G@X@GAT@GA8@GB0@GC,@GD(@GE @GF\@GG\@GH\@GI\@GLD@GNP@GOP@GPL@GQ@@GQ&lt;@GR&lt;@GS8@GT0@GYL@G](@G_H@G \@G!&lt;@G#T@G%P@G''@@G,0@G4L@G5$@G6$@G74@G80@G:H@G;D@G&lt;D@G=D@G&gt;D@G?D@HH&lt;@HSD@HTD@HU@@HY8@H$X@H%X@H&amp;\@H''@@H''(@H((@H)$@H*$@H+ @H, @H- @H.,@H/&lt;@H1X@H24@H8P@H=,@H&gt;0@H?4@I@0@IA0@ICL@IDH@IEH@IFD@IGD@IH@@II@@II @IMX@IR\@IS\@IV&lt;@IY @I]P@I"H@I(P@I.L@I/D@I3&lt;@I7T@I;0@J@4@JB,@JG4@JHX@JK(@JPT@JWT@J^4@J$D@J.4@J08@J6,@J:0@J&lt;(@KJH@KN,@KR\@KUP@K[,@K$4@K-&lt;@K3X@LJD@LNH@LS@@LX\@L_D@L%\@L&amp;@@L=T@MBD@MET@MJ@@ML8@MM\@MM8@MN\@MX4@M^T@M#4@M''X@M*8@M+\@M0 @M&gt;L@NS @N(&lt;@N-&lt;@N9D@N98@N;T@N=4@N&gt;0@O@,@OB$@ODX@OEX@OF0@OHD@OI@@OJX@OK,@OMH@ON @OO @OP @OR@@OSP@OTL@OUL@OW@@OX0@OZ$@O\X@O^H@O_&lt;@O!0@O#(@O$ @O&amp;4@O(&lt;@O*,@O,\@O-&lt;@O/,@O:H@PF @PG$@PH&lt;@PI8@PJ4@PUD@P_D@P)0@P4L@P5L@P6L@P7L@P84@P:X@P;4@P&lt;8@P&gt;P@QH8@QI8@QJ8@QPL@QRH@QS(@QUX@QWL@QX&lt;@QZ,@Q\X@Q]4@Q_L@Q \@Q"H@Q#D@Q$X@Q%,@Q''@@Q''&lt;@Q(8@Q*,@Q,X@Q-8@Q/L@Q08@Q2L@Q3$@Q4\@Q50@Q7D@Q8D@Q9D@Q:@@Q:&lt;@Q;4@Q&lt;0@RTX@R*$@R+$@R,$@R78@SCX@SD0@SFL@SL0@SXP@SZ(@S\(@S^$@S P@S!(@S"8@S$(@S&amp;L@S''H@S(H@S(0@S0L@S48@S:$@S?X@TC @TX @T]\@T"T@T''T@T(L@T8P@T84@T9X@UL&lt;@URH@UUX@U\&lt;@U%X@U*L@U2\@VLH@VOD@VS(@VY4@V[8@V^X@V @@V*,@V5 @V78@V=4@WBT@WG@@WML@WQ(@WVD@WXT@WY(@W)T@W;H@W&lt;T@W?D@XA0@XFP@XI@@XMX@XO8@XSX@XXX@X[0@X$H@X(H@X,&lt;@X1D@X6L@X9P@X&lt;\@Y@ @YOP@YY(@Y[ @Y^\@Y"D@Y$T@Y(X@Y, @Y-D@Y30@Y7$@Y;P@Y&gt;8@ZED@ZFX@ZG,@ZM0@ZU @ZV@@ZY&lt;@Z\X@Z]\@Z"T@Z'' @Z,$@Z1$@Z;T@[A4@[IX@[SP@[)4@[0&lt;@[70@[90@[;X@[&lt;X@\@&lt;@\G\@\O0@\^L@\&amp; @\.0@\7@@]EX@]P$@]Q$@]\\@]]\@]_P@]"P@]"4@]$0@]*4@]+\@]/8@]4 @]8,@]9,@]=,@]&gt;,@]?T@]?&lt;@^@$@^AL@^A4@^BX@^CP@^C4@^DT@^D8@^HX@^JX@^J&lt;@^K @^L0@^N@@^O,@^P$@^QL@^Q4@^R,@^SL@^S4@^T8@^_H@^ H@^0L@^1$@_F4@_G4@_R4@_S8@_UH@_VX@_W(@_X$@_Y\@_Z,@_[T@_\P@_]L@_^L@_"H@_#H@_$H@_$&lt;@_% @_&amp;T@_''T@_''8@_(4@_)0@_*0@_+(@_,$@_-L@_.P@_8@@_8 @_8&lt;@_9\@_98@_:T@_:0@_;L@_;,@_&lt;$@_=D@_=4@_&gt;0@_?P@_?0@ @$@ AX@ BH@ B(@ E(@ FH@ F$@ F&lt;@ GX@ G0@ H0@ I4@ J0@ MD@ M$@ N @ OT@ PX@ Q@@ XD@ _D@ _ @  T@ !@@ !\@ !4@ "L@ ",@ #H@ &amp;,@ ''L@ ( @ (8@ )X@ )0@ *H@ *$@ +P@ +0@ ,P@ ,,@ -,@ .,@ /H@ /$@ 1@@ 4\@ 5T@ ?H@ ?4@!@T@!@0@!AL@!A,@!C0@!DP@!D0@!E$@!FX@!GH@!S@@!TL@!U@@!\P@!%H@!%L@!&amp;D@!&amp;$@!''\@!(T@!)L@!*D@!2H@!2(@!3H@!&lt;\@"VL@"Z@@"),@"9X@":\@";\@#G4@#W @#_\@#9\@$I(@$L0@$XD@$ 0@$.H@$;&lt;@%DX@%S8@%\\@%&amp;4@%*8@%1$@%2(@%3(@%6X@%7T@%7&lt;@%:L@%;(@%&lt;P@%=T@%&gt;X@%?\@&amp;@8@&amp;A&lt;@&amp;C@@&amp;FD@&amp;GD@&amp;HX@&amp;H&lt;@&amp;J,@&amp;KP@&amp;K4@&amp;LX@&amp;Q @&amp;RH@&amp;R,@&amp;T @&amp;W8@&amp;Z@@&amp;\X@&amp;]P@&amp;^$@&amp;_ @&amp; D@&amp;!\@&amp;"D@&amp;)&lt;@&amp;-,@&amp;3@@&amp;3$@&amp;5@@&amp;6\@&amp;7,@&amp;80@&amp;90@&amp;:&lt;@&amp;=&lt;@&amp;&gt;4@''D&lt;@''H,@''M0@''NX@''T@@''Z(@'' 0@''$,@''''\@'',&lt;@''1\@''3P@'':T@'';P@''?T@(@P@(F@@(J @(M(@(QP@(V&lt;@( 8@(!\@("@@(#(@(%D@(&amp;T@(''T@((X@(6,@)@P@)JP@)T,@)U8@))D@)/0@)6P@*FP@*L,@*T,@*U(@*W@@*[,@*\,@*"D@*"(@*#P@*$,@*%L@**8@*.H@*1 @*2 @*3 @*4 @*6P@*7P@*8P@*9$@*:@@*=(@*&gt;L@*&gt;4@*?T@*?0@+@(@+AD@+DX@+E@@+E$@+F$@+G&lt;@+H4@+IX@+I&lt;@+JX@+O,@+PP@+RL@+R0@+T$@+V8@+Y\@+Z&lt;@+[&lt;@+\\@+!0@+% @+&amp;\@++,@+-@@+-(@+1H@+2D@+2,@+3P@+30@+4,@+5P@+7,@+:T@+:4@+;0@+=D@+&gt;@@+&gt;$@,@@@,@$@,GP@,G8@,I @,J@@,K4@,NH@,P,@,RH@,SD@,S(@,XP@,\X@,],@,_X@,% @,&amp; @,+L@,+0@,,,@,.H@,/D@,3&lt;@,8D@,;8@,&lt;8@,=8@,&gt;&lt;@-@,@-IT@-Q,@-V\@-W@@-XP@-Y$@-Z8@-\H@-]D@-]&lt;@-''&lt;@-+(@-,H@-/H@-/(@-20@-6,@.(D@.-D@.0\@.3H@.6@@.;@@/AH@/B$@/D@@/F@@/G,@/KP@/OP@/TP@/YL@/!\@/*P@/-$@/04@/4(@/8L@/;X@/&gt; @0AP@0C&lt;@0FX@0H,@0J0@0L0@0P,@0U@@0]H@0$$@0+8@02(@04 @06X@06&lt;@09H@0&lt;P@0?T@1CD@1F$@1I@@1KT@1NP@1Q@@1S8@1V8@1YT@1[(@1"\@1+H@12T@19D@19,@1:0@1;4@2@T@2D,@2H$@2K\@2NL@2P4@2SP@2U @2XX@2[D@2^8@2"P@2"8@2$T@2%(@2'' @2)P@2*T@2+,@2,,@2.@@228@230@29 @2;P@2&lt;,@2&gt;H@2?$@3@&lt;@3A @3BD@3CD@3D@@3EX@3F0@3H,@3JX@3K(@3L&lt;@3OH@3QL@3R(@3TD@3UD@3VH@3W @3X&lt;@3ZT@3[4@3]P@3^(@3 P@3!8@3$L@3&amp; @3''D@3-P@348@3&lt;H@3=H@3&gt;@@3&gt; @3?@@4F$@4NH@4SD@4V,@4\(@4 T@4#\@4.,@40X@43 @4;4@5AX@5E @5F$@5KH@5ZH@5]H@5"(@544@57&lt;@6HP@6KT@6T4@6W4@6 D@6&amp; @6-D@62T@6&lt;$@6?&lt;@7FP@7J&lt;@7[,@7^$@7+H@7, @7=(@8CT@8M&lt;@8W&lt;@8X$@8Z,@8[,@8_\@8 @@8$8@8&amp;L@82(@850@89T@8&lt;\@8?$@9B&lt;@9D8@9G8@9ML@9Q @9T\@9U @9Y@@9^@@9 &lt;@9''8@9/T@92P@97\@9&lt; @:D0@:ID@:PH@:XH@:_P@:+,@:2@@:6D@:;8@:&gt;&lt;@;C0@;F$@;XX@;Y @;^$@;"L@;,&lt;@;34@;64@;70@;;\@;&lt; @;?P@&lt;@$@&lt;BD@&lt;B(@&lt;C$@&lt;ED@&lt;E$@&lt;FH@&lt;F(@&lt;HP@&lt;H8@&lt;I @&lt;JX@&lt;J&lt;@&lt;K0@&lt;LX@&lt;L&lt;@&lt;M8@&lt;N @&lt;OH@&lt;O0@&lt;PX@&lt;Q@@&lt;RH@&lt;R(@&lt;ST@&lt;U&lt;@&lt;\$@&lt;]P@&lt;]8@&lt;!(@&lt;%D@&lt;''4@&lt;(\@&lt;)T@&lt;*@@&lt;/$@&lt;34@&lt;:@@&lt;?L@=BT@=B&lt;@=DT@=D&lt;@=K0@=QH@=RD@=SP@=TX@=U@@=VD@=ZL@=[ @=!L@=!8@=+ @=4P@=&lt;8@=?P@&gt;B@@&gt;C(@&gt;D0@&gt;F\@&gt;G(@&gt;H$@&gt;NL@&gt;R0@&gt;S\@&gt;T @&gt;U$@&gt; D@&gt;#T@&gt;+8@&gt;,&lt;@&gt;- @&gt;.(@&gt;6T@&gt;7X@&gt;8@@&gt;8(@&gt;:D@&gt;:,@&gt;;,@&gt;&lt;P@&gt;&lt;4@?B(@?DL@?EL@?E,@?F4@?G4@?N8@?WX@?W&lt;@?Y\@?^(@?_L@?_,@? X@?$H@?'',@?(X@?)\@?*H@?*4@?/T@?0@@?3(@?7P@?&gt;TA@DHA@H0A@Q,A@YTA@^PA@$4A@,DA@4&lt;A@&lt;(AAALAAKTAAQPAAV4AA_,AA''0AA+\AA,$AA4&lt;ABG$ABI&lt;ABODABTTAB[HAB# AB)XAB/8AB7@AB?DACD0ACJHACSTACY$AC_8AC&amp; AC.@AC5,AC=0ADA4ADK ADS0AD]HAD#$AD,PAD2TAD9\AE@LAEG0AEK,AER&lt;AE[@AE_ AE-TAE7TAE&lt;@AFA$AFHPAFP\AFVHAF\8AF#,AF)\AF-\AF24AF=LAGC@AGHTAGM&lt;AGT\AG[,AG#4AG(XAG2XAG:(AHC(AHI\AHP4AHWDAH^8AH%@AH,8AH00AH70AH?(AID@AIPPAIX4AI%4AI+\AI04AI94AJ@8AJG AJILAJ[$AJ\XAJ ,AJ!PAJ)HAJ.TAJ/8AJ6$AJ=XAKAPAKF@AKG@AKG$AKHHAKM4AKQXAKYXAKZ4AK[XAK$TAK$4AK*0AK-0AK3$AK4LAK8XALAXALF(ALGLALL4ALQ@ALRPALU,ALVPAL\\AL^8AL_\AL$LAL*\AL,TAL4PAL=XAMD\AMMDAMS,AMWPAM_HAM"LAM#LAM(LAM1(AM54AM8XAM&lt;\ANB4ANFLANH(ANKTANK0ANQTANZ AN%XAN(DAN((AN)LAN/LAN8LAN9DAN&gt;(AOAHAOG(AOHLAOK,AORHAOX,AO#HAO) AO0(AO6LAO&lt;HAPEPAPMXAPR8APV4AP]XAP^,AP TAP!8AP#(AP$8AP&amp;$AP''4AP) AP*4AP+4AP,4AP.PAP/$AP0&lt;AP2LAP3$AP48AP?,AQJ(AQK&lt;AQMHAQN AQPPAQQ,AQSXAQTTAQU$AQV AQW4AQ^0AQ*(AQ+(AQ,(AQ-(AQ.&lt;AQ/8AQ04AQ1,AQ2$AQ4@AQ5\AQ=\AQ&gt;TAQ?LAR@DARA@ARBTARDHARE&lt;ARF&lt;ARG&lt;ARH8ARI4ARJ0ARK,ARL(ARM$ARO@ARPXARQTARRPARSLARTDARUHARVHARWLARXLARYLARZLAR[HAR\DAR\&lt;AR]8AR^0AR_,AR  AR!\AR#XAR%DAR''\AR)(AR+$AR-TAR/PAR0&lt;AR2LAR3\AR40AR6@AR7TAR8TAR9$AR:$AR&lt;TAR=4AR?DAS@DASADASBDASC@ASC&lt;ASETASF,ASHDASIXASJ0ASLHASMDASNDASN&lt;ASO8ASP0ASQ,ASR$ASS AST4ASVLASWDASW8ASX,ASY$ASZ4AS\DAS]8AS_(AS (AS!$AS"\AS#TAS$XAS%\AS&amp; AS''$AS)DAS*$AS+(AS,,AS-,AS.,AS/(AS0$AS2@AS3\AS4XAS5XAS6XAS7\AS8XAS9XAS:PAS;LAS&lt;DAS=$AS&gt;8AT@DATA ATB ATC4ATELATF$ATG8ATI,ATK ATMHATN8ATP(ATR ATTXATVPATX@ATY4AT[(AT]XAT_PAT!HAT#@AT$4AT&amp;(AT(\AT*LAT,@AT,&lt;AT.LAT/LAT0 AT1 AT28AT4TAT6@AT7TAT8&lt;AT:TAT&lt;DAT= AT?PAU@(AUBTAUCTAUDTAUEPAUF AUG&lt;AUILAUJ$AUK8AUM4AUO$AUQXAUS@AUT8AUV(AUX$AUZTAU\LAU]4AU_TAU 8AU"XAU#&lt;AU% AU''TAU(8AU* AU+&lt;AU-\AU.TAU/PAU0HAU0&lt;AU1&lt;AU2&lt;AU3&lt;AU4&lt;AU58AU6,AU70AU8,AU9(AU:$AU; AU&lt;\AU=TAU&gt;PAU?LAV@DAVA@AVB@AVCPAVD AVFPAVG&lt;AVI0AVK AVMLAVN8AVPPAVQ,AVS(AVU AVW AVY\AV[TAV]LAV^PAV_TAV 4AV"PAV#4AV%TAV&amp;PAV''PAV(0AV*LAV+0AV-PAV.PAV/PAV0,AV2DAV3$AV5@AV6\AV78AV88AV9&lt;AV;\AV&lt;8AV&gt;\AV?&lt;AWA\AWB&lt;AWDDAWEPAWF8AWH\AWJHAWK0AWMXAWN&lt;AWO8AWP4AWRLAWS AWT&lt;AWVTAWW0AWYLAWZ AW[4AW]$AW_PAW!DAW"4AW$LAW%$AW'' AW)XAW+TAW-LAW.LAW/LAW0(AW2@AW3 AW4&lt;AW6XAW74AW88AW:TAW;4AW=TAW&gt;TAW?TAX@4AXBPAXC4AXETAXF0AXHLAXILAXJPAXK0AXMLAXN0AXPPAXQ0AXSPAXT$AXU&lt;AXWDAXXLAXYPAXZTAX[\AX\,AX^DAX_XAX \AX! AX"(AX#0AX%XAX''@AX)HAX+LAX-\AX/(AX10AX34AX6LAX8$AX;XAX&gt;HAYA@AYC4AYF(AYI\AYJ4AYLPAYNHAYO8AYQ4AYS,AYU$AYW\AYYXAY[TAY],AY @AY"\AY$4AY''LAY)$AY*&lt;AY,TAY.LAY0@AY2@AY3&lt;AY50AY7$AY9 AY;\AY=8AZ@PAZB,AZEDAZG\AZI4AZKDAZLTAZNDAZOTAZQ@AZRPAZS8AZUPAZV(AZXDAZY$AZ[ AZ\DAZ! AZ$$AZ%LAZ&amp;(AZ(DAZ)DAZ* AZ+ AZ,&lt;AZ.@AZ/HAZ0LAZ1TAZ24AZ38AZ5@AZ6DAZ7PAZ8\AZ; AZ&gt;$AZ?4A[A4A[B4A[C0A[D0A[E8A[F8A[G8A[H&lt;A[I8A[J4A[M8A[P8A[RPA[S(A[T$A[VXA[W\A[X A[Y$A[Z,A[\HA[^XA[ (A[!PA["4A[#4A[%TA[&amp;TA['',A[)HA[*(A[+,A[,4A[.TA[/@A[2LA[2XA[2$A[20A[2&lt;A[3HA[3TA[3 A[3(A[34A[4@A[4LA[4PA[4TA[4XA[4\A[4 A[5XA[6PA[7DA[78A[80A[9(A[;DA[;&lt;A[&lt;(A[=LA[=0A\A@A\B@A\B&lt;A\C8A\EDA\F&lt;A\I8A\K\A\RPA\R8A\S8A\UXA\U&lt;A\V@A\VDA\VHA\VLA\VPA\VTA\VXA\V$A\Y A\]TA\!XA\#LA\%0A\)4A\+0A\. A\0HA\0,A\1TA]OHA]P0A]^DA]^8A](HA]1XA]54A]7PA]8LA]84A^G0A^U@A^V&lt;A^X0A^Z$A^]4A^ TA^$&lt;A^)TA^)8A^,,A^?DA_@DA_A\A_FTA_O$A C\A D8A HTA JDA LLA MLA N&lt;A QHA R A TXA T\A T A T$A T(A T,A T0A U0A W(A X(A YTA ZXA [DA \(A ]0A ^\A _LA  $A !(A ",A )8A *4A +XA +&lt;A ,\A -XA .DA /DA /0A 1TA 2XA 3DA 34A 5LA 6PA 7TA!PPA! TA!,@A!-@A!=DA!?$A"^DA"+\A"3@A"4\A"9HA#G@A#ODA#(@A#9TA#;\A#=LA#&gt;8A#? A$@HA$J A$UDA$VLA$W(A$X,A$ZLA$\ A$($A$-$A$/XA$/\A$0TA$1XA$2$A$=HA%@,A%B0A%D&lt;A%OTA%Y8A%#\A%8(A&amp;TXA&amp;U,A&amp;30A''UDA''U(A''],A''_@A''_$A''(HA''/8A''40A(C\A(L,A((0A(&gt;TA)F(A)HPA)H4A)I\A)MXA)M&lt;A)O(A)P$A)RLA)R4A)S\A)TDA)T,A)[HA)*TA)0@A)1@A)2HA)4XA)=,A*^4A*! A*"&lt;A*$\A*&amp;@A*''$A*)DA**&lt;A*,8A*.8A*1PA*3(A*6DA*8 A*9$A*:LA*;LA*&lt;,A*=(A*&gt;DA*?@A+@\A+BTA+CXA+C&lt;A+E@A+F$A+GHA+G,A+H A+IHA+JDA+K(A+M&lt;A+OLA+O(A+Q@A+SDA+U8A+WPA+W4A+YLA+[PA+[8A+\\A+]TA+]8A+^$A+_PA+_8A+ $A+#(A+&amp;,A+-PA+34A+:XA,@&lt;A,D,A,HXA,L&lt;A,Q\A,U&lt;A,Z A,^4A,#DA,''@A,*&lt;A,.4A,20A,6$A,7,A,84A,9&lt;A,;@A,&lt;DA,=HA,&gt;LA-@8A-GHA-I@A-J0A-L,A-Q0A-R(A-SPA-X A-*PA-.DA-0\A-1(A-3@A-8LA-9XA-:$A.&gt;@A.&gt;4A/O&lt;A/ $A/!\A/-DA/64A/?LA0T@A0VDA0Z&lt;A0_HA0%PA0)$A0,HA018A14@A15HA18TA1&lt;$A1?(A2B,A2E0A2GHA2H&lt;A2J0A2L(A2NTA2P&lt;A2S0A2VTA2W4A2ZHA2_LA2''@A2(4A2*8A2,(A20DA21&lt;A24@A25\A28LA29\A2?LA3C A3FHA3G A3HDA3J&lt;A3K8A3Q\A3S\A3T\A3Z4A3\,A3^HA3  A3!&lt;A3((A3/LA300A330A3:(A3=TA3?LA4@$A4B$A4I4A4KXA4S@A4T\A4U8A4V\A4WXA4X&lt;A4ZTA4[,A4\PA4\0A4]TA4 DA4 ,A4%DA4( A4,$A40XA44XA4:HA4=&lt;A5AHA5C A5HLA5LXA5RHA5U\A5[PA5_&lt;A5''&lt;A5) A5:0A5;8A6KHA6[HA6$4A6&amp;HA6''PA6(,A6*HA640A6=,A6?LA7@HA7A(A7CDA7D@A7D&lt;A7F4A7G0A7ITA7JPA7KPA7MLA7N$A7O(A7QHA7R$A7S$A7UDA7V@A7WHA7!LA7*TA74@A764A7:@A7&lt;DA7=(A7?0A8AXA8K4A8P4A8R0A8W(A8\@A8](A8^PA8"HA8''$A8+LA8.4A84&lt;A8;HA8&lt;HA9H&lt;A9SPA9]LA9''$A900A918A94,A96PA994A9&gt;(A:@@A:CPA:G,A:KDA:M8A:P(A:V&lt;A:XTA:Y$A:Z4A:\(A:^XA:_ A: (A:!4A:"&lt;A:$DA:%LA:&amp;0A:''8A:)@A:0HA:1PA:2XA:3\A:7 A:8$A:9(A:?4A;F A;G(A;H4A;J,A;K4A;M@A;R4A;S4A;T8A;V@A;WHA;Z A;''.481[8(O%-?J@F=1[=A1W8(_^\?JDGC 9PC/0QC//Z=9+9Z!T B/0FABDJC/-M=5C9[QT"B/^@=1XUH (NIO\&amp;Z1V3=6C2"6O;XORK,?] =0.K"&gt;8''":+7K_\A"8/.LX.-=4H""6'';P T$":77P"JKZ_-B&gt;0.K"2#."67;KR*K"2#X"6O;X@W7N__CEZ''7K_JK[_,-AP8$=8]6ERKO=@_7F9+\4(/7E(/7@$;F&gt;2&gt;6BO]]A;2D*FRKTP"E=1PG"_\QO]+;D)HH0T]UA?,U_4AB"?,D"?,C4DS7F60H&gt;6$GT9U,-H#QBO,W  ZK&gt;0/YM_\#_P#8U@QS''WJ&amp;";^K/*V)0)XH3?/ZE\M:)6&amp;KV8-Y[6)S_P N=7+7X/%QERX8NR\''7#''0;=?];_H:7BP_J@R:,VY\W&amp;Q%WU1%,[&amp;8,[F:G? $=!W&lt;HO5-6H/8G?%-AX#;&gt;QT&amp;NC$''I-89&lt;N?_7^73N-0$G2 D.+E%WE9$YU5\Y[F9.[F1.!&lt;N2/""&gt;@$U P^KXHM-]VDH&gt;0#7I@W$2J^6"=LH:DSIHB@9P"4^"6ZYY:]*BJ])AX6I#8ZQ ?,IS&amp;MV"26K&gt;1[*M_\""&lt;&gt;K.Y7\2@"9T?\5"?,O=28E,;&amp;%7H7WBI,G&gt;?5UE_\\&gt;3&lt;EWF]!^F2KUX-W1H/G":2[*JZ]BNG7RAUY2(ZS":PH):N_+Z&gt; ]&amp;X^"6!7[&amp;M5B@;&lt;N_]P&gt;V4UH (N&gt;=+7W?%-E_,G&gt;4E[&gt;1:K&gt;26K&gt;2:;&gt;1;7A?-ABN&lt;FH_]"Z_\D"?\''"?\&amp;+_\F=_] B@;;6/\N&gt;50U=0_7P[/7G(/7KX/7K%/7G/,G=4DHI0[5&gt;6J-&gt;0RK&gt;2^K&gt;2Y)&gt;0X!&gt;6@HC/."=1#8-AT#B 9@&gt;J''7-1T$B ;&lt;D\/7I!T%B ;;6/^&gt;=&gt;(UI (N?AG7Z/\&amp;ERDJC/0Q=6S9W!W;X/5,3(/7X/%,AP8$=:U4E_]Y./\&gt;=5,_"?\V^&gt;M)0&amp;GOQ+@8"3&gt;KR&amp;- TFIT^CBK&gt;14H&gt;6J&lt;&gt;3/7U1;3&gt;@ U"32CN8E/^6E-]FNKBD)$-/]''=56+1-OK,6K;\Q&lt;NIO^B&gt;G4U?G77HO%YK ]5M4I &gt;0:KBB8GC"S8%?"GE_\]K^O;J_,''MSS;J!:K!X.C#H@H=1*"A-*0.\/I,VADG(,=\6/;L_,B&gt;0,8YT6D&gt;1\H&gt;G[7D_/@A,_7D?^G+(/7Z@ NIKG8!!U?=1XG#]^[/M*KBLN+ZUADX&amp;\8G7&lt;-A+2K%H*#![)&gt;*VJKU8-MW59N"4&amp;KY;FG5@#;G@ZL&gt;2K(L/\%"?\+"&gt;3$"?\^"=9''0S.23[R&amp;.H/LBO\JL=[;GSC;G6'';UA8NIO"^=:TUP_!H&gt;3$F&gt;9_&lt;Q(/;B/^0"8/;L_\ "8/7L]VKA_-*=0 U&gt;46K=47700TNIO!=&gt;U$U?@&gt;KSO0_=1JKAY*.*9:6"0#R-% 5NE=XQQ=N"6&amp;*"LPH&gt;18F#_,P:S_7G(,H=233&lt;?\-=2T1;?,WG52KZG="[@""=2#7.X,EC"R+=&gt;TU"?,N&amp;#&gt;/T+QI5VS_"0#7H^/5=2;7GC_)&gt;08_TX-$^%=]#-ZK"9F)&amp;L.3,\NK.H.#^Y5^BO\VA''G7OO,$$6BK&gt;52KS_,="?-.BO^K''1WL-U =O55TST-_0M[Y-&lt;GLG08$&gt;JS9VQW&lt;!?,Q=?TFXE46&gt;1U/SU($\"98&gt;2,H=2DF&amp;O]45O]@=337W0 NIO"I&gt;J U=0L+7O,W&gt;1 +N/,DG(-G)6CKZS%_ZUVKM0#;F/H.=2''7JOK(=1(^"==)0S&amp;7/JV6,X/]BO-66!WI-&amp;UTUU=$S$5_,,KA-+GJG8'';+QWP-%5AQ5=^Q4] .MGS-;''NG08$&gt;I#8A!W70_,)0B_;H"(%&gt;2#;I.D''=1H^8(.+/)2^"?,[YT &lt;"5*KZZZH-P#;F0ZN&gt;0G''N?\N"0#7AO\)1/_#G?.Q=8PU3;UVNC5_U4-KX;;\7[N?2Q&lt;N&gt;=+7&amp;?\&amp;ERDJ&gt;I0DHP(N&gt;=+7A_\&amp;ERTJ&gt;@(DHP(NPO"%&gt;F8U?G7;RX/;C_!=&gt;4*K=0O&lt;D/\W&gt;AK7FPTNPO"*&gt;B&lt;UI0+;CPP''B 9@,8DUJ@(NV&lt;/8]QT)B/_U&gt;&gt;LUHP(N==C7%/]7ER3TO&gt;X^0(/C);J:&amp;FR5Y=FKBOS7I_\E=4;7^_-U=3W; !?;GH/;B%(/KCL0UO,V"?,H"?-2=4S;RO^-"&gt;&amp;K5I''Q*0!/5@UQ\S9&lt;P8,H&gt;5K;PO\P=5;7Y?\/=5O7_A?-"=1-4T7MTJ-G"30H&gt;1\*IT--^I:)G(.W"8.S*P#Y=:01"7-MAWN=ZZES"0#;W%W;^T4_=481EU%$.,_16_CY/:-$SC)I&gt;1L6G0;J&gt;H''7I1T*B/]&lt;=1DUJ0(N2/$.=6XUK@+&lt;Q/ ^ER4J&gt;1DDK (N2/"/&gt;GXUK0(N2- VL@+7J/30ESDJC)O7^__NESHJC%/7]O_NESLJC/\K&gt;L;8!!T4B ;J&gt;H?771T5B ;&lt;D_])&gt;V4UM (NIO^P]AT7B ;J=7S7"AT8B 9[=7+9[QT9B ;7P/],&gt;L0UN (N2/"SE#,JC/\K,?_;ES0J=?O7$!T=B :S=7[7&amp;AT&gt;B/ UAC&lt;JC/\K&gt;A;9^QU@B.G&lt;X1UAB ;J&gt;HG7DQUBB*O8E!UCB :S&gt;OO8#1UDB 9[&gt;AW8&lt;AUEB ;J&gt;@E4ETXJC)O8HQYGB ;7,_%.E$ JC)O8M? HET$JC)O8M?^"ET(JC%/85/%-ET,JC//Z=&lt;#9[QW;!/85=8[1&gt;0S9Z_\DA ;&lt;D\K9W!UH"?]&gt;?V3N"0TN&gt;=*]&gt;50U=8[:M_.FI_\D?V'';A@XNPO"^=:HU&gt;3?8O_,Q"?,9?C77AH/7A?_@=07;0@TNIO#V&gt;00US@(N&gt;=*\&gt;X$USP(NIO]T]AUNB/\7=8PUS0(NV?_0&gt;K$UT@),&gt;0$UTP(NIO^4&gt;D UT (NV?^T]AUSB*+8V1UTB 8$=:S8.QUUB/[;^!UVB ;;6/_M&gt;JTUU0(NV? ,&gt;K@UV@+;$_,@EU$JC%/8I__^EU(JC/0Q=6O8,AU[B/%-AE0JC/0Q=6[8,AU]B/''KAE0JC"S7V?_^EU8JC/0Q=6O9[QU_B ;7^,_8,AU B 9[2/"0EVDJC%/70_"9EVHJ#O,EEVLJC%/7&lt;O"9EVPJZ?,IEVTJC%/7$WLUY *,&gt;E0UY0(N&gt;:KJ&gt;K@UZ@(NIO\:=3DUZP(N&gt;=+70_"%EV(JC%/8,QY+B 8$=?HV[@(N=0/8&gt;QY-B 8$=?_7)AU.B 8$=6Y1EV&lt;JC/,3&gt;E?8,AU0B ;;(/\J=2(U&gt;6XGN[9Q41;W;&amp;XFZXB[/A?7U0^K5GV$PI_V%*F$"=PH=5\G,9&amp;\*!:0;#&lt;FP5!QNQ?;Y0^KXG]8W((H^2&lt;F#8(E2I-&gt;TA&lt;N?@?7RO%-ES/&gt;M],FC/."=:O8C1W7Y _]VLUCG#&lt;(,@Z-%''-ZG?-WA8-B(WKV_4B@]WJKP #;U0]#_W),G&amp;X(50[S/,W]G?]''A8.6''9:8#@"[90ZG#@UN^9#FG09@&gt;A#7\!U6"76Q\Y8HT+TE\911$6*KOH- V8X*BM$F#[NP)K&amp;K(H.\!JI:BLQ!AZU9(8N,"=.K-K.Q;P =A()$!7A["0 N?ADN&gt;=+M&gt;48U=2+7Y Y"=&lt;%H"6G;2PW8A S7J/\&amp;&gt;2(FC"S70?!GE[*D)F&gt;XSP#7F ZC=1@38O,O#P# W3TG&gt;2U&lt;ORVK&gt;4BK&gt;3+_H_\_   %-?@G=0.P9NBV=00H&gt;1(F_D93[56DBE&gt;NEUV[[,RK:H/.*L_A&amp;P NIO]G&gt;ITU0KR11A;%"9-K$U8H#HC7FH,E &gt;1.=1+;YX/;JX,2LH/;@H-_$7V8O@!OUNPF&amp;6RP](-2"5E1Y3]RBLH&amp;A[^!))N1"=FK1F/Q";2K,9_C+@!"=0DEX7]+ &amp;*KVX-,(E6K[(-7!D1-8L:*.X/E"9&gt;H&amp;G&gt;%BO\N0/,_A''OGZ+"K,@ NIO X&gt;JPU[)5"%6ZKY(-"_618BC;XQ$_ZO@U8[XE&amp;"6VKYYM/(VLHOS;OQ-+YAZU8.G&gt;3":&gt;K''YB9)@#VPMCOO-\E''::T+X.2";FD)G^3BM[VQ-@E&gt;4'';HQWE.5)QS5-[TEA[.&lt;[H.;+GG08$&gt;HW7&lt;1W;GX/7UO_5&gt;1.K&gt;1+;$/,_=9K;G8/7W?/5&gt;1:K"5C7IX.KU/,%"8-P=2VK"?-HA_\ =4#7H,[;H,C7H XN?@?7RO%-ES/&lt;F],F&gt;2,DN?0Y60XNIO\Q&gt;D@UQEU6Z(-O"5R''WK9-BO\?I0V/]:5="5&gt;KY612W(-M"7.,"K(H%_,WA83;F]IG=1&gt;K=1ZK8="K=0ZK1GR7WJ3N**Z3"&lt;:K362;R[@H&gt;1OQATR2^I6K)8.*)Y&gt;1";*K(7NRU #7D0ZE=2$ *SRK&gt;06KL4NKI8-E-F*_]0#7ZO,NE[)2&amp;W*KZ8-4_7%)\0#;I=,EX:E&gt;''H.*":"W''Z&amp;]B@;;6/_S&gt;W,U\P+;VO\NEWDJC-''8/O!CEXO5O&lt;H&amp;"0#;D#42&gt;2O;H-$1=0&lt;_=0RK5L.P=@ /A(YSZV5R"0!EX,K(:[[C4!?@":!3%%THK/_LEWHJ"$LU\0(N&gt;;W75__(E_.0O_^0A)O7JAU;&amp;X^T"90H=4\G3U:-L183"55%"$DH6PZO*9*W,8.+"92@"7^K[VRI[8XHZXTER(A-Z(-P"5B2YLZK+8.-&amp;:^)#G.L!YNABN\FI_\VEU-3[6E.^)*#G(.$&amp;I^.$ "($PV!#8:L%Y@HC"S#=68U]@+7Z_,FEWPJC$C?@B\.@_ LE_&lt;@@HF&gt;&gt;03?@XD@H(/?@@@"CO,&gt;=0.K????WB#7- TN&gt;=+7//_*ERXJC-''7-O_ME^\F-Y9&lt;ZQ=:A8.A"(NK 8-_#W6W]@#2(@Y&lt;$8^R"9:H=1RI$%^#/JN +X.=BM]^.C&lt;^&gt;8K&lt;S&gt;,F=9HD=0C2A;.[_&amp;I"^79[G7W7&lt;QU2B()CEWLJC//Z=&lt;?9X1U5B 9V=&lt;O9P!U6B$0D]0(NPO"#&lt;!W&lt;Z?,K&gt;F,F&gt;EPD&gt;4S7QO,K&gt;4S;QO,K=4S;QO\K=4S7Q@XN&gt;&lt;#77O#\EW JC//H(_#OEW$JC//Z==G9"QU:B 9[=5+7X!W78/, ?X37F/]?A:]0*(B4";&amp;K*)&amp;2,:M#(76:":^K'')B"%0#"A8FH!8*E"0!3!Y+EG? Z&gt;2C;9 ]MXU=PSGZ9218NII;8 1VK&gt;1S K_\O!P#&lt;W.799L+=9N799K[S&gt;&lt;LG&gt;0$1I_,XG0;&lt;D\/7.AU;B ;;6/\6E''0JC//;=2_84QU=B ;;./_"=&gt; U&gt;&lt;D==&lt;DF&gt;2/8Y1T(S$( H\!J;.7I3OO7@%CKI!=GAK&amp;)XT1O[FE^W&amp;252\"*-[ _C"S7$?_#EW8J=6O7A1U&gt;B ;7Y/\''&gt;MDU_P+8/_\"EW&lt;J=3;&lt;-1V@B/,!5!VAB ;7Y/\''&gt;MDU_P+8-?\"EW&lt;J=4C&lt;L1U8B ;7Y*G831U9B/#/=2PU_0+7G/27EX@J&gt;2GVEXDJC%/8-LXU&gt;12IA(HGO%1RSD=^/\0^"?\L=3:G"?]HBI'';D@^KRXR@S6D.RWA_"3^K&gt;131K_\''"&gt;2K=2N0#/]6BO/U=&gt;LU=2+7I/,*A ;J=7G:OAUMB/\.?Z$UJ +7_O\QER,JC,+8$?(;EW(J=0#=D!T*B/]&lt;=1DUJ0(N2/_L&gt;#0U  +]?Z$UJ +7_O\QER,JC,+8^O(4EXLJW_6!ER(J=737DQT+B ;J&gt;I'':K!U1B/-X=08U\P+7RO4!ER(J=737DQT+B ;J&gt;@C:RQVDB%,D!P+7G_6FER(J=737DQT+B ;7:_!B=20U! +7\?\QEX\JC,+8+?!6EX JC)O7X?(&lt;ET4JH?4BESHJC)O8]_(&lt;EW(J&gt;1K&lt;[AT2B :S=;+:OAVBB/-@?PHUL (N$?"E&gt;"8U\P+;VO\NEWDJP?1:ESHJC/0Q _(&lt;ET4J;O-#ESXJC/0Q=;[:OAU:B+1RESXJC/0Q9O(&lt;EXHJ''O-#ESXJC/0Q=;#:K!U1B/-X=08U\P+7BTPUM (N2-#791VIB/"-)AVJB ;J&gt;G#:MAVCB&amp;_&gt;MAT;B ;7B?^R&gt;#0USP+;:O3UES0J=?O7$!T=B ;7B?"&amp;&gt;#0U^ +&lt;@O0?ES0J=?O7$!T=B ;7B?_(&gt;#0U  +&lt;J?3UES0J=?O7$!T=B ;7B?"T&gt;#PU 0+&lt;*?3MES0J=?O7$!T=B ;7B?"4&gt;"&lt;U\P+;VO\NEWDJ&gt;&lt;#&lt;S!T&lt;B/_3=9HUOP(NPO 9&gt;E@U&gt;1W;E_,U=1T7M/\U&gt;1S;EO,T73_7EO\T=1S;E]?_&gt;1S7E_\U=1TEC/\K&gt;W#7&gt;QVKB/-A=2@U#@)!01VMB ;J=7#:OAUMB)[&gt;T1UFB ;J&gt;H3:OAU:B'';=/QUFB ;J=&lt;;:OAVBB%O&gt;T1UFB ;J&gt;I+:K!U1B/-X=08U\P*6?\,UQ (N$?!3&gt;#0U^ +M?I UR (N$? "&gt;OTU&gt;4C7CO,*?V77J/\ =4&lt;F=1/ :O\);&amp;#7EO-\G?-@&gt;&gt;0UO0(NV?!Q&gt;B&lt;U1JF).(/NBOX-5/,[&gt;5E\J_,EG/2Z=2C8+P^=*:#B2KA,U1:KUVU)S8(H "2XA.B?WC&lt;_"4Q[VDZJBG^JAX&amp;K!(.E" #;A@^,!92I(X/7E8/"&lt;H/7KH/7HB.''ZYHHC"S7FO&amp;IET4JR_6 ET8J=3_7!AUOB 8$&gt;B?9"QU:B";=B!UNB/\7=8PUS0(NIO]1&gt;X$U  +;GO6 ET8J=3_7!AUOB 8$&gt;A[9 QVCB/.U?Y US +7M?^DET&lt;JC"S8O_%;EWDJ&gt;5#7C!U1B&amp;[=FAUNB/\7=8PUS0(NIO^%&gt;YXU!@)[AHTJN/5=ET8J=3_7!AUOB ;7^/"C=7XU# +;HHDU#0+7H\0U$@(NIO]B=9 U$P(NIO\Y&gt;X$USP*X&gt;6PUUP+6&gt;7(UU (NIO 7&gt;X$U^ )6TQUUB/[;^!UVB 8$=7''9"QVBB$/;YAUUB/[;^!UVB 8$&gt;DW9^1U1B/-X=08U\P*.P1UUB/[;^!UVB ;&lt;DXG9"QUMB.[;[QU[B ;&lt;D_^6&gt;X$U^ *6RAU[B ;&lt;D^S9"QVBB)[;[QU[B ;&lt;D_^8&gt;W,U\P+;VO\NEWDJ=0L:EU,JC%/7UO%9ET!\A[13&amp;XN&amp;^0!EW;U&amp;6K$E,WV)[JY YI)7#7FKBO,"J/,@&gt;3W;RN?;@O\;=33.=0C7SA&gt;K=3)E=0?;J?DH7;5X+SQWAWJT_)-K(0#7@//LE]"&lt;RBH''VT ?O5''N&lt;/F=3-\_C%/8MO&amp;AEXLJ?CS;YQU!B 9[=3''9"QUMB)W;YAU"B(3;AQU#B 9[&gt;D79"QU:B''5QEVHJ#O,EEVLJC%/7#/&amp;KEXHJT?-&amp;EVHJ#O,EEVLJC%/8M?&amp;AEXLJ&gt;4'';WAU"B(3;AQU#B 9[&gt;E/9^1U1B/-X=08U\P*5P1U"B(3;AQU#B 9@&gt;J+7-1T''B//D=&lt;HU^0+;DO/&gt;EW,JC%/7D*8U$ +8@? JEYLJ[[&lt;U%@(NV?\7&gt;X$USP+7$O6IEV,JC%/8R?&amp;IEW(J=7#&lt;&lt;1U+B 9[=839"QVBB/]N?X$UZ0(NV?!W&gt;W,U\P+;VO\NEWDJ=;K=@QU+B 8$&gt;B?9"QU:B$C=CQU/B 9[=5+9[QW;HO9G=2C7+ Z-TK-/38,H=1[+=0;7M?\9J?\N&gt;1X_Q8-[[&amp;%OBO\J[1WR.$X$JU)GQ$U[3&gt;?0.=CQG08$&gt;C?9^1U1B/-X=08U\P)6?Q,U[0(N2/"V&gt;!XU]P)&gt;?SPUJ +7_O\QER,JC"S8N_%#EWTJ&gt;7''=J1UNB/\7=8PUS0(N2/"A&gt;#LU%P*S?YTUJ +7_O\QER,JC"S8J?&amp;@EYTJ&gt;6/=#AUNB/\7=8PUS0(N2/"I=2\U.?,''5(,EOV=]VH-P"4?AZN&amp;K)(._#Z^RBK(G^X!7"W"KU8-3''H./";27/]B)BO.O&gt;V7;N8/;%?5-=26K/O\''A_]==1DU&gt;5NK:?^1AP8$=5Q4E\^K0*V&lt;/(-/#(FX^0#XA#90WEZKTH-P0&amp;#(":ZK''86''$ ":A7"H^H%8"5^K\92K+8.:,[_R,P"\A7J"!I*K)0#70@_7@$CC&gt;2X^&gt;2ZKO46B&gt;1DH=1,F$,N"'']BK0X.&amp;^X-''"5YI"E6DBENAARA9U5RKJ(,*3T+-"0#7M?^DET&lt;JC,+8$/(&lt;EW(J=2?;1AT/B 8$&gt;DG9"QU:B''3;O1URB ;J==/:R1VBB/S&lt;ZQT/B 8$=8K9"1VBB%K;51URB ;J&gt;DW:K1U1B/W;41T/B 8$=&gt;39[1U1B%O;PQURB ;J&gt;C?9)!VVB/]/&gt;&lt;PUK0(NIO_)&gt;OLU% +A&gt;3&lt;UT (N2/ Z&gt;ZXU% +;X/6&amp;ES@J=2+&lt;&lt;AT1B ;K&gt;O+9]1VWB/14?X8UT0**&gt;E,UU@(N2-#791VIB/"-)AVJB 9[&gt;B''8:AW;D ](0U6$Q8,H&gt;1T)&gt;1C;M?,6;_,O=1T_3(.:)J;@BES7HO#(1&lt;9O3_, R_,YR@^Z&gt;3 U4+)FIB%[Q4UEV=C.;;3Q4A&lt;N$?"B&gt;!XU]P+;''_2MESHJC"S8P/%#EWTJ&gt;3H0EUTJ=/-:EUXJC)O8[?) EYTJ&gt;8+=F1T2B 8$&gt;A79(1VUB/,M&gt;7LUUP+6&gt;7(UU (N$? $&gt;"8U\P+;O?1:ESHJC"S78/%;EWDJSTLUUP+6&gt;7(UU (N$?]9=&lt;8U=?G7D_/1=3''8C_\Q?JO=[_!+A#U$YFBKT8-O0V#*":ZK''8:&amp;$P":A7&amp;H^H%7"5^K\92K+8.:,[_R,P#7D_0_A08$&gt;I+7KAW;G Y:W6U2VH,/"7+K"M(H=?8F#I^K$(.PBO^C&gt;2OG&gt;0O;K23;AO-I&gt;4G*HO\,G*^K''X:/%TQZ\6.KW(-O0&amp;[$":^K(8:&amp;$ ":A7"G^X%7"5^K\92K+(/4=1:&gt;+/\SBO,_=3,U&gt;60F%M6.-L*K2X.3XYH:B@:S&gt;A?9)!VVB%C&lt;[AT2B 8$==?8&lt;1VVB+-QEUTJ=/-:EUXJC/\K==;:Y1VBB/\Y?GTUM@(NV?_F&gt;Z(U  *F&gt;88UV@+;$_,@EU$JC/\K&gt;J[:L1VUB+O&lt;M!T4B 9[&gt;D/9 AVUB&amp;3;VQUXB/.Q&gt;0@UVP(N=0/8RO)KEWDJ=1+;71T4B 9[&gt;CC9#!U1B(\''EU J&gt;9G;@AUYB ;7B?_TQ1VWB/\T&gt;L(UM@(NV?_=&gt;O&lt;U=$ G":&amp;Z,+&gt;UBK$GQH%XT(-JBO,@A?\=OAUXB/.Q&gt;0@UVP(N2/_L&gt;&amp;\U  +#?Q0UMP(NV?^Q&gt;#&lt;U  *4?OTUV (N2/$%&gt;N,U=1[;J?,V&gt;;S7E/,*&gt;1YORL_&lt;*O\*==?7-_/_A?\*&gt;J#G3 [;Y4 UO?.450\NV? %==8U&gt;=;7HO_&gt;A?\*JK@&gt;G$ZKVV=$T@#7F/\Z3/,Z3_, RUAH1/3(=2C76@_I.K_J3JA!TQ8N?AG7$O)QEXLJI_-8ESXJC/0Q=8?9%AVCB"C;^AU[B ;&lt;D_&lt;ADX9@&gt;!XU&gt;:P&lt;=:PF???C\\@1ESXJC/0Q?0DI7@C9X1W;%337%0[??&lt;T$@B\UV0(N?AG7(/) EYTJT/-&lt;ESXJC/0Q=:G9(1VUB$7;_AU[B ;&lt;D_])&gt;V4U&gt;2+=[]&lt;FO&amp;I''XH-W"4&gt;&gt;Y-6K(X.!#*VQBK(G^8!6"W:KY(-1(H.)";Z+.,R4B@;&lt;D_\P&gt;1PU";"(.LF1BO"0&gt;2C&lt;,M GPE=(XH-Z"4&gt;&gt;Y-:K''8.W#Z*RBK(G]H^A"(BK\X-&amp;%X.7BM;9;QU\B ;&lt;D_]U&gt;"8U\P*_QAT6B ;&lt;D_]#&gt;K@UV0(NR_])&gt;V4U&gt;2+&lt;A_\*A-''&lt;D1T7B ;;P_ 6&gt;K@UWP+920Q\B/-''R1U[B/%-AE0JC"S7?O)''EXHJ&gt;6/&gt;_!T7B ;&lt;D^S9(!VBB)'';!!U]B ;J==QGEY\J&gt;6;73AT8B 8$=6%GEY\J&gt;138H!U^B 8''=537&lt;1VXB 9[=;;:OAU:B,URES$JC/0Q=:+:OAU:B,IREU&lt;JC%/7(4\U%0+;M?&amp;1ES$JC/0Q44\U%0*X&gt;[DUW0(NV?_2&gt;W@U&amp;P+;!( UNP(N&gt;8G7*O%0EY$J&gt;5NHEU&lt;JC%/79O!NEW,J&gt;7+7,1T9B 8$==S8PAU;B/.A=&lt;DUW0(NV?]:&gt;C,U=&lt;[;J/0SA3-S"3K[08/;%_"Y"8/7D_0C"8/7Y_\9=0VK80TN?AG7VO!NE_^3&gt;2C;&gt;@]SX8,&lt;0;NK&gt;;+7HH.K=??C,8/ZAP;J&gt;H'':OAU:B/\\?ZXUN0(NV?!M&gt;X$U^ +;$D UXP(N2/_TQ1VWB-COES,JC%/7!D\U%0+;/?#4EVDJC,+8M_&amp;&amp;EYXJ=57=)!T;B 9[=?O8&lt;1VVB/-IRAU!B :5''?%1EY$J%/-UEVDJC,#8K'',U=1[7H?\H==#7^/-[8"X_OX-Q^55BBM#;J/5-=2+8R0_64-G!3_\A!?-1&gt;45FJ$4^WX-*&amp;G*LBO,OA9VI*77I"0 NV&lt;+8,AW&lt;,O\ == G2;"53&lt;^)Z$,^?B@G[HB@[Q:B"8VL X8H&gt;0PG)8"."Y&gt;KBNJ/+&gt;L_&gt;E0G=0-I3?,GG$JKV''A#S0#YA0;7B?"1&gt;!XU]P+&lt;"_1 ES0J=?O7$!T=B 9[&gt;E_9X1U5B/,*LAU"B(3;AQU#B ;7B?"_&gt;&amp;@U%P+&lt;]?3.ES0J=?O7$!T=B 9[&gt;D[9(1VUB/,Y&gt;7LUX *L&gt;0TUX0(N=0/8X_(&lt;EY(J=&lt;;7I1VZB/17?DHUO@+7&lt;?^RES4JC%/8A?&amp;IEY(J=&lt;;7I1VZB/,XS!U"B(3;AQU#B ;7:_$D=&lt;8U=;?7D_.?=3''76?\Q?F-WA%.:YI1K"0#;Q/,O&gt;3G;]_-3=1C;L?]AG&lt;&gt;K,Y&gt;&lt;2P!P&gt;G;7D_/.A?,*0AU.VF]5UX,HHTS1=237K]K0=!?A":95*E HC/^:&gt;L77]!W7? ZL%8.P"9JK=8O;H&lt;_;AH-@"451XE%Z/$&amp;$N8,H&gt;3(&amp;&gt;0C;Q/-F&lt;O,@=3(_68/K)K:=-%+K\]NK=06K;MB+=P#;G Y&gt;X6A/V(-["42^"O\OBO._=6XUX0+8^O,IE_-+A)KY+;#K"&lt;*K,E&gt;SO@ N2/"C&gt;#0U^ +7DO4)ETHJ(? VETLJC/."=?G9"QU:B/,4RAU(B ;J=&lt;-GEY\J1?]UETHJ(? VETLJC/."74\U%0+;H?#4EV JC,+8K?&amp;&amp;EYXJ=5G=JQUBB*O8E!UCB ;;(/^]&gt;OLU% (,RAU(B :S&gt;FW:OAU:B/^ &gt;:,UQ@(NIO 7&gt;X$U^ +;D?1VEV$JC)O7+/)''EXHJ=6;&lt;[AUDB 8$=7#9*!VBB/,=?P4UZP(N$?_(]AW7U9S-6(/7JX/7A%GG&gt;1.%BO,F(PT (F2 "&lt;BK0+2.6H/*"&lt;A#$DDH=2@F=5/;PZ;;A_-CI#'';H!:K&gt;0WDUO\([0#1]0W/^KA/"5BKS%M&amp;LH,%"5J6!-$H&gt;2XF%_,&amp;73;7O7$HXS E'')RU#)&gt;KBJ*__WY4\''%+G6&gt;K\IMY(P!8U0WH]*2D-8,H7+&amp;,1;].)%,__H.@"W2GB@8$=3+7LQW;GPZP&gt;0GIU/\#^ ! M0V^%IVN''8,H*)==]''Q2^V,_[8-3$%Z"BG!WA\15*HV8"0#].Z3G-6:&amp;WA=&lt;"7&gt;I_HXH''+N]"0W7E^WV=0@_"=E(.DR BO-E/ U$%8FS":FK*Z._/H/N":13#E(H=1,F"_\FL=C;IX/;GX,6Q(/;@8,!8''** P#7N5\E+(BW H-5"6)$]4*KL8-=+HN0B@:S&gt;@?9)!VVB/_#&gt;:,UQ@(NIO_ &gt;OLU% )P?EXUZP(NV? U&gt;O@U=6''7D_3\&gt;1G7\_306@YUHPV^%IVN''8,H*)==]''Q2^V,_[8-3$%Z"BG!WA\15*HV7"0#^.Z3G-6:&amp;WA=&lt;"7&gt;I_HXH*L*)"0TN&gt;=+70_"%ES77I_, &gt;2UFK-C;8@ZK??&gt;3#6''?@BQ$''O??5%W]?0AJOWC???!"H@#??&lt;)]=O??%+"ZAY:T%X:_"0"*''756]GI9Z1=/"7NRU*HH^E\E3GV(![^KBM:9+L^7[*Y\G72K_8%&lt;! #?@A08DO&lt;@OT7-A_&lt;@E&lt;0H?0@@&lt;J+?@AQ==O&lt;@@3J0?0@T__S?@@ZN.@#-A76I 8*A"0!&amp; )Z;G?^:6P\NV?_=&gt;ZXU% +7E?-JETTJC/.I=&lt;[9-!VYB/,S&gt;:TUZ (NV? U&gt;O@UQP(N&gt;=+70_"%EV(JC,+8\?)QEXLJ&gt;4W&gt;ZAUFB 9[&gt;CK9%AVCB,/=%AU+B ;J&gt;I_:E!U5B/,*?]8UQ (NV?!U&gt;VLU]P+''?QPUZ0(N2/"E&gt;&amp;@U%P+;FO9,ETXJC%/8P?&amp;#EYTJ=0K=&amp;AU+B ;J&gt;@K:RQVDB%,D!P*J?#@UQ (NV?_@&gt;YXU!@)[AHTJ=8W=Y!U+B ;J&gt;DW:OAVZB/_N=2\U&amp; +;E/7@ETXJC%/8A/&amp;IEY(J=&lt;;7I1VZB/\A?OXUZ0(N2/$"=7&lt;U&gt;HK;J/2BA3M^XR4-W+W#G/"B&gt;2+&lt;  _;X/\8U?\TG+JK(X:;&amp;C9[\F"KV8,&gt;8G#F":"K(8:&amp;$ ":A7"G^X%6"5^K\)2K+X/7C?]T*H/7Z0 NV?_(&gt;18US&lt;I(:Q:&amp;"9&gt;M)9HH. ]8"G"I]8-W"7N\":&gt;K.+F85K@H&gt;KC;HO/&amp;A4-^XT]O[Z/LG/_/&gt;2C&lt;C@_;B&lt;5G=0\^5H.&lt;)+OGBD/KA6Y=L6JKN@ N=;G8N/)''EXHJ=57&gt;Y1UHB ;7B?_"&gt;Z(U  +7PO6*EV4JC)O7-O)''EXHJ(?5YET(JC"S7\/&amp;*EXHJ&gt;0/=1AU/B :S&gt;HO:K!U1B/-X=08U\P+7CO2&amp;ET(JC%/8S_(&lt;EW(J=9-RET,JC/,3&gt;A_9"QU:B/]ZRAU0B 9[=?;:K!U1B/],QAUKB ;;L?_F&gt;W,U\P+7KS(U\@(NV?_:&gt;ZXU% +765HUR0(N&gt;3O70/#3EYXJ=91HEW@JC//Z=7(V&amp;0(NV?_Q&gt;DPUTP**=0$URH-[\&amp;%UBO\R=1''N&gt;1''M&gt;2AIS4#G?N#7HLHG+UZ:\,&gt;KBO\U;_\O=3_7OR#7B_,TG0;71O!-=&lt;8UK +8\0P-B/-"&gt;0&lt;U=2(GRF&gt;[,;B)''&lt;H_3_3W==0F=6F&gt;=0?"G8/SYLP9.=N9);VK2P#NW_\Q&gt;5P^?A,F&gt;10&gt;O?,YN:7;DO]QG0:8&gt;R;7\!V\B/1F=0 U''P(NV?_Q&gt;DPUTP**=0$URH-[\&amp;%UBO\Z=8O7D_0O?V77HLHG+UZ:\,&gt;KBO\U;_\O=3_7OR#7B_,TG0:''=7[9[QW;"?-N;DBK?F#75(,E=23^6?\&amp;=2 5:/,ZG?-OA/,QAI8JC%/74_!DEUDJ*/\IET"KV7I)UP"K=9_; _,/;C*K?HG7HH.K0 V-U+)238,H=1W-=0?7M?\=JO\I&gt;1P_C,+7T/^@E_,#A)#;NO\MKO\&gt;"0#7X/\T=2_7 O]&gt;&gt;1O7I?-_G?-I"?,MH(K;N0#7I ZT:L[@:H,H=0#OK_,3&gt;3UDJ?,JG?,Q"7S) ;@HC.#8+?!6E_\#=0LF*)^V*Q:T"8^J%X H=0PG[89(#W^KT(-+_G1''V*!P&amp;$&amp;KBO-"&gt;1S;I?.@&gt;7;7D?,''=5?7R_\V=O\;G?,&amp;A"9GU";;BD_)=3O7M]K+=0(^=1FK("6SY  NJ/^4&gt;D U1H.&amp;\I-DBO\Z"8+LAZ*V%*$^%H.Q")VHBO\DA6&gt;N[(57"5.KZ(A8\&amp;&amp;]X)Q]"0#;MR4!&gt;43;Q. #=3P_=1^K9-2X=1TH&gt;1(F^TU/\EVKBDQ 2?SV''OG,G0;J6O_''EX$J&gt;J6$EX(JC/_I&gt;F77DQT1B//)=5LU=2(GRF&gt;[,;B)''&lt;H_3_3W=;DF=0NK4ZV&lt;1,WO*.:K=0VK=0Q,;%GPV,YF)O,D"0#;&lt;0[;GC8?&gt;1$;+_,P=5D_C,+]=7HUJ+;;D_]!G/_\&gt;V7&lt;%O,Q=?;;H_,7A/-3V?,=P1?8Q/\HE_-)&gt;4\GP&amp;V82L&amp;1.MP_C%/74_!DE]F;Q"$$WD]DQ%+Q;^&gt;&lt;4]@_[O\IE_,TJO,I&gt;37;M&gt;7;C?\UG&lt;&gt;K.*R-0@!T=2C9[_0O&gt;1G7 ?,ZA6''AV:QH"0 NV__B&gt;C0U7[QZJC%WR3;;A7_$0&lt;" 8?\LG?^[&gt;2@U=7S;NKH(&gt;2;;DUW;[Q:K&gt;3?7AT*&lt;Z #7AS?;[X.K&gt;0[8UH.K&lt;/,3=@V:%O\(-(/7X0 N$?!.=&lt;8U&gt;5G&lt;G?,Q&gt;KW9[_2#&gt;1G8C_,9&gt;?G;DP\N=0/7U?^9EY&lt;J=5#;4AW7[_\Z=337Y_]&lt;&gt;2G7K?-''G?,O"?,"U$7;S@#7LPZ-4L^36H/5"=MA''_,MBO0]"?,*"0VH^H)7"7\H&gt;7C7G_,6=6(^C)#9@O"OEZ@JC%/7]O!KE_\9=?;7D_2T?Z0G[HB@[Q:B"9BL X8H&gt;0PG)8"."Y&gt;KBNJ/+&gt;L_&gt;B374/\QA0;;6/_M&gt;JTUNL@F)9^Y)Q:W"9.J%8$H=@]1#V"L^H,HK%9_LA=JO2;W?H\G[HB@[Q:B"8VL X8H&gt;0PG)8"."Y&gt;KBNJ/+&gt;L_&gt;J[^A0;7B?#N&gt;HPU=2G,A**W%*$^%H.G")VHBO\DA6&gt;NZH57"5FK[G-&lt;Y5"(SI-C"0#;Y/,#&gt;2?;]?-1=2S;M_]YG&gt;6K3Z;C7P"]K^VK"? \&gt;;"K"?,Q=3*KATQCLO,E&gt;044=_\*=3GX:/\SG/NK/ER SP N$?_+=10U&amp;G:R???8&gt;&gt;"K???0AA H_/??=0_0!O??=O P???4&gt;AC???\G&lt;INWG(.Z$9RW%0#W=1(U=7/8W?,&lt;"?,_&gt;=[;J__V&gt;3.K=8[&lt;W0U^P63??;OF*H/??=\9V@!O?0@7?+!"?0A^@T#$2K_DG(.6Z--"3P N=:78I__^E_,JA?,U,B#7W/]@1.;7EQ;77O,^&gt;;0GL'')YO_??+O98???2@X"881;7D@_7J""0O!9F"5%/YE@H=9?;HO5-=2C76@_I.K_J3JA!TQ8N?AG7P.0U&gt;RW;F_5JA???/W]@?0@-;'';??=ZH0O&lt;@TAFBG/&lt;@E[_O"?&lt;@E](]?0@BO%3?@A3SL?&lt;@ARU!BO&lt;@EI+!?0@C+\ZK?0A;*[+??&gt;A,BO??=6M@A_??&gt;G;:???==A#???TSL????.5*???1@\.K???8=C&amp;K???75 S?@@BIVO???K63?0@A#:/???73]O&lt;@@.I;????5TC?@@#.0O???:=\?0@HE\HHC/.\=0;7.QW;._\*=;''7CO\Q&gt;0372?,*&gt;&lt;/;C0^L&gt;1DEC/\K&gt;R[801VK^G53\F8H83$E.+6%.H/J"&lt;BH)566X[I"''&amp;JKU8-WZ5YSBO-4&gt;82K==S;J(.K?V77J(.K=8#V6_^C&gt;=[7Q8/;5/ 3=3;7Q0VZ%Y&amp;P%8.(":I/"7THC"S7V?_^E_^HA:*V%*$^%H.Q")VHBO\DA6&gt;NZH57"0 4Y6\3G?31=2C7QP_C2O\U&gt;8K7NH/;V__$=437XO,3"0TN&gt;=+.=&lt;8U&gt;&gt;_7F/_''=1G7B_,Q==_;F//W&gt;1C;BP\NYO^/=&gt;HU:?.VA_&lt;@D#"T???OENS?@AGG[O??5&gt;,\28.%"::V.ZLHZ/\DAXZH[W%&gt;"8ZK???=G_S?@@LKQO??=^HL?0@Z=K0H&gt;2[8F_??&gt;]50?0@PZOS?@F8"$O&lt;@QI\L"&gt;O??7WH\/??*$U A_??8#E*?0AA= S??=Z50/&lt;@M\R\??&gt;*TFJK^H-3!V)?BG3;C V9#86R*(/?@A''^MX/?@AL-C???&gt;,/H?0@S"W#??&lt;7W3@#??6]+QO??(U1,"3K?@IE/''/&lt;@V)L4??=M$FK??#A,3O\$"0TN=;G:@A[9[_,*?HXGQVU R%%,*K$^&gt;J3;J/2FA4U$XD-Y[J"9G/",&gt;2+&lt;1@_;AL=H=0 ^5H.&gt;)[#G)5SE[MNK3X.6(+3FBDLGC,+Q&gt;V4U?Z0G[HB@[Q:B"8:L X8H&gt;0PG)8"."Y&gt;KBNJ/+&gt;L_"?#(=;#&lt;"/\*"8/9[_,*"8/&lt;!O.5&gt;HPEC%/J&gt;K@U?KC7HO_XA&lt;.8-\?G*V)KG/2*=2C810_7B4''O&gt;0\^P(-Z\FMOBM$GC/\K&gt;A+9^QW??0:C5???$70)??&lt;;?33??4X@1O??R&lt;MT?0A&amp;)VC??3X&lt;+O&lt;@&gt;E* ?0DX3L3?@DX3MO&lt;@&gt;OWC?0B@B#7?@K3INO??&amp;C%X?0CFM,#??0_F*A?;U?1TEY&lt;J&gt;A37DQV!B ;7KO [&gt;O$UOP+;&lt;?.RE_-2=17;MO]*=6?7FO\&lt;=6T^"?&lt;@W8)&gt;???(E(#?@EI;)/??5RHL?0@?&gt;]3T*_&lt;@J,],08/K"8&gt;K$H*SBO,"A(98#HFK_H/??&gt;F6AO??&gt;&amp;_0???''S]S???SO''O??;NX$???C@%C?@C5J0O??*;84?0@"24S??90G&lt;H,H&gt;6#;G/,4&gt;7H_C)''70/!HEVLJ?0C)6U!9E_&lt;@@"Z(A-R)-\NK28.O"9BJ$0#;H ZN^H2A"72K???#=$S???,4?/??:LFJ???6Z[+??&gt;6L#O??4!"T?0@2_++??;2MTO&lt;@F33,??&gt;*.6RKBO,9I/,A&gt;4W;Q/C;@O\:=3#2=0G7PQ&gt;K?0@&gt;K!S???RQ;O&lt;@MV^.???*Q63?@B-*O  N&gt;E#8F?#9ES4J&gt;?O;$!W;\O\]&gt;3[7Z/]-=1+7OO]%G(.1!;BC+P#MA&lt;:#)&lt;R?*F5TG/57=2+9]0_7GC[X&gt;2$^&gt;0"KUEI5[D?@P*L/"0#;ZO,^&gt;3S;\!&lt;N2/^%&gt;D$U;:S??9/UPO??+"+@??&gt;PDFK??&lt;8],/??/&gt;&gt;^??&gt;48$;??;OEXO??33* ?0@?Q:;?@GN8T/&lt;@\.GJ?0@0:[+?@D@^M/&lt;@SAYFG? &lt;Q1W?@G5B4O??6+]L?0AE/SC??8YH-A;??&lt;&lt;9VH/??=U:GO??;3Q&lt;???]&gt;U#??&gt;1.&amp;O??6I^N?0@XQQ3??=AFIO&lt;@CA_P???J]XJKBO??W1ZG??&gt;[:W''??81/8O??PY@ ??=A)XG?@FL4N/??#E)??0B"2&lt;[?@JCDV/&lt;@YS.&amp;?0A3&lt;(K?@K(M_!&gt;K?0AH'';;???JZXO&lt;@O0S^???$- K?@CH4^/&lt;@B7Q&lt;?0@C,FK?@@-/7/&lt;@@WZH?0@N24RK?0@IJW"K???=$FS???&gt;.U/&lt;@@Z 0????0LS?@@_H&gt;O???-ZH?0@GD+C???3;)/&lt;@@=\H???3$^3?@@IBCO??&gt;KC$?0@AT^3???# !O&lt;@@E]L???''&amp;6PH?O+7F \N=9O8[_ UES&lt;J&gt;&gt;9FE_\*A4!/&amp;;N0*Y?BG&lt;7&lt;5?\*=9#7S0[7F.G*=2#7I##[&gt;20_?A F&gt;10&gt;O?,YN:7;DO]QG09[==C8QAU%B*/7BQUG"5-.ZT&lt;H60^%&amp;IR''G)RK#8*U"@#7A@]/#&amp;:M]8,HMFM''L1?=(/\ =:8G+T&gt;;[&lt;&gt;KBO\V:?\N=3#7MSO7D/,^G09?=6[7/QW7F_\NA&lt;F$\%9]\'')UG?,N&gt;0HU;0[C1FIRG?-BA8-Z#7Z^Z@#7MZXF_IQ8%X.?BO\=A8/P_L1M)*&amp;&amp;(;&gt;K1P#MY^;;J1;;J?]Q&gt;2+=[_\*A :S1_"OE_\ A)CU0KO*"="K/F"KUH-V[GX ] #;A''TE&gt;1-1TT&gt;K&gt;0^K&gt;2#7@3O7TH/7S(/68IS7L@#;I ZFOUI IX,0"5N0"&lt;"K1+B'';98H&lt;Y&lt;E=2"''1LJK=0TH=2H&amp;7_-C&gt;0W;PV#;V18NIO S=3DU 6Y=Z#NKR(-$''8.,":FW%*:VBO\;/0V*%^J\"?VK=0L64O,]"?,%"3MF"_,FBO\[A(2&lt;+JON";2K*7^K[X-5 XM$_0#;QU EQGY(W(-E"4B:&gt;0C7TX/7NH/"2X?7B  N&amp;_ .&gt;A(U( (N&gt;6;7SO$HE_&lt;@EHZ(?0@P^U#???FO8O??:''@ ???.SL3??&gt;=3L???;+L4???+#L7??&gt;/$7_??;1,#?0@QV6S?@AJ$''O&lt;@D[L4?0@P#L7?@AEL3O&lt;@EGL3G?-KAO&lt;@ATT_"?&lt;@AO2,?0@@O/+?@@R&gt;M_&lt;@@GZHBO?=&lt;4*@A???*$#6?0@=P@C??&lt;&gt;7B/&lt;@Z&lt;@@G/&lt;@C!WB"?&lt;@A_]L?0@@:#7?@@3ZG/&lt;@@)G,BO&lt;@EA#T?0@DAQ&gt;K?0A6@#+??&gt;VHL/???''E&lt;A_??&lt;MH,????F4S???9NEO???&gt;&gt;&gt;???&gt;U8:K???6G#ZK???8J4K?@@CC/_??&gt;%2,?0@AO$K???QX%O&lt;@@)IA???;/B+?@@P)@????U-$?0@K)8C???7,R/&lt;@BR$&gt;?????WC?@@]*_8/?@@\G @#9DP_?@E)S.O??1L 2?0@:+D#??:\73/??+.(&gt;??&gt;=E\K??;1$FO??,I/(??&gt;.8\+?@DK!2???/Q86?0AQG#T^C//Z=&lt;G8)QT==2W;HO,%Q";P&gt;&gt;@F"4.%X;=&lt;BE,G[HB@[Q:B"8VL X8H&gt;0PG)8"."Y&gt;KBNJ/+&gt;L_=4 G_X&amp;C"(FKBFZB%+,_=;+YA0;^=9_8&lt;AW6?OC7J/#0=6''7D_1*A/,\OCX-G8-N(V21Y[!_/8GO"0#7DP]HZ:^)*Z6$0!&lt;N&gt;=+70_"%ES68A**V%*$^%H.Q")VHBO\DA6&gt;NZH57"0 4Y6\3G3=FK-C;8@\6.FG''G**K)H:$$0#-A76I 8*A"0!&amp; )Z;G?^:6P\NV?]?KQT3+6_"G)&gt;K+(6''# #7A@^C"XNI!X,H]76W*Q?9K?])=1G&lt;7O,Q=7DGC/\V&gt;@E4EZLJC)38,QZ$B ;6=3;7&lt;!V%B ;J1?^GE_-&amp;?0BJRW%^?0BG-(_?@L2Z(O&lt;@ VU ?0A(=#??@O4I0Q:K?0BF1^S??=2@@O&lt;@\^JP??&gt;!!RC?@G9P9@#???"@PO&lt;@B Z(??=YCYJK?0@Y#]K??=$=\@W?@E%+!/??^E2,?0@-1^K??;](L/&lt;@@J7T??=+9?@H?0@@@T#???7E8 W??4-O8O??_/:8Z"???=W:(O??1PU ),L^&gt;JS;H0\N=4#9L?"6EX-:!WU&gt;\@#7F4(E''+RX+8.1"?\(??&gt;K,JR&gt;??&gt;[S52KPX-NXFL6BC_;U/,)==[;N8/7!/1_"?."=2*K"?^"=1/7( V],JF^(8.V";VC"6DHC&amp;S7+?] E_,N=&gt;S;IH/7V?2Y!7&lt;E]C=6!F6K[H.I$%6OBI+;C V,_:NE''(/7C(.+=0F0;P#7I/ YAYV&amp;#(:P"9"K*W&amp;P"@",=0PEWZM(%''FKR8-9X7%ZB@9[&gt;M[9[QW&lt;.O,Q&gt;@$F&gt;3S;X_,/"8-H&lt;(/;M_-#"?,Q&gt;K"K"?\Q?@"K=3W7X?\3"8/NHH/7L?]!AP;;L?!_&gt;K@U?C#;A_^MA"+;A/,B"8-H0H/;A_,Y"?,E&gt;ENK"?\E&gt;:ZK=0S7F_\@"8/NVH/+=0XEC"S7&gt;O ]EZXJC"R(=6@U&gt;1;,L/\+G/\%"&gt;#$#O\"BO,\A(]BY6UI"4:KW;"K2X.?*[R:&amp;JNQ%H2&lt;"0"K:_,@=5W7$8.K=1G&lt;IX.K&gt;1G7A?-''A_,K[FH5"4LHC''7?@L&gt;___&lt;AIM* E_??$I)E???%/_S??&lt;KFO???-4OV"???#BNV"???_@D@?0A(U&lt;???:[?@O&lt;@. T_"?&lt;@-!\J"?&lt;@VS=&lt;?0AI^PO?@@0&lt;[O&lt;@&amp;8[=BO&lt;@@^&amp;8/_??\%[J"????&amp;MT???P:H@E???9RW+??;@G O??3F,B???(D@C??:"NU(,H??&gt;''\V#??&lt;$7#_&lt;@G.$&gt;?0@=E,K?@C7L3_&lt;@H_ZG?0@)L3O?@F5 !A??@EWD7O&lt;@[QL4A/??^W^N?0A/;L3?@R_-C(.K=0?&lt;_8.K??&gt;]K@ EC#G8)_\@EX/?@E9C%/??2+&gt;&gt;?0AB#YC??9O;IO&lt;@FJ-DBO&lt;@^TT^?0BS#12K?0A+=G+&lt;SX.K&gt;0??@P^AA(/??85&gt;&gt;/??]1L4"???$.3L5H,E?0AKGJ3?@C[#UO??8SL3???Q3L5U??&gt;,)?A6???[VA@_???+X9ZK???I/F+?@@?@@O??2Y[I"0#??9TM._??&lt;#-&gt;??&gt;=NS;??=,F0/??''XV"?0AF=0+??:A:W/&lt;@%@#6G?&lt;@ZD 2"?&lt;@QNHL?0@[.2O?@B-!A/&lt;@C&lt;X%BO&lt;@E-84?0@HTNW??=$C%/&lt;@]OUS???''#L;???ZI@0W??&gt;FC%O??=CLR??&gt;?%TC??&gt;]&lt;Z/??+.5P"0!^???T:0J+?0@UIO;?@@KL\_&lt;@@.9V?0@AH+7?@@T@P!??@AVLRX/?@C/:W???:./T?0@]'';:K?0BOC)"K?0A)&lt;V#?@ED3PH/?@G''L0@ NN?^=&gt;W U??&lt;03+&gt;K???O/PG??6?N&amp;O???G[B??&gt;A9I0H????Q8C??&gt;YL3O&lt;@"S6,"?&lt;@@V2K?0@W_J0E?0@DH5W?@DQC6O&lt;@DD;Y?0AMO73?@FFY&amp;(/?@DJ !H/?@CA__O??4!D("???0^;X"???4J;Z???#KP;??= 6QO??2W+"??? 6EHH???#$/K??&gt;?7B/??T\T^?0AF\R"K??=&lt;=&lt;;?@B/)^_??;+XDA_??&amp;=$J??&gt;9?B+??=,A????2)-$???8QO;??7G0/ #???:P//??9ZQ@?0HKY\RK"?\W??:RFMRKA_&lt;@CW63?0@#''+#?@A7''J?&lt;@C* 1?0A@PLS?@BJ''[P#?@A6V2/&lt;@C8!3?0B&gt;*,C??;I\;X/?@HK"S/??1A+"?0@X2KPE?0ADV6K?@CU0)O&lt;@H(&amp;&lt;?0ACDJRK58/?@H#EXO??%8BD?0A N*C??61?_H,HC%/K=80U&gt;7[7I&amp;[,=2_1:_\\G(/_\K\.3_??1DX@?0@*X0C???":@O&lt;@B)4@"&lt;4H''^K(MNW;DCD3K.M9A8/;ZO\&gt;*(/;EP!JW%%OUER3=A8NVO]Q?0ES540U?0AGFMS?@D]KQO&lt;@QB8V?0@O7WC?@BR9E(/?@A&gt;3-(/?@B!LR/??=V5P"???4YJ0"??? E(]??=5N2K??9=TN_??$,S^??&gt;60B H??=*HO&lt;D?0A$I63?@C%)AO&lt;AG-"T?0BV"X2K?0C#__RK?0A9LBC??;B^]/&lt;@R&lt;? ??&gt;]XX*K??&gt;&amp;O_RK???I.%;???L[:O??/0^.???K3!PH?0@1E S;F/57=1(GC/0#=4#9[QT;?#W[A ;;-_]H&gt;V4UN?8560[7@/(5ES/&gt;M],FC$C7$?%/E_0I&gt;6X;=6X/&gt;6X;=6[;1-G71/]*6?-*90_7Z-/;Z/ IA ;&lt;D_^Z&gt;V(UH@+&lt;A P!B ;9M/+L&gt;ZXU% +765HUR0(\&gt;3''&lt;&lt;AT0B/\*?O@ULP(N&gt;L_:%O#3EYXJ=91HEW@J?.S&lt;O1T0B/\*?O@ULP(N&gt;E#:I_#3EYXJ=91HEW@J?\K&lt;U!USB*+8V1UTB ;8$O''3]AT7B/4M&gt;XPUNP(N=7+92_"0EU4J&gt;\,DW@+&lt;8?\QES$JC"S8_O"0EU4J&gt;\,DW@+;+_\QEU&lt;JC/#?&gt;&amp;I4ES\J?FN"ES,JC/_)&gt;##8,AU]B/''KAE0J?C''&lt;&lt;AT;B ;7^/''I&gt;K@UWP+920Q\B/6JR1U!B ;J&gt;C_9-QVVB/]Q?RHUJ +7_O\QER,JC"S75/#5EYXJ]O4LET8J=3_7!AUOB ;&lt;D_]Q&gt;[TU% +7E4LUM (N?AG7TO#5EYXJ=1IFEU,JC/\K&gt;D79-QVVB/.:?D8UO@+7&lt;?^RES4JC%/7=O#5EYXJ04&lt;UX *L&gt;0TUX0(N2/ 4&gt;[TU% +C?\0UQ (NV?_3&gt;OTU% +7/_35EV,JC,+8&amp;/(JEWDJ&gt;5#7C!U1B+[=)1UFB/\*&gt;)HU]P(NV?!T&gt; XU]P*NS1U1B/-X=08U\P+7,/4AEV,JC,+8&amp;/(PEWDJ&gt;5#7C!U1B+[=+QUFB/\5&gt;-LU^ (NV?!_&gt;$4U^ +7B$&lt;U\P+;VO\NEWDJ=;K=@QU+B ;J&gt;I+:C!U1B/-X=08U\P*6?Z,UQ *&gt;&gt;# U% (NV?_1&gt;[\U% +7YT&lt;U\P+;VO\NEWDJ=;K=@QU+B ;J&gt;I+:D!U1B/-X=08U\P*6?Z&lt;UQ +;M_+WET4JC%/7G_)MET4J=5C;Y!U1B/-X=08U\P+7,/4AEV,JC"S7)7PU)0( =7(U*@(N2/"Y&gt; &lt;U\P+;VO\NEWDJ=4#=@!T*B/]&lt;=1DUJ0+7J_!OEWTJC"S8N_(FEWTJ#4&lt;U\P+;VO\NEWDJY/4XET8J=3_7!AUOB ;J&gt;H''7I1T*B/]&lt;=1DUJ0+E=&gt;DU\P+)=7,U]P(NIO 9&gt;_(U]P(,S1U1B/,Z?P0US +7M?^DET&lt;JC/_)&gt;X_:AAU5B//Y?Q4U! +7\?\QEX\JC/]:&gt;M79QAU5B#G&lt;D1VNB/,  QVOB/\!3AVPB ;7B? 7=2$U?0A(DR F???]&lt;R[??&gt;O2,O??5F(&gt;???0CUC??=JS]H,H&gt;044=_\*=3GX:/\SG;&gt;K-72,[*A9%''*XYP#7HPY9=2+;C.+;QH,H&gt;6[;H?,/&gt;7_;\_\$&gt;3W7VQ?-"&lt;6.0=4H''R/%"8/7J&gt;BK"=,6"8/7M?.8"8/;D_\:"0W???:X%O??&lt;Y-$???=62S???NS&gt;O???M-$???44JPH??= ,NPFC%/7-O!DEU$J=037@AT8A6GKWZ]M"0#;EB/;D_,;&gt;33#&gt;0S7FQ?J";F^/&lt;XHP ^K???534#???;K1/??=$4\???=,/K???[#''@#??9ZARD#?@COQ* [??&gt;9&amp;Y/??=/$V???+CP;???,F:/??:K+""5ZKZJF@-@#;IPZMK^%P=2NK?0A3=$ZK?0AQB#;?@BS2[?&lt;@IQ50?0ACCYDH?0A18 3N??&gt;#P1PF?0@AI:3?@@%SQ?&lt;@@IU@?0@I*7"K?0@J@TDH&gt;LHGC/\K&gt;EK9-QVVB/];&gt;&lt;LUM@(NV?_I&gt;OTU% +7X$XUV@+;$_,@EU$JC,+8P?&amp;5EYXJI?3AES JC"S7?_%-EYXJUO0#EU8JC/\K&gt;A/8&gt;QT=B//3&gt;9HU"???M@U ?0A3*O[??6!]K?&lt;@.L],???(.\G??;):8/??81XD???VEK3??&lt;:E?(/??&lt;!G+(-Q0&amp;[$":^K(8:&amp;$ ":A7&amp;G^H%7"5ZK]I.K+X/?@CB"6O&lt;@E]N6?0@\(M#?@D.&gt;M/&lt;@LHPR?0CK*[#?@@2RJO&lt;@^\Q\?0B":^6K?0CH/B$H=73;H_\/&gt;6_;ZO,^&gt;3S;\!8NV?_B&gt;D UX0*J=0TU&gt;3$&amp;&gt;0G;QQ&gt;K??= O#W?@EE[)/??&amp;JE\?0BH,FK??&gt;1=OO??.!74???#G4K??=WVAO??3&amp;WI"???2A8("5GBY.RK)8.##*ZRBK(G^X]8"W^KU(-4&amp;8.-"?&lt;@LK[*?0@U9ZK?@A2$XO&lt;@S@''&lt;?0@0*H[?@IQCUO&lt;@B6B^?0A[3P;?@F)H^X/?@JMSFP#7R2#6&gt;34^C/\K&gt;J?:AAU5B/,(&gt;5@UOP+;&lt;?.REX/??3PE O&lt;@\:$@??=(WPC?@K#G O??:K''@??&gt;:^,C??&gt;LV@O??5!S@???N! BK???HQ&lt;BKT\I&amp;9H.''":NN))HH. ]9!7"I]8-V"7R[":6K?0@0(,C?@AWS0O&lt;@GJD@?0AK/$C?@CBD@O&lt;@2:''@?0@L$$C?@G''DPO&lt;@(.''@"?&lt;@2K1@BO]&lt;&gt;2G7K?-''&gt;6#;G/,4&gt;7H^C%/8U?%DEWTJ&gt;2'';PQU#B(+7AQW;NR[;@_-EG8/??6@&gt;PO&lt;@TU/@??&gt;X(TC?@H"0PO??;G5@??&gt;:G C??&gt;L_PO??5]X@???NY\BK???HG$BKT\I&amp;9H.''":NN))HH. ]9!7"I]8-V"7R[":6K?0@0-0C?@AW%0O&lt;@GJQ@?0ALB\C?@CB( O&lt;@%DN@?0@KXLC?@E/M@O&lt;@Z$"@"?&lt;@(5L@BO]KJO[;OQ8NIO_U&gt;[TU% +7H/0,EZXJC"S7;O#5EYXJ=1'';9QV)B ;&lt;D_]&amp;&gt;K@UWP)8&gt;T(U% (N&gt;SX\AQS9[QUKB!3;N_30ES@J=2+&lt;&lt;AT1B ;8110D''_"0EW@J?.S&lt;O1T0B/\*?O@ULP(N&gt;E#:0/"0EW@J?\K&lt;U!USB*+8V1UTB ;7B?#@&gt;$,U^ +7HO/CESPJC%/8M?&amp;KEW(J=0]FEU J&gt;9G;@AUYB 9.=6_?@ _W4AW?@D\.U/&lt;@Q62L?0ADZ4S?@AB;)O&lt;@IFY&amp;"?&lt;@G43L"?&lt;@JKL4]8--"??? E(\??=5N2K??9UTN/??$,S^??&gt;60DHH??="I^(D?0A$I*#?@C&amp;2I/&lt;AI]%X?0B(@1JK?0C#-$ZK?0A9*8S??:$EHO&lt;@R5Q&lt;??&gt;]&gt;.BK??&gt;&amp;O_RK???I.%;???L\JO??/0^.???K3]PH?0@1E S;I_5*=2TGC,+7W?)KET4J=4+&gt;R1T;B 9[=2O9"1UMB/-"&gt;6&lt;UXP(N2/ @&gt;XPU!@)[AHTJ=17??Z9@@AV;??&gt;Q0@C7K(/;$O&lt;BH,@@&gt;3*K&gt;9_??]5@@O\-";3?@F9@@@W7_O&lt;@W\@@E_-R"&gt;+?@MW@@@W7MO&lt;BC$@@EW(JC"S8Q/)(EW(JZD&lt;U!@)[AHTJN/5=ET8J=3_7!AUOB ;7:_&amp;R&gt;$,U^ +;Y/4]EXXJ=7O7DQVGB ;7^/#)&gt;X,U^ *#?ALU# +;HHDU#0+7H\0U$@(N=0/8/O)SEW(J=&lt;;&lt;VAVKB/-A=2@U#@)!01VMB 9[&gt;FO9$1U:B/-''?M(U$ +8@? JEYLJ[[&lt;U%@(N2/_A&gt;$ U* +;3!Z*B/^Z?[TUJ +7_O\QER,JC"S7XO&amp;HEZ(J&gt;&lt;8V* *=?Y&lt;US +7M?^DET&lt;JC,+7 O&amp;5EZ,J=97=KQT*B/]&lt;=1DUJ0(NIO\_&gt;OTU*0+@?Q\US +7M?^DET&lt;JC)O7)?)HEZ(J&gt;&lt;8V* *[?P8UL (NIO]!&gt;X U* +;3!Z*B/\U&gt;6LUUP+6&gt;7(UU (N$?]&amp;&gt;[TU*0*^?HXUL (NIO\ &gt;OTU*0+7FDPUUP+6&gt;7(UU (N?AGR&gt;$ U* +;3!Z*B/] &gt;6&lt;UM (N?AGQ&gt;X U* +;3!Z*B/][&gt;60UV0(N?AFQ&gt;[TU*0+7X3 UM (N?AFP&gt;OTU*0+7W#,UV0(N=0/75?)HEZ(J&gt;&lt;8V* +;\_3!ES0J=?O7$!T=B 9[=7;9"AV*B//NE*(J=1W;X1U"B(3;AQU#B ;7B?^V&gt;Z,U*0+;[/1OES0J=?O7$!T=B 9[=4C8=QV+B/\UQAU"B(3;AQU#B ;J=:/:RAV*B//NE*(J=:#=21UBB*O8E!UCB ;;(/\)&gt;X U* +;3!Z*B''O;[AU(B ;J=7[9*1V+B/^_?S$UP *#&gt;AXUP0(N&gt;:K[&gt;OTU*0):N1U(B ;J=;;:RAV*B//NE*(J=1W&gt;W1UFB 9[=779"AV*B//NE*(J&gt;@[="AU+B ;J=8O9*1V+B/\R?\4UQ (NV?\;&gt;OTU*0+8B/4@EV,JC)O7%$\U%0+7]?#SETPJC"S7X4\U%0+;M?]5EV$JC%/7"D\U%0*^&gt;SPUQP(N&gt;=+7BT\U%0+I&gt;N$UZ (NL_&lt;@)O62?0G&amp;V]0U?0@BYVC?@E08TO&lt;@G9"T?0@#[]S?@D0DV(/?@C60)H/?@BYOWO??79) "???0FV "???.PV"??&gt;WVEK??=^=\O??#BV"???PV&gt; H???+,"7???^&amp;Y/&lt;@HER&lt;??&gt;F0 7?@A#F*O&lt;@A8&lt;ZA_&lt;@M8@A?0@P;-#?@B#-S?&lt;@C"9V?0@4LZ+?@A,E(/&lt;@HQYF???1U(#?@A[?OO??=C&lt;:"???/3C&amp;"2/;*C_??&lt;NY O??:?L@???41(BK ?&lt;@@F4@???0&gt;S;?@@GEP@#?@BS+QO??[ B#?0@YR''??@@ E( W?@L?^TO&lt;@P^9&gt;?0C0$+C?@D85/H/?@LB0P(/?@E1&gt;&gt;/??6ZBD?0@4C]K??=[DV/&lt;@G$GL?0@]?F+?@A996/&lt;@GI:8?0@2C52K?0@&lt;*CJK?0BF#-#??:W[H/&lt;@UWD(??=)IM:K??=&amp;4V"K??&gt;%"%#??:-FIO???JVA??=WNMXH????_#3??&gt;ZAA/&lt;@"]1*"0TN&gt;4G7N/_,E_&lt;@L:4N?0@^ZW''?@A-R&lt;/&lt;@IIZG?0@.Y&amp;[?@@.Y&amp;/??943L??? ,3P^"???35XD??&gt;&gt;)*#??&gt;]K!/??*N)????\!V@H???+?WC???_YE/&lt;@GF7R??&gt;L&amp;&gt;_?@A$YE?&lt;@A6(&gt;A_&lt;@I9VB?0@K,";?@BFEXO&lt;@B+_O?0@&amp;QVC?@AM96?&lt;@ED3N???1XP[?@@L=\O??=&amp;LR"???9EG,"???/KD@??&lt;!@(K??&lt;B3 O??;CB&gt;???&lt;;P@H???1G+??@@%(PO???EBC???X+S7?@A\SPO??&amp;8:D?0@Y6&lt;C?@@ 62@W?@I7"&gt;_&lt;@L"[6?0B?"8W?@C!5PH/?@IT7 H/?@DW:8_??9 AB?0@&amp;Y2/??&gt;S5 O&lt;@E$],?0@US-+?@A!M$/&lt;@DK-$?0@$9ZJK?0@.H5PH?0A)I*#??:34N/&lt;@R=%X??&gt;NB&lt;[??8 K!_??+_Q;??&gt;)G73??8_ !A92=10GC,+8L_&amp;5EYXJ=57&lt;Z!T5B 9[&gt;@?9\AVVB/\U?BXUV (N__$C&gt;V4U?L[;CO&lt;A_/2,A/?&gt;YPMT??8S#%ZK??&gt;L\Z+8W(.KV W??=Y#[/??=(@@???=''IK??=:@@A;???6D''H/????3&gt;O&lt;@@@O&gt;???/?3+?@@C1@@#??&gt;VHL/&lt;@@X:D"???"_7F?0@TFMS???/:8PW?@@3)^/???V,C?0@E7[K???&lt;X5_&lt;@C"@@"0#?@H7&amp;ZO&lt;@F1&amp;X?0APY&amp;[?@CVY&amp;!?7W/?&gt;YO+ A?&lt;A&amp;PT ?0G*\7PEC/,3=&gt;8VV _??=VN1/??=EU@???&gt;\S+??&gt;B*0A;???6D''H/????3&gt;O&lt;@@@O&gt;???/?3+?@@C1@@#??&gt;VHL/&lt;@@X:D"???"_7F?0@TFMS???/:8PW?@@3)^/???V,C?0@E7[K???&lt;X5_&lt;@C"@@"0#?@H7&amp;Y/&lt;@F1&amp;Z?0APY&amp;[?@CVY&amp;!?7U/?&gt;7P 0A?&lt;AE/_P?0EAAQ:K?0A+&gt;.K&lt;O(.K&gt;0S?@PN(=(/??.]WB/?&gt;0@-D"???$/R&lt;AP;J&gt;H''7I1T*B/]&lt;=1DUJ0+E&gt;@HU\P(NIO_Z&gt;V&lt;U\P+;F/4LET8J=3_7!AUOB :S=7''73!W7&lt;_\Q&gt;?G7N_ M=1G&lt;(?5-A/&lt;@=6&lt;Z"???3YC&amp;J@V^%IVN''8,H*)==]''Q2^V,_[8-3$%Z"BG!WA\15*HV7"0#^.Z3G-6:&amp;WA=&lt;"7&gt;I_HXH?0@Y123C?0C&gt;NMRK"?\Q?A&gt;KAP8$&gt;@?741UVB"C7^!W;K23;AO-IG8/??51GSO&lt;@UB?_??&gt;XRMW?@H*50???=U"@BO??3Q)^??&gt;\E6@E'')RU#)&gt;KBJ*__WY4\''%+G6&gt;K\9IV( !8U0WL]Z"E-8,H7+&amp;,1;].)%0__H-?"W2FBO&lt;@F ,B?0@8$;XE?0A0JKS?@@[W0/&lt;@VWC&amp;?0ACL1''?@A5[YO&lt;@YFE/BO,^A'') YGIX"26K_MBH5@#7? ZL%8.P"9HH=8O;I\_;@A8N=0/8-O(REWDJ&gt;5#7C!U1B//H?CDUO@+7&lt;?^RES4J=2+8FQU5B 9[&gt;E_:A!U5B(=OEWDJ&gt;5#7C!U1B+UCEVHJ#O,EEVLJC/\K&gt;IS:F!VCB/2+?KLUO@+7&lt;?^RES4J=3[8E1U5B 9[&gt;FC:CAU5B&amp;IOEXLJ&gt;4'';WAU"B(3;AQU#B ;7B;O7&gt;1T&lt;B/_3=9HUOP+A=&lt;(U\P(NV?_8&gt;V&lt;U\P)TS1U"B(3;AQU#B ;7B;O7&gt;1T&lt;B/_3=9HUOP+A=;@U\P+)=7TU]P(NV?!W&gt;_(U]P(,S1U1B%QOEVHJ#O,EEVLJC)O8_O(DEWTJQ/2''ET(JC"S8N?%DEWTJ&gt;6''=C1U/B ;&lt;D_]&amp;&gt;K@UWP(NIO_&lt;&gt;K$US8-T\U)X":^H%W:[BO,,^ Z$]II&lt;"6&lt;H&gt;&lt;@G&gt;0KVT?\&amp;G/\&amp;"=_I%O\QBO,[A(QS]G%F"5VK\I6K+8/@3X:9$ #C%PW6''[?B"&gt;2K;D''LJX,H&gt;3_;!AW\,;''R.*!2X1:KXWU7TW&lt;HV8HEY(RE"W.CB@:]=9Q4E].K.;B+1*ME2W^?":*K-IZ=''0![=1LE[G-4 (JKBGZJ&amp;)X_&gt;BK;G$TGZLE\)D"KBO,UJ_,P&gt;3_;L.[;D?\\G:+8V1UTB :^&gt;C''811T;"5-&amp;Z5A34T6_U8-,"6J@VW\H.?,SAZ*[()RT"0" #G2@G?0"=1;QA:9U.''KN"0#7E^77DO\7=3H0=1O;GA=,?E,UQE3P&lt;.6;3=GQ.4X(I5-EQQ&lt;NV?_Q&gt;DPUTP**=0$URH-[\&amp;%UBOLG*)ZV*Q:T"9FJ%X H=0PG[89(#W^KBCQ''Y3L_?OG7HLHG+UZ:\,&gt;KBO\U;_\O=3_7OR#7B_,TG08$=:C%EUJK\JY;4 #;F ZU&gt;1##OO\["0#7M^''5=437Q";3&gt;3P_&gt;1^KLC)&gt;&gt;1TH=1(F'']F''),FKBMJ6R2I@^"T*G09P=&lt;+8RAWD":Y0&amp;4PH=1(F _\XL=+;F8/;MX,-HX/;SH/??&lt;@U0?&lt;@B?6%???I(DG?@A[GI_??5H9#BO??,C,6???E?=''?@D0G0/??)^/@A_&lt;@F9P&amp;?0@US5[?@A8AQ?&lt;@D/B#?0@[9?C?@AS&lt;+_&lt;@MWC%??? .C;?@CK,#O???],\?0@4F%:KBO&lt;@L+M4?0B"_N:"=4&gt;,???S4+B:???I20H_???BMO:K???CW33???G&lt;+O??#U@ ??&gt;49ZK???$@ ?&lt;@E2MT???&lt;TBG?@A,;H8/?@A:?N8/V''OG,"0#3&gt;&lt;(UZ67??=EE9O??&gt;"PE???%7#S????\1/??&gt;, 2?0@@B\G???);)/&lt;@@A/N???0*4S?@@NMX?&lt;@D63L?0@O#DO?@DOQ*/&lt;@I7==?0@Q+%[?@@A@ ?&lt;@DEZH"?&lt;@A(/F???3+!S?@@L],/??=UG,B@9)=;O8QAUTB&amp;3&lt;V1WN";*$+,@H&gt;2$GL:=''8!:_"::M)88H=0PG X"E"(JKBF6@%*(_&gt;Z3;HO.WA6#AWJQH"0#;ER'';DO,7&gt;3K&amp;&gt;1O7GA&lt;NZ_^3&gt;DPUU@),?E,U3(.:)J;@BES7HO#RA:*V%*$^%H.Q")VHBO\DA6&gt;NZH57"0 4Y6\3G?,[A6#AWJQH"0#;ER'';DO,7&gt;3K&amp;&gt;1O7GA&lt;NIO^''&gt;K$U&gt;0C;IT?; 1&gt;K!H.F#G&lt;H=?8F"DI&lt;Q"6KVH-$)G*6BO,^A*(!;T[7CX,H=27)=_]A=4$,=0S;K1&lt; &gt;7(U$]*1-&lt;2K2X..X)P9B@8$=:]4EZ\JHO]:EZ JC/]C=337X1V(B/[;^!W7K&gt;+7AO]IG8/?@CR5PO??=4Y(?0@._N;??&gt;&gt;I&gt;/&lt;@I2)&gt;BO&lt;@F-C&amp;?0@SRKPE?0@?",C??3''.E_&lt;@O=O8???/;]N-";^K?0@Z*_3?@ACYVO&lt;@JUXD?0@&amp;B#8H?0CCA. G??&gt;&gt;T''C??9;D7/??&lt;5H,???&amp;?33??&gt;&amp;)^O???AZF???)2KS?@A,%(/??:?P&lt;?0AYTR#??&lt;&lt;O''O&lt;@]DKPBO??%$U "???-?;:??&gt;;H9XE???X@5S?@A&lt;V2/??3G''Z?0@P1ZC??&lt;L#6H/;CX,)Q&amp;0!BO\^A)26,*R&gt;"&gt;&amp;K&amp;$ZNP #;? ZJ_8.F"8PH&gt;8O7IT?7@A8NL?"''=4HU+@(NI_\==3DU+P(N=3W7N/\1E_,]A(?;B.IM=3"K=5FK./\@"=ZK0G",X:R5*869"9&gt;K?0@R;]K???6GKO&lt;@D[U@???;NEC?@AAZG #?@AWVRO&lt;@D&gt;V A_&lt;@G#84??&gt;XO''#?@B-R\O??_-:8?0A],JRK?0@+,RRK?0@ZS&gt;C?@AA5O?&lt;@J_;&lt;?0@''I?DH?0CE&amp;&gt;XG??&gt;7*8S??9NARO??&gt;XS\???/#L;??&gt;-^.O???O62???(QVC?@A"[)/??:*JP?0A"I"S??=@PYO&lt;@\O%XBO??%%F("???.(AB???D?J0E???Z(P[?@A"QZO??3Z 2?0@M\^3??&lt;NFY(/;IX,3Q('';A #7F0ZL/J2#3(,H5YK??=L62O??;\$8\8Y)S1&lt;-&gt;0K''A-.MXWS??=L3L???2K,"???43L7??&lt;=D7!&lt;3"76, ;@HC#K7.?HU&gt;1ND,/\S=1"T+O\Q3:=9Y5)%_4(_QBWRA,60 E%(Y7%GG8S8TAW;[FW;@?,:&gt;4R2H?]/=3O[0_X_"&lt;%2*VN$-ZV"+X/EBO\MJ[O;IQ8N&gt;&gt;/7 _]#E\37F4+7V/, &gt;5)H&gt;1/N&gt;:HF[HB@[Q:B"8VL X8H&gt;0PG)8"."Y&gt;KBNJ/+&gt;L_C&amp;O7-O!DE\/DV_,O&gt;0%SV4!IW\;-&lt;[''R31?7$_1VE_#BA:VX%J\^%H.O")VHBO\DA6&gt;N\X57"0 4Y6\3G2@GX\-])46KBO,TJ?,Q&gt;3/;ONO;AO\YG&lt;*K,Y:?1 !BA4)ZW$T^U(-((XB4BO,%A#C&amp;S_\(=3_)5O\SG 9[=;S8QAUYB/^Q]QW?@@Z:W/&lt;@AMP8?0@BF]3?@@X#UA;?@@^K2H/?@@&amp;FIO???ML2?0@D=(#???9X%@""=0XEY9!-$''NKSX-3U79$X\-])46KBO,TJ?,Q&gt;3/;ONO;AO\YG&lt;*K,Y:?1 !BA4)ZW$T^U(-((XB4BO,%A"7+TO\#=3_)5O\SG 8.=;S8RQWD":Y0&amp;4PH=1(F _\XL=+;F8,H&gt;3T-H_-L&gt;4[(H?\4G&lt;JK/ZF/*@"P[.VK"?^[&gt;72K"2K#"0U9V6=8W(,HQFCK=MZ\&lt;^0_C"S7*3LU???9*,C???EUPO&lt;@A**-?0@NUUL_"?&lt;@CZ*-%/&lt;@F%US%I+?@@)UPO??&lt;EUS?0@J*,C??&gt;)UV(/??&gt;9UT0!=???4*,BD???7UT@^7/]8E_]L&gt;BS;K(/;A/.H&gt;0[7"O,."?]L?BTEUO,D]U*KX0 ''6D''''8\;+6A:K-7Z&lt;T?DHC(#?@W=ARO]WE_??2NU ???0]XC??&lt;4Z(O??6?2,???)"&lt;#??=9QZO&lt;@GC&amp;Z?0AJ1&amp;X^"?&lt;@H8S]?0@SL3S?@B8A"_&lt;@G-=&lt;?0@0;-+?@BY,R/??0 -D?0@SLZ+??&lt;4  (/???E^&gt; #??4^M$__7E_??6''F+"???]$A\???XIE+???Q?H_??L^EHBO&lt;@_("4A/&lt;@BDQZ?0A =&lt;;?@CS],?&lt;@G/%X?0@BR_.K?0@FXHNK?0@TZ[/??&gt;^CUO&lt;@A[.&amp;???:3&gt;AI??&gt;)1.+??=''U0/??(PW#"???4$1IBO??YMO+?0A6/77??=OI@?&lt;@U3#U?0AQ0 3?@F9E)O&lt;@J=Q@?0BV&lt;A(^"?&lt;@L3WC???J*_+?@FDN6_??12OX?0AGFMS?@@07B/&lt;@B=86?0@Q*,B_?0@I.MRKBO&lt;@B1WD?0@1($3??&lt;POF/??,OC&amp;G?&lt;@_-&gt;@A/&lt;@-RW$??&gt;HVEC?@EWZGO??-7,$G/??9Z.D"???3996???-C%#??&lt;+0YO??5&amp;CB???Z;!S?@A=B4/??6AM4?0@]S!S??&lt;9/F8,HC&amp;O8,_-.E_&amp;J&gt;2C;9 ]KW&amp;EGS66+3A;7;?, ?@0G&gt;0/MQ?\GG-RK/JZ310#;+ \NV? %==8U&gt;=;7HO_&gt;A?\*JK@&gt;G$ZKVV=$T@#7A@^*%)Z)G)RK$X*U"@#7A@]/#&amp;"M]8,HMF]''L1?&lt;&lt;_\ == G2["72,2 XUD^C%/8I__^E_0]A62@ F4^ (.E#HFNBO,DA:^H+(&amp;_"0#"+:?#G?!\A?\*JK@&gt;G$ZKVV=$T@#7A@^*%)Z)G)RK$X*U"@#7A@]/#&amp;"M]8,HMF]''L1?&lt;&lt;_\ == G2["72,2 XUD^C//;=6;9[QU\B,?;&amp;!UG=5+;HO-ZR?,[2?-#=2C7X&lt;&lt;FC//O3/"0E_1LA3N/ZNH^''8..#J^NBO\DA8FH!X*B"0!- IZ*G? -A0;;&gt;9''8,AW;F&lt;/;($/;F?^$=1-G=:KO=1,GC/-N=&gt;O7;!W???V;:H/???]''&lt;O&lt;@@V&lt;Z???67B#?@@N/'' #?@W''!RO, ??;Y7;8G???5/+#?@@HYVO??=QN7?0@AA.+???P-$X,&lt;"6A[!"(H6PZM,9B$.X/?@@(;98/?@@%GJ????%P:?0@I_N;???1R&lt; #??)=X5O\ ?0DMDJPG?0@I7/+???7-TO&lt;@B(FJ????@ 3?@@.__H/[";R;$^4HOPZJYH]0V8,HC/,X?0B?V%;?@[K?_AW?@B.%(/&lt;@@A#V"???2^^.???TM(^KA_??9T%8???0Q*#?@@^@@O&lt;@D8@@G8._?0@ONU#?@@[&amp;Y/&lt;@F5)^?0@@FQXH?0@+)ZK?@G-&gt;NAW??&gt;X+1????5C$A_??Z6)7???;!^S??=])0_??&amp;JA@"???1 -DBO?? +^N?0A/CD+???MH\/&lt;@S2(=G/&lt;@FL%9&gt;9K7HO^R=1#7D?,X=?C;H@XN&gt;?7NKQT3+6_"G)&gt;K+(6''# #7A@^A"HVJ (,H[XBV*!?9+O, A0;7B?#D=:PU=1''7K8/7A_1:"8/7T_, "8/=[_\ "8/8O?_O"?,G&gt;12KKPV&lt;"9RJ(8V:_*%""5^KSU=^S(-I"6^1!=PH&gt;10F#O,":CK7IX/7J8/,9H/7G(/7AS?AQZ@HC/]&gt;&gt;\0V&gt;KC;HO/XA4%''X4=\[*Z6G/_&lt;&gt;2C;6@]IY6MOWF:&amp;-!;7?O, ?AHGH,-M=0@^38.;(;WC)U#A[,:K2X.3(K''BBD GC/]:&gt;\7;[!W9"/,!&gt;= GRV]#S51.)+X^=?3;HO/XA4%''X4=\[*Z6G/_&lt;&gt;2C&lt;D \"2477@A;O";.#-\N%VLE.3(/I";N .\HH&gt;;DGC/]:1?"0E_20=2C76@_M+;OG.*!0XA;;?O\ == G3Z&gt;31;*(\F@^?C,G[HB@[Q:B"8VL X8H&gt;0PG)8"."Y&gt;KBNJ/+&gt;L_&gt;G@G=D/I&gt;0@^Q8-[\6ES\[9U*D"KSX-#]%5TBL8GC&amp;3[&gt;K@U?N&lt;G[HB@[Q:B"8VL X8H&gt;0PG)8"."Y&gt;KBNJ/+&gt;L_&gt;CXG2;"53&lt;^)Z$,^&gt;&gt;G7HO_&gt;A?\KR\?;A19B"5U,ZELH6P\NZ,+8,AW&lt;,O\ == G2;"53&lt;^)Z$,^?C&lt;GL:=''8!:_"::M)88H=0PG X"E"(JKBF6@%*(_&gt;C4G=0-I3?,GG$JKV''A#S0#YA09_&gt;K?8,AW;HO/&amp;A/-W=&gt;[;MH.K?KC7HH.K=&gt;[7U?/&amp;=3RKAP9V=&lt;K8.QU"B/\Q&gt;8(U+ *LOAV/B ;7[?''X&gt;CPU=1G??&amp;)Q*/??&gt;(6PA???6J9V?0@I\''C??=.\+H???=PZ(H,H??=QW3/??9/)^_??%^CD??=QG33??5D2/_&lt;@X3P9??&gt;K3TO?@KB[91??@B5NE(/?@B'')?O&lt;@A:1C?0@$3@#?@@=S/P#?@YP+1/\R??;9V*C[?0C )VC7GO??G5* 5P[??637B/??2$U E_??PJ7SA???&lt;AXD???!:'';??=;O''/??62IN??&gt;:&amp;MRKBO??+E,$???J_B''?@DA1I?&lt;@X8;Y?0A"5$[?@CV+1/&lt;@O"&amp;:?0AS_J4_?0@:DFJK?0@''M([??&gt;_R[/&lt;@ES+"???U\/HHC/]H?0J["S#7 1W??&lt;REXO??;S"T??&gt;=^*C??;S#DO??.9WD???3163?@B)G+/&lt;@E+!RG/&lt;@@@AB=2+??6/;)(.K&gt;2(E?????;;??&gt;;!2???&gt;X7T???PG#W??;R4/H,H??&gt;481K??&gt;9S]_&lt;@P&lt;W#?0@:N!77@?&lt;@U8$72/\5?0B[&amp;*C?@E3.&amp;O??7SL4??=43L0_??6G],#?@@P^&gt;!W??3;!A/IP?0A9;&gt;@^?0AQ3YBK?0@0QI3?@BE=P?&lt;@GU@"?0@"2?/?@BOKP/??5#.E?0@216;??&gt;U;O_&lt;@RB,B"0#?@FM2,O&lt;@_W50?0@7@HO?@LT^]?&lt;@"T-D??&gt;8L3S?@JFU0/?&gt;1&lt;3L??;G3L3??; 3L???WA(\??=9AM8_C-+7/&gt;\U,@+7HH0U,P+8W@R2B ;;#O_.#AW8,O, &gt;;LGNVI"NQ9&lt;"8FL^H8H&gt;2HG$8*P"8&gt;K28/C-Z''TBBDGC/.Q=&gt;8V&gt;V7;HO1/A3%"X#$^_H.A#G"NBO,"A9NJ$H.O"&lt;.K0;V)5@  A0;;__]!&gt;KDU&gt;;LGNVI"NQ9&lt;"8FL^H8H&gt;2HG$8*P"8&gt;K28/C-Z''TBO-\A3N/Y&gt;H^''8..#Z^NBO\DA8FH!X*B"0!- IZ*G?#/A0;;&amp;=G8,AW=^O\ &gt;G,G7[R47Q:Z"9VJ''( H=2HG 82F"8^KR8-SXV5BBOTGC/.[4_"0E_4NA3N/Y&gt;H^''8..#Z^NBO\DA8FH!X*B"0!- IZ*G?_2A=64-M4^&amp;(.U"):HBO\"A8NL!(.G"4.KT6E-P #5A0;;XO!H=?8U=0QU5/,^&gt;0]IQ?,KG//&gt;=2C78P_K$*25-X5*R1;7H@XN&gt;42/=?8U[/\ A&lt;/?@@I50:3?@B&amp;JO_&lt;@J&amp;HL?0@F''_Q*R1;&lt;*_\ &gt;LXG=0-I3?,G&gt;19UPO,DG 9$&gt;KC8EQWMY^S;J1;;-?20=2C7X;\F=2O;X?]G"?,/=68E?0@&gt;:S#?@AE.6_&lt;@P![H?0@1W_NK?0A$L3PH&gt;&gt;!GE_\E=08G0ZQ&lt;W%52!ET_C&amp;S8-_\/EX8G"=!]23""BO\/=6;;Q8/;H?-#W8.K=6O;HH.K?KC7-8,E=2.19L4_&gt;&gt;#OE[LJC%+7\O\1E_,]&gt;7@F[G6@[Q:B"8VL X8H&gt;0PG)8"."Y&gt;KBNJ/+&gt;L_8@^, +NF.H/7TX.:=0BK5(/QZK!D(@#;Q[8EYI^A$8.!":&amp;+'';2K3(.,\81ZBO\[A(''7A#OP&gt;2VK&gt;16KM$ZK&gt;0NKH^I:*(DH=3-WAZ:@%8BK]X-*YG]J"3NK_Z2C,@ N&gt;=+7^/#ZEZ^W&amp;ZT^%8.[")^IBOPG\X5(#G"KBB9^W3@_?RTG[HB@[Q:B"8VL X8H&gt;0PG)8"."Y&gt;KBNJ/+&gt;L_C//\==G731T8=9&lt;F)9^Y)Q:W"9.J%8$H=@]1#V"L^H,HK%9_LA?;*3&lt;.5?.1A62@ F4^ (.E#HFNBO,DA:^H+(&amp;_"0#"+:?#G?_P7 \N&gt;=+1&gt;CDU?H&lt;GL:=''8!:_"::M)88H=0PG X"E"(JKBF6@%*(_&gt;G0G9%:7K!98"6"J\X$HH ^W#Y.L%8,H)Y]=[1&lt;NH_";%1U;$UV^R)&lt;H&gt;JDG)9^Y)Q:W"9.J%8$H=@]1#V"L^H,HK%9_LA?&lt;" ]-$WBN]H,H&gt;21"I%U\.?,I=8[7B)CX4!&gt;) []=''8PH&gt;=OZE[PJC//_)($U6_,%=2C7I]C(Q/_ A.A^-R&lt;^[H-2"GJCBB$G&amp;X6S#IVKBKBT E,_&gt;;(=A0;;6/_A&gt;JTUO_\%&gt;2C;ITX.4O2#A#Z8X^\^*(.$#*RSBN4G_X&amp;C"(FKBFZB%+,_&gt;G7YA09;&gt;LTV=6ON=1-H=5+;HO-Z&gt;5?7V/, &gt;5)L&gt;1/JX@_;B&lt;5G=0\^5H.&lt;)+OGBD,G&gt;5?7X1W7W8XFR59!Q4=-*&lt;0^C,;?@%8+2O 6E_&lt;@R]P8=0???.W#UO??&amp;J@@A/&lt;@CMP:???8:0K?@HF!A/??0B=\"???%B^.BO??8&lt;PY???$=$S??75Y6???YKD(??=,  3??=4%X_&lt;@ )&amp;Z?0@\RGH^"?&lt;@Z=!R?0BA$V_?@C?G&lt;O&lt;@CNOX?0@GG[HH?0A''X@C??.W#UO,O?0AI5C(G???RM,#??&lt;9BCO??8_S&gt;??&gt;&gt;(HRK???CC]HH??&gt;?3L7?@C%:0O??M4KQ?0DJ!TC?@PF&amp;*O&lt;@P%%X?0CJ](_?@C9961:K?0@&lt;&lt;/K??&gt;G4_O&lt;@PU;:???RM43?@CF=,  N]?&lt;A@;U@]AW?@P71ZO&lt;@P%%X?0C#_N;?@DVCD!&gt;K=0[??:"$FO&lt;@[.AB??&gt;=&amp;!;?@B)6@ #??3\/''_??9K1,A_&lt;@J]Q:???''1E+?@J''H\/??,9;:"???^X''&lt;BO??73XD???%2,K??67I?O??VM&gt;&gt;???GB,C???;5O9W?@@&amp;.EA;?@ZQQ;O??^D+A??8/=HHG???CB\C?@B7.&amp;O??6 F&gt;?0AQTV ^C"S7WO"0E_-N?KC7JH/7@_ _=0''&lt;G?\("?-Q&gt;K@EC/\K=3K8,AW;K_20=2VK7_ N7O0N=2BK7_ N8_0N=2VK&gt;238,O,$"3W&lt;DS+8DPTNIO_%&gt;L,U/+F2/A:V"9NJ''XXH=@]6#''&gt;L^(/;KX-=NG9&amp;BO-2?QO7IH/7AO ]=0/&lt;G_\."?-]&gt;LXEC"S7&lt;/\&lt;E_]N&gt;@#;JH/;@_-7&gt;0''7]?,("?]Q?@"K&gt;337I8,EC/,@&gt;E?8,AW&lt;NO,E=84F&gt;9?;3(/;A__J"8,-ASN/Y&gt;H^''8..#Z^NBO\DA8FH!X*B"0!-_YZ*G?]D&gt;:XG=9773 TNQ?#N=!W^R\L=G#&amp;KS4"IRP 3"?^]=&lt;:K=0W&lt;NH.K&gt;0W7#X/;''?/N"?,E=9&amp;K"2/7BX.K:0W7E;N$7Q?;BI\U-P(NIO F=:PU*P(N^/^R&amp;!V="9ZG)(Q7^W^BZX,HU8B[$)"3#YP_=?2.EW:PY)![&amp;(/7AS?BQZ@H=1''7K8/7A_08"8/;A_^M"?,G&gt;12KKPWD"=ND(4!"%FNQ[X,H&gt;21"N%YQ0#K7I1?7J8.=79._*XF1 9&gt;DB@9[2?!5E_\\A/SB,&lt;KG.E%JG(/;E_,&gt;*(/;Z@#;W_\P=54G"&lt;6R%,^5:L6&amp;-8/_BO\\I^'';I2+;I&amp;[;]!8NV?#@&gt;GTU=7[;I+@*&gt;2\%K_,\G(,7)%?(R\]!$(BKRP#;W_\P=54G"?](&gt;39,"?\UBL28/\_B0&amp;L"G 9[2?^LE_-6=2Y&amp;;O\''&lt;^''7GA:K77B7K,5O-XRV"&lt;4H=57;DO-]A8/;ZO\&gt;*(/;EP!JW%%OUER3=A8NIO&lt;@+ BC?0GB^A@U?0@@NQ[?@D+Z8O&lt;@DV 1?0A$+QC?@FA^MX/D":Y0&amp;4PH=1(F _\XL=+;F8,H&gt;3T-H_-LG?0DA?-F:BO7MA;7E8/&amp;7I#7EP#;F Y9QV=0UX,HQFCK=A&lt;NV?^E==$U^0)K=7PUX *L&gt;0TUX0(NH/"Z=2&lt;U- +;4/^''E[\J&gt;0HD.@(NQ/^,&lt;!UGY96./[BV3Q?R&lt;TPFR&amp;VW/J&gt;/''\?7DIU*&gt;1#;D8Q$&gt;1L_%?!PE_??QA)^???C9ZK??;&gt;Y&amp;/??''6Y&amp;G8-Q(&amp;&amp;5\VM2\&amp;6KSP  65W7L?]/,/O7QO\:X?\C&gt;6T^C&amp;C7-O!HE\RK)''B[Q@#7F ZI(H"_!Y:K)9:X)X.W"9.J%8$H=@]1#V"L^H-!"6.B]G%((E&gt;VVH,H&gt;3T-H_-L&gt;4[(H?\4G&lt;BK?0@91A#?@A\NE_&lt;@G#/(?0@\&lt;^,H$F;%"8/7&amp;/-&lt;"8,"88,E^U-/^E:KBDQ 2?SV''OG,G09S1?"0E[$JC"C7T7TU-@+7?J4U^9EU''$*_BO!7&gt;2C&lt;U@]-$WBN]H,H&gt;21"I%U\.?,I=8[7B)CX4!&gt;) []=''8PHK_''REU0JC$S8FO]#E_0#=2C9[_, &gt;4TGT4;;E_^B&gt;3"K=5'';9O-L&gt;6C7L8,EC/-!&gt;B0V=0W;YO ?&gt;2C&lt;,@\NZ/^2&gt;DPUY0)*?E0U38.=*J3FBO..=2C9 0^*%)Z)G)RK$X*U"@#7A@]/#&amp;"M]8,HMF]''L1&lt;#A6+FVZ%H"0#;E"/;C/,9&gt;3#%&gt;0;7F1&lt;NV&lt;/8]QW7G@[40+OB1;!YR!:K&gt;1W;O**K&gt;6 H^SH.9CG7DNW!:CV]A8/M?0@GQ^S?@@*\;/&lt;@N;(\?0@*X1K(3ZZ7"=&lt;H=10%:_,''J/,&amp;Y/-6G 9[&gt;LC8]QW7]/,&amp;,B+;I2T-&gt;10^"3^&amp;W&gt;!I?0@;.!7??=V\;/&lt;@A4W#???5X1JKRP!9MB;"L_\P9^O(L94G"?](&gt;39,"?\UBL28/\_B0&amp;L"G ;7;_)W&gt;K@U?C[7T_, &gt;9\FZLE\)D"KBO,UJ_,P&gt;3_;L.[;D?\\G&lt;:K.*R.0@!T&gt;L/7A_.&amp;A?^]=&lt;8E?S"PEUPJ=9ZFE_^K"?.K??;]!V@EC/_;&gt;]S7)AW7F_\/"?\E?C"K"?]Q&gt;2BK"?.WAV#AWJQH"0#;ER'';DO,7&gt;3K&amp;&gt;1O7GA?N";*$+,@H"5S?@FQ''[H,E?0@_\^3??:X6?_&lt;@TP],???J2PO?@G@_OH/7J8/,9H/7G(/7AS?AQZ@H?KW7MAUTB/^V!!W7#X/;A?,\"24E/H.T"*NE.'':)X(-W"45_W$:KRX-'',X_TBC$FC/!J&gt;%S7B1V5B/\H_1W^R\L=G#&amp;KS4"IRP 3"?^]=&lt;:K=0W&lt;NH.K=5G;HH.K&gt;9\EZLE\)D"KBO,UJ_,P&gt;3_;L.[;D?\\G&lt;:K.*R.0@!T&gt;AL+=0''+A?\W,:S]G?6)==$UU@+7%(XU. (N=2W70_"%ES77I_, &gt;2UFK-C;8@X6.FG''G/_PA/]Q./\@5!&gt;K4V"8QJ@H&gt;4V&gt;AVRW YNK(X.)*9&gt;&lt;"&lt;:K+GNLV #7F0ZI=0X34O,%"?,]"3YF"?,C"2G"^**ABO\;U0V. I^@"7THZ&amp;Q5R!;;%8$EY(JV.1?7.-$GC$''8_/#ZEZ^W&amp;ZT^%8.[")^IBOPG\X5(#G"KBB9^W3@_R/,S=2W;HO,%Q";P&gt;&gt;@GM+!!91;?@A5?N8/?@D LR?&lt;@@+]R?0@\]G+?@@\''+ #??&lt;8!@@], HA-G(JK!X2A# #;A@^''"J:I''8,H8*&gt;/81?;HO&lt;@,8;YE_??;OQ:???&gt;R7K??&lt;-G[/???2V6???61A"KBFZB%+,_=;+7D0\N=4''9H/\REV--???QQ^S???(#?/??9]84????7LC???+HLO&lt;@@@''A???:^:#?@@@[0O??&lt;J-D?0@C#W;?@AM,3O&lt;@C81C?0AC4Z#?@B]?__&lt;@DZ9X?0@@PHO?@AAV"H/?@@ZK1O??&lt;:8T?0@CG[S???UQ;@ #=&lt;(U1H.&amp;\I-DBO\ZA(G7FCOZ&gt;1.K&gt;3VKKRFK&gt;42K???@E\O?@@/=,/??2ZAA?0@V123??=RN_/??:G&gt;&gt;???7F-S???"8%O??&gt;*B*???!@-BKBFZB%+,_=;+Y:C77I_, &gt;2UFK-C;8@\6.FG''G/&lt;@A@^."?&lt;@]_!R$O&lt;@Q(T^?0@\[LC?@CU09/??8K &gt;?0@2;H3???7[@/&lt;@MA)\"0#?@CJ3^O&lt;@(''3,(/]O+O??4=J0./??2\,DG???0#S&lt;"???05&lt;&lt;???1?J3??85PHO??-NV"???9@HS?@A\#UO???E@ ?0@[N2NK?0@^/3.K5)31;H,HC/]#==_8,AV@K,@G)9^Y)Q:W"9.J%8$H=@]1#V"L^H,HK%9_LA=JO2;W?D#7HO!H:O1H=2C76@_K.KWO1:%*R1;&lt;H@], HA-G(JK!X2A# #;A@^''"J:I''8,H8*&gt;/81?8W@_7B4''O&gt;0\^P(-Z\FMOBM$GC.#7X;TU9%V7 O\""?]Q";+7@H/V"=E(.DR BO-E/ U$%8FS":FK*Z._/H/N":13#E(H=1,F"_\FL=C;IX/;GX,6Q(/;@8,!8''** P#7N5\E+(BW H-5"6)$]4*KL8,:&amp;B_UBO"?&gt;2C=[_\ A0:T&gt;P_8,AW&lt;NO]Q&gt;2C=[_#M=0W;) [7''__NA_08E+(JC/,Z?0FWY(C???&gt;3PAV;B/&lt;@W$@@&gt;A$U.0(N&gt;4F_&gt;P8U/@+&lt;T//&lt;E[0JC(/86_-.E_&amp;J&gt;2C;9 ]KW&amp;EGS66+3A;8L@_#Y:&lt;4G''^KZH%/"@#;A@^U#)FL%H,H*YZ@[A?&lt;K _;B&lt;5G=0\^5H.&lt;)+OGBO..A0:_=8K7UQW8L@_#Y:&lt;4G''^KZH%/"@#;A@^U#)FL%H,H*YZ@[A?&lt;K _;B&lt;5G=0\^5H.&lt;)+OGBH+;!@T3+6_"G)&gt;K+(6''# #7A@^A"HVJ (,H[XBV*!&gt;L&gt;TG;HH.K&gt;&gt;XER59!Q4=-*&lt;0^C/..?0C9&lt;4C?@_PSPAW??2&amp;@@N[?@N-L0@_?@FF@@O??/:Y@?0@XCLC??&lt;73PA;??=L&amp; H/??=&gt;@@O??;\3@???&amp;)$C??=&amp;&amp; @#?@J6L0CC??"X&amp; N[?@MJY @_?@B!L0O&lt;@GT@@?0@\&amp;\C?@B#3PO&lt;@J$@@?0@M)(C??&gt;R3PO??6$3@G ;;+/&lt;@&gt;_M@?0G4&amp;X@U??&lt;) @C&amp;?0C+SP@G?0A! @C??;&gt;&amp;PO&lt;@F@3@???M&lt;4@^???SI(BK???_ @C??&gt;7L0O??9*Y@???Y)(@H?0AH3L@G?0@TI$C?@@\&amp; O&lt;@A2Z@?0@S @@^?0@E6XBK?0@C9(C???=Y O&lt;@A(@@???&gt;CP@H?0AH3L@G???-3LC?@@G3PO??:T@@?0@ASLA&gt;"0#??&lt;]3PO??:I&amp;@???(&amp;XC??&lt;[L0A???''[@@N[?@MJY0@_?@B!L0O&lt;@GT@@?0@\&amp;XC?@B#3PO&lt;@J$@@?0@M)(C??&gt;R3PO??6$3@G ;&lt;W_&lt;@(R@@?0I&lt;[L@ULO?&gt;^@3@A/??:=''@???86XC???#Y O??;H@@G/??&gt;"Z@"????A&amp;@?0@@)(C???&amp;@@O&lt;@@_M@BO??-3L@A?&lt;@D#M@???&gt;CPC?@A[@@O???+L@&amp;H,H?0@8#LC?@A]&amp; O&lt;@E6Z@?0@9L4@_?0HV&lt;4@DLO??+,@@9 XN?A_?@BX3PO&lt;B_EM@E_/39/&lt;@.(3@A?&lt;@MT3@?0@Z)$C?@A*&amp; O&lt;@MT4@G/&lt;@B\@@"?&lt;@A(@@????VXC?@@1Y O??? 3@BO&lt;@WD4@A???&gt;,3@?0@@)$C???3@@H/???5&amp; H/??=Y&amp;PH/??=.Y0O??9KM@???, @C??=BL0@#?@DS&amp; @\N?A_?@N''L0O&lt;AGZ3@E__3LO??QWM@A???2+M@???%V\C??&gt;UY O??2+L@G/??=$@@"???&gt;X@@?0@@)(C???N&amp; O&lt;@@_M@BO??(;L@A?&lt;@ASM@????V\C?@@M@@H/?@@JY H/?@B&amp;Y0H/?@BQ&amp;PO&lt;@F43@?0@S @C?@B=3P@#??;,Y @\N&gt;?3?@H[&amp; O&lt;B^3M@E_??QWM@A???2+L@???%VXC??&gt;UY0O??2+M@G/??=$@@"???&gt;X@@?0@@)$C???N&amp;PO&lt;@@_M@BO??(;M@A?&lt;@ASM@????VXC?@@M@@H/?@@JY0H/?@B&amp;Y H/?@BQ&amp; O&lt;@F44@?0@S @C?@B=3@@#;E _??&lt;[M@O&lt;@E6Y@???(&amp;XC?@C"L0A:X"?&lt;@E,@@?0@ASLC?@AH3PO&lt;@@_M@BO&lt;@RL3@A???&gt;X@@???&gt;CLC???0Y0O???5''@???:I$BKBO??;H@@???86\C?@@\&amp;PO&lt;@EBZ@G?&lt;A!?M@A0;;''O&lt;AX^@@?0FBCL@U?0@A&lt;4@G"?&lt;@L 3@???"FXC?@B&amp;Y0O??2 4@?0@N&lt;0@H?0A$0@C?@H63PO??":Y@"???(03@??=9\4C??&gt;M&amp; H.K?0BF#L@0"8/;&lt;?&lt;@/RZ@"0W?@FH&amp;PO&lt;@FKM@?0@96\C?@B+&amp;PA?;\_&lt;@KCM@E_&lt;@S43@A/&lt;@H1''@?0@PP@C???-3PO??8!&amp;@???"0@C??&gt;?@@O??=$@@???\9$@_??&gt;0,4@FC/,Q?0F Y(C?@Q63PAV;B ;;.?&lt;@#JZ@?0E%)(@U???^6XC??&gt;]L0O??9*Z@??? I$@^???86\BK???:3LC?@@B&amp;PO??=D3@?0@CP@@H??&gt;;0@@G?0@M)(C???8L0O&lt;@A&lt;3@????V\C?@@,L0H/?@FM3PH/?@@$Y O&lt;@M_M@?0@H\4C?@A L0@#?@IAL0O&lt;A''5&amp;@??&gt;"Y(BK??&gt;7L4C??0BL0O??,*Y@?0C?\4C??9/&amp; H/?@HJ&amp; O?&gt;$+M@AP;&lt;D_&lt;@62*@?0KB.(@U/P(N&gt;6G?@M,* O&lt;B0+*@E[4J?0C1)XC?@G6R@AV&gt;B ;&lt;D_]^&gt;F$U=1D;A8/G(9;C%P"9A???25,#???&lt;923??:6$7_??:1#T"?,SBO,AA0;&lt;D_S9MQVYB ;&lt;D_]7&gt;STU&gt;08$A(,9/$?R"P"9A5:T]Z"K.0"N3 \N&gt;=+7BO&amp;2ER6$A?&lt;@BY&amp;Z?0@IY&amp;[???\3MO??=,3L???6FQ#???[&amp;I_??=.[(???6F],_\"6$A/&lt;@O!ZG?0@2:W''?@CK)^O&lt;@O!ZH?0@=WWC??&lt;4K@/&lt;@L*JP???A=O8_C//Z=8G84QV?B ;;6./8=1V7''*7A-JQ5XU/??&lt;$4NXK??&lt;WK11;;UNC7B0_?@E87#/&lt;@B&lt;[*?0@V2GK?@EBP9(/?@B^(L@#"TLH*&gt;1Q,M$H^C//Z=8G8=1W"A-Q,8O,TJ%ATMA:K???XVAC?@A[H O??+6;Z?0A^M8C???P9E #;B&gt;C7U@_??&lt;WLBO??2SO8%K.5)JF40Y9)W1&lt;N&gt;=+?@@.P@O&lt;B 5=&lt;E_&lt;AMQ@@??&gt;]8LRK?0AEDBS??4+&amp;:_&lt;@NH$4?0B5FQ_?@C^@!H/?@DT!"O?&gt;2/@@??&gt;]8L EC//Z?0E@(@C?@+![ AW@B ;;6/&lt;@#TBC&gt;YDU??&gt;LFHC??3J%XO&lt;@RD*:"?&lt;@QWX^?0A=JKS?@DP0)O?? -]L?0AHW/&amp;K??&gt;LFIS?@L5Z(@TN&gt;=+?@K?B@O&lt;BK:Z@E\DJC//Z=0#9"QVBB ;;6/]/&gt;OLU% (N&gt;=+7X?# E\HJC//Z=&lt;?9X1U5B ;;6/_Q&gt;X$U^ (N&gt;=*\&gt;X$USP(N?A_7PO.WE_]YP?-YA0;;6/_PU1U5B ;;6-%''ET4JC//Z=9!''EW(JC//Z?0AM$(C81QW?@E!- O??W?4@?0AX[XC?@J@C@@W&lt;1PS??:^R O&lt;@(@L@??&gt;''$(C??5?=@@TN&gt;=+?@D6R /#EE_&lt;@VF5&gt;??=_?N;?@E!-$_&lt;@(@LRAP;;6.''7W!WCB ;;6/]5]AV?B ;;6/\I=78U&gt;0$''=&gt;G/&gt;0#7Q"\FC//Z=6374QW7B^?;8R_7BO-F;0XN&gt;=+7[O],E_\I;?,H=0$''&gt;0'';BR_7BO,I;0XN&gt;=+78__PE_/!I?_!A ;;6/^?&gt;X@U%P(N&gt;=+7\/%;EWDJC//Z=339%!VDB%,D!P(N&gt;=+7OQ[DB ;;6/^.&gt;XDU 0(N&gt;=+7KO&amp;IEY(J=&lt;;7I1VZB ;;6/  AO&lt;@FX4A???5U(#?@D*FL/&lt;@Q\FHA_&lt;@ECYE??&gt;$-XK?@BN1I???[3I.?0ANAVBK?0@/2CJK?0@Y1E+?@A1VAO&lt;@FWM4?0@Y\7PH?0B,0X(G???C P[??9:.EO&lt;@@;=&gt;???1D";??&gt;QB4O???;V@???''%K3?@@.#UO??5KWC?0B$-8;??&gt;R;9?&lt;@R:QZBO??.SBD"???+TWB??&gt;,I60EC/,)?0EZ(@C?@2I@@AWEB ;;,?&lt;@.]&amp;@?0C#P@@U???;8$C???Y7 O&lt;@AEU@?0@ITT@_"?&lt;@BNH@?0@GI$C?@AD^@O&lt;@A]''@?0@I0@C?@@Z7PO??=]D@?0@F;0C???G*0H/???RDP@#???[&amp;PO??&gt;JI@???;\4C???)]0A;?@CW3PO&lt;@%CM@E_&lt;@]9''@=9#??9/&amp;PH/??;W&amp; O??XVY@??&gt;59$C?@I:Y0O??&amp;&gt;Z@"?&lt;@]9&amp;@??;;VX@E???\P@C??;\3PO??&lt;[M@??? I(BK\P!J?0@2CLC??=TY O&lt;@N&lt;4@?0@79$C?@B.L0O&lt;@O&amp;Z@?0@2CL@^"?&lt;@GI&amp;@???2V\C?@A?Y0O??69&amp;@?0ABSL@HC/1U?0BUCLC?@/],0AT0??8&amp;I(C&amp;A ;;/O&lt;@\Y&amp;@?0FJ6X@U??&gt;&amp;&lt;4@F?0@B&amp;\C??;MM@O&lt;@NH3@???W,0C?@F*Y H/?@G+Y0H/?@A:L0O&lt;@Q#M@"?&lt;@LL@@"?&lt;@KX@@???)P@C?@A5@@O??4]&amp;@?0@M)(@H??&gt;L&lt;4C?@BD&amp;P@W??&gt;Z&amp; O&lt;@A&lt;4@???9 @C?@@T3@H/?@@9M@H/?@AN@@O&lt;@EL3@&amp;O&lt;@G=&amp;@"?&lt;@J83@"?&lt;@EWM@???0Y$C?@@B&amp; O??8BZ@BO&lt;@U&lt;@@A/???+M@?0AJFXC??&lt;[L0O&lt;@KM''@??&gt;!0@BK??&gt;&amp;&lt;4BK???H0@C??=L&amp;PH/??;_Y0H/??;,Y O&lt;@NH3@???4&lt;4C?@AP&amp;PO??&gt;X@@BO&lt;@[H4@???^L4@E?0@V0@C???#Y O&lt;@A&lt;3@???86XBK???1,4BK???*#LC??&gt;Z&amp;PG;??=W@@H/??&lt;[M@H/???[&amp;PO&lt;@EWM@???:3LC?@A L0@ N&gt;;K?@N6@@O&lt;A3(@@E\XJC//Y?0EF @C?@%Z9 AW?@IK&amp; O??(Q&amp;@?0@XCLC??&lt;C3PO??(GM@??&gt;=,4C??&lt;K&amp; O??)9&amp;@G(/??&lt;%&amp; O&lt;@DX3@???#Y$C?@C13PO??5Q''@,/??9KM@?0@D#LC???#Y H/??=TY @#??75Y0O&lt;@TI&amp;@?0BB)$@G"?&lt;@"\4@??&gt;Q @C??&gt;/Y H/?@EOY @#?@B)@@O&lt;@GT@@?0@  @B2?0@#0@C?@BO@@GG??;/@@A8N&gt;1''8Z_&amp;4E_1PI__*?U71A ;;F_!)&gt;[PUI_,*&gt;&gt;(%=&gt;+&lt;.ODFC/,Y&gt;F''9-AT%&gt;&gt;?;:"W7://3&lt;PXN&gt;1''8Z_&amp;4ERW&lt;.O/*I__*&gt;2+1A ;;F_!)E/&amp;4I_5N&gt;&gt;(%A0;;HLPV&gt;D''1&gt;&gt;O8%RTFC/, =3O7%!W78?K;8?^ZI_4C&lt;PXN&gt;=+7\?-LEYXJC//Z==C9E1U5B/^AAGTJC//Z=&lt;W9[QWGB/0DE,\JC//Z?0B?0 C??2"% AWAB ;;6/&lt;@"DB@ QW??80X O??L*V@?0AHR,BK?0AE] C?@G4( O&lt;@QCC@??&gt;B58C?@D!_@H/??80X O&lt;@3U*@AP;;6/&lt;@CI@@??="W8@U2@(N&gt;=+?@TF @O??$U.@E\@JC//Z=3-7EXPJV0REB ;;6,/8)1UMB ;;\)38)1UMB+4VSP(N&gt;7K8M/"%EW(JV/\,EW(JC/.W=&lt;96EXLJC//Z=9/7Y1T!B/"\ABDJC/1_%O&amp;PE_._&lt;_\96?DGC/1_=5W9$AW;R"W[&gt;3''1A ;&lt;W9P3E_]J&lt;S/7NRTFC/1_=5L4E_^_I_,9N2TGC//Z=&lt;S;V!WIB ;;6/_C&gt;00U&gt;5W''N?-@=:TFC//Z=?@2E_??@68AA/&lt;@C_1??0@QG\C?@@3!A/&lt;@D#$0?0@PK!W?@@;,C0#??=,GJ/&lt;@HNDAA_??6G&lt;&lt;???R7@A"[O??5.ZA???X81K?@B$QP_??5;63?0@+BC;??&gt;I_N?&lt;@IXCD???R6&gt;\H?0@$&gt;M[?@BO!A0W??&gt;?FY/&lt;@C.BC???3J&lt;[?@AIFI_??&lt; H;?0@QGF(H?0C&lt;$_&lt;FC//S&gt;X$USP(N^O&amp;IEW(JC/-0&gt;XXU  (NV?&amp;DEXLJC''39X1U5B :!&gt;VPUS@(NZ_&amp;@EYTJC/,@&gt;W,U\P(N O%;EWDJ&gt;5#7C!U1B ;;[?#ZE\(JC/,9&gt;YXU!@)[AHTJC/-I&gt;X$U&amp; +73/\''EY(JC/,F&gt;OLU% (N&gt;1[88AWBB ;;V?# E\HJ=7TV0 (N&gt;5G9"QV*B//NE*(JC&amp;''9 AVUB#;4EWDJC/.&gt;&gt;ODU*0(N&gt;2G83!WGPP^K?0@Z0@C?@@VV O&lt;@J:4@?0AFZXC?@@2S@@":A?,M_(AR"4$HUP\N&gt;5S9!QWKB 9H&gt;XTU3@(N&gt;XXD&amp;P(N&gt;9)\ET4JC$A^EW(JC/,6W1T&gt;&gt;1L%=1L&gt;&lt;_^TA0;;S?/@E]#7D?G;D= %&gt;9PGC/-!&gt;VTUI?] &gt;6C/=&lt;PGC-78/AVK.7&amp;''Z;\HMDHE&amp;''"S H-&lt;BHBH!68^L?,F10[''7ZS1G0;;Q/. E[&lt;JC/.?&gt;7(U=:C1NM8%NC FC&amp;1^E_. I]88&lt;];^A 9,&gt;1PUNM8%NC %7##17-8FC%4/E_.BN?^BA ;;A\\U&gt;10G???T%&lt;????TU _??=V 1???U:''&lt;^???&lt; T"K???&lt;_N7?@@ACUO??9@GK?0@A)Q&lt;H??&gt;\28TG?0@P&gt;!7???2Z8_&lt;@BMJ0???=,R_?@AD3L8,H?0BF;LC?@A\SPO&lt;@R&amp;Y&amp;?0@1&amp;Y(_=34GC#&lt;D=13;A_,=A???3&amp;Y&amp;?0@WD4C??;VY&amp;/&lt;@!.3@G/&lt;@DSM@"?&lt;@BMJ&gt;?0@BS-''?@AC:@/&lt;@@6T_BO&lt;@X3Q;A???9@F&gt;???&gt;V.C???1=@_???;2,???&lt; TFKBO??5^U@???5F,C?@@*\;/&lt;@J6LRG0;;@4,U\P(N_TTU\P+;VO\NEWDJC/-FT1VDB%,D!P(N&gt;7YGEY\JC/,?E''0JC/,8E,PJC/,O&gt;8TU0 (N&gt;&lt;UOE\4JC''4&gt;EU])A''I&gt; GI4_Y^#G*5WZP]2_(A2]G6W(1:-U6$GV;Y#.1:&amp;"9:W&amp;96[^Y9?)X.&lt;";Z2";0HC/,F&gt;50U% (N&gt;7]YE_,@&gt;2+W"=7,7R+Y"2S7J TNZU\U%P(N&gt;&lt;G;WAV+B 9XVAVCB 99N!U5B ;7D"&lt;U3 (N=0YTE\8JX@SNB ;;P__,EXLJC/,P==PU]P(N&amp;?_FE\8JC#K8?AW&lt;&gt;O3958/8&gt;O#9AP82&gt;XDU?O#=/-^K&gt;O#9/ TN&gt;5=/E\LJC&amp;3;V!WIB ;;56PU&gt;9''7&amp;_^YA3?;SQW;@_\A=0DFC//4&gt;2\U-0Z$''):$()=7\190-:XG)I:^)JJ_]7L^-0Z;YKM[G''BK]G=;^W.]]I]1"0!ZYFQZG0;??;J @O&lt;C@4@@E\TJC/-4?0IC/#PU?0AEBGO?@@!]-O&lt;@I_^M?0@W(-BK?0@"PT"K?0@#C&gt;A&amp;?0AE-("K?0@[NY"K?0@O6*C?@AHI?O&lt;@A \,?0@R= S?@@RJ_@#?@B?R\@_??;4FI_??&gt;C* ???V&gt;]/??&gt;0R,H/??=Y3&gt;H/??=;@@KG??;^.&amp;H/??&gt;RQZH/???\R,O??=PGK???7HX#??&gt;W&gt;M_??&gt;7* B@99&gt;[@U3 ) AL8JC//P&gt;X(USP(N^O&amp;IEW(JC%/9!AVCB ;;UO&amp;EE\,JC#?9(AWOB/??&amp;9&amp;@?0A!3L@U4@+?@OSM@O&lt;@XY&amp;@E]@JC/,D&gt;0LU4P(N&gt;&lt;W9 AWMB 94&gt;4LU]P*L=58U]P(N&gt;8_;"1WBB/]6E,HJC/.1R1T47#S&amp;=4HGC/??HZGK&gt;M U?0@+]87?@D+K!O&lt;@ANZ(???&gt;MG0E(HN^!9*K1(.+-X? BD0F"F-?^7ZK???&lt; 5RK???9RW''?@@B&gt;^O??&gt;TY&amp;?0@AG#PH?0@-?\3?@D&lt;#UO??''7:^"???8E62???K:[3???(R,O&lt;@@!YDA_??6&gt;V"?0@L-$S???&lt;ZW/&lt;@@D&amp;&lt;^H-T"6!]!34H2 ZP*9ZX(8/?@@QPX(/?@@QPX/???8(&lt;?0@D)RC???&lt;T/@#??&lt;DQZO??&amp;FDHAP9G&gt;\\U 0(?=0TU\P()&gt;0\U\P(NL_%YEXLJSO\!EXLJC//M???Q0@@U??&lt;8 @C??:.[0H/???@H O&lt;@18@@??&gt;+&amp;&lt;BK?0@;78A5?0@H#XC$"7S???[  H/??&lt;R2 O&lt;@18@@?0ATYDBK?0@O=8C??3"@@O&lt;@UFQ@"???1BB@?0@T @C??? D CVK?0@U @C?@@"M @TN&gt;8S;0AVK?0B''=43?@C4BCO??3]P9?0@"HDK?@BH P W??&lt;#$V/&lt;@K*GJ???,;D+?@AN$8???4NNV?0@0_4''??=PZW/??4WBV???04FK???A"X/??04IN???KPR4H?0@!1VC??=8:(@W?@@1(-O&lt;@B[YE?0@X&lt;/K?@AMT/O&lt;@E=-$?0@T$? H??=XXHLGC ;??=: @O&lt;B.E.@E\@JC/,C&gt;MLU/0(N&gt;&gt;K9I!V+B/]R)AU1B ;??9* @O??:$@@E\TJC/?&gt;WI@@??="W8@U2@(N??&gt;!(@C??9E[ AW@B ;??/]&amp;*O??!=$VE_?&gt;&gt;CJ0?0AS0J*K???DH;3?@I"^&gt;/??4E+T??=''XP[??=D9&amp;(/??&lt;PS=?&lt;AA&lt;5P?0AS0T E?0A^6IO?@G8E5QW??80X$???L*V/?0AHR0NK?0AE]\K?@G4''&lt;O&lt;@QCB+??&gt;B6AC?@D!_@(/??80X!O&lt;@3U)QAP;;Y/&amp;4E\LJC/-,&gt;YLU\P(N??:8LJQ[E_&lt;@@7O8??&gt;2*_3??;[4^/&lt;@F"?E???(M S??;X 7?&lt;@R(R\???+SH/??=A+1/??0*EH?0@&gt;(9[??=K&amp;Y?&lt;@J6MT?0A@CH+?@B*)?O??0@DF?0@?/#[?@B3&gt;]???3:],?0@=^AG?@D)Z8_&lt;@EJ^.???(M S?@D''_H_??-/Q;???%4C/?@@M3&gt;O&lt;@SUXDAP;??-@Z(O??''4I@E_??7&lt;+@?0@]NHC??=]1ZO&lt;@H\U@???O"OZKBO??.RAB???]VY#??;?@@O??6TY&amp;???NM\O?@B!,#O??2DOW?0@&lt;(5P_?0@905RK?0@"8 ;?@BF\+O&lt;@HD2J?0@]@=_?@A_&gt;M/??:BOW?0@(\Z+??=$;)/&lt;@O\,B"0#?@C))./&lt;@J*X??0@7/B''?@CGJO_&lt;@I+&amp;Z???_V\G?@DA@@O??-1&gt;&gt;G???31%Y"???58GK???]R37??&gt;A_//??8;\CBO??V&lt;HL???TLOLU?0@P*[+?@@897O&lt;@F/2R?0@\I"P^?0@Z3&gt;BK?0@!2[+??&gt;W9,?&lt;@D!K2???0^IS??&gt;&amp;A2/??:$CD???(Q&amp;[??&gt;*MC???8! P"0#??&gt;L6"O??;=2,?0@U)&amp;[?@AM3L1??@Q-Y&amp;/??5.Y''E_??8!%X"???:D\+?0@U\Z+??&gt;&amp;B#?&lt;@E[73?0@RMK3?@@?KQO&lt;@HN,C?0@Y1PW?@A.I&gt;8,H?0@[AVG?@@=Z''???9 O0???.U\O??&gt;2L3_??&lt;]3.???*VY+??&gt;D6Q!&lt;N??;\XT#99AW??;5.&amp;O-Q?0BW4JNKYB3?@E?P)H/?@DP(VO&lt;@.BT ??=);BK???;?/O&lt;@IOJ0?0A$62PEC/&lt;@5A+!??&gt;LL"4U???VB&lt;#???F1Z/??*Q0U???1GF+??:3Y 8/??:3W/(/??:''/EO&lt;@C.AB???V@ 7?@@9Q:???1IO7?0@TP5S?@@A @O&lt;@BBV&lt;???=I"[?@BY$00#??;PZ8@[?@@VVQ/??)N,B?0@QKP;??=/E(/&lt;@Z-_O???[H 3?@B7LR/??&lt;CJ0?0AW#/+???G:(O&lt;@U .="?&lt;@U .&lt;"?&lt;@VD:K?0@N@(??@B7TN/&lt;@C=@!?0A*9:7?@BS#%/&lt;@DQ86?0@$Q"S?@@VUPO&lt;@V0NVBO??-A+ A/???Q;:???YN37?@@@1JO??&gt;B C???D2_/??&gt;/N;P N?0CXF0C?@+ 2PAW??=XK0O??&lt;[E@??&gt;)G@C???D\ O??+M&amp;@"???+M_@"???*^&lt;@?0@N8DC??=XB@O&lt;@C%H@???D%@C?@AQCPO&lt;@@F@@?0@HI\C???4&amp;PO&lt;@I&amp;S@BO??-A+@A/&lt;@AYZ@??&gt;$:0C?@AD-@O??6&lt;W@?0A*5&lt;C??=,"@O&lt;@K\1@???0L,C?@E^O@O??&lt;_*@?0AVB&lt;BK?0AVB&lt;BK?0AXS(C?@@8B O&lt;@K]Q@?0@O4DC?@F+''0O&lt;@INN@?0@QG$C?@BQFPO&lt;@AYU@?0A[@8@H??&gt;4F,@F???=G0C??=$;PO&lt;@@CE@???8J@C??&lt;SJ@O??:&lt;&lt;@B@;??*2EG/%GER3?@*[51N(GC/?&gt;+HT@S1T,?0J&amp;= C*A0;??.AD''O$AEY7?@@:;YL_?@E:^.A;?@@1V2X/?@A?O7???&gt;[?@?0@QXP[???%P9@#?@I#RF_??0PX$A_&lt;@J3OC???.=PC?@CD"6O??=_P8?0@''(X&amp;KBO&lt;@*\4N?0@H?;;7A&lt;T_??&gt;/SL8FW_??:?WB[/??,8@@G/??;G3."???:NNU?0@D]03??&gt;G7.?&lt;@B84LBO??RV&lt;@?0AEAE0E???#8#/?@@*ZGO??8L+@?0@FWWC??&gt;GINH,H??=,K]O??=,K!CX1G0;??23%@O&lt;B2L7@E_&lt;@J_Q@?0@NS,C?@E[$@O&lt;@C.N@?0ASI(BK?0ASJDBK?0AVDPC???D_0O&lt;@J_8@???1+ C?@C-,@O??:;3@????(@C???_ZPO&lt;@@-''@???Y&amp;4@H?0AK9T@F???:ZXC?@E,U@O??;-L@?0@$N$C??9T(PO&lt;@IM8@???RL&lt;C?@@?MPO??*GD@?0@NAXC??:''4PH/??:''4PH/??:^1 O??&lt;_6@???RJ&lt;C???@/0O??%Q!@???[GHC??&gt;;!0O??6;''@???:Z,C??:S&lt; @#?@D/%P@[?@@K!@O&lt;@I,S@????3,C?@@_X@O&lt;@N3X@?0@TLP@HC/?&gt;1H@@??=H @@U?0GM@ 2K???I1?[??&lt;8(-O&lt;@OZ4H???Q/_PE?0A@;H3?@C&amp;#UO&lt;@D AA?0@ME(_?@E!BC_&lt;@O5==??&gt;''/[K?@C=_!O??;_=&lt;?0@ME#K??;&lt;S&gt;O&lt;@NZOIBO??0%K8???Q/ G?@CX8B/??3""@??82?_RKAP;??.DOPO&lt;BNZ$@E_&lt;@E,4@"?&lt;@ENY@?0@I8TC?@AJ^0O&lt;@D6E@"???=U1@?0@AH&lt;C???03PO&lt;@AOC@???9:8@H?0@90(C?@@Y50@[???Z@@O&lt;@BK5@???=U0C?@@V3PH/?@@*$@@#7A _?@B''L0O??88@@?0@UQ8C??&lt;"EPA;??&lt;"E@H/??&gt;L^0O??:GC@???&lt;%HC??=B@@@#?@CML0@[?@@J)@O&lt;@ET_@?0@H/XC?@@[W@O&lt;@F#!@"?&lt;@EHU@"?&lt;@B$J@???9JPBK???2T\BK???+7DC??&gt;[+ O???-1@???.!TC???5W@@#??&gt;*8PO???CM@A_??55\@???9JPC??&gt;0= O??:1&amp;@"???62O@"???62P@?0@YEHC??&gt;]L0O&lt;@IS5@"0#?@C700O&lt;@V3M@E_??8S!@???03LC??&gt;:E@O??9PU@???.H&lt;C???S;@O&lt;@BX@@?0@OL4@^"?&lt;@C?W@?0@HW@C?@@^Y0O&lt;@E )@?0@D#4@H?0@ROXC?@@M+ @W?@@8OPO&lt;@@*$@?0@BQ&lt;C?@@CB O&lt;@A!R@?0@CB$@HC/?&gt;;\)@?0LS%H@U???EFXC??=/&amp; O??5WB@??&gt;;NHC??;9B O&lt;@H;!@???W.DC?@C($@A??@B7:0H/?@BT= O&lt;@F#"@?0@K1&lt;C?@B!G @#??&lt;.OP@[???&amp;JPO??;:$@???1K C???Z@@O??;I;@"???7D_@"???&gt;$3@?0@ZNDC???;\PO&lt;@F;6@BO&lt;@"X=@A/&lt;@@FE@?0@D#8BK?0@A9$BK?0@B*P@H?0AZ4 C??&lt;#&amp; O&lt;@E,3@???V=\@^?0@(*PC??:"Y AW??:9L0@[?@@M+ O&lt;@G2$@?0@MSLC?@@&gt;T O&lt;@E8&gt;@"?&lt;@FKM@"?&lt;@C''B@???/Q&lt;C?@@IG0O??8_+@B@;??1"^0O&lt;CCER@E_??2,3@??&lt;23LC?@CT3P@[?@QTEP@S??&lt;+L0O??4H@@?0@5L4@FC/?&gt;=:O@?0LS%H@U???ASPC??=&amp;^ O??5)R@??&gt;&lt;/XC??;1\@O&lt;@I&amp;F@???V=\C?@C&lt;TPO&lt;@O%H@?0@''I@C?@B%+ O&lt;@P[6@?0AE"$C??=)!PO&lt;@JJ$@??&gt;?18@_?0@@XTC??=TOPAW?@A5B0I;??&gt;WG0O??5;!@???Y'',C??&gt;0=PO??9VZ@???# @C??&gt;L^0O??;I;@?0@Z&amp;XC?@B\$@O&lt;@I2O@?0@SXTC?@A*Y O&lt;@GNE@G0;??6H&amp; O&lt;BP4=@E_&lt;@3SM@???J3LC??7&gt;O @_??&gt;^.@O??;.Y@???0B$C??&gt;X)@O??:SM@???4&amp;XC?@@0)@O&lt;@FKM@G/&lt;@ =0@???J3PC??7D^0@_??=KG0O&lt;@FQR@???&amp;JPC?@B.3@A;?@A.= H/?@AJ^0O&lt;@B$J@?0@OL4C?@A[L0@#??&gt;^.@@\N??&lt;U:8C?@.&amp;#0AW?@AV)@H/?@@)B O??=[6@?0@FEHC??&gt;TEP@#?@CK+ @[???03PO&lt;@L"#@???^#4C?@A8EPO??3KM@"0#??&lt;KR@O??7D_@???W.DC??;(T O??/E1@?0@#U0C??=!:0O&lt;@OL3@G?&lt;@L\_@"?&lt;@H)R@?0@^1&lt;C?@@S0 O&lt;@LPT@BO??3QR@A/??&gt;R$@???%Y(C???U\PO??=[6@???+^,BKBO??9PU@???/*LC?@A!R@O&lt;@I&gt;Y@?0@\ @C?@@Y50O&lt;@I,J@?0@$7D@_C/?&gt;&gt;,)@?0H:G,@U?0@Y]\BK?0@Q7DC?@@&amp;@@O&lt;@CT3@?0@TH&lt;@H???+F\C?@CT3PO&lt;AEPT@???J3LC??96T @_???J3PO&lt;@EHU@???.H&lt;C?@@&amp;@@O??9()@"0#??&lt;;:0O??6,K@???P8TC??&lt;HOPO??0?W@?0@"%HC??&lt;&gt;= O&lt;@L:8@G?&lt;@B&lt;_@?0B,9$@U?0@Z&gt;,C?@AG\PO??9\_@???X7DC??=+B O??;\J@???&amp;JPC??&gt;U&amp; O??9VY@???-0,C?@A(8PO&lt;@IY;@,_&lt;@D#5@?0@Z&amp;XC?@A*Y0A&lt;N??&lt;6/XC?@+]#0AW??8JY0O&lt;@MSM@?0BI#4@G1O??6&amp;E@?0@NC8C??&gt;J=PA;??&gt;WG0H-8???5W@C???D.@O??:YR@BO&lt;@YWW@???J3PC??.+;@O&lt;@MSL@?0A;G,@G?0@W#4C?@ADY0O&lt;@DK!@?0@W&lt;HC?@A"3PO&lt;@A?,@???0B$C??&gt;''50A8N??9).DC?@0%JPAW??3KL0O&lt;@MSM@?0A;G,@G?0@YEHC?@@6.@O&lt;@C3M@?0@V3PC?@AG\@O&lt;@B0U@???5/XC??&gt;&gt;(0A;??7\3PO&lt;@MSM@?0A;G,@G?0@YEHC?@@6.@O&lt;@C3M@?0@V3LC?@AG\PO&lt;@B0T@???5/XC??&gt;&gt;(0A;??7\3PO&lt;@MSM@?0BQJP@G?0@''9(C??&gt;^.@O&lt;@E8=@???V=\@^???&amp;JPBK???-0(C???[!PO??&lt;@)@???*.DC???X^0O&lt;@D6F@???+^0C?@@,E@O??9()@"???:GB@"???&lt;L3@???8ATC??&gt;:EPO??:1&amp;@BO&lt;@FWW@A0;??-;W@O&lt;CBT)@E_??L,3@?0@5L4C?@F4O @_?@A&lt;(0O&lt;@C9R@?0@O%HC?@A&lt;)@A;?@@V3PH/?@@OL0O???9;@?0@GNDC???;\P@#?@CW50@_???350O&lt;@@FE@???&gt;FXBK???&gt;^0BK???''+ BK???*.HC???@JPO??=I&amp;@???$P(@H?0@(Q&lt;@GC/??NWW@?0LK&gt;D@U???"WDC?@C\Y0O??2,3@???H9$C??&gt;WG0O??7J$@?0@ZNDC??8GW@@[??=&gt;3PO&lt;@DQ&amp;@???0B$C?@BK50A;?@@/G0H/?@@&amp;@@O&lt;@@RO@?0@I @C?@@LJP@#?@BT= @_???*.@O???36@???&lt;=\C???&gt;^0O???CM@"0#???G00O???IR@?0@DK C?@AH= A??@F&gt;8PO&lt;@GZO@A0;??1SB O&lt;BN''C@E_&lt;@Q*9@?0CML0C??&lt;_B H/??=ZT O??Z^Z@???S"$C?@IXY O??1&lt;J@"?&lt;@Q=H@??&lt;23P@EC/??G\3@?0J!3L@U?0AB8TC?@FWW@O??0B$@"???7/C@???BC8C??=:OPO&lt;@O_B@???@JPBK?0AB8TC??9()@O??.9''@??&gt;X)@C?@C?W@H/?@BK50O&lt;@O=\@?0@"%HC??&lt;@)@O&lt;@O=\@"0TN&gt;:377_&amp;)E_-J"3C;S,.KAP;;+LW;S!W7R(/&amp;=49K"0TN&gt;=+7\_,CE\,0W0\1)G#J4Z^L119.A(]?"W=."???95T?"???&gt;Z+A''H..B@;;6/\E=2XUIP+8B P!B ;;/O^5&gt;X$U^ (N&gt;=+7$/&amp; E\&lt;J??&gt;[&amp;XC?@FGL3AWRB/&lt;@=L3&amp;?0A!&amp;Y U4 (N&lt;_](&gt;VHU^ +8F_09ER(J=737DQT+B ;;6/^[&gt;I0UHP(N=6G7H_%!EW(J=;'';$QT2B ;7"O\.&gt;UXU^ +86?-5ESTJC/-!=2/9"QU:B/^6=08UM (N=177L_%1EW(J)/-4ES0J=?O7$!T=B ;78O\/&gt;UHU^ +8%/,JE]LJC/]$=2?9V1U:B/#5&gt;5$U5@(N&gt;&gt;37^?&amp;$E\&lt;J??&gt;[&amp;XC?@FGL0AWPB/&lt;@=L4@?0A!&amp;X@U4@+??8&gt;Y O?&gt;P43@E]TJC+C8[?\''ER(J=737DQT+B 98&gt;M37Y!T,B/1F&gt;A8UKP+;DPP.B 9A&gt;J+891WVB ;N"0S9ZH/;//%-&gt;2VKA_^@?O@U&gt;&lt;:K=238O@TNQ_\+=&lt;8UL (NO_"8&gt;V4UR0(N!/!K==&lt;UMP(N=1C7&gt;/%*E_-''&gt;2_;H_-9&gt;:;7\DS7G/]\=3K7G/]3=7G;H?\!&gt;6,_&gt;6/&lt;A1W7H&lt;/7@O\+8_\TV/-U&gt;5S;DE,/&gt;1 ::O\^G/ %X!W7C/0L&gt;08GC/1P=2+9[QT6B :@=2+7"AT8B :&gt;=&gt;_8+1W7X_2/=2&amp;K&gt;;#9[_,R"?.''?V77IH,EC/\&gt;&gt;XJDE_%0&gt;4LGS_-CQ/,&lt;S?-E"8/;P_"N]9$H&gt;5O=\O\%&gt;FDF=3+&lt;X_\Q"?\=&gt;E.K?E,EC*O8&gt;(LU&gt;WC;HO16A?/%&gt;G[;GX.K?WC7H(.K&gt;GW79_15AP9=&gt;L38;!W7D?3L&gt;1LG&gt;IS;.AW7D?1V&gt;1LG&gt;I;;2!W7D?3\&gt;1LGC-+7&gt;0P&lt;B/_3=9HUOP(N3/#6!AW9[?36?V?7IO#/==[&lt;;0\N__#(&gt;H,U50+;-2LU6@(N&amp;_ .&gt;A(U( (N&amp;/#&gt;&gt;O@U=1S&lt;?/,T=8C&lt;;?\$&gt;N&lt;GC/\D&gt;@38Q!WSB ;7A/_0AH/??564?/&lt;@].X%??&gt;J7I??@J$Y6???=V9#BDS7F]HG18?7^KRK=8&amp;K?0B_PP[??8(ARO&lt;@_^1J??=T?+#?@@+R,@#Z&gt;1\&lt;A4&gt;G&gt;7%_"?.LBO#L$AVKJ49LMW H=?@G7W''LTH,.BO.,&gt;4XUPY-B0(/6"&gt;''K1]:]B@;7C_&amp;P!AW;._ W=:[7&lt;O,&lt;"?-R&gt;8LEV]-B65WZBO-C"?^]&gt;?S;0O0S=4ZKA[F==2+7VI.$22;SML00B@;7B?%H&gt;@TU"?_?&gt;2BG"?//ARUZ^CH^&gt;F'';GO1)A?,H][S[G8/7;?, #8/;?0W?@@@@@_-/?0BI??=9=12KBO,"=2S7H _7H?\W?0@#543?@L$(-A&lt;N=/#T&gt;@@U5@(N?BC7+_(/EWDJ&gt;5#7C!U1B/\EP1T6B ;7AO"3&gt;"&lt;U\P+;VO\NEWDJ*O0CE]LJC(38Z?&amp;OEW(J(?/.E]$J?@TV6 (N&gt;0+8UO&amp;CEW(J=37&lt;O1V,B 8(&gt;E;9#AU:B//I&gt;5 U60(N&gt;&lt;O7]?&amp;IEW(J,_?&gt;PH@@E]TJC#C7;?&amp;"E\&lt;J??&gt;[&amp;XC?@FGL0AWPB/&lt;@=L4@?0A!&amp;X@U4@+?@C:Y O?&gt;^\3@E]0JC''C8A_^_E]$J?@TV6 (NJO!-AO4+=1/7XP^,][^@1(/7G8/%:H/7EX/(W\]B*JF\,+FO7 #7CS+W&gt;2K;RFC;@?,]G/^@=1,U/;A+VVM;SR&lt;_R_,G5P[7@ZY]T#QN]U0_QX-)(7:-BH+74PW)''[W^G 9G&gt;LC8+AW;G8/;D//XK_]&gt;AV3[\ZED"0!?UXM.G9P''AZVV&amp;9BP"9BK%&amp;6S\0#7H// "?.D=1.K"?^EAP9Y=937CAT9X+3.7[?K6O\G''3ISS''X3&gt;00_&gt;9/7HAW;]O\8YN;7K/\Q0_]-G(/7O?,E3E*,BO,E5?]-"8/7A/1T"8,$=3L"AU2B&gt;2! "?-#B@;;B/!?=4HU+@(N&gt;3?7H?^CEX/7SO\(=2G7FMTH;_0*&gt;037PP_;A"1@&gt;2FK&gt;3DH??&lt;.!&lt;??@M:CD/??7W 1?0@:_N:.$X!,G(-:_VY.S0#7DE8E+M2[1(.4"?]6&gt;&lt;+;P8/7\P NVJK8L!W?@@S6 _&lt;@@Z],?0@I!#??@@L,3/&lt;@A8/@"0#?@@X#PO&lt;@AMQ@???=9"S???%E(!?&lt;O/\^=&lt;@G:[F95-NVW4(^"?12=19&amp;"?"[A_\)VM+;KA9W"4Y9[6JD''GN6UH-3"66DY78HC"+7%/%-E_,B&gt;2!S&gt;=C;-_H7=2?7X[?7K_]0==C;JLO;@Q?7B_/IE_-&gt;A(;$''?S)"?&lt;@Q#L4"?&lt;@JZHL???LE,#?@@T*0O??\^$8BO-&gt;&gt;0\U=78F!2Y?IBZKQX-!.8[7L@ N&gt;&gt;37G?&lt;@''8@@E_&lt;A_H@@&gt;1?&lt;H@_;E]5+3!:*";RV/Y&lt;HV?\SAV1;???)C!RB???6&lt;^2K](.K)(/?@AB@@@ N&gt;1K8!XLU&gt;7/79_]5=6+;SH/;O/,="?\=&gt;16K"?2;=16K"?]***''7M_.HAP9S=9;78!W+&gt;9XE''U*]X&lt;.K)X..%+&amp;#BF+7A@VF"F59_(.F"8"N ZXH&gt;2[8FPU&amp;;V/7@_,N"7"K\8U*_0!&lt;&gt;08E.X&gt;M$**K*X. !JH?BH=?&gt;5/&lt;&amp;_\$"0TNO/^I&lt;!UIX[;KG?_Y&gt;1;=__\^=7PG+''R'' ;VK/8.;(:Z*&amp;&amp;:,^+NKBH8F&amp;(.Y#LB.BF_OAX"P]XRK2P#8C?,\&gt;=$GJT=:X18NP/"6&gt;KLU&gt;2RK&gt;1W;=?,S=?_;I(/7Z?3L=0"KAP;;I/]A&gt;ILU-J3J/A;7U_\H?C;;BL F\61&gt;[X- "3.;X*Q&gt;I5Q&gt;U(U@BO??VY&amp;Z?0A=^2O??=Y&amp;Y/&lt;@&amp;8S]3H&gt;H^!:K]F8?_6,H=01_AZ3Z''L^K- #7CCJT&gt;0$?S[SF2&lt;&amp;=9A;7GO\C&gt;0@F&gt;016.:&lt;_C%/7''/"9EVHJ#O,EEVLJC(+8*&gt;(U"X:K%X.[BO_C2/\J?N G#O,J4H.K?D37H(.K&gt;D37SH.K&gt;&lt;TEK:U[81:-";Z])YTH[O\IAXZHYV:G"0 NR?"+=:$U7P+&lt;HHPU7 (NQ/\"=:TU=1GR*+?$(%$:G/\\A/]!&gt;1.&gt;H/,8&gt;0G;@?,&lt;G(/;,?&lt;AOZJP???72$+?@BI]\O???CV6%8.Q"(.H_E9;W7!#BO\\V0V5=)&amp;0";FK=8W&lt;A/-""?^YB@:I=:I?E_]A:?\M=3T_"&lt;I&gt;/&amp;:8BO\G=1K;- Y;"7*O^H,H&gt;0_;K5K;]O,E0_,==60_&gt;ELD1]E)&gt;1_;G352VSA%4&gt;_K)_C2G08%==U?EZ&gt;K-9Z #0!,=1DE\XU5!8VKBGRH#K\_=977X/\F?I'';A/\=&gt;:PGJY=E=1 ^C#C8_O](E__\&gt;1;;/@_;@W5-LB=&lt;*?@^=&lt;K;G//\A?,Z+277Y?&lt;@1UF*?0@++%[?@E$P@O&lt;@"/@@G ;7@_!@=0PU=;&lt;G9LMGNCQQS#P_?DC7JAW;K/S;CO]MG/-J=1?7R _7UNK?@HXLR/&lt;@"/N6=3S;B/\R&gt;48_&gt;0G&lt;QPX,R-O[G8/P.\CH-@ :;0U]\O,GN8/;M@ N\O#!&gt;4 U=1HG???-!&amp;#???''W^/??8)3,???5JH[???[\+H-?"8"K_ZDH&gt;0;7]?]_&gt;@C;JH/;F/.HHO]VAW&gt; [[-B"???=3"4"???:F2,???&gt;R[3??=EZ(O??&gt;KYDBO,KA:JK''H2V#)6K"8"Y] #7G_-&gt;&gt;8_&lt;@?\3"?\6=8CW&gt;2(E*UR9X\RK)X/?@AY@@O&lt;@AD@@?0@ 0@C?@@;@@@ N/O R=0@U70(N=0/8"O@U8@(N&gt;&gt;37,?%/EWDJ&gt;5#7C!U1B-7??#:@@AWUB 80&gt;CC9[1U1B/-X=08U\P+7)O0!E]0JC$?8Y?&amp;IEW(JPEDUX *L&gt;0TUX0(NLO ]&gt;YTU^ +7\_0+E]0JC/\K&gt;H79]!U:B/\M?G,U8@(NOO_W&gt;P4U?0@*ZGJK?0@NXHS??&gt;_CUO&lt;@@ROV??=JOJ0H??&gt;HJW(F?0@AP=[?@J7==O&lt;@C5ZH?0@ @ 3?@B5OWH,H=08D&gt;5C???W1I?-Y??&lt;B50(_?0C?1:7?@@@%G W???/ZG/??R+M6???M&gt;Y+??=-PX/??1WM4"0 ????$EC''G=04_??=&lt;9,$F?0@HF_3??7N(L_&lt;@G.,B??=[U&lt;?7VH/?@K5QZH/?@CFT_O&lt;@%8HL?0@GH 3?@K9==@#?@DO8DO\N??&gt;&lt;=\PF????VMS?@JIH]O??=N)&gt;?0B%-83??4/F:(,HC-:&amp;&gt;P@U?0C"&gt;&gt;_?@@HDF_?&gt;6(LR??=7_N8_&gt;6/7I/]+A?&lt;A#0X$?0B\E(#?@B_97O&lt;@E&gt;%8G):K?0@R @A=?0@(O73??=D=-@#?@EW.EO&lt;@ZK+ A_??0%I0?0@&gt;!63??=R@@O&lt;@G(@@??&gt;? @BK??&gt;WIM:K??&gt;!O#S??9H1;O??4\T ??&gt;W)&amp;S??;SW3/&lt;@32^0&gt;2^RN(,HC/]Z=539@AW?@NK&lt;@O&lt;@@ P@??;Z 0C??7]=@A?;Z?\&amp;=6,G?0FOA$C?@I0V O&lt;@I?''@?0@W:X@^''(/?@AJ@@G7?@B ? O??4S7@BO&lt;@U^8@?0A(.,@E???BT(C?@C:G O??5H@@?0@^ @C??;&gt;@@H/??9\%@H/??:D&gt;@O??$#H@???Q1TC??9^&amp;PO??-M_@?0COI&lt;C;I9H:"0!:^1U:B 9$)/$@E_&lt;@8/0@?0@BA@C??-*C@O??]74@G?-+=2[7Z0_?@X&lt;FPO&lt;@''AZ@?0@''&gt;\C?@A_) A:^"?&lt;@D(@@__&lt;@JC&gt;@???QO\@H?0AU; C?@F":0@W??&lt;IR O&lt;@O(^@???T @C?@A:@@O??/8@@"???%2S@"???(S9@??&gt;RL C??=GEPO??%:Y@??&gt;45&lt;C?@L&lt;''0O,''$#*KBO &lt;=5HU\P+;VO\NEWDJC++7]&gt;\U,@+7HH0U,P+8W@R2B ;\&gt;D''7KQW7#O,Z&gt;80G???(R&lt;_???V=,/??5+A&lt;??&gt;?*CG??;&amp;ZGW;?@D&lt;UY?&lt;@P&gt;9VG(/?@D98%O&lt;@FV)??0AF_#S?@B[X5_&lt;@M0$8BO&lt;API-$A/&lt;@I*[(???J_B#?@A):XO??0H%:"???*O)^BO??.).&amp;]/??,%?X???@*CK??&lt;]W3''+?@B\@;O&lt;@F NVG/^7&gt;B(U?VG;CO&lt;@K''(&gt;A/??7.:C??&gt;4*S#???JWO???*0!2"???6$9V"???]B4N?0A@NPO??7#R&lt;/&lt;@%,[="?&lt;@R :X"?&lt;@J;I.?0@!_TC?@A*I^O&lt;@H,/&gt;?0@ Y6;??=X; /&lt;@K_!R???%^4C?@DEU0(/?@E(G[H/?@G38%L6K=6VK?0@;@$;??&gt;;[IO&lt;@R#:8???"Q"S?@DB&gt;&gt; #?@B7^.@XNIO_J&gt;BTUY?\X&gt;2V[&gt;2RKBO,TA?\''1GUXG8-WZC, &gt;1XHK?,C=36K=0/7I@V]TK5R=097BEHGXXBIZ1:G"8ZKY88H&gt;0(G((RU")&gt;KBO\")-/AG?]''A3G;BYO[G8.1(&lt;#W90#7G_\:&gt;3"KAP8$=2;82AUX"293X2DH:S&lt;E'':.3/ZJK)H.[Y(1T"5](N2C;E  /&gt;0O7OX/7BO\ AY7;A-A 5H.5"&gt;.[0OHHL-&lt;E^7Q)U&amp;ZKZ(-5.X/H";F#2M_''BO\]=3+;NH/;C_,#AW''7AT"8P(,HC";7/_#AE_??"&lt;X%??=+N]/??&lt;I)NO??G)[HG?.=A???-HFI?0A[I&amp;[??9M&gt;]?&lt;@[-&amp;ZG/&lt;@XO&lt;&lt;"?&lt;@JPCD(_\T"0#7F@_;IH/??&gt;^^&gt;''[??:I!A(/??;=9&amp;(/???2FY+NK?0@(@DC?@BEO7???:IA&gt;?0@*AI3???I/P/&lt;@L:.E"0#?@FL$FO&lt;@*]/(?0@+747?@PT -O&lt;@*)3.??&gt;Y;!S?@GQ#D/??VQG,G?1(AO??3SL3??&gt;33L7?@A*)^_&lt;@$%ZG?0BNW''[?@D03L?&lt;@G*FJ?0@23L7?@COWSO&lt;@SR"4??? ]&lt;;??7RHL/??\ &gt;^??&gt;70-C??=;0X/??1340G0;7B? Z&gt;W$U??&lt;N &lt;C??9M&lt;PO??N?=@??=F@LC??4/CPO&lt;@Y*V@??&lt;6OLC?@O!Z O&lt;AFL3@?0AFL4C?@O#50O&lt;@ @)@?0B&lt;2TC??9 9PO&lt;@1#[@??&lt;G1,@_&gt;5_&lt;UAV_B/ \=1DU(P(N&gt;=?70_&lt;@V8@@EWHF???T,?"K???H-S??@@=:8/??&lt;@U!?0A^AQ8H?0BK$V#7BO??]GD''A/&lt;@C?%W?0A ( 3?@C\85_&lt;@C574?0@+WJ2KBJS7D''HF??&lt;6?0C??&lt;0A@O??Q;G,??&gt;SS!S??/^@@O&lt;@''4Y&amp;???] @C?@E69&amp;!&gt;$A :V=4;:R!UMB#/=DAT2B :V&gt;H_:K1U1B/-X=08U\P)D?G,UL (N=2G8,O"LE_-P&lt;O]L=1C&lt;''/,P=5C&lt;&lt;_\+&gt;@?7P0Z$"@V0!I57"6,H&gt;=DG"5!+^U.JBD&lt;-A-FLA_\J%--=(_\:BO_XA;A''=2O;R!8NV?"G&gt;$,U^ +;H_65E^DJC,K8)?!6E_\#A'';7NO,M:/,&gt;"0#;X/,T&gt;2_; O-&gt;=1O;I?]_G?]I"?\M=IS7N0#;I ZBK%AVK(,""4+W_?\XBO^8=1G;-0Z_=0SP3N2K=1FK("6SY  N$?#3&gt;H&lt;UQ@(N&gt;&gt;77_O%-ESXJC//;=&lt;O:K!U1B/-X=08U\P+7BTPUM (NNO^X]AT7B ;8S_*&lt;=7LU;U?7A/-DG/-O=;+&lt;''/.!A/.PY41VG/,%A?\#:?\A=&lt;T_=5K7\/30==XG?0A &lt;BC?@H(O8O&lt;@HWL3?0B=#L4_&gt;8,)E_,4=477L [M+GIHR''Y/O1&lt;N&gt;E/9L?%-E_,+&gt;;'';-O^9&gt;2+=[_\*=&lt;/7-_/K==XF=23^6?\&amp;=2 5:/,ZG?-OA/,QAI8JC/\''&gt;KC8#AW;TOC7SO\P?I;;DO]P?OG7J? O=4LF)H E,HR]]8-+BO/Q=2+76@^0Y?\#&gt;4(^C-38._)KEW(J&gt;5O=-QW"B ;-=6?:R!UMB/,E?$(U80(N/?!;&gt;$PU%P+;L?89E^PJC.+8S![7^/%-&gt;2+&lt;&lt;O.6&gt;OC;J/5-=7+;J/\VA :;&gt;G;7I1T*B/]&lt;=1DUJ0(N.O$.=7HU''@+&lt;Q/\HEY4JC+#9K/]&amp;ER0J?D[8G!T-B/,QAB8JC%/7_A[!B ;7!_\_=0@UH?.V=1[7J/#N&gt;2+7E/^V&gt;0_9@_2\&gt;:@F&gt;6I%&gt;2]VG/]V''AV379K7@(/*BO]R=7C&lt;\0\N%/]&lt;=&lt;8UL (N&gt;CW8X?^1E^TJC)N8&gt;H&lt;U9 (N;_]&lt;E.LJC.77_A[#B/ =&gt;#LU%P(N7O]&lt;E.HJC-G8!_#0E_30=2+9[_2^&gt;:8G??&lt;#"&lt;_??&gt;6@@O??(''P9??&gt;9 @@^&gt;2TG=6"&amp;=7?7QQ?7X@\N=6/7_O#LES(JC.''8''___ESTJC/\G+?_;ES0J=?O7$!T=B ;)&gt;I78&lt;AW&lt;&lt;O\*&gt;V7&lt;8_5-=2+8&lt;@\N&amp;?]&lt;=9 UO +8EPP?B :?&gt;J_8]!T/B 9[&gt;AW8&lt;AUEB :?==0V9@(N=8''8CQ[7J.&amp;-A.37Y)/7''O^Q&gt;6RVH!=/9/,*LF&lt;FH/-$ O.Q&gt;937Y''/,G:4F:PQ*A$T#&amp;O\==3_7D)KLG9,F=2+;=AW7=I,G3O\R!O,7&gt;34#_$T_C)K8M_ HET$JC/\1&gt;I77DQW;-_#0&gt;2+=[_#M&gt;2+7E/^V&gt;0K9@_,*A :2&gt;F[7]QW''B ;8H/))E/%-&gt;2+&lt;&lt;O-:&gt;OC;J/30&gt;6?8&lt;O,*?V4GC/"F&gt;&amp;PV&gt;2+7F?^V&gt;039@_,*?OC;^/#0&gt;2+&lt;&lt;O-9&gt;OC;J/5-A0;7Q/ ^&gt;F$U=9#&lt;DO,Q=7+&lt;&lt;O_VA?\,7-/7I/\(M^+;F!?;S?,QEY8JC/_U&gt;![9[QT6B/4.&gt;F$U:@+;S?,QEY8JC)/7_O!)E^ J&gt;4?;DQV^B :?,O!6E^$JC/!F&gt;VA4E_]"=1/7O/]#=6;;E/\=&gt;6 _&gt;9^KSO-?_4TH&gt;2''7._,*?V77J/_K=2XF$3[G&gt;877((,H&gt;Q@D=0?OI?,2&gt;2%DI/,L&gt;05E&lt;O\-=27Q&lt;O\MG0:&lt;&gt;CO7&amp;AWH&gt;9#7J/%-&gt;=XF&gt;208N?,&amp;G8/;G=$987(H&gt;7C;''_]G"0W7+/ UE_, A#-&amp;+-WV,J;[G?\ A 8 =514ET8J=3_7!AUOB 9I==;8.QUH"4!:ZDVL0Z69/J''\/^]''7,^,(8.9";PHH8(E"8.GWU.ER8L:!59/&gt;1P:^_-C"?,\BO.F:DK7M/\?9O\O=3_7OR#7B_,TG&amp;3;BQUQB 8"&gt;I+7K1V6B//R=:\U-0+;@ R8B ;; O ,&gt;K@U: (N)_#X&lt;AW8R?06&gt;20G"?,\\?,*U((HS_-6=0K7D_ 7&gt;1G7@/]6A/0#%1V&amp;2I_ "?\IBK;7G//NA085=;K8.QUUB/[;^!UVB ;7C?_U=5(U:0(NI_\==3DU+P(NW&lt;_8,AW,B 9_1?"0E^0J=8S7R1VUB 8''=537&lt;1VXB 80:/"0E_,6A8/;GH'';BDJJBO,[A?\-2_\D=90_2O\Y?C?7HO"0A0:R&gt;@TV;O^="?.==2BK"?"0&gt;4NKJ_/[J__[&gt;4NK"?20=2BK"?^=;O.=AP9S1?"0E[$JC%[70/"9EVHJ#O,EEVLJC%OG&gt;K@U?KC7HO ?=5?&lt;O?\ &gt;K@GC%37&lt;/"9EVPJZ?,IEVTJC"S7-/!HEUHJC/-/&gt;C78,AW&lt;K/,E=1/&lt;O?\ &gt;C?7F0XN&gt;0K7Y7DU[0(N=&lt;W9T/"9ET^KV69)S0#7%?, &gt;9\GZ\][*D^KBO,!M/,T&gt;3O;NN/;C/\VG&lt;&gt;K.:^-10#;+/\ =:8G+T&gt;;[&lt;&gt;KBO\V:?\N=3#7L3W7EO, G?0,&gt;0$U4[-FI"Y[Q4UFV-C-&lt;++P4!?8CAY%B ;;CO_1=:PU[ (N!L\V&gt;E?;D_\B=7X5&gt;D/;HO0?&gt;5?8O?, A 8"+?"0E^4JC/]7&gt;\8V&gt;KC;HO0?&gt;4O8O?, ?C?;O? ?&gt;2C&lt;,@\N=&lt;''951[;D_\B=7[;CO!K&gt;2C&lt;O?-B&gt;C?;HO0?&gt;3?8O?, ?K@GC+O9J?\&lt;E_\BO-3;I1;;@O]I&gt;&lt;/;A_\??C?7+0[7MZ_23A?;8M0U; (N=0/8*O\&lt;E^&lt;J&gt;&gt;C\E^8J&gt;I+8P!U[B 80&gt;J#7OAW/B// 7AW.B 8$&gt;@/75AW0B ;7T__B=6LU''/,$8SW7JH,H=3#(=0G7P_]KL/[;OQ?;I(,5MW_;H0 %=7C;HO20=2C7X0[7=?]9E]"3Q"D&amp;XTU@O6KQ&lt;/J44]\_C$J9&gt;ATU"@^KO+%K7''PH&gt;2?;[/]G"?\#=6N7"8/;X?\ "8/8,O.7"0W;J6T2RQ?7:D\U&gt;08FUWJR.["$&amp;,D_=08FC#W7C/&amp;IET4J,_-$EUTJ=/-:EUXJC#W8O_%/EWDJ&gt;5#7C!U1B,QOEUTJ=/-:EUXJC%[7:_ 9EZ:?_C\_&gt;6XG!/,]JC!S"P!MA?&lt;@AL? ????H@C?@@H0HO???&gt;@@#8,H4?]-=1S7QQ?7\ _7JR"0OQ9H"5Y.YEDH=0[7O/O;O,W;HEEEH=G&lt;2?\ =&lt;&lt;G1+R:318N&gt;8C8G?&amp;KEW(J=1=FE^(JC"S7=?]#E_\E&gt;4HG&amp;]"&amp;,,&gt;K1H.&amp;\I-DBO\ZA(G7FCOZ&gt;1.KBO,5KRG;SO-F:BO7MA?7E8/&amp;7I#7EP#;F Y9QV=0UX-Q"6N6_=THC"O7O_\1EV$JC/0#=538,AU[B/%-AE0JC/0Q=;#9^1U1B/-X=08U\P+7@3(UV0(N?A''7Y/"0EU4J&gt;\,DW@(N=8O9G?_SE_,@=7G&lt;R?,-A(/;I(L"RH(H&gt;1.[A?]E%*G7VH/7OP"&gt;=3O&lt;O?^/A?\!+.CIG:(G6#_I&gt;1L^!?,BE]V]^V%\Y8-XG?,A; XN=8O9G?_SE_,@=7G;HO-0&gt;5?7\O, ?KC7HO]#=5?;X?^/A/\!+.CIG:(G6#_I&gt;1L^!?,BE]R^]7A''^7-DG?,A; XNZ/_)&gt;C$U+;5&lt;M!&gt;J&gt;=W7HH.K=?XE=2$),C8^RH-V[&amp;QQBO\F=3;3&gt;3;E&gt;2AQQROQ?L/7HO_OA&lt;V4.&lt;&lt;^C"_8T/&amp;KEW(J&gt;03;%!VXB 9_=2+9"1UMB/-,&gt;6&lt;U;@(N&gt;0K8J_&amp;DEYTJ&gt;5[=$1U/B 9T=?$V=4?8,O, ?C?;XO ?&gt;2C&lt;,O]O&gt;1G7@ XN==/7&lt;Q[?@CIMTO&lt;@UO9B?0@++H3?@F@\W/&lt;@KLQZ?0BW$+C?@BV7B/??Y^R\?0@#  3??9&gt;&lt;$/&lt;@LP"4??&gt;-,XHH=2HF8/\''=1O7((/73@#;IPZK&gt;6-O&gt;50&gt;&gt;4MF=4-Y=42K=4,H&gt;2PF"?-IS?-JN?-EQ_]IW/]H"?]/BO,&amp;A(/;4/K;(-?;HP N6O^=E/&lt;@JD&gt;^?0AF&gt;&lt;C?@@_''[O&lt;@IE/N?0@V@DK?@D7]K/&lt;@E.KP??&gt;1=$[?@@)X5/??7O8A?0@-#P;??;_V?P#7H@[''=3Z;=6NK=4@H&gt;2@F"?,F^_,;U?,^U?\Z\_\6"=PH&gt;2@F"4I;&gt;3YT&gt;1)R=1)7=3.K=0(H&gt;2@F"?-R._-S&lt;O,4B@;7P_&amp;N&gt;@TU"?_?&gt;2BG"?//ARUZ^CH^&gt;F'';GO1)A?,H][S[G8/7;?, #8/;?0W;[?\^^_\\G/,"=2S7H _7H?\W?0@#54C?@L$(0A&lt;N9O!N=0@U70(N=0^/=?,UO@+8.+PU&lt;P*LOAW2B 9V=&lt;K8.QU"B/\Q&gt;8(U+ *LOAV/B ;7+?_1E/LJ=7#:AAW4B&amp;+;M!W5B ;X=;4V= +7L?%LE_PJW?-FE_TJC/_[=?DV&lt;0)3&gt;\4U=0@JC-#7/Q[6B"+9H!W7@@(N&gt;6[8O?^\E_??!45P?0@R9E+?@C&gt;2,O&lt;@8Q.&amp;RH/??&lt;L$''O??JN&lt;Z??=_66S?@A$P9(-I?0BNI^O??&gt;%V2_??1&gt;)???&lt;93G_??67/''/&lt;@E-3@"4''?@H@TN_??:9SC???J:&lt;_??4Q+O\:K?0@2K=??@KE\_/&lt;@&amp;M@!???''(8HE"&lt;;??7$85_&lt;@EQ"@?0@8BKW?@LXE=?&lt;@"+96???)8X$EC/0Z&gt;O\U=03?@C^;I@[7HO&lt;@@G4,"???9&lt;^0=02K"?\0&gt;02K"???13!P&gt;2C???&gt;B5H/?@A%D7O,L"0TN&gt;;;8&lt;QV+B 9''&gt;NXU=1YUA4&amp;KT(A&gt;&gt;04H. [?@@2S@O&lt;@Q&amp;&amp;@?0@*;PC?@@VV O&lt;@F8@@"0!AA0;;\?#&amp;E_TJC/0A&gt;R$U=6.K)#''7C8,H: \("6K5&gt;6&gt;K&gt;0NK&gt;0)O"?,!BO\MA,_?@CI7#*G?@CNH\!8N&gt;&lt;O9-AW7@P+76O,[E_\AB/4^E/\AB/&amp;''&gt;=(U=0DJ&gt;1/;6QW7@P+;6/,\E_\AB//Y=1,U=0DJ&gt;1376!W7@P(N&gt;:QOE_\BB(39"!WMR0^K?0@2\"3?@ACFY/&lt;@A.T ?0@/NY+?@@&amp;(-@"5A2U&gt; U:KTP!PA?&lt;AF1 D??5QOW0U?0@.*37??=ET0?&lt;@KTE[?0@-PS&lt;E?0@QII3??&gt;;[R/&lt;@A4(=???3N-ZK???29N*K???15 /???]&lt;J_??&lt;WF1???2L?#??&gt;,[.P#?@A62,O??8$4&lt;A_&lt;@F7^M?0@#_Z/?@@+C%_&lt;@F6";"?&lt;@E0_)"?&lt;@G[33???.CYK?@AY0R_??:NMT?0@WGK$H???VQ;S?@B&amp;8O W??^&amp;]&lt;O&lt;BFEKPE_??4UR&lt;?0@.*4S??=J&gt;.O??4+:8A_??;--$?0@QII3???"51O&lt;@CLT\"?&lt;@CQ,$"?&lt;@C"''&lt;?0@H =#?@@:NVO&lt;@C\0H?0@T9E H???"SUC?@A62,@W??&gt;RH\O??7HIP???5OF3??&gt;RWSH/??&gt;#8DH/??&gt;ICDO&lt;@D_I0???)#:C?@A\\+O??:NMTBO&lt;@J[!P???VQ:0E???&gt;!63??#]W7AW??=ET/O??4USC?0@-PT#??=J&gt;0@W??&gt;;[YO??;--*???3N.S???"5&amp;???&lt;.S\"???&lt;]XD"???&lt;WF(?0@H &gt;+??&gt;,[*O&lt;@C\0QBO??8$5P???"STDE?0@#_[C??&gt;RH _&lt;@F6"4???5OC7?@A\G&lt;H/?@A6&lt;&lt;H/?@AY0X/&lt;@D_JH?0@WGJ3?@A\\.P#?@B&amp;8T/&lt;@J[ &gt;A_&lt;BFUJ$?0HWX!@U?0@.*5C?@B:+QO??4+:+?0@-PT E?0@QIJ''?@AD$''O&lt;@CLT_?0@GR#3?@@4[H(/?@@8)?H/?@@:NU/??=70(?0@T9E+???H3&gt;@#?@A62,_&lt;@G[J0A_??7HIN?0@[]9C??&gt;RWSO&lt;@B,NT???(&gt;AFK???"P1JK???)#;#??&gt;8M$O??:NMG???(85PH???VQ&lt;K??=YG,@W??ZA/0O??A[XDET%KA/??3X7T"???&gt;Q+ ?0@P1&amp;[???YWSO&lt;@K3&amp;ZBFDF&amp;BV8 \VKBLXF&gt;X*IE\7KA/&lt;@L''H."?&lt;@A.T^???/NY+?@@&amp;(-O??4LY&amp;BKTF_/E^%UFKBE@FC/]A=70V=;''8#H/&lt;#O\V"8/;J/\V"8/7%/,B"8/9@_,."?.5?HRK&gt;HS;J(.K?V4E&gt;C7:L1USA(I]]W]_"56K\*FE-0!S PX?1EKV5,SD5!8N&amp;?!L&gt;V\U%P+&lt;DO-@E_20=3PG=5_79(/;9/\H"8/;D_\B"8/7]#VK"?!K&gt;3RK&gt;5_;9(/79 TN''/]?=&gt;0U'' +8$PS*&gt;2(,QS3Q?K?75 _7KM;[=2[7JCW*&gt;1(_&gt;4?!6-(FC%/7_?]3E[LJ=&gt;"8EX#7ADGM&gt;2^KBO,H1-+ZOMC;HDX;OM/&lt;GO^7A/\+,^SMG0:[&gt;F;8PAUO15MS.E8E (*@"(BKBO, =6?7H@[[,F!@G8-0!''VA^ #3H1V2-*GH"=XH=2X86?,,G//V?V77J/^X=4&lt;F+X.+$ZZWBLQR0&lt;LEC%38MO\7EU^?T5OBU@U=!G2G^8,HQU/O&lt;OB;4MGR.$X$G8-&amp;!F%&gt;\P!I&gt;AXUQ8-[[&amp;%OBM/;HO6J=2C7+ ^-S;-/38.3";BW*9&lt;H14?C05CFA[F&gt;(]BK6(/7L3W7EO, "0 N]O]&lt;E/#0=?;7&amp;O,*&gt;10G&gt;?:L"?5-AP;;[? ,&gt;R8U&gt;1S;D/-0?KC7HO ?=6PFC&amp;[7!?!KE_\9=?;7D_2T&gt;;X=&gt;1GY&gt;&lt;;7J/_N=5O7DP\N&gt;6[\==4URSGM&gt;8O7HO^C&lt;&gt;T#;_]$=0W;&lt;@XN_?]&lt;E/ O=0\G1[=&amp;RQ?;\@]IU6YQG''K;D[@F=2#/:?\RG?]&lt;A?\RI&gt;/;JA;;D&gt;?7?/\Q?IS=[PXNM/_HQ1W;B;4G5&gt;&gt;0=2(_=2LG=3O;A*\9G$ZKX''=/W #7K/]$=0W;&lt;O20=2C7DP^6)K[J3[M6OA8&lt;A5U8WT ^C/!I&gt;%#7@AW;$?^"=&lt;77&lt;?,8"?.I&gt;:.K=:/;J(.K&gt;:/;"_^+&gt;3"K=&lt;7;&lt;?/9?@;7Q8/7)/^1"?.1=2*KAX/7,_^&amp;&gt;;F7"8/;J/\["8/7% TN=2S9UO@U&gt;2C7U?]E=8#;JH/;FO-Q"?]Q&gt;2BK"?-Q&gt;1#7T_,("?]E&gt;8#;Z_.&lt;=4^K=177V(/;V/\ "0VK=5+7G_-Z4H.K&gt;1G7@(.K=7XEC*OB&gt;H&lt;U=2@F$MW@,&gt;*KBM"&lt;ZEQV[%'';@Q&lt;?&gt;031A/F.UUANT6X0G2VKT+ZF6P#;I ZS&gt;2C#NO\,_L]"''V&gt;KW8-)]G-V"7^K^H59#0!\A:ZD(8"''"&gt;RK0+BK1X.9[+UZ*O\:%.3!"?\^"=-0/T6--*._-8/KBO\"I-7;P?,F&gt;4A(&gt;5,^C"O8''?\4EX/@^J1#)KV+#[&amp;K''8/7@3[P&gt;16K&gt;2VKL4ZI&gt;0XH=1,F#K2,(&lt;:K/H.+]8--BG8G\8Y)S18-&gt;0K''A-.MXWP_"@]*YG]JG#NK_Z2C,@#;GPZOHMIN=12A1VJ]\H-_"6%4^5ZK]8-8#W&amp;OBE0G)(R#"J^K9H/B,H/E";%.-U&amp;),(?7K*JK=28HC.?8&gt;O\@E_.0=:K8@/_3&gt;4VK&gt;;G;*8/7*?,*"8/=[_\*"8/7,_^9&gt;;GQ"8/;J/\V"8/7% TNM_!#&lt;AW;N?]W=6+7"O,("?,6&gt;5FK=5G;HH.K?KC7HH.K=5+7N?-Z48.K&gt;1G7@(.K=7XEC-K7*O^FE_,"6,0G=3;;N_]\"?0F=?RK/?_''=='';QX/;M/,3"=@&lt;"8/;I%= "?^+&gt;2*K"?5-=2*KA_^1A08"=8C7K1W;CM*&amp;A;=M=4*K&gt;7;7)(.7=5_7\/,("51T":4&lt;"8/;D&amp;]!"?]Q&gt;2BK"?20=2BKA_]ZA0;Y=739K!WJ&gt;2)LP33S?M?7J/^1A?_N&gt;;G7S(/&lt;JO N&gt;@K7&lt;?-E"?.1&gt;:.K=17X"8/ZAP8#=578"QV2&gt;2A$VEB&gt;?D;7HO]ZA?\;&gt;5+7R(/;$_^&lt;=6+7"O,("?,6&gt;5FK9,FK"&lt;XEC/]=&gt;A;9[QW&lt;DO,Q=7+&lt;&lt;O\*=;DF=;'';,_]\"?0!&gt;@;8@/_3&gt;4VK&gt;;G;*0TN(O_Z&gt;K@U&gt;&lt;/;A_\??C?7HO]ZA/\;&gt;5+7R(/;$_^&lt;=6+7"O,("?,6&gt;5DEC/\:&gt;SO7@AW9@_,+&gt;:W;-O^%&gt;2+=[_\*==?7-_/_=1/;J/\[=9XGC(W8,?@U&gt;D/;HO-0&gt;5?7\O, ?KC7HO]#=5?;X?\H&gt;1G7@/]6A0;7:O$2E/#0=&lt;37D_1"&gt;:W;-O^%&gt;2+=[_\*==?7-_/_A0;3&gt;KLV&gt;C?7V/\E&gt;&gt;[;\O-_=7C;HO20=2C7X?]_&gt;6LGC/!R&gt;SHV&gt;@?7A0_E/6YIG?-0A4%WY%D^\/,Q,@[7JN?+=1H_=70G=1H'':?,(G/,S=7W&lt;8_5-=2+8&lt;O^5?O@FC/^^&gt;Q=GE_,K/P_W;;C7J!?7H0_7L?,F)3$^Q(-"_6=^BO^_?G_&lt;,O\ &gt;C?7W?0?=2C7DP^6)K[J3[M6OA8&lt;A5U8WT ^C/_D&gt;B14E[:K/9N&lt;''KM;.HJ9"?\0"=CJ%Z,HJ^LE^V-/\46I0&lt;^.7(/7@@#7H3W7F/,[R_-IS_.TG(,&lt;*DJ;TP"CA/,,R^W7N/\Z5/\P=4H_=1DG&gt;;O;AO-%&gt;57;Y/\*&gt;2S7Z!?7M/]CEU22[\VK2@#7H,K@-\F\T"4^"3-,PD=\B@;6=&lt;%4E[NK-YJ2&amp;[A=,8R0"?\V";3L%[@HO\(E_61''^&amp;FH+KV_0H/LBOP?5"H/M5K;KA:KU9- )V\5#VKG"?\EBO\@6&lt;#!G/\FA?-U&gt;0W;GO,-&gt;4[7ARK7MA?7EO\4EWZ _J^K,P#[&amp;)*#''959P!:KX'').\7XHC,+8+?!6E_\#A'';7NO,M:/,&gt;"?-""?,T&gt;2^K&gt;8BK&gt;6''4&gt;2G7PGSHXY5/"5&gt;KZWQ;U(-7"7"M^X&lt;HW@^&amp;!JNH)8/$"&lt;J0"&lt;VK.V:5V*''7MI#4&lt;YO7K0#;I ZBK%AVK(,H&gt;0!G:_\3=3WR:?\JG?\Q":H-$6XHC"[7-/!HE\RK)''B[Q@#7F ZA=1 36/,["?,5"24!"?-L"?,25R_7EW_HXY5/"5&gt;KZWQ;U(-7"7"M^X&lt;HW@^&amp;!JNH)8/$"&lt;J0"&lt;VK.&amp;:5VJ''7@)''U6I_7B@#;F Y9QV=0UX,HQFCK=MZ\&lt;^0_C%;8E/\@E_"D=6''7D_3\&gt;1G7\_30=1/;J/\[=9XGC/-1=;S0E__Z=1/7A_0.&gt;0W7F?0?=0#;D_\B=7XGC''/8I/^"ET(JC#W8@=0U=578W?,&lt;"?,A&gt;=[;B?_V&gt;3.K=6#&lt;W8/;(/\*"0TN^?^P=2TU&gt;2W7J/\%=533&gt;52 A?];&gt;E?;OH/;G?/V&gt;2''75/,;"?^F?E&gt;K]/-\"8,#AP9S&gt;AI4E_]\&lt;?-\A/]]&gt;E?;OH/;@_/V&gt;0/75/,;"?](?E?;WH.KH?]\"8/;N/\*"0TN%/#L=0@U&gt;3+7''O]5=?'';P(/;F/.D&gt;1S7!O-F"?]2&gt;?;;^/0C=4JK=1?7$_\ &gt;9F;"8/;J/\V"8/7% TN&gt;0O8W_@U&gt;0W7O?]D=:C;OH,4&gt;3\3=3_;OH/7QO. &gt;4#;)O\&lt;"&gt;_7ON[;OLVK"?,Q=0JK"?]6AP;7._]"&gt;O@U?OC83_,*=1[7%/,B&gt;PG;J/30&gt;;W8\?]K=1G&lt;(O,QA0;Z=138O1W&lt;O?!)&gt;1G7@/]6J?!K&gt;2C&lt;O?-_=&lt;;7A?\E?@[;AP\N=0;8&lt;A[;J/\V=9[;@/$A&gt;2/&lt;C?,%A5EW,L4_=:#;J/..A?,R;2/7JA;7L/-5A 9_&gt;GXV&gt;1G7@/]6M_!K&gt;2C;''B\GWV.!.1?7U/, &gt;5\G&gt;1''7@%+7@!;-&gt;3\FC+K70O_4EU*RX*&gt;K1P#7*O,*&gt;:8G&gt;1C/J_\ G#[Z8NK;]_\*&gt;V7;J?0OM^P&lt;A09D=837NAT76-:&gt;&gt;3_7HO"0&gt;2C;''E#2OB G[)M8(H.0BO]V&gt;2C;U0^K&gt;03%U&gt;6BB@:''=7C8#AW7]_,*?V77J? O=2TG1[=&amp;RQ?;*O\*=:8G=1H'':?,(G 9D&gt;JPV=5\G=1'';@+3;@!8)=3_;HO20=2C7''N&lt;F.Z-5V1?;U \N=&gt;K8\?!)E_\CB/\#&gt;74U&gt;2LF &amp;Y5K_,Q"0#;B4W''=3(_&gt;G&lt;F=9W;E/\M&gt;4$^&gt;36K&gt;0$%Z_,&gt;BB4FW7F22,RM);N%&amp;W)6G?\BA.IG,3(*RT+;@_,325+7Y!;;!O\T&gt;2[7X!;7NX/7D.*X=3 HC/G8F/_8E_\DB/1D=0(U?0@Q0@C?@@1@@O??=H@@???. @@_70[LS;IUR5EWP_,O0&amp;O7J!;??45"??&lt;@WKL4??&gt;W''PG?@JAL3A;7E8/&amp;7I#7EP#;F Y9QV=0UX,HP6GH=0D_=?CYA(G7FCOZ&gt;1.K&gt;1ZKMDY/&gt;1@HP0Y/[)*5//&lt;@D\@@%_&lt;@D$@@G0;78/!3&gt;F$U=0LJ&gt;03=K!W7Q@_7IY+599_7J #;H0ZBY''T-&gt;1FKBO,KQ^_7N!?8_0[7%_,V=07;RQ;;OX/;BRU)&gt;38HKPY_\[KJ1H6'',:VY^''X_=0HF8$^3N")IR/,A&gt;3OKV/]&amp;G(/;\O[;H_]D]P#;QP\N&lt;_\.&gt;F8U''Y^@^Q?_A,1O,%UKTU]A&gt;0?BX?\*G(/;M-\&amp;=1):BO-E9?]FA?N]4-^V=0PH&gt;1(F^TU/\EVKBDM!2O\AG?_06PZA=1 36/,["?,V"3QF[?,PBDLF[6:Z-[:]%Y4_=8C;B!W7A@(N&gt;&gt;77_O%-ESXJC/ 5&gt;SK:L1VUB/-#?P,U9P(N=2+8*/%''EYTJ&gt;6''&lt;%!W+B :4&gt;AS8C!US"? B=?O;QX/;,_.+"?^+&gt;2*K"?5-=2*K"?^Q=2BKA\V?Y$$_KP]IU6YQG''K;D[@F=2#/:?\RG?TG=1H'':?,(G ;;BO_O=;4U^H+7Z/^H&gt;2"K&gt;3[;TX/7T_, "8/&lt;,O\ "8/7Q,2KA\F+[$P_W@]DZ69UG/,K/P_64L37C!?7@0_7C$[LHA8N=1+8!_#0E_30=1[;J/\V=9[;@/$A?I;;+ _??2NK1???;#L3??&gt;"]C''??;#L3Q;;IP_7ZJ[7_?]EG?] A092&lt;?"0E_,6A8/;GH'';BDJJBO,[A?\-2_\D=90_2O\Y?C?7BO,Q=0K7]#W8R0\N:_"]01UIU6YQG''K;D[@F=2#/:?\RG?$;&gt;2/;)_.4=:W;J/5-=2+77?^5A09S&gt;B^+ETQ+[%T^&gt;0.=A?[P3O\NG?"0&gt;2C;\O-_=7C;HO20=2C7X?]_A0;7MO"]==&lt;U&gt;=?7E/,*=1[7%/,B&gt;PG;J?.%&gt;;S7)_,*?V77J/__A0:O1?"0E_20=2C7X?]_&gt;6O7BO,Q=0K7]#W8R?, &gt;7C;W?]0A0::&gt;HHV=1[9[_,+?@?;IPYQU;CMG?^(&gt;2+;+ _;D.&lt;+=2 ^=3K;B_,B&gt;9[7E XNQO &amp;E/\H&gt;KC;HO.\I0Y]Z:F;G?]V&gt;2C;U0_;F_\BV/\BG.5MM_-6=0HFC/^(=7383AW7E?3L=2*K=1W83H/&lt;3O\V"8/;J/\V"8/7%/,B"8/9@_-6"?,T?M#;FO#X&gt;7RK"?5-A_\*A ;H&gt;@TV;O^="?.==0"K"?,Q=0JK"?]6MX.K&gt;D/;P8,)&gt;=,)==/;P8.K?KC7HH.K=;4E;O.=AP;;;_]&lt;&gt;V4UM (N.?!&gt;=2\UJ +7_O\QER,J=1S8A!VUB 8,=514ET8J=3_7!AUOB+?8 QVUB :;&gt;G;7I1T*B/]&lt;=1DUJ0+7KO AEWDJ&gt;5#7C!U1B 8.=594ET8J=3_7!AUOB-G8_AU1B/-X=08U\P(N=&gt;78Q/\,EXXJ=7O7DQVGB ;7 ?"K=7XU# +;HHDU#0+7H\0U$@(N%/!/&gt;"8U%P+;!?3)ESHJC#W8G_%1EYTJHO-AEUTJ=/-:EUXJC,+8''/^ME_\EB/,#=74U=2LF%KB!:_\Q"0#?@GYDFO&lt;@Q+/(KO,7G?1?A/.U=1[;C_]I=5?7D?\''=7;7 O,T=2_;X!;;NX/;D"1&gt;&gt;3 HC#W7,7LU)0( =7(U*@(N2/"R&gt;$,U\P+;VO\NEWDJ=6S&lt;6AW7AP+;H?]=E_\#A)R0(^''7DX,H?0A6Q@C?@DZ&lt;@B3;M1?&lt;_0[;%_\V&gt;077R_]_=1O7I?]&gt;=8C;EO\''&gt;6H^&gt;3&amp;K&gt;1H,_/,8B@85&gt;DC9WAU1B/-X=08U\P+B?O(U)0( =7(U*@(N&gt;CW9RO(YEWDJ&gt;5#7C!U1B&amp;+&lt; !W%B ;7C?";&gt;U0U\P+;VO\NEWDJZ_0\E^,JC)O8^_(YEWDJ&gt;5#7C!U1B/.H&gt;:PU9 (NI_!F&gt;U0U\P+;VO\NEWDJQ/1EEZ4JC"S7&gt;O ]EZXJC"C8A/^$EZ$JC.78%/''.EWTJ&gt;:;=''1W#B 9_&gt;E_9LQU5B/0[VQW,B ;-&gt;I'':FQU1B/-X=08U\P(2?Y&lt;U80(NW?![&gt;U0U\P+;VO\NEWDJ&gt;5-YE^0JC/\K&gt;KS:K1U1B/-X=08U\P+;2O1NES0J=?O7$!T=B 9[&gt;E/9^1U1B/-X=08U\P*5P1U"B(3;AQU#B ;7A:?7&gt;1T&lt;B/":-AW1B(0&lt;E_HJC%[70/"9EVHJ=1G;"!V.B(0&lt;EZ&lt;JC/\G&gt;KS:R1U1B/-X=08U\P+;3O1*ES0J&gt;K*4E_DJ#C0U&lt; (NU/![&gt;X8U\P+;VO\NEWDJ-#@UX +7D_.JEZ8J#C0U+0(N/?"N&gt;!$U\P+;VO\NEWDJ&gt;:W;/QW)B 8$&gt;DK9WAU1B/-X=08U\P+7H_."E_@JC+S8!?''.EWTJ&gt;4W=''1W$B ;;A?!A&gt;SDU]P+;[/3&lt;EV&lt;JC+W8#O(YEWDJ&gt;5#7C!U1B)+=''1W$B ;;CO!@&gt;U0U\P+;VO\NEWDJ\_3&lt;EV&lt;JC+S7=/(2EY(J=&lt;;7I1VZB"7=''1W$B ;;C/^*&gt;WTU&amp; +73/\''EY(J&gt;1/&lt;?AU/B :2&gt;HK:FQU1B/-X=08U\P+7OO2&gt;E^\JC"K8S/%\EWDJ&gt;5#7C!U1B/-&amp;VQW-B 9[=737@AW8!O_&gt;=1G&lt;%O5-=1[;J/\V=9XGC/-7&gt;B38,AW;&lt;O20=0#;D_\B=7X5==+7Y@XN==W9B_(YEWDJ&gt;5#7C!U1B/!%VQT6B/4.&gt;F$U:@+;S?,QEY8JC/\K&gt;LC9WAU1B/-X=08U\P+7PO0:E^&lt;J&gt;&gt;C\E^8J&gt;I+8P!U[B :X&gt;PC8#1V B ;;A_ S=3DU 6Y=Z#NKBD)$'':0_# ^"#[W[G._7@"4FS8Z-(1&gt;XA:&amp;+'';0^3(.,\81ZBO\[A(''7A#OP&gt;2VK&gt;16KM$ZK&gt;0NK]85]-V-#\''!*"5ZKPK+;@O]Q"?\8"&gt;KI#?\JB@;Q&gt;HW8&lt;AW???&gt;%XO30A_??9&amp;ZA???YU,#??&gt;BY_???6$Q\G/??)[^L&gt;2K?@E;). [?@JD1*/&lt;@ON0H?0A!2[+?@FUC1!??@@@@!O&lt;B6OJ@?I:K"?..A_??H8/G???- @C??:I4N_??.X@@G/,%A?]()/]?=4T_=6@GC#''3&gt;K@U&gt;3XG"?,\"_,HP((H&gt;1,G=27I=0S7''A?H=1''??&lt;@SM@_????,#O???&gt;3L"?/=A_??8*+@????ZKS???!UPO??(A$VG/??6&amp;^.&gt;1''?@DX-T@[?@H%Z(H/?@DH#EO&lt;@T $C?0@@_/#?@EW6?P#8,@\N=0/8G/%9ET@J8_1#ETDJC%37&amp;WLUY *,&gt;E0UY0(N=;G9[!YHB ;7B_#9E&amp;4JC-K9E/"ME_??(J;X?0AR.EC?@IMQJO&lt;@#T^0&gt;4VK???A\+C??&lt;KC6O??6H5P?0@"OB#;@8/?@FII^O??*+N8??=U-(#??5%LRH/7*?,*"8/=[_\*"8/7,_^9&gt;;G7WH,E?BG8C/&lt;@)_O8?0B_I*#?@BTLBO??7=%XAP8"&gt;H/7?!W??:2R[/&lt;@R.T^?0AZ[YK?@F\Z8/,("???91^N???"&lt;JS???W(\/&lt;@BP=\&gt;0NK?0AH4&amp;;??;: P/??)26R??&gt;XW;:K=5G;HH.K?KC7HH.K=5+7N?-Z=4*KA_.Q=;3?@D*,3O&lt;@URS^?0@UT3S??&gt;3[H TN4/ -=04U%HHE^(Y8"WRKBB5^-^L_&gt;HK;J/2BA?-"=3)W=0&lt;^/8/G%K&gt;&amp;BO\+&gt;2OW7O,#=1,E)KB[/H/JBO"B&gt;2+&lt;  ^K_H)="G&lt;H )LEC,G7&gt;?&amp;DE_,M&gt;31W&gt;6H_?HK7JP^L=4#8PH.K=1G&lt;PH.K=5DE8;"5:^&amp;8XSL^I?\*;0_7X/,&lt;/?,MG ;5&gt;H/8#1W;$_,0A29F._\&amp;89#]=3S?@EXA"/&lt;@N/96W4(_=2W&lt;H!W6=2W;@/]9A/&lt;@-::X??&gt;WKH3?@EQQZO??P]M4&gt;8!N??=/*OS??31WCE"\&gt;8?7#1;7T?,@=2PFC.#8 Q[7J/]&amp;=0G7D_,A=3LF"=551U*7U+,&gt;)SNKL8,&gt;\UY[V%=5TX,9BO-0=2+7\@_#.KW):[!!L18N/O_;E/\M=32?=6H_4_,*QP\3W&amp;D-KU:581;7%?!@=1G&lt;PO\B&gt;2+&lt;  _;X/\&lt;U?\MG ;7H/#\=4PU2\SP7(/7KP#?@K^@1O??[: 0?0A+_33??51W4O?&gt;:&amp;Y&amp;??&gt;:&amp;Y+??4;^&gt;O??ORDHG(/??&gt;)&amp;Y/&lt;@@CB&gt;????:W+?@@KOP/??7;@ BO_^=1_;S0Z,''/\]=4GP=1E(&gt;2&lt;^"???[,3L??&gt;%IE+??=BTN/??2-.&amp;???"''/)$]T10[8,HI\K;HO-8=2B9&gt;BHF-X7??&gt;31 ???&lt;09=G777FY$G?0BCBKP/?0@]=41FG ;;M? F=1$U&gt;2;7$_^N=1O;#/]=&gt;2[=^/_@A ;A=?/9!AW;C_,&lt;U?-"G?2B&gt;M[7D_1@&gt;@TG8;"5:^&amp;8XSL^&gt;7C7J/]0A?]"&gt;32?&gt;04^C/]X&gt;G/7:1W7K/,VA$!.W"#??9_&gt;.O??=@EH''.77A9:U4!:/?@XU=3G5:_\_G?\_0_\TU[4G=1;;@&gt;_;J1;;T0X!&gt;3E\&gt;4,_?I77I_"TA?O?@D)&lt;;)K?@CFCD!;7Q0[3"I9""4 HX/,/A?-NWSS;O/??&amp;$MT?0@S!^S??7J&lt;+O&lt;@7G(\G0:&amp;=&lt;_0ESY++=\_:0_?@C0BS)7?@C#=,- ^=2C;ZPZILVY5OH,H&gt;1DD?0B_@5S?@F_&lt;+N+7F1?7\N/7DR#7UO,"&gt;5S;B _;L( #L(/;G #;A0_;H/D3=3P^C,?8D?!!E_\P*$;;H1&lt;+=2S+A?]XS_\''&gt;84^YH-G E56BO]Q&gt;2#=!?\$=;@G?0A_@5S?@@R!A/&lt;@S?2,?0B$W/(^C/.C4X4U==;7IO-M&gt;N_;IPXN=8K9RO_TE_-GW7E@??=:?B#??&gt;(C6L;7G!:K=73;W82K=5_;IX.K?W;7IX.K&gt;C''D"8,2A_-3./,W=9+7X[;7M_]FG/]=&gt;2TGC/]J&gt;P;74AW??8[T^???$%+ ??&gt;\J8W??8^%HO??#''R&lt;??&gt;X"4S?@FN/WO&lt;@]UB$?0BAQI3?@F[OWO&lt;@\;-$?0A&gt;LJS7C.,&amp;&gt;2@^?A#8MAW??&lt;B@@H/???)1I?&lt;@D&amp;_0???&gt;C-''?@@6XD@"H,O,VR8-3AVF$R?\OG$ANS"*K&gt;0,H&gt;5;7K/,1=5/?@LGS]O&lt;@*B2L=2[7U1:K?0BB@PYX?0A!?/(=2P"-A/&lt;@FX@@"?&lt;@A[,$????6IS?@@SD7O??:B],BIQ^=0S7@@W???&amp;@@O&lt;@CL@@???9;D#?@@5WCO??=9N8?0@J:OQ:(FR,K(,HC+37=/XU-8.=$+"]BO,X=2+8,O,*&gt;4LGL59!KR5^-^L^&gt;@C;J/0@A?-"=3)W=0&lt;^C(39B/%&amp;E_??;1''\?0@M!M3??&gt;62&lt;O&lt;@C'',$???KL3RK]X-R!5)NBO0^?FW8KO-LAZ!&gt;2WFXP@"O]-&amp;K"?] ?@W7O_^N=&lt;LE'':J]&amp;Y6K#(.T"9ZBBLMGAP:R=6O8 1W^1;7U''?\N^O,\G&amp;,G"2IWJD)W???NDV#?@DK3&gt;O??,4GK?0@VC@#??&lt;^,3X/??&lt;IX%O???)%X??&gt;))63??&gt;F==H/??8F(-H/??&lt;+@@O&lt;@IF9B??&gt;)P@C?@H*Q/(/?@@7E(/&lt;@@JAB?0@#VIS???6 ??&lt;@TNGJ?0@)/+??@A,#6O??7+D@?0@Y&lt;^+??&gt;,RPO&lt;@FN(&gt;???+OL@H=0+AA_??.;74?0AM$K;?@AP5PO??;7G????]CL3?@BW=P?S]3?\N"?\YBK8G?0B_A23;A/&lt;@[?#T&gt;3???5OH-O??%S]L??=?ON3??8WCEA81=2TG^O.\EZJK(7.[^''&gt;C_XU;"0!1???1*0K?@@.*0O&lt;@C:-D?0@K*_3?@@)T?)NTG0;#=?G9!AW;C?,:U?-"G?-0=2+7\@_#.KW):[!!L1;&lt; /^W=1G;@_ EA?]"&gt;3*?&gt;0&lt;^C+K9J80U)@^K?0C&amp;#P;??:FG&lt;O&lt;@*;* ??&gt;V^AC?@G28T/&lt;@MB\,?0@!&amp;&gt;#?@CK=,O&lt;@E560?0AU62S?@B\FZ@ $=@W???TLRO??&gt;3V@??&gt;F&lt;BK??&lt;''(&gt;O??-0NV???E8X#??&gt;99E/&lt;@BZ.D???6K13?@@P/8O??/E_N?0@UII0HK_,CA_&lt;@IP)????2!;C?@@_L"????X3L?0@\JO[???G+!O??$LV"??=:!.+??:8:W/??[YJ0"???G.Y&amp;BGHG&gt;G_7I!W;6@[?@@"&gt;&gt;/&lt;@I%%X?0@V8\/?@E:EG/&lt;@ U&lt;;?0B3HX+?@B+$V/??3.R\?0AM?J3??:+4NO&lt;@J!;:??=NI20HC.77&gt;7PU=0?7N+?7X!?8A_\A=1G;%?2BA3M^XR4-W+W#G/"B&gt;2+&lt;  _;X/\:U?\OG 9.&gt;NK7Z!VK:&amp;[@W:''?@A6$7O&lt;@F*7R?0@]V2S?@BC+2H/?@E%&amp;Y ##U_\P&gt;5???8S"#???!Q51???S&amp;Y#??49&amp;ZA;7I [G)[CT2\A5SU!3YC\^&gt;9S;D?^UA/&lt;@L&amp;)&gt;?0AM%XK???&amp;3MO??&amp;43L&gt;0P, &amp;Q-H9+7BA?;H0[??3L3PO&lt;@&amp;;L3???L3LC?@GYL3_\-=1S"=24^C.O8H![7C?\:/?]"G?]0&gt;2+;\@\3W&amp;D-KU:581;8Z?.W&gt;1G7@_/.A?-"=3)W=0&lt;^C(O7S?#;ES1WSB:K&gt;14HHP]I2/-N=7O?@KDK!/&lt;@Y/Q:?0BC_WC?@G"B$A;*&gt;2X2A??? ZY&amp;??&gt;FXLS???%Y&amp;/??=I&lt;&lt;NUK?@C]H-O&lt;@X+]LG-(G?0B2&lt;BC''?0@2C&gt;C7DQ:2???7 @C?@BF@@O??&gt;X@@?0AV @A9BH/7F_1,=0BK&gt;1,EC-?9N/ 3E_&lt;@0GA$S/&lt;@$(&gt;\&gt;8#??0!(\/??09^N??=3VMS??3&amp;''KA;&lt;L/\$A?????&gt;&gt;?0F\4"8E?0BO/7+?@A$@P/&lt;@OV:X?0BB6]3?@H&gt;S]O&lt;@FIJ0??&gt;: X3??7!&gt;MA;&lt;L_\%A0:I&gt;DC7@!W,.NK%"?\!BH+7BPVH3UW7SO-:"0#??4^  ???(U==??=48)C??9@]\A&lt;*=2W%A?&lt;@T@Y(0O&lt;@MO&amp;X6?&lt;@QA86?0AI8\).&gt;0P^M ^K&gt;2T2O_,-_@#;L+"K&gt;178V_,K"?\ZAP;P&gt;R/8L1W?@LEE9D;?@IF:GO.H&gt;81O&gt;2G;V!9G=2SNA?&lt;@@]F*?0B.,Z#?@CG''[_&lt;@CCE,?0@^Q.''?@AD\;@#&lt;K/\''&gt;B G1''"/ZX/;IP#&lt;L_\%A0;7HO#H=&gt;$UOO\A&gt;5.SL(2S3[O7@/\X"&gt;ZK=0%&amp;"?,4"7ZEZW1!BI#;NQWI1MC^"?\-BO]=&gt;5[E&gt;1/;#D'';U/,IG"@G)(G?@DT&gt;.O&lt;@@N=\?0@-0T#???4P)@#A=516T%%C[34_I\K;HO-8=2B9&gt;BHF?0@*L3S?@@GL3O??;OFC???3C''4_^?\ZA8*^A_??&gt;''+ ?0A(8DK??&lt;ZEHO&lt;@MQ&gt;&gt;JX,HC.#7=/&amp;DE_,O&gt;3)W&gt;6H_?HK7J/"BA&gt;N8-^'').FD3G/2B=2+7Y/\A=1G;@_\3A?]"&gt;3*?&gt;0&lt;^C-?8*__SE_??[8:X???_58;??&lt;M1ZO??^B!2??=.TBG???V/7?&lt;@WCG,?0A03!P^&gt;C+;IO0;A???M\6R?0@=D^3??7\2[/&lt;@=.8T?0C6.:S?@C)DWO&lt;@%&gt;&gt;^?0B;DFH^&gt;C/;IP\N=0F8&gt;G8U&gt;5''I&gt;2W7#Q;O";:W+)0H&gt;4S7 /\$L_#5&gt;2W;&amp;0_??7=*O''???;NU0/,0??=(1"W???,96?&lt;@Y1"T?0A%960^=0O;I@\N*?&lt;@O0U@?0HRRW U"??&gt;5T6R?0GB&gt;,C?@G5#UH/??54E((/??&lt;A0H_??-\6R???_#=???;H2[(/??6,H\8/??=&gt; P_&lt;@Q%O8???:O/+?@DGYV@#???8A"_&lt;@E-J0??=7E,&amp;K"7HE??&gt;TY&amp;[?@DPZGO??W)&amp;Z?0DE9^S?@JA*0O&lt;@ YU@?0A"&lt;;7?@H0LP1:K?0D"$+C&lt;U???&amp;.$8"?&lt;@$XPX"?&lt;@P&amp;Y(?0AK9*#?@ABZGO&lt;@O-40"?&lt;@V30("?&lt;@L3VB???#@5S?@@["#/??,MF*BO&lt;@@_1*???)J'';?@H++!(.K)@W?@B$9VO??: \,?0CE1*#??.?85O??[QD''??===A$=??=/RW ^C,G7&gt;?&amp;DE_,O&gt;3)W&gt;6H_?HK7J/"BA&gt;N8-^'').FD3G/-0=2+7\@_7X/,:/?,OG 98==K9!QW;ZU;;C3T_"???+KU@?0@\+ G??&gt;M$''O&lt;@G5G????%9"S??&lt;#WO/??6986???7''G???=-__O??&lt;H1C???M@$8H=24F?0@O*_3?@AVI./&lt;@C&lt;%9?0@^]$[?@E6L"8,H..VEIBP6]5 7U?&lt;@LS^M?0AA2GL_%/,$_0_;K/\FM/\9=3/7A/\A=1&lt;^"?&lt;@X@EHYO&lt;@MO:8W*6/):S?@B3==H/?@C&lt;BC@##Y/\M&gt;7H^&gt;0'';YQV=0J3J-=M=Q$UK^%!LUZ:?G ;;_-G9 AW=_?\%&gt;@W7RO\V&gt;4#7#@\N=3N.=?8U"???A[2,?0CL?/+??;.#5?&lt;@X DF???/B[,H???M%\K7IO&lt;@L!\&gt;A?&lt;@X@,D?0@O9TC?@L34?O&lt;@Q&gt;" "?&lt;@&gt;A+""?&lt;@?RGL??&lt;)X)C?@DJOWO??*Y50?0@KW/ H?0@8;&gt;C;IO??1V&gt;\A???(I* ???/KQC??3A%XO??/;,$"???A: 0BO_C?0CG[50U??9+&lt;7PG??&gt;[OB''?@A,4N/??1,LR?0@&lt;UK6K?0A24BFK?0BSQA#?@FOW#_&lt;@JQWD?0@:JS#?@@5Y&amp;@#7IO?&gt;Z66RE_&lt;A%EL2A?&lt;@X9''\???)-$#?@C-''+O??/-&amp;X"???#*PX"???\)/(??&gt;]&lt;^3??=EZ(O??002L???0 $8HC)#9BO"^E_&lt;@#  0IO&lt;@VO_P&gt;2?;LB@/&gt;18^&gt;;&lt;4&gt;1S"KO\#:/ R=1S&lt;D\PG*G*5_\VKBO\29_O7OA?;%/TU?0@*@1K?@D_&lt;;'' )H6I-STYO-\@_.P_Q/+ONG ;7I/ ''\AW?@MQ4NO&lt;@&amp;(.H=3''?@N@*_/&lt;@;;VB??="@DC?@I _0O??K.CD??&lt;&amp;UXK??6''I?O??ZPA@??&lt;F3&gt;C??2/F:_&lt;@#;J0??=WZS_?@NAMC!&gt;L&gt;Q4U?0AS,JS?@HYOWO??4^V ??&lt;*F&amp;C??2+Y&amp;/??^26R???SI&amp;[??:#R[/??_AE(??&gt;(;)#?@E6!2?&lt;@&amp;%85?0C+A?C?@HUO8O&lt;@H/ P?0AW,B@_C.+8WWLU=3ZN;?RK=14H6P_?@F!EXO??16Y(?0BA.*C??16Y&amp;A;7[_,LA?,WIGC;I???/Y&amp;Z?0@ ^&gt;#??91&amp;Y/&lt;@-HPXG?/IA2&gt;P\*6K-0"$&gt;2M2A???%38A?0AQ7#W??9#A??&lt;@-BGKG"/8;!V9-X&gt;&gt;G"(G???Q@5S??=G&lt;+O&lt;@@9ZH?0@+ZW _&gt;@'';1QU]A?,KLHQ\G/_GA&lt;C  /,RG0;;6/^A&gt;MDU/0(N?D&amp;/&gt;N U- ZH^HI5]HHH[8F&lt;N9&gt;VA^N7$,2K3 #4&gt;2PGC/0-#_#GE]&gt;K=2S7RBFKAP;;6/\H&gt;U(UU8-]YW-0BHZC''?,I++8E&amp;:NU''+JKBJFL6H,E0(.''*ZB"BIJR"?\GXFDE]GQ6^V:KBD&gt;NAP;;6)39"QUMB ;;1?]+&gt;\LU&gt;3%"I3&lt;_UN2$A&gt;*-''[:,*G14\(ZJ_Q:F"8ZKAX2K#X0_"9FK)B6K"7HE"8JK^X=:%F""_*VF&amp;("]"9FKBM&amp;1/\7TU,X;G0;;/Z#811W74^W;S0[]7O,X"RX%AP;7Z/$7=9$U??&gt;ARW''??=[L3O??7+ZG???BL3Q!\/&lt;@DJY&amp;?0AKVY(^=?#;G//TA???$%XD???C6&gt;#??&gt;6)?O??5"PXUG&gt;3?0@=?3,^?0EZ@LS;G/0KA???_O[B?0ACON;??;0IO/&lt;@],LRG/&lt;@OL8T"?&lt;@MC:8?0@WI,C?@B(E9O&lt;@K &amp;B?0@]/33??=N%//&lt;@L="R???''J C?@DUU (/?@CL6QH/?@B8\[O&lt;@DYL@?0@"+UC?@A*&amp;0P#??=;FO?\U&gt;L_;G \NW\38,AW="/\ =6;7:&gt;#;:?];A&lt;.8-\?G*V)KG$K7HODG=0-I3?,GG$JKV''A#S0#YA092=;S8QAU''B&amp;+&lt;WAWO";6(+LXH&gt;:;7HO].6^ =&gt;EO;HC,GZ,YY*T"KBO,VJ?,N&gt;3'';NNW;C/\[G0943O"0E_20=2C76@_K.KWO1:%*R1;&lt;*/\ =57Y:C77(P_7B4''O&gt;0\^P(-Z\FMOBM$GC$''8,1[7&amp;O, TP]KW&amp;EGS66+3A;7$/_+:O/+=5G;HO3IA?,K3T_7A1;T";2&amp;,&lt;\HR0\N]?^9&gt;DPUY0)*?E0U38.=*J3FBO..=6;(O_$-&gt;2@;A6+FVZ%H"0#;E"/;C/,9&gt;3#%&gt;0;7F1&lt;N&gt;8[8@&gt; U&gt;3G7:?]E:O-E=53;HO5-=58F#O,K:X$EC%7L&gt;K@U?X+8]&gt;#;:?!UA&lt;.8-\?G*V)KG//!=2C7? _7B4''O&gt;0\^P(-Z\FMOBM$GC(+8S/_PEXEEA2U%NS%H*2;7GLO7A)G7S!&gt;W1_\LT_\BA?\GNY7;FQ9K"5M![THH=_, ?W#7HO!;A=64-M7,''EM%G/,VAG@GY7)&lt;]G]9&amp;ZB_&amp;ZJ+G :?&gt;KO7(!W7B?\^=2C;G/]\&gt;2C;WBTG&gt;3K;@BO;R_,&amp;;_,J=3[+=22-=9P_&gt;2C7B1W;B0^JM75IK(,HJ7OK1&lt;F[9/\BG09Y&gt;B#77!W;7/\ =?8G=2((,C8^Q(-Y[6QPBO^_&gt;2C&gt;M_\ &gt;J@G2["72,2 XUD^C//)=6[9[QW;HO86=6;(OPXN=4W9%1[8,O, &gt;&gt;XGR59!Q4=-*&lt;0^=&gt;?;[/]Q&gt;2C&gt;M_\ &gt;Q/Y&gt;:&lt;G&gt;0/MQ?\GG-RK/JZ310!KA0:V=&lt;K8RAU#B+G7NQVK.KBX+)PHN=-%\PU+\5=*"5*K[YA3%G_;DGABI(/;J0#;Q/C;@O\:=3#2=0G7PQ:K0(J;^+LH;O\J&gt;0 F&gt;2]&amp;.*4_C%78.O-\E_%8&gt;2C;9 ]KW&amp;EGS66+3A;8+O, ?L$G&gt;0/MQ?\GG-RK/JZ310#;''@\NU?]$=;@U?0A?SL3L?0@R-C+?@B:+1/&lt;@M6FJ?0@\&lt;+C??&gt;_\J/??,2KPG//]=1;77P_?@G/7SO??53L4?0A&amp;BKS??53L3A;??&lt;;&lt;;(/??=Q:W/??&lt;)@ ???Z"KS??&gt;V-%@#?@NGBSO,^?W''7G \NV?_B&gt;D UX0*?=;$U&gt;2BKTU(E_8BE (.C"76[ JNDBLU9AYRH#8ZK!(.H"X^H"P  N0UJV&amp;X:"2BK&gt;4[0&gt;0C7N(/S"&lt;^ .KDHY&gt;W7%0^K=3 ;&lt;/,_''0#E2PVQ$X6R"9JK(GV^_84HSYLE_86C#8.Q"8&gt;N$IRPB@9*3O"0E_20=2C76@_K.KWO1:%*R1;&lt;*_].:C78ZP_7B4''O&gt;0\^P(-Z\FMOBM$GC&amp;O7Q_\ EY7&amp;/N''G7&lt;%L1CN^&gt;0(HVO OE\/U3LZ4*  9=0XEU6QAQ4D6WJ] ''&amp;2TBFO;F V^!ZV@*G,1&gt;1QC&gt;2&amp;K&gt;2\HQ_#B4P^K=5X+=3L&amp;:0 NX/"8E/!&gt;A8/SQ)FK, "&amp;''86&lt;G.#;T0]V\7U/G8-9%''V_^@"9W V$\:U&gt;"6&lt;H&gt;&lt; GR59!Q4=-*&lt;0^=&gt;?;HO0LA?,K3T_7A1;T";2&amp;,&lt;\HR0\N&gt;&gt;O7CV0U??&gt;?&amp;Y+???)&amp;Y/??&lt;6Y&amp;???)&amp;Y(^???9D)ZK???5MJ#?@@F96???;1VB?0@D\7TH???&amp;&gt; K?@@ZU+???9DX&gt;??&gt;E+&amp;''?@AU;O/??&gt;M\KA_&lt;@FNIA???7-G+?@A&amp;;0O??? LR?0@ZR\FKBO\P*/&lt;@U@KQ?0A:?R&lt;_&gt;MW;G \NW_"8E/"0&gt;2C;9 ]KW&amp;EGS66+3A;8FP^''%9&amp;%G)^K&amp;8*W"P#4A7FMZH18"0 .W%&lt;0G?1BA?,K3T_7A1;T";2&amp;,&lt;\HR0\N&gt;0/7??__EX-+^&amp;I1^/-W&gt;1H(\(/;IP 0&amp;UW7A!;7&gt;O\ &gt;=@F G&amp;R&amp;Q&gt;K%YRY(94H=5+7C@W?@BRH-O&lt;@E"QZ?0AF]43?@C[[)(37G(.=V?\=&gt;5ZK&gt;0:KVDQ*Y0"D ?T/$)LE-+.\%;VK6(._Q(-9B@9G?0CJ?77?@Q+CD!W?????/?&lt;@]7D(?0@-L3S?@BCK1/&lt;@P&lt;6Q"0#?@D2)NO&lt;@AU[H???KTV#??:Z.&amp;A?;._\^==(G?0A)R8[??&gt;T(\/&lt;@ KQ:??=P588^???KX-BK???PY.+???C%HO??6CYF???_EX@H?0@%AVC;E_29=18GC/._==78,AW;L(/;CO-@AW57 7*K^8-4''W^3^@#[Y@VZ!IFA"8BK^W16_WXH&gt;0+;Q@U&lt;]XU7"7$HT,1*1Q;7^_\L&gt;04F[''2U''Q&gt;K&amp;IJ\&amp;*DH:_\^AY&gt;(%*^K((.! Y54%0 #0PU&lt;$8JQ"9VK%YJW&amp;)&lt;HC/]*&gt;SK7''AW??8EI^_??5,3L???^-(_??&lt;H3MFE2?0@P)&amp;[?@D-Y&amp;!;7=_,^&gt;=DG??&gt;RU S??&lt;O[:O??;Z''&lt;???VIA!S KO?@C7?N1;?@U\@1O,^?@ G??=&lt;=,K?@DL&lt;;/??/@$&gt;?0A601H^?0@&lt;3!RK?0@4O+#?@A\&amp;0O&lt;@J W$?0@.BXK?@A6?OO??4:V&gt;?0@36IK??&gt;\*@O&lt;@QUVB"?&lt;@L3YD"?&lt;@K!1,?0@Q$0C?@BJ-TO&lt;@F*[ABO??H\X?=1W9 _,^A089&gt;HL7E_,4A&amp;:@#9P_"9Z ''*"&amp;BMGKA^W^,M"K=P#7I"C/&gt;2+;DO,RS_,0G(/;V?]J#H/;B@ )KPU5]XI5"7\HX+I,*Q;79 [;PO_ EUO[LJNK9P#E*+7U=Y%NM!:KX8U]ST&lt;HC%OL&gt;K@U?KC7HO_XA&lt;.8-\&gt;&gt;-&amp;-!G(.C"(RH 0#;CO/!=6:K"&gt;!\"&gt;S7(PVN%X6U"9VK53[\I(-B"5)0X4&lt;H6P\NTO !=9LU??&gt;I9&amp;[??=L3MO??7!&amp;Z??&gt;&lt;3L1D O&lt;@MT&lt;[?0AX,NT^=&lt;O;G//%A4BP&gt;3O7VQ;?@CX@P(/?@B&lt;^.O&lt;@DD9@?0@&amp;8P[?@B@$@P#??=.M/?\T&gt;LO;G \NZ/"8HAW96O, ?JLGR59!Q4=-*&lt;0^=&gt;?;HO0LA?,K3T_7A1;T";2&amp;,&lt;\H&gt;937[. GC/^8&gt;K V== G2;"53&lt;^)Z$,^&gt;&gt;G7HO_&gt;A?\KR\?;A19B"5)0X4&lt;H6_, &gt;&gt;XGR59!Q4=-*&lt;0^=&gt;?;HO0LA?,K3T_7A1;T";2&amp;,&lt;\HR0\NW\38,AW=^O\ &gt;J@G2;"53&lt;^)Z$,^&gt;&gt;G7HO_&gt;A?\KR\?;A19B"5)0X4&lt;H6P\NWO^6&gt;LPU??=[FMW??:+''[_,$??=''4;[??6N-$/&lt;@U,!2??=;_+#?@JH7SA??@B0D7(/?@B^S-/&lt;@B=%??0@"\BC?@A^8 O???_]L???H[ E''???^?'';??:9%XH/??&lt;D  8/???E:G_&lt;@@@FB???,T3O?@B"=P0#??7.,3_&lt;@@H9=AY[??&lt;^4PO??=QJBHO&lt;@9^5&gt;"0#?@OPY7O&lt;@C.X$?0BM.''??@HAE Q?8\?,W???"=K0G???Z&amp;%;?@A.[:O??5WE(?0@L[53??=G4N(,H$_,NE_&lt;@K9&amp;Z?0AGY&amp;[??=2CUO??^W2,??=6[H/??;5M$/??79M5???M,&amp;;??=B0X/??.$&gt;^?0@W= S?@ITI?O&lt;@!0%84O&lt;@G?ZH.Q&lt;N&gt;&lt;/7Y/"0E_, ?KC7#N_;@@XN=;#8.O-\E_" A&lt;.8-\?G*V)KG//!=2C7? _7B4''O&gt;0\^P(-Z\FMOBO^_&gt;2C&lt;(0]KW&amp;EGS66+3A;7;?, ?@0G&gt;0/MQ?\GG-RK/JZ310#;''@\NXO_W&gt;DPUYP*+=0$UQ8-[[&amp;%OBM/;HO58=2B4=&gt;/(&gt;&gt;/7E ^-S;-/38,H=1[+=0;7NO\3M_\T&gt;2@_C%Z.=9\U??&lt;ZATC7J_??/_-&gt;?0A7QM;?@GV&amp;IO&lt;@%!S&gt;?0@&lt;3TO?@OL1??&lt;@+HW$??&gt;SK-+?@GM:GO??XMD&amp;??&gt;L+-''??6]QI???/W$V??&lt;Z!.(^?0DK2[+?@J8@!AW?@CD6Q-''??&gt;@2,O??]L3L??=0_B''??;&amp;K!/??78OW???G]G+??&lt;3L3_??,3K1?0@\B8W?@ICL3_&lt;@%2^.?0AL%(#?@A\@!O&lt;@L3M4G0;3=&lt;;87AW;@P\&lt;%(N^":^K*Z2Y0YHH=2C;B!W7&amp;?,LA33;OE7;H1&gt;KMZ,/=5]9BO.CA?,D"7B&gt;!:(H&gt;10F&gt;1[7B4K7MA;;SO\ =44G=277C^O7LA&gt;K=5C;W[YB$P#;E0R2"N)0"3ZKQ5I,O''4HC&amp;+8.N U&gt;EO;HO/&amp;A4-^XT]O[Z/LG/",&gt;2C&lt;2P_;B&lt;5G=0\^5H.&lt;)+OGBD/7[. GC//Z=9/7I!T!B/"\ABDJC/.Y=7+7"QUI"7""WJ$HO/,SA_\J[?&lt;@D/0)"_&lt;@H OW"&gt;VK-ZOD*P!S4@U8!_??6PNV_/??6/1*"0 N=;=OES'']7P\9&gt;1DUN]7]A0;8NT&lt;UN]7]A3'';DQT97]4G&gt;7[7DQT97]4G&gt;2'';DQT97]4G&gt;3C7DQT97]4GC/AOE_\FB.@VN]7]A3'';DQT97]4GC/ 6S1T97]4GN_,JES'']7P_;_Z&lt;U=0\JC/^?S1T97]4GC/]&gt;S1T97]4G.1X97]4GC/_.S1T97]4G&gt;6XVN]7]A7'';DQT97]4GC/]ZS1W7A (N=?G;H!W7A0(N&gt;W(DN]7]A0;8MO-LES'']7P_;ZL0UN]7]A?-''1!T97]4GC/^V=&gt;$UN]7]A0;70D&lt;UN_-P7PXN&gt;2OJ&gt;G$U&gt;AG7A?0QA ;7U_%:E_\FB ;;?-(''E_\_&gt;[S;G0XN&gt;Q;9YQT97]4GC/C9YQT97]4GC//Z=9/7I!T!B/"\ABDJC/^Y&gt;VTUN]7]A0;B&gt;PG8QQW7B@(N ?^W&gt;N0U=0$JC"W7;?\^E_\JB 96=&gt;38^QW7B0(N(/!-&gt;@DU=00J?A;&lt;@QW7CP(N&gt;?;ZE/\NB ;;[O\)&gt;G$U=0&lt;JC*K8[_ AE_0A=1?8B ]*=6S;O9)S# #;)_3,=1?8^_\NA-A&gt;,(&gt;$&gt;0LHC)[7:O!9E_&lt;@]__N?0@LBCH)]Q?;E ]/["&lt;(J63$*!;8@_,_?@(G??=0/#W?@IU&amp;Y/??+TGK?0A4&amp;Y+7B_\*7?\"G/\(A?&lt;@#\DH??=,:,C?@EP&gt;&gt;O??"1U@G&amp;&amp;K!8!&gt;"P#;C ^K'')^&amp;G ;&lt;B?](=&gt;DU=1@JC$[8D_ AE_\QB 9K&gt;A?8@QW;E ]WTD]AG/-N&gt;0_7VP[7W_&lt;@@@@A1?&lt;@&amp;???"=DH=2 G25#7M/-&amp;G/-Y&gt;0_7S [X04]WG0:S&gt;B;0EX/7PO]M&gt;0BK=8,H=5C&lt;G/\*&gt;1?;''_ ^RP^K??=O!&amp;[;S_&lt;@X:HL"???EM^NBBC7G0\N(?_.&gt;N0U&gt;9;&lt;;O")&gt;@TF/U/7R_-/G/\T&gt;7,U&gt;9K;$? F=1LG)8+*^)@)B@:8&gt;HK8AQW7D (N&gt;?;Z&gt;50U=1?9-O,_A ;;^/]0&gt;@DU=1LJC)[W=7XU&gt;37?@J2V!5K?@FE)^_\Z=1WS=28^=2 G=3_;H\+;CA;;)@[8G/-?E_,VA8-,^3W;AH#??8;T/O&lt;@@3.&amp;???2J4S?@E/DV(.$BO^N=08G3&lt;1MTQ&lt;N!__.=10UH/!$&gt;2JK=0W&lt;!?,,Y8/;CO_Q50W?@JL^^O&lt;@I4S1?0@&amp;8X#?@H"A&gt;H/?@C\9E0#7&lt;O,_&gt;&gt;XG"5);WS5,B@:M=6_8J1WZA?&lt;@85_N"?&lt;@@WM6???ZO[K?@@,4/O??+,INBO3K=1?84P^K?0A5&lt;JS??9?R&lt;/&lt;@Z#P8??=ZKP;?@@O[I@#;%O-_A/??Y"AB=0/???3_/,(^3O\GU Y^ X6&lt;G0:L=6;8J!WZA?&lt;@2NKP?0@''GSA:IQ?;F@\(R'']IG/.L&gt;0_7%@[?@DYTN/&lt;@/:/F*_]ZG?\$A?QR=0?;XQ;;%O-_A/,"=09&lt;11;L=0]VA%&gt;@#+,_C&amp;C8-O!EE_\;&gt;1?;L@^EY75!V8\H&gt;237 /,2"?]]&gt;&lt;:K?G+7G8.K&gt;ETE7)#T0ZC7BP N%?#W&gt;DTU=1PJC)#7:_\8E_\UB/,N=6LU&gt;1?&lt;3?\_A 9P&gt;A/8@QW7E (N=4''9$/^XE__(&gt;1?;80\2JT9GG#0F???CL3RK???FRGK?@BT1*/??7(QZ?0@73%XH20Z5=2:''=2,_=6'';G?-)A6U0\VH^Q?^)&gt;1?;80[??7[Y&amp;/&lt;@"M:8??&gt;@I&amp;[?@J$!RA;ZA/]U=0S7K/T_C.38-/ BE_0B=1?8B _7G27"&gt;3(^&gt;&lt;K;A&lt;7;$@Y+!#T9G&amp;.K%O&lt;@@X@@^/&lt;@AH@@BO,HA8.Y!)[?@FCT?/&lt;@$B,B?0@LRSG?@M"631;7%N@G5L]YQ!&lt;NH-(V=08J=9W&lt;;AW7C (N&gt;0G7ZO_!E_\PB/^W&gt;: U=08JC/,I=6#78QW7D@+8H\PU=1@JC/09=5C9[QT"B ;;S_]P&gt;V4UH +7 O\VERHJC/,3&gt;Z&lt;UZH-2%G*\Z*2P8GFKBG2AZ5/;FN-41&lt;''*(/\Z)(Z&gt;]1=.":S;IO,T"0#EAKZV-YZV +U^[7I7Z&amp;*$]:\_C/2-(_%VE_\WB$K;QQW7Y/\D&gt;6XFC//.=4C8B!V(&lt;:C7@=YP1TE.IGW;@?,A=WR%G?]UAI": U%)\WA)V7&gt;&lt;%9&amp;W.[,_?J8D5\[E5/\CH*A/\RE6&gt;0O;@/M4)1?7UPR+)7M''ZWI1ZF]3):.W%[.=G0;7 /_ =08U=1 JC/"F=&gt;C7C!U *G[DG,&gt;K''K&amp;]5);P''Y;7CL$H&gt;=77A_"%)P_/"9NK"?.+=0RK"?^+=1"K"?\D&gt;9BKI8/;G8.K&gt;58EXW9#^&amp;Q4^LBU0"G7@"5-S%AFRH^*!*ZE(HN&amp;X^IE"0 /&gt;0SQA**[XSX_"6&gt;I^X"BRBZB"(-''"56&amp;]LJK&lt;X.B=02-.;;P1,OO-*I_%56KV0"KM_,IW8,5B@;7(? U&gt;UPU=0HF=11 :O-@G/,U"3)F!/-3BO,K&gt;0S7B?2%=0O8)Z@F98.U"0V$O+QS1F 4WEQT]D3#&gt;5C7\''3R"0#7F+#7B*" !IU&lt;G6RK\$H&amp;"?,C"2[PZZ2+,L3P=3.K4(/E!+ZIBO]:=1C7AO4#A2&gt;K](,E#?\!&amp;K''#"&gt;FK%WNSI0"*&gt;4LU=1$JC/_G=6_8)QW7FP+8I_0YEZBD%W0^YH-2P"ZK&gt;0NKI-A)+J.03MC7N8/R"&lt;VF-($H=7*^A?K&lt;)_\C&gt;JW7E/\D&gt;1XF!/]3N-C;EX,H&gt;4A K_,[G?\AA)W($Z+$"&gt;RK&amp;DNN&gt;0\HIH/=E(.K&gt;0S1"0V$O+QS1F 4WEQT]D3#&gt;5C7\''3R"0#7F+#7B* _C/K87O$UE_\ZB/S;AAW7F0+&lt;$1[7G@*(&gt;8TU=14J&gt;B+&lt;[AW7G (N&lt;/#\&gt;QTU=1(J=O,DE_\[B/2SE/\\B*#;!QW7GP+8GO1CE_\_B/-DAO\ B ;Q&gt;O#7HAW7HP+&lt;I_ YE_\YB/_-=2 U=2HJC/^I=&gt;C7C!W7F@)Z&gt;P,U=2LJC/\F=5''8GQW7I@+8H_\\E_\%B/1&lt;&gt;8\U=2XJC/^H=&gt;C7C!W7F@+8KO$%E_\''B ;N''?^VE_\(B/\BE/\)B :X=6W7&gt;QW7"B,FXF!!^VNKQ(-U&amp;VZ''(+.X+9B"BB#7@!VKT8A$S?,"4CK#W?ZK.X.=&amp;\F''BO,_=0S8)_\Q=0S; _,?&gt;74G"O\FX&lt;Q@"0#;@?,D;0Z]#HIVG0;](O^KE_,@:/,_=2+4/&lt;G7@A;8@&gt;3&lt;)_\C&gt;JW7D?\D?YS;AO_V&gt;0P3A?,JM$0 G?\E"!V3(*O$G,7;N0ZF\7-?\(,HR4_^01&lt;N=1_8WO!,E_\*B :6=8C701W7J0)E&gt;2\U=20JC,.X=&gt;XU=24J&gt;@K;]!W7K (N+Z+7HAW;BO\J[/]H=377D*?7@O\F&gt;1R]&gt;38^??&gt;*X9ZK???!7+#???209/??9G62???9S1+???%W3?&lt;@BJ+@???2:CG?@A\2&lt;(/?@A("S "\$)NXG/ (=477C_\D?VK;AO!9OO.=A''@#^B$_"6;?@@%T?/??7")&gt;(/??5@@A???/"$+???"K!_??8BB8???$?R&gt;K???LSL4H=?I%E_\/B/,C3QW7L@(N*I775QU;%%KEG)?;#O\D=837#?.L=0S8)_\R=0S=YO,D&gt;G[;O/.OA*$G+WZ\XC9OW$D^C)''78/_!E[''YX%U-]U;;DA?;C8.#3D*KBD-:TW%%(&amp;65G?&lt;@U FI"?&lt;@M_97&gt;0OH":"K&amp;Y"K)X.Z]ZFH$_\[$^CZ"?\A"&lt;M*.$&amp;01KZ..YZ&gt;BO\D=0S=SO,D1PZ$T:9 .F9F_F%8"7VK[K)4*(/?@B_  8/?@F^__[W?@C6@@H,H&gt;3W7VAW7LP(N(?]6&gt;JTU=3HJQ/-(E_\3B :&amp;&gt;A_*E_\4B :?=?C7=QW7MP+;/?,ZE_\6B : +/\''ESC!S/\U=93R=1''7@A:K4&amp;WCO+S''-I29''+DH;/\D?UK;AO!0A%9QTF9A"5*K[Y=["0!JUV1 W*153Q&gt;."=6\*(/4"=Q%"46K^HU8 GYD23&amp;+KH,HIDYXO!?7@X\U#I&gt; %[NK18/A^K1&amp;X(A$!V^K\X,8%H.-B@:-&amp;?_?E_\7B/ ?&gt;:0U=3 JC-G8&lt;?\+E_\9B :+=3S8K1W7N (N+/#^E/\;B/.U&gt;JTU=30J_O-,E_\=B :3&gt;NC7IQW7O (N$/#DE/\?B/.L&gt;JTU=4@JC)V,=5&lt;U=4DJC*O%&gt;QTU=4HJC*+8:O\\E]8&gt;0R$^NH-B[D9N^Y9&amp;,X.1BKR+''&lt;(^=&gt;_7UO\Q=0S=XO,D&gt;GT1&gt;74F&gt;0,8S"\ =2G;R?]+=3..9LX_&gt;0RFEV9/_UH^Z(-%%FJ],[F6''+2KBK"!_W@_C(37S__9E_]CB(G7PAW7Q@+7B_0WE_]EB :K)/_&amp;E_]FB/_D$1W7Q0(N+J+3E_]HB ;7AZS7YQW7RP+7O?_TE_]JB :Y&gt;B9?E_]KB(+7@1W7S@(N4:G7\!VK&gt;1#1J/\?  #7A@\ $EV5"=*K&lt;^N!)X8H9_,*-8/''=2(E)X##]H,&amp;"5%0Q?,Z 0#;A@_7O)S1:(/7F(/_W_G;D*(H1^W7M(.K=0S=!(.K&gt;0S7H8/FLPW;CF5VJ(,1BO_&amp;=2PUI?\7=5:KAP;7K?K7\!VK&gt;1''1J?\&gt;  #7A@\ $EV5"=*K))''$&lt;IXH9_,*-8/&amp;=2(E)X#$]X,%"5!0RO,[ 0#;A@_7O)S1:(/7F(/#V.;;DJ$H1&gt;W7MX.K=0S=5(.K&gt;0S7\8/FLPW;CF5WJ8,0BO_%=2PUI?\7=5:KA_2W?KTU-*6,-;!''*6I"Y6-^XJ1)-1&lt;N#9/761W7SP(N.J''4E_]NB/]G&gt;C0U=4&lt;J=1''&lt;%QW7T@(N-+S4EVB,Z+4^-H.(*9/LBJ?7E_^C"8/;$?\D"8/8)_\N"8/7AO5,"8/;AO\E":D8AYE2#''NK]H,,K_,D"44H=4_8OAW7''_,6&gt;7&lt;F"[*A0W''HB@:B-?^-E_]QB ;;GU&lt;U=5HJC//4=537#!W7T0(N&gt;?_8O?%TE_\BA/\\XN#;PA;;EX,:Q([;\0#;B?,D=0/&lt;)_\C&gt;JW7A_\D&gt;0TF#?\!&amp;K''#"&gt;FK%WNSI0 N&gt;?U;&gt;#$U&gt;4A K_,[G?\AA)W($Z+$"&gt;RK&amp;DNN&gt;0\HIO,D&lt;/2%=0O8)_\V=0S;E ZF=7L:4O,U"0 N?RC;L/-LE_\^B ;=HO,2&gt;2\U=1&lt;J&gt;4PD=2@JC/4 &gt;3S9NQW7H (N?Q?=BO&amp;LE_\#B ;=H_,(&gt;U(U"?\/Y)C;NX&lt;HSPY4"72L!(5)%)G#X(.A"8M_"7FK^X5''(VZ$XI:G=0VKBJ$F2X..!9RD&amp;V:XU*"K%(.U$(.''B@;=H/,X&gt;Y&lt;U=2\JC"'';)QW??=[VAO&lt;@[YWC??&gt;]J_3?@F=*O_,_"0 9A?&lt;@S;;:"?&lt;@L*@@???&amp;):;?@G"!A/?? %!RB@;&lt;CT,U?0@)J_3??9I*O_&lt;@X-XD??&gt;P%\O7G8,H7P_??;AAA(/??&lt;5 @O&lt;@FU!R??&gt;GW/+?@G6''+  N)O]G=88U''+VY,YJ,BO^HIPY ZFE9X8-F"5ZYY*\H&gt;BG;#!W8)_\P=0W; _,;&gt;78G"O\CYLM@"0#;D/,E; Z#%7Y"G8-V\3%[&gt;0SLN^M"=0NK/X.=&amp;K6%BO,\A?0YX1V[2I_M&amp;7?GR$)?S''1I2W&gt;ZG0;7K*A:E[./,K*;ZJ=ZWF](V%20Y+$_5_^\ER_%&gt;2_7K?S@0_\@G/ C;O2%=0S8)_\M=0S=7O,D&gt;BK;ACLG&gt;08:RRL_=0VJE[J")NT^3O,;A(Y3_G=3"0!GR]7DG0;C''__UEW.VT,T^''?.L=0S7#O^*&gt;837AO"%=1K7AO5:&gt;0S8#O,&gt;&gt;:(F*P^-])1 O$=^PQ;7:O/EE[6-,+^8Z[MY^$!=QG*XR]H_C*?7^_!MEW\FL4-2YV&gt;$ZN(_.H/5&amp;KFKBM^1]6INQ&amp;L+G?,U"4_BV(,H[7%8\U?7A/,&amp;,IR,$Z0_"9NI%7&gt;^)(V*"Z:K''(.^":BMBL%!AZ)6''(BT":"K&amp;Y"K)X.V 9%&lt;''@!4(PV-&amp;.KB"?VK1''B8U*&amp;&lt;-*.7&amp;K H=/\D?V[;AO"CA&amp;QSWE=R"7FKV9]""0 N/_ 5]!W7CM#F7&gt;D&gt;0R _LH-YZ4IPBF.1AW*! 9:K&amp;0":*:OKG/_''=5S7D?\E?W_;A_"IOO.ZA/,G]%IR"24H&gt;4O7Y_,P=2,^8O\!EV9/_UL^[H- %5V$(*CY+[NKBK*#^6(_?E[;S!WL%&lt;"Z&amp;7;IR45&lt;SW-;%4?LG0:1+O_TEX,8*TOFTLYP467_"=&gt;K4:''F1,_F*]NK7(/ []MO1%CFP:$7"0#;O/,Z&gt;1'';PA?71O]UE_\@73_;@RD8M/,AX/,**/\4=-?!=!&lt;N[*[8"AU!-_,-=5L^-H.&gt;&amp;,^(!U*HXX-)"?,;9_,D28.U"9^Q&amp;Y^K032''"?\9"?\B''J.K=1@H=4C;HK[;@O??Z3L3??&gt;T3L7??:.O8O??$7@ G/ Z!AU_JV-X[2ZW4\7_&amp;&lt;_7AJEYYQ8N,O^^=7PUSH-#+ENKBE]*Z&amp;Q&amp;)577@Q&gt;*A*NK?0@((1K???&amp;^BO&lt;@P53.???]X_ H46XE*W2$!I:K*(.[&amp;(.(":Q!*#"20937R[VK=7@H=0EJ=2[;%U/;^W4&gt;ZJE9.A:;"&lt;&amp;*=0NKBO\..D &lt;&gt;3K;V6%YG0:*=&lt;?9M!W;Q_,JYE=*(G.5G;ZK=0V#4(/["?\P[8-]"545 6NIX(,0&amp;VFKBC!P[&amp;A&amp;.GKKG=2K:Y.=%KVB0XNKVH-^HUUF"6ZYI&lt;(8"5ZKY6:KYX-(*V[L_ #7H''K7G5,E3WR6 JBK-(.U+(.V":E''($J#,Y[5/X/5";Q7.6"_.J*!,X.8BO[;G-G;O18N_/^?!QW7J_[P=0@_"&lt;I4-U61"8:(*)2Y&amp;9&amp;+*8/O"?U@4O,)* #;A@_V]+A+"58HQ%Q)&gt;0K;AEN-4A:K.KB+5Z@H=0PG&gt;2%,PDZKHX-S*VBY I5;*6*K"GQ4WVZKP@ !&lt;TS7J!;7%@S3,7%NX&amp;92&gt;0L+V:F73KZY;A&lt;N]M_9EQUH&gt;0R4A+J_]&amp;D_"58=&gt;1^HS+AG=0]I&lt;(/A"&lt;NZ1Z H&gt;1?7@?$U&gt;0O&lt;E@]MY%U8WX-]"52\V*6==0N$5H.0BMMO:3T^C#N"&gt;E8U"?,C17JK^ !+Y@U7\HE."6(HO;L&amp;=3H^=7DF096Q.ZQ;+5D_&gt;6&lt;FTF:^,\&amp;6&amp;=P_)(/H *&gt;KBMCB*[R3PJU[G6JKYG)]"0 *^+.1,;:$21?G"&gt;16*8.:":J\":6K0?,Y''X/(":R^%;JK&amp;(.0 :RK*8.[&amp;H.$BH._^9-*% !B&amp;HZKARUGVC8_"6&gt;T[95._(5=#G2KL8/;F6*K&gt;1$HC*K7&gt;O$6ER+;L$X#UKA=(1&gt;(":BX%*ZU)Y/M=0^K9X/WUH,&gt;"?,#&gt;3@1&gt;&lt;;;B&amp;%&gt;^''*K]8-5''HB,"0"W"9"M&amp;Y@H=1*6A_\B-.R84K#7D=2Z=0VK/ #7G_,G=0O;O18N1)_8#1VKW*6C1X"LZ8-4"7:O&gt;7_7O?,0=9BKBJ+2%+V;ZIT(&gt;:I[=4;7DA&gt;K?0@T*,C?@@B*0_&lt;@@=U@?0@@US??@@Z@@@#8VO\D?E"1A*)9&amp;6X=QS%OG ;R&gt;MK9VQVN"9FK$((H(($E)(&amp;N")FKBJZR%Y.1PJQSJ$-VM!&gt;KZ)Y-(V4H&gt;6V3A*-8&amp;6Y+&gt;0Y.&gt;0]&amp;''W".G*&lt;F"(ZK!(.FBG4G&gt;4W%&gt;8_7:JW7@IZ6.&amp;"VJO.OQ?]@=1L^"9ZL&amp;H2YBO_6A)RK$8.Q#@"GA*"O&amp;)&amp;K)H.[ 9%&lt;&amp;C2!\M&amp;K)H. &amp;*[D"0 N?Q;;1/&amp;=ET''EWY0^#8.N#H2M?0@B!2/?@@HE(O&lt;@@P4N?0@B^"BK?0@B8$2K?0@NN]3??&gt;Y+1?&lt;@FA;8"?&lt;@GDT BK&amp;1);*;,F9^G(/???J@@O??:F@@???[\BBK???.#&gt;@H???:LBC?@@J @O???D? $)7D.\7UT[&lt;3L%IVP!8N?HV^&gt;T(U2N*#=1Z''!,A7G6&gt;K(/,$&gt;1JKY8-1$7.[Y[FV7WFKBGZFV''C;F&gt;%32!=O&gt;3$U=8/7AO.KA ;J&gt;O#7HAW7HP+&lt;I_ YE_\YB ;0&gt;M39EQW7F +4&gt;0PU8O\DO Z@=4W;A_K;S(/;UH/;A?,B_/,&gt;BC?;AMXF??;8S]K?@C5XT/?&gt;&lt;[H.?0D,):;7D&gt;CU=0L^"&lt;),0$6;2;V&lt;1Z#^BO2SE/ ]A'')#???/393??&gt;O3&gt;O??;#A$???3C@!TX?,I^?,7"8Z:"[&amp;K-0"(&gt;8TU=14JC/!W&gt;]*FE_\M8&lt;?7BA&gt;K2F7BS+.%&amp;&lt;R5(,(H(L^:"8/7@?2J"0V"=1OH2&gt;&gt;L:H/BZI-D$V"N[;2K+X.\''X./":FC&amp;X.!BK''N0. ^#P[N"&lt;Q/.UR=S)]H.H.Z":RS";.K;O,S=3_;UX47"2)^U3=V/$.%PH,H&gt;8JKV_-- #$HZ_,C,@[&lt;N?\ H_]IG/0OW1V"%)&amp;''G6*8W[.K=2@H%?\UAX&gt;:#[*K.@#7CD?!&gt;3/;F$!J&gt;1\"4C+7AA:-";NW.*NFX(%%"6 H&gt;7/7C%F1G/-&lt;&gt;QLU2J%1U5YF[U=C^[2--:^-71?8IT$U=&gt;XF^&amp;C???C-5O??9QN6???4D"3???S,R&amp;E$H7/;HH.F.("9";XH=&lt;'';=QU^ZWQFG"JKX&gt;]+9\&amp;K-9GG"0#J/$UYG0;;GO.''E^RK''ZV(*P!^20U/\HVCT(,HUXGT:A&lt;3A/,\*_,G=08^C&amp;C8+O^)EX/7+?.!XX/7RX.R#IJM$ #;E ZI]8-7"7^K&gt;6''7(L6K&gt;9@HPG$5LC9-4,4^":NO)IJ"BO,VA(Q2!7FK\P#;H^$0=2C7N=[7C?\.G 9=&gt;M77\QVK&lt;$/YIY4H$O^F&gt;5*K"&lt;W;CH.KM UU%''#CG/\R&gt;2HF&gt;1JE&gt;0UK"?,_BO,0=1-T=137G?\G4_\+G/,V_1T;T&amp;9BP42.6-[Q+L7R1V\&gt;G :P&gt;OC7^1VK=37;IW"K;H.*#:&amp;K* #7@4OF&gt;0@%MD7;@A:K_X1&gt;#W4H=00F"I^K&amp;H.WBK^"*[*=#5M!G((0A_,# O,ZS8/;N@#;K/\&amp;S_\Y=2K7C=''7KQ;;E''8UNT)''PC1J-^CY4+''S7L]ZM18N=4#81__VE_\V8=''7F_\LK&gt;K;B1=L"5A:V&amp;I+,&amp;F]VX/;GH,&gt;J8/;E8,.)S[US  9&amp;H/;B WP$-JK4H/7@8/7P''*!&gt;18H=2(F![]=-&amp;:.&gt;2''7SO/C&gt;0= =5ZB,H*3";DH/9SV3;^ [6G;G+_;@_]MG.O7XQUQZE1NR7B?1\Z,/L/J)%ISG 9+&gt;K_7]AW7$P_7K5S7@O,=&gt;0#;A$[;D1:K_X-&lt;#W4H=08F"I^J&amp;H.XBL&amp;=,,[T*5YHG/.1A39,TSY@W\WSG(.%$JRT(0#;G0ZG]H)4"7PH&gt;237A3_7IO\!8-77H!8N[/":=8XU"=M24TJ$2:"-/X/RBO\R&gt;1_B&gt;0C;FBX?&gt;1&lt;^"8RK!X2DBO\LA-Z*1=;H.VIMWWA_VA9,I0[W+GD&lt;QWECNS5_1-T_":NP)IV!BO, A(]3"''RK\0#;KO\DN/\$=2_";O\%G ;7OO&amp;S=6PU=0 9:/,KG%FKTG9ZZ9&gt;&lt;*?VK/P#0JL\/JBUO&gt;0D14T;#G*:K+YF+&amp;W%C\#6KP@#;HO\KPO\U=1K7B]K7GQ;&lt;Q? DEU1'']&amp;E"Z*J7.K"_,+F)\&amp;P^=&lt;W&lt;@!UJUU9LRU.:3\/F-\_J/E9KG ;7(_#I=7(U==$G.JN3/LV!XUX^&gt;6 G"2A9H64%BO\LA*30)OVK=P#7U@_7D#7$&gt;1X^T(-[]FQ!V;]Q(D*KBO,!H2#;H!?;% _;I_@+=2S7I.''4=1D^&gt;02 EX-) 6%=[G%"YHA""0 2\]WXG?^BA=*#4&gt;X^-H.2 Y5"&amp;V2SZH-)B@97&gt;M_8G!VK3H+P\\]#:#GDIH/;H8,-H''+;GX])"&amp;"KZH/;D*?;E;#;BP#7C@Y =0!/=06K=1@H9(77OO\S=1VL&gt;3(.G(/;FW@#W?,PBO\LA+#7A*?7GX/7C0 N[/":=8XU"=I34$F$1:Z./(/NBO\LL\7;A!8''A&lt;"XU5!^\%9YG60''*@[H''%YWQWECNS9^1-T_":NP)IV!BO, A(]3"''RK\0#;I/\IMO\_=2K''&lt;/\_G ;7.O(O&gt;LTU:47^IQ9S"5%9ZE92-VR V(-Y"6I5[6I0,&amp;F#V8/;C8-UH8/;@(,+(3[ZS  6&gt;0W7$0[7CX/7X(^^&gt;2\H=2(F\__Y?E7;JO,L=4M)/H&amp;="&lt;TH,H/U/+NTY6$^&gt;0S7CO\MA:6_)*&gt;0&amp;7A)G/,M=037CP^-(JZ.0I!YXA:KW75_^FPH=1\F''+^X.8.&lt;B@9V&gt;JK7[1W71 _7FCW^&gt;1#;@?,DS_,OG(-3"7RM\0#7DPZF&amp;(&amp;["9,H2J.;3\&amp;*UUL^&gt;2,GZY=%''FNKBO,QJC'';E_,V=$C7C_\]&lt;M[7IA?;E(@UTVIYS4=^/L[F.K3G2KMZTA8NVO"8=6DU=0T9;_,IG%*KV7=!\ #7MP^-#Z&gt;6G+ZK3V;J":&amp;K*)B&amp;&amp;P#7C@]/^&amp;*EZ8-O"5B"S8,HHEMQH!?;&lt;@_;F/\HPO\P=0765?\UG/,V#!UNW51NSVJ;1&lt;^5.&lt;#F.U%QG ;7QO&amp;G=9,U=9(G=0)I;O,SG%VKVW)#YVZ/WY9W"0#;E$H1&gt;1D_&gt;9(G"3JVP[T;BO\LA''GO^-NK5@#73@^:(K/A.)=^X1;;TO\W=5@G,9&gt;8.,J_WE,^&gt;&lt;0G"3)=TV9ABO\LA+SZ%=^K80 N[/":=6XU"&lt;-)/4: 196--X/J"?\1&gt;5M.X,&gt;C&amp;(*Y"9*K%H.L&gt;02K!72J_H-&lt;BH,15&amp;WX]&lt;Q&gt;)(JKYX- Z8U)"76K_H1&gt;"0#;CJ G/Z%$V4%#WT\=W&lt;[UG8.#$JRU(P#;H@ZG\8)4"7LH&gt;2#7BC[7HO\X&lt;]C7HQ8NV/"&amp;=7PU&gt;HP7A51 R7QK"7&amp;K^X59#0 5A:Q&gt;%WVK\@!&amp;\G](X''"/+1:K%8:V$IXHH ZH^(-:"7(HM.Y)4,7!*M,^":ZB)''&amp;_*86+$:"XBO/&gt;A3=,TCY@W\WSG(.%#:RU(0#;G ZF]H)4"7PH&gt;237A3_7IO\!8-77H!8N=2W9_O]''E_\@U_C;CA9P"5M:YE5+,6F"U8-&amp;"6"A[7O/=4C78E"K=6$H&gt;00F_6Y7[6]9JU+;*FFK&gt;;*KN*X&lt;+$LH=1XFY\U34X/QBK:%/,WR%E%VG(-;"''.K_@#7C@ZK&amp;X*]"90H/IN?2\F]U58^"4Q+P6!OBO\VA+OC),2K4P NW?"?=7TU"=)J-(.3"9ZK%(:VBO,VA(!&gt;"7:K_(-!3D&gt;KR0!LWE]KH8G$7!;8UO,L?FLG&gt;3OVJ_\9=1[49/\ZG ;7NO&amp;O=:&lt;U"?\^I&gt;G;FI"/(96-";XH6":3RDD;YC\^"5N+W+53UGM/X(-OBC_TV=''W4+#]G(.3 KI1*--,(S6KO@#;E2YV&gt;0'';EB+K=14^"=F!2;ODBO,VA&amp;UL\4NKPP#;[?]LR?]O=4''7J=?7V1;;*/_BEV-2\&amp;--\JV**ZV&amp;**2#\&amp;,^ /-]EV11\V1,\ZZ)**V%***%\V0^C.O9K?^!E__ A=9H0#,^W(- _V)+_:Q1(V:KQH-3NEVK^H-=%8._"9VK%(:UBO,LA(!9"7&amp;K^X-C+%CZ"?JK%OR6"0"''#VY2G?,O=037C@^,&amp;Z*1,)I&amp;Z1;;4@\5V4\0MD3N8Q:K*(&gt;*&amp;J\H&gt;2@F!F:J[H--BO,,=0&lt;&amp;=2[7O/C.=38^C/]''&gt;H''/ETP/).H_":JQ(YZ_BO,VA(A2!WBK\@#;L?\7X/\T=3O7E,;7QA:K67Z?PZ?K):3E"=BK&lt;C[TJX-K"5M5XU)].UF$RX,HHO,@R_,I&gt;1K2SO\HG:&amp;K*IB''%_]F3"+7T/\["0"&lt;*F-[WWAZVA=[&gt;02:A,^\U5%T\3O;FQ?;G?!ZEU1$YE1\YKJ:.+F2.;*2YE0^C&amp;/8-?]4EX+8!O,L"8/;U0U)+VB_V(,."39R"2&amp;K!H.C#HPH=1TF#K2(,[:KBKF:]U&lt;_&gt;5@G"62C[G90^&amp;Y$ &amp;VKPH-]1X/S":VP)IR#BO,_A(]4"''RK]@#;KO\GM?\$=2G"7_\"G ;7R_#F&gt;QPU1:]YUQ&gt;KS7EU[5\H=1,F*K2_08/E"?\BP^3;BH-L"5A8W%9#,5.#T(/;D8,0M(/;EH,-)R7PRP!AH Z*#**O*(,H=0 F=0JK=4Q9(O,]BO\*A(Z1_+A5*3W7D_,N!?,Z(?,V(%;*"?\OBLR\4]KR%D)PG(-4"''VK^ #7CODF4\:Y''Q8NZ?"7=7PU&gt;HS;CO,MA5I(WD9M\+;AG(.6%;R#+0#;FPY7X79_"5:K&gt;0SRQ_\D";*K.YZ0*P#;Z0\?[E@6O5;D5A:K)YB$%JLH&gt;14F!''RI]H-4BO,*=0T5=2O7H^W[=2P^C)G87_]&amp;E__[A?MZ;/,IG%^KV''1$ZF&gt;-Y)-_"5&gt;KX''5(\P#;G@^(+;V3/X.9"9I""6RK^()9"78H=00F"9^J&amp;(.[BKRR-;68%&amp;U%G/-JA6R!W)]^"0#;D_,ZQ_,!&gt;2G7GD/7C?\1&lt;^G7DA?;E($U=5PJC%+8./]ZE_\YRNS;G19U"5):X&amp;\H=0LG(("!"*JKBN[7JJK7CN;;@*L=LO,(XO,FG?3G=037Z _@2J2:5+AWQA:KRWEOX% H=1$F,K&gt;&amp;2H/LBO-A&gt;A&lt;UTD^GV!9%"8BK H0H2Z&gt;:3JV=_V(^C/\ &gt;F/8PAU6"7^L_(,HI&lt;TG2[=%RS@3ZS8/&gt;0:1=6(_"?\#+?WY=0,H&gt;1$FQ2U &gt;12K&gt;0&lt;H&gt;6?7B_, =7[7E?\93_\.G(/VX\QC(LNY0;JK28/7K/-JTX/,"9"L%9BWBO,PA(M9!7"K]8/;MO]J8(,#"5-. SRKB@9N&gt;I+7YQW8$?,L&gt;&gt;$GZ:A%&amp;6RKBO,K&gt;0H4&gt;1C;D?\AO_\K=0?66O\XG?,L"!UQXE%OS5:&lt;1,Z8/L_G-%%QG :Q&gt;O/82AW7G@]()VJYW8-_"6M=[V%''+%*XVX,H&gt;0%ZJRH_&gt;=,G&gt;2[7E4/7EO\P=1/J=2K7I_,V3_,UG%:KW(A$]@#7R ^1%+F8/YI_X!:K^8)&lt;"7&lt;H=00F"9"J''X.\";JR-K&amp;K/X.5X:!''BO,''&gt;? U=5PJC)C8-?]!EX/7V.3;HX/7HR+Y;LFK=0H*L(/7NO,L"8/;G0U%(VFWW8,HMD)[K3_QW- _.X.9%+B(BO,+A3=,TCY@W\WSG(.%$JRT(0#;G0ZG]H)4"7PH&gt;237A3_7IO\Y:-77C1;;CO^QEWM6[XA+"0!)X)&amp;4+**^*1&gt;.":5&lt;*G HC%#8.O]!EX/7@#?"&gt;0FWBO\S=0;;HX/;G?,1"?_)&gt;1ZK"?2SA_,Y=0$?=0?7C/WW=1T^&gt;1ZNEUA]V%AOXK3F1+V&lt;2LZ9V%@^C/]7&gt;^39CAWXRIYNG/,Q"7(-AZ2M+X:-"9ZK)X.K^8-6\HM&lt;!@#;N39]=1$E\-E''+S&gt;KI(/;C3FK&gt;0BKX:I#*''LH=0KKAW.]^ZNK)H.+)[N-"::K%6ZT\@"5&gt;1W;]RM8L*):AY"Q&amp;X:Z"0"(''7I/WVQ\WF%7(Z0_"9NL$82SBO,HA(M8!WZK]  67F+T=/\Z2?\OG(/EX;EU% #7CLKM&gt;68E''ER:[&lt;RK8X/&amp;78/#":VC)W&gt;"BBERAY^@%''6K^ !2]WQ2](FY''1:K$X2R#IDHRO]^=6C*A\J$/;^K3@ N[_"9&gt;KHU"?\U&gt;5I[Q;]:%8^!"98H&gt;00F"HBI_8.@"62X\*I764''7L+6KO(-#ZHQ("7"K]85="0 ;A9ZK''X6]"0".,HQ&amp;X6REZA=:"7*L H,HN0^X"9^L%8,H,:.DUE!O_&amp;MCXKKTG8.Z#9*P&amp;P#;E ZF_H]:"7,H&gt;137C4O7C&gt;W7G;S7AA:K-7&amp;/YZJ3&amp;*V.";ZK.GJ-X)26&amp;JZ2"; HC/-X&gt;DW7QQVK=4G;U66K=2@H&gt;0HF"(NJ 8.C"?,8=5&amp;*"?,SBEQ_[E]ZYZ2=G(.X#I&amp;P%0#;@ ZG_(%&gt;"78H&gt;0W''S?S7@./E=0,^C/,#&gt;G+7X1VK=E?ZHZXH=50G"92O''IB[BO,RA&amp;M=%+P_&gt;0ICA%.]^+,^=O,7A/,M!T@3"?,KBO,T;#37DO\V&lt;,?7G1;;@($UP51 QD]Y.MGX,LC\6;ETPA8NKO !=4HU/0_7@8C^&gt;2X*OEP$G(-="7:L_P#7@ ZF&amp;X*Y"9(H-JJ$-[R#[&amp;L^SP^KP_.!(8/;XP#;HO\YR?\O=1C7DMS7GQ:K=2;;GXRK6@"&amp;&gt;7LUO$M_QTQD,],^"&gt;OW0].X5W3AS8,&gt;B@::&gt;S#7\1W7@$W"&gt;0X^T8-W^&amp;M"[KE"''5*K&gt;0:KQB.K&gt;0"KI:02640HMB\F-IF4#;VK&lt;H/7S("*&gt;0&lt;H=1XF[_\0&gt;1^''&gt;12#K)()+8/7XX/@''MSN":*K(W&amp;S[(]/"&amp;&gt;K[0#;B&gt;T;=0#7E,_4=0(^&gt;0I:ET58UTQF^,OG1)''L4=R\ST4^C/-\&gt;DEME_^9A?\NT,;;D_,CL$+;B!:K]8=6$W H=0HF!Y.G&amp;8.\BK:!0L[I''&amp;ASG//@A4=3X$-RZZ;CG(..%*2[* #;@ Y9Z8I("6\H&gt;0/*T_\B=1SM4?\RG ;;R?_#$AT2"#T*Q&amp;&gt;&lt;2!:K)9N&amp;&amp;ZHH&gt;0HF_GFD[X--BO,Q94[7B?\#2N''7F!:K5W;KO:#C(:6="&lt; H=BJ8LR$ U_,CG(-;#G*P^0#7@ ZF&amp;H*Y"9$H1KN%0KV8\51_]U-YG''H1'' Z5+''9PG09''&gt;NW7]QW,V^7;@Q9]"6A&gt;ZF2%1[W-"&lt;0H9S+@M281S"]B.S?\G+JK,I^+(V-CXBJKN0#;C=47=1C7F\/0=1@^&gt;=''7=AU$]&amp;] X7N'',+N^-K&amp;6''6%$G/]+?@TUT''YNQ4).1LSD(=CP4)9LTA8N/?$==8HU=0AN5_,DG%"KW7Y)YVF2VY=R"0#;EDL.&gt;0?;C=4:=0?7E&lt;/%=1B=$,7L1YYPWQ&gt;KP7UEZ$0H=0HF+\6 6H/VBO/=\!UN_D5CQGWJ1&lt;R%1&lt;7Q''UMNG ;;N_!$=6\U=1L.7_,P&gt;1,9J?,WG(-N(UB&amp;U #7@ Y.07_R"&lt;,H3[C@4]F0U$$^"4%7R&amp;=OBO\BA*+F''L2K3  N&gt;4/789@UYP]F 4\1QWB93Q:K)9N&amp;&amp;ZHH&gt;0HF_GFD[X--BO,T9T''7C/\%1^_7GA:K4G''RQJ[F(:*:"&lt;,H=1L&amp;("H^LP_B-H)EPGA:QQ&lt;1'' ^5+''9PG0;7_?$S&gt;9 U=10F!+!7+6"*OMG;DY\$%O,%&amp;_,O*(/7X #A#]GR2IUZV!:K](%5"7(H;0ZK''H&amp;"":HH/9SB1+*^Y6D^K&gt;&lt;G"9&amp;J''(._BK6S0,[C''U1[G(-]^596X0#7@ Z .Y.&lt;";:K:T/WJ(-]"5=&lt;ZV1*,FF VX-X"599Z&amp;M,*VR[XH,H&gt;0=PH?,CG8,/)CSWTP!FLP[7UX+7KXKS ^M?16"VT@ N&gt;3O8Z/]4E__]A?\NN,3;B/, OSG;GQ;7@ ZH%(*W"9XH3[R03L&gt;&amp;W$0^&gt;24GY*A"%&amp;FKBO,LLS[;C/,U;#[7D/\^6NW7F!?;@''XURU9\RD!".&lt;3O-L_T5J1LR!8N&gt;3N)&gt;K,U&gt;=(G&gt;1+YLO\]=1_)6?\Z=0828O,MG&amp;FKX(A&amp;] #7M0_H'':3KG,ZK.F/X":BK(IF^$0#7@ ]+!F.FZ(,H&gt;3^YAR49Y_,+G?_^&gt;?@U=5TJC,C9O/]1E_\BS.S;B!9S"5!8X6M#,5"^T8/;B(-NL(/;@(-K)36"T@#7@PY22WKW"&lt;8H/Y?B1-.RRT8^X&gt;&gt;3A&lt;"R3]/F''5QYG(-H\#=2SP#7@PZ"1*_Y"&lt;,HC/,:&gt;FO7TQVK4VN&gt;R*KL%;N&lt;"&lt;6K=3S;\F&amp;K=(.T"9RL%@#;@ ZF^8-9"7.K&gt;1?7]J6K&gt;0 HU%&amp;DW19(J@[ -8D)Q5!3S$!).,,_"9:O''YJ]BO,BA(M2"GBK\@#;B/YP=_\K&lt;L_7EQ8N&gt;3C8[T4U&gt;GX?A55\P''5L"0!#O0Z'' 9]5"6&lt;HY6=4ZFQ4(+H^"9:P'')V\BCDF ''&amp;E]8-7BC[NX-''O9:[^G(.+_*Q0''J2R+IN+% #&lt;C ]M\VQJSWF61Q:K*)"*&amp;ZXH&gt;0HF^F"CX8-#BO,C&lt;EW/=1KS4/\SG ;@&gt;HG77!WF''5QYG8-H\#=2SP#7@PZ"1*_Y"&lt;.K=T7(&gt;0ZKT(-V^VM"[;E$(E2K\X-1 7Q?BH^MAZ&gt;*.Z77E+PH.9$E&lt;*/7BZ&gt;K=1XH&gt;0 F"?,#?HV?"?0,"4.''OZIPBO\AA''KI\-^K3 "=''&lt;KF69IKS19 ;0^I28.L"84H1;B3/18N&gt;3C8[_]YEX/4M:2K.(.Y$Y"S% #;@ ZB^(Y9"7"KQ-=&gt;"34HS59(TSU02] ^&gt;G;;BP^O]H94"7PH?D4G&gt;2K''RO\[&lt;_[J=0T^C+;9ONDU"?\"N?\C&gt;2"T*:V]+X.4BNEQ3SL7S$X9G(-Y)FV5\E=,\5&gt;KUP 93$?\8,SQ71:K(XJ  I7X[YX9"4JKS71N\%U+QTU8QH/;IX-C&lt;X/7G(/X''.V*4 #;@ Y(M701"3@H&gt;4;7KO,I=4[7D?]U4O^)G/.L&gt;@PUWWE!VU%2-[&amp;7**27.J)*W1;; PQ_[VQ]WV62-;Z++;^:*F)]G :V&gt;QQ0E__JA=YY2S4^V(-]^V="_:--)&amp;"KM(-5&gt;0EM"7RK Y&amp;K(X.&amp;''JV\''0#;@ Y7[75*"6"KS[][2(/7B8.3=0"0"0"%#F)5G?,\;?\EA:&gt;T-[^.%65-G/.=A3MQUCQQLZWSG(.*$J.Y*@ %A''-2 F&gt;K[P#;H/\]UO\N=2+35/\2G :;&gt;S%QEX/S[\AH)&lt;:&amp;*\"K4X/''S=X+"5JKWGQ*WFV4UJ!S"0#;@B(&gt;&gt;0S;A^T==0H_=0.K4=ZT=0"R7JJ].H,H/I!#WVFJT5P_YR",A+6VTVP,TGH5RC&amp;V8A&gt;K(H6"$9&lt;HIPY?](U2"7LH&gt;2W7IF#7B/\V=0;@=2$^&gt;?''7-AUVZU1ST6&amp;;/&lt;B-.,OC+U1VG ;;WO!AT!W9''_,B?@,GZ*)#''E6KKH-KTH,+"7^P]9I9BO\BA(N]!9&gt;K''0"6*:F3.K9*V!;;- ]S^E9LSF&amp;32A:K*)"*&amp;ZXH&gt;0HF^F"CX8-#BO,D;%[0=0'']//\,G :+&gt;R''7 AW2R=( G%RKVG-%X&amp;&amp;1XJAX"?,Z"5W;@(/;B8,**3'']T0 4I0Z9$[&amp;O.X/5"?\5"[C;D@#7E ZE-727Z*+;L/\(&gt;:'';LH/7=P#B&amp;MKQ3IQRUQ9S;+XG1)KJ6\JZTE&lt;^"6FBXW=#BO\@A)&amp;7%K"K.P N&gt;5[8Q44U&gt;G[;@/,?A5="[6MNZKCGG(.?''[6&amp;-0#;@ Y/W7)X"5^KH&lt;!B=(.6";RW+*PH&gt;58GTGU!R41'',,$^":*X*)&amp;&amp;BO,BA''!( 6RKYH/;@?ES;8/E"=VU+LJ#,9&amp;9";(HC/,;&gt;FK7Z!W7&gt;@_"[]8&amp;G%&amp;KW''%-X''N0ZZE^"6VKZG9-]@#;@@^"(;N)+X.7"9I#"6RK^X%9"78H=PZK%X*X"9(H-IF&lt;.[&amp;NW6\^&gt;4$GY*A"%&amp;FKBO,ML#W;C/,W;S''7D?\V8M?7E!?;@(@URE9]RD!".&lt;3N-\#S4:5LR!8N&gt;4_8U/]2E_US:O,GG%"KV''5$Z #%A&gt;.L=4BY"?\WBN(4+#'';A25P&gt;1@^?J77@/]"A&lt;R5.&lt;WO*5YMG(-K\3=,T0#7@ Z*2*OO"=HH&gt;238EQVKQ_,A!E*JBL.)1MN$*''5.G :H&gt;P[7WAVK=1C;O8RD28*R"9RK$(.P"9FM$@#;@ ZJ_H-="72K&gt;0+7Q)JKNP!"W(U+G#$-.@[I/HL8KSM+N1=H"4"\[L13.7/A"&lt;FK=1B-=1#T&lt;@#;@ YGI6S;FH/;CP#;V?\L&gt;1''7W/\P=2_H=2P^"=E52$J"/)V:,(/BB@;;L?!*=6(U&gt;H;;@//_A6Z X)Y!"0#;C#L5&gt;0;;FN0:=1S7E.C_=1X_&gt;0JJET]$UDIHX+/L3;SG5L&gt;1UT,^C/,;&gt;HC8:AW7@@]-(&amp;"XYX-^"6%5\6Y--E:]VX,HI&amp;48MA?;&gt;@_;E.@7=1[7D&gt;7]=1_7C#K!&gt;04^XX-" FY6BO]IA:&gt;N-;&amp;9$U)"G(-&lt;"'':K P#5A(.X"Y6K''X.2$+N7":6K,66"\0#;FO0]E_]UB ;;F?" *QVK=1X,;X.X:-2K=1T,&gt;1VK&gt;@S;@(.K?@TE[KQ\*UZKBCIIRSH044+$G;:K.*.&amp;-@#;$P]S^E9LS&amp;^411:K*)^*&amp;*XH&gt;0HF^F"CX8-#BO,F;U#1=1OS4_\TG/^AA?,B:1U1Y55)WX,HZFB]-K*/)K\_,8.&lt;Z:Y.B@;;L?!*=6$U"?\FO.G;A9LH:.?;A(/;B?,X"?__&gt;0JK"?2NA_,T8SW7E_\R;-?7EQ;;@(DUR&amp;I[RDY /\;K+,_R5KQOQ18N*O%BP1VK-V*&gt;^J8HN5,E&amp;GZ%Y8-0"7Q;^WNKV(.T0W.*BDC7H?]S=08E*):Z*X./BMUY&amp;$,^&gt;3D1=1$F$).K Q&gt;K G&gt;D (XH&gt;2L1QO\%AWJ&gt;X:]R"32KNU^KMX-!''FR#ZP#&amp;/ VA(W&amp;&amp;":RK(Y6[(X. "9Y&lt;%W0H6_,1&gt;4#;A8,3AY^O&amp;H.W"0",(G%)Y&amp;54Y1=""4&gt;%ZZLH&gt;0DG/GZ? \BK6X/Z,(/#"&lt;Y).%J[BO\C4NW;R V''T;M02(/X"&lt;SF"=\HC/,)&gt;GS7L1VK/''V2WZJ2&amp;ZN&amp;";ZK.W^-XI60&amp;*F''";RK=3W;!B===0TH&gt;0I''A(1Z0V"4_*:@=0&gt;M"5 H\WNF]!89LPZV"9:M(H,H,[VEY6]"!VX_](-6#XBKBCGDA;R1 UYIS7)UO6N35!&gt;K''8&gt;^$94H&gt;0PF!WZG]X-5BO,V:4#7C?G7EZ77DQ8N6?#$&gt;IXU^XJB^A9$"7OCZX-7"8F@"7RKI/\6!H-M"7!? WRKVX- 1WFK\(-?^8-,BH,(=36Y"3.KZ''Q9&gt;0.K&gt;4BKP=NG=3/7D&lt;;K7(/-"&gt;M''-4JK&gt;0RKO/,!"_-EBC5*"2_Y+0VY&gt;5;7B"[7\(/7Y(.8:(/J":R@)GZ$+:F]*(.4";Y;+F*!):JY*H..BH/@\+AX(P!R(@U3%G*V Y\H]*XE )VA$G&gt;K](.A H-5"?,@=3F@"5@H?B]FEYC7B*GF,8.\"9Q&gt;"7FKUFIUU68HC/-%==W-E\R'');&amp;K20#7D/,A*4MB&gt;0A*&gt;1D^"4:%W,A.^(],"U:KBB G5H/L&amp;\R(06;L_]VKBN8GPX-&gt;#''&gt;KBGK7E1VKYGM+WGI\)GN+";HH-:N!.+*#]U&lt;^C/-H=&lt;[7GAU="?\Y=52K/_/?"8,(=7JK&gt;0/;R;5[AYZN%(2W"0#G*VY@NV)"RD=%+,\_":VP%:J!BE":AUY-ZG^KPP !64S7CO\ 6-_7HM-.=0[;A!8N&gt;3G8O?#(E]%I/S@ RT0"G(,$-%/7HB,H0&amp;\E''G6T^X-5BD)]Z#@^!4DF9X"8YX-ABD9YY4QCY:[BG(.($:R[(@!^,@UYZWI["40H&gt;1K7AV/&amp;=1+,5/\HG(/T\K=V+LV.*LBK5H.=]+M"* #;C-LET*12-X.5BKR#+KN,)WI(G(.B WNK @!4%8B#1Y''!)18N&gt;3J)&gt;K&lt;UR:$''=38^4&amp;EDA/,9ZB%IP;D =2;7C&lt;#J=1L_) ^J&amp;H.T"9@H:&gt;8+-^/.J0ZK$H.T#I H) _7D4;J&gt;0?;K&amp;T P1;7@)LU.:^#1K:$\%(^QD,GTFVZ1Q?,&gt;&lt;4U24PFV''I2VE)'')K*7''*#YG 8,=3-)EU\G&gt;0NVNO\&amp;;M+B&lt;!:K&amp;X.X")$H&gt;0HF$G6L_X-&lt;BFI4\&amp;E"\:"3G,$G"=W7(WNK=6DH=2C;F\/;C?,P&gt;1AB&gt;14^"?,.=16R"38H\O]3E]#S-=GR4&amp;T;G(,3O5T;_$FZU\^K6@ N&gt;2S8\/]4E_]VB/,;&gt;7LU=5XJ=1C8YAW7U (N&gt;6[?@D:@@O&lt;B T@@E_??B8@@A???&amp;8@@?0@: @C??;/@@O&lt;@Y,@@?0A"P@C?@DZ@@L_?@FR@@O&lt;@V8@@??&gt;=P@C?@C?@@O??)T@@G/??8H@@"???8T@@???70@C??&gt;Q@@O??&lt;D@@BO&lt;@^$@@A?&lt;@K\@@&amp;/&lt;@FL@@.1;?@B1@@H/?@BG@@GO?@C''@@H/?@@?@@H/?@@?@@O&lt;@AH@@?0@NP@BQBO&lt;@T(@@A7O???+@@GO???1@@O??94@@"0#??8W@@O&lt;@B(@@A_??.X@@???B @C??&gt;N@@O??#,@@G?&lt;@=8@@&gt;9$U???OP@C??&gt;E@@F_??&lt;7@@O??3\@@???^P@C?@BJ@@O&lt;@L$@@?0@00@C?@A&amp;@@O&lt;@K4@@0_&lt;@M,@@?0@^0@A^VA8N0,\VL@+7J/30ESDJC-O7Y/ UES&lt;J&gt;2C;DQW7DP[ILU#;RO^]"0"3)*RKG7/7@0VK_75=G/,N"83 \-3[+[+\"?\BBO\&amp;NM/;KA;;5/5-=2(FC&amp;#8BO#0ETTJC/^M=3W7SQW@(:*''):M,U%Y3Z6=/\:/@G/^QE(/\Z[5"**7I0J^="0#7J]'';AO,FM''%1Y6%9,&gt;$_&gt;2(F&gt;3;EL/\&amp;=2:;=0W7DQ:K=4/;FO\T&gt;32*BN*;6/.NOK&lt;(A4M4Q5E''O(VL!(.H"0#;@B8&lt;&gt;1[;E. ;=0C7@N#[=1X_C/ Q&gt;A+8&gt;QT=B//3&gt;9HU&gt;7K7G_,4=6(^=6JK=1W7JI+7T0#@A/\\6M_7F]-)=1C;TQ?;J _N)7-#Y&amp;57UA=KA&amp;W7O_,S=_-C"0#;ZO,^&gt;3S;\!&lt;N?A#7Y/"0E_,*?KC7J [9[PS;J/,Q=2(FC([7M?].E_,IR V;&gt;0[7CD/."?]8"&lt;S7CH/$"&lt;]..VJ1BMGZ&gt;48FJ,D),8/H":^])&gt;NK4(.,\:M[BO\P0PU%42KRHX/;MH,(UX/;FH-K+52=Y@ *OO]9A.A^6VFKRX-$W&amp;\7"3:KWKQ+6@ N=6C7"_](E_\M0/\G88/7OP#7F"+_J?, H/,N&gt;4K;&lt;/]R&gt;037W_]7=2;7OO^BG(/7Z/,2&lt;B&gt;6BD?;C@WZZM0&lt;"?,P"?-V&gt;1&lt;4K8-I"4B(V=4HXO\MEXV,"KFK-P#5)L3I*ZAXR1:KP%UTPFHHC%S7"O"TEX58$GNS\0!ZP8/7&gt;O,*"8/=[_\*"8/7_^+7F@V#\*5:.(/7DX.,&lt;IO#BO,B*PUI^6Q#X7.0318N=1#8Q^&lt;U==O9B_-B"?-@&gt;&gt;7;PO_-&gt;3^K=9G&lt;"69QAW%''^G]3"7:KYIVK,(.\$:FY)0#;F,&lt;E\5.AX(-("?,W:T''7E(/R"&lt;"8-M,HC,K8W?\''ER(J=737DQT+B ;;G_]8]AT7B :M=6[73!T2B ;7''?].&gt;GDU)I-1[V5;\GE3^*Z)*I2&amp;)A&gt;I&gt;8HU78/Q/:[OBK+;&gt;?\*A/_A=?.K=1G;0X.K=8'';J(.K&gt;8%\"0U13$"&gt;MX,H&gt;0T&lt;MR0,63S7@!?8C%4U=3+7H@\NW?^SE/]KA?]F%_\&amp;8(/7SP#7SRC&amp;&gt;3/;NBG;@?,FG/\6A,6;+\W]-54"G(,.LU\7 @#T&gt;2+&lt;D \N=238=O^:EXK;@649XH-/"8Z ":BK''YF\#IDH&gt;0DF F:F\(-4BDB?T=;7B?\W=_^6=8H$=2K;NA;;=8/7B?4^&gt;2RK^X.E&amp;8.%"96R''H2QBB\F F:F\(-4"5N9O&gt;RK=3BK._\2)?\4BO^]61W;$@Z =1. =0+X"0#7AJC;C/,WG0;;C_]&amp;&gt;V4U&gt;2+=[_\*=&lt;37-?\Q&gt;;\FC''G89/#''E]XJC/_T&gt;SW7X1WAA(I@YFIJ"7ZK[8=,%,;T-/FK=0,H=8K;@/O;@O,@&gt;0H#&gt;8H^"?,I.R_PPV)&gt;[XY4"4:K\KBK-H."%:Z_&amp;  &gt;9PU0]$IK"3BK&gt;0W$TO\$"=BK3Y3E*&lt;U+2''+J"?]Y"&lt;_7LIGVBK+Z&gt;8&lt;F&gt;8,#EVR:[-FK&lt;@#7T;V*)ZV5[O-SG(,&amp;[$U$W@ N=&lt;W9Y1YHB 93=5/85AVKZ)M/%7G;D6YIJX/;D0#;Y?]BX.''7M-;7B?\FG(/7Q?-R78/ BK"[''KB&amp;(GEWG/\*A/\QL]$!&gt;1Y@L#4^;/-WE[%W.E&amp;KQP 9UGAZV$&gt;&gt;5!:K8Z&gt;&gt;8Y4HC%_7X1[8%P^&lt;-L;P4[INWU5?V/,DG/,QA?]X6_\J;_\;&gt;3GPI/,S&gt;1(:&gt;1H_?K\GC.''8AO!"E_.N6, G:HZ][H-+BEA&amp;XO,\&gt;3Y*=0+7C?\X6/\]=04^=1FK("6SY #7H0Y&gt;=3#;C^+;O(,H&gt;6;;D?-]&gt;5_;S-+;R/^Z=8+R=0/7@1&gt;K:DC"&gt;4RSBL8GC/]@=6[83AT:B 8.=:W9!AT''&gt;1Q_&gt;4T_P?\*4P_N(:_D/:!-UA;;*GHGUH-07ERKBO, &gt;0WQA,FK*C+A"0#*&gt;2+7J/"/A/\\M-#;JQ8N==K7=O$,E[8F SY*UVQ_!H2D"8RKHX/;BV=HJ0#SOPV,/[Z%-)U$XF9X"3$H&gt;2''.R_O7AO\H6O\(G(/,U.AE/)^Z%)*V''J1#,(J2"&gt;:K..Z?"0"1%7E''G?\KA-=(=0/;GA9E"4&lt;%UX-0"7R% M H0\3; 0ZI?BDU,&amp;2$WX-ZBDA-[F-)ZJ?GG(.&gt;*KV1-  N=;?8D_&amp;DE_-"&gt;1/;O/-#&gt;6;7E/,==6 _=9^K2/]?%=DH*/.9=2+9[_,*&gt;&lt;-/A(O S?^M&gt;:JKBO4PAO,OQ&gt;?7L/\)4/C7CO\M4R[;K_,-QR[;CQ&lt;N//"G==&lt;UMP(NXO#F=9DU"?\8H^@'') #7C[/Z&gt;88&lt;/?,NA5U&lt;VV=5Y@#,K0V_,+F /X,H9*&lt;?M/??*/''[Y/??/@X%K1=D"6&amp;7 :&lt;H&gt;2PF%_,T=1@&gt;=1FK=2JK=1/7@X/7OP N=4N&amp;=7XU/5TF&gt;1_)R_\VG-JK2K"460#74?$I&gt;4JK&gt;4C;;_-@=&gt;7;M8/7$_2K[%DE^V]8]7NKBG9$%[H_3K?Z&gt;88GC/\W,/_;ES0J&gt;K*4E_DJ#C0U&lt; (NWO *=7&lt;U&gt;1HGHE.)=1P_=3[7E?\G&gt;1_7S_,*&gt;45K&gt;0_K&gt;7DG"?,2;$37X( HZ_-VN?_,&gt;@DGC/[82?"FESPJC/]Z&gt;@38G!V)=3&gt;O/;FK2X.NY+#;S #+?A;7J(/;A?!(AVG7O%;3&gt;2*K&gt;0RKS4I/&gt;3THS_/;AXY,_''-6"6^K\Y.K-H.Z#(2P)P *&amp;PVD^(I1"7BKVYW;B/\,"?\B"&lt;F2%=HHC&amp;/7Y/%-E_,*?V77J/_/6P[&amp;-V@-G?-&amp;=2+7&amp;@_7@#C3&gt;2D^&gt;1TFC(G89_%-ET,JC%^5=&gt;\U.@ZR&gt;0/ZQNJKBO\^&gt;2''7J/"/A/\\M-#;JQ8,"?,LXW?;L@!^OO^D6%8F$[2$(K2KBK&gt;([UP_&gt;948A46K_ZJH-P"96/.DA ;8ZO Z&gt;O$UOP+;&lt;?.RE_-2=17;MO]*G/]&amp;"?\U=2:V=5 H6?\CAZM2+W*:"?\Q":30$&gt;LH&gt;0J)AT%;YFM#^;COG/,B[PVM^IA3$7LHXD0EZO]C&gt;1S7@?-G"0#;ZO,^&gt;3S;\!&lt;N(O +=1DU&gt;GO7[_\Q?M3;D_]-?GO;[_,Q&gt;M37DP\N=9''76/]2EX-"%V^\[G&amp;B^HY6"4VKU[.K38/Y''J*''(  .5@U [EAS"?,D"?,;=1D;=2"K.(/H([N$/V7G^,VKBO]T3?]K=2+7VBG7#/-=I/,3W/,;G?\*A*^''1-;T=0\,&gt;5S;I''@+NS-T*.@^";B!0JN&amp;BO,@2@U&amp;YU :"5XHC/^!=8?8?!V!":VF(70?P%H""?,&amp;BO-T8"C7@O\@8/S7 !:K=GG$X\&gt;2(;VY-X,H8Z])S6VB^VD__8.A$G*(BCMSA[AK36&gt;9"0#]9K?7G/\N&gt;0CX&gt;08_U8,/^CIZU[]L(46KBCO;HC+;U!?7J [7HK&amp;U*1;7L_,^EY%!$5ZKR@#;Y7"D\WE8,_\\G(/V)-N41  N&gt;S[9FQ[7VO#NAZM2+GJ5"=&gt;K2_V)"::K(HBK^H-]WG%8!@"9I W[*&lt;2+"?\F"&gt;$8.O,L"4:KS"Y."0! !,N,G?,+"?,3?K'';M/"9&gt;2.KARY0R50^UX-.((SLBBM''AYL1;#O"";6K1K*+/0#7R_2-AP;7&amp;__Z=7HU"6JUY91,^XI8!''ZKQX-U.8/O"=&amp;\**^"BB;TAVA,TENK&gt;0RK&gt;3/7DS/7JH.:"&lt;"!,:R=[\]:1X,H=5SO=4/7J/]XH_^N&gt;74&amp;&gt;3M^&gt;3,_=2(F):_F7-S7A23;UO,&amp;\B,9N5R*8K*W&amp;),^)H.-Y9-=BL#7@@U_+S&gt;6RH-F"5E]"?,%B@:9&gt;E''73AUKT&amp;.KG;;;@@VK(Y&gt;;0H9;^WA+Y?,F&gt;1I[2&lt;#F+-+1G+37CGPF&gt;0E.,;F+/J;X:,U,SQ?7H@[7F/-@6/,F&gt;4L&amp;TO,"G(-K)&amp;&gt;6Z45)ZT&amp;KN0#;JNO;A?^B=4++7=; T.C;G18N+?_.]AW7C?\:/?]"G?"B&gt;2+;T/.*=5K;J/2BA?-"=3)W=0&lt;^=1?8RQW;Q0\3W&amp;D-KU:581;7Q0\N&gt;CO7O/]HE[6W*ZF!%65YVW=-]WU?*[4^=:ZBEY$4/O,A=3&amp;KBO]4=1O6=7[7.O,[=2;;*Q&lt;1"?,TXTP/BN,,A[;[6ZOL"0#7O.X$&gt;43;WC9!J2-&lt;0.@_=3#;J/,IA5U1AWGWSK(/"0#;C$L;&gt;1C;DML:=08_=0NK4&lt;&gt;U=  N&amp;O_W&gt;J0U&gt;3+;H@_7HO_;E_/A&gt;?.K&gt;1G70X.K&gt;8''7J(.K=8''7J(.K=1G;J(.K=?,EC)#7Y/!)E^ J&gt;4?;DQV^B :S=8+7&amp;AW;&amp;O\*=&gt;HG))"$%I6KBJ6R[UL_=0LF=1Y#2O,CG''ZK\(U2 P#7,O,*&gt;?$G[W51 G"KBF&amp;D*,L_&gt;0NJA_,V,4;7@1:"":VR))XHC/\4=5[7P!VK(H&gt;^$Y3&amp;"ZQ)"58H\751Y%I9+;D^=4W7!QW7II&gt;"8&lt;"KBJF! &amp;]''_HA!G?,CA?\W5;77C/\L&gt;0V/HQ=M"7Q&amp;XF,H% _ULMT-O_,BQ3&lt;^"2*?V&lt;=5QUT&lt;S8/;G0#;@],1=2_7OZ''$8Q:K7%7#&gt;06+()&gt;#'':B!BC+7CQU-Y(64(Y&amp;W)ZFV_WL_"76I_(]?B@:_&gt;HW7+QWV+;#Z"?XH=2X86?,,G//V?V77J/#0=2@F6;A(PDE&amp;ZC0_JLVK&gt;2PE=09C;4JKK0!M=2+CA8/"U-QA3@ NM?^8]AW/=1R7=4T_4?,*QP]H\6=RU6:)0!;8+?,*?J&lt;G&gt;13 O/\)G ;7"O GE,W7O,W;O/\S"?^N&gt;V7;J8/;L?29T?]R=0?7&gt;?,+"6S;FVS7F_,+"?\O?@EV&gt;43;M/"9A_,+"?^J?V4EC(S7L/].E_,IR V;&gt;0[7CD/."?]8"&lt;S7CH/$"&lt;]..VJ1BMGZ&gt;48FJ,D),8/H":^])&gt;NK,H.&amp; IY)BC(&lt;=:7ZS@Y96TC''&gt;0"K&gt;3RKJEVK&gt;1"K&gt;6W8DWFK&gt;2^KYE9''M8,&gt;"524Z= HC/\I&gt;G/7,1V;+7ABT''U-ST%63^\_&gt;F/&lt;F?-O6&lt;''7M_0*A?,R52+7M/\"9-#7G?\M&gt;0[/&gt;00^C''/8QO%-EX/;\_.:&gt;=:K2O,*"8/; ?\*"?^:==6K&gt;=77J(.K&gt;V4EC)[7NO#0E_^;J0[;.//^"&lt;#;J(.K&gt;8O7J(/7./_]"?/]=2*K"?%-?EFKAP:L&gt;@\VQ0(N O\2=68U&gt;0%JA[/;A/\LR&gt;:K=7"K1O\L"&gt;RK=6;&lt;D[NK=02K)96''88/R":13(5,H=1CAAVWSH-H!"?,4"2!U"?,X"?-%&gt;AE1"?,''"6Q^Y3^KO(-\-F/XB@;7)?%X&gt;W(UP(-[Y&amp;YVY\]I*SNKBO- &gt;0S;RO.G&gt;7O7@/,M=0;7DN3&amp;=5,_"?\]M/\_&gt;3V))JV.&amp;+2K78..X8-/"7^G]XQ0BO\L\PVU7;_\-H.,":5;"5"KVVX1R''8H*2TE=0B_=0S/"?\$"?\LUL7;F8,H?H;;*1W7D''"\LH,9BO,C T=RR7WY=1&lt;^"&lt;BM/IN7B@;7#/\$=3HU";Z2+LR+&amp;6&gt;UX8-1BFM0Z6!#]963G/^1=5(U4V(E\&amp;Y4WH-NBO,W;$O,=1+S7OL^"?\]&gt;37P&gt;17H/+N-.8/HBO\J&gt;0&gt;;N#/;C5/;B!:KS*5\/&amp;O;GT;;OTVK&gt;14HH=L:=1+,;-O7E1:K2GR:\+@H=9YSE\Q+,6&amp;KX@!#]7%#ZGB+,1:K))R2&amp;: H&gt;5C7\QU*(W^"":XH'')21+:&gt;]YW ^"7A6]F)5B@9]=6S8+1WB*J&amp;?1JM/RA9E=2+SA?]E&gt;1R7I?,)M#;;GA;&lt;+?"G=1G;&lt;P\NW?]&amp;&gt;V4UNP(N5?",&gt;GXUK0(N=8W9 O]6E\S2=1D$==W;J//U&gt;3SAA?\NP-K;FRP&amp;U/,$&gt;2K7J6+7@A:LQP[;L=(&lt;=2W7I^[\=38^&gt;2+DEWPGIW1QQT9=0]\^0@_;J/\RER2Q_JFK+ "1''Y&gt;3**A5Q18N&gt;@G7(/"SEUTF%MZ2-L2K(H.''!:*@RDI IX/;B0#; /\BH?\@=0C7@/O7 !:K=0%];4[U+I")$JJK&lt;X.8T8-W"6A-X%VEBJC;B@W7C9/X&lt;8/0"?P8&lt;/-]"4ZKRW)QZ5F+SI1L"?-Y"4?;LHU@BE0&lt;=8&lt;F=8/3E[I\*DVKI #;T6E,\WE!*/]SG(/0*MF2.  N_?]&amp;=9 UO +8EPP?B ;0,/_8E_-J=0C;V?^@=4S7BNC/G(/WY]0%/@!U&gt;08E+W.X^8-+BF5&amp;VSO;DCGO=5G7W_WG31;7@X.2XY-XBCT&lt;=:#ZW0Y+=2W;A=S;KH,H&gt;7W;@/-1&gt;3(_C/\&gt;8_$ZE_[=F/]DA/ 9&gt;V7;KX/;./2R"? ?98.K7/0="8/;IM^KAP;7N_]&amp;E(/7(?]N=(/&lt;C/\*"8/8YJ2^AYZQ&amp;8:W":*K$''NK_H-;????P@C???M@@O??1&lt;@@???^0@@H2O,DA[FX8L&gt;U08:[#I*K&amp;X/7DO,@*T&amp;K[8-.!WI=BO/_&gt;5NK=='';J(.K?V4EC.37Y/^HES JC&amp;''8L?%-E_.VO@_;V/,JO?-H&gt;1GS&gt;0_7W/]J9N#7QA?8^P_;J/0SES GOH\7&gt;09LT;WS8K^:;18N==[:L_$KETOLO3@*=0!AL UK5DR0J8,H&gt;6K;EO,&amp;&gt;8G; O\T&gt;2_7X!?+"=J02=PH5SK,=0#WLMOL&gt;2_7P2'';BB_7B U3UC&lt;"I8,H&gt;0)D:_\5=3[R:O\JG&gt;&gt;K52J#U@#/=0+-&gt;0 EC/_7&gt;BG6E_,MMOW7J/\16N+7D1?3";1T(D4H=2DF^_\*&gt;0;*&gt;4RKBO-&amp;&gt;2O;K?-7&gt;7G7IO,5=50_6X/#)LN7&amp;SO-T_\H";.K0:B*''0!S=0@E^W-3 6:KBCA74N\_=2[;J%(G&gt;1X&gt;V2D^C/ Q=9A2E[:K/969*&lt;%*37''M"0#7RO]*=0;7&lt;/]VR?O;HB,9RR,_"?,/8TK7E5=0&gt;0)GJ_,Z"66KY9M&amp;&amp;&lt;KV+.:K=0@H=8K;A?W;@O,@M"G; !:K&gt;0";I=MA_XQ&gt;"G:KBEA"(O\BG?,%_ W;G?\MH?\TG/#!&gt;E URZ!6-(/HBKF (I&gt; )FS;F!;&lt;XO.EEVZ:\\2K7 #7Q)24)ZV:U_,9G(-B]TY,U  N=1^2=?,UO@+8-$XUP0Y3"7V!_+@HZOHE^;%%(6ZKBB F+,WC+MFK=0&gt;K6R^K&gt;3JK]H%5!7\H?A''7IAWQA**K&amp;6^O_ "$MPV^RK%--(,H&lt;0Y(S%I''P8/;CX,;&lt;H/7KX.&amp;#ZRP(  N=9?7"?])E_\L0?\E88/7N0#7F"+_J?, H/,N&gt;4K;&lt;/]\&gt;077W__E=1_7%?],=3EK=1,%&gt;3E''&gt;0;;KA;7C''4E:9&amp;7**J^T4C;I#;;[_-%G$&amp;KOJ%X7 !^=00U!Z2G,X.5BOV$3L&amp;)(E!KG(-BU%Q@X  N)/!2=&gt;TU&gt;0R/]\6K30#K);"8-J%VHA:KXX!#!FXHZ2@UY#1NVCRKQH-Z)U7+BBMRA\_;C-5G=1&gt;KBO^K=0/7$?],=6(.7O,L&gt;2,;K/,]G8,#:O,S=3MYB@:H=5K7%1V-+;: 0X,H8K5[WT51S?,DG5JKR*]==1\H#_\-EY/7F,GS5H,H6KA1RA?7GP[7B#''/&gt;3_;P?,O&gt;1+;4?-Z=1G;B_\1=4O09_\8=1#;B=/;H!9N"5&amp;CY''XHC/^Y=:[7-1WR7*]*AWI$]U6KZX-"%V^\[G&amp;B^HY6"4VKU[.K38/Y''J*''(  .5@U [EAS"?,D"?,;=1D;=2"K.(/H([N$/V7G^,VKBO]T3?]K=2+7VBG7#/-=I/,3W/,;G?\*A*^''1-;T=0\,&gt;5S;I''@+NS-T*.@^";B!0JN&amp;BJ9!&lt;?\MY=AENTW]QS%E7RK;C@TN7Z_7 AVT\:I''+FY=!W"H\8,H&gt;1XG/X/G''[6)2FGV[M.K=2NK=1#]"?]E"&lt;]@8TF_)9O%-(/,BO\AJ-?;JO,*&gt;0(-&gt;0\^&gt;:HGXK5/-(&amp;OBO]+&gt;6&lt;U$I"N&amp;H.YBO_^A&gt;B1(M+K*5=+X6U&amp;&gt;00^&gt;1GBA&gt;N9R4=K\%;;@Q=""6NYY*@HC/];&gt;]_7Z1VK=5P =07;KZ,H9[/Z&gt;88&lt;/2&lt;G&gt;0U%&gt;0K;G$+;  !Z&lt;2EP8?-Q=4BKAY_+8O_5=4&amp;KBOCK&gt;0;;A#%8[FY"_+''OG?,*A/-D:437@/W-5O\;G 9*1O"VE_2V=2+7;=$G9+U KQ?;Y/\*=9 G=0H0&lt;?,!G/,U,0[[0J&amp;?1K-)TA;7J [7Q_,,-2_;J_,AM_,,G ;73? \&gt;W,U&gt;6[;H?,/&gt;7_;\_\$&gt;3W7VQ?-"&lt;6.0=4H''R/%"8/8G/.8"8/;D_\:"0U&gt;&gt;1;;F7M&amp;"0#;CSS5=2+7L]#*=1L_;8/WH*MTBN?7B.7;BO\''=4MC3C&lt;0J/\HPSHER=QC,CBKB@:3&gt;Q#7Y!T,B/1F&gt;A8UKP+;DPP.B ;J=?I5EXPJV0REB/\+=64UJ +7_O\QER,JC"S73WTU!@)[AHTJ&gt;06:ET8J=3_7!AUOB ;J&gt;DG:K1U1B/^A?NLUK@+&lt;Q/ ^ER4J&gt;1DDK (NV? *&gt;XPU\P)QN!UPB&amp;3;BQUQB ;J&gt;@08EWDJ=;[8L1T,B/1F&gt;A8UKP+;DPP.B 9[&gt;B\8EWDJUO&amp;FEU@J[O,IEUDJC,+8$#LU]P+7LO MER0J?D[8G!T-B/,QAB8JC%/8$#@U]P+;M/%#EU@J[O,IEUDJC,+8+?)KEW(J=1K;41VHB 8$&gt;E[9"1U:B/,*&gt;?DU$P(N2/!F&gt;"&lt;U\P+;&gt;_65ES@J=2+&lt;&lt;AT1B 9[=&lt;[9[1U1B%''=CAUSB*+8V1UTB ;J&gt;A@8EWDJ&gt;&lt;O7XQT0B/\*?O@ULP(NV?_KNAU1B%S7R!USB*+8V1UTB ;J&gt;G,7EWTJ?B;7M1T0B/\*?O@ULP(NV? &gt;LAU5B/,&gt;=2\UT0**&gt;E,UU@(N2/]7=1DULP+;,_,QE_&lt;@84NV"???3[1*??&gt;]UT@E'')RU#)&gt;KBJ*__W[??&gt;#??7I9Z1=/"7NRU*HH^E\E3O??:_??*HV7"0#^.Z3?@C0@@[].)%0__H-?"W2FBO&lt;@FY&gt;&gt;?0@7*,C?@@9 P(,E=0NK4ZV&lt;1,WO*.:K=0VK=0S??&gt;CK!O&lt;@X-P8???FMG3?@DT+2O??3-M4?0@:6*C??;,,#O&lt;@FRU &gt;0RKBO.1A 9[=;O8QAUTB/??&lt;6;Z??89*78U?0@9T;[?@@QK-O&lt;@JX)&gt;?0@YBJ_?@A&gt;2&lt;/&lt;@L@@''BES7HO%-&gt;2C;%0](0U2$RH/;EX,)&gt;1BK&gt;3^K??=+,^3?@E@,3_??!0G^?0A:S1+???F50 #??&lt;4DF_??&amp;&gt;.3AY:T%X:_"0"*''77??&gt;+??7Q2^V,_[8-3$%Z"BG!WA\3??&gt;''??:"E-8,H7+&amp;,1?&lt;@K@@A[*Y\G72K_8%&lt;!  N2/^0U1VBB//N/1T0B/\*?O@ULP(NV?^TU1VBB"B(EULJ*/![EUPJC)O8 /''(EWTJ&gt;97&lt;W1T2B)S:FQUMB 8$=3?:F!UMB/\Y&gt;4,U]P+;L#@UUP+6&gt;7(UU (N$?"B&gt;^0U]P+;''_1#ESHJ=8[:F1U:B 8$&gt;B?:GQU:B/\%Y1U5B/,2LAUUB/[;^!UVB :S=;AWEXHJ&gt;3[8@!T2B 8$=6IWEXHJX/#-EUTJ=/-:EUXJC)O8XU4U 0+;.?_&lt;ESHJC"S8@%4U 0+;L_#''EUTJ=/-:EUXJC)O8Z_(1EYTJ&gt;8S&lt;;AW7&lt;_\Q&gt;?G7N_ M=1G&lt;(?5-?0C7[0@F???M$P@(AY:T%X:_"0"*''756]GI9Z1=/"7NRU*HH^E\E3GV(![^KBM:9+L^7[*Y\G72K_8%&lt;! #?@A''GPLO?@O880H.K=1G&lt;G8,EC"S8K/&amp;5EYTJ[O1+EUXJHO]:E_,/KO,D&gt;4$_"???WD]@?0ATK&lt;C??9!I@O&lt;@"+X@???5VH@H???MF$C??90WP@V^%IVN''8,H*)==]''Q2^V,_[8-3$%Z"BG!WA\15*HV7"0#^.Z3G-6:&amp;WA=&lt;"7&gt;I_HXH?0@ZB0C?@C"S0@W?@G@(0O&lt;@A-_@?0AY\LC?@DL3@O&lt;@GU.@?0A$XX@H&gt;18F^&amp;A$\%"KKX-&lt;4H#TBO_&gt;A(2W"9BK$ #7 ?,%1?,@G 9[&gt;AW:K1U1B/,5?G,UL0(N&gt;=+7+?(#EWDJ*_.XEU\JC/\K&gt;KC:AAU5B*'';01T4B 9[&gt;EO9OAU5B&amp;QNEU J&gt;9G;@AUYB ;J&gt;DG:K1U1B-''&lt;Z!T5B 9[&gt;DG9-QU1B&amp;?;&lt;QUZB ;J&gt;B 8EWDJ&lt;/",ESTJC%/7&lt;S U\P*?&gt;J,UV (N2/"V&gt;!$U\P+;VO\NEWDJ=5G&lt;UAT5B 9[&gt;F?:FQU1B/-X=08U\P+7C/1UEU(JC,+8#?__E_/_=2+9[_,+&gt;:W;-O^%&gt;2+=[P_?@E4$V(/??=Q[)/??*%U@AY:T%X:_"0"*''756???(??=2^V,_[8-3$%[?@A\@@P!8U0WL???)??&gt;(![^KBM:9+O&lt;@O@@A-6:&amp;WA=&lt;"7&gt;I_HXH?0@S(=_?@B**0O&lt;@CM0)"8/770TNV?^2''!U&lt;B-O721UZB ;J&gt;G%"EYTJ(_ SESTJC%/8QFHU%P),&gt;AHUV (N?AG7$U4U 0($&gt;Y,UM (N?AG7$U4U 0+;@_#^EU,J&gt;V4DW@(N?AG7.O(VEWDJ&gt;5#7C!U1B/\IWAT6B,7:1AU:B ;&lt;D_^2&gt;#DU^ +7FF,U\P+;VO\NEWDJ=0L:EU,JC,+8\?)KEW(J&gt;1W&lt;0QT8B 8$&gt;E;:D1U:B/,Y?CLUW (N2/ &amp;NAU1B/-F&gt;ETUN@(NIO_,NAU1B/,%&gt;J,UW (N2/" PAU5B//@&gt;BHUN@(NIO!VN!U5B/.O&gt;G8UW (NV? YNAU1B/,3&gt;#(UNP(N?AG7TC U\P*^&gt;#(UW0(NV?"0&gt; PU]P+;J?8HEWDJ&gt;3O:N!T9B ;&lt;D_^3&gt; PU]P((?  U\P*^&gt;#(UW0(NV?!3OQU5B/.M&gt; (UNP(N?AG7-T\U]P(9&gt; @UW0(NV?^0U1VBB/,5&gt;ZDUNP(N?AG^U1VBB)39(QU_B ;7P/#I&gt;$(U^ +;\?-&lt;ES(JC/]:&gt;M[9 AU:B/0\TQU B ;7P/!=&gt;"&lt;U\P+;)_-=ES(JC/]:&gt;IS9 !U1B/1XL1U B ;7P/!0NAU1B/.X&gt;Y$UN (N=7+8 # U\P+&lt;Q/%=EV@JC,+8P_(/EWDJ7_65ES,JC%/8C/&amp;CEWDJ&gt;&lt;&lt;2EVDJC,+8L# U\P+,=6DUN0(NV?_6NAU1B/.7&gt;W4UXP(N2/"TQ1U5B(+7I1T;B 9[&gt;EAGEWTJ?AG9P1U!B ;J=&lt;IYEXHJ&lt;[4UN0(NV?^NVQVBB/.:&gt;NHUXP(N=0/8%O(WEXLJ?J/&lt;,AT&lt;B/_3=9HUOP+7OO!REW(JC%/8Z?(,EW(J5WXU 0+;R_-\EVHJ#O,EEVLJC/\K&gt;IS:FAVCB/2+?KDUO@+7&lt;?^RES4J=2?8QAU1B/-X=08U\P(NV?!_&gt;!$U\P+;VO\NEWDJ=3A-EXLJ&gt;4'';WAU"B(3;AQU#B ;7B?"1&gt;^4U]P+&lt;"_07ES0J=?O7$!T=B/,L&gt;CXUSP(NV?]M&gt;"LUSP+7HO-TEWTJ&gt;2(0EVHJ#O,EEVLJC/\K&gt;KG9;AU5B/2I?CXUO@+7&lt;?^RES4J=1O8L1U:B 9[&gt;EK:G!U:B/\WY!U5B/,*LAU"B(3;AQU#B :S&gt;C+:R1U:B$W&lt;,QT&gt;B/ UAC&lt;JC%/8Z?&amp;5EW(J#"TUY@)+&gt;0$UYP(N$? %&gt;"&lt;U\P+;P?21ES8J&gt;ATDO0(NV? ^&gt;XHU\P)]OAU$B&amp;/;BQU%B ;J&gt;DG:K1U1B,/=NAUBB*O8E!UCB ;;(/^(&gt;XDU\P+;ZSPUZ@(N2/ 4NAU1B-#77!UBB*O8E!UCB ;;(/]PNAU1B/,Q&gt;W4UZ@(N2/"0&gt; PU]P+;DO8HEWDJ6O_^ETHJ(? VETLJC/."&gt;@C9T1U5B/-D?U\U\P+;D_%=EV JC,+8)T\U]P)''=:PUP *#&gt;AXUP0(N&gt;:K71$\U]P+;!?%CEV JC)O8F/(/EWDJ=67;.!UDB 8$=&gt;K9!AU1B/,&lt;?F4UZP(N$? JNAU1B/]=&gt;U0UQ@(NIO_YNAU1B/,3=?8UZP(N$?_%&gt;+,U\P+7EHXU^ +7(O.+ETPJC"S7.O(VEWDJ=1M8EW(J&gt;1O&lt;U!U)B :S&gt;AS:-AU1B([;JAVVB/_#&gt;:,UQ@(NIO_''&gt;!PU\P*D&gt;3,U% )P?EXUZP(N$?  &gt;"&lt;U\P)5?  U\P+7__%\ETPJC"S7&gt;O&amp;AEWDJ[O5ZEWDJ&gt;3O7?!U)B 9[&gt;AC:K1U1B)C;VQUEB ;;6/]+&gt;_,U\P+!&gt;7@UZ (NV?_?NAU1B*G9/QUEB ;;6/]&lt;NAU1B-C9\!U*B 9[&gt;EYGEWTJR/&amp;CETTJC//Z==UGEWTJ]?$8EV(JC%/7#%\U  *''&gt;RPUQP(N&gt;=+7A5\U  +Z&gt;M$UZ (N2/"ZNAU1B/-X=08U\P*6=4(UQ (NV?!\NAU1B/-X=08U\P+7+_]!EV,JC,+8XU4U 0+;L:HUQ (NV? /WQVCB,:9EV,JC,+70%$U  )_)!UFB 9[=79YEXHJ=52=EV,JC,+8@WPUQ +7O_+KEW(J6G4U 0(NV?"H&gt;!&lt;U^ *3%!VCB,/=%AU+B ;J&gt;I[:Z1U1B/-X=08U\P+7VWHU]P+;J/6 ETXJC%/8U?(YEWDJ&gt;5#7C!U1B/]VS1U5B._=EAU+B :S&gt;E/:E1VCB/,M?!\UQ0(NIO ^&gt;XTU 0( ?XTU[@(N$? YNAU1B)O7XQUGB 8$==$8EWDJ)O]!EV0JC/^1==W:R!UMB/^/?$(UR@(N=0/7$_&amp;AET4J=7;= QU-B ;7,_#8&gt;$(U^ +7"O64ET JC/\K&gt;J''9-QU:B/]"?Q&lt;U[P(N=;G9A/(YEWDJ&gt;5#7C!U1B/_@?Y&lt;UR@(N=0/8,O&amp;BEWDJ&gt;5#7C!U1B/^!?P U[P(N=;G8(?(/EWDJ=5?=-QUHB ;7B?!T&gt;XHU\P+7N_4HEV4JC/^1&gt;JX8EWDJ=537XQUHB ;7B?!LNAU1B/]A=6DU[P(N$? &amp;&gt;"&lt;U\P*\?DDURP(NIO_&amp;&gt;XDU\P*\&gt;?\U[ (N$?"K&gt;!$U\P+;VO\NEWDJ=0S&lt;J1UIB 8$&gt;DO9!AU1B/-X=08U\P+7CO/:EV8JC)O8MO(/EWDJ#/2''ET(JC"S79O%?EWDJ&gt;1K=G1U/B 9[=9G:R1VBB/].&gt;7HUR0(N&gt;3O7V/&amp;KEXHJ=2;;[1U0B 9[&gt;@$8EWDJ=6G:N!UKB ;;L?_HNAU1B/\+&gt;W4U\@(NV?!2Q1U5B.?:@AUKB ;;L? -Q1U5B+79P1U0B 9[&gt;EYGEWTJV/!1EU(JC//Z=&lt;[99!U1B/-X=08U\P+7T?-[EV(JC/\K&gt;BC9!AVDB%,D!P+7[_5TEV4JC"S7+?&amp;DEXPJV0REB$K=[!U/B 8#&gt;CG9,!WCB/.J?\$US +7M?^DET&lt;JC//Z=:?:H1U1B%[=*QV[B ;J&gt;B,8EWDJ:__4ER(J=737DQT+B 8$==@8EWDJ&gt;1C7R!UNB/\7=8PUS0(N2/"I=2\UJ +7_O\QER,J$_^AE\(JC"S7UGPUS +7M?^DET&lt;JO__8E\(JC,+9Y/(0EW(J&gt;:/7FQVBB-#=#AT*B/]&lt;=1DUJ0(NIO#4&gt;[PU^ +;&amp;_XU  +;GO6 ET8J=3_7!AUOB ;J#_(_ET4J=5DV  +X?X0UJ +7_O\QER,JC"QG&gt;[PUSP+7M6@U  +;GO6 ET8J=3_7!AUOB :S&gt;L[9$1WJB$;&lt;;!T*B/]&lt;=1DUJ0(:=?$U  (NIO]1&gt;X$U  +;GO6 ET8J=3_7!AUOB/\+=?4U2 (N2/"I=2\UJ +7_O\QER,J=0+8 AVCB/-9&gt;2HU  (NIO ]&gt;"HU 0+;_?,-EXHJ&gt;13=(AUNB/\7=8PUS0(N2/_Q&gt;"DU  ):?''PU\P+)=?PUJ +7_O\QER,JC"S7\O&amp;KEXHJ O7^EWDJ&gt;1C7R!UNB/\7=8PUS0(N2/"I=2\UJ +7_O\QER,J=1/7:QVUB)77LAU:B 8$&gt;DW:GAU:B.&gt;EEYTJ&gt;6/=#AUNB/\7=8PUS0(N2/"I=2\UJ +7_O\QER,J=1/7:QVUB/.8=2PUSP(NIO\O&gt;!0USP+7L/,0EYTJ&gt;6/=#AUNB/\7=8PUS0(N2/ \&gt; &lt;U2 +7@_5*ER(J=737DQT+B/\0=&gt;XU%P(NIO +&gt;X@U%P+;Z?6LET8J=3_7!AUOB$G8^!WJB ;J&gt;H''7I1T*B/]&lt;=1DUJ0+7F?_)EYTJ\/]@EXLJC"S8F_(&lt;EXLJW/-PEYTJ&gt;6/=#AUNB/\7=8PUS0(N2/"G&gt;!(U%P(/?&amp;HU\P+)=?PUJ +7_O\QER,JC"S8I?&amp;DEYTJMO7LEWDJ&gt;1C7R!UNB/\7=8PUS0(N$? ]NAU1B/,8&gt;I,UL (NIO_XNAU1B%_9!!UUB/[;^!UVB :S=7''73!T2B/\N&gt;S U2 (NIO^$&gt;K$UUP+6&gt;7(UU (#=; U2 (N$?![&gt;!0U 0+;-_3"ESHJC"S8E/%5EXLJ&gt;4W;TAUUB/[;^!UVB :S&gt;U'':OQU:B/.5=2$U  +;PO4BESHJC"S8?_&amp;4EW(J&gt;9+6EXHJR?-$EUTJ=/-:EUXJC)M8&gt;#,USP+7S80U  +;PO4BESHJC"QS&gt;[PUSP+7L6@U  )K&gt;6PUUP+6&gt;7(UU (N$?"9&gt;YTU2 +;5O1IESHJ0/&amp;)EXHJC"S7^_&amp;IEXHJR?-$EUTJ=/-:EUXJ=0/7(!WJB :S=;+:JQVBB/-@?N&lt;UL +7$/(5EXLJC"S8L_(YEXLJ&gt;8/;IAVBB$/;YAUUB/[;^!UVB :S==G:G1VBB&amp;3&gt;\!U1B/,8&gt;I,UL (NIO]1&gt;X,U  *G?]8U\P)W&gt;XXUUP+6&gt;7(UU (N?AG7Z_%-ESXJR/&amp;5E\(JC/0Q=6O8,AU[B$/8:AWJB ;&lt;D_]UNAU1B)?:N!T6B ;&lt;D_]TNAU1B)+9_QU[B/%-AE0JC/\K&gt;EH8EWDJ?B+82AT&lt;B/_3=9HUOP(NV?_9NAU1B%O9!!U"B(3;AQU#B ;7B;O7&gt;1T&lt;B/_3=9HUOP*L=5DU2 (NV?_A&gt;K$UX *L&gt;0TUX0*G=3$U2 (N=0/9%O(;EW(J&gt;&lt;K7J1VBB/0+?MTUO@+7&lt;?^RES4JC%/9E_&amp;5EW(J&gt;977@AVBB%O;Y!U"B(3;AQU#B ;7B9_:N1UMB/]^#AVBB/0+?MTUO@+7&lt;?^RES4JC%-+&gt;[PUSP+7LFHU  )S&gt;6XUX *L&gt;0TUX0(N=0/9@_&amp;UE\(J?M''&lt;GAT&lt;B/_3=9HUOP)X=&lt;DU  (NV?^N&gt;X,U  )S&gt;6XUX *L&gt;0TUX0+7[?\7E\(JC/\K=&gt;#:J1VBB/0+?LPUO@+7&lt;?^RES4J=0#8TAVCB 9[&gt;DS:FQVCB/.I&gt;2HU  )S&gt;6XUX *L&gt;0TUX0(N=0/78?(_EXHJ#?92EWDJ?B+82AT&lt;B/_3=9HUOP(NV?^N&gt;X,U  +=7 Q1B%O9!!U"B(3;AQU#B ;7KO":&gt;$&lt;U^ )*&gt;5PUOP+;&lt;?.RE_]WB :Y&gt;C?9-QU:B(3;Z1U#B/&lt;@:]%@^QW7V@(N=237+/)LET4J^//''ES4J&gt;?O;$!W7U0(N&amp;_]K&gt;XHUSP*D&gt;&lt;8UX0+?@N''YPG$U=5 JC/\,&gt;A/8&gt;QT=B//3&gt;9HU=5\J=?#8S!WJB :Y=&lt;K8RAU#B/&lt;@:]%@^QW7V@+??2L&amp;0O]GE\(JC/\,&gt;H+:M!VCB/-B&gt;=DUOP+;&lt;?.RE_]WB :Y&gt;C79''1VCB/-N&gt;&gt;,UX0+?@N''YPG$U=5 JC/\,&gt;EH8EWDJUO''FES4J&gt;?O;$!W7U0(N&amp;__9NAU1B%S9EQU#B/&lt;@:]%@^QW7V@(N2/ 8NAU1B%S7R!UFB 9[=&gt;08EWDJ=5''7XQU+B ;J&gt;@E4ETXJ#_&amp;?E\(JC%/8,QY+B"S85AWJB ;7E/!1&gt;$(U^ *Y?\,U(0(N''O /&gt;X$U^ +7%O33EZPJC/\V=7S:HQUMB)+&gt;NAV#B :\=4C9"QUMB/^G?X$U)@(N=1[8@WPU(0*E&gt;Z$U2 (N''O"1E*PJI?##E\(JC/\V&gt;FO:MAVCB/,5?$,U(0(N''O *&gt;W8U 0+S?W8U)@(N=1[8NC U\P)T=4(U(0(N''O_^NAU1B/]''=6DU)@(N$?]$&gt;!,USP+ ?P4UR (NIO\$&gt;[TUSP)O?\&lt;U[0(N$? #NAU1B)?8[1UJB 8$&gt;I48EWDJ&gt;&lt;/7Q1U/B :S&gt;C_7(!UJB#?9&amp;!WJB 8$=6Y1EV&lt;J4O#(E\(JC)O8UO(YEXLJK?4KET(JC"S8G?&amp;DEXLJ&gt;83=''!U/B 90=6#9,1WKB*[&lt;*AWYB/0EE-(JC''C7:O&amp;3E\0J*O1,E]$J?@TV6 (N\O^V&gt;[PU=5$J&gt;::JE\,J=17&lt;*AWYB/0EE-(JC''C7!O&amp;3E_]YB/,$E,0J=2_&lt;[AWYB/0EE-(JC''C8Q/&amp;4E_]ZB/-''=3$U20+7I/2(E]$J?@TV6 (N\O 7&gt;[HU=5(JL_\;E\0J=3;&lt;[AWYB/0EE-(JC''C8I?(WEXLJ&gt;83;I1WKB*C&lt;^QWYB/0EE-(JC''C8F/(WEXLJ&gt;0O;IAWLB*[&lt;PAWYB/0EE-(JC+B#&gt;W$U20+75_3&amp;ER(J=737DQT+B :0=2G9_1WLB/_"?K@UJ +7_O\QER,JC/]"=2S9_QW7VP+;+((U20+8)/3)ER(J=737DQT+B ;7T/\Y&gt;WXU=5$J&gt;2PV3@+8&amp;_2''ER(J=737DQT+B ;7G__[&gt;WXU=5(J&gt;6_7NQWKB/!#?NHUJ +7_O\QER,JC/\(=&gt;O9Y!W7V (1=3,U3@+8[?2XER(J=737DQT+B ;R=9[:@!VCB/.L&gt;2\U20+72/3\ER(J=737DQT+B ;&amp;=9'':AQVCB/,C&gt;2PU3@+75O2&amp;ER(J=737DQT+B ;;B/]V&gt;[LU20+7N?4EEZ0JC/,J==W9,1WLB/\&gt;?L$U+@(N&gt;0+7 ?&amp;4E_]YB/.."!WKB/^*?PTU+@(N&gt;0+7\_&amp;3E_]YB/,$E,0J=;S&lt;2QV,B ;;B/ 3&gt;[PU=5(J&gt;6_7NQWKB/^3?PTU+@(N&gt;0+8I_&amp;2E_]ZB#G7N1WLB/_J?L$U+@(N;''39^QWKB/]!?C&lt;UL (N&lt;O\B&gt;W$U3@+7ZO0CESHJC/^&gt;=139^!W7VP+;+((U20+8K_0?ESHJC/^0=1S9^QW7VP+;IA[LB/ _?@LUL (N=:375_%6E_]ZB/-''=3$U20+8F?0;ESHJC/^2==?9^AW7V (1=3,U3@+8HO0CESHJC%#7XO&amp;6E\,J&gt;&lt;/&lt;FAW[B 9X=&gt;[9-!WLB//O&gt;=0U60(NVO^8&gt;[PU=5$J&gt;::JE\,J&gt;8_&lt;EQW[B 9X=9_9,1W7VP+;IA[LB/-.&gt;=$U60(NVO!4&gt;[DU=5(J&gt;6_7NQWKB/.J?AHU60(NVO!T&gt;Z$U=5(JL_\;E\0J&gt;6G;4AW[B 9X&gt;BG:FAVCB/.L&gt;2\U20+;4?/''E],JC%#8L_(XEXLJ&gt;0O;IAWLB//*&gt;:8U60(N=3!&lt;&gt;W$U20+8 _0.ESTJC/]@=0_9^QWLB/"I&gt;?HUMP(N&gt;@O7H_%:E_]YB/.."!WKB/%L?B8UMP(N=?+7F/%9E_]YB/,$E,0J&gt;TK;&lt;!T5B ;7:?_S&gt;WXU=5(J&gt;6_7NQWKB/$;?B(UMP(N&gt;@G79?%8E_]ZB#G7N1WLB/%F&gt;?HUMP(N=877!O(EEXLJ&gt;83;I1WKB/"P?B\UMP(N=8;7"O(BEXLJ&gt;0O;IAWLB/"F&gt;&gt;,UMP(N&gt;&gt;2L&gt;[LU20*S??6@ @@U5P(N&gt;&gt;37E?&amp;3E\0J$??=/H@@E]TJC/.2=2C9-AW7VP+;+((U20+^??6@ @@U5P(N&gt;;C7DO&amp;3E_]YB/,$E,0J:O?=/H@@E]TJC/.-==W9-AW7V +;Y?\9E\,J9??= H@@E]TJC/.1==79,!W7V (1=3,U3@+$??6&lt; @@U5P(N&gt;;W7&amp;O(YEXLJ&gt;83;I1WKB(C??Z6@@AWUB ;;)?^T&gt;!\U 0+;@?,$E\0J??7( @@D5P(N&gt;:50&gt;W$U20+7Y''&lt;UM (N&gt;:#5&gt;W$U3@+7ZK,UM (NSO\S&gt;W(U=5$J&gt;::JE\,J&gt;DI?ESXJC#/7EO%9E_]YB/,$E,0J&gt;B";ESXJC#S75_%6E_]ZB/-''=3$U20+8HXLUM (NNO_!&gt;W U=5(JL_\;E\0J&gt;BJ;ESXJC/-M=8+:@QVCB/.L&gt;2\U20+7[((UM (N&gt;537 O(@EXLJ&gt;0O;IAWLB/]"1AT6B 9Z=6#9,1WKB#?;#!U"B(3;AQU#B 9Z=&gt;#9,1WLB$G;T!U"B(3;AQU#B 9Z=9[9-AW7VP+;+((U20*-&gt;88UX *L&gt;0TUX0(NV/^D&gt;[LU=5$J&gt;2PV3@*7&gt;5HUX *L&gt;0TUX0(NV/!F&gt;[PU=5(J&gt;6_7NQWKB+[;#!U"B(3;AQU#B 9Z&gt;C_9,!W7V (1=3,U3@+N&gt;5HUX *L&gt;0TUX0(N=2E8&gt;W$U20(2?AHUO@+7&lt;?^RES4JC/](=O%6E\0J_?/SES0J=?O7$!T=B ;8O_\W&gt;WDU=5$J&gt;::JE\,J=57&lt;BQT&lt;B/_3=9HUOP(N&gt;C#7D?%0E_]YB/,$E,0J=5S;3QT&lt;B/_3=9HUOP(N==C74?%^E_]ZB/-''=3$U20+$&gt;?XUO@+7&lt;?^RES4JC/_N=&gt;K9WQW7V (1=3,U3@+\&gt;;,UO@+7&lt;?^RES4JC#C7U?&amp;3E\,J=3_&lt;71W\B 80==_9,1WLB/\9?JLU7@(NLO^E&gt;[PU=5$J&gt;::JE\,J=:W&lt;71W\B 80=7O9,1W7VP+;IA[LB/^/?JLU7@(NLO 5&gt;[PU=5(J&gt;6_7NQWKB/^.?M&lt;U7@(NLO &amp;&gt;[HU=5(JL_\;E\0J=&lt;[&lt;(1W\B 80&gt;A[:FQVCB/.L&gt;2\U20+7L_22E]0JC#C8B_(WEXLJ&gt;0O;IAWLB/\7?G\U7@(N=8/7A/%9E\0J&gt;BG;"1WSB ;8N_\Z&gt;W$U=5$J&gt;2PV3@+83_.KE]LJC/!\==?9^AW7V (1=3,U3@+8=_.KE]LJC/_R=7'':AAVCB/,C&gt;2PU3@+8I_.FE]LJC/\K=;?9/1WKB-K=V!W B ;7B?!H&gt;[$U3@+K?Q U8@(N=0/78_&amp;+E_]YB/.."!WKB/]U?TTU8@(N=0/78_&amp;3E_]YB/,$E,0J=47=D!W B ;7B?#Y&gt;\@U=5(J&gt;6_7NQWKB/\V?U(U8@(N=0/80_&amp;5E_]ZB#G7N1WLB/\7?QTU8@(N=0/8 ?(XEXLJ&gt;83;I1WKB,_=HAW B ;7B?!+&gt;!XU 0+;@?,$E\0J6O3%E^@JC/]F\/%&lt;E\,J&gt;JS&lt;DAWTB ;7W_\F&gt;XHU3@+8,//ZE]PJC/ ''=139]1W7VP+;+((U20+9 O0JE]PJC/ 1=1W9]!W7VP+;IA[LB/&amp;I&gt;&lt;8U5@(N=&lt;O76_%6E_]ZB/-''=3$U20+9FO0IE]PJC/_Z==39X1W7V (1=3,U3@+9M_.&lt;E]PJC/^[=8#9?!VCB/.L&gt;2\U20+8)_/?E]PJC/_@=8O9?!VCB/,C&gt;2PU3@+82O/FE]PJC''C7QO&amp;[E_]YB,;&lt;$AWYB/0EE-(JC''C8CO&amp;[E_]ZB/\O&gt;&gt;(U6P+&lt;AQ[ZB ;;B/\2&gt;Y,U=5$J=6O&lt;;QV,B ;;B/_9&gt;Y,U=5(J=93&lt;Q1V,B 9X=3C9&amp;1W7VP+;%?/=E],JC%#8JO&amp;^E_]ZB/.O&gt;5(U60(N&gt;&gt;39&amp;0S7VP*X??6X @@U5P(N&gt;&gt;37WO&amp;[E_]ZB-C??#:@@AWUB 9Z=4S9&amp;1W7VP)''&gt;7XUX *L&gt;0TUX0(NV/ L&gt;Y,U=5(J''4&lt;UX *L&gt;0TUX0(NLO\3&gt;Y,U=5$J=5?&lt;11W\B 80=?/9&amp;1W7V +7%?0!E]0JC/\K=779)AW7VP+7H_4?E^@JC/\K&gt;H79)AW7V +7D_2YE^@JC''C7-_,BE]DJO/(!E\,J)/2(E]$J?@TV6 (N\O^5&gt;0HU4P*&gt;&gt;"DU3@*(?F0U6P+&lt;AQ[ZB 90=;W;@!WQB&amp;3:H!W7VP+;+((U20+7G_2(E]$J?@TV6 (N\O^5&gt;0HU4P)Z&gt;"DU=5$J&gt;2PV3@+7I?1,E]$J?@TV6 (N\O^5&gt;0HU4P+7I_("E_]ZB/-''=3$U20+7I/2(E]$J?@TV6 (N\O^5&gt;0HU4P+7E/( E_]ZB#G7N1WLB/\&gt;?F0U6P+&lt;AQ[ZB 90=;W;@!WQB/\F&gt;(TU 0+;#O,''E\,J(O19E]$J?@TV6 (N\O^5&gt;0HU4P+0&gt;(TU 0+;@?,$E\0J)/1@E]$J?@TV6 (N=8;9,?&lt;@^RV@E_][B/6[?0I+6(@U20+75_3&amp;ER(J=737DQT+B ;7"?&amp;0?0A9IX@U=5,J?RO?@''GZ AWLB/_"?K@UJ +7_O\QER,JC/ &amp;&gt;$/?@G$% AW7V0+=-?&lt;B[=*@E_]YB/.."!WKB/"&amp;?N$UJ +7_O\QER,JC/ L&gt;#G?@G$% AW7V0+=+O&lt;BZM*@E_]YB/,$E,0J&gt;I''&lt;)1T*B/]&lt;=1DUJ0(N==''9?/&lt;@^RV@E_][B/27?0I(6(@U=5(J&gt;6_7NQWKB/!#?NHUJ +7_O\QER,JC/_#&gt; #?@G$% AW7V0+&lt;._&lt;BVM*@E_]ZB#G7N1WLB/!/?I UJ +7_O\QER,JC/^O&gt;[S?@G$% AW7V0+&lt;.?&lt;B=M*@EXLJ&gt;83;I1WKB/_J?M0UJ +7_O\QER,JC/^U&gt;[+?@G$% AW7V0+&lt;2_&lt;B==*@EXLJ&gt;0O;IAWLB/_T?JXUJ +7_O\QER,JC%#7N/,BE]DJ,_($E\,J&gt;&lt;/&lt;FAW[B 9X=3'';@!WQB/]A&gt;"PU3@+;3?/\E],JC%#7N_,CE]DJ=1O:H1W7VP+;+((U20+;!?0UE],JC%#7O/,AE]DJ9O( E_]YB/,$E,0J&gt;6;;6QW[B 9X=3+;@!WQB/_N&gt;!&lt;U=5(J&gt;6_7NQWKB/.J?AHU60(NVO\;&gt;0HU4P+7+_(WE_]ZB#G7N1WLB/-!&gt;=@U60(NVO\=&gt;0HU4P+7^O*FEXLJ&gt;83;I1WKB//S&gt;&gt;\U60(NVO\:&gt;0LU4P+7"?*GEXLJ&gt;0O;IAWLB//*&gt;:8U60(N=&gt;?:EO&lt;@^RV@E_][B/8#?0I+6(@U20+8 _0.ESTJC/_8&gt;!7?@G$% AW7V0+=*/&lt;BZ=*@E\0J&gt;H'';&lt;!T5B ;8-_+Z?0A:IX@U=5,J?$7?@&amp;/Z AW7VP+;+((U20+9SO0.ESTJC/"8&gt;-7?@G$% AW7V0+&gt;U?&lt;BZ=*@E_]YB/,$E,0J&gt;TK;&lt;!T5B ;8)_+J?0A9IX@U=5,J?X/?@&amp;#Z AW7V +;Y?\9E\,J&gt;S/&lt;J!T5B ;8./+_?0A9IX@U=5,J?X3?@&amp;+Z AW7V (1=3,U3@+9Q//2ESTJC/!I&gt;&amp;;?@G$% AW7V0+=_/&lt;B==*@EXLJ&gt;83;I1WKB/"P?B\UMP(N&gt;EK:]?&lt;@^RV@E_][B/6C?0K46(@U 0+;@?,$E\0J&gt;H[;:1T5B ;7B?  &gt;0LU4P(*&gt;"8U20+R?U(U8@(N=0/8HO,CE]DJ,?((E\0J2?4XE^@JC/\K&gt;BC;@1WQB$3:F!W7VP+;+((U20+7U_5EE^@JC/\K&gt;BC;@1WQB$3:H!W7VP+;IA[LB/]M?QHU8@(N=0/8HO,CE]DJ=47:K1W7V +;Y?\9E\,J=1[=V!W B ;7B?  &gt;0LU4P+7M_($E_]ZB#G7N1WLB/\7?QTU8@(N=0/8HO,CE]DJ;/*GEXLJ&gt;83;I1WKB,_=HAW B ;7B?  &gt;0LU4P+V&gt;(TU 0+;@?,$E\0J6O3%E^@JC/ C&gt;"[?@F % AW7V0+&gt;O?&lt;B_=*@E\,J&gt;JS&lt;DAWTB ;8F_(&gt;?0A(IX@U=5,J?\3?@(WZ AWLB/"2&gt;=(U5@(N&gt;NP\AGW?@F % AW7V0+&gt; _&lt;B^-*@E_]YB/.."!WKB/&amp;@?@(U5@(N&gt;N4\AG;?@F % AW7V0+&gt;$_&lt;B^]*@E_]YB/,$E,0J&gt;X'';3!WTB ;8_?*$?0A(IX@U=5,J?U??@''''Z AW7V +;Y?\9E\,J&gt;Q#&lt;BQWTB ;8&amp;/*??0A(IX@U=5,J?W_?@&amp;[Z AW7V (1=3,U3@+9M_.&lt;E]PJC/!S&gt;''#?@F % AW7V0+=!O&lt;C@]*@EXLJ&gt;83;I1WKB/"%&gt;?&lt;U5@(N&gt;G_:''O&lt;@ZBV@E_][B/6-?0LA6(@U 0+;@?,$E\0J&gt;L#;1!WTB 90&gt;B39!AVUB&amp;S&lt;[!WYB/0EE-(JC''C8O/%DEWTJT//*E]$J?@TV6 (N\O^5&gt;0HU4P+;A_(IE_]YB,;&lt;$AWYB/0EE-(JC''C7-_,BE]DJ6? ME]$J?@TV6 (N#O^5&gt;0HU4P+7R/''=EW(J(?/.E]$J?@TV6 (N\O Z&gt;WTU 0(7?F(U6P+&lt;AQ[ZB 90=;W;@!WQB/C981VCB#_&lt;Z!WYB/0EE-(JC+C8"O(YEYTJ\/5;ER(J=737DQT+B :0&gt;I'':AAU5B&amp;G=H!T*B/]&lt;=1DUJ0(N,GW9^QW7VP+8A?3&amp;ER(J=737DQT+B :0=7W9^QW7V +8DO1@ER(J=737DQT+B ;7#O&amp;1?0A9IX@U=5,J&gt;=[?@A''Z AT*B/]&lt;=1DUJ0(N?AG!&gt;XTU20(N&gt;&lt;77J_&lt;@_"U E_&lt;@_XBBLO??''+M5A??? QW*)O??9ST&gt;2-F''?0@AZPC?@ER[/!9.A(_??&gt;&lt;TAX''??&gt;&lt;S?&amp;:K???''US&gt;K???9*,G?@A_8?X/?@CE[H  N?AG!&gt;XTUS=TG"???9T@@???:ZW''??=QR&lt;O??.YZG???3[Q@HW@_7CY"V1H/MBLDGC/0Q=0[9 AVCB ;;6/^,&gt;!$U 0)3&gt;38U\P+;VO\NEWDJC%#7OO,BE]DJ_?(IE_]YB/.W&gt;?4U60(NVO\&lt;&gt;0HU4P+;I_" E],JC"#7N?,BE]DJ=;_9&gt;!U:B//I&gt;5 U60(NVO -&gt;ZHU 0+&lt;U_0DE],JC%#7N?,BE]DJ=8[:DAVCB/1U?@PU60(N=0%_&gt;W$U=5$J=9S&lt;O1T2B ;7F/\&gt;&gt;W$U=5(J=&lt;?;&amp;QT2B ;7TFK9^QW7VP+83_0.ESTJC/]W=3''9^QW7V +9A/.HESTJC/]Q&gt;W[?@G$% AW7V0+;/?&lt;@4]*@ESTJC/,;=8[9!!W7VP+;+((U20(N&gt;3;8O?&amp;FE_]ZB/-''=3$U20(N&gt;9774/(XEXLJ&gt;83;I1WKB ;;6O]7&gt;XPU%P)G??6: @@U5P(N&gt;&lt;W7)O%DEWTJK_?&gt;O(@@E]TJC/.80?&amp;#E_]\B/??$9&amp;@??&gt;-3L@U4@+?@OSM@O&lt;@XY&amp;@E]@J??&gt;L&amp;XC??$QL0AWUB ;;-?]&gt;&gt;ZDU30+??9.Y O&lt;@X\3@E]@J?0C43PC?@FFY AWPB/??!9&amp;@??9FSL@U5P(N&gt;&lt;[7$O%5EXLJ&gt;1;??[:@@AWUB ;;._^G&gt;!\U 0)3&gt;38U\P+;VO\NEWDJ&lt;??&gt;PH@@E]TJC/07=8S:QAVUB$+;XAT6B ;&lt;IO^4&gt; PU]P(-P1T6B ;;!V+9\AW7VP+7)H UM (N&gt;8_7L?%6E_]ZB/_$=3DUM (N&gt;4[7^_&amp;EE_]YB/,$E,0JC$W8P?&amp;DE_]ZB#G7N1WLB ;;6/^W&gt;!HU 0+;@?,$E\0JC#C8F?&amp;DEYTJ;O2%E]0JC#C8K_%DEWTJ6/0!E]0JC#C7P?&amp;#E_]\B/??$9&amp;@??&gt;-3L@U4@+?@OSM@O&lt;@XY&amp;@E]@J?0@&gt;&amp;XC??''#L0AW\B 80=&gt;?9(1WOB/??&amp;9&amp;@?0A!3L@U4@+?@OSM@O&lt;@XY&amp;@E]@J?0@&gt;&amp;XC??''#L0AW\B 9K=:G9$AWKB/\\?G,U7P+&lt;HHPU7 (NR?_\&gt;Z@U3@+7X?1OE]4J?BBDE]8JC#C8B_%5EXLJ/?2!E]0JC#C8B_(WEXLJ\?,&gt;EWDJ&gt;5#7C!U1B/^$?A&lt;U7@(N=0S8''_(YEYTJ&gt;2W&lt;WAWSB ;7AO"/&gt; PU]P+;M?0CE]LJC/^8[_%-E_]YB/ ?&gt;;,U40(N==_7N?%3E_]ZB/"Y&gt;1,U40(N=2_7@/&amp;HE\0J&gt;Q[;UQWWB/.7H1WXB ;;6-79(AW7W@+??9NY O??+\3LE]HJ?0C43N[?@FFY&amp;AWRB ;;6/^R&gt;Z@U30+??9.Y O&lt;@X\3@E]@J?0C43PC?@FFY AWPB ;;6-79_QW7VP(N=0/8HO,CE]DJ&gt;3_:D1W7VP+7H_4?E^@JC/\K&gt;BC;@1WQB/O7ZAW B ;7B?  &gt;0LU4P+7@_''%EW(J=07&lt;^1W B ;7B?"F&gt;X4U 0)N?R U8@(N=0/8HO,CE]DJ&lt;_''&lt;EXLJS/4(E^@JC/^N[O&amp;BE_]YB*?&lt;F1T&lt;B/_3=9HUOP(N=2+7RO%?E_]ZB''#;\!T&lt;B/_3=9HUOP(N=8I_&gt;X,U=5$J&gt;O_&lt;G1WTB ;7N/]A&gt;W$U=5(J&gt;M[;Y1WTB ;74?''8?0A&gt;IX@U=5,J&gt;;#?@N7Z AWTB ;;6/_Q&gt;XXU=5(JC/0Q=6_9!QW;E%TF"4&amp;VT/\M_ ":A???.YZG?0@L$/C???))^_&lt;@J.4P"?&lt;@F8@@BMTFC/,3C/_)C/,3C/_)C//ZC/0-C/2@C"PN?ADN?E&lt;N?LLNC 8NC ;;6/^&gt;=&lt;,U&gt;:P#=:PFC//Z=;;721W;)BO7)@XNIO#A=&lt;,U?L(#&gt;L(FC"S80__KE_3JH?#JA ;7:_)?=&lt;,U?(X#&gt;(XFC/_)&gt;''?721W&gt;!"O:! XN&gt;7K7:/%-ES/&gt;M],F&gt;3[:MQT;?#W[A 8$&gt;M[;\AULB/]&amp;AD0JC/0Q=5;8ZQW7WP(N?AGM&gt;V4U10(N?AGM=1DU10(N?AG7W_%-E_,[&gt;0&lt;F"?,D7GWA"@"9A???,.&amp;:?0@NQ&amp;#???4VQ/&lt;@KS&amp;X"?&lt;@GX@@BM,FC/,3&gt;DW8ZQW7WP(/E/]]B ;;L?_E&gt;V4U10+&lt;AA[GB ;;L?^==1DU10+;?A[GB ;;L?!L&gt;V4U=58J&gt;737DQW7W (NIO"_&gt;G$U&gt;4_7]O,Z&gt;7S;Q?,H=4_&lt;1?\Z&gt;L_7Q0XNIO"\&gt;G$U&gt;4_7]O,Z&gt;7S;Q?,H=4_;\?-G&gt;0#7Q?-4=1+7]O]GA/\H&gt;4_7\?]GA0;;2_]E&gt;C4UQEMTQT[CT=CP0&lt;OP35ODRA&lt;N&gt;&lt;''76__-EX/?@@#I./???)WB?0@FQE+???Q97O&lt;@A.(&gt;BO??D_A"?0BEA:8E]XRA]1?;# ]=''O??=?97?0@S7TL^?0C&amp;L%/?@G4IM0W?@@OWSO&lt;@@$8T?0@EQ.#?@AD!3O&lt;@@=H.?0@B"GHHC/0Q=6+7I!T!B :R=8[7I!T!B/_ =2XUHP(N=&gt;''7!/\&amp;ERDJ=&gt;G7I!T!B/_!=2XUHP(N?AGK=; U^0(NC 8NC 8NC/,3C/_)=3S9]1W7W0(;AO] B/_$6!W7XP(/?FPU=6HJN0S7X0+8A],U=6HJN0S7X0(N&gt;U \AK[7)!W7X (;AO]#B/:*&gt;KTU=5&lt;JN0S7X@+79M(U=6DJK?1$E_]"B#,D=6LJ&gt;@W[E_]"B#,D=6LJC/09?0C[J''??@,J:(AW??7*31O&lt;@H;^L???^V''???8I.EO&lt;@AS&gt;&gt;??=9B,K?@CXWW???&lt;XGJ?0AI=TC?@GF;*@TN&gt;77?@Y4* O&lt;B0+*@E[8J??=_)XC?@G6R@AV=B 9^?0IUJ(C?@,J: AV&gt;B/??XJV@?0A=$ @U/ +??6"% O&lt;@_YH@E[4JC/09?0@PNLG?@,J:(AW?@BF% _?? &amp;7T?0AI=OG??89DVO&lt;@M!^N?0@N_#[?@@T?//&lt;@!/T&gt;???^V*C?@G6Q;@TN&gt;:3?@LP80O&lt;B0+*@E_]$B/?&gt;1+O@???\RD@U=6PJC#O?@W080O&lt;B0+*@E_]$B/?&gt;1[O@???\RD@U=6PJ??;C,&lt;C??=1HPAW7Y@(N&gt;6W8UO-XE_-3&gt;@G;\?0A=0*K=O]F=O-FAP;;6-;7[!U4B ;;6/^K=&gt;LU_ (NY/\R=&gt;,U???\.0K??&gt;QD?/??743L???!,3S??=5R&lt;/&lt;@H"@F???#,"7?@A6QX/&lt;@IT:X?0@X&gt;6S?@BC:8_&lt;@G* 2?0@[5G+??&gt;O+QO&lt;@H(MT???]FU _=8/7CQW?@BJ],/??8U#T?0@[X$;??&gt;B''KO??6,3L???''L3S??=:@@O??9H@@???YTV#?@BKE9O??9::X?0@[N!3?@BJ],/&lt;@F6IN?0@^)23?@A=X5A;?@G)W3/??BPR\E_&lt;@H* 2?0@\&gt;.C?@A+;YO&lt;@H4:X?0@]6Q[??&gt;MU@O&lt;@H]!R???],BC??=2:8/??9DT^???_SL3??&gt;F3MO??7M#U?0@"3-+??&gt;P+1?&lt;@F8#4G???BZ 2??&gt;E&gt;6PU???YV\G?@BMD''O??:JX??0@Z.6S?@BJ],/&lt;@F6IN?0@^)3??@A=X0_&lt;@HY:8???"0HS?@A1!RO??8C=&lt;???YTV#??&gt;^.&amp;O??7S(\???$1^P^?0@A)Q?7SQW??4MGW???P4\&gt;?0@&gt;1N+??&lt;XOP/&lt;@.$:X?0B:S);?@K)N&amp;O??Q[E"?0@&gt;1M3?@C''0//??P4].?0B&lt;.LK?@K28$/&lt;@/K#T???AN2S?@C''0)O??Q[E(??=E,V+??4V1ZO&lt;@.$:V???AN1[??&lt;XOW@TN$/#''&gt;V(UH@+&lt;A P!B//!&gt;V(UH@+&lt;A P!B 9^&gt;AW7I!T!B//6&gt;GTU=12MA)PG"?&lt;@K4Q\?0@^IVC?@B^;HO&lt;@I]* ?0@W()@H"???*U74?0@\7+#??2Y+1 W???QO8O??:T@@???84V#??&gt;S[H8/??=99E0!==1@G"&lt;7?@A!E9O&lt;@B)3.?0@;.!3?@B)#D.#M.+^K78/7GO,_:_,''"2*K&gt;4Q&amp;"O-6BO_6?0A;/30U?0@$?_S??&gt;-''+O&lt;@G HL???^J4RK???X+]RK???LC!S??=$6"O??84*@???T@T[??&gt;FK@ #?@@?HL/&lt;@]A1*AP8$&gt;LC9,!W&lt;/2O8/0XN"/&lt;BQ%I0??? +W8U???H81C??=L75_??%,*@???0F*4-"2&gt;K??&gt;]M$[?@@-=.O??07\8?0@1K&lt;XH???UT(K?@BJ- (/??8YJG/&lt;@A5JB???8+U@E?0AP@KG??:??OO&lt;@X*3M???2+%[7@(/5"?&lt;@YT[(?0@L;@#?@EA&amp;*O&lt;@TFY&amp;BO&lt;@A5I0?0@GT+BK?0A9-^HEC(+?@D2-_/&lt;BUJ6PE_&lt;@M14A?0@,2CS?@F$5 _&lt;@C&gt;T\:X/''"?&lt;@X,&amp;&lt;???4 %C?@C2H-O??3-A BO&lt;@J*6P???]T''BK?0A9- S???"-$O&lt;@A5I0A_??+?&lt;&lt;?0AP@LS??95SMO&lt;@CUF(&gt;0JKHX/??9*9E/??&lt;1P&lt;??&gt;/&amp;V3??:&gt;YV@#???"-_/??&gt;J6P"???!$''&lt;AP;;\_&lt;AM^)&gt;=&lt;DU??;@-PK&lt;(?&lt;@^GXA"?&lt;@Z6?_?0B1T8K?@F162O??S*1&gt;?0A8/#ZK??=VZGK?@QN9@/&lt;@&amp;C64?0C;Q/4EC/]I=?_8-AT#B/,$?F8UH0+8?&amp;XUH0(N&gt;9_7;?_UE_.:&gt;3S7. XN?HC7#/%_EW&lt;JC//Y=7L;E_\:A8/?@E63&gt;O&lt;@EN4N?0@LP1K?@BTNU/&lt;@A8%9BO&lt;@E@R\?0@DD"6K?0A-6*C??&gt;/;YO&lt;@AAH,A_??5*8U?0@HY6;??&gt;=V!?&lt;@DXIN"?&lt;@U9[HBO\:A?&lt;@JUU@?0@H*,G?@@B*0O&lt;@GUT?G+O7A4PF??&gt;-Q67??&lt;28$???1Q* ??&gt;^9V@_&gt;4(G"???/AQ:?0@JK53??&lt;#3.O&lt;@K=.&amp;???\U,#??=.@@O??8M2,???*]O;??&lt;&lt;]=H/??;N&amp;Y #;R _??9;''&lt;O&lt;@L3L3???EFAC?@EKL3Q;R=0]#A/??6:+A???&gt;US&gt;S+Q&lt;N&gt;=''?@A(D _&lt;@18BCE_&lt;@JUG&gt;???7&amp;IO?@AB) O??;W=&lt;"???*V]-BO,:A6JC"&amp;4^X?,G4 [?@EJ8$?&lt;@L4]-?0@:9VC?@FDZ(A?7R ^K?0ALU&lt;???&gt;)6Q/&lt;@LNLR???[ X''?@A&lt;#%_&lt;@K&gt;NU?0@#+)#?@@($''O&lt;@M1I."?&lt;@P&gt;BDBO]JA?&lt;@XQ P???L3L7?@C+''&lt;O??+SL3G$S;A;LF,H2CZQ?;N ^K??&gt;(ZS#??&gt;=V O??;''62???V+ G???^X$ #??&gt;/;_???&gt;&gt;7T"???$"U AP;81?$7&gt;GTUJP+75_/#ERDJ?##8]QT)B/_U&gt;&gt;LUHP(N=;G9?_%*ER@J?@XDHP+=/_!5ER$J==W;81T!B ;7,_ !&gt;GTUJP+75_/#ERDJ?E39Z!T B/0FABDJC"S8)O#DE_2G&gt;1G7=P[??;EGKO??*&lt;$8??&gt;G.MS??6P62GC;X0#7HPZT=1;A=077OO]_B@;;C/"%&gt;HLU=1 1&lt;_,IG//CP;[=9N799L+=9N78W [7C9G :X/7E@ N&gt;0;?@N;4 O#ME_??Y"&lt;@??&gt;17HC??8AC O??^;2@??=9F(C?@D9  O?? .V@?0BY%@@_=;#7A%K7.LS7A [;^?0*E_^81?.8A0;;C/^?/AW?@I''P9/&lt;@S"NV?0A?/F+?@HQC%/&lt;@!.U ??&gt;1''73?@G4Z(O??Y&amp;0HG?.8&gt;0[D&gt;;!R&gt;0XF=7/8J!W;.D?7.@\N&gt;:K7FOPUH0(N&gt;=+7&amp;?\&amp;E_,*&gt;14F"36YL?\\^ #CA5BW\J:K30"N8P_;J/"\E_,&amp;=2+7I \N"/&lt;@SJ6@?0E2+X@U?0@7GPC?@B3HPO&lt;@ZSV@?0@O9TC)"&gt;^K?0A"2\C???RBPO&lt;@OH#@???N4D@H?0@*+XC??=5R H/?@G&amp;6@O??&gt;J6@?0@GT(@E??&gt;/?4C?@E@@0O??''UM@?0@MT\C;@(,!"???&amp;+$@???3E@C??:&gt;Y O??+9&amp;@BO??&gt;J6@???8+XBK??&gt;FR @E?0H$T(C??6B- AW??&lt;##@O??43_@??&gt;V2(C???@Z0B6KK8/??946PO&lt;@B77@???C]4C?@CD/0@#??=UR O&lt;@H*6@"???!$(@?0@GT(C???"- @W?@E@@0O??+?=@?0A"+LC???J.PO\B"?VK?0A%Q0C?@@3,@O&lt;@TFZ@?0APY(@H?0@GT(C?@@]R H/?@G&amp;6@@TN&gt;:K7FOPUH0+7@_ 3ERLJC''K8T?\REW,J?H38=AU;B/^=#QU?B 80&gt;F;8OAVC @U4ZG6G](-&lt;"7RNZYXHY9\EY)!#$V^KMH-MXGE@BG=*:X.R&amp;@VZ*JJO''H.U"92I)XLH+(@E5WN""*.K;X.&lt;,:7\BI&amp;.AP:J?0AL+W;??2.-$QW?@C\]@_&lt;@KL 3?0A)MXG?@@?%G.&amp;K98/?@FKI/O??=HIN?0@&lt;"KS??&lt;;PX #?@B*-$O??7UI/"?&lt;@^[XD???8+YC?@@]R[ W??:??OO&lt;@T@CL??&gt;]T3S?@@5Q1O,B"2FK??&gt;Z.Q[???LS?/??+9%,??&gt;/&amp;WHH???8+W;???"-$(/??8YI?@TN=1+?@S!ZGO&lt;BW]L4E_&lt;@EXW$??&gt;B9ZC??;]4/O&lt;@Y]N8A_??9"\+?0@#=O3??&gt;#^._&lt;@DIL4???_VQZK???V&lt;?"K???WVEK??&gt;HHLH/??&lt;7#EH/??=;EHO&lt;@DD5P???(.AC?@BPC5???9T],BO&lt;@Y;Q;??&gt;6Y*#??8WW3?&lt;@EE]LA_??&lt;M_P?0@C_73???N3-/&lt;@@O74???7%0*KBO??5BK????V7PG??=.4^/??4$.F???TYVC?@B\#?/??6Y* ?0@-7@H_?0@JEO:K?0@KPP[?@@D8%O&lt;@CZ1J?0@BF%8H?0A=C1+?@AU&amp;Y/??&amp;)#U??&gt;70\,E???Y&lt;^7??&gt;WVQO??&lt;VOW???(G32K???^#52KV;E+-X/?@BD;H8/?@A]JO_&lt;@DEBC?0@Z.EK?@BPC&gt;@#?@D''I?O&lt;@ZC==???+QI3??8QA"PW???/3-/??8:''=????0@C???&gt;\@X/???#$  #??=R9@O&lt;@IE96???WQ0C?@B6!"/&lt;@J9* ?0@&amp;YVC?@B\$@O&lt;@K]0@G(/?@@(T0????,[*?0@KQDC???7%(/&lt;@CZ0=BO??:''N6?0A=P";?@D!$&amp;/??&amp;&amp;KPA_&lt;@F"&amp;&lt;???Y&lt; W?@A_ 1O??&lt;VN=?0@!\JRK?0@,L?"K?0@#3@#?@BL?@H/?@B/A@H/?@BF8T/??&lt;U"T?0@W\V#??=(#6O&lt;@F3YFBO??%&gt;LP?0AIM0+?@G.[IO??:+1*A_&lt;@C\0H???=8L[?@@9C%O???,/F?0@F=\RKBO&lt;@J=3,?0@)H1S?@BQK!/&lt;@K[Q:?0@+&amp;*C??=#[:O&lt;@I&amp;U ???RIA _???2EC"K???.W+#???45PO???H+D????]&lt;8H??&gt;B&lt;RS??&gt;*Y7O&lt;@YX7T?0AHVU E?0@%.]3?@A+  /&lt;@C,%8?0@WIE2K?0@!V.BK.6V+XX/??=:.EH/??&gt; ]LO??;&gt;T ???%6!3??=._O@#??;YR&lt;/??%&gt;_.?0@T.6S?@G.&gt;M W?@@M2,O&lt;@FBIL?0@@6Y+?@@OKAH/?@@[(L@#?@B/\;O??6;Q:?0@)H1S??=IK!/??5FU ???Y&amp;*C??=#[:O??4"PXG(/???W9&amp;O&lt;@@R_0???4AI3?@@H2KO??&lt;-T@B@;;IKC79!U;B/\;=7LU^0+;DO1$EW,JC/]X?0M@J(C?@,J: AV&gt;B/??UZV@?0A=$ @U/ +??5R% O&lt;@_YH@E[8J??=U)XC?@G6R@AV=B ;J=;G9S!U;B/,P?M8U^0+7D/_FEW,J?PHV^0(N3_^3&gt;B0U^0+7D?^:EW,J?PVHEW,J&gt;@7&lt;;AU;B/4EE'',JC/1G,O&amp;_EW,J&gt;1C=N1U;B ;J&gt;J/7=AU;B/4BE'',J=1C8TQU;B/,P?_8U^0(NUO 7&gt;I0U^0+;DO/7EW,J?G\V^0+7&gt;?]EERPJ?G+7.1U;B ;&lt;Q;C1EW,J&gt;1C9G!U;B/,P&gt;= U^0(N?D^0&gt;J,U^0+;DO1FEW,J&gt;1C9HAU;B/,P?D&lt;U^0(NC 8NC 8N&gt;&lt;"^&gt;HHU=6TJ=7PV=6XJC/1_?0BO#LC9C1T0&gt;?O&amp;A/&lt;A6]&amp;@ACC??:;@@NXFC//H=&gt;K8VAV@B/,!5!VAB ;;2O_L&gt;U$U=6\JC//H''/!:E_](B/\3%1W7ZP(N&gt;&lt;#79_%YE_]*B ;;2O_U&gt;N&lt;U=6,J&gt;2Z;E_],B(+;OQW7[P(N&gt;&lt;#78O"SE_].B/,3_1W7[0(N&gt;&lt;#77?"-E_]0B ;;2I?8+QUD=&lt;/RA0;;2I?8=AUD=&lt;/RA?/K&gt;2LUQO_K4 \N?D??@HO3PO&lt;CFM&amp;@E_]1B ;&lt;S_&lt;@U@3@?0B=I(@U=7HJC/. ?0@(&lt;4C9DAW;&lt;&gt;[?@MJY @_?@B&amp;Y0O&lt;@GT@@?0@[SLC?@B03PKK?@AN@@O??:(3@???VY(@^??&lt;''#LC&amp;?0C+SL@G?0AMV\C??=TY O&lt;@KCL@??&gt;5P@@^???P#LBK??? I(C??&gt;93PGE$BO&lt;@L+M@A0;;2I:UE_]%B/]4E/]&amp;B ;;&gt;/\''9AU=B ;;2O_\;1U8B ;;2JG"EW$JC//H=&gt;I+EX@J&gt;2GVEXDJC//H=&lt;37]QW7Y0(N&gt;&lt;"^#QW7Z@+7L9\U=6$JC//H=&gt;W7]QW7Z (N&gt;&lt;#75_\KE_]+B/,&amp;.1W7[@*J&gt;34U=64JC//H=&gt;B&amp;E_].B/,3_1W7[0(N&gt;&lt;''77?\CE_]0B ;;2ZC7@1UD=&lt;/RA0;;2ZC7VQUD=&lt;/RA?/K&gt;2LUQO_K4 \N?D??@HO3PO&lt;AX=&amp;@E_]1B ;&lt;S?&lt;@T03@??&lt;OI(@U=7HJC/.&lt;?0A=3LC??2,L0AV2"?&lt;@H&lt;@@?0@P9(C?@A?Y0O&lt;@HRY@"???;\4@?0@A&lt;0C???&amp;@@O&lt;@BGM@???5&amp;X@H?0A"3LC?@@,L0@[??&gt;?@@O&lt;@C/M@???;\4C?@@''@@H/?@AH3P@#7U0_?@D^@@O??34@@?0@$Y$C??:DY0A;??:DY H/??&lt;:Y O??5;M@???:I(C??:;@@@#?@E_@@@[?@@RL0O&lt;@IFZ@?0@N&lt;4C?@@.3PO&lt;@KM&amp;@"?&lt;@H1''@"?&lt;@DX3@???4SLBK???(&amp;XBK???]#LC??=TY O??? 4@???"F\C???-3@@#??=.Y O??&gt;X@@A_??.''M@???4SPC??=83PO??7D@@"???0OL@"???0OM@?0@*9$C??=W@@O&lt;@O;M@"0#?@F''3PO\0E_??25''@\_??8!&amp;@???Q6XC??&gt;E3PO??;RZ@?0@PP@B%G(/?@A-L0O&lt;@C$3@&amp;O&lt;@I[M@?0@G3L@H?0@_L4C?@@WY0@W?@A L0O&lt;@AH3@?0@C9$C?@@EL0O&lt;@B&amp;Z@?0@EL4@HC/.9?0B23LC?@I;Y AW??9-@@O??0$@@??&gt;7L4C??8)Y0O??#83@?0@=F\C??;,Y O&lt;@X7L@G?&lt;@S*Z@"?&lt;@O;M@?0@,6\C?@AP&amp;PO&lt;@QNY@BO??)$4@A/??=OL@???$CLC??&gt;Z&amp; O??;&lt;@@???^6XBK???B9(BK???6P@C?@B3Y0O??? 3@?0@/\4@H?0C+SL@F?0@@)(C?@@_L0H/?@@M@@H/?@@RL0@#?@I-Y O??(\@@,/??.\3@G/&lt;@QX3@??=* @@U??=4P@@F?0@E6\C?@CUM@O&lt;@E,@@?0@Z)$C?@B!L0H/?@B)@@H/?@A"3PO??86Z@?0@C9$C??&lt;2&amp;P@ N&gt;97?@LN&amp; O&lt;@''-&amp;@E_??%L@@??&gt;&gt;VXC??;$&amp; O??#OM@??&gt;LSLC?@DF&amp; O??.\3@?0A+9$C?@F*Y0O&lt;@P/L@?0AF6\C?@GA3@O&lt;@]/M@??&gt;?)(C?@DVL0O??$"Z@G?&lt;@@JY@??&gt;6#P@U?0@2CLC?@BB@@O??42Y@??&gt;;F\C??;9Y O??7#M@???R @C??&lt;=@@O??3)''@???^6XC?@B6@@O&lt;@P/M@?0AB&lt;4C?@BD&amp; O&lt;@KX@@?0@1Y$@_C/.??0C&amp;0@C??&gt;#L0AWFB ;;1O&lt;@,,@@??&lt;+CL@U?0A$0@C?@C7@@O&lt;@RL3@?0A5)(C?@GA3PO??0.Z@?0AD9$C??92L0A???;EY H/??&lt;AL0O??42Z@???+6\C??;,Y @#?@E&amp;3P@[?@@,L0O&lt;@F?M@?0@YVXC?@AA@@O&lt;@HRZ@"?&lt;@OQ&amp;@"?&lt;@B\@@???SI(C?@@G3PO??4H3@BO??EKM@A/???5&amp;@???8L4BK???&lt;0@BK???;\4@H??=$)$C?@E9@@FS?@DX3PA;??;)3PO&lt;@%X@@E_&lt;@"&lt;@@A/??&gt;"Y@???J,4C??&gt;%@@O??9U&amp;@???W,4BK???U0@BK???''SLC?@A2Y0O???A''@?0@3VX@HC%/7^?_]E\+7$-;;$/\''=&gt;S6?F'';$#086$0&lt;N0_Z&gt;877F_^M=9K[A 9G?0C(N&gt;_8IQW??&gt;]S]O&lt;@K[=&lt;???''\JS?@A*2K(/?@CFNU(/?@C&gt;UPO&lt;@K"Z(?0@''Z,C?@DWYVH/?@GBP9(/???6OF/??''KC$?0@A%&lt;;??&lt;%OG@#?@H&amp;(= [???6=-O&lt;@%''* ???QK1+?@HNEXO??N;I."???[R+A"???"=T???&gt;X!VBK??=8^*BK???X \+?@@S1P_??:\JP?0@]XTG??&lt;.;) #??&lt;F-_#7?@F8&amp;Y [?@@JWB/??&gt;+J0?0@LP)C??&lt;V!2/&lt;@@^Y&amp;???:*8XH??&gt;EFY(=?0A/KH0F???/+%[??&gt;PV!???:J)^???$!M7??;R20???/5YZBO&lt;@P9_=??&gt;+C4HE?0@#2.K?@A^LPO&lt;@JUG+?0@C\,C?@B8SL8/?@DU:W(/?@CL9&amp;&amp;3?@E-LBH/?@D?6"H/?@B^+QO&lt;@H/?@?0@+W[C?@B)H_ #??;4*O/&lt;@V []A_??:I\J???/6);??&gt;EO8O??9=YF???[;52K???R X*K???N?R:*??&gt;= T"K???49.&amp;K???5TR_???&lt;:W/??=[VA???&gt;$FK?@@;9VO&lt;@D/VB?0@KZ&lt;_?@AERK_&lt;@BGD(?0@P;YDH?0BOOB#Y??&gt;@F%8F"?&lt;@BH@@???79ZJ8???:)A#?@@&gt;@@@#?@H%[:M$FC/]:?0JF43S9G1W??:5+@O??!7&lt;&lt;A_??9]WD???3@=#??&gt;$09O??:=#T???*.2S??&gt;N$FGF&gt;UZ!H"46KX7Y]U@#N&gt;1?&lt;,O\ == G3Z&gt;31;*(\F@^"???$_* ??&lt;F#53??)PEXO&lt;@\951"?&lt;@!]L3?0CCQ(:K??&gt;..WK7HH.K?0D]#9;?@FK6AO&lt;@$F\*A_&lt;@KTDH???&gt;8)C?@A/H=O??9S62"???5^#6BO/&lt;=2C8D ^K?0A[4V#??&lt;&lt;O''O&lt;@N.? ??&gt;+_''#?@@5Y7@#?@D_"$O&lt;@ZNS\AP;O&gt;TC72QUX8+;2VO]&gt;&gt;1W;_/??[.U A/,^=7;??78Z(H.K&gt;79^"8,$.H.KME:K"2:8"8/;Z?\T"8/7Z?&lt;@%"JP"?\W&gt;6,E?0BD7WC7Z;8F&gt;4#(E_??5&lt;6R"???26-B8/&lt;@WL\,"0W;,SPU8/&lt;@LP:XA?&lt;@MA84M@TN&gt;OK8 _\QETHJ(? VETLJ=&gt;K;=!U)B ;8F/%]=0\U&gt;8K7&amp;?,_?@;8CPZTA,C7XJ?7U1?8A_,_?@TG 31%[S*DBO-A&gt;G$U?FC&lt;;O\_&gt;G''75PZ1%WY1G?-0=1?7\@_/NL$#G 8&lt;&gt;H3LE_1/L/!/A+;9)!UU-O,QX#486_??0W''\A/??746R?0@W-O3??=].U/&lt;@CMD(???QQA"KBO??](U ??&gt;&amp;^*C??9E[)O??WJQ\??=S&lt;7W?@E 0)O??$ 2K?0BM350_?0@1I"RK?0@(W7;?@@3  ?&lt;@H7)^?0@]/N8H???*X(?7B_#E0P_;,/,&amp;E_&lt;@O1^N?0@+:GK??&lt;\!"/??&amp;M96??&gt; ZW#??=VY&amp;/??09ZH???@Y&amp;[??;03L???4,3M?0@=EK3?@FC+QO&lt;@XCL4?0@,3L7?@C7L3O&lt;@P3L3G098&gt;C-4E[JK+(/Y+P#7JP]JUFJIX8,9"5KC\^XH=4"K(&lt;?;Z8,E"YVK$(.U"9&amp;L%(6[BO^C":SO&gt;9VKAZO''1,;''";NK,X&amp;8XP"8=1@ES[Y$#$*K&gt;5ZKJO,FY/,?BE.K\4_N"0VJ_8.B"7&gt;K_8.B#W4HW8-3Q="KA[_;^O]AW."KB@9U?0E''3YK?@]562AW??&gt;*!"O&lt;@JOB$???/$N[?@A2L#H/?@A,LB@#?@A\/WO&lt;@EZ+@?0@R4JS?@AMUPO&lt;@C-U@?0@IJ,C???NY&amp;O??;VY(G(/??=*!BO??=)74???^:4C??&gt;8/''/??6.*@BO&lt;@R3I.??8D"S U???)6@O??&gt;XH=/??7,N=??&gt;*=0(^??&gt;MYD@G?0CM&amp;Y#?@CM&amp;ZO&lt;@V3I.?0AN3YH_"?&lt;@$K4/???BY.#?@F=]=O??-..F?0A+VY''?@B1PX/&lt;@TY52?0@*WSC?@E:KP(/?@E]"$@#?@E%6AO??-&lt;_0?0AA"_3??:T8DO,FO???,9&amp;X??&gt;MY&amp; ^"???.''"T?0@#4^3??&lt;A_//&lt;@M/74??&gt;]X$;???JW3/??9NPX???73P;???INU/??=V#6???-#YHH??&gt;9P-G?@G.G+/??WU[=??97_[K?@JDUS_?????@?0@V $;?@CG\ ?&lt;@M-96??&gt;UCS3?@GO\Z?&lt;@;&gt;4HA_&lt;@H(^.???I#-#?@B#.U/??,GV""???,BS&gt;B@9G=97?@,PH]AW??5GF?_??;5H,??&gt;;NPO??8U7#H/??2T-5H/??2V]=O&lt;@QL:???=8W@3?@J81P_??;-8CBO??%2_=3?&lt;@Y?SCA?&lt;@''5\J?0@J6K+?@C4(\/&lt;@Y&amp;;E?0@H HS?@I7C/P#;I [???_"$O??+BU ???:T/K??&lt;2*_???.,)&gt;???6-(\H?0G\$?(G?0A%+&gt;C???YOWO??9\U ??&gt;*]83?@@^J0O??7Q:8BO\#A/??&lt;: 0?0B[- S??&lt;HS]/&lt;@WXJP??=(QE+?@@$M5@#?@CV9&amp;D\G??50&lt;''@D??&gt;14?#?@AQ]LO??&lt;R0H?0AR2GJK?0BH9?BK?0BHM&lt;;?@AA62_&lt;@RS$V?0AL"S_?@AMP:@ NWO U=&gt;0U=6''7D_3\&gt;1G7\_/,=2(F?@_8&lt;AW87O\Q?M0FC(+8&gt;AW&lt;E@Z2-;+F%IXHWK(EM"U#X"P3BO#HA ;&lt;2_#8ETW82@\$86N4M_DHWU0E%HB9TKM_B@;;ZGLU5/%ZP@XN&gt;8F@E]/80C,FC/&lt;@A\@@&gt;XLU??8N:&lt;XF?0@ Q23?@BP+2O&lt;@IFPX?0@-C!S?@A/(=/&lt;@H.LPBO??5C!R?0@+1?@E??&gt;;R'';??::)NO??6\IP???Y;:C??;LJ_O??-$&lt;X?0AL=$#??;YO8O&lt;@I#3,???Y;-#?@DR5 /??+*$8BO&lt;@J&lt;^.?0@+1;@E???$Z0K?@BI;HO??6/=&lt;?0@-1;C??&gt;@ABO&lt;@H=)\BO&lt;A&lt;QQ:A ;??Y!@@O&lt;B+I&amp;@E_&lt;A&lt;QQ@A/??7;#@???[5DC??=.\@O??4/H@???$E0C??=4]@@#?@B/G0O??5C @A_&lt;@QKV@?0AQU,C?@BX=0O&lt;@I!B@?0AL=XC?@D&amp;00O??,0&amp;@?0AI,DC??=''CPO&lt;@I!D@??&gt;;R(C?@EEV0@#??=P8PO??5C"@A_&lt;@F9T@???]!LC?@BT@ O??4#!@?0@_?0C??=0%0@#?? ;+ @XN&gt;1K8&lt;QU;B//IE'',J&gt;&lt;\V^0(N?S+8&lt;QU;B/!@E'',J&gt;&lt;$V^0+;11Y;B ;;\?&amp;0E_]3B/!P?H U=7PJC/^(&gt;5,U&gt;''7&gt;__9=A?)I/1W&gt;E_(U&gt;!TFC/-3&gt;08U?C78O_ =&gt;C78O/0=A_0&gt;?H,U&gt;H/8"?2K&gt;H/&lt;"?2KAP;7\_^&lt;EX/??8#!A/??665P??&gt;]C_+??;?ARO??,=/@BO?=_66P?0I?%G0E?0AL]=C?@DC=\O&lt;@Y"''&lt;?0@"(5S?@G[BCH/7&amp;8/7R_,:"?.+BO1P&gt;H0U&gt;&lt;K;W?-)&gt;;_;*O]R&gt;7#73__M=5S7]_^+=;'';T/]''&gt;&lt;4_?0D__0C??J^P@AW??;PGO???0QT^??&gt; =JO??&gt;IZ8/??"(T^"?.!"?-D=46K=9"K?0A4IE+?@A:X5O&lt;@W7YF?0A@KUC?@D2XD@ N&gt;0K9"!W&lt;P Z/,)&amp;\.\,HW[LEM"Y9]#-E5T*Y_N+;A@"9, U]3G:[Y+LH&gt;DHFY6Q=^U5KBK%$A^C0''*CZ4TKL_I$,=0THWVLE.T*X^;A$B@;??YA&gt;MO&amp;DE_??+G,$"?&lt;BZH!$?\S?@ENE@(,EC ;X&gt;QTU?IH=&gt;DS&lt;\M$FC/,RO1U;B//IE'',J&gt;&lt;\V^0(N?A''8&gt;AW73?,D6O]R?F+;T-$FC/??5(@@?0D= @@U??3.CY@F?0@,Z_3?@B9]LO&lt;@R!?@?0AZ&amp;]+?@B6^^O&lt;@NPQZBO??4&gt;LP?0@,GS@E??&gt;&amp;&lt;7S??9ZTNO??-X=\??&gt;5OJ3??9=&gt;^O??(9ZH?0A ^:#??:N[9?&lt;@R(],??&gt;5H9[?@E#;)O??%* CBO&lt;@KA30?0@,GPDE???R#YC?@C#M*???-X1H?0AZ&gt;!7??=N==O&lt;@K#N6BO&lt;CD_I0A ;?@D&gt;I0_#&amp;E_??-M^?"??&gt;M0=&amp;?T3?@D8/F(,E?0D2:\C9SAW??;SW2H/??#\OWO5L?0ANK12KAP;?@A9&amp; O??$5&amp;@E]G&lt;2@_2L;M"8RTH.[(E )Y]1&amp;N7B@;??^]&amp; O??%%&amp;@E_ TA&amp;Q_WEBB @":W@W &lt;[N4&lt;.LH?L FC/&lt;@EL@@&gt;1 U??8N:&lt;@F?0@ Q4C?@A, 0O&lt;@IFP@?0@!2,C?@A/)@O&lt;@F")@BO??5C!@?0@ 5 @E??&gt;;R(C??&lt;K&gt;0O??6\I@???#\&lt;C??;LJ O??2K-@?0AL=(C??&lt;"&lt;@O&lt;@I#3@???#\4C?@DR5 O??0/;@BO&lt;@J&lt;_@?0@ 5\@E???$Z0C?@A''\ O??6/&gt;@?0@"U\C??&gt;@A@O&lt;@F.O@BO&lt;A&lt;QR@A ;??Y!@@O??Q?M@E_&lt;A&lt;QQ@A/??7;#@???$70C??=.\@O??7#V@???$E0C??&gt;WU0@#?@B/G0O??72(@A_&lt;@QKV@?0@=@TC?@BX=0O&lt;@GH1@?0AL=XC?@C]D O??,0&amp;@?0@7QDC??=''CPO&lt;@GH3@??&gt;;R(C?@C4AP@#??=P8PO??72)@A_&lt;@F9T@???&amp;H8C?@BT@ O??7Z)@?0@_?0C??&gt;T\P@#?? ;+ @XN??&lt;]85S?@/RY&amp;AW?@@L0)O??.H!4??&gt;&lt;YE+?@A &lt;+O??&lt;[74???S.]3?@DS''J???;M0(???S?B''??&lt;\97O&lt;@IX[)???$&gt;.C?@B -$_&lt;@N4=\?0@''"GO??&lt;R3MO&lt;@I#==?0@Z?&lt;C??=MT/_&lt;@NL-D?0AD7/+?@AL!"O??&lt;[74?0@,Q"S??;1$V/??9&lt;MT?0@CLJS?@D]7#@TN=;K9ZO%_E_]5B/?==:OX?0@^P)@U=7XJ?0@JWB#??0)Q:!W7]0+?@\FY&amp;/??!(=\E_??.''B$"???2S50???(T^+??=&amp;EGO??4VEH???TU03??&lt;03MO??8N.D??&gt;)Z8VK??&gt;9,3NK???FQ9S?@A?Q;O??*V/@?0A?Q;BK?0A_]\BK?0AH!RC?@C =OO&lt;@G1Q&lt;?0A#JP(H??&gt;\50 F???)C53??&lt;-5-_??99Q&lt;???,AT[??= JOH/??=NY''H/??&gt;*JOO&lt;@FR";"?&lt;@L0=="?&lt;@I3!R?0@I''+#?@B.(=/&lt;@D\JP?0@#!Q??@AR8UO&lt;@J:#6?0@[XT#?@AL=\O&lt;@JKL0"?&lt;@M,JP"?&lt;@AR8T??? K!S?@@B=\O??5(=\BO&lt;@X2#8A/&lt;@@#!P?0@Q0)C?@@B=]O&lt;@A*#6"?&lt;@A6Y&amp;"?&lt;@QMG,???H @C?@C^@@O??)C50"0 N=&lt;''9]O%_E_]5B/?=9:OX?0@^P)@U=7XJ?0@JWB#??0)Q:!W7]0+?@RDOV/?&gt;;9&amp;XEX/??=ZOW_&lt;@G%\L???#H=_?@DD^.O??:((=BO&lt;@N''WD???- @@E?0@.''+#???D3M_&lt;@BY:8???9U0*K???.&gt;.FK???(T^W??&gt;@.EO??;/,B???R7B"K??? :8RK???R7B3?@@]&amp;O????\^,?0@*:9HH??&gt;Z''+ F???=1;C???S&amp;Y????4JP???;#52K???9U2,H???V#33?@BBOWO??.''CD?0BB&gt;.C?@G7L3O&lt;@S&gt;.D?0@&lt;+ G?@E:8QQ:K?0@,Y&amp;[??&gt;L#6O&lt;@GM0)???B%G3?@AJ@@@#??;#51O&lt;@EK!RA_??6$JL?0@KFY+???V#6O&lt;@A6Y&amp;"?&lt;@C,3NBO&lt;@E:8T?0@Y9&amp;#?@@&gt;JO/&lt;@I3!P?0@(,3S?@A!+!O??&lt;SL2???(T^0^"???&gt;8=\????P)C???4JO/???(T ???9U0(H?0A#9&amp;PF?0@B=\S?@@5Q;O&lt;@@K50?0@F*OZK?0@HH=XH?0AB&amp;Y+??&lt;_B$O&lt;@JKL4??&gt;"0)C??82OWO??,0(&lt;??&gt;&gt;H=[??:+&amp;Y18N&gt;@/99?!6ER&lt;J?SG7XAU6B$0D]0(N==[?@ @Y&amp;O&lt;@#I&amp;ZE_??''&amp;Y&amp;3???0Y%??0A)&amp;Y3?@JI&amp;YO&lt;@ZY&amp;\?0BD3N_?@JSL3/&lt;@X3L2??&gt;&lt;3L3?@C3L3/??$&amp;Y(??=^Y&amp;S??9#L3O??]3L2??=_L3P^?0CA&amp;Y3??;&amp;Y)!U[??? 3L3?@BO?&lt;?&lt;@NL3M?0A%&amp;Y+?@C3L3M?S?0@03L3?@A&lt;3MO??63L2???GL3Q_???%&amp;Y3??7L3PO??%L3LG???&lt;43L?0JD3L@U=7TJ??8D!Q;?@A)B$AW??;)0)X/??&lt;$=\O??:EG,???Y!Q???=E!RO??5E[0???LL3C??&gt;C+0O??*V.H"???.[L2"???1$^.?0@_4[;??:%+!/&lt;@_4^;"?&lt;@W7WC"?&lt;@RHT^?0@8OWC?@A&lt;T_O&lt;@X2#6BO??''M\JA/??:P=\???K]\K??&gt;^T^/??;@T^???XB#:K???S&amp;Y&amp;K???*"#;?@A$(=(/?@CLOWH/?@B\8T/&lt;@BY:8?0@+*O#?@AGB#?&lt;@H8T\?0@T.EK?@B.(&gt;O&lt;@F6EH?0@SOWC?@B"3L8/?@C[B#8/?@@T.E/??8B8T?0@@/WC??=ZOW@#?@FL(= [?@@H8T/&lt;@D\JP?0@@/WC?@@Z(=H/?@@]&amp;ZH/?@DSQ;O??2H@@?0@7 @C??:P=\H,HC/_+&gt;UG9W1W7]P+?? BEG/&lt;@F$JPE_??.''B%"???2S50???(T^3??=&amp;EG???4VEH???TU/C??&lt;03LO??8N/@??&gt;)Z8"K??&gt;9,3JK???FQ:;?@A?Q//??*V.F?0A?Q;.K?0A_]\NK?0AH!Q;?@C =\O&lt;@G1Q&lt;?0A#JOXH??&gt;\50(F???)C53??&lt;-50/??99Q:???,AQ;??= JO(/??=NY&amp;X/??&gt;*JO/&lt;@FR#6"?&lt;@L0=\"?&lt;@I3!R?0@I''+#?@B.(&gt;O&lt;@D\JO?0@#!Q3?@AR8T/&lt;@J:#8?0@[XT#?@AL=\O&lt;@JKL4"?&lt;@M,JN"?&lt;@AR8V??? K!S?@@B=\O??5(=\BO&lt;@X2#6A/&lt;@@#!R?0@Q0)C?@@B=\O&lt;@A*#4"?&lt;@A6Y("?&lt;@QMG,???H @C?@C^@@O??)C50"0#?@%7Q&lt;O?=F+50E_&lt;@UQ&amp;X?0FO&amp;Y+??9!&amp;ZH/??&lt;6.EO??EJ8TA_??&lt;6.D???DC53??=&amp;EHO??6XT9???O9&amp;RKY(/??&gt;3B$O&lt;@D34="?&lt;@IDJ)"?&lt;@B%0)?0@A^.C?@@#!RO&lt;@@/WD?0@QAQ8H?0@33L3?@OG:8/??&amp;FY("???1L3L??;)0)@E???=B#3???G0)_???(T ???2+#VK???2+ FK???D3K??@B++!O??6XU@?0AAG+"K?0@60)BK?0@''=\S?@AO://&lt;@I?WD?0@/WC&lt;H???49&amp;S??&lt;6.@PTN$?$@&gt;H&lt;U(@(N2/^R=&lt;8U?0DWS) F???46AC??7*T/O??/#.&amp;??&gt;2Z4S??9Z],(,."5C@ . H&gt;2XF%O,;=04"=4&amp;KBO]_=1O7I?]&gt;=8C;EO\''&gt;6H_&gt;3:K&gt;04,_/,8BO\#A)N0(.''7DX/?@F@EXH/?@DC&amp;I/??0F:X?0@T6EK??9FQZ@#??.8&lt;J@XN=9#8(O_NESLJ&gt;&gt;+9P!U6B$0D]0(NV? %==8UV (NU/]_7AU^HF'';JQ?7CPZ3$:F,G*VK%5^?"?JK4O\A"?\P";5$/(.6"?W?@@V@@I#?@BV@@K4H&gt;1LF[U2C_H,#"5^-T(-%"35=ZV&gt;KZ(.B/4:KBH?9CQW;RGC;H/,-G?\MA/\H&amp;&lt;W[G.JK)O,C=06KBMK 3?\HG?,EA(!-"V)("4&gt;K!_\C&gt;4"KB@9X&gt;M?8=AW]Z\G;CQ;;D8,;&gt;0%M&gt;6&lt;H&gt;2%@5O,K-Z@E^5Q8W8-#"46=W/\B"?\L";^4+;$H&gt;03EAW-;_G=5"6&gt;K"ZFK+X.''''+.''5_]B5_\G=0"K=P#;H'',U"7]&amp;US!]?0@3UK3?@G%S&gt;O&lt;@E*-D?0@X+@"!"9&amp;K%XZK]  N=7K87?!DEUDJ*/\IET"KV7I)UP#7G?^N4O.N//, VO,I//, VD!F3/35A?\ &gt;OW7B_35=2CBA*5V.''KO"0#7E^77C?\7=34(=0'';EA&lt;N=&gt;#?@0N= O&lt;BSTJ@E_??!^Y@??&gt;5P,C??:=W@O??_PU@??=&lt;Q&lt;C?@D*=PO??,AR@?0A:54C?@G%\@O&lt;@SC!@?0AP*LC?@H@EPO&lt;@!6.@??&gt;6/XC?@D&lt;.@O?? /C@G?&lt;@@K6@??&gt;,XT@U?0@8&gt;,B0???L&lt;LC??;FOPO??-TK@???Y!TC??&lt;03@O??2H@@???G0(C??=)B O&lt;@L&lt;4@?0ALNDC?@D08PO&lt;@I[6@?0@33LC?@C = A??@G&gt;E@O?&gt;#%1@ERXJ??8Y,4BJE_\L&gt;V7;CO2DA/??FL3@&gt;HS??8SL0H.K?V77CH.K&gt;H0EC/]]&gt;DO9''AW7^@+79O0.E_]9B/?&gt;\C6@??&gt;,Y(@U?0BJXT@F?0A#JPC?@C&gt;#0O&lt;@Q$3@?0A-!PC?@F0JPO??0)R@?0@;L4C??8&gt;E@A???1F8 O?=9H)@=0LF?0D\9(@D?0B"C4C?@F^Y @_?@C,3PO&lt;@F6E@???&amp;FXC??&lt;"@@O??2S6@???$'',C??&gt;XY0O??1L3@G0:3&gt;Q_89QW?@DD3MF[?@FGL3O-;G/,NA=:7???4 $3??=M=-A&gt;K???N+D#??;_-$/??3&gt;CF???\D&amp;;??&gt;X"CH/??-4NEO&lt;@D:/F??=EP-G?@I)TN(/?@F''K2H/?@AN09O&lt;@W_)D?0@K(=#?@B\E/@#??9U62@[???V=,O??=TZ@???= DS???&lt;9 O??&gt;*+@"???3GK0"???&gt;%40?0B(&lt;&amp;;???&gt;3]O&lt;@_=O8?0@5SUC?@B''#D/&lt;@P*&lt;\?0@&gt;AI2K?0A]4^0H?QNNEX/??:N0HO&lt;@AF1@?0@#Z&lt;#?@@N @???4+G*BO&lt;@@Q*:???2L";?@G3H8(/???&lt;INO&lt;@C&gt; 2A_???Z&gt;\?0@&amp;J[+???]WSO&lt;@D.R\"?&lt;@I %8BJ[?@A63L97?@BEL3_&lt;@LL3M?0@LL3O??;)G,O??7K!P??;,9I3???OL3_??X!-$??&gt;/L3L^???#9E*K????BGO?@AI3-/???30)?0@B#D(H??&gt;P50(F??&gt;N7Y''?@F&lt;6!???82I''?0@%2W''?@J5B$O&lt;@HK50?0C"=\O?@T$JOO&lt;@^@NT???@ P[?@FS&lt;[O??#W;:??&gt;T!(C??:99 O??0L3L??&gt;!L3P^C/_)?0FX[53?@%H=\AW?@G5^.O??$0JP?0@VCL3??;#OWO??$\@@???@W+#??&lt;1WCO??)((&lt;G(/??;#OWO&lt;@H&gt;$C???]VY3?@E4=X???;%0(BO&lt;@PDJP???3Y&amp;XE2/??=@^.?0@WS53??&gt;9\J(/??=+T^(/??=&amp;Q;O??7K!R???(,JS??&lt;Z+!X/??;&gt;=\X/??=0WB/&lt;@F1\J???&lt;6Y''?@CD#6@#??:PEAP[?@@V+0O??''[!R?0ACZMW??&lt;)3L/&lt;@]R8U"?&lt;@]''B$"?&lt;@Q^8T?0@7\JRK?0A]OWBK?0AH\3S??=-50/&lt;@I\3N??&gt;*&lt;3S?@AA!R@#??; .EO&lt;@C]0(A_??/I\J?0@MN.C??&gt;18T/&lt;@CS+ "?&lt;@HVOX"?&lt;@H*Y(?0@^7+''?@AXL3O&lt;@LHJO"?&lt;@N=&amp;Z"?&lt;@HVOV???&amp;3L3?@@L&amp;Y/??4VEHBO&lt;A,,OX??:&gt;0)@U=7(JC/%[==38&lt;AW?@J)&amp; O\Q??8,3LC;D_&lt;@,L3@?OC7C@[?@Q%50O&lt;@:E1@E_&lt;A@$J@?0A\ @C??/6= O&lt;@^!&amp;@?0DV&gt;0C?@E2@@O?&gt;^ T@??7$"$C?@YML0O&lt;@WH@@??;[,4@F?0GL/XC?@[;50AW;@??=9H)@?0E1P(C?@E2@@O?&gt;?[6@A ;7:__C&gt;Q&lt;U=1''Y?@D==17&lt;C.(F&gt;E V=7(JC/[85O @E]PJC/\K=3;77AV%B ;;;O]D?0E+ @@U??:C @C7G?  A?\UNZ-HG&amp;2KX(AY]0";&gt;1LE*)/?@A[2@IS?@@$N@H. "8-0"???;8@@B@;]=7S7"AT8B ;Q&gt;@C:RQVDB%,D!P+7G_6FER(J=737DQT+B 8$=:S8.QUUB/[;^!UVB 9D&gt;BC8L1W;4?,Q==O;N_/&gt;&gt;1G8%O%-&gt;2(FC,K9@_!EE_\HB :C=9_8;AW7BP(NI__/=18U=0(JC''[7;O!9E_\KB ;7ZO&lt;@JH@@?0EK @@U&gt;6+7M/,]=7C7\O\6=177Z!:K5''3CZLTH7ND:53&lt;;AT&gt;&lt;I:()"0#;Z/,:&gt;1+;[Q?8X&gt;DU7C?T6@VW]II*"6,H&gt;00&amp;N?,-&gt;24&amp;6?\M=0;/6/\/G,^K0XB7]P N&gt;Y#7R?_NE_&lt;@?3M@=1G??0CL0O\9?0D!&amp;XC7D_?&gt;Y&amp;Z@?V77C@[?@$.= O&lt;@[L_@E_&lt;@H8T@??&gt;SNDC?@GG50H/??4VEPO&lt;BF7W@??&gt;EJPBK??=@U0C??^RJPO&lt;@\S!@"?&lt;@IDJ@?0A,1&lt;@E?0B++$C?@E2@@AW??7M&amp;PH/?@DYL0O&lt;@4.Y@A_&lt;BJ?X@??=7F\@U?0B&amp; @C?@P .@O??_35@"???''M\@??=NY(C??:EG0O&lt;@,Y&amp;@??=&lt;Q&lt;BK?0B$Q&lt;C??/P^0O??U\3@??;0Z8C?@HCB H/?@F[\PO&lt;@.3!@?0A''&amp;XC??4SG0O&lt;@ ;!@"0TN=0/7YO]0E_,!A)7;J/\NKO]D"0#7Y/\#=2?7]?]1&gt;2S7M_-YG2&amp;KRV!SNP!9:3FK"?0^=;"K"?\Q&gt;3*KAY#7G/\[(;BKBO\M8"G;J/,1O"3;D1&lt;#"5+B],$HC%/8DQ[7J/%-?H_;D__1A 9[&gt;AG9[QW&lt;&lt;O/1&gt;1G8!?%-A0:S=9G8W1W;^?1_=32K=1?75/\)&gt;=[7N8/;!/!_"?^"&gt;2*KAP:U=4S77QVUA8.6$:&amp;!-P#7BO,$ASIN[6BKP0 .4$76=-7T:Q:K,G6/[:0H[:4E"X6G$HVS=0''H,&lt;BK:X/7E"3!&gt;2JKQ8-]^S)NBE7C&gt;3VK=0?;K U#WWD:"S&lt;H^0_7?\DU&gt;137O0V:+;V^*(/A";=R"4&gt;KZ''-.\G$HM_-HE[5L$HNK\ !/\7])Y7Z ,A:K+)&gt;(,:DHC/#[&gt;$C9W1W7]P+??X".EO?&gt;Z&lt;^.E_&lt;@CUG,??&gt;SNEK?@GD8TH/??; 8UO&lt;BF7WD??=?&gt;.JK??;R4_#??^RJOO&lt;@\S!E"?&lt;@N?B#?0A,1:8E?0B&gt;:8[?@E2@@AW??7P#58/?@GG50?&lt;@4V.FA_&lt;A;%G*??;8%G(U"???0)Q:,O??77B%?0AXC53??&gt;8=\@#?@D"EGO??&lt;SL4A_&lt;@P5\P???2+!W?@AU50O??&lt;SL3"???7S!RBO??3&amp;.F???NZ8#??==0,O??,0(&lt;??&gt;&lt;*OS??=&amp;EHO&lt;@FF-8?0@*K!T^"?&lt;@@;L3?0@@/WC?@@Z(=/&lt;@@K50?0@F*OXH??&gt;S=\PF???=1:3???D3L????4JP???8&amp;Y&amp;K???5(=\H???AF[S?@B_51O??+Q:??0B_FY#?@L+B%O&lt;@L%G(?0BEL1K?@D?+!!:K?0@8&gt;.G??=]L4O&lt;@I''+!??&gt;4!Q#?@@;L3@#??:=WDO&lt;@DD^0A_??.''B ?0@NC53??&gt;0EHO&lt;@B=\J"?&lt;@GA:8BO&lt;@K50(?0@)\JS?@A6Y&amp;/&lt;@P5\L?0@&gt;9&amp;#?@BKG*O??:((&gt;???XB#8^"????D3L????P)C???%WB/???4JP???9U0(H?0A''&amp;Y F?0@D\J#?@AR8T/&lt;@@W+ ?0@JWB*K?0@N3L0H?0AO:8[??;,.FO&lt;@K50*??&gt;JU0#??62=\O??)O+ ??&gt;''L3K??9F=\A8N&gt;4W76O&lt;AR9&amp;@E_??@L3@I?&lt;@?3M@&gt;1#??-9&amp; B_?@Y&amp;Y O&lt;BQ3M@&gt;00FC/]&amp;&gt;K_7,1U9B+/8PAU?B/2+&gt;2HU_P(N=6[8-?^3EW$J&gt;6?7/QU8B/^==1\U_0(N=6[92/ 3E_]''B/-7&gt;@,U_0+&lt;*?,"EW4JC/]&amp;==387AU8B/^_=1\U_0+7HO/@E_]''B ;7Y*G831U9B/#Q=2PU_0+7HO/@E_]''B ;7Y/_"&gt;E U @+;H]XU P+8I.8U_0+7HO/@E_]''B ;7Y/"[=58U=6 J=3NWE_])B##8"QU?B/2+&gt;2HU_P(N=6[73O%YE_]''B/^/7AU?B/,7?ITU=6 J=3NWE_])B ;7Y/'']==LU=6,J&gt;2Z;E_],B(+;OQW7[P((&gt;I$U_0+&lt;*?,"EW4JC/]&amp;(_#OEW$J&gt;MG7IAU?B/\3?B@U=6,J&gt;2Z;E_],B(+;OQW7[P(N=6[73O%YE_]''B/^/7AU?B/\3?B@U=6,J&gt;2Z;E_],B(+;OQW7[P(N=6[79_%YE_]*B/^V41U?B/\3?B@U=6,J&gt;2Z;E_],B(+;OQW7[P(N=6[7I?#QEW4J&gt;K?7H!U?B ;&lt;D_])&gt;V4UM (NIO!?&gt;V4UM +;*/%-ESXJC/]C&gt;YW9[QT6B/.*&gt;V4UM +;*/%-ESXJC/^2&gt;S\VQ0+;8?%-ESXJC)O8HQYGB ;7,/(D&gt;V4UM +&lt;]1YGB ;82A0D!/%-ESXJ&gt;:+9[QT6B/17E$\JC/''^G@V\&gt;V4UM +;*/%-ESXJ&gt;:+9[QT6B/17E$\JC/^2&gt;T78BAUIB/5"&gt;V4UM (N$? 7&gt;@ URP(N=;K:AO%-ESXJ?FG8BAUIB ;82A0D!/%-ESXJ&gt;:+9[QT6B/1!&gt;@ URP(NV?]:&gt;V4UNP(N2/"/&gt;GXUK0(N2- VL@+7J/30ESDJC/]B=6383AT:B ;&lt;D_]#&gt;K@UV0+9[PQ\B 8$&gt;G''8,AU[B/%-AE0J&gt;:)KEU,J&gt;V4DW@(N=4O9#?"0EU,J&gt;V4DW@+;*$,UV0+9[PQ\B/.*R1U[B/%-AE0JC/]C&gt;P V[@+;)/"0EU,J&gt;V4DW@(NIO_2E&amp;0JC/]C&gt;X?8,AU[B/%-AE0J?CG&lt;&lt;AU,B ;8V_*%&gt;K@UV0+9[PQ\B/.*R1U[B/%-AE0J?CG&lt;&lt;AU,B ;9[10EI?"0EU,J&gt;V4DW@+;*$,UV0+9[PQ\B/.*R1U[B/%-AE0J?CG&lt;&lt;AU,B ;7P?$M=:PU[ +&lt;&lt;/"0EU,J&gt;V4DW@(NIO_7=:PU[ (N=4O9#?"0EU,J&gt;V4DW@+&lt;KO/ EV8JC/!Y&gt;*W8,AU[B/%-AE0J&gt;:)KEU,J&gt;V4DW@+&lt;KO/ EV8JC/0Q=6O9[QU_B 8$=;S8RAURB 9[=9Q4EULJ*/![EUPJC/]:1?"0EV@JC/_E&gt;D+8G!W7^0(N=&lt;W9FO^(E_]&lt;B ;71_"%4QW7_P(N=&lt;W75O]PE_]&gt;B ;71_!J&gt;A8U?BO;JH-/&gt;BO;JH/4W9+7Q(-]^8,#&gt;BO7JH.''?BO7JH,"-G7;PH.6&amp; TN=&lt;W75O]PE_\(?BN''"?\(&gt;BL""71_"?]F&amp;573"?,(&gt;BM/"?,(?BO4"9&amp;4"?-@_KXEC/_E?0H5TDC?@W''#PAW??''46PO&lt;@,W/@???,L8C??&gt;03 O&lt;@,W/@??9=M$C?@D(?PO&lt;@R#=@???+_$C?@B&amp;8@O&lt;A]7%@??:H!,C?@C0Z0O&lt;@OA+@??:IN&lt;C?@W[DPO&lt;@JPL@???,L8@EC/_E?0I384C?@IR/0AW?@KE;0O&lt;A ,''@???,L8C?@AOL O?&gt;_SY@??=N!DC?@D(?PO??-\C@?0@).@C?@ARA0O?&gt;"H[@??:H!,C?@C0Z0O??0&gt;U@?0E61DC?@W[DPO??;CM@???V?P@EC/_E?0FN+&lt;C?@EX\0AW?@XKI0O??S(Q@?0@S3HC?@AOL O??S(Q@?0FB2\C??;W@0O??-\C@?0@T \C??=YH@O?&gt;"H[@?0E7^TC??&lt;O%PO??0&gt;U@?0E61DC??($;0O??5/4@?0@S3H@EC/_E?0EPGLC?@S-PPAW??4:DPO?&gt;_SY@?0@S3HC??&gt;03 O&lt;A ,''@?0B1^&lt;C??;W@0O&lt;@R#=@???VR@C??&gt;-&gt;PO&lt;A]7%@?0E7^TC??&lt;O%PO&lt;@OA+@??:IN&lt;C??($;0O&lt;@D&lt;2@?0@)@0@EC/_E&gt;D+8G!W&lt;H?,("6?8H?,("?Q_&amp;/]-"?,I&gt;6SUX_\ =8;7[X.K8O,="?\G=6EA-_,_&gt;8,E&gt;9.K-)(EC/_E&gt;JKQE_ #=2"K)?0#=2"KH+]&lt;&gt;7VK=0#7X$F5&gt;1?;#O-%"8,6=3VK&gt;0#;X=U!=2C7#PW7(8- _@TN=&lt;W9LO ^E_-:??&gt;*+&gt;BK?0AUTBC&lt;H?,("6?8H?,("?&lt;@UU@!=7+??:*/78/4???TCYBZ?0D/&lt;''BK"&gt;C??-COWH/?@B,0)I(EC/_E&gt;Q*;E_??*+@@=7+?@EUP@H/;JO #[8/;JO0#?0AUT@BK??&gt;*,@C;^/RK&amp;/&lt;@J?J@"??&gt;4@6@8H.K?0D/LLBZ???T34@EC/_E=;?QE_]:?0AUT@BK??&gt;*,@C8H?\(":_&lt;H?\("???*+@@&gt;7+?@EUP@H,"?0@+&lt;(A&lt;??;PCXBK"3[?@R&lt;00H/??=SOPG0EC/_E==[8MAW?@EUP@O-:??&gt;*,@BK=2#&lt;H:^K=2#8H???*+@@"?&lt;@UU@@=7(""73??=PM H/?@R?2 CZK"??&gt;4L=@_O&lt;@J3C@AP;71_!J&gt;A8U?BO;JH-/&gt;BO;JH/4???TCYJZ?0CO[1*K?0EC 5S;CH/4&gt;3/D=3/E"?O??+&lt;.&amp;O,K??&lt;.(LRK?0@+LJRZAP;71_""4QW8H?\(":_&lt;H?\("2K?@B/2 G3??3BP0H/??+1&lt;0O\L"2K7N5K;N5FKH?&lt;APMF@=0/?@ME_PH/??=SOPG0EC/_E&gt;D+8G!W&lt;H?,("6?8H?,("?S??=PM$)+?@\K2[(.K&gt;3;["8/7O(/ "?\&gt;N8.K&gt;3;??#7OWH/?@B,0)I(EC/_E&gt;Q#7*AW;JO #[8/;JO0#=H.Z?0@+&lt;(BK??8=CXC;O(.KN?\&gt;"&gt;BK=3:K"=/;O(.K?0GBLLBZ???T34@EC/_E&gt;JKRE_ #=2"K)?0#=2"KH/&lt;@J?J@_O?&gt;OP6@"8/7O#.K"?,&gt;"3ZK&gt;3;["8/7O/&lt;A0#C@"???5L=@_@TN=&lt;W75O]PE_\(?BN''"?\(&gt;BL""73??=PM H/?@\K2 O\&gt;"8/[&gt;3:KM(/;O(.KN?\&gt;"8/??#7OPG3?@B,00@TN=&lt;W75O^VE_\(?BO;V(.KN? &lt;"8/[&gt;5*K=2#8H2JK_E&gt;K=4Z[W_NK&gt;2#8H6&gt;K&gt;2#&lt;H0W4"9&amp;4"?-@_KXEC/_E&gt;JK7#!W7_P(3&gt;2@U=7,JC/_E&gt;H#7TAW7_ +;HNLU=70JC/_E&gt;D+84!W7^0+#?M U=74JC/_E&gt;D+7Z!W7^0+8Y@S7^0(N=&lt;W8YO^(E_]&lt;B/!$E/]&lt;B ;71_""=88U=74J?FPD=74JC/_E&gt;H#7TAW7_ +&lt;YA[7_ (N2/]8&gt;M(UV?\''&gt;2:K=9C=[_\:"?^W&gt;V7;KX-Z&gt;2\E&gt;73;DQW7T(,,&gt;;DEC"S8&amp;?_%E_].S_\=&gt;50^XH/;IHM1&gt;30H=1XF''["#''["K08.3YY!K$V6K"89@W;%$''EFKBO,NM27;GO,.:2G7HQ?_"=V2-L6/1I+W"?\NBO.K''1WL-5T=PE=VR45]0-_Y-[;LG0:S&gt;E+73!W;T_0_&gt;1G8-_%-?KW;D_ _&gt;3''&lt;G?,QA0;Q$1[9WX/;&amp;O%-&gt;5VKAT3&lt;&lt;AW7L?!==3S&lt;_PTN4_%%&gt;V4U?U6K=9#=[_]U"0WJ&gt;O@U&gt;3O&lt;__,4&gt;G4EC/]Y0?%-EX/??9$N&amp;O&lt;AXS&gt;&gt;??:"81K??(?@P/?&gt;!@? "???(?97&gt;UNK"?\M??8G162K?0E G_S?@VB09/?&gt;+D4P?0EHS1+?@];M$H.K=08EC$C8-O^7E_2L&gt;0/8#@XN=6[9A_%_EW&lt;JC$+?@^;K@/&lt;C% 6PE_?? N&gt;^??4]],#??4]6!?&lt;AY/4.??=O3-''??:-R\O&lt;@H=,=??&gt;9163?@FB:!/&lt;@K=/(?0DJ+L3?? \&amp;-O&lt;@)C]L?0OST: EC%#?@V-"4O&lt;@@=R@E_&lt;BD+Y@A?&lt;@@Q64?0A%=83?@B-(\/&lt;@E764?0@\T^2K?0@G''#RK?0@HO_S???:_OO&lt;@E#&amp;Z???8&gt;6PH?0@NEO;???.MTO&lt;@D==&lt;?0A-=(#???N#UO&lt;@@)(\A_??;LLT?0@DCL3??&gt;82&lt;O&lt;@@3* ???.WF2KBO??$NHL??&gt;]?J3??:)^^O?? ))\G??=0@\,A???)6FI???]..G??&gt;F^]???36Y&amp;G/??=6!3"???=+.&amp;?0@BV:[???S[:O&lt;@AJQZBO??;''H-?0@GTFK???5R&lt;/??#OH,?0@I*KS???4=\PW?@@^$V/???]D''?0@HSP;???:.6_&lt;@B*CE"0#?@EQ\Z?&lt;@#,.D?0@3(X''?@LX2=1&lt;N&gt;0O7C;&lt;UYD+,T&lt;?7C_^1"8/7B?-."&lt;?7C_\*"8/7B3^K+, )04+;B_.$"8/;B0W7XX-G&gt;07;GX.K&gt;0,EC$C8*-0U?G40&gt;G4F&gt;Q4D?G7;R(/;CO!=&gt;4*K=0O&lt;D/\W&gt;AK7FPTNPO"*7AW&lt;_SC8_P[&lt;__\9ER JC/,3&gt;B#7WAW;AO/F=0P3&gt;538]O]\A0;;B/&lt;AM]''\&gt;W0U??&gt;)#-"K??&lt;0%43&lt;E_&lt;@36"4?AW?@EY1JH/?@L=(-O UA_?&gt;Y/&gt;&gt;&amp;AW?@I=09/&lt;AF9R&lt;?0B^T"3??.Q+QO??XZ7T??;$Z30EC/]]&gt;DO9''AW7^@+79O0.E_]9B ;7?_"S&gt;[@U=7LJ&gt;EC&lt;"AW7]@(N=93?@*?@@O#:E_&lt;@JH@@???S0@@E?0@U0@C??&gt;#@@O&lt;@LL@@???A0@BK??&gt;9 @BK??&lt;9P@C;Y/??#,@@??&gt;+P@A!BO&lt;@I&lt;@@A?&lt;@E\@@&amp;/&lt;@DT@@''_&lt;@OL@@''P#??&gt;)@@O&lt;@JT@@A_&lt;@JT@@&amp;/&lt;@!X@@?0ADP@BK?0BQ @BK=1;??8#@@O&lt;@Q(@@???K @B $_&lt;@CX@@?0@C0@BT?0@BP@C?@@O@@O??04@@+???8H@@?0@Y @C??=O@@O&lt;@N(@@???$P@C??&gt;Q@@O??=$@@???] @C??9.@@O??1$@@BO&lt;@CL@@\@W??=C@@O??:&lt;@@&gt;01C"???]8@@"???]8@@?0A50@C??;&amp;@@O&lt;@L&lt;@@???+0@C???S@@O??:$@@???8 @C???G@@O???D@@???9P@C?@B7@@O??&lt;D@@$_&lt;@@$@@?0@00@C??=*@@@#??=!@@@_??;#@@O&lt;@H4@@??&lt;_0@C?@F6@@H/?@ME@@H/M?0@-0@CJ?0@X0@B&amp;BO&lt;@JH@@?0@,P@@E??=#P@C??=^@@O??0(@@??&gt;R @BKIX-$$_??-D@@?0AGP@@%BM3;@0W?@A)@@FS?@@6@@F^K???_0@@H?0A&lt; @C.A_&lt;@DH@@???; @C?@@?@@HW?@@9@@O??&gt;H@@??&gt;50@C??&gt;W@@O??6(@@???] @BKXP#??&gt;Z@@O&lt;@D8@@???/ @C?@A#@@I^5%O&lt;@H4@@G(/?@@^@@O???\@@%O??&gt;,@@?0@J @C?@AQ@@O&lt;@CL@@?0@S @C?@@[@@O&lt;@DT@@?0@A @@H???D0@@G???/ @C???M@@O??=&lt;@@???2 @BK???2 @@H???40@C?@@*@@E;?@C^@@LG?@@6@@K#?@@-@@A:K?0@NP@C???_@@O&lt;@CX@@???0P@C?@@3@@@#?@C*@@@_?@AE@@O???(@@?0@R0@C???%@@O&lt;@ED@@???3P@C???.@@O??=$@@???=0@BB"???&gt;H@@BO??9(@@?0@WP@C??&gt;2@@J''?@A5@@I+?@@9@@O&lt;@F&lt;@@G(.5???Z @C?@BJ@@O??-\@@?0@ZP@C?@@9@@O&lt;@A8@@?0@O0@BQ?0@P @C?@@R@@@#?@G2@@B E"?&lt;@HD@@?0@M @B/?0@ZP@B2BO&lt;@TD@@?0A.P@@E3_&lt;@XL@@?0@KP@C?@D5@@H/?@B.@@H/4??&gt;&gt;0@C?@F-@@O,-?0@''0@@H&gt;1W??&gt;Q@@AW?@BS@@O??&lt;D@@?0AR @AX"2"K???\0@C??&gt;]@@O??-D@@??&gt;]0@C??&lt;"@@O??:$@@4O??=L@@.8/?@A/@@H/?@BV@@O&lt;@B4@@?0AB0@C?@A&amp;@@O&lt;@T4@@BO??NT@@???=0@@U?0@J @C??&gt;B@@J[??:9@@H/??;Q@@H-$???40@C??=F@@O??:$@@U_??6(@@?0@P @@:?0@1 @BK;(/?@FI@@M3?@CI@@J2ZB@9*&gt;MG?@BSG AW7_0(N+)+8/1VK??&lt;6&gt;!3?@NTARO??3T\,?0A(3=;??''C%NO&lt;@WH/H?0E?Y9S?@N6#D/&lt;@L%[J"?&lt;@71,""?&lt;@V[98??&gt;3/B#?@D%A"O??)DOX"???.:@@"???0FLR???W;13??=?%(/??/WK0???^ZCK?@DJ[:O??0 CD?0@(@ 3??;*.U(/??:H-_(/??;[R /??-''O8"???(H0HBO\;:!W?@GC0HH/???MS]/,*?0AA/F*K2(/??&gt;T:8/\&amp;?0A?1Q:K?0AFY&amp;"K?0@Q&amp;Y!_"5&gt;K??=0-\K??4;$''O??!LZ(??&gt;520K??6Y\;/??0A,"?0BH^]3??3&lt;5PO&lt;@*RFH"?&lt;@ZH-D"?&lt;@N]L4+?&lt;@KB3L0X,HC$/?@$+_OO&lt;AV$S^E_??/X],?0AH%4+??6J&amp;Y/&lt;@1$0H??&gt;=(HS?@HJ,SO??4LW#??&gt;)8T#??=,L"???.6PX??&lt;3#$C??0#*_/&lt;@/D_D??&lt;[6IS?@CO''+/??*GEN?0@0@=#??:)TQ/&lt;@W Z(?0B,/8+?@I%9E/&lt;@,=98?0@+G_S?@CDDV #??-5[9/&lt;@=2Z&amp;E_&lt;@J#3.??&gt;=+UC?@E$CUO??"DT ?0@54";??&lt;I5PO??/%H,??&gt;36IK??;KHL/??%1L4???U+L3??;17Q_??5!F*?0ADA;W??&lt;A*_?&lt;@UN#5??&gt;1Z4S?@E?D7_&lt;@V2:X?0A-+P;?@CW%G?&lt;@RK/(?0@''J4K?@DDV2@ N=0''9G/&lt;@IJ=BE_^@B 9*?0D;&lt;BC?@F_N&amp;AW7 P+????DV/&lt;@:_.&amp;E_??7DOX??&gt;;:4S??&lt;$G+/??/4)&gt;XX/??&lt;6/F8/??=!P9_&lt;@I0''&lt;"?&lt;@L_XD"?&lt;@\9C&amp;?0BO(HO?@@)09O&lt;@R42K?0B"GB+?@DSFI/??XI&lt;&lt;?0BWSL3???K4NH/??81N&amp;H/??&lt;8K1???6EG,???X=C''??&lt;6.EH/??=.RK(/??=BGJ/&lt;@QG_N???U&amp;2K?@DAR\@#?@PEK!/?&gt;4/5BE_]?B :.&gt;IO9ZAW??&lt;J/WH/??;&lt;;YO??8JKP???ZJ8[??;HG,O??57I.?0AOU&lt;3??&lt;HH-O&lt;@G_64???A[)"K??&gt;"KW:K??&gt;64(K??;Y3&gt;H/??:BLBH/??3PI^O&lt;@8"0H???[@DK?@F.7B/?&gt;Y]&amp;F?0A\;YK?@XN&lt;0O&lt;@;R=\?0@-\JRK?0C_;52K?0AY/''#??;N&lt;JO&lt;@RTFH??&gt;$P="KB@9K?0IJ733?@U)D7!W??;6G[O&lt;@RI]J??=")&amp;[?@LYLBO??/ZBD?0BB+D3??=CE8???*^EH???[CH/??;-$FO??L89@??&lt;H:'';?@HH4$_??XPJO?0A__3/??8N9V_&lt;@O''=&gt;??&gt;I8$C?@CW0HO&lt;@Z-^T?0A&gt;)2+?@J"''\?&lt;@[ Y(?0A&gt;H5THC/\I&gt;Q;?@BR/P!W7 @+??/#0HO&lt;@^&lt;:XE_^AB/??4=-&amp;?0C41&amp;XU???^MG+??;E+@/??;"''&lt;???LW+#??91*_8,H???[F!7??&lt;6&lt;;_&lt;@I 7T?0ACQA#?@DGC5/&lt;@L)74?0@^PT#?@A"@1A??@CJINH/?@DG,"???8D(&gt;?0@.28[??="T? #?@EO)M/&lt;@@$3LE_&lt;@OT-D?0@+G#[Y?0@\-\K?@A951H,H?0@^CD#?@B4R\O??7@W$???@=O;??;0U _??1$$8???[&amp;IO??&gt;JM4A???=72\H/??;N"CO&lt;@H*EH???P-K3?@FC!2 #?@C,,#O&lt;@13@"EX/??=M4^/??6!:8???V^Y+??&lt;R@@FC??:&amp;@@L[???T^.O&lt;@M,\,"?&lt;@C4+@BO&lt;@G% P?0@ RKS?@C\&lt;[O&lt;@PI"T?0A@NY+?@BF''+/??2;1(???^+10^C//Z=:''^E_#7XO3AA7Z]Z9Y+"0!RUV-XU&lt;E,1L3J*+&lt;_C"S7./!''EYI/$W&gt;-Z*9):5^K] !S-\LG"&gt;^D;T;B???EIQ;?@CTP9O??(=+"?0@J;12J- #BX_3AA7Z^Z9U*"0!RUV1WU&lt;E,1L7I*+&lt;_C/\K=&lt;#89QW7;/,R"?/_AWR_Z)U("0!PT&amp;5VU,Q-1,;M*\@_"?"E?DO7JX/&lt;V U4''6&amp;UY8,HTEE-U%KE\&lt;[P3*ODG0;7B?$"&gt;B U&gt;&gt;;7CH/P=&gt;;;D W;;$,U=&gt;;;DX/;H U4''6*UZH,HTEI-U%[D[\[N3Z''@G8/8!_1C=2&amp;K?E(E]I=)%V^KBEAQ[UYR?0@9?_Q3?0@;@ 3?@DZ@@O&lt;@PX@@(&lt;P_C"S8W_^&gt;E_YI3_,GG%JKUUBJ"0"K==IG_8/=U U.%7"&amp;;O]5=1;7VA;;JH U&gt;2L.&gt;0=! (*R$Q;7.0^0/,C@*YY4&gt;0D^C"S8L_-^EX/9^?-+MH/7%$]&gt;"?61=6/$"?-!A__7AO,''Q(/7_O\''4@TNIO! 5QVK=25M\(/7^\&amp;$"?\-SWJK=4YE_H/;T/,TVX/7STU;"?-RW7:K&gt;2(E-92K&gt;79__X/;J+^["?,/4Y.K=3O7EK"K&gt;2''Q&amp;(/7M@UE=1HU&gt;1QZ"?]&gt;=1R8AP;9+/ J&gt;GTUX*Q_&amp;56R_ZZH,8.+"96L&amp;(.V3H.,Y;)7"G*J^H-9"7BN[891BO,-?@@U!(*F"8VKWX-V)5:Y(LB&lt;0&lt;:\*GZ0_[BEQUBKYXE.BO )&gt;14U[#9-^&amp;YSYY-57GKM+JV1-JF4''U"[Z\E''BO\Q=:DU:;GN[,8&lt;WH@"!W6"AV#7=1VF#HZK!8-S"6)6ZW^N''H2Z"9^K)8V]!:XH=2SJAX9=#G:K_8-.!WNKZ(.F#HZK! #&lt;/O\,EW,F!6.J\(-9"6.P[)Q3BHDFJX-Z F)Z*TN&lt;S=A\SG5PRGYH/XC@ZL"K$(.R"9FL\TM=V8-3BH-?#HFM N.M3(+_09]5%$*X\P"*YPVW_I^A%8\H6.&lt;E%)"M/Y&gt;S*7#/_NZKBI4F]&lt;&amp;N7V.&gt;=1^W)YB((P!G6PU/*&amp;&gt;]\H?C0L^7"=2K%H*Z"):A"XJJ X-."4"_[(-?"7&gt;I H\H"9JJ$8.T":FR.8.!":NF''(FYWGAD VA(_:9D;FV(TGI UWD9BF:\TKMM"0#7.$XU":&amp;C)W2^!8^I!(.E"8ZP_YM5BH&amp;@!E E!&amp;6H]X-&gt;"8NL!H2EBF]2AW6A!G:K^8RM 9NA&amp;W.#!Y"K0(/6,-_X.]08-C6KP8-8"G"F]0!+R0U4,GN ]IFJ%X.U"9ZK-YN*":8H=5'';&gt;AU0"6:S[).&amp;))&amp;!"9,H&amp;@Z$":RR(9$H5LHE*JF%&amp;ZNO!)BC#(FK!X-;!7FEBC!OAV15[HA."0"HA''V"]I]4#[OT5J?4"0"UA+ZI,G"7"9BK$H.Q#H:B#HFK X/;A?-UK5FKBO/&lt;:1T''0&amp;&gt;)TX-;"7.H^8VU!*BF*XWS_*A]5''ZK"X*I"8"K YB@%G&lt;H(7DE^8E6!''VKH8/;J_\B]ON$)[ZX1X/7F(/WSJ!"!'']Z!8M3BO^OP1VK^Z*O"62K\7=''W(-*"86%](-&lt;"71-ZX-)"7^X!*TH#P^K%)Z!"9^K''E"&amp;":ZK.K1;'':JX''X[E0(.-"994$WZTY^B""4&lt;H"7M_](-?BH7;A1VT"998)6R![+](3VU/.?,X:H./"9RZ)H:OBH"(A\JF.&amp;62T-H"[WJ&amp;M@ ''$ W;FI]B1''37JI&amp;I&amp;H*W"9"K%H6R"0#;Z]8U"(BJ X.C"7&amp;M_YBB[5RE!8A*_U=]\XA08ZBM;K_B&amp;H^W")&amp;KBJ6K(9RW''0"GA8-G]5!"Z@!^Y0UXXEE6R8-8"7*M^(8H%P^K;L#)":N]0.Z)*9@H3O\BEX"K!X2C#X!##IE,^)5&lt;%X&amp;K^(.E"HBF^0"MA)RK'').P"0"S#(E5G7&lt;G''Y&amp;Z$YZK$H.P"YFF#INQ$I&amp;MBJ&amp;NAXZO"YBK$(.S#)ZR&amp; "V) VF#X"L"H-&lt;"8M\YX"E!(NH 8,H V*T+ZZ &amp;[P_%@ZU"9M[#8.Z%YNU"9ZK(F2&amp;"8=7 (BG!(.D"8FQ_)"C]8)&lt;_X,HC//G=4S7(!W7  ).&gt;2@U=8LJC/])0? @E_^DB/\S11V&amp;=0_28O\O"?\O"?H6)/,GBO,LAGC;A2P6&gt;0&gt;K&gt;0&gt;KINA0=0\HC/])0? @E_^DB/_T=9DU&gt;5W;UP^!:-_W:*DH=00V:''WWO:D,BO-UA//MAO]U=5TG]R0?O215BO,LE"2!O=]5: #7UPXN2O^4&gt;@@U&gt;63&lt;@O\#"?\%=8#7I_.H=2NK&gt;638@O],&gt;@C&lt;5H,E=;S;"AUA=1C7JH,EC,#8QO @E_],&gt;@C;H8/;I_.H&gt;2W7"O,#"?],?@C;[O0@&gt;MRKA_.4=8 U5_,P&gt;2"KAP;H&gt;DS8@AW7[O @?MRK=63&lt;@O-,?@C85H,E&gt;;S7"AWU&gt;1C;JH,E5_ @ETG7DO\("0TN$O \E/^EB/,V&gt;WXU=8XJ&gt;A@V=8XJC.#8CO"=E_]\?K77EH/;''_%,&gt;1NK&gt;93=[O\T"0TN:O L=4LU&gt;538/_,T"?^]?V37D8/7''O%,&gt;1RKAP;H&gt;Q39[AW&lt;5O5,&gt;MS7CO1\=438WO\L?E37SO!\A ;H41[85O%,?MS;CO!\&gt;43&lt;WO,L&gt;E3;SO1\A 9L0_ 7E_,L&gt;G37C@_;"O_IE_^BB&amp;;;HAW7 0*(&gt;=HU=8HJ[/, E_^CB :2&gt;A;9[AW;1CG71O-&lt;&gt;037AO1&lt;&gt;0S;CO]&lt;=&lt;S%&gt;&lt;S7_O\LA?,D&gt;G37AO\LA ;^&gt;C_8=AW;]?.&amp;"?^&amp;A_\R&gt;&lt; U=8/;0NG_&gt;9O72/^&amp;=&gt;K&lt;:(.K?V0EC#[7N/%6E_^FB/3DAO^FB/^X=:0U=8XJC-;8M?\LE_-7=:XF=1J-E_.J=&lt;BK?V38:(/;)/_"=9O72#W_AP;7Z_!H^1W7Y/\&gt;=3;7Y/]&amp;&gt;3;7O/-&amp;&gt;6[;O/,&gt;&gt;6[;Y/\&gt;&gt;3;7Y!=O=1LU&gt;0^&amp;M/JK=0&gt;K=0? &lt;/\G) #7CA[7A7C IH/;C8/;C3X$&gt;0]0B@;7Z_!H&lt;1UY"52YX:LH=?/7&gt;0V#X9%\"5&amp;K&gt;2S;BO,H&gt;2RKBO-3V1WJW-!07(/7Y(/7O/\&gt;"?]&amp;"=906E;JBK&amp;9M.A]WPUL.C:&amp;NH/;Y(/;O/,&gt;"?-&amp;"3"&amp;O+!LBE5]8CXE./]-EWN3_[*K/X/7IO\H=0#7IH.=";)=,7LHC///=3C9 AW7!0+&lt;;@S7!0+7W@S7!0+7W@S7!0(N2O_&lt;=8 U=2W;"O\#"?-,&gt;@C7[O @&gt;2NK?DW=[O\#"0TN,O]HE/_D=&gt;S;1O\L&gt;C3;^O_D&gt;03;1O-8?C0GC,#S&gt;V0U=63&lt;@O-,?@C7H8/7I_^H=2W;"O\#"?-,&gt;@C7[O @&gt;2NKM/,#"?\#&gt;02K"?,#M/\#AP9@=2[7_AW7! +70@S7! +7.O/@E_^FB/_@AO^FB ;^41[8:/\L?GJ%A/!2&gt;M+&lt;:(,E=&gt;?;CAW;]?.&amp;"?^&amp;AP;7G_\(&gt;E8U=8XJ=88V=8XJ=88V=8XJC%78''? 6E_.U:O^5=FK7AO1\&gt;3"KH/^WK_.WKX, &gt;E3;NKS7A_.5=O^U:PTN&amp;O$DE/\L&gt;7#8=O,L?OS;^O,LA0;7^\_9_AW;C@_7IO\H&gt;0#;IO,$&gt;0#;BO,$G?,LA?]&amp;=3;7O/]&amp;=6[;O/\&gt;&gt;6X_&gt;YS=#AW7C@_;IO,H=0#7IO\$=0#7BO\$G?\LA?-&amp;&gt;3;;O/-&amp;&gt;6[7O/,&gt;=6X_C/]E&gt;FO8KQT1L^TG=6[&lt;KQW7V?][=03;V&gt;W7V?\L&gt;5/7V?,L&gt;5,1=5/;CO-[A?-[&gt;037V3G;V?,L=5/;V?\L=5/%&gt;5,FC/,[=4@V"?]Q=4#7RH/&lt;A_\L"8/9[O,L"8/;T_-H&gt;4"K&gt;@W;CH.K?V0EC,#7UO\LE_!&lt;&gt;E37CO3T?V385O\LA0;;&gt;?]&amp;E/^EB ;7Q_&amp;"==LU&gt;&lt;S%=&lt;S7CO/D=5/;CO-[&gt;&lt;S;CO_DL_/D&gt;0371@[;V?\L=5/71@\N&gt;?/7Y![7!P+GT1W7! (N1/!F&gt;E(UW?,@A^M:1E:KRP!]YT_;G/,JT]&amp;5G(/Y3K3V/P#76/]-"?\B?MVK"?,L=?:K&gt;7S;IPT6UD4;"2LH&gt;1;7ABW7SO]L=0S*=1&lt;^"?\)&gt;0WI&gt;0B$B@;;(?]V=:HU=8HJ[/, E_^CB*#8=AW7  ).&gt;2@U=8LJC/])0? @E_^DB/\LE/^HB ;7Z_$''01WHS.C S, E.L&amp;&amp;58/ BO] &gt;3#7QO-,&gt;6C;QO,8&gt;63;XO\8&gt;4S7[A;]"=&amp;&amp;2+ HM^HUX''I\_U*KBO,*&gt;0K7C?\]=2+7C?\B=177J/\B&gt;0?;GQ&gt;KVG5\\&amp;PH&gt;4_7Q3\7AP:0&gt;I#9[AW;1O/$=&lt;S;CO0&lt;=7#;1O\L=&lt;S7^O &lt;A0;;&lt;?\.&gt;WXU=8XJ?LPD=8XJ=:0D=8XJC''#7J/%6E_^FB/3DAO^FB/\&gt;=:0U=8XJ=3;7+AW7! +&lt;1@S7! (N=6''C&gt;@@U=8PJ=00V=8 J=9#)E_^FB ;7Z_''D&gt;@@U"&gt;A055;IBL#HM.ANS UL.C6&amp;NX,H&gt;63;NO-D&gt;6C;[O]D&gt;3#7XO],=3#7QO] G?/&amp;XQW7Q?]GAZQ$&amp;U2KV@#;G_,B&gt;0?;J/,]&gt;0?7@/\*=177@/\O=2(^/H.:_[Q2BO-G&gt;4\EC/K8&amp;O\4E_^IB*_7JQT9RT$8G8/??&gt;3UO8;??&gt;4*0YE;&gt;1&amp;ZJ?\G"?\T"?\^=OS7DI*E^(!9"7 HNL5I7]?M3];7H_-@+#W;XO-D&gt;3#;[O- =3#;QO],8_]@+/\!7$''MM19/=9\U=8$JC/-?=:PV=&lt;S-=00)=&lt;S;CO/DJ_,L;_/DA0;H4?%,E_],?@C;[O0@=2NK=2W7"O\%&gt;8#7H8/;[O @=638@O,#"?,%&gt;8#;I_^HAP;2&gt;I#83AW7"P*''&gt;9\UNT%INA&gt;K]X9;$W/;AI 67''K1BMYG=03O6O\LO,?;CD]@A*S7@N_X=I"E^(!9"7 HNL5I7]?M3];7H_-@+#W;XO-D&gt;3#;[O- =3#;QO],8_]@+/\!7$''MM19/&gt;2$U=8$JC,#9GO%,E_3T?V385O\L?E37SO\PJ_\L;_\D=03;AN7;C@X)&gt;1C7SO!\A0:==?[8 AW7GO0H&gt;:NKA_]F&gt;OPUM(/;''O5,&gt;O&amp;KAP;H=5S7CAW8=O,L?V385O%,&gt;03&lt;=@\N&gt;0*$&gt;FTU=:7;V_.&amp;&gt;5SPJO 3=;_;+_]Y=:[7UD[.AP;7O_!/E/\;A?]F]X3;AH-*BO\LA(/D__]!&gt;;F%BO\,A?^3)I_7Y8.?BO,LA(-3"O,N&gt;4Q5BO\&lt;&gt;03;O@_;RJFJ=02K)P#;C@ZKT9'';X?^3\ #;J0_;-WI?&gt;6BKS0#7C@ZK+9C?@GB@@O]D?0@S @@H&gt;30GC/-!=5PV"?!15O,E=2NK&gt;8C8@B^K"?5,AP;7O]371AW7)''0F&gt;;U2_?-$"5LH=00F":"S=0/7PY&lt;H&gt;337CO\;A?]F]X3;BX-/BO\LA(/C__]"&gt;;F%BI/7)O\L&gt;:R[A?^3)I_7X8/CBO,LA(-.!_,I&gt;4E5BO\&lt;&gt;03;O@_;RJFJ=0*K)0#;C@ZKT9'';X?^3\ !;&gt;:XGC/-E=5S82AW7NO,L&gt;;C79/^0&gt;03;N@\N&gt;=+7-/&lt;AH7+"E_^JB/&lt;@;;&amp;ZAO^JB ;;6/\K91VBB ;&lt;D?])=2XUHP+8''@P!B ;;4_^8&gt;B&lt;U&gt;8[;B?^FA/,MAO.F&gt;0/7! XN?BW7V/&amp;VE_,^&gt;1XF,?/%08.5=&gt;TEC/0%=5+9%!W;G/,VA+O;Q,NK-_]FAP;;0?&amp;4E_\AB ;;)D&lt;U=0HJC/2^&gt;RLU=0@JC/,R&gt;BK9^1U1B/,)=08U\P+7,O\NEWDJ?C/7C!U1B/ HN!U[B/.1&gt;K@UV0(N?RK;@''\U=8,JC/4^?@G;OQV\&amp;IN$G/][=1@?T?,#A$E7QGX_"5J6_K!:*''NCH_\M";^K)ZRS/''N@](Y9"5VK K.H&amp; #7D,;;UPY,!)2VG0;=H/,H&gt;7HU=5$.&gt;4&lt;G!FE7\6.D\YL7.(.-";CK^8.+BI):$6!HZV=TG)(9=C''Z"0#L8*G7C1&lt;N]?]T=2DU^H-[(4B:BGT#A\5$+6;I"&lt;ZK,ZZ\0IJ"#;*K40#1&gt;9+7AO"$=1C7A_4*&gt;0S8O/,0&gt;6#;R@Y""8A&lt;G ;=H_.O?A@U7K7G2!?7_34!&gt;2F[A:F@%''U TE)"\9)?*!:^A)  ''D_7EH,HN_]CE_\[W Y&amp;^W%''WF&amp;\7!8N?RC;$//]EV*KWJAP-Z^7)]S7WX,H&amp;/\HOU\FTXU! 7FBPGIMR''1@,$O7FE&gt;&lt;"0#"/&lt;V&amp;&amp;XRR_!= "81]P8,HC/4 &gt;;K&lt;GQW)2[_PG8/PW*15&amp;KV.%ZF 6@ :A''9_\5AR"7ZKU9Y0"0!"]''91Z99;,!&gt;S"9RK(YDH(X&lt;E$(2R"9BKBLSD[5U#PXQ9G42KT;]("0!&lt; 8V@Y.AT=!&lt;N?Q?;9RLUSXQ@U(,&lt;BC69R^@^40]&lt;$FZR"&lt;XH.LV)-KWFZ&amp;D^"7.DYU9:BDLG8K#J7A&gt;K1E3SL)TH7#\GC/4"?BG;E!W;O&gt;% 4\691=NV!:==G''RK%BP7"3FK!O\%";BL%H.."9THV@ZB[X]*"6 HC/4"&gt;47;NQUF1E&gt;7^*,HU [P&gt;5[7MR"3"9:K%Y2K+H/QS)!T)  N?Q;;KO,KEY^"%H&amp;[7  *A(E !WVI"&amp;6R\X=4"0!LY49"ZY5N4Q?L":V3''[^, M &gt;,8.R":^Q":JK)C;MV*,H&gt;7S;1QW7?\?;?PXN?RG;A?,7E_\(J?,_A8U"^GI+!GBTNK*K+H.227*K*0"Z^)I(RF%0UA:ZM/T&lt;6X/7E(.!7X3JBO/]&gt;:TU=?7O&gt;?4FC/4 &gt;=QSEX/?@@ P@H3?@BC0@H2TBE4F!GBG[X-+BO,3?0AL?_Q ?0AB@ 3K+\#I''8V$ 196"9L*PX/??=/ @H/??&lt;&lt; @O&lt;@HO@!"?&lt;@"P?_BBK&lt;AAW7?,?;? XN?RC;S_,_ETZ:W:=:)P!VA)5!(V"%[-T89E"4"9:K%Y&amp;K)(/KM9U+&amp;0#;T?.1E__=3?/=A ;=G?,G"QT*A(E4!W&gt;I"&amp;6Q\X94"0 &lt;]4]9\I-V41&gt;6";BV*LZ*!]%G-H.Q":"P"9&gt;K%''&amp;^ZJTHYZTE_9M?$(BR&amp;:JO"Y2:BO.]&gt;=PU=&gt;C@&gt;&gt;@F!?-RE__ 0_/ A ;=H/,GH1W3J?,BA8U"^GI+!GNSMZ:K*8.027.K*0"Z^)M(RF%/UA:YT?L37H/7A8.0283&amp;BO/^&gt;8LU&gt;@2&lt;?@0F!?,:E_ L.?0LA ;;8O&lt;@YNT^?0K[\V U"?&lt;@C\NT???''F.K?@A$^NH/?@A2,3@"7+*"=.[E/W!:K???3R#3??&gt;&amp;#5???6+E("???;_-(BO??&gt;^-@?0@B#@#???0]-O&lt;@A-@!''LV:3KY07/,K&gt;0I&amp;P5UL2E*Z?0@IP+C?@@F"[/&lt;@BG0(?0@A=T@^C/1I=0K9U!V&lt;+KJ6-&amp;*2V%9&amp;Y55^+6Z9G0:,1?]_EX/;H.U''=0A^BOTGU*U(''X/TBOW7E:Z4=\9@TQ:KP&amp;%9UWDHHP_2-^.2"?\""&gt;4;=_,**P#''==G7AO5,&gt;0S70B&lt;G&gt;2!,O"FKJ #8\_/2E_XGSGAJ_$*KSH-J&amp;T&amp;&amp;BO,@A&lt;112W;E"&gt;ZK4:N2&amp; #;Q@S6A411R''9J"42KR)!I) #;@@_L\L%&gt;1(/ "=^#,9,H&gt;?@\AG&lt;URL![''A:O"8:L#H7?@@HINO&lt;@@ $8?0@@6&gt;[?@@JF:H/?@@K-5H/?@@?E(O??91+"?0@[[52K?0@YSQ@H.[F).;.2[%0^"???&lt;4@@???(X@C??=''0HH/??&gt;7C6@#???'',BO&lt;@@*@@???&lt;H@BR''L";3-YP0"&lt;0TET?G ;;=_]\=88U=5LJ/O!\E_\WB ;7:O$H&gt;40U=0PGSWEK_$&amp;KSH-J&amp;T"&amp;BO,FA&lt;)02W;H"&gt;FK5:R2&amp; #&lt;J_!,E[2K7YCW"0#F04!VWV!4QQ?;FH-Y8&amp;#,BF;7!QW8G Y:X???;,:X???%O+#??&gt;81ZO??&lt;\EHS5/;NHO;@(.F.(&amp;9"+\H&gt;B/7AAW7F +72?\$EW&amp;K_H5&gt;#4V]%_\L\8,H G1;S/,Z:WOI2N*#=1''F_Y:AG6:K(?,$&gt;1NKBO-"&gt;9PU6(.Q"?]&gt;"8/7AO-&gt;"8VKQH,E O]E&gt;0W2&gt;4:K&gt;5RK&gt;0#;@7?;OP &gt;&gt;0SW]P[&lt;Q?]$O/\-=1S 5_\CG(/J[LIL.&lt;*4.&lt;R+8@ N=&gt;''86O/^E_XGSWEK_$"KSH-K&amp;D"&amp;BO,@A&lt;)02W;G"=2K6*N5&amp;0#7Q@S7@@]M\D-&gt;RH-L"4.YRJXH&gt;0DG2''GI_,^K9(/S)KJYBO0I&gt;D8U=14J[/^EE_ ]A'')#???/L''C??&gt;SA2/??;,6P???2O#YOV?,8 ?,C"8Z:"[&amp;K-0#8J/\DE_\ZB/_\=2PUZH-1$7*[Y+BV7''FKBG*AZVG;F&gt;%32,''*(/\Z.(B*_Q=.":O;IO,S"0#;\?.TE]ZK%X/7%H.K=0S;%H.A"4"KAXC7Q_,E&lt;/-N"?-T"?,G&gt;0I&gt;&gt;38HO?,D5'' F?D+7YC;7K/\S8MW7@1:K2&amp;3BS[/K-[3E*M8HC/ %=637,!W7I )8=!W7I@+8#/!_E_,Z:WOJ2^&amp;"=1*9 Z-=G''&gt;K!G6I[8EGY&amp;%K"3RK^;&gt;D/X"''!I&amp;@"0!6!%-.G?,A&gt;=\U&gt;AO7AO8QA+_7I;#D=1*K*8.]"_\H"["K(Y"K)H/@&gt;0"X[X4HJ80E&gt;9.KT?-: S8HL?,D8@[&lt;N/]@&gt;0[7T?\O9M[7AA:MA8/I[LIL.^C@..VZ-@ N4\WGE_]RB&amp;W7V!W7J@+7@![7JP(N=1''8WO!,E_\*B"/&lt;JAW7T (N/\:&gt;E_]RB/\==9@U=2,JQ_,''E_\,B ;M2^XU=5HJV/^KE_\-B/ B&gt;7XU=28JC+CE*AW7T )0=0LU&gt;0#7B&amp;;7RO\==1J/=0C7A/,T''_,&gt;G/??*&amp;N@"???8];@???&lt;,PC??&gt;Q=0O??&gt;T&lt;@???9U&lt;C?@@"*0O??&lt;.!@?0@WL0BK?0@ZH$@H''IJS&amp;A;8JO]M=077AO5"&gt;0S8^S3;/PY0H7 )G8-.?0@IUPC??=8* JI_???/"$C???"K O??8BC@???$?TBK???LSL@H=?I%E_\/B/,C3QW7L@(N&amp;=SHE_]RB/^Y=:PU.]%"UV55W/,PG?,O":OLR(,HR7)Q^VV"[[T_?0AV@XBK?0@5?(C;@&lt;"K*H.Y&amp;H.%"9)5(X"Q=1.Q8M*K=0FK06*:R[CD-*:9%+8H=0S7AO5L&gt;0SEA*QS+&amp;B8[$Y&lt;ZW"K]X-,.''R*"?&lt;@I&gt;B@"?&lt;@Y9&gt;@-_&lt;@OX@@"0#;M_]XE_\1B :*5/\OE_]RB/\+&gt;B(U=3HJQ/-(E_\3B :''3\8U=5HJ==V''E_\4B ;B1,\U=5HJ=;W7.QW7MP+;/?,ZE_\6B :55?TU=5HJS?^UE_\7B/ ?&gt;:0U=3 JC,7B21W7T +8/NHU=3$JC*7M0AW7T +)=?(U=3(JC+CF;!W7T +8(2 U=3,J&gt;9W8)QW7O@)&lt;&gt;60U=34JC+_G9!W7T +8)LDU=38JC)SO=0(U=5HJ&gt;HC;B!W7O0+;#O"%E_]@B :Z2+0U=5HJ[_\.E_]AB :"1/\IE_]RB*+8(AW7P (N"&lt;[YE_]RB/\R=:,U=4LJ _]@E_]DB/\I?A\U=4TJC(7H*QW7T ))=&lt; U=4XJ=&lt;RSE_]GB ::==/7QAW7T +;/DLU=4 JC/\P5MXU=5HJV?\ZE_]IB/\?==PU=4(JC)/P&lt;!W7T +7:_,GE_]KB(+7@1W7S@(N$\+7DQW7T )\=58U=44JC,J)=AW7S +7Q? &lt;E_]OB/\Y?ITU=5@JC(SL2QW7T )6=6&lt;U=5DJC/^E=6G7BAW7T +7D9DU=1 JC/"I=6[7A!W7T +7C)LUXJ!61A;O"929'']Z^4I6^=03IBO/]=0W8)Z G;H.V"8/;*?\D"8/7*?\X"8/7AO.S"2*K&gt;2JK"?-^AVE&gt;X7)$]G#@%\H!=0H-[T9PQ$"G*(Z&amp;!ZBC)&amp;G"QX,HK?,D4PZ*&amp;6D6G8-/"W&amp;H $ &amp; (*KY8-])''SB"?FK /\L+[.&gt;4L[C3;Z"W9]]"5,H"3W;BU&gt;KMP N=:K7/)8U=5HJ:_%AE_\BA/\\XN#;PA;;EX,:Q([;\0#;B?,D=0/&lt;)_\C&gt;JVYA.:K#(,E)C:4T&lt;Q(ME1TUGQL8?-P=7I&lt;4(,H=1*8=0*((HRU_A=$"7IBI(/;@8,&amp;4F&amp;,*;CL4O\;"=JK1XZ6"P#7^/\P=0S=G@\("76KAX?7HY"988/!"9U3$2\H(?-CE_\YB ;76L:?E_]RB/\$&gt;GDU=1$J&gt;BW&lt;FQV !IU&lt;G&amp;RK\$H&amp;"?,C"2[PZZ2+,L3P=3.K4(/E!+ZIBO]:,@_""9.K"?2%=0NK"?"%=1ZK"?\D&gt;1ZKAX[7\3+P&gt;1VKBO-@XB7;F1?7@PZU:IF*9H/$"9!C#/,GBG.KMH/=JH.K&gt;0S1"0V$O+QS1F 4WEQT]D3#&gt;5C7\''3R"0#7F+#7B* _C/W8&lt;/-IE_\^B''W92!W7F +4&gt;0PU=1,J?ILV=10J*O.EE_\]B/,_&gt;6HU=5HJC.389?,#E_\_B/-DAO\ B(C:UAW7F +4&gt;0PU=1,J?ILV=10J*O.EE_\]B/,^&gt;6HU=5HJC,''85?$6E_\"B*3&lt;*!W7HP+&lt;I_ YE_\YB/,"?FLU=5HJC/^H=:C9#AW7H0+K?QHU=1 J&gt;06GE_]RB ;7C\''7@AW7T +7F?^1E_\$B/ !=10U=2TJ?G3;!1W7I (N=8#9X/&amp;_E_\''B/0V?RTU=1 J&gt;1M:E_]RB ;8^/_ =08UXJ!61A;O"929'']Z^4I6^=03IBO/]=0W8)Y(G:X.Y"8/;*?\D"8/7*=&gt;K.8.K=0Q["?-U"7*KKX/;EH.K&gt;58EXW9#^&amp;Q4^LBU0"G7@"5-S%AFRH^*!*ZE(HN&amp;X^IE"0 /&gt;0SQA**[XSX_"6&gt;I^X"BRBZB"(-''"56&amp;]LJK&lt;X.B=02-.;;P1,OO-*I_%56KV0"KM_,IW8,5BO$U&gt;M0U=1\JC/4^?@G;CAVZ&amp;IN$G/][;S=$&gt;2LFPW]L^Q&gt;KT\VB*XB(]W3;@O\V";^K)ZJS.GNA]XY9"5VK +:G'' #7D,_;UPY,!)*TG4W;4AW7?,[;? XN?Q;&lt;G/0FE__%,//%A(_;EQW79[K;9PZ,=&lt;8U=80JC/4^__02E_,6=1QV]/\7&gt;1XEM__\EY6,#W2\8P *A(E !WVI"&amp;6R\X94"0 &lt;]354ZY5N4Q?L":V2''[") ](=-H.R":^Q":JK)C;MV*,HC/4^"_0&lt;E_-B=19V]/]C&gt;1&lt;ES/_LE_\ZJ?,QA8U"^GM+!GFSM;*K+X.027.K*0"Z^)M(RF%/UA:ZN_P96(/7E(.!783HB@;=G+/&lt;RAW;H?\HU''[7I_,IA_/&gt;=?LU=80JC/4"&gt;0I7E_^KB ;J&gt;R''9[QW;J/2DA/.5&gt;HS;K(.K?V77J(.K&gt;H37._2L"40E[G&gt;@[Q:B"8&gt;L X8H&gt;0PG)8"."Y&gt;KBNJ0+&gt;L_C%_87?"%ES#@A*^W&amp;ZT^%8.[")^IBOPG\X5(#G"KBB9^W3@_R/,Z0@^''%9&amp;%G)^K&amp;8*W"P#4A7FMZH18"0 .W%&lt;0G4(?K-_&lt;RO\ &gt;D#7F/1H=2C8RM8GC##8#_%-EU0JP@S;)&lt;@F)9^Y)Q:W"9.J%8$H=@]1#V"L^H,HK%9_LA=JO2;W?D#7HO!H=1/&lt;RO\ A09S&gt;J#9[QW;HO-\&gt;3[@A*^W&amp;ZT^%8.[")^IBOPG\X5(#G"KBB9^W3@_R#&lt;.5?1H=2C8RO\6?D#7H@\N=5K9''/%-EU0JP@S;),@F)9^Y)Q:W"9.J%8$H=@]1#V"L^H,HK%9_LA=J&gt;1+@A:^W&amp;ZT^%8.[")^IBOPG\X5(#G"KBB9^W3@_R#&lt;.5?1H=2C8RO\Z?D#7HO!H=1+&lt;RO\ A0;7T/$R&gt;JTU&gt;1+@A*^W&amp;ZT^%8.[")^IBOPG\X5(#G"KBB9^W3@_R/,Z0@^''%9&amp;%G)^K&amp;8*W"P#4A7FMZH18"0 .W%&lt;0G4(?K-_&lt;RO\ &gt;D#7F/1H=2C8RO\Z?D#7HO%-A?, A 9+&gt;N_8)QU*B/0A?D U&amp;0(N&gt;M38.A[8P?\"&gt;9&lt;G&gt;0/MQ?\GG-RK/JZ310!K=2C8,O, &gt;&gt;XGR59!Q4=-*&lt;0^=&gt;???-[Y7@_??&gt;.0HO&lt;@GJ#4???^] S?@@,&amp;JH/?@A,09@"&amp;''86&lt;G.#;T0]V\7U/G8-9%''V_^@"9W W?@@8H-O??&lt;$U ?0@N DK???W3.O&lt;@B^=\???41. H??=H!:8F[76W)Q&gt;K%82[#Y\HH ZI\X*F"7 HK+]_9!;7YO-9A$-^XT]O[Z/LG/\(&gt;2C;QP_;B&lt;5G=0\^5H.&lt;)+OGBD,GC/#K&gt;K V&gt;G8G"=MF$X.2"?&lt;@FI#T?0BVM,#?@@OYVO&lt;@O&lt;$8?0@@_W@H??8(DFPG&gt;0/MQ?\GG-RK/JZ310!K=2C7&amp;O, TP]KW&amp;EGS66+3A;7$/_+:O/+=5G&lt;\@]V\7U/G8-9%''V_^@"9W W?@A#E9O??9&lt;PX?0@ZN!3???L;:H-/BO/HA4-^XT]O[Z/LG/_/&gt;2C&lt;C@_;B&lt;5G=0\^5H.&lt;)+OGBD,GC/#R&gt;K V&gt;G8G"=MF$X.2"?&lt;@F]YD?0B^Z_3?@@K1+O&lt;@NIXD?0@@MK0H??2&lt;@5S7HO" A&lt;&amp;8-&lt;+L(FEQG//^=2C7? _7J""0O!9F"5%/YE@H=9?&lt;\P]V\7U/G8-9%''V_^@"9W W?@A#E9O??9&lt;PX?0@ZN!3???L;:H-/BO/HA4-^XT]O[Z/LG/_/&gt;2C&lt;C@_;B&lt;5G=0\^5H.&lt;)+OGBD,GC/#W=538RAW7YO-&gt;A$-^XT]O[Z/LG/]G&gt;2C;Y@_;B&lt;5G=0\^5H.&lt;)+OGBO.\=6;(O_"3=2K;)@_;B&lt;5G=0\^5H.&lt;)+OGBD/7HO"0&gt;2C;9 ]KW&amp;EGS66+3A;7;?..=5G;&lt;@]FR_??1/84K/??* @B1O??10GJ6Q?7YOLU&gt;5 F???#A^O???K96?&lt;@CH@@?0@Z_#S?@A&amp;A3O&lt;@C AB?0@T @B''G?]XA ;9*_"8E/!&gt;A8/SQ)FK, "&amp;=2:M/A;=6O\ &gt;Q/Y&gt;:&lt;G&gt;0/MQ?\GG-RK/JZ310!K=2C8,O, &gt;&gt;XGR59!Q4=-*&lt;0^=&gt;?;[/]Q?FTGU''M5[1&gt;K^YY5''7 H.U8E?0@X1^S??&gt;_DFO&lt;@F#(\???3N&gt;"K[0#;2@]KW&amp;EGS66+3A;7;?, ?@0G&gt;0/MQ?\GG-RK/JZ310!KA0;&lt;B&gt;/7[!T97]4G+_\GE_\PB ;;=/\-&gt;X0UU(.P.(ZQBB\F%"#DU^BK6H.3/I^!''Z"Q0H.KBB\F"F%9^F.KB@;;B_](=&gt;DU=1@J&gt;BGDE_\PB/,&gt;T1W7A (N!_#W=7PU"9JK&gt;@W;G8.K?@TE"3=FZ''ZGBO,A&gt;G[;H(/7@/19&gt;0&gt;K"?,G=8*K#8,E=0W7E.+7EQ&lt;N=&lt;W9&gt;?!EE_\;&gt;1?;L@^KO6Q_QT$H?@O7:/-W"?]S&gt;4\E&gt;18(_"!?R #;L/\_=2 G"?\A0:''E/P#7&gt;//%=52K&gt;5#7R0W@)]?H*_\7B@;7^_#&amp;&gt;G$U?G''7G?!97/\G?XW;A0\N=:W9Y? AE_0A=1?8B ^K/7.)Z;%5+UF&lt;&gt;1"ZBO2_&gt;0_8$0[P_+JO)O,CBO4X?@DU=04JC/]N&gt;Q''8@QW;E ]2&gt;0E(#$I=BO1H&gt;0_8T0[I":&gt;[0J_K**7T%=$H=2 G";=:*V.9]J=R./,X&amp; #&lt;T?,G&gt;D F4'':0#ZS;@P N=9[98_ 0E_]P?Q#7J/,_&gt;979FD$G"6Q%\V5=V7W;U$FK&gt;14HHO\_&lt;@^QA8/7K/_G[H;7R  N=:[8:O#,E_2X?N39(? EA+5[=4'';[1;7EO-;E_.R?H78A/ MA:^J:''*PJP N=5O9E_ AE_0A=1?8B ^K/7.)Z;%5+UF&lt;&gt;1"ZBO1]&gt;0_8TP[P_+JO)O,CB@;7;?&amp;0&gt;@HU?@K7G? JA6/7YO,7%$*RBO2&lt;&gt;0_M&gt;9@FW_??=H@@P???-H@@G&amp;.K?0@C3$''?@@M8T/??=CF7?0@B!:8H&gt;0 G"9&amp;F%!;K"&lt;R(*I+''.XOU$,0H=9S780_3]9JD(R&lt;HC$C8*_^7E_-J=4+;B?-J&gt;4+;B?!7A ;7R_&amp;R=9 U=84J&gt;0#8XQT97]4GC/]I&gt;YK7&amp;AW7#P+=K_!!ES'']7P\N=4''9$/^XE_^MB/,H&gt;FDUN]7]A?.Z?GLUN]7]A0;7R_!*=8XUN]7]A?]*''QW7#P+=K_!!ES'']7P\N0/$A&gt;DTU=0 J?@C&lt; QW7A (N0/$A&gt;DTU=0 J&gt;7#&lt;41W7A0(N0/$A&gt;DTU=0 J&gt;=''&lt;W1T97]4GC(O7"?_)ES'']7P]E=9\U=0$JC"W7R?_)ES'']7P_]&gt;5&lt;U=0(JC''[7N__)ES'']7P_,=2PU=0,JC*K71?_)ES'']7P__(1W7C@+&lt;G/0AE_\MB ;;29O7:QT97]4G,?/)E_\NB ;;[J+7:QT97]4G+?\$E_\OB :V=&lt;/7:QT97]4GU/\$E_&lt;@]__@?0@LBD@)]Q?;E ]/["&lt;(J63$*!;8@_,_?@(G??=0/$C?@IU&amp; O??+TG@?0A4&amp;XC7B_\*7?\"G/\(A?&lt;@#\D@??=,:,C?@EP?@O??"1U@G&amp;&amp;K!8!&gt;"P#;C ^K'')^&amp;G ;;1[S8JQT97]4G=3MCE_\PB 9F=4G7:QT97]4G=1J#E_\QB 9K=8?7:QT97]4G2ZLU=88JC)O7X? 1ES'']7P_7C_/LEX/7PO]M&gt;0BK=8,H=5C&lt;G/\*&gt;1?;''_ ^RP^K??=O!(C;S_&lt;@X:H@"???EM^@BBC7G0\N.O_Y=&gt;$UN]7]A&gt;J''E_\RB ;;^-W7:QT97]4G2:LU=1LJC)[71__)ES'']7P_;2?,GE_,=?0B,%(AR?0A!ZXC7F/\U4?\.G/\(A?\7&gt;2GJ&gt;00^&gt;:PF&gt;A;;_1W;E ^K[G,5&gt;0RH??&gt;N5LC?@@L;0O??&lt;"-@?0A[1DBK)@#7#/\NA&lt;?LSUD_C(778? .ES'']7P_;X( U6 _?@NMW0H/?@@E3 O??6#7@?0@KMLC??:;BP@#&lt;2?\_&gt;MDG"?&lt;@]_C@??&gt;_40C?@F(4@O??V"4@?0@C64@H&gt;9S;W0[??6X PO\K???&lt;7&lt;CJG,37A5XFW(FM/A&lt;N#O_0&gt;B&lt;UN]7]A?-(!!W7#0(N%?\J=:$UN]7]A? O=3@U=1PJC)#7/?_)ES'']7P]#&gt;4TU=1TJ&gt;0;7X1W;G?3O=1&lt;FC%C8F? AE_\VB/-M\1T97]4GC/]I&gt;YK7&amp;AW7#P+;/G(UN]7]A0;,&gt;B_7:QT97]4G2JPU?@K7G? JA?\_K^K;N!;;0/,G3_.PA&amp;.FMS$^Z8.T?0@A @A:?0@D @@H&gt;0 G"9&amp;F%/&lt;@XMT@?0BPJ0C?@@1IPO&lt;@6K[@G/^T8@_T15%FG0;&lt;T=(V=08JOO\"ES'']7P\NQ?^W&gt;N0U=0$J^_\"E_\FB ;;@_],&gt;W(U=0XJ]/0ME_^NB 80=879^!W7A +;^?/$E_^OB ;B&gt;PG8QQW7N?,_&gt;3@G_%RE\FU\BO-_=;FK=2+;G8.K&gt;4''8JO3M=3^K&gt;237Z@V3)&lt;WD)O\\B@;7!_&lt;A@3L4?0F7L3PU?0@BY&amp;[?@KSL3O&lt;@\&amp;Y&amp;?0@]&amp;Y#?@D6Y&amp;(/?@GVY&amp;(/?@EFY&amp;O??-L3P"???$3L2"???/L3L???*Y&amp;#??=3L3/??-Y&amp;X???KL3I[???^Y&amp;[???)&amp;ZO??=3L4"???23L3BO??''L3L?0@KL3LF"?\$=13???3L3(/+BK='',5/??&lt;6Y&amp;/??6&amp;Y&amp;???RY&amp;[??&lt;I&amp;Y!:K???83L2K???&gt;Y&amp; E=2#;(AW??8,3S/,L?0A43KHG0/??E\3LE_!C&gt;DS&lt;P?!C?DS&lt;P0TN"1S9I1U3(?"0%_]H&amp;P[;[9$GG (C%"W?C@&amp;KC@*KC@/7DP+5$8&gt;RC@37J0/7HYTLCX0LC!0@NALAY0H@@P@P@A @I0AJ@FH@_@BD@H0@)@C_@O A@@D#@SLAP0FK@Z&lt;A0 GZ@^8BP IZ@&amp;HB! J,@+ B8 K=@1&lt;CNPMQ@6@C$@N7@?TDA0Q)AG$D(PR9AN\EDPT/AT0ET0U^A[@E20W3A TFP Y*A''0F-P[FA/@GL0]EA68G] ]&gt;A9&lt;G0@_HB@,HL0!PBFHH" "\BLPH5 #&lt;BU&lt;I"0&amp;3B\,I&lt;0(YB$4JZ )2B)PJ- +JB-DJ80+5B3DK @.JB9HK2 /[B&gt;&lt;K&gt;00TCA,LK@1)CG,L#P22CK4MP 5+CXXM1@7ZC_@NX 9=C(,OAP&lt;&gt;C5HOY &gt;BC9LO* ?IC&gt;DO:1@PDB8PO!ANDFDP-1CJDOHQM!E9D\0RFAIQD&amp;HR+!J9D-TSKQNFD9\S)QN3D&lt;DS&lt;1PCEA TJ!QKEE$TY1Q?EH,T:1S7ER,UW1V9E^&lt;VIQX,E(XV+1[/E40WYQ^[E:\W51 BFB8XN!!AFD,XUA!9FHHX''1#2FR\YL1%NFV@Y\!&amp;)F 8ZP!)(F''8Z/A, F20[TA-/F8,[1Q0^GC8\UQ2%GKD\:14IGR,]N!5SGY(]+17AG$X^\1:^G2@_MA=AG6,_^Q&gt;GG9T_&amp;1&gt;%G&gt;( DR@?HD8 ["A6HG8 #RBUHK@ 62C;HR(!TBE+HW4!&gt;BHHH!4"YBJMH*X"12K''H0\#TBNAH=(#&lt;"QEIE&lt;$0RTFIRH%''RW.I X&amp;N"YLI%0&amp;[BY=I(,&amp;7R\,I4(''^R_BI=$(PB"\JLT(6R#1JS,)YB&amp;CJ\4*EB)@J$&lt;*ZB+CJ-,+FB-HJ6(+$B.-J?4,NB1GKE$,$R2#KKL,1R3WKM&lt;-X27&amp;K_D-&gt;29HK%H.Z2:XK*(./B;HK-(.;B&lt; K3(/TB&gt;PK&lt;H/5B?4LBD0L3AELG\0"SB^LP,1^CFZL[012CL=L;L35SO7MA,4MSQOMF$4 3U^M+87@3\UM2\7RS]QM6L7]S^WM:$7/3_8NCX8''C#INQ[;J/-&amp;A+S;2\:K-__IAP/;J/,&amp;=2(FB?,^&gt;1XF,?,U08.5=1TEB4 -1VCN:\8-1[YH:_\A+''WQ&gt;0E''"?\HP8.K&gt;0#;@Z=5Q TK&gt;4+7R/,K&gt;4+;R/,K=4+;R/\K=4+7R XK&gt;2[!"@^KQ7A(TG&lt;HT0_7GI2Y88/YBO\]A0/;)O,[=:PFB?18&gt;0/8^@XK&gt;G77RX/7C_1==4*K&gt;0O8D/,W?AK;FPTK=12MA)PG6K+D2,^8VT(^"?,L&gt;3:O"?-HBG77D@^K3YJV1;W(3ZZ7"=&gt;K=10%:_,''"2*K&gt;2M&amp;"O-6B@.;&gt;2_7K(/;$O%-&gt;3*K&gt;9_=[_\-";37I0TK&gt;5JK:/^1AP.K46SDN[/S.Z^5"&lt;$H3%77D_-TG//Y?V777@[7X[;7C&gt;H_B?\7A-B0[%UVY&amp;9FG?,7A /7Q0[T,V)MS&amp;U*P!?;Q0XK=2LF_/\8&gt;07*&gt;3:KBO-"&gt;1S;I?.@&gt;7;7D?,''=5&lt;_=4&amp;K=074%O\;BO,&amp;A(H.TEX."0#;BD_)=3O7M]K+=0(_=1FK("6SY  K=;DF=0NK4ZV&lt;1,WO*.:K=0VK=0Q,;%GPV,YF)O,D"0#;,PXK&gt;GO7F0_7A\L&lt;&gt;3W;MEL&lt;&gt;0T_B?_1=1G;&lt;_\9&gt;@77D_2#?V78-_\Q?A&lt;FB?_S=1G;4?\9=?;7D_2T?V77J XK=2DF^_\*&gt;0;*&gt;4RKBO-&amp;&gt;2O;K?-7&gt;7G7IO,5=5$_;X/M+,O]BI4+9X.K&gt;A;;.H.K&gt;1G7N(,E_/,^&gt;1-3Y(,H&gt;044=_\*=3GX:/\SG?NK/ER SP K&gt;=?7J/%-&gt;2/;)_.4=:W;J/5-=2+770\K&gt;2+=[_\*A /7J^CX=10_&gt;J?;J/2/A5Q.[U]R\:_NG-G;J$LG&gt;4W7EE?/G /V6_^C&gt;=[7Q8/;5/ 3=;_73/-E"?.1&gt;=RK==S;J(.K?V77J(,EB?,*?V78!?\Q&gt;?DFB?\W?L37J(/7E_#L"?3L=2*K"?%-&gt;7ZK&gt;1S&lt;6O,X&gt;M#;]H.K?V77J(,EB?\*&gt;V7;J/2DA/.5&gt;HS;K(.K?V77J(.K&gt;H0EB?-2=17;MO]*=6?7FO\&lt;=6W7_O,!=2?;Y?-(&gt;1;;MO-2G /7C=$''&gt;3K;JS(&amp;&gt;03;CS/0=277K]/0=04_B?]OA/\Z8^+7JO\&amp;NM/;KA?;5/5-=2(FB?]/=2@G6;A(PDE&amp;ZC,_B?-*&gt;17;M/-0&gt;7C7G_,6=6(_5(/C&amp;,V.BND:5=0;50V&lt;1:+/"&gt;4H=6+;F/\:&gt;64^B3&lt;:6DHE]G=*!F.KBO,LN?C7K_\-6?C7C_\N6"_;K1&gt;KS8AU]U&lt;HB8-G#7V^Z@#7MZXF]I"B&amp;(.+!?]+!9T.,=6+-LZK9@#\YO\H&gt;3D^?A/=[_\*=;W7P@[L)7ENG8-,"YNKUP KM%=?SQ;;R_]R=4$F2+Y?N!&lt;K=5/;PZ;;A_-CI#'';H!:K&gt;0WDUO\([0#1]0W/^KA/"5BKS%M&amp;LH,%"5J6!-$H&gt;2XF%O,0=#[7S(/7TH/7@&gt;NK=2"K=0]Q1?,[)P#;A*DEHJA,(H/@"&lt;J&lt;+-"K:(/@X9AAB@/7Z_\Q?M3;D_]1?OC7J XK=0?7N+?7X!?8 /,*?HHGL59!KR5^-^L^&gt;HK;J/2BA?-"=3)W=0&lt;^B?^N&gt;V7;J8/;L?29&gt;3[8._,+"?^J?V4EB?]^&gt;V7;L8/;@_27&gt;0+8-?,("?,E?K[;A_"6&gt;3NK=6K=[_\["?\K&gt;L77C/3MAP/7]__9&gt;4JK&gt;1+;!O,T=8S;Q(/7\//&gt;&gt;7+&lt;@?]B"?\_=9G7HO.Q=4ZKAP/7^?!_&gt;32K&gt;1?;5/,)==[;N8/7!/1_"?."=2*KAP/&lt;.O,Q&gt;@$F?@''&lt;\8/;D_"8"8/7D_0H"? H&gt;GLEB?3,N?#,A /7D/,*4X-E=2(EB&lt;^K0*V&lt;/(-/#(FX^0#7KI0F\*JD&amp;(.''BO_@A?\BPLO;I!;;I(,?SXK;DP#7F0ZR0:J]4H/A":Y9"6^KU$&amp;HWXPHT8DEHG%WUH,*"2+MR.6KB@,:X55DWF:$,1:K-ZF_1Y\H.9PE,IJQ#Y.SB@-H"5-2ZUTH=9_;HO5-=2CBA:5V.''KO"0#7E^77C?\7=34(=0'';EA&lt;K4K1EI2%ZQTYDWL?2;[/P4Q&lt;K1H.&amp;\I-DBO\ZA(G7FCOZ&gt;1.KBO,5KRG;SO-F:BO7MA?7E8/&amp;7I#7EP#;F Y9QV=0UX,HQFCK=MZ\&lt;^0_B&lt;:K.*R.0@!T=2C9[_, &gt;9\GZLE\)D"KBO,UJ_,P&gt;3_;L.[;D?\\G0/R.$X$JU-GQTU[4N;/.=GQG0/;K23;AO-I&gt;4G)H_\-G?\M"&gt;7P*/TH&gt;18F^&amp;A$\%"KKX-&lt;4H#TBO_&gt;A(2W"9BK$ #7 ?,%1?,@G /;Z0ZT7Z:42X/L";E_$S0HB3#@A*^W&amp;ZT^%8.[")^IBOPG\X5(#G"KBB9^W3@_R#&lt;.5?1H=2C8RM8GB3 GX\-])46KBO,TJ?,Q&gt;3/;ONO;AO\YG&lt;*K,Y:?1 !BA4)ZW$T^U(-((XB4BO,%A(4-:UC7H8,H=3_)5O\SG?#BA0/Q/4H''JU!HP$%]3.71.]KOG0/;7/\ =?8G=2((,C8^Q(-Y[6QPBO^_&gt;2C=[_\ == G2["72,2 XUD^B?, ?KC7H@XK&gt;2C;D_\ A /;HO3/A&amp;2@ F4^ (.E#HFNBO,DA:^H+(&amp;_"0#"+:?#G0/8H?, ?V77HO]EA&lt;OH=1W; /\8"?-Y=&gt;S7SO] &gt;3NKAP/;HO5-=2@FB?20=2C76@_M+;OG.*!0XA;;?O\ == G3Z&gt;31;*(\F@^&gt;?37HO RA?QK2_,@G$^KV7M!T7F&gt;UZ!H"46KX7Y]U@#NA0/&lt;,O\ == G2;"53&lt;^)Z$,^&gt;&gt;G7HO_&gt;A?\KR\?;A19B"5)0X4&lt;H6P\K&gt;3$&amp;&gt;0G;Q_-F&lt;O,@=3+7NOK7@_]A=4,(=/,=G0/X/TX!I%]EPC=X4_K2/-GWG0-G"5-.ZT&lt;H6?, ?X+7HO^.A:5O.6?O"0#7E./7C/\8=3L5=1S;HA&lt;K4+)FIB%ZQ$YEV&lt;?0&lt;K/P4Q&lt;K38.=*J3FBO..=2C9"/, N0]*1%&amp;)RH,H&gt;1X+&gt;0;;N_,89_,N=1,_B=J:Q2H)V4]EQU/O&lt;OB;4MD_B?20=2C7,0_]-KS]G)*K%X*^"@#7H ^C#HZK!8-K"5M![THH=P\K&gt;14F#?,J8$77NH/7TX.:=0BK5(/QZK!D(@#;Q[8EYI^A$8.!":&amp;+'';2K3(.,\81ZBO\[A(''7A#OP&gt;2VK&gt;16KM$ZK&gt;0NKH^I:*(DH=3-WAZ:@%8BK]X-*YG]J"3NK_Z2C,@ KO_\%&gt;2C;ITX.4O/ A#Z8X^\^*(.$#*RSBN4G_X&amp;C"(FKBFZB%+,_=;+YA0/8,O, &gt;&gt;XGR59!Q4=-*&lt;0^=&gt;?;HO0LA?,K3T_7A1;T";2&amp;,&lt;\HR0\K=4;8,O,("?,A?A?;B_ _&gt;2"K=5G&lt;,@TK=278,O,%"3''&lt;C#+8C/, "3''&lt;C#W8C/,%"?\,?KC7IH/!&gt;AG\?ADEB?]D=:C;OH,4&gt;3\3=3_;OH/7QO. &gt;4#;)O\&lt;"&gt;_7ON[;OO\&lt;"0TKVFU$V!:@"8NL^Y@HH ^ "I^J''H/7KX.Y7)"0BO]2&gt;QO;IH/;AO0]&gt;0/8G_,."?]]?LXEB?08&gt;0W7#P[;''?/N"?,E&gt;ENK"?\E&gt;:ZK=9773 TK&gt;0K;C/\BA /;Y?-@&gt;4C;Y/-%=4C;P/]"=637O?\==6+7Y?-@=3?;Y!&lt;K=337G_,_&gt;3?;P_,\&gt;1;;PO,8&gt;177H/\==3?7G_\_=3,_B?\;&gt;2ZK=0X&amp;9OC$"?\I&gt;3/;JPTK&gt;;&lt;&lt;=;&lt;FB3]GQ3 834[]8L?N8M9G33 _B;.3X5-YX6QYWFN4.+23,;0_B&gt;EU.2(''T5 /G(.H"8RL 0#''A(*R")JK#P"8(ZV1,ZI3X1:K&gt;0?;Y*RD&gt;5(H=&lt;+\&gt;4&lt;F5^S7A9VK=00HB&gt;LF-)V*.*. ]&amp;)%\W]ZG(AM&amp;0[B"*!6"6JKZGE2Y8-!"7^ "K HK0ZLLLMW;X/+"&lt;+A"=&gt;K.''V.W:B-(I6)";FK4%J9L8-N"3%9!/,UB@/;D(-E&gt;2+Q"0TK&gt;0?7DO\OA0-UHPV^%IVN''8,H*)==]''Q2^V,_[8-3$%Z"BG!WA\15*HV7"0#^.Z3G-6:&amp;WA=&lt;"7&gt;I_HXH*L(EB?.5:/ =R0]=VU52OX,HS \K&gt;3/7I(/;A/@2I#JK&gt;0''7N?\(AP/&lt;N?538(/8N?%3AP-]=9W;@P[;N_.V"4G7Q8.KK.*K"&gt;"9"0TKHX/5=3 EB?,@&gt;2+W"=7/7R_Y"2S7J TK"F-?^7ZK!H-7#(RNBDR$AV^X"(-8"5RKZE6GOP#JA)B+%)"#"9RK%H&amp;W!0#R\PV  9:G&amp;(/F":.5#&gt;@HB5!#X5%Y,6N=/KR3/K9$,5$_B:J]^GQ4^G!5\7"^(*J^''*L_B?,,&gt;J37D_0V=5G79?\Q&gt;&gt;_7N_ B=1G=O _;&amp;?5-=26K0O\,AP/;RX/7A/_[3(,EB?\#A'';7NO,M:/,&gt;"?-""?,T&gt;2^K&gt;8BK&gt;1R1H=QE.5:2^^!;BF@8AY:T%X:_"0"*''756]GI9Z1=/"7NRU*HH^E\E3GV(![^KBM:9+L^7[*Y\G7.K_8%=! "^,0W7R(?7BOJS=3$H&gt;2XF "9PU":KBO,HQ&gt;''7L?\54./7B!?7DX."KYM&amp;B@/;9?^1A?\F"=B$.&lt;_B4J32"?\@"?Y+=EOOV&lt;]G(?,G"0#;,_/JO#,FB?-SOU,*G/,[=6+7J-/;J/]M=1,F=,=O&gt;4 _B8/''[&gt;!]2 #$;%^8NB&lt;ERLYE)B2K&gt;6.K&gt;1;;M(/;\H,))#[BPP 5KK9]7.XE1U''V\.VK=6:K=1+7OH/7Z@ K&amp;&amp;NSV(-\"?,/N2[;C(-W"5*][J$HB7"5 [6K0(/7LM+0=1BK08.:^KA$B@/7? ZL%8.R"9BK=8O;IL_;AH-N"5Y:X&amp;)%+EB\OX/;JX,&gt;SH'';D@#7E0ZR0ZR_2(/D":]:"6^KV%BHU(HHT8DE&gt;0A9VERKJX,&amp;3D/2"=2K2Z/I5KUG4V_#"?\M"&gt;7O*/XH&gt;18F_6Q_[%.KBE-I(O\MG0,9YE9CWF:$-A:K-JZ$0IHH.9HE*YBW#92UB@.Q7KB528/L";A!$#(HB=V\&lt;^0^1H.&amp;\I-DBO\ZA(G7FCOZ&gt;1.K&gt;3VKKRFK&gt;42K&gt;3_WJO\^^P! M V^%IZN''8,H*)==]''Q1^V,_\H-1$%""BG!WA\]6+XR7"0#^.Z3G-6:&amp;V1=&lt;"7:I_(XH''KNM"0W7DH/)8Y[7D@#;F Y:Q&amp;9/U(,HK7S,5A&lt;K,6_P]]JK=3&amp;K&lt;_\A"?]E"=M&lt;1V.=BMOTXKQGQPUX-UF_P(/;N8,%&gt;0BK&gt;4ZKPI-O+U(HPC:6X0TK$7NO\(-0"2!VQDFKZ(-.&amp;WN''B@.B((Z(":&amp;K;;?R5(..":U&gt;)6$HB5LF 554]5&gt;KWX-2(XV7BENAA#?DT-[V1LSVG /7@O\*O8,9J#'',OX/2&gt;2(EB2CNA8--_FQW P!]A=JM/,RK3@#7@@\K=5G;HO20=2C7V _7N?-Z=4*K&gt;9G7/O]*=8#;JH,EB?,D3( G"5-5[%:BBE4G4(6&gt;18/]BOHGB?,R"4W;I=FKAP/86 ^''%9&amp;%G)^K&amp;8*W"P#4A7FMZH18"0 .W%&lt;0G4(?K-_&lt;R@\K45/7O_-3G/,7=2G7?/\Q?IS=[__\A/]!//\Q;A&lt;K=4\F5KE^ST9%W$H_&gt;4\FB?\ A-.0ZDE@Y&amp; ;G?, A /8G@Y8&gt;0Y@PRVKIH-B5G_7A0 K=5/;PJ;;A/-CI#'';H!:KR9=_-&amp;-MZWAY"3.K&gt;2#7@3O7TH/7S(/68IS7L@#;I ZFOUI IX,HLEN02LZ.0_D_&lt;_\LO0[;@V:=0LJ&lt;+- _:(/@X9AAB@/&lt;GPZ]=0/U5?RK=X/SPY7;CP K"8/;R_]&amp;"(0H&gt;@S7EO3F&gt;0TF=5_;]/-9&gt;:VK&gt;0''8?H.K=1S&lt;PX,EB?\O=3*?=6H_&gt;HHG5J&amp;508/K"8&gt;K$H*SBO,"A(98#HFK_@ 9X&amp;H9G(#&lt;  X3W&amp;D-KU:581;8 /,*?HHG&gt;6K7N%_7C18K&gt;K@G5J&amp;508/K"8&gt;K$H*SBO,"A(98#HFK_@ 9ZVH9G//&amp;A4-^XT]O[Z/LG/_/&gt;2C&lt;C@_;B&lt;5G=0\^5H.&lt;)+OGBD,GB8/.+/O7KL H=0'';7O,N=00GPUI[M8/;C@#;W/\^&gt;3#7^_]+=1#7Q_]UG(/7A53^QLXH=0?7C//Q&gt;0(F:VS[OX/;H0#;HC_;@_,S&gt;187=0K7GA8K=0_7Y8/7D_0%"8/;D_^S"?,@&gt;5VKKPV&lt;"9RJ(8V:_*%""5^KSU=^S(-I"6^1!=PH&gt;10F#O,":CK7IX/7J8/,9H/7G(/UX^C;B*$HB?\/:/\D=4''7PR75&gt;24_&gt;06KJTY,HP#7G Z\-+J$/(/)"9)F#$HH&gt;?8F"''&gt;K!(.DBO.C=2UO=0@^B?]+A(H9ZFIM"4*KY[^E6  K=1''7K8/7A_08"8/;A_^M"?,G&gt;12KKPV&lt;"9RJ(8V:_*%""5^KSU=^S(-I"6^1!=PH&gt;10F#O,":CK7IX/7J8/,9H/7G(/7AS?AQZ@HB?\R&gt;2_Q"4W7I0TK00ZS.ZJ_-8.9":Q5$U&lt;H09TF55KDPDART$@^B?,SA(Y(]&amp;\%"0!GY96./[BV3Q?R&lt;TPFR&amp;VW/J&gt;/''\&lt;_&lt;X. Y9A''BO\SA''7''ZN#;U(,H  [;H($*YX/;CX-Q(&amp;&amp;5\VM2\&amp;6KSX, 65W7L8/7W(..9I+*B@/;GPZO&gt;0+"S_\8"?]Q";+7@H/V"&lt;A8+FN$-Z.M.X._"?\CM-C;GX/;IX,3Q('';A #7F0ZL/J2#3(,H/J-7[U95\V@_K_,B90[N&amp;''E$YF1:P!&lt;3"76, ;@HB?.LA)[\.+?M"&lt;6K.%"VNP K_3)[U$*KRX-\0HC\B@-J%VGN"&gt;&amp;K:[WN3ITHB&lt;6@-D"KJ8,0XD%K_0 K=4'';HO-HA?,. 2;;@H/;O(/;O&gt;\ =2&gt;CBO-F=2C7Q0_7KIS*=(/7NX/7P3C4&gt;3BTB@/7C [A)HQ]W''I&lt;UQ?;C XK+(.!!:ZDBEFH_VY&gt;N9&amp;,(*&amp;X''!8K!XBKXQ:L&amp;9FY''(,H'')M&lt; !&lt;K"&lt;A/14:].I&amp;(/8.9BK5*9?,$G/.^?KC7(P[7J;G$3Q&lt;K:PZ&gt;((E#YGRCVA&lt;-A //A,F$!E5^\''1UG2\FB?20=2C7X?]_&gt;6O7HO"0&gt;2C;\O-_=7@GB?^M"?.M??;[J4PEB?&lt;@X7L@=?O??:G@@H/??&lt;*3PO??B$3@???KV\C?@OV3PCBK???J,0C??0)L0O??2A''@?0C5,4C??:G@@H/?@FKL0O/3?0A]&amp;XBK?0@79(C?@O^&amp;PO&lt;@MJZ@??&lt;HV\@EB?,9;&lt;;7"$#/=3$GB???^+O@?0@#-&lt;C??=9Z O?? &amp;8@?0@EO&lt;C??7$J0O&lt;@M!]@???1 \C?@D''5PO&lt;@\[/@AP/??7*30O&lt;@H;_@???^V(C??8I.@O&lt;@AS?@??=9B,C?@CXW O??&lt;XG@?0AI=PC?@GF;0@TK:WHG???6Y(C???ZY O&lt;@BL3@?0@IL4C?@@''''@O&lt;@BQ''@?0@IFPC?@@''&amp;PA&gt;$:WHF???A:XC??&lt;4V O??3QZ@???A:XC??&lt;J" O&lt;@L/T@???MWXC?@C8K@A&lt;K??;J&lt;@C?@FH_@H/??;+0@O&lt;@-Q%@???G],C??4+&amp;0O??2G&gt;@"???.-:@?0D5D@C?@FH_P@TK?0A398C?@L5Z O??-;U@"???.((@??&gt;B54C??;/OPO&lt;@_R#@??&gt;7(PBK?0A398C??3J% @TK=5$;&gt;5$GB26$A?&lt;@BY&amp;@?0@IY(C???\3PO??=,3@???6FPC???[&amp;PO??=.\@???6F\@_\"6$A/&lt;@O!Z@?0@2:XC?@CK) O&lt;@O!Z@?0@=WXC??&lt;4K@O&lt;@L*J@???A=P@_B39/WE^KTH-Q0&amp;[$":^K(8:&amp;$ ":A7&amp;G^H%7"5ZK]I.K+X.&gt;(:# 0@ K??&gt;_P@C??;&gt;@@O??''4@@?0A@ @AL???U @C?@FC@@D,+R&lt;)!:&lt;/+??&gt;? @CJ-R/?@DB@@O&lt;@XL@@?0A@ @@EB?&lt;@\&amp;Z@?0B.L4C??9KL0H/??&lt;]3PO??% 3@???F3LC?@F''3PO??$,3@"?&lt;@\&amp;Z@??=Q3LC;B_??S3M@?0A-L0BK?0@;3PC?@F43PO&lt;@N2Y@??&gt;R3LC?@F43PH,EB?,Q60^K[X!^O''4HWP_A#-2!"?\DBO\OA0/?@STP@O??''^C@"?&lt;@QQA@??=J90C?@C"I@O&lt;@-Q$@?0@7 HBK?0AEH\C??,+0@O??''^C@AP/7GS5P&gt;0+FO_,]A0.;,;J;/F&amp;2UQ=2"7R@^''(H*6,E$9VW$Y"KBO&lt;@C8@@?0@Z @BAZWQ9^WL_W4.7A -O5P^K???%P@C???)) O??5EL@??&gt;9%(C???M-@@!\A?\M&amp;I[D"&lt;4H0P\K&gt;1YUA(-I%%K7CW8H. _??;&amp;V O&lt;@CIL@???:ZXC?@B+-@H/?@A.@@@#UA /;G]''F=0)P6_\]A0/&lt;2#/82 XK&gt;0ZK]_-H4X,EB3O??99&amp; NLFB&lt;,0W0\1)G#J4Z^L119.A(]?"W=."???95U@"???&gt;Z+@''H..B@,3??&gt;^Y&amp;##A /;W_^;&gt;4NK=;;&lt;N(/;1?\$"8/71?_I&gt;C+;PH,EB8,(ZBO;KD8H&gt;0''77O\N&gt;00G5\R;78/7C@#7W/,^=3#;^_-+&gt;1#;Q_-UG(/;A;(84%@H&gt;0?;C/_Q=0(FK[H;6X/7H0#7HM?7@_\S=1;_&gt;0K;GA8K?0E&lt; @C;G?0 A?,U7V/NG**K-IZ=''0![=1LE[G/??&gt;$N@HK???[2@H-6"8.&amp;"?&lt;@DH@@B@/7F/2*?V77I/#''A0/7YO,5&amp;O, G/.;?WC7IO^+=3LF=867=13+G0/;M_]X=3LF:;1;N45.Y_,FG0, X5T;LV?O9NZ(4^[*(#MFG /;P=L!=4\^1X.;&amp;[N&amp;&amp;G^.]Z:K*H.0%[&amp; BF[7A&amp;%5"? =&gt;0&gt;K"6HEYZ1#&amp;$ZMBBC;IES;\A&lt;K?0@D=(C?@@F'' O&lt;@BXY@?0@CKLC?@@^K0H,H?0@FH4C?@@STPO???^X@???9Q\@_?C;7G/_@A&gt;&amp;1.][S%%=JG(/&lt;\/\^Y(/8&amp;0W7JU#Z&gt;20^U8-F^V="!I13-%RK\8--!F]&gt;B@/77O,^&gt;;0G&gt;0E=[S@/_J/0G/_B&gt;1;;7@_;F*&lt;-=6_?@LUQ0O&lt;@J:9@?0AYD@C?@H+0@A8K=7K;M\O;@O,D&gt;25S&gt;7H^?GS7G/];A:=4,W;@"0#7@O\51O]8G0/7H-^$/,GVZ/,X&gt;1P?Z5YRQZ/7D!8K&gt;CO;GO03A4FRZ:*K&lt;P#7.O, &gt;=LG"?,(:337J(TH&gt;5W7GO]UA?\)$^3["?\''BO_S&gt;2C;.@^K&gt;0Q_]T6EB@-M#''&gt;/":HH=8C;F/.@A8-2_6%L"D"K^=*K2H/7D\[O4MHH&gt;1V2ARUB[O,;"5JK&gt;3G]H/\Y"&lt;.K/JV*,*)$.7GL"?\Z"=36"?\/"&lt;1-=2,%7P#;EVHE5#:?R8/;C(-V_#QD"0 K&gt;OC7?/\Q?IS=[P\K"?^1=;'';,_]\"?0!&gt;@;8@/_3&gt;4VK&gt;;G;*8/7*?,*"8/=[PTK=;''8#H/&lt;#O\*"8/9[_,."?.5?HRK&gt;HS;J(.K?V4EB? D&gt;V7;P(/;PO/-&gt;4C7;_,7"?^Q?H/;A/-6AP/;,_\*=;DG=:G;,_]L"?/9&gt;@;73__3&gt;3"K&gt;8'';*8/7*?,*"8/;*?.I=:/;NH/73_/3&gt;?''&lt;C/]L"0TK=2@F$MW@,&gt;*KBM"&lt;ZEQV[%'';@Q&lt;?&gt;031A/F.UUANT6X0G2VKT+ZF6P#;I ZT&gt;3C6M/]N"?]P"?\C88/7JH/[\K5M+[Z+'';^K20#7H"[]&gt;4O;A/-@ZO-[G /;]_\*&gt;V7;J?0O&gt;4LGY5&gt;[.Q?74_,*&gt;=\GI&gt;&lt;:=0(^B?^X&gt;2+=[__VA?\,7-/7I/\(M^+;F!&lt;K=2LF%KB!:_\Q"&gt;2K4D*_&gt;0PH&gt;;_;D_^8A''?;FD(?H(,."5C@ . H&gt;2XF%O,;=04"=4&amp;KBO]_=1O7I?]&gt;=8C;EO\''&gt;6H_&gt;3&amp;K&gt;1H,_/,8B@/;&lt;O20=2C8O?]$A /;V/\ =5(G=17;V/]G"?-)=;37Q_^H&gt;2"K&gt;1#;TX/7T_, "8/;T_,X=5G;JH/7Q_.H&gt;6'';/O]G"0TK?KC7M@_7U?_&amp;"?/&amp;=2BK"?"0&gt;3RK&gt;5_;9(/79 TK&gt;6,G&gt;1_7@&amp;;%G/\J&gt;3''7HO"0&gt;2C;&amp;/,LA&amp;]5#;\_=6(GB?LF0Z94WU9-\%T_&gt;0DFB?\BO-3;I1;;@O]I&gt;2C&lt;,O^/A/\5)?KLG0/;P/,E=4LF_4E#XEFKUX-/)''''QBO,ZA)#;E^X:=1^KBO\4:OO7Q/]LK_W;MQ?;F8,3OHG;F@#7F Z[4*Z&amp;1H/O":Y$&amp;S8HB?0"A)#7E-_^=0JK=0NK5S*Y&gt;1 HB7?;E#85&gt;0NK&gt;0NKO==?=1 HB?&lt;@L$5@?0AT?$C?@B., O&lt;@XA1@?0@,1HC?@I^R0O&lt;@I[\@??=%9LC?@BNB@O??'';2@?0@1BLC??:61 @#7H ["=2_7D?^""?_LBO,%A(/;Z4?;WC;;P4[7R5''7SH/7R0#;I@ZK&gt;4%O&gt;4(;&gt;4UE=4%^=4"K=6&lt;H&gt;2XF"?/R&lt;/."7?,!B@/7Z8.&amp;N_\O"0#*A2"KX/W;[8/;@8/;B$&gt;K&gt;2DH=04F1?&lt;@L''^@(_&lt;@L8"@G /G5P[?@A+@@H/?@B.-@O??&gt;&amp;&amp;@?0@L$0C??;&amp;V @":A'';7CUJVRX,HUPXK?0@(S8C?@D[;0O&lt;@A&gt;^@?0@$V&lt;C?@AX@PO&lt;@S]5@?0@V8,C??;G6PO&lt;@B%$@???\? C?@B6M@O??-=\@BO\ A._7M+/7X8/7P@#;H@ZK&gt;0Y9&gt;3-W&gt;19W=1)1=3ZK5@#;H@ZKP''/;M%S;F%K7F''_7N8/7B #;H@ZK&gt;5J9&gt;5O0&gt;3PHB:M\9;+7HT;''2O\_WN^:(-[&lt;;0XK=0&lt;F+F&gt;/Z&amp;).Y6(^B4''KA8/??&lt;6M4???;3&amp;Z???9F.G??=CFY/??=%]LBFDG&lt;Y"U.H/EBLXGB:O(1&lt;C""&gt;"K1%ZTK  K$Y:[2M*K/8.&amp;]Y-QB@-3K$=VMH,."5C@ . HB3''7WM4GB&lt;[]&gt;5091"G]A /7N?,_&gt;3@G"6]8WVU\BO-_=;G;MX/7J?-(AS-RXO,P"5(H&gt;3K7G?\(A8.7''+"2.0#7W_.1=3^K&gt;237Z@V3)=;7@H/ B@/;R/,G=38F4G:2#:S;@0#;#//C&gt;0_8*_\GLO^WA6/7X_,7&amp;T*RB@.[&gt;1;7HH- &gt;@8E_\NB=1?; ZXHM/,G5@[5]8&gt;B(20H''/,;&gt;0&amp;K&gt;4W;U/]A"0TK?G''7G?!97/\G?H/;A0\K?@G7G? JA6/7X_,5&amp;T"RBO.%&gt;0_7&amp;P[P_+JO)O,CB@/7G?_1&gt;1&lt;FB?\_&gt;N3;G0XK?G''7G?!97/\G&gt;&lt;#;A0\K=9?;G?/XA0/&lt;2_\_&gt;MHG5ES7K_-"G/-Y&gt;0_7S [Q2%ANG0/;$/,W&gt;0_7(/ EA?\[&gt;0/+&gt;2\^&gt;&lt;C;A&gt;XFP?19=2BK4?!94H,E5+=XR!&lt;K&gt;8;;I?,G=;K8B ^@=5W;WJ1K"0#;A0_7@8.ZPIU^B@/7N?,_&gt;3@G"6)4W%&gt;GBO,.=8K;L(/73_19&gt;;RK"?,G&gt;I2K&gt;3+7% W1*;C&amp;";&lt;HB8VL"?,HA\&gt;M+Y&amp;?*L2.+\:V60#76O2[&gt;0_8DO-\A7 7^7X7^0 K?@G7G? JA?\MQ?S;UA;;X?,G=5\F4L-YQQ&lt;K/J20.K!*,E)^Y&amp;]]W*=&amp;.Q&lt;KXJ!61A;O"929'']Z^4I6^=03IBO/]=0W8)_\R=0S; ?-^A6E&gt;X7)$]G#@%\H!=0H-[T9PQ$"G*(Z&amp;!ZBC)&amp;G"QX,HK?,D4PZ*&amp;6D6G8-/"W&amp;H $ &amp; (*KY8-])''SB"?FK /\L+[.&gt;4L[C3;Z"W9]]"5,H"3W;BU&gt;KMP K=;'';BPX "@T-"463[],HB?0)A)[7A-CD=1NK=0:K3UJU&gt;0XHB&gt;C7AC8F O]E&gt;0W2&gt;4:K&gt;5RK&gt;0_;@'';;O  ?&gt;0SVA/?&gt;&gt;D7@?0@=VDC??/F2PO&lt;AKJ_@=1O 5_\CG(/J[LIM.&lt;.5/LV(7  K&gt;A4F^&amp;O??&gt;?O O??8?P@???.LHC???LL@EQ#&gt;0%;&gt;3^K!+*I.X.7B@.&lt;"=6P58,H1&lt;EGU55(]DX_&gt;2JKWOE/7P K=0PGSWEK_$"KSH-K&amp;T"&amp;BO,FA&lt;)02W;G"&gt;FK6JV2&amp;P K= ]M\D-&gt;RH-L"4.YRJXH&gt;0@G2''GI_,^K9(/S)KJYB@/6A451R79H"42KR9!H) #;@@_J\L%&gt;18/\"=&amp;#-),HB:BD%W0^YH-2P"ZK&gt;0NKI-A)+J.03MC7N8/R"&lt;VF-($H=7+7DO\D?W?;AODG)C:4T&lt;Q(ME1TUGQL8?-P=7I&lt;4(,H=1*8=0*(G0.K*G^/X;T0;B*;IX-Z"7I9"6"K^)]:(''/7LHZ) &gt;9FBKU^AZY0''G6T"86K$)JK%0 KZZ]:0!:\A)*L+8&gt;W"?BK=2UQ.8.R"9&amp;O"9*K$8J_^*)@=1;;DOC;FX,HS5%5Y6*$^+8_''H.\#9&gt;K/X/7QD.&lt;KGJW\)Y2% !A+@UL)UZXXH,H_0YVXWQ*G0.E0X"8"+@H&gt;BXF!W16\6!*R4=D!3ZKB@/$=0S&lt;:0Z7=2^81O\Z":.K''X''7BH&amp;8":FX":RK0O,H&amp;F6MBB.LA_.["5O;^(D&gt;BCO;AN@F?C+7PO,F=5O7C&gt;SV=0P^#P^K2V3BSK'' 0K+%&amp;+PHB;ZK3YG&amp;"0"&amp;:6M@[''U MA?;EH-F=1-:.P K5%_GMA9H"7)2MH- "66P^IY3*HV4]H-9"HI:"66KN]][9X.P"9FL$H,H%X.Q"H2F$B[F^Y.K%X.Y$8.W"918-H.[#;26%I&amp;K*(.^^YE&amp;BHY0 7F@\)Y?%XVS"0"*.K[MG0-\+/,==4,^7(/X-]K_BMG;OO\H"0U.8V[$W."=5Z+"%.&lt;H=_\D?XS;AO")A(YZ^%Q.S@!J0@U_+%^\TH,H&gt;1P#L?,MG0/A-;''LG+ZK,XB,]@#GU UROEI#T(,HSU&amp;521&lt;K/6/YXU](M%$^"56_WH-Z"3].XUBK^X--''VJ.*MRZ,X.L&amp;;&amp;S,8.,BO\RIZ-/G#G;AL4F)8^Z"H-$"5U0N5T"-C3 O.FK-8.9([.7-VJ2]+BK(X.($+BYBO,E=0W8)_\R=0S; ?0-A7!6]HE."5"K\*.K3H/M+LRK/  K&gt;2Y''L%T66435G=BK2*GE-:Y)(F2\[ #7BPY(4&amp;.?[Z2''(\SK"=DH:#?J&gt;0\^&gt;77V&gt;K#7AO58&gt;0SZ&gt;4W75@[Q+'')(G8-.^6=*\D3BV*,0"0 K*ZJZ.!:.";I;-&amp;)]ZF2G](,HY5ZT+Q&lt;KZJM0,A:0A)S;BKW;MO]1"0#7F^;V=0T_=&gt;''7E_\D?X+;AO"Y&gt;2K;+J(G*''"ZYD 6UTL^B2"KU&lt;JF=0DH=:08A$)D^5X^B&lt;4G88*7 H-8"6&lt;&lt;!%ZIB@-IA5RMP)BK)8.&amp;1X;Q#@ K=:&lt;F[%I"[%RKTH-K,F"&lt;B@/7 DO;CPYW"5*?_Y&lt;HB9:5&amp;*P^=?O7Q/\U=0S=WO,D=0LF&amp;&amp;^][*A4PG]&amp;W8-H"2?7DEJ-!,C;HO\L[+"K+H.5%K&gt;\BJS]AT:@XXY4"4&amp;KXJ]700#7#?[&lt;A@Y8\*"]G0-X"2R0O,+7C/\N7Z77QH,H.O]F=0;7AO5_&gt;0S8]S&lt;FT([;AHL=WU=3H31!IKH$=4$)=0&gt;K2(/J*\+H)*RX''8.X":I?%7JKBFRKTS&lt;8"0 K=0C_S39WYT'';K!=X"6JSZ9) ''7Z*";\H7]7B=Q8K&gt;2S7F#O7N/\==1#&amp;=2D^"&lt;A6=2W;]+XH4O_[=0S=_O,D=&lt;YFA?-3XG_;IH-UB@-*)GB0G*XF$DN^TZ1 6R[''VOZKBO\#)NOB6T.?J1=I"5A.VEJA)VV1!MTH&gt;@[7]/\T=0S=Z_,D&gt;G'';A/.V*@Z&amp;^I%&amp;S#!ZP!8K[H-.$&amp;&gt;X-K^X$*.KBKF^_''E&gt; 7!\G0-Z_/,BXUZKU(/;B:IK4;3"4Y6,":&gt;K9VJ0UP"$=4TF+8F4 +*DBN&lt;G&gt;16''KZUY( #8I/\D?XW;AO]BA*1#2V[7J5HHX ]!(6JWX(/;I(,:&gt;2%2U=S;QO].^]FKBN''7L-:5)8BN[Q&lt;KT6=5W52,\&lt;0_,X.8&amp;K&amp;KBM_7AGX9VGM)L1?;@X/;AL5O"7NK_HBE]P!0=4O;A_\4=1[!6O\HG(/NZLAF,+&gt;8+,&amp;\6P#0=0W=W_,E&gt;HXF\41(N#NKX8,.)U&amp;KB@/8)_\N=0W=XO,E=0TG$F2N]H-="4I8MVX(6#C\W-:K1(/E&amp;LR%BBDGB?^UIO.OA(2Q"9JK$8. "ZZF+P K=:P5A$-*UW-_"5*KW9=$,9V.$*RP&amp;  KY(-VWB"K&gt;1.KZ&lt;VF=0XH&gt;@K7%?\M=0S=ZO,D&gt;G;;JO.Q*@Z*^I)$S#UOQVZ!^KX^*@ZQ&gt;0:/&gt;277 8/7E(/!6X.3"(.I*7VKB@/8)_\O=0S=SO,D&lt;@^N]817"7^KSW =Y"3DN.)O9(/E"&lt;NX0*TH&gt;1 GB?^L&gt;:8FSF-W^6JKXX-_''564*NZZ3(.8"9&gt;J(X"#B@.K&gt;2K%Y?\@W #5A5Z%ZI6K5@#F3-W4-O\X\BD^"4I)^UU1BBDG&lt;KW-,8/7HX/-N?W;J*$H9?_R=0S=S_,D=:@/A?,%[C,!"2(HB2#;AMPF,9=6XQ&gt;KW37;HX]M-#36V?FK1(/D&amp;\J&amp;BO,Y=0S8)_\L=0S;_O0TA49&amp;UW!\"52KWI1[+[77@:ST";@H44?+MQ8KPE]VU&amp;1T(%7[&gt;0/7K(.:"&lt;B[1:0HN/\B&gt;JW7C?\D?S;;AL0G(CR3Y&lt;1ZB@/7(O,M&gt;2LFQ[])''G[GB@-S"5:]Z[B8-+Z,-JDH=3D2A''Y3OVMW"0 KL&lt;9R&lt;A;X"=J&amp;3\F^])U5"7RKR5Y!Q(/;E8-G,F"KBGE8_7-B=5- //W7LK_7OQ&gt;K0''Z:XKSA1Z#F$L H&lt;O\D?S3;AO!&amp;A(U] W5#W%"2T9=N"0 0&gt;0)-&gt;0\_B6I*W'')Y"0!%^I"&amp;**^[1A&gt;_";BI/&amp; HB5*%\,@^:(.[=4JS0P#7"_.V=0S8)_\W=0S;!?.$&gt;7&lt;F"824)_\]V&lt;&lt;,G2G;AOXF'')U%O!&gt;K&gt;3P+O8-AB@.+V/\K&gt;0;7C(,H9L_M71?O=_.T=0W8)_\V=0S=/_,D:0^O]H94"7NKV(ETUO,&amp;B@/7&gt;_,6&gt;6?;KPY  WY3G%2KVZYV0*;"'']VK2X.$"ZNF)@ K;L[V=0P_=?[7C/\D?T3;AO!"&gt;0S;YP_;AUI$O_,Q=43;S?\+G0-''"5V0U[=&gt;&amp;ER&gt;"94H(9&amp;W)1;7Z?,(A&amp;Q&lt;]64^B8/;HO\&amp;#)Y0''E+K&gt;0;7H8.^";VU2*@H)^XES''="!W"KUH-^$6''MBO^N=_0DA''!1)9. ()V9G?_;=4[7C/\D?TS;AO!YP?.QA&amp;_;G7[;@Q&lt;KXJ5*.1:6":"+&amp;&lt;0H+?\U=86K"?.S=0RK"?"%=1NK"?\D?WZK"?,D=(.!N@VR[892"7NKSB3;L(- B@/7*O,6&gt;8(F"[*A0W''HB@.;+:&gt;:.6Z0WG%J_$M\+6^:G0/;K?]O&gt;1K7FMW5+?\]G/_8=1S7AO4?&gt;0S8S?//A513]E+;B#37A[Z &amp;9Z,G,77ADDF&gt;1)3H''D_B75Z_5Y&gt;%U''@0IV=&amp;K=Y&amp;G8_B?^+=1#7AO/4&gt;0S7@O.+A0-CR6]JR$./4=OK+&lt;3L26]CG -JX%-HRE:93,2-2-OT-D=GG /7C?,P&gt;0&lt;GB?-2=17;MO]*=6?7FO\&lt;=6T^"?&lt;@W8*@???(E(C?@EI;0O??5RH@?0@?&gt;\CT*_&lt;@J,^@08/K"8&gt;K$H*SBO,"A(98#HFK_H/??&gt;F6@O??&gt;&amp; @???''S\C???SO O??;NY@???C@$C?@C5J0O??*;9@?0@"24C??90H@H,H&gt;6#;G/,4&gt;7H_B?&lt;@@"[@A-R)-\NK28.O"9BJ$0#;H ZN^H2A"72K???#=$C???,5@O??:LF@???6Z\C??&gt;6L O??4!"@?0@2_,C??;2MPO&lt;@F34@??&gt;*.8BKBO,9I/,A&gt;4W;Q/C;@O\:=3#2=0G7PQ&gt;K?0@&gt;K C???RR@O&lt;@MV_@???*Q4C?@B-*P@ K=1[;N-FKP_\:AP/;D(-A&gt;3+Q"0TK?0A= H@0??&gt;^,4@G??&gt;AE B$???%MTCJ4Z_?@@E)@O&lt;@UI/@G&amp;8F!???;1P@"_??;1P@[(/??&gt;]UPH/???&amp;*0O&lt;@E?$@"?&lt;@LU-@B@/M&gt;4#Q"7W7R@TK=1D;A8.)#+#X&amp;P"9A5VHN''VK&gt;0PH&gt;0&lt;GB?,[&gt;0&lt;F"?,D7GWA"@"9A???,.''@?0@NQ(C???4VPO&lt;@KS&amp;@"?&lt;@GX@@BM,FB3%HRC(:3$#^7L?N6-=I3S\_B;N*[FQ%Z61$YV.*,+F+*+D_B?08?X/M"? 9&gt;X,EB3%HRC(93$''^7L?M6==I3S\_B;N*[FQ%Z61%YF.*,+F+*+D_B?&lt;@HZV@??&gt;B[ C?@D''5@O??#$Q@?0@6E8C?@@9&gt;PO&lt;@AS?@?0BF=TC??=9Z O&lt;@_YH@AP/;DJ(''=1K7B+K$=1''7C7C3&gt;1[;D64%&gt;0&lt;^B?,H]&amp;]]XWJ$=1S7C:J,-;V$\_,WG /;"H-"&gt;8G\"0VU(JBV)(,H.Z],VE%.[E8_YH-5''(&amp;-BCHF#TGGVNRKBN7N2._"T\\6G66K]XM0^P"Z9O]Q"0TK&gt;1Z3M_\M9\''K9=5U034^YX-2 V=0#,:Q1L:K*H.Z I]0BM8F_^40$6.KBDH,Y?-YG0.5)&amp;5\WV5*X6I/*;":):.5G0/;5TC7]0Y/\ET=^VY+SW-S_3DH9 ZS=1*:&lt;/\@=08HB&lt;9M/C\6SU)HG(-"''WF4]5]0]V.KVP :3UO+:,7C7A:K/WV+U:Z5(Y2%";HHB;N'']F)+[7M#YF:#+J.''(+L_B;"&amp;\E9"[7A_W7B&amp;-[^'')+X_B?\VX&gt;G;CSEMR2&lt;90UOYG+FK)IV'')(!H!UIH"6:K_IY?)  8A)$)9(N+"0#T:*?7VQ&lt;KXWB).+&amp;)+KN4)6-^WF=+XQ&lt;K&gt;0''7@S;;@_,IQO\I&gt;0GX=0G7BPXK??&gt;5P@C??8&gt;M@O??8L3@??&gt;&amp;SLBK??&gt;\#LBK??&gt;[9(C?@A&lt;3PO??)$3@?0AJ0@C??8&gt;L0@#LA/??.1&amp;@?0BE9(C??&gt;''&amp; O&lt;@RL3@"?&lt;@W83@"?&lt;@W.Z@?0@VFXC?@D(Y O&lt;@QNZ@?0BD&amp;X@HB?&lt;@R,@@?0A0\0C?@A&lt;3PO&lt;@V[M@"?&lt;@X7M@"?&lt;@YA&amp;@??? 3LC?@E&amp;3PO??-T@@?0A0\4@HR [?@DS&amp; O??^!&amp;@?0@VFXC??;\3PH/??:A3PH/??:DY O??:^Z@??&gt;59(C??;,Y O??^6Z@B@/;0/-[&gt;6W;-?.(=4;;]O_M=&lt;77TO]1=:/7._-N=6O;3Q&lt;K&gt;97;R_-H&gt;93;(_-D=477&amp;O^W=4+7S/^\=9/7R_,:&gt;:,^B?3Y?WO "?#Y&gt;WLEB???"=G+"???1@=[???U4^3??&gt;-G(/??''&lt;3LBO&lt;@XOB2A/&lt;@CIQ&lt;?0@(,3S?@A[0(?&lt;@C,3L?0@/WB&amp;K?0@%/WBK?0@PQ;C???Y!RH/??&gt;''L3H/??=E!RO??10T^???=B#3??=.=\O??&gt;-G,BO??5QQ;???9U00E??&gt;@.FC??&gt;*JOO??:\3@??&gt;]%G2K???!*OZK???FQ:;?@B1&amp; O??6L^.?0AA7@&gt;K?0@*:8VK?0@$P)C?@ADEG/&lt;@KFY&amp;?0@''=\K???7G+/??=NY&amp;"????D3N"???&gt;-G,"???&gt;I&amp;X?0@A^.K???.OW/&lt;@@;L2???77B H?0A1NEJK?0@B=\S?@@2T^ W???S&amp;Y/&lt;@CIQ&lt;???;#53?@@&amp;^.H/?@@,Y&amp;(/?@@Q0)O&lt;@@K50?0@EK!S?@@E:8/&lt;@A^.FBO&lt;@K):8?0C]??8E?0@B=\K?@@5Q;O&lt;@@W+"?0@KFY2K?0@H8TRK?0@#!RC??&gt;$OWO&lt;@M T ??&gt;H7B*KB@/???J.EO??05G,???\^.K??=750/??3Z8T"???7G+""???;X@@?0@L%G2K?0@XZ8RK?0@"1;C?@A-!Q?&lt;@FF.D?0@0FY+?@@ #6@#?@CCWB?&lt;@BBOXA_&lt;@E/B"?0@D\JS???=B$O???(T\?0@L%G3?@@]&amp;Z@ K&gt;83;M?,?&gt;8O;]/\-&gt;437%O^U=2;7R_]9=8S;K_\&gt;&gt;9P_B?-^&gt;13;G?-]&gt;6G;F/\%=5+7V/\^=2G7W/]\=13;EO-)G /^=?FK&gt;?G&amp;"8/8WO,]"3_;&lt;#W7&lt;/,]"8/&lt;WNZK"?_18O/1AP/&lt;H?,("6?8H?,("?Q_&amp;/"''"8/ ?JZK-)(EB?,(&gt;BM/"?,(?BO4"9*7"?2''8H.K&gt;JZZX@TK&gt;BO7JH.''?BO7JH,"-73&lt;)8.KM/"&amp;"6A&lt;AP/7JO0#)8/7JO #H(-&lt;W8/8)3ZK"?2&amp;_KXEB???3EWD?0@IG_+??87/V/&lt;@B$8(???T3L;?@GLLW/&lt;@GQ=&lt;???*&amp;.G?@BGX%O??=BT_?0@#= RK?0AQ-("K?0ABRW#?@DC9VH/?@EHF*H/?@LZQZO??M&lt;Z(??&gt;7.U#??9;WSO&lt;A\"DH??&gt;XD/G??(2]K/??OD&lt;[?0AE:_2K??&lt;=CP:K??&gt;-&gt;*C?@DIH0/??/0U ?0AQ-3:KBO&lt;@H?P9"?&lt;@H]\K?0@K5XG?@A4^MO&lt;@EVLR???U;-+??9@J=_??%-\J???4Y*K??&lt;IP)O??=Q5VBO??13"@&gt;I4GB???#&lt;2L?0@T\&amp;K??:]LRO&lt;@HTU4???+\+K?@G9G O&lt;@HQQ:???X7_O?@CMO''O??57M5?0AHDFRKBO&lt;@XZ? ?0ANTBC?@EI;H?&lt;@X8S]?0A ]C+??;&amp;ABO&lt;@TH/F??&gt;$_/ _???.N*BK???1/33???5RK/??&lt;/74???;0@C?@@^D7O&lt;@D0)&gt;?0@D 5S?@ARN6H/?@A]T_@#?@E&gt;V2O??+:V"?0AMZS#??99ZW/??''%)^??&gt;/)ZK??;JWSO??(F"4G(/??&gt;" !O&lt;@AH\+???+Y2+?@@^K!_??;N9V???3EXG?@@P__/??&lt;Q85?0@B:'';??&gt;:9&amp;(,H??&gt;$ K;??;%?P/??+7M4??&gt;_#H3??91;H?&lt;@S$==??&gt;-!M7?@FF0 1??@C_4NX/?@C2QI?&lt;@G7P9?0@''W;;?@B6 P/??:!* ??&gt;BP&amp;#??:MV"O??8AHY??&gt;U*[+??&gt;06Q #??&lt;] //" A0/?@@&amp;62/??:Y5*?0@IZO[???A]_/&lt;@C CD???3M(@H??&gt;=P)@F?0@MY2+?@@3%PO&lt;@BZ&gt;^?0@O/;;?@@*FIO&lt;@E"&amp;ZB@,&gt;SD0&gt;O,)L6M#J2-#XSL(&gt;G0.Z&amp;Y&amp;Z&amp;)%=_G1=_W1&lt;_Y&amp;ZG /;Y/\&gt;&gt;3;7Y/]&amp;=3;7O/]&amp;=6[;O/\&gt;&gt;6[;Y/,&gt;&gt;3;;Y!8K&gt;V3;CO5,A0-WXVEWU;U!/;&gt;5-[&gt;?X[UWG0-]YVU]W[E%.[&amp;1,[&amp;9Y[E]G0/7IO\H=0#7IO\$=0#;BO,$&gt;2S;BO,H&gt;2S;IO,H=0#7IA8K&amp;)&amp;Y&amp;Y.Y_W1&lt;_W5;_W6Y&amp;!8K&gt;8;??:_C5(/??:-FY/^N?0AXOB(EB2$F $BEYX"I[YI1#7VKBGP?]#)T+VSAG&lt;2K)KF].J.C6C.5"9JK)9FK(8.''P,MV,).%%I^W=0XHB9"X$*P^=5/#O6#;H0YOZVA.G8-U1(R( J!9_B''7E(.7":V_$;Q2 ''VF^X-V"8J:!90H=1K@&gt;5TF[XVY%A&lt;K=&gt;#;G?/#A3H)S$\^O@[??&lt;L3PH/??&lt;YH O&lt;@ISG@???^!DC?@C_NP@#KA+W7K*_7J1?7Z_,_&gt;6$GYWA1X!9G=:'';G?/#A/??]-&amp;@?0BH7,C??8@&amp; O&lt;@*RE@G-(F=5W7AO\.=Q&lt;K&gt;1XGU5AGPQ;;S/,G=5$F=57G=3CQG?\(A&lt;-X=3[;Y!;;V_,G=48F6LMGU1&lt;K6 _?@L#"0O&lt;@I15@^"T_&gt;1 GJD)7RQ;;#O,G=9PF?0AFUDC?@K&gt;+0J''7V!?7I@_4T/\O&gt;6D^&gt;9S;W0[;H/\N_L\^3O\GU Y_ H:;G0,@@@@@@P@@@@8@@@I$@)0@@@@B@FL@@PBC@@D@!@BD@@H@!PBK@@D@#@BL@@H@#PBO@@D@$@BP@@H@$PBU@@D@% BV@@H@%0B\@@D@''PB]@@H@'' B#@@D@)@B$@@H@)PB+@@D@+@B,@@H@+PB/@@D@,@B0@@H@,PB5@@D@- B6@@H@-0B&lt;@@D@/PB=@@H@/ CC@@D@1@CE@@H@1 CU@@D@5 CW@@H@6@C-@@D@; C/@@H@&lt;@C3@@D@=@C5@@H@= DO@@DAD@DQ@@HAD D-@@DAK D/@@HAL@E!@@DAX E#@@HAY@E0@@DA\PE2@@HA\0I]@@DBW I_@@LBX@I:@@DB^0I;@@LB_@J_@@DB(@J4@@LB-PJ5@@DB- J9@@LB. J;@@DB/@K@@@LB0PKB@@DB00K.@@LB;0K/@@DB&lt;@LO@@LCD@R%@@DD) R&amp;@@HD)0S\@@DD7PS^@@LD70TE@@DEA TF@@HEA0TG@@DEB@TH@@HEBPTN@@DEC0TU@@LEE TV@@DEE0TY@@HEF TZ@@DEF0T[@@HEG@T%@@DEI T''@@LEJ@Y*@@DFZ0Y2@@HF\0Y4@@DF]PY&lt;@@HF_PZD@@DF!PZL@@HF#PZV@@DF%0Z^@@HF''0 ;@@DHO@ =@@LHO  ?@@DHP@!I@@LHR !J@@DHR0!T@@LHUP!:@@DH^0"G@@HH"@$''@@DIJ@$,@@HIKP$2@@DIL0$4@@HIMP$6@@DIM0$8@@HINP$:@@DIN0%V@@HIU0%W@@DIV@%)@@HIZ %*@@DIZ0%5@@HI] %7@@DI^@%8@@HI^P&amp;"@@DI(0&amp;#@@HI)@&amp;$@@D@K@@D@@0@E@@\@BP@@P@D@@D;$@@A@@P@@]N@@@D@A@@A@DH@@P@D@@D@M @A@@PA\PE2BWDI\ @A@@@@@P@@@@D@@@@J@OXA4 @IQDYLU@@8XWI-[ ADX7%2[@ARY6U/\ A^Y7I%Z0A(Y7U2L A2Y7U2]PBHZFU"\ B^[FE4[ B.@@P@@@@@??&lt;@@P@F@@P@@@@@??&lt;@@ @G@@$@A@@@@@C??0@A@@(@A@@@@@C??0@@@@P@@@@@??&lt;@@@@D@@@@@O??@@X@@@@A@@H@C0@P@AD@A@@@@@C??0@F@@@@@P@B@@&lt;@D@@Q@@P@@@@@??&lt;@@0@C@@T@B0@"@@UIT44 @B9LT44 @B9NT44 @B9SR5L @B9.[B@ @CX@@O??@@L@A@@H@@0@@O??@@D@C @@??&lt;@@P@M@AI!X''Y3@F9"[G]&amp;@GQ"[G]3@G)#X650@HA#X650@HY$[F%''@H9&amp;\&amp;E#@IQ([F%''@I)([F%''@JA,ZV]!@JY,ZV]!@J1,ZV]!@KI,ZV]!@K!,ZV]!@K9,[6M,@LQ.]V-4@L)0\7Q&amp;@MA0\7Q3@MX@@@@A@AD@@@@A@@4@@@@A@A@@@@@A@@0@@@@B@@H@@0@@@@D@B0@@@@D@A @@@@D@BP@@@@D@@P@@@@D@B@@@@@D@A0@@@@D@B @@@@D@@@@@@@D@A@@@@@D@AP@@@@D@C @@@@D@C0@@@@D@D @S@B @L@@8@DH@R AR@E(@X A*@GH@^ BB@H(@$ BZ@JH@* B2@K(@A@@@@@D@&amp; @D@@@@@PCN@@P@@@@B@M8AH@@D@@@@@PG&lt;@@P@@@@A@28@@P@@@@DCS@@D@@@@@PMP@@P@@@@AAGX@A@@@@@DD! @D@@@@@PR&lt;@@P@@P@AAL0@A@@H@@DD7@@B@@D@@PS,@@P@@@@AA^ @A@@@@@DFG@@D@@@@@P V@@P@@@@ABBX@A@@@@@DH  @D@@@@@P"0@@D@M @A@@ @AP@L@AP@G@@"@B I[0@C@D$@S0%.@@L@RPALBV4@@ AOBV0@@ ALBV,@@ AI@@D@@PAI@@D@D @A@@ @@P@DBW@@@ AW@@D@@PEA@@D@M @D@@8@F@@"@B0@@P@D@VH@@ J;@@D@A@E1@@HB.0@A@@PAX0@B@+,@@P@D@WH@@ J;@@D@A@@2@C @T AX@@D@3 @J@A(@K@@&gt;@E@@X A4@HX@&amp;@B*@K0@@ @F@@0@1@@B@*X@!@@B@*H@@ @F@@0@5 @B@*X@#@@B@*H@@ @F@@0@; @B@*X@$@@B@*H@@ @F@@0AD@@B@*X@% @B@*H@@ @F@@0AK @B@*X@''P@B@*H@@ @F@@0@1P@B@*X@)@@B@*H@@ @F@@0@50@B@*X@+@@B@*H@@ @F@@0@;0@B@*X@,@@B@*H@@ @F@@0ADP@B@*X@- @B@*H@@ @F@@0AK0@B@*X@/P@B@*H@@P@J@BP@J@@,@CH@N@AD@D @S@AR@E @@PD&amp;@@ @E @8@E(@_@B^@L@@8 DD@@P@B @P@AX@G@Y/@@HB*PY1@@HB(0Y-@@HB(@Y+@@HB(P@D@@(@D@@V@A0F"P@B@*$F"0@B@*LF!0@B@*@F!P@B@*D@A@@J@A@@E @\A),@@ J)A)4@@ J#A)$@@ J A)\@@ J!@@P@B @P@AX@G@Y0@@HB*PY2@@HB(0Y.@@HB(@Y,@@HB(P@D@@(@D@@V@A0F" @B@*$F#@@B@*LF"@@B@*@F! @B@*D@A@@J@A@@E @\A)0@@ J)A)8@@ J#A)(@@ J A) @@ J!@@P@B @P@AX@G@Y9@@HB*PY;@@HB(0Y7@@HB(@Y5@@HB(P@D@@(@D@@V@A0F^ @B@*$F_@@B@*LF^@@B@*@F] @B@*D@@P@H@HP@#@BV@JP@+@B6@LP@1P@A@A8@@ @J@AP@@P@D@OP@@ @-@@D@A@C5@@H@SP@A@@H@K@AL@@D@A !^@@D@@PDL@@DAG @F@AH@]@B^@L @7 DH@@(@E @^@BX@K @6@C8@Q AN@EX@W@"C@@LG; @[BHL@@0@R@A,H P@CA&gt;8@FP"A@@L@D @YBG4@@0_.@A H_P@C@AH@F@!;@@LG; @VBG,@@0@R@AXH!0@BA&gt;8H!0@B@AH@A@@J@AH@F @"BG8@@0_.@A H_ @C@AH@F@!&lt;@@LG; @VBG0@@0@R@AX@A@@J@AH@F @"BHP@@0_.@A,H!@@C@AH@F0!?@@LG; @XBG&lt;@@0@R@A @@ @F@@8H @@CA&gt;8@F@"@@@L@D @X@@P@B @R@A(@H "E@@LG; @[BHT@@0@R@A,H  @CA&gt;8@FP"B@@L@D @Y@@H@A @NBHX@@0_.@A,H! @C@AH@F0@A@@X@E@@U@AX@E0@X@A(@@P@R@@D@B@@A@@PIJ@@B@;8@@P@A@;8@@P@6@@H@B @,@@P@B @P@AX@G@%5@@HD#@%3@@HD" %2@@HD!@%1@@HD%P@A@@PI]@@BAIT@@P@BAILD''P@A@AH@@P@H@@D@A@R&amp;@@HD(P@A@@DD!@@A@AH@@P@H@@D@A@%8@@HD,@@A@@DD6 @A@AH@@P@H@@D@A@&amp;#@@HD2P@A@@DD/P@A@N8@GPA@@DX@S@AR@E @W A$@F(@\@A6@G0@  BH@H8@%@BZ@J@@) B,@KH@.@B&gt;@LP@2 CP@MX@7@C"@N @@ SVAK$@@ SVAK(@@ &amp;]AK$@@ &amp;]AK(@@ R=AKP@@ R&gt;AKP@@ R?AKP@@ S@AKP@@ SAAKP@@ SBAKP@@ SCAKP@@ SEAKP@@ SFAKP@@ SGAKP@@ SHAKP@@ SIAKP@@ SKAKP@@ SMAKP@@ SNAKP@@ SQAKP@@ SSAKP@@ STAKP@@ SUAKP@@ SVAKP@@ SWAKP@@ SBAKH@@ R&gt;AK\@@ SHAK\@@ SQAK\@@ @CBXLI! @@BX$I%0@DBY$I( @S@@D@L @C@@0@G @(@@H@A @LBV$@@ TUBR$@@ TU@@D@A@$*@@HEEP@A@@PIJ0@BAQT@@P@CAPPEA0TJ@@DA9 @(@EX@X@A*@GP@_ BH@IH@''@B&amp;@K@@. CD@L8@6@C"@N0@= D@@P(AE@D^@R AL D&lt;@TXAT@EZ@VPA[ E8@XHA#@FV@Z@A* F4@[8A2@GR@]0@@P@DBU$@@ TK@@D@A@%Z@@HEB0@A@@PIV0@BAP,@@P@DBU0@@ TK@@D@A@%]@@HEB0@A@@PIW @BAP,@@P@DBU&lt;@@ TK@@D@A@% @@HEB0@A@@PIXP@BAP,@@P@DBVH@@ TK@@D@A@%@@@HEB0@A@@PEE0@BAP,@@P@DAQ @@ TK@@D@A@%A@@HEB0@A@@PIP @BAP,@@P@DBTL@@ TK@@D@A@%D@@HEB0@A@@PEFP@BAP,@@P@DBTT@@ TK@@D@A@%F@@HEB0@A@@PIQ0@BAP,@@P@DBT @@ TK@@D@A@%I@@HEB0@A@@PIR @BAP,@@P@DBT,@@ TK@@D@A@%L@@HEB0@A@@PISP@BAP,@@P@DBT8@@ TK@@D@A@%O@@HEB0@A@@PIT@@BAP,@@P@DAQ,@@ TK@@D@A@%Q@@HEB0@A@@PIT @BAP,@@P@DBUL@@ TK@@D@A@%T@@HEB0@A@@PIUP@BAP,@@P@DAPX@@ TK@@D@A@%V@@HEB0@A@@PEB@@BAP,@@P@DBU @@ TK@@H@A@S AOT@@@S7APT@E TGAP\@IPTIAP(@I @A@AH@@P@H@@D@A@$,@@HEEP@A@@DE@0@A@E(@@0@L@BX@P@@C@@ @C @TBVX@@ TUBS\@@ TPBSL@@ TO@@L@B@@N@APIZ@@BAQTIYP@BAQ@IY@@BAP&lt;@@0@H@@8@E@%''@@HEEP$8@@HED@$4@@HEC0@A@@LIJP$*BR,@@P@,@@L@C@@V@BH@@P@DBVL@@ S^@@D@A@$;@@LED@T&amp;@@D@A@$&lt;@@HD7 @A@@LD8PS=AP0@@P@*@@L@C@@V@B@@@P@DBS4@@ T''@@D@A@$&gt;@@HEI0@A@@PIO0@BAR\@@P@CANPD9PS(@@D@@@@J@KH@&gt; @IQDYLU@@8XWI-[ AFX7%2[@ARY6U/\ A Y7I%Z0A,Y7U2L A8Y7U2]PBDZFU"\ BN[FE4[ BZ@@P@@@@@??&lt;@@ @@@@H@A@@@@@C??0@A@@H@A@@@@@C??0@B@@D@@ @D@@@@@O??@@D@@ @D@@@@@O??@@D@@0@D@@@@@O??@@D@@ @D@@@@@O??@@@@A@@@@@C??0@A@@H@A@@@@@C??0@B@@@@A@@EZ6U2[ @ Z6U2[ @&amp;[VE2Z0@,[VE2Z0@2[VE2Z0@&lt;@@@@@P@@@@@@@P@A@@@@@P@G@@@@@0@B@@L@A0@@@@P@A@@E@@X@A0@H@AH@H@@*@CH@N AB@D(@T @B@@@@A@AHBUHPH!UV@@H@@@@BFP YU@@D@@@@@Q),@@P@@@@AF)H@A@@@@@D[X @D@@@@@RV2@@P@@@@AKF0@A@@@@@D3''@@BBDX@A@@@@4@ED @Q@A @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@?&lt;S?6O?,?&gt;3?8/?X@@@@@@@@?&gt;K?;O?"??[?8/?"?&gt;3?9??1?&gt;K?6O?N?&lt;$@@O?"?&lt;;?8 @@??[?8/?N@@C?;O?"?&gt;K?=/?6?&lt;;?;O?,??[?;@@@?&gt;K?6O?N?&lt;$@@O?X?&lt;;?;@@@?&gt;3?=/?X@@C?8/?"?&gt;K?;O?,?=#?=/?,?&gt;3?8 @@?&gt;K?6O?S?&lt;8@@O?"?&lt;;?6O?"?&gt;K?6O?,?&gt;3?8/?"?=#?;O?"?&gt;K?3/?"?&gt;3?4??,?&gt;K?6O?S?&lt;8@@O?X?&gt;3?8/?"?&gt;K?= @@?&gt;K?;O?X?&lt;;?6O?,?&gt;K?6O?X?&gt;K?3/?,?&gt;K?6O?N?&lt;$@@O?,?&gt;3?4??"?=#?8/?6?&gt;3?;O?I?&lt;;?3/?6?&lt;S?7_?]?&gt;_?4??,??[?6O?S?&lt;8@@O?"?&lt;;?8/?,?&gt;K?8 @@@@C?;O?N?=#?;@@@?&lt;;?8/?"?&gt;3?6O?1?&gt;3?6O?S?&lt;$@@@@@?&lt;S?6O?"?&gt;3?6O?X@@C?= @@?=#?;O?"@@C?6O?"@@C?6O?''?&gt;K?6O?N?&lt;$@@O?X?=#?;O?,??[?8/?,??[?;O?X?&gt;K?8/?6?&lt;;?8/?"?&gt;K?8/?,?&gt;3?8/?X?=L@@O?D?=#?;O?X?&lt;8@@O?"?= @@O?X?=#?8 @@?&lt;S?8/?"?&gt;3?6O?"?&gt;3?6O?S?&lt;8@@O?"?= @@@@@?&gt;0@@O?X@@@@@@@@?&gt;0@@@@@?&lt;;?;O?,??[?&lt;P@@??[?8/?"?= @@O?6?&lt;;?=/?6??[?=/?,@@C?= @@??[?= @@?&gt;3?;O?,??[?6@@@??[?8/?X?&lt;$@@O?"?&lt;;?;@@@@@C?;O?X@@C?=/?X?&gt;0@@O?6?&lt;;?=/?,??[?90@@?&gt;3?8/?]?= @@O?N??[?6O?X?=#?;@@@?= @@O?"?=#?6O?,?=#?6O?X?&gt;K?6O?''?&gt;3?8/?]?= @@O?D@@C?3/?N?&lt;8@@@@@?&gt;H@@O?"?&lt;S?6O?,?&gt;K?3/?D?=#?3/?"?=#?3/?I?&lt;P@@@@@@@C?3/?X?&gt;K?8 @@@@C?=/?,?=#?;O?"@@C?3/?X?&gt;K?6O?"?=#?3/?N?&lt;$@@ AM@BP@I@@A@BT@IP@B@BX@I0@C@B @J@@D@B$@JP@E@B(@J @C@B,@K@@F@B4@KP@G@B8@K @P@B&lt;@K0@H@C@@LP@I@CH@L @K@CL@L0@J@CP@M@@K@CT@MP@L@CX@M @M@C\@M0@N@C$@N @O@C,@N0@P@C0@O@@O@C4@OP@P@HH@!0@A@H @"@@D@H$@"P@C@H(@#P@D@H8@$P@F@IH@$ @C@IP@&amp;@@K@I(@&amp; @K@I&lt;@''0@O@J@@(@@C@LH@0 @A@LP@1@@A@LX@1 @A@L @2@@C@L(@2 @C@L0@3@@C@L8@3 @C@M@@4@@C@MH@4 @C@MP@5@@D@M(@6 @D@M0@7@@D@M8@7 @C@N@@8@@C@NH@8 @C@NP@9@@C@O @&gt;@@P@O,@&gt;0@H@O4@?P@H@O&lt;@?0@H@PLA@0@H@P8AC @K@Q@AD@@K@QHAD @K@QPAE@@D@Q(AF @L@Q0AG@@M@R@AH@@M@RHAH @M@RPAI@@N@RXAI @N@S AN@@O@S(AN @O@S&lt;AO0@P@W$A^P@C@[XA- @JA\4E3P@BA]TE5P@CA^$E:P@EA"DFHP@JA",FJ0@MA"4FKP@MA#TFMP@NA#\FM0@NA(LF 0@DA+$F.P@O@@H@"@@$@BP@@P@&amp;@BX@@0@(@B @E @)@B$@E0@*@B(@@0@+@B,@EP@,@B0@E@@-@B4@B@@.@B8@E0@/@B&lt;@E @0@CD@EP@2@CH@@0@4@CP@@0@6@CX@C0@7@C\@A0@9@C(@@ @;@C,@C @&lt;@C0@@ @=@C4@C AD@DP@APAF@D\@A@AH@D @D0AI@D$@CPAJ@D(@APAM@D4@BPAP@ED@B0AR@EH@A@AS@EL@DPAT@EP@A@AU@ET@D@AV@EX@C@AW@E\@CPAX@E @D AY@E(@A A[@E,@B A\@E0@A A]@E4@B0BB@H @@PBI@H$@@0BJ@H4@E BN@ID@E@BT@I @@0BZ@I(@@0B_@I&lt;@@ B"@J @APB)@J$@A@B*@J4@D0B2@KH@A@B3@KL@B0B4@K @A@B:@K(@A@B;@K8@D B?@K&lt;@A CA@LD@A CB@LH@@PCC@LL@APCD@LP@@PCE@LT@APCF@LX@@PCG@L\@APCH@L @@0CJ@L(@@0CK@L,@A@CL@L0@@0CN@L8@@0CO@L&lt;@A@CQ@MD@A@CT@MP@E CU@MT@D0CW@M\@D0CZ@M(@E C[@M,@D0C\@M0@E C^@M8@@0C @N@@@0C!@ND@APC"@NH@@0C#@NL@APC$@NP@@0C%@NT@APC8@O @E0C;@O,@E C=@O4@E C?@O&lt;@E DC@PL@E DF@PX@B0DH@P @B0DJ@P(@B0DN@P8@@0DO@P&lt;@A@DP@Q@@@0DQ@QD@A@DR@QH@@0DS@QL@A@DT@QP@@0DU@QT@A@D[@Q,@D@D\@Q0@C0D]@Q4@C@D @R@@C0D!@RD@C@D"@RH@C0D#@RL@C@D$@RP@A0D%@RT@CPD&amp;@RX@A0D+@R,@D D-@R4@D D/@R&lt;@D D1@SD@D D3@SL@D D8@S @@ D9@S$@A D:@S(@@ D;@S,@C D&lt;@S0@B0D=@S4@C D&gt;@S8@B0D?@S&lt;@C E@@T@@B0W)A^$@E0XLA 0@B0X"A"H@DPX+A",@C0X,A"0@C@X-A"4@C0X.A"8@C@X5A#T@A0X6A#X@CPX7A#\@A0X8A# @CPZCA(L@E Z9A+$@@ Z:A+(@A %+BV0@CP%.BV&lt;@CP@A@F@@I@@%@BX@I0@(@B$@J @+@B0@KP@.@B&lt;@L@@1@CH@L0@4@CT@M @7@C$@N @;@C0@OPBB@HL@!@BE@HX@!0BH@H$@" BK@H0@#PBN@H&lt;@$@BQ@IH@%@BU@IX@%0BX@I(@''0B @LH@1@CF@L @2 CL@L8@4@CR@MP@6 C\@M8@8@C"@NP@&gt;@C;@O4@?0DC@P8AD@DR@QPAF D\@R@AH D$@RXAN@D:@S&lt;A^PF6A\4E5PW)A"DFJ0X-A#TFM0ZCA+$@@ X@@@P@@@IPAD0@D @P@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O?6??[?;@@@??G?=/?6?&gt;3?= @@??[?&lt;P@@@@@@@@@@??/?=/?6@@C?9??,??G?&lt;_?6??/?=/?1??X@@@@@@@C?&gt;??;??D@@O?''??G?=/?;??,@@O?;??[?&gt;0@@@@@@@O?''??[?;O?;?&gt;3?&gt;??,??[?=/?6??[?;O?6?&gt;3?;@@@?&gt;3?&lt;P@@@@C?;O?6?&gt;0@@O?;@@C?&gt;??1@@C?&gt;??6@@@@@O?1@@@@@@@@@@C?=/?1??[?&gt;0@@?&gt;0@@O?6??D@@O?,??G?8/?,?&gt;3?9??''??/?;O?6?&gt;3?90@@??[?&lt;P@@??/?=/?]??G?&lt;_?,??G?=/?1??/?&lt;_?,@@C?&gt;??6@@C?;O?''?&gt;\@@@@@@@C?=/?''@@@@@@@@??D@@O?6??D@@O?''??G?;@@@@@C?;O?6??[?;O?6?&gt;3?7P@@?&gt;_?8 @@??[?&lt;_?1??[?8/?"?&gt;3?;O?1??[?&lt;_?"??D@@O?;@@C?&lt;_?,@@@@@O?6??/?= @E@@@@@O?;@@@@@@@@??,@@O?6??[?;O?,?=#?;O?6?&gt;3?;O?6??G?;@@@@@C?&gt;0@@?&gt;_?= @@@@C?;O?6??[?&lt;_?6@@@@@O?1@@C?&gt;??1@@C?;O?''@@C?;O?,?=#?;O?6?&gt;_?8/?"?&gt;_?=/?1?&gt;\@@O?6?&gt;3?&lt;_?1??G?8/?,??/?9??1?&gt;_?;O?;??[?;@@@?&gt;3?;O?,??[?;O?"?&gt;3?=/?"?&gt;3?9??,@@@@@@@@@@H@U@AD@DP@@PAE@DX@@ AG@D\@A@AH@D @@0AI@D$@APAJ@D(@A AK@D,@A0AL@D0@BPAM@D4@A@AN@D8@B AO@D&lt;@BPAP@ED@B@AR@EH@B0AS@EL@@ AT@EP@A AU@ET@C@AV@EX@CPAW@E\@C AX@E @A AY@E$@C0AZ@E(@D@A[@E,@B A\@E0@D@A]@E4@DPB"@J\@@PB(@J @@0B)@J$@@ B*@J4@@0B3@KL@B@B4@K @B0B:@K(@B0B;@K8@A B?@K&lt;@D@CA@LD@D@CC@LL@@PCE@LT@@PCG@L\@@PCI@L$@@ CK@L,@@ CM@L4@@ CO@L&lt;@@ CQ@MD@A@CU@MT@@0CW@M\@@0CY@M$@@0C[@M,@@0C]@M4@@0C!@ND@A C#@NL@A C%@NT@A C9@O$@B DF@PX@B@DH@P @B@DJ@P(@B@DO@P&lt;@B0DQ@QD@B0DS@QL@B0DU@QT@@0D[@Q,@C@D]@Q4@CPD!@RD@CPD#@RL@CPD%@RT@C D+@R,@A D-@R4@A D/@R&lt;@A D1@SD@A D3@SL@A D9@S$@D@D&lt;@S0@DPD&gt;@S8@DPE@@T@@DPWVA]X@A@W.A^8@A0XLA 0@B@X"A"H@@ X,A"0@CPX.A"8@CPX6A#X@C X8A# @C Z:A+(@D@%+BV,@AP%,BV0@BP%.BV&lt;@BP@B@D @Q@AD@@H@Q AF@@D@Q0AG@@&lt;@R@AH@@8@RPAI@@ @R AJ@@H@R0AL@@0@SPAM@@P@S0AO@@0@T@AQ@@X@T AR@@D@T0AS@@(@U@AT@@&lt;@UPAU@@$@U AV@@\@U0AW@@ @V@AX@@,@VPAZ@@L@V0A[@@T@W@A\@@L@WPA]@@4@( B(@@H@*PB)@@D@* B-@@8@+0B/@@0@,0B3@@X@-@B8@@D@.0B&gt;@@,@/0B?@@L@0PCA@@L@00CC@@H@1PCE@@H@10CG@@H@20CK@@D@30CO@@D@4PCQ@@&lt;@5PCU@@8@50CW@@8@8PC!@@H@80C#@@H@9PC%@@H@&lt;PC1@@0AA DF@@XAB@DH@@XAB DJ@@XAC0DO@@DADPDQ@@DAD0DS@@DAEPDU@@DAF0D[@@$AGPD]@@\AHPD!@@\AH0D#@@\AIPD%@@ AJ0D+@@,AKPD-@@,AK0D/@@,ALPD1@@,AL0D3@@,ANPD9@@LAO@D&lt;@@4AO D&gt;@@4AP@E@@@4BL H2@@4E; W.@@0FH X"@@(FK@X,@@\FK X.@@\FM X6@@ FN@X8@@ F. Z:@@LIZ0%/@@ @@PA&amp;@DP@QPAF@D\@R@AI@D(@R0AL@D4@S AO@E@@TPAR@EL@U@AU@EX@U0AX@E$@V A[@E0@WPB"@JL@)@B%@JX@)0B(@J$@* B+@J0@+PB3@KP@-PB6@K\@.@B:@K,@/@B=@K8@/0CA@LL@1PCG@L$@20CM@L&lt;@4PCU@M\@6PC[@M4@8PC#@NT@&gt;PDF@P AB DO@QDAD0DU@Q,AGPD!@RLAIPD+@R4AK0D1@SLANPD&lt;@S8AP@WVA^8FC@X"A"0FK X6A# F. %+BV0I[ %/@@HD@@@D@@@@;@OF@AX@AP@@@@@@@@@@@@@@@O?,?=#?1O?X@@C?1O?,?&lt;S?;@@@?&gt;H@@O?X?&gt;0@@O?D?&gt;H@@O?N@@C?;O?N?&lt;S?6@@@?;C?3/?,?&lt;P@@O?N?&gt;3?1O?"@@C?3/?X@@C?6@@@?&lt;S?3 @@?;@@@O?"?=#?8/?X@@C?;O?X?&lt;S?6@@@?&gt;0@@O?X?&gt;0@@O?D?= @@O?,@@C?3/?,?&gt;3?6@@@?&gt;K?6O?D?&gt;H@@O?X?=#?6O?"@@C?6O?X?&lt;S?1@@@?&lt;S?6@@@?&gt;H@@O?X?=#?./?"@@@@@O?X@@C?6@@@?=#?3/?X?&lt;P@@ A9@BP@I@@A@BT@IP@B@BX@I0@C@B$@JP@D@B(@J @C@B8@K @J@B&lt;@K0@E@CH@L @C@CL@L0@F@CP@M@@C@CX@M @G@C\@M0@H@C$@N @I@C,@N0@J@C0@O@@I@C4@OP@J@DP@Q@@K@DT@Q @L@D @R@@L@D$@RP@M@D(@R @P@D,@R0@O@D8@S @Q@E@@TP@O@EH@T0@L@ET@UP@R@EX@U @S@E\@U0@T@E @V@@P@E$@V @N@E,@V0@Q@E0@W@@N@E4@WP@U@HH@!0@A@H$@"P@C@IP@&amp;@@C@I(@&amp; @C@I&lt;@''0@I@JH@)0@K@J$@+P@L@KL@,0@O@KP@.@@L@K,@/ @P@K&lt;@/0@N@LD@0P@N@LH@0 @A@LL@00@K@LP@1@@A@LT@1P@K@L @2@@C@L(@2 @C@L,@20@L@L0@3@@C@L8@3 @C@L&lt;@30@L@MT@5P@L@M\@50@L@M8@7 @C@N@@8@@C@ND@8P@P@NH@8 @C@NL@80@P@NP@9@@C@NT@9P@P@O @&gt;@@J@O$@&gt;P@Q@O,@&gt;0@E@O4@?P@E@O&lt;@?0@E@PLA@0@E@PXAA @O@P AB@@O@P(AB @O@P8AC @C@P&lt;AC0@L@Q@AD@@C@QDADP@L@QHAD @C@QLAD0@L@Q,AF0@R@Q0AG@@G@Q4AGP@S@R@AH@@G@RDAHP@S@RHAH @G@RLAH0@S@RPAI@@H@RTAIP@T@R4AKP@P@R&lt;AK0@P@SLAL0@P@S AN@@I@S$ANP@N@S(AN @I@S,AN0@J@S0AO@@U@S4AOP@J@S8AO @U@S&lt;AO0@J@T@AP@@U@[XA- @F@#HBL @UA\4E3P@BA\8E3 @LA^$E:P@DA^(E: @MA^8E; @OA 0FC@@OA"DFHP@FA"HFH @LA",FJ0@GA"0FK@@SA"4FKP@GA"8FK @SA#TFMP@HA#XFM @TA#\FM0@HA# FN@@TA+$F.P@IA+(F. @NBV,IZ0@M@@H@BP@O@@&lt;@@P@P@A@@@ @Q@AD@@PA-@F4@@ A=@G4@A@_CA&lt;L@@0_FA&lt;\@@0_#A&gt;L@@ _$A&gt;P@A@@A@I @I@@%@BX@I0@)@B(@K @/@CH@L0@4@CX@M0@9@C(@N0@&lt;@C4@Q@AE@DX@R@AI@D(@R0AN@E@@TPAR@EL@UPAV@E\@V@AY@E(@V0A\@E4@  BC@HP@!PBF@H\@"PBT@IT@% BW@I @&amp; B_@JH@(0B$@JT@) B''@J$@* B+@J0@+PB3@KP@-PB6@K\@.@B;@K0@/PB&gt;@K&lt;@0PCB@LL@1@CE@L @2 CK@L0@3 CO@MT@50C^@N@@8PC"@NL@9@C%@O @&gt;PC;@O4@?0DC@PXAB@DJ@P8AC0DP@QDAD DS@Q,AG@D]@R@AHPD"@RLAI@D%@R4AK0D3@S ANPD:@S,AO@D=@S8AO0E@@[XBL WMA\8E:PW*A^8FC@X!A"HFJ0X,A"4FK X5A#XFM0X8A+$F. %+@@HC*@@D@@@@4@DP@@X@D@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@C?)/?6?&lt;S?3/?D?&gt;0@@@@@@@C?6O?D?&lt;P@@@@@?&lt;P@@O?D?&lt;S?;@@@?&gt;3?6O?X?&gt;3?;O?S?&gt;3?8/?X?=#?6@@@?=#?1O?"?&gt;3?8/?X?&lt;8@@O?6?=#?8 @@?&gt;3?3/?"@@C?1@@@?&gt;K?6O?"@@@@@O?"@@@@@O?,?&gt;0@@O?"?&gt;H@@@@@?&lt;;?8/?6??[?8/?"@@@@@O?,?&gt;K?;O?X?&gt;K?6@@B@@(@D@@P@@H@[PA-@@L@_PA=@@HG0 _B@@PG00_C@@DG1@_D@@TG1 _F@@PG2@_H@@TG80_#@@LG9@_$@@H@@ A.@BP@I@@A@BX@I @C@B(@J @C@B4@KP@H@CH@L @C@CP@M@@C@CX@M @O@C\@M0@G@C$@N @B@C,@N0@N@C0@O@@B@C4@OP@N@DP@Q@@E@DX@R@@D@D$@RP@M@D(@R @E@D4@SP@I@E@@TP@K@EH@T @D@EL@T0@K@EP@U@@D@ET@UP@K@EX@U @L@E\@U0@M@E @V@@K@E$@V @F@E,@V0@J@E0@W@@F@E4@WP@K@HH@! @A@H @"@@A@H$@"P@C@IP@&amp;@@C@I(@&amp; @C@I&lt;@''0@B@JH@*@@E@J$@+P@D@KL@,0@K@KP@.@@D@K,@/ @K@K&lt;@/0@F@LD@0P@F@LH@0 @A@LL@00@E@LT@1P@E@L @2@@C@L(@2 @C@L,@20@D@L0@3@@C@L8@3 @C@L&lt;@30@D@MD@4P@D@MT@5P@D@M\@50@D@M8@7 @C@N@@8@@C@ND@8P@E@NH@8 @C@NL@80@E@NP@9@@C@NT@9P@E@PXAA @K@P AB@@K@P(AB @K@P8AC @C@P&lt;AC0@D@Q@AD@@C@QDADP@D@QHAD @C@QLAD0@D@QPAE@@C@QTAEP@D@Q,AF0@K@Q0AG@@O@Q4AGP@L@R@AH@@O@RDAHP@L@RHAH @O@RLAH0@L@RPAI@@G@RTAIP@M@RXAI @G@R,AJ0@K@R4AKP@K@R&lt;AK0@K@SLAL0@K@S AN@@B@S$ANP@F@S(AN @B@S,AN0@N@S0AO@@K@S4AOP@N@S8AO @K@S&lt;AO0@N@T@AP@@K@#HBL @KA^(E: @MA 0FC@@KA"HFH @KA",FJ0@OA"0FK@@LA"4FKP@OA"8FK @LA#TFMP@GA#XFM @MA#\FM0@GA# FN@@MA+$F.P@BA+(F. @FBV,I[0@M@@D@B @P@F4@_P_BA&lt;LG1@_FA&lt; G80_$@@H@P@@D@@@@G@@8@@L@@ @@@@@@@O?X@@C?;@@B@@PC&amp; NZ@@DC*PN)@@DC* N*@@HC1POE@@H@@PN[@@D@@P@A@@PC&amp; N)@:(C1P@B@O0@A@@@@E @- @F@@X@@@@@@@@@@@@@@@@@@O?"?&gt;3?8 @@?&gt;0@@O?"?&gt;K?6@@@?&gt;H@@O?,??[?8 @@??X@@@@@@@@@@O?,?&gt;0@@O?,?= @@O?,?&gt;0@@ @O@6(CZ @A@6,CZ0@D@7LC\0@E@7TC]P@B@7(C^ @A@78C_ @D@8DC P@E@8TC!P@D@8\C!0@C@8 C"@@D@8$C"P@A@8(C" @B@8,C"0@D@9DC$P@D@9LC%P@D@@H@B0M+@6,@@ M7@7\@@0M&gt;@78@@ NE@8T@@ NH@8 @@ NI@8$@A@NK@8,@@ NT@9P@@ NV@9X@APNW@9\@@PNY@&lt;X@@P@A@ADCZ M+@7LC]PM:@78C PNE@8\C"@NI@8(C"0NQ@9LC%@NU@@D@G@@V@@D@H @L@@D@A@@A@G7?:@@A@@DCQ@@A@@DB9P@A@@@@A @A?6@@@@@A@H(@[ @A@I(@C@@L@A(@H@@&amp;@B0@L @8@C8@Q@AJ@E@@U A\@@D@A@HD@@G?X HH@@G?[@HH@@G?!@HH@@G?2 HH@@D@&gt;0IB@@D@&lt; H&lt;@@DAIPH8@@D@PPH8@@DABPH4@@D@=PH,@@DAZPH4@@D@C@L_@2LCIPL2@3XCO MB@4PCQ ML@5HCU @A@@XB(@J!@* B-@K"@.P@A @@@A(@@@@ @@@@I @@@B0@@@@2@@@@N@@A?4PBQ@@A?68BQ@@A?5 BRP@A?7TBB@@A?5PBN0@A?40BJ@@AA;HF5 @AB@P@C@CY@[PA. G@@\XA3@GR@] A7 G$@^(A&lt;@G6@_0B@ HH@ 8BE@HZ@"@BI H,@#HBN@H&gt;@$PBR IP@%XBW@I"@&amp; B[ I4@''(B @JF@(0B$ JX@)8B)@J*@+@B- J&lt;@,HB2@KN@-PB6 K @.XB;@K2@/ B? LD@0(CD@LV@10CH L(@28CM@L:@4@CQ ML@5HCV@M^@6PCZ M0@7XC_@NB@8 C# NT@9(C(@N&amp;@:0C, N8@;8C1@OJ@=@C5 O\@&gt;HC:@O.@?PC&gt; P@A@XDC@PRAA DG P$AB(DL@P6AC0DP QHAD8DU@QZAF@DY Q,AGHD^@Q&gt;AHPD" RPAIXD''@R"AJ D+ R4AK(D0@SFAL0D4 SXAM8D9@S*AO@D= S&lt;APHEB@TNAQPEF T ARXEK@T2AS EO UDAT(ET@UVAU0EX U(AV8E]@U:AX@E! VLAYHE&amp;@V^AZPE* V0A[XE/@WBA\ E3 WTA](E8@W&amp;A^0E&lt; W8A_8FA@XJA!@FE X\A"HFJ@X.A#PFN Y@A$XFS@YRA% FW Y$A&amp;(F\@Y6A''0F  ZHA(8F%@ZZA*@F) Z,A+HF.@Z&gt;A,P@@PE(@@D@@PE6@@D@@PE:@@D@@PEW@@D@@PE(@@D@@PEG@@D@@PFC@@D@@PE(@@D@@PBN@@@@@PD@@@D@@PEF@@D@@PD?@@D@@PF(@@D@@PE''@@D@@PFJ@@D@@PEB@@D@@PFK@@D@@PE$@@D@@PER@@D@@PD5@@D@@PE2@@D@@PEL@@D@@PGX@@D@@PEQ@@D@@PE[@@D@@PD-@@D@@PC&gt;@@D@@PED@@D@@PD!@@D@@PDO@@D@@PDR@@D@@PB!@@D@@PD0@@D@@PBF@@D@@PDQ@@D@@PBF@@D@@PF=@@D@@PD.@@D@@PD3@@D@@PE#@@D@@PBG@@D@@PD!@@D@@PCQ@@D@@PD!@@D@@PDU@@D@@PFC@@D@@PDV@@D@@PGG@@D@@PC3@@D@@PE(@@D@@PE(@@D@@PE(@@D@@PE(@@D@@PE(@@D@@PE(@@D@@PG4@@D@@PE(@@D@@PE(@@D@@PE(@@D@@PE(@@D@@PBN@@@@@PBN@@@@@PBN@@@@@PBN@@@@@PFJ@@D@@PFJ@@D@@PFJ@@D@@PFJ@@D@@PFJ@@D@@PE2@@D@@PE2@@D@@PE2@@D@@PE2@@D@@PE[@@D@@PC&gt;@@D@@PC&gt;@@D@@PC&gt;@@D@@PC&gt;@@D@@PC&gt;@@D@@PC&gtgt;@@D@@PE(@@D@@PC&gt;@@D@@PE(@@D@@PC&gt;@@D@@PE(@@D@@PC&gt;@@D@@PE(@@D@@PC&gt;@@D@@PE(@@D@@PC&gt;@@D@@PE(@@D@@PC&gt;@@D@@PE(@@D@@PC&gt;@@D@@PE(@@D@@PC&gt;@@D@@PE(@@D@@PDR@@D@@PE(@@D@@PDR@@D@@PE(@@D@@PDR@@D@@PE(@@D@@PDR@@D@@PE(@@D@@PDR@@D@@PE(@@D@@PDR@@D@@PBN@@@@@PBF@@D@@PFJ@@D@@PD3@@D@@PFJ@@D@@PD3@@D@@PFJ@@D@@PD3@@D@@PFJ@@D@@PD3@@D@@PFJ@@D@@PD3@@D@@PFJ@@D@@PD3@@D@@PFJ@@D@@PD3@@D@@PFJ@@D@@PD3@@D@@PFJ@@D@@PD3@@D@@PE2@@D@@PD!@@D@@PE2@@D@@PD!@@D@@PE2@@D@@PD!@@D@@PE2@@D@@PD!@@D@@PE2@@D@@PD!@@D@@PGG@@D@@PE[@@D@@PGG@@D@@ @$@BP@OP@@@DP@RP@Z@D,@S@@ @D8@T0@"@ET@WP@(@HH@"@@1@H(@$P@8@IP@&amp;@A@@I,@''0AE@JH@)0AJ@J(@,PAP@KP@.@AX@K,@/0A]@LD@1PA"@L @30A''@MP@6PA/@M0@7PA5@N(@;0A7@OH@&lt;0A=@P8AD0A?@R(AL0BE@S AN BO@VHAX0BR@VTAYPBT@WDA\ BU@_TA=PBW@"XBI BX@#4BOPBYA&amp;$F\ BZA''TF_@B$A(DF#@B,A(&lt;F$@B8A)TF'' B:A*DF*@CDA*4F- CLA+8F0@CV@@H@CPJ6@+$@@@J&lt;@,@@A@KC@-L@BPKY@-0@F K''@.$@G K-@.8@HPK3@/X@H0K9@/(@I0K&lt;@/0@JPK?@/&lt;@J LB@0H@J0!LBD0@K@!PBEL@KP@1@@@@1 @@@L0@@@CR@@@@6@@@@M8@@@C$@@@@: @@@O@@@@C6@@@AB@@@@Q(@@@D,@@@AL @@@S @@@D&gt;@@@AQ@@@@UX@@@E\@@@AX @@@V @@@E.@@@A]@@@@XX@@@FL@@@A$ @@@Y @@@F^@@@A.@@@@[8@@@GD@@@A2 @@@]@@@@G"@@@A:@@@@^8@@@G4@@@A&gt; @@@ @@@@HF@@@BC@@@@!H@@@HX@@@BG @@@"P@@@H*@@@BL@@@@#X@@@H&lt;@@@BP @A?5+??P@A?5(@@@@A?5(@@@@A?4,@@@@A?3P@@@@A?5(@@@@A?5(@@@@A?5(@@@@C?5(@@@@@@@(@% BV@@KP@@@C?5(@@@@@@@(@% BV@@I @@@C?5(@@@@@@@(@% BV@@I @@@A?48@@@@A?5(@@@@A?6X@@@@A?70@@@@C?5(@@@@@@@(@% BV@@H0@@@A?5(@@@@A?5(@@@@A?5(@@@@A?5(@@@@A?5(@@@@C?5(@@@@@@@(@% BV@@K@@@@A?5(@@@@A?5(@@@@A?5(@@@@A?5(@@@@C?5(@@@@J@AH@% BV@@LI@@BV@IX@@"@@@@G?V @@@@G?P@@@@@G?N @@@@G?V @B@@O?KP@@@@@@B BV@IX@@$@@@@G?Q @@@@G&gt;7_?=@@G&gt;=/??@@G?N/??@@G&gt;=/??@@G&gt;&lt;/??@@G&gt;&lt;/??@@G&gt;8O??@@G&gt;3???@@G&gt;=@@@@@G&gt;8P@@@@G&gt;;@@@@@G?C @A@@G?A @A@@G?A @A@@G?A @A@@O?A @A@@(@@@BV@IX@@?L@@@DC\@KV@@DC6 @L@E$@-@B:@L@@1 CL@MH@6@C^@NP@: C0@OX@?@DB@P AC DT@Q(AH@D&amp;@R0AL D8@S8AQ@EJ@U@AU E\@VHAZ@E.@WPA^ F@@XXA#@FR@Y A'' F$@Z(A,@F6@[0A0 GH@\8A5@GZ@^@A9 G,@_HA&gt;@G&gt;@ PBB HP@!XBG@H"@" BK H4@#(BP@IF@$0BT IX@%8BY@I*@''@B] I&lt;@(HB"@JN@)PB&amp; J @*XB+@J2@+ B/ KD@@DAZPKZ@@DA\0KZ@@DA]0K$@@DAQPKZ@@DAY KZ@@DAUPKZ@@DA#PKZ@@DAZPKZ@@D@$0KZ@@DA&amp;0KZ@@DAP@KZ@@DAP@KZ@@DA*@KZ@@DA[PKZ@@DA!0KZ@@DAU0KZ@@DA! KZ@@DA\0KZ@@DAP@KZ@@DAN@KZ@@DAZ KZ@@DAUPKZ@@DA5@KZ@@DAV@KZ@@DAU KZ@@DAP@KZ@@DAD H&amp;@@DAP@KZ@@DAHPH&amp;@@DAH@KZ@@DAD H&amp;@@D@9PKZ@@DAE0H&amp;@@DAP@KZ@@D@" KZ@@D@# KZ@@DAJ KZ@@D@#0KZ@@DA.PH&amp;@@DASPH&amp;@@DALPH&amp;@@DAN H&amp;@@DAB H&amp;@@D@7PH&amp;@@DAD@H&amp;@@D@&amp;0J"@@DAL H&amp;@@DAE@H[@@DA PH[@@DAF0H[@@DAE H&amp;@@D@&gt; H[@@DA]0K$@@DAZPKZ@@DAFPH&amp;@@DAZPKZ@@DAFPH&amp;@@D@#PKZ@@D@"0KZ@@D@#PH&amp;@@DAZPKZ@@DAKPH&amp;@@DA!0KZ@@DALPH&amp;@@DAD@HZ@@DAZ KZ@@DAL H&amp;@@D@&gt; H&amp;@@DA!0KZ@@DAKPH&amp;@@DAKPHZ@@DAHPH]@@DAE@H[@@DAK H[@@DAX@KZ@@DAZPKZ@@DAY KZ@@DAD H&amp;@@D@$0KZ@@DA!0KZ@@DALPH&amp;@@DA!0KZ@@DALPH&amp;@@DAZ KZ@@DAL H&amp;@@DAZ KZ@@DAL H&amp;@@DAU KZ@@DAE H&amp;@@H@FP@$@C4@@@AD@E4@F BI@H$@M@CF@L\@MPCZ@M,@M0C0@OD@NPC3@OL@N0D4@ST@O@E"@VL@O E%@VT@P@E1@WH@PPE8@W @P0F*@Z,@Q@G5@_T@Q HB@ H@Q0H1@#D@R@H3@#L@RPH=@#4@R WKA\,@R0Y?A(@@S@ZQA)D@S ZSA)P@S0Z)A*0@TPZ7A+ @UPZ;A+0@U0@B@ADBW I_@@@B(@J3@@HB7PK$@AXB9 K&amp;@A8B: K,@A&lt;B&lt;@K2@BHB=0K8@BTB&gt;0K;@B\B?PK&gt;@B C@@LA@B(C@0LO@B0HO@ =@C$HP@!C@C,HR@!H@C&lt;HR0!K@D@HSP!M@DDHU@!T@DH@P0@@@P8@@@DT@@@AF @@@R@@@@D2@@@AN@@@@S8@@@ED@@@AR @@@U@@@@EV@@@AW@@@@VH@@@E(@@@A[ @@@WP@@@E:@@@A @@@@XX@@@FX@@@A'' @@@ZP@@@F*@@@A,@@@@[X@@@F&lt;@@@A0 @@@\ @@@GN@@@A5@@@@](@@@G,@@@A&lt; @@@_ @@@G&gt;@@@BA@@@@!X@@@H\@@@BH @@@" @@@H.@@@BM@@@@#(@@@I@@@@BQ @@@$0@@@IR@@@BV@@@@%8@@@I$@@@BZ @@@''@@@@I6@@@B_@@@@(H@@@JH@@@B# @@@)P@@@J&amp;@@@B.@@@@+8@@@KD@@@B2 @@@-@@@@KV@@@B7@@@@.H@@PB"@!(@@PB"@!(@@_=D@$P@@?=.@$P@B @@@IX@% @A @@@@_=V@#L@@_=V@$P@@_=V@$P@@_;^@$P@@_=Y@#T@@_=Z@$P@@_=X@$$@@_&lt;P@! @@_=Y@#(@@_&lt;K@$P@@_=Y@$P@@_=U@!(@@_=U@!(@@_&gt;A@$P@@?=X@#@@@@@J@IX@% @BT@@@@_=Y@#\@@_=U@!(@@_=5@  @@_=U@!(@@_=U@!(@@_;J@"P@@_=P@"&lt;@@_=[@#@@@_=X@"4@@_=X@!(@@_=M@"&lt;@@?=U@!(@@@@J@IX@% @BT@@@@_&lt;0@!\@@_=G@!\@@_&lt;3@!X@@_&lt;&gt;@!\@@?=3@!(@B @@@IX@% @B$@@@@_&lt;=@!\@@_=[@!(@@_;.@!\@@_&lt;D@ &lt;@@_;U@"8@@_;U@"8@@_;O@#@@@_;Z@$T@@_;&gt;@!\@@_;1@!\@@_;3@!\@@_;-@!\@@_;:@!\@@_&lt;L@!\@@_;&gt;@!\@@_&lt;H@!\@@_;2@!\@@_;?@!\@@_;&gt;@!\@@_;+@!\@@_;7@!\@@?;6@!@@@@@J@IX@% @A @@@@?;6@!@@@@@J@IX@% @A @@@@_;6@!@@@_;M@!@@@_&lt;F@\$@@_:)@\$@@_:8@!@@@_&lt;T@!\@@_&lt;T@\0@@_&lt;2@!\@@P\&amp;A&amp;H@@P\,@@0@ PDD@QXAG@D"@R AK D4@TXAS@ER@U AZ E&lt;@X8A(@F2@\PA5 G(@^8A=@G:@ @BA HL@!HBF@H^@"PBJ H0@#XBO@IB@$ BS IT@&amp;XB^@JJ@)0B+ K@@,XB3@KR@- B7 K$@.(B&lt;@K6@/0C@ LH@08CH@L2@4PCU M(@7(C#@NR@9 C'' N0@&lt;HC5@O&amp;@? DB P\AB8DP@QRAFPD] RHAI(D+@R&gt;AM@D8 S4AO(E@@TFAP0ED TXAQ8EI@T*AS@EM T&lt;ATHER@UNAUPEV U AVXE[@U2AW E_ VDAX(E$@VVAY0E( V(AZ8E-@V:A\0E4 W$A^(E?@XBA!PFF X,A#8FQ@@C@''0@@@@J@@@@% BV@@LI@@@A@$\@@@@A@KP@@@@A@\&lt;@@@@A@\L@@@@A@XL@@@@C@\L@@@@J@@@@% BV@@D@@@@A@UD@@@@A@JP@@@@A@W,@@@@C@^D@@@@J@@@@% BV@@N@@@@C@[T@@@@J@@@@% BV@@NP@@@C@''0@@@@J@@@@% BV@@I@@@@C@''0@@@@J@@@@% BV@@D@@@@C@''0@@@@J@@@@% BV@@I@@@@C@''0@@@@J@@@@% BV@@I@@@@C@''0@@@@J@@@@% BV@@I@@@@C@''0@@@@J@@@@% BV@@I@@@@A@$\@@@@A@$\@@@@A@$\@@@@A@$\@@@@A@KP@@@@A@KP@@@@A@KP@@@@A@KP@@@@A@\&lt;@@@@A@\&lt;@@@@A@\&lt;@@@@A@\&lt;@@@@A@\&lt;@@@@A@\L@@@@A@\L@@@@A@\L@@@@A@\L@@@@A@XL@@@@C@\L@@@@J@@@@% BV@@H @@@C@\L@@@@J@@@@% BV@@H @@@C@\L@@@@J@@@@% BV@@H @@@C@\L@@@@J@@@@% BV@@H @@@C@\L@@@@J@@@@% BV@@H @@@C@\L@@@@J@@@@% BV@@H @@@A@UD@@@@A@UD@@@@A@UD@@@@A@UD@@@@A@JP@@@@A@JP@@@@A@JP@@@@A@JP@@@@A@W,@@@@A@W,@@@@A@W,@@@@A@W,@@@@A@W,@@@@C@^D@@@@J@@@@% BV@@H @@@C@^D@@@@J@@@@% BV@@H @@@C@^D@@@@J@@@@% BV@@H @@@C@^D@@@@J@@@@% BV@@H @@@C@[T@@@@J@@@@% BV@@LI@@@C@[T@@@@J@@@@% BV@@LI@@@C@[T@@@@J@@@@% BV@@D@@@@A@\&ltlt;@@@@A@W,@@@@A@\&lt;@@@@A@W,@@@@A@\&lt;@@@@A@W,@@@@A@\&lt;@@@@A@W,@@@@A@\&lt;@@@@A@W,@@@@A@\&lt;@@@@A@W,@@@@A@\&lt;@@@@A@W,@@@@A@\&lt;@@@@A@W,@@@@A@\&lt;@@@@A@W,@@@@A@\L@@@@C@^D@@@@J@@@@% BV@@LI@@@A@\L@@@@C@^D@@@@J@@@@% BV@@LI@@@A@\L@@@@C@^D@@@@J@@@@% BV@@LI@@@A@\L@@@@C@^D@@@@J@@@@% BV@@LI@@@A@\L@@@@C@^D@@@@J@@@@% BV@@LI@@@C@[T@@@@J@@@@% BV@@D@@@@A@XL@@@@C@[T@@@@J@@@@% BV@@D@@@@B@B@@I@@$@@@@J@@(@@D@K@@,@@H@L @2@@L@N@@8@@P@O@@&lt;@@T@Q@AD@@X@R@AH@@\@S@AL@@ @T AR@@$@V@AX@@(@W@A\@@,@  BG@@0@" BQ@AH@%@BX@A(@&amp;0B_@A&lt;@( B''@BP@* B1@B(@-@B8@CH@.0B?@C\@0PCA@C0ANPD9@C4AX E#@C8A\PE2@D@FZPY2@DHF]PY&lt;@D0F PZL@EPF#0ZP@F@F%PZ^@FHF(PZ(@F0F+PZ6@GPF/ [@@G8@@P@A@'',@@P@@@@X@@PCL@@@@@PHT@_8@@PH0@@0@O A&gt;@HP@" BP@IX@''@B"@J @+ B4@K(@0@CF@L0@4 CX@M8@9@C*@O@@= C&lt;@PHAB@DN@QPAF D @RXAK@D2@S AO ED@T(AT@EV@U0AX E(@V8A]@E:@X@A! FL@YHA&amp;@F^@ZPA* F0@[XA/@GB@\ A3 GT@](A8@G&amp;@^0@@PDR@U\@@PD#@U\@@PDR@U\@@PDR@U\@@PD]@U\@@PDR@U\@@PD^@U\@@PDR@U\@@PDR@U\@@PDR@U\@@PE.@PH@@PE.@W$@@PE;@W$@@PE.@W$@@PE.@W$@@PES@W$@@PFC@W$@@PE%@W$@@PBP@W$@@PDL@W$@@PD4@W$@@PD9@W$@@PF''@W$@@PE.@W$@@PFD@W$@@PET@W$@@PFE@W$@@PE.@W$@@PEH@W$@@PD5@W$@@PE.@W$@@PEO@W$@@PGV@W$@@PES@W$@@PEU@W$@@PD=@W$@@PDQ@RT@@PEB@RT@@PD^@RT@@PD[@RT@@PDQ@RT@@PB%@RT@@PD^@RT@@PD1@RT@@PBI@RT@@PBJ@RT@@PD@@RT@@PBJ@RT@@PF=@RT@@PD3@RT@@PD,@RT@@PD;@RT@@PDQ@RT@@PBD@RT@@PDW@RT@@PBY@RT@@PD%@RT@@PDR@RT@@PFB@RT@@PDQ@RT@@PDQ@RT@@PC;@RT@@ @C@AL@G@@@@BP@OP@J@DP@WP@$@@D@C@KT@-TB5 KW@- HQ@!EBDXHQ0!IBD8HS0@L@@@@L @@@C @@@@&gt;@@@@Q@@@@D(@@@AP@@@@U @@@E0@@@A"@@@@Z@@@@F8@@@A4@@G&gt;8@DV@@G&gt;=@DV@@G&gt;&lt;PDV@@G&gt;_ DV@@G&gt;[@DV@@G?D D)@@G?D D)@@G?E0D/@@G?D D)@@G&gt;0 D)@@G&gt;U@DZ@@G?F0D)@@@@@@@A@@@@@L_&gt;,M&lt;@@@@@0=9Y;0@@@@CH.:]&gt;@+0@V@@@@@@BV@@@@QX@@@EM@G@A6 @2@"0@@0H,@AXC^P@V@-H@M0C.@CHASP@(@T4@E FE@A\BR@@2@QX@P@EM@A(AE A@@QX@@ H,@A4BK@AD@"0@G H,@A4BK@@X@"0@F0H,@B@BK@@]@"0@E H,@A0ASPA1@T4@\PIH@B BR@@2@$ @J@I#@D@C30@[@-H@F KR@EHB4 @,@-H@SPJ[@D&lt;BX0AJ@0(@J KR@DPAE @?@"0@F@KR@D(BX0AP@4D@P KR@DPCB @(@),@S@LJ@B,B4 AP@),@H@I#@@8B4 AL@),@F@N0@@4B&amp;0@V@),@F0I#@A8ASPAB@Q[?=@EM@AHBR@@=@"3?: EM@ADBK@@\@&amp;L@N0H,@BHBX0@]@"0@E EM@@8BX0@"@&amp;L@P0DV@DLAE @D@"0@N0DV@DLC^P@&lt;@&amp;L@O0I#@BLBX0@:@&amp;L@G@FE@C&lt;BK@@]@T4@C I#@C(BK@@N@0(@APH,@A@BK@@I@_P@EPFE@BTAF@A$@XT@R@IH@C0AE @@@T4@P H,@BPBK@@_@"0@F H,@@TAF@A$@"0@HPEM@@4B8_?2@WH@G0H,@E BR@@''@T4@F K!??HASP@P@%8@%0IH@C AW0@P@U&lt;@C0EM@G$BX0@:@"0@D0DV@D@ASP@[@R0@J@E-@A\BK@AX@6T@J@M%@B CYP@O@&amp;L@M@KR@A(B4 @Z@-H@F KR@A(B4 @Z@-H@F O(@@DB4 @,@),@S0J[@D&lt;B&amp;0AO@),@S0DV??XAE @?@Q[?;PDV??HB4 @@@-H@Q@LJ@B CB @(@0(@J@LJ@B CB @(@$ @S0LJ@A&lt;B4 AL@-H@S@KR@D0B4 AL@),@F0J[@D0BX0AC@"0@G@H,@A0BK@@\@"0@G@H,@A0BK@@\@7$@G@H,@BHBK@@V@"0@E H,@AXBK@@V@Q[?= DV@DLAE/?-@Q[?&lt; I#@BLBX0@?@&amp;L@H0I#@BLBX0@#@&amp;L@H0I#@BLBR@@2@&amp;L@B0I#@C(BX0@:@&amp;L@N I#@C(BK@@I@&amp;L@N H,@@$B4 @Z@"0@G@KR@A(BK@@\@-H@F H,@A0B4 @,@"0@H KR@B0BK@@"@-H@K@H,@BHB4 @,@"0@H KR@D4B40@]@-H@@@I#@A4B&amp;0AO@"0@E J[@D&lt;BK@@V@),@S0H,@AXB&amp;0AO@"0@EPJ[@D&lt;BK@@V@0(@J I#@BHCB @*@&amp;L@H LJ@B(BX0@"@0(@J I#@BHB4 AD@&amp;L@P0KR@@ BX0@H@Q[?6PDV?= AE @A@QX@A DV@@XAE @E@QX@H DV@BHAE @?@QX@P0IQ@C&lt;A9 AC@"0@F@DV?&gt;4B4 AJ@"0@N0H/@C0BX0AP@QX@P0I#@E@AE AC@&amp;L@T@F&amp;@DLBX0AP@"0@P0I#@@@AE @@@-H@Q@I#@C&lt;B4 AD@&amp;L@O0KR@DPBX0@?@+4@E@KP@CLBX0@?@0(@J@I#@BLCB @(@&amp;L@H0LJ@B BX0@#@&gt; @G@N9@BLB4 AP@XT@O0KR@E@A!P@?@-H@T@FE@C\B&amp;0@ @"0@GPJ[@B@BK@@]@),@H@H,@A4B&amp;0@ @"0@GPI#@@8ASP@N@&amp;L@C F^@@8BX0@N@T4@C KR@D0BX0@:@-H@S@I#@C(B4 AL@&amp;L@N KR@D0BX0@:@-H@S@I#@C(B4 AL@&amp;L@N N0@@4CB @E@),@F0H,@@$B&amp;0@[@&amp;L@G G4@ATBX0@^@_P@EPI#@A8A=@@U@T4@C I#??&lt;C00@,@,@@T I#@C,B+??+@&amp;O?6 KR@B0B&lt;@@,@#H@H KR@@@C2@@,@-H@T I#@C,BXP@W@),@S0LJ@B B(@@ @&amp;L@D0EM@@8CB @*@),@F0N,@DLAE @)@X/??0LJ@D(BK@@;@T7?90I,@ADC,@@:@-H@CPI#@C&lt;CB @(@2,@J@J!@BLDU0@(@-H@B0NR@B0BX0@:@(\@O@J[@B@BK@@]@*D@@@F9@BPASP@N@.X@K@EM@@8BX0@N@1T@S@J$@C(B? @[@-H@O@MG@A,B[@@Q@&amp;L@G G4@ATBK@@]@"0@GPJE@BLBNP@^@$L@E@I#@D@BX@@7@PP@Y@E2@FPBR@@-@QX@\@T5@D4D1 AMAE\@GPRO@E@C^PAP@"0@P0S&gt;@DPC:@AD@7$@O0KR@A(BK@@\@Q[?:0DV?&gt;(CB @(@&amp;L@H0KR@D0BX0@:@-H@S@I#@C(B4 AL@&amp;L@N KR@D0BX0@:@-H@S@I#@C(BK@@V@-H@F H,@A0B4 @Z@"0@G@O(@@DC^P@\@0(@J I#@BHCB @*@&amp;L@H KR@D(BK@@;@0(@J@I#@BLCB @(@&amp;L@H0H,@A4BK@@]@Q[?;PT5@D4D1 AMAE\@GPLJ@B(BX0@"@''X@P KR@DPBX0@?@-H@F H,@A0C:@@A@7$@G@LJ@A&lt;BX0@K@-H@F H,@A@B4 @Z@"0@G@J[@D&lt;BK@@Q@),@S0H,@AXAE/&gt;K@Q[?" DV@@XAE @E@0(@J@I#@BLCB @(@&amp;L@H0KR@E@A!_?Y@-H@T@FE@C&lt;B4 AL@&amp;L@KPKR@D0BX0@:@),@H@H,@A4BX0@N@T4@C H9@A$A9 @^@-H@Q@I#@DLB!P@!@_P@EPKR@A(BK@@\@),@S0H,@AXCB @(@&amp;L@H0LJ@B BX0@#@0(@J@I#@BLCB @(@&amp;L@H0J[@A,BK@@I@QX@A@H,@A0B)P@]@*X@@PI#@C,BK@@"@% @B0I1@A4B\P@]@"0@E H,@AXCP @V@#,@J@H-@B@CM@@]@#(@H D&lt;@A8BZ0@"@&amp;L@H H6@BHBK@@J@)@@C@I+@C(BX0AC@&amp;L@P0D,@@8AV@AC@R0@C GY@@\BC0@T@R(@P0LJ@DLC_P@&lt;@7$@O@M9@C0B]@@N@''H@O0I''@C0BW @$@68@I@MG@BLB8 @4@Y,@I0FV@B\A* @&amp;@X0@Q FL@DXA10@?@],@I@I,@C0B[@AA@&amp;H@C EM@A AR0@R@T4@F@H)@@LAR@@[@T4@C JC@@&lt;B5 @"@''&lt;@P H,@@8CB @E@"0@BPH,@@8BI0@U@$&lt;@EPH,@A4B  AB@&amp;L@P@I#@D@BX0A@@"0@H I#@BLBJ @&lt;@$8@K@I(@BHBV0@&lt;@" @@0IL@B\A1 @&lt;@''H@G@I#@D@BX0A@@&gt;0@GPO:@A4DRP@]@2P@C IQ@@8CR@@N@6H@C K0@DLB''@AC@ 4@C@G&amp;@APB$0@ @*\@H@E9@B@A^P@ @L(@F0DP@BXAD@@"@R,@F FK@B$BE @U@V0@B DV@CPA1 @4@QX@P0DV@F$AE A)@T4@]@EM@FLASP@I@T4@BPEM@@,ASP@K@T4@FPEM@A$ASP@H@T4@BPEM@G&lt;ASP@P@T4@^PEM@ADAD@A$@T4@DPEM@D8ASPA@@T4@SPEM@D4ASPA^@T4@U0EM@@@ASP@@@T4@@@EM@@@ASP@#@T4@\@EM@D4ASP@-@T7?=0EM?=PASP@@@_8@V E4@@,@4 @:@V,@F@E5@ADAS @F@ 8@FPHN@A$BC @Y@ 8@FPHN@A$BA0@9@ \@NPEM@@4ASP@Q@T4@R@EM@A$ASP@T@T4@C@EM@@0ASPAL@T4@P@F5@ADA-P@/@Y@@E0EM@GD@2@@I@L @B0CH@@$@2@@I@T4@G EM@A8AS_?,@@C&gt;0P@@?2$@@O:8@@C&gt;+P@@?,X@@O6&gt;@@C&gt;5 @@?2X@@O;C@@C&gt;9@@@?0@@@O:G@@C&gt;/@@@?28@@O;)@@C&gt;!0@@?-X@@O;V@@C&gt;&lt;P@@?38@@O&lt;;@@@@@@@@?/(@@O;1@@C&gt;70@@?-&lt;@@O&lt;3@@C?Z@@@?,P@@O;U@@C&gt;5P@@?-T@@O;$@@C?M0@@?8&lt;@@O&lt;#@@C&gt;0@@@?/L@@O&lt;^@@C&gt;3 @@?.@@@O&lt;5@@C&gt;30@@?,@@@O:&lt;@@C&gt;,P@@?-X@@O;S@@C&gt;* @@?,L@@O9H@@C&gt;O@@@?#@@@O9Y@@C=6 @@?TL@@O5C@@C?MP@@?,&lt;@@O:=@@C&gt;(@@@?+L@@O&lt;_@@C=.@@@?,P@@O&lt;)@@C&gt;+P@@?38@@O:6@@C?MP@@?,&lt;@@O:&gt;@@C&gt;/P@@?.L@@O:F@@C&gt;&amp;P@@?(L@@O8@@@C&gt;_0@@@@@@@O:*@@C?A0@@?+H@@O:[@@C&gt;WP@@?&amp;4@@O70@@C?K @@?+(@@O9[@@C=; @@?)(@@O:$@@C&gt;*@@@?*4@@O:-@@C&gt;&amp;@@@?*P@@O;E@@C&gt;(0@@?(&lt;@@O;$@@C&gt;$0@@?*,@@O:6@@C&gt;)P@@?+ @@O9*@@C&gt;70@@?,4@@O:V@@C&gt;''PE;@C A^0@:@T4@  EM@GDAZ0A]@T4@@@K9@@@ASPA1@6C?2PNG?=XA1/?S@13?6PO_?=\CX??W@S/?:PJ8@@@B @@@@$$@@@KV@@@BSP@A@$T@@@JN@@@CC0@@@M\@@@JH@@@B1 @@@34@@@J+@@@B!P@@@.H@@@KV@@@B!P@@@*D@@@J"@@@C@0@@@0T@@@LL@@@CB @@@/8@@@DG?&gt;\C@0@@@)P@@@H]@@@BL@@@@VP@@@H8@@@B^@@@@#@@@@IO@@LBXP@A@!4@@@G(@@DBX@@@@#H@@@D;@@@BEP@@@%,@@@IF??&lt;BR @@@ D@@@I#@@@B$ @@@%L@@PIN@@@B$P@@@"4@@@H8@@@C@@@@@''#?: KD@@@CB @@@S/?;PH8@@@BU0@@@# @@@LJ@@@BQ@@ @.X@F0MY??LB[@@[@,K?;@K$@@,BKO?S@"3?40H6@B@CB @(@T @E0J^@EHB'' AR@2@@C I#@EHB2 @$@),@H@D:@EHAKO?=@$@@H@QL@B8DV AR@2X@C K$@EHB=PAR@,\@C0K2@EHB00@O@,@@T K@@EHBX0AR@8P@H0J^@EHDM@@J@),@H@K5@EHB=PAR@.P@T KY@BPCZ AR@/D@T LF@BPB&lt;PAR@*L@T KG@BPBX0@N@,\@C0NH@BPB&amp; @T@3@@T J:@C0DHPARAHT@T ME@@8C5@AR@*L@T KG@BHDQPAR@,P@C0H(@BPBTP@*@"(@O@F''@C0B+P@W@#4@I@LN@@TBKP@ @&amp;\@O@I''@C0BK0@&lt;@# @E@JZ@C0BV0@&lt;@%8@I@I[@C0BY@@&lt;@"0@I@F8@@&lt;BIP@J@&lt;P@I@H[@@(B#@@&lt;@"(@I@M6@C0C2@@&lt;@+,@E@LJ@C0BN@@&lt;@"0@H@MP@C0BR @T@#4@I@H=@BPBW @V@Z\@O@H,@BPBJ0@ @PP@O@DV??HAC @D@8H@GPNB@C0B\ @V@"&lt;@O@I''@C0BIP@J@%0@O@OZ@APB8@@J@4@@Q K,@C0CA @$@%8@I@N.@APB8@@J@=(@E@K @@(A0P@V@@C&gt;^ @@?-X@@O&lt;^@@C?HP@@?[P@@O4D@@C&lt;?0M@@EHB(0@&lt;@*X@C0I#@@&lt;B(0AR@&amp;P@O@I&lt;@EHA.@@&lt;@&amp;8@C0GA@@&lt;B!0AR@#8@O@QH@@(CH0@E@*,@J H+@B@B=0AR@#4@O@KZ@EHBJ @&lt;@.D@B H+@@(C_@@N@* @C0L9@EHB#P@&lt;@&gt;\@T K;@C0DTPAQ@94@O@OC@B0B? @$@-H@K@H.@BPBY @O@[X@CPJC@@(BOP@E@(L@B I[@APB'' @E@"P@APN8@@&lt;B8 @U@04@Q@I''@C@B. @&lt;@$0@O@J/@DXBS@AF@&gt;D@J K9@B@C8P@*@/$@H@D:@EHDM@@J@2$@APJ&lt;@EHBG0@&lt;@1$@I@I:@A4B&lt;PAR@%,@O@L3@EHB%0@&lt;@,H@Q@IL@C0C)0AR@-@@O@D:@EHB00@O@#P@I@KC@@&lt;BM @&amp;@&gt;0@APNB@BPB'' AR@#4@I@KR@B0BOP@"@-H@K@H=@BHDM@@J@08@APJ[@B@BKP@ @"0@GPH(@A4B=PAR@&amp;\@O@K5@EHBY0@&lt;@0(@J@I#@BLCA @$@%8@I@LF@BPBW @$@,\@H H,@B@B/@@I@"@@B J=@@(BF0@E@+0@BPHY@@PB. @&lt;@"(@I@I#@EHA,@@&lt;@=P@T LJ@C0B(@@ @"H@GPKY@BPBPP@]@0(@J0I$@BPC,@@M@0 @APKZ@EHBJ @&lt;@-(@Q KI@DXB?P@-@/@@PPKD@DXCHP@&lt;@_@@Q KI@DXCU0AF@*8@KPKW@DXA)@AF@8D@Q MI@B(B1@AA@)P@E@JZ@BLB:0@&lt;@+(@H0K5@DXB] @#@.,@@@JK@B4B90AA@)D@KPKX@CHCG0AA@/@@PPK''@DDC@@@-@+L@I@KI@DXB @@(@Z$@Q L2@BLB(@@T@2T@H0K2@BLASPA#@M8@D@C:@@HAS_?=@T4@DPE @@$AZ @H@6$@O@I%@DDB^ @^@''0@PPIQ@C0B_0@#@ZD@Q I%@DDB$ AA@,\@H0I!@DXAO AF@4P@Q J^@BLBYPAA@%&lt;@Q I#@BLB\ AA@&amp;,@G I*@DDAQ@@E@&amp;T@PPH\@A(BS0AA@X @E@M)@C\BPP@#@%,@PPIX@DDB\ AA@;\@PPI%@DDBY@@(@U0@Q N7@DDBZ@AA@%8@H0K;@BLB\ AA@T4@\PFN@AT@@@D+@@@@"@@@@FT@@@A&gt;@@@AJ0@@@N(@@@CZ@@@@1 @@@M@@@@@@@@@@''P@@@PH@@@CZ@ P@O0@@@LDAJPAO@@@B" @@@FTASPA1@@@AAPKJ@C4B"0AM@"4@K0I&gt;@C&lt;B* AO@R$@S0F;@C&lt;B* AO@)8@S@D\@D$BS @&gt;@%L@S@J[@C8B*0AP@,@@P0D)@D&lt;A+PAI@)8@S@JM@C0B%PAH@)P@S0I(@A,B''0@=@*@@T@IX@C&lt;CR@AL@/P@O H*@D&lt;BI AI@!8@RPC.@CHA6 @2@@C&gt;1PA:?&lt;PANP@(@8G?=0RE??\C(/?J@&lt;[?&gt;@K:??\B&gt;/?7@-''?&gt;@NH??\CA_?7@8_?=0KV??XB(O?7@.W?= LV??HB//?0@-O?&lt; J5??XB,O?4@*G?=0J+?? B+/?4@,_?&lt; J(??,B-_?5@-''?=0J3?? B-/?8@+/?= JZ??LB''_?6@*/?=0J2?? B%O?:@)O?&gt; J4??\CAO?3@*G?&gt;@K[??$CK/?N@)_?=0K@??HB//?7@(+?=@@@?3 AL??,@SC?=@D2?1$@A?7_@@_=70@G?[ @BO6L@@[=8 @E?Y(@@O:G@@C&gt;!0J,??HCK_?B@,/?&gt;PJ7?? B1_?''@+$@HPI6@A,B.@@V@+H@D JF@AXB_@@I@#,@EPJ*@@$B3 @L@-(@CP@I?,8@(/=6@-K?&gt;@K8??\DU @D@@C&gt;8@I(@C0B!P@&lt;@) @O@MG@C0B\0@&lt;@''X@O@L;@C0C(@AP@''&lt;@O@I6@C0C-0@&lt;@%8@O@I @E@CP0AP@''X@O@I"@A8CI@@&lt;@&amp;\@T@L7@C0B:0@^@6X@O@I3@C0CR@@&lt;@''L@O@JY@CHBX AP@1&lt;@T@IV@C0B&amp;PAP@) @O@I @E@C] @F@''T@O@GO@A8BA@@^@#P@G KB@A8A20@^@]0@G I/@A8B10@^@^8@G G\@A8C_ @^@_P@G G4@A8B2@@^@^4@G G7@@@B2@@^@_\@G KF@A8B'' @@@,L@G GK@A8B,0@^@]D@G G,@@@A8@@^@)@@G G4@A8A;@@^@ 0@G G4@A8B,@@@@_8@G K#@@@A0 @^@]&lt;@G G6@A8A=P@^@#P@G HC@C&lt;A0PAN@,(@O@K[@C0B\@@A@80@C@PP@B\AC0@&lt;@(8@K M_@B,BW@@&lt;@1\@I@KJ??@BB @@@)T@O@N^@A(BY0@#@2/?;PHZ@C0B^P@&lt;@=L@A@OD@@XB^0@Z@%&lt;@NPK1@B CO0@&lt;@#X@KPOQ@@(C/ @(@,X@O@I(@A(CP @[@1X@I0I$@BTB? @''@5''?&lt;@I3@C0B"P@-@%&lt;@J Q''@B\B*@@(@9 @EPN @A\EMP@D@9 @EPKA@B4B-0@9ACH@B J @AXB(@@&lt;@),@D0L3@B0B)0@&lt;@#&lt;@N NG??8B#@@)@0 @BPJC??PB'' @O@)S?? JH@B$C) @*@84@A@I%@C(BY0@&lt;@-&lt;@JPND@A0D@@@S@(\@O@K8@B\COP@J@3 @O@K4@C0B\P@T@=T@JPO6@B\DD@@C@1X@I0N^@B(B+/?7@)@@J0NX@ATB9P@\@7+?; I2@C$C3 @''@+,@O@KR@A(BK@@\@-H@T I#@C,B4 AR@&amp;L@N0KR@EHBX0@;@-H@K@H,@BHB4 AM@&amp;L@GPKR@D4BX0@]@-H@SPI#@A4B4 AM@&amp;L@GPKR@D4BX0@]@),@S0H,@AXB&amp;0AO@"0@E J[@D&lt;BK@@V@),@S0H,@AXB&amp;0AO@"0@E I#@D(ASP@N@0(@J I#@BHB4 AD@&amp;L@P0KR@DPBX0AC@-H@Q@I#@DLB4 @$@&amp;L@P0KR@DPBX0AC@Q[?6 DV?=(AE/?2@Q[?&lt; KR@D(BK@@;@-H@R H,@C,B4 AJ@"0@N0I#@E@AE AC@&amp;L@T@DV??PBX0AP@Q[?= I#@E@AE/?''@4D@P M9@C0CPPAB@7$@O@MA@DHC^P@&lt;@-H@Q@I#@C&lt;B4 AD@&amp;L@O0KR@DPBX0@?@-H@Q@I#@C&lt;CB @(@&amp;L@H0LJ@B BX0@#@0(@J@I#@BLCB @(@&amp;L@H0J[@D0BX0@:@),@S@I#@C(B4 AP@XT@O0KR@E@A!P@?@-H@T@FE@C&lt;B4 AP@XT@A0J[@B@BK@@]@),@H@H,@A4B&amp;0@ @"0@GPJ[@B@BK@@]@),@H@H,@A4BX0@N@T4@C I#@@8ASP@N@&amp;L@C EM@@8BX0@N@T4@A0KR@D0BX0@:@-H@S@I#@C(B4 AL@&amp;L@N KR@D0BX0@:@-H@S@I#@C(B&amp;0@X@"0@C J[@A BK@@N@;@@CPLJ@@TC,@@M@0(@APN0@@4CB @E@;@@CPLJ@@TC,@@M@0(@APJ[@AXBK@@P@),@E H,@A@B&amp;0@[@"0@BPI#@A8A=@@U@&amp;L@G G4@ATBX0@^@_P@EPI#@DLASP@@@0(@APH,@@$BJ0@\@T4@C KR@A(BK@@\@-H@F H,@A0B4 @Z@"0@G@KR@@HBKO&gt;&lt;@),@F H,@A0B4 @Z@"0@G@KR@A(BK@@\@-H@F H,@A0B4 @Z@"0@G@KR@A(BK@@\@-H@F H,@A0B4 @Z@"0@G@J[@D&lt;BK@@V@),@S0H,@AXB&amp;0AO@"0@E J[@D&lt;BK@@V@)/?;PH,?&lt; B&amp;0AO@"0@E J[@D&lt;BK@@V@),@S0H,@AXAE @?@QX@P0DV@C&lt;AE AC@0(@J@I#@BLCB @(@&amp;L@H0LJ@B BX0@#@0(@C@I#?&gt;@CB @(@&amp;L@H0LJ@B BX0@#@0(@J@I#@BLCJ0@(@*D@H0L+@B B(P@#@2,@J@J!@BLCJ0@(@*D@H0L+@B B(P@#@-H@S@I#@C(B4 AL@&amp;L@N LU@D0B)@@:@1T@S@J$@C(CEPAL@*P@N LU@D0B)@@:@1T@S@J$@C(B&amp;0@[@"0@BPJ[@A,BK@@I@),@F0H,@@$B&amp;0@[@"0@BPI8@@@B^@@@@'' @@@I8@@@B^@@@@'' @@@I8@@@B^@@@@+ @@@J8@@@CX_?2@5G?&lt;PL\??@CI??1@-+?70K.?&gt;HBGP@@@!4@@@H]@@@BGP@@@!4@@@H]@@@B=/?/@/#?;@N=?&gt;(C+??,@:/?: N1?&gt;4BX@@@@&amp;@@@@I @@@BX@@@@&amp;@@@@I @@@BX@@@@&amp;@@@@L7?&gt;&lt;CO??1A@K?;0O9??HC:/?(A@C?=PNL?&lt;4C#_?Q@S/??0D;@@@A]_?.@W_?:@E:?&gt;(A]/?+@WK?8PF@?=4A^/?#@W??:@IT?&gt;DBP??,@#3?: I@?&gt;&lt;A6/?S@\/?2PI"@@@BX @@@&amp;H@@@I"@@@BX @@@&amp;H@@@L ?&gt;,CY??''AC3?9PP7?&gt;,C3??(@&lt;7?&lt;@H8@@@BN@@@@# @@@H8@@@BN@@@@# @@@H8@@@BN@@@@8+?&lt;@P8??HDV??-@=G?0 LJ@@@CB @@@0(@@@LJ@@@CB @@@0(@@@LJ@@@CB @@@4W?9PM\??@DI/?*ACC?;POB?&gt;8C6_?*@9+?4PN??&lt;0B^@@@@'' @@@H]@@@BGP@@@&amp;@@@@I @@@AN0@@@S,@@@I"@@@BX @@@# @@@H8@@@CB @@@0(@@@I8@@@B^@@@@'' @@@I8@@@B^@@@@'' @@@I8@@@B^@@@@84@@@NJ@@@DI_?6A@/?&lt;POX??@C8/?1@8;?5 NT?&lt;8BX@@@@&amp;@@@@I @@@BX@@@@&amp;@@@@I @@@BX@@@@&amp;@@@@O.?&gt;&lt;C=??1AKS?;0R7??HD)O?(AK''?=PQH?&lt;4DT_?Q@0(@@@LJ@@@CB @@@0(@@@LJ@@@CB @@@0(@@@LJ@@@D@/?%AA#?&lt;@S#?&gt;(D;O?-AG;?; RY?&gt;(DT/?QAG[?3@I8@@@B^@@@@'' @@@I8@@@B%@@@@'' @@@I8@@@B.@@@@+ @@@J8?&gt;(B.@@@@8,@@@DV@EPAV @:@QX@U@DV?4&lt;AS_?5@&amp;@@@@I @@@BL@@@@&amp;@@@@I @@@CBO?T@1''?8 MO?=\CU/?]@5@@@@G,@EPA:PAT@X(@F0EO?=,AX/?%@V??9 E0?&gt;0AX_?Y@V;?4@C0?&gt; A@??5@ZK?70F ?=\A8PAQ@$4@TPEM?&gt;@BN@@@@# @@@H8@@@BN@@@@%L@@PIS@@DBN@@@@# @@@LC@@@C@0@@@;_?8 OV?=&lt;CI/?,@T4@@@EM@@@ASPAR@0(@@@LJ@@@CB @@@0(@@@LJ@@@C#_?!@2''?;@NA?=PCN_?%@=H@@@EM@GTAE AQ@_P@@@O(@@@A=@@@@&gt; @@@EM@@@@&gt; @@@J\@@@H,@@@AE @@@L @@@A$@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@EM@A(ASP@Z@"3?=0H,??\C:O?9@&gt;#?&gt;PF5@FPBKO?*@QX@P0DV@DHAE AB@QX@P G4@D\A=@AH@_P@R@G4@D$BK@@_@"0@G@E^@CHAW @-@QX@P@JZ@E0C:@A\@QX@P@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@A=@@@@&gt; @B0UW@@,@; @4@Z(@M@I&amp;@CP@; @P@W,@D@H;@A@A0 @B@T4@T0EM@E@B[ @=@)(@\@I&amp;@A&lt;BK@@A@)H@H JR@BHA-/?7@4#?&gt;PFP@CT@)?=S@T8@X@EN@@XD1 A@@;@@P@N0@G@BK@@]@!$@D0HY@@\BFP@G@XT@E0EM@GDB$ @"@XT@E0I:@DDBN@@@@)H@H LY@@,B@0@%@5\@M@KR@BTB5P@%@N@@IPKR@BTBW@@9@N@@IPC @BT@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AW0@S@L @M@E_@@8AW0@N@U&lt;@D0E_@A@AW0@M@U&lt;@D0E_@APAW0@T@U&lt;@E@CX@A(@6 @S@X\@J@E_@ALAKP@(@U&lt;@D@E_@@&lt;AW0@N@U&lt;@C E_@ALAW0@P@U&lt;@CPE_@ALAW @T@U8@EPE^@AT@6@@Z@M @D E+@ALA[ @P@X(@E E(@@(AX0@N@&amp;L@D0IO@@0C^P@&lt;@-\@K S1@E@DFPAP@$P@GPJ@@BPBWP@E@$&lt;@E I$@@8@@O7K@@C=20@@?20@@O&lt;S@@C=$ @@?Y$@@O8R@@C=V @@?R0@@O4+@@C=J @@?R @@O5_@@C=OP@@@@@@@O9O@@C&gt;D @@?"4@@O09@@C=*P@@?^,@@O7(@@C=(P@@?Y$@@O;P@;D@J@OH@BPDB @^@=T@H@O*@BPB&amp;0@ @-H@K@NW@A8BX0AC@%8@@@I @@8C\P@E@&gt;\@N0M\@APB.0@D@&gt; @K UZ@A&lt;C:@AG@/8@@@LJ@A,AN0@,@.T@R KY@A(BK@@V@$0@H KJ@C4B"0AM@"4@K0I&gt;@C&lt;CY0@(AY\@O0LJ@DLBX0@ @&amp;L@H@J[@AXB''P@HAM(@D0G"@BHCYP@(@6T@D@M%@B CYP@P@6T@C0M%@@8CYP@(@6T@C M%@B CYP@O@6T@C M%@A@CYP@(@QX@O0H,@C&lt;CP @?@;D@O0J[@A C,P@XAL\@F@W]@A C,P@?@),@E N1@AXD10@V@&amp;L@T@KR@B0B4 AM@4D@P DV@DLBK@AC@4H@P0MB@DLBK@@N@4H@C QX@@8E[ @N@4H@P0H,@A@CP @PAE @D@DV@DLBK@@"@&amp;L@GPM9@C0C1@@''@&lt;PAP@OD@B(C1@E@@&lt;P@I0OD@T@C1@B^@&lt;P@"0OD@H(C1@B^@&lt;P@I0OD@B\C1@@''@&lt;PAP OD@B\C1@EB@&lt;P@I0OD@B\C1@@''@&lt;PAC OD@B\C1@DM@&lt;PAC OD@B\C1@BL@&lt;P@I0OD@B\C1@BL@&lt;P@I0OD@H0B4 @Z@"0@H@J[@C,B6P@H@-$@B@MX@B$BR@@(@6T@2 IR@@\BX@A$@"P@L IH@B4BR@@-@_P@B H]@A@CW@@T@?0@B N[@@0B\ @N@+X@C0IS@@ CB@@O@''H@C J6@@&lt;BT0@H@0 @C0EM@BXBK@@7@0(@M0LJ@C\BK@A @"0@  H,@EXE+P@_@V@@I@M(@C CZ@@8@-@@R@KP@D B4@AH@) @L@K0@C@B&lt;@@0@-@@R@KP@D BU@@6@+(@R@K&amp;@D BO AH@.X@R@M(@C CZ@@8@S @R@KP@D B.@@&lt;@-@@R@IH@CPB9 AH@10@M I%@C(B(@@0@7 @O@MD@CXBC@@4@-@@R@D,@E(CQ@@6@R0@N@KN@C&lt;A!@@6@6 @N@M(@C B.@@&lt;@SP@O@J@@C CZ@@8@6 @N@K:@C A*@@6@-@@R@K:@C B4@AH@,T@L@KP@D BGP@Y@30@M GF@D CO@@6@^H@R@EM@B ASP@K@QP@O0EV@CHA@ @&lt;@PH@O@@@?-D@@O;0@@C== HU@@@@A_9-@@''&gt;Q0@E?"4B_??9@@[&gt;I @G?"D@A?8"@@#&gt;I @E?''L@A_:P@@''&gt;Z@@F?"4@A?9W@@_&gt;"@@H?&amp; @A_8-@T\@C C^@A0B-O?1@SK?;@O''@@\C:O?7ABS?=0KY??XCFO?2@,W?&lt;@KU??HB.O?6@*O?=0J2?? B+??4@,+?&lt; J=??TB5_?7@+W?&gt;@J8?? B/??6@)3?&lt;0J"??XB*/?7@)O?&gt; JU??(B0/?7@0??&lt;0J#?? B&amp;_?7@,+?&lt; JL??PC!O?7AH#?=0N!?=DC5??8@/7?=0K4??\B4_?8@8_?=0LL??\C!??7AG''?=0@I?$\@B_9G@@''&gt;Z@@I?"4@B_9G@@W&gt;[PKR@DPBW0@N@$@@C I[@@8CTP@N@5D@C I3@@8D60AAAL(@PPSQ@DDD5 AAAZ @PPD\@D$ALP@@@!8@RPJM@EXC1@@=@7 @O0N$@D&lt;CSPAL@9T@O N%@E@CT @?@&gt;8@O IH@CHCR@AL@4 @S@MH@D0CR@AL@,(@OPKJ@C4B2 @=@(,@SPH-@B&lt;B_ @?@*(@S0E\@@ A.0@_@)8@S@E"@B$BS @&gt;@%L@S@J[@C8B0@AC@Z4@RPJ^@D0B%PAH@)P@S0J_@C4B(@AP@% @O0MH@D0B=@@&gt;@MP@@@IO@D4BI AL@# @S0KJ@ELC!@@S@@@@@0@@&gt;R0@@R&amp;E0@@@CS$^@A@@IO?D@A@@I/?,@A@@J/?,@A@@K_?,@A@@L/?,@A@@MO?,@A@@M/?X@A@@M??X@A@@N_?D@A@@N/?D@A@@N??X@A@@OO?D@A@@O_?X@A@@QO?,@A@@R_?X@A@@R/?,@A@@S_?,@A@@TO?,@A@@T_?,@A@@T??,@A@@U_?,@A@@U/?"@A@@U??X@A@@VO?,@A@@V_?X@A@@V/?X@A@@V??S@A@@WO?X@A@@W_?,@A@@ /?D@A@@ ??D@A@@!O?D@A@@!_?D@A@@!/?D@A@@"O?D@A@@"_?,@A@@%O?,@A@@%_?,@A@@%/?,@A@@%??,@A@@&amp;O?,@A@@&amp;/?,@A@@''??D@A@@(/?,@A@@(??,@A@@)O?,@A@@)_?,@A@@)/?,@A@@)??,@A@@*O?,@A@@,??,@A@@.??,@A@@/O?,@A@@/_?,@A@@//?,@A@@/??X@A@@0_?X@A@@0/?D@A@@0??,@A@@1_?,@A@@2O?,@A@@2/?,@A@@3O?,@A@@3/?,@A@@7/?,@A@@8O?,@A@@8_?,@A@@8/?,@A@@8??,@A@@9O?,@A@@9_?,@A@AA/?,@A@ABO?,@A@AB/?,@A@AC/?,@A@ADO?,@A@AD/?,@A@AEO?,@A@AF??,@A@AGO?X@A@AG_?"@A@AHO?X@A@AH_?"@A@AH/?X@A@AH??"@A@AIO?X@A@AI_?X@A@AI/?X@A@AJ??,@A@AK_?,@A@AK??,@A@AL??,@A@ANO?D@A@AN_?X@A@AN/?D@A@AN??X@A@AOO?,@A@AO_?X@A@AO/?,@A@AO??X@A@APO?,@A@BL/?,@A@E:/?X@A@FCO?,@A@FH/?,@A@FJ??X@A@FKO?"@A@FK_?X@A@FK/?"@A@FM_?X@A@FM/?X@A@FM??X@A@FNO?X@A@F._?D@A@F./?X@A@IZ??X@A@I[O?X@A@I[_?X@A@I[/?X@A@I[??X@BP@C??,@BP@DO?X@BP@D_?,@BP@I/?X@BP@JO?N@BP@J_?I@BP@J/?X@BP@J??X@BP@KO?"@BP@K/?I@BP@K??N@BP@LO?X@BP@L_?X@BP@L/?X@BP@MO?X@BP@M/?"@BP@M??X@BP@N_?D@BP@N/?D@BP@N??6@BP@OO?D@BP@O_?6@BP@QO?,@BP@Q/?,@BP@Q??,@BP@RO?1@BP@R_?"@BP@R/?,@BP@TO?"@BP@T_?"@BP@T/?,@BP@T??,@BP@UO?,@BP@U_?"@BP@U/?,@BP@U??"@BP@VO?''@BP@V_?"@BP@V/?"@BP@WO?"@BP@W_?"@BP@[_?X@BP@__?X@BP@"_?X@BP@"/?N@BP@"??N@BP@#O?N@BP@#_?N@BP@#/?"@BP@#??"@BP@$O?"@BP@$_?"@BP@%O?X@BP@%_?X@BP@%/?X@BP@%??X@BP@&amp;O?X@BP@&amp;/?X@BP@''??D@BP@(/?,@BP@(??,@BP@)O?,@BP@)_?,@BP@)/?,@BP@)??,@BP@*O?,@BP@*_?,@BP@*/?1@BP@*??1@BP@+O?1@BP@+_?1@BP@,/?,@BP@,??"@BP@-O?,@BP@-_?,@BP@-/?,@BP@-??,@BP@.O?,@BP@./?,@BP@.??''@BP@/O?''@BP@/_?''@BP@//?''@BP@/??"@BP@0_?"@BP@0??,@BP@1_?,@BP@1??,@BP@2O?X@BP@2/?X@BP@2??,@BP@3O?X@BP@3/?X@BP@3??,@BP@4_?,@BP@5O?N@BP@5_?1@BP@5??1@BP@6/?N@BP@6??1@BP@7O?N@BP@7/?X@BP@8O?X@BP@8_?,@BP@8/?X@BP@8??,@BP@9O?X@BP@9_?,@BP@&gt;O?I@BP@&gt;??N@BP@?_?N@BP@???N@BPA@??N@BPAA/?"@BPABO?"@BPAB/?"@BPAC/?X@BPAC??,@BPADO?X@BPAD_?,@BPAD/?X@BPAD??,@BPAEO?X@BPAE_?,@BPAF??"@BPAGO?"@BPAG_?,@BPAHO?"@BPAH_?,@BPAH/?"@BPAH??,@BPAIO?X@BPAI_?"@BPAI/?X@BPAJ??''@BPAK_?''@BPAK??''@BPAL_?''@BPAL??''@BPANO?D@BPAN_?"@BPAN/?D@BPAN??6@BPAOO?"@BPAO_?6@BPAO/?"@BPAO??6@BPAPO?"@BPE:_?I@BPFCO?"@BPFH/?,@BPFJ??"@BPFKO?,@BPFK_?"@BPFK/?,@BPFM_?X@BPFM/?"@BPFM??X@BPFNO?"@BPF ??N@BPF._?D@BPF./?"@BPG0??D@BPG1/?D@BPG1??D@BPG8??X@BPG9O?X@BPIZ??"@BPI[O?"@BPI[/?"@BPI[??"@BT@C??D@BT@DO?,@BT@D_?D@BT@IO?"@BT@I/?"@BT@JO?N@BT@J_?I@BT@J/?"@BT@J??X@BT@KO?"@BT@K/?I@BT@K??N@BT@LO?X@BT@L_?X@BT@L/?"@BT@MO?"@BT@M/?,@BT@M??N@BT@N_?N@BT@N/?N@BT@N??N@BT@OO?N@BT@O_?N@BT@QO?6@BT@R_?6@BT@R/?6@BT@S_?,@BT@TO?"@BT@T_?"@BT@T??6@BT@U_?,@BT@U/?6@BT@U??6@BT@VO?,@BT@V_?"@BT@V/?"@BT@V??"@BT@WO?"@BT@W_?"@BT@[_?,@BT@__?,@BT@ /?"@BT@ ??"@BT@!O?"@BT@!_?"@BT@!/?"@BT@!??"@BT@"O?"@BT@"_?"@BT@"/?N@BT@"??N@BT@#O?N@BT@#_?N@BT@#/?"@BT@#??"@BT@$O?"@BT@$_?"@BT@%O?"@BT@%_?"@BT@%/?"@BT@%??"@BT@&amp;O?"@BT@&amp;/?"@BT@''??N@BT@(/?6@BT@(??6@BT@)O?6@BT@)_?6@BT@)/?6@BT@)??6@BT@*O?6@BT@,??"@BT@.??,@BT@/O?,@BT@/_?,@BT@//?,@BT@/??"@BT@0_?"@BT@0/?"@BT@0??6@BT@1O?"@BT@1_?6@BT@1/?"@BT@1??6@BT@2O?"@BT@2/?"@BT@3O?"@BT@3/?"@BT@5O?N@BT@6/?N@BT@7O?N@BT@7/?"@BT@8O?"@BT@8_?6@BT@8/?"@BT@8??6@BT@9O?"@BT@9_?6@BT@&gt;O?I@BT@&gt;??N@BT@?_?N@BT@???N@BTA@??N@BTAA/?"@BTABO?"@BTAB/?"@BTAC/?"@BTADO?"@BTAD/?"@BTAEO?"@BTAF??,@BTAGO?,@BTAG_?6@BTAHO?,@BTAH_?6@BTAH/?,@BTAH??6@BTAIO?N@BTAI_?6@BTAI/?N@BTAJ??,@BTAK_?,@BTAK??,@BTAL_?,@BTAL??,@BTANO?N@BTAN_?"@BTAN/?N@BTAN??N@BTAOO?"@BTAO_?N@BTAO/?"@BTAO??N@BTAPO?"@BTE:_?I@BTFCO?"@BTFH/?6@BTFJ??,@BTFKO?6@BTFK_?,@BTFK/?6@BTFM_?N@BTFM/?6@BTFM??N@BTFNO?6@BTF ??N@BTF._?N@BTF./?"@BTG0??D@BTG1/?D@BTG1??D@BTG8??,@BTG9O?,@BTIZ??6@BTI[O?6@BTI[/?6@BTI[??6@BX@C??"@BX@D_?"@BX@IO?X@BX@I/?,@BX@JO?S@BX@J_?N@BX@J/?,@BX@J??X@BX@KO?"@BX@K/?N@BX@K??S@BX@LO?X@BX@L_?X@BX@L/?,@BX@MO?,@BX@M/?6@BX@M??X@BX@N_?N@BX@N/?N@BX@N??X@BX@OO?N@BX@O_?X@BX@QO?,@BX@R_?,@BX@R/?,@BX@S_?"@BX@TO?"@BX@T_?"@BX@T??,@BX@U_?,@BX@U/?,@BX@U??,@BX@VO?"@BX@V_?6@BX@V/?6@BX@V??"@BX@WO?6@BX@W_?"@BX@__?,@BX@ /?X@BX@ ??X@BX@!O?X@BX@!_?X@BX@!/?X@BX@!??X@BX@"O?X@BX@"_?,@BX@"/?S@BX@"??S@BX@#O?S@BX@#_?S@BX@#/?"@BX@#??"@BX@$O?"@BX@$_?"@BX@%O?,@BX@%_?,@BX@%/?,@BX@%??,@BX@&amp;O?,@BX@&amp;/?,@BX@''??N@BX@(/?,@BX@(??,@BX@)O?,@BX@)_?,@BX@)/?,@BX@)??,@BX@*O?,@BX@,??"@BX@.??"@BX@/O?"@BX@/_?"@BX@//?"@BX@/??6@BX@0_?6@BX@0/?X@BX@0??,@BX@1O?X@BX@1_?,@BX@1/?X@BX@1??,@BX@2O?,@BX@2/?,@BX@3O?,@BX@3/?,@BX@5O?S@BX@6/?S@BX@7O?S@BX@7/?,@BX@8O?,@BX@8_?,@BX@8/?,@BX@8??,@BX@9O?,@BX@9_?,@BX@&gt;O?N@BX@&gt;??S@BX@?_?S@BX@???S@BXA@??S@BXAA/?"@BXABO?"@BXAB/?"@BXAC/?,@BXADO?,@BXAD/?,@BXAEO?,@BXAF??,@BXAGO?6@BXAG_?,@BXAHO?6@BXAH_?,@BXAH/?6@BXAH??,@BXAIO?X@BXAI_?,@BXAI/?X@BXAJ??"@BXAK_?"@BXAK??"@BXAL_?"@BXAL??"@BXANO?N@BXAN_?6@BXAN/?N@BXAN??X@BXAOO?"@BXAO_?X@BXAO/?"@BXAO??X@BXAPO?"@BXE:_?N@BXFCO?"@BXFH/?,@BXFJ??6@BXFKO?,@BXFK_?6@BXFK/?,@BXFM_?X@BXFM/?,@BXFM??X@BXFNO?,@BXF ??S@BXF._?N@BXF./?6@BXG0??X@BXG1/?X@BXG1??X@BXG9O?,@BXIZ??,@BXI[O?,@BXI[/?,@BXI[??,@B\@C??"@B\@D_?"@B\@IO?X@B\@I/?,@B\@JO?S@B\@J_?N@B\@J/?,@B\@J??X@B\@KO?"@B\@K/?N@B\@K??S@B\@LO?X@B\@L_?X@B\@L/?,@B\@MO?,@B\@M/?6@B\@M??X@B\@N_?N@B\@N/?N@B\@N??X@B\@OO?N@B\@O_?X@B\@QO?,@B\@R_?,@B\@R/?,@B\@S_?"@B\@TO?"@B\@T_?"@B\@T??,@B\@U_?,@B\@U/?,@B\@U??,@B\@VO?"@B\@V_?6@B\@V/?6@B\@V??"@B\@WO?6@B\@W_?"@B\@__?,@B\@ /?X@B\@ ??X@B\@!O?X@B\@!_?X@B\@!/?X@B\@!??X@B\@"O?X@B\@"_?,@B\@"/?S@B\@"??S@B\@#O?S@B\@#_?S@B\@#/?"@B\@#??"@B\@$O?"@B\@$_?"@B\@%O?,@B\@%_?,@B\@%/?,@B\@%??,@B\@&amp;O?,@B\@&amp;/?,@B\@''??N@B\@(/?,@B\@(??,@B\@)O?,@B\@)_?,@B\@)/?,@B\@)??,@B\@*O?,@B\@,??"@B\@.??"@B\@/O?"@B\@/_?"@B\@//?"@B\@/??6@B\@0_?6@B\@0/?X@B\@0??,@B\@1O?X@B\@1_?,@B\@1/?X@B\@1??,@B\@2O?,@B\@2/?,@B\@3O?,@B\@3/?,@B\@5O?S@B\@6/?S@B\@7O?S@B\@7/?,@B\@8O?,@B\@8_?,@B\@8/?,@B\@8??,@B\@9O?,@B\@9_?,@B\@&gt;O?N@B\@&gt;??S@B\@?_?S@B\@???S@B\A@??S@B\AA/?"@B\ABO?"@B\AB/?"@B\AC/?,@B\ADO?,@B\AD/?,@B\AEO?,@B\AF??,@B\AGO?6@B\AG_?,@B\AHO?6@B\AH_?,@B\AH/?6@B\AH??,@B\AIO?X@B\AI_?,@B\AI/?X@B\AJ??"@B\AK_?"@B\AK??"@B\AL_?"@B\AL??"@B\ANO?N@B\AN_?6@B\AN/?N@B\AN??X@B\AOO?"@B\AO_?X@B\AO/?"@B\AO??X@B\APO?"@B\E:_?N@B\FCO?"@B\FH/?,@B\FJ??6@B\FKO?,@B\FK_?6@B\FK/?,@B\FM_?X@B\FM/?,@B\FM??X@B\FNO?,@B\F ??S@B\F._?N@B\F./?6@B\G0??X@B\G1/?X@B\G1??X@B\G9O?,@B\IZ??,@B\I[O?,@B\I[/?,@B\I[??,@B @IO?"@B @I/?X@B @JO?S@B @J_?N@B @J/?X@B @J??X@B @KO?"@B @K_?,@B @K/?N@B @K??S@B @LO?X@B @L_?X@B @L/?X@B @MO?X@B @M/?N@B @M??,@B @N_?N@B @N/?N@B @N??"@B @OO?N@B @O_?"@B @QO?"@B @Q/?"@B @Q??"@B @RO?,@B @R_?"@B @R/?"@B @S_?"@B @TO?X@B @T_?X@B @T/?"@B @T??,@B @UO?"@B @U_?"@B @U/?,@B @U??"@B @VO?S@B @V_?X@B @V/?X@B @V??"@B @WO?X@B @W_?X@B @ /?"@B @ ??"@B @!O?"@B @!_?"@B @!/?"@B @!??"@B @"O?"@B @"_?X@B @"/?S@B @"??S@B @#O?S@B @#_?S@B @#/?"@B @#??"@B @$O?"@B @$_?"@B @%O?X@B @%_?X@B @%/?X@B @%??X@B @&amp;O?X@B @&amp;/?X@B @''??N@B @(/?"@B @(??"@B @)O?"@B @)_?"@B @)/?"@B @)??"@B @*O?"@B @*_?"@B @*/?,@B @*??,@B @+O?,@B @+_?,@B @,/?"@B @,??X@B @-O?"@B @-_?"@B @-/?"@B @-??"@B @.O?"@B @./?"@B @.??S@B @/O?S@B @/_?S@B @//?S@B @/??X@B @0_?X@B @0/?"@B @0??"@B @1O?"@B @1_?"@B @1/?"@B @1??"@B @2O?X@B @2/?X@B @2??"@B @3O?X@B @3/?X@B @3??"@B @4_?"@B @5O?S@B @5_?,@B @5??,@B @6/?S@B @6??,@B @7O?S@B @7/?X@B @8O?X@B @8_?"@B @8/?X@B @8??"@B @9O?X@B @9_?"@B @&gt;O?N@B @&gt;??S@B @?_?S@B @???S@B A@??S@B AA/?X@B ABO?X@B AB/?X@B AC/?X@B AC??"@B ADO?X@B AD_?"@B AD/?X@B AD??"@B AEO?X@B AE_?"@B AF??"@B AGO?N@B AG_?,@B AHO?N@B AH_?,@B AH/?N@B AH??,@B AIO?,@B AI_?"@B AI/?,@B AJ??S@B AK_?S@B AK??S@B AL_?S@B AL??S@B ANO?N@B AN_?X@B AN/?N@B AN??"@B AOO?X@B AO_?"@B AO/?X@B AO??"@B APO?X@B E:_?N@B FCO?X@B FH/?,@B FJ??N@B FKO?,@B FK_?N@B FK/?,@B FM_?,@B FM/?"@B FM??,@B FNO?"@B F ??S@B F._?N@B F./?X@B IZ??"@B I[O?"@B I[/?"@B I[??"@B$@C??D@B$@DO?"@B$@D_?D@B$@IO?X@B$@I/?"@B$@JO?N@B$@J_?I@B$@J/?"@B$@J??X@B$@KO?"@B$@K_?"@B$@K/?I@B$@K??N@B$@LO?X@B$@L_?X@B$@L/?"@B$@MO?"@B$@M/?X@B$@N_?,@B$@N/?,@B$@N??"@B$@OO?,@B$@O_?"@B$@QO?"@B$@Q/?"@B$@Q??"@B$@RO?,@B$@R_?,@B$@R/?"@B$@S_?,@B$@TO?N@B$@T_?N@B$@T/?"@B$@T??"@B$@UO?"@B$@U_?X@B$@U/?X@B$@U??,@B$@VO?N@B$@V_?6@B$@V/?6@B$@V??X@B$@WO?6@B$@W_?N@B$@[_?"@B$@__?N@B$@ /?X@B$@ ??X@B$@!O?X@B$@!_?X@B$@!/?X@B$@!??X@B$@"O?X@B$@"_?"@B$@"/?N@B$@"??N@B$@#O?N@B$@#_?N@B$@#/?"@B$@#??"@B$@$O?"@B$@$_?"@B$@%O?"@B$@%_?"@B$@%/?"@B$@%??"@B$@&amp;O?"@B$@&amp;/?"@B$@''??,@B$@(/?"@B$@(??"@B$@)O?"@B$@)_?"@B$@)/?"@B$@)??"@B$@*O?"@B$@*_?"@B$@*/?,@B$@*??,@B$@+O?,@B$@+_?,@B$@,/?"@B$@,??N@B$@-O?"@B$@-_?"@B$@-/?"@B$@-??"@B$@.O?"@B$@./?"@B$@.??N@B$@/O?N@B$@/_?N@B$@//?N@B$@/??6@B$@0_?6@B$@0/?X@B$@0??"@B$@1O?X@B$@1_?"@B$@1/?X@B$@1??"@B$@2O?"@B$@2/?"@B$@2??"@B$@3O?"@B$@3/?"@B$@3??"@B$@4_?"@B$@5O?N@B$@5_?,@B$@5??,@B$@6/?N@B$@6??,@B$@7O?N@B$@7/?"@B$@8O?"@B$@8_?"@B$@8/?"@B$@8??"@B$@9O?"@B$@9_?"@B$@&gt;O?I@B$@&gt;??N@B$@?_?N@B$@???N@B$A@??N@B$AA/?N@B$ABO?N@B$AB/?N@B$AC/?"@B$AC??"@B$ADO?"@B$AD_?"@B$AD/?"@B$AD??"@B$AEO?"@B$AE_?"@B$AF??X@B$AGO?X@B$AG_?X@B$AHO?X@B$AH_?X@B$AH/?X@B$AH??X@B$AI_?,@B$AJ??N@B$AK_?N@B$AK??N@B$AL_?N@B$AL??N@B$ANO?,@B$AN_?6@B$AN/?,@B$AN??"@B$AOO?N@B$AO_?"@B$AO/?N@B$AO??"@B$APO?N@B$E:_?I@B$FCO?N@B$FH/?"@B$FJ??X@B$FKO?X@B$FK_?X@B$FK/?X@B$FM/?,@B$FNO?,@B$F ??N@B$F._?,@B$F./?6@B$G8??"@B$G9O?N@B$IZ??,@B$I[O?,@B$I[/?,@B$I[??,@B(@C??"@B(@D_?"@B(@IO?X@B(@I/?,@B(@JO?S@B(@J_?N@B(@J/?,@B(@J??X@B(@KO?"@B(@K/?N@B(@K??S@B(@LO?X@B(@L_?X@B(@L/?,@B(@MO?,@B(@M/?6@B(@M??X@B(@N_?N@B(@N/?N@B(@N??X@B(@OO?N@B(@O_?X@B(@QO?,@B(@R_?,@B(@R/?,@B(@S_?"@B(@TO?"@B(@T_?"@B(@T??,@B(@U_?,@B(@U/?,@B(@U??,@B(@VO?"@B(@V_?6@B(@V/?6@B(@V??"@B(@WO?6@B(@W_?"@B(@__?,@B(@ /?X@B(@ ??X@B(@!O?X@B(@!_?X@B(@!/?X@B(@!??X@B(@"O?X@B(@"_?,@B(@"/?S@B(@"??S@B(@#O?S@B(@#_?S@B(@#/?"@B(@#??"@B(@$O?"@B(@$_?"@B(@%O?,@B(@%_?,@B(@%/?,@B(@%??,@B(@&amp;O?,@B(@&amp;/?,@B(@''??N@B(@(/?,@B(@(??,@B(@)O?,@B(@)_?,@B(@)/?,@B(@)??,@B(@*O?,@B(@,??"@B(@.??"@B(@/O?"@B(@/_?"@B(@//?"@B(@/??6@B(@0_?6@B(@0/?X@B(@0??,@B(@1O?X@B(@1_?,@B(@1/?X@B(@1??,@B(@2O?,@B(@2/?,@B(@3O?,@B(@3/?,@B(@5O?S@B(@6/?S@B(@7O?S@B(@7/?,@B(@8O?,@B(@8_?,@B(@8/?,@B(@8??,@B(@9O?,@B(@9_?,@B(@&gt;O?N@B(@&gt;??S@B(@?_?S@B(@???S@B(A@??S@B(AA/?"@B(ABO?"@B(AB/?"@B(AC/?,@B(ADO?,@B(AD/?,@B(AEO?,@B(AF??,@B(AGO?6@B(AG_?,@B(AHO?6@B(AH_?,@B(AH/?6@B(AH??,@B(AIO?X@B(AI_?,@B(AI/?X@B(AJ??"@B(AK_?"@B(AK??"@B(AL_?"@B(AL??"@B(ANO?N@B(AN_?6@B(AN/?N@B(AN??X@B(AOO?"@B(AO_?X@B(AO/?"@B(AO??X@B(APO?"@B(E:_?N@B(FCO?"@B(FH/?,@B(FJ??6@B(FKO?,@B(FK_?6@B(FK/?,@B(FM_?X@B(FM/?,@B(FM??X@B(FNO?,@B(F ??S@B(F._?N@B(F./?6@B(G0??X@B(G1/?X@B(G1??X@B(G9O?,@B(IZ??,@B(I[O?,@B(I[/?,@B(I[??,@B,@IO?,@B,@I/?S@B,@JO?S@B,@J_?N@B,@J/?S@B,@J??X@B,@KO?6@B,@K_?,@B,@K/?N@B,@K??S@B,@LO?X@B,@L_?X@B,@L/?S@B,@MO?S@B,@M/?]@B,@M??6@B,@N_?,@B,@N/?,@B,@N??D@B,@OO?,@B,@O_?D@B,@QO?X@B,@Q/?"@B,@Q??"@B,@RO?,@B,@R_?6@B,@R/?X@B,@S_?,@B,@TO?N@B,@T_?N@B,@T/?"@B,@T??''@B,@UO?"@B,@U_?]@B,@U/?N@B,@U??6@B,@VO?S@B,@V_?"@B,@V/?"@B,@V??I@B,@WO?"@B,@W_?N@B,@ /?,@B,@ ??,@B,@!O?,@B,@!_?,@B,@!/?,@B,@!??,@B,@"O?,@B,@"_?S@B,@"/?S@B,@"??S@B,@#O?S@B,@#_?S@B,@#/?6@B,@#??6@B,@$O?6@B,@$_?6@B,@%O?S@B,@%_?S@B,@%/?S@B,@%??S@B,@&amp;O?S@B,@&amp;/?S@B,@''??,@B,@(/?X@B,@(??X@B,@)O?X@B,@)_?X@B,@)/?X@B,@)??X@B,@*O?X@B,@*_?"@B,@*/?,@B,@*??,@B,@+O?,@B,@+_?,@B,@,/?"@B,@,??N@B,@-O?"@B,@-_?"@B,@-/?"@B,@-??"@B,@.O?"@B,@./?"@B,@.??S@B,@/O?S@B,@/_?S@B,@//?S@B,@/??"@B,@0_?"@B,@0/?,@B,@0??X@B,@1O?,@B,@1_?X@B,@1/?,@B,@1??X@B,@2O?S@B,@2/?S@B,@2??"@B,@3O?S@B,@3/?S@B,@3??"@B,@4_?"@B,@5O?S@B,@5_?,@B,@5??,@B,@6/?S@B,@6??,@B,@7O?S@B,@7/?S@B,@8O?S@B,@8_?X@B,@8/?S@B,@8??X@B,@9O?S@B,@9_?X@B,@&gt;O?N@B,@&gt;??S@B,@?_?S@B,@???S@B,A@??S@B,AA/?N@B,ABO?N@B,AB/?N@B,AC/?S@B,AC??"@B,ADO?S@B,AD_?"@B,AD/?S@B,AD??"@B,AEO?S@B,AE_?"@B,AF??]@B,AGO?]@B,AG_?N@B,AHO?]@B,AH_?N@B,AH/?]@B,AH??N@B,AIO?6@B,AI_?6@B,AI/?6@B,AJ??S@B,AK_?S@B,AK??S@B,AL_?S@B,AL??S@B,ANO?,@B,AN_?"@B,AN/?,@B,AN??D@B,AOO?N@B,AO_?D@B,AO/?N@B,AO??D@B,APO?N@B,E:_?N@B,FCO?N@B,FH/?''@B,FJ??]@B,FKO?N@B,FK_?]@B,FK/?N@B,FM_?6@B,FM/?6@B,FM??6@B,FNO?6@B,F ??S@B,F._?,@B,F./?"@B,IZ??6@B,I[O?6@B,I[/?6@B,I[??6@B0@IO?,@B0@I/?S@B0@JO?S@B0@J_?N@B0@J/?S@B0@J??X@B0@KO?6@B0@K_?,@B0@K/?N@B0@K??S@B0@LO?X@B0@L_?X@B0@L/?S@B0@MO?S@B0@M/?]@B0@M??6@B0@N_?,@B0@N/?,@B0@N??D@B0@OO?,@B0@O_?D@B0@QO?X@B0@Q/?"@B0@Q??"@B0@RO?,@B0@R_?6@B0@R/?X@B0@S_?,@B0@TO?N@B0@T_?N@B0@T/?"@B0@T??''@B0@UO?"@B0@U_?]@B0@U/?N@B0@U??6@B0@VO?S@B0@V_?"@B0@V/?"@B0@V??I@B0@WO?"@B0@W_?N@B0@ /?,@B0@ ??,@B0@!O?,@B0@!_?,@B0@!/?,@B0@!??,@B0@"O?,@B0@"_?S@B0@"/?S@B0@"??S@B0@#O?S@B0@#_?S@B0@#/?6@B0@#??6@B0@$O?6@B0@$_?6@B0@%O?S@B0@%_?S@B0@%/?S@B0@%??S@B0@&amp;O?S@B0@&amp;/?S@B0@''??,@B0@(/?X@B0@(??X@B0@)O?X@B0@)_?X@B0@)/?X@B0@)??X@B0@*O?X@B0@*_?"@B0@*/?,@B0@*??,@B0@+O?,@B0@+_?,@B0@,/?"@B0@,??N@B0@-O?"@B0@-_?"@B0@-/?"@B0@-??"@B0@.O?"@B0@./?"@B0@.??S@B0@/O?S@B0@/_?S@B0@//?S@B0@/??"@B0@0_?"@B0@0/?,@B0@0??X@B0@1O?,@B0@1_?X@B0@1/?,@B0@1??X@B0@2O?S@B0@2/?S@B0@2??"@B0@3O?S@B0@3/?S@B0@3??"@B0@4_?"@B0@5O?S@B0@5_?,@B0@5??,@B0@6/?S@B0@6??,@B0@7O?S@B0@7/?S@B0@8O?S@B0@8_?X@B0@8/?S@B0@8??X@B0@9O?S@B0@9_?X@B0@&gt;O?N@B0@&gt;??S@B0@?_?S@B0@???S@B0A@??S@B0AA/?N@B0ABO?N@B0AB/?N@B0AC/?S@B0AC??"@B0ADO?S@B0AD_?"@B0AD/?S@B0AD??"@B0AEO?S@B0AE_?"@B0AF??]@B0AGO?]@B0AG_?N@B0AHO?]@B0AH_?N@B0AH/?]@B0AH??N@B0AIO?6@B0AI_?6@B0AI/?6@B0AJ??S@B0AK_?S@B0AK??S@B0AL_?S@B0AL??S@B0ANO?,@B0AN_?"@B0AN/?,@B0AN??D@B0AOO?N@B0AO_?D@B0AO/?N@B0AO??D@B0APO?N@B0E:_?N@B0FCO?N@B0FH/?''@B0FJ??]@B0FKO?N@B0FK_?]@B0FK/?N@B0FM_?6@B0FM/?6@B0FM??6@B0FNO?6@B0F ??S@B0F._?,@B0F./?"@B0IZ??6@B0I[O?6@B0I[/?6@B0I[??6@B4@IO?"@B4@I/?"@B4@JO?S@B4@J_?I@B4@J/?"@B4@J??X@B4@KO?,@B4@K/?I@B4@K??S@B4@LO?X@B4@L_?X@B4@L/?"@B4@MO?"@B4@M/?"@B4@N_?N@B4@N/?N@B4@N??N@B4@OO?N@B4@O_?N@B4@QO?"@B4@Q/?,@B4@Q??,@B4@RO?1@B4@R/?"@B4@S_?,@B4@TO?X@B4@T_?X@B4@T/?,@B4@T??,@B4@UO?,@B4@U_?"@B4@U/?,@B4@VO?X@B4@V_?"@B4@V/?"@B4@V??N@B4@WO?"@B4@W_?X@B4@ /?"@B4@ ??"@B4@!O?"@B4@!_?"@B4@!/?"@B4@!??"@B4@"O?"@B4@"_?"@B4@"/?S@B4@"??S@B4@#O?S@B4@#_?S@B4@#/?,@B4@#??,@B4@$O?,@B4@$_?,@B4@%O?"@B4@%_?"@B4@%/?"@B4@%??"@B4@&amp;O?"@B4@&amp;/?"@B4@''??N@B4@(/?"@B4@(??"@B4@)O?"@B4@)_?"@B4@)/?"@B4@)??"@B4@*O?"@B4@*_?,@B4@*/?1@B4@*??1@B4@+O?1@B4@+_?1@B4@,/?,@B4@,??X@B4@-O?,@B4@-_?,@B4@-/?,@B4@-??,@B4@.O?,@B4@./?,@B4@.??X@B4@/O?X@B4@/_?X@B4@//?X@B4@/??"@B4@0_?"@B4@0/?"@B4@0??"@B4@1O?"@B4@1_?"@B4@1/?"@B4@1??"@B4@2O?"@B4@2/?"@B4@2??,@B4@3O?"@B4@3/?"@B4@3??,@B4@4_?,@B4@5O?S@B4@5_?1@B4@5??1@B4@6/?S@B4@6??1@B4@7O?S@B4@7/?"@B4@8O?"@B4@8_?"@B4@8/?"@B4@8??"@B4@9O?"@B4@9_?"@B4@&gt;O?I@B4@&gt;??S@B4@?_?S@B4@???S@B4A@??S@B4AA/?X@B4ABO?X@B4AB/?X@B4AC/?"@B4AC??,@B4ADO?"@B4AD_?,@B4AD/?"@B4AD??,@B4AEO?"@B4AE_?,@B4AF??"@B4AGO?"@B4AG_?,@B4AHO?"@B4AH_?,@B4AH/?"@B4AH??,@B4AJ??X@B4AK_?X@B4AK??X@B4AL_?X@B4AL??X@B4ANO?N@B4AN_?"@B4AN/?N@B4AN??N@B4AOO?X@B4AO_?N@B4AO/?X@B4AO??N@B4APO?X@B4E:_?I@B4FCO?X@B4FH/?,@B4FJ??"@B4FKO?,@B4FK_?"@B4FK/?,@B4F ??S@B4F._?N@B4F./?"@B8@C??"@B8@DO?X@B8@D_?"@B8@I/?N@B8@JO?N@B8@J_?I@B8@J/?N@B8@J??N@B8@KO?X@B8@K/?I@B8@K??N@B8@LO?N@B8@L_?N@B8@L/?N@B8@MO?N@B8@M/?N@B8@QO?"@B8@Q/?X@B8@Q??X@B8@RO?"@B8@R_?"@B8@R/?"@B8@S_?6@B8@TO?X@B8@T_?X@B8@T/?X@B8@T??"@B8@UO?X@B8@U_?X@B8@U/?,@B8@U??"@B8@VO?X@B8@V_?"@B8@V/?"@B8@V??,@B8@WO?"@B8@W_?X@B8@[_?X@B8@__?X@B8@"_?N@B8@"/?N@B8@"??N@B8@#O?N@B8@#_?N@B8@#/?X@B8@#??X@B8@$O?X@B8@$_?X@B8@%O?N@B8@%_?N@B8@%/?N@B8@%??N@B8@&amp;O?N@B8@&amp;/?N@B8@(/?"@B8@(??"@B8@)O?"@B8@)_?"@B8@)/?"@B8@)??"@B8@*O?"@B8@*_?X@B8@*/?"@B8@*??"@B8@+O?"@B8@+_?"@B8@,/?X@B8@,??X@B8@-O?X@B8@-_?X@B8@-/?X@B8@-??X@B8@.O?X@B8@./?X@B8@.??X@B8@/O?X@B8@/_?X@B8@//?X@B8@/??"@B8@0_?"@B8@0??"@B8@1_?"@B8@1??"@B8@2O?N@B8@2/?N@B8@2??X@B8@3O?N@B8@3/?N@B8@3??X@B8@4_?X@B8@5O?N@B8@5_?"@B8@5??"@B8@6/?N@B8@6??"@B8@7O?N@B8@7/?N@B8@8O?N@B8@8_?"@B8@8/?N@B8@8??"@B8@9O?N@B8@9_?"@B8@&gt;O?I@B8@&gt;??N@B8@?_?N@B8@???N@B8A@??N@B8AA/?X@B8ABO?X@B8AB/?X@B8AC/?N@B8AC??X@B8ADO?N@B8AD_?X@B8AD/?N@B8AD??X@B8AEO?N@B8AE_?X@B8AF??X@B8AGO?N@B8AG_?,@B8AHO?N@B8AH_?,@B8AH/?N@B8AH??,@B8AI_?"@B8AJ??X@B8AK_?X@B8AK??X@B8AL_?X@B8AL??X@B8AN_?"@B8AOO?X@B8AO/?X@B8APO?X@B8E:_?I@B8FCO?X@B8FH/?"@B8FJ??N@B8FKO?,@B8FK_?N@B8FK/?,@B8FM/?"@B8FNO?"@B8F ??N@B8F./?"@B8G0??"@B8G1/?"@B8G1??"@B8G8??X@B8G9O?X@B8IZ??"@B8I[O?"@B8I[/?"@B8I[??"@B&lt;@C??,@B&lt;@DO?N@B&lt;@D_?,@B&lt;@I/?X@B&lt;@JO?N@B&lt;@J_?I@B&lt;@J/?X@B&lt;@J??X@B&lt;@KO?"@B&lt;@K/?I@B&lt;@K??N@B&lt;@LO?X@B&lt;@L_?X@B&lt;@L/?X@B&lt;@MO?X@B&lt;@M/?X@B&lt;@M??X@B&lt;@N_?D@B&lt;@N/?D@B&lt;@OO?D@B&lt;@QO?,@B&lt;@Q/?"@B&lt;@Q??"@B&lt;@RO?''@B&lt;@R_?"@B&lt;@R/?,@B&lt;@S_?6@B&lt;@TO?X@B&lt;@T_?X@B&lt;@T/?"@B&lt;@UO?"@B&lt;@U_?"@B&lt;@U/?,@B&lt;@U??"@B&lt;@VO?X@B&lt;@V_?X@B&lt;@V/?X@B&lt;@WO?X@B&lt;@W_?X@B&lt;@[_?N@B&lt;@__?X@B&lt;@"_?X@B&lt;@"/?N@B&lt;@"??N@B&lt;@#O?N@B&lt;@#_?N@B&lt;@#/?"@B&lt;@#??"@B&lt;@$O?"@B&lt;@$_?"@B&lt;@%O?X@B&lt;@%_?X@B&lt;@%/?X@B&lt;@%??X@B&lt;@&amp;O?X@B&lt;@&amp;/?X@B&lt;@''??D@B&lt;@(/?,@B&lt;@(??,@B&lt;@)O?,@B&lt;@)_?,@B&lt;@)/?,@B&lt;@)??,@B&lt;@*O?,@B&lt;@*_?"@B&lt;@*/?''@B&lt;@*??''@B&lt;@+O?''@B&lt;@+_?''@B&lt;@,/?"@B&lt;@,??X@B&lt;@-O?"@B&lt;@-_?"@B&lt;@-/?"@B&lt;@-??"@B&lt;@.O?"@B&lt;@./?"@B&lt;@.??X@B&lt;@/O?X@B&lt;@/_?X@B&lt;@//?X@B&lt;@/??X@B&lt;@0_?X@B&lt;@0??,@B&lt;@1_?,@B&lt;@1??,@B&lt;@2O?X@B&lt;@2/?X@B&lt;@2??"@B&lt;@3O?X@B&lt;@3/?X@B&lt;@3??"@B&lt;@4_?"@B&lt;@5O?N@B&lt;@5_?''@B&lt;@5??''@B&lt;@6/?N@B&lt;@6??''@B&lt;@7O?N@B&lt;@7/?X@B&lt;@8O?X@B&lt;@8_?,@B&lt;@8/?X@B&lt;@8??,@B&lt;@9O?X@B&lt;@9_?,@B&lt;@&gt;O?I@B&lt;@&gt;??N@B&lt;@?_?N@B&lt;@???N@B&lt;A@??N@B&lt;AA/?X@B&lt;ABO?X@B&lt;AB/?X@B&lt;AC/?X@B&lt;AC??"@B&lt;ADO?X@B&lt;AD_?"@B&lt;AD/?X@B&lt;AD??"@B&lt;AEO?X@B&lt;AE_?"@B&lt;AF??"@B&lt;AGO?X@B&lt;AG_?,@B&lt;AHO?X@B&lt;AH_?,@B&lt;AH/?X@B&lt;AH??,@B&lt;AIO?X@B&lt;AI_?"@B&lt;AI/?X@B&lt;AJ??X@B&lt;AK_?X@B&lt;AK??X@B&lt;AL_?X@B&lt;AL??X@B&lt;ANO?D@B&lt;AN_?X@B&lt;AN/?D@B&lt;AOO?X@B&lt;AO/?X@B&lt;APO?X@B&lt;E:_?I@B&lt;FCO?X@B&lt;FJ??X@B&lt;FKO?,@B&lt;FK_?X@B&lt;FK/?,@B&lt;FM_?X@B&lt;FM/?"@B&lt;FM??X@B&lt;FNO?"@B&lt;F ??N@B&lt;F._?D@B&lt;F./?X@B&lt;G0??D@B&lt;G1/?D@B&lt;G1??D@B&lt;G8??N@B&lt;G9O?X@B&lt;IZ??"@B&lt;I[O?"@B&lt;I[/?"@B&lt;I[??"@C@@IO?X@C@@I/?,@C@@JO?X@C@@J_?S@C@@J/?,@C@@J??"@C@@KO?,@C@@K_?6@C@@K/?S@C@@K??X@C@@LO?"@C@@L_?"@C@@L/?,@C@@MO?,@C@@M/?"@C@@M??,@C@@N_?X@C@@N/?X@C@@N??N@C@@OO?X@C@@O_?N@C@@QO?6@C@@Q/?,@C@@Q??,@C@@RO?,@C@@R_?6@C@@R/?6@C@@S_?,@C@@TO?"@C@@T_?"@C@@T/?,@C@@T??"@C@@UO?,@C@@U_?"@C@@U/?"@C@@U??6@C@@VO?"@C@@V_?"@C@@V/?"@C@@V??X@C@@WO?"@C@@W_?"@C@@ /?X@C@@ ??X@C@@!O?X@C@@!_?X@C@@!/?X@C@@!??X@C@@"O?X@C@@"_?,@C@@"/?X@C@@"??X@C@@#O?X@C@@#_?X@C@@#/?,@C@@#??,@C@@$O?,@C@@$_?,@C@@%O?,@C@@%_?,@C@@%/?,@C@@%??,@C@@&amp;O?,@C@@&amp;/?,@C@@''??X@C@@(/?6@C@@(??6@C@@)O?6@C@@)_?6@C@@)/?6@C@@)??6@C@@*O?6@C@@*_?,@C@@*/?,@C@@*??,@C@@+O?,@C@@+_?,@C@@,/?,@C@@,??"@C@@-O?,@C@@-_?,@C@@-/?,@C@@-??,@C@@.O?,@C@@./?,@C@@.??"@C@@/O?"@C@@/_?"@C@@//?"@C@@/??"@C@@0_?"@C@@0/?X@C@@0??6@C@@1O?X@C@@1_?6@C@@1/?X@C@@1??6@C@@2O?,@C@@2/?,@C@@2??,@C@@3O?,@C@@3/?,@C@@3??,@C@@4_?,@C@@5O?X@C@@5_?,@C@@5??,@C@@6/?X@C@@6??,@C@@7O?X@C@@7/?,@C@@8O?,@C@@8_?6@C@@8/?,@C@@8??6@C@@9O?,@C@@9_?6@C@@&gt;O?S@C@@&gt;??X@C@@?_?X@C@@???X@C@A@??X@C@AA/?"@C@ABO?"@C@AB/?"@C@AC/?,@C@AC??,@C@ADO?,@C@AD_?,@C@AD/?,@C@AD??,@C@AEO?,@C@AE_?,@C@AF??"@C@AGO?"@C@AG_?"@C@AHO?"@C@AH_?"@C@AH/?"@C@AH??"@C@AIO?,@C@AI_?6@C@AI/?,@C@AJ??"@C@AK_?"@C@AK??"@C@AL_?"@C@AL??"@C@ANO?X@C@AN_?"@C@AN/?X@C@AN??N@C@AOO?"@C@AO_?N@C@AO/?"@C@AO??N@C@APO?"@C@E:_?S@C@FCO?"@C@FH/?"@C@FJ??"@C@FKO?"@C@FK_?"@C@FK/?"@C@FM_?,@C@FM/?6@C@FM??,@C@FNO?6@C@F ??X@C@F._?X@C@F./?"@C@IZ??6@C@I[O?6@C@I[/?6@C@I[??6@CD@IO?X@CD@I/?,@CD@JO?X@CD@J_?S@CD@J/?,@CD@J??"@CD@KO?,@CD@K_?6@CD@K/?S@CD@K??X@CD@LO?"@CD@L_?"@CD@L/?,@CD@MO?,@CD@M/?"@CD@M??,@CD@N_?X@CD@N/?X@CD@N??N@CD@OO?X@CD@O_?N@CD@QO?6@CD@Q/?,@CD@Q??,@CD@RO?,@CD@R_?6@CD@R/?6@CD@S_?,@CD@TO?"@CD@T_?"@CD@T/?,@CD@T??"@CD@UO?,@CD@U_?"@CD@U/?"@CD@U??6@CD@VO?"@CD@V_?"@CD@V/?"@CD@V??X@CD@WO?"@CD@W_?"@CD@ /?X@CD@ ??X@CD@!O?X@CD@!_?X@CD@!/?X@CD@!??X@CD@"O?X@CD@"_?,@CD@"/?X@CD@"??X@CD@#O?X@CD@#_?X@CD@#/?,@CD@#??,@CD@$O?,@CD@$_?,@CD@%O?,@CD@%_?,@CD@%/?,@CD@%??,@CD@&amp;O?,@CD@&amp;/?,@CD@''??X@CD@(/?6@CD@(??6@CD@)O?6@CD@)_?6@CD@)/?6@CD@)??6@CD@*O?6@CD@*_?,@CD@*/?,@CD@*??,@CD@+O?,@CD@+_?,@CD@,/?,@CD@,??"@CD@-O?,@CD@-_?,@CD@-/?,@CD@-??,@CD@.O?,@CD@./?,@CD@.??"@CD@/O?"@CD@/_?"@CD@//?"@CD@/??"@CD@0_?"@CD@0/?X@CD@0??6@CD@1O?X@CD@1_?6@CD@1/?X@CD@1??6@CD@2O?,@CD@2/?,@CD@2??,@CD@3O?,@CD@3/?,@CD@3??,@CD@4_?,@CD@5O?X@CD@5_?,@CD@5??,@CD@6/?X@CD@6??,@CD@7O?X@CD@7/?,@CD@8O?,@CD@8_?6@CD@8/?,@CD@8??6@CD@9O?,@CD@9_?6@CD@&gt;O?S@CD@&gt;??X@CD@?_?X@CD@???X@CDA@??X@CDAA/?"@CDABO?"@CDAB/?"@CDAC/?,@CDAC??,@CDADO?,@CDAD_?,@CDAD/?,@CDAD??,@CDAEO?,@CDAE_?,@CDAF??"@CDAGO?"@CDAG_?"@CDAHO?"@CDAH_?"@CDAH/?"@CDAH??"@CDAIO?,@CDAI_?6@CDAI/?,@CDAJ??"@CDAK_?"@CDAK??"@CDAL_?"@CDAL??"@CDANO?X@CDAN_?"@CDAN/?X@CDAN??N@CDAOO?"@CDAO_?N@CDAO/?"@CDAO??N@CDAPO?"@CDE:_?S@CDFCO?"@CDFH/?"@CDFJ??"@CDFKO?"@CDFK_?"@CDFK/?"@CDFM_?,@CDFM/?6@CDFM??,@CDFNO?6@CDF ??X@CDF._?X@CDF./?"@CDIZ??6@CDI[O?6@CDI[/?6@CDI[??6@CH@C??"@CH@D_?"@CH@IO?"@CH@JO?"@CH@J_?X@CH@J??"@CH@KO?6@CH@K/?X@CH@K??"@CH@LO?"@CH@L_?"@CH@M/?,@CH@M??X@CH@N_?X@CH@N/?X@CH@N??N@CH@OO?X@CH@O_?N@CH@QO?,@CH@R/?,@CH@TO?,@CH@T_?,@CH@T??6@CH@U_?,@CH@VO?1@CH@W_?,@CH@__?,@CH@ /?"@CH@ ??"@CH@!O?"@CH@!_?"@CH@!/?"@CH@!??"@CH@"O?"@CH@"/?"@CH@"??"@CH@#O?"@CH@#_?"@CH@#/?6@CH@#??6@CH@$O?6@CH@$_?6@CH@''??X@CH@(/?,@CH@(??,@CH@)O?,@CH@)_?,@CH@)/?,@CH@)??,@CH@*O?,@CH@,??,@CH@.??1@CH@/O?1@CH@/_?1@CH@//?1@CH@0/?"@CH@0??,@CH@1O?"@CH@1_?,@CH@1/?"@CH@1??,@CH@5O?"@CH@6/?"@CH@7O?"@CH@8_?,@CH@8??,@CH@9_?,@CH@&gt;O?X@CH@&gt;??"@CH@?_?"@CH@???"@CHA@??"@CHAA/?,@CHABO?,@CHAB/?,@CHAF??,@CHAGO?,@CHAHO?,@CHAH/?,@CHAIO?X@CHAI/?X@CHAJ??1@CHAK_?1@CHAK??1@CHAL_?1@CHAL??1@CHANO?X@CHAN/?X@CHAN??N@CHAOO?,@CHAO_?N@CHAO/?,@CHAO??N@CHAPO?,@CHE:_?X@CHFCO?,@CHFH/?6@CHFJ??,@CHFK_?,@CHFM_?X@CHFM??X@CHF ??"@CHF._?X@CHG0??X@CHG1/?X@CHG1??X@CHG9O?,@CL@C?&gt;0@CL@DO?N@CL@D_&gt;0@CL@IO?D@CL@I/?,@CL@JO?S@CL@J_?N@CL@J/?,@CL@J??X@CL@KO?,@CL@K_?X@CL@K/?N@CL@K??S@CL@LO?X@CL@L_?X@CL@L/?,@CL@MO?,@CL@M/?"@CL@M??"@CL@N_?X@CL@N/?X@CL@N??D@CL@OO?X@CL@O_?D@CL@QO?N@CL@Q/?X@CL@Q??X@CL@RO?"@CL@R/?N@CL@TO?X@CL@T_?X@CL@T/?X@CL@T??,@CL@UO?X@CL@U_?"@CL@U/?"@CL@VO?X@CL@V??X@CL@W_?X@CL@[_?N@CL@__?D@CL@ /?D@CL@ ??D@CL@!O?D@CL@!_?D@CL@!/?D@CL@!??D@CL@"O?D@CL@"_?,@CL@"/?S@CL@"??S@CL@#O?S@CL@#_?S@CL@#/?,@CL@#??,@CL@$O?,@CL@$_?,@CL@%O?,@CL@%_?,@CL@%/?,@CL@%??,@CL@&amp;O?,@CL@&amp;/?,@CL@''??X@CL@(/?N@CL@(??N@CL@)O?N@CL@)_?N@CL@)/?N@CL@)??N@CL@*O?N@CL@*_?X@CL@*/?"@CL@*??"@CL@+O?"@CL@+_?"@CL@,/?X@CL@,??X@CL@-O?X@CL@-_?X@CL@-/?X@CL@-??X@CL@.O?X@CL@./?X@CL@.??X@CL@/O?X@CL@/_?X@CL@//?X@CL@0/?D@CL@0??N@CL@1O?D@CL@1_?N@CL@1/?D@CL@1??N@CL@2O?,@CL@2/?,@CL@2??X@CL@3O?,@CL@3/?,@CL@3??X@CL@4_?X@CL@5O?S@CL@5_?"@CL@5??"@CL@6/?S@CL@6??"@CL@7O?S@CL@7/?,@CL@8O?,@CL@8_?N@CL@8/?,@CL@8??N@CL@9O?,@CL@9_?N@CL@&gt;O?N@CL@&gt;??S@CL@?_?S@CL@???S@CLA@??S@CLAA/?X@CLABO?X@CLAB/?X@CLAC/?,@CLAC??X@CLADO?,@CLAD_?X@CLAD/?,@CLAD??X@CLAEO?,@CLAE_?X@CLAF??"@CLAGO?"@CLAG_?"@CLAHO?"@CLAH_?"@CLAH/?"@CLAH??"@CLAIO?"@CLAI/?"@CLAJ??X@CLAK_?X@CLAK??X@CLAL_?X@CLAL??X@CLANO?X@CLAN/?X@CLAN??D@CLAOO?X@CLAO_?D@CLAO/?X@CLAO??D@CLAPO?X@CLE:_?N@CLFCO?X@CLFH/?,@CLFJ??"@CLFKO?"@CLFK_?"@CLFK/?"@CLFM_?"@CLFM??"@CLF ??S@CLF._?X@CLG0??,@CLG1/?,@CLG1??,@CLG8??N@CLG9O?D@CP@C??"@CP@D_?"@CP@IO?"@CP@JO?"@CP@J_?X@CP@J??"@CP@KO?6@CP@K/?X@CP@K??"@CP@LO?"@CP@L_?"@CP@M/?,@CP@M??X@CP@N_?X@CP@N/?X@CP@N??N@CP@OO?X@CP@O_?N@CP@QO?,@CP@R/?,@CP@TO?,@CP@T_?,@CP@T??6@CP@U_?,@CP@VO?1@CP@W_?,@CP@__?,@CP@ /?"@CP@ ??"@CP@!O?"@CP@!_?"@CP@!/?"@CP@!??"@CP@"O?"@CP@"/?"@CP@"??"@CP@#O?"@CP@#_?"@CP@#/?6@CP@#??6@CP@$O?6@CP@$_?6@CP@''??X@CP@(/?,@CP@(??,@CP@)O?,@CP@)_?,@CP@)/?,@CP@)??,@CP@*O?,@CP@,??,@CP@.??1@CP@/O?1@CP@/_?1@CP@//?1@CP@0/?"@CP@0??,@CP@1O?"@CP@1_?,@CP@1/?"@CP@1??,@CP@5O?"@CP@6/?"@CP@7O?"@CP@8_?,@CP@8??,@CP@9_?,@CP@&gt;O?X@CP@&gt;??"@CP@?_?"@CP@???"@CPA@??"@CPAA/?,@CPABO?,@CPAB/?,@CPAF??,@CPAGO?,@CPAHO?,@CPAH/?,@CPAIO?X@CPAI/?X@CPAJ??1@CPAK_?1@CPAK??1@CPAL_?1@CPAL??1@CPANO?X@CPAN/?X@CPAN??N@CPAOO?,@CPAO_?N@CPAO/?,@CPAO??N@CPAPO?,@CPE:_?X@CPFCO?,@CPFH/?6@CPFJ??,@CPFK_?,@CPFM_?X@CPFM??X@CPF ??"@CPF._?X@CPG0??X@CPG1/?X@CPG1??X@CPG9O?,@CT@IO?6@CT@I/?6@CT@JO?X@CT@J_?I@CT@J/?6@CT@J??"@CT@KO?6@CT@K/?I@CT@K??X@CT@LO?"@CT@L_?"@CT@L/?6@CT@MO?6@CT@M/?,@CT@M??,@CT@N_?N@CT@N/?N@CT@N??,@CT@OO?N@CT@O_?,@CT@QO?6@CT@Q/?6@CT@Q??6@CT@R/?6@CT@S_?6@CT@TO?6@CT@T_?6@CT@T/?6@CT@T??6@CT@UO?6@CT@U_?,@CT@U/?6@CT@VO?X@CT@V_?6@CT@V/?6@CT@WO?6@CT@W_?6@CT@ /?6@CT@ ??6@CT@!O?6@CT@!_?6@CT@!/?6@CT@!??6@CT@"O?6@CT@"_?6@CT@"/?X@CT@"??X@CT@#O?X@CT@#_?X@CT@#/?6@CT@#??6@CT@$O?6@CT@$_?6@CT@%O?6@CT@%_?6@CT@%/?6@CT@%??6@CT@&amp;O?6@CT@&amp;/?6@CT@''??N@CT@(/?6@CT@(??6@CT@)O?6@CT@)_?6@CT@)/?6@CT@)??6@CT@*O?6@CT@*_?6@CT@,/?6@CT@,??6@CT@-O?6@CT@-_?6@CT@-/?6@CT@-??6@CT@.O?6@CT@./?6@CT@.??X@CT@/O?X@CT@/_?X@CT@//?X@CT@/??6@CT@0_?6@CT@0/?6@CT@0??6@CT@1O?6@CT@1_?6@CT@1/?6@CT@1??6@CT@2O?6@CT@2/?6@CT@2??6@CT@3O?6@CT@3/?6@CT@3??6@CT@4_?6@CT@5O?X@CT@6/?X@CT@7O?X@CT@7/?6@CT@8O?6@CT@8_?6@CT@8/?6@CT@8??6@CT@9O?6@CT@9_?6@CT@&gt;O?I@CT@&gt;??X@CT@?_?X@CT@???X@CTA@??X@CTAA/?6@CTABO?6@CTAB/?6@CTAC/?6@CTAC??6@CTADO?6@CTAD_?6@CTAD/?6@CTAD??6@CTAEO?6@CTAE_?6@CTAF??,@CTAGO?,@CTAG_?6@CTAHO?,@CTAH_?6@CTAH/?,@CTAH??6@CTAIO?,@CTAI/?,@CTAJ??X@CTAK_?X@CTAK??X@CTAL_?X@CTAL??X@CTANO?N@CTAN_?6@CTAN/?N@CTAN??,@CTAOO?6@CTAO_?,@CTAO/?6@CTAO??,@CTAPO?6@CTE:_?I@CTFCO?6@CTFH/?6@CTFJ??,@CTFKO?6@CTFK_?,@CTFK/?6@CTFM_?,@CTFM??,@CTF ??X@CTF._?N@CTF./?6@CX@C??N@CX@DO?,@CX@D_?N@CX@IO?"@CX@I/?,@CX@JO?]@CX@J_?X@CX@J/?,@CX@J??"@CX@KO?,@CX@K/?X@CX@K??]@CX@LO?"@CX@L_?"@CX@L/?,@CX@MO?,@CX@M/?6@CX@M??X@CX@N_?N@CX@N/?N@CX@N??N@CX@OO?N@CX@O_?N@CX@R_?6@CX@S_?6@CX@TO?,@CX@T_?,@CX@T??6@CX@U_?,@CX@U??6@CX@VO?''@CX@V_?,@CX@V/?,@CX@V??X@CX@WO?,@CX@W_?,@CX@[_?,@CX@__?"@CX@ /?"@CX@ ??"@CX@!O?"@CX@!_?"@CX@!/?"@CX@!??"@CX@"O?"@CX@"_?,@CX@"/?]@CX@"??]@CX@#O?]@CX@#_?]@CX@#/?,@CX@#??,@CX@$O?,@CX@$_?,@CX@%O?,@CX@%_?,@CX@%/?,@CX@%??,@CX@&amp;O?,@CX@&amp;/?,@CX@''??N@CX@,??,@CX@.??''@CX@/O?''@CX@/_?''@CX@//?''@CX@/??,@CX@0_?,@CX@0/?"@CX@1O?"@CX@1/?"@CX@2O?,@CX@2/?,@CX@3O?,@CX@3/?,@CX@5O?]@CX@6/?]@CX@7O?]@CX@7/?,@CX@8O?,@CX@8/?,@CX@9O?,@CX@&gt;O?X@CX@&gt;??]@CX@?_?]@CX@???]@CXA@??]@CXAA/?,@CXABO?,@CXAB/?,@CXAC/?,@CXADO?,@CXAD/?,@CXAEO?,@CXAF??,@CXAGO?6@CXAHO?6@CXAH/?6@CXAIO?X@CXAI_?6@CXAI/?X@CXAJ??''@CXAK_?''@CXAK??''@CXAL_?''@CXAL??''@CXANO?N@CXAN_?,@CXAN/?N@CXAN??N@CXAOO?,@CXAO_?N@CXAO/?,@CXAO??N@CXAPO?,@CXE:_?X@CXFCO?,@CXFH/?6@CXFJ??6@CXFK_?6@CXFM_?X@CXFM/?6@CXFM??X@CXFNO?6@CXF ??]@CXF._?N@CXF./?,@CXG0??D@CXG1/?D@CXG1??D@CXG8??,@CXG9O?"@CXIZ??6@CXI[O?6@CXI[/?6@CXI[??6@C\@C??N@C\@DO?X@C\@D_?N@C\@IO?N@C\@I/?X@C\@JO?]@C\@J_?X@C\@J/?X@C\@J??"@C\@KO?,@C\@K_?X@C\@K/?X@C\@K??]@C\@LO?"@C\@L_?"@C\@L/?X@C\@MO?X@C\@M/?X@C\@N_?6@C\@N/?6@C\@N??X@C\@OO?6@C\@O_?X@C\@QO?X@C\@Q/?X@C\@Q??X@C\@RO?''@C\@R_?,@C\@R/?X@C\@TO?X@C\@T_?X@C\@T/?X@C\@T??"@C\@UO?X@C\@U_?X@C\@U/?X@C\@U??,@C\@VO?X@C\@V_?,@C\@V/?,@C\@V??"@C\@WO?,@C\@W_?X@C\@[_?X@C\@__?X@C\@ /?N@C\@ ??N@C\@!O?N@C\@!_?N@C\@!/?N@C\@!??N@C\@"O?N@C\@"_?X@C\@"/?]@C\@"??]@C\@#O?]@C\@#_?]@C\@#/?,@C\@#??,@C\@$O?,@C\@$_?,@C\@%O?X@C\@%_?X@C\@%/?X@C\@%??X@C\@&amp;O?X@C\@&amp;/?X@C\@''??6@C\@(/?X@C\@(??X@C\@)O?X@C\@)_?X@C\@)/?X@C\@)??X@C\@*O?X@C\@*_?X@C\@*/?''@C\@*??''@C\@+O?''@C\@+_?''@C\@,/?X@C\@,??X@C\@-O?X@C\@-_?X@C\@-/?X@C\@-??X@C\@.O?X@C\@./?X@C\@.??X@C\@/O?X@C\@/_?X@C\@//?X@C\@/??,@C\@0_?,@C\@0/?N@C\@0??X@C\@1O?N@C\@1_?X@C\@1/?N@C\@1??X@C\@2O?X@C\@2/?X@C\@2??X@C\@3O?X@C\@3/?X@C\@3??X@C\@4_?X@C\@5O?]@C\@5_?''@C\@5??''@C\@6/?]@C\@6??''@C\@7O?]@C\@7/?X@C\@8O?X@C\@8_?X@C\@8/?X@C\@8??X@C\@9O?X@C\@9_?X@C\@&gt;O?X@C\@&gt;??]@C\@?_?]@C\@???]@C\A@??]@C\AA/?X@C\ABO?X@C\AB/?X@C\AC/?X@C\AC??X@C\ADO?X@C\AD_?X@C\AD/?X@C\AD??X@C\AEO?X@C\AE_?X@C\AF??X@C\AGO?X@C\AG_?X@C\AHO?X@C\AH_?X@C\AH/?X@C\AH??X@C\AI_?,@C\AJ??X@C\AK_?X@C\AK??X@C\AL_?X@C\AL??X@C\ANO?6@C\AN_?,@C\AN/?6@C\AN??X@C\AOO?X@C\AO_?X@C\AO/?X@C\AO??X@C\APO?X@C\E:_?X@C\FCO?X@C\FH/?"@C\FJ??X@C\FKO?X@C\FK_?X@C\FK/?X@C\FM/?,@C\FNO?,@C\F ??]@C\F._?6@C\F./?,@C\G8??X@C\G9O?X@C\IZ??,@C\I[O?,@C\I[/?,@C\I[??,@C$@C??D@C$@DO?N@C$@D_?D@C$@IO?D@C$@I/?N@C$@JO?I@C$@J_?D@C$@J/?N@C$@J??N@C$@KO?X@C$@K_?"@C$@K/?D@C$@K??I@C$@LO?N@C$@L_?N@C$@L/?N@C$@MO?N@C$@M/?N@C$@N??"@C$@O_?"@C$@QO?N@C$@Q/?N@C$@Q??N@C$@RO?"@C$@R_?,@C$@R/?N@C$@TO?D@C$@T_?D@C$@T/?N@C$@T??X@C$@UO?N@C$@U_?D@C$@U/?X@C$@U??,@C$@VO?N@C$@V??"@C$@W_?D@C$@[_?N@C$@__&gt;0@C$@ /?D@C$@ ??D@C$@!O?D@C$@!_?D@C$@!/?D@C$@!??D@C$@"O?D@C$@"_?N@C$@"/?I@C$@"??I@C$@#O?I@C$@#_?I@C$@#/?X@C$@#??X@C$@$O?X@C$@$_?X@C$@%O?N@C$@%_?N@C$@%/?N@C$@%??N@C$@&amp;O?N@C$@&amp;/?N@C$@(/?N@C$@(??N@C$@)O?N@C$@)_?N@C$@)/?N@C$@)??N@C$@*O?N@C$@*_?N@C$@*/?"@C$@*??"@C$@+O?"@C$@+_?"@C$@,/?N@C$@,??D@C$@-O?N@C$@-_?N@C$@-/?N@C$@-??N@C$@.O?N@C$@./?N@C$@.??N@C$@/O?N@C$@/_?N@C$@//?N@C$@0/?D@C$@0??N@C$@1O?D@C$@1_?N@C$@1/?D@C$@1??N@C$@2O?N@C$@2/?N@C$@2??N@C$@3O?N@C$@3/?N@C$@3??N@C$@4_?N@C$@5O?I@C$@5_?"@C$@5??"@C$@6/?I@C$@6??"@C$@7O?I@C$@7/?N@C$@8O?N@C$@8_?N@C$@8/?N@C$@8??N@C$@9O?N@C$@9_?N@C$@&gt;O?D@C$@&gt;??I@C$@?_?I@C$@???I@C$A@??I@C$AA/?D@C$ABO?D@C$AB/?D@C$AC/?N@C$AC??N@C$ADO?N@C$AD_?N@C$AD/?N@C$AD??N@C$AEO?N@C$AE_?N@C$AF??D@C$AGO?N@C$AG_?X@C$AHO?N@C$AH_?X@C$AH/?N@C$AH??X@C$AI_?,@C$AJ??N@C$AK_?N@C$AK??N@C$AL_?N@C$AL??N@C$AN??"@C$AOO?D@C$AO_?"@C$AO/?D@C$AO??"@C$APO?D@C$E:_?D@C$FCO?D@C$FH/?X@C$FJ??N@C$FKO?X@C$FK_?N@C$FK/?X@C$FM/?,@C$FNO?,@C$F ??I@C$G8??N@C$G9O&gt;0@C$IZ??,@C$I[O?,@C$I[/?,@C$I[??,@C(@C??D@C(@DO?N@C(@D_?D@C(@IO?D@C(@I/?N@C(@JO?I@C(@J_?D@C(@J/?N@C(@J??N@C(@KO?X@C(@K_?"@C(@K/?D@C(@K??I@C(@LO?N@C(@L_?N@C(@L/?N@C(@MO?N@C(@M/?N@C(@N??"@C(@O_?"@C(@QO?N@C(@Q/?N@C(@Q??N@C(@RO?"@C(@R_?,@C(@R/?N@C(@TO?D@C(@T_?D@C(@T/?N@C(@T??X@C(@UO?N@C(@U_?D@C(@U/?X@C(@U??,@C(@VO?N@C(@V??"@C(@W_?D@C(@[_?N@C(@__&gt;0@C(@ /?D@C(@ ??D@C(@!O?D@C(@!_?D@C(@!/?D@C(@!??D@C(@"O?D@C(@"_?N@C(@"/?I@C(@"??I@C(@#O?I@C(@#_?I@C(@#/?X@C(@#??X@C(@$O?X@C(@$_?X@C(@%O?N@C(@%_?N@C(@%/?N@C(@%??N@C(@&amp;O?N@C(@&amp;/?N@C(@(/?N@C(@(??N@C(@)O?N@C(@)_?N@C(@)/?N@C(@)??N@C(@*O?N@C(@*_?N@C(@*/?"@C(@*??"@C(@+O?"@C(@+_?"@C(@,/?N@C(@,??D@C(@-O?N@C(@-_?N@C(@-/?N@C(@-??N@C(@.O?N@C(@./?N@C(@.??N@C(@/O?N@C(@/_?N@C(@//?N@C(@0/?D@C(@0??N@C(@1O?D@C(@1_?N@C(@1/?D@C(@1??N@C(@2O?N@C(@2/?N@C(@2??N@C(@3O?N@C(@3/?N@C(@3??N@C(@4_?N@C(@5O?I@C(@5_?"@C(@5??"@C(@6/?I@C(@6??"@C(@7O?I@C(@7/?N@C(@8O?N@C(@8_?N@C(@8/?N@C(@8??N@C(@9O?N@C(@9_?N@C(@&gt;O?D@C(@&gt;??I@C(@?_?I@C(@???I@C(A@??I@C(AA/?D@C(ABO?D@C(AB/?D@C(AC/?N@C(AC??N@C(ADO?N@C(AD_?N@C(AD/?N@C(AD??N@C(AEO?N@C(AE_?N@C(AF??D@C(AGO?N@C(AG_?X@C(AHO?N@C(AH_?X@C(AH/?N@C(AH??X@C(AI_?,@C(AJ??N@C(AK_?N@C(AK??N@C(AL_?N@C(AL??N@C(AN??"@C(AOO?D@C(AO_?"@C(AO/?D@C(AO??"@C(APO?D@C(E:_?D@C(FCO?D@C(FH/?X@C(FJ??N@C(FKO?X@C(FK_?N@C(FK/?X@C(FM/?,@C(FNO?,@C(F ??I@C(G8??N@C(G9O&gt;0@C(IZ??,@C(I[O?,@C(I[/?,@C(I[??,@C,@C??"@C,@DO?X@C,@D_?"@C,@I/?N@C,@JO?N@C,@J_?I@C,@J/?N@C,@J??N@C,@KO?X@C,@K/?I@C,@K??N@C,@LO?N@C,@L_?N@C,@L/?N@C,@MO?N@C,@M/?N@C,@QO?"@C,@Q/?X@C,@Q??X@C,@RO?"@C,@R_?"@C,@R/?"@C,@S_?6@C,@TO?X@C,@T_?X@C,@T/?X@C,@T??"@C,@UO?X@C,@U_?X@C,@U/?,@C,@U??"@C,@VO?X@C,@V_?"@C,@V/?"@C,@V??,@C,@WO?"@C,@W_?X@C,@[_?X@C,@__?X@C,@"_?N@C,@"/?N@C,@"??N@C,@#O?N@C,@#_?N@C,@#/?X@C,@#??X@C,@$O?X@C,@$_?X@C,@%O?N@C,@%_?N@C,@%/?N@C,@%??N@C,@&amp;O?N@C,@&amp;/?N@C,@(/?"@C,@(??"@C,@)O?"@C,@)_?"@C,@)/?"@C,@)??"@C,@*O?"@C,@*_?X@C,@*/?"@C,@*??"@C,@+O?"@C,@+_?"@C,@,/?X@C,@,??X@C,@-O?X@C,@-_?X@C,@-/?X@C,@-??X@C,@.O?X@C,@./?X@C,@.??X@C,@/O?X@C,@/_?X@C,@//?X@C,@/??"@C,@0_?"@C,@0??"@C,@1_?"@C,@1??"@C,@2O?N@C,@2/?N@C,@2??X@C,@3O?N@C,@3/?N@C,@3??X@C,@4_?X@C,@5O?N@C,@5_?"@C,@5??"@C,@6/?N@C,@6??"@C,@7O?N@C,@7/?N@C,@8O?N@C,@8_?"@C,@8/?N@C,@8??"@C,@9O?N@C,@9_?"@C,@&gt;O?I@C,@&gt;??N@C,@?_?N@C,@???N@C,A@??N@C,AA/?X@C,ABO?X@C,AB/?X@C,AC/?N@C,AC??X@C,ADO?N@C,AD_?X@C,AD/?N@C,AD??X@C,AEO?N@C,AE_?X@C,AF??X@C,AGO?N@C,AG_?,@C,AHO?N@C,AH_?,@C,AH/?N@C,AH??,@C,AI_?"@C,AJ??X@C,AK_?X@C,AK??X@C,AL_?X@C,AL??X@C,AN_?"@C,AOO?X@C,AO/?X@C,APO?X@C,E:_?I@C,FCO?X@C,FH/?"@C,FJ??N@C,FKO?,@C,FK_?N@C,FK/?,@C,FM/?"@C,FNO?"@C,F ??N@C,F./?"@C,G0??"@C,G1/?"@C,G1??"@C,G8??X@C,G9O?X@C,IZ??"@C,I[O?"@C,I[/?"@C,I[??"@C0@C??D@C0@DO?N@C0@D_?D@C0@IO?D@C0@I/?N@C0@JO?I@C0@J_?D@C0@J/?N@C0@J??N@C0@KO?X@C0@K_?"@C0@K/?D@C0@K??I@C0@LO?N@C0@L_?N@C0@L/?N@C0@MO?N@C0@M/?N@C0@N??"@C0@O_?"@C0@QO?N@C0@Q/?N@C0@Q??N@C0@RO?"@C0@R_?,@C0@R/?N@C0@TO?D@C0@T_?D@C0@T/?N@C0@T??X@C0@UO?N@C0@U_?D@C0@U/?X@C0@U??,@C0@VO?N@C0@V??"@C0@W_?D@C0@[_?N@C0@__&gt;0@C0@ /?D@C0@ ??D@C0@!O?D@C0@!_?D@C0@!/?D@C0@!??D@C0@"O?D@C0@"_?N@C0@"/?I@C0@"??I@C0@#O?I@C0@#_?I@C0@#/?X@C0@#??X@C0@$O?X@C0@$_?X@C0@%O?N@C0@%_?N@C0@%/?N@C0@%??N@C0@&amp;O?N@C0@&amp;/?N@C0@(/?N@C0@(??N@C0@)O?N@C0@)_?N@C0@)/?N@C0@)??N@C0@*O?N@C0@*_?N@C0@*/?"@C0@*??"@C0@+O?"@C0@+_?"@C0@,/?N@C0@,??D@C0@-O?N@C0@-_?N@C0@-/?N@C0@-??N@C0@.O?N@C0@./?N@C0@.??N@C0@/O?N@C0@/_?N@C0@//?N@C0@0/?D@C0@0??N@C0@1O?D@C0@1_?N@C0@1/?D@C0@1??N@C0@2O?N@C0@2/?N@C0@2??N@C0@3O?N@C0@3/?N@C0@3??N@C0@4_?N@C0@5O?I@C0@5_?"@C0@5??"@C0@6/?I@C0@6??"@C0@7O?I@C0@7/?N@C0@8O?N@C0@8_?N@C0@8/?N@C0@8??N@C0@9O?N@C0@9_?N@C0@&gt;O?D@C0@&gt;??I@C0@?_?I@C0@???I@C0A@??I@C0AA/?D@C0ABO?D@C0AB/?D@C0AC/?N@C0AC??N@C0ADO?N@C0AD_?N@C0AD/?N@C0AD??N@C0AEO?N@C0AE_?N@C0AF??D@C0AGO?N@C0AG_?X@C0AHO?N@C0AH_?X@C0AH/?N@C0AH??X@C0AI_?,@C0AJ??N@C0AK_?N@C0AK??N@C0AL_?N@C0AL??N@C0AN??"@C0AOO?D@C0AO_?"@C0AO/?D@C0AO??"@C0APO?D@C0E:_?D@C0FCO?D@C0FH/?X@C0FJ??N@C0FKO?X@C0FK_?N@C0FK/?X@C0FM/?,@C0FNO?,@C0F ??I@C0G8??N@C0G9O&gt;0@C0IZ??,@C0I[O?,@C0I[/?,@C0I[??,@C4@C??"@C4@DO?X@C4@D_?"@C4@I/?N@C4@JO?N@C4@J_?I@C4@J/?N@C4@J??N@C4@KO?X@C4@K/?I@C4@K??N@C4@LO?N@C4@L_?N@C4@L/?N@C4@MO?N@C4@M/?N@C4@QO?"@C4@Q/?X@C4@Q??X@C4@RO?"@C4@R_?"@C4@R/?"@C4@S_?6@C4@TO?X@C4@T_?X@C4@T/?X@C4@T??"@C4@UO?X@C4@U_?X@C4@U/?,@C4@U??"@C4@VO?X@C4@V_?"@C4@V/?"@C4@V??,@C4@WO?"@C4@W_?X@C4@[_?X@C4@__?X@C4@"_?N@C4@"/?N@C4@"??N@C4@#O?N@C4@#_?N@C4@#/?X@C4@#??X@C4@$O?X@C4@$_?X@C4@%O?N@C4@%_?N@C4@%/?N@C4@%??N@C4@&amp;O?N@C4@&amp;/?N@C4@(/?"@C4@(??"@C4@)O?"@C4@)_?"@C4@)/?"@C4@)??"@C4@*O?"@C4@*_?X@C4@*/?"@C4@*??"@C4@+O?"@C4@+_?"@C4@,/?X@C4@,??X@C4@-O?X@C4@-_?X@C4@-/?X@C4@-??X@C4@.O?X@C4@./?X@C4@.??X@C4@/O?X@C4@/_?X@C4@//?X@C4@/??"@C4@0_?"@C4@0??"@C4@1_?"@C4@1??"@C4@2O?N@C4@2/?N@C4@2??X@C4@3O?N@C4@3/?N@C4@3??X@C4@4_?X@C4@5O?N@C4@5_?"@C4@5??"@C4@6/?N@C4@6??"@C4@7O?N@C4@7/?N@C4@8O?N@C4@8_?"@C4@8/?N@C4@8??"@C4@9O?N@C4@9_?"@C4@&gt;O?I@C4@&gt;??N@C4@?_?N@C4@???N@C4A@??N@C4AA/?X@C4ABO?X@C4AB/?X@C4AC/?N@C4AC??X@C4ADO?N@C4AD_?X@C4AD/?N@C4AD??X@C4AEO?N@C4AE_?X@C4AF??X@C4AGO?N@C4AG_?,@C4AHO?N@C4AH_?,@C4AH/?N@C4AH??,@C4AI_?"@C4AJ??X@C4AK_?X@C4AK??X@C4AL_?X@C4AL??X@C4AN_?"@C4AOO?X@C4AO/?X@C4APO?X@C4E:_?I@C4FCO?X@C4FH/?"@C4FJ??N@C4FKO?,@C4FK_?N@C4FK/?,@C4FM/?"@C4FNO?"@C4F ??N@C4F./?"@C4G0??"@C4G1/?"@C4G1??"@C4G8??X@C4G9O?X@C4IZ??"@C4I[O?"@C4I[/?"@C4I[??"@DP@C??,@DP@DO?X@DP@D_?,@DP@QO?6@DP@Q/?6@DP@R_?,@DP@R/?6@DP@R??1@DP@SO?1@DP@S??1@DP@TO?6@DP@T_?6@DP@T/?6@DP@U_?6@DP@U/?6@DP@U??,@DP@VO?6@DP@V_?,@DP@V/?,@DP@V??1@DP@WO?,@DP@[_?X@DP@__?X@DP@(/?6@DP@(??6@DP@)O?6@DP@)_?6@DP@)/?6@DP@)??6@DP@*O?6@DP@*_?6@DP@+??1@DP@,??6@DP@-O?6@DP@-_?6@DP@-/?6@DP@-??6@DP@.O?6@DP@.??6@DP@/O?6@DP@/_?6@DP@//?6@DP@/??,@DP@0_?,@DP@0??6@DP@1_?6@DP@1??6@DP@2??6@DP@3??6@DP@8_?6@DP@8??6@DP@9_?6@DP@&lt;_?1@DPAA/?6@DPABO?6@DPAB/?6@DPAC??6@DPAD_?6@DPAD??6@DPAE_?6@DPAF??6@DPAG_?6@DPAH_?6@DPAH??6@DPAI_?,@DPAJ??6@DPAK_?6@DPAK??6@DPAL_?6@DPAL??6@DPAN_?,@DPE;/?1@DPFKO?6@DPFK/?6@DPFM/?,@DPFNO?,@DPF./?,@DPG0??D@DPG1/?D@DPG1??D@DPG8??X@DPG9O?X@DPIZ??,@DPI[O?,@DPI[_?,@DPI[/?,@DPI[??,@DT@C??,@DT@D_?,@DT@QO?6@DT@Q/?;@DT@R_?1@DT@R/?6@DT@R??1@DT@SO?1@DT@S??1@DT@TO?,@DT@T_?,@DT@T/?;@DT@T??;@DT@U_?6@DT@U/?1@DT@U??1@DT@VO?6@DT@V_?6@DT@V/?6@DT@V??''@DT@WO?6@DT@W_?6@DT@__?,@DT@(/?6@DT@(??6@DT@)O?6@DT@)_?6@DT@)/?6@DT@)??6@DT@*O?6@DT@*_?;@DT@+??1@DT@,??,@DT@-O?;@DT@-_?;@DT@-/?;@DT@-??;@DT@.O?;@DT@.??6@DT@/O?6@DT@/_?6@DT@//?6@DT@/??6@DT@0_?6@DT@0??6@DT@1_?6@DT@1??6@DT@2??;@DT@3??;@DT@8_?6@DT@8??6@DT@9_?6@DT@&lt;_?1@DTAA/?,@DTABO?,@DTAB/?,@DTAC??;@DTAD_?;@DTAD??;@DTAE_?;@DTAF??6@DTAG_?1@DTAH_?1@DTAH??1@DTAI_?1@DTAJ??6@DTAK_?6@DTAK??6@DTAL_?6@DTAL??6@DTAN_?6@DTAOO?6@DTAO/?6@DTAPO?6@DTBL/?6@DTE;/?1@DTFH/?;@DTFKO?1@DTFK/?1@DTFM/?1@DTFNO?1@DTF./?6@DTG0??X@DTG1/?X@DTG1??X@DTG9O?,@DTIZ??1@DTI[O?1@DTI[_?1@DTI[/?1@DTI[??1@DX@C??,@DX@D_?,@DX@QO?6@DX@Q/?;@DX@R_?1@DX@R/?6@DX@R??1@DX@SO?1@DX@S??1@DX@TO?,@DX@T_?,@DX@T/?;@DX@T??;@DX@U_?6@DX@U/?1@DX@U??1@DX@VO?6@DX@V_?6@DX@V/?6@DX@V??''@DX@WO?6@DX@W_?6@DX@__?,@DX@(/?6@DX@(??6@DX@)O?6@DX@)_?6@DX@)/?6@DX@)??6@DX@*O?6@DX@*_?;@DX@+??1@DX@,??,@DX@-O?;@DX@-_?;@DX@-/?;@DX@-??;@DX@.O?;@DX@.??6@DX@/O?6@DX@/_?6@DX@//?6@DX@/??6@DX@0_?6@DX@0??6@DX@1_?6@DX@1??6@DX@2??;@DX@3??;@DX@8_?6@DX@8??6@DX@9_?6@DX@&lt;_?1@DXAA/?,@DXABO?,@DXAB/?,@DXAC??;@DXAD_?;@DXAD??;@DXAE_?;@DXAF??6@DXAG_?1@DXAH_?1@DXAH??1@DXAI_?1@DXAJ??6@DXAK_?6@DXAK??6@DXAL_?6@DXAL??6@DXAN_?6@DXAOO?6@DXAO/?6@DXAPO?6@DXBL/?6@DXE;/?1@DXFH/?;@DXFKO?1@DXFK/?1@DXFM/?1@DXFNO?1@DXF./?6@DXG0??X@DXG1/?X@DXG1??X@DXG9O?,@DXIZ??1@DXI[O?1@DXI[_?1@DXI[/?1@DXI[??1@D\@QO?6@D\@Q/?''@D\@Q??,@D\@RO?,@D\@R_?6@D\@R/?6@D\@R??,@D\@SO?,@D\@S_?;@D\@S??,@D\@TO?;@D\@T_?;@D\@T/?''@D\@T??6@D\@UO?,@D\@U_?6@D\@U/?,@D\@U??6@D\@VO?6@D\@V_?,@D\@V/?,@D\@V??,@D\@WO?,@D\@W_?6@D\@(/?6@D\@(??6@D\@)O?6@D\@)_?6@D\@)/?6@D\@)??6@D\@*O?6@D\@*_?''@D\@*/?,@D\@*??,@D\@+O?,@D\@+_?,@D\@+??,@D\@,??;@D\@-O?''@D\@-_?''@D\@-/?''@D\@-??''@D\@.O?''@D\@.??6@D\@/O?6@D\@/_?6@D\@//?6@D\@/??,@D\@0_?,@D\@0??6@D\@1_?6@D\@1??6@D\@2??''@D\@3??''@D\@4_?,@D\@5_?,@D\@5??,@D\@8_?6@D\@8??6@D\@9_?6@D\@&lt;_?,@D\AA/?;@D\ABO?;@D\AB/?;@D\AC??''@D\AD_?''@D\AD??''@D\AE_?''@D\AF??6@D\AG_?,@D\AH_?,@D\AH??,@D\AI_?6@D\AJ??6@D\AK_?6@D\AK??6@D\AL_?6@D\AL??6@D\AN_?,@D\AOO?6@D\AO/?6@D\APO?6@D\BL/?6@D\E;/?,@D\FH/?6@D\FKO?,@D\FK/?,@D\FM/?6@D\FNO?6@D\F./?,@D\IZ??6@D\I[O?6@D\I[_?6@D\I[/?6@D\I[??6@D @C??,@D @D_?,@D @QO?;@D @Q/?;@D @R_?;@D @R/?;@D @R??6@D @SO?6@D @S??6@D @TO?1@D @T_?1@D @T/?;@D @U_?;@D @U/?6@D @U??;@D @VO?;@D @V_?1@D @V/?1@D @V??''@D @WO?1@D @W_?;@D @__?,@D @(/?;@D @(??;@D @)O?;@D @)_?;@D @)/?;@D @)??;@D @*O?;@D @*_?;@D @+??6@D @,??1@D @-O?;@D @-_?;@D @-/?;@D @-??;@D @.O?;@D @.??;@D @/O?;@D @/_?;@D @//?;@D @/??1@D @0_?1@D @0??;@D @1_?;@D @1??;@D @2??;@D @3??;@D @8_?;@D @8??;@D @9_?;@D @&lt;_?6@D AA/?1@D ABO?1@D AB/?1@D AC??;@D AD_?;@D AD??;@D AE_?;@D AF??;@D AG_?6@D AH_?6@D AH??6@D AI_?;@D AJ??;@D AK_?;@D AK??;@D AL_?;@D AL??;@D AN_?1@D AOO?;@D AO/?;@D APO?;@D BL/?;@D E;/?6@D FKO?6@D FK/?6@D FM/?;@D FNO?;@D F./?1@D G0??X@D G1/?X@D G1??X@D G9O?,@D IZ??;@D I[O?;@D I[_?;@D I[/?;@D I[??;@D$@C??D@D$@DO?X@D$@D_?D@D$@QO?1@D$@Q/?,@D$@Q??6@D$@RO?;@D$@R/?1@D$@R??1@D$@SO?1@D$@S??1@D$@TO?6@D$@T_?6@D$@T/?,@D$@UO?6@D$@U_?;@D$@U/?,@D$@VO?;@D$@V??,@D$@[_?X@D$@__?,@D$@(/?1@D$@(??1@D$@)O?1@D$@)_?1@D$@)/?1@D$@)??1@D$@*O?1@D$@*_?,@D$@*/?;@D$@*??;@D$@+O?;@D$@+_?;@D$@+??1@D$@,??6@D$@-O?,@D$@-_?,@D$@-/?,@D$@-??,@D$@.O?,@D$@.??;@D$@/O?;@D$@/_?;@D$@//?;@D$@0??1@D$@1_?1@D$@1??1@D$@2??,@D$@3??,@D$@4_?6@D$@5_?;@D$@5??;@D$@8_?1@D$@8??1@D$@9_?1@D$@&lt;_?1@D$AA/?6@D$ABO?6@D$AB/?6@D$AC??,@D$AD_?,@D$AD??,@D$AE_?,@D$AF??;@D$AG_?,@D$AH_?,@D$AH??,@D$AJ??;@D$AK_?;@D$AK??;@D$AL_?;@D$AL??;@D$E;/?1@D$FKO?,@D$FK/?,@D$G8??X@D$G9O?,@D(@C??X@D(@DO?X@D(@D_?X@D(@QO?1@D(@Q??1@D(@RO?6@D(@R_?1@D(@R/?1@D(@R??,@D(@SO?,@D(@S??,@D(@T??;@D(@UO?1@D(@U_?6@D(@U/?6@D(@U??1@D(@[_?X@D(@__?"@D(@(/?1@D(@(??1@D(@)O?1@D(@)_?1@D(@)/?1@D(@)??1@D(@*O?1@D(@*/?6@D(@*??6@D(@+O?6@D(@+_?6@D(@+??,@D(@0??1@D(@1_?1@D(@1??1@D(@4_?1@D(@5_?6@D(@5??6@D(@8_?1@D(@8??1@D(@9_?1@D(@&lt;_?,@D(AF??6@D(AG_?6@D(AH_?6@D(AH??6@D(AI_?1@D(E;/?,@D(FH/?;@D(FKO?6@D(FK/?6@D(FM/?1@D(FNO?1@D(G0??X@D(G1/?X@D(G1??X@D(G8??X@D(G9O?"@D(IZ??1@D(I[O?1@D(I[_?1@D(I[/?1@D(I[??1@D,@C??"@D,@DO?X@D,@D_?"@D,@QO?1@D,@Q/?,@D,@Q??1@D,@RO?6@D,@R_?;@D,@R/?1@D,@R??''@D,@SO?''@D,@S_?,@D,@S??''@D,@TO?''@D,@T_?''@D,@T/?,@D,@T??6@D,@UO?1@D,@U_?,@D,@U/?''@D,@U??;@D,@VO?,@D,@V_?"@D,@V/?"@D,@V??,@D,@WO?"@D,@[_?X@D,@__?"@D,@(/?1@D,@(??1@D,@)O?1@D,@)_?1@D,@)/?1@D,@)??1@D,@*O?1@D,@*_?,@D,@*/?6@D,@*??6@D,@+O?6@D,@+_?6@D,@+??''@D,@,??''@D,@-O?,@D,@-_?,@D,@-/?,@D,@-??,@D,@.O?,@D,@.??,@D,@/O?,@D,@/_?,@D,@//?,@D,@/??"@D,@0_?"@D,@0??1@D,@1_?1@D,@1??1@D,@2??,@D,@3??,@D,@4_?1@D,@5_?6@D,@5??6@D,@8_?1@D,@8??1@D,@9_?1@D,@&lt;_?''@D,AA/?''@D,ABO?''@D,AB/?''@D,AC??,@D,AD_?,@D,AD??,@D,AE_?,@D,AF??,@D,AG_?''@D,AH_?''@D,AH??''@D,AI_?;@D,AJ??,@D,AK_?,@D,AK??,@D,AL_?,@D,AL??,@D,AN_?"@D,E;/?''@D,FH/?6@D,FKO?''@D,FK/?''@D,FM/?;@D,FNO?;@D,F./?"@D,G0??D@D,G1/?D@D,G1??D@D,G8??X@D,G9O?"@D,IZ??;@D,I[O?;@D,I[_?;@D,I[/?;@D,I[??;@D0@QO?''@D0@Q/?,@D0@Q??1@D0@RO?6@D0@R_?''@D0@R/?''@D0@R??1@D0@SO?1@D0@S??1@D0@T/?,@D0@UO?1@D0@U/?6@D0@U??''@D0@V_?''@D0@V/?''@D0@WO?''@D0@(/?''@D0@(??''@D0@)O?''@D0@)_?''@D0@)/?''@D0@)??''@D0@*O?''@D0@*_?,@D0@*/?6@D0@*??6@D0@+O?6@D0@+_?6@D0@+??1@D0@-O?,@D0@-_?,@D0@-/?,@D0@-??,@D0@.O?,@D0@/??''@D0@0_?''@D0@0??''@D0@1_?''@D0@1??''@D0@2??,@D0@3??,@D0@4_?1@D0@5_?6@D0@5??6@D0@8_?''@D0@8??''@D0@9_?''@D0@&lt;_?1@D0AC??,@D0AD_?,@D0AD??,@D0AE_?,@D0AG_?6@D0AH_?6@D0AH??6@D0AI_?''@D0AN_?''@D0E;/?1@D0FKO?6@D0FK/?6@D0FM/?''@D0FNO?''@D0F./?''@D0IZ??''@D0I[O?''@D0I[_?''@D0I[/?''@D0I[??''@D4@QO?6@D4@Q/?''@D4@Q??,@D4@RO?,@D4@R_?6@D4@R/?6@D4@R??,@D4@SO?,@D4@S_?;@D4@S??,@D4@TO?;@D4@T_?;@D4@T/?''@D4@T??6@D4@UO?,@D4@U_?6@D4@U/?,@D4@U??6@D4@VO?6@D4@V_?,@D4@V/?,@D4@V??,@D4@WO?,@D4@W_?6@D4@(/?6@D4@(??6@D4@)O?6@D4@)_?6@D4@)/?6@D4@)??6@D4@*O?6@D4@*_?''@D4@*/?,@D4@*??,@D4@+O?,@D4@+_?,@D4@+??,@D4@,??;@D4@-O?''@D4@-_?''@D4@-/?''@D4@-??''@D4@.O?''@D4@.??6@D4@/O?6@D4@/_?6@D4@//?6@D4@/??,@D4@0_?,@D4@0??6@D4@1_?6@D4@1??6@D4@2??''@D4@3??''@D4@4_?,@D4@5_?,@D4@5??,@D4@8_?6@D4@8??6@D4@9_?6@D4@&lt;_?,@D4AA/?;@D4ABO?;@D4AB/?;@D4AC??''@D4AD_?''@D4AD??''@D4AE_?''@D4AF??6@D4AG_?,@D4AH_?,@D4AH??,@D4AI_?6@D4AJ??6@D4AK_?6@D4AK??6@D4AL_?6@D4AL??6@D4AN_?,@D4AOO?6@D4AO/?6@D4APO?6@D4BL/?6@D4E;/?,@D4FH/?6@D4FKO?,@D4FK/?,@D4FM/?6@D4FNO?6@D4F./?,@D4IZ??6@D4I[O?6@D4I[_?6@D4I[/?6@D4I[??6@D8@C??X@D8@DO?X@D8@D_?X@D8@QO?1@D8@Q/?''@D8@Q??"@D8@RO?''@D8@R_?6@D8@R/?1@D8@R??]@D8@SO?]@D8@S??]@D8@TO?,@D8@T_?,@D8@T/?''@D8@T??6@D8@UO?"@D8@U_?,@D8@U/?6@D8@U??6@D8@VO?,@D8@V_?,@D8@V/?,@D8@WO?,@D8@[_?X@D8@__?D@D8@(/?1@D8@(??1@D8@)O?1@D8@)_?1@D8@)/?1@D8@)??1@D8@*O?1@D8@*_?''@D8@*/?''@D8@*??''@D8@+O?''@D8@+_?''@D8@+??]@D8@,??,@D8@-O?''@D8@-_?''@D8@-/?''@D8@-??''@D8@.O?''@D8@.??,@D8@/O?,@D8@/_?,@D8@//?,@D8@/??,@D8@0_?,@D8@0??1@D8@1_?1@D8@1??1@D8@2??''@D8@3??''@D8@4_?"@D8@5_?''@D8@5??''@D8@8_?1@D8@8??1@D8@9_?1@D8@&lt;_?]@D8AA/?,@D8ABO?,@D8AB/?,@D8AC??''@D8AD_?''@D8AD??''@D8AE_?''@D8AF??,@D8AG_?6@D8AH_?6@D8AH??6@D8AI_?6@D8AJ??,@D8AK_?,@D8AK??,@D8AL_?,@D8AL??,@D8AN_?,@D8E;/?]@D8FH/?6@D8FKO?6@D8FK/?6@D8FM/?6@D8FNO?6@D8F./?,@D8G0??D@D8G1/?D@D8G1??D@D8G8??X@D8G9O?D@D8IZ??6@D8I[O?6@D8I[_?6@D8I[/?6@D8I[??6@D&lt;@QO?''@D&lt;@Q/?,@D&lt;@Q??1@D&lt;@RO?6@D&lt;@R_?''@D&lt;@R/?''@D&lt;@R??1@D&lt;@SO?1@D&lt;@S??1@D&lt;@T/?,@D&lt;@UO?1@D&lt;@U/?6@D&lt;@U??''@D&lt;@V_?''@D&lt;@V/?''@D&lt;@WO?''@D&lt;@(/?''@D&lt;@(??''@D&lt;@)O?''@D&lt;@)_?''@D&lt;@)/?''@D&lt;@)??''@D&lt;@*O?''@D&lt;@*_?,@D&lt;@*/?6@D&lt;@*??6@D&lt;@+O?6@D&lt;@+_?6@D&lt;@+??1@D&lt;@-O?,@D&lt;@-_?,@D&lt;@-/?,@D&lt;@-??,@D&lt;@.O?,@D&lt;@/??''@D&lt;@0_?''@D&lt;@0??''@D&lt;@1_?''@D&lt;@1??''@D&lt;@2??,@D&lt;@3??,@D&lt;@4_?1@D&lt;@5_?6@D&lt;@5??6@D&lt;@8_?''@D&lt;@8??''@D&lt;@9_?''@D&lt;@&lt;_?1@D&lt;AC??,@D&lt;AD_?,@D&lt;AD??,@D&lt;AE_?,@D&lt;AG_?6@D&lt;AH_?6@D&lt;AH??6@D&lt;AI_?''@D&lt;AN_?''@D&lt;E;/?1@D&lt;FKO?6@D&lt;FK/?6@D&lt;FM/?''@D&lt;FNO?''@D&lt;F./?''@D&lt;IZ??''@D&lt;I[O?''@D&lt;I[_?''@D&lt;I[/?''@D&lt;I[??''@E@@C??"@E@@DO?X@E@@D_?"@E@@QO?6@E@@Q/?;@E@@Q??6@E@@RO?;@E@@R_?6@E@@R/?6@E@@R??,@E@@SO?,@E@@S_?1@E@@S??,@E@@TO?,@E@@T_?,@E@@T/?;@E@@T??;@E@@UO?6@E@@U_?1@E@@U/?1@E@@U??6@E@@VO?1@E@@V_?]@E@@V/?]@E@@V??1@E@@WO?]@E@@[_?X@E@@__?"@E@@(/?6@E@@(??6@E@@)O?6@E@@)_?6@E@@)/?6@E@@)??6@E@@*O?6@E@@*_?;@E@@*/?;@E@@*??;@E@@+O?;@E@@+_?;@E@@+??,@E@@,??,@E@@-O?;@E@@-_?;@E@@-/?;@E@@-??;@E@@.O?;@E@@.??1@E@@/O?1@E@@/_?1@E@@//?1@E@@/??]@E@@0_?]@E@@0??6@E@@1_?6@E@@1??6@E@@2??;@E@@3??;@E@@4_?6@E@@5_?;@E@@5??;@E@@8_?6@E@@8??6@E@@9_?6@E@@&lt;_?,@E@AA/?,@E@ABO?,@E@AB/?,@E@AC??;@E@AD_?;@E@AD??;@E@AE_?;@E@AF??1@E@AG_?1@E@AH_?1@E@AH??1@E@AI_?6@E@AJ??1@E@AK_?1@E@AK??1@E@AL_?1@E@AL??1@E@AN_?]@E@E;/?,@E@FH/?;@E@FKO?1@E@FK/?1@E@FM/?6@E@FNO?6@E@F./?]@E@G0??D@E@G1/?D@E@G1??D@E@G8??X@E@G9O?"@E@IZ??6@E@I[O?6@E@I[_?6@E@I[/?6@E@I[??6@ED@C??"@ED@DO?X@ED@D_?"@ED@QO?6@ED@Q/?;@ED@Q??6@ED@RO?;@ED@R_?6@ED@R/?6@ED@R??,@ED@SO?,@ED@S_?1@ED@S??,@ED@TO?,@ED@T_?,@ED@T/?;@ED@T??;@ED@UO?6@ED@U_?1@ED@U/?1@ED@U??6@ED@VO?1@ED@V_?]@ED@V/?]@ED@V??1@ED@WO?]@ED@[_?X@ED@__?"@ED@(/?6@ED@(??6@ED@)O?6@ED@)_?6@ED@)/?6@ED@)??6@ED@*O?6@ED@*_?;@ED@*/?;@ED@*??;@ED@+O?;@ED@+_?;@ED@+??,@ED@,??,@ED@-O?;@ED@-_?;@ED@-/?;@ED@-??;@ED@.O?;@ED@.??1@ED@/O?1@ED@/_?1@ED@//?1@ED@/??]@ED@0_?]@ED@0??6@ED@1_?6@ED@1??6@ED@2??;@ED@3??;@ED@4_?6@ED@5_?;@ED@5??;@ED@8_?6@ED@8??6@ED@9_?6@ED@&lt;_?,@EDAA/?,@EDABO?,@EDAB/?,@EDAC??;@EDAD_?;@EDAD??;@EDAE_?;@EDAF??1@EDAG_?1@EDAH_?1@EDAH??1@EDAI_?6@EDAJ??1@EDAK_?1@EDAK??1@EDAL_?1@EDAL??1@EDAN_?]@EDE;/?,@EDFH/?;@EDFKO?1@EDFK/?1@EDFM/?6@EDFNO?6@EDF./?]@EDG0??D@EDG1/?D@EDG1??D@EDG8??X@EDG9O?"@EDIZ??6@EDI[O?6@EDI[_?6@EDI[/?6@EDI[??6@EH@C??,@EH@D_?,@EH@QO?1@EH@Q/?6@EH@Q??;@EH@R_?,@EH@R/?1@EH@R??"@EH@SO?"@EH@S_?6@EH@S??"@EH@TO?"@EH@T_?"@EH@T/?6@EH@T??6@EH@UO?;@EH@U_?1@EH@U/?,@EH@U??,@EH@VO?1@EH@V_?1@EH@V/?1@EH@V??"@EH@WO?1@EH@W_?1@EH@__?,@EH@(/?1@EH@(??1@EH@)O?1@EH@)_?1@EH@)/?1@EH@)??1@EH@*O?1@EH@*_?6@EH@+??"@EH@,??"@EH@-O?6@EH@-_?6@EH@-/?6@EH@-??6@EH@.O?6@EH@.??1@EH@/O?1@EH@/_?1@EH@//?1@EH@/??1@EH@0_?1@EH@0??1@EH@1_?1@EH@1??1@EH@2??6@EH@3??6@EH@4_?;@EH@8_?1@EH@8??1@EH@9_?1@EH@&lt;_?"@EHAA/?"@EHABO?"@EHAB/?"@EHAC??6@EHAD_?6@EHAD??6@EHAE_?6@EHAF??1@EHAG_?,@EHAH_?,@EHAH??,@EHAI_?,@EHAJ??1@EHAK_?1@EHAK??1@EHAL_?1@EHAL??1@EHAN_?1@EHAOO?1@EHAO/?1@EHAPO?1@EHBL/?1@EHE;/?"@EHFH/?6@EHFKO?,@EHFK/?,@EHFM/?,@EHFNO?,@EHF./?1@EHG0??X@EHG1/?X@EHG1??X@EHG9O?,@EHIZ??,@EHI[O?,@EHI[_?,@EHI[/?,@EHI[??,@EL@C??,@EL@D_?,@EL@QO?6@EL@Q/?;@EL@R_?1@EL@R/?6@EL@R??1@EL@SO?1@EL@S??1@EL@TO?,@EL@T_?,@EL@T/?;@EL@T??;@EL@U_?6@EL@U/?1@EL@U??1@EL@VO?6@EL@V_?6@EL@V/?6@EL@V??''@EL@WO?6@EL@W_?6@EL@__?,@EL@(/?6@EL@(??6@EL@)O?6@EL@)_?6@EL@)/?6@EL@)??6@EL@*O?6@EL@*_?;@EL@+??1@EL@,??,@EL@-O?;@EL@-_?;@EL@-/?;@EL@-??;@EL@.O?;@EL@.??6@EL@/O?6@EL@/_?6@EL@//?6@EL@/??6@EL@0_?6@EL@0??6@EL@1_?6@EL@1??6@EL@2??;@EL@3??;@EL@8_?6@EL@8??6@EL@9_?6@EL@&lt;_?1@ELAA/?,@ELABO?,@ELAB/?,@ELAC??;@ELAD_?;@ELAD??;@ELAE_?;@ELAF??6@ELAG_?1@ELAH_?1@ELAH??1@ELAI_?1@ELAJ??6@ELAK_?6@ELAK??6@ELAL_?6@ELAL??6@ELAN_?6@ELAOO?6@ELAO/?6@ELAPO?6@ELBL/?6@ELE;/?1@ELFH/?;@ELFKO?1@ELFK/?1@ELFM/?1@ELFNO?1@ELF./?6@ELG0??X@ELG1/?X@ELG1??X@ELG9O?,@ELIZ??1@ELI[O?1@ELI[_?1@ELI[/?1@ELI[??1@EP@QO?1@EP@Q??1@EP@RO?6@EP@R_?1@EP@R/?1@EP@R??,@EP@SO?,@EP@S??,@EP@T??;@EP@UO?1@EP@U_?6@EP@U/?6@EP@U??1@EP@(/?1@EP@(??1@EP@)O?1@EP@)_?1@EP@)/?1@EP@)??1@EP@*O?1@EP@*/?6@EP@*??6@EP@+O?6@EP@+_?6@EP@+??,@EP@0??1@EP@1_?1@EP@1??1@EP@4_?1@EP@5_?6@EP@5??6@EP@8_?1@EP@8??1@EP@9_?1@EP@&lt;_?,@EPAF??6@EPAG_?6@EPAH_?6@EPAH??6@EPAI_?1@EPE;/?,@EPFH/?;@EPFKO?6@EPFK/?6@EPFM/?1@EPFNO?1@EPIZ??1@EPI[O?1@EPI[_?1@EPI[/?1@EPI[??1@ET@C??D@ET@DO?X@ET@D_?D@ET@QO?,@ET@Q/?1@ET@Q??;@ET@RP@E@ET@R/?,@ET@TO?;@ET@T_?;@ET@T/?1@ET@UO?;@ET@U/?6@ET@U0@E@ET@VO?;@ET@V??6@ET@[_?X@ET@__?"@ET@(/?,@ET@(??,@ET@)O?,@ET@)_?,@ET@)/?,@ET@)??,@ET@*O?,@ET@*_?1@ET@,??;@ET@-O?1@ET@-_?1@ET@-/?1@ET@-??1@ET@.O?1@ET@.??;@ET@/O?;@ET@/_?;@ET@//?;@ET@0??,@ET@1_?,@ET@1??,@ET@2??1@ET@3??1@ET@4_?;@ET@8_?,@ET@8??,@ET@9_?,@ETAA/?;@ETABO?;@ETAB/?;@ETAC??1@ETAD_?1@ETAD??1@ETAE_?1@ETAG_?6@ETAH_?6@ETAH??6@ETAIP@E@ETAJ??;@ETAK_?;@ETAK??;@ETAL_?;@ETAL??;@ETFKO?6@ETFK/?6@ETFM @E@ETFN@@E@ETG8??X@ETG9O?"@ETIZ0@E@ETI[@@E@ETI[P@E@ETI[ @E@ETI[0@E@EX@C??X@EX@DO?X@EX@D_?X@EX@QO?6@EX@Q/?6@EX@Q??;@EX@R_?,@EX@R/?6@EX@R??,@EX@SO?,@EX@S_?,@EX@S??,@EX@TO?,@EX@T_?,@EX@T/?6@EX@T??6@EX@UO?;@EX@U_?,@EX@U/?6@EX@U??,@EX@VO?1@EX@V_?,@EX@V/?,@EX@V??X@EX@WO?,@EX@[_?X@EX@__?"@EX@(/?6@EX@(??6@EX@)O?6@EX@)_?6@EX@)/?6@EX@)??6@EX@*O?6@EX@*_?6@EX@+??,@EX@,??,@EX@-O?6@EX@-_?6@EX@-/?6@EX@-??6@EX@.O?6@EX@.??1@EX@/O?1@EX@/_?1@EX@//?1@EX@/??,@EX@0_?,@EX@0??6@EX@1_?6@EX@1??6@EX@2??6@EX@3??6@EX@4_?;@EX@8_?6@EX@8??6@EX@9_?6@EX@&lt;_?,@EXAA/?,@EXABO?,@EXAB/?,@EXAC??6@EXAD_?6@EXAD??6@EXAE_?6@EXAF??,@EXAG_?6@EXAH_?6@EXAH??6@EXAI_?,@EXAJ??1@EXAK_?1@EXAK??1@EXAL_?1@EXAL??1@EXAN_?,@EXE;/?,@EXFH/?6@EXFKO?6@EXFK/?6@EXFM/?,@EXFNO?,@EXF./?,@EXG0?&gt;:@EXG1/&gt;:@EXG1?&gt;:@EXG8??X@EXG9O?"@EXIZ??,@EXI[O?,@EXI[_?,@EXI[/?,@EXI[??,@E\@DO?X@E\@QO?6@E\@Q/?''@E\@Q??1@E\@RO?;@E\@R_?1@E\@R/?6@E\@R??1@E\@SO?1@E\@S??1@E\@TO?6@E\@T_?6@E\@T/?''@E\@UO?1@E\@U_?6@E\@U/?6@E\@U??1@E\@V??,@E\@[_?X@E\@__?X@E\@(/?6@E\@(??6@E\@)O?6@E\@)_?6@E\@)/?6@E\@)??6@E\@*O?6@E\@*_?''@E\@*/?;@E\@*??;@E\@+O?;@E\@+_?;@E\@+??1@E\@,??6@E\@-O?''@E\@-_?''@E\@-/?''@E\@-??''@E\@.O?''@E\@0??6@E\@1_?6@E\@1??6@E\@2??''@E\@3??''@E\@4_?1@E\@5_?;@E\@5??;@E\@8_?6@E\@8??6@E\@9_?6@E\@&lt;_?1@E\AA/?6@E\ABO?6@E\AB/?6@E\AC??''@E\AD_?''@E\AD??''@E\AE_?''@E\AF??6@E\AG_?6@E\AH_?6@E\AH??6@E\AI_?1@E\E;/?1@E\FKO?6@E\FK/?6@E\FM/?1@E\FNO?1@E\G8??X@E\G9O?X@E\IZ??1@E\I[O?1@E\I[_?1@E\I[/?1@E\I[??1@E @C??X@E @DO?X@E @D_?X@E @QO?1@E @Q??1@E @RO?6@E @R_?1@E @R/?1@E @R??,@E @SO?,@E @S??,@E @T??;@E @UO?1@E @U_?6@E @U/?6@E @U??1@E @[_?X@E @__?"@E @(/?1@E @(??1@E @)O?1@E @)_?1@E @)/?1@E @)??1@E @*O?1@E @*/?6@E @*??6@E @+O?6@E @+_?6@E @+??,@E @0??1@E @1_?1@E @1??1@E @4_?1@E @5_?6@E @5??6@E @8_?1@E @8??1@E @9_?1@E @&lt;_?,@E AF??6@E AG_?6@E AH_?6@E AH??6@E AI_?1@E E;/?,@E FH/?;@E FKO?6@E FK/?6@E FM/?1@E FNO?1@E G0??X@E G1/?X@E G1??X@E G8??X@E G9O?"@E IZ??1@E I[O?1@E I[_?1@E I[/?1@E I[??1@E$@C??N@E$@DO?,@E$@D_?N@E$@QO?''@E$@Q/?,@E$@Q??''@E$@RO?1@E$@R_?6@E$@R/?''@E$@R??''@E$@SO?''@E$@S_?,@E$@S??''@E$@TO?X@E$@T_?X@E$@T/?,@E$@T??"@E$@UO?''@E$@U_?''@E$@U/?,@E$@U??6@E$@VO?"@E$@V??,@E$@W_?6@E$@[_?,@E$@__?X@E$@(/?''@E$@(??''@E$@)O?''@E$@)_?''@E$@)/?''@E$@)??''@E$@*O?''@E$@*_?,@E$@*/?1@E$@*??1@E$@+O?1@E$@+_?1@E$@+??''@E$@,??X@E$@-O?,@E$@-_?,@E$@-/?,@E$@-??,@E$@.O?,@E$@.??"@E$@/O?"@E$@/_?"@E$@//?"@E$@0??''@E$@1_?''@E$@1??''@E$@2??,@E$@3??,@E$@4_?''@E$@5_?1@E$@5??1@E$@8_?''@E$@8??''@E$@9_?''@E$@&lt;_?''@E$AA/?X@E$ABO?X@E$AB/?X@E$AC??,@E$AD_?,@E$AD??,@E$AE_?,@E$AF??''@E$AG_?,@E$AH_?,@E$AH??,@E$AI_?6@E$AJ??"@E$AK_?"@E$AK??"@E$AL_?"@E$AL??"@E$AOO?6@E$AO/?6@E$APO?6@E$BL/?6@E$E;/?''@E$FH/?"@E$FKO?,@E$FK/?,@E$FM/?6@E$FNO?6@E$G0??,@E$G1/?,@E$G1??,@E$G8??,@E$G9O?X@E$IZ??6@E$I[O?6@E$I[_?6@E$I[/?6@E$I[??6@E(@C??N@E(@DO?,@E(@D_?N@E(@QO?,@E(@Q/?6@E(@Q??,@E(@RO?6@E(@R_?;@E(@R/?,@E(@R??,@E(@SO?,@E(@S_?1@E(@S??,@E(@TO?"@E(@T_?"@E(@T/?6@E(@T??1@E(@UO?,@E(@U_?''@E(@U/?,@E(@U??;@E(@VO?''@E(@V_?1@E(@V/?1@E(@V??1@E(@WO?1@E(@W_?;@E(@[_?,@E(@__?X@E(@(/?,@E(@(??,@E(@)O?,@E(@)_?,@E(@)/?,@E(@)??,@E(@*O?,@E(@*_?6@E(@*/?6@E(@*??6@E(@+O?6@E(@+_?6@E(@+??,@E(@,??"@E(@-O?6@E(@-_?6@E(@-/?6@E(@-??6@E(@.O?6@E(@.??''@E(@/O?''@E(@/_?''@E(@//?''@E(@/??1@E(@0_?1@E(@0??,@E(@1_?,@E(@1??,@E(@2??6@E(@3??6@E(@4_?,@E(@5_?6@E(@5??6@E(@8_?,@E(@8??,@E(@9_?,@E(@&lt;_?,@E(AA/?"@E(ABO?"@E(AB/?"@E(AC??6@E(AD_?6@E(AD??6@E(AE_?6@E(AF??''@E(AG_?,@E(AH_?,@E(AH??,@E(AI_?;@E(AJ??''@E(AK_?''@E(AK??''@E(AL_?''@E(AL??''@E(AN_?1@E(AOO?;@E(AO/?;@E(APO?;@E(BL/?;@E(E;/?,@E(FH/?1@E(FKO?,@E(FK/?,@E(FM/?;@E(FNO?;@E(F./?1@E(G0??,@E(G1/?,@E(G1??,@E(G8??,@E(G9O?X@E(IZ??;@E(I[O?;@E(I[_?;@E(I[/?;@E(I[??;@E,@C??X@E,@DO?X@E,@D_?X@E,@QO?1@E,@Q/?''@E,@Q??"@E,@RO?''@E,@R_?6@E,@R/?1@E,@R??]@E,@SO?]@E,@S??]@E,@TO?,@E,@T_?,@E,@T/?''@E,@T??6@E,@UO?"@E,@U_?,@E,@U/?6@E,@U??6@E,@VO?,@E,@V_?,@E,@V/?,@E,@WO?,@E,@[_?X@E,@__?D@E,@(/?1@E,@(??1@E,@)O?1@E,@)_?1@E,@)/?1@E,@)??1@E,@*O?1@E,@*_?''@E,@*/?''@E,@*??''@E,@+O?''@E,@+_?''@E,@+??]@E,@,??,@E,@-O?''@E,@-_?''@E,@-/?''@E,@-??''@E,@.O?''@E,@.??,@E,@/O?,@E,@/_?,@E,@//?,@E,@/??,@E,@0_?,@E,@0??1@E,@1_?1@E,@1??1@E,@2??''@E,@3??''@E,@4_?"@E,@5_?''@E,@5??''@E,@8_?1@E,@8??1@E,@9_?1@E,@&lt;_?]@E,AA/?,@E,ABO?,@E,AB/?,@E,AC??''@E,AD_?''@E,AD??''@E,AE_?''@E,AF??,@E,AG_?6@E,AH_?6@E,AH??6@E,AI_?6@E,AJ??,@E,AK_?,@E,AK??,@E,AL_?,@E,AL??,@E,AN_?,@E,E;/?]@E,FH/?6@E,FKO?6@E,FK/?6@E,FM/?6@E,FNO?6@E,F./?,@E,G0??D@E,G1/?D@E,G1??D@E,G8??X@E,G9O?D@E,IZ??6@E,I[O?6@E,I[_?6@E,I[/?6@E,I[??6@E0@C??N@E0@DO?,@E0@D_?N@E0@QO?,@E0@Q/?6@E0@Q??,@E0@RO?6@E0@R_?;@E0@R/?,@E0@R??,@E0@SO?,@E0@S_?1@E0@S??,@E0@TO?"@E0@T_?"@E0@T/?6@E0@T??1@E0@UO?,@E0@U_?''@E0@U/?,@E0@U??;@E0@VO?''@E0@V_?1@E0@V/?1@E0@V??1@E0@WO?1@E0@W_?;@E0@[_?,@E0@__?X@E0@(/?,@E0@(??,@E0@)O?,@E0@)_?,@E0@)/?,@E0@)??,@E0@*O?,@E0@*_?6@E0@*/?6@E0@*??6@E0@+O?6@E0@+_?6@E0@+??,@E0@,??"@E0@-O?6@E0@-_?6@E0@-/?6@E0@-??6@E0@.O?6@E0@.??''@E0@/O?''@E0@/_?''@E0@//?''@E0@/??1@E0@0_?1@E0@0??,@E0@1_?,@E0@1??,@E0@2??6@E0@3??6@E0@4_?,@E0@5_?6@E0@5??6@E0@8_?,@E0@8??,@E0@9_?,@E0@&lt;_?,@E0AA/?"@E0ABO?"@E0AB/?"@E0AC??6@E0AD_?6@E0AD??6@E0AE_?6@E0AF??''@E0AG_?,@E0AH_?,@E0AH??,@E0AI_?;@E0AJ??''@E0AK_?''@E0AK??''@E0AL_?''@E0AL??''@E0AN_?1@E0AOO?;@E0AO/?;@E0APO?;@E0BL/?;@E0E;/?,@E0FH/?1@E0FKO?,@E0FK/?,@E0FM/?;@E0FNO?;@E0F./?1@E0G0??,@E0G1/?,@E0G1??,@E0G8??,@E0G9O?X@E0IZ??;@E0I[O?;@E0I[_?;@E0I[/?;@E0I[??;@E4@C??X@E4@DO?N@E4@D_?X@E4@QO?,@E4@Q/?,@E4@R_?6@E4@R/?,@E4@R??,@E4@SO?,@E4@S_?6@E4@S??,@E4@TO?"@E4@T_?"@E4@T/?,@E4@T??,@E4@U_?"@E4@U/?,@E4@U??6@E4@VO?''@E4@V_?,@E4@V/?,@E4@V??,@E4@WO?,@E4@[_?N@E4@__?D@E4@(/?,@E4@(??,@E4@)O?,@E4@)_?,@E4@)/?,@E4@)??,@E4@*O?,@E4@*_?,@E4@+??,@E4@,??"@E4@-O?,@E4@-_?,@E4@-/?,@E4@-??,@E4@.O?,@E4@.??''@E4@/O?''@E4@/_?''@E4@//?''@E4@/??,@E4@0_?,@E4@0??,@E4@1_?,@E4@1??,@E4@2??,@E4@3??,@E4@8_?,@E4@8??,@E4@9_?,@E4@&lt;_?,@E4AA/?"@E4ABO?"@E4AB/?"@E4AC??,@E4AD_?,@E4AD??,@E4AE_?,@E4AF??"@E4AG_?,@E4AH_?,@E4AH??,@E4AI_?6@E4AJ??''@E4AK_?''@E4AK??''@E4AL_?''@E4AL??''@E4AN_?,@E4E;/?,@E4FH/?,@E4FKO?,@E4FK/?,@E4FM/?6@E4FNO?6@E4F./?,@E4G0??X@E4G1/?X@E4G1??X@E4G8??N@E4G9O?D@E4IZ??6@E4I[O?6@E4I[_?6@E4I[/?6@E4I[??6@F4@IO?X@F4@I/?"@F4@J/?"@F4@L/?"@F4@MO?"@F4@M/?"@F4@M??N@F4@N_?D@F4@N/?D@F4@N??N@F4@OO?D@F4@O_?N@F4@QO?"@F4@Q/?,@F4@Q??,@F4@RO?,@F4@R_?,@F4@R/?"@F4@S_?6@F4@TO?"@F4@T_?"@F4@T/?,@F4@T??"@F4@UO?,@F4@U_?"@F4@U??,@F4@VO?"@F4@V_?X@F4@V/?X@F4@V??X@F4@WO?X@F4@W_?"@F4@ /?X@F4@ ??X@F4@!O?X@F4@!_?X@F4@!/?X@F4@"O?X@F4@"_?"@F4@%O?"@F4@%_?"@F4@%/?"@F4@%??"@F4@&amp;O?"@F4@&amp;/?"@F4@''??D@F4@(/?"@F4@(??"@F4@)O?"@F4@)_?"@F4@)/?"@F4@)??"@F4@*O?"@F4@*_?,@F4@*/?,@F4@*??,@F4@+O?,@F4@+_?,@F4@,??"@F4@-O?,@F4@-_?,@F4@-/?,@F4@-??,@F4@.O?,@F4@.??"@F4@/O?"@F4@/_?"@F4@//?"@F4@/??X@F4@0_?X@F4@0/?X@F4@0??"@F4@1_?"@F4@2O?"@F4@2/?"@F4@2??,@F4@3O?"@F4@3/?"@F4@3??,@F4@4_?,@F4@5_?,@F4@5??,@F4@7/?"@F4@8O?"@F4@8_?"@F4@8/?"@F4@8??"@F4@9O?"@F4@9_?"@F4AA/?"@F4ABO?"@F4AB/?"@F4AC/?"@F4AC??,@F4ADO?"@F4AD_?,@F4AD/?"@F4AD??,@F4AEO?"@F4AE_?,@F4AF??"@F4AGO?"@F4AHO?"@F4AH/?"@F4AIO?N@F4AI_?,@F4AI/?N@F4AJ??"@F4AK_?"@F4AK??"@F4AL??"@F4ANO?D@F4AN_?X@F4AN/?D@F4AN??N@F4AOO?"@F4AO_?N@F4AO/?"@F4AO??N@F4APO?"@F4BL/?"@F4E:/?,@F4FCO?"@F4FH/?"@F4FJ??"@F4FK_?"@F4FM_?N@F4FM/?,@F4FM??N@F4FNO?,@F4F._?D@F4F./?X@F4IZ??,@F4I[O?,@F4I[_?,@F4I[/?,@F4I[??,@G4@IO?D@G4@I/?,@G4@J/?,@G4@K_?,@G4@L/?,@G4@MO?,@G4@M/?X@G4@M??X@G4@N_?D@G4@N/?D@G4@N??X@G4@OO?D@G4@O_?X@G4@QO?,@G4@R_?X@G4@R/?,@G4@S_?,@G4@TO?,@G4@T_?,@G4@T??,@G4@U_?,@G4@U/?"@G4@U??X@G4@VO?,@G4@V_?X@G4@V/?X@G4@V??S@G4@WO?X@G4@W_?,@G4@ /?D@G4@ ??D@G4@!O?D@G4@!_?D@G4@!/?D@G4@"O?D@G4@"_?,@G4@%O?,@G4@%_?,@G4@%/?,@G4@%??,@G4@&amp;O?,@G4@&amp;/?,@G4@''??D@G4@(/?,@G4@(??,@G4@)O?,@G4@)_?,@G4@)/?,@G4@)??,@G4@*O?,@G4@,??,@G4@.??,@G4@/O?,@G4@/_?,@G4@//?,@G4@/??X@G4@0_?X@G4@0/?D@G4@0??,@G4@1_?,@G4@2O?,@G4@2/?,@G4@3O?,@G4@3/?,@G4@7/?,@G4@8O?,@G4@8_?,@G4@8/?,@G4@8??,@G4@9O?,@G4@9_?,@G4AA/?,@G4ABO?,@G4AB/?,@G4AC/?,@G4ADO?,@G4AD/?,@G4AEO?,@G4AF??,@G4AGO?X@G4AG_?"@G4AHO?X@G4AH_?"@G4AH/?X@G4AH??"@G4AIO?X@G4AI_?X@G4AI/?X@G4AJ??,@G4AK_?,@G4AK??,@G4AL??,@G4ANO?D@G4AN_?X@G4AN/?D@G4AN??X@G4AOO?,@G4AO_?X@G4AO/?,@G4AO??X@G4APO?,@G4BL/?,@G4E:/?X@G4FCO?,@G4FH/?,@G4FJ??X@G4FKO?"@G4FK_?X@G4FK/?"@G4FM_?X@G4FM/?X@G4FM??X@G4FNO?X@G4F._?D@G4F./?X@G4IZ??X@G4I[O?X@G4I[_?X@G4I[/?X@G4I[??X@HH@C??,@HH@DO?X@HH@D_?,@HH@I/?X@HH@JO?N@HH@J_?I@HH@J/?X@HH@J??X@HH@KO?"@HH@K/?I@HH@K??N@HH@LO?X@HH@L_?X@HH@L/?X@HH@MO?X@HH@M/?"@HH@M??X@HH@N_?D@HH@N/?D@HH@N??6@HH@OO?D@HH@O_?6@HH@QO?,@HH@Q/?,@HH@Q??,@HH@RO?1@HH@R_?"@HH@R/?,@HH@TO?"@HH@T_?"@HH@T/?,@HH@T??,@HH@UO?,@HH@U_?"@HH@U/?,@HH@U??"@HH@VO?''@HH@V_?"@HH@V/?"@HH@WO?"@HH@W_?"@HH@[_?X@HH@__?X@HH@"_?X@HH@"/?N@HH@"??N@HH@#O?N@HH@#_?N@HH@#/?"@HH@#??"@HH@$O?"@HH@$_?"@HH@%O?X@HH@%_?X@HH@%/?X@HH@%??X@HH@&amp;O?X@HH@&amp;/?X@HH@''??D@HH@(/?,@HH@(??,@HH@)O?,@HH@)_?,@HH@)/?,@HH@)??,@HH@*O?,@HH@*_?,@HH@*/?1@HH@*??1@HH@+O?1@HH@+_?1@HH@,/?,@HH@,??"@HH@-O?,@HH@-_?,@HH@-/?,@HH@-??,@HH@.O?,@HH@./?,@HH@.??''@HH@/O?''@HH@/_?''@HH@//?''@HH@/??"@HH@0_?"@HH@0??,@HH@1_?,@HH@1??,@HH@2O?X@HH@2/?X@HH@2??,@HH@3O?X@HH@3/?X@HH@3??,@HH@4_?,@HH@5O?N@HH@5_?1@HH@5??1@HH@6/?N@HH@6??1@HH@7O?N@HH@7/?X@HH@8O?X@HH@8_?,@HH@8/?X@HH@8??,@HH@9O?X@HH@9_?,@HH@&gt;O?I@HH@&gt;??N@HH@?_?N@HH@???N@HHA@??N@HHAA/?"@HHABO?"@HHAB/?"@HHAC/?X@HHAC??,@HHADO?X@HHAD_?,@HHAD/?X@HHAD??,@HHAEO?X@HHAE_?,@HHAF??"@HHAGO?"@HHAG_?,@HHAHO?"@HHAH_?,@HHAH/?"@HHAH??,@HHAIO?X@HHAI_?"@HHAI/?X@HHAJ??''@HHAK_?''@HHAK??''@HHAL_?''@HHAL??''@HHANO?D@HHAN_?"@HHAN/?D@HHAN??6@HHAOO?"@HHAO_?6@HHAO/?"@HHAO??6@HHAPO?"@HHE:_?I@HHFCO?"@HHFH/?,@HHFJ??"@HHFKO?,@HHFK_?"@HHFK/?,@HHFM_?X@HHFM/?"@HHFM??X@HHFNO?"@HHF ??N@HHF._?D@HHF./?"@HHG0??D@HHG1/?D@HHG1??D@HHG8??X@HHG9O?X@HHIZ??"@HHI[O?"@HHI[/?"@HHI[??"@HL@C??,@HL@DO?X@HL@D_?,@HL@I/?X@HL@JO?N@HL@J_?I@HL@J/?X@HL@J??X@HL@KO?"@HL@K/?I@HL@K??N@HL@LO?X@HL@L_?X@HL@L/?X@HL@MO?X@HL@M/?"@HL@M??X@HL@N_?D@HL@N/?D@HL@N??6@HL@OO?D@HL@O_?6@HL@QO?,@HL@Q/?,@HL@Q??,@HL@RO?1@HL@R_?"@HL@R/?,@HL@TO?"@HL@T_?"@HL@T/?,@HL@T??,@HL@UO?,@HL@U_?"@HL@U/?,@HL@U??"@HL@VO?''@HL@V_?"@HL@V/?"@HL@WO?"@HL@W_?"@HL@[_?X@HL@__?X@HL@"_?X@HL@"/?N@HL@"??N@HL@#O?N@HL@#_?N@HL@#/?"@HL@#??"@HL@$O?"@HL@$_?"@HL@%O?X@HL@%_?X@HL@%/?X@HL@%??X@HL@&amp;O?X@HL@&amp;/?X@HL@''??D@HL@(/?,@HL@(??,@HL@)O?,@HL@)_?,@HL@)/?,@HL@)??,@HL@*O?,@HL@*_?,@HL@*/?1@HL@*??1@HL@+O?1@HL@+_?1@HL@,/?,@HL@,??"@HL@-O?,@HL@-_?,@HL@-/?,@HL@-??,@HL@.O?,@HL@./?,@HL@.??''@HL@/O?''@HL@/_?''@HL@//?''@HL@/??"@HL@0_?"@HL@0??,@HL@1_?,@HL@1??,@HL@2O?X@HL@2/?X@HL@2??,@HL@3O?X@HL@3/?X@HL@3??,@HL@4_?,@HL@5O?N@HL@5_?1@HL@5??1@HL@6/?N@HL@6??1@HL@7O?N@HL@7/?X@HL@8O?X@HL@8_?,@HL@8/?X@HL@8??,@HL@9O?X@HL@9_?,@HL@&gt;O?I@HL@&gt;??N@HL@?_?N@HL@???N@HLA@??N@HLAA/?"@HLABO?"@HLAB/?"@HLAC/?X@HLAC??,@HLADO?X@HLAD_?,@HLAD/?X@HLAD??,@HLAEO?X@HLAE_?,@HLAF??"@HLAGO?"@HLAG_?,@HLAHO?"@HLAH_?,@HLAH/?"@HLAH??,@HLAIO?X@HLAI_?"@HLAI/?X@HLAJ??''@HLAK_?''@HLAK??''@HLAL_?''@HLAL??''@HLANO?D@HLAN_?"@HLAN/?D@HLAN??6@HLAOO?"@HLAO_?6@HLAO/?"@HLAO??6@HLAPO?"@HLE:_?I@HLFCO?"@HLFH/?,@HLFJ??"@HLFKO?,@HLFK_?"@HLFK/?,@HLFM_?X@HLFM/?"@HLFM??X@HLFNO?"@HLF ??N@HLF._?D@HLF./?"@HLG0??D@HLG1/?D@HLG1??D@HLG8??X@HLG9O?X@HLIZ??"@HLI[O?"@HLI[/?"@HLI[??"@HP@C??,@HP@DO?X@HP@D_?,@HP@I/?X@HP@JO?N@HP@J_?I@HP@J/?X@HP@J??X@HP@KO?"@HP@K/?I@HP@K??N@HP@LO?X@HP@L_?X@HP@L/?X@HP@MO?X@HP@M/?"@HP@M??X@HP@N_?D@HP@N/?D@HP@N??6@HP@OO?D@HP@O_?6@HP@QO?,@HP@Q/?,@HP@Q??,@HP@RO?1@HP@R_?"@HP@R/?,@HP@TO?"@HP@T_?"@HP@T/?,@HP@T??,@HP@UO?,@HP@U_?"@HP@U/?,@HP@U??"@HP@VO?''@HP@V_?"@HP@V/?"@HP@WO?"@HP@W_?"@HP@[_?X@HP@__?X@HP@"_?X@HP@"/?N@HP@"??N@HP@#O?N@HP@#_?N@HP@#/?"@HP@#??"@HP@$O?"@HP@$_?"@HP@%O?X@HP@%_?X@HP@%/?X@HP@%??X@HP@&amp;O?X@HP@&amp;/?X@HP@''??D@HP@(/?,@HP@(??,@HP@)O?,@HP@)_?,@HP@)/?,@HP@)??,@HP@*O?,@HP@*_?,@HP@*/?1@HP@*??1@HP@+O?1@HP@+_?1@HP@,/?,@HP@,??"@HP@-O?,@HP@-_?,@HP@-/?,@HP@-??,@HP@.O?,@HP@./?,@HP@.??''@HP@/O?''@HP@/_?''@HP@//?''@HP@/??"@HP@0_?"@HP@0??,@HP@1_?,@HP@1??,@HP@2O?X@HP@2/?X@HP@2??,@HP@3O?X@HP@3/?X@HP@3??,@HP@4_?,@HP@5O?N@HP@5_?1@HP@5??1@HP@6/?N@HP@6??1@HP@7O?N@HP@7/?X@HP@8O?X@HP@8_?,@HP@8/?X@HP@8??,@HP@9O?X@HP@9_?,@HP@&gt;O?I@HP@&gt;??N@HP@?_?N@HP@???N@HPA@??N@HPAA/?"@HPABO?"@HPAB/?"@HPAC/?X@HPAC??,@HPADO?X@HPAD_?,@HPAD/?X@HPAD??,@HPAEO?X@HPAE_?,@HPAF??"@HPAGO?"@HPAG_?,@HPAHO?"@HPAH_?,@HPAH/?"@HPAH??,@HPAIO?X@HPAI_?"@HPAI/?X@HPAJ??''@HPAK_?''@HPAK??''@HPAL_?''@HPAL??''@HPANO?D@HPAN_?"@HPAN/?D@HPAN??6@HPAOO?"@HPAO_?6@HPAO/?"@HPAO??6@HPAPO?"@HPE:_?I@HPFCO?"@HPFH/?,@HPFJ??"@HPFKO?,@HPFK_?"@HPFK/?,@HPFM_?X@HPFM/?"@HPFM??X@HPFNO?"@HPF ??N@HPF._?D@HPF./?"@HPG0??D@HPG1/?D@HPG1??D@HPG8??X@HPG9O?X@HPIZ??"@HPI[O?"@HPI[/?"@HPI[??"@HT@C??,@HT@DO?X@HT@D_?,@HT@I/?X@HT@JO?N@HT@J_?I@HT@J/?X@HT@J??X@HT@KO?"@HT@K/?I@HT@K??N@HT@LO?X@HT@L_?X@HT@L/?X@HT@MO?X@HT@M/?"@HT@M??X@HT@N_?D@HT@N/?D@HT@N??6@HT@OO?D@HT@O_?6@HT@QO?,@HT@Q/?,@HT@Q??,@HT@RO?1@HT@R_?"@HT@R/?,@HT@TO?"@HT@T_?"@HT@T/?,@HT@T??,@HT@UO?,@HT@U_?"@HT@U/?,@HT@U??"@HT@VO?''@HT@V_?"@HT@V/?"@HT@WO?"@HT@W_?"@HT@[_?X@HT@__?X@HT@"_?X@HT@"/?N@HT@"??N@HT@#O?N@HT@#_?N@HT@#/?"@HT@#??"@HT@$O?"@HT@$_?"@HT@%O?X@HT@%_?X@HT@%/?X@HT@%??X@HT@&amp;O?X@HT@&amp;/?X@HT@''??D@HT@(/?,@HT@(??,@HT@)O?,@HT@)_?,@HT@)/?,@HT@)??,@HT@*O?,@HT@*_?,@HT@*/?1@HT@*??1@HT@+O?1@HT@+_?1@HT@,/?,@HT@,??"@HT@-O?,@HT@-_?,@HT@-/?,@HT@-??,@HT@.O?,@HT@./?,@HT@.??''@HT@/O?''@HT@/_?''@HT@//?''@HT@/??"@HT@0_?"@HT@0??,@HT@1_?,@HT@1??,@HT@2O?X@HT@2/?X@HT@2??,@HT@3O?X@HT@3/?X@HT@3??,@HT@4_?,@HT@5O?N@HT@5_?1@HT@5??1@HT@6/?N@HT@6??1@HT@7O?N@HT@7/?X@HT@8O?X@HT@8_?,@HT@8/?X@HT@8??,@HT@9O?X@HT@9_?,@HT@&gt;O?I@HT@&gt;??N@HT@?_?N@HT@???N@HTA@??N@HTAA/?"@HTABO?"@HTAB/?"@HTAC/?X@HTAC??,@HTADO?X@HTAD_?,@HTAD/?X@HTAD??,@HTAEO?X@HTAE_?,@HTAF??"@HTAGO?"@HTAG_?,@HTAHO?"@HTAH_?,@HTAH/?"@HTAH??,@HTAIO?X@HTAI_?"@HTAI/?X@HTAJ??''@HTAK_?''@HTAK??''@HTAL_?''@HTAL??''@HTANO?D@HTAN_?"@HTAN/?D@HTAN??6@HTAOO?"@HTAO_?6@HTAO/?"@HTAO??6@HTAPO?"@HTE:_?I@HTFCO?"@HTFH/?,@HTFJ??"@HTFKO?,@HTFK_?"@HTFK/?,@HTFM_?X@HTFM/?"@HTFM??X@HTFNO?"@HTF ??N@HTF._?D@HTF./?"@HTG0??D@HTG1/?D@HTG1??D@HTG8??X@HTG9O?X@HTIZ??"@HTI[O?"@HTI[/?"@HTI[??"@HX@C??,@HX@DO?X@HX@D_?,@HX@I/?X@HX@JO?N@HX@J_?I@HX@J/?X@HX@J??X@HX@KO?"@HX@K/?I@HX@K??N@HX@LO?X@HX@L_?X@HX@L/?X@HX@MO?X@HX@M/?"@HX@M??X@HX@N_?D@HX@N/?D@HX@N??6@HX@OO?D@HX@O_?6@HX@QO?,@HX@Q/?,@HX@Q??,@HX@RO?1@HX@R_?"@HX@R/?,@HX@TO?"@HX@T_?"@HX@T/?,@HX@T??,@HX@UO?,@HX@U_?"@HX@U/?,@HX@U??"@HX@VO?''@HX@V_?"@HX@V/?"@HX@WO?"@HX@W_?"@HX@[_?X@HX@__?X@HX@"_?X@HX@"/?N@HX@"??N@HX@#O?N@HX@#_?N@HX@#/?"@HX@#??"@HX@$O?"@HX@$_?"@HX@%O?X@HX@%_?X@HX@%/?X@HX@%??X@HX@&amp;O?X@HX@&amp;/?X@HX@''??D@HX@(/?,@HX@(??,@HX@)O?,@HX@)_?,@HX@)/?,@HX@)??,@HX@*O?,@HX@*_?,@HX@*/?1@HX@*??1@HX@+O?1@HX@+_?1@HX@,/?,@HX@,??"@HX@-O?,@HX@-_?,@HX@-/?,@HX@-??,@HX@.O?,@HX@./?,@HX@.??''@HX@/O?''@HX@/_?''@HX@//?''@HX@/??"@HX@0_?"@HX@0??,@HX@1_?,@HX@1??,@HX@2O?X@HX@2/?X@HX@2??,@HX@3O?X@HX@3/?X@HX@3??,@HX@4_?,@HX@5O?N@HX@5_?1@HX@5??1@HX@6/?N@HX@6??1@HX@7O?N@HX@7/?X@HX@8O?X@HX@8_?,@HX@8/?X@HX@8??,@HX@9O?X@HX@9_?,@HX@&gt;O?I@HX@&gt;??N@HX@?_?N@HX@???N@HXA@??N@HXAA/?"@HXABO?"@HXAB/?"@HXAC/?X@HXAC??,@HXADO?X@HXAD_?,@HXAD/?X@HXAD??,@HXAEO?X@HXAE_?,@HXAF??"@HXAGO?"@HXAG_?,@HXAHO?"@HXAH_?,@HXAH/?"@HXAH??,@HXAIO?X@HXAI_?"@HXAI/?X@HXAJ??''@HXAK_?''@HXAK??''@HXAL_?''@HXAL??''@HXANO?D@HXAN_?"@HXAN/?D@HXAN??6@HXAOO?"@HXAO_?6@HXAO/?"@HXAO??6@HXAPO?"@HXE:_?I@HXFCO?"@HXFH/?,@HXFJ??"@HXFKO?,@HXFK_?"@HXFK/?,@HXFM_?X@HXFM/?"@HXFM??X@HXFNO?"@HXF ??N@HXF._?D@HXF./?"@HXG0??D@HXG1/?D@HXG1??D@HXG8??X@HXG9O?X@HXIZ??"@HXI[O?"@HXI[/?"@HXI[??"@H\@C??,@H\@DO?X@H\@D_?,@H\@I/?X@H\@JO?N@H\@J_?I@H\@J/?X@H\@J??X@H\@KO?"@H\@K/?I@H\@K??N@H\@LO?X@H\@L_?X@H\@L/?X@H\@MO?X@H\@M/?"@H\@M??X@H\@N_?D@H\@N/?D@H\@N??6@H\@OO?D@H\@O_?6@H\@QO?,@H\@Q/?,@H\@Q??,@H\@RO?1@H\@R_?"@H\@R/?,@H\@TO?"@H\@T_?"@H\@T/?,@H\@T??,@H\@UO?,@H\@U_?"@H\@U/?,@H\@U??"@H\@VO?''@H\@V_?"@H\@V/?"@H\@WO?"@H\@W_?"@H\@[_?X@H\@__?X@H\@"_?X@H\@"/?N@H\@"??N@H\@#O?N@H\@#_?N@H\@#/?"@H\@#??"@H\@$O?"@H\@$_?"@H\@%O?X@H\@%_?X@H\@%/?X@H\@%??X@H\@&amp;O?X@H\@&amp;/?X@H\@''??D@H\@(/?,@H\@(??,@H\@)O?,@H\@)_?,@H\@)/?,@H\@)??,@H\@*O?,@H\@*_?,@H\@*/?1@H\@*??1@H\@+O?1@H\@+_?1@H\@,/?,@H\@,??"@H\@-O?,@H\@-_?,@H\@-/?,@H\@-??,@H\@.O?,@H\@./?,@H\@.??''@H\@/O?''@H\@/_?''@H\@//?''@H\@/??"@H\@0_?"@H\@0??,@H\@1_?,@H\@1??,@H\@2O?X@H\@2/?X@H\@2??,@H\@3O?X@H\@3/?X@H\@3??,@H\@4_?,@H\@5O?N@H\@5_?1@H\@5??1@H\@6/?N@H\@6??1@H\@7O?N@H\@7/?X@H\@8O?X@H\@8_?,@H\@8/?X@H\@8??,@H\@9O?X@H\@9_?,@H\@&gt;O?I@H\@&gt;??N@H\@?_?N@H\@???N@H\A@??N@H\AA/?"@H\ABO?"@H\AB/?"@H\AC/?X@H\AC??,@H\ADO?X@H\AD_?,@H\AD/?X@H\AD??,@H\AEO?X@H\AE_?,@H\AF??"@H\AGO?"@H\AG_?,@H\AHO?"@H\AH_?,@H\AH/?"@H\AH??,@H\AIO?X@H\AI_?"@H\AI/?X@H\AJ??''@H\AK_?''@H\AK??''@H\AL_?''@H\AL??''@H\ANO?D@H\AN_?"@H\AN/?D@H\AN??6@H\AOO?"@H\AO_?6@H\AO/?"@H\AO??6@H\APO?"@H\E:_?I@H\FCO?"@H\FH/?,@H\FJ??"@H\FKO?,@H\FK_?"@H\FK/?,@H\FM_?X@H\FM/?"@H\FM??X@H\FNO?"@H\F ??N@H\F._?D@H\F./?"@H\G0??D@H\G1/?D@H\G1??D@H\G8??X@H\G9O?X@H\IZ??"@H\I[O?"@H\I[/?"@H\I[??"@H @IO?"@H @I/?X@H @JO?S@H @J_?N@H @J/?X@H @J??X@H @KO?"@H @K_?,@H @K/?N@H @K??S@H @LO?X@H @L_?X@H @L/?X@H @MO?X@H @M/?N@H @M??,@H @N_?N@H @N/?N@H @N??"@H @OO?N@H @O_?"@H @QO?"@H @Q/?"@H @Q??"@H @RO?,@H @R_?"@H @R/?"@H @S_?"@H @TO?X@H @T_?X@H @T/?"@H @T??,@H @UO?"@H @U_?"@H @U/?,@H @U??"@H @VO?S@H @V_?X@H @V/?X@H @V??"@H @WO?X@H @W_?X@H @ /?"@H @ ??"@H @!O?"@H @!_?"@H @!/?"@H @!??"@H @"O?"@H @"_?X@H @"/?S@H @"??S@H @#O?S@H @#_?S@H @#/?"@H @#??"@H @$O?"@H @$_?"@H @%O?X@H @%_?X@H @%/?X@H @%??X@H @&amp;O?X@H @&amp;/?X@H @''??N@H @(/?"@H @(??"@H @)O?"@H @)_?"@H @)/?"@H @)??"@H @*O?"@H @*_?"@H @*/?,@H @*??,@H @+O?,@H @+_?,@H @,/?"@H @,??X@H @-O?"@H @-_?"@H @-/?"@H @-??"@H @.O?"@H @./?"@H @.??S@H @/O?S@H @/_?S@H @//?S@H @/??X@H @0_?X@H @0/?"@H @0??"@H @1O?"@H @1_?"@H @1/?"@H @1??"@H @2O?X@H @2/?X@H @2??"@H @3O?X@H @3/?X@H @3??"@H @4_?"@H @5O?S@H @5_?,@H @5??,@H @6/?S@H @6??,@H @7O?S@H @7/?X@H @8O?X@H @8_?"@H @8/?X@H @8??"@H @9O?X@H @9_?"@H @&gt;O?N@H @&gt;??S@H @?_?S@H @???S@H A@??S@H AA/?X@H ABO?X@H AB/?X@H AC/?X@H AC??"@H ADO?X@H AD_?"@H AD/?X@H AD??"@H AEO?X@H AE_?"@H AF??"@H AGO?N@H AG_?,@H AHO?N@H AH_?,@H AH/?N@H AH??,@H AIO?,@H AI_?"@H AI/?,@H AJ??S@H AK_?S@H AK??S@H AL_?S@H AL??S@H ANO?N@H AN_?X@H AN/?N@H AN??"@H AOO?X@H AO_?"@H AO/?X@H AO??"@H APO?X@H E:_?N@H FCO?X@H FH/?,@H FJ??N@H FKO?,@H FK_?N@H FK/?,@H FM_?,@H FM/?"@H FM??,@H FNO?"@H F ??S@H F._?N@H F./?X@H IZ??"@H I[O?"@H I[/?"@H I[??"@H$@C??"@H$@D_?"@H$@IO?X@H$@I/?,@H$@JO?S@H$@J_?N@H$@J/?,@H$@J??X@H$@KO?"@H$@K/?N@H$@K??S@H$@LO?X@H$@L_?X@H$@L/?,@H$@MO?,@H$@M/?6@H$@M??X@H$@N_?N@H$@N/?N@H$@N??X@H$@OO?N@H$@O_?X@H$@QO?,@H$@R_?,@H$@R/?,@H$@S_?"@H$@TO?"@H$@T_?"@H$@T??,@H$@U_?,@H$@U/?,@H$@U??,@H$@VO?"@H$@V_?6@H$@V/?6@H$@V??"@H$@WO?6@H$@W_?"@H$@__?,@H$@ /?X@H$@ ??X@H$@!O?X@H$@!_?X@H$@!/?X@H$@!??X@H$@"O?X@H$@"_?,@H$@"/?S@H$@"??S@H$@#O?S@H$@#_?S@H$@#/?"@H$@#??"@H$@$O?"@H$@$_?"@H$@%O?,@H$@%_?,@H$@%/?,@H$@%??,@H$@&amp;O?,@H$@&amp;/?,@H$@''??N@H$@(/?,@H$@(??,@H$@)O?,@H$@)_?,@H$@)/?,@H$@)??,@H$@*O?,@H$@,??"@H$@.??"@H$@/O?"@H$@/_?"@H$@//?"@H$@/??6@H$@0_?6@H$@0/?X@H$@0??,@H$@1O?X@H$@1_?,@H$@1/?X@H$@1??,@H$@2O?,@H$@2/?,@H$@3O?,@H$@3/?,@H$@5O?S@H$@6/?S@H$@7O?S@H$@7/?,@H$@8O?,@H$@8_?,@H$@8/?,@H$@8??,@H$@9O?,@H$@9_?,@H$@&gt;O?N@H$@&gt;??S@H$@?_?S@H$@???S@H$A@??S@H$AA/?"@H$ABO?"@H$AB/?"@H$AC/?,@H$ADO?,@H$AD/?,@H$AEO?,@H$AF??,@H$AGO?6@H$AG_?,@H$AHO?6@H$AH_?,@H$AH/?6@H$AH??,@H$AIO?X@H$AI_?,@H$AI/?X@H$AJ??"@H$AK_?"@H$AK??"@H$AL_?"@H$AL??"@H$ANO?N@H$AN_?6@H$AN/?N@H$AN??X@H$AOO?"@H$AO_?X@H$AO/?"@H$AO??X@H$APO?"@H$E:_?N@H$FCO?"@H$FH/?,@H$FJ??6@H$FKO?,@H$FK_?6@H$FK/?,@H$FM_?X@H$FM/?,@H$FM??X@H$FNO?,@H$F ??S@H$F._?N@H$F./?6@H$G0??X@H$G1/?X@H$G1??X@H$G9O?,@H$IZ??,@H$I[O?,@H$I[/?,@H$I[??,@H(@IO?"@H(@I/?X@H(@JO?S@H(@J_?N@H(@J/?X@H(@J??X@H(@KO?"@H(@K_?,@H(@K/?N@H(@K??S@H(@LO?X@H(@L_?X@H(@L/?X@H(@MO?X@H(@M/?N@H(@M??,@H(@N_?N@H(@N/?N@H(@N??"@H(@OO?N@H(@O_?"@H(@QO?"@H(@Q/?"@H(@Q??"@H(@RO?,@H(@R_?"@H(@R/?"@H(@S_?"@H(@TO?X@H(@T_?X@H(@T/?"@H(@T??,@H(@UO?"@H(@U_?"@H(@U/?,@H(@U??"@H(@VO?S@H(@V_?X@H(@V/?X@H(@V??"@H(@WO?X@H(@W_?X@H(@ /?"@H(@ ??"@H(@!O?"@H(@!_?"@H(@!/?"@H(@!??"@H(@"O?"@H(@"_?X@H(@"/?S@H(@"??S@H(@#O?S@H(@#_?S@H(@#/?"@H(@#??"@H(@$O?"@H(@$_?"@H(@%O?X@H(@%_?X@H(@%/?X@H(@%??X@H(@&amp;O?X@H(@&amp;/?X@H(@''??N@H(@(/?"@H(@(??"@H(@)O?"@H(@)_?"@H(@)/?"@H(@)??"@H(@*O?"@H(@*_?"@H(@*/?,@H(@*??,@H(@+O?,@H(@+_?,@H(@,/?"@H(@,??X@H(@-O?"@H(@-_?"@H(@-/?"@H(@-??"@H(@.O?"@H(@./?"@H(@.??S@H(@/O?S@H(@/_?S@H(@//?S@H(@/??X@H(@0_?X@H(@0/?"@H(@0??"@H(@1O?"@H(@1_?"@H(@1/?"@H(@1??"@H(@2O?X@H(@2/?X@H(@2??"@H(@3O?X@H(@3/?X@H(@3??"@H(@4_?"@H(@5O?S@H(@5_?,@H(@5??,@H(@6/?S@H(@6??,@H(@7O?S@H(@7/?X@H(@8O?X@H(@8_?"@H(@8/?X@H(@8??"@H(@9O?X@H(@9_?"@H(@&gt;O?N@H(@&gt;??S@H(@?_?S@H(@???S@H(A@??S@H(AA/?X@H(ABO?X@H(AB/?X@H(AC/?X@H(AC??"@H(ADO?X@H(AD_?"@H(AD/?X@H(AD??"@H(AEO?X@H(AE_?"@H(AF??"@H(AGO?N@H(AG_?,@H(AHO?N@H(AH_?,@H(AH/?N@H(AH??,@H(AIO?,@H(AI_?"@H(AI/?,@H(AJ??S@H(AK_?S@H(AK??S@H(AL_?S@H(AL??S@H(ANO?N@H(AN_?X@H(AN/?N@H(AN??"@H(AOO?X@H(AO_?"@H(AO/?X@H(AO??"@H(APO?X@H(E:_?N@H(FCO?X@H(FH/?,@H(FJ??N@H(FKO?,@H(FK_?N@H(FK/?,@H(FM_?,@H(FM/?"@H(FM??,@H(FNO?"@H(F ??S@H(F._?N@H(F./?X@H(IZ??"@H(I[O?"@H(I[/?"@H(I[??"@H,@IO?"@H,@I/?X@H,@JO?S@H,@J_?N@H,@J/?X@H,@J??X@H,@KO?"@H,@K_?,@H,@K/?N@H,@K??S@H,@LO?X@H,@L_?X@H,@L/?X@H,@MO?X@H,@M/?N@H,@M??,@H,@N_?N@H,@N/?N@H,@N??"@H,@OO?N@H,@O_?"@H,@QO?"@H,@Q/?"@H,@Q??"@H,@RO?,@H,@R_?"@H,@R/?"@H,@S_?"@H,@TO?X@H,@T_?X@H,@T/?"@H,@T??,@H,@UO?"@H,@U_?"@H,@U/?,@H,@U??"@H,@VO?S@H,@V_?X@H,@V/?X@H,@V??"@H,@WO?X@H,@W_?X@H,@ /?"@H,@ ??"@H,@!O?"@H,@!_?"@H,@!/?"@H,@!??"@H,@"O?"@H,@"_?X@H,@"/?S@H,@"??S@H,@#O?S@H,@#_?S@H,@#/?"@H,@#??"@H,@$O?"@H,@$_?"@H,@%O?X@H,@%_?X@H,@%/?X@H,@%??X@H,@&amp;O?X@H,@&amp;/?X@H,@''??N@H,@(/?"@H,@(??"@H,@)O?"@H,@)_?"@H,@)/?"@H,@)??"@H,@*O?"@H,@*_?"@H,@*/?,@H,@*??,@H,@+O?,@H,@+_?,@H,@,/?"@H,@,??X@H,@-O?"@H,@-_?"@H,@-/?"@H,@-??"@H,@.O?"@H,@./?"@H,@.??S@H,@/O?S@H,@/_?S@H,@//?S@H,@/??X@H,@0_?X@H,@0/?"@H,@0??"@H,@1O?"@H,@1_?"@H,@1/?"@H,@1??"@H,@2O?X@H,@2/?X@H,@2??"@H,@3O?X@H,@3/?X@H,@3??"@H,@4_?"@H,@5O?S@H,@5_?,@H,@5??,@H,@6/?S@H,@6??,@H,@7O?S@H,@7/?X@H,@8O?X@H,@8_?"@H,@8/?X@H,@8??"@H,@9O?X@H,@9_?"@H,@&gt;O?N@H,@&gt;??S@H,@?_?S@H,@???S@H,A@??S@H,AA/?X@H,ABO?X@H,AB/?X@H,AC/?X@H,AC??"@H,ADO?X@H,AD_?"@H,AD/?X@H,AD??"@H,AEO?X@H,AE_?"@H,AF??"@H,AGO?N@H,AG_?,@H,AHO?N@H,AH_?,@H,AH/?N@H,AH??,@H,AIO?,@H,AI_?"@H,AI/?,@H,AJ??S@H,AK_?S@H,AK??S@H,AL_?S@H,AL??S@H,ANO?N@H,AN_?X@H,AN/?N@H,AN??"@H,AOO?X@H,AO_?"@H,AO/?X@H,AO??"@H,APO?X@H,E:_?N@H,FCO?X@H,FH/?,@H,FJ??N@H,FKO?,@H,FK_?N@H,FK/?,@H,FM_?,@H,FM/?"@H,FM??,@H,FNO?"@H,F ??S@H,F._?N@H,F./?X@H,IZ??"@H,I[O?"@H,I[/?"@H,I[??"@H0@IO?"@H0@I/?X@H0@JO?S@H0@J_?N@H0@J/?X@H0@J??X@H0@KO?"@H0@K_?,@H0@K/?N@H0@K??S@H0@LO?X@H0@L_?X@H0@L/?X@H0@MO?X@H0@M/?N@H0@M??,@H0@N_?N@H0@N/?N@H0@N??"@H0@OO?N@H0@O_?"@H0@QO?"@H0@Q/?"@H0@Q??"@H0@RO?,@H0@R_?"@H0@R/?"@H0@S_?"@H0@TO?X@H0@T_?X@H0@T/?"@H0@T??,@H0@UO?"@H0@U_?"@H0@U/?,@H0@U??"@H0@VO?S@H0@V_?X@H0@V/?X@H0@V??"@H0@WO?X@H0@W_?X@H0@ /?"@H0@ ??"@H0@!O?"@H0@!_?"@H0@!/?"@H0@!??"@H0@"O?"@H0@"_?X@H0@"/?S@H0@"??S@H0@#O?S@H0@#_?S@H0@#/?"@H0@#??"@H0@$O?"@H0@$_?"@H0@%O?X@H0@%_?X@H0@%/?X@H0@%??X@H0@&amp;O?X@H0@&amp;/?X@H0@''??N@H0@(/?"@H0@(??"@H0@)O?"@H0@)_?"@H0@)/?"@H0@)??"@H0@*O?"@H0@*_?"@H0@*/?,@H0@*??,@H0@+O?,@H0@+_?,@H0@,/?"@H0@,??X@H0@-O?"@H0@-_?"@H0@-/?"@H0@-??"@H0@.O?"@H0@./?"@H0@.??S@H0@/O?S@H0@/_?S@H0@//?S@H0@/??X@H0@0_?X@H0@0/?"@H0@0??"@H0@1O?"@H0@1_?"@H0@1/?"@H0@1??"@H0@2O?X@H0@2/?X@H0@2??"@H0@3O?X@H0@3/?X@H0@3??"@H0@4_?"@H0@5O?S@H0@5_?,@H0@5??,@H0@6/?S@H0@6??,@H0@7O?S@H0@7/?X@H0@8O?X@H0@8_?"@H0@8/?X@H0@8??"@H0@9O?X@H0@9_?"@H0@&gt;O?N@H0@&gt;??S@H0@?_?S@H0@???S@H0A@??S@H0AA/?X@H0ABO?X@H0AB/?X@H0AC/?X@H0AC??"@H0ADO?X@H0AD_?"@H0AD/?X@H0AD??"@H0AEO?X@H0AE_?"@H0AF??"@H0AGO?N@H0AG_?,@H0AHO?N@H0AH_?,@H0AH/?N@H0AH??,@H0AIO?,@H0AI_?"@H0AI/?,@H0AJ??S@H0AK_?S@H0AK??S@H0AL_?S@H0AL??S@H0ANO?N@H0AN_?X@H0AN/?N@H0AN??"@H0AOO?X@H0AO_?"@H0AO/?X@H0AO??"@H0APO?X@H0E:_?N@H0FCO?X@H0FH/?,@H0FJ??N@H0FKO?,@H0FK_?N@H0FK/?,@H0FM_?,@H0FM/?"@H0FM??,@H0FNO?"@H0F ??S@H0F._?N@H0F./?X@H0IZ??"@H0I[O?"@H0I[/?"@H0I[??"@H4@IO?"@H4@I/?X@H4@JO?S@H4@J_?N@H4@J/?X@H4@J??X@H4@KO?"@H4@K_?,@H4@K/?N@H4@K??S@H4@LO?X@H4@L_?X@H4@L/?X@H4@MO?X@H4@M/?N@H4@M??,@H4@N_?N@H4@N/?N@H4@N??"@H4@OO?N@H4@O_?"@H4@QO?"@H4@Q/?"@H4@Q??"@H4@RO?,@H4@R_?"@H4@R/?"@H4@S_?"@H4@TO?X@H4@T_?X@H4@T/?"@H4@T??,@H4@UO?"@H4@U_?"@H4@U/?,@H4@U??"@H4@VO?S@H4@V_?X@H4@V/?X@H4@V??"@H4@WO?X@H4@W_?X@H4@ /?"@H4@ ??"@H4@!O?"@H4@!_?"@H4@!/?"@H4@!??"@H4@"O?"@H4@"_?X@H4@"/?S@H4@"??S@H4@#O?S@H4@#_?S@H4@#/?"@H4@#??"@H4@$O?"@H4@$_?"@H4@%O?X@H4@%_?X@H4@%/?X@H4@%??X@H4@&amp;O?X@H4@&amp;/?X@H4@''??N@H4@(/?"@H4@(??"@H4@)O?"@H4@)_?"@H4@)/?"@H4@)??"@H4@*O?"@H4@*_?"@H4@*/?,@H4@*??,@H4@+O?,@H4@+_?,@H4@,/?"@H4@,??X@H4@-O?"@H4@-_?"@H4@-/?"@H4@-??"@H4@.O?"@H4@./?"@H4@.??S@H4@/O?S@H4@/_?S@H4@//?S@H4@/??X@H4@0_?X@H4@0/?"@H4@0??"@H4@1O?"@H4@1_?"@H4@1/?"@H4@1??"@H4@2O?X@H4@2/?X@H4@2??"@H4@3O?X@H4@3/?X@H4@3??"@H4@4_?"@H4@5O?S@H4@5_?,@H4@5??,@H4@6/?S@H4@6??,@H4@7O?S@H4@7/?X@H4@8O?X@H4@8_?"@H4@8/?X@H4@8??"@H4@9O?X@H4@9_?"@H4@&gt;O?N@H4@&gt;??S@H4@?_?S@H4@???S@H4A@??S@H4AA/?X@H4ABO?X@H4AB/?X@H4AC/?X@H4AC??"@H4ADO?X@H4AD_?"@H4AD/?X@H4AD??"@H4AEO?X@H4AE_?"@H4AF??"@H4AGO?N@H4AG_?,@H4AHO?N@H4AH_?,@H4AH/?N@H4AH??,@H4AIO?,@H4AI_?"@H4AI/?,@H4AJ??S@H4AK_?S@H4AK??S@H4AL_?S@H4AL??S@H4ANO?N@H4AN_?X@H4AN/?N@H4AN??"@H4AOO?X@H4AO_?"@H4AO/?X@H4AO??"@H4APO?X@H4E:_?N@H4FCO?X@H4FH/?,@H4FJ??N@H4FKO?,@H4FK_?N@H4FK/?,@H4FM_?,@H4FM/?"@H4FM??,@H4FNO?"@H4F ??S@H4F._?N@H4F./?X@H4IZ??"@H4I[O?"@H4I[/?"@H4I[??"@H8@IO?,@H8@I/?S@H8@JO?S@H8@J_?N@H8@J/?S@H8@J??X@H8@KO?6@H8@K_?,@H8@K/?N@H8@K??S@H8@LO?X@H8@L_?X@H8@L/?S@H8@MO?S@H8@M/?]@H8@M??6@H8@N_?,@H8@N/?,@H8@N??D@H8@OO?,@H8@O_?D@H8@QO?X@H8@Q/?"@H8@Q??"@H8@RO?,@H8@R_?6@H8@R/?X@H8@S_?,@H8@TO?N@H8@T_?N@H8@T/?"@H8@T??''@H8@UO?"@H8@U_?]@H8@U/?N@H8@U??6@H8@VO?S@H8@V_?"@H8@V/?"@H8@V??I@H8@WO?"@H8@W_?N@H8@ /?,@H8@ ??,@H8@!O?,@H8@!_?,@H8@!/?,@H8@!??,@H8@"O?,@H8@"_?S@H8@"/?S@H8@"??S@H8@#O?S@H8@#_?S@H8@#/?6@H8@#??6@H8@$O?6@H8@$_?6@H8@%O?S@H8@%_?S@H8@%/?S@H8@%??S@H8@&amp;O?S@H8@&amp;/?S@H8@''??,@H8@(/?X@H8@(??X@H8@)O?X@H8@)_?X@H8@)/?X@H8@)??X@H8@*O?X@H8@*_?"@H8@*/?,@H8@*??,@H8@+O?,@H8@+_?,@H8@,/?"@H8@,??N@H8@-O?"@H8@-_?"@H8@-/?"@H8@-??"@H8@.O?"@H8@./?"@H8@.??S@H8@/O?S@H8@/_?S@H8@//?S@H8@/??"@H8@0_?"@H8@0/?,@H8@0??X@H8@1O?,@H8@1_?X@H8@1/?,@H8@1??X@H8@2O?S@H8@2/?S@H8@2??"@H8@3O?S@H8@3/?S@H8@3??"@H8@4_?"@H8@5O?S@H8@5_?,@H8@5??,@H8@6/?S@H8@6??,@H8@7O?S@H8@7/?S@H8@8O?S@H8@8_?X@H8@8/?S@H8@8??X@H8@9O?S@H8@9_?X@H8@&gt;O?N@H8@&gt;??S@H8@?_?S@H8@???S@H8A@??S@H8AA/?N@H8ABO?N@H8AB/?N@H8AC/?S@H8AC??"@H8ADO?S@H8AD_?"@H8AD/?S@H8AD??"@H8AEO?S@H8AE_?"@H8AF??]@H8AGO?]@H8AG_?N@H8AHO?]@H8AH_?N@H8AH/?]@H8AH??N@H8AIO?6@H8AI_?6@H8AI/?6@H8AJ??S@H8AK_?S@H8AK??S@H8AL_?S@H8AL??S@H8ANO?,@H8AN_?"@H8AN/?,@H8AN??D@H8AOO?N@H8AO_?D@H8AO/?N@H8AO??D@H8APO?N@H8E:_?N@H8FCO?N@H8FH/?''@H8FJ??]@H8FKO?N@H8FK_?]@H8FK/?N@H8FM_?6@H8FM/?6@H8FM??6@H8FNO?6@H8F ??S@H8F._?,@H8F./?"@H8IZ??6@H8I[O?6@H8I[/?6@H8I[??6@H&lt;@IO?,@H&lt;@I/?S@H&lt;@JO?S@H&lt;@J_?N@H&lt;@J/?S@H&lt;@J??X@H&lt;@KO?6@H&lt;@K_?,@H&lt;@K/?N@H&lt;@K??S@H&lt;@LO?X@H&lt;@L_?X@H&lt;@L/?S@H&lt;@MO?S@H&lt;@M/?]@H&lt;@M??6@H&lt;@N_?,@H&lt;@N/?,@H&lt;@N??D@H&lt;@OO?,@H&lt;@O_?D@H&lt;@QO?X@H&lt;@Q/?"@H&lt;@Q??"@H&lt;@RO?,@H&lt;@R_?6@H&lt;@R/?X@H&lt;@S_?,@H&lt;@TO?N@H&lt;@T_?N@H&lt;@T/?"@H&lt;@T??''@H&lt;@UO?"@H&lt;@U_?]@H&lt;@U/?N@H&lt;@U??6@H&lt;@VO?S@H&lt;@V_?"@H&lt;@V/?"@H&lt;@V??I@H&lt;@WO?"@H&lt;@W_?N@H&lt;@ /?,@H&lt;@ ??,@H&lt;@!O?,@H&lt;@!_?,@H&lt;@!/?,@H&lt;@!??,@H&lt;@"O?,@H&lt;@"_?S@H&lt;@"/?S@H&lt;@"??S@H&lt;@#O?S@H&lt;@#_?S@H&lt;@#/?6@H&lt;@#??6@H&lt;@$O?6@H&lt;@$_?6@H&lt;@%O?S@H&lt;@%_?S@H&lt;@%/?S@H&lt;@%??S@H&lt;@&amp;O?S@H&lt;@&amp;/?S@H&lt;@''??,@H&lt;@(/?X@H&lt;@(??X@H&lt;@)O?X@H&lt;@)_?X@H&lt;@)/?X@H&lt;@)??X@H&lt;@*O?X@H&lt;@*_?"@H&lt;@*/?,@H&lt;@*??,@H&lt;@+O?,@H&lt;@+_?,@H&lt;@,/?"@H&lt;@,??N@H&lt;@-O?"@H&lt;@-_?"@H&lt;@-/?"@H&lt;@-??"@H&lt;@.O?"@H&lt;@./?"@H&lt;@.??S@H&lt;@/O?S@H&lt;@/_?S@H&lt;@//?S@H&lt;@/??"@H&lt;@0_?"@H&lt;@0/?,@H&lt;@0??X@H&lt;@1O?,@H&lt;@1_?X@H&lt;@1/?,@H&lt;@1??X@H&lt;@2O?S@H&lt;@2/?S@H&lt;@2??"@H&lt;@3O?S@H&lt;@3/?S@H&lt;@3??"@H&lt;@4_?"@H&lt;@5O?S@H&lt;@5_?,@H&lt;@5??,@H&lt;@6/?S@H&lt;@6??,@H&lt;@7O?S@H&lt;@7/?S@H&lt;@8O?S@H&lt;@8_?X@H&lt;@8/?S@H&lt;@8??X@H&lt;@9O?S@H&lt;@9_?X@H&lt;@&gt;O?N@H&lt;@&gt;??S@H&lt;@?_?S@H&lt;@???S@H&lt;A@??S@H&lt;AA/?N@H&lt;ABO?N@H&lt;AB/?N@H&lt;AC/?S@H&lt;AC??"@H&lt;ADO?S@H&lt;AD_?"@H&lt;AD/?S@H&lt;AD??"@H&lt;AEO?S@H&lt;AE_?"@H&lt;AF??]@H&lt;AGO?]@H&lt;AG_?N@H&lt;AHO?]@H&lt;AH_?N@H&lt;AH/?]@H&lt;AH??N@H&lt;AIO?6@H&lt;AI_?6@H&lt;AI/?6@H&lt;AJ??S@H&lt;AK_?S@H&lt;AK??S@H&lt;AL_?S@H&lt;AL??S@H&lt;ANO?,@H&lt;AN_?"@H&lt;AN/?,@H&lt;AN??D@H&lt;AOO?N@H&lt;AO_?D@H&lt;AO/?N@H&lt;AO??D@H&lt;APO?N@H&lt;E:_?N@H&lt;FCO?N@H&lt;FH/?''@H&lt;FJ??]@H&lt;FKO?N@H&lt;FK_?]@H&lt;FK/?N@H&lt;FM_?6@H&lt;FM/?6@H&lt;FM??6@H&lt;FNO?6@H&lt;F ??S@H&lt;F._?,@H&lt;F./?"@H&lt;IZ??6@H&lt;I[O?6@H&lt;I[/?6@H&lt;I[??6@I@@IO?,@I@@I/?S@I@@JO?S@I@@J_?N@I@@J/?S@I@@J??X@I@@KO?6@I@@K_?,@I@@K/?N@I@@K??S@I@@LO?X@I@@L_?X@I@@L/?S@I@@MO?S@I@@M/?]@I@@M??6@I@@N_?,@I@@N/?,@I@@N??D@I@@OO?,@I@@O_?D@I@@QO?X@I@@Q/?"@I@@Q??"@I@@RO?,@I@@R_?6@I@@R/?X@I@@S_?,@I@@TO?N@I@@T_?N@I@@T/?"@I@@T??''@I@@UO?"@I@@U_?]@I@@U/?N@I@@U??6@I@@VO?S@I@@V_?"@I@@V/?"@I@@V??I@I@@WO?"@I@@W_?N@I@@ /?,@I@@ ??,@I@@!O?,@I@@!_?,@I@@!/?,@I@@!??,@I@@"O?,@I@@"_?S@I@@"/?S@I@@"??S@I@@#O?S@I@@#_?S@I@@#/?6@I@@#??6@I@@$O?6@I@@$_?6@I@@%O?S@I@@%_?S@I@@%/?S@I@@%??S@I@@&amp;O?S@I@@&amp;/?S@I@@''??,@I@@(/?X@I@@(??X@I@@)O?X@I@@)_?X@I@@)/?X@I@@)??X@I@@*O?X@I@@*_?"@I@@*/?,@I@@*??,@I@@+O?,@I@@+_?,@I@@,/?"@I@@,??N@I@@-O?"@I@@-_?"@I@@-/?"@I@@-??"@I@@.O?"@I@@./?"@I@@.??S@I@@/O?S@I@@/_?S@I@@//?S@I@@/??"@I@@0_?"@I@@0/?,@I@@0??X@I@@1O?,@I@@1_?X@I@@1/?,@I@@1??X@I@@2O?S@I@@2/?S@I@@2??"@I@@3O?S@I@@3/?S@I@@3??"@I@@4_?"@I@@5O?S@I@@5_?,@I@@5??,@I@@6/?S@I@@6??,@I@@7O?S@I@@7/?S@I@@8O?S@I@@8_?X@I@@8/?S@I@@8??X@I@@9O?S@I@@9_?X@I@@&gt;O?N@I@@&gt;??S@I@@?_?S@I@@???S@I@A@??S@I@AA/?N@I@ABO?N@I@AB/?N@I@AC/?S@I@AC??"@I@ADO?S@I@AD_?"@I@AD/?S@I@AD??"@I@AEO?S@I@AE_?"@I@AF??]@I@AGO?]@I@AG_?N@I@AHO?]@I@AH_?N@I@AH/?]@I@AH??N@I@AIO?6@I@AI_?6@I@AI/?6@I@AJ??S@I@AK_?S@I@AK??S@I@AL_?S@I@AL??S@I@ANO?,@I@AN_?"@I@AN/?,@I@AN??D@I@AOO?N@I@AO_?D@I@AO/?N@I@AO??D@I@APO?N@I@E:_?N@I@FCO?N@I@FH/?''@I@FJ??]@I@FKO?N@I@FK_?]@I@FK/?N@I@FM_?6@I@FM/?6@I@FM??6@I@FNO?6@I@F ??S@I@F._?,@I@F./?"@I@IZ??6@I@I[O?6@I@I[/?6@I@I[??6@ID@IO?,@ID@I/?S@ID@JO?S@ID@J_?N@ID@J/?S@ID@J??X@ID@KO?6@ID@K_?,@ID@K/?N@ID@K??S@ID@LO?X@ID@L_?X@ID@L/?S@ID@MO?S@ID@M/?]@ID@M??6@ID@N_?,@ID@N/?,@ID@N??D@ID@OO?,@ID@O_?D@ID@QO?X@ID@Q/?"@ID@Q??"@ID@RO?,@ID@R_?6@ID@R/?X@ID@S_?,@ID@TO?N@ID@T_?N@ID@T/?"@ID@T??''@ID@UO?"@ID@U_?]@ID@U/?N@ID@U??6@ID@VO?S@ID@V_?"@ID@V/?"@ID@V??I@ID@WO?"@ID@W_?N@ID@ /?,@ID@ ??,@ID@!O?,@ID@!_?,@ID@!/?,@ID@!??,@ID@"O?,@ID@"_?S@ID@"/?S@ID@"??S@ID@#O?S@ID@#_?S@ID@#/?6@ID@#??6@ID@$O?6@ID@$_?6@ID@%O?S@ID@%_?S@ID@%/?S@ID@%??S@ID@&amp;O?S@ID@&amp;/?S@ID@''??,@ID@(/?X@ID@(??X@ID@)O?X@ID@)_?X@ID@)/?X@ID@)??X@ID@*O?X@ID@*_?"@ID@*/?,@ID@*??,@ID@+O?,@ID@+_?,@ID@,/?"@ID@,??N@ID@-O?"@ID@-_?"@ID@-/?"@ID@-??"@ID@.O?"@ID@./?"@ID@.??S@ID@/O?S@ID@/_?S@ID@//?S@ID@/??"@ID@0_?"@ID@0/?,@ID@0??X@ID@1O?,@ID@1_?X@ID@1/?,@ID@1??X@ID@2O?S@ID@2/?S@ID@2??"@ID@3O?S@ID@3/?S@ID@3??"@ID@4_?"@ID@5O?S@ID@5_?,@ID@5??,@ID@6/?S@ID@6??,@ID@7O?S@ID@7/?S@ID@8O?S@ID@8_?X@ID@8/?S@ID@8??X@ID@9O?S@ID@9_?X@ID@&gt;O?N@ID@&gtamp;O?,@IH@&amp;/?,@IH@''??N@IH@(/?,@IH@(??,@IH@)O?,@IH@)_?,@IH@)/?,@IH@)??,@IH@*O?,@IH@,??"@IH@.??"@IH@/O?"@IH@/_?"@IH@//?"@IH@/??6@IH@0_?6@IH@0/?X@IH@0??,@IH@1O?X@IH@1_?,@IH@1/?X@IH@1??,@IH@2O?,@IH@2/?,@IH@3O?,@IH@3/?,@IH@5O?S@IH@6/?S@IH@7O?S@IH@7/?,@IH@8O?,@IH@8_?,@IH@8/?,@IH@8??,@IH@9O?,@IH@9_?,@IH@&gt;O?N@IH@&gt;??S@IH@?_?S@IH@???S@IHA@??S@IHAA/?"@IHABO?"@IHAB/?"@IHAC/?,@IHADO?,@IHAD/?,@IHAEO?,@IHAF??,@IHAGO?6@IHAG_?,@IHAHO?6@IHAH_?,@IHAH/?6@IHAH??,@IHAIO?X@IHAI_?,@IHAI/?X@IHAJ??"@IHAK_?"@IHAK??"@IHAL_?"@IHAL??"@IHANO?N@IHAN_?6@IHAN/?N@IHAN??X@IHAOO?"@IHAO_?X@IHAO/?"@IHAO??X@IHAPO?"@IHE:_?N@IHFCO?"@IHFH/?,@IHFJ??6@IHFKO?,@IHFK_?6@IHFK/?,@IHFM_?X@IHFM/?,@IHFM??X@IHFNO?,@IHF ??S@IHF._?N@IHF./?6@IHIZ??,@IHI[O?,@IHI[/?,@IHI[??,@IP@C??"@IP@D_?"@IP@IO?"@IP@JO?"@IP@J_?X@IP@J??"@IP@KO?6@IP@K/?X@IP@K??"@IP@LO?"@IP@L_?"@IP@M/?,@IP@M??X@IP@N_?X@IP@N/?X@IP@N??N@IP@OO?X@IP@O_?N@IP@QO?,@IP@R/?,@IP@TO?,@IP@T_?,@IP@T??6@IP@U_?,@IP@VO?1@IP@W_?,@IP@__?,@IP@ /?"@IP@ ??"@IP@!O?"@IP@!_?"@IP@!/?"@IP@!??"@IP@"O?"@IP@"/?"@IP@"??"@IP@#O?"@IP@#_?"@IP@#/?6@IP@#??6@IP@$O?6@IP@$_?6@IP@''??X@IP@(/?,@IP@(??,@IP@)O?,@IP@)_?,@IP@)/?,@IP@)??,@IP@*O?,@IP@,??,@IP@.??1@IP@/O?1@IP@/_?1@IP@//?1@IP@0/?"@IP@0??,@IP@1O?"@IP@1_?,@IP@1/?"@IP@1??,@IP@5O?"@IP@6/?"@IP@7O?"@IP@8_?,@IP@8??,@IP@9_?,@IP@&gt;O?X@IP@&gt;??"@IP@?_?"@IP@???"@IPA@??"@IPAA/?,@IPABO?,@IPAB/?,@IPAF??,@IPAGO?,@IPAHO?,@IPAH/?,@IPAIO?X@IPAI/?X@IPAJ??1@IPAK_?1@IPAK??1@IPAL_?1@IPAL??1@IPANO?X@IPAN/?X@IPAN??N@IPAOO?,@IPAO_?N@IPAO/?,@IPAO??N@IPAPO?,@IPE:_?X@IPFCO?,@IPFH/?6@IPFJ??,@IPFK_?,@IPFM_?X@IPFM??X@IPF ??"@IPF._?X@IPG0??X@IPG1/?X@IPG1??X@IPG9O?,@IT@C??"@IT@D_?"@IT@IO?"@IT@JO?"@IT@J_?X@IT@J??"@IT@KO?6@IT@K/?X@IT@K??"@IT@LO?"@IT@L_?"@IT@M/?,@IT@M??X@IT@N_?X@IT@N/?X@IT@N??N@IT@OO?X@IT@O_?N@IT@QO?,@IT@R/?,@IT@TO?,@IT@T_?,@IT@T??6@IT@U_?,@IT@VO?1@IT@W_?,@IT@__?,@IT@ /?"@IT@ ??"@IT@!O?"@IT@!_?"@IT@!/?"@IT@!??"@IT@"O?"@IT@"/?"@IT@"??"@IT@#O?"@IT@#_?"@IT@#/?6@IT@#??6@IT@$O?6@IT@$_?6@IT@''??X@IT@(/?,@IT@(??,@IT@)O?,@IT@)_?,@IT@)/?,@IT@)??,@IT@*O?,@IT@,??,@IT@.??1@IT@/O?1@IT@/_?1@IT@//?1@IT@0/?"@IT@0??,@IT@1O?"@IT@1_?,@IT@1/?"@IT@1??,@IT@5O?"@IT@6/?"@IT@7O?"@IT@8_?,@IT@8??,@IT@9_?,@IT@&gt;O?X@IT@&gt;??"@IT@?_?"@IT@???"@ITA@??"@ITAA/?,@ITABO?,@ITAB/?,@ITAF??,@ITAGO?,@ITAHO?,@ITAH/?,@ITAIO?X@ITAI/?X@ITAJ??1@ITAK_?1@ITAK??1@ITAL_?1@ITAL??1@ITANO?X@ITAN/?X@ITAN??N@ITAOO?,@ITAO_?N@ITAO/?,@ITAO??N@ITAPO?,@ITE:_?X@ITFCO?,@ITFH/?6@ITFJ??,@ITFK_?,@ITFM_?X@ITFM??X@ITF ??"@ITF._?X@ITG0??X@ITG1/?X@ITG1??X@ITG9O?,@IX@C??"@IX@D_?"@IX@IO?"@IX@JO?"@IX@J_?X@IX@J??"@IX@KO?6@IX@K/?X@IX@K??"@IX@LO?"@IX@L_?"@IX@M/?,@IX@M??X@IX@N_?X@IX@N/?X@IX@N??N@IX@OO?X@IX@O_?N@IX@QO?,@IX@R/?,@IX@TO?,@IX@T_?,@IX@T??6@IX@U_?,@IX@VO?1@IX@W_?,@IX@__?,@IX@ /?"@IX@ ??"@IX@!O?"@IX@!_?"@IX@!/?"@IX@!??"@IX@"O?"@IX@"/?"@IX@"??"@IX@#O?"@IX@#_?"@IX@#/?6@IX@#??6@IX@$O?6@IX@$_?6@IX@''??X@IX@(/?,@IX@(??,@IX@)O?,@IX@)_?,@IX@)/?,@IX@)??,@IX@*O?,@IX@,??,@IX@.??1@IX@/O?1@IX@/_?1@IX@//?1@IX@0/?"@IX@0??,@IX@1O?"@IX@1_?,@IX@1/?"@IX@1??,@IX@5O?"@IX@6/?"@IX@7O?"@IX@8_?,@IX@8??,@IX@9_?,@IX@&gt;O?X@IX@&gt;??"@IX@?_?"@IX@???"@IXA@??"@IXAA/?,@IXABO?,@IXAB/?,@IXAF??,@IXAGO?,@IXAHO?,@IXAH/?,@IXAIO?X@IXAI/?X@IXAJ??1@IXAK_?1@IXAK??1@IXAL_?1@IXAL??1@IXANO?X@IXAN/?X@IXAN??N@IXAOO?,@IXAO_?N@IXAO/?,@IXAO??N@IXAPO?,@IXE:_?X@IXFCO?,@IXFH/?6@IXFJ??,@IXFK_?,@IXFM_?X@IXFM??X@IXF ??"@IXF._?X@IXG0??X@IXG1/?X@IXG1??X@IXG9O?,@I\@C??"@I\@D_?"@I\@IO?"@I\@JO?"@I\@J_?X@I\@J??"@I\@KO?6@I\@K/?X@I\@K??"@I\@LO?"@I\@L_?"@I\@M/?,@I\@M??X@I\@N_?X@I\@N/?X@I\@N??N@I\@OO?X@I\@O_?N@I\@QO?,@I\@R/?,@I\@TO?,@I\@T_?,@I\@T??6@I\@U_?,@I\@VO?1@I\@W_?,@I\@__?,@I\@ /?"@I\@ ??"@I\@!O?"@I\@!_?"@I\@!/?"@I\@!??"@I\@"O?"@I\@"/?"@I\@"??"@I\@#O?"@I\@#_?"@I\@#/?6@I\@#??6@I\@$O?6@I\@$_?6@I\@''??X@I\@(/?,@I\@(??,@I\@)O?,@I\@)_?,@I\@)/?,@I\@)??,@I\@*O?,@I\@,??,@I\@.??1@I\@/O?1@I\@/_?1@I\@//?1@I\@0/?"@I\@0??,@I\@1O?"@I\@1_?,@I\@1/?"@I\@1??,@I\@5O?"@I\@6/?"@I\@7O?"@I\@8_?,@I\@8??,@I\@9_?,@I\@&gt;O?X@I\@&gt;??"@I\@?_?"@I\@???"@I\A@??"@I\AA/?,@I\ABO?,@I\AB/?,@I\AF??,@I\AGO?,@I\AHO?,@I\AH/?,@I\AIO?X@I\AI/?X@I\AJ??1@I\AK_?1@I\AK??1@I\AL_?1@I\AL??1@I\ANO?X@I\AN/?X@I\AN??N@I\AOO?,@I\AO_?N@I\AO/?,@I\AO??N@I\APO?,@I\E:_?X@I\FCO?,@I\FH/?6@I\FJ??,@I\FK_?,@I\FM_?X@I\FM??X@I\F ??"@I\F._?X@I\G0??X@I\G1/?X@I\G1??X@I\G9O?,@I @C??"@I @D_?"@I @IO?"@I @JO?"@I @J_?X@I @J??"@I @KO?6@I @K/?X@I @K??"@I @LO?"@I @L_?"@I @M/?,@I @M??X@I @N_?X@I @N/?X@I @N??N@I @OO?X@I @O_?N@I @QO?,@I @R/?,@I @TO?,@I @T_?,@I @T??6@I @U_?,@I @VO?1@I @W_?,@I @__?,@I @ /?"@I @ ??"@I @!O?"@I @!_?"@I @!/?"@I @!??"@I @"O?"@I @"/?"@I @"??"@I @#O?"@I @#_?"@I @#/?6@I @#??6@I @$O?6@I @$_?6@I @''??X@I @(/?,@I @(??,@I @)O?,@I @)_?,@I @)/?,@I @)??,@I @*O?,@I @,??,@I @.??1@I @/O?1@I @/_?1@I @//?1@I @0/?"@I @0??,@I @1O?"@I @1_?,@I @1/?"@I @1??,@I @5O?"@I @6/?"@I @7O?"@I @8_?,@I @8??,@I @9_?,@I @&gt;O?X@I @&gt;??"@I @?_?"@I @???"@I A@??"@I AA/?,@I ABO?,@I AB/?,@I AF??,@I AGO?,@I AHO?,@I AH/?,@I AIO?X@I AI/?X@I AJ??1@I AK_?1@I AK??1@I AL_?1@I AL??1@I ANO?X@I AN/?X@I AN??N@I AOO?,@I AO_?N@I AO/?,@I AO??N@I APO?,@I E:_?X@I FCO?,@I FH/?6@I FJ??,@I FK_?,@I FM_?X@I FM??X@I F ??"@I F._?X@I G0??X@I G1/?X@I G1??X@I G9O?,@I(@C??"@I(@D_?"@I(@IO?"@I(@JO?"@I(@J_?X@I(@J??"@I(@KO?6@I(@K/?X@I(@K??"@I(@LO?"@I(@L_?"@I(@M/?,@I(@M??X@I(@N_?X@I(@N/?X@I(@N??N@I(@OO?X@I(@O_?N@I(@QO?,@I(@R/?,@I(@TO?,@I(@T_?,@I(@T??6@I(@U_?,@I(@VO?1@I(@W_?,@I(@__?,@I(@ /?"@I(@ ??"@I(@!O?"@I(@!_?"@I(@!/?"@I(@!??"@I(@"O?"@I(@"/?"@I(@"??"@I(@#O?"@I(@#_?"@I(@#/?6@I(@#??6@I(@$O?6@I(@$_?6@I(@''??X@I(@(/?,@I(@(??,@I(@)O?,@I(@)_?,@I(@)/?,@I(@)??,@I(@*O?,@I(@,??,@I(@.??1@I(@/O?1@I(@/_?1@I(@//?1@I(@0/?"@I(@0??,@I(@1O?"@I(@1_?,@I(@1/?"@I(@1??,@I(@5O?"@I(@6/?"@I(@7O?"@I(@8_?,@I(@8??,@I(@9_?,@I(@&gt;O?X@I(@&gt;??"@I(@?_?"@I(@???"@I(A@??"@I(AA/?,@I(ABO?,@I(AB/?,@I(AF??,@I(AGO?,@I(AHO?,@I(AH/?,@I(AIO?X@I(AI/?X@I(AJ??1@I(AK_?1@I(AK??1@I(AL_?1@I(AL??1@I(ANO?X@I(AN/?X@I(AN??N@I(AOO?,@I(AO_?N@I(AO/?,@I(AO??N@I(APO?,@I(E:_?X@I(FCO?,@I(FH/?6@I(FJ??,@I(FK_?,@I(FM_?X@I(FM??X@I(F ??"@I(F._?X@I(G0??X@I(G1/?X@I(G1??X@I(G9O?,@I&lt;@C??D@I&lt;@DO?N@I&lt;@D_?D@I&lt;@IO?D@I&lt;@I/?N@I&lt;@JO?I@I&lt;@J_?D@I&lt;@J/?N@I&lt;@J??N@I&lt;@KO?X@I&lt;@K_?"@I&lt;@K/?D@I&lt;@K??I@I&lt;@LO?N@I&lt;@L_?N@I&lt;@L/?N@I&lt;@MO?N@I&lt;@M/?N@I&lt;@N??"@I&lt;@O_?"@I&lt;@QO?N@I&lt;@Q/?N@I&lt;@Q??N@I&lt;@RO?"@I&lt;@R_?,@I&lt;@R/?N@I&lt;@TO?D@I&lt;@T_?D@I&lt;@T/?N@I&lt;@T??X@I&lt;@UO?N@I&lt;@U_?D@I&lt;@U/?X@I&lt;@U??,@I&lt;@VO?N@I&lt;@V??"@I&lt;@W_?D@I&lt;@[_?N@I&lt;@__&gt;0@I&lt;@ /?D@I&lt;@ ??D@I&lt;@!O?D@I&lt;@!_?D@I&lt;@!/?D@I&lt;@!??D@I&lt;@"O?D@I&lt;@"_?N@I&lt;@"/?I@I&lt;@"??I@I&lt;@#O?I@I&lt;@#_?I@I&lt;@#/?X@I&lt;@#??X@I&lt;@$O?X@I&lt;@$_?X@I&lt;@%O?N@I&lt;@%_?N@I&lt;@%/?N@I&lt;@%??N@I&lt;@&amp;O?N@I&lt;@&amp;/?N@I&lt;@(/?N@I&lt;@(??N@I&lt;@)O?N@I&lt;@)_?N@I&lt;@)/?N@I&lt;@)??N@I&lt;@*O?N@I&lt;@*_?N@I&lt;@*/?"@I&lt;@*??"@I&lt;@+O?"@I&lt;@+_?"@I&lt;@,/?N@I&lt;@,??D@I&lt;@-O?N@I&lt;@-_?N@I&lt;@-/?N@I&lt;@-??N@I&lt;@.O?N@I&lt;@./?N@I&lt;@.??N@I&lt;@/O?N@I&lt;@/_?N@I&lt;@//?N@I&lt;@0/?D@I&lt;@0??N@I&lt;@1O?D@I&lt;@1_?N@I&lt;@1/?D@I&lt;@1??N@I&lt;@2O?N@I&lt;@2/?N@I&lt;@2??N@I&lt;@3O?N@I&lt;@3/?N@I&lt;@3??N@I&lt;@4_?N@I&lt;@5O?I@I&lt;@5_?"@I&lt;@5??"@I&lt;@6/?I@I&lt;@6??"@I&lt;@7O?I@I&lt;@7/?N@I&lt;@8O?N@I&lt;@8_?N@I&lt;@8/?N@I&lt;@8??N@I&lt;@9O?N@I&lt;@9_?N@I&lt;@&gt;O?D@I&lt;@&gt;??I@I&lt;@?_?I@I&lt;@???I@I&lt;A@??I@I&lt;AA/?D@I&lt;ABO?D@I&lt;AB/?D@I&lt;AC/?N@I&lt;AC??N@I&lt;ADO?N@I&lt;AD_?N@I&lt;AD/?N@I&lt;AD??N@I&lt;AEO?N@I&lt;AE_?N@I&lt;AF??D@I&lt;AGO?N@I&lt;AG_?X@I&lt;AHO?N@I&lt;AH_?X@I&lt;AH/?N@I&lt;AH??X@I&lt;AI_?,@I&lt;AJ??N@I&lt;AK_?N@I&lt;AK??N@I&lt;AL_?N@I&lt;AL??N@I&lt;AN??"@I&lt;AOO?D@I&lt;AO_?"@I&lt;AO/?D@I&lt;AO??"@I&lt;APO?D@I&lt;E:_?D@I&lt;FCO?D@I&lt;FH/?X@I&lt;FJ??N@I&lt;FKO?X@I&lt;FK_?N@I&lt;FK/?X@I&lt;FM/?,@I&lt;FNO?,@I&lt;F ??I@I&lt;G8??N@I&lt;G9O&gt;0@I&lt;IZ??,@I&lt;I[O?,@I&lt;I[/?,@I&lt;I[??,@J@@IO?X@J@@I/?,@J@@JO?S@J@@J_?N@J@@J/?,@J@@J??X@J@@KO?"@J@@K/?N@J@@K??S@J@@LO?X@J@@L_?X@J@@L/?,@J@@MO?,@J@@M/?6@J@@M??X@J@@N_?N@J@@N/?N@J@@N??X@J@@OO?N@J@@O_?X@J@@QO?,@J@@R_?,@J@@R/?,@J@@S_?"@J@@TO?"@J@@T_?"@J@@T??,@J@@U_?,@J@@U/?,@J@@U??,@J@@VO?"@J@@V_?6@J@@V/?6@J@@V??"@J@@WO?6@J@@W_?"@J@@ /?X@J@@ ??X@J@@!O?X@J@@!_?X@J@@!/?X@J@@!??X@J@@"O?X@J@@"_?,@J@@"/?S@J@@"??S@J@@#O?S@J@@#_?S@J@@#/?"@J@@#??"@J@@$O?"@J@@$_?"@J@@%O?,@J@@%_?,@J@@%/?,@J@@%??,@J@@&amp;O?,@J@@&amp;/?,@J@@''??N@J@@(/?,@J@@(??,@J@@)O?,@J@@)_?,@J@@)/?,@J@@)??,@J@@*O?,@J@@,??"@J@@.??"@J@@/O?"@J@@/_?"@J@@//?"@J@@/??6@J@@0_?6@J@@0/?X@J@@0??,@J@@1O?X@J@@1_?,@J@@1/?X@J@@1??,@J@@2O?,@J@@2/?,@J@@3O?,@J@@3/?,@J@@5O?S@J@@6/?S@J@@7O?S@J@@7/?,@J@@8O?,@J@@8_?,@J@@8/?,@J@@8??,@J@@9O?,@J@@9_?,@J@@&gt;O?N@J@@&gt;??S@J@@?_?S@J@@???S@J@A@??S@J@AA/?"@J@ABO?"@J@AB/?"@J@AC/?,@J@ADO?,@J@AD/?,@J@AEO?,@J@AF??,@J@AGO?6@J@AG_?,@J@AHO?6@J@AH_?,@J@AH/?6@J@AH??,@J@AIO?X@J@AI_?,@J@AI/?X@J@AJ??"@J@AK_?"@J@AK??"@J@AL_?"@J@AL??"@J@ANO?N@J@AN_?6@J@AN/?N@J@AN??X@J@AOO?"@J@AO_?X@J@AO/?"@J@AO??X@J@APO?"@J@E:_?N@J@FCO?"@J@FH/?,@J@FJ??6@J@FKO?,@J@FK_?6@J@FK/?,@J@FM_?X@J@FM/?,@J@FM??X@J@FNO?,@J@F ??S@J@F._?N@J@F./?6@J@IZ??,@J@I[O?,@J@I[/?,@J@I[??,@JH@C??,@JH@DO?X@JH@D_?,@JH@QO?6@JH@Q/?6@JH@R_?,@JH@R/?6@JH@R??1@JH@SO?1@JH@S??1@JH@TO?6@JH@T_?6@JH@T/?6@JH@U_?6@JH@U/?6@JH@U??,@JH@VO?6@JH@V_?,@JH@V/?,@JH@V??1@JH@WO?,@JH@[_?X@JH@__?X@JH@(/?6@JH@(??6@JH@)O?6@JH@)_?6@JH@)/?6@JH@)??6@JH@*O?6@JH@*_?6@JH@+??1@JH@,??6@JH@-O?6@JH@-_?6@JH@-/?6@JH@-??6@JH@.O?6@JH@.??6@JH@/O?6@JH@/_?6@JH@//?6@JH@/??,@JH@0_?,@JH@0??6@JH@1_?6@JH@1??6@JH@2??6@JH@3??6@JH@8_?6@JH@8??6@JH@9_?6@JH@&lt;_?1@JHAA/?6@JHABO?6@JHAB/?6@JHAC??6@JHAD_?6@JHAD??6@JHAE_?6@JHAF??6@JHAG_?6@JHAH_?6@JHAH??6@JHAI_?,@JHAJ??6@JHAK_?6@JHAK??6@JHAL_?6@JHAL??6@JHAN_?,@JHE;/?1@JHFKO?6@JHFK/?6@JHFM/?,@JHFNO?,@JHF./?,@JHG0??D@JHG1/?D@JHG1??D@JHG8??X@JHG9O?X@JHIZ??,@JHI[O?,@JHI[_?,@JHI[/?,@JHI[??,@JL@C??,@JL@DO?X@JL@D_?,@JL@QO?6@JL@Q/?6@JL@R_?,@JL@R/?6@JL@R??1@JL@SO?1@JL@S??1@JL@TO?6@JL@T_?6@JL@T/?6@JL@U_?6@JL@U/?6@JL@U??,@JL@VO?6@JL@V_?,@JL@V/?,@JL@V??1@JL@WO?,@JL@[_?X@JL@__?X@JL@(/?6@JL@(??6@JL@)O?6@JL@)_?6@JL@)/?6@JL@)??6@JL@*O?6@JL@*_?6@JL@+??1@JL@,??6@JL@-O?6@JL@-_?6@JL@-/?6@JL@-??6@JL@.O?6@JL@.??6@JL@/O?6@JL@/_?6@JL@//?6@JL@/??,@JL@0_?,@JL@0??6@JL@1_?6@JL@1??6@JL@2??6@JL@3??6@JL@8_?6@JL@8??6@JL@9_?6@JL@&lt;_?1@JLAA/?6@JLABO?6@JLAB/?6@JLAC??6@JLAD_?6@JLAD??6@JLAE_?6@JLAF??6@JLAG_?6@JLAH_?6@JLAH??6@JLAI_?,@JLAJ??6@JLAK_?6@JLAK??6@JLAL_?6@JLAL??6@JLAN_?,@JLE;/?1@JLFKO?6@JLFK/?6@JLFM/?,@JLFNO?,@JLF./?,@JLG0??D@JLG1/?D@JLG1??D@JLG8??X@JLG9O?X@JLIZ??,@JLI[O?,@JLI[_?,@JLI[/?,@JLI[??,@@C72 @AJT+@@@@MM;0@)@@O?&gt;0@)@@P?= @)@@Q?&gt;0@)@AD??X@)@AF??X@)@AI?&gt;0@)@AJ??X@)@AK??D@)@AL??D@)@AO??D@)@AP??X@)@AQ??X@)@AR??X@)@AU??X@)@AV??X@)@AW?&gt;0@)@AX??X@)@AY?&gt;0@)@AZ?&gt;0@)@A[??D@)@A\?&gt;0@)@A-?= @)@A=?= @)@B"??X@)@B#??X@)@B$??X@)@B%??X@)@B&amp;??X@)@B''??X@)@B(??X@)@B)??X@)@B/??D@)@B3??X@)@B4??X@)@B5??X@)@B6??X@)@B7??X@)@B8??X@)@B;??X@)@B&lt;??X@)@B=??X@)@B&gt;??X@)@B??&gt;0@)@CA?&gt;0@)@CC??X@)@CE??X@)@CG??X@)@CK??X@)@CO??X@)@C!??X@)@C#??X@)@C%??X@)@C1??D@)@DF??X@)@DH??X@)@DJ??X@)@DO??X@)@DQ??X@)@DS??X@)@DU??X@)@D[??X@)@D]??X@)@D!??X@)@D#??X@)@D%?&gt;0@)@D+??X@)@D-??X@)@D/??X@)@D1??X@)@D3??X@)@D9?&gt;0@)@W.??D@)@X,??X@)@X.??X@)@X6?&gt;0@)@X8?&gt;0@)@Z:?&gt;0@)@_C?&lt;P@)@_F?&lt;P@)@_G?&lt;P@)@_#?= @)@_$?= @)@%+?&gt;0@)@%,?&gt;0@)@%-?&gt;0@)@%.?&gt;0@)@%/?&gt;0@)P@O?&gt;0@)P@P?= @)P@Q?&gt;0@)PAD??X@)PAF??X@)PAI?&gt;0@)PAJ??X@)PAK??D@)PAL??D@)PAO??D@)PAP??X@)PAQ??X@)PAR??X@)PAU??X@)PAV??X@)PAW?&gt;0@)PAX??X@)PAY?&gt;0@)PAZ?&gt;0@)PA[??D@)PA\?&gt;0@)PA-?= @)PA=?= @)PB"??X@)PB#??X@)PB$??X@)PB%??X@)PB&amp;??X@)PB''??X@)PB(??X@)PB)??X@)PB/??D@)PB3??X@)PB4??X@)PB5??X@)PB6??X@)PB7??X@)PB8??X@)PB;??X@)PB&lt;??X@)PB=??X@)PB&gt;??X@)PB??&gt;0@)PCA?&gt;0@)PCC??X@)PCE??X@)PCG??X@)PCK??X@)PCO??X@)PC!??X@)PC#??X@)PC%??X@)PC1??D@)PDF??X@)PDH??X@)PDJ??X@)PDO??X@)PDQ??X@)PDS??X@)PDU??X@)PD[??X@)PD]??X@)PD!??X@)PD#??X@)PD%?&gt;0@)PD+??X@)PD-??X@)PD/??X@)PD1??X@)PD3??X@)PD9?&gt;0@)PW.??D@)PX,??X@)PX.??X@)PX6?&gt;0@)PX8?&gt;0@)PZ:?&gt;0@)P_C?&lt;P@)P_F?&lt;P@)P_G?&lt;P@)P_#?= @)P_$?= @)P%+?&gt;0@)P%,?&gt;0@)P%-?&gt;0@)P%.?&gt;0@)P%/?&gt;0@) @O?&gt;0@) @P?= @) @Q?&gt;0@) AD??X@) AF??X@) AI?&gt;0@) AJ??X@) AK??D@) AL??D@) AO??D@) AP??X@) AQ??X@) AR??X@) AU??X@) AV??X@) AW?&gt;0@) AX??X@) AY?&gt;0@) AZ?&gt;0@) A[??D@) A\?&gt;0@) A-?= @) A=?= @) B"??X@) B#??X@) B$??X@) B%??X@) B&amp;??X@) B''??X@) B(??X@) B)??X@) B/??D@) B3??X@) B4??X@) B5??X@) B6??X@) B7??X@) B8??X@) B;??X@) B&lt;??X@) B=??X@) B&gt;??X@) B??&gt;0@) CA?&gt;0@) CC??X@) CE??X@) CG??X@) CK??X@) CO??X@) C!??X@) C#??X@) C%??X@) C1??D@) DF??X@) DH??X@) DJ??X@) DO??X@) DQ??X@) DS??X@) DU??X@) D[??X@) D]??X@) D!??X@) D#??X@) D%?&gt;0@) D+??X@) D-??X@) D/??X@) D1??X@) D3??X@) D9?&gt;0@) W.??D@) X,??X@) X.??X@) X6?&gt;0@) X8?&gt;0@) Z:?&gt;0@) _C?&lt;P@) _F?&lt;P@) _G?&lt;P@) _#?= @) _$?= @) %+?&gt;0@) %,?&gt;0@) %-?&gt;0@) %.?&gt;0@) %/?&gt;0@)0@O?&gt;0@)0@P?= @)0@Q?&gt;0@)0AD??X@)0AF??X@)0AI?&gt;0@)0AJ??X@)0AK??D@)0AL??D@)0AO??D@)0AP??X@)0AQ??X@)0AR??X@)0AU??X@)0AV??X@)0AW?&gt;0@)0AX??X@)0AY?&gt;0@)0AZ?&gt;0@)0A[??D@)0A\?&gt;0@)0A-?= @)0A=?= @)0B"??X@)0B#??X@)0B$??X@)0B%??X@)0B&amp;??X@)0B''??X@)0B(??X@)0B)??X@)0B/??D@)0B3??X@)0B4??X@)0B5??X@)0B6??X@)0B7??X@)0B8??X@)0B;??X@)0B&lt;??X@)0B=??X@)0B&gt;??X@)0B??&gt;0@)0CA?&gt;0@)0CC??X@)0CE??X@)0CG??X@)0CK??X@)0CO??X@)0C!??X@)0C#??X@)0C%??X@)0C1??D@)0DF??X@)0DH??X@)0DJ??X@)0DO??X@)0DQ??X@)0DS??X@)0DU??X@)0D[??X@)0D]??X@)0D!??X@)0D#??X@)0D%?&gt;0@)0D+??X@)0D-??X@)0D/??X@)0D1??X@)0D3??X@)0D9?&gt;0@)0W.??D@)0X,??X@)0X.??X@)0X6?&gt;0@)0X8?&gt;0@)0Z:?&gt;0@)0_C?&lt;P@)0_F?&lt;P@)0_G?&lt;P@)0_#?= @)0_$?= @)0%+?&gt;0@)0%,?&gt;0@)0%-?&gt;0@)0%.?&gt;0@)0%/?&gt;0@*@AD??,@*@AF??,@*@AI??,@*@AJ??,@*@AK??X@*@AL??X@*@AO??X@*@AP??D@*@AQ??D@*@AR??,@*@AU??,@*@AV??X@*@AW??,@*@AX??,@*@AY??D@*@AZ??D@*@A[?&gt;\@*@A\??D@*@A]??,@*@B"??,@*@B#??,@*@B$??,@*@B%??,@*@B&amp;??,@*@B''??,@*@B(??,@*@B)??,@*@B/??X@*@B3??D@*@B4??,@*@B5??,@*@B6??,@*@B7??,@*@B8??,@*@B;??,@*@B&lt;??,@*@B=??,@*@B&gt;??,@*@B???D@*@CA??D@*@CC??,@*@CE??,@*@CG??,@*@CK??,@*@CO??,@*@C!??,@*@C#??,@*@C%??,@*@C1??X@*@DF??D@*@DH??D@*@DJ??D@*@DO??,@*@DQ??,@*@DS??,@*@DU??,@*@D[??,@*@D]??X@*@D!??X@*@D#??X@*@D%??,@*@D+??,@*@D-??,@*@D/??,@*@D1??,@*@D3??,@*@D9??D@*@D&lt;??,@*@D&gt;??,@*@E@??,@*@H2??,@*@W.??X@*@X,??X@*@X.??X@*@X6??,@*@X8??,@*@Z:??D@*@%+??,@*@%,??,@*@%-??,@*@%.??,@*@%/??,@*P@O?&gt;0@*P@Q?&gt;0@*PAD??X@*PAF??,@*PAI??D@*PAJ??X@*PAK??D@*PAL??D@*PAO??D@*PAP?&gt;0@*PAQ?&gt;0@*PAR??,@*PAS??,@*PAU??X@*PAV??D@*PAW??D@*PAX??X@*PAY??X@*PAZ??X@*PA[?&gt;\@*PA\??X@*PA]??X@*PA=?&gt;0@*PB"??X@*PB#??X@*PB$??X@*PB%??X@*PB&amp;??X@*PB''??X@*PB(??X@*PB)??,@*PB/??D@*PB3?&gt;0@*PB4??,@*PB5??,@*PB6??,@*PB7??,@*PB8??,@*PB;??X@*PB&lt;??X@*PB=??X@*PB&gt;??X@*PB???X@*PCA??X@*PCC??X@*PCE??X@*PCG??X@*PCK??,@*PCO??,@*PC!??X@*PC#??X@*PC%??X@*PC1??D@*PDF?&gt;0@*PDH?&gt;0@*PDJ?&gt;0@*PDO??,@*PDQ??,@*PDS??,@*PDU??,@*PD[??X@*PD]??D@*PD!??D@*PD#??D@*PD%??D@*PD+??X@*PD-??X@*PD/??X@*PD1??X@*PD3??X@*PD9??X@*PD&lt;??X@*PD&gt;??X@*PE@??X@*PH2??X@*PW.??D@*PX"??,@*PX,??D@*PX.??D@*PX6??D@*PX8??D@*PZ:??X@*P_C?= @*P_F?= @*P_G?= @*P_$?&gt;0@*P%+??D@*P%,??D@*P%-??D@*P%.??D@*P%/??D@* @O?&gt;0@* @Q?&gt;0@* AD??,@* AF??,@* AI??,@* AJ??,@* AK??X@* AL??X@* AO??X@* AP??D@* AQ??D@* AR??,@* AU??,@* AV??X@* AW??,@* AX??,@* AY??D@* AZ??D@* A[?&gt;\@* A\??D@* A]??,@* A=?&gt;0@* B"??,@* B#??,@* B$??,@* B%??,@* B&amp;??,@* B''??,@* B(??,@* B)??,@* B/??X@* B3??D@* B4??,@* B5??,@* B6??,@* B7??,@* B8??,@* B;??,@* B&lt;??,@* B=??,@* B&gt;??,@* B???D@* CA??D@* CC??,@* CE??,@* CG??,@* CK??,@* CO??,@* C!??,@* C#??,@* C%??,@* C1??X@* DF??D@* DH??D@* DJ??D@* DO??,@* DQ??,@* DS??,@* DU??,@* D[??,@* D]??X@* D!??X@* D#??X@* D%??,@* D+??,@* D-??,@* D/??,@* D1??,@* D3??,@* D9??D@* D&lt;??,@* D&gt;??,@* E@??,@* H2??,@* W.??X@* X,??X@* X.??X@* X6??,@* X8??,@* Z:??D@* _C?= @* _F?= @* _G?= @* _$?&gt;0@* %+??,@* %,??,@* %-??,@* %.??,@* %/??,@*0@O?&gt;0@*0@Q?&gt;0@*0AD??,@*0AF??,@*0AI??,@*0AJ??,@*0AK??X@*0AL??X@*0AO??X@*0AP??D@*0AQ??D@*0AR??,@*0AU??,@*0AV??X@*0AW??,@*0AX??,@*0AY??D@*0AZ??D@*0A[?&gt;\@*0A\??D@*0A]??,@*0A=?&gt;0@*0B"??,@*0B#??,@*0B$??,@*0B%??,@*0B&amp;??,@*0B''??,@*0B(??,@*0B)??,@*0B/??X@*0B3??D@*0B4??,@*0B5??,@*0B6??,@*0B7??,@*0B8??,@*0B;??,@*0B&lt;??,@*0B=??,@*0B&gt;??,@*0B???D@*0CA??D@*0CC??,@*0CE??,@*0CG??,@*0CK??,@*0CO??,@*0C!??,@*0C#??,@*0C%??,@*0C1??X@*0DF??D@*0DH??D@*0DJ??D@*0DO??,@*0DQ??,@*0DS??,@*0DU??,@*0D[??,@*0D]??X@*0D!??X@*0D#??X@*0D%??,@*0D+??,@*0D-??,@*0D/??,@*0D1??,@*0D3??,@*0D9??D@*0D&lt;??,@*0D&gt;??,@*0E@??,@*0H2??,@*0W.??X@*0X,??X@*0X.??X@*0X6??,@*0X8??,@*0Z:??D@*0_C?= @*0_F?= @*0_G?= @*0_$?&gt;0@*0%+??,@*0%,??,@*0%-??,@*0%.??,@*0%/??,@+@@O?&gt;0@+@@Q?&gt;0@+@AD??,@+@AF??,@+@AI??,@+@AJ??,@+@AK??X@+@AL??X@+@AO??X@+@AP??D@+@AQ??D@+@AR??,@+@AU??,@+@AV??X@+@AW??,@+@AX??,@+@AY??D@+@AZ??D@+@A[?&gt;\@+@A\??D@+@A]??,@+@A=?&gt;0@+@B"??,@+@B#??,@+@B$??,@+@B%??,@+@B&amp;??,@+@B''??,@+@B(??,@+@B)??,@+@B/??X@+@B3??D@+@B4??,@+@B5??,@+@B6??,@+@B7??,@+@B8??,@+@B;??,@+@B&lt;??,@+@B=??,@+@B&gt;??,@+@B???D@+@CA??D@+@CC??,@+@CE??,@+@CG??,@+@CK??,@+@CO??,@+@C!??,@+@C#??,@+@C%??,@+@C1??X@+@DF??D@+@DH??D@+@DJ??D@+@DO??,@+@DQ??,@+@DS??,@+@DU??,@+@D[??,@+@D]??X@+@D!??X@+@D#??X@+@D%??,@+@D+??,@+@D-??,@+@D/??,@+@D1??,@+@D3??,@+@D9??D@+@D&lt;??,@+@D&gt;??,@+@E@??,@+@H2??,@+@W.??X@+@X,??X@+@X.??X@+@X6??,@+@X8??,@+@Z:??D@+@_C?= @+@_F?= @+@_G?= @+@_$?&gt;0@+@%+??,@+@%,??,@+@%-??,@+@%.??,@+@%/??,@+P@O?&gt;0@+P@Q?&gt;0@+PAD??,@+PAF??,@+PAI??,@+PAJ??,@+PAK??X@+PAL??X@+PAO??X@+PAP??D@+PAQ??D@+PAR??,@+PAU??,@+PAV??X@+PAW??,@+PAX??,@+PAY??D@+PAZ??D@+PA[?&gt;\@+PA\??D@+PA]??,@+PA=?&gt;0@+PB"??,@+PB#??,@+PB$??,@+PB%??,@+PB&amp;??,@+PB''??,@+PB(??,@+PB)??,@+PB/??X@+PB3??D@+PB4??,@+PB5??,@+PB6??,@+PB7??,@+PB8??,@+PB;??,@+PB&lt;??,@+PB=??,@+PB&gt;??,@+PB???D@+PCA??D@+PCC??,@+PCE??,@+PCG??,@+PCK??,@+PCO??,@+PC!??,@+PC#??,@+PC%??,@+PC1??X@+PDF??D@+PDH??D@+PDJ??D@+PDO??,@+PDQ??,@+PDS??,@+PDU??,@+PD[??,@+PD]??X@+PD!??X@+PD#??X@+PD%??,@+PD+??,@+PD-??,@+PD/??,@+PD1??,@+PD3??,@+PD9??D@+PD&lt;??,@+PD&gt;??,@+PE@??,@+PH2??,@+PW.??X@+PX,??X@+PX.??X@+PX6??,@+PX8??,@+PZ:??D@+P_C?= @+P_F?= @+P_G?= @+P_$?&gt;0@+P%+??,@+P%,??,@+P%-??,@+P%.??,@+P%/??,@,0@O?&gt;H@,0@P?= @,0@Q?&gt;H@,0AD??X@,0AF??,@,0AG??X@,0AH??,@,0AI??X@,0AJ??X@,0AK?&gt;0@,0AL?&gt;0@,0AM??D@,0AO?&gt;0@,0AP?&gt;0@,0AQ?&gt;0@,0AR??,@,0AS??,@,0AT??X@,0AU??D@,0AV??D@,0AW??X@,0AX??D@,0AY?=4@,0AZ?=4@,0A[??D@,0A\?=4@,0A-?= @,0A=?&gt;H@,0B"??X@,0B#??X@,0B$??X@,0B%??X@,0B&amp;??X@,0B''??X@,0B(??X@,0B)??,@,0B*??,@,0B+??,@,0B,??,@,0B-??,@,0B/?&gt;0@,0B3?&gt;0@,0B4??,@,0B5??,@,0B6??,@,0B7??,@,0B8??,@,0B;??D@,0B&lt;??D@,0B=??D@,0B&gt;??D@,0B??=4@,0CA?=4@,0CC??X@,0CE??X@,0CG??X@,0CK??,@,0CO??,@,0CQ??X@,0CU??,@,0CW??,@,0C!??X@,0C#??X@,0C%??X@,0C1?&gt;0@,0DF?&gt;0@,0DH?&gt;0@,0DJ?&gt;0@,0DO??,@,0DQ??,@,0DS??,@,0DU??,@,0D[??D@,0D]??D@,0D!??D@,0D#??D@,0D%??X@,0D+??D@,0D-??D@,0D/??D@,0D1??D@,0D3??D@,0D9?=4@,0W.?&gt;0@,0X"??,@,0X,??D@,0X.??D@,0X6??X@,0X8??X@,0Z:?=4@,0_C?&lt;P@,0_F?&lt;P@,0_G?&lt;P@,0_#?= @,0_$?&gt;H@,0%+??X@,0%,??X@,0%-??X@,0%.??X@,0%/??X@-@@O?&gt;0@-@@Q?&gt;0@-@AD??D@-@AF??X@-@AG??,@-@AI?&gt;0@-@AJ??D@-@AK?&gt;H@-@AL?&gt;H@-@AM??X@-@AO?&gt;H@-@AP?&gt;H@-@AQ?&gt;H@-@AR??X@-@AS??X@-@AT??,@-@AU??D@-@AV?&gt;0@-@AW?&gt;0@-@AX??D@-@AY??D@-@AZ??D@-@A[?&gt;H@-@A\??D@-@A]??D@-@A=?&gt;0@-@B"??D@-@B#??D@-@B$??D@-@B%??D@-@B&amp;??D@-@B''??D@-@B(??D@-@B)??X@-@B/?&gt;H@-@B3?&gt;H@-@B4??X@-@B5??X@-@B6??X@-@B7??X@-@B8??X@-@B;??D@-@B&lt;??D@-@B=??D@-@B&gt;??D@-@B???D@-@CA??D@-@CC??D@-@CE??D@-@CG??D@-@CK??X@-@CO??X@-@CQ??,@-@C!??D@-@C#??D@-@C%??D@-@C1?&gt;H@-@DF?&gt;H@-@DH?&gt;H@-@DJ?&gt;H@-@DO??X@-@DQ??X@-@DS??X@-@DU??X@-@D[??D@-@D]?&gt;0@-@D!?&gt;0@-@D#?&gt;0@-@D%?&gt;0@-@D+??D@-@D-??D@-@D/??D@-@D1??D@-@D3??D@-@D9??D@-@D&lt;??D@-@D&gt;??D@-@E@??D@-@H2??D@-@W.?&gt;H@-@X"??X@-@X,?&gt;0@-@X.?&gt;0@-@X6?&gt;0@-@X8?&gt;0@-@Z:??D@-@_C?= @-@_F?= @-@_G?= @-@_$?&gt;0@-@%+?&gt;0@-@%,?&gt;0@-@%-?&gt;0@-@%.?&gt;0@-@%/?&gt;0@-P@O?&gt;0@-P@Q?&gt;0@-PAD??D@-PAF??X@-PAG??,@-PAI?&gt;0@-PAJ??D@-PAK?&gt;H@-PAL?&gt;H@-PAM??X@-PAO?&gt;H@-PAP?&gt;H@-PAQ?&gt;H@-PAR??X@-PAS??X@-PAT??,@-PAU??D@-PAV?&gt;0@-PAW?&gt;0@-PAX??D@-PAY??D@-PAZ??D@-PA[?&gt;H@-PA\??D@-PA]??D@-PA=?&gt;0@-PB"??D@-PB#??D@-PB$??D@-PB%??D@-PB&amp;??D@-PB''??D@-PB(??D@-PB)??X@-PB/?&gt;H@-PB3?&gt;H@-PB4??X@-PB5??X@-PB6??X@-PB7??X@-PB8??X@-PB;??D@-PB&lt;??D@-PB=??D@-PB&gt;??D@-PB???D@-PCA??D@-PCC??D@-PCE??D@-PCG??D@-PCK??X@-PCO??X@-PCQ??,@-PC!??D@-PC#??D@-PC%??D@-PC1?&gt;H@-PDF?&gt;H@-PDH?&gt;H@-PDJ?&gt;H@-PDO??X@-PDQ??X@-PDS??X@-PDU??X@-PD[??D@-PD]?&gt;0@-PD!?&gt;0@-PD#?&gt;0@-PD%?&gt;0@-PD+??D@-PD-??D@-PD/??D@-PD1??D@-PD3??D@-PD9??D@-PD&lt;??D@-PD&gt;??D@-PE@??D@-PH2??D@-PW.?&gt;H@-PX"??X@-PX,?&gt;0@-PX.?&gt;0@-PX6?&gt;0@-PX8?&gt;0@-PZ:??D@-P_C?= @-P_F?= @-P_G?= @-P_$?&gt;0@-P%+?&gt;0@-P%,?&gt;0@-P%-?&gt;0@-P%.?&gt;0@-P%/?&gt;0@- @O?&gt;0@- @Q?&gt;0@- AD??D@- AF??X@- AG??,@- AI?&gt;0@- AJ??D@- AK?&gt;H@- AL?&gt;H@- AM??X@- AO?&gt;H@- AP?&gt;H@- AQ?&gt;H@- AR??X@- AS??X@- AT??,@- AU??D@- AV?&gt;0@- AW?&gt;0@- AX??D@- AY??D@- AZ??D@- A[?&gt;H@- A\??D@- A]??D@- A=?&gt;0@- B"??D@- B#??D@- B$??D@- B%??D@- B&amp;??D@- B''??D@- B(??D@- B)??X@- B/?&gt;H@- B3?&gt;H@- B4??X@- B5??X@- B6??X@- B7??X@- B8??X@- B;??D@- B&lt;??D@- B=??D@- B&gt;??D@- B???D@- CA??D@- CC??D@- CE??D@- CG??D@- CK??X@- CO??X@- CQ??,@- C!??D@- C#??D@- C%??D@- C1?&gt;H@- DF?&gt;H@- DH?&gt;H@- DJ?&gt;H@- DO??X@- DQ??X@- DS??X@- DU??X@- D[??D@- D]?&gt;0@- D!?&gt;0@- D#?&gt;0@- D%?&gt;0@- D+??D@- D-??D@- D/??D@- D1??D@- D3??D@- D9??D@- D&lt;??D@- D&gt;??D@- E@??D@- H2??D@- W.?&gt;H@- X"??X@- X,?&gt;0@- X.?&gt;0@- X6?&gt;0@- X8?&gt;0@- Z:??D@- _C?= @- _F?= @- _G?= @- _$?&gt;0@- %+?&gt;0@- %,?&gt;0@- %-?&gt;0@- %.?&gt;0@- %/?&gt;0@-0@O?&gt;0@-0@Q?&gt;0@-0AD??D@-0AF??X@-0AG??,@-0AI?&gt;0@-0AJ??D@-0AK?&gt;H@-0AL?&gt;H@-0AM??X@-0AO?&gt;H@-0AP?&gt;H@-0AQ?&gt;H@-0AR??X@-0AS??X@-0AT??,@-0AU??D@-0AV?&gt;0@-0AW?&gt;0@-0AX??D@-0AY??D@-0AZ??D@-0A[?&gt;H@-0A\??D@-0A]??D@-0A=?&gt;0@-0B"??D@-0B#??D@-0B$??D@-0B%??D@-0B&amp;??D@-0B''??D@-0B(??D@-0B)??X@-0B/?&gt;H@-0B3?&gt;H@-0B4??X@-0B5??X@-0B6??X@-0B7??X@-0B8??X@-0B;??D@-0B&lt;??D@-0B=??D@-0B&gt;??D@-0B???D@-0CA??D@-0CC??D@-0CE??D@-0CG??D@-0CK??X@-0CO??X@-0CQ??,@-0C!??D@-0C#??D@-0C%??D@-0C1?&gt;H@-0DF?&gt;H@-0DH?&gt;H@-0DJ?&gt;H@-0DO??X@-0DQ??X@-0DS??X@-0DU??X@-0D[??D@-0D]?&gt;0@-0D!?&gt;0@-0D#?&gt;0@-0D%?&gt;0@-0D+??D@-0D-??D@-0D/??D@-0D1??D@-0D3??D@-0D9??D@-0D&lt;??D@-0D&gt;??D@-0E@??D@-0H2??D@-0W.?&gt;H@-0X"??X@-0X,?&gt;0@-0X.?&gt;0@-0X6?&gt;0@-0X8?&gt;0@-0Z:??D@-0_C?= @-0_F?= @-0_G?= @-0_$?&gt;0@-0%+?&gt;0@-0%,?&gt;0@-0%-?&gt;0@-0%.?&gt;0@-0%/?&gt;0@.@@O?&gt;0@.@@Q?&gt;0@.@AD??D@.@AF??X@.@AG??,@.@AI?&gt;0@.@AJ??D@.@AK?&gt;H@.@AL?&gt;H@.@AM??X@.@AO?&gt;H@.@AP?&gt;H@.@AQ?&gt;H@.@AR??X@.@AS??X@.@AT??,@.@AU??D@.@AV?&gt;0@.@AW?&gt;0@.@AX??D@.@AY??D@.@AZ??D@.@A[?&gt;H@.@A\??D@.@A]??D@.@A=?&gt;0@.@B"??D@.@B#??D@.@B$??D@.@B%??D@.@B&amp;??D@.@B''??D@.@B(??D@.@B)??X@.@B/?&gt;H@.@B3?&gt;H@.@B4??X@.@B5??X@.@B6??X@.@B7??X@.@B8??X@.@B;??D@.@B&lt;??D@.@B=??D@.@B&gt;??D@.@B???D@.@CA??D@.@CC??D@.@CE??D@.@CG??D@.@CK??X@.@CO??X@.@CQ??,@.@C!??D@.@C#??D@.@C%??D@.@C1?&gt;H@.@DF?&gt;H@.@DH?&gt;H@.@DJ?&gt;H@.@DO??X@.@DQ??X@.@DS??X@.@DU??X@.@D[??D@.@D]?&gt;0@.@D!?&gt;0@.@D#?&gt;0@.@D%?&gt;0@.@D+??D@.@D-??D@.@D/??D@.@D1??D@.@D3??D@.@D9??D@.@D&lt;??D@.@D&gt;??D@.@E@??D@.@H2??D@.@W.?&gt;H@.@X"??X@.@X,?&gt;0@.@X.?&gt;0@.@X6?&gt;0@.@X8?&gt;0@.@Z:??D@.@_C?= @.@_F?= @.@_G?= @.@_$?&gt;0@.@%+?&gt;0@.@%,?&gt;0@.@%-?&gt;0@.@%.?&gt;0@.@%/?&gt;0@. AD??D@. AF??X@. AG??,@. AI?&gt;0@. AJ??D@. AK?&gt;H@. AL?&gt;H@. AM??X@. AO?&gt;H@. AP?&gt;H@. AQ?&gt;H@. AR??X@. AS??X@. AT??,@. AU??D@. AV?&gt;0@. AW?&gt;0@. AX??D@. AY??D@. AZ??D@. A[?&gt;H@. A\??D@. A]??D@. B"??D@. B#??D@. B$??D@. B%??D@. B&amp;??D@. B''??D@. B(??D@. B)??X@. B/?&gt;H@. B3?&gt;H@. B4??X@. B5??X@. B6??X@. B7??X@. B8??X@. B;??D@. B&lt;??D@. B=??D@. B&gt;??D@. B???D@. CA??D@. CC??D@. CE??D@. CG??D@. CK??X@. CO??X@. CQ??,@. C!??D@. C#??D@. C%??D@. C1?&gt;H@. DF?&gt;H@. DH?&gt;H@. DJ?&gt;H@. DO??X@. DQ??X@. DS??X@. DU??X@. D[??D@. D]?&gt;0@. D!?&gt;0@. D#?&gt;0@. D%?&gt;0@. D+??D@. D-??D@. D/??D@. D1??D@. D3??D@. D9??D@. D&lt;??D@. D&gt;??D@. E@??D@. H2??D@. W.?&gt;H@. X"??X@. X,?&gt;0@. X.?&gt;0@. X6?&gt;0@. X8?&gt;0@. Z:??D@. %+?&gt;0@. %,?&gt;0@. %-?&gt;0@. %.?&gt;0@. %/?&gt;0@.0@O?= @.0@P?= @.0@Q?= @.0AD??D@.0AG??D@.0AH??X@.0AI??D@.0AJ??D@.0AK?&gt;0@.0AL?&gt;0@.0AO?&gt;0@.0AS??,@.0AT??D@.0AU??X@.0AV??X@.0AW??D@.0A-?= @.0A=?&gt;H@.0B"??D@.0B#??D@.0B$??D@.0B%??D@.0B&amp;??D@.0B''??D@.0B(??D@.0B*??X@.0B+??X@.0B,??X@.0B-??X@.0B/?&gt;0@.0CC??D@.0CE??D@.0CG??D@.0CQ??D@.0CU??X@.0CW??X@.0C!??D@.0C#??D@.0C%??D@.0C1?&gt;0@.0D[??X@.0D]??X@.0D!??X@.0D#??X@.0D%??D@.0W.?&gt;0@.0X"??,@.0X,??X@.0X.??X@.0X6??D@.0X8??D@.0_C?= @.0_F?= @.0_G?= @.0_#?= @.0_$?&gt;H@.0%+??D@.0%,??D@.0%-??D@.0%.??D@.0%/??D@/@@O?= @/@@P?= @/@@Q?= @/@AD??D@/@AG??D@/@AH??X@/@AI??D@/@AJ??D@/@AK?&gt;0@/@AL?&gt;0@/@AO?&gt;0@/@AS??,@/@AT??D@/@AU??X@/@AV??X@/@AW??D@/@A-?= @/@A=?&gt;H@/@B"??D@/@B#??D@/@B$??D@/@B%??D@/@B&amp;??D@/@B''??D@/@B(??D@/@B*??X@/@B+??X@/@B,??X@/@B-??X@/@B/?&gt;0@/@CC??D@/@CE??D@/@CG??D@/@CQ??D@/@CU??X@/@CW??X@/@C!??D@/@C#??D@/@C%??D@/@C1?&gt;0@/@D[??X@/@D]??X@/@D!??X@/@D#??X@/@D%??D@/@W.?&gt;0@/@X"??,@/@X,??X@/@X.??X@/@X6??D@/@X8??D@/@_C?= @/@_F?= @/@_G?= @/@_#?= @/@_$?&gt;H@/@%+??D@/@%,??D@/@%-??D@/@%.??D@/@%/??D@/P@O?= @/P@P?= @/P@Q?= @/PAD??D@/PAG??D@/PAH??X@/PAI??D@/PAJ??D@/PAK?&gt;0@/PAL?&gt;0@/PAO?&gt;0@/PAS??,@/PAT??D@/PAU??X@/PAV??X@/PAW??D@/PA-?= @/PA=?&gt;H@/PB"??D@/PB#??D@/PB$??D@/PB%??D@/PB&amp;??D@/PB''??D@/PB(??D@/PB*??X@/PB+??X@/PB,??X@/PB-??X@/PB/?&gt;0@/PCC??D@/PCE??D@/PCG??D@/PCQ??D@/PCU??X@/PCW??X@/PC!??D@/PC#??D@/PC%??D@/PC1?&gt;0@/PD[??X@/PD]??X@/PD!??X@/PD#??X@/PD%??D@/PW.?&gt;0@/PX"??,@/PX,??X@/PX.??X@/PX6??D@/PX8??D@/P_C?= @/P_F?= @/P_G?= @/P_#?= @/P_$?&gt;H@/P%+??D@/P%,??D@/P%-??D@/P%.??D@/P%/??D@/ @O?= @/ @P?= @/ @Q?= @/ AD??D@/ AG??D@/ AH??X@/ AI??D@/ AJ??D@/ AK?&gt;0@/ AL?&gt;0@/ AO?&gt;0@/ AS??,@/ AT??D@/ AU??X@/ AV??X@/ AW??D@/ A-?= @/ A=?&gt;H@/ B"??D@/ B#??D@/ B$??D@/ B%??D@/ B&amp;??D@/ B''??D@/ B(??D@/ B*??X@/ B+??X@/ B,??X@/ B-??X@/ B/?&gt;0@/ CC??D@/ CE??D@/ CG??D@/ CQ??D@/ CU??X@/ CW??X@/ C!??D@/ C#??D@/ C%??D@/ C1?&gt;0@/ D[??X@/ D]??X@/ D!??X@/ D#??X@/ D%??D@/ W.?&gt;0@/ X"??,@/ X,??X@/ X.??X@/ X6??D@/ X8??D@/ _C?= @/ _F?= @/ _G?= @/ _#?= @/ _$?&gt;H@/ %+??D@/ %,??D@/ %-??D@/ %.??D@/ %/??D@/0@O?&lt;8@/0@P?&gt;0@/0@Q?&lt;8@/0AD?&gt;0@/0AF??X@/0AG?&gt;0@/0AH??X@/0AI??,@/0AJ?&gt;0@/0AK?&gt;0@/0AL?&gt;0@/0AM??D@/0AO?&gt;0@/0AP?&gt;H@/0AQ?&gt;H@/0AR??X@/0AS??D@/0AT?&gt;0@/0AU?&gt;\@/0AV?&gt;0@/0AW??,@/0AX?&gt;\@/0AY??D@/0AZ??D@/0A[??D@/0A\??D@/0A]??,@/0A-?&gt;0@/0A=?= @/0B"?&gt;0@/0B#?&gt;0@/0B$?&gt;0@/0B%?&gt;0@/0B&amp;?&gt;0@/0B''?&gt;0@/0B(?&gt;0@/0B)??X@/0B*??X@/0B+??X@/0B,??X@/0B-??X@/0B/?&gt;0@/0B3?&gt;H@/0B4??X@/0B5??X@/0B6??X@/0B7??X@/0B8??X@/0B;?&gt;\@/0B&lt;?&gt;\@/0B=?&gt;\@/0B&gt;?&gt;\@/0B???D@/0CA??D@/0CC?&gt;0@/0CE?&gt;0@/0CG?&gt;0@/0CK??X@/0CO??X@/0CQ?&gt;0@/0CU??X@/0CW??X@/0C!?&gt;0@/0C#?&gt;0@/0C%?&gt;0@/0C1?&gt;0@/0DF?&gt;H@/0DH?&gt;H@/0DJ?&gt;H@/0DO??X@/0DQ??X@/0DS??X@/0DU??X@/0D[?&gt;\@/0D]?&gt;0@/0D!?&gt;0@/0D#?&gt;0@/0D%??,@/0D+?&gt;\@/0D-?&gt;\@/0D/?&gt;\@/0D1?&gt;\@/0D3?&gt;\@/0D9??D@/0D&lt;??,@/0D&gt;??,@/0E@??,@/0H2??,@/0W.?&gt;0@/0X"??D@/0X,?&gt;0@/0X.?&gt;0@/0X6??,@/0X8??,@/0Z:??D@/0_C?&gt;0@/0_F?&gt;0@/0_G?&gt;0@/0_#?&gt;0@/0_$?= @/0%+??,@/0%,??,@/0%-??,@/0%.??,@/0%/??,@0P@O?&lt;8@0P@P?&gt;0@0P@Q?&lt;8@0PAD?&gt;0@0PAF??X@0PAG?&gt;0@0PAH??X@0PAI??,@0PAJ?&gt;0@0PAK?&gt;0@0PAL?&gt;0@0PAM??D@0PAO?&gt;0@0PAP?&gt;H@0PAQ?&gt;H@0PAR??X@0PAS??D@0PAT?&gt;0@0PAU?&gt;\@0PAV?&gt;0@0PAW??,@0PAX?&gt;\@0PAY??D@0PAZ??D@0PA[??D@0PA\??D@0PA]??,@0PA-?&gt;0@0PA=?= @0PB"?&gt;0@0PB#?&gt;0@0PB$?&gt;0@0PB%?&gt;0@0PB&amp;?&gt;0@0PB''?&gt;0@0PB(?&gt;0@0PB)??X@0PB*??X@0PB+??X@0PB,??X@0PB-??X@0PB/?&gt;0@0PB3?&gt;H@0PB4??X@0PB5??X@0PB6??X@0PB7??X@0PB8??X@0PB;?&gt;\@0PB&lt;?&gt;\@0PB=?&gt;\@0PB&gt;?&gt;\@0PB???D@0PCA??D@0PCC?&gt;0@0PCE?&gt;0@0PCG?&gt;0@0PCK??X@0PCO??X@0PCQ?&gt;0@0PCU??X@0PCW??X@0PC!?&gt;0@0PC#?&gt;0@0PC%?&gt;0@0PC1?&gt;0@0PDF?&gt;H@0PDH?&gt;H@0PDJ?&gt;H@0PDO??X@0PDQ??X@0PDS??X@0PDU??X@0PD[?&gt;\@0PD]?&gt;0@0PD!?&gt;0@0PD#?&gt;0@0PD%??,@0PD+?&gt;\@0PD-?&gt;\@0PD/?&gt;\@0PD1?&gt;\@0PD3?&gt;\@0PD9??D@0PD&lt;??,@0PD&gt;??,@0PE@??,@0PH2??,@0PW.?&gt;0@0PX"??D@0PX,?&gt;0@0PX.?&gt;0@0PX6??,@0PX8??,@0PZ:??D@0P_C?&gt;0@0P_F?&gt;0@0P_G?&gt;0@0P_#?&gt;0@0P_$?= @0P%+??,@0P%,??,@0P%-??,@0P%.??,@0P%/??,@0 @O?&gt;0@0 @P?= @0 @Q?&gt;0@0 @&amp;?= @0 @(?&lt;8@0 @)?&lt;$@0 @*?= @0 @+?= @0 @,?&gt;H@0 @.?&lt;$@0 @/?&lt;8@0 @0?= @0 @1?= @0 @2?= @0 @4?= @0 @6?&gt;H@0 @7?= @0 @9?&lt;P@0 @:?&lt;P@0 @;??X@0 @&lt;?&lt;P@0 @=??X@0 AD?&gt;0@0 AF?&gt;0@0 AG?&gt;0@0 AH??D@0 AI?&gt;H@0 AJ?&gt;0@0 AP?&gt;H@0 AQ?&gt;H@0 AR?&gt;0@0 AS?&gt;0@0 AT?&gt;0@0 AU?&gt;H@0 AV?&gt;0@0 AW?&gt;H@0 AX?&gt;\@0 AY?&gt;H@0 AZ?&gt;H@0 A\?&gt;H@0 A]?&gt;H@0 A-?= @0 A=?= @0 BI?= @0 BJ?&lt;8@0 BK?&lt;8@0 BL?&lt;8@0 BM?&lt;8@0 BN?&gt;H@0 BO?&gt;H@0 BP?&gt;H@0 BQ?&gt;H@0 BT?= @0 BU?= @0 BV?= @0 BW?= @0 BX?= @0 BZ?= @0 B_?&lt;P@0 B"?&gt;0@0 B#?&gt;0@0 B$?&gt;0@0 B%?&gt;0@0 B&amp;?&gt;0@0 B''?&gt;0@0 B(?&gt;0@0 B)?&gt;0@0 B*??D@0 B+??D@0 B,??D@0 B-??D@0 B2?&gt;0@0 B3?&gt;H@0 B4?&gt;0@0 B5?&gt;0@0 B6?&gt;0@0 B7?&gt;0@0 B8?&gt;0@0 B:?&gt;0@0 B;?&gt;\@0 B&lt;?&gt;\@0 B=?&gt;\@0 B&gt;?&gt;\@0 B??&gt;H@0 CA?&gt;H@0 CC?&gt;0@0 CE?&gt;0@0 CG?&gt;0@0 CH?= @0 CJ?= @0 CK?&gt;0@0 CL?= @0 CN?= @0 CO?&gt;0@0 CQ?&gt;0@0 CT?&lt;8@0 CU??D@0 CW??D@0 CZ?&lt;8@0 C[??D@0 C\?&lt;8@0 C^?= @0 C ?= @0 C!?&gt;0@0 C"?= @0 C#?&gt;0@0 C$?= @0 C%?&gt;0@0 C8?&lt;$@0 C;?&lt;8@0 C=?&lt;8@0 C??&lt;8@0 DC?&lt;8@0 DF?&gt;H@0 DH?&gt;H@0 DJ?&gt;H@0 DN?= @0 DO?&gt;0@0 DP?= @0 DQ?&gt;0@0 DR?= @0 DS?&gt;0@0 DT?= @0 DU?&gt;0@0 D[?&gt;H@0 D\?&gt;H@0 D]?&gt;0@0 D ?&gt;H@0 D!?&gt;0@0 D"?&gt;H@0 D#?&gt;0@0 D$?= @0 D%?&gt;H@0 D&amp;?= @0 D+?&gt;\@0 D-?&gt;\@0 D/?&gt;\@0 D1?&gt;\@0 D3?&gt;\@0 D8?&lt;P@0 D9?&gt;H@0 D:?&lt;P@0 D;??X@0 D&lt;?&gt;H@0 D=??X@0 D&gt;?&gt;H@0 D???X@0 E@?&gt;H@0 W)?&lt;$@0 XL?&gt;H@0 X"?&gt;0@0 X+?&gt;H@0 X,?&gt;0@0 X-?&gt;H@0 X.?&gt;0@0 X5?= @0 X6?&gt;H@0 X7?= @0 X8?&gt;H@0 ZC?&lt;8@0 Z9?&lt;P@0 Z:?&gt;H@0 _C?&lt;P@0 _F?&lt;P@0 _G?&lt;P@0 _#?= @0 _$?= @0 %+?&gt;H@0 %,?&gt;H@0 %.?&gt;H@0 %/?&gt;H@00@O?&gt;0@00@P?= @00@Q?&gt;0@00AD??X@00AF??X@00AI?&gt;0@00AJ??X@00AK??D@00AL??D@00AO??D@00AP??X@00AQ??X@00AR??X@00AU??X@00AV??X@00AW?&gt;0@00AX??X@00AY?&gt;0@00AZ?&gt;0@00A[??D@00A\?&gt;0@00A-?= @00A=?= @00B"??X@00B#??X@00B$??X@00B%??X@00B&amp;??X@00B''??X@00B(??X@00B)??X@00B/??D@00B3??X@00B4??X@00B5??X@00B6??X@00B7??X@00B8??X@00B;??X@00B&lt;??X@00B=??X@00B&gt;??X@00B??&gt;0@00CA?&gt;0@00CC??X@00CE??X@00CG??X@00CK??X@00CO??X@00C!??X@00C#??X@00C%??X@00C1??D@00DF??X@00DH??X@00DJ??X@00DO??X@00DQ??X@00DS??X@00DU??X@00D[??X@00D]??X@00D!??X@00D#??X@00D%?&gt;0@00D+??X@00D-??X@00D/??X@00D1??X@00D3??X@00D9?&gt;0@00W.??D@00X,??X@00X.??X@00X6?&gt;0@00X8?&gt;0@00Z:?&gt;0@00_C?&lt;P@00_F?&lt;P@00_G?&lt;P@00_#?= @00_$?= @00%+?&gt;0@00%,?&gt;0@00%-?&gt;0@00%.?&gt;0@00%/?&gt;0@1@@O?&gt;0@1@@P?= @1@@Q?&gt;0@1@@&amp;?= @1@@(?&lt;8@1@@)?&lt;$@1@@*?= @1@@+?= @1@@,?&gt;H@1@@.?&lt;$@1@@/?&lt;8@1@@0?= @1@@1?= @1@@2?= @1@@4?= @1@@6?&gt;H@1@@7?= @1@@9?&lt;P@1@@:?&lt;P@1@@;??X@1@@&lt;?&lt;P@1@@=??X@1@AD?&gt;0@1@AF?&gt;0@1@AG?&gt;0@1@AH??D@1@AI?&gt;H@1@AJ?&gt;0@1@AP?&gt;H@1@AQ?&gt;H@1@AR?&gt;0@1@AS?&gt;0@1@AT?&gt;0@1@AU?&gt;H@1@AV?&gt;0@1@AW?&gt;H@1@AX?&gt;\@1@AY?&gt;H@1@AZ?&gt;H@1@A\?&gt;H@1@A]?&gt;H@1@A-?= @1@A=?= @1@BI?= @1@BJ?&lt;8@1@BK?&lt;8@1@BL?&lt;8@1@BM?&lt;8@1@BN?&gt;H@1@BO?&gt;H@1@BP?&gt;H@1@BQ?&gt;H@1@BT?= @1@BU?= @1@BV?= @1@BW?= @1@BX?= @1@BZ?= @1@B_?&lt;P@1@B"?&gt;0@1@B#?&gt;0@1@B$?&gt;0@1@B%?&gt;0@1@B&amp;?&gt;0@1@B''?&gt;0@1@B(?&gt;0@1@B)?&gt;0@1@B*??D@1@B+??D@1@B,??D@1@B-??D@1@B2?&gt;0@1@B3?&gt;H@1@B4?&gt;0@1@B5?&gt;0@1@B6?&gt;0@1@B7?&gt;0@1@B8?&gt;0@1@B:?&gt;0@1@B;?&gt;\@1@B&lt;?&gt;\@1@B=?&gt;\@1@B&gt;?&gt;\@1@B??&gt;H@1@CA?&gt;H@1@CC?&gt;0@1@CE?&gt;0@1@CG?&gt;0@1@CH?= @1@CJ?= @1@CK?&gt;0@1@CL?= @1@CN?= @1@CO?&gt;0@1@CQ?&gt;0@1@CT?&lt;8@1@CU??D@1@CW??D@1@CZ?&lt;8@1@C[??D@1@C\?&lt;8@1@C^?= @1@C ?= @1@C!?&gt;0@1@C"?= @1@C#?&gt;0@1@C$?= @1@C%?&gt;0@1@C8?&lt;$@1@C;?&lt;8@1@C=?&lt;8@1@C??&lt;8@1@DC?&lt;8@1@DF?&gt;H@1@DH?&gt;H@1@DJ?&gt;H@1@DN?= @1@DO?&gt;0@1@DP?= @1@DQ?&gt;0@1@DR?= @1@DS?&gt;0@1@DT?= @1@DU?&gt;0@1@D[?&gt;H@1@D\?&gt;H@1@D]?&gt;0@1@D ?&gt;H@1@D!?&gt;0@1@D"?&gt;H@1@D#?&gt;0@1@D$?= @1@D%?&gt;H@1@D&amp;?= @1@D+?&gt;\@1@D-?&gt;\@1@D/?&gt;\@1@D1?&gt;\@1@D3?&gt;\@1@D8?&lt;P@1@D9?&gt;H@1@D:?&lt;P@1@D;??X@1@D&lt;?&gt;H@1@D=??X@1@D&gt;?&gt;H@1@D???X@1@E@?&gt;H@1@W)?&lt;$@1@XL?&gt;H@1@X"?&gt;0@1@X+?&gt;H@1@X,?&gt;0@1@X-?&gt;H@1@X.?&gt;0@1@X5?= @1@X6?&gt;H@1@X7?= @1@X8?&gt;H@1@ZC?&lt;8@1@Z9?&lt;P@1@Z:?&gt;H@1@_C?&lt;P@1@_F?&lt;P@1@_G?&lt;P@1@_#?= @1@_$?= @1@%+?&gt;H@1@%,?&gt;H@1@%.?&gt;H@1@%/?&gt;H@1P@O?&gt;0@1P@P?= @1P@Q?&gt;0@1PAD??X@1PAF??X@1PAI?&gt;0@1PAJ??X@1PAK??D@1PAL??D@1PAO??D@1PAP??X@1PAQ??X@1PAR??X@1PAU??X@1PAV??X@1PAW?&gt;0@1PAX??X@1PAY?&gt;0@1PAZ?&gt;0@1PA[??D@1PA\?&gt;0@1PA-?= @1PA=?= @1PB"??X@1PB#??X@1PB$??X@1PB%??X@1PB&amp;??X@1PB''??X@1PB(??X@1PB)??X@1PB/??D@1PB3??X@1PB4??X@1PB5??X@1PB6??X@1PB7??X@1PB8??X@1PB;??X@1PB&lt;??X@1PB=??X@1PB&gt;??X@1PB??&gt;0@1PCA?&gt;0@1PCC??X@1PCE??X@1PCG??X@1PCK??X@1PCO??X@1PC!??X@1PC#??X@1PC%??X@1PC1??D@1PDF??X@1PDH??X@1PDJ??X@1PDO??X@1PDQ??X@1PDS??X@1PDU??X@1PD[??X@1PD]??X@1PD!??X@1PD#??X@1PD%?&gt;0@1PD+??X@1PD-??X@1PD/??X@1PD1??X@1PD3??X@1PD9?&gt;0@1PW.??D@1PX,??X@1PX.??X@1PX6?&gt;0@1PX8?&gt;0@1PZ:?&gt;0@1P_C?&lt;P@1P_F?&lt;P@1P_G?&lt;P@1P_#?= @1P_$?= @1P%+?&gt;0@1P%,?&gt;0@1P%-?&gt;0@1P%.?&gt;0@1P%/?&gt;0@1 @&amp;?= @1 @(?&lt;8@1 @)?&lt;$@1 @*?= @1 @+?= @1 @,?&gt;H@1 @.?&lt;$@1 @/?&lt;8@1 @0?= @1 @1?= @1 @2?= @1 @4?= @1 @6?&gt;H@1 @7?= @1 @9?&lt;P@1 @:?&lt;P@1 @;??X@1 @&lt;?&lt;P@1 @=??X@1 AD?&gt;0@1 AF?&gt;0@1 AG?&gt;0@1 AH??D@1 AI?&gt;H@1 AJ?&gt;0@1 AP?&gt;H@1 AQ?&gt;H@1 AR?&gt;0@1 AS?&gt;0@1 AT?&gt;0@1 AU?&gt;H@1 AV?&gt;0@1 AW?&gt;H@1 AX?&gt;\@1 AY?&gt;H@1 AZ?&gt;H@1 A\?&gt;H@1 A]?&gt;H@1 BI?= @1 BJ?&lt;8@1 BK?&lt;8@1 BL?&lt;8@1 BM?&lt;8@1 BN?&gt;H@1 BO?&gt;H@1 BP?&gt;H@1 BQ?&gt;H@1 BT?= @1 BU?= @1 BV?= @1 BW?= @1 BX?= @1 BZ?= @1 B_?&lt;P@1 B"?&gt;0@1 B#?&gt;0@1 B$?&gt;0@1 B%?&gt;0@1 B&amp;?&gt;0@1 B''?&gt;0@1 B(?&gt;0@1 B)?&gt;0@1 B*??D@1 B+??D@1 B,??D@1 B-??D@1 B2?&gt;0@1 B3?&gt;H@1 B4?&gt;0@1 B5?&gt;0@1 B6?&gt;0@1 B7?&gt;0@1 B8?&gt;0@1 B:?&gt;0@1 B;?&gt;\@1 B&lt;?&gt;\@1 B=?&gt;\@1 B&gt;?&gt;\@1 B??&gt;H@1 CA?&gt;H@1 CC?&gt;0@1 CE?&gt;0@1 CG?&gt;0@1 CH?= @1 CJ?= @1 CK?&gt;0@1 CL?= @1 CN?= @1 CO?&gt;0@1 CQ?&gt;0@1 CT?&lt;8@1 CU??D@1 CW??D@1 CZ?&lt;8@1 C[??D@1 C\?&lt;8@1 C^?= @1 C ?= @1 C!?&gt;0@1 C"?= @1 C#?&gt;0@1 C$?= @1 C%?&gt;0@1 C8?&lt;$@1 C;?&lt;8@1 C=?&lt;8@1 C??&lt;8@1 DC?&lt;8@1 DF?&gt;H@1 DH?&gt;H@1 DJ?&gt;H@1 DN?= @1 DO?&gt;0@1 DP?= @1 DQ?&gt;0@1 DR?= @1 DS?&gt;0@1 DT?= @1 DU?&gt;0@1 D[?&gt;H@1 D\?&gt;H@1 D]?&gt;0@1 D ?&gt;H@1 D!?&gt;0@1 D"?&gt;H@1 D#?&gt;0@1 D$?= @1 D%?&gt;H@1 D&amp;?= @1 D+?&gt;\@1 D-?&gt;\@1 D/?&gt;\@1 D1?&gt;\@1 D3?&gt;\@1 D8?&lt;P@1 D9?&gt;H@1 D:?&lt;P@1 D;??X@1 D&lt;?&gt;H@1 D=??X@1 D&gt;?&gt;H@1 D???X@1 E@?&gt;H@1 W)?&lt;$@1 XL?&gt;H@1 X"?&gt;0@1 X+?&gt;H@1 X,?&gt;0@1 X-?&gt;H@1 X.?&gt;0@1 X5?= @1 X6?&gt;H@1 X7?= @1 X8?&gt;H@1 ZC?&lt;8@1 Z9?&lt;P@1 Z:?&gt;H@1 %+?&gt;H@1 %,?&gt;H@1 %.?&gt;H@1 %/?&gt;H@10AD??X@10AF??X@10AI?&gt;0@10AJ??X@10AK??D@10AL??D@10AO??D@10AP??X@10AQ??X@10AR??X@10AU??X@10AV??X@10AW?&gt;0@10AX??X@10AY?&gt;0@10AZ?&gt;0@10A[??D@10A\?&gt;0@10B"??X@10B#??X@10B$??X@10B%??X@10B&amp;??X@10B''??X@10B(??X@10B)??X@10B/??D@10B3??X@10B4??X@10B5??X@10B6??X@10B7??X@10B8??X@10B;??X@10B&lt;??X@10B=??X@10B&gt;??X@10B??&gt;0@10CA?&gt;0@10CC??X@10CE??X@10CG??X@10CK??X@10CO??X@10C!??X@10C#??X@10C%??X@10C1??D@10DF??X@10DH??X@10DJ??X@10DO??X@10DQ??X@10DS??X@10DU??X@10D[??X@10D]??X@10D!??X@10D#??X@10D%?&gt;0@10D+??X@10D-??X@10D/??X@10D1??X@10D3??X@10D9?&gt;0@10W.??D@10X,??X@10X.??X@10X6?&gt;0@10X8?&gt;0@10Z:?&gt;0@10%+?&gt;0@10%,?&gt;0@10%-?&gt;0@10%.?&gt;0@10%/?&gt;0@2@@O?&gt;H@2@@Q?&gt;H@2@@$?= @2@@&amp;?&gt;0@2@@(?=L@2@@)?&lt;8@2@@*?&gt;0@2@@+?= @2@@,?&gt;H@2@@.?&lt;8@2@@/?=L@2@@0?= @2@@1?= @2@@2?&gt;0@2@@4?&gt;0@2@@6??X@2@@7?= @2@@9?&lt;8@2@@:?&lt;8@2@@;?= @2@@&lt;?&lt;8@2@@=?= @2@AD?&gt;0@2@AI?&gt;0@2@AJ?&gt;0@2@AM?&gt;H@2@AP?&gt;H@2@AQ?&gt;H@2@AS?&gt;0@2@AU?&gt;0@2@AV?&gt;0@2@AW?&gt;0@2@AX?&gt;H@2@AY??X@2@AZ??X@2@A[?&gt;H@2@A\??X@2@A]?&gt;H@2@A=?&gt;0@2@BB?= @2@BC?= @2@BD?= @2@BE?= @2@BF?= @2@BG?= @2@BH?= @2@BI?&gt;0@2@BJ?=L@2@BK?=L@2@BL?=L@2@BM?=L@2@BN?&gt;H@2@BO?&gt;H@2@BP?&gt;H@2@BQ?&gt;H@2@BT?&gt;0@2@BU?&gt;0@2@BV?&gt;0@2@BW?&gt;0@2@BX?&gt;0@2@BZ?&gt;0@2@B_?&lt;8@2@B"?&gt;0@2@B#?&gt;0@2@B$?&gt;0@2@B%?&gt;0@2@B&amp;?&gt;0@2@B''?&gt;0@2@B(?&gt;0@2@B3?&gt;H@2@B;?&gt;H@2@B&lt;?&gt;H@2@B=?&gt;H@2@B&gt;?&gt;H@2@B???X@2@CA??X@2@CB?= @2@CC?&gt;0@2@CD?= @2@CE?&gt;0@2@CF?= @2@CG?&gt;0@2@CH?&gt;0@2@CJ?&gt;0@2@CL?&gt;0@2@CN?&gt;0@2@CT?=L@2@CZ?=L@2@C\?=L@2@C^?&gt;0@2@C ?&gt;0@2@C!?&gt;0@2@C"?&gt;0@2@C#?&gt;0@2@C$?&gt;0@2@C%?&gt;0@2@C8?&lt;8@2@C;?=L@2@C=?=L@2@C??=L@2@DC?=L@2@DF?&gt;H@2@DH?&gt;H@2@DJ?&gt;H@2@DN?&gt;0@2@DP?&gt;0@2@DR?&gt;0@2@DT?&gt;0@2@D[?&gt;0@2@D\??X@2@D]?&gt;0@2@D ??X@2@D!?&gt;0@2@D"??X@2@D#?&gt;0@2@D$?= @2@D%?&gt;0@2@D&amp;?= @2@D+?&gt;H@2@D-?&gt;H@2@D/?&gt;H@2@D1?&gt;H@2@D3?&gt;H@2@D8?&lt;8@2@D9??X@2@D:?&lt;8@2@D;?= @2@D&lt;?&gt;H@2@D=?= @2@D&gt;?&gt;H@2@D??= @2@E@?&gt;H@2@W)?&lt;8@2@XL?&gt;H@2@X"?&gt;0@2@X+??X@2@X,?&gt;0@2@X-??X@2@X.?&gt;0@2@X5?= @2@X6?&gt;0@2@X7?= @2@X8?&gt;0@2@ZC?=L@2@Z9?&lt;8@2@Z:??X@2@_C?= @2@_F?= @2@_G?= @2@_$?&gt;0@2@%+?&gt;0@2@%,?&gt;0@2@%.?&gt;0@2@%/?&gt;0@2PAD??X@2PAF??,@2PAI??D@2PAJ??X@2PAK??D@2PAL??D@2PAO??D@2PAP?&gt;0@2PAQ?&gt;0@2PAR??,@2PAS??,@2PAU??X@2PAV??D@2PAW??D@2PAX??X@2PAY??X@2PAZ??X@2PA[?&gt;\@2PA\??X@2PA]??X@2PB"??X@2PB#??X@2PB$??X@2PB%??X@2PB&amp;??X@2PB''??X@2PB(??X@2PB)??,@2PB/??D@2PB3?&gt;0@2PB4??,@2PB5??,@2PB6??,@2PB7??,@2PB8??,@2PB;??X@2PB&lt;??X@2PB=??X@2PB&gt;??X@2PB???X@2PCA??X@2PCC??X@2PCE??X@2PCG??X@2PCK??,@2PCO??,@2PC!??X@2PC#??X@2PC%??X@2PC1??D@2PDF?&gt;0@2PDH?&gt;0@2PDJ?&gt;0@2PDO??,@2PDQ??,@2PDS??,@2PDU??,@2PD[??X@2PD]??D@2PD!??D@2PD#??D@2PD%??D@2PD+??X@2PD-??X@2PD/??X@2PD1??X@2PD3??X@2PD9??X@2PD&lt;??X@2PD&gt;??X@2PE@??X@2PH2??X@2PW.??D@2PX"??,@2PX,??D@2PX.??D@2PX6??D@2PX8??D@2PZ:??X@2P%+??D@2P%,??D@2P%-??D@2P%.??D@2P%/??D@2 @O?&gt;H@2 @Q?&gt;H@2 @$?= @2 @&amp;?&gt;0@2 @(?=L@2 @)?&lt;8@2 @*?&gt;0@2 @+?= @2 @,?&gt;H@2 @.?&lt;8@2 @/?=L@2 @0?= @2 @1?= @2 @2?&gt;0@2 @4?&gt;0@2 @6??X@2 @7?= @2 @9?&lt;8@2 @:?&lt;8@2 @;?= @2 @&lt;?&lt;8@2 @=?= @2 AD?&gt;0@2 AI?&gt;0@2 AJ?&gt;0@2 AM?&gt;H@2 AP?&gt;H@2 AQ?&gt;H@2 AS?&gt;0@2 AU?&gt;0@2 AV?&gt;0@2 AW?&gt;0@2 AX?&gt;H@2 AY??X@2 AZ??X@2 A[?&gt;H@2 A\??X@2 A]?&gt;H@2 A=?&gt;0@2 BB?= @2 BC?= @2 BD?= @2 BE?= @2 BF?= @2 BG?= @2 BH?= @2 BI?&gt;0@2 BJ?=L@2 BK?=L@2 BL?=L@2 BM?=L@2 BN?&gt;H@2 BO?&gt;H@2 BP?&gt;H@2 BQ?&gt;H@2 BT?&gt;0@2 BU?&gt;0@2 BV?&gt;0@2 BW?&gt;0@2 BX?&gt;0@2 BZ?&gt;0@2 B_?&lt;8@2 B"?&gt;0@2 B#?&gt;0@2 B$?&gt;0@2 B%?&gt;0@2 B&amp;?&gt;0@2 B''?&gt;0@2 B(?&gt;0@2 B3?&gt;H@2 B;?&gt;H@2 B&lt;?&gt;H@2 B=?&gt;H@2 B&gt;?&gt;H@2 B???X@2 CA??X@2 CB?= @2 CC?&gt;0@2 CD?= @2 CE?&gt;0@2 CF?= @2 CG?&gt;0@2 CH?&gt;0@2 CJ?&gt;0@2 CL?&gt;0@2 CN?&gt;0@2 CT?=L@2 CZ?=L@2 C\?=L@2 C^?&gt;0@2 C ?&gt;0@2 C!?&gt;0@2 C"?&gt;0@2 C#?&gt;0@2 C$?&gt;0@2 C%?&gt;0@2 C8?&lt;8@2 C;?=L@2 C=?=L@2 C??=L@2 DC?=L@2 DF?&gt;H@2 DH?&gt;H@2 DJ?&gt;H@2 DN?&gt;0@2 DP?&gt;0@2 DR?&gt;0@2 DT?&gt;0@2 D[?&gt;0@2 D\??X@2 D]?&gt;0@2 D ??X@2 D!?&gt;0@2 D"??X@2 D#?&gt;0@2 D$?= @2 D%?&gt;0@2 D&amp;?= @2 D+?&gt;H@2 D-?&gt;H@2 D/?&gt;H@2 D1?&gt;H@2 D3?&gt;H@2 D8?&lt;8@2 D9??X@2 D:?&lt;8@2 D;?= @2 D&lt;?&gt;H@2 D=?= @2 D&gt;?&gt;H@2 D??= @2 E@?&gt;H@2 W)?&lt;8@2 XL?&gt;H@2 X"?&gt;0@2 X+??X@2 X,?&gt;0@2 X-??X@2 X.?&gt;0@2 X5?= @2 X6?&gt;0@2 X7?= @2 X8?&gt;0@2 ZC?=L@2 Z9?&lt;8@2 Z:??X@2 _C?= @2 _F?= @2 _G?= @2 _$?&gt;0@2 %+?&gt;0@2 %,?&gt;0@2 %.?&gt;0@2 %/?&gt;0@20@O?&gt;0@20@Q?&gt;0@20AD??X@20AF??,@20AI??D@20AJ??X@20AK??D@20AL??D@20AO??D@20AP?&gt;0@20AQ?&gt;0@20AR??,@20AS??,@20AU??X@20AV??D@20AW??D@20AX??X@20AY??X@20AZ??X@20A[?&gt;\@20A\??X@20A]??X@20A=?&gt;0@20B"??X@20B#??X@20B$??X@20B%??X@20B&amp;??X@20B''??X@20B(??X@20B)??,@20B/??D@20B3?&gt;0@20B4??,@20B5??,@20B6??,@20B7??,@20B8??,@20B;??X@20B&lt;??X@20B=??X@20B&gt;??X@20B???X@20CA??X@20CC??X@20CE??X@20CG??X@20CK??,@20CO??,@20C!??X@20C#??X@20C%??X@20C1??D@20DF?&gt;0@20DH?&gt;0@20DJ?&gt;0@20DO??,@20DQ??,@20DS??,@20DU??,@20D[??X@20D]??D@20D!??D@20D#??D@20D%??D@20D+??X@20D-??X@20D/??X@20D1??X@20D3??X@20D9??X@20D&lt;??X@20D&gt;??X@20E@??X@20H2??X@20W.??D@20X"??,@20X,??D@20X.??D@20X6??D@20X8??D@20Z:??X@20_C?= @20_F?= @20_G?= @20_$?&gt;0@20%+??D@20%,??D@20%-??D@20%.??D@20%/??D@3@@O?&gt;H@3@@Q?&gt;H@3@@$?= @3@@&amp;?&gt;0@3@@(?=L@3@@)?&lt;8@3@@*?&gt;0@3@@+?= @3@@,?&gt;H@3@@.?&lt;8@3@@/?=L@3@@0?= @3@@1?= @3@@2?&gt;0@3@@4?&gt;0@3@@6??X@3@@7?= @3@@9?&lt;8@3@@:?&lt;8@3@@;?= @3@@&lt;?&lt;8@3@@=?= @3@AD?&gt;0@3@AI?&gt;0@3@AJ?&gt;0@3@AM?&gt;H@3@AP?&gt;H@3@AQ?&gt;H@3@AS?&gt;0@3@AU?&gt;0@3@AV?&gt;0@3@AW?&gt;0@3@AX?&gt;H@3@AY??X@3@AZ??X@3@A[?&gt;H@3@A\??X@3@A]?&gt;H@3@A=?&gt;0@3@BB?= @3@BC?= @3@BD?= @3@BE?= @3@BF?= @3@BG?= @3@BH?= @3@BI?&gt;0@3@BJ?=L@3@BK?=L@3@BL?=L@3@BM?=L@3@BN?&gt;H@3@BO?&gt;H@3@BP?&gt;H@3@BQ?&gt;H@3@BT?&gt;0@3@BU?&gt;0@3@BV?&gt;0@3@BW?&gt;0@3@BX?&gt;0@3@BZ?&gt;0@3@B_?&lt;8@3@B"?&gt;0@3@B#?&gt;0@3@B$?&gt;0@3@B%?&gt;0@3@B&amp;?&gt;0@3@B''?&gt;0@3@B(?&gt;0@3@B3?&gt;H@3@B;?&gt;H@3@B&lt;?&gt;H@3@B=?&gt;H@3@B&gt;?&gt;H@3@B???X@3@CA??X@3@CB?= @3@CC?&gt;0@3@CD?= @3@CE?&gt;0@3@CF?= @3@CG?&gt;0@3@CH?&gt;0@3@CJ?&gt;0@3@CL?&gt;0@3@CN?&gt;0@3@CT?=L@3@CZ?=L@3@C\?=L@3@C^?&gt;0@3@C ?&gt;0@3@C!?&gt;0@3@C"?&gt;0@3@C#?&gt;0@3@C$?&gt;0@3@C%?&gt;0@3@C8?&lt;8@3@C;?=L@3@C=?=L@3@C??=L@3@DC?=L@3@DF?&gt;H@3@DH?&gt;H@3@DJ?&gt;H@3@DN?&gt;0@3@DP?&gt;0@3@DR?&gt;0@3@DT?&gt;0@3@D[?&gt;0@3@D\??X@3@D]?&gt;0@3@D ??X@3@D!?&gt;0@3@D"??X@3@D#?&gt;0@3@D$?= @3@D%?&gt;0@3@D&amp;?= @3@D+?&gt;H@3@D-?&gt;H@3@D/?&gt;H@3@D1?&gt;H@3@D3?&gt;H@3@D8?&lt;8@3@D9??X@3@D:?&lt;8@3@D;?= @3@D&lt;?&gt;H@3@D=?= @3@D&gt;?&gt;H@3@D??= @3@E@?&gt;H@3@W)?&lt;8@3@XL?&gt;H@3@X"?&gt;0@3@X+??X@3@X,?&gt;0@3@X-??X@3@X.?&gt;0@3@X5?= @3@X6?&gt;0@3@X7?= @3@X8?&gt;0@3@ZC?=L@3@Z9?&lt;8@3@Z:??X@3@_C?= @3@_F?= @3@_G?= @3@_$?&gt;0@3@%+?&gt;0@3@%,?&gt;0@3@%.?&gt;0@3@%/?&gt;0@3PAD??X@3PAF??,@3PAI??D@3PAJ??X@3PAK??D@3PAL??D@3PAO??D@3PAP?&gt;0@3PAQ?&gt;0@3PAR??,@3PAS??,@3PAU??X@3PAV??D@3PAW??D@3PAX??X@3PAY??X@3PAZ??X@3PA[?&gt;\@3PA\??X@3PA]??X@3PB"??X@3PB#??X@3PB$??X@3PB%??X@3PB&amp;??X@3PB''??X@3PB(??X@3PB)??,@3PB/??D@3PB3?&gt;0@3PB4??,@3PB5??,@3PB6??,@3PB7??,@3PB8??,@3PB;??X@3PB&lt;??X@3PB=??X@3PB&gt;??X@3PB???X@3PCA??X@3PCC??X@3PCE??X@3PCG??X@3PCK??,@3PCO??,@3PC!??X@3PC#??X@3PC%??X@3PC1??D@3PDF?&gt;0@3PDH?&gt;0@3PDJ?&gt;0@3PDO??,@3PDQ??,@3PDS??,@3PDU??,@3PD[??X@3PD]??D@3PD!??D@3PD#??D@3PD%??D@3PD+??X@3PD-??X@3PD/??X@3PD1??X@3PD3??X@3PD9??X@3PD&lt;??X@3PD&gt;??X@3PE@??X@3PH2??X@3PW.??D@3PX"??,@3PX,??D@3PX.??D@3PX6??D@3PX8??D@3PZ:??X@3P%+??D@3P%,??D@3P%-??D@3P%.??D@3P%/??D@3 @O?&gt;H@3 @Q?&gt;H@3 @$?= @3 @&amp;?&gt;0@3 @(?=L@3 @)?&lt;8@3 @*?&gt;0@3 @+?= @3 @,?&gt;H@3 @.?&lt;8@3 @/?=L@3 @0?= @3 @1?= @3 @2?&gt;0@3 @4?&gt;0@3 @6??X@3 @7?= @3 @9?&lt;8@3 @:?&lt;8@3 @;?= @3 @&lt;?&lt;8@3 @=?= @3 AD?&gt;0@3 AI?&gt;0@3 AJ?&gt;0@3 AM?&gt;H@3 AP?&gt;H@3 AQ?&gt;H@3 AS?&gt;0@3 AU?&gt;0@3 AV?&gt;0@3 AW?&gt;0@3 AX?&gt;H@3 AY??X@3 AZ??X@3 A[?&gt;H@3 A\??X@3 A]?&gt;H@3 A=?&gt;0@3 BB?= @3 BC?= @3 BD?= @3 BE?= @3 BF?= @3 BG?= @3 BH?= @3 BI?&gt;0@3 BJ?=L@3 BK?=L@3 BL?=L@3 BM?=L@3 BN?&gt;H@3 BO?&gt;H@3 BP?&gt;H@3 BQ?&gt;H@3 BT?&gt;0@3 BU?&gt;0@3 BV?&gt;0@3 BW?&gt;0@3 BX?&gt;0@3 BZ?&gt;0@3 B_?&lt;8@3 B"?&gt;0@3 B#?&gt;0@3 B$?&gt;0@3 B%?&gt;0@3 B&amp;?&gt;0@3 B''?&gt;0@3 B(?&gt;0@3 B3?&gt;H@3 B;?&gt;H@3 B&lt;?&gt;H@3 B=?&gt;H@3 B&gt;?&gt;H@3 B???X@3 CA??X@3 CB?= @3 CC?&gt;0@3 CD?= @3 CE?&gt;0@3 CF?= @3 CG?&gt;0@3 CH?&gt;0@3 CJ?&gt;0@3 CL?&gt;0@3 CN?&gt;0@3 CT?=L@3 CZ?=L@3 C\?=L@3 C^?&gt;0@3 C ?&gt;0@3 C!?&gt;0@3 C"?&gt;0@3 C#?&gt;0@3 C$?&gt;0@3 C%?&gt;0@3 C8?&lt;8@3 C;?=L@3 C=?=L@3 C??=L@3 DC?=L@3 DF?&gt;H@3 DH?&gt;H@3 DJ?&gt;H@3 DN?&gt;0@3 DP?&gt;0@3 DR?&gt;0@3 DT?&gt;0@3 D[?&gt;0@3 D\??X@3 D]?&gt;0@3 D ??X@3 D!?&gt;0@3 D"??X@3 D#?&gt;0@3 D$?= @3 D%?&gt;0@3 D&amp;?= @3 D+?&gt;H@3 D-?&gt;H@3 D/?&gt;H@3 D1?&gt;H@3 D3?&gt;H@3 D8?&lt;8@3 D9??X@3 D:?&lt;8@3 D;?= @3 D&lt;?&gt;H@3 D=?= @3 D&gt;?&gt;H@3 D??= @3 E@?&gt;H@3 W)?&lt;8@3 XL?&gt;H@3 X"?&gt;0@3 X+??X@3 X,?&gt;0@3 X-??X@3 X.?&gt;0@3 X5?= @3 X6?&gt;0@3 X7?= @3 X8?&gt;0@3 ZC?=L@3 Z9?&lt;8@3 Z:??X@3 _C?= @3 _F?= @3 _G?= @3 _$?&gt;0@3 %+?&gt;0@3 %,?&gt;0@3 %.?&gt;0@3 %/?&gt;0@30@O?&gt;0@30@Q?&gt;0@30AD??X@30AF??,@30AI??D@30AJ??X@30AK??D@30AL??D@30AO??D@30AP?&gt;0@30AQ?&gt;0@30AR??,@30AS??,@30AU??X@30AV??D@30AW??D@30AX??X@30AY??X@30AZ??X@30A[?&gt;\@30A\??X@30A]??X@30A=?&gt;0@30B"??X@30B#??X@30B$??X@30B%??X@30B&amp;??X@30B''??X@30B(??X@30B)??,@30B/??D@30B3?&gt;0@30B4??,@30B5??,@30B6??,@30B7??,@30B8??,@30B;??X@30B&lt;??X@30B=??X@30B&gt;??X@30B???X@30CA??X@30CC??X@30CE??X@30CG??X@30CK??,@30CO??,@30C!??X@30C#??X@30C%??X@30C1??D@30DF?&gt;0@30DH?&gt;0@30DJ?&gt;0@30DO??,@30DQ??,@30DS??,@30DU??,@30D[??X@30D]??D@30D!??D@30D#??D@30D%??D@30D+??X@30D-??X@30D/??X@30D1??X@30D3??X@30D9??X@30D&lt;??X@30D&gt;??X@30E@??X@30H2??X@30W.??D@30X"??,@30X,??D@30X.??D@30X6??D@30X8??D@30Z:??X@30_C?= @30_F?= @30_G?= @30_$?&gt;0@30%+??D@30%,??D@30%-??D@30%.??D@30%/??D@4@@$?= @4@@&amp;?&gt;0@4@@(?=L@4@@)?&lt;8@4@@*?&gt;0@4@@+?= @4@@,?&gt;H@4@@.?&lt;8@4@@/?=L@4@@0?= @4@@1?= @4@@2?&gt;0@4@@4?&gt;0@4@@6??X@4@@7?= @4@@9?&lt;8@4@@:?&lt;8@4@@;?= @4@@&lt;?&lt;8@4@@=?= @4@AD?&gt;0@4@AI?&gt;0@4@AJ?&gt;0@4@AM?&gt;H@4@AP?&gt;H@4@AQ?&gt;H@4@AS?&gt;0@4@AU?&gt;0@4@AV?&gt;0@4@AW?&gt;0@4@AX?&gt;H@4@AY??X@4@AZ??X@4@A[?&gt;H@4@A\??X@4@A]?&gt;H@4@BB?= @4@BC?= @4@BD?= @4@BE?= @4@BF?= @4@BG?= @4@BH?= @4@BI?&gt;0@4@BJ?=L@4@BK?=L@4@BL?=L@4@BM?=L@4@BN?&gt;H@4@BO?&gt;H@4@BP?&gt;H@4@BQ?&gt;H@4@BT?&gt;0@4@BU?&gt;0@4@BV?&gt;0@4@BW?&gt;0@4@BX?&gt;0@4@BZ?&gt;0@4@B_?&lt;8@4@B"?&gt;0@4@B#?&gt;0@4@B$?&gt;0@4@B%?&gt;0@4@B&amp;?&gt;0@4@B''?&gt;0@4@B(?&gt;0@4@B3?&gt;H@4@B;?&gt;H@4@B&lt;?&gt;H@4@B=?&gt;H@4@B&gt;?&gt;H@4@B???X@4@CA??X@4@CB?= @4@CC?&gt;0@4@CD?= @4@CE?&gt;0@4@CF?= @4@CG?&gt;0@4@CH?&gt;0@4@CJ?&gt;0@4@CL?&gt;0@4@CN?&gt;0@4@CT?=L@4@CZ?=L@4@C\?=L@4@C^?&gt;0@4@C ?&gt;0@4@C!?&gt;0@4@C"?&gt;0@4@C#?&gt;0@4@C$?&gt;0@4@C%?&gt;0@4@C8?&lt;8@4@C;?=L@4@C=?=L@4@C??=L@4@DC?=L@4@DF?&gt;H@4@DH?&gt;H@4@DJ?&gt;H@4@DN?&gt;0@4@DP?&gt;0@4@DR?&gt;0@4@DT?&gt;0@4@D[?&gt;0@4@D\??X@4@D]?&gt;0@4@D ??X@4@D!?&gt;0@4@D"??X@4@D#?&gt;0@4@D$?= @4@D%?&gt;0@4@D&amp;?= @4@D+?&gt;H@4@D-?&gt;H@4@D/?&gt;H@4@D1?&gt;H@4@D3?&gt;H@4@D8?&lt;8@4@D9??X@4@D:?&lt;8@4@D;?= @4@D&lt;?&gt;H@4@D=?= @4@D&gt;?&gt;H@4@D??= @4@E@?&gt;H@4@W)?&lt;8@4@XL?&gt;H@4@X"?&gt;0@4@X+??X@4@X,?&gt;0@4@X-??X@4@X.?&gt;0@4@X5?= @4@X6?&gt;0@4@X7?= @4@X8?&gt;0@4@ZC?=L@4@Z9?&lt;8@4@Z:??X@4@%+?&gt;0@4@%,?&gt;0@4@%.?&gt;0@4@%/?&gt;0@4PAD??X@4PAF?&gt;\@4PAG?&gt;0@4PAH?&gt;0@4PAI??X@4PAJ??X@4PAK?&gt;0@4PAL?&gt;0@4PAM??,@4PAO?&gt;0@4PAP??,@4PAQ??,@4PAR?&gt;\@4PAS??X@4PAT?&gt;0@4PAU??X@4PAV?&gt;0@4PAW??X@4PAX??X@4PAY?&gt;0@4PAZ?&gt;0@4PA[?&gt;0@4PA\?&gt;0@4PA]??X@4PB"??X@4PB#??X@4PB$??X@4PB%??X@4PB&amp;??X@4PB''??X@4PB(??X@4PB)?&gt;\@4PB*?&gt;0@4PB+?&gt;0@4PB,?&gt;0@4PB-?&gt;0@4PB/?&gt;0@4PB3??,@4PB4?&gt;\@4PB5?&gt;\@4PB6?&gt;\@4PB7?&gt;\@4PB8?&gt;\@4PB;??X@4PB&lt;??X@4PB=??X@4PB&gt;??X@4PB??&gt;0@4PCA?&gt;0@4PCC??X@4PCE??X@4PCG??X@4PCK?&gt;\@4PCO?&gt;\@4PCQ?&gt;0@4PCU?&gt;0@4PCW?&gt;0@4PC!??X@4PC#??X@4PC%??X@4PC1?&gt;0@4PDF??,@4PDH??,@4PDJ??,@4PDO?&gt;\@4PDQ?&gt;\@4PDS?&gt;\@4PDU?&gt;\@4PD[??X@4PD]?&gt;0@4PD!?&gt;0@4PD#?&gt;0@4PD%??X@4PD+??X@4PD-??X@4PD/??X@4PD1??X@4PD3??X@4PD9?&gt;0@4PD&lt;??X@4PD&gt;??X@4PE@??X@4PH2??X@4PW.?&gt;0@4PX"??X@4PX,?&gt;0@4PX.?&gt;0@4PX6??X@4PX8??X@4PZ:?&gt;0@4P%+??X@4P%,??X@4P%-??X@4P%.??X@4P%/??X@4 @$?= @4 @&amp;?&gt;0@4 @(?=L@4 @)?&lt;8@4 @*?&gt;0@4 @+?= @4 @,?&gt;H@4 @.?&lt;8@4 @/?=L@4 @0?= @4 @1?= @4 @2?&gt;0@4 @4?&gt;0@4 @6??X@4 @7?= @4 @9?&lt;8@4 @:?&lt;8@4 @;?= @4 @&lt;?&lt;8@4 @=?= @4 AD?&gt;0@4 AI?&gt;0@4 AJ?&gt;0@4 AM?&gt;H@4 AP?&gt;H@4 AQ?&gt;H@4 AS?&gt;0@4 AU?&gt;0@4 AV?&gt;0@4 AW?&gt;0@4 AX?&gt;H@4 AY??X@4 AZ??X@4 A[?&gt;H@4 A\??X@4 A]?&gt;H@4 BB?= @4 BC?= @4 BD?= @4 BE?= @4 BF?= @4 BG?= @4 BH?= @4 BI?&gt;0@4 BJ?=L@4 BK?=L@4 BL?=L@4 BM?=L@4 BN?&gt;H@4 BO?&gt;H@4 BP?&gt;H@4 BQ?&gt;H@4 BT?&gt;0@4 BU?&gt;0@4 BV?&gt;0@4 BW?&gt;0@4 BX?&gt;0@4 BZ?&gt;0@4 B_?&lt;8@4 B"?&gt;0@4 B#?&gt;0@4 B$?&gt;0@4 B%?&gt;0@4 B&amp;?&gt;0@4 B''?&gt;0@4 B(?&gt;0@4 B3?&gt;H@4 B;?&gt;H@4 B&lt;?&gt;H@4 B=?&gt;H@4 B&gt;?&gt;H@4 B???X@4 CA??X@4 CB?= @4 CC?&gt;0@4 CD?= @4 CE?&gt;0@4 CF?= @4 CG?&gt;0@4 CH?&gt;0@4 CJ?&gt;0@4 CL?&gt;0@4 CN?&gt;0@4 CT?=L@4 CZ?=L@4 C\?=L@4 C^?&gt;0@4 C ?&gt;0@4 C!?&gt;0@4 C"?&gt;0@4 C#?&gt;0@4 C$?&gt;0@4 C%?&gt;0@4 C8?&lt;8@4 C;?=L@4 C=?=L@4 C??=L@4 DC?=L@4 DF?&gt;H@4 DH?&gt;H@4 DJ?&gt;H@4 DN?&gt;0@4 DP?&gt;0@4 DR?&gt;0@4 DT?&gt;0@4 D[?&gt;0@4 D\??X@4 D]?&gt;0@4 D ??X@4 D!?&gt;0@4 D"??X@4 D#?&gt;0@4 D$?= @4 D%?&gt;0@4 D&amp;?= @4 D+?&gt;H@4 D-?&gt;H@4 D/?&gt;H@4 D1?&gt;H@4 D3?&gt;H@4 D8?&lt;8@4 D9??X@4 D:?&lt;8@4 D;?= @4 D&lt;?&gt;H@4 D=?= @4 D&gt;?&gt;H@4 D??= @4 E@?&gt;H@4 W)?&lt;8@4 XL?&gt;H@4 X"?&gt;0@4 X+??X@4 X,?&gt;0@4 X-??X@4 X.?&gt;0@4 X5?= @4 X6?&gt;0@4 X7?= @4 X8?&gt;0@4 ZC?=L@4 Z9?&lt;8@4 Z:??X@4 %+?&gt;0@4 %,?&gt;0@4 %.?&gt;0@4 %/?&gt;0@5@@$?&gt;H@5@@&amp;?= @5@@(?=L@5@@)?&lt;8@5@@*?= @5@@+?= @5@@,?&gt;H@5@@-?&gt;0@5@@.?&lt;8@5@@/?=L@5@@0?= @5@@1?= @5@@2?= @5@@4?= @5@@6?&lt;8@5@@7?&gt;0@5@@9?&lt;8@5@@:?&lt;8@5@@;?&gt;H@5@@&lt;?&lt;8@5@@=?&gt;H@5@AD?&gt;H@5@AF?&gt;H@5@AG?&gt;H@5@AH?&gt;0@5@AI?&gt;H@5@AJ?&gt;H@5@AM?&gt;H@5@AP?= @5@AQ?= @5@AR?&gt;H@5@AS?&gt;0@5@AT?&gt;H@5@AU?&gt;H@5@AV?&gt;0@5@AW?&gt;H@5@AX?=L@5@AY?= @5@AZ?= @5@A[?&gt;H@5@A\?= @5@A]?= @5@BB?&gt;H@5@BC?&gt;H@5@BD?&gt;H@5@BE?&gt;H@5@BF?&gt;H@5@BG?&gt;H@5@BH?&gt;H@5@BI?= @5@BJ?=L@5@BK?=L@5@BL?=L@5@BM?=L@5@BN?&gt;H@5@BO?&gt;H@5@BP?&gt;H@5@BQ?&gt;H@5@BT?= @5@BU?= @5@BV?= @5@BW?= @5@BX?= @5@BZ?= @5@B_?&lt;8@5@B"?&gt;H@5@B#?&gt;H@5@B$?&gt;H@5@B%?&gt;H@5@B&amp;?&gt;H@5@B''?&gt;H@5@B(?&gt;H@5@B)?&gt;H@5@B*?&gt;0@5@B+?&gt;0@5@B,?&gt;0@5@B-?&gt;0@5@B2?&gt;H@5@B3?= @5@B4?&gt;H@5@B5?&gt;H@5@B6?&gt;H@5@B7?&gt;H@5@B8?&gt;H@5@B:?&gt;H@5@B;?=L@5@B&lt;?=L@5@B=?=L@5@B&gt;?=L@5@B??= @5@CA?= @5@CB?&gt;H@5@CC?&gt;H@5@CD?&gt;H@5@CE?&gt;H@5@CF?&gt;H@5@CG?&gt;H@5@CH?= @5@CJ?= @5@CK?&gt;H@5@CL?= @5@CN?= @5@CO?&gt;H@5@CQ?&gt;H@5@CT?=L@5@CU?&gt;0@5@CW?&gt;0@5@CZ?=L@5@C[?&gt;0@5@C\?=L@5@C^?= @5@C ?= @5@C!?&gt;H@5@C"?= @5@C#?&gt;H@5@C$?= @5@C%?&gt;H@5@C8?&lt;8@5@C;?=L@5@C=?=L@5@C??=L@5@DC?=L@5@DF?= @5@DH?= @5@DJ?= @5@DN?= @5@DO?&gt;H@5@DP?= @5@DQ?&gt;H@5@DR?= @5@DS?&gt;H@5@DT?= @5@DU?&gt;H@5@D[?&gt;H@5@D\?&lt;8@5@D]?&gt;0@5@D ?&lt;8@5@D!?&gt;0@5@D"?&lt;8@5@D#?&gt;0@5@D$?&gt;0@5@D%?&gt;H@5@D&amp;?&gt;0@5@D+?=L@5@D-?=L@5@D/?=L@5@D1?=L@5@D3?=L@5@D8?&lt;8@5@D9?= @5@D:?&lt;8@5@D;?&gt;H@5@D&lt;?= @5@D=?&gt;H@5@D&gt;?= @5@D??&gt;H@5@E@?= @5@W)?&lt;8@5@XL?= @5@X"?&gt;0@5@X+?&lt;8@5@X,?&gt;0@5@X-?&lt;8@5@X.?&gt;0@5@X5?&gt;0@5@X6?&gt;H@5@X7?&gt;0@5@X8?&gt;H@5@ZC?=L@5@Z9?&lt;8@5@Z:?= @5@%+?&gt;H@5@%,?&gt;H@5@%.?&gt;H@5@%/?&gt;H@5P@O?&gt;0@5P@Q?&gt;0@5PAD??,@5PAF??,@5PAI??,@5PAJ??,@5PAK??X@5PAL??X@5PAO??X@5PAP??D@5PAQ??D@5PAR??,@5PAU??,@5PAV??X@5PAW??,@5PAX??,@5PAY??D@5PAZ??D@5PA[?&gt;\@5PA\??D@5PA]??,@5PA=?&gt;0@5PB"??,@5PB#??,@5PB$??,@5PB%??,@5PB&amp;??,@5PB''??,@5PB(??,@5PB)??,@5PB/??X@5PB3??D@5PB4??,@5PB5??,@5PB6??,@5PB7??,@5PB8??,@5PB;??,@5PB&lt;??,@5PB=??,@5PB&gt;??,@5PB???D@5PCA??D@5PCC??,@5PCE??,@5PCG??,@5PCK??,@5PCO??,@5PC!??,@5PC#??,@5PC%??,@5PC1??X@5PDF??D@5PDH??D@5PDJ??D@5PDO??,@5PDQ??,@5PDS??,@5PDU??,@5PD[??,@5PD]??X@5PD!??X@5PD#??X@5PD%??,@5PD+??,@5PD-??,@5PD/??,@5PD1??,@5PD3??,@5PD9??D@5PD&lt;??,@5PD&gt;??,@5PE@??,@5PH2??,@5PW.??X@5PX,??X@5PX.??X@5PX6??,@5PX8??,@5PZ:??D@5P_C?= @5P_F?= @5P_G?= @5P_$?&gt;0@5P%+??,@5P%,??,@5P%-??,@5P%.??,@5P%/??,@50@O?&gt;0@50@Q?&gt;0@50AD??,@50AF??,@50AI??,@50AJ??,@50AK??X@50AL??X@50AO??X@50AP??D@50AQ??D@50AR??,@50AU??,@50AV??X@50AW??,@50AX??,@50AY??D@50AZ??D@50A[?&gt;\@50A\??D@50A]??,@50A=?&gt;0@50B"??,@50B#??,@50B$??,@50B%??,@50B&amp;??,@50B''??,@50B(??,@50B)??,@50B/??X@50B3??D@50B4??,@50B5??,@50B6??,@50B7??,@50B8??,@50B;??,@50B&lt;??,@50B=??,@50B&gt;??,@50B???D@50CA??D@50CC??,@50CE??,@50CG??,@50CK??,@50CO??,@50C!??,@50C#??,@50C%??,@50C1??X@50DF??D@50DH??D@50DJ??D@50DO??,@50DQ??,@50DS??,@50DU??,@50D[??,@50D]??X@50D!??X@50D#??X@50D%??,@50D+??,@50D-??,@50D/??,@50D1??,@50D3??,@50D9??D@50D&lt;??,@50D&gt;??,@50E@??,@50H2??,@50W.??X@50X,??X@50X.??X@50X6??,@50X8??,@50Z:??D@50_C?= @50_F?= @50_G?= @50_$?&gt;0@50%+??,@50%,??,@50%-??,@50%.??,@50%/??,@6PAD??,@6PAF??,@6PAI??,@6PAJ??,@6PAK??X@6PAL??X@6PAO??X@6PAP??D@6PAQ??D@6PAR??,@6PAU??,@6PAV??X@6PAW??,@6PAX??,@6PAY??D@6PAZ??D@6PA[?&gt;\@6PA\??D@6PA]??,@6PB"??,@6PB#??,@6PB$??,@6PB%??,@6PB&amp;??,@6PB''??,@6PB(??,@6PB)??,@6PB/??X@6PB3??D@6PB4??,@6PB5??,@6PB6??,@6PB7??,@6PB8??,@6PB;??,@6PB&lt;??,@6PB=??,@6PB&gt;??,@6PB???D@6PCA??D@6PCC??,@6PCE??,@6PCG??,@6PCK??,@6PCO??,@6PC!??,@6PC#??,@6PC%??,@6PC1??X@6PDF??D@6PDH??D@6PDJ??D@6PDO??,@6PDQ??,@6PDS??,@6PDU??,@6PD[??,@6PD]??X@6PD!??X@6PD#??X@6PD%??,@6PD+??,@6PD-??,@6PD/??,@6PD1??,@6PD3??,@6PD9??D@6PD&lt;??,@6PD&gt;??,@6PE@??,@6PH2??,@6PW.??X@6PX,??X@6PX.??X@6PX6??,@6PX8??,@6PZ:??D@6P%+??,@6P%,??,@6P%-??,@6P%.??,@6P%/??,@6 @$?&gt;H@6 @&amp;?= @6 @(?=L@6 @)?&lt;8@6 @*?= @6 @+?= @6 @,?&gt;H@6 @-?&gt;0@6 @.?&lt;8@6 @/?=L@6 @0?= @6 @1?= @6 @2?= @6 @4?= @6 @6?&lt;8@6 @7?&gt;0@6 @9?&lt;8@6 @:?&lt;8@6 @;?&gt;H@6 @&lt;?&lt;8@6 @=?&gt;H@6 AD?&gt;H@6 AF?&gt;H@6 AG?&gt;H@6 AH?&gt;0@6 AI?&gt;H@6 AJ?&gt;H@6 AM?&gt;H@6 AP?= @6 AQ?= @6 AR?&gt;H@6 AS?&gt;0@6 AT?&gt;H@6 AU?&gt;H@6 AV?&gt;0@6 AW?&gt;H@6 AX?=L@6 AY?= @6 AZ?= @6 A[?&gt;H@6 A\?= @6 A]?= @6 BB?&gt;H@6 BC?&gt;H@6 BD?&gt;H@6 BE?&gt;H@6 BF?&gt;H@6 BG?&gt;H@6 BH?&gt;H@6 BI?= @6 BJ?=L@6 BK?=L@6 BL?=L@6 BM?=L@6 BN?&gt;H@6 BO?&gt;H@6 BP?&gt;H@6 BQ?&gt;H@6 BT?= @6 BU?= @6 BV?= @6 BW?= @6 BX?= @6 BZ?= @6 B_?&lt;8@6 B"?&gt;H@6 B#?&gt;H@6 B$?&gt;H@6 B%?&gt;H@6 B&amp;?&gt;H@6 B''?&gt;H@6 B(?&gt;H@6 B)?&gt;H@6 B*?&gt;0@6 B+?&gt;0@6 B,?&gt;0@6 B-?&gt;0@6 B2?&gt;H@6 B3?= @6 B4?&gt;H@6 B5?&gt;H@6 B6?&gt;H@6 B7?&gt;H@6 B8?&gt;H@6 B:?&gt;H@6 B;?=L@6 B&lt;?=L@6 B=?=L@6 B&gt;?=L@6 B??= @6 CA?= @6 CB?&gt;H@6 CC?&gt;H@6 CD?&gt;H@6 CE?&gt;H@6 CF?&gt;H@6 CG?&gt;H@6 CH?= @6 CJ?= @6 CK?&gt;H@6 CL?= @6 CN?= @6 CO?&gt;H@6 CQ?&gt;H@6 CT?=L@6 CU?&gt;0@6 CW?&gt;0@6 CZ?=L@6 C[?&gt;0@6 C\?=L@6 C^?= @6 C ?= @6 C!?&gt;H@6 C"?= @6 C#?&gt;H@6 C$?= @6 C%?&gt;H@6 C8?&lt;8@6 C;?=L@6 C=?=L@6 C??=L@6 DC?=L@6 DF?= @6 DH?= @6 DJ?= @6 DN?= @6 DO?&gt;H@6 DP?= @6 DQ?&gt;H@6 DR?= @6 DS?&gt;H@6 DT?= @6 DU?&gt;H@6 D[?&gt;H@6 D\?&lt;8@6 D]?&gt;0@6 D ?&lt;8@6 D!?&gt;0@6 D"?&lt;8@6 D#?&gt;0@6 D$?&gt;0@6 D%?&gt;H@6 D&amp;?&gt;0@6 D+?=L@6 D-?=L@6 D/?=L@6 D1?=L@6 D3?=L@6 D8?&lt;8@6 D9?= @6 D:?&lt;8@6 D;?&gt;H@6 D&lt;?= @6 D=?&gt;H@6 D&gt;?= @6 D??&gt;H@6 E@?= @6 W)?&lt;8@6 XL?= @6 X"?&gt;0@6 X+?&lt;8@6 X,?&gt;0@6 X-?&lt;8@6 X.?&gt;0@6 X5?&gt;0@6 X6?&gt;H@6 X7?&gt;0@6 X8?&gt;H@6 ZC?=L@6 Z9?&lt;8@6 Z:?= @6 %+?&gt;H@6 %,?&gt;H@6 %.?&gt;H@6 %/?&gt;H@60AD??,@60AF??,@60AI??,@60AJ??,@60AK??X@60AL??X@60AO??X@60AP??D@60AQ??D@60AR??,@60AU??,@60AV??X@60AW??,@60AX??,@60AY??D@60AZ??D@60A[?&gt;\@60A\??D@60A]??,@60B"??,@60B#??,@60B$??,@60B%??,@60B&amp;??,@60B''??,@60B(??,@60B)??,@60B/??X@60B3??D@60B4??,@60B5??,@60B6??,@60B7??,@60B8??,@60B;??,@60B&lt;??,@60B=??,@60B&gt;??,@60B???D@60CA??D@60CC??,@60CE??,@60CG??,@60CK??,@60CO??,@60C!??,@60C#??,@60C%??,@60C1??X@60DF??D@60DH??D@60DJ??D@60DO??,@60DQ??,@60DS??,@60DU??,@60D[??,@60D]??X@60D!??X@60D#??X@60D%??,@60D+??,@60D-??,@60D/??,@60D1??,@60D3??,@60D9??D@60D&lt;??,@60D&gt;??,@60E@??,@60H2??,@60W.??X@60X,??X@60X.??X@60X6??,@60X8??,@60Z:??D@60%+??,@60%,??,@60%-??,@60%.??,@60%/??,@7@@$?&gt;H@7@@&amp;?= @7@@(?=L@7@@)?&lt;8@7@@*?= @7@@+?= @7@@,?&gt;H@7@@-?&gt;0@7@@.?&lt;8@7@@/?=L@7@@0?= @7@@1?= @7@@2?= @7@@4?= @7@@6?&lt;8@7@@7?&gt;0@7@@9?&lt;8@7@@:?&lt;8@7@@;?&gt;H@7@@&lt;?&lt;8@7@@=?&gt;H@7@AD?&gt;H@7@AF?&gt;H@7@AG?&gt;H@7@AH?&gt;0@7@AI?&gt;H@7@AJ?&gt;H@7@AM?&gt;H@7@AP?= @7@AQ?= @7@AR?&gt;H@7@AS?&gt;0@7@AT?&gt;H@7@AU?&gt;H@7@AV?&gt;0@7@AW?&gt;H@7@AX?=L@7@AY?= @7@AZ?= @7@A[?&gt;H@7@A\?= @7@A]?= @7@BB?&gt;H@7@BC?&gt;H@7@BD?&gt;H@7@BE?&gt;H@7@BF?&gt;H@7@BG?&gt;H@7@BH?&gt;H@7@BI?= @7@BJ?=L@7@BK?=L@7@BL?=L@7@BM?=L@7@BN?&gt;H@7@BO?&gt;H@7@BP?&gt;H@7@BQ?&gt;H@7@BT?= @7@BU?= @7@BV?= @7@BW?= @7@BX?= @7@BZ?= @7@B_?&lt;8@7@B"?&gt;H@7@B#?&gt;H@7@B$?&gt;H@7@B%?&gt;H@7@B&amp;?&gt;H@7@B''?&gt;H@7@B(?&gt;H@7@B)?&gt;H@7@B*?&gt;0@7@B+?&gt;0@7@B,?&gt;0@7@B-?&gt;0@7@B2?&gt;H@7@B3?= @7@B4?&gt;H@7@B5?&gt;H@7@B6?&gt;H@7@B7?&gt;H@7@B8?&gt;H@7@B:?&gt;H@7@B;?=L@7@B&lt;?=L@7@B=?=L@7@B&gt;?=L@7@B??= @7@CA?= @7@CB?&gt;H@7@CC?&gt;H@7@CD?&gt;H@7@CE?&gt;H@7@CF?&gt;H@7@CG?&gt;H@7@CH?= @7@CJ?= @7@CK?&gt;H@7@CL?= @7@CN?= @7@CO?&gt;H@7@CQ?&gt;H@7@CT?=L@7@CU?&gt;0@7@CW?&gt;0@7@CZ?=L@7@C[?&gt;0@7@C\?=L@7@C^?= @7@C ?= @7@C!?&gt;H@7@C"?= @7@C#?&gt;H@7@C$?= @7@C%?&gt;H@7@C8?&lt;8@7@C;?=L@7@C=?=L@7@C??=L@7@DC?=L@7@DF?= @7@DH?= @7@DJ?= @7@DN?= @7@DO?&gt;H@7@DP?= @7@DQ?&gt;H@7@DR?= @7@DS?&gt;H@7@DT?= @7@DU?&gt;H@7@D[?&gt;H@7@D\?&lt;8@7@D]?&gt;0@7@D ?&lt;8@7@D!?&gt;0@7@D"?&lt;8@7@D#?&gt;0@7@D$?&gt;0@7@D%?&gt;H@7@D&amp;?&gt;0@7@D+?=L@7@D-?=L@7@D/?=L@7@D1?=L@7@D3?=L@7@D8?&lt;8@7@D9?= @7@D:?&lt;8@7@D;?&gt;H@7@D&lt;?= @7@D=?&gt;H@7@D&gt;?= @7@D??&gt;H@7@E@?= @7@W)?&lt;8@7@XL?= @7@X"?&gt;0@7@X+?&lt;8@7@X,?&gt;0@7@X-?&lt;8@7@X.?&gt;0@7@X5?&gt;0@7@X6?&gt;H@7@X7?&gt;0@7@X8?&gt;H@7@ZC?=L@7@Z9?&lt;8@7@Z:?= @7@%+?&gt;H@7@%,?&gt;H@7@%.?&gt;H@7@%/?&gt;H@7PAD??,@7PAF??,@7PAI??,@7PAJ??,@7PAK??X@7PAL??X@7PAO??X@7PAP??D@7PAQ??D@7PAR??,@7PAU??,@7PAV??X@7PAW??,@7PAX??,@7PAY??D@7PAZ??D@7PA[?&gt;\@7PA\??D@7PA]??,@7PB"??,@7PB#??,@7PB$??,@7PB%??,@7PB&amp;??,@7PB''??,@7PB(??,@7PB)??,@7PB/??X@7PB3??D@7PB4??,@7PB5??,@7PB6??,@7PB7??,@7PB8??,@7PB;??,@7PB&lt;??,@7PB=??,@7PB&gt;??,@7PB???D@7PCA??D@7PCC??,@7PCE??,@7PCG??,@7PCK??,@7PCO??,@7PC!??,@7PC#??,@7PC%??,@7PC1??X@7PDF??D@7PDH??D@7PDJ??D@7PDO??,@7PDQ??,@7PDS??,@7PDU??,@7PD[??,@7PD]??X@7PD!??X@7PD#??X@7PD%??,@7PD+??,@7PD-??,@7PD/??,@7PD1??,@7PD3??,@7PD9??D@7PD&lt;??,@7PD&gt;??,@7PE@??,@7PH2??,@7PW.??X@7PX,??X@7PX.??X@7PX6??,@7PX8??,@7PZ:??D@7P%+??,@7P%,??,@7P%-??,@7P%.??,@7P%/??,@7 @O?&gt;H@7 @Q?&gt;H@7 @$?= @7 @&amp;?&gt;0@7 @(?=L@7 @)?&lt;8@7 @*?&gt;0@7 @+?= @7 @,?&gt;H@7 @.?&lt;8@7 @/?=L@7 @0?= @7 @1?= @7 @2?&gt;0@7 @4?&gt;0@7 @6??X@7 @7?= @7 @9?&lt;8@7 @:?&lt;8@7 @;?= @7 @&lt;?&lt;8@7 @=?= @7 AD?&gt;0@7 AI?&gt;0@7 AJ?&gt;0@7 AM?&gt;H@7 AP?&gt;H@7 AQ?&gt;H@7 AS?&gt;0@7 AU?&gt;0@7 AV?&gt;0@7 AW?&gt;0@7 AX?&gt;H@7 AY??X@7 AZ??X@7 A[?&gt;H@7 A\??X@7 A]?&gt;H@7 A=?&gt;0@7 BB?= @7 BC?= @7 BD?= @7 BE?= @7 BF?= @7 BG?= @7 BH?= @7 BI?&gt;0@7 BJ?=L@7 BK?=L@7 BL?=L@7 BM?=L@7 BN?&gt;H@7 BO?&gt;H@7 BP?&gt;H@7 BQ?&gt;H@7 BT?&gt;0@7 BU?&gt;0@7 BV?&gt;0@7 BW?&gt;0@7 BX?&gt;0@7 BZ?&gt;0@7 B_?&lt;8@7 B"?&gt;0@7 B#?&gt;0@7 B$?&gt;0@7 B%?&gt;0@7 B&amp;?&gt;0@7 B''?&gt;0@7 B(?&gt;0@7 B3?&gt;H@7 B;?&gt;H@7 B&lt;?&gt;H@7 B=?&gt;H@7 B&gt;?&gt;H@7 B???X@7 CA??X@7 CB?= @7 CC?&gt;0@7 CD?= @7 CE?&gt;0@7 CF?= @7 CG?&gt;0@7 CH?&gt;0@7 CJ?&gt;0@7 CL?&gt;0@7 CN?&gt;0@7 CT?=L@7 CZ?=L@7 C\?=L@7 C^?&gt;0@7 C ?&gt;0@7 C!?&gt;0@7 C"?&gt;0@7 C#?&gt;0@7 C$?&gt;0@7 C%?&gt;0@7 C8?&lt;8@7 C;?=L@7 C=?=L@7 C??=L@7 DC?=L@7 DF?&gt;H@7 DH?&gt;H@7 DJ?&gt;H@7 DN?&gt;0@7 DP?&gt;0@7 DR?&gt;0@7 DT?&gt;0@7 D[?&gt;0@7 D\??X@7 D]?&gt;0@7 D ??X@7 D!?&gt;0@7 D"??X@7 D#?&gt;0@7 D$?= @7 D%?&gt;0@7 D&amp;?= @7 D+?&gt;H@7 D-?&gt;H@7 D/?&gt;H@7 D1?&gt;H@7 D3?&gt;H@7 D8?&lt;8@7 D9??X@7 D:?&lt;8@7 D;?= @7 D&lt;?&gt;H@7 D=?= @7 D&gt;?&gt;H@7 D??= @7 E@?&gt;H@7 W)?&lt;8@7 XL?&gt;H@7 X"?&gt;0@7 X+??X@7 X,?&gt;0@7 X-??X@7 X.?&gt;0@7 X5?= @7 X6?&gt;0@7 X7?= @7 X8?&gt;0@7 ZC?=L@7 Z9?&lt;8@7 Z:??X@7 _C?= @7 _F?= @7 _G?= @7 _$?&gt;0@7 %+?&gt;0@7 %,?&gt;0@7 %.?&gt;0@7 %/?&gt;0@8@@O?&gt;H@8@@Q?&gt;H@8@@$?= @8@@&amp;?&gt;0@8@@(?=L@8@@)?&lt;8@8@@*?&gt;0@8@@+?= @8@@,?&gt;H@8@@.?&lt;8@8@@/?=L@8@@0?= @8@@1?= @8@@2?&gt;0@8@@4?&gt;0@8@@6??X@8@@7?= @8@@9?&lt;8@8@@:?&lt;8@8@@;?= @8@@&lt;?&lt;8@8@@=?= @8@AD?&gt;0@8@AI?&gt;0@8@AJ?&gt;0@8@AM?&gt;H@8@AP?&gt;H@8@AQ?&gt;H@8@AS?&gt;0@8@AU?&gt;0@8@AV?&gt;0@8@AW?&gt;0@8@AX?&gt;H@8@AY??X@8@AZ??X@8@A[?&gt;H@8@A\??X@8@A]?&gt;H@8@A=?&gt;0@8@BB?= @8@BC?= @8@BD?= @8@BE?= @8@BF?= @8@BG?= @8@BH?= @8@BI?&gt;0@8@BJ?=L@8@BK?=L@8@BL?=L@8@BM?=L@8@BN?&gt;H@8@BO?&gt;H@8@BP?&gt;H@8@BQ?&gt;H@8@BT?&gt;0@8@BU?&gt;0@8@BV?&gt;0@8@BW?&gt;0@8@BX?&gt;0@8@BZ?&gt;0@8@B_?&lt;8@8@B"?&gt;0@8@B#?&gt;0@8@B$?&gt;0@8@B%?&gt;0@8@B&amp;?&gt;0@8@B''?&gt;0@8@B(?&gt;0@8@B3?&gt;H@8@B;?&gt;H@8@B&lt;?&gt;H@8@B=?&gt;H@8@B&gt;?&gt;H@8@B???X@8@CA??X@8@CB?= @8@CC?&gt;0@8@CD?= @8@CE?&gt;0@8@CF?= @8@CG?&gt;0@8@CH?&gt;0@8@CJ?&gt;0@8@CL?&gt;0@8@CN?&gt;0@8@CT?=L@8@CZ?=L@8@C\?=L@8@C^?&gt;0@8@C ?&gt;0@8@C!?&gt;0@8@C"?&gt;0@8@C#?&gt;0@8@C$?&gt;0@8@C%?&gt;0@8@C8?&lt;8@8@C;?=L@8@C=?=L@8@C??=L@8@DC?=L@8@DF?&gt;H@8@DH?&gt;H@8@DJ?&gt;H@8@DN?&gt;0@8@DP?&gt;0@8@DR?&gt;0@8@DT?&gt;0@8@D[?&gt;0@8@D\??X@8@D]?&gt;0@8@D ??X@8@D!?&gt;0@8@D"??X@8@D#?&gt;0@8@D$?= @8@D%?&gt;0@8@D&amp;?= @8@D+?&gt;H@8@D-?&gt;H@8@D/?&gt;H@8@D1?&gt;H@8@D3?&gt;H@8@D8?&lt;8@8@D9??X@8@D:?&lt;8@8@D;?= @8@D&lt;?&gt;H@8@D=?= @8@D&gt;?&gt;H@8@D??= @8@E@?&gt;H@8@W)?&lt;8@8@XL?&gt;H@8@X"?&gt;0@8@X+??X@8@X,?&gt;0@8@X-??X@8@X.?&gt;0@8@X5?= @8@X6?&gt;0@8@X7?= @8@X8?&gt;0@8@ZC?=L@8@Z9?&lt;8@8@Z:??X@8@_C?= @8@_F?= @8@_G?= @8@_$?&gt;0@8@%+?&gt;0@8@%,?&gt;0@8@%.?&gt;0@8@%/?&gt;0@8P@O?= @8P@P?= @8P@Q?= @8PAD??D@8PAG??D@8PAH??X@8PAI??D@8PAJ??D@8PAK?&gt;0@8PAL?&gt;0@8PAO?&gt;0@8PAS??,@8PAT??D@8PAU??X@8PAV??X@8PAW??D@8PA-?= @8PA=?&gt;H@8PB"??D@8PB#??D@8PB$??D@8PB%??D@8PB&amp;??D@8PB''??D@8PB(??D@8PB*??X@8PB+??X@8PB,??X@8PB-??X@8PB/?&gt;0@8PCC??D@8PCE??D@8PCG??D@8PCQ??D@8PCU??X@8PCW??X@8PC!??D@8PC#??D@8PC%??D@8PC1?&gt;0@8PD[??X@8PD]??X@8PD!??X@8PD#??X@8PD%??D@8PW.?&gt;0@8PX"??,@8PX,??X@8PX.??X@8PX6??D@8PX8??D@8P_C?= @8P_F?= @8P_G?= @8P_#?= @8P_$?&gt;H@8P%+??D@8P%,??D@8P%-??D@8P%.??D@8P%/??D@8 @O?&gt;H@8 @Q?&gt;H@8 @$?= @8 @&amp;?&gt;0@8 @(?=L@8 @)?&lt;8@8 @*?&gt;0@8 @+?= @8 @,?&gt;H@8 @.?&lt;8@8 @/?=L@8 @0?= @8 @1?= @8 @2?&gt;0@8 @4?&gt;0@8 @6??X@8 @7?= @8 @9?&lt;8@8 @:?&lt;8@8 @;?= @8 @&lt;?&lt;8@8 @=?= @8 AD?&gt;0@8 AI?&gt;0@8 AJ?&gt;0@8 AM?&gt;H@8 AP?&gt;H@8 AQ?&gt;H@8 AS?&gt;0@8 AU?&gt;0@8 AV?&gt;0@8 AW?&gt;0@8 AX?&gt;H@8 AY??X@8 AZ??X@8 A[?&gt;H@8 A\??X@8 A]?&gt;H@8 A=?&gt;0@8 BB?= @8 BC?= @8 BD?= @8 BE?= @8 BF?= @8 BG?= @8 BH?= @8 BI?&gt;0@8 BJ?=L@8 BK?=L@8 BL?=L@8 BM?=L@8 BN?&gt;H@8 BO?&gt;H@8 BP?&gt;H@8 BQ?&gt;H@8 BT?&gt;0@8 BU?&gt;0@8 BV?&gt;0@8 BW?&gt;0@8 BX?&gt;0@8 BZ?&gt;0@8 B_?&lt;8@8 B"?&gt;0@8 B#?&gt;0@8 B$?&gt;0@8 B%?&gt;0@8 B&amp;?&gt;0@8 B''?&gt;0@8 B(?&gt;0@8 B3?&gt;H@8 B;?&gt;H@8 B&lt;?&gt;H@8 B=?&gt;H@8 B&gt;?&gt;H@8 B???X@8 CA??X@8 CB?= @8 CC?&gt;0@8 CD?= @8 CE?&gt;0@8 CF?= @8 CG?&gt;0@8 CH?&gt;0@8 CJ?&gt;0@8 CL?&gt;0@8 CN?&gt;0@8 CT?=L@8 CZ?=L@8 C\?=L@8 C^?&gt;0@8 C ?&gt;0@8 C!?&gt;0@8 C"?&gt;0@8 C#?&gt;0@8 C$?&gt;0@8 C%?&gt;0@8 C8?&lt;8@8 C;?=L@8 C=?=L@8 C??=L@8 DC?=L@8 DF?&gt;H@8 DH?&gt;H@8 DJ?&gt;H@8 DN?&gt;0@8 DP?&gt;0@8 DR?&gt;0@8 DT?&gt;0@8 D[?&gt;0@8 D\??X@8 D]?&gt;0@8 D ??X@8 D!?&gt;0@8 D"??X@8 D#?&gt;0@8 D$?= @8 D%?&gt;0@8 D&amp;?= @8 D+?&gt;H@8 D-?&gt;H@8 D/?&gt;H@8 D1?&gt;H@8 D3?&gt;H@8 D8?&lt;8@8 D9??X@8 D:?&lt;8@8 D;?= @8 D&lt;?&gt;H@8 D=?= @8 D&gt;?&gt;H@8 D??= @8 E@?&gt;H@8 W)?&lt;8@8 XL?&gt;H@8 X"?&gt;0@8 X+??X@8 X,?&gt;0@8 X-??X@8 X.?&gt;0@8 X5?= @8 X6?&gt;0@8 X7?= @8 X8?&gt;0@8 ZC?=L@8 Z9?&lt;8@8 Z:??X@8 _C?= @8 _F?= @8 _G?= @8 _$?&gt;0@8 %+?&gt;0@8 %,?&gt;0@8 %.?&gt;0@8 %/?&gt;0@80@O?= @80@P?= @80@Q?= @80AD??D@80AG??D@80AH??X@80AI??D@80AJ??D@80AK?&gt;0@80AL?&gt;0@80AO?&gt;0@80AS??,@80AT??D@80AU??X@80AV??X@80AW??D@80A-?= @80A=?&gt;H@80B"??D@80B#??D@80B$??D@80B%??D@80B&amp;??D@80B''??D@80B(??D@80B*??X@80B+??X@80B,??X@80B-??X@80B/?&gt;0@80CC??D@80CE??D@80CG??D@80CQ??D@80CU??X@80CW??X@80C!??D@80C#??D@80C%??D@80C1?&gt;0@80D[??X@80D]??X@80D!??X@80D#??X@80D%??D@80W.?&gt;0@80X"??,@80X,??X@80X.??X@80X6??D@80X8??D@80_C?= @80_F?= @80_G?= @80_#?= @80_$?&gt;H@80%+??D@80%,??D@80%-??D@80%.??D@80%/??D@9@@O?&gt;H@9@@Q?&gt;H@9@@$?= @9@@&amp;?&gt;0@9@@(?=L@9@@)?&lt;8@9@@*?&gt;0@9@@+?= @9@@,?&gt;H@9@@.?&lt;8@9@@/?=L@9@@0?= @9@@1?= @9@@2?&gt;0@9@@4?&gt;0@9@@6??X@9@@7?= @9@@9?&lt;8@9@@:?&lt;8@9@@;?= @9@@&lt;?&lt;8@9@@=?= @9@AD?&gt;0@9@AI?&gt;0@9@AJ?&gt;0@9@AM?&gt;H@9@AP?&gt;H@9@AQ?&gt;H@9@AS?&gt;0@9@AU?&gt;0@9@AV?&gt;0@9@AW?&gt;0@9@AX?&gt;H@9@AY??X@9@AZ??X@9@A[?&gt;H@9@A\??X@9@A]?&gt;H@9@A=?&gt;0@9@BB?= @9@BC?= @9@BD?= @9@BE?= @9@BF?= @9@BG?= @9@BH?= @9@BI?&gt;0@9@BJ?=L@9@BK?=L@9@BL?=L@9@BM?=L@9@BN?&gt;H@9@BO?&gt;H@9@BP?&gt;H@9@BQ?&gt;H@9@BT?&gt;0@9@BU?&gt;0@9@BV?&gt;0@9@BW?&gt;0@9@BX?&gt;0@9@BZ?&gt;0@9@B_?&lt;8@9@B"?&gt;0@9@B#?&gt;0@9@B$?&gt;0@9@B%?&gt;0@9@B&amp;?&gt;0@9@B''?&gt;0@9@B(?&gt;0@9@B3?&gt;H@9@B;?&gt;H@9@B&lt;?&gt;H@9@B=?&gt;H@9@B&gt;?&gt;H@9@B???X@9@CA??X@9@CB?= @9@CC?&gt;0@9@CD?= @9@CE?&gt;0@9@CF?= @9@CG?&gt;0@9@CH?&gt;0@9@CJ?&gt;0@9@CL?&gt;0@9@CN?&gt;0@9@CT?=L@9@CZ?=L@9@C\?=L@9@C^?&gt;0@9@C ?&gt;0@9@C!?&gt;0@9@C"?&gt;0@9@C#?&gt;0@9@C$?&gt;0@9@C%?&gt;0@9@C8?&lt;8@9@C;?=L@9@C=?=L@9@C??=L@9@DC?=L@9@DF?&gt;H@9@DH?&gt;H@9@DJ?&gt;H@9@DN?&gt;0@9@DP?&gt;0@9@DR?&gt;0@9@DT?&gt;0@9@D[?&gt;0@9@D\??X@9@D]?&gt;0@9@D ??X@9@D!?&gt;0@9@D"??X@9@D#?&gt;0@9@D$?= @9@D%?&gt;0@9@D&amp;?= @9@D+?&gt;H@9@D-?&gt;H@9@D/?&gt;H@9@D1?&gt;H@9@D3?&gt;H@9@D8?&lt;8@9@D9??X@9@D:?&lt;8@9@D;?= @9@D&lt;?&gt;H@9@D=?= @9@D&gt;?&gt;H@9@D??= @9@E@?&gt;H@9@W)?&lt;8@9@XL?&gt;H@9@X"?&gt;0@9@X+??X@9@X,?&gt;0@9@X-??X@9@X.?&gt;0@9@X5?= @9@X6?&gt;0@9@X7?= @9@X8?&gt;0@9@ZC?=L@9@Z9?&lt;8@9@Z:??X@9@_C?= @9@_F?= @9@_G?= @9@_$?&gt;0@9@%+?&gt;0@9@%,?&gt;0@9@%.?&gt;0@9@%/?&gt;0@9P@O?= @9P@P?= @9P@Q?= @9PAD??D@9PAG??D@9PAH??X@9PAI??D@9PAJ??D@9PAK?&gt;0@9PAL?&gt;0@9PAO?&gt;0@9PAS??,@9PAT??D@9PAU??X@9PAV??X@9PAW??D@9PA-?= @9PA=?&gt;H@9PB"??D@9PB#??D@9PB$??D@9PB%??D@9PB&amp;??D@9PB''??D@9PB(??D@9PB*??X@9PB+??X@9PB,??X@9PB-??X@9PB/?&gt;0@9PCC??D@9PCE??D@9PCG??D@9PCQ??D@9PCU??X@9PCW??X@9PC!??D@9PC#??D@9PC%??D@9PC1?&gt;0@9PD[??X@9PD]??X@9PD!??X@9PD#??X@9PD%??D@9PW.?&gt;0@9PX"??,@9PX,??X@9PX.??X@9PX6??D@9PX8??D@9P_C?= @9P_F?= @9P_G?= @9P_#?= @9P_$?&gt;H@9P%+??D@9P%,??D@9P%-??D@9P%.??D@9P%/??D@&gt;@@O?&gt;H@&gt;@@P?= @&gt;@@Q?&gt;H@&gt;@@&amp;?&lt;8@&gt;@@(?&lt;8@&gt;@@)?&lt;$@&gt;@@*?&lt;8@&gt;@@+?&lt;8@&gt;@@,?= @&gt;@@.?&lt;$@&gt;@@/?&lt;8@&gt;@@0?&lt;8@&gt;@@1?&lt;8@&gt;@@2?&lt;8@&gt;@@4?&lt;8@&gt;@@6?&lt;8@&gt;@AD?&gt;H@&gt;@AF?= @&gt;@AG?= @&gt;@AH?&gt;H@&gt;@AI?&gt;H@&gt;@AJ?&gt;H@&gt;@AM??X@&gt;@AP?= @&gt;@AQ?= @&gt;@AR?= @&gt;@AS?&gt;H@&gt;@AT?= @&gt;@AU?= @&gt;@AV?&gt;0@&gt;@AW?&gt;H@&gt;@AX?= @&gt;@AY?&gt;H@&gt;@AZ?&gt;H@&gt;@A[?&gt;0@&gt;@A\?&gt;H@&gt;@A]?= @&gt;@A-?= @&gt;@A=?= @&gt;@BI?&lt;8@&gt;@BJ?&lt;8@&gt;@BK?&lt;8@&gt;@BL?&lt;8@&gt;@BM?&lt;8@&gt;@BN?= @&gt;@BO?= @&gt;@BP?= @&gt;@BQ?= @&gt;@BT?&lt;8@&gt;@BU?&lt;8@&gt;@BV?&lt;8@&gt;@BW?&lt;8@&gt;@BX?&lt;8@&gt;@BZ?&lt;8@&gt;@B"?&gt;H@&gt;@B#?&gt;H@&gt;@B$?&gt;H@&gt;@B%?&gt;H@&gt;@B&amp;?&gt;H@&gt;@B''?&gt;H@&gt;@B(?&gt;H@&gt;@B)?= @&gt;@B*?&gt;H@&gt;@B+?&gt;H@&gt;@B,?&gt;H@&gt;@B-?&gt;H@&gt;@B2?= @&gt;@B3?= @&gt;@B4?= @&gt;@B5?= @&gt;@B6?= @&gt;@B7?= @&gt;@B8?= @&gt;@B:?= @&gt;@B;?= @&gt;@B&lt;?= @&gt;@B=?= @&gt;@B&gt;?= @&gt;@B??&gt;H@&gt;@CA?&gt;H@&gt;@CC?&gt;H@&gt;@CE?&gt;H@&gt;@CG?&gt;H@&gt;@CH?&lt;8@&gt;@CJ?&lt;8@&gt;@CK?= @&gt;@CL?&lt;8@&gt;@CN?&lt;8@&gt;@CO?= @&gt;@CQ?= @&gt;@CT?&lt;8@&gt;@CU?&gt;H@&gt;@CW?&gt;H@&gt;@CZ?&lt;8@&gt;@C[?&gt;H@&gt;@C\?&lt;8@&gt;@C^?&lt;8@&gt;@C ?&lt;8@&gt;@C!?&gt;H@&gt;@C"?&lt;8@&gt;@C#?&gt;H@&gt;@C$?&lt;8@&gt;@C%?&gt;H@&gt;@C8?&lt;$@&gt;@C;?&lt;8@&gt;@C=?&lt;8@&gt;@C??&lt;8@&gt;@DC?&lt;8@&gt;@DF?= @&gt;@DH?= @&gt;@DJ?= @&gt;@DN?&lt;8@&gt;@DO?= @&gt;@DP?&lt;8@&gt;@DQ?= @&gt;@DR?&lt;8@&gt;@DS?= @&gt;@DT?&lt;8@&gt;@DU?= @&gt;@D[?= @&gt;@D\?&lt;8@&gt;@D]?&gt;0@&gt;@D ?&lt;8@&gt;@D!?&gt;0@&gt;@D"?&lt;8@&gt;@D#?&gt;0@&gt;@D%?&gt;H@&gt;@D+?= @&gt;@D-?= @&gt;@D/?= @&gt;@D1?= @&gt;@D3?= @&gt;@D9?&gt;H@&gt;@D&lt;?= @&gt;@D&gt;?= @&gt;@E@?= @&gt;@W)?&lt;$@&gt;@XL?= @&gt;@X"?&gt;H@&gt;@X+?&lt;8@&gt;@X,?&gt;0@&gt;@X-?&lt;8@&gt;@X.?&gt;0@&gt;@X6?&gt;H@&gt;@X8?&gt;H@&gt;@ZC?&lt;8@&gt;@Z:?&gt;H@&gt;@_C?&gt;H@&gt;@_F?&gt;H@&gt;@_G?&gt;H@&gt;@_#?= @&gt;@_$?= @&gt;@%+?&gt;H@&gt;@%,?&gt;H@&gt;@%.?&gt;H@&gt;@%/?&gt;H@&gt;P@O?= @&gt;P@P?= @&gt;P@Q?= @&gt;PAD??D@&gt;PAF?&gt;\@&gt;PAG?&gt;H@&gt;PAH?&gt;\@&gt;PAI??X@&gt;PAJ??D@&gt;PAK?=4@&gt;PAL?=4@&gt;PAO?=4@&gt;PAP?&gt;0@&gt;PAQ?&gt;0@&gt;PAR?&gt;\@&gt;PAS??X@&gt;PAT?&gt;H@&gt;PAU?&gt;0@&gt;PAV??X@&gt;PAW??X@&gt;PAX?&gt;0@&gt;PAY?&gt;0@&gt;PAZ?&gt;0@&gt;PA\?&gt;0@&gt;PA-?= @&gt;PA=?&lt;P@&gt;PB"??D@&gt;PB#??D@&gt;PB$??D@&gt;PB%??D@&gt;PB&amp;??D@&gt;PB''??D@&gt;PB(??D@&gt;PB)?&gt;\@&gt;PB*?&gt;\@&gt;PB+?&gt;\@&gt;PB,?&gt;\@&gt;PB-?&gt;\@&gt;PB/?=4@&gt;PB3?&gt;0@&gt;PB4?&gt;\@&gt;PB5?&gt;\@&gt;PB6?&gt;\@&gt;PB7?&gt;\@&gt;PB8?&gt;\@&gt;PB;?&gt;0@&gt;PB&lt;?&gt;0@&gt;PB=?&gt;0@&gt;PB&gt;?&gt;0@&gt;PB??&gt;0@&gt;PCA?&gt;0@&gt;PCC??D@&gt;PCE??D@&gt;PCG??D@&gt;PCK?&gt;\@&gt;PCO?&gt;\@&gt;PCQ?&gt;H@&gt;PCU?&gt;\@&gt;PCW?&gt;\@&gt;PC!??D@&gt;PC#??D@&gt;PC%??D@&gt;PC1?=4@&gt;PDF?&gt;0@&gt;PDH?&gt;0@&gt;PDJ?&gt;0@&gt;PDO?&gt;\@&gt;PDQ?&gt;\@&gt;PDS?&gt;\@&gt;PDU?&gt;\@&gt;PD[?&gt;0@&gt;PD]??X@&gt;PD!??X@&gt;PD#??X@&gt;PD%??X@&gt;PD+?&gt;0@&gt;PD-?&gt;0@&gt;PD/?&gt;0@&gt;PD1?&gt;0@&gt;PD3?&gt;0@&gt;PD9?&gt;0@&gt;PW.?=4@&gt;PX"??X@&gt;PX,??X@&gt;PX.??X@&gt;PX6??X@&gt;PX8??X@&gt;PZ:?&gt;0@&gt;P_C?&lt;P@&gt;P_F?&lt;P@&gt;P_G?&lt;P@&gt;P_#?= @&gt;P_$?&lt;P@&gt;P%+??X@&gt;P%,??X@&gt;P%-??X@&gt;P%.??X@&gt;P%/??X@&gt;0@O?&gt;0@&gt;0@P?&lt;8@&gt;0@Q?&gt;0@&gt;0@&amp;?= @&gt;0@(?&lt;8@&gt;0@)?&lt;$@&gt;0@*?= @&gt;0@+?= @&gt;0@,?&gt;H@&gt;0@.?&lt;$@&gt;0@/?&lt;8@&gt;0@0?= @&gt;0@1?= @&gt;0@2?= @&gt;0@4?= @&gt;0@6?= @&gt;0@7?= @&gt;0@9?&lt;P@&gt;0@:?&lt;P@&gt;0@&lt;?&lt;P@&gt;0AD?&gt;0@&gt;0AF?&gt;H@&gt;0AG?&gt;H@&gt;0AH?&gt;\@&gt;0AI?&gt;H@&gt;0AJ?&gt;0@&gt;0AM??X@&gt;0AP?= @&gt;0AQ?= @&gt;0AR?&gt;H@&gt;0AT?&gt;H@&gt;0AU?&gt;H@&gt;0AV?&gt;0@&gt;0AW?&gt;H@&gt;0AX?= @&gt;0AY?= @&gt;0AZ?= @&gt;0A\?= @&gt;0A]?= @&gt;0A-?&lt;8@&gt;0A=?= @&gt;0BI?= @&gt;0BJ?&lt;8@&gt;0BK?&lt;8@&gt;0BL?&lt;8@&gt;0BM?&lt;8@&gt;0BN?&gt;H@&gt;0BO?&gt;H@&gt;0BP?&gt;H@&gt;0BQ?&gt;H@&gt;0BT?= @&gt;0BU?= @&gt;0BV?= @&gt;0BW?= @&gt;0BX?= @&gt;0BZ?= @&gt;0B_?&lt;P@&gt;0B"?&gt;0@&gt;0B#?&gt;0@&gt;0B$?&gt;0@&gt;0B%?&gt;0@&gt;0B&amp;?&gt;0@&gt;0B''?&gt;0@&gt;0B(?&gt;0@&gt;0B)?&gt;H@&gt;0B*?&gt;\@&gt;0B+?&gt;\@&gt;0B,?&gt;\@&gt;0B-?&gt;\@&gt;0B2?&gt;H@&gt;0B3?= @&gt;0B4?&gt;H@&gt;0B5?&gt;H@&gt;0B6?&gt;H@&gt;0B7?&gt;H@&gt;0B8?&gt;H@&gt;0B:?&gt;H@&gt;0B;?= @&gt;0B&lt;?= @&gt;0B=?= @&gt;0B&gt;?= @&gt;0B??= @&gt;0CA?= @&gt;0CC?&gt;0@&gt;0CE?&gt;0@&gt;0CG?&gt;0@&gt;0CH?= @&gt;0CJ?= @&gt;0CK?&gt;H@&gt;0CL?= @&gt;0CN?= @&gt;0CO?&gt;H@&gt;0CQ?&gt;H@&gt;0CT?&lt;8@&gt;0CU?&gt;\@&gt;0CW?&gt;\@&gt;0CZ?&lt;8@&gt;0C[?&gt;\@&gt;0C\?&lt;8@&gt;0C^?= @&gt;0C ?= @&gt;0C!?&gt;0@&gt;0C"?= @&gt;0C#?&gt;0@&gt;0C$?= @&gt;0C%?&gt;0@&gt;0C8?&lt;$@&gt;0C;?&lt;8@&gt;0C=?&lt;8@&gt;0C??&lt;8@&gt;0DC?&lt;8@&gt;0DF?= @&gt;0DH?= @&gt;0DJ?= @&gt;0DN?= @&gt;0DO?&gt;H@&gt;0DP?= @&gt;0DQ?&gt;H@&gt;0DR?= @&gt;0DS?&gt;H@&gt;0DT?= @&gt;0DU?&gt;H@&gt;0D[?&gt;H@&gt;0D\?= @&gt;0D]?&gt;0@&gt;0D ?= @&gt;0D!?&gt;0@&gt;0D"?= @&gt;0D#?&gt;0@&gt;0D$?= @&gt;0D%?&gt;H@&gt;0D&amp;?= @&gt;0D+?= @&gt;0D-?= @&gt;0D/?= @&gt;0D1?= @&gt;0D3?= @&gt;0D8?&lt;P@&gt;0D9?= @&gt;0D:?&lt;P@&gt;0D&lt;?= @&gt;0D&gt;?= @&gt;0E@?= @&gt;0W)?&lt;$@&gt;0XL?= @&gt;0X+?= @&gt;0X,?&gt;0@&gt;0X-?= @&gt;0X.?&gt;0@&gt;0X5?= @&gt;0X6?&gt;H@&gt;0X7?= @&gt;0X8?&gt;H@&gt;0ZC?&lt;8@&gt;0Z9?&lt;P@&gt;0Z:?= @&gt;0_C?&lt;P@&gt;0_F?&lt;P@&gt;0_G?&lt;P@&gt;0_#?&lt;8@&gt;0_$?= @&gt;0%+?&gt;H@&gt;0%,?&gt;H@&gt;0%.?&gt;H@&gt;0%/?&gt;H@?P@O?&gt;0@?P@P?&lt;8@?P@Q?&gt;0@?P@&amp;?= @?P@(?&lt;8@?P@)?&lt;$@?P@*?= @?P@+?= @?P@,?&gt;H@?P@.?&lt;$@?P@/?&lt;8@?P@0?= @?P@1?= @?P@2?= @?P@4?= @?P@6?= @?P@7?= @?P@9?&lt;P@?P@:?&lt;P@?P@&lt;?&lt;P@?PAD?&gt;0@?PAF?&gt;H@?PAG?&gt;H@?PAH?&gt;\@?PAI?&gt;H@?PAJ?&gt;0@?PAM??X@?PAP?= @?PAQ?= @?PAR?&gt;H@?PAT?&gt;H@?PAU?&gt;H@?PAV?&gt;0@?PAW?&gt;H@?PAX?= @?PAY?= @?PAZ?= @?PA\?= @?PA]?= @?PA-?&lt;8@?PA=?= @?PBI?= @?PBJ?&lt;8@?PBK?&lt;8@?PBL?&lt;8@?PBM?&lt;8@?PBN?&gt;H@?PBO?&gt;H@?PBP?&gt;H@?PBQ?&gt;H@?PBT?= @?PBU?= @?PBV?= @?PBW?= @?PBX?= @?PBZ?= @?PB_?&lt;P@?PB"?&gt;0@?PB#?&gt;0@?PB$?&gt;0@?PB%?&gt;0@?PB&amp;?&gt;0@?PB''?&gt;0@?PB(?&gt;0@?PB)?&gt;H@?PB*?&gt;\@?PB+?&gt;\@?PB,?&gt;\@?PB-?&gt;\@?PB2?&gt;H@?PB3?= @?PB4?&gt;H@?PB5?&gt;H@?PB6?&gt;H@?PB7?&gt;H@?PB8?&gt;H@?PB:?&gt;H@?PB;?= @?PB&lt;?= @?PB=?= @?PB&gt;?= @?PB??= @?PCA?= @?PCC?&gt;0@?PCE?&gt;0@?PCG?&gt;0@?PCH?= @?PCJ?= @?PCK?&gt;H@?PCL?= @?PCN?= @?PCO?&gt;H@?PCQ?&gt;H@?PCT?&lt;8@?PCU?&gt;\@?PCW?&gt;\@?PCZ?&lt;8@?PC[?&gt;\@?PC\?&lt;8@?PC^?= @?PC ?= @?PC!?&gt;0@?PC"?= @?PC#?&gt;0@?PC$?= @?PC%?&gt;0@?PC8?&lt;$@?PC;?&lt;8@?PC=?&lt;8@?PC??&lt;8@?PDC?&lt;8@?PDF?= @?PDH?= @?PDJ?= @?PDN?= @?PDO?&gt;H@?PDP?= @?PDQ?&gt;H@?PDR?= @?PDS?&gt;H@?PDT?= @?PDU?&gt;H@?PD[?&gt;H@?PD\?= @?PD]?&gt;0@?PD ?= @?PD!?&gt;0@?PD"?= @?PD#?&gt;0@?PD$?= @?PD%?&gt;H@?PD&amp;?= @?PD+?= @?PD-?= @?PD/?= @?PD1?= @?PD3?= @?PD8?&lt;P@?PD9?= @?PD:?&lt;P@?PD&lt;?= @?PD&gt;?= @?PE@?= @?PW)?&lt;$@?PXL?= @?PX+?= @?PX,?&gt;0@?PX-?= @?PX.?&gt;0@?PX5?= @?PX6?&gt;H@?PX7?= @?PX8?&gt;H@?PZC?&lt;8@?PZ9?&lt;P@?PZ:?= @?P_C?&lt;P@?P_F?&lt;P@?P_G?&lt;P@?P_#?&lt;8@?P_$?= @?P%+?&gt;H@?P%,?&gt;H@?P%.?&gt;H@?P%/?&gt;H@?0@O?&gt;0@?0@P?&lt;8@?0@Q?&gt;0@?0@&amp;?= @?0@(?&lt;8@?0@)?&lt;$@?0@*?= @?0@+?= @?0@,?&gt;H@?0@.?&lt;$@?0@/?&lt;8@?0@0?= @?0@1?= @?0@2?= @?0@4?= @?0@6?= @?0@7?= @?0@9?&lt;P@?0@:?&lt;P@?0@&lt;?&lt;P@?0AD?&gt;0@?0AF?&gt;H@?0AG?&gt;H@?0AH?&gt;\@?0AI?&gt;H@?0AJ?&gt;0@?0AM??X@?0AP?= @?0AQ?= @?0AR?&gt;H@?0AT?&gt;H@?0AU?&gt;H@?0AV?&gt;0@?0AW?&gt;H@?0AX?= @?0AY?= @?0AZ?= @?0A\?= @?0A]?= @?0A-?&lt;8@?0A=?= @?0BI?= @?0BJ?&lt;8@?0BK?&lt;8@?0BL?&lt;8@?0BM?&lt;8@?0BN?&gt;H@?0BO?&gt;H@?0BP?&gt;H@?0BQ?&gt;H@?0BT?= @?0BU?= @?0BV?= @?0BW?= @?0BX?= @?0BZ?= @?0B_?&lt;P@?0B"?&gt;0@?0B#?&gt;0@?0B$?&gt;0@?0B%?&gt;0@?0B&amp;?&gt;0@?0B''?&gt;0@?0B(?&gt;0@?0B)?&gt;H@?0B*?&gt;\@?0B+?&gt;\@?0B,?&gt;\@?0B-?&gt;\@?0B2?&gt;H@?0B3?= @?0B4?&gt;H@?0B5?&gt;H@?0B6?&gt;H@?0B7?&gt;H@?0B8?&gt;H@?0B:?&gt;H@?0B;?= @?0B&lt;?= @?0B=?= @?0B&gt;?= @?0B??= @?0CA?= @?0CC?&gt;0@?0CE?&gt;0@?0CG?&gt;0@?0CH?= @?0CJ?= @?0CK?&gt;H@?0CL?= @?0CN?= @?0CO?&gt;H@?0CQ?&gt;H@?0CT?&lt;8@?0CU?&gt;\@?0CW?&gt;\@?0CZ?&lt;8@?0C[?&gt;\@?0C\?&lt;8@?0C^?= @?0C ?= @?0C!?&gt;0@?0C"?= @?0C#?&gt;0@?0C$?= @?0C%?&gt;0@?0C8?&lt;$@?0C;?&lt;8@?0C=?&lt;8@?0C??&lt;8@?0DC?&lt;8@?0DF?= @?0DH?= @?0DJ?= @?0DN?= @?0DO?&gt;H@?0DP?= @?0DQ?&gt;H@?0DR?= @?0DS?&gt;H@?0DT?= @?0DU?&gt;H@?0D[?&gt;H@?0D\?= @?0D]?&gt;0@?0D ?= @?0D!?&gt;0@?0D"?= @?0D#?&gt;0@?0D$?= @?0D%?&gt;H@?0D&amp;?= @?0D+?= @?0D-?= @?0D/?= @?0D1?= @?0D3?= @?0D8?&lt;P@?0D9?= @?0D:?&lt;P@?0D&lt;?= @?0D&gt;?= @?0E@?= @?0W)?&lt;$@?0XL?= @?0X+?= @?0X,?&gt;0@?0X-?= @?0X.?&gt;0@?0X5?= @?0X6?&gt;H@?0X7?= @?0X8?&gt;H@?0ZC?&lt;8@?0Z9?&lt;P@?0Z:?= @?0_C?&lt;P@?0_F?&lt;P@?0_G?&lt;P@?0_#?&lt;8@?0_$?= @?0%+?&gt;H@?0%,?&gt;H@?0%.?&gt;H@?0%/?&gt;HA@0@O?&gt;0A@0@P?&lt;8A@0@Q?&gt;0A@0@&amp;?= A@0@(?&lt;8A@0@)?&lt;$A@0@*?= A@0@+?= A@0@,?&gt;HA@0@.?&lt;$A@0@/?&lt;8A@0@0?= A@0@1?= A@0@2?= A@0@4?= A@0@6?= A@0@7?= A@0@9?&lt;PA@0@:?&lt;PA@0@&lt;?&lt;PA@0AD?&gt;0A@0AF?&gt;HA@0AG?&gt;HA@0AH?&gt;\A@0AI?&gt;HA@0AJ?&gt;0A@0AM??XA@0AP?= A@0AQ?= A@0AR?&gt;HA@0AT?&gt;HA@0AU?&gt;HA@0AV?&gt;0A@0AW?&gt;HA@0AX?= A@0AY?= A@0AZ?= A@0A\?= A@0A]?= A@0A-?&lt;8A@0A=?= A@0BI?= A@0BJ?&lt;8A@0BK?&lt;8A@0BL?&lt;8A@0BM?&lt;8A@0BN?&gt;HA@0BO?&gt;HA@0BP?&gt;HA@0BQ?&gt;HA@0BT?= A@0BU?= A@0BV?= A@0BW?= A@0BX?= A@0BZ?= A@0B_?&lt;PA@0B"?&gt;0A@0B#?&gt;0A@0B$?&gt;0A@0B%?&gt;0A@0B&amp;?&gt;0A@0B''?&gt;0A@0B(?&gt;0A@0B)?&gt;HA@0B*?&gt;\A@0B+?&gt;\A@0B,?&gt;\A@0B-?&gt;\A@0B2?&gt;HA@0B3?= A@0B4?&gt;HA@0B5?&gt;HA@0B6?&gt;HA@0B7?&gt;HA@0B8?&gt;HA@0B:?&gt;HA@0B;?= A@0B&lt;?= A@0B=?= A@0B&gt;?= A@0B??= A@0CA?= A@0CC?&gt;0A@0CE?&gt;0A@0CG?&gt;0A@0CH?= A@0CJ?= A@0CK?&gt;HA@0CL?= A@0CN?= A@0CO?&gt;HA@0CQ?&gt;HA@0CT?&lt;8A@0CU?&gt;\A@0CW?&gt;\A@0CZ?&lt;8A@0C[?&gt;\A@0C\?&lt;8A@0C^?= A@0C ?= A@0C!?&gt;0A@0C"?= A@0C#?&gt;0A@0C$?= A@0C%?&gt;0A@0C8?&lt;$A@0C;?&lt;8A@0C=?&lt;8A@0C??&lt;8A@0DC?&lt;8A@0DF?= A@0DH?= A@0DJ?= A@0DN?= A@0DO?&gt;HA@0DP?= A@0DQ?&gt;HA@0DR?= A@0DS?&gt;HA@0DT?= A@0DU?&gt;HA@0D[?&gt;HA@0D\?= A@0D]?&gt;0A@0D ?= A@0D!?&gt;0A@0D"?= A@0D#?&gt;0A@0D$?= A@0D%?&gt;HA@0D&amp;?= A@0D+?= A@0D-?= A@0D/?= A@0D1?= A@0D3?= A@0D8?&lt;PA@0D9?= A@0D:?&lt;PA@0D&lt;?= A@0D&gt;?= A@0E@?= A@0W)?&lt;$A@0XL?= A@0X+?= A@0X,?&gt;0A@0X-?= A@0X.?&gt;0A@0X5?= A@0X6?&gt;HA@0X7?= A@0X8?&gt;HA@0ZC?&lt;8A@0Z9?&lt;PA@0Z:?= A@0_C?&lt;PA@0_F?&lt;PA@0_G?&lt;PA@0_#?&lt;8A@0_$?= A@0%+?&gt;HA@0%,?&gt;HA@0%.?&gt;HA@0%/?&gt;HAA @O?&gt;HAA @P?= AA @Q?&gt;HAA AD??XAA AF??,AA AG??XAA AH??,AA AI??XAA AJ??XAA AK?&gt;0AA AL?&gt;0AA AM??DAA AO?&gt;0AA AP?&gt;0AA AQ?&gt;0AA AR??,AA AS??,AA AT??XAA AU??DAA AV??DAA AW??XAA AX??DAA AY?=4AA AZ?=4AA A[??DAA A\?=4AA A-?= AA A=?&gt;HAA B"??XAA B#??XAA B$??XAA B%??XAA B&amp;??XAA B''??XAA B(??XAA B)??,AA B*??,AA B+??,AA B,??,AA B-??,AA B/?&gt;0AA B3?&gt;0AA B4??,AA B5??,AA B6??,AA B7??,AA B8??,AA B;??DAA B&lt;??DAA B=??DAA B&gt;??DAA B??=4AA CA?=4AA CC??XAA CE??XAA CG??XAA CK??,AA CO??,AA CQ??XAA CU??,AA CW??,AA C!??XAA C#??XAA C%??XAA C1?&gt;0AA DF?&gt;0AA DH?&gt;0AA DJ?&gt;0AA DO??,AA DQ??,AA DS??,AA DU??,AA D[??DAA D]??DAA D!??DAA D#??DAA D%??XAA D+??DAA D-??DAA D/??DAA D1??DAA D3??DAA D9?=4AA W.?&gt;0AA X"??,AA X,??DAA X.??DAA X6??XAA X8??XAA Z:?=4AA _C?&lt;PAA _F?&lt;PAA _G?&lt;PAA _#?= AA _$?&gt;HAA %+??XAA %,??XAA %-??XAA %.??XAA %/??XAB@@O?&gt;HAB@@P?= AB@@Q?&gt;HAB@AD??XAB@AF??,AB@AG??XAB@AH??,AB@AI??XAB@AJ??XAB@AK?&gt;0AB@AL?&gt;0AB@AM??DAB@AO?&gt;0AB@AP?&gt;0AB@AQ?&gt;0AB@AR??,AB@AS??,AB@AT??XAB@AU??DAB@AV??DAB@AW??XAB@AX??DAB@AY?=4AB@AZ?=4AB@A[??DAB@A\?=4AB@A-?= AB@A=?&gt;HAB@B"??XAB@B#??XAB@B$??XAB@B%??XAB@B&amp;??XAB@B''??XAB@B(??XAB@B)??,AB@B*??,AB@B+??,AB@B,??,AB@B-??,AB@B/?&gt;0AB@B3?&gt;0AB@B4??,AB@B5??,AB@B6??,AB@B7??,AB@B8??,AB@B;??DAB@B&lt;??DAB@B=??DAB@B&gt;??DAB@B??=4AB@CA?=4AB@CC??XAB@CE??XAB@CG??XAB@CK??,AB@CO??,AB@CQ??XAB@CU??,AB@CW??,AB@C!??XAB@C#??XAB@C%??XAB@C1?&gt;0AB@DF?&gt;0AB@DH?&gt;0AB@DJ?&gt;0AB@DO??,AB@DQ??,AB@DS??,AB@DU??,AB@D[??DAB@D]??DAB@D!??DAB@D#??DAB@D%??XAB@D+??DAB@D-??DAB@D/??DAB@D1??DAB@D3??DAB@D9?=4AB@W.?&gt;0AB@X"??,AB@X,??DAB@X.??DAB@X6??XAB@X8??XAB@Z:?=4AB@_C?&lt;PAB@_F?&lt;PAB@_G?&lt;PAB@_#?= AB@_$?&gt;HAB@%+??XAB@%,??XAB@%-??XAB@%.??XAB@%/??XAB @O?&gt;HAB @P?= AB @Q?&gt;HAB AD??XAB AF??,AB AG??XAB AH??,AB AI??XAB AJ??XAB AK?&gt;0AB AL?&gt;0AB AM??DAB AO?&gt;0AB AP?&gt;0AB AQ?&gt;0AB AR??,AB AS??,AB AT??XAB AU??DAB AV??DAB AW??XAB AX??DAB AY?=4AB AZ?=4AB A[??DAB A\?=4AB A-?= AB A=?&gt;HAB B"??XAB B#??XAB B$??XAB B%??XAB B&amp;??XAB B''??XAB B(??XAB B)??,AB B*??,AB B+??,AB B,??,AB B-??,AB B/?&gt;0AB B3?&gt;0AB B4??,AB B5??,AB B6??,AB B7??,AB B8??,AB B;??DAB B&lt;??DAB B=??DAB B&gt;??DAB B??=4AB CA?=4AB CC??XAB CE??XAB CG??XAB CK??,AB CO??,AB CQ??XAB CU??,AB CW??,AB C!??XAB C#??XAB C%??XAB C1?&gt;0AB DF?&gt;0AB DH?&gt;0AB DJ?&gt;0AB DO??,AB DQ??,AB DS??,AB DU??,AB D[??DAB D]??DAB D!??DAB D#??DAB D%??XAB D+??DAB D-??DAB D/??DAB D1??DAB D3??DAB D9?=4AB W.?&gt;0AB X"??,AB X,??DAB X.??DAB X6??XAB X8??XAB Z:?=4AB _C?&lt;PAB _F?&lt;PAB _G?&lt;PAB _#?= AB _$?&gt;HAB %+??XAB %,??XAB %-??XAB %.??XAB %/??XAC @O?&gt;HAC @Q?&gt;HAC @$?&gt;HAC @(?&gt;HAC @)?= AC @+?&gt;HAC @,??XAC @.?= AC @/?&gt;HAC @0?&gt;HAC @1?&gt;HAC @6?&gt;0AC @7?= AC @9?= AC @:?= AC @;?&lt;8AC @&lt;?= AC @=?&lt;8AC AD?&gt;0AC AJ?&gt;0AC AP?&gt;0AC AQ?&gt;0AC AS??XAC AU?&gt;0AC AX??DAC A]?&gt;0AC A=?&gt;0AC BB?&gt;HAC BC?&gt;HAC BD?&gt;HAC BE?&gt;HAC BF?&gt;HAC BG?&gt;HAC BH?&gt;HAC BJ?&gt;HAC BK?&gt;HAC BL?&gt;HAC BM?&gt;HAC BN??XAC BO??XAC BP??XAC BQ??XAC B_?= AC B"?&gt;0AC B#?&gt;0AC B$?&gt;0AC B%?&gt;0AC B&amp;?&gt;0AC B''?&gt;0AC B(?&gt;0AC B3?&gt;0AC B;??DAC B&lt;??DAC B=??DAC B&gt;??DAC CB?&gt;HAC CC?&gt;0AC CD?&gt;HAC CE?&gt;0AC CF?&gt;HAC CG?&gt;0AC CT?&gt;HAC CZ?&gt;HAC C\?&gt;HAC C!?&gt;0AC C#?&gt;0AC C%?&gt;0AC C8?= AC C;?&gt;HAC C=?&gt;HAC C??&gt;HAC DC?&gt;HAC DF?&gt;0AC DH?&gt;0AC DJ?&gt;0AC D[?&gt;0AC D\?&gt;0AC D ?&gt;0AC D"?&gt;0AC D$?= AC D&amp;?= AC D+??DAC D-??DAC D/??DAC D1??DAC D3??DAC D8?= AC D:?= AC D;?&lt;8AC D&lt;?&gt;0AC D=?&lt;8AC D&gt;?&gt;0AC D??&lt;8AC E@?&gt;0AC W)?= AC XL?&gt;0AC X"??XAC X+?&gt;0AC X-?&gt;0AC X5?= AC X7?= AC ZC?&gt;HAC Z9?= AC _C?= AC _F?= AC _G?= AC _$?&gt;0AC0@O?&gt;0AC0@Q?&gt;0AC0AD??DAC0AF??XAC0AG??,AC0AI?&gt;0AC0AJ??DAC0AK?&gt;HAC0AL?&gt;HAC0AM??XAC0AO?&gt;HAC0AP?&gt;HAC0AQ?&gt;HAC0AR??XAC0AS??XAC0AT??,AC0AU??DAC0AV?&gt;0AC0AW?&gt;0AC0AX??DAC0AY??DAC0AZ??DAC0A[?&gt;HAC0A\??DAC0A]??DAC0A=?&gt;0AC0B"??DAC0B#??DAC0B$??DAC0B%??DAC0B&amp;??DAC0B''??DAC0B(??DAC0B)??XAC0B/?&gt;HAC0B3?&gt;HAC0B4??XAC0B5??XAC0B6??XAC0B7??XAC0B8??XAC0B;??DAC0B&lt;??DAC0B=??DAC0B&gt;??DAC0B???DAC0CA??DAC0CC??DAC0CE??DAC0CG??DAC0CK??XAC0CO??XAC0CQ??,AC0C!??DAC0C#??DAC0C%??DAC0C1?&gt;HAC0DF?&gt;HAC0DH?&gt;HAC0DJ?&gt;HAC0DO??XAC0DQ??XAC0DS??XAC0DU??XAC0D[??DAC0D]?&gt;0AC0D!?&gt;0AC0D#?&gt;0AC0D%?&gt;0AC0D+??DAC0D-??DAC0D/??DAC0D1??DAC0D3??DAC0D9??DAC0D&lt;??DAC0D&gt;??DAC0E@??DAC0H2??DAC0W.?&gt;HAC0X"??XAC0X,?&gt;0AC0X.?&gt;0AC0X6?&gt;0AC0X8?&gt;0AC0Z:??DAC0_C?= AC0_F?= AC0_G?= AC0_$?&gt;0AC0%+?&gt;0AC0%,?&gt;0AC0%-?&gt;0AC0%.?&gt;0AC0%/?&gt;0AD@@O?&gt;HAD@@Q?&gt;HAD@@$?&gt;HAD@@(?&gt;HAD@@)?= AD@@+?&gt;HAD@@,??XAD@@.?= AD@@/?&gt;HAD@@0?&gt;HAD@@1?&gt;HAD@@6?&gt;0AD@@7?= AD@@9?= AD@@:?= AD@@;?&lt;8AD@@&lt;?= AD@@=?&lt;8AD@AD?&gt;0AD@AJ?&gt;0AD@AP?&gt;0AD@AQ?&gt;0AD@AS??XAD@AU?&gt;0AD@AX??DAD@A]?&gt;0AD@A=?&gt;0AD@BB?&gt;HAD@BC?&gt;HAD@BD?&gt;HAD@BE?&gt;HAD@BF?&gt;HAD@BG?&gt;HAD@BH?&gt;HAD@BJ?&gt;HAD@BK?&gt;HAD@BL?&gt;HAD@BM?&gt;HAD@BN??XAD@BO??XAD@BP??XAD@BQ??XAD@B_?= AD@B"?&gt;0AD@B#?&gt;0AD@B$?&gt;0AD@B%?&gt;0AD@B&amp;?&gt;0AD@B''?&gt;0AD@B(?&gt;0AD@B3?&gt;0AD@B;??DAD@B&lt;??DAD@B=??DAD@B&gt;??DAD@CB?&gt;HAD@CC?&gt;0AD@CD?&gt;HAD@CE?&gt;0AD@CF?&gt;HAD@CG?&gt;0AD@CT?&gt;HAD@CZ?&gt;HAD@C\?&gt;HAD@C!?&gt;0AD@C#?&gt;0AD@C%?&gt;0AD@C8?= AD@C;?&gt;HAD@C=?&gt;HAD@C??&gt;HAD@DC?&gt;HAD@DF?&gt;0AD@DH?&gt;0AD@DJ?&gt;0AD@D[?&gt;0AD@D\?&gt;0AD@D ?&gt;0AD@D"?&gt;0AD@D$?= AD@D&amp;?= AD@D+??DAD@D-??DAD@D/??DAD@D1??DAD@D3??DAD@D8?= AD@D:?= AD@D;?&lt;8AD@D&lt;?&gt;0AD@D=?&lt;8AD@D&gt;?&gt;0AD@D??&lt;8AD@E@?&gt;0AD@W)?= AD@XL?&gt;0AD@X"??XAD@X+?&gt;0AD@X-?&gt;0AD@X5?= AD@X7?= AD@ZC?&gt;HAD@Z9?= AD@_C?= AD@_F?= AD@_G?= AD@_$?&gt;0ADP@O?&gt;0ADP@Q?&gt;0ADPAD??DADPAF??XADPAG??,ADPAI?&gt;0ADPAJ??DADPAK?&gt;HADPAL?&gt;HADPAM??XADPAO?&gt;HADPAP?&gt;HADPAQ?&gt;HADPAR??XADPAS??XADPAT??,ADPAU??DADPAV?&gt;0ADPAW?&gt;0ADPAX??DADPAY??DADPAZ??DADPA[?&gt;HADPA\??DADPA]??DADPA=?&gt;0ADPB"??DADPB#??DADPB$??DADPB%??DADPB&amp;??DADPB''??DADPB(??DADPB)??XADPB/?&gt;HADPB3?&gt;HADPB4??XADPB5??XADPB6??XADPB7??XADPB8??XADPB;??DADPB&lt;??DADPB=??DADPB&gt;??DADPB???DADPCA??DADPCC??DADPCE??DADPCG??DADPCK??XADPCO??XADPCQ??,ADPC!??DADPC#??DADPC%??DADPC1?&gt;HADPDF?&gt;HADPDH?&gt;HADPDJ?&gt;HADPDO??XADPDQ??XADPDS??XADPDU??XADPD[??DADPD]?&gt;0ADPD!?&gt;0ADPD#?&gt;0ADPD%?&gt;0ADPD+??DADPD-??DADPD/??DADPD1??DADPD3??DADPD9??DADPD&lt;??DADPD&gt;??DADPE@??DADPH2??DADPW.?&gt;HADPX"??XADPX,?&gt;0ADPX.?&gt;0ADPX6?&gt;0ADPX8?&gt;0ADPZ:??DADP_C?= ADP_F?= ADP_G?= ADP_$?&gt;0ADP%+?&gt;0ADP%,?&gt;0ADP%-?&gt;0ADP%.?&gt;0ADP%/?&gt;0AD @O?&gt;HAD @Q?&gt;HAD @$?&gt;HAD @(?&gt;HAD @)?= AD @+?&gt;HAD @,??XAD @.?= AD @/?&gt;HAD @0?&gt;HAD @1?&gt;HAD @6?&gt;0AD @7?= AD @9?= AD @:?= AD @;?&lt;8AD @&lt;?= AD @=?&lt;8AD AD?&gt;0AD AJ?&gt;0AD AP?&gt;0AD AQ?&gt;0AD AS??XAD AU?&gt;0AD AX??DAD A]?&gt;0AD A=?&gt;0AD BB?&gt;HAD BC?&gt;HAD BD?&gt;HAD BE?&gt;HAD BF?&gt;HAD BG?&gt;HAD BH?&gt;HAD BJ?&gt;HAD BK?&gt;HAD BL?&gt;HAD BM?&gt;HAD BN??XAD BO??XAD BP??XAD BQ??XAD B_?= AD B"?&gt;0AD B#?&gt;0AD B$?&gt;0AD B%?&gt;0AD B&amp;?&gt;0AD B''?&gt;0AD B(?&gt;0AD B3?&gt;0AD B;??DAD B&lt;??DAD B=??DAD B&gt;??DAD CB?&gt;HAD CC?&gt;0AD CD?&gt;HAD CE?&gt;0AD CF?&gt;HAD CG?&gt;0AD CT?&gt;HAD CZ?&gt;HAD C\?&gt;HAD C!?&gt;0AD C#?&gt;0AD C%?&gt;0AD C8?= AD C;?&gt;HAD C=?&gt;HAD C??&gt;HAD DC?&gt;HAD DF?&gt;0AD DH?&gt;0AD DJ?&gt;0AD D[?&gt;0AD D\?&gt;0AD D ?&gt;0AD D"?&gt;0AD D$?= AD D&amp;?= AD D+??DAD D-??DAD D/??DAD D1??DAD D3??DAD D8?= AD D:?= AD D;?&lt;8AD D&lt;?&gt;0AD D=?&lt;8AD D&gt;?&gt;0AD D??&lt;8AD E@?&gt;0AD W)?= AD XL?&gt;0AD X"??XAD X+?&gt;0AD X-?&gt;0AD X5?= AD X7?= AD ZC?&gt;HAD Z9?= AD _C?= AD _F?= AD _G?= AD _$?&gt;0AD0@O?&gt;0AD0@Q?&gt;0AD0AD??DAD0AF??XAD0AG??,AD0AI?&gt;0AD0AJ??DAD0AK?&gt;HAD0AL?&gt;HAD0AM??XAD0AO?&gt;HAD0AP?&gt;HAD0AQ?&gt;HAD0AR??XAD0AS??XAD0AT??,AD0AU??DAD0AV?&gt;0AD0AW?&gt;0AD0AX??DAD0AY??DAD0AZ??DAD0A[?&gt;HAD0A\??DAD0A]??DAD0A=?&gt;0AD0B"??DAD0B#??DAD0B$??DAD0B%??DAD0B&amp;??DAD0B''??DAD0B(??DAD0B)??XAD0B/?&gt;HAD0B3?&gt;HAD0B4??XAD0B5??XAD0B6??XAD0B7??XAD0B8??XAD0B;??DAD0B&lt;??DAD0B=??DAD0B&gt;??DAD0B???DAD0CA??DAD0CC??DAD0CE??DAD0CG??DAD0CK??XAD0CO??XAD0CQ??,AD0C!??DAD0C#??DAD0C%??DAD0C1?&gt;HAD0DF?&gt;HAD0DH?&gt;HAD0DJ?&gt;HAD0DO??XAD0DQ??XAD0DS??XAD0DU??XAD0D[??DAD0D]?&gt;0AD0D!?&gt;0AD0D#?&gt;0AD0D%?&gt;0AD0D+??DAD0D-??DAD0D/??DAD0D1??DAD0D3??DAD0D9??DAD0D&lt;??DAD0D&gt;??DAD0E@??DAD0H2??DAD0W.?&gt;HAD0X"??XAD0X,?&gt;0AD0X.?&gt;0AD0X6?&gt;0AD0X8?&gt;0AD0Z:??DAD0_C?= AD0_F?= AD0_G?= AD0_$?&gt;0AD0%+?&gt;0AD0%,?&gt;0AD0%-?&gt;0AD0%.?&gt;0AD0%/?&gt;0AE@@$?&gt;HAE@@&amp;?= AE@@(?=LAE@@)?&lt;8AE@@*?= AE@@+?= AE@@,?&gt;HAE@@-?&gt;0AE@@.?&lt;8AE@@/?=LAE@@0?= AE@@1?= AE@@2?= AE@@4?= AE@@6?&lt;8AE@@7?&gt;0AE@@9?&lt;8AE@@:?&lt;8AE@@;?&gt;HAE@@&lt;?&lt;8AE@@=?&gt;HAE@AD?&gt;HAE@AF?&gt;HAE@AG?&gt;HAE@AH?&gt;0AE@AI?&gt;HAE@AJ?&gt;HAE@AM?&gt;HAE@AP?= AE@AQ?= AE@AR?&gt;HAE@AS?&gt;0AE@AT?&gt;HAE@AU?&gt;HAE@AV?&gt;0AE@AW?&gt;HAE@AX?=LAE@AY?= AE@AZ?= AE@A[?&gt;HAE@A\?= AE@A]?= AE@BB?&gt;HAE@BC?&gt;HAE@BD?&gt;HAE@BE?&gt;HAE@BF?&gt;HAE@BG?&gt;HAE@BH?&gt;HAE@BI?= AE@BJ?=LAE@BK?=LAE@BL?=LAE@BM?=LAE@BN?&gt;HAE@BO?&gt;HAE@BP?&gt;HAE@BQ?&gt;HAE@BT?= AE@BU?= AE@BV?= AE@BW?= AE@BX?= AE@BZ?= AE@B_?&lt;8AE@B"?&gt;HAE@B#?&gt;HAE@B$?&gt;HAE@B%?&gt;HAE@B&amp;?&gt;HAE@B''?&gt;HAE@B(?&gt;HAE@B)?&gt;HAE@B*?&gt;0AE@B+?&gt;0AE@B,?&gt;0AE@B-?&gt;0AE@B2?&gt;HAE@B3?= AE@B4?&gt;HAE@B5?&gt;HAE@B6?&gt;HAE@B7?&gt;HAE@B8?&gt;HAE@B:?&gt;HAE@B;?=LAE@B&lt;?=LAE@B=?=LAE@B&gt;?=LAE@B??= AE@CA?= AE@CB?&gt;HAE@CC?&gt;HAE@CD?&gt;HAE@CE?&gt;HAE@CF?&gt;HAE@CG?&gt;HAE@CH?= AE@CJ?= AE@CK?&gt;HAE@CL?= AE@CN?= AE@CO?&gt;HAE@CQ?&gt;HAE@CT?=LAE@CU?&gt;0AE@CW?&gt;0AE@CZ?=LAE@C[?&gt;0AE@C\?=LAE@C^?= AE@C ?= AE@C!?&gt;HAE@C"?= AE@C#?&gt;HAE@C$?= AE@C%?&gt;HAE@C8?&lt;8AE@C;?=LAE@C=?=LAE@C??=LAE@DC?=LAE@DF?= AE@DH?= AE@DJ?= AE@DN?= AE@DO?&gt;HAE@DP?= AE@DQ?&gt;HAE@DR?= AE@DS?&gt;HAE@DT?= AE@DU?&gt;HAE@D[?&gt;HAE@D\?&lt;8AE@D]?&gt;0AE@D ?&lt;8AE@D!?&gt;0AE@D"?&lt;8AE@D#?&gt;0AE@D$?&gt;0AE@D%?&gt;HAE@D&amp;?&gt;0AE@D+?=LAE@D-?=LAE@D/?=LAE@D1?=LAE@D3?=LAE@D8?&lt;8AE@D9?= AE@D:?&lt;8AE@D;?&gt;HAE@D&lt;?= AE@D=?&gt;HAE@D&gt;?= AE@D??&gt;HAE@E@?= AE@W)?&lt;8AE@XL?= AE@X"?&gt;0AE@X+?&lt;8AE@X,?&gt;0AE@X-?&lt;8AE@X.?&gt;0AE@X5?&gt;0AE@X6?&gt;HAE@X7?&gt;0AE@X8?&gt;HAE@ZC?=LAE@Z9?&lt;8AE@Z:?= AE@%+?&gt;HAE@%,?&gt;HAE@%.?&gt;HAE@%/?&gt;HAEPAD??,AEPAF??,AEPAI??,AEPAJ??,AEPAK??XAEPAL??XAEPAO??XAEPAP??DAEPAQ??DAEPAR??,AEPAU??,AEPAV??XAEPAW??,AEPAX??,AEPAY??DAEPAZ??DAEPA[?&gt;\AEPA\??DAEPA]??,AEPB"??,AEPB#??,AEPB$??,AEPB%??,AEPB&amp;??,AEPB''??,AEPB(??,AEPB)??,AEPB/??XAEPB3??DAEPB4??,AEPB5??,AEPB6??,AEPB7??,AEPB8??,AEPB;??,AEPB&lt;??,AEPB=??,AEPB&gt;??,AEPB???DAEPCA??DAEPCC??,AEPCE??,AEPCG??,AEPCK??,AEPCO??,AEPC!??,AEPC#??,AEPC%??,AEPC1??XAEPDF??DAEPDH??DAEPDJ??DAEPDO??,AEPDQ??,AEPDS??,AEPDU??,AEPD[??,AEPD]??XAEPD!??XAEPD#??XAEPD%??,AEPD+??,AEPD-??,AEPD/??,AEPD1??,AEPD3??,AEPD9??DAEPD&lt;??,AEPD&gt;??,AEPE@??,AEPH2??,AEPW.??XAEPX,??XAEPX.??XAEPX6??,AEPX8??,AEPZ:??DAEP%+??,AEP%,??,AEP%-??,AEP%.??,AEP%/??,AF @$??XAF @&amp;??XAF @(?= AF @)?&lt;$AF @*??XAF @+?&gt;HAF @,??XAF @.?&lt;$AF @/?= AF @0?&gt;HAF @1?&gt;HAF @2??XAF @4??XAF @6?&gt;0AF @7?&gt;0AF @9?&lt;8AF @:?&lt;8AF @;?&gt;0AF @&lt;?&lt;8AF @=?&gt;0AF AD??XAF AF??XAF AG??XAF AJ??XAF AM??XAF AP??XAF AQ??XAF AR??XAF AS??XAF AT??XAF AU?&gt;0AF AV??XAF AX?= AF AY??XAF AZ??XAF A\??XAF A]??XAF BB??XAF BC??XAF BD??XAF BE??XAF BF??XAF BG??XAF BH??XAF BI??XAF BJ?= AF BK?= AF BL?= AF BM?= AF BN??XAF BO??XAF BP??XAF BQ??XAF BT??XAF BU??XAF BV??XAF BW??XAF BX??XAF BZ??XAF B_?&lt;8AF B"??XAF B#??XAF B$??XAF B%??XAF B&amp;??XAF B''??XAF B(??XAF B)??XAF B2??XAF B3??XAF B4??XAF B5??XAF B6??XAF B7??XAF B8??XAF B:??XAF B;?= AF B&lt;?= AF B=?= AF B&gt;?= AF B???XAF CA??XAF CB??XAF CC??XAF CD??XAF CE??XAF CF??XAF CG??XAF CH??XAF CJ??XAF CK??XAF CL??XAF CN??XAF CO??XAF CQ??XAF CT?= AF CZ?= AF C\?= AF C^??XAF C ??XAF C!??XAF C"??XAF C#??XAF C$??XAF C%??XAF C8?&lt;$AF C;?= AF C=?= AF C??= AF DC?= AF DF??XAF DH??XAF DJ??XAF DN??XAF DO??XAF DP??XAF DQ??XAF DR??XAF DS??XAF DT??XAF DU??XAF D[?&gt;0AF D\?&gt;0AF D]??XAF D ?&gt;0AF D!??XAF D"?&gt;0AF D#??XAF D$?&gt;0AF D&amp;?&gt;0AF D+?= AF D-?= AF D/?= AF D1?= AF D3?= AF D8?&lt;8AF D9??XAF D:?&lt;8AF D;?&gt;0AF D&lt;??XAF D=?&gt;0AF D&gt;??XAF D??&gt;0AF E@??XAF W)?&lt;$AF XL??XAF X"??XAF X+?&gt;0AF X,??XAF X-?&gt;0AF X.??XAF X5?&gt;0AF X7?&gt;0AF ZC?= AF Z9?&lt;8AF Z:??XAF0@O?&lt;PAF0@P?= AF0@Q?&lt;PAF0AD?&gt;0AF0AF??DAF0AG??,AF0AI@@TAF0AJ?&gt;0AF0AP??,AF0AQ??,AF0AR??DAF0AT??,AF0AV??XAF0AW@@TAF0AX??,AF0A[??XAF0A-?= AF0A=?&gt;HAF0B"?&gt;0AF0B#?&gt;0AF0B$?&gt;0AF0B%?&gt;0AF0B&amp;?&gt;0AF0B''?&gt;0AF0B(?&gt;0AF0B)??DAF0B3??,AF0B4??DAF0B5??DAF0B6??DAF0B7??DAF0B8??DAF0B;??,AF0B&lt;??,AF0B=??,AF0B&gt;??,AF0CC?&gt;0AF0CE?&gt;0AF0CG?&gt;0AF0CK??DAF0CO??DAF0CQ??,AF0C!?&gt;0AF0C#?&gt;0AF0C%?&gt;0AF0DF??,AF0DH??,AF0DJ??,AF0DO??DAF0DQ??DAF0DS??DAF0DU??DAF0D]??XAF0D!??XAF0D#??XAF0D%@@TAF0D+??,AF0D-??,AF0D/??,AF0D1??,AF0D3??,AF0X,??XAF0X.??XAF0X6@@TAF0X8@@TAF0_#?= AF0_$?&gt;HAF0%+@@TAF0%,@@TAF0%-@@TAF0%.@@TAF0%/@@TAG@@O?&lt;8AG@@P?&gt;0AG@@Q?&lt;8AG@@$?&gt;HAG@@&amp;?&gt;0AG@@(?=4AG@@)?= AG@@*?&gt;0AG@@+?&gt;HAG@@,?&gt;0AG@@.?= AG@@/?=4AG@@0?&gt;HAG@@1?&gt;HAG@@2?&gt;0AG@@4?&gt;0AG@@6??XAG@@7?= AG@@9?&lt;8AG@@:?&lt;8AG@@;?&lt;8AG@@&lt;?&lt;8AG@@=?&lt;8AG@AI??XAG@AM??XAG@AP?&gt;0AG@AQ?&gt;0AG@AS??XAG@AU?&gt;0AG@AW??XAG@AX?&gt;\AG@AY?&gt;0AG@AZ?&gt;0AG@A[?= AG@A\?&gt;0AG@A]?&gt;0AG@A-?&gt;0AG@A=?&gt;HAG@BB?&gt;HAG@BC?&gt;HAG@BD?&gt;HAG@BE?&gt;HAG@BF?&gt;HAG@BG?&gt;HAG@BH?&gt;HAG@BI?&gt;0AG@BJ?=4AG@BK?=4AG@BL?=4AG@BM?=4AG@BN?&gt;0AG@BO?&gt;0AG@BP?&gt;0AG@BQ?&gt;0AG@BT?&gt;0AG@BU?&gt;0AG@BV?&gt;0AG@BW?&gt;0AG@BX?&gt;0AG@BZ?&gt;0AG@B_?&lt;8AG@B3?&gt;0AG@B;?&gt;\AG@B&lt;?&gt;\AG@B=?&gt;\AG@B&gt;?&gt;\AG@B??&gt;0AG@CA?&gt;0AG@CB?&gt;HAG@CD?&gt;HAG@CF?&gt;HAG@CH?&gt;0AG@CJ?&gt;0AG@CL?&gt;0AG@CN?&gt;0AG@CT?=4AG@CZ?=4AG@C\?=4AG@C^?&gt;0AG@C ?&gt;0AG@C"?&gt;0AG@C$?&gt;0AG@C8?= AG@C;?=4AG@C=?=4AG@C??=4AG@DC?=4AG@DF?&gt;0AG@DH?&gt;0AG@DJ?&gt;0AG@DN?&gt;0AG@DP?&gt;0AG@DR?&gt;0AG@DT?&gt;0AG@D[?&gt;0AG@D\??XAG@D ??XAG@D"??XAG@D$?= AG@D%??XAG@D&amp;?= AG@D+?&gt;\AG@D-?&gt;\AG@D/?&gt;\AG@D1?&gt;\AG@D3?&gt;\AG@D8?&lt;8AG@D9?&gt;0AG@D:?&lt;8AG@D;?&lt;8AG@D&lt;?&gt;0AG@D=?&lt;8AG@D&gt;?&gt;0AG@D??&lt;8AG@E@?&gt;0AG@W)?= AG@XL?&gt;0AG@X"??XAG@X+??XAG@X-??XAG@X5?= AG@X6??XAG@X7?= AG@X8??XAG@ZC?=4AG@Z9?&lt;8AG@Z:?&gt;0AG@_C?&lt;PAG@_F?&lt;PAG@_G?&lt;PAG@_#?&gt;0AG@_$?&gt;HAG@%+??XAG@%,??XAG@%.??XAG@%/??XAGP@O?= AGP@P?= AGP@Q?= AGPAD??XAGPAF??XAGPAG??,AGPAI?&gt;0AGPAJ??XAGPAK?&gt;0AGPAL?&gt;0AGPAM?&gt;0AGPAO?&gt;0AGPAP?&gt;0AGPAQ?&gt;0AGPAR??XAGPAS??XAGPAT??,AGPAU?&gt;0AGPAV??XAGPAW?&gt;0AGPAX??DAGPAY?&gt;0AGPAZ?&gt;0AGPA[?= AGPA\?&gt;0AGPA-?= AGPA=?&gt;HAGPB"??XAGPB#??XAGPB$??XAGPB%??XAGPB&amp;??XAGPB''??XAGPB(??XAGPB)??XAGPB/?&gt;0AGPB3?&gt;0AGPB4??XAGPB5??XAGPB6??XAGPB7??XAGPB8??XAGPB;??DAGPB&lt;??DAGPB=??DAGPB&gt;??DAGPB??&gt;0AGPCA?&gt;0AGPCC??XAGPCE??XAGPCG??XAGPCK??XAGPCO??XAGPCQ??,AGPC!??XAGPC#??XAGPC%??XAGPC1?&gt;0AGPDF?&gt;0AGPDH?&gt;0AGPDJ?&gt;0AGPDO??XAGPDQ??XAGPDS??XAGPDU??XAGPD[?&gt;0AGPD]??XAGPD!??XAGPD#??XAGPD%?&gt;0AGPD+??DAGPD-??DAGPD/??DAGPD1??DAGPD3??DAGPD9?&gt;0AGPW.?&gt;0AGPX"??XAGPX,??XAGPX.??XAGPX6?&gt;0AGPX8?&gt;0AGPZ:?&gt;0AGP_C?;(AGP_F?;(AGP_G?;(AGP_#?= AGP_$?&gt;HAGP%+?&gt;0AGP%,?&gt;0AGP%-?&gt;0AGP%.?&gt;0AGP%/?&gt;0AH@@O?&lt;8AH@@P?&gt;0AH@@Q?&lt;8AH@@$?&gt;HAH@@&amp;?&gt;0AH@@(?=4AH@@)?= AH@@*?&gt;0AH@@+?&gt;HAH@@,?&gt;0AH@@.?= AH@@/?=4AH@@0?&gt;HAH@@1?&gt;HAH@@2?&gt;0AH@@4?&gt;0AH@@6??XAH@@7?= AH@@9?&lt;8AH@@:?&lt;8AH@@;?&lt;8AH@@&lt;?&lt;8AH@@=?&lt;8AH@AI??XAH@AM??XAH@AP?&gt;0AH@AQ?&gt;0AH@AS??XAH@AU?&gt;0AH@AW??XAH@AX?&gt;\AH@AY?&gt;0AH@AZ?&gt;0AH@A[?= AH@A\?&gt;0AH@A]?&gt;0AH@A-?&gt;0AH@A=?&gt;HAH@BB?&gt;HAH@BC?&gt;HAH@BD?&gt;HAH@BE?&gt;HAH@BF?&gt;HAH@BG?&gt;HAH@BH?&gt;HAH@BI?&gt;0AH@BJ?=4AH@BK?=4AH@BL?=4AH@BM?=4AH@BN?&gt;0AH@BO?&gt;0AH@BP?&gt;0AH@BQ?&gt;0AH@BT?&gt;0AH@BU?&gt;0AH@BV?&gt;0AH@BW?&gt;0AH@BX?&gt;0AH@BZ?&gt;0AH@B_?&lt;8AH@B3?&gt;0AH@B;?&gt;\AH@B&lt;?&gt;\AH@B=?&gt;\AH@B&gt;?&gt;\AH@B??&gt;0AH@CA?&gt;0AH@CB?&gt;HAH@CD?&gt;HAH@CF?&gt;HAH@CH?&gt;0AH@CJ?&gt;0AH@CL?&gt;0AH@CN?&gt;0AH@CT?=4AH@CZ?=4AH@C\?=4AH@C^?&gt;0AH@C ?&gt;0AH@C"?&gt;0AH@C$?&gt;0AH@C8?= AH@C;?=4AH@C=?=4AH@C??=4AH@DC?=4AH@DF?&gt;0AH@DH?&gt;0AH@DJ?&gt;0AH@DN?&gt;0AH@DP?&gt;0AH@DR?&gt;0AH@DT?&gt;0AH@D[?&gt;0AH@D\??XAH@D ??XAH@D"??XAH@D$?= AH@D%??XAH@D&amp;?= AH@D+?&gt;\AH@D-?&gt;\AH@D/?&gt;\AH@D1?&gt;\AH@D3?&gt;\AH@D8?&lt;8AH@D9?&gt;0AH@D:?&lt;8AH@D;?&lt;8AH@D&lt;?&gt;0AH@D=?&lt;8AH@D&gt;?&gt;0AH@D??&lt;8AH@E@?&gt;0AH@W)?= AH@XL?&gt;0AH@X"??XAH@X+??XAH@X-??XAH@X5?= AH@X6??XAH@X7?= AH@X8??XAH@ZC?=4AH@Z9?&lt;8AH@Z:?&gt;0AH@_C?&lt;PAH@_F?&lt;PAH@_G?&lt;PAH@_#?&gt;0AH@_$?&gt;HAH@%+??XAH@%,??XAH@%.??XAH@%/??XAHP@O?= AHP@P?= AHP@Q?= AHPAD??XAHPAF??XAHPAG??,AHPAI?&gt;0AHPAJ??XAHPAK?&gt;0AHPAL?&gt;0AHPAM?&gt;0AHPAO?&gt;0AHPAP?&gt;0AHPAQ?&gt;0AHPAR??XAHPAS??XAHPAT??,AHPAU?&gt;0AHPAV??XAHPAW?&gt;0AHPAX??DAHPAY?&gt;0AHPAZ?&gt;0AHPA[?= AHPA\?&gt;0AHPA-?= AHPA=?&gt;HAHPB"??XAHPB#??XAHPB$??XAHPB%??XAHPB&amp;??XAHPB''??XAHPB(??XAHPB)??XAHPB/?&gt;0AHPB3?&gt;0AHPB4??XAHPB5??XAHPB6??XAHPB7??XAHPB8??XAHPB;??DAHPB&lt;??DAHPB=??DAHPB&gt;??DAHPB??&gt;0AHPCA?&gt;0AHPCC??XAHPCE??XAHPCG??XAHPCK??XAHPCO??XAHPCQ??,AHPC!??XAHPC#??XAHPC%??XAHPC1?&gt;0AHPDF?&gt;0AHPDH?&gt;0AHPDJ?&gt;0AHPDO??XAHPDQ??XAHPDS??XAHPDU??XAHPD[?&gt;0AHPD]??XAHPD!??XAHPD#??XAHPD%?&gt;0AHPD+??DAHPD-??DAHPD/??DAHPD1??DAHPD3??DAHPD9?&gt;0AHPW.?&gt;0AHPX"??XAHPX,??XAHPX.??XAHPX6?&gt;0AHPX8?&gt;0AHPZ:?&gt;0AHP_C?;(AHP_F?;(AHP_G?;(AHP_#?= AHP_$?&gt;HAHP%+?&gt;0AHP%,?&gt;0AHP%-?&gt;0AHP%.?&gt;0AHP%/?&gt;0AH @O?&lt;8AH @P?&gt;0AH @Q?&lt;8AH @$?&gt;HAH @&amp;?&gt;0AH @(?=4AH @)?= AH @*?&gt;0AH @+?&gt;HAH @,?&gt;0AH @.?= AH @/?=4AH @0?&gt;HAH @1?&gt;HAH @2?&gt;0AH @4?&gt;0AH @6??XAH @7?= AH @9?&lt;8AH @:?&lt;8AH @;?&lt;8AH @&lt;?&lt;8AH @=?&lt;8AH AI??XAH AM??XAH AP?&gt;0AH AQ?&gt;0AH AS??XAH AU?&gt;0AH AW??XAH AX?&gt;\AH AY?&gt;0AH AZ?&gt;0AH A[?= AH A\?&gt;0AH A]?&gt;0AH A-?&gt;0AH A=?&gt;HAH BB?&gt;HAH BC?&gt;HAH BD?&gt;HAH BE?&gt;HAH BF?&gt;HAH BG?&gt;HAH BH?&gt;HAH BI?&gt;0AH BJ?=4AH BK?=4AH BL?=4AH BM?=4AH BN?&gt;0AH BO?&gt;0AH BP?&gt;0AH BQ?&gt;0AH BT?&gt;0AH BU?&gt;0AH BV?&gt;0AH BW?&gt;0AH BX?&gt;0AH BZ?&gt;0AH B_?&lt;8AH B3?&gt;0AH B;?&gt;\AH B&lt;?&gt;\AH B=?&gt;\AH B&gt;?&gt;\AH B??&gt;0AH CA?&gt;0AH CB?&gt;HAH CD?&gt;HAH CF?&gt;HAH CH?&gt;0AH CJ?&gt;0AH CL?&gt;0AH CN?&gt;0AH CT?=4AH CZ?=4AH C\?=4AH C^?&gt;0AH C ?&gt;0AH C"?&gt;0AH C$?&gt;0AH C8?= AH C;?=4AH C=?=4AH C??=4AH DC?=4AH DF?&gt;0AH DH?&gt;0AH DJ?&gt;0AH DN?&gt;0AH DP?&gt;0AH DR?&gt;0AH DT?&gt;0AH D[?&gt;0AH D\??XAH D ??XAH D"??XAH D$?= AH D%??XAH D&amp;?= AH D+?&gt;\AH D-?&gt;\AH D/?&gt;\AH D1?&gt;\AH D3?&gt;\AH D8?&lt;8AH D9?&gt;0AH D:?&lt;8AH D;?&lt;8AH D&lt;?&gt;0AH D=?&lt;8AH D&gt;?&gt;0AH D??&lt;8AH E@?&gt;0AH W)?= AH XL?&gt;0AH X"??XAH X+??XAH X-??XAH X5?= AH X6??XAH X7?= AH X8??XAH ZC?=4AH Z9?&lt;8AH Z:?&gt;0AH _C?&lt;PAH _F?&lt;PAH _G?&lt;PAH _#?&gt;0AH _$?&gt;HAH %+??XAH %,??XAH %.??XAH %/??XAH0@O?= AH0@P?= AH0@Q?= AH0AD??XAH0AF??XAH0AG??,AH0AI?&gt;0AH0AJ??XAH0AK?&gt;0AH0AL?&gt;0AH0AM?&gt;0AH0AO?&gt;0AH0AP?&gt;0AH0AQ?&gt;0AH0AR??XAH0AS??XAH0AT??,AH0AU?&gt;0AH0AV??XAH0AW?&gt;0AH0AX??DAH0AY?&gt;0AH0AZ?&gt;0AH0A[?= AH0A\?&gt;0AH0A-?= AH0A=?&gt;HAH0B"??XAH0B#??XAH0B$??XAH0B%??XAH0B&amp;??XAH0B''??XAH0B(??XAH0B)??XAH0B/?&gt;0AH0B3?&gt;0AH0B4??XAH0B5??XAH0B6??XAH0B7??XAH0B8??XAH0B;??DAH0B&lt;??DAH0B=??DAH0B&gt;??DAH0B??&gt;0AH0CA?&gt;0AH0CC??XAH0CE??XAH0CG??XAH0CK??XAH0CO??XAH0CQ??,AH0C!??XAH0C#??XAH0C%??XAH0C1?&gt;0AH0DF?&gt;0AH0DH?&gt;0AH0DJ?&gt;0AH0DO??XAH0DQ??XAH0DS??XAH0DU??XAH0D[?&gt;0AH0D]??XAH0D!??XAH0D#??XAH0D%?&gt;0AH0D+??DAH0D-??DAH0D/??DAH0D1??DAH0D3??DAH0D9?&gt;0AH0W.?&gt;0AH0X"??XAH0X,??XAH0X.??XAH0X6?&gt;0AH0X8?&gt;0AH0Z:?&gt;0AH0_C?;(AH0_F?;(AH0_G?;(AH0_#?= AH0_$?&gt;HAH0%+?&gt;0AH0%,?&gt;0AH0%-?&gt;0AH0%.?&gt;0AH0%/?&gt;0AI@@O?&lt;8AI@@P?= AI@@Q?&lt;8AI@@$?&lt;8AI@@&amp;?= AI@@(?=4AI@@)?= AI@@*?= AI@@+?&gt;HAI@@,?&gt;0AI@@-?= AI@@.?= AI@@/?=4AI@@0?&gt;HAI@@1?&gt;HAI@@2?= AI@@4?= AI@@6?= AI@@9??XAI@@:??XAI@@;?= AI@@&lt;??XAI@@=?= AI@AD?= AI@AF?= AI@AG?= AI@AH?&gt;\AI@AI?&gt;0AI@AJ?= AI@AP?= AI@AQ?= AI@AR?= AI@AS?&gt;HAI@AT?= AI@AU?= AI@AV?= AI@AW?&gt;0AI@AX?= AI@AY?&gt;0AI@AZ?&gt;0AI@A[?&gt;HAI@A\?&gt;0AI@A]?= AI@A-?= AI@A=?= AI@BB?&lt;8AI@BC?&lt;8AI@BD?&lt;8AI@BE?&lt;8AI@BF?&lt;8AI@BG?&lt;8AI@BH?&lt;8AI@BI?= AI@BJ?=4AI@BK?=4AI@BL?=4AI@BM?=4AI@BN?&gt;0AI@BO?&gt;0AI@BP?&gt;0AI@BQ?&gt;0AI@BT?= AI@BU?= AI@BV?= AI@BW?= AI@BX?= AI@BZ?= AI@B_??XAI@B"?= AI@B#?= AI@B$?= AI@B%?= AI@B&amp;?= AI@B''?= AI@B(?= AI@B)?= AI@B*?&gt;\AI@B+?&gt;\AI@B,?&gt;\AI@B-?&gt;\AI@B2?= AI@B3?= AI@B4?= AI@B5?= AI@B6?= AI@B7?= AI@B8?= AI@B:?= AI@B;?= AI@B&lt;?= AI@B=?= AI@B&gt;?= AI@B??&gt;0AI@CA?&gt;0AI@CB?&lt;8AI@CC?= AI@CD?&lt;8AI@CE?= AI@CF?&lt;8AI@CG?= AI@CH?= AI@CJ?= AI@CK?= AI@CL?= AI@CN?= AI@CO?= AI@CQ?= AI@CT?=4AI@CU?&gt;\AI@CW?&gt;\AI@CZ?=4AI@C[?&gt;\AI@C\?=4AI@C^?= AI@C ?= AI@C!?= AI@C"?= AI@C#?= AI@C$?= AI@C%?= AI@C8?= AI@C;?=4AI@C=?=4AI@C??=4AI@DC?=4AI@DF?= AI@DH?= AI@DJ?= AI@DN?= AI@DO?= AI@DP?= AI@DQ?= AI@DR?= AI@DS?= AI@DT?= AI@DU?= AI@D[?= AI@D\?= AI@D]?= AI@D ?= AI@D!?= AI@D"?= AI@D#?= AI@D%?&gt;0AI@D+?= AI@D-?= AI@D/?= AI@D1?= AI@D3?= AI@D8??XAI@D9?&gt;0AI@D:??XAI@D;?= AI@D&lt;?= AI@D=?= AI@D&gt;?= AI@D??= AI@E@?= AI@W)?= AI@XL?= AI@X"?&gt;HAI@X+?= AI@X,?= AI@X-?= AI@X.?= AI@X6?&gt;0AI@X8?&gt;0AI@ZC?=4AI@Z9??XAI@Z:?&gt;0AI@_#?= AI@_$?= AI@%+?&gt;0AI@%,?&gt;0AI@%.?&gt;0AI@%/?&gt;0AIP@P?= AIPAD??XAIPAF?&gt;\AIPAG??DAIPAH??,AIPAI??DAIPAJ??XAIPAK??DAIPAL??DAIPAO??DAIPAP??XAIPAQ??XAIPAR?&gt;\AIPAT??DAIPAU??XAIPAV??XAIPAW??DAIPA[?&gt;0AIPA-?= AIPA=?= AIPB"??XAIPB#??XAIPB$??XAIPB%??XAIPB&amp;??XAIPB''??XAIPB(??XAIPB)?&gt;\AIPB*??,AIPB+??,AIPB,??,AIPB-??,AIPB/??DAIPB3??XAIPB4?&gt;\AIPB5?&gt;\AIPB6?&gt;\AIPB7?&gt;\AIPB8?&gt;\AIPCC??XAIPCE??XAIPCG??XAIPCK?&gt;\AIPCO?&gt;\AIPCQ??DAIPCU??,AIPCW??,AIPC!??XAIPC#??XAIPC%??XAIPC1??DAIPDF??XAIPDH??XAIPDJ??XAIPDO?&gt;\AIPDQ?&gt;\AIPDS?&gt;\AIPDU?&gt;\AIPD[??XAIPD]??XAIPD!??XAIPD#??XAIPD%??DAIPW.??DAIPX,??XAIPX.??XAIPX6??DAIPX8??DAIP_#?= AIP_$?= AIP%+??DAIP%,??DAIP%-??DAIP%.??DAIP%/??DAI @$?&lt;8AI @&amp;?= AI @(?=4AI @)?= AI @*?= AI @+?&gt;HAI @,?&gt;0AI @-?= AI @.?= AI @/?=4AI @0?&gt;HAI @1?&gt;HAI @2?= AI @4?= AI @6?= AI @9??XAI @:??XAI @;?= AI @&lt;??XAI @=?= AI AD?= AI AF?= AI AG?= AI AH?&gt;\AI AI?&gt;0AI AJ?= AI AP?= AI AQ?= AI AR?= AI AS?&gt;HAI AT?= AI AU?= AI AV?= AI AW?&gt;0AI AX?= AI AY?&gt;0AI AZ?&gt;0AI A[?&gt;HAI A\?&gt;0AI A]?= AI BB?&lt;8AI BC?&lt;8AI BD?&lt;8AI BE?&lt;8AI BF?&lt;8AI BG?&lt;8AI BH?&lt;8AI BI?= AI BJ?=4AI BK?=4AI BL?=4AI BM?=4AI BN?&gt;0AI BO?&gt;0AI BP?&gt;0AI BQ?&gt;0AI BT?= AI BU?= AI BV?= AI BW?= AI BX?= AI BZ?= AI B_??XAI B"?= AI B#?= AI B$?= AI B%?= AI B&amp;?= AI B''?= AI B(?= AI B)?= AI B*?&gt;\AI B+?&gt;\AI B,?&gt;\AI B-?&gt;\AI B2?= AI B3?= AI B4?= AI B5?= AI B6?= AI B7?= AI B8?= AI B:?= AI B;?= AI B&lt;?= AI B=?= AI B&gt;?= AI B??&gt;0AI CA?&gt;0AI CB?&lt;8AI CC?= AI CD?&lt;8AI CE?= AI CF?&lt;8AI CG?= AI CH?= AI CJ?= AI CK?= AI CL?= AI CN?= AI CO?= AI CQ?= AI CT?=4AI CU?&gt;\AI CW?&gt;\AI CZ?=4AI C[?&gt;\AI C\?=4AI C^?= AI C ?= AI C!?= AI C"?= AI C#?= AI C$?= AI C%?= AI C8?= AI C;?=4AI C=?=4AI C??=4AI DC?=4AI DF?= AI DH?= AI DJ?= AI DN?= AI DO?= AI DP?= AI DQ?= AI DR?= AI DS?= AI DT?= AI DU?= AI D[?= AI D\?= AI D]?= AI D ?= AI D!?= AI D"?= AI D#?= AI D%?&gt;0AI D+?= AI D-?= AI D/?= AI D1?= AI D3?= AI D8??XAI D9?&gt;0AI D:??XAI D;?= AI D&lt;?= AI D=?= AI D&gt;?= AI D??= AI E@?= AI W)?= AI XL?= AI X"?&gt;HAI X+?= AI X,?= AI X-?= AI X.?= AI X6?&gt;0AI X8?&gt;0AI ZC?=4AI Z9??XAI Z:?&gt;0AI %+?&gt;0AI %,?&gt;0AI %.?&gt;0AI %/?&gt;0AJ0AD??DAJ0AG??DAJ0AH??XAJ0AI??DAJ0AJ??DAJ0AK?&gt;0AJ0AL?&gt;0AJ0AO?&gt;0AJ0AS??,AJ0AT??DAJ0AU??XAJ0AV??XAJ0AW??DAJ0B"??DAJ0B#??DAJ0B$??DAJ0B%??DAJ0B&amp;??DAJ0B''??DAJ0B(??DAJ0B*??XAJ0B+??XAJ0B,??XAJ0B-??XAJ0B/?&gt;0AJ0CC??DAJ0CE??DAJ0CG??DAJ0CQ??DAJ0CU??XAJ0CW??XAJ0C!??DAJ0C#??DAJ0C%??DAJ0C1?&gt;0AJ0D[??XAJ0D]??XAJ0D!??XAJ0D#??XAJ0D%??DAJ0W.?&gt;0AJ0X"??,AJ0X,??XAJ0X.??XAJ0X6??DAJ0X8??DAJ0%+??DAJ0%,??DAJ0%-??DAJ0%.??DAJ0%/??DAKP@O?= AKP@P?= AKP@Q?= AKPAD??DAKPAG??DAKPAH??XAKPAI??DAKPAJ??DAKPAK?&gt;0AKPAL?&gt;0AKPAO?&gt;0AKPAS??,AKPAT??DAKPAU??XAKPAV??XAKPAW??DAKPA-?= AKPA=?&gt;HAKPB"??DAKPB#??DAKPB$??DAKPB%??DAKPB&amp;??DAKPB''??DAKPB(??DAKPB*??XAKPB+??XAKPB,??XAKPB-??XAKPB/?&gt;0AKPCC??DAKPCE??DAKPCG??DAKPCQ??DAKPCU??XAKPCW??XAKPC!??DAKPC#??DAKPC%??DAKPC1?&gt;0AKPD[??XAKPD]??XAKPD!??XAKPD#??XAKPD%??DAKPW.?&gt;0AKPX"??,AKPX,??XAKPX.??XAKPX6??DAKPX8??DAKP_C?= AKP_F?= AKP_G?= AKP_#?= AKP_$?&gt;HAKP%+??DAKP%,??DAKP%-??DAKP%.??DAKP%/??DAK0@O?= AK0@P?= AK0@Q?= AK0AD??DAK0AG??DAK0AH??XAK0AI??DAK0AJ??DAK0AK?&gt;0AK0AL?&gt;0AK0AO?&gt;0AK0AS??,AK0AT??DAK0AU??XAK0AV??XAK0AW??DAK0A-?= AK0A=?&gt;HAK0B"??DAK0B#??DAK0B$??DAK0B%??DAK0B&amp;??DAK0B''??DAK0B(??DAK0B*??XAK0B+??XAK0B,??XAK0B-??XAK0B/?&gt;0AK0CC??DAK0CE??DAK0CG??DAK0CQ??DAK0CU??XAK0CW??XAK0C!??DAK0C#??DAK0C%??DAK0C1?&gt;0AK0D[??XAK0D]??XAK0D!??XAK0D#??XAK0D%??DAK0W.?&gt;0AK0X"??,AK0X,??XAK0X.??XAK0X6??DAK0X8??DAK0_C?= AK0_F?= AK0_G?= AK0_#?= AK0_$?&gt;HAK0%+??DAK0%,??DAK0%-??DAK0%.??DAK0%/??DALPAD??DALPAG??DALPAH??XALPAI??DALPAJ??DALPAK?&gt;0ALPAL?&gt;0ALPAO?&gt;0ALPAS??,ALPAT??DALPAU??XALPAV??XALPAW??DALPB"??DALPB#??DALPB$??DALPB%??DALPB&amp;??DALPB''??DALPB(??DALPB*??XALPB+??XALPB,??XALPB-??XALPB/?&gt;0ALPCC??DALPCE??DALPCG??DALPCQ??DALPCU??XALPCW??XALPC!??DALPC#??DALPC%??DALPC1?&gt;0ALPD[??XALPD]??XALPD!??XALPD#??XALPD%??DALPW.?&gt;0ALPX"??,ALPX,??XALPX.??XALPX6??DALPX8??DALP%+??DALP%,??DALP%-??DALP%.??DALP%/??DAL0@O?= AL0@P?= AL0@Q?= AL0AD??DAL0AG??DAL0AH??XAL0AI??DAL0AJ??DAL0AK?&gt;0AL0AL?&gt;0AL0AO?&gt;0AL0AS??,AL0AT??DAL0AU??XAL0AV??XAL0AW??DAL0A-?= AL0A=?&gt;HAL0B"??DAL0B#??DAL0B$??DAL0B%??DAL0B&amp;??DAL0B''??DAL0B(??DAL0B*??XAL0B+??XAL0B,??XAL0B-??XAL0B/?&gt;0AL0CC??DAL0CE??DAL0CG??DAL0CQ??DAL0CU??XAL0CW??XAL0C!??DAL0C#??DAL0C%??DAL0C1?&gt;0AL0D[??XAL0D]??XAL0D!??XAL0D#??XAL0D%??DAL0W.?&gt;0AL0X"??,AL0X,??XAL0X.??XAL0X6??DAL0X8??DAL0_C?= AL0_F?= AL0_G?= AL0_#?= AL0_$?&gt;HAL0%+??DAL0%,??DAL0%-??DAL0%.??DAL0%/??DAN@@O?&lt;PAN@@P?&lt;8AN@@Q?&lt;PAN@@$?&lt;PAN@@&amp;?&lt;8AN@@(?&lt;$AN@@)?&lt;PAN@@*?&lt;8AN@@+?&lt;8AN@@,?= AN@@-?&gt;HAN@@.?&lt;PAN@@/?&lt;$AN@@0?&lt;8AN@@1?&lt;8AN@@2?&lt;8AN@@4?&lt;8AN@@6?&lt;8AN@@;?&gt;HAN@@=?&gt;HAN@AD?&lt;8AN@AF?&lt;8AN@AG?&lt;8AN@AH?&gt;HAN@AI?&gt;0AN@AJ?&lt;8AN@AP?&lt;PAN@AQ?&lt;PAN@AR?&lt;8AN@AS?= AN@AT?&lt;8AN@AU?&lt;PAN@AV?= AN@AW?&gt;0AN@AX?&lt;8AN@A[?&gt;HAN@A]?&lt;PAN@A-?&lt;8AN@A=?;@AN@BB?&lt;PAN@BC?&lt;PAN@BD?&lt;PAN@BE?&lt;PAN@BF?&lt;PAN@BG?&lt;PAN@BH?&lt;PAN@BI?&lt;8AN@BJ?&lt;$AN@BK?&lt;$AN@BL?&lt;$AN@BM?&lt;$AN@BN?= AN@BO?= AN@BP?= AN@BQ?= AN@BT?&lt;8AN@BU?&lt;8AN@BV?&lt;8AN@BW?&lt;8AN@BX?&lt;8AN@BZ?&lt;8AN@B"?&lt;8AN@B#?&lt;8AN@B$?&lt;8AN@B%?&lt;8AN@B&amp;?&lt;8AN@B''?&lt;8AN@B(?&lt;8AN@B)?&lt;8AN@B*?&gt;HAN@B+?&gt;HAN@B,?&gt;HAN@B-?&gt;HAN@B2?&lt;8AN@B3?&lt;PAN@B4?&lt;8AN@B5?&lt;8AN@B6?&lt;8AN@B7?&lt;8AN@B8?&lt;8AN@B:?&lt;8AN@B;?&lt;8AN@B&lt;?&lt;8AN@B=?&lt;8AN@B&gt;?&lt;8AN@CB?&lt;PAN@CC?&lt;8AN@CD?&lt;PAN@CE?&lt;8AN@CF?&lt;PAN@CG?&lt;8AN@CH?&lt;8AN@CJ?&lt;8AN@CK?&lt;8AN@CL?&lt;8AN@CN?&lt;8AN@CO?&lt;8AN@CQ?&lt;8AN@CT?&lt;$AN@CU?&gt;HAN@CW?&gt;HAN@CZ?&lt;$AN@C[?&gt;HAN@C\?&lt;$AN@C^?&lt;8AN@C ?&lt;8AN@C!?&lt;8AN@C"?&lt;8AN@C#?&lt;8AN@C$?&lt;8AN@C%?&lt;8AN@C8?&lt;PAN@C;?&lt;$AN@C=?&lt;$AN@C??&lt;$AN@DC?&lt;$AN@DF?&lt;PAN@DH?&lt;PAN@DJ?&lt;PAN@DN?&lt;8AN@DO?&lt;8AN@DP?&lt;8AN@DQ?&lt;8AN@DR?&lt;8AN@DS?&lt;8AN@DT?&lt;8AN@DU?&lt;8AN@D[?&lt;PAN@D\?&lt;8AN@D]?= AN@D ?&lt;8AN@D!?= AN@D"?&lt;8AN@D#?= AN@D%?&gt;0AN@D+?&lt;8AN@D-?&lt;8AN@D/?&lt;8AN@D1?&lt;8AN@D3?&lt;8AN@D;?&gt;HAN@D&lt;?&lt;PAN@D=?&gt;HAN@D&gt;?&lt;PAN@D??&gt;HAN@E@?&lt;PAN@W)?&lt;PAN@XL?&lt;PAN@X"?= AN@X+?&lt;8AN@X,?= AN@X-?&lt;8AN@X.?= AN@X6?&gt;0AN@X8?&gt;0AN@ZC?&lt;$AN@_#?&lt;8AN@_$?;@AN@%+?&gt;0AN@%,?&gt;0AN@%.?&gt;0AN@%/?&gt;0ANP@O?&lt;8ANP@P?&gt;0ANP@Q?&lt;8ANPAD?&gt;0ANPAF??XANPAG?&gt;0ANPAH??XANPAI??,ANPAJ?&gt;0ANPAK?&gt;0ANPAL?&gt;0ANPAM??DANPAO?&gt;0ANPAP?&gt;HANPAQ?&gt;HANPAR??XANPAS??DANPAT?&gt;0ANPAU?&gt;\ANPAV?&gt;0ANPAW??,ANPAX?&gt;\ANPAY??DANPAZ??DANPA[??DANPA\??DANPA]??,ANPA-?&gt;0ANPA=?= ANPB"?&gt;0ANPB#?&gt;0ANPB$?&gt;0ANPB%?&gt;0ANPB&amp;?&gt;0ANPB''?&gt;0ANPB(?&gt;0ANPB)??XANPB*??XANPB+??XANPB,??XANPB-??XANPB/?&gt;0ANPB3?&gt;HANPB4??XANPB5??XANPB6??XANPB7??XANPB8??XANPB;?&gt;\ANPB&lt;?&gt;\ANPB=?&gt;\ANPB&gt;?&gt;\ANPB???DANPCA??DANPCC?&gt;0ANPCE?&gt;0ANPCG?&gt;0ANPCK??XANPCO??XANPCQ?&gt;0ANPCU??XANPCW??XANPC!?&gt;0ANPC#?&gt;0ANPC%?&gt;0ANPC1?&gt;0ANPDF?&gt;HANPDH?&gt;HANPDJ?&gt;HANPDO??XANPDQ??XANPDS??XANPDU??XANPD[?&gt;\ANPD]?&gt;0ANPD!?&gt;0ANPD#?&gt;0ANPD%??,ANPD+?&gt;\ANPD-?&gt;\ANPD/?&gt;\ANPD1?&gt;\ANPD3?&gt;\ANPD9??DANPD&lt;??,ANPD&gt;??,ANPE@??,ANPH2??,ANPW.?&gt;0ANPX"??DANPX,?&gt;0ANPX.?&gt;0ANPX6??,ANPX8??,ANPZ:??DANP_C?&gt;0ANP_F?&gt;0ANP_G?&gt;0ANP_#?&gt;0ANP_$?= ANP%+??,ANP%,??,ANP%-??,ANP%.??,ANP%/??,AN @O?&lt;PAN @P?&lt;8AN @Q?&lt;PAN @$?&lt;PAN @&amp;?&lt;8AN @(?&lt;$AN @)?&lt;PAN @*?&lt;8AN @+?&lt;8AN @,?= AN @-?&gt;HAN @.?&lt;PAN @/?&lt;$AN @0?&lt;8AN @1?&lt;8AN @2?&lt;8AN @4?&lt;8AN @6?&lt;8AN @;?&gt;HAN @=?&gt;HAN AD?&lt;8AN AF?&lt;8AN AG?&lt;8AN AH?&gt;HAN AI?&gt;0AN AJ?&lt;8AN AP?&lt;PAN AQ?&lt;PAN AR?&lt;8AN AS?= AN AT?&lt;8AN AU?&lt;PAN AV?= AN AW?&gt;0AN AX?&lt;8AN A[?&gt;HAN A]?&lt;PAN A-?&lt;8AN A=?;@AN BB?&lt;PAN BC?&lt;PAN BD?&lt;PAN BE?&lt;PAN BF?&lt;PAN BG?&lt;PAN BH?&lt;PAN BI?&lt;8AN BJ?&lt;$AN BK?&lt;$AN BL?&lt;$AN BM?&lt;$AN BN?= AN BO?= AN BP?= AN BQ?= AN BT?&lt;8AN BU?&lt;8AN BV?&lt;8AN BW?&lt;8AN BX?&lt;8AN BZ?&lt;8AN B"?&lt;8AN B#?&lt;8AN B$?&lt;8AN B%?&lt;8AN B&amp;?&lt;8AN B''?&lt;8AN B(?&lt;8AN B)?&lt;8AN B*?&gt;HAN B+?&gt;HAN B,?&gt;HAN B-?&gt;HAN B2?&lt;8AN B3?&lt;PAN B4?&lt;8AN B5?&lt;8AN B6?&lt;8AN B7?&lt;8AN B8?&lt;8AN B:?&lt;8AN B;?&lt;8AN B&lt;?&lt;8AN B=?&lt;8AN B&gt;?&lt;8AN CB?&lt;PAN CC?&lt;8AN CD?&lt;PAN CE?&lt;8AN CF?&lt;PAN CG?&lt;8AN CH?&lt;8AN CJ?&lt;8AN CK?&lt;8AN CL?&lt;8AN CN?&lt;8AN CO?&lt;8AN CQ?&lt;8AN CT?&lt;$AN CU?&gt;HAN CW?&gt;HAN CZ?&lt;$AN C[?&gt;HAN C\?&lt;$AN C^?&lt;8AN C ?&lt;8AN C!?&lt;8AN C"?&lt;8AN C#?&lt;8AN C$?&lt;8AN C%?&lt;8AN C8?&lt;PAN C;?&lt;$AN C=?&lt;$AN C??&lt;$AN DC?&lt;$AN DF?&lt;PAN DH?&lt;PAN DJ?&lt;PAN DN?&lt;8AN DO?&lt;8AN DP?&lt;8AN DQ?&lt;8AN DR?&lt;8AN DS?&lt;8AN DT?&lt;8AN DU?&lt;8AN D[?&lt;PAN D\?&lt;8AN D]?= AN D ?&lt;8AN D!?= AN D"?&lt;8AN D#?= AN D%?&gt;0AN D+?&lt;8AN D-?&lt;8AN D/?&lt;8AN D1?&lt;8AN D3?&lt;8AN D;?&gt;HAN D&lt;?&lt;PAN D=?&gt;HAN D&gt;?&lt;PAN D??&gt;HAN E@?&lt;PAN W)?&lt;PAN XL?&lt;PAN X"?= AN X+?&lt;8AN X,?= AN X-?&lt;8AN X.?= AN X6?&gt;0AN X8?&gt;0AN ZC?&lt;$AN _#?&lt;8AN _$?;@AN %+?&gt;0AN %,?&gt;0AN %.?&gt;0AN %/?&gt;0AN0@O?&gt;HAN0@P?= AN0@Q?&gt;HAN0A-?= AN0A=?= AN0_C?&gt;HAN0_F?&gt;HAN0_G?&gt;HAN0_#?= AN0_$?= AO@@O?= AO@@P?&lt;8AO@@Q?= AO@AD?&gt;0AO@AF?&gt;0AO@AI??XAO@AJ?&gt;0AO@AK?&gt;0AO@AL?&gt;0AO@AM??XAO@AO?&gt;0AO@AP?&gt;HAO@AQ?&gt;HAO@AR?&gt;0AO@AS?&gt;0AO@AU?&gt;HAO@AV?&gt;0AO@AW??XAO@AX?&gt;\AO@AY?&gt;0AO@AZ?&gt;0AO@A[?&gt;0AO@A\?&gt;0AO@A-?&lt;8AO@A=?&lt;PAO@B"?&gt;0AO@B#?&gt;0AO@B$?&gt;0AO@B%?&gt;0AO@B&amp;?&gt;0AO@B''?&gt;0AO@B(?&gt;0AO@B)?&gt;0AO@B/?&gt;0AO@B3?&gt;HAO@B4?&gt;0AO@B5?&gt;0AO@B6?&gt;0AO@B7?&gt;0AO@B8?&gt;0AO@B;?&gt;\AO@B&lt;?&gt;\AO@B=?&gt;\AO@B&gt;?&gt;\AO@B??&gt;0AO@CA?&gt;0AO@CC?&gt;0AO@CE?&gt;0AO@CG?&gt;0AO@CK?&gt;0AO@CO?&gt;0AO@C!?&gt;0AO@C#?&gt;0AO@C%?&gt;0AO@C1?&gt;0AO@DF?&gt;HAO@DH?&gt;HAO@DJ?&gt;HAO@DO?&gt;0AO@DQ?&gt;0AO@DS?&gt;0AO@DU?&gt;0AO@D[?&gt;HAO@D]?&gt;0AO@D!?&gt;0AO@D#?&gt;0AO@D%??XAO@D+?&gt;\AO@D-?&gt;\AO@D/?&gt;\AO@D1?&gt;\AO@D3?&gt;\AO@D9?&gt;0AO@W.?&gt;0AO@X"?&gt;0AO@X,?&gt;0AO@X.?&gt;0AO@X6??XAO@X8??XAO@Z:?&gt;0AO@_C?= AO@_F?= AO@_G?= AO@_#?&lt;8AO@_$?&lt;PAO@%+??XAO@%,??XAO@%-??XAO@%.??XAO@%/??XAOP@O?&gt;HAOP@P?= AOP@Q?&gt;HAOPA-?= AOPA=?= AOP_C?&gt;HAOP_F?&gt;HAOP_G?&gt;HAOP_#?= AOP_$?= AO @O?= AO @P?&lt;8AO @Q?= AO AD?&gt;0AO AF?&gt;0AO AI??XAO AJ?&gt;0AO AK?&gt;0AO AL?&gt;0AO AM??XAO AO?&gt;0AO AP?&gt;HAO AQ?&gt;HAO AR?&gt;0AO AS?&gt;0AO AU?&gt;HAO AV?&gt;0AO AW??XAO AX?&gt;\AO AY?&gt;0AO AZ?&gt;0AO A[?&gt;0AO A\?&gt;0AO A-?&lt;8AO A=?&lt;PAO B"?&gt;0AO B#?&gt;0AO B$?&gt;0AO B%?&gt;0AO B&amp;?&gt;0AO B''?&gt;0AO B(?&gt;0AO B)?&gt;0AO B/?&gt;0AO B3?&gt;HAO B4?&gt;0AO B5?&gt;0AO B6?&gt;0AO B7?&gt;0AO B8?&gt;0AO B;?&gt;\AO B&lt;?&gt;\AO B=?&gt;\AO B&gt;?&gt;\AO B??&gt;0AO CA?&gt;0AO CC?&gt;0AO CE?&gt;0AO CG?&gt;0AO CK?&gt;0AO CO?&gt;0AO C!?&gt;0AO C#?&gt;0AO C%?&gt;0AO C1?&gt;0AO DF?&gt;HAO DH?&gt;HAO DJ?&gt;HAO DO?&gt;0AO DQ?&gt;0AO DS?&gt;0AO DU?&gt;0AO D[?&gt;HAO D]?&gt;0AO D!?&gt;0AO D#?&gt;0AO D%??XAO D+?&gt;\AO D-?&gt;\AO D/?&gt;\AO D1?&gt;\AO D3?&gt;\AO D9?&gt;0AO W.?&gt;0AO X"?&gt;0AO X,?&gt;0AO X.?&gt;0AO X6??XAO X8??XAO Z:?&gt;0AO _C?= AO _F?= AO _G?= AO _#?&lt;8AO _$?&lt;PAO %+??XAO %,??XAO %-??XAO %.??XAO %/??XAO0@O?&gt;HAO0@P?= AO0@Q?&gt;HAO0@&amp;?&lt;8AO0@(?&lt;8AO0@)?&lt;$AO0@*?&lt;8AO0@+?&lt;8AO0@,?= AO0@.?&lt;$AO0@/?&lt;8AO0@0?&lt;8AO0@1?&lt;8AO0@2?&lt;8AO0@4?&lt;8AO0@6?&lt;8AO0AD?&gt;HAO0AF?= AO0AG?= AO0AH?&gt;HAO0AI?&gt;HAO0AJ?&gt;HAO0AM??XAO0AP?= AO0AQ?= AO0AR?= AO0AS?&gt;HAO0AT?= AO0AU?= AO0AV?&gt;0AO0AW?&gt;HAO0AX?= AO0AY?&gt;HAO0AZ?&gt;HAO0A[?&gt;0AO0A\?&gt;HAO0A]?= AO0A-?= AO0A=?= AO0BI?&lt;8AO0BJ?&lt;8AO0BK?&lt;8AO0BL?&lt;8AO0BM?&lt;8AO0BN?= AO0BO?= AO0BP?= AO0BQ?= AO0BT?&lt;8AO0BU?&lt;8AO0BV?&lt;8AO0BW?&lt;8AO0BX?&lt;8AO0BZ?&lt;8AO0B"?&gt;HAO0B#?&gt;HAO0B$?&gt;HAO0B%?&gt;HAO0B&amp;?&gt;HAO0B''?&gt;HAO0B(?&gt;HAO0B)?= AO0B*?&gt;HAO0B+?&gt;HAO0B,?&gt;HAO0B-?&gt;HAO0B2?= AO0B3?= AO0B4?= AO0B5?= AO0B6?= AO0B7?= AO0B8?= AO0B:?= AO0B;?= AO0B&lt;?= AO0B=?= AO0B&gt;?= AO0B??&gt;HAO0CA?&gt;HAO0CC?&gt;HAO0CE?&gt;HAO0CG?&gt;HAO0CH?&lt;8AO0CJ?&lt;8AO0CK?= AO0CL?&lt;8AO0CN?&lt;8AO0CO?= AO0CQ?= AO0CT?&lt;8AO0CU?&gt;HAO0CW?&gt;HAO0CZ?&lt;8AO0C[?&gt;HAO0C\?&lt;8AO0C^?&lt;8AO0C ?&lt;8AO0C!?&gt;HAO0C"?&lt;8AO0C#?&gt;HAO0C$?&lt;8AO0C%?&gt;HAO0C8?&lt;$AO0C;?&lt;8AO0C=?&lt;8AO0C??&lt;8AO0DC?&lt;8AO0DF?= AO0DH?= AO0DJ?= AO0DN?&lt;8AO0DO?= AO0DP?&lt;8AO0DQ?= AO0DR?&lt;8AO0DS?= AO0DT?&lt;8AO0DU?= AO0D[?= AO0D\?&lt;8AO0D]?&gt;0AO0D ?&lt;8AO0D!?&gt;0AO0D"?&lt;8AO0D#?&gt;0AO0D%?&gt;HAO0D+?= AO0D-?= AO0D/?= AO0D1?= AO0D3?= AO0D9?&gt;HAO0D&lt;?= AO0D&gt;?= AO0E@?= AO0W)?&lt;$AO0XL?= AO0X"?&gt;HAO0X+?&lt;8AO0X,?&gt;0AO0X-?&lt;8AO0X.?&gt;0AO0X6?&gt;HAO0X8?&gt;HAO0ZC?&lt;8AO0Z:?&gt;HAO0_C?&gt;HAO0_F?&gt;HAO0_G?&gt;HAO0_#?= AO0_$?= AO0%+?&gt;HAO0%,?&gt;HAO0%.?&gt;HAO0%/?&gt;HAP@@O?= AP@@P?&lt;8AP@@Q?= AP@AD?&gt;0AP@AF?&gt;0AP@AI??XAP@AJ?&gt;0AP@AK?&gt;0AP@AL?&gt;0AP@AM??XAP@AO?&gt;0AP@AP?&gt;HAP@AQ?&gt;HAP@AR?&gt;0AP@AS?&gt;0AP@AU?&gt;HAP@AV?&gt;0AP@AW??XAP@AX?&gt;\AP@AY?&gt;0AP@AZ?&gt;0AP@A[?&gt;0AP@A\?&gt;0AP@A-?&lt;8AP@A=?&lt;PAP@B"?&gt;0AP@B#?&gt;0AP@B$?&gt;0AP@B%?&gt;0AP@B&amp;?&gt;0AP@B''?&gt;0AP@B(?&gt;0AP@B)?&gt;0AP@B/?&gt;0AP@B3?&gt;HAP@B4?&gt;0AP@B5?&gt;0AP@B6?&gt;0AP@B7?&gt;0AP@B8?&gt;0AP@B;?&gt;\AP@B&lt;?&gt;\AP@B=?&gt;\AP@B&gt;?&gt;\AP@B??&gt;0AP@CA?&gt;0AP@CC?&gt;0AP@CE?&gt;0AP@CG?&gt;0AP@CK?&gt;0AP@CO?&gt;0AP@C!?&gt;0AP@C#?&gt;0AP@C%?&gt;0AP@C1?&gt;0AP@DF?&gt;HAP@DH?&gt;HAP@DJ?&gt;HAP@DO?&gt;0AP@DQ?&gt;0AP@DS?&gt;0AP@DU?&gt;0AP@D[?&gt;HAP@D]?&gt;0AP@D!?&gt;0AP@D#?&gt;0AP@D%??XAP@D+?&gt;\AP@D-?&gt;\AP@D/?&gt;\AP@D1?&gt;\AP@D3?&gt;\AP@D9?&gt;0AP@W.?&gt;0AP@X"?&gt;0AP@X,?&gt;0AP@X.?&gt;0AP@X6??XAP@X8??XAP@Z:?&gt;0AP@_C?= AP@_F?= AP@_G?= AP@_#?&lt;8AP@_$?&lt;PAP@%+??XAP@%,??XAP@%-??XAP@%.??XAP@%/??XA^P@$?= A^P@&amp;?&gt;0A^P@(?=LA^P@)?&lt;8A^P@*?&gt;0A^P@+?= A^P@,?&gt;HA^P@.?&lt;8A^P@/?=LA^P@0?= A^P@1?= A^P@2?&gt;0A^P@4?&gt;0A^P@6??XA^P@7?= A^P@9?&lt;8A^P@:?&lt;8A^P@;?= A^P@&lt;?&lt;8A^P@=?= A^PAD?&gt;0A^PAI?&gt;0A^PAJ?&gt;0A^PAM?&gt;HA^PAP?&gt;HA^PAQ?&gt;HA^PAS?&gt;0A^PAU?&gt;0A^PAV?&gt;0A^PAW?&gt;0A^PAX?&gt;HA^PAY??XA^PAZ??XA^PA[?&gt;HA^PA\??XA^PA]?&gt;HA^PBB?= A^PBC?= A^PBD?= A^PBE?= A^PBF?= A^PBG?= A^PBH?= A^PBI?&gt;0A^PBJ?=LA^PBK?=LA^PBL?=LA^PBM?=LA^PBN?&gt;HA^PBO?&gt;HA^PBP?&gt;HA^PBQ?&gt;HA^PBT?&gt;0A^PBU?&gt;0A^PBV?&gt;0A^PBW?&gt;0A^PBX?&gt;0A^PBZ?&gt;0A^PB_?&lt;8A^PB"?&gt;0A^PB#?&gt;0A^PB$?&gt;0A^PB%?&gt;0A^PB&amp;?&gt;0A^PB''?&gt;0A^PB(?&gt;0A^PB3?&gt;HA^PB;?&gt;HA^PB&lt;?&gt;HA^PB=?&gt;HA^PB&gt;?&gt;HA^PB???XA^PCA??XA^PCB?= A^PCC?&gt;0A^PCD?= A^PCE?&gt;0A^PCF?= A^PCG?&gt;0A^PCH?&gt;0A^PCJ?&gt;0A^PCL?&gt;0A^PCN?&gt;0A^PCT?=LA^PCZ?=LA^PC\?=LA^PC^?&gt;0A^PC ?&gt;0A^PC!?&gt;0A^PC"?&gt;0A^PC#?&gt;0A^PC$?&gt;0A^PC%?&gt;0A^PC8?&lt;8A^PC;?=LA^PC=?=LA^PC??=LA^PDC?=LA^PDF?&gt;HA^PDH?&gt;HA^PDJ?&gt;HA^PDN?&gt;0A^PDP?&gt;0A^PDR?&gt;0A^PDT?&gt;0A^PD[?&gt;0A^PD\??XA^PD]?&gt;0A^PD ??XA^PD!?&gt;0A^PD"??XA^PD#?&gt;0A^PD$?= A^PD%?&gt;0A^PD&amp;?= A^PD+?&gt;HA^PD-?&gt;HA^PD/?&gt;HA^PD1?&gt;HA^PD3?&gt;HA^PD8?&lt;8A^PD9??XA^PD:?&lt;8A^PD;?= A^PD&lt;?&gt;HA^PD=?= A^PD&gt;?&gt;HA^PD??= A^PE@?&gt;HA^PW)?&lt;8A^PXL?&gt;HA^PX"?&gt;0A^PX+??XA^PX,?&gt;0A^PX-??XA^PX.?&gt;0A^PX5?= A^PX6?&gt;0A^PX7?= A^PX8?&gt;0A^PZC?=LA^PZ9?&lt;8A^PZ:??XA^P%+?&gt;0A^P%,?&gt;0A^P%.?&gt;0A^P%/?&gt;0@@FM:@@DP$&amp;@@@@0C[@F6@@??,@F6@AC?3 F6@AG?,@F6@BS?1@F6@B[?;@F6@B#?40F6@B''?3 F6@B+?;@F6@B/?6@F6@B3?;@F6@B7?6@F6@B;?3 F6@B??40F6@CC?6@F6@CG?6@F6@CK?;@F6@CS?;@F6@C[?8 F6@C_?8 F6@C''?6@F6@C+?6@F6@C/?1@F6@C3?6@F6@C7?1@F6@DS?3 F6@D[?6@F6@D_?6@F6@D#?8 F6@D+?3 F6@EC?6@F6@EG?6@F6@EK?6@F6@EO?;@F6@ES?6@F6@EW?8 F6@E[?8 F6@E#?6@F6@E/?6@F6@E7?6@F6@F7?3 F6@G7?1@F6@HK?1@F6@HO?1@F6@HS?1@F6@HW?1@F6@H[?1@F6@H_?1@F6@H#?1@F6@H''?;@F6@H+?40F6@H/?40F6@H3?40F6@H7?40F6@H;?;@F6@H??;@F6@IC?;@F6@IG?;@F6@IS?;@F6@IW?;@F6@I[?;@F6@I_?;@F6@I#?;@F6@I+?;@F6@I??6@F6@JK?3 F6@JO?3 F6@JS?3 F6@JW?3 F6@J[?3 F6@J_?3 F6@J#?3 F6@J''?6@F6@J+?8 F6@J/?8 F6@J3?8 F6@J7?8 F6@KK?6@F6@KO?6@F6@KS?6@F6@KW?6@F6@K[?6@F6@K_?6@F6@K#?6@F6@K+?6@F6@K/?6@F6@K3?6@F6@K7?6@F6@K;?6@F6@LK?1@F6@LO?3 F6@LS?1@F6@LW?3 F6@L[?1@F6@L_?3 F6@L#?;@F6@L+?;@F6@L/?6@F6@L3?;@F6@L;?;@F6@L??6@F6@MG?6@F6@MS?40F6@MW?8 F6@M_?8 F6@M+?40F6@M/?8 F6@M3?40F6@M;?;@F6@NC?;@F6@NG?3 F6@NK?;@F6@NO?3 F6@NS?;@F6@NW?3 F6@O#?3 F6@O/?40F6@O7?40F6@O??40F6@PO?40F6@P[?6@F6@P#?6@F6@P+?6@F6@P;?;@F6@P??6@F6@QC?;@F6@QG?6@F6@QK?;@F6@QO?6@F6@QS?;@F6@QW?6@F6@Q/?8 F6@Q3?8 F6@Q7?8 F6@RC?8 F6@RG?8 F6@RK?8 F6@RO?8 F6@RS?8 F6@R[?8 F6@R/?6@F6@R7?6@F6@R??6@F6@SG?6@F6@SO?6@F6@S#?6@F6@S+?6@F6@S/?1@F6@S3?6@F6@S7?1@F6@S;?6@F6@S??1@F6@TC?6@F6A^''?3 F6A 3?6@F6A"K?;@F6A"/?8 F6A"3?8 F6A"7?8 F6A";?8 F6A#W?8 F6A#_?8 F6A(O?40F6A+''?6@F6A&lt;O?;@F6A&lt;[?;@F6A&lt;_?;@F6A&gt;O?3 F6A&gt;S?1@H2@@??6@H2@AC?3 H2@AG?6@H2@F7?3 H2@G7?1@H2A&lt;O?6@H2A&lt;[?6@H2A&lt;_?6@H2A&gt;O?3 H2A&gt;S?1@M*@6/?;@M*@7_?8 M*@7;?;@M*@8W?;@M*@8#?;@M*@8/?;@M*@9S?;@M*@9[?;@M*@9_?8 M*@9''?8 M*@9+?8 M*@9/?8 M*@93?8 M*@97?8 M*@9;?8 M*@9??8 M*@:C?8 M*@:G?8 M*@:K?8 M*@:O?8 M*@:S?8 M*@:W?8 M*@:[?8 M*@:_?8 M*@:#?8 M*@:''?8 M*@:+?8 M*@:/?8 M*@:3?8 M*@:7?8 M*@:;?8 M*@:??8 M*@;C?8 M*@;G?8 M*@;K?8 M*@;O?8 M*@;S?8 M*@;W?8 M*@;[?8 M*@;_?8 M*@;#?8 M*@;''?8 M*@;+?8 M*@;/?8 M*@;3?8 M*@;7?8 M*@;;?8 M*@;??8 M*@&lt;C?8 M*@&lt;G?8 M*@&lt;K?8 M*@&lt;O?8 M*@&lt;S?8 M*@&lt;W?8 M*@&lt;[?8 M+@8''?;@M+@9[?;@M3@6/?6@M3@7;?6@M3@8W?6@M3@8#?6@M3@8''?;@M3@8/?6@M3@9S?6@M3@9[?;@M3@9_?;@M3@9''?;@M3@9+?;@M3@9/?;@M3@93?;@M3@97?;@M3@9;?;@M3@9??;@M3@:C?;@M3@:G?;@M3@:K?;@M3@:O?;@M3@:S?;@M3@:W?;@M3@:[?;@M3@:_?;@M3@:#?;@M3@:''?;@M3@:+?;@M3@:/?;@M3@:3?;@M3@:7?;@M3@:;?;@M3@:??;@M3@;C?;@M3@;G?;@M3@;K?;@M3@;O?;@M3@;S?;@M3@;W?;@M3@;[?;@M3@;_?;@M3@;#?;@M3@;''?;@M3@;+?;@M3@;/?;@M3@;3?;@M3@;7?;@M3@;;?;@M3@;??;@M3@&lt;C?;@M3@&lt;G?;@M3@&lt;K?;@M3@&lt;O?;@M3@&lt;S?;@M3@&lt;W?;@M3@&lt;[?;@M5@6/?8 M5@7_?6@M5@7;?8 M5@8W?8 M5@8#?8 M5@8/?8 M5@9S?8 M5@9[?8 M5@9_?8 M5@9''?8 M5@9+?8 M5@9/?8 M5@93?8 M5@97?8 M5@9;?8 M5@9??8 M5@:C?8 M5@:G?8 M5@:K?8 M5@:O?8 M5@:S?8 M5@:W?8 M5@:[?8 M5@:_?8 M5@:#?8 M5@:''?8 M5@:+?8 M5@:/?8 M5@:3?8 M5@:7?8 M5@:;?8 M5@:??8 M5@;C?8 M5@;G?8 M5@;K?8 M5@;O?8 M5@;S?8 M5@;W?8 M5@;[?8 M5@;_?8 M5@;#?8 M5@;''?8 M5@;+?8 M5@;/?8 M5@;3?8 M5@;7?8 M5@;;?8 M5@;??8 M5@&lt;C?8 M5@&lt;G?8 M5@&lt;K?8 M5@&lt;O?8 M5@&lt;S?8 M5@&lt;W?8 M5@&lt;[?8 M:@6/?;@M:@7_?8 M:@7;?;@M:@8W?;@M:@8#?;@M:@8/?;@M:@9S?;@M:@9[?;@M:@9_?8 M:@9''?8 M:@9+?8 M:@9/?8 M:@93?8 M:@97?8 M:@9;?8 M:@9??8 M:@:C?8 M:@:G?8 M:@:K?8 M:@:O?8 M:@:S?8 M:@:W?8 M:@:[?8 M:@:_?8 M:@:#?8 M:@:''?8 M:@:+?8 M:@:/?8 M:@:3?8 M:@:7?8 M:@:;?8 M:@:??8 M:@;C?8 M:@;G?8 M:@;K?8 M:@;O?8 M:@;S?8 M:@;W?8 M:@;[?8 M:@;_?8 M:@;#?8 M:@;''?8 M:@;+?8 M:@;/?8 M:@;3?8 M:@;7?8 M:@;;?8 M:@;??8 M:@&lt;C?8 M:@&lt;G?8 M:@&lt;K?8 M:@&lt;O?8 M:@&lt;S?8 M:@&lt;W?8 M:@&lt;[?8 M&gt;@8''?;@M&gt;@9[?;@NA@6/?6@NA@7;?6@NA@8W?6@NA@8#?6@NA@8''?;@NA@8/?6@NA@9S?6@NA@9[?;@NA@9_?;@NA@9''?;@NA@9+?;@NA@9/?;@NA@93?;@NA@97?;@NA@9;?;@NA@9??;@NA@:C?;@NA@:G?;@NA@:K?;@NA@:O?;@NA@:S?;@NA@:W?;@NA@:[?;@NA@:_?;@NA@:#?;@NA@:''?;@NA@:+?;@NA@:/?;@NA@:3?;@NA@:7?;@NA@:;?;@NA@:??;@NA@;C?;@NA@;G?;@NA@;K?;@NA@;O?;@NA@;S?;@NA@;W?;@NA@;[?;@NA@;_?;@NA@;#?;@NA@;''?;@NA@;+?;@NA@;/?;@NA@;3?;@NA@;7?;@NA@;;?;@NA@;??;@NA@&lt;C?;@NA@&lt;G?;@NA@&lt;K?;@NA@&lt;O?;@NA@&lt;S?;@NA@&lt;W?;@NA@&lt;[?;@NE@8''?;@NE@9[?;@NG@6/?= NG@7_?8 NG@7;?= NG@8W?= NG@8#?= NG@8/?= NG@9S?= NG@9[?= NG@9_?;@NG@9''?;@NG@9+?;@NG@9/?;@NG@93?;@NG@97?;@NG@9;?;@NG@9??;@NG@:C?;@NG@:G?;@NG@:K?;@NG@:O?;@NG@:S?;@NG@:W?;@NG@:[?;@NG@:_?;@NG@:#?;@NG@:''?;@NG@:+?;@NG@:/?;@NG@:3?;@NG@:7?;@NG@:;?;@NG@:??;@NG@;C?;@NG@;G?;@NG@;K?;@NG@;O?;@NG@;S?;@NG@;W?;@NG@;[?;@NG@;_?;@NG@;#?;@NG@;''?;@NG@;+?;@NG@;/?;@NG@;3?;@NG@;7?;@NG@;;?;@NG@;??;@NG@&lt;C?;@NG@&lt;G?;@NG@&lt;K?;@NG@&lt;O?;@NG@&lt;S?;@NG@&lt;W?;@NG@&lt;[?;@NH@8''?;@NH@9[?;@NI@6/?;@NI@7_?8 NI@7;?;@NI@8W?;@NI@8#?;@NI@8/?;@NI@9S?;@NI@9[?;@NI@9_?8 NI@9''?8 NI@9+?8 NI@9/?8 NI@93?8 NI@97?8 NI@9;?8 NI@9??8 NI@:C?8 NI@:G?8 NI@:K?8 NI@:O?8 NI@:S?8 NI@:W?8 NI@:[?8 NI@:_?8 NI@:#?8 NI@:''?8 NI@:+?8 NI@:/?8 NI@:3?8 NI@:7?8 NI@:;?8 NI@:??8 NI@;C?8 NI@;G?8 NI@;K?8 NI@;O?8 NI@;S?8 NI@;W?8 NI@;[?8 NI@;_?8 NI@;#?8 NI@;''?8 NI@;+?8 NI@;/?8 NI@;3?8 NI@;7?8 NI@;;?8 NI@;??8 NI@&lt;C?8 NI@&lt;G?8 NI@&lt;K?8 NI@&lt;O?8 NI@&lt;S?8 NI@&lt;W?8 NI@&lt;[?8 NJ@6/?8 NJ@7_?6@NJ@7;?8 NJ@8W?8 NJ@8#?8 NJ@8/?8 NJ@9S?8 NJ@9[?8 NJ@9_?8 NJ@9''?8 NJ@9+?8 NJ@9/?8 NJ@93?8 NJ@97?8 NJ@9;?8 NJ@9??8 NJ@:C?8 NJ@:G?8 NJ@:K?8 NJ@:O?8 NJ@:S?8 NJ@:W?8 NJ@:[?8 NJ@:_?8 NJ@:#?8 NJ@:''?8 NJ@:+?8 NJ@:/?8 NJ@:3?8 NJ@:7?8 NJ@:;?8 NJ@:??8 NJ@;C?8 NJ@;G?8 NJ@;K?8 NJ@;O?8 NJ@;S?8 NJ@;W?8 NJ@;[?8 NJ@;_?8 NJ@;#?8 NJ@;''?8 NJ@;+?8 NJ@;/?8 NJ@;3?8 NJ@;7?8 NJ@;;?8 NJ@;??8 NJ@&lt;C?8 NJ@&lt;G?8 NJ@&lt;K?8 NJ@&lt;O?8 NJ@&lt;S?8 NJ@&lt;W?8 NJ@&lt;[?8 NK@8''?;@NK@9[?;@NQ@8''?;@NQ@9[?;@NS@8''?;@NS@9[?;@NT@8''?;@NT@9[?;@NU@8''?;@NU@9[?;@NZ@9/?6@N)@9/?6@N*@9/?;@OE@9/?;@WM@@??1@WM@AC?;@WM@AG?1@WM@BS?8 WM@B[?8 WM@B#?3 WM@B''?2PWM@B+?8 WM@B/?6@WM@B3?8 WM@B;?2PWM@B??3 WM@CC?6@WM@CG?6@WM@CK?8 WM@CS?8 WM@C[?;@WM@C_?3 WM@C''?3 WM@C+?3 WM@C/?3 WM@C3?3 WM@C7?3 WM@DS?= WM@D''?= WM@D+?= WM@D7?;@WM@EC?8 WM@EG?8 WM@EO?= WM@EW?;@WM@E[?= WM@E_?= WM@E#?;@WM@E''?8 WM@E+?8 WM@E/?8 WM@E3?8 WM@E7?8 WM@F7?;@WM@G7?;@WM@HK?8 WM@HO?8 WM@HS?8 WM@HW?8 WM@H[?8 WM@H_?8 WM@H#?8 WM@H''?8 WM@H+?3 WM@H/?3 WM@H3?3 WM@H7?3 WM@H;?8 WM@H??8 WM@IC?8 WM@IG?8 WM@IS?8 WM@IW?8 WM@I[?8 WM@I_?8 WM@I#?8 WM@I+?8 WM@I??3 WM@JK?= WM@JO?= WM@JS?= WM@JW?= WM@J[?= WM@J_?= WM@J#?= WM@KO?8 WM@K/?;@WM@K3?;@WM@K7?;@WM@K;?;@WM@K??8 WM@LG?8 WM@LK?8 WM@LO?= WM@LS?8 WM@LW?= WM@L[?8 WM@L_?= WM@L#?8 WM@L+?8 WM@L3?8 WM@L;?8 WM@MS?3 WM@M+?3 WM@M3?3 WM@M;?8 WM@NC?8 WM@NG?= WM@NK?8 WM@NO?= WM@NS?8 WM@NW?= WM@O#?2PWM@O/?3 WM@O7?3 WM@O??3 WM@PO?3 WM@P[?8 WM@P#?8 WM@P+?8 WM@P;?8 WM@QC?8 WM@QK?8 WM@QS?8 WM@Q/?;@WM@Q3?;@WM@Q7?= WM@RC?;@WM@RG?= WM@RK?;@WM@RO?= WM@RS?3 WM@RW?= WM@R[?3 WM@R/?;@WM@R7?;@WM@R??;@WM@SG?;@WM@SO?;@WM@S#?3 WM@S''?8 WM@S+?3 WM@S/?3 WM@S3?8 WM@S7?3 WM@S;?8 WM@S??3 WM@TC?8 WMA^''?2PWMA 3?8 WMA"K?= WMA"/?;@WMA"3?= WMA"7?;@WMA";?= WMA#W?3 WMA#[?= WMA#_?3 WMA##?= WMA(O?3 WMA+''?3 WMA++?8 WMA&lt;O?1@WMA&lt;[?1@WMA&lt;_?1@WMA&gt;O?;@WMA&gt;S?;@WMBV/?= WMBV3?= WMBV;?= WMBV??= WN@@??;@WN@AG?;@WN@G7?;@WNA&lt;O?6@WNA&lt;[?6@WNA&lt;_?6@WNA&gt;S?;@WU@BS?6@WU@B[?;@WU@B#?40WU@B''?3 WU@B+?;@WU@B/?6@WU@B3?8 WU@B;?3 WU@B??40WU@CC?6@WU@CG?6@WU@CK?;@WU@CS?;@WU@C[?= WU@C_?6@WU@C''?3 WU@C+?3 WU@C/?6@WU@C3?3 WU@C7?6@WU@DS?;@WU@D''?;@WU@D+?;@WU@D7?8 WU@EC?8 WU@EG?8 WU@EO?;@WU@EW?;@WU@E[?;@WU@E_?;@WU@E#?8 WU@E''?= WU@E+?= WU@E/?8 WU@E3?= WU@E7?8 WU@HK?6@WU@HO?6@WU@HS?6@WU@HW?6@WU@H[?6@WU@H_?6@WU@H#?6@WU@H''?;@WU@H+?40WU@H/?40WU@H3?40WU@H7?40WU@H;?8 WU@H??8 WU@IC?8 WU@IG?8 WU@IS?;@WU@IW?;@WU@I[?;@WU@I_?;@WU@I#?;@WU@I+?;@WU@I??3 WU@JK?;@WU@JO?;@WU@JS?;@WU@JW?;@WU@J[?;@WU@J_?;@WU@J#?;@WU@KO?8 WU@K/?8 WU@K3?8 WU@K7?8 WU@K;?8 WU@K??= WU@LG?= WU@LK?6@WU@LO?;@WU@LS?6@WU@LW?;@WU@L[?6@WU@L_?;@WU@L#?;@WU@L+?;@WU@L3?;@WU@L;?;@WU@MS?40WU@M+?40WU@M3?40WU@M;?;@WU@NC?;@WU@NG?;@WU@NK?;@WU@NO?;@WU@NS?;@WU@NW?;@WU@O#?3 WU@O/?40WU@O7?40WU@O??40WU@PO?40WU@P[?8 WU@P#?8 WU@P+?8 WU@P;?;@WU@QC?;@WU@QK?;@WU@QS?;@WU@Q/?;@WU@Q3?= WU@Q7?;@WU@RC?= WU@RG?;@WU@RK?= WU@RO?;@WU@RS?6@WU@RW?;@WU@R[?6@WU@R/?8 WU@R7?8 WU@R??8 WU@SG?8 WU@SO?8 WU@S#?3 WU@S''?= WU@S+?3 WU@S/?6@WU@S3?8 WU@S7?6@WU@S;?8 WU@S??6@WU@TC?8 WUA^''?3 WUA 3?8 WUA"K?;@WUA"/?= WUA"3?;@WUA"7?= WUA";?;@WUA#W?6@WUA#[?;@WUA#_?6@WUA##?;@WUA(O?40WUA+''?3 WUA++?= WUBV/?;@WUBV3?;@WUBV;?;@WUBV??;@WV@DS?= WV@D[?90WV@D_?;@WV@D#?;@WV@D''?= WV@D+?= WV@D/?;@WV@D3?;@WV@D7?&gt;0WV@D??;@WV@EC?&gt;0WV@EG?&gt;0WV@EK?90WV@EO?= WV@ES?;@WV@EW?= WV@E[?;@WV@E_?= WV@E#?= WV@E''?;@WV@E+?;@WV@E/?;@WV@E3?;@WV@E7?= WV@JK?= WV@JO?= WV@JS?= WV@JW?= WV@J[?= WV@J_?= WV@J#?= WV@J''?90WV@J+?;@WV@J/?;@WV@J3?;@WV@J7?;@WV@J??;@WV@KO?&gt;0WV@KS?90WV@KW?90WV@K[?90WV@K_?90WV@K#?90WV@K/?= WV@K3?= WV@K7?= WV@K;?= WV@K??;@WV@LG?;@WV@LO?= WV@LW?= WV@L_?= WV@L/?90WV@L??90WV@MG?;@WV@MW?;@WV@M_?;@WV@NG?= WV@NO?= WV@NW?= WV@OG?;@WV@P[?&gt;0WV@P#?&gt;0WV@P+?&gt;0WV@P??90WV@QG?90WV@QO?90WV@QW?90WV@Q/?= WV@Q7?;@WV@RG?;@WV@RO?;@WV@RW?= WV@R/?= WV@R7?= WV@R??= WV@SG?= WV@SO?= WV@S''?;@WV@S3?= WV@S;?= WV@TC?= WV@#K?= WVA^;?;@WVA"K?= WVA"3?;@WVA";?;@WVA#[?= WVA##?= WVA++?;@WVBV/?= WVBV3?= WVBV7?= WVBV;?= WVBV??= W)@@??1@W)@AC?8 W)@AG?1@W)@BS?6@W)@B[?8 W)@B#?3 W)@B''?2PW)@B+?8 W)@B/?6@W)@B3?8 W)@B7?8 W)@B;?2PW)@B??3 W)@CC?6@W)@CG?6@W)@CK?8 W)@CS?8 W)@C[?6@W)@C''?;@W)@C+?;@W)@C/?8 W)@C3?;@W)@C7?8 W)@DS?8 W)@D[?8 W)@D_?8 W)@D#?;@W)@D''?;@W)@D+?8 W)@D7?;@W)@EC?3 W)@EG?3 W)@EK?8 W)@EO?8 W)@ES?8 W)@EW?6@W)@E[?6@W)@E_?;@W)@E#?3 W)@E''?= W)@E+?= W)@E/?6@W)@E3?= W)@E7?3 W)@F7?8 W)@G7?3 W)@HK?6@W)@HO?6@W)@HS?6@W)@HW?6@W)@H[?6@W)@H_?6@W)@H#?6@W)@H''?8 W)@H+?3 W)@H/?3 W)@H3?3 W)@H7?3 W)@H;?8 W)@H??8 W)@IC?8 W)@IG?8 W)@IS?8 W)@IW?8 W)@I[?8 W)@I_?8 W)@I#?8 W)@I+?8 W)@I??;@W)@JK?8 W)@JO?8 W)@JS?8 W)@JW?8 W)@J[?8 W)@J_?8 W)@J#?8 W)@J''?8 W)@J+?;@W)@J/?;@W)@J3?;@W)@J7?;@W)@KK?8 W)@KO?3 W)@KS?8 W)@KW?8 W)@K[?8 W)@K_?8 W)@K#?8 W)@K+?8 W)@K/?3 W)@K3?3 W)@K7?3 W)@K;?3 W)@K??= W)@LG?= W)@LK?6@W)@LO?8 W)@LS?6@W)@LW?8 W)@L[?6@W)@L_?8 W)@L#?8 W)@L+?8 W)@L/?8 W)@L3?8 W)@L;?8 W)@L??8 W)@MG?8 W)@MS?3 W)@MW?;@W)@M_?;@W)@M+?3 W)@M/?;@W)@M3?3 W)@M;?8 W)@NC?8 W)@NG?8 W)@NK?8 W)@NO?8 W)@NS?8 W)@NW?8 W)@O#?2PW)@O/?3 W)@O7?3 W)@O??3 W)@PO?3 W)@P[?3 W)@P#?3 W)@P+?3 W)@P;?8 W)@P??8 W)@QC?8 W)@QG?8 W)@QK?8 W)@QO?8 W)@QS?8 W)@QW?8 W)@Q/?6@W)@Q3?6@W)@Q7?6@W)@RC?6@W)@RG?6@W)@RK?6@W)@RO?6@W)@RW?;@W)@R/?3 W)@R7?3 W)@R??3 W)@SG?3 W)@SO?3 W)@S#?;@W)@S''?= W)@S+?;@W)@S/?8 W)@S3?3 W)@S7?8 W)@S;?3 W)@S??8 W)@TC?3 W)A^''?2PW)A 3?3 W)A"K?8 W)A"/?6@W)A"3?6@W)A"7?6@W)A";?6@W)A#[?;@W)A##?;@W)A(O?3 W)A+''?;@W)A++?= W)A&gt;O?8 W)A&gt;S?3 W)BV/?;@W)BV3?;@W)BV;?;@W)BV??;@W*@@??1@W*@AC?6@W*@AG?1@W*@F7?6@W*@G7?;@W*A&gt;O?6@W*A&gt;S?;@W.@@??8 W.@AC?6@W.@AG?8 W.@DS?&lt;PW.@D[?;@W.@D_?&lt;PW.@D#?= W.@D''?&gt;0W.@D+?&lt;PW.@D/?90W.@D3?90W.@D7?;@W.@D??90W.@EC?90W.@EG?90W.@EK?;@W.@EO?= W.@ES?&lt;PW.@EW?;@W.@E[?90W.@E_?&gt;0W.@E#?;@W.@E''?8 W.@E+?8 W.@E/?;@W.@E3?8 W.@F7?6@W.@G7?8 W.@JK?&lt;PW.@JO?&lt;PW.@JS?&lt;PW.@JW?&lt;PW.@J[?&lt;PW.@J_?&lt;PW.@J#?&lt;PW.@J''?;@W.@J+?= W.@J/?= W.@J3?= W.@J7?= W.@J??90W.@KO?90W.@KS?;@W.@KW?;@W.@K[?;@W.@K_?;@W.@K#?;@W.@K/?;@W.@K3?;@W.@K7?;@W.@K;?;@W.@K??8 W.@LG?8 W.@LO?&lt;PW.@LW?&lt;PW.@L_?&lt;PW.@L/?;@W.@L??;@W.@MG?&lt;PW.@MW?= W.@M_?= W.@NG?&lt;PW.@NO?&lt;PW.@NW?&lt;PW.@OG?90W.@P[?90W.@P#?90W.@P+?90W.@P??;@W.@QG?;@W.@QO?;@W.@QW?;@W.@Q/?;@W.@Q7?90W.@RG?90W.@RO?90W.@RW?&gt;0W.@R/?;@W.@R7?;@W.@R??;@W.@SG?;@W.@SO?;@W.@S''?8 W.A^;?90W.A"K?= W.A"3?90W.A";?90W.A#[?&gt;0W.A##?&gt;0W.A++?8 W.A&lt;O?1@W.A&lt;[?1@W.A&lt;_?1@W.A&gt;O?6@W.A&gt;S?8 W.BV/?&gt;0W.BV3?&gt;0W.BV7?&gt;0W.BV;?&gt;0W.BV??&gt;0XL@@??8 XL@AC?6@XL@AG?8 XL@DS?= XL@D[?&gt;0XL@D_?= XL@D#?&gt;0XL@D''?= XL@D+?= XL@D/?;@XL@D3?;@XL@D7?&lt;PXL@D??;@XL@EC?;@XL@EG?;@XL@EK?&gt;0XL@EO?&gt;0XL@ES?= XL@EW?&lt;PXL@E[?&lt;PXL@E_?= XL@E#?&lt;PXL@E''?7PXL@E+?7PXL@E/?&lt;PXL@E3?7PXL@F7?6@XL@G7?8 XL@JK?= XL@JO?= XL@JS?= XL@JW?= XL@J[?= XL@J_?= XL@J#?= XL@J''?&gt;0XL@J+?&gt;0XL@J/?&gt;0XL@J3?&gt;0XL@J7?&gt;0XL@J??;@XL@KO?;@XL@KS?&gt;0XL@KW?&gt;0XL@K[?&gt;0XL@K_?&gt;0XL@K#?&gt;0XL@K/?&lt;PXL@K3?&lt;PXL@K7?&lt;PXL@K;?&lt;PXL@K??7PXL@LG?7PXL@LO?= XL@LW?= XL@L_?= XL@L/?&gt;0XL@L??&gt;0XL@MG?= XL@MW?&gt;0XL@M_?&gt;0XL@NG?= XL@NO?= XL@NW?= XL@OG?;@XL@P[?;@XL@P#?;@XL@P+?;@XL@P??&gt;0XL@QG?&gt;0XL@QO?&gt;0XL@QW?&gt;0XL@Q/?&lt;PXL@Q7?&lt;PXL@RG?&lt;PXL@RO?&lt;PXL@RW?= XL@R/?&lt;PXL@R7?&lt;PXL@R??&lt;PXL@SG?&lt;PXL@SO?&lt;PXL@S''?7PXLA^;?;@XLA"K?&gt;0XLA"3?&lt;PXLA";?&lt;PXLA#[?= XLA##?= XLA++?7PXLA&lt;O?1@XLA&lt;[?1@XLA&lt;_?1@XLA&gt;O?6@XLA&gtlt;O?;@X!A&lt;[?;@X!A&lt;_?;@X!A&gt;O?3 X!A&gt;S?1@X"@@??;@X"@AG?;@X"@DS?= X"@D[?&gt;0X"@D''?&lt;PX"@D+?= X"@D/?&lt;PX"@D3?&lt;PX"@D??&lt;PX"@EC?;@X"@EG?;@X"@EK?&gt;0X"@EO?&gt;0X"@EW?= X"@E[?&lt;PX"@E_?&lt;PX"@E#?= X"@E''?= X"@E+?= X"@E/?90X"@E3?= X"@E7?= X"@G7?;@X"@JK?= X"@JO?= X"@JS?= X"@JW?= X"@J[?= X"@J_?= X"@J#?= X"@J''?&gt;0X"@J??&lt;PX"@KO?;@X"@KS?&gt;0X"@KW?&gt;0X"@K[?&gt;0X"@K_?&gt;0X"@K#?&gt;0X"@K/?= X"@K3?= X"@K7?= X"@K;?= X"@K??= X"@LG?= X"@LO?= X"@LW?= X"@L_?= X"@L/?&gt;0X"@L??&gt;0X"@NG?= X"@NO?= X"@NW?= X"@OG?&lt;PX"@P[?;@X"@P#?;@X"@P+?;@X"@P??&gt;0X"@QG?&gt;0X"@QO?&gt;0X"@QW?&gt;0X"@Q/?= X"@Q7?&lt;PX"@RG?&lt;PX"@RO?&lt;PX"@RW?&lt;PX"@R/?= X"@R7?= X"@R??= X"@SG?= X"@SO?= X"@S''?= X"@S3?= X"@S;?= X"@TC?= X"@#K?= X"A^;?&lt;PX"A"K?&gt;0X"A"3?&lt;PX"A";?&lt;PX"A#[?&lt;PX"A##?&lt;PX"A++?= X"A&lt;O?6@X"A&lt;[?6@X"A&lt;_?6@X"A&gt;S?;@X"BV/?&lt;PX"BV3?&lt;PX"BV7?&lt;PX"BV;?&lt;PX"BV??&lt;PX+@@??3 X+@AC?;@X+@AG?3 X+@BS?8 X+@B[?;@X+@B#?7PX+@B''?6@X+@B+?;@X+@B/?8 X+@B3?;@X+@B;?6@X+@B??7PX+@CC?8 X+@CG?8 X+@CK?;@X+@CS?;@X+@C[?= X+@C_?6@X+@C''?3 X+@C+?3 X+@C/?3 X+@C3?3 X+@C7?3 X+@D''?= X+@D7?= X+@EC?;@X+@EG?;@X+@EO?= X+@EW?;@X+@E_?= X+@E#?90X+@E''?;@X+@E+?;@X+@E/?6@X+@E3?;@X+@E7?;@X+@F7?;@X+@G7?8 X+@HK?8 X+@HO?8 X+@HS?8 X+@HW?8 X+@H[?8 X+@H_?8 X+@H#?8 X+@H''?;@X+@H+?7PX+@H/?7PX+@H3?7PX+@H7?7PX+@H;?;@X+@H??;@X+@IC?;@X+@IG?;@X+@IS?;@X+@IW?;@X+@I[?;@X+@I_?;@X+@I#?;@X+@I+?;@X+@I??3 X+@KO?;@X+@K/?90X+@K3?90X+@K7?90X+@K;?90X+@K??;@X+@LG?;@X+@LK?8 X+@LS?8 X+@L[?8 X+@L#?;@X+@L+?;@X+@L3?;@X+@L;?;@X+@MS?7PX+@M+?7PX+@M3?7PX+@M;?;@X+@NC?;@X+@NK?;@X+@NS?;@X+@O#?6@X+@O/?7PX+@O7?7PX+@O??7PX+@PO?7PX+@P[?;@X+@P#?;@X+@P+?;@X+@P;?;@X+@QC?;@X+@QK?;@X+@QS?;@X+@Q/?;@X+@Q3?= X+@RC?= X+@RK?= X+@RS?6@X+@RW?= X+@R[?6@X+@R/?90X+@R7?90X+@R??90X+@SG?90X+@SO?90X+@S#?3 X+@S''?;@X+@S+?3 X+@S/?3 X+@S3?;@X+@S7?3 X+@S;?;@X+@S??3 X+@TC?;@X+A^''?6@X+A 3?;@X+A"K?= X+A"/?= X+A"7?= X+A#W?6@X+A#[?= X+A#_?6@X+A##?= X+A(O?7PX+A+''?3 X+A++?;@X+A&lt;O?1@X+A&lt;[?1@X+A&lt;_?1@X+A&gt;O?;@X+A&gt;S?8 X+BV/?= X+BV3?= X+BV;?= X+BV??= X,@@??6@X,@AC?6@X,@AG?6@X,@DS?= X,@D[?= X,@D_?&gt;0X,@D''?;@X,@D+?= X,@D/?;@X,@D3?;@X,@D7?;@X,@D??;@X,@EC?;@X,@EG?;@X,@EK?= X,@EO?= X,@ES?&gt;0X,@EW?;@X,@E[?= X,@E_?;@X,@E#?&lt;PX,@E''?;@X,@E+?;@X,@E/?6@X,@E3?;@X,@F7?6@X,@G7?8 X,@JK?= X,@JO?= X,@JS?= X,@JW?= X,@J[?= X,@J_?= X,@J#?= X,@J''?= X,@J??;@X,@KO?;@X,@KS?= X,@KW?= X,@K[?= X,@K_?= X,@K#?= X,@K/?&lt;PX,@K3?&lt;PX,@K7?&lt;PX,@K;?&lt;PX,@K??;@X,@LG?;@X,@LO?= X,@LW?= X,@L_?= X,@L/?= X,@L??= X,@MG?&gt;0X,@NG?= X,@NO?= X,@NW?= X,@OG?;@X,@P[?;@X,@P#?;@X,@P+?;@X,@P??= X,@QG?= X,@QO?= X,@QW?= X,@Q/?;@X,@Q7?= X,@RG?= X,@RO?= X,@RW?;@X,@R/?&lt;PX,@R7?&lt;PX,@R??&lt;PX,@SG?&lt;PX,@SO?&lt;PX,@S''?;@X,A^;?;@X,A"K?= X,A"3?= X,A";?= X,A#[?;@X,A##?;@X,A++?;@X,A&lt;O?. X,A&lt;[?. X,A&lt;_?. X,A&gt;O?6@X,A&gt;S?8 X,BV/?;@X,BV3?;@X,BV7?;@X,BV;?;@X,BV??;@X-@@??3 X-@AC?;@X-@AG?3 X-@BS?8 X-@B[?;@X-@B#?7PX-@B''?6@X-@B+?;@X-@B/?8 X-@B3?;@X-@B;?6@X-@B??7PX-@CC?8 X-@CG?8 X-@CK?;@X-@CS?;@X-@C[?= X-@C_?6@X-@C''?3 X-@C+?3 X-@C/?3 X-@C3?3 X-@C7?3 X-@D''?= X-@D7?= X-@EC?;@X-@EG?;@X-@EO?= X-@EW?;@X-@E_?= X-@E#?90X-@E''?;@X-@E+?;@X-@E/?6@X-@E3?;@X-@E7?;@X-@F7?;@X-@G7?8 X-@HK?8 X-@HO?8 X-@HS?8 X-@HW?8 X-@H[?8 X-@H_?8 X-@H#?8 X-@H''?;@X-@H+?7PX-@H/?7PX-@H3?7PX-@H7?7PX-@H;?;@X-@H??;@X-@IC?;@X-@IG?;@X-@IS?;@X-@IW?;@X-@I[?;@X-@I_?;@X-@I#?;@X-@I+?;@X-@I??3 X-@KO?;@X-@K/?90X-@K3?90X-@K7?90X-@K;?90X-@K??;@X-@LG?;@X-@LK?8 X-@LS?8 X-@L[?8 X-@L#?;@X-@L+?;@X-@L3?;@X-@L;?;@X-@MS?7PX-@M+?7PX-@M3?7PX-@M;?;@X-@NC?;@X-@NK?;@X-@NS?;@X-@O#?6@X-@O/?7PX-@O7?7PX-@O??7PX-@PO?7PX-@P[?;@X-@P#?;@X-@P+?;@X-@P;?;@X-@QC?;@X-@QK?;@X-@QS?;@X-@Q/?;@X-@Q3?= X-@RC?= X-@RK?= X-@RS?6@X-@RW?= X-@R[?6@X-@R/?90X-@R7?90X-@R??90X-@SG?90X-@SO?90X-@S#?3 X-@S''?;@X-@S+?3 X-@S/?3 X-@S3?;@X-@S7?3 X-@S;?;@X-@S??3 X-@TC?;@X-A^''?6@X-A 3?;@X-A"K?= X-A"/?= X-A"7?= X-A#W?6@X-A#[?= X-A#_?6@X-A##?= X-A(O?7PX-A+''?3 X-A++?;@X-A&lt;O?1@X-A&lt;[?1@X-A&lt;_?1@X-A&gt;O?;@X-A&gt;S?8 X-BV/?= X-BV3?= X-BV;?= X-BV??= X.@@??6@X.@AC?6@X.@AG?6@X.@DS?= X.@D[?= X.@D_?&gt;0X.@D''?;@X.@D+?= X.@D/?;@X.@D3?;@X.@D7?;@X.@D??;@X.@EC?;@X.@EG?;@X.@EK?= X.@EO?= X.@ES?&gt;0X.@EW?;@X.@E[?= X.@E_?;@X.@E#?&lt;PX.@E''?;@X.@E+?;@X.@E/?6@X.@E3?;@X.@F7?6@X.@G7?8 X.@JK?= X.@JO?= X.@JS?= X.@JW?= X.@J[?= X.@J_?= X.@J#?= X.@J''?= X.@J??;@X.@KO?;@X.@KS?= X.@KW?= X.@K[?= X.@K_?= X.@K#?= X.@K/?&lt;PX.@K3?&lt;PX.@K7?&lt;PX.@K;?&lt;PX.@K??;@X.@LG?;@X.@LO?= X.@LW?= X.@L_?= X.@L/?= X.@L??= X.@MG?&gt;0X.@NG?= X.@NO?= X.@NW?= X.@OG?;@X.@P[?;@X.@P#?;@X.@P+?;@X.@P??= X.@QG?= X.@QO?= X.@QW?= X.@Q/?;@X.@Q7?= X.@RG?= X.@RO?= X.@RW?;@X.@R/?&lt;PX.@R7?&lt;PX.@R??&lt;PX.@SG?&lt;PX.@SO?&lt;PX.@S''?;@X.A^;?;@X.A"K?= X.A"3?= X.A";?= X.A#[?;@X.A##?;@X.A++?;@X.A&lt;O?. X.A&lt;[?. X.A&lt;_?. X.A&gt;O?6@X.A&gt;S?8 X.BV/?;@X.BV3?;@X.BV7?;@X.BV;?;@X.BV??;@X5@@??3 X5@AC?6@X5@AG?3 X5@BS?3 X5@B[?6@X5@B#?7PX5@B''?6@X5@B+?6@X5@B/?8 X5@B3?;@X5@B7?6@X5@B;?6@X5@B??7PX5@CC?8 X5@CG?8 X5@CK?6@X5@CS?6@X5@C[?6@X5@C''?= X5@C+?= X5@C/?6@X5@C3?= X5@C7?6@X5@DS?6@X5@D[?6@X5@D_?6@X5@D#?90X5@D''?;@X5@D+?6@X5@EC?6@X5@EG?6@X5@EK?6@X5@EO?8 X5@ES?6@X5@EW?6@X5@E[?6@X5@E_?;@X5@E#?6@X5@E''?;@X5@E+?;@X5@E/?8 X5@E3?;@X5@E7?6@X5@F7?6@X5@G7?6@X5@HK?3 X5@HO?3 X5@HS?3 X5@HW?3 X5@H[?3 X5@H_?3 X5@H#?3 X5@H''?6@X5@H+?7PX5@H/?7PX5@H3?7PX5@H7?7PX5@H;?;@X5@H??;@X5@IC?;@X5@IG?;@X5@IS?6@X5@IW?6@X5@I[?6@X5@I_?6@X5@I#?6@X5@I+?6@X5@I??= X5@JK?6@X5@JO?6@X5@JS?6@X5@JW?6@X5@J[?6@X5@J_?6@X5@J#?6@X5@J''?6@X5@J+?90X5@J/?90X5@J3?90X5@J7?90X5@KK?6@X5@KO?6@X5@KS?6@X5@KW?6@X5@K[?6@X5@K_?6@X5@K#?6@X5@K+?6@X5@K/?6@X5@K3?6@X5@K7?6@X5@K;?6@X5@K??;@X5@LG?;@X5@LK?3 X5@LO?6@X5@LS?3 X5@LW?6@X5@L[?3 X5@L_?6@X5@L#?6@X5@L+?6@X5@L/?6@X5@L3?6@X5@L;?6@X5@L??6@X5@MG?6@X5@MS?7PX5@MW?90X5@M_?90X5@M+?7PX5@M/?90X5@M3?7PX5@M;?6@X5@NC?6@X5@NG?6@X5@NK?6@X5@NO?6@X5@NS?6@X5@NW?6@X5@O#?6@X5@O/?7PX5@O7?7PX5@O??7PX5@PO?7PX5@P[?6@X5@P#?6@X5@P+?6@X5@P;?6@X5@P??6@X5@QC?6@X5@QG?6@X5@QK?6@X5@QO?6@X5@QS?6@X5@QW?6@X5@Q/?6@X5@Q3?6@X5@Q7?6@X5@RC?6@X5@RG?6@X5@RK?6@X5@RO?6@X5@RW?;@X5@R/?6@X5@R7?6@X5@R??6@X5@SG?6@X5@SO?6@X5@S#?= X5@S''?;@X5@S+?= X5@S/?6@X5@S3?6@X5@S7?6@X5@S;?6@X5@S??6@X5@TC?6@X5A^''?6@X5A 3?6@X5A"K?8 X5A"/?6@X5A"3?6@X5A"7?6@X5A";?6@X5A#[?;@X5A##?;@X5A(O?7PX5A+''?= X5A++?;@X5A&gt;O?6@X5A&gt;S?6@X5BV/?;@X5BV3?;@X5BV;?;@X5BV??;@X6@AC?6@X6@DS?= X6@D[?90X6@D_?&lt;PX6@D#?&gt;0X6@D''?&lt;PX6@D+?= X6@D/?&lt;PX6@D3?&lt;PX6@D??&lt;PX6@EC?= X6@EG?= X6@EK?90X6@ES?&lt;PX6@EW?= X6@E[?= X6@E_?&lt;PX6@E/?;@X6@F7?6@X6@G7?6@X6@JK?= X6@JO?= X6@JS?= X6@JW?= X6@J[?= X6@J_?= X6@J#?= X6@J''?90X6@J+?&gt;0X6@J/?&gt;0X6@J3?&gt;0X6@J7?&gt;0X6@J??&lt;PX6@KO?= X6@KS?90X6@KW?90X6@K[?90X6@K_?90X6@K#?90X6@LO?= X6@LW?= X6@L_?= X6@L/?90X6@L??90X6@MG?&lt;PX6@MW?&gt;0X6@M_?&gt;0X6@NG?= X6@NO?= X6@NW?= X6@OG?&lt;PX6@P[?= X6@P#?= X6@P+?= X6@P??90X6@QG?90X6@QO?90X6@QW?90X6@Q/?= X6@Q7?= X6@RG?= X6@RO?= X6@RW?&lt;PX6A^;?&lt;PX6A"3?= X6A";?= X6A#[?&lt;PX6A##?&lt;PX6A&gt;O?6@X6A&gt;S?6@X6BV/?&lt;PX6BV3?&lt;PX6BV7?&lt;PX6BV;?&lt;PX6BV??&lt;PX7@@??3 X7@AC?6@X7@AG?3 X7@BS?3 X7@B[?6@X7@B#?7PX7@B''?6@X7@B+?6@X7@B/?8 X7@B3?;@X7@B7?6@X7@B;?6@X7@B??7PX7@CC?8 X7@CG?8 X7@CK?6@X7@CS?6@X7@C[?6@X7@C''?= X7@C+?= X7@C/?6@X7@C3?= X7@C7?6@X7@DS?6@X7@D[?6@X7@D_?6@X7@D#?90X7@D''?;@X7@D+?6@X7@EC?6@X7@EG?6@X7@EK?6@X7@EO?8 X7@ES?6@X7@EW?6@X7@E[?6@X7@E_?;@X7@E#?6@X7@E''?;@X7@E+?;@X7@E/?8 X7@E3?;@X7@E7?6@X7@F7?6@X7@G7?6@X7@HK?3 X7@HO?3 X7@HS?3 X7@HW?3 X7@H[?3 X7@H_?3 X7@H#?3 X7@H''?6@X7@H+?7PX7@H/?7PX7@H3?7PX7@H7?7PX7@H;?;@X7@H??;@X7@IC?;@X7@IG?;@X7@IS?6@X7@IW?6@X7@I[?6@X7@I_?6@X7@I#?6@X7@I+?6@X7@I??= X7@JK?6@X7@JO?6@X7@JS?6@X7@JW?6@X7@J[?6@X7@J_?6@X7@J#?6@X7@J''?6@X7@J+?90X7@J/?90X7@J3?90X7@J7?90X7@KK?6@X7@KO?6@X7@KS?6@X7@KW?6@X7@K[?6@X7@K_?6@X7@K#?6@X7@K+?6@X7@K/?6@X7@K3?6@X7@K7?6@X7@K;?6@X7@K??;@X7@LG?;@X7@LK?3 X7@LO?6@X7@LS?3 X7@LW?6@X7@L[?3 X7@L_?6@X7@L#?6@X7@L+?6@X7@L/?6@X7@L3?6@X7@L;?6@X7@L??6@X7@MG?6@X7@MS?7PX7@MW?90X7@M_?90X7@M+?7PX7@M/?90X7@M3?7PX7@M;?6@X7@NC?6@X7@NG?6@X7@NK?6@X7@NO?6@X7@NS?6@X7@NW?6@X7@O#?6@X7@O/?7PX7@O7?7PX7@O??7PX7@PO?7PX7@P[?6@X7@P#?6@X7@P+?6@X7@P;?6@X7@P??6@X7@QC?6@X7@QG?6@X7@QK?6@X7@QO?6@X7@QS?6@X7@QW?6@X7@Q/?6@X7@Q3?6@X7@Q7?6@X7@RC?6@X7@RG?6@X7@RK?6@X7@RO?6@X7@RW?;@X7@R/?6@X7@R7?6@X7@R??6@X7@SG?6@X7@SO?6@X7@S#?= X7@S''?;@X7@S+?= X7@S/?6@X7@S3?6@X7@S7?6@X7@S;?6@X7@S??6@X7@TC?6@X7A^''?6@X7A 3?6@X7A"K?8 X7A"/?6@X7A"3?6@X7A"7?6@X7A";?6@X7A#[?;@X7A##?;@X7A(O?7PX7A+''?= X7A++?;@X7A&gt;O?6@X7A&gt;S?6@X7BV/?;@X7BV3?;@X7BV;?;@X7BV??;@X8@AC?6@X8@DS?= X8@D[?90X8@D_?&lt;PX8@D#?&gt;0X8@D''?&lt;PX8@D+?= X8@D/?&lt;PX8@D3?&lt;PX8@D??&lt;PX8@EC?= X8@EG?= X8@EK?90X8@ES?&lt;PX8@EW?= X8@E[?= X8@E_?&lt;PX8@E/?;@X8@F7?6@X8@G7?6@X8@JK?= X8@JO?= X8@JS?= X8@JW?= X8@J[?= X8@J_?= X8@J#?= X8@J''?90X8@J+?&gt;0X8@J/?&gt;0X8@J3?&gt;0X8@J7?&gt;0X8@J??&lt;PX8@KO?= X8@KS?90X8@KW?90X8@K[?90X8@K_?90X8@K#?90X8@LO?= X8@LW?= X8@L_?= X8@L/?90X8@L??90X8@MG?&lt;PX8@MW?&gt;0X8@M_?&gt;0X8@NG?= X8@NO?= X8@NW?= X8@OG?&lt;PX8@P[?= X8@P#?= X8@P+?= X8@P??90X8@QG?90X8@QO?90X8@QW?90X8@Q/?= X8@Q7?= X8@RG?= X8@RO?= X8@RW?&lt;PX8A^;?&lt;PX8A"3?= X8A";?= X8A#[?&lt;PX8A##?&lt;PX8A&gt;O?6@X8A&gt;S?6@X8BV/?&lt;PX8BV3?&lt;PX8BV7?&lt;PX8BV;?&lt;PX8BV??&lt;PZC@BS?8 ZC@B[?6@ZC@B#?40ZC@B''?3 ZC@B+?6@ZC@B/?6@ZC@B3?8 ZC@B7?;@ZC@B;?3 ZC@B??40ZC@CC?6@ZC@CG?6@ZC@CK?6@ZC@CS?6@ZC@C[?3 ZC@C_?;@ZC@C''?3 ZC@C+?3 ZC@C/?8 ZC@C3?3 ZC@C7?8 ZC@DS?8 ZC@D[?8 ZC@D_?8 ZC@D#?;@ZC@D''?8 ZC@D+?8 ZC@D7?8 ZC@EC?6@ZC@EG?6@ZC@EK?8 ZC@EO?;@ZC@ES?8 ZC@EW?8 ZC@E[?;@ZC@E_?8 ZC@E#?40ZC@E''?6@ZC@E+?6@ZC@E/?8 ZC@E3?6@ZC@E7?6@ZC@HK?8 ZC@HO?8 ZC@HS?8 ZC@HW?8 ZC@H[?8 ZC@H_?8 ZC@H#?8 ZC@H''?6@ZC@H+?40ZC@H/?40ZC@H3?40ZC@H7?40ZC@H;?8 ZC@H??8 ZC@IC?8 ZC@IG?8 ZC@IS?6@ZC@IW?6@ZC@I[?6@ZC@I_?6@ZC@I#?6@ZC@I+?6@ZC@I??3 ZC@JK?8 ZC@JO?8 ZC@JS?8 ZC@JW?8 ZC@J[?8 ZC@J_?8 ZC@J#?8 ZC@J''?8 ZC@J+?;@ZC@J/?;@ZC@J3?;@ZC@J7?;@ZC@KK?8 ZC@KO?6@ZC@KS?8 ZC@KW?8 ZC@K[?8 ZC@K_?8 ZC@K#?8 ZC@K+?8 ZC@K/?40ZC@K3?40ZC@K7?40ZC@K;?40ZC@K??6@ZC@LG?6@ZC@LK?8 ZC@LO?8 ZC@LS?8 ZC@LW?8 ZC@L[?8 ZC@L_?8 ZC@L#?6@ZC@L+?6@ZC@L/?8 ZC@L3?6@ZC@L;?6@ZC@L??8 ZC@MG?8 ZC@MS?40ZC@MW?;@ZC@M_?;@ZC@M+?40ZC@M/?;@ZC@M3?40ZC@M;?6@ZC@NC?6@ZC@NG?8 ZC@NK?6@ZC@NO?8 ZC@NS?6@ZC@NW?8 ZC@O#?3 ZC@O/?40ZC@O7?40ZC@O??40ZC@PO?40ZC@P[?6@ZC@P#?6@ZC@P+?6@ZC@P;?6@ZC@P??8 ZC@QC?6@ZC@QG?8 ZC@QK?6@ZC@QO?8 ZC@QS?6@ZC@QW?8 ZC@Q/?8 ZC@Q3?3 ZC@Q7?;@ZC@RC?3 ZC@RG?;@ZC@RK?3 ZC@RO?;@ZC@RS?;@ZC@RW?8 ZC@R[?;@ZC@R/?40ZC@R7?40ZC@R??40ZC@SG?40ZC@SO?40ZC@S#?3 ZC@S''?6@ZC@S+?3 ZC@S/?8 ZC@S3?6@ZC@S7?8 ZC@S;?6@ZC@S??8 ZC@TC?6@ZCA^''?3 ZCA 3?6@ZCA"K?;@ZCA"/?3 ZCA"3?;@ZCA"7?3 ZCA";?;@ZCA#W?;@ZCA#[?8 ZCA#_?;@ZCA##?8 ZCA(O?40ZCA+''?3 ZCA++?6@ZCBV/?8 ZCBV3?8 ZCBV;?8 ZCBV??8 Z9@@??1@Z9@AC?3 Z9@AG?1@Z9@BS?1@Z9@B[?3 Z9@B#?2PZ9@B''?1@Z9@B+?3 Z9@B/?3 Z9@B3?6@Z9@B7?8 Z9@B;?1@Z9@B??2PZ9@CC?3 Z9@CG?3 Z9@CK?3 Z9@CS?3 Z9@C[?3 Z9@C/?8 Z9@C7?8 Z9@DS?3 Z9@D[?3 Z9@D_?3 Z9@D#?8 Z9@D''?;@Z9@D+?3 Z9@EC?1@Z9@EG?1@Z9@EK?3 Z9@EO?6@Z9@ES?3 Z9@EW?1@Z9@E[?6@Z9@E_?;@Z9@E#?3 Z9@E/?8 Z9@E7?1@Z9@F7?3 Z9@G7?,@Z9@HK?1@Z9@HO?1@Z9@HS?1@Z9@HW?1@Z9@H[?1@Z9@H_?1@Z9@H#?1@Z9@H''?3 Z9@H+?2PZ9@H/?2PZ9@H3?2PZ9@H7?2PZ9@H;?6@Z9@H??6@Z9@IC?6@Z9@IG?6@Z9@IS?3 Z9@IW?3 Z9@I[?3 Z9@I_?3 Z9@I#?3 Z9@I+?3 Z9@JK?3 Z9@JO?3 Z9@JS?3 Z9@JW?3 Z9@J[?3 Z9@J_?3 Z9@J#?3 Z9@J''?3 Z9@J+?8 Z9@J/?8 Z9@J3?8 Z9@J7?8 Z9@KK?3 Z9@KO?1@Z9@KS?3 Z9@KW?3 Z9@K[?3 Z9@K_?3 Z9@K#?3 Z9@K+?3 Z9@K/?3 Z9@K3?3 Z9@K7?3 Z9@K;?3 Z9@LK?1@Z9@LO?3 Z9@LS?1@Z9@LW?3 Z9@L[?1@Z9@L_?3 Z9@L#?3 Z9@L+?3 Z9@L/?3 Z9@L3?3 Z9@L;?3 Z9@L??3 Z9@MG?3 Z9@MS?2PZ9@MW?8 Z9@M_?8 Z9@M+?2PZ9@M/?8 Z9@M3?2PZ9@M;?3 Z9@NC?3 Z9@NG?3 Z9@NK?3 Z9@NO?3 Z9@NS?3 Z9@NW?3 Z9@O#?1@Z9@O/?2PZ9@O7?2PZ9@O??2PZ9@PO?2PZ9@P[?1@Z9@P#?1@Z9@P+?1@Z9@P;?3 Z9@P??3 Z9@QC?3 Z9@QG?3 Z9@QK?3 Z9@QO?3 Z9@QS?3 Z9@QW?3 Z9@Q/?1@Z9@Q3?3 Z9@Q7?6@Z9@RC?3 Z9@RG?6@Z9@RK?3 Z9@RO?6@Z9@RW?;@Z9@R/?3 Z9@R7?3 Z9@R??3 Z9@SG?3 Z9@SO?3 Z9@S/?8 Z9@S3?1@Z9@S7?8 Z9@S;?1@Z9@S??8 Z9@TC?1@Z9A^''?1@Z9A 3?1@Z9A"K?6@Z9A"/?3 Z9A"3?6@Z9A"7?3 Z9A";?6@Z9A#[?;@Z9A##?;@Z9A(O?2PZ9A&gt;O?3 Z9A&gt;S?,@Z9BV/?;@Z9BV3?;@Z9BV;?;@Z9BV??;@Z:@@??3 Z:@AC?;@Z:@AG?3 Z:@DS?;@Z:@D[?= Z:@D_?;@Z:@D#?= Z:@D''?&gt;0Z:@D+?;@Z:@D/?;@Z:@D3?;@Z:@D7?&lt;PZ:@D??;@Z:@EC?8 Z:@EG?8 Z:@EK?= Z:@EO?&lt;PZ:@ES?;@Z:@EW?90Z:@E[?;@Z:@E_?&gt;0Z:@E#?90Z:@E''?&lt;PZ:@E+?&lt;PZ:@E/?&lt;PZ:@E3?&lt;PZ:@E7?&gt;0Z:@F7?;@Z:@G7?6@Z:@JK?;@Z:@JO?;@Z:@JS?;@Z:@JW?;@Z:@J[?;@Z:@J_?;@Z:@J#?;@Z:@J''?= Z:@J+?= Z:@J/?= Z:@J3?= Z:@J7?= Z:@J??;@Z:@KO?8 Z:@KS?= Z:@KW?= Z:@K[?= Z:@K_?= Z:@K#?= Z:@K/?90Z:@K3?90Z:@K7?90Z:@K;?90Z:@K??&lt;PZ:@LG?&lt;PZ:@LO?;@Z:@LW?;@Z:@L_?;@Z:@L/?= Z:@L??= Z:@MG?;@Z:@MW?= Z:@M_?= Z:@NG?;@Z:@NO?;@Z:@NW?;@Z:@OG?;@Z:@P[?8 Z:@P#?8 Z:@P+?8 Z:@P??= Z:@QG?= Z:@QO?= Z:@QW?= Z:@Q/?90Z:@Q7?;@Z:@RG?;@Z:@RO?;@Z:@RW?&gt;0Z:@R/?90Z:@R7?90Z:@R??90Z:@SG?90Z:@SO?90Z:@S''?&lt;PZ:@S3?&gt;0Z:@S;?&gt;0Z:@TC?&gt;0Z:@#K?&gt;0Z:A^;?;@Z:A"K?&lt;PZ:A"3?;@Z:A";?;@Z:A#[?&gt;0Z:A##?&gt;0Z:A++?&lt;PZ:A&lt;O?;@Z:A&lt;[?;@Z:A&lt;_?;@Z:A&gt;O?;@Z:A&gt;S?6@Z:BV/?&gt;0Z:BV3?&gt;0Z:BV7?&gt;0Z:BV;?&gt;0Z:BV??&gt;0_B@BS?1@_B@B[?8 _B@B+?8 _B@B7?8 _B@CK?8 _B@CS?8 _B@C[?8 _B@C/?8 _B@C7?8 _B@DS?8 _B@D[?6@_B@D_?6@_B@D#?6@_B@D+?8 _B@EC?;@_B@EG?;@_B@EK?6@_B@EO?;@_B@ES?6@_B@EW?;@_B@E[?;@_B@E#?;@_B@E7?;@_B@HK?1@_B@HO?1@_B@HS?1@_B@HW?1@_B@H[?1@_B@H#?1@_B@H''?8 _B@IS?8 _B@IW?8 _B@I[?8 _B@I_?8 _B@I#?8 _B@I+?8 _B@JK?8 _B@JO?8 _B@JS?8 _B@JW?8 _B@J[?8 _B@J_?8 _B@J#?8 _B@J''?6@_B@J+?6@_B@J/?6@_B@J3?6@_B@J7?6@_B@KO?;@_B@KS?6@_B@KW?6@_B@K[?6@_B@K_?6@_B@K#?6@_B@K/?;@_B@K3?;@_B@K7?;@_B@K;?;@_B@LK?1@_B@LO?8 _B@LW?8 _B@L#?8 _B@L+?8 _B@L/?6@_B@L3?8 _B@L;?8 _B@L??6@_B@MG?6@_B@MW?6@_B@M_?6@_B@M;?8 _B@NC?8 _B@NG?8 _B@NK?8 _B@NO?8 _B@NS?8 _B@NW?8 _B@P[?;@_B@P#?;@_B@P+?;@_B@P;?8 _B@P??6@_B@QC?8 _B@QG?6@_B@QK?8 _B@QO?6@_B@QS?8 _B@QW?6@_B@Q/?;@_B@Q3?8 _B@Q7?;@_B@RC?8 _B@RG?;@_B@RK?8 _B@RO?;@_B@R/?;@_B@R7?;@_B@R??;@_B@SO?;@_B@S/?8 _B@S3?;@_B@S7?8 _B@S;?;@_B@S??8 _B@TC?;@_B@#K?;@_BA 3?;@_BA"K?;@_BA"/?8 _BA"3?;@_BA"7?8 _BA";?;@_C@BS?) _C@B[?1@_C@B+?1@_C@CK?1@_C@CS?1@_C@C[?1@_C@C''?= _C@C+?= _C@C3?= _C@DS?1@_C@D[?3 _C@D_?3 _C@D#?3 _C@D+?1@_C@EC?1@_C@EG?1@_C@EK?3 _C@EO?1@_C@ES?3 _C@EW?1@_C@E[?1@_C@E#?1@_C@E''?;@_C@E+?;@_C@E/?6@_C@E3?;@_C@E7?1@_C@HK?) _C@HO?) _C@HS?) _C@HW?) _C@H[?) _C@H#?) _C@H''?1@_C@IS?1@_C@IW?1@_C@I[?1@_C@I_?1@_C@I#?1@_C@I+?1@_C@I??= _C@JK?1@_C@JO?1@_C@JS?1@_C@JW?1@_C@J[?1@_C@J_?1@_C@J#?1@_C@J''?3 _C@J+?3 _C@J/?3 _C@J3?3 _C@J7?3 _C@KO?1@_C@KS?3 _C@KW?3 _C@K[?3 _C@K_?3 _C@K#?3 _C@K/?1@_C@K3?1@_C@K7?1@_C@K;?1@_C@K??;@_C@LG?;@_C@LK?) _C@LO?1@_C@LW?1@_C@L#?1@_C@L+?1@_C@L/?3 _C@L3?1@_C@L;?1@_C@L??3 _C@MG?3 _C@MW?3 _C@M_?3 _C@M;?1@_C@NC?1@_C@NG?1@_C@NK?1@_C@NO?1@_C@NS?1@_C@NW?1@_C@P[?1@_C@P#?1@_C@P+?1@_C@P;?1@_C@P??3 _C@QC?1@_C@QG?3 _C@QK?1@_C@QO?3 _C@QS?1@_C@QW?3 _C@Q/?1@_C@Q3?1@_C@Q7?1@_C@RC?1@_C@RG?1@_C@RK?1@_C@RO?1@_C@R/?1@_C@R7?1@_C@R??1@_C@SO?1@_C@S#?= _C@S''?;@_C@S+?= _C@S3?1@_C@S;?1@_C@TC?1@_C@#K?1@_CA 3?1@_CA"K?1@_CA"/?1@_CA"3?1@_CA"7?1@_CA";?1@_CA+''?= _CA++?;@_D@B[?8 _D@B+?8 _D@CK?8 _D@CS?8 _D@C[?6@_D@C_?8 _D@C''?3 _D@C+?3 _D@C/?8 _D@C3?3 _D@C7?8 _D@DS?= _D@D[?= _D@D_?= _D@D#?= _D@D''?6@_D@D+?= _D@EC?8 _D@EG?8 _D@EK?= _D@EO?8 _D@ES?= _D@EW?8 _D@E[?;@_D@E_?6@_D@E#?8 _D@E''?8 _D@E+?8 _D@E/?;@_D@E3?8 _D@E7?8 _D@H''?8 _D@IS?8 _D@IW?8 _D@I[?8 _D@I_?8 _D@I#?8 _D@I+?8 _D@I??3 _D@JK?= _D@JO?= _D@JS?= _D@JW?= _D@J[?= _D@J_?= _D@J#?= _D@J''?= _D@J+?= _D@J/?= _D@J3?= _D@J7?= _D@KO?8 _D@KS?= _D@KW?= _D@K[?= _D@K_?= _D@K#?= _D@K/?8 _D@K3?8 _D@K7?8 _D@K;?8 _D@K??8 _D@LG?8 _D@LO?= _D@LW?= _D@L#?8 _D@L+?8 _D@L/?= _D@L3?8 _D@L;?8 _D@L??= _D@MG?= _D@MW?= _D@M_?= _D@M;?8 _D@NC?8 _D@NG?= _D@NK?8 _D@NO?= _D@NS?8 _D@NW?= _D@P[?8 _D@P#?8 _D@P+?8 _D@P;?8 _D@P??= _D@QC?8 _D@QG?= _D@QK?8 _D@QO?= _D@QS?8 _D@QW?= _D@Q/?8 _D@Q3?6@_D@Q7?;@_D@RC?6@_D@RG?;@_D@RK?6@_D@RO?;@_D@RS?8 _D@RW?6@_D@R[?8 _D@R/?8 _D@R7?8 _D@R??8 _D@SO?8 _D@S#?3 _D@S''?8 _D@S+?3 _D@S/?8 _D@S3?8 _D@S7?8 _D@S;?8 _D@S??8 _D@TC?8 _D@#K?8 _DA^+?6@_DA 3?8 _DA"K?8 _DA"/?6@_DA"3?;@_DA"7?6@_DA";?;@_DA#W?8 _DA#[?6@_DA#_?8 _DA##?6@_DA+''?3 _DA++?8 _DBV/?6@_DBV3?6@_DBV7?6@_DBV;?6@_DBV??6@_F@BS?1@_F@B[?8 _F@B+?8 _F@B7?8 _F@CK?8 _F@CS?8 _F@C[?8 _F@C/?8 _F@C7?8 _F@DS?8 _F@D[?6@_F@D_?6@_F@D#?6@_F@D+?8 _F@EC?;@_F@EG?;@_F@EK?6@_F@EO?;@_F@ES?6@_F@EW?;@_F@E[?;@_F@E#?;@_F@E7?;@_F@HK?1@_F@HO?1@_F@HS?1@_F@HW?1@_F@H[?1@_F@H#?1@_F@H''?8 _F@IS?8 _F@IW?8 _F@I[?8 _F@I_?8 _F@I#?8 _F@I+?8 _F@JK?8 _F@JO?8 _F@JS?8 _F@JW?8 _F@J[?8 _F@J_?8 _F@J#?8 _F@J''?6@_F@J+?6@_F@J/?6@_F@J3?6@_F@J7?6@_F@KO?;@_F@KS?6@_F@KW?6@_F@K[?6@_F@K_?6@_F@K#?6@_F@K/?;@_F@K3?;@_F@K7?;@_F@K;?;@_F@LK?1@_F@LO?8 _F@LW?8 _F@L#?8 _F@L+?8 _F@L/?6@_F@L3?8 _F@L;?8 _F@L??6@_F@MG?6@_F@MW?6@_F@M_?6@_F@M;?8 _F@NC?8 _F@NG?8 _F@NK?8 _F@NO?8 _F@NS?8 _F@NW?8 _F@P[?;@_F@P#?;@_F@P+?;@_F@P;?8 _F@P??6@_F@QC?8 _F@QG?6@_F@QK?8 _F@QO?6@_F@QS?8 _F@QW?6@_F@Q/?;@_F@Q3?8 _F@Q7?;@_F@RC?8 _F@RG?;@_F@RK?8 _F@RO?;@_F@R/?;@_F@R7?;@_F@R??;@_F@SO?;@_F@S/?8 _F@S3?;@_F@S7?8 _F@S;?;@_F@S??8 _F@TC?;@_F@#K?;@_FA 3?;@_FA"K?;@_FA"/?8 _FA"3?;@_FA"7?8 _FA";?;@_H@B[?8 _H@B+?8 _H@CK?8 _H@CS?8 _H@C[?6@_H@C_?8 _H@C''?3 _H@C+?3 _H@C/?8 _H@C3?3 _H@C7?8 _H@DS?= _H@D[?= _H@D_?= _H@D#?= _H@D''?6@_H@D+?= _H@EC?8 _H@EG?8 _H@EK?= _H@EO?8 _H@ES?= _H@EW?8 _H@E[?;@_H@E_?6@_H@E#?8 _H@E''?8 _H@E+?8 _H@E/?;@_H@E3?8 _H@E7?8 _H@H''?8 _H@IS?8 _H@IW?8 _H@I[?8 _H@I_?8 _H@I#?8 _H@I+?8 _H@I??3 _H@JK?= _H@JO?= _H@JS?= _H@JW?= _H@J[?= _H@J_?= _H@J#?= _H@J''?= _H@J+?= _H@J/?= _H@J3?= _H@J7?= _H@KO?8 _H@KS?= _H@KW?= _H@K[?= _H@K_?= _H@K#?= _H@K/?8 _H@K3?8 _H@K7?8 _H@K;?8 _H@K??8 _H@LG?8 _H@LO?= _H@LW?= _H@L#?8 _H@L+?8 _H@L/?= _H@L3?8 _H@L;?8 _H@L??= _H@MG?= _H@MW?= _H@M_?= _H@M;?8 _H@NC?8 _H@NG?= _H@NK?8 _H@NO?= _H@NS?8 _H@NW?= _H@P[?8 _H@P#?8 _H@P+?8 _H@P;?8 _H@P??= _H@QC?8 _H@QG?= _H@QK?8 _H@QO?= _H@QS?8 _H@QW?= _H@Q/?8 _H@Q3?6@_H@Q7?;@_H@RC?6@_H@RG?;@_H@RK?6@_H@RO?;@_H@RS?8 _H@RW?6@_H@R[?8 _H@R/?8 _H@R7?8 _H@R??8 _H@SO?8 _H@S#?3 _H@S''?8 _H@S+?3 _H@S/?8 _H@S3?8 _H@S7?8 _H@S;?8 _H@S??8 _H@TC?8 _H@#K?8 _HA^+?6@_HA 3?8 _HA"K?8 _HA"/?6@_HA"3?;@_HA"7?6@_HA";?;@_HA#W?8 _HA#[?6@_HA#_?8 _HA##?6@_HA+''?3 _HA++?8 _HBV/?6@_HBV3?6@_HBV7?6@_HBV;?6@_HBV??6@_#@BS?6@_#@B[?8 _#@B+?8 _#@CK?8 _#@CS?8 _#@C[?8 _#@C_?3 _#@C''?1@_#@C+?1@_#@C/?3 _#@C3?1@_#@C7?3 _#@DS?8 _#@D[?;@_#@D_?;@_#@D#?;@_#@D''?;@_#@D+?8 _#@D7?= _#@EC?8 _#@EG?8 _#@EK?;@_#@EO?8 _#@ES?;@_#@EW?8 _#@E_?;@_#@E#?8 _#@E''?6@_#@E+?6@_#@E/?6@_#@E3?6@_#@E7?8 _#@HK?6@_#@HO?6@_#@HS?6@_#@HW?6@_#@H[?6@_#@H#?6@_#@H''?8 _#@IS?8 _#@IW?8 _#@I[?8 _#@I_?8 _#@I#?8 _#@I+?8 _#@I??1@_#@JK?8 _#@JO?8 _#@JS?8 _#@JW?8 _#@J[?8 _#@J_?8 _#@J#?8 _#@J''?;@_#@J+?;@_#@J/?;@_#@J3?;@_#@J7?;@_#@KO?8 _#@KS?;@_#@KW?;@_#@K[?;@_#@K_?;@_#@K#?;@_#@K/?8 _#@K3?8 _#@K7?8 _#@K;?8 _#@K??6@_#@LG?6@_#@LK?6@_#@LO?8 _#@LW?8 _#@L#?8 _#@L+?8 _#@L/?;@_#@L3?8 _#@L;?8 _#@L??;@_#@MG?;@_#@MW?;@_#@M_?;@_#@M;?8 _#@NC?8 _#@NG?8 _#@NK?8 _#@NO?8 _#@NS?8 _#@NW?8 _#@P[?8 _#@P#?8 _#@P+?8 _#@P;?8 _#@P??;@_#@QC?8 _#@QG?;@_#@QK?8 _#@QO?;@_#@QS?8 _#@QW?;@_#@Q/?8 _#@Q3?8 _#@RC?8 _#@RK?8 _#@RS?3 _#@RW?;@_#@R[?3 _#@R/?8 _#@R7?8 _#@R??8 _#@SO?8 _#@S#?1@_#@S''?6@_#@S+?1@_#@S/?3 _#@S3?8 _#@S7?3 _#@S;?8 _#@S??3 _#@TC?8 _#@#K?8 _#A^+?;@_#A 3?8 _#A"K?8 _#A"/?8 _#A"7?8 _#A#W?3 _#A#[?;@_#A#_?3 _#A##?;@_#A+''?1@_#A++?6@_#BV/?;@_#BV3?;@_#BV7?;@_#BV;?;@_#BV??;@_$@BS?1@_$@B[?;@_$@B+?;@_$@B7?;@_$@CK?;@_$@CS?;@_$@C[?6@_$@C_?6@_$@C''?1@_$@C+?1@_$@C/?6@_$@C3?1@_$@C7?6@_$@DS?;@_$@D''?6@_$@D+?;@_$@D7?;@_$@EC?;@_$@EG?;@_$@EO?;@_$@EW?;@_$@E[?8 _$@E_?6@_$@E#?;@_$@E''?6@_$@E+?6@_$@E/?40_$@E3?6@_$@E7?;@_$@HK?1@_$@HO?1@_$@HS?1@_$@HW?1@_$@H[?1@_$@H#?1@_$@H''?;@_$@IS?;@_$@IW?;@_$@I[?;@_$@I_?;@_$@I#?;@_$@I+?;@_$@I??1@_$@JK?;@_$@JO?;@_$@JS?;@_$@JW?;@_$@J[?;@_$@J_?;@_$@J#?;@_$@KO?;@_$@K/?;@_$@K3?;@_$@K7?;@_$@K;?;@_$@K??6@_$@LG?6@_$@LK?1@_$@LO?;@_$@LW?;@_$@L#?;@_$@L+?;@_$@L3?;@_$@L;?;@_$@M;?;@_$@NC?;@_$@NG?;@_$@NK?;@_$@NO?;@_$@NS?;@_$@NW?;@_$@P[?;@_$@P#?;@_$@P+?;@_$@P;?;@_$@QC?;@_$@QK?;@_$@QS?;@_$@Q/?;@_$@Q3?6@_$@Q7?8 _$@RC?6@_$@RG?8 _$@RK?6@_$@RO?8 _$@RS?6@_$@RW?6@_$@R[?6@_$@R/?;@_$@R7?;@_$@R??;@_$@SO?;@_$@S#?1@_$@S''?6@_$@S+?1@_$@S/?6@_$@S3?;@_$@S7?6@_$@S;?;@_$@S??6@_$@TC?;@_$@#K?;@_$A^+?6@_$A 3?;@_$A"K?;@_$A"/?6@_$A"3?8 _$A"7?6@_$A";?8 _$A#W?6@_$A#[?6@_$A#_?6@_$A##?6@_$A+''?1@_$A++?6@_$BV/?6@_$BV3?6@_$BV7?6@_$BV;?6@_$BV??6@%+@@??1@%+@AC?6@%+@AG?1@%+@DS?&lt;P%+@D[?;@%+@D_?= %+@D#?&gt;0%+@D+?&lt;P%+@D/?&lt;P%+@D3?&lt;P%+@D??&lt;P%+@EC?= %+@EG?= %+@EK?;@%+@ES?= %+@EW?&gt;0%+@E[?;@%+@E#?&gt;0%+@E/?;@%+@F7?6@%+@G7?;@%+@JK?&lt;P%+@JO?&lt;P%+@JS?&lt;P%+@JW?&lt;P%+@J[?&lt;P%+@J_?&lt;P%+@J#?&lt;P%+@J''?;@%+@J+?&gt;0%+@J/?&gt;0%+@J3?&gt;0%+@J7?&gt;0%+@J??&lt;P%+@KO?= %+@KS?;@%+@KW?;@%+@K[?;@%+@K_?;@%+@K#?;@%+@K/?&gt;0%+@K3?&gt;0%+@K7?&gt;0%+@K;?&gt;0%+@LO?&lt;P%+@LW?&lt;P%+@L_?&lt;P%+@L/?;@%+@L??;@%+@MG?= %+@MW?&gt;0%+@M_?&gt;0%+@NG?&lt;P%+@NO?&lt;P%+@NW?&lt;P%+@OG?&lt;P%+@P[?= %+@P#?= %+@P+?= %+@P??;@%+@QG?;@%+@QO?;@%+@QW?;@%+@Q/?&gt;0%+@Q7?;@%+@RG?;@%+@RO?;@%+@R/?&gt;0%+@R7?&gt;0%+@R??&gt;0%+@SG?&gt;0%+@SO?&gt;0%+A^;?&lt;P%+A"3?;@%+A";?;@%+A&gt;O?6@%+A&gt;S?;@%,@DS?90%,@D[?;@%,@D_?&lt;P%,@D#?= %,@D''?90%,@D+?90%,@D/?&lt;P%,@D3?&lt;P%,@D??&lt;P%,@EK?;@%,@ES?&lt;P%,@E[?= %,@E_?90%,@E''?90%,@E+?90%,@E3?90%,@JK?90%,@JO?90%,@JS?90%,@JW?90%,@J[?90%,@J_?90%,@J#?90%,@J''?;@%,@J+?= %,@J/?= %,@J3?= %,@J7?= %,@J??&lt;P%,@KS?;@%,@KW?;@%,@K[?;@%,@K_?;@%,@K#?;@%,@K??90%,@LG?90%,@LO?90%,@LW?90%,@L_?90%,@L/?;@%,@L??;@%,@MG?&lt;P%,@MW?= %,@M_?= %,@NG?90%,@NO?90%,@NW?90%,@OG?&lt;P%,@P??;@%,@QG?;@%,@QO?;@%,@QW?;@%,@Q7?= %,@RG?= %,@RO?= %,@RW?90%,@S''?90%,A^;?&lt;P%,A"3?= %,A";?= %,A#[?90%,A##?90%,A++?90%,BV/?90%,BV3?90%,BV7?90%,BV;?90%,BV??90%.@DS?90%.@D[?;@%.@D_?&lt;P%.@D#?= %.@D''?90%.@D+?90%.@D/?&lt;P%.@D3?&lt;P%.@D??&lt;P%.@EK?;@%.@ES?&lt;P%.@E[?= %.@E_?90%.@E''?90%.@E+?90%.@E3?90%.@JK?90%.@JO?90%.@JS?90%.@JW?90%.@J[?90%.@J_?90%.@J#?90%.@J''?;@%.@J+?= %.@J/?= %.@J3?= %.@J7?= %.@J??&lt;P%.@KS?;@%.@KW?;@%.@K[?;@%.@K_?;@%.@K#?;@%.@K??90%.@LG?90%.@LO?90%.@LW?90%.@L_?90%.@L/?;@%.@L??;@%.@MG?&lt;P%.@MW?= %.@M_?= %.@NG?90%.@NO?90%.@NW?90%.@OG?&lt;P%.@P??;@%.@QG?;@%.@QO?;@%.@QW?;@%.@Q7?= %.@RG?= %.@RO?= %.@RW?90%.@S''?90%.A^;?&lt;P%.A"3?= %.A";?= %.A#[?90%.A##?90%.A++?90%.BV/?90%.BV3?90%.BV7?90%.BV;?90%.BV??90%/@DS?90%/@D[?;@%/@D_?&lt;P%/@D#?= %/@D''?90%/@D+?90%/@D/?&lt;P%/@D3?&lt;P%/@D??&lt;P%/@EK?;@%/@ES?&lt;P%/@E[?= %/@E_?90%/@E''?90%/@E+?90%/@E3?90%/@JK?90%/@JO?90%/@JS?90%/@JW?90%/@J[?90%/@J_?90%/@J#?90%/@J''?;@%/@J+?= %/@J/?= %/@J3?= %/@J7?= %/@J??&lt;P%/@KS?;@%/@KW?;@%/@K[?;@%/@K_?;@%/@K#?;@%/@K??90%/@LG?90%/@LO?90%/@LW?90%/@L_?90%/@L/?;@%/@L??;@%/@MG?&lt;P%/@MW?= %/@M_?= %/@NG?90%/@NO?90%/@NW?90%/@OG?&lt;P%/@P??;@%/@QG?;@%/@QO?;@%/@QW?;@%/@Q7?= %/@RG?= %/@RO?= %/@RW?90%/@S''?90%/A^;?&lt;P%/A"3?= %/A";?= %/A#[?90%/A##?90%/A++?90%/BV/?90%/BV3?90%/BV7?90%/BV;?90%/BV??90@a')</body></methods><methods><class-id>Graphics.Fonts.OpenType.ScriptRecord class</class-id> <category>specification</category><body package="OpenType">localSpecification	&lt;constant: #tag class: #{Integer} comment: 'Tag 	ScriptTag 	4-byte ScriptTag identifier'&gt;	&lt;constant: #offset class: #{Integer} comment: 'Offset 	Script 	Offset to Script table-from beginning of ScriptList'&gt;</body></methods><methods><class-id>WindowsFonts.SystemFont class</class-id> <category>specification</category><body package="Fonts for Windows">localSpecification	&lt;constant: #type class: #{Integer}&gt;	&lt;constant: #font class: #{Logfont}&gt;	&lt;constant: #metric class: #{TextMetric}&gt;</body></methods><methods><class-id>Graphics.Fonts.TextView class</class-id> <category>interface specs</category><body package="Fonts UI">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: '' 			#min: #(#{Core.Point} 0 0 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 400 180 1200 980 ) 			#menu: #menuBar ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 0 0 0 1 0 1 ) 					#name: #TextEditor 					#flags: 12 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #textHolder 					#tabable: false 					#isReadOnly: true 					#tabRequiresControl: true 					#isWrapped: false ) ) ) )</body></methods><methods><class-id>Graphics.Fonts.CFF.StandardEncoding class</class-id> <category>specification</category><body package="CompactFontFormat">localSpecification	&lt;constant: #name class: #{String}&gt;	&lt;sequence: #codes&gt;</body></methods><methods><class-id>Graphics.Fonts.CustomFont class</class-id> <category>fonts</category><body package="Fonts test resources">nimbusSansLRegu	"one of the Adobe core 35 fonts.	Free with the GNU General Public License (see method comment of #nimbusSansLReguCOPYING) - part of the GhostScript package"	&lt;font: #NimbusSansLRegu&gt;	^self file: 'uhvr8a' pfb: self nimbusSansLReguPfb afm: self nimbusSansLReguAfm</body></methods><methods><class-id>Graphics.Fonts.OpenType.Segment class</class-id> <category>specification</category><body package="OpenType">localSpecification	&lt;constant: #startCode class: #{Integer} comment: 'Start character code'&gt;	&lt;constant: #endCode class: #{Integer} comment: 'End characterCode, last=0xFFFF'&gt;	&lt;constant: #delta class: #{Integer} comment: 'Delta for all character codes'&gt;</body></methods><methods><class-id>Graphics.Fonts.OpenType.IndexedSegment class</class-id> <category>specification</category><body package="OpenType">localSpecification	&lt;constant: #glyphIdArrayIndex class: #{Core.Integer} comment: 'Index in glyphIdArray'&gt;</body></methods><methods><class-id>WindowsFonts.BitCodepage class</class-id> <category>specification</category><body package="Fonts for Windows">localSpecification	&lt;constant: #bit class: #{Integer}&gt;	&lt;constant: #codepage class: #{Integer}&gt;	&lt;constant: #description class: #{String}&gt;</body></methods><methods><class-id>Graphics.Fonts.FontListIcons class</class-id> <category>resources</category><body package="Fonts UI Support">afm16x16	"Tools.UIMaskEditor new openOnClass: self andSelector: #afm16x16"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 16@16 depth: 2 bitsPerPixel: 2 palette: (Graphics.MappedPalette withColors: ((Core.Array new: 4) at: 1 put: Graphics.ColorValue black; at: 2 put: Graphics.ColorValue red; at: 3 put: (Graphics.ColorValue scaledRed: 7195 scaledGreen: 7066 scaledBlue: 6874); at: 4 put: (Graphics.ColorValue scaledRed: 4240 scaledGreen: 4240 scaledBlue: 4240); yourself)) usingBits: #[168 168 168 170 168 168 84 154 168 164 116 150 168 148 248 87 0 0 0 0 168 92 168 94 168 124 164 126 164 120 164 122 0 0 0 0 148 232 84 234 148 232 84 234 148 228 84 150 0 0 0 0 164 92 212 126 172 124 164 250 168 248 168 234])</body><body package="Fonts UI Support">afm16x16mask	"Tools.UIMaskEditor new openOnClass: self andSelector: #afm16x16mask"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 16@16 depth: 1 bitsPerPixel: 1 palette: CoveragePalette monoMaskPalette usingBits: #[17 16 0 0 17 244 0 0 19 246 0 0 23 223 0 0 255 255 0 0 31 30 0 0 31 62 0 0 61 60 0 0 255 255 0 0 121 248 0 0 121 248 0 0 123 246 0 0 255 255 0 0 63 254 0 0 63 60 0 0 29 24 0 0])</body><body package="Fonts UI Support">blank16x16	"Tools.UIMaskEditor new openOnClass: self andSelector: #blank16x16"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 16@16 depth: 1 bitsPerPixel: 1 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: #[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])</body><body package="Fonts UI Support">blank16x16mask	"UIMaskEditor new openOnClass: self andSelector: #blank16x16mask"	&lt;resource: #image&gt;	^CachedImage on: ((Image extent: 16@16 depth: 1 bitsPerPixel: 1 palette: CoveragePalette monoMaskPalette usingBits: #[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]))</body><body package="Fonts UI Support">font16x16	"UIMaskEditor new openOnClass: self andSelector: #font16x16"	&lt;resource: #image&gt;	^CachedImage on: ((Image extent: 16@16 depth: 7 bitsPerPixel: 8 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4593 5043 5524)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4978 5653 6327)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5653 5653 5653)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7066 7066 7066)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6970 7066 7163)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5589 5589 5621)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5171 5557 5910)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6809 6970 7098)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6199 6199 6199)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6906 6906 6906)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6038 6038 6038)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4336 5332 6327)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4240 5267 6327)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2794 3854 4946)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8158 8158 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6649 6649 6777)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3180 4464 5749)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2441 3693 4978)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6584 6584 6584)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5878 5878 5878)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7291 7291 7291)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5589 5878 6167)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6263 6488 6681)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7034 7130 7227)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5942 6360 6809)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7002 7066 7163)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6263 6263 6263)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6874 6970 7066)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6199 6199 6231)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6713 6906 7130)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6103 6103 6103)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5942 5942 5942)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7355 7355 7355)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6649 6649 6649)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6617 6617 6713)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5171 5781 6392)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7195 7195 7195)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3051 4143 5267)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5075 5621 6167)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2248 3437 4657)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6167 6167 6167)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3565 4657 5717)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6006 6006 6006)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6360 6713 7066)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5460 5942 6456)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5942 5942 5974)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6617 6617 6745)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2987 4432 5878)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2537 4272 6006)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7098 7098 7098)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3983 4914 5878)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6938 7098 7259)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2184 3404 4625)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6167 6392 6617)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2601 4047 5524)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6231 6231 6231)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4079 4753 5460)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2280 3244 4207)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6070 6070 6070)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2698 3790 4882)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5910 5910 5910)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6617 6617 6617)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4850 5749 6649)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6424 6424 6520)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5235 5685 6167)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7163 7163 7163)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7098 7163 7227)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7098 7098 7130)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6038 6360 6649)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6295 6295 6295)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3051 3950 4882)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6135 6135 6135)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3886 4625 5332)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2152 3147 4143)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5974 5974 5974)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7387 7387 7387)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7323 7323 7355)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3790 4400 5010)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7227 7291 7323)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'N3,;E4YHRD!HRAX;N3,;N3,;RA]LSD1LSD0VD3,;N3,;C!MLSD1LSD1LC1XSN3,;N09HSD1LSD1LSA$YE!L;N3,NRD1LSD1OL2@WFQ$SC#,;C$!LSD1LO3@+SD1LR@8;N09HSD1LSR&lt;LB41LSD NN3,NRD1LSA PGSXWSD0^C#,;C$!LSD02@T0)H41LG 8;N08^SD0DDP]LKBT SA8NN3,NG$1LI"\MCS04QT0:C#,;C#)LHD]AFQ$YND%LB 8;N08SSAX9P41LSCUJF1LNN3,ND40FND1LSD0 S!TEN3,;C TOK"8.K"8.K"I@GC,;N3-FKR4-KR4-KR4JQC,;N0@a')))</body><body package="Fonts UI Support">font16x16mask	"UIMaskEditor new openOnClass: self andSelector: #font16x16mask"	&lt;resource: #image&gt;	^CachedImage on: ((Image extent: 16@16 depth: 1 bitsPerPixel: 1 palette: CoveragePalette monoMaskPalette usingBits: #[63 224 0 0 63 240 0 0 63 248 0 0 63 252 0 0 63 252 0 0 63 252 0 0 63 252 0 0 63 252 0 0 63 252 0 0 63 252 0 0 63 252 0 0 63 252 0 0 63 252 0 0 63 252 0 0 63 252 0 0 63 252 0 0]))</body><body package="Fonts UI Support">macFont16x16	"Tools.UIMaskEditor new openOnClass: self andSelector: #macFont16x16"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 16@16 depth: 2 bitsPerPixel: 2 palette: (Graphics.MappedPalette withColors: ((Core.Array new: 3) at: 1 put: (Graphics.ColorValue scaledRed: 4240 scaledGreen: 4240 scaledBlue: 4240); at: 2 put: (Graphics.ColorValue scaledRed: 7195 scaledGreen: 7066 scaledBlue: 6874); at: 3 put: (Graphics.ColorValue scaledRed: 0 scaledGreen: 4111 scaledBlue: 0); yourself)) usingBits: #[85 85 85 85 85 85 169 101 85 90 138 105 85 106 6 168 85 168 22 160 86 160 86 161 86 129 90 129 90 133 90 133 90 5 106 5 106 21 170 21 106 22 168 21 106 26 168 105 106 170 40 160 90 160 42 129 82 129 90 5 84 5 84 21])</body><body package="Fonts UI Support">macFont16x16mask	"Tools.UIMaskEditor new openOnClass: self andSelector: #macFont16x16mask"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 16@16 depth: 1 bitsPerPixel: 1 palette: CoveragePalette monoMaskPalette usingBits: #[0 0 0 0 0 228 0 0 3 246 0 0 7 223 0 0 15 159 0 0 31 30 0 0 30 62 0 0 60 60 0 0 60 124 0 0 120 248 0 0 121 248 0 0 123 246 0 0 127 255 0 0 63 254 0 0 62 60 0 0 28 24 0 0])</body><body package="Fonts UI Support">openType16x16	"UIMaskEditor new openOnClass: self andSelector: #openType16x16"	&lt;resource: #image&gt;	^CachedImage on: ((Image extent: 16@16 depth: 8 bitsPerPixel: 8 palette: (MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7741 7934 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4946 5396 6874)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(995 995 995)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7580 7805 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5396 6135 7677)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2184 4593 2505)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7934 8062 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5910 6906 8062)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4079 4400 5781)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2216 2216 2216)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5043 5557 6970)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4175 5878 5203)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5203 6488 7869)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4207 5203 6841)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7741 7966 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4464 4561 5910)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(224 224 256)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7580 7837 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(32 3950 32)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3083 3340 3886)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7355 7709 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(706 2698 1284)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7966 8062 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5749 6970 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6552 7259 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7195 7291 7420)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3308 3597 4079)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6263 6520 6809)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5621 6263 7709)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3629 3918 4432)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7773 7966 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2248 4657 2762)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6552 6841 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3437 3565 3661)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4464 4657 5846)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7580 7837 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5974 6456 7837)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(610 3372 1060)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1477 1991 2569)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5814 5942 6199)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4882 6295 7773)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7387 7741 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(32 3661 32)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4914 5171 6552)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3147 5203 3661)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7805 7966 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5781 6809 8030)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5653 6874 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5557 6874 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7612 7869 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4786 4914 6295)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4368 5492 7130)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5589 6681 8030)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3693 4175 5814)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4432 5942 7612)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6809 7387 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4882 5332 6777)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7548 7741 7998)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7420 7741 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2698 4850 4818)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6006 6938 8030)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(803 803 835)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7580 7644 7741)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7130 7644 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4240 5235 6874)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3886 5557 6906)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2120 4721 7195)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7612 7869 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5974 6552 7805)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6135 7098 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5878 6006 6135)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6809 7420 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5300 6070 7644)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1413 4143 2537)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6552 6649 6809)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5814 6424 7773)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4850 5075 5460)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5300 6520 7869)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7837 7998 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7966 7998 8030)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(32 4400 32)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6745 6906 7034)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4657 5814 6906)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4657 6070 7644)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6424 7195 8062)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4850 5075 6456)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5974 6070 6327)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7644 7869 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 5621 7323)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6231 7066 8062)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(963 4015 1156)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3918 4593 6231)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4721 4818 6199)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6906 6970 7163)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(706 835 963)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7195 7355 7484)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(32 3437 32)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4272 5749 7387)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2890 3180 3726)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6456 7195 8062)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7644 7901 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5492 6199 7709)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5396 6809 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(835 3854 1477)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5460 5749 7869)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8062 8126 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6649 7323 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4561 4753 5139)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7259 7677 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5685 6327 7741)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7869 8030 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1477 1509 1541)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2120 2923 3790)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1509 1509 1509)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4240 5814 7387)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2184 5332 7934)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1220 1509 1798)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3565 3983 5589)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6970 7580 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(32 4143 32)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5685 6745 7998)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3822 5781 7516)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5460 5653 6006)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1027 1284 1573)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3212 3758 4529)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5524 6681 7901)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5878 6456 7773)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7484 7773 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8062 8158 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4143 5010 6649)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2344 4657 4175)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1895 2601 3372)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5332 6552 7901)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5846 6906 7034)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4689 5171 5621)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1638 4272 2955)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2923 5010 5235)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7034 7259 7484)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3790 4368 6006)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(32 4175 32)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6070 6584 7805)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7709 7901 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5878 6006 6263)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(963 963 995)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6777 7484 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6199 6327 6617)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(32 3854 32)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7516 7805 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4336 5428 7066)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5910 7034 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6103 7002 8030)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5428 6584 7805)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2923 3212 3758)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3276 3565 4047)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5267 6456 7773)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4818 5010 6360)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6295 7130 8062)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6874 7484 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6231 6360 6584)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7548 7805 8126)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7516 7805 8158)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6938 7452 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4850 5267 6745)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5781 5910 6167)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3629 5428 6488)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7934 8030 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4047 4336 4850)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5814 6938 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6520 7227 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4015 4786 6424)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'A)VU%YVU%SQA%S(FA XFA ZUA(DV[09%@9U:_W,YT@XF%V(FS0AD(C-4]DN''$#&lt;FA)V&amp;K(8# B)-HBA)BD5^A ZUG% QXBDPIS2XNBP]''0XF%SJ!T!A1T0T+)W:MD8&lt;FA)VTQ38&amp;&amp;4@-#HMNQVN$A ZUEGA_MI97V5FC!W=#)@XFCX)2_EQ7!)LRP*!LX:PFA*([BXRX$Q=8"B&amp;V[&amp;N$A Z*()A_X -!ZGNVE11#)@XFWD!M]QUJ"S\0E3E&amp;X:PFA(-+FFQFCJ"VE3E''AFN$A X6*UV]V)\=A2=9MT&amp;YJ@XF] (ANZL,U)03WRHOF%\FA$-,&amp;)%#X6M#X6NY&amp;&amp;1KA @a')))</body><body package="Fonts UI Support">openType16x16mask	"UIMaskEditor new openOnClass: self andSelector: #openType16x16mask"	&lt;resource: #image&gt;	^CachedImage on: ((Image extent: 16@16 depth: 1 bitsPerPixel: 1 palette: CoveragePalette monoMaskPalette usingBits: #[127 192 0 0 127 248 0 0 127 252 0 0 127 254 0 0 127 254 0 0 127 254 0 0 127 254 0 0 127 254 0 0 127 254 0 0 127 254 0 0 127 254 0 0 127 254 0 0 127 254 0 0 127 254 0 0 127 254 0 0 127 254 0 0]))</body><body package="Fonts UI Support">pfa16x16	"Tools.UIMaskEditor new openOnClass: self andSelector: #pfa16x16"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 16@16 depth: 2 bitsPerPixel: 2 palette: (Graphics.MappedPalette withColors: ((Core.Array new: 3) at: 1 put: Graphics.ColorValue blue; at: 2 put: (Graphics.ColorValue scaledRed: 7195 scaledGreen: 7066 scaledBlue: 6874); at: 3 put: (Graphics.ColorValue scaledRed: 4240 scaledGreen: 4240 scaledBlue: 4240); yourself)) usingBits: #[85 85 85 85 85 85 1 69 85 80 32 65 85 64 164 2 85 2 148 10 84 10 84 9 84 41 80 41 80 37 80 37 80 165 64 165 64 149 0 149 64 148 2 149 64 144 2 65 64 0 130 10 80 10 128 41 88 41 80 165 86 165 86 149])</body><body package="Fonts UI Support">pfa16x16mask	"Tools.UIMaskEditor new openOnClass: self andSelector: #pfa16x16mask"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 16@16 depth: 1 bitsPerPixel: 1 palette: CoveragePalette monoMaskPalette usingBits: #[0 0 0 0 0 228 0 0 3 246 0 0 7 223 0 0 15 159 0 0 31 30 0 0 30 62 0 0 60 60 0 0 60 124 0 0 120 248 0 0 121 248 0 0 123 246 0 0 127 255 0 0 63 254 0 0 62 60 0 0 28 24 0 0])</body><body package="Fonts UI Support">pfm16x16	"Tools.UIMaskEditor new openOnClass: self andSelector: #pfm16x16"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 16@16 depth: 2 bitsPerPixel: 2 palette: (Graphics.MappedPalette withColors: ((Core.Array new: 4) at: 1 put: Graphics.ColorValue black; at: 2 put: Graphics.ColorValue blue; at: 3 put: (Graphics.ColorValue scaledRed: 7195 scaledGreen: 7066 scaledBlue: 6874); at: 4 put: (Graphics.ColorValue scaledRed: 4240 scaledGreen: 4240 scaledBlue: 4240); yourself)) usingBits: #[168 168 168 170 168 168 84 154 168 164 116 150 168 148 248 87 0 0 0 0 168 92 168 94 168 124 164 126 164 120 164 122 0 0 0 0 148 232 84 234 148 232 84 234 148 228 84 150 0 0 0 0 164 92 212 126 172 124 164 250 168 248 168 234])</body><body package="Fonts UI Support">pfm16x16mask	"Tools.UIMaskEditor new openOnClass: self andSelector: #pfm16x16mask"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 16@16 depth: 1 bitsPerPixel: 1 palette: CoveragePalette monoMaskPalette usingBits: #[17 16 0 0 17 244 0 0 19 246 0 0 23 223 0 0 255 255 0 0 31 30 0 0 31 62 0 0 61 60 0 0 255 255 0 0 121 248 0 0 121 248 0 0 123 246 0 0 255 255 0 0 63 254 0 0 63 60 0 0 29 24 0 0])</body><body package="Fonts UI Support">type116x16	"Tools.UIMaskEditor new openOnClass: self andSelector: #type116x16"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 16@16 depth: 2 bitsPerPixel: 2 palette: (Graphics.MappedPalette withColors: ((Core.Array new: 3) at: 1 put: Graphics.ColorValue red; at: 2 put: (Graphics.ColorValue scaledRed: 7195 scaledGreen: 7066 scaledBlue: 6874); at: 3 put: (Graphics.ColorValue scaledRed: 4240 scaledGreen: 4240 scaledBlue: 4240); yourself)) usingBits: #[85 85 85 85 85 85 1 69 85 80 32 65 85 64 164 2 85 2 148 10 84 10 84 9 84 41 80 41 80 37 80 37 80 165 64 165 64 149 0 149 64 148 2 149 64 144 2 65 64 0 130 10 80 10 128 41 88 41 80 165 86 165 86 149])</body><body package="Fonts UI Support">type116x16mask	"Tools.UIMaskEditor new openOnClass: self andSelector: #type116x16mask"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 16@16 depth: 1 bitsPerPixel: 1 palette: CoveragePalette monoMaskPalette usingBits: #[0 0 0 0 0 228 0 0 3 246 0 0 7 223 0 0 15 159 0 0 31 30 0 0 30 62 0 0 60 60 0 0 60 124 0 0 120 248 0 0 121 248 0 0 123 246 0 0 127 255 0 0 63 254 0 0 62 60 0 0 28 24 0 0])</body></methods><methods><class-id>Graphics.Fonts.CFF.Index class</class-id> <category>specification</category><body package="CompactFontFormat">localSpecification	&lt;constant: #count class: #{Integer} comment: 'Card16. Number of objects stored in INDEX'&gt;	&lt;constant: #offSize class: #{Integer} comment: 'OffSize. Offset array element size'&gt;	&lt;sequence: #offset comment: 'Offset. [count+1] Offset array (from byte preceding object data)'&gt;	&lt;sequence: #data comment: 'Card8. [&lt;varies&gt;] Object data'&gt;</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable0 class</class-id> <category>specification</category><body package="OpenType">localSpecification	&lt;constant: #glyphIdArray class: #{ByteArray} comment: 'An array that maps character codes to glyph index values'&gt;</body></methods><methods><class-id>Graphics.Fonts.CFF.Operation class</class-id> <category>specification</category><body package="CompactFontFormat">localSpecification	&lt;constant: #operator class: #{Operator}&gt;	&lt;sequence: #operands&gt;</body></methods><methods><class-id>Graphics.Fonts.CFF.Header class</class-id> <category>specification</category><body package="CompactFontFormat">localSpecification	&lt;constant: #major class: #{Integer} comment: 'Card8. Format major version (starting at 1)'&gt;	&lt;constant: #minor class: #{Integer} comment: 'Card8. Format minor version (starting at 0)'&gt;	&lt;constant: #hdrSize class: #{Integer} comment: 'Card8. Header size (bytes)'&gt;	&lt;constant: #offSize class: #{Integer} comment: 'OffSize. Absolute offset (0) size'&gt;</body></methods><methods><class-id>Graphics.Fonts.CFF.Charstring class</class-id> <category>specification</category><body package="CompactFontFormat">localSpecification	&lt;sequence: #bytes&gt;</body></methods><methods><class-id>Graphics.Fonts.CFF.Encoding1 class</class-id> <category>specification</category><body package="CompactFontFormat">localSpecification	&lt;sequence: #ranges&gt;	&lt;optional: #supplement class: #{EncodingSupplement} default: 'EncodingSupplement new'&gt;</body></methods><methods><class-id>Graphics.Fonts.CFF.Encoding0 class</class-id> <category>specification</category><body package="CompactFontFormat">localSpecification	&lt;sequence: #codes&gt;	&lt;optional: #supplement class: #{EncodingSupplement} default: 'EncodingSupplement new'&gt;</body></methods><methods><class-id>Graphics.Fonts.CFF.StandardCharset class</class-id> <category>specification</category><body package="CompactFontFormat">localSpecification	&lt;constant: #name class: #{String}&gt;	&lt;sequence: #glyphs comment: 'Glyph name array'&gt;</body></methods><methods><class-id>Graphics.Fonts.OpenType.NameRecord class</class-id> <category>specification</category><body package="OpenType">localSpecification	&lt;constant: #platformID class: #{SmallInteger}&gt;	&lt;constant: #encodingID class: #{SmallInteger}&gt;	&lt;constant: #languageID class: #{SmallInteger}&gt;	&lt;constant: #nameID class: #{SmallInteger}&gt;	&lt;constant: #bytes class: #{ByteArray}&gt;</body></methods><methods><class-id>WindowsFonts.UnicodeSubset class</class-id> <category>specification</category><body package="Fonts for Windows">localSpecification	&lt;constant: #bit class: #{Integer}&gt;	&lt;constant: #from class: #{Integer}&gt;	&lt;constant: #to class: #{Integer}&gt;	&lt;constant: #description class: #{String}&gt;</body></methods><methods><class-id>Graphics.Fonts.CharsetView class</class-id> <category>interface specs</category><body package="Fonts UI">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: '' 			#min: #(#{Core.Point} 0 0 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 666 303 1466 1103 ) 			#menu: #menuBar ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 0 0 0 0.25 0 1 ) 					#name: #CharacterList 					#model: #characters 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #selectionChanged ) 					#menu: #characterMenu 					#selectionType: #highlight ) 				#(#{UI.ArbitraryComponentSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0.25 0 0 0 1 -24 0.75 ) 					#name: #GlyphViewHolder 					#component: #glyphView ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0.25 -24 0.75 0 1 0 0.75 ) 					#name: #InfoTextEditor 					#flags: 12 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7167 7167 8191 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7167 7167 8191 ) ) 					#model: #infoText 					#tabable: false 					#isReadOnly: true 					#tabRequiresControl: true ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0.25 0 0.75 0 1 0 1 ) 					#name: #CharStringTextEditor 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7167 8191 8191 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7167 8191 8191 ) ) 					#model: #charStringHolder 					#tabable: false 					#isReadOnly: true 					#tabRequiresControl: true 					#isWrapped: true ) ) ) )</body></methods><methods><class-id>Tools.VisualLauncher</class-id> <category>menus</category><body package="Fonts Development">openFontExplorer	&lt;menuItem:  'Font Explorer...'		icon: #fontsIcon		nameKey: #openFontExplorer		menu: #(#menuBar #tools)		position: 5.1&gt;	Graphics.Fonts.FontExplorer open</body></methods><methods><class-id>Graphics.Fonts.OpenType.Table</class-id> <category>accessing</category><body package="OpenType">bytes	^UninterpretedBytes from: self contents</body><body package="OpenType">contents	"&lt;ByteArray&gt;"	^contents ifNil: [#[]]</body><body package="Fonts UI Support">descriptionText	^self asDescription</body><body package="OpenType">file	"&lt;OpenType.File&gt;"	^file</body><body package="Fonts UI Support">listIcon	self contents isEmpty ifTrue: [		^Fonts.FontListIcons visualFor: #blank].	^self class toolListIcon</body><body package="Fonts UI Support">listText	self contents isEmpty ifTrue: [		^self tag asText].	^self tag asText allBold , ('[' , (NumberPrintPolicy print: self contents size using: '#,##0') string, ']') asText</body><body package="OpenType">platformID	^self class platformID</body><body package="Fonts UI Support">printAttribute: aSelector on: aWriteStream	aWriteStream		cr;		emphasis: nil;		nextPutAll: aSelector asString;		nextPutAll: ': ';		emphasis: #(#bold);		nextPutAll: (self perform: aSelector) printString</body><body package="OpenType">tag	"&lt;String&gt; (ULONG)	4 -byte identifier.	ULONG interpreted as ASCII characters"	^tag</body><body package="Fonts UI Support">treeChildren	^#()</body><body package="Fonts UI">view	^Tableview on: self</body></methods><methods><class-id>Graphics.Fonts.OpenType.Table</class-id> <category>initialize-release</category><body package="OpenType">initializeTag: tagString file: aOpenTypeFile contents: contentsByteArray	tag := tagString.	file := aOpenTypeFile.	contents := contentsByteArray</body></methods><methods><class-id>Graphics.Fonts.OpenType.Table</class-id> <category>printing</category><body package="OpenType">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'tag' value: self tag).	args add: (printer optional: 'contents' value: contents).	^printer printvalue: self arguments: args</body></methods><methods><class-id>Graphics.Fonts.OpenType.Table</class-id> <category>testing</category><body package="Fonts UI Support">hasTreeChildren	^false</body></methods><methods><class-id>Graphics.Fonts.OpenType.Table class</class-id> <category>instance creation</category><body package="OpenType">classFor: tagString	^self subclasses detect: [:cl | cl tag = tagString] ifNone: [self]</body><body package="OpenType">newFor: aOpenTypeFile from: aReadStream	| bytes tagString pos |	tagString := (aReadStream next: 4) asString.	bytes := UninterpretedBytes from: (aReadStream next: 12).	"UNUSED:	checkSum := bytes unsignedLongAt: 1 bigEndian: true."	pos := aReadStream position.	^[	aReadStream position: (bytes unsignedLongAt: 5 bigEndian: true).	(self classFor: tagString)		tag: tagString		file: aOpenTypeFile		contents: (aReadStream next: (bytes unsignedLongAt: 9 bigEndian: true))] ensure: [			aReadStream position: pos]</body><body package="OpenType">tag: tagString file: aOpenTypeFile contents: contentsByteArray	| inst |	inst := self new.	inst initializeTag: tagString file: aOpenTypeFile contents: contentsByteArray.	^inst</body></methods><methods><class-id>Graphics.Fonts.OpenType.Table class</class-id> <category>accessing</category><body package="Fonts UI Support">documentation	"&lt;String&gt;"	^'no documentation'</body><body package="Fonts UI Support">pageName	"&lt;String&gt;"	^self tag</body><body package="OpenType">platformID	"0  	Unicode	1 	Macintosh	2 	ISO [deprecated]	3 	Windows	4 	Custom"	^(#(#unix #mac #ignore #win32 #ignore) indexOf: OSHandle currentOS) - 1</body><body package="OpenType">tag	"&lt;ByteString4&gt;"	^self subclassResponsibility</body><body package="Fonts UI Support">title	"&lt;String&gt;"	^'unspecified table'</body><body package="Fonts UI Support">url	"&lt;String&gt;"	^'http://www.microsoft.com/typography/otspec/', self pageName, '.htm'</body></methods><methods><class-id>Graphics.Fonts.OpenType.Table class</class-id> <category>instance creation optional</category><body package="OpenType">tag: tagString	| inst |	inst := self new.	inst initializeTag: tagString file: nil contents: nil.	^inst</body></methods><methods><class-id>Graphics.Fonts.OpenType.Table class</class-id> <category>actions</category><body package="Fonts UI Support">browse	ExternalWebBrowser open: self url</body></methods><methods><class-id>Graphics.Fonts.OpenType.Gasp class</class-id> <category>accessing</category><body package="Fonts UI Support">documentation	^'This table contains information which describes the preferred rasterization techniques for the typeface when it is rendered on grayscale-capable devices. This table also has some use for monochrome devices, which may use the table to turn off hinting at very large or small sizes, to improve performance.At very small sizes, the best appearance on grayscale devices can usually be achieved by rendering the glyphs in grayscale without using hints. At intermediate sizes, hinting and monochrome rendering will usually produce the best appearance. At large sizes, the combination of hinting and grayscale rendering will typically produce the best appearance.If the ''gasp'' table is not present in a typeface, the rasterizer may apply default rules to decide how to render the glyphs on grayscale devices.'</body><body package="OpenType">tag	^'gasp'</body><body package="Fonts UI Support">title	^'Grid-fitting And Scan-conversion Procedure'</body></methods><methods><class-id>Graphics.Fonts.CFF.Mapping class</class-id> <category>accessing</category><body package="CompactFontFormat">sidFrom: aByteStream	"&lt;Number&gt;	0 – 64999	2-byte string identifier"	^(UninterpretedBytes from: (aByteStream next: 2)) unsignedShortAt: 1 bigEndian: true</body></methods><methods><class-id>Graphics.Fonts.CFF.EncodingSupplement</class-id> <category>accessing</category><body package="CompactFontFormat">glyphsAtCode	"&lt;Dictionary&gt;"	^glyphsAtCode ifNil: [Dictionary new beImmutable]</body></methods><methods><class-id>Graphics.Fonts.CFF.EncodingSupplement</class-id> <category>printing</category><body package="CompactFontFormat">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer dictionary: 'glyphsAtCode' value: self glyphsAtCode).	^printer printvalue: self arguments: args</body></methods><methods><class-id>Graphics.Fonts.CFF.EncodingSupplement</class-id> <category>initialize-release</category><body package="CompactFontFormat">initializeGlyphsAtCode: glyphsAtCodeDictionary	(glyphsAtCodeDictionary notNil and: [	glyphsAtCodeDictionary notEmpty]) ifTrue: [			glyphsAtCode := (OrderedDictionary withAll: glyphsAtCodeDictionary) beImmutable].	self beImmutable</body></methods><methods><class-id>Graphics.Fonts.CFF.EncodingSupplement</class-id> <category>marshaling</category><body package="Fonts Development">passInstVars	"for OpenTalk StSt"	^#(#value)</body></methods><methods><class-id>Graphics.Fonts.CFF.EncodingSupplement class</class-id> <category>instance creation</category><body package="CompactFontFormat">fromBytes: aByteStream	| dict |	dict := OrderedDictionary new.	aByteStream next timesRepeat: [		dict at: aByteStream next put: (self sidFrom: aByteStream)].	^self glyphsAtCode: dict</body><body package="CompactFontFormat">glyphsAtCode: glyphsAtCodeDictionary	| inst |	inst := self new.	inst initializeGlyphsAtCode: glyphsAtCodeDictionary.	^inst</body></methods><methods><class-id>Graphics.Fonts.CFF.EncodingSupplement class</class-id> <category>test instances</category><body package="Fonts test resources">example	^EncodingSupplement glyphsAtCode: (OrderedDictionary		with: 1 -&gt; #symbol		with: #key -&gt; 'string')</body></methods><methods><class-id>Graphics.Fonts.CFF.Charset</class-id> <category>accessing</category><body package="CompactFontFormat">sids	"&lt;Array of: SID&gt;"	^self subclassResponsibility</body></methods><methods><class-id>Graphics.Fonts.CFF.Charset0</class-id> <category>accessing</category><body package="CompactFontFormat">glyphs	"&lt;Array&gt;	Glyph name array"	^glyphs ifNil: [#()]</body><body package="CompactFontFormat">sids	^#(0), self glyphs</body></methods><methods><class-id>Graphics.Fonts.CFF.Charset0</class-id> <category>printing</category><body package="CompactFontFormat">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer array: 'glyphs' value: self glyphs).	^printer printvalue: self arguments: args</body></methods><methods><class-id>Graphics.Fonts.CFF.Charset0</class-id> <category>initialize-release</category><body package="CompactFontFormat">initializeGlyphs: glyphsArray	(glyphsArray notNil and: [	glyphsArray notEmpty]) ifTrue: [			glyphs := (Array withAll: glyphsArray) beImmutable].	self beImmutable</body></methods><methods><class-id>Graphics.Fonts.CFF.Charset0 class</class-id> <category>instance creation</category><body package="CompactFontFormat">glyphs: glyphsArray	| inst |	inst := self new.	inst initializeGlyphs: glyphsArray.	^inst</body><body package="CompactFontFormat">numberOfGlyphs: numberOfGlyphs fromBytes: aByteStream	| glyphs |	glyphs := OrderedCollection new: numberOfGlyphs - 1.	numberOfGlyphs - 1 timesRepeat: [glyphs add: (self sidFrom: aByteStream)].	^self glyphs: glyphs</body></methods><methods><class-id>Graphics.Fonts.CFF.Charset0 class</class-id> <category>test instances</category><body package="Fonts test resources">example	^Charset0 glyphs: #(1 #a $x 'name')</body></methods><methods><class-id>Graphics.Fonts.Font</class-id> <category>actions</category><body package="Fonts Basics">doUseAlternativeFont	useAlternativeFont := true</body><body package="Fonts Basics">dontUseAlternativeFont	useAlternativeFont := false</body></methods><methods><class-id>Graphics.Fonts.Font</class-id> <category>testing</category><body package="Fonts Basics">canDisplayUnencodedGlyphs	^false</body><body package="Fonts Basics">isFixedPitch	^self subclassResponsibility</body><body package="Fonts Basics">isItalic	^self subclassResponsibility</body><body package="Fonts Basics">isScreenFontInstalled	[ComposedText withText: 'Example' style: self screenFont] on: NoMatchingFontError do: [:ex |		^false].	^true</body><body package="Fonts Basics">usingAlternativeFont	"&lt;Boolean&gt;"	^useAlternativeFont ifNil: [useAlternativeFont := false]</body></methods><methods><class-id>Graphics.Fonts.Font</class-id> <category>accessing</category><body package="Fonts Basics">characterAt: index	"&lt;Character&gt;"	index = Character illegalCode ifTrue: [		^Character illegalCode asCharacter].	self fontbody ifNil: [		^Character illegalCode asCharacter].	^self fontbody encoder decode: index</body><body package="Fonts Basics">characterCodeOf: aCharacter	"&lt;Integer [0..255]&gt;"	self fontbody ifNil: [		^Character illegalCode].	^self fontbody encoder encode: aCharacter</body><body package="Fonts Basics">characterGlyphs	"&lt;SequenceableCollection of: (Glyph | CharacterMetric)&gt;	all glyphs without .notdef"	^self subclassResponsibility</body><body package="Fonts for Windows">charset	"&lt;Integer&gt;	WindowsFonts.CharSet ansi value"	^0</body><body package="Fonts Basics">descriptionText	"&lt;Text&gt;	extended description of the font"	^self subclassResponsibility</body><body package="Fonts Basics">faceName	"&lt;String&gt;	the name of the font face, normally without suffixes like »-Bold«, »-Italic« etc.	Used in a windows LOGFONT"	^self subclassResponsibility</body><body package="Fonts Basics">familyName	"&lt;String&gt;	the font family"	^self subclassResponsibility</body><body package="Fonts UI Support">fileInfoText	"&lt;Text&gt;	info text about the file"	^self subclassResponsibility</body><body package="Fonts Basics">filename	"&lt;String&gt;	the file name of the Windows font file"	^self subclassResponsibility</body><body package="Fonts Basics">fontbody	"&lt;FontBody | nil&gt;"	^[FontBody named: self postScriptName] on: KeyNotFoundError do: [:ex | nil]</body><body package="Fonts Basics">glyphAtUnicode: aUnicodeInteger	"&lt;Glyph | nil&gt;"	^self subclassResponsibility</body><body package="Fonts Basics">glyphs	"&lt;Array of: Glyph&gt;	this is not quite clear yet..."	^self subclassResponsibility</body><body package="Fonts Basics">italicAngle	"&lt;Number&gt;"	^self subclassResponsibility</body><body package="Fonts UI Support">listIcon	^self class listIcon</body><body package="Fonts UI Support">listText	"&lt;Text&gt;	name for list or tree item"	^self subclassResponsibility</body><body package="Fonts for Windows">logfont: aSizeInteger	"&lt;LOGFONT pointer&gt;"	| lib logFont |	lib := OSSystemSupport concreteClass new.	logFont := lib LOGFONT gcMalloc.	logFont zeroFill.	logFont memberAt: #lfHeight put: aSizeInteger.	logFont memberAt: #lfCharSet put: self charset.	self isItalic ifTrue: [		logFont memberAt: #lfItalic put: 16rFF].	logFont memberAt: #lfWeight put: self weight.	lib putUnicode: (self faceName first: 31) into: logFont at: #lfFaceName.	^logFont</body><body package="Fonts Basics">pdfFlags	"&lt;Integer&gt;"	"The value of the Flags entry in a font descriptor shall be an unsigned 32-bit integer containing flags specifying various characteristics of the font. Bit positions within the flag word are numbered from 1 (low-order) to 32 (high-order). The table shows the meanings of the flags; all undefined flag bits are reserved and shall be set to 0 by conforming writers.Bit 		Name			Meaning1		FixedPitch 		All glyphs have the same width (as opposed to proportional or variable-pitch fonts, which have different widths).2		Serif 			Glyphs have serifs, which are short strokes drawn at an angle on the top and bottom of glyph stems. 						(Sans serif fonts do not have serifs.)3		Symbolic 		Font contains glyphs outside the Adobe standard Latin character set. 						This flag and the Nonsymbolic flag shall not both be set or both be clear.4		Script 			Glyphs resemble cursive handwriting.6		Nonsymbolic 	Font uses the Adobe standard Latin character set or a subset of it.7		Italic 			Glyphs have dominant vertical strokes that are slanted.17 		AllCap 			Font contains no lowercase letters; typically used for display purposes, such as for titles or headlines.18		SmallCap 		Font contains both uppercase and lowercase letters. 						The uppercase letters are similar to those in the regular version of the same typeface family. 						The glyphs for the lowercase letters have the same shapes as the corresponding uppercase letters, 						but they are sized and their proportions adjusted so that they have the same size and stroke weight 						as lowercase glyphs in the same typeface family.19		ForceBold 		See description after Note 1 in this sub-clause."	| flags |	flags := 0.	self isFixedPitch ifTrue: [		flags := flags bitOr: 1].	true "non-symbolic" ifTrue: [		flags := flags bitOr: 2r0100000].	self isItalic ifTrue: [		flags := flags bitOr: 2r01000000].	^flags</body><body package="Fonts Basics">postScriptName	"&lt;String&gt;	the name as used by PostScript and PDF"	^self subclassResponsibility</body><body package="Fonts Basics">printFontDescription	"&lt;FontDescription&gt;"	^printFontDescription ifNil: [		printFontDescription := (PostScriptPrinter default defaultFontPolicy availableFonts detect: [:fontDescription |			fontDescription name = self postScriptName]) copy]</body><body package="Fonts Basics">screenFamilyName	"&lt;String&gt;	the font family for the screen FontDescription"	self usingAlternativeFont ifTrue: [		^'arial'].	^self familyName</body><body package="Fonts Basics">screenFont	"&lt;VariableSizeTextAttributes&gt;"	^VariableSizeTextAttributes defaultFontQuery: self screenFontDescription</body><body package="Fonts Basics">screenFontDescription	| fd |	fd := FontDescription new.	fd family: self screenFamilyName.	fd setWidth: self setWidth.	fd boldness: self weight / 1000.0.	fd italic: self isItalic.	fd fixedWidth: self isFixedPitch.	^fd</body><body package="Fonts Basics">setWidth	"&lt;Number [0..1]&gt;	The relative width of the characters in the font.	0.5 is normal, smaller is condensed, larger is wider"	^self subclassResponsibility</body><body package="Fonts UI Support">treeChildren	^self subclassResponsibility</body><body package="Fonts UI Support">treeGroups	"&lt;SequenceableCollection of: TableGroup&gt;	sections of content of the file for the tree view"	^self subclassResponsibility</body><body package="Fonts Basics">weight	"&lt;Integer&gt;	WORD: The weight of the font in the range 0 through 1000. For example, 400 is roman and 700 is bold. If this value is zero, a default weight is used"	^self subclassResponsibility</body></methods><methods><class-id>Graphics.Fonts.Font</class-id> <category>initialize-release</category><body package="Fonts Basics">install	"install the font in the Smalltalk system and return it"	FontBody installFromFont: self.	^self</body></methods><methods><class-id>Graphics.Fonts.Font</class-id> <category>accessing metrics</category><body package="Fonts Basics">ascender	"&lt;Integer&gt;	For roman font programs: usually the y-value of the top of the lowercase d"	^self subclassResponsibility</body><body package="Fonts Basics">ascenderInTextSpace	"&lt;Number&gt;	For roman font programs: usually the y-value of the top of the lowercase d"	^self ascender / self unitsPerEm</body><body package="Fonts Basics">capHeight	"&lt;Integer&gt;	(Optional.) Usually the y-value of the top of the capital H. If this font program contains no capital H, this keyword might be missing or number might be 0."	^self subclassResponsibility</body><body package="Fonts Basics">capHeightInTextSpace	"&lt;Number&gt;	(Optional.) Usually the y-value of the top of the capital H. If this font program contains no capital H, this keyword might be missing or number might be 0."	^self capHeight / self unitsPerEm</body><body package="Fonts Basics">descender	"&lt;Integer&gt;	For roman font programs: typically the y-value of the bottom of the lowercase p.	Usually a negative number"	^self subclassResponsibility</body><body package="Fonts Basics">descenderInTextSpace	"&lt;Number&gt;	For roman font programs: typically the y-value of the bottom of the lowercase p.	Usually a negative number"	^self descender / self unitsPerEm</body><body package="Fonts Basics">fontBBox	"&lt;Rectangle&gt;	in the native glyph space (see unitsPerEm)"	^self subclassResponsibility</body><body package="Fonts Basics">fontBBoxInStandardGlyphSpace	"&lt;Rectangle&gt;	normalized for Em = 1000"	| box |	box := self fontBBox.	^(self inStandardGlyphSpace: box origin) corner: (self inStandardGlyphSpace: box corner)</body><body package="Fonts Basics">fontBBoxInTextSpace	"&lt;Rectangle&gt;"	| bbox unitsPerEm |	bbox := self fontBBox.	unitsPerEm := self unitsPerEm.	^bbox origin / unitsPerEm corner: bbox corner / unitsPerEm</body><body package="Fonts Basics">headroom	"&lt;Number&gt;	the distance between ascend to upper bound of the fontBBox"	^self fontBBox corner y - self ascender</body><body package="Fonts Basics">headroomInTextSpace	"&lt;Number&gt;	the distance between ascend to upper bound of the fontBBox"	^self fontBBoxInTextSpace corner y - self ascenderInTextSpace</body><body package="Fonts Basics">inStandardGlyphSpace: aNumber	"&lt;Integer&gt;	Integer scaled to a standard 1000 x 1000 glyph box"	^(aNumber * 1000 / self unitsPerEm) rounded</body><body package="Fonts Basics">leftSideBearingInTextSpaceOfUnicode: unicode	"&lt;Number&gt;"	^(self leftSideBearingOfUnicode: unicode) / self unitsPerEm</body><body package="Fonts Basics">leftSideBearingOfUnicode: unicode	"&lt;Number&gt; in font coordinates"	^self subclassResponsibility</body><body package="Fonts Basics">stemV	"&lt;Integer&gt;"	^self subclassResponsibility</body><body package="Fonts Basics">stringWidthOf: aString at: fontSize	"&lt;Number&gt;"	^self subclassResponsibility</body><body package="Fonts Basics">tabularStringWidthOf: aString at: fontSize	"&lt;Number&gt;	using tabular glyphs of the characters in aString"	^self stringWidthOf: aString at: fontSize</body><body package="Fonts Basics">underlinePosition	"&lt;Integer&gt;"	^self subclassResponsibility</body><body package="Fonts Basics">underlinePositionInTextSpace	"&lt;Number&gt;"	^self underlinePosition / self unitsPerEm</body><body package="Fonts Basics">underlineThickness	"&lt;Integer&gt;"	^self subclassResponsibility</body><body package="Fonts Basics">underlineThicknessInTextSpace	"&lt;Number&gt;"	^self underlineThickness / self unitsPerEm</body><body package="Fonts Basics">unitsPerEm	"&lt;Integer&gt;	The box width and height in which a glyph is described using integer values.	Usually 1000 =&gt; 1000 x 1000 box"	^1000</body><body package="Fonts Basics">xHeight	"&lt;Integer&gt;"	^self subclassResponsibility</body><body package="Fonts Basics">xHeightInTextSpace	"&lt;Number&gt;"	^self xHeight / self unitsPerEm</body></methods><methods><class-id>Graphics.Fonts.Font class</class-id> <category>accessing</category><body package="Fonts Basics">definedFontKeys	"&lt;SequenceableCollection of: Symbol&gt;	the keys of the defined fonts in this class.	The returned values can be used as argument in #setFont:size: of the PDF.Renderer"	"Fonts.OpenType.Font definedFontKeys"	"CustomFont definedFontKeys"	"StandardFont definedFontKeys"	^((Pragma allNamed: #font: in: self class) collect: [:pragma | pragma arguments first]) sorted</body><body package="Fonts Basics">fontAt: aSymbolOrFilenameString	"&lt;Font&gt;	the loaded instance registered at aSymbolOrFilenameString.	An error is raised when the font was not found"	^self loadedFonts at: aSymbolOrFilenameString ifAbsent: [		FontNotFound raiseSignal: aSymbolOrFilenameString , ' was not found']</body><body package="Fonts Basics">fontAt: aSymbolOrFilenameString ifAbsent: aBlock	"&lt;Font | nil&gt;	the loaded instance registered at aSymbol"	^self loadedFonts at: aSymbolOrFilenameString ifAbsent: aBlock</body><body package="Fonts Basics">fontAt: aSymbolOrFilenameString ifAbsentPut: aBlock	^self loadedFonts at: aSymbolOrFilenameString ifAbsentPut: aBlock</body><body package="Fonts Basics">fontAt: aSymbolOrFilenameString put: aFont	^self loadedFonts at: aSymbolOrFilenameString put: aFont</body><body package="Fonts UI Support">listIcon	^FontListIcons visualFor: #font</body><body package="Fonts Basics">loadedFonts	"&lt;Dictionary key: (Symbol | String) value: Font&gt;	the registry of loaded fonts.	The key is either a Symbol or a filename (for an OpenType font) when loaded from the application"	"Font loadedFonts"	"Font reloadFonts"	^LoadedFonts ifNil: [		| dict total model done |		dict := Dictionary new.		total := 0.		Font withAllSubclasses do: [:class |			(Pragma allNamed: #font: in: class class) do: [:pragma |				total := total + 1.				dict at: pragma arguments first ifAbsentPut: [class perform: pragma selector]]].		model := 0.0 asValue.		self triggerEvent: #installing:model: with: total with: model.		total := total asFloat.		done := 0.0.		dict do: [:font |			font install.			done := done + 1.0.			model value: done / total].		self triggerEvent: #fontsInstalled.		LoadedFonts := dict]</body><body package="Fonts UI Support">menuIndex	"&lt;Integer&gt;	the index in a menu"	^self subclassResponsibility</body><body package="Fonts UI Support">menuLabel	"&lt;String&gt;"	^self subclassResponsibility</body><body package="Fonts Development">toolListIcon	^self listIcon</body></methods><methods><class-id>Graphics.Fonts.Font class</class-id> <category>actions</category><body package="Fonts Basics">reloadFonts	"self reloadFonts"	self resetLoadedFonts.	self loadedFonts</body><body package="Fonts UI">reloadFontsWithFeedback	"self reloadFontsWithFeedback"	| view |	self when: #installing:model: do: [:total :model |		view := ProgressWidgetView progressOpenOn: model label: ('Installing ', total printString, ' fonts') asText allBold].	self when: #fontsInstalled do: [		view closeAndUnschedule].	self reloadFonts.	self removeActionsForEvent: #installing:model:.	self removeActionsForEvent: #fontsInstalled</body><body package="Fonts Basics">resetLoadedFonts	"self resetLoadedFonts"	LoadedFonts := nil</body></methods><methods><class-id>Graphics.Fonts.Font class</class-id> <category>accessing encoders</category><body package="Fonts Basics">d2LatinCharacterSetAndEncodings	"&lt;Dictionary key: String value: (Array of: characterCode stdInteger macInteger winInteger pdfInteger)&gt;PDF 32000_2008.pdf pp. 653.D.2, 'Latin Character Set and Encodings', describes the entire character set for the Adobe standard Latin-text fonts.This character set shall be supported by the Times, Helvetica, and Courier font families, which are among the standard 14 predefined fonts.For each named character, an octal character code is defined for four different encodings:		StandardEncoding, MacRomanEncoding, WinAnsiEncoding, and PDFDocEncoding.Unencoded characters are indicated by a dash (—)."	"the first element is the character code in Smallatlk"	| dict |	dict := IdentityDictionary new.	dict    "Name 					Std 	Mac 	Win 	PDF 	#asCharacter"		at: 'A'				put: #(	8r101 	8r101 	8r101 	8r101 	8r101);		at: 'AE'				put: #(	8r341 	8r256 	8r306 	8r306 	8r306);		at: 'Aacute'			put: #(	nil		8r347 	8r301 	8r301 	8r301);		at: 'Acircumflex'		put: #(	nil		8r345 	8r302 	8r302 	8r302);		at: 'Adieresis'		put: #(	nil		8r200 	8r304 	8r304 	8r304);		at: 'Agrave'			put: #(	nil		8r313 	8r300 	8r300 	8r300);		at: 'Aring'			put: #(	nil		8r201 	8r305 	8r305 	8r305);		at: 'Atilde'			put: #(	nil		8r314 	8r303 	8r303 	8r303);		at: 'B'				put: #(	8r102 	8r102 	8r102 	8r102 	8r102);		at: 'C'				put: #(	8r103 	8r103 	8r103 	8r103 	8r103);		at: 'Ccedilla'			put: #(	nil		8r202 	8r307 	8r307 	8r307);		at: 'D'				put: #(	8r104 	8r104 	8r104 	8r104 	8r104);		at: 'E'				put: #(	8r105 	8r105 	8r105 	8r105 	8r105);		at: 'Eacute'			put: #(	nil		8r203 	8r311 	8r311 	8r311);		at: 'Ecircumflex'		put: #(	nil		8r346 	8r312 	8r312 	8r312);		at: 'Edieresis'		put: #(	nil		8r350 	8r313 	8r313 	8r313);		at: 'Egrave'			put: #(	nil		8r351 	8r310 	8r310 	8r310);		at: 'Eth'				put: #(	nil		nil		8r320 	8r320 	8r320);		at: 'Euro'			put: #(	nil		nil		8r200 	8r240 	16r20AC);		at: 'F'				put: #(	8r106 	8r106 	8r106 	8r106 	8r106);		at: 'G'				put: #(	8r107 	8r107 	8r107 	8r107 	8r107);		at: 'H'				put: #(	8r110 	8r110 	8r110 	8r110 	8r110);		at: 'I'				put: #(	8r111 	8r111 	8r111 	8r111 	8r111);		at: 'Iacute'			put: #(	nil		8r352 	8r315 	8r315 	8r315);		at: 'Icircumflex'		put: #(	nil		8r353 	8r316 	8r316 	8r316);		at: 'Idieresis'			put: #(	nil		8r354 	8r317 	8r317 	8r317);		at: 'Igrave'			put: #(	nil		8r355 	8r314 	8r314 	8r314);		at: 'J'				put: #(	8r112 	8r112 	8r112 	8r112 	8r112);		at: 'K'				put: #(	8r113 	8r113 	8r113 	8r113 	8r113);		at: 'L'				put: #(	8r114 	8r114 	8r114 	8r114 	8r114);		at: 'Lslash'			put: #(	8r350	nil		nil		8r225	16r141);		at: 'M'				put: #(	8r115 	8r115 	8r115 	8r115 	8r115);		at: 'N'				put: #(	8r116 	8r116 	8r116 	8r116 	8r116);		at: 'Ntilde'			put: #(	nil		8r204 	8r321 	8r321 	8r321);		at: 'O'				put: #(	8r117 	8r117 	8r117 	8r117 	8r117);		at: 'OE'				put: #(	8r352 	8r316 	8r214 	8r226	16r152);		at: 'Oacute'			put: #(	nil		8r356 	8r323 	8r323 	8r323);		at: 'Ocircumflex'		put: #(	nil		8r357 	8r324 	8r324 	8r324);		at: 'Odieresis'		put: #(	nil		8r205 	8r326 	8r326 	8r326);		at: 'Ograve'			put: #(	nil		8r361 	8r322 	8r322 	8r322);		at: 'Oslash'			put: #(	8r351 	8r257 	8r330 	8r330 	8r330);		at: 'Otilde'			put: #(	nil		8r315 	8r325 	8r325 	8r325);		at: 'P'				put: #(	8r120 	8r120 	8r120 	8r120 	8r120);		at: 'Q'				put: #(	8r121 	8r121 	8r121 	8r121 	8r121);		at: 'R'				put: #(	8r122 	8r122 	8r122 	8r122 	8r122);		at: 'S'				put: #(	8r123 	8r123 	8r123 	8r123 	8r123);		at: 'Scaron'			put: #(	nil		nil	 	8r212 	8r227 	16r160);		at: 'T'				put: #(	8r124 	8r124 	8r124 	8r124 	8r124);		at: 'Thorn'			put: #(	nil		nil	 	8r336 	8r336 	8r336);		at: 'U'				put: #(	8r125 	8r125 	8r125 	8r125 	8r125);		at: 'Uacute'			put: #(	nil		8r362 	8r332 	8r332 	8r332);		at: 'Ucircumflex'		put: #(	nil		8r363 	8r333 	8r333 	8r333);		at: 'Udieresis'		put: #(	nil		8r206 	8r334 	8r334 	8r334);		at: 'Ugrave'			put: #(	nil		8r364 	8r331 	8r331 	8r331);		at: 'V'				put: #(	8r126 	8r126 	8r126 	8r126 	8r126);		at: 'W'				put: #(	8r127 	8r127 	8r127 	8r127 	8r127);		at: 'X'				put: #(	8r130 	8r130 	8r130 	8r130 	8r130);		at: 'Y'				put: #(	8r131 	8r131 	8r131 	8r131 	8r131);		at: 'Yacute'			put: #(	nil		nil	 	8r335 	8r335 	8r335);		at: 'Ydieresis'		put: #(	nil		8r331 	8r237 	8r230 	16r178);		at: 'Z'				put: #(	8r132 	8r132 	8r132 	8r132 	8r132);		at: 'Zcaron'			put: #(	nil		nil	 	8r216 	8r231 	16r17D);		at: 'a'				put: #(	8r141 	8r141 	8r141 	8r141 	8r141);		at: 'aacute'			put: #(	nil		8r207 	8r341 	8r341 	8r341);		at: 'acircumflex'		put: #(	nil		8r211 	8r342 	8r342 	8r342);		at: 'acute'			put: #(	8r302	8r253 	8r264 	8r264 	8r264);		at: 'adieresis'		put: #(	nil		8r212 	8r344 	8r344 	8r344);		at: 'ae'				put: #(	8r361 	8r276 	8r346 	8r346 	8r346);		at: 'agrave'			put: #(	nil		8r210 	8r340 	8r340 	8r340);		at: 'ampersand'		put: #(	8r046 	8r046 	8r046 	8r046 	8r046);		at: 'aring'			put: #(	nil		8r214 	8r345 	8r345 	8r345);		at: 'asciicircum'		put: #(	8r136 	8r136 	8r136 	8r136 	8r136);		at: 'asciitilde'		put: #(	8r176 	8r176 	8r176 	8r176 	8r176);		at: 'asterisk'			put: #(	8r052 	8r052 	8r052 	8r052 	8r052);		at: 'at'				put: #(	8r100 	8r100 	8r100 	8r100 	8r100);		at: 'atilde'			put: #(	nil		8r213 	8r343 	8r343 	8r343);		at: 'b'				put: #(	8r142 	8r142 	8r142 	8r142 	8r142);		at: 'backslash'		put: #(	8r134 	8r134 	8r134 	8r134 	8r134);		at: 'bar'				put: #(	8r174 	8r174 	8r174 	8r174 	8r174);		at: 'braceleft'		put: #(	8r173 	8r173 	8r173 	8r173 	8r173);		at: 'braceright'		put: #(	8r175 	8r175 	8r175 	8r175 	8r175);		at: 'bracketleft'		put: #(	8r133 	8r133 	8r133 	8r133 	8r133);		at: 'bracketright'		put: #(	8r135 	8r135 	8r135 	8r135 	8r135);		at: 'breve'			put: #(	8r306 	8r371 	nil 	 	8r030 	16r2D8);		at: 'brokenbar'		put: #(	nil 	 	nil 	 	8r246 	8r246 	8r246);		at: 'bullet'			put: #(	8r267 	8r245 	8r225 	8r200 	16r2022);		at: 'c'				put: #(	8r143 	8r143 	8r143 	8r143 	8r143);		at: 'caron'			put: #(	8r317 	8r377 	nil 	 	8r031 	16r2C7);		at: 'ccedilla'			put: #(	nil		8r215 	8r347 	8r347 	8r347);		at: 'cedilla'			put: #(	8r313 	8r374 	8r270 	8r270 	8r270);		at: 'cent'			put: #(	8r242 	8r242 	8r242 	8r242 	8r242);		at: 'circumflex'		put: #(	8r303 	8r366 	8r210 	8r032 	16r2C6);		at: 'colon'			put: #(	8r072 	8r072 	8r072 	8r072 	8r072);		at: 'comma'			put: #(	8r054 	8r054 	8r054 	8r054 	8r054);		at: 'copyright'		put: #(	nil		8r251 	8r251 	8r251 	8r251);		at: 'currency'		put: #(	8r250 	8r333 	8r244 	8r244 	8r244);		at: 'd'				put: #(	8r144 	8r144 	8r144 	8r144 	8r144);		at: 'dagger'			put: #(	8r262 	8r240 	8r206 	8r201 	16r2020);		at: 'daggerdbl'		put: #(	8r263 	8r340 	8r207 	8r202	16r2021);		at: 'degree'			put: #(	nil		8r241 	8r260 	8r260 	8r260);		at: 'dieresis'			put: #(	8r310 	8r254 	8r250 	8r250 	8r250);		at: 'divide'			put: #(	nil		8r326 	8r367 	8r367 	8r367);		at: 'dollar'			put: #(	8r044 	8r044 	8r044 	8r044 	8r044);		at: 'dotaccent'		put: #(	8r307 	8r372 	nil 	 	8r033 	16r2D9);		at: 'dotlessi'			put: #(	8r365 	8r365 	nil 	 	8r232 	16r131);		at: 'e'				put: #(	8r145 	8r145 	8r145 	8r145 	8r145);		at: 'eacute'			put: #(	nil		8r216 	8r351 	8r351 	8r351);		at: 'ecircumflex'		put: #(	nil		8r220 	8r352 	8r352 	8r352);		at: 'edieresis'		put: #(	nil		8r221 	8r353 	8r353 	8r353);		at: 'egrave'			put: #(	nil		8r217 	8r350 	8r350 	8r350);		at: 'eight'			put: #(	8r070 	8r070 	8r070 	8r070 	8r070);		at: 'ellipsis'			put: #(	8r274 	8r311 	8r205 	8r203 	16r2026);		at: 'emdash'			put: #(	8r320 	8r321 	8r227 	8r204 	16r2014);		at: 'endash'			put: #(	8r261 	8r320 	8r226 	8r205 	16r2013);		at: 'equal'			put: #(	8r075 	8r075 	8r075 	8r075 	8r075);		at: 'eth'				put: #(	nil		nil 	 	8r360 	8r360 	8r360);		at: 'exclam'			put: #(	8r041 	8r041 	8r041 	8r041 	8r041);		at: 'exclamdown'		put: #(	8r241 	8r301 	8r241 	8r241 	8r241);		at: 'f'				put: #(	8r146 	8r146 	8r146 	8r146 	8r146);		at: 'fi'				put: #(	8r256 	8r336 	nil 	 	8r223 	16rFB01);		at: 'five'				put: #(	8r065 	8r065 	8r065 	8r065 	8r065);		at: 'fl'				put: #(	8r257 	8r337 	nil 	 	8r224 	16rFB02);		at: 'florin'			put: #(	8r246 	8r304 	8r203 	8r206 	16r192);		at: 'four'				put: #(	8r064 	8r064 	8r064 	8r064 	8r064);		at: 'fraction'			put: #(	8r244 	8r332 	nil 	 	8r207 	16r2215);		at: 'g'				put: #(	8r147 	8r147 	8r147 	8r147 	8r147);		at: 'germandbls'		put: #(	8r373 	8r247 	8r337 	8r337 	8r337);		at: 'grave'			put: #(	8r301 	8r140 	8r140 	8r140 	8r140);		at: 'greater'			put: #(	8r076 	8r076 	8r076 	8r076 	8r076);		at: 'guillemotleft'		put: #(	8r253 	8r307 	8r253 	8r253 	8r253);		at: 'guillemotright'	put: #(	8r273 	8r310 	8r273 	8r273 	8r273);		at: 'guilsinglleft'		put: #(	8r254 	8r334 	8r213 	8r210 	16r2039);		at: 'guilsinglright'		put: #(	8r255 	8r335 	8r233 	8r211 	16r203A);		at: 'h'				put: #(	8r150 	8r150 	8r150 	8r150 	8r150);		at: 'hungarumlaut'	put: #(	8r315 	8r375 	nil 	 	8r034 	16r2DD);		at: 'hyphen'			put: #(	8r055 	8r055 	8r055 	8r055 	8r055);		at: 'i'				put: #(	8r151 	8r151 	8r151 	8r151 	8r151);		at: 'iacute'			put: #(	nil		8r222 	8r355 	8r355 	8r355);		at: 'icircumflex'		put: #(	nil		8r224 	8r356 	8r356 	8r356);		at: 'idieresis'			put: #(	nil		8r225 	8r357 	8r357 	8r357);		at: 'igrave'			put: #(	nil		8r223 	8r354 	8r354 	8r354);		at: 'j'				put: #(	8r152 	8r152 	8r152 	8r152 	8r152);		at: 'k'				put: #(	8r153 	8r153 	8r153 	8r153 	8r153);		at: 'l'				put: #(	8r154 	8r154 	8r154 	8r154 	8r154);		at: 'less'				put: #(	8r074 	8r074 	8r074 	8r074 	8r074);		at: 'logicalnot'		put: #(	nil		8r302 	8r254 	8r254 	8r254);		at: 'lslash'			put: #(	8r370	nil		nil		8r233	16r142);		at: 'm'				put: #(	8r155 	8r155 	8r155 	8r155 	8r155);		at: 'macron'			put: #(	8r305	8r370 	8r257 	8r257 	8r257);		at: 'minus'			put: #(	nil 		nil		nil		8r212	16r2212);		at: 'mu'				put: #(	nil		8r265 	8r265 	8r265 	8r265);		at: 'multiply'			put: #(	nil		nil 	 	8r327 	8r327 	8r327);		at: 'n'				put: #(	8r156 	8r156 	8r156 	8r156 	8r156);		at: 'nine'				put: #(	8r071 	8r071 	8r071 	8r071 	8r071);		at: 'ntilde'			put: #(	nil		8r226 	8r361 	8r361 	8r361);		at: 'numbersign'		put: #(	8r043 	8r043 	8r043 	8r043 	8r043);		at: 'o'				put: #(	8r157 	8r157 	8r157 	8r157 	8r157);		at: 'oacute'			put: #(	nil		8r227 	8r363 	8r363 	8r363);		at: 'ocircumflex'		put: #(	nil		8r231 	8r364 	8r364 	8r364);		at: 'odieresis'		put: #(	nil		8r232 	8r366 	8r366 	8r366);		at: 'oe'				put: #(	8r372 	8r317 	8r234 	8r234 	16r153);		at: 'ogonek'			put: #(	8r316 	8r376 	nil 	 	8r035 	16r2DB);		at: 'ograve'			put: #(	nil		8r230 	8r362 	8r362 	8r362);		at: 'one'				put: #(	8r061 	8r061 	8r061 	8r061 	8r061);		at: 'onehalf'			put: #(	nil		nil 	 	8r275 	8r275 	8r275);		at: 'onequarter'		put: #(	nil		nil 	 	8r274 	8r274 	8r274);		at: 'onesuperior'		put: #(	nil		nil 	 	8r271 	8r271 	8r271);		at: 'ordfeminine'		put: #(	8r343 	8r273 	8r252 	8r252 	8r252);		at: 'ordmasculine'	put: #(	8r353 	8r274 	8r272 	8r272 	8r272);		at: 'oslash'			put: #(	8r371 	8r277 	8r370 	8r370 	8r370);		at: 'otilde'			put: #(	nil		8r233 	8r365 	8r365 	8r365);		at: 'p'				put: #(	8r160 	8r160 	8r160 	8r160 	8r160);		at: 'paragraph'		put: #(	8r266 	8r246 	8r266 	8r266 	8r266);		at: 'parenleft'		put: #(	8r050 	8r050 	8r050 	8r050 	8r050);		at: 'parenright'		put: #(	8r051 	8r051 	8r051 	8r051 	8r051);		at: 'percent'			put: #(	8r045 	8r045 	8r045 	8r045 	8r045);		at: 'period'			put: #(	8r056 	8r056 	8r056 	8r056 	8r056);		at: 'periodcentered'	put: #(	8r264 	8r341 	8r267 	8r267 	8r267);		at: 'perthousand'		put: #(	8r275 	8r344 	8r211 	8r213 	16r2030);		at: 'plus'				put: #(	8r053 	8r053 	8r053 	8r053 	8r053);		at: 'plusminus'		put: #(	nil 	 	8r261 	8r261 	8r261 	8r261);		at: 'q'				put: #(	8r161 	8r161 	8r161 	8r161 	8r161);		at: 'question'		put: #(	8r077 	8r077 	8r077 	8r077 	8r077);		at: 'questiondown'	put: #(	8r277 	8r300 	8r277 	8r277 	8r277);		at: 'quotedbl'		put: #(	8r042 	8r042 	8r042 	8r042 	8r042);		at: 'quotedblbase'	put: #(	8r271 	8r343 	8r204 	8r214 	16r201E);		at: 'quotedblleft'		put: #(	8r252 	8r322 	8r223 	8r215 	16r201C);		at: 'quotedblright'	put: #(	8r272 	8r323 	8r224 	8r216 	16r201D);		at: 'quoteleft'		put: #(	8r140 	8r324 	8r221 	8r217 	16r2018);		at: 'quoteright'		put: #(	8r047 	8r325 	8r222 	8r220 	16r2019);		at: 'quotesinglbase'	put: #(	8r270 	8r342 	8r202 	8r221 	16r201A);		at: 'quotesingle'		put: #(	8r251 	8r047 	8r047 	8r047 	8r047);		at: 'r'				put: #(	8r162 	8r162 	8r162 	8r162 	8r162);		at: 'registered'		put: #(	nil 	 	8r250 	8r256 	8r256 	8r256);		at: 'ring'				put: #(	8r312 	8r373 	nil 	 	8r036 	16r2DA);		at: 's'				put: #(	8r163 	8r163 	8r163 	8r163 	8r163);		at: 'scaron'			put: #(	nil		nil 	 	8r232 	8r235 	16r161);		at: 'section'			put: #(	8r247 	8r244 	8r247 	8r247 	8r247);		at: 'semicolon'		put: #(	8r073 	8r073 	8r073 	8r073 	8r073);		at: 'seven'			put: #(	8r067 	8r067 	8r067 	8r067 	8r067);		at: 'six'				put: #(	8r066 	8r066 	8r066 	8r066 	8r066);		at: 'slash'			put: #(	8r057 	8r057 	8r057 	8r057 	8r057);		at: 'space'			put: #(	8r040 	8r040 	8r040 	8r040 	8r040);		at: 'sterling'			put: #(	8r243 	8r243 	8r243 	8r243 	8r243);		at: 't'				put: #(	8r164 	8r164 	8r164 	8r164 	8r164);		at: 'thorn'			put: #(	nil		nil 	 	8r376 	8r376 	8r376);		at: 'three'			put: #(	8r063 	8r063 	8r063 	8r063 	8r063);		at: 'threequarters'	put: #(	nil		nil 	 	8r276 	8r276 	8r276);		at: 'threesuperior'	put: #(	nil		nil 	 	8r263 	8r263 	8r263);		at: 'tilde'				put: #(	8r304 	8r367 	8r230 	8r037 	16r2DC);		at: 'trademark'		put: #(	nil 	 	8r252 	8r231 	8r222 	16r2122);		at: 'two'				put: #(	8r062 	8r062 	8r062 	8r062 	8r062);		at: 'threesuperior'	put: #(	nil		nil 	 	8r262 	8r262 	8r262);		at: 'u'				put: #(	8r165 	8r165 	8r165 	8r165 	8r165);		at: 'uacute'			put: #(	nil		8r234 	8r372 	8r372 	8r372);		at: 'ucircumflex'		put: #(	nil		8r236 	8r373 	8r373 	8r373);		at: 'udieresis'		put: #(	nil		8r237 	8r374 	8r374 	8r374);		at: 'ugrave'			put: #(	nil		8r235 	8r371 	8r371 	8r371);		at: 'underscore'		put: #(	8r137 	8r137 	8r137 	8r137 	8r137);		at: 'v'				put: #(	8r166 	8r166 	8r166 	8r166 	8r166);		at: 'w'				put: #(	8r167 	8r167 	8r167 	8r167 	8r167);		at: 'x'				put: #(	8r170 	8r170 	8r170 	8r170 	8r170);		at: 'y'				put: #(	8r171 	8r171 	8r171 	8r171 	8r171);		at: 'yacute'			put: #(	nil		nil 	 	8r375 	8r375 	8r375);		at: 'ydieresis'		put: #(	nil		8r330 	8r377 	8r377 	8r377);		at: 'yen'				put: #(	8r245 	8r264 	8r245 	8r245 	8r245);		at: 'z'				put: #(	8r172 	8r172 	8r172 	8r172 	8r172);		at: 'zcaron'			put: #(	nil		nil 	 	8r236 	8r236 	16r17E);		at: 'zero'			put: #(	8r060 	8r060 	8r060 	8r060 	8r060);	"extra from the footnotes - the names are not official"		at: 'softhyphen'		put: #(	nil 	 	nil 	 	8r255 	nil 	 	8r255);		at: 'nonbreakspace'	put: #(	nil 	 	8r312 	8r240 	nil 	 	8r240);	"non printing ASCII characters"		at: 'tab'				put: #(	8r011 	8r011 	8r011 	8r011 	8r011);		at: 'line feed'			put: #(	8r012 	8r012 	8r012 	8r012 	8r012);		at: 'carriage return'	put: #(	8r015 	8r015 	8r015 	8r015 	8r015);		yourself.	^dict</body><body package="Fonts Basics">encoderNamed: nameSymbol at: column	| map encoder |	map := WordArray new: 256 withAll: Character illegalCode.	self d2LatinCharacterSetAndEncodings do: [:array |		| charsetCode character |		charsetCode := array at: column.		character := array at: 5.		charsetCode ifNotNil: [			(map at: charsetCode + 1) = Character illegalCode ifFalse: [				self error: 'double encoding, please check the table'].			map at: charsetCode + 1 put: character]].	encoder := ByteCharacterEncoder fromArray: map.	encoder name: nameSymbol.	^encoder</body><body package="Fonts Basics">macRomanEncoder	"&lt;ByteCharacterEncoder&gt;Mac OS standard encoding for Latin text in Western writing systems. Conforming readers shall have a predefined encoding named MacRomanEncoding that may be used with both Type 1 and TrueType fonts."	^MacRomanEncoder ifNil: [MacRomanEncoder := self encoderNamed: #MacRoman at: 2]</body><body package="Fonts Basics">pdfDocEncoder	"&lt;ByteCharacterEncoder&gt;Encoding for text strings in a PDF document outside the document’s content streams.This is one of two encodings (the other being Unicode) that may be used to represent text strings.PDF does not have a predefined encoding named PDFDocEncoding; it is not customary to use this encoding to show text from fonts."	^PDFDocEncoder ifNil: [PDFDocEncoder := self encoderNamed: #PDFDoc at: 4]</body><body package="Fonts Basics">standardEncoder	"&lt;ByteCharacterEncoder&gt;Adobe standard Latin-text encoding. This is the built-in encoding defined in Type 1 Latin-text font programs (but generally not in TrueType font programs). Conforming readers shall not have a predefined encoding named StandardEncoding. However, it is necessary to describe this encoding, since a font’s built-in encoding can be used as the base encoding from which differences may be specified in an encoding dictionary."	^StandardEncoder ifNil: [StandardEncoder := self encoderNamed: #Standard at: 1]</body><body package="Fonts Basics">winAnsiEncoder	"&lt;ByteCharacterEncoder&gt;Windows Code Page 1252, often called the “Windows ANSI” encoding.This is the standard Windows encoding for Latin text in Western writing systems.Conforming readers shall have a predefined encoding named WinAnsiEncoding that may be used with both Type 1 and TrueType fonts."	^WinAnsiEncoder ifNil: [WinAnsiEncoder := self encoderNamed: #WinAnsi at: 3]</body></methods><methods><class-id>Graphics.Fonts.Type1Font</class-id> <category>accessing</category><body package="Type1">characterCodeOf: aCharacter	^self encoder encode: aCharacter</body><body package="Type1">characterGlyphs	^self glyphs</body><body package="Type1">controlCharacterNames	^#(#NUL #SOH #STX #ETX #EOT #ENQ #ACK #BEL #BS #HT #LF #VT #FF #CR #SO #SI #DLE #DC1 #DC2 #DC3 #DC4 #NAK #SYN #ETB #CAN #EM #SUB #ESC #FS #GS #RS #US)</body><body package="Type1">descriptionText	^self metrics descriptionText</body><body package="Type1">encoder	^self class winAnsiEncoder</body><body package="Type1">encodingStringForSymbols: symbols	"&lt;String&gt;"	| wst charsOnLine |	wst := WriteStream on: (String new: 1000).	charsOnLine := 0.	symbols do: [:charName |		charsOnLine + charName size + 1 &gt; 60 ifTrue: [			wst cr.			charsOnLine := 0].		wst nextPut: $/.		wst nextPutAll: charName asString.		charsOnLine := charsOnLine + charName size + 1].	wst cr.	^wst contents</body><body package="Type1">file	^self</body><body package="Fonts UI Support">fileInfoText	| wst |	wst := TextStream on: ByteString new.	wst		emphasis: nil;		nextPutAll: 'PostScript name: ';		emphasis: #(#bold);		nextPutAll: self postScriptName;		cr;		emphasis: nil;		nextPutAll: 'Face name: ';		emphasis: #(#bold);		nextPutAll: self faceName;		cr;		emphasis: nil;		nextPutAll: 'Metrics: ';		emphasis: #(#bold);		nextPutAll: self metrics printString;		yourself.	^wst contents</body><body package="Type1">glyphAtUnicode: aUnicodeInteger	| code |	aUnicodeInteger = Character illegalCode ifTrue: [		^nil].	code := self encoder encode: aUnicodeInteger asCharacter.	code = Character illegalCode ifTrue: [		^nil].	(FontBody characterNamesAtUnicode: aUnicodeInteger) do: [:psName |		(self glyphs detect: [:glyph | glyph postScriptName = psName] ifNone: [nil]) ifNotNil: [:glyph |			^glyph]].	^nil</body><body package="Type1">glyphs	^self metrics charMetrics</body><body package="Type1">italicAngle	^self metrics italicAngle</body><body package="Type1">name	^self postScriptName</body><body package="Type1">postScriptName	"&lt;String&gt;	the name as used by PostScript and PDF"	^self metrics postScriptName</body><body package="Type1">psEncoding	"&lt;String&gt;	the encoding vector suitable for the eps file from the encoding of the fontbody"	| fontbody symbols |	fontbody := self fontbody ifNil: [		^String new].	symbols := OrderedCollection new: 256.	symbols addAll: self controlCharacterNames.	symbols addAll: ((32 to: 126) collect: [:i | fontbody characterNameAtUnicode: i]).	symbols add: #DEL.	symbols addAll: ((128 to: 255) collect: [:i | fontbody characterNameAtUnicode: i]).	^self encodingStringForSymbols: symbols</body><body package="Fonts UI Support">treeChildren	^Array with: self metrics</body><body package="Fonts UI Support">treeGroups	^self treeChildren</body><body package="Type1">weight	^self metrics weightNumber</body></methods><methods><class-id>Graphics.Fonts.Type1Font</class-id> <category>testing</category><body package="Type1">isFixedPitch	^self metrics isFixedPitch</body><body package="Type1">isItalic	^self metrics isItalic</body></methods><methods><class-id>Graphics.Fonts.Type1Font</class-id> <category>initialize-release</category><body package="Type1">initializeMetrics: aFontMetrics	aFontMetrics font: self.	metrics := aFontMetrics</body></methods><methods><class-id>Graphics.Fonts.Type1Font</class-id> <category>printing</category><body package="Type1">printOn: stream	stream		nextPutAll: 'Type1(';		nextPutAll: self postScriptName;		nextPut: $)</body></methods><methods><class-id>Graphics.Fonts.Type1Font</class-id> <category>accessing metrics</category><body package="Type1">ascender	^self metrics ascender</body><body package="Type1">capHeight	| height |	height := self metrics capHeight.	height isZero ifTrue: [		^self ascender].	^height</body><body package="Type1">descender	^self metrics descender</body><body package="Type1">fontBBox	^self metrics fontBBox</body><body package="Type1">leftSideBearingOfUnicode: unicode	^(self metrics charMetricAt: unicode) ifNil: [0] ifNotNil: #leftSideBearing</body><body package="Type1">metrics	"&lt;AdobeFontMetrics&gt;	the metrics from a .AFM file (.PFM are not sufficient)"	^metrics</body><body package="Type1">stemV	^self metrics stemV</body><body package="Type1">stringWidthOf: aString at: fontSize	"this needs to be reimplemented by myself to detach from the VW implementation and to use kerning etc"	| fontDescription gc |	fontDescription := self printFontDescription copy.	fontDescription pixelSize: fontSize.	gc := PostScriptFile new graphicsContext.	gc font: fontDescription.	^gc widthOfString: aString</body><body package="Type1">underlinePosition	^self metrics underlinePosition</body><body package="Type1">underlineThickness	^self metrics underlineThickness</body><body package="Type1">xHeight	^self metrics xHeight</body></methods><methods><class-id>Graphics.Fonts.Type1Font class</class-id> <category>accessing</category><body package="Fonts UI Support">listIcon	^FontListIcons visualFor: #type1</body><body package="Fonts UI Support">menuIndex	^2</body><body package="Fonts UI Support">menuLabel	^'&amp;Type 1'</body></methods><methods><class-id>Graphics.Fonts.FontProgram</class-id> <category>accessing</category><body package="Type1">binaryContents	"&lt;ByteArray&gt;	the second (binary) section of a PFM file suitable to embed it into PDF"	^self class eexecEncoded: self contents asByteArray</body><body package="Type1">contents	"&lt;ByteString&gt;	the content of the binary part - eexec decoded"	^contents</body><body package="Type1">familyName	"&lt;String&gt;"	^self header familyName</body><body package="Type1">fontBBox	"&lt;Rectangle&gt;"	^self header fontBBox</body><body package="Type1">glyphs	"&lt;Dictionary&gt;	dictionary of charstrings"	^glyphs ifNil: [Dictionary new beImmutable]</body><body package="Type1">header	"&lt;FontProgramHeader&gt;	cleartext PostScript code"	^header</body><body package="Fonts UI Support">listIcon	^Type1Font listIcon</body><body package="Fonts UI Support">listText	^self class name asString asText</body><body package="Type1">trailer	"&lt;String&gt;"	| zerosLine wst |	zerosLine := String new: 64 withAll: $0.	wst := String new writeStream.	8 timesRepeat: [		wst			nextPutAll: zerosLine;			cr].	wst		nextPutAll: 'cleartomark';		cr.	wst nextPutAll: self trailerExtra.	^wst contents</body><body package="Type1">trailerByteString	"&lt;ByteString&gt;	suitable for embedding in PDF"	self trailerExtra isEmpty ifTrue: [		^ByteString new].	^self trailer asByteString</body><body package="Type1">trailerExtra	"&lt;String&gt;	extra PostScript code after the standard trailer of 0's and #cleartomark"	^trailerExtra</body><body package="Fonts UI Support">treeChildren	^Array with: self header</body><body package="Fonts UI">view	^TextView on: self asSource</body></methods><methods><class-id>Graphics.Fonts.FontProgram</class-id> <category>converting</category><body package="Type1">asPfa	"&lt;String&gt;	the contents of a PFA file"	| wst |	wst := WriteStream on: String new.	wst		nextPutAll: self header contents;		nextPutAll: (self encodedAsciiHexadecimal: (self class eexecEncoded: self contents asByteArray));		cr;		nextPutAll: self trailer.	^wst contents</body><body package="Type1">asPfb	"&lt;ByteArray&gt;	the contents of a PFB file"	| head meat foot wst |	head := self header contents.	meat := self contents.	foot := self trailer.	wst := ByteWriteStream on: (ByteArray new: 6 + head size + 6 + meat size + 6 + foot size + 2).	wst nextPutAll: #[128 1].	wst nextPutUnsignedLong: head size.	wst nextPutAll: head asByteArray.	wst nextPutAll: #[128 2].	wst nextPutUnsignedLong: meat size.	wst nextPutAll: meat asByteArray.	wst nextPutAll: #[128 1].	wst nextPutUnsignedLong: foot size.	wst nextPutAll: foot asByteArray.	wst nextPutAll: #[128 3].	^wst contents</body><body package="Type1">encodedAsciiHexadecimal: aByteArray	"&lt;String&gt;	hexadecimal ASCII string using lower case letters and line breaks after 32 bytes (64 characters)"	| codesToChars rst wst count |	codesToChars := '0123456789abcdef'.	rst := aByteArray readStream.	wst := String new writeStream.	count := 0.	[rst atEnd] whileFalse: [		| byte |		byte := rst next.		count := count + 1.		wst nextPut: (codesToChars at: byte // 16 + 1).		wst nextPut: (codesToChars at: byte \\ 16 + 1).		count &gt;= 32 ifTrue: [			wst cr.			count := 0]].	^wst contents</body></methods><methods><class-id>Graphics.Fonts.FontProgram</class-id> <category>initialize-release</category><body package="Type1">initializeHeader: headerFontProgramHeader contents: contentsByteString glyphs: glyphsDictionary trailerExtra: trailerExtraString	header := headerFontProgramHeader.	contents := contentsByteString.	(glyphsDictionary notNil and: [	glyphsDictionary notEmpty]) ifTrue: [			glyphs := (OrderedDictionary withAll: glyphsDictionary) beImmutable].	trailerExtra := trailerExtraString.	self beImmutable</body></methods><methods><class-id>Graphics.Fonts.FontProgram</class-id> <category>printing</category><body package="Type1">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'header' value: self header).	args add: (printer constant: 'contents' value: self contents).	args add: (printer dictionary: 'glyphs' value: self glyphs).	args add: (printer constant: 'trailerExtra' value: self trailerExtra).	^printer printvalue: self arguments: args</body></methods><methods><class-id>Graphics.Fonts.FontProgram</class-id> <category>marshaling</category><body package="Type1">passInstVars	"for OpenTalk StSt"	^#(#default #default #value #default)</body></methods><methods><class-id>Graphics.Fonts.FontProgram</class-id> <category>testing</category><body package="Fonts UI Support">hasTreeChildren	^true</body></methods><methods><class-id>Graphics.Fonts.FontProgram class</class-id> <category>instance creation</category><body package="Type1">decodedAsciiHexadecimal: asciiString	"&lt;ByteArray&gt;"	| charsToCodes asciiRst nibbleWst nibbleRst byteWst |	charsToCodes := IdentityDictionary new.	'0123456789abcdef' doWithIndex: [:char :index | charsToCodes at: char put: index - 1].	'ABCDEF' doWithIndex: [:char :index | charsToCodes at: char put: index + 9].	asciiRst := asciiString readStream.	nibbleWst := ByteArray new writeStream.	[asciiRst atEnd] whileFalse: [		charsToCodes at: asciiRst next ifPresent: [:index | nibbleWst nextPut: index]].	nibbleRst := nibbleWst contents readStream.	byteWst := ByteArray new writeStream.	[nibbleRst atEnd] whileFalse: [		byteWst nextPut: nibbleRst next * 16 + nibbleRst next].	^byteWst contents</body><body package="Type1">fromPfa: aPfaString	| rst header rest wst |	rst := aPfaString readStream.	header := rst upToAll: 'eexec'.	header := header , (rst next: 6).	rest := rst upToEnd.	rst := rest reverse readStream.	wst := String new writeStream.	wst nextPutAll: (rst upTo: $0).	wst nextPut: $0.	[	| char |	char := rst peek.	char = $0 or: [	char = Character cr]] whileTrue: [			wst nextPut: rst next].	^self		newHeader: (FontProgramHeader fromHeader: header)		contents: (self eexecDecoded: (self decodedAsciiHexadecimal: rst upToEnd reverse)) asByteString		trailerExtra: (self trailerExtraFrom: (wst contents allButLast: 1) reverse)</body><body package="Type1">fromPfb: aByteArray	| rst header contents trailer |	rst := ByteReadStream littleEndianOn: aByteArray.	(rst next: 2) = #[128 1] ifFalse: [		self error: 'Start of ASCII Section expected'].	header := (rst next: rst nextUnsignedLong) asByteString.	(rst next: 2) = #[128 2] ifFalse: [		self error: 'Start of Binary Section expected'].	contents := rst next: rst nextUnsignedLong.	(rst next: 2) = #[128 1] ifFalse: [		self error: 'Start of ASCII Section expected'].	trailer := (rst next: rst nextUnsignedLong) asByteString.	(rst next: 2) = #[128 3] ifFalse: [		self error: 'EOF expected'].	^self		newHeader: (FontProgramHeader fromHeader: header)		contents: (self eexecDecoded: contents) asByteString		trailerExtra: (self trailerExtraFrom: trailer)</body><body package="Type1">glyphsDictionaryFrom: contentsByteString	| dict rst done |	dict := OrderedDictionary new.	rst := contentsByteString readStream.	rst upToAll: '/CharStrings'.	rst next: 12.	done := false.	[done] whileFalse: [		| charName |		rst upTo: $/.		charName := (rst upTo: Character space) asSymbol.		charName = #FontName			ifTrue: [done := true]			ifFalse: [			| length charString |			length := (rst upTo: Character space) asNumber.			rst upTo: Character space.			charString := self charstringDecoded: (rst next: length) asByteArray.			dict at: charName put: charString]].	^dict</body><body package="Type1">header: headerFontProgramHeader contents: contentsByteString glyphs: glyphsDictionary trailerExtra: trailerExtraString	| inst |	inst := self new.	inst		initializeHeader: headerFontProgramHeader		contents: contentsByteString		glyphs: glyphsDictionary		trailerExtra: trailerExtraString.	^inst</body><body package="Type1">newHeader: headerFontProgramHeader contents: contentsByteString trailerExtra: trailerExtraString	^self		header: headerFontProgramHeader		contents: contentsByteString		glyphs: (self glyphsDictionaryFrom: contentsByteString)		trailerExtra: trailerExtraString</body><body package="Type1">trailerExtraFrom: aString	"&lt;String&gt;	extra string after the standard trailer of 512 $0 and 'cleartomark' "	| rst |	rst := (aString copyReplaceAll: (String with: Character lf) with: (String with: Character cr)) readStream.	((rst upToAll: 'cleartomark') select: [:char | char = $0]) size = 512 ifFalse: [		self error: '512 zeros $0 expected'].	(rst upTo: Character cr) = 'cleartomark' ifFalse: [		self error: '''cleartomark'' expected'].	^rst upToEnd</body></methods><methods><class-id>Graphics.Fonts.FontProgram class</class-id> <category>encryption</category><body package="Type1">charstringDecoded: aByteArray	"&lt;ByteArray&gt;"	^self decode: aByteArray key: 4330</body><body package="Type1">charstringEncoded: aByteArray	"&lt;ByteArray&gt;"	^self encode: aByteArray key: 4330</body><body package="Type1">decode: aByteArray key: keyInteger	"&lt;ByteArray&gt;"	| wst |	wst := WriteStream on: (ByteArray new: aByteArray size).	aByteArray inject: keyInteger into: [:r :byte |		wst nextPut: (byte bitXor: (r bitShift: -8)).		self nextR: byte + r].	^wst contents</body><body package="Type1">eexecDecoded: aByteArray	"&lt;ByteArray&gt;"	^self decode: aByteArray key: 55665</body><body package="Type1">eexecEncoded: aByteArray	"&lt;ByteArray&gt;"	^self encode: aByteArray key: 55665</body><body package="Type1">encode: aByteArray key: keyInteger	"&lt;ByteArray&gt;"	| wst |	wst := WriteStream on: (ByteArray new: aByteArray size).	aByteArray inject: keyInteger into: [:r :byte |		| cipher |		cipher := byte bitXor: (r bitShift: -8).		wst nextPut: cipher.		self nextR: cipher + r].	^wst contents</body><body package="Type1">nextR: anInteger	"&lt;Integer&gt;	16 Bit"	^anInteger * 52845 + 22719 bitAnd: 16rFFFF</body></methods><methods><class-id>Graphics.Fonts.FontProgram class</class-id> <category>instance creation optional</category><body package="Type1">header: headerFontProgramHeader contents: contentsByteString trailerExtra: trailerExtraString	| inst |	inst := self new.	inst		initializeHeader: headerFontProgramHeader		contents: contentsByteString		glyphs: nil		trailerExtra: trailerExtraString.	^inst</body></methods><methods><class-id>Graphics.Fonts.FontProgram class</class-id> <category>test instances</category><body package="Fonts test resources">example	^FontProgram fromPfb: CustomFont nimbusSansLReguPfb</body></methods><methods><class-id>Graphics.Fonts.CFF.Range</class-id> <category>initialize-release</category><body package="CompactFontFormat">initializeFirst: firstSmallInteger nLeft: nLeftSmallInteger	first := firstSmallInteger.	nLeft := nLeftSmallInteger.	self beImmutable</body></methods><methods><class-id>Graphics.Fonts.CFF.Range</class-id> <category>accessing</category><body package="CompactFontFormat">first	"&lt;SmallInteger&gt;"	^first</body><body package="CompactFontFormat">nLeft	"&lt;SmallInteger&gt;"	^nLeft</body><body package="CompactFontFormat">values	"&lt;Array of: Number&gt;"	^(self first to: self first + self nLeft) asArray</body></methods><methods><class-id>Graphics.Fonts.CFF.Range</class-id> <category>printing</category><body package="CompactFontFormat">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'first' value: self first).	args add: (printer constant: 'nLeft' value: self nLeft).	^printer printvalue: self arguments: args</body></methods><methods><class-id>Graphics.Fonts.CFF.Range class</class-id> <category>instance creation</category><body package="CompactFontFormat">first: firstSmallInteger nLeft: nLeftSmallInteger	| inst |	inst := self new.	inst initializeFirst: firstSmallInteger nLeft: nLeftSmallInteger.	^inst</body></methods><methods><class-id>Graphics.Fonts.CFF.Range class</class-id> <category>test instances</category><body package="Fonts test resources">example	^Range first: 1 nLeft: 1</body></methods><methods><class-id>Graphics.Fonts.CharacterMetric</class-id> <category>accessing</category><body package="Type1">b	"&lt;Rectangle&gt;"	"(Optional.) Character bounding box where llx, lly, urx, and ury are all numbers. If a character makes no marks on the page (for example, the space character), this field reads B 0 0 0 0, and these values are not considered when computing the FontBBox."	^b</body><body package="Type1">c	"&lt;Integer&gt;"	"Decimal value of default character code (-1 if not encoded).(Either C or CH is required.)"	^c ifNil: [		-1]</body><body package="Type1">code	self c = -1 ifTrue: [		^nil].	^self c</body><body package="Fonts UI Support">descriptionText	"&lt;Text&gt;"	| wst |	wst := TextStream on: (String new: 10).	wst nextPutAllText: self name asText allBold.	wst nextPutAllText: (' &gt;' asText emphasizeAllWith: #italic).	wst nextPutAll: self asCharacter printString.	wst nextPutAllText: ('&lt;' asText emphasizeAllWith: #italic).	wst		cr;		nextPutAll: 'Unicode 16r' , (self unicode printStringRadix: 16).	wst		cr;		nextPutAll: 'c='.	wst nextPutAll: (self c = -1		ifTrue: [self c printString]		ifFalse: [		self printCode: self c]).	w ifNotNil: [		wst			cr;			nextPutAll: 'w=' , (self w y isZero				ifTrue: [self w x]				ifFalse: [				self w y]) printString].	b ifNotNil: [		wst			cr;			nextPutAll: 'b=' , self b origin printString , ' -&gt; ' , b corner printString].	self l keysAndValuesDo: [:successor :ligature |		wst			space;			nextPutAll: '/' , successor asString , '-&gt;/' , ligature asString].	^wst contents</body><body package="Fonts UI Support">hasTreeChildren	^false</body><body package="Type1">l	"&lt;Dictionary key: Symbol value: Symbol)&gt;"	"L successor ligature(Optional.) Ligature sequence where successor and ligature are both names. The current character may join with the character named successor to form the character named ligature. Note that characters can have more than one such entry. (See example above.)"	^l ifNil: [		l := Dictionary new]</body><body package="Type1">leftSideBearing	"&lt;Number&gt;"	^self b origin x</body><body package="Fonts UI Support">listIcon	^FontListIcons visualFor: #font</body><body package="Fonts UI Support">listText	| nameText |	nameText := self n asString asText allBold.	self asCharacter ifNil: [		nameText			addEmphasis: (Array with: #color -&gt; ColorValue red)			removeEmphasis: #()			allowDuplicates: false].	self code ifNil: [		^nameText].	^nameText , (' (16r' , (self code printStringRadix: 16) , ')') asText</body><body package="Type1">n	"&lt;Symbol&gt;"	"(Optional.) PostScript language character name."	^n ifNil: [		#'']</body><body package="Type1">name	^'/' , self n asString</body><body package="Type1">postScriptName	"&lt;Symbol&gt;"	^self n</body><body package="Fonts UI Support">shortDescriptionText	^'advanceWidth: ' asText , self width printString asText allBold , ' leftSideBearing: ' asText , self leftSideBearing asFloat printString asText allBold</body><body package="Type1">unicode	"&lt;Integer&gt;	System code for this character. Can be two byte big"	^self asCharacter ifNil: [Character illegalCode] ifNotNil: #asInteger</body><body package="Fonts UI">view	^CharsetView on: self</body><body package="Type1">w	"&lt;Point&gt;"	^w ifNil: [0@0]</body><body package="Type1">width	"&lt;Number&gt;"	^self w x</body></methods><methods><class-id>Graphics.Fonts.CharacterMetric</class-id> <category>converting</category><body package="Type1">asCharacter	"&lt;Character | nil&gt;"	^FontBody characterNamed: self n</body><body package="Type1">asString	^String with: self asCharacter</body></methods><methods><class-id>Graphics.Fonts.CharacterMetric</class-id> <category>private</category><body package="Type1">b: aString	| numbers llx lly urx ury |	numbers := (aString tokensBasedOn: Character space) collect: [:token |		token asNumber].	llx := numbers at: 1.	lly := numbers at: 2.	urx := numbers at: 3.	ury := numbers at: 4.	b := llx @ lly corner: urx @ ury</body><body package="Type1">c: aString	c := aString asNumber</body><body package="Type1">ch: aString	"Same as C, but the character code is given in hexadecimal.Example: &lt;84AF&gt;.(Either C or CH is required.)"	c := ('16r', aString) asNumber</body><body package="Type1">l: aString	| tokens |	tokens := aString tokensBasedOn: Character space.	self l at: tokens first asSymbol put: tokens last asSymbol</body><body package="Type1">n: aString	n := aString asSymbol</body><body package="Type1">w0: aString	"(Optional.) Character width vector (x, y) for writing direction 0."	| tokens |	tokens := aString tokensBasedOn: Character space.	w := tokens first asNumber -&gt; tokens last asNumber</body><body package="Type1">w0X: aString	"(Optional.) Character width in x for writing direction 0. y is 0."	w := self w x: aString asNumber</body><body package="Type1">w0Y: aString	"(Optional.) Character width in y for writing direction 0. x is 0."	w := self w y: aString asNumber</body><body package="Type1">w1: aString	"(Optional.) Character width vector (x, y) for writing direction 1."	self error: 'vertical direction is not supported so far'</body><body package="Type1">w1X: aString	"(Optional.) Character width in x for writing direction 1. y is 0."	self error: 'vertical direction is not supported so far'</body><body package="Type1">w1Y: aString	"(Optional.) Character width in y for writing direction 1. x is 0."	self error: 'vertical direction is not supported so far'</body><body package="Type1">w: aString	| tokens |	tokens := aString tokensBasedOn: Character space.	w := tokens first asNumber -&gt; tokens last asNumber</body><body package="Type1">wX: aString	w := self w x: aString asNumber</body><body package="Type1">wY: aString	w := self w y: aString asNumber</body></methods><methods><class-id>Graphics.Fonts.CharacterMetric</class-id> <category>testing</category><body package="Type1">isValid	^n notNil or: [	(self c = -1) not]</body></methods><methods><class-id>Graphics.Fonts.CharacterMetric</class-id> <category>printing</category><body package="Fonts UI Support">describeOn: wst	wst cr; nextPutAllText: 'C ' asText, self c printString asText allBold.	n ifNotNil: [wst tab; nextPutAllText: 'N ' asText, self n printString asText allBold].	w ifNotNil: [wst tab; nextPutAllText: 'W ' asText, self w printString asText allBold].	b ifNotNil: [wst tab; nextPutAllText: 'B ' asText, self b printString asText allBold].	l ifNotNil: [wst tab; nextPutAllText: 'L ' asText, self l asText allBold].</body><body package="Fonts UI Support">printCode: integer	^integer printString , '/' , (integer printStringRadix: 16) , '/' , (integer printStringRadix: 8)</body><body package="Type1">printOn: stream	stream nextPutAll: self name</body></methods><methods><class-id>Graphics.Fonts.CharacterMetric class</class-id> <category>dynamic references</category><body package="Fonts Runtime">dynamicallyReferencedSelectors	^#(#wX:)</body></methods><methods><class-id>Graphics.Fonts.CharacterMetric class</class-id> <category>test instances</category><body package="Fonts test resources">anF	^AdobeFontMetric helvetica charMetricAt: 102</body></methods><methods><class-id>Graphics.Fonts.AfmParser</class-id> <category>parsing utils</category><body package="Type1">asSetter: key	| setter |	setter := key copy , ':'.	setter at: 1 put: key first asLowercase.	^setter asSymbol</body><body package="Type1">keyAndValue: line	"&lt;Association key: String value: String&gt;"	| rst |	rst := line readStream.	^(self token: rst) -&gt; (self trimLine: rst upToEnd)</body><body package="Type1">nextLine	"&lt;String&gt;	a line should not contain more than 255 characters"	^self trimLine: (stream upTo: Character cr)</body><body package="Type1">token: s	"&lt;String&gt;	leaves the stream after the following whitespace"	| s1 c |	s skipSeparators.	s1 := (String new: 10) writeStream.	[c := nil.	s atEnd or: [(c := s next) isSeparator]]		whileFalse: [s1 nextPut: c].	c ifNotNil: [s skip: -1].	s skipSeparators.	^s1 contents</body><body package="Type1">trimLine: line	^self withoutTrailingSeparators: (self withoutLeadingSeparators: line)</body><body package="Type1">withoutLeadingSeparators: raw	"&lt;String&gt;"	^raw readStream skipSeparators upToEnd</body><body package="Type1">withoutTrailingSeparators: raw	"&lt;String&gt;"	^(self withoutLeadingSeparators: raw reverse) reverse</body></methods><methods><class-id>Graphics.Fonts.AfmParser</class-id> <category>parsing</category><body package="Type1">charMetricEntriesFrom: string	| tokens rawTokens |	tokens := string tokensBasedOn: $;.	rawTokens := tokens reject: [:token |		token isEmpty or: [		token allSatisfy: [:c |			c isSeparator]]].	^rawTokens collect: [:token |		self keyAndValue: token]</body><body package="Type1">charMetricFrom: line	| entries charMetric |	entries := self charMetricEntriesFrom: line.	entries isEmpty ifTrue: [		^nil].	charMetric := CharacterMetric new.	entries do: [:entry |		[charMetric perform: (self asSetter: entry key) with: entry value] on: MessageNotUnderstood do: [			self error: (#errBadAFMProperty &lt;&lt; #dialogs &gt;&gt; '&lt;1p&gt; not recognized' expandMacrosWith: entry)]].	charMetric isValid ifFalse: [		self error: #errCharacterNameAndCode &lt;&lt; #dialogs &gt;&gt; 'Character with no name and no code?'].	^charMetric</body><body package="Type1">kernPairFrom: line	| entry kernPair |	entry := self keyAndValue: line.	kernPair := KernPair new.	kernPair perform: (self asSetter: entry key) with: entry value.	kernPair isValid ifFalse: [		self error: 'kern pair is not valid'].	^kernPair</body><body package="Type1">parse	| line lastline |	line := self nextLine.	(self keyAndValue: line) key = 'StartFontMetrics' ifFalse: [		^self error: 'wrong header! StartFontMetrics was expected'].	self perform: stack last value with: line.	[stream atEnd] whileFalse: [		line := self nextLine.		line notEmpty ifTrue: [			self perform: stack last value with: line.			lastline := line]].	(self keyAndValue: lastline) key = 'EndFontMetrics' ifFalse: [		^self error: 'wrong trailer! EndFontMetrics expected']</body><body package="Type1">parseAfmEntry: line	| keyAndValue setter |	(self tryParseSectionStartEndEntry: line) ifTrue: [^self].	keyAndValue := self keyAndValue: line.	setter := self asSetter: keyAndValue key.	fontMetric perform: setter with: keyAndValue value</body><body package="Type1">parseCharMetric: line	"(Required if individual character metrics are present.) These keywords delimit the character metrics section of the file. The integer value indicates how many entries to expect."	| charMetric |	(self tryParseSectionStartEndEntry: line) ifTrue: [		^self].	(self tryParseComment: line) ifTrue: [		^self].	charMetric := self charMetricFrom: line.	charMetric ifNil: [		^self].	fontMetric charMetrics add: charMetric</body><body package="Type1">parseComposite: line	(self tryParseSectionStartEndEntry: line) ifTrue: [^self].	(self tryParseComment: line) ifTrue: [^self].	fontMetric addComposite: line</body><body package="Type1">parseEndSectionEntry: line	stack removeLast key = line ifFalse: [		self error: #errAFMBadNests &lt;&lt; #dialogs &gt;&gt; 'AFM file contains badly nested Start / End clauses']</body><body package="Type1">parseFrom: readstream into: aFontMetric	fontMetric := aFontMetric.	stream := readstream.	stack := OrderedCollection with: 'AFM' -&gt; #parseAfmEntry:.	self parse</body><body package="Type1">parseKernPair: line	| kernPair |	(self tryParseSectionStartEndEntry: line) ifTrue: [^self].	(self tryParseComment: line) ifTrue: [^self].	kernPair := self kernPairFrom: line.	kernPair ifNil: [^self].	fontMetric addKernPair: kernPair</body><body package="Type1">parseStartSectionEntry: line	| keyAndValue selector endToken |	keyAndValue := self keyAndValue: line.	selector := self subparserFor: keyAndValue.	selector ifNil: [		self error: #errUnrecognizedAMF &lt;&lt; #dialogs &gt;&gt; 'Unrecognized AFM section'].	endToken := keyAndValue key copyReplaceAll: 'Start' with: 'End'.	stack add: endToken -&gt; selector</body><body package="Type1">parseTrackKern: line	| kernPair |	(self tryParseSectionStartEndEntry: line) ifTrue: [^self].	(self tryParseComment: line) ifTrue: [^self].	kernPair := self trackKernFrom: line.	kernPair ifNil: [^self].	fontMetric addTrackKern: kernPair</body><body package="Type1">subparserFor: keyAndValue	"&lt;Symbol&gt;"	| key |	key := keyAndValue key.	key = 'StartFontMetrics' ifTrue: [		fontMetric fileFormatVersion: keyAndValue value.		^#parseAfmEntry:].	key = 'StartCharMetrics' ifTrue: [		fontMetric charMetricsSize: keyAndValue value.		^#parseCharMetric:].	key = 'StartKernData' ifTrue: [		fontMetric kernDataSize: keyAndValue value.		^#tryParseSectionStartEndEntry:].	key = 'StartTrackKern' ifTrue: [		fontMetric trackKernSize: keyAndValue value.		^#parseTrackKern:].	key = 'StartKernPairs' ifTrue: [		fontMetric kernPairsSize: keyAndValue value.		^#parseKernPair:].	key = 'StartComposites' ifTrue: [		fontMetric compositesSize: keyAndValue value.		^#parseComposite:].	key = 'StartDirection' ifTrue: [		| direction |		direction := keyAndValue value asNumber.		direction = 0 ifTrue: [^#parseAfmEntry:].		direction = 1 ifTrue: [^self error: 'vertical direction is not supported yet'].		direction = 2 ifTrue: [^self error: 'multiple directions are not supported yet'].		^self error: 'unknown for Direction'].	^nil</body><body package="Type1">trackKernFrom: line	"&lt;String&gt; for now"	"TrackKern degree min-ptsize min-kern max-ptsize max-kern"	| entry |	entry := self keyAndValue: line.	entry key = 'TrackKern' ifFalse: [		self error: 'no track kerning specification'].	^entry value</body><body package="Type1">tryParseComment: line	^'Comment*' match: line</body><body package="Type1">tryParseSectionStartEndEntry: line	('Start*' match: line) ifTrue: [		self parseStartSectionEntry: line.		^true].	('End*' match: line) ifTrue: [		self parseEndSectionEntry: line.		^true].	^false</body></methods><methods><class-id>Graphics.Fonts.AfmParser class</class-id> <category>instance creation</category><body package="Type1">parseFrom: readstream into: aFontMetric	self new parseFrom: readstream into: aFontMetric</body></methods><methods><class-id>Graphics.Fonts.KernPair</class-id> <category>accessing</category><body package="Type1">firstCharacter	^firstCharacter</body><body package="Type1">firstCharacter: anObject	firstCharacter := anObject</body><body package="Type1">kerning	^kerning ifNil: [		0@0]</body><body package="Type1">kerning: anObject	kerning := anObject</body><body package="Type1">secondCharacter	^secondCharacter</body><body package="Type1">secondCharacter: anObject	secondCharacter := anObject</body></methods><methods><class-id>Graphics.Fonts.KernPair</class-id> <category>private</category><body package="Type1">codeFromHex: hex	"like &lt;hex1&gt;"	| rst |	rst := hex readStream.	rst next = $&lt; ifFalse: [self error: 'not a hex character'].	^rst upTo: $&gt;</body><body package="Type1">kP: line	"KP name1 name2 numberx numberyName of the first character in the kerning pair followed by the name of the second character followed by the kerning vector specified as an (x, y) pair. The kerning vector is the amount by which to move the second character relative to the first character to position it properly. The kerning vector is specified in the standard character coordinate system. As with all metrics, in order to use this vector it is necessary to scale it by (current point size)/1000."	| tokens |	tokens := line tokensBasedOn: Character space.	firstCharacter := (tokens at: 1) asSymbol.	secondCharacter := (tokens at: 2) asSymbol.	kerning := (tokens at: 3) asNumber @ (tokens at: 4) asNumber</body><body package="Type1">kPH: line	"KPH &lt;hex1&gt; &lt;hex2&gt; numberx numberySame as KP, but the byte strings needed to generate the characters are given, rather than the names. hex1 and hex2 are hexadecimal values, enclosed in angle brackets."	| tokens |	tokens := line tokensBasedOn: Character space.	firstCharacter := self codeFromHex: (tokens at: 1).	secondCharacter := self codeFromHex: (tokens at: 2).	kerning := (tokens at: 3) asNumber @ (tokens at: 4) asNumber</body><body package="Type1">kPX: line	"KPX name1 name2 numberxName of the first character in the kerning pair followed by the name of the second character followed by the kerning amount in the x direction (y is zero). The kerning amount is specified in the units of the character coordinate system."	| tokens |	tokens := line tokensBasedOn: Character space.	firstCharacter := (tokens at: 1) asSymbol.	secondCharacter := (tokens at: 2) asSymbol.	kerning := self kerning x: (tokens at: 3) asNumber</body><body package="Type1">kPY: line	"KPY name1 name2 numberySame as KPX, but in the y direction (x is zero)."	| tokens |	tokens := line tokensBasedOn: Character space.	firstCharacter := (tokens at: 1) asSymbol.	secondCharacter := (tokens at: 2) asSymbol.	kerning := self kerning y: (tokens at: 3) asNumber</body></methods><methods><class-id>Graphics.Fonts.KernPair</class-id> <category>testing</category><body package="Type1">isValid	^firstCharacter notNil and: [	secondCharacter notNil]</body></methods><methods><class-id>Graphics.Fonts.KernPair class</class-id> <category>dynamic references</category><body package="Fonts Runtime">dynamicallyReferencedSelectors	^#(#kPX:)</body></methods><methods><class-id>Graphics.Fonts.CFF.Dict</class-id> <category>initialize-release</category><body package="CompactFontFormat">initializeOperations: operationsArray	(operationsArray notNil and: [	operationsArray notEmpty]) ifTrue: [			operations := (Array withAll: operationsArray) beImmutable].	self beImmutable</body></methods><methods><class-id>Graphics.Fonts.CFF.Dict</class-id> <category>accessing</category><body package="Fonts UI Support">descriptionText	| wst |	wst := TextStream on: (String new: 200).	self operations do: [:operation |		wst			crtab;			nextPutAllText: operation printString].	^wst contents</body><body package="CompactFontFormat">operations	"&lt;Array&gt;"	^operations ifNil: [#()]</body></methods><methods><class-id>Graphics.Fonts.CFF.Dict</class-id> <category>printing</category><body package="CompactFontFormat">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer array: 'operations' value: self operations).	^printer printvalue: self arguments: args</body></methods><methods><class-id>Graphics.Fonts.CFF.Dict class</class-id> <category>accessing</category><body package="CompactFontFormat">integerFrom: byteStream	"&lt;Integer&gt;"	| b0 b1 b2 b3 b4 |	b0 := byteStream next.	(b0 between: 32 and: 246) ifTrue: [		^b0 - 139].	b1 := byteStream next.	(b0 between: 247 and: 250) ifTrue: [		^(b0 - 247) * 256 + b1 + 108].	(b0 between: 251 and: 254) ifTrue: [		^(b0 - 251) negated * 256 - b1 - 108].	b2 := byteStream next.	b0 = 28 ifTrue: [		^(UninterpretedBytes from: (ByteArray			with: b1			with: b2)) shortAt: 1 bigEndian: true].	b0 = 29 ifTrue: [		b3 := byteStream next.		b4 := byteStream next.		^(UninterpretedBytes from: (ByteArray			with: b1			with: b2			with: b3			with: b4))				longAt: 1				bigEndian: true].	self error: 'no Integer operand'</body><body package="CompactFontFormat">operatorFrom: byteStream	"&lt;Operator&gt;"	| byte |	byte := byteStream next.	byte = 12 ifTrue: [		^TwoByteDictOperator value: byteStream next].	^DictOperator value: byte</body><body package="CompactFontFormat">readElementFrom: byteStream	"&lt;Operator | Number&gt;"	| byte |	byte := byteStream peek.	(byte between: 0 and: 21) ifTrue: [		^self operatorFrom: byteStream].	byte = 30 ifTrue: [		^self realFrom: byteStream].	^self integerFrom: byteStream</body><body package="CompactFontFormat">realFrom: byteStream	"&lt;Number&gt;"	| wst |	byteStream next = 30 ifFalse: [		^self error: 'no Real operand'].	wst := String new writeStream.	[	| byte nibble1 nibble2 |	byte := byteStream next.	nibble1 := byte bitShift: -4.	nibble1 = 16rF ifTrue: [		^wst contents asNumber].	wst nextPutAll: (self stringForRealNibble: nibble1).	nibble2 := byte bitAnd: 16rF.	nibble2 = 16rF ifTrue: [		^wst contents asNumber].	wst nextPutAll: (self stringForRealNibble: nibble2)] repeat</body><body package="CompactFontFormat">stringForRealNibble: aNibble	"&lt;String&gt;"	(aNibble between: 0 and: 9) ifTrue: [		^aNibble printString].	aNibble = 16rA ifTrue: [		^'.'].	aNibble = 16rB ifTrue: [		^'e'].	aNibble = 16rC ifTrue: [		^'e-'].	aNibble = 16rE ifTrue: [		^'-'].	aNibble = 16rD ifTrue: [		self error: 'reserved Real nibble']</body></methods><methods><class-id>Graphics.Fonts.CFF.Dict class</class-id> <category>instance creation</category><body package="CompactFontFormat">fromBytes: aByteStream	| list args |	list := OrderedCollection new.	args := OrderedCollection new.	[aByteStream atEnd] whileFalse: [		| element |		element := self readElementFrom: aByteStream.		element respondsToArithmetic			ifTrue: [args add: element]			ifFalse: [			list add: (Operation operator: element operands: args).			args := OrderedCollection new]].	^self operations: list</body><body package="CompactFontFormat">operations: operationsArray	| inst |	inst := self new.	inst initializeOperations: operationsArray.	^inst</body></methods><methods><class-id>Graphics.Fonts.StandardFont</class-id> <category>accessing</category><body package="Type1">faceName	^self windowsFaceName</body><body package="Type1">familyName	^self metrics familyName</body><body package="Type1">filename	^self postScriptName</body><body package="Fonts UI Support">listText	^'Adobe Type 1 Standard Font' asText</body><body package="Type1">screenFamilyName	"the windows equivalent for a standard font.	need to be implemented differently for other OSes"	^self windowsFaceName</body><body package="Type1">setWidth	^0.5</body><body package="Fonts UI Support">treeChildren	^Array		with: self metrics		with: (Glyphs on: self glyphs font: self)</body><body package="Type1">windowsFaceName	"&lt;String&gt;	the name of the corresponding windows font face used in a LOGFONT, normally without suffixes like »-Bold«, »-Italic« etc."	^windowsFaceName</body></methods><methods><class-id>Graphics.Fonts.StandardFont</class-id> <category>initialize-release</category><body package="Type1">initializeWindowsFaceName: nameString metrics: anAdobeFontMetric	windowsFaceName := nameString.	self initializeMetrics: anAdobeFontMetric</body></methods><methods><class-id>Graphics.Fonts.StandardFont class</class-id> <category>instance creation</category><body package="Type1">windowsName: nameString afm: afmString	| inst |	inst := self new.	inst		initializeWindowsFaceName: nameString		metrics: (AdobeFontMetric fromAfm: afmString readStream).	^inst</body></methods><methods><class-id>Graphics.Fonts.StandardFont class</class-id> <category>accessing</category><body package="Fonts UI Support">menuIndex	^1</body><body package="Fonts UI Support">menuLabel	^'&amp;Standard'</body></methods><methods><class-id>Graphics.Fonts.CFF.Operator</class-id> <category>accessing</category><body package="CompactFontFormat">name	"&lt;String&gt;"	^self class namesDictionary at: self value ifAbsent: ['unknown']</body><body package="CompactFontFormat">value	"&lt;SmallInteger&gt;"	^value</body></methods><methods><class-id>Graphics.Fonts.CFF.Operator</class-id> <category>printing</category><body package="CompactFontFormat">printOn: stream	stream		nextPutAll: self class name;		nextPut: $(;		nextPutAll: self name;		nextPut: $)</body><body package="CompactFontFormat">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'value' value: self value).	^printer printvalue: self arguments: args</body></methods><methods><class-id>Graphics.Fonts.CFF.Operator</class-id> <category>testing</category><body package="Fonts UI Support">hasOneSID	"the operation has one argument which is a SID (String ID)"	^false</body><body package="CompactFontFormat">isExtended: integer	^false</body><body package="CompactFontFormat">isSimple: integer	^self value = integer</body></methods><methods><class-id>Graphics.Fonts.CFF.Operator</class-id> <category>initialize-release</category><body package="CompactFontFormat">initializeValue: valueSmallInteger	value := valueSmallInteger.	self beImmutable</body></methods><methods><class-id>Graphics.Fonts.CFF.Operator class</class-id> <category>instance creation</category><body package="CompactFontFormat">value: valueSmallInteger	| inst |	inst := self new.	inst initializeValue: valueSmallInteger.	^inst</body></methods><methods><class-id>Graphics.Fonts.CFF.Operator class</class-id> <category>accessing</category><body package="CompactFontFormat">namesDictionary	"&lt;Dictionary key: Integer value: String&gt;"	^self subclassResponsibility</body></methods><methods><class-id>Graphics.Fonts.CFF.DictOperator</class-id> <category>testing</category><body package="Fonts UI Support">hasOneSID	"the operation has one argument which is a SID (String ID)"	^#(0 1 2 3 4) includes: self value</body></methods><methods><class-id>Graphics.Fonts.CFF.DictOperator class</class-id> <category>accessing</category><body package="CompactFontFormat">namesDictionary	| dict |	dict := Dictionary new.	dict at: 0 put: 'version'.	dict at: 1 put: 'Notice'.	dict at: 2 put: 'FullName'.	dict at: 3 put: 'FamilyName'.	dict at: 4 put: 'Weight'.	dict at: 5 put: 'FontBBox'.	dict at: 6 put: 'BlueValues'.	dict at: 7 put: 'OtherBlues'.	dict at: 8 put: 'FamilyBlues'.	dict at: 9 put: 'FamilyOtherBlues'.	dict at: 10 put: 'StdHW'.	dict at: 11 put: 'StdVW'.	"12 escape for TwoByteOperators"	dict at: 13 put: 'UniqueID'.	dict at: 14 put: 'XUID'.	dict at: 15 put: 'charset'.	dict at: 16 put: 'Encoding'.	dict at: 17 put: 'CharStrings'.	dict at: 18 put: 'Private'.	dict at: 19 put: 'Subrs'.	dict at: 20 put: 'defaultWidthX'.	dict at: 21 put: 'nominalWidthX'.	^dict</body></methods><methods><class-id>Graphics.Fonts.CFF.DictOperator class</class-id> <category>test instances</category><body package="Fonts test resources">example	^DictOperator value: 1</body></methods><methods><class-id>Graphics.Fonts.ExtTextMetrics</class-id> <category>accessing</category><body package="Type1">capHeight	"&lt;Integer&gt;	short: This field contains the height for uppercase characters in the font (the value is in font units). Typically, the character 'H' is used for measurement purposes.For Type-1 fonts you may find this value in the AFM file"	^capHeight</body><body package="Type1">dblLowerUlOffset	"&lt;Integer&gt;	doubleLowerUnderlineOffsetshort: This field contains the offset (in font units) downward from the baseline where the top of the lower, double underline bar should appear"	^dblLowerUlOffset</body><body package="Type1">dblLowerUlWidth	"&lt;Integer&gt;	doubleLowerUnderlineWidthshort: This field contains the thickness (in font units) of the lower, double underline bar"	^dblLowerUlWidth</body><body package="Type1">dblUpperUlOffset	"&lt;Integer&gt;	doubleUpperUnderlineOffsetshort: This field contains the offset (in font units) downward from the baseline where the top of the upper, double underline bar should appear"	^dblUpperUlOffset</body><body package="Type1">dblUpperUlWidth	"&lt;Integer&gt;	doubleUpperUnderlineWidthshort: This field contains the thickness (in font units) of the upper, double underline bar"	^dblUpperUlWidth</body><body package="Type1">etmSize	"&lt;Integer&gt;	short: This field contains the size (in bytes) of the EXTTEXTMETRIC structure. The value is always 0x0034"	^52</body><body package="Type1">lcAscent	"&lt;Integer&gt;	lowerCaseAscentshort: This field contains the distance (in font units) that the ascender of lowercase letters extends above the baseline. This distance is typically specified for a lowercase character 'd'.For Type-1 fonts you may find this value in the AFM file"	^lcAscent</body><body package="Type1">lcDescent	"&lt;Integer&gt;	lowerCaseDescentshort: This field contains the distance (in font units) that the descender of lowercase letters extends below the baseline. This distance is typically specified for a lowercase character 'p'.For Type-1 fonts you may find this value in the AFM file"	^lcDescent</body><body package="Type1">masterHeight	"&lt;Integer&gt;	short: This field contains the font size in device units for which the values in the ExtentTable table are exact. Since Type-1 fonts are by convention defined in a box of 1000 x 1000 units, PFM files for Type-1 fonts have the value 0x03E8 (1000, the number of units per em) in this field"	^1000</body><body package="Type1">masterUnits	"&lt;Integer&gt;	short: This field contains the integer number of units per em where an em equals etmMasterHeight in the EXTTEXTMETRIC structure. In other words, the etmMasterHeight value is expressed in font units rather than device units.In PFM files for Type-1 fonts the value should be set to 0x03E8 (1000)"	^1000</body><body package="Type1">maxScale	"&lt;Integer&gt;	short: This field contains the maximum valid size for the font in device units. The maximum valid point size can then be calculated as follows:(etmMaxScale * points-per-inch) / dfVertRes(see also above etmMinScale).In PFM files for Type-1 fonts the value should be set to 0x03E8 (1000)"	^1000</body><body package="Type1">minScale	"&lt;Integer&gt;	short: This field contains the minimum valid size for the font in device units. The minimum valid point size can then be calculated as follows:(etmMinScale * points-per-inch) / dfVertResThe value for »points-per-inch« is normally 72, the dfVertRes field can be found in the PFMHEADER structure, it contains the vertical resolution at which the font was digitized (this value is in dots per inch).In PFM files for Type-1 fonts the value should be set to 0x0003"	^3</body><body package="Type1">orientation	"&lt;Integer&gt;	short: This field contains the orientation of the font. This value refers to the ability of the font to be imaged on a page of a given orientation. It can be one of the following values:		0x0000: any orientation		0x0001: portrait (page width is smaller that its height)		0x0002: landscape (page width is greater than its height) 	In PFM files for Type-1 fonts this field is always 0x0000 since a Type-1 font can be arbitrarily rotated"	^0</body><body package="Type1">pointSize	"&lt;Integer&gt;	short: This field contains the nominal point size of the font in twips (this is a twentieth of a point or 1/1440 inch). This is the intended graphics art size of the font, the actual size may differ slightly depending on the resolution of the output device. In PFM files for Type-1 fonts this value should be set to 0x00f0 (240 twips or 12 pt)"	^240</body><body package="Type1">slant	"&lt;Integer&gt;	short: This field contains the angle in tenth of degrees clockwise from the upright version of the font. The value is typically not zero only for an italic or oblique font.For Type-1 fonts you may find this value in the AFM file (search for the entry »ItalicAngle« and multiply it by 10)"	^slant</body><body package="Type1">soOffset	"&lt;Integer&gt;	strikeOutOffsetshort: This field contains the offset (in font units) upward from the baseline where the top of a strikeout bar should appear"	^soOffset</body><body package="Type1">soWidth	"&lt;Integer&gt;	strikeOutWidthshort: This field contains the thickness (in font units) of the strikeout bar"	^soWidth</body><body package="Type1">subScript	"&lt;Integer&gt;	short: This field contains the recommended amount (in font units) to offset subscript characters from the baseline. This amount is typically specified by a positive offset"	^subScript</body><body package="Type1">subScriptSize	"&lt;Integer&gt;	short: This field contains the recommended size (in font units) for subscript characters in the font"	^subScriptSize</body><body package="Type1">superScript	"&lt;Integer&gt;	short: This field contains the recommended amount (in font units) to offset superscript characters from the baseline. This amount is typically specified by a negative offset"	^superScript</body><body package="Type1">superScriptSize	"&lt;Integer&gt;	short: This field contains the recommended size (in font units) for superscript characters in the font"	^superScriptSize</body><body package="Type1">ulOffset	"&lt;Integer&gt;	underlineOffsetshort: This field contains the offset (in font units) downward from the baseline where the top of a single underline bar should appear.For Type-1 fonts you may find this value in the AFM file"	^ulOffset</body><body package="Type1">ulWidth	"&lt;Integer&gt;	underlineWidthshort: This field contains the thickness (in font units) of the underline bar.For Type-1 fonts you may find this value in the AFM file"	^ulWidth</body><body package="Type1">xHeight	"&lt;Integer&gt;	short: This field contains the height for lowercase characters in the font (the value is in font units). Typically, the character 'x' is used for measurement purposes.For Type-1 fonts you may find this value in the AFM file"	^xHeight</body></methods><methods><class-id>Graphics.Fonts.ExtTextMetrics</class-id> <category>printing</category><body package="Type1">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'capHeight' value: self capHeight).	args add: (printer constant: 'xHeight' value: self xHeight).	args add: (printer constant: 'lcAscent' value: self lcAscent).	args add: (printer constant: 'lcDescent' value: self lcDescent).	args add: (printer constant: 'slant' value: self slant).	args add: (printer constant: 'superScript' value: self superScript).	args add: (printer constant: 'subScript' value: self subScript).	args add: (printer constant: 'superScriptSize' value: self superScriptSize).	args add: (printer constant: 'subScriptSize' value: self subScriptSize).	args add: (printer constant: 'ulOffset' value: self ulOffset).	args add: (printer constant: 'ulWidth' value: self ulWidth).	args add: (printer constant: 'dblUpperUlOffset' value: self dblUpperUlOffset).	args add: (printer constant: 'dblLowerUlOffset' value: self dblLowerUlOffset).	args add: (printer constant: 'dblUpperUlWidth' value: self dblUpperUlWidth).	args add: (printer constant: 'dblLowerUlWidth' value: self dblLowerUlWidth).	args add: (printer constant: 'soOffset' value: self soOffset).	args add: (printer constant: 'soWidth' value: self soWidth).	^printer printvalue: self arguments: args</body></methods><methods><class-id>Graphics.Fonts.ExtTextMetrics</class-id> <category>converting</category><body package="Type1">asBytes	"&lt;ByteArray[48]&gt;	ByteArray suited to be written to a PFM file"	| wst |	wst := ByteWriteStream littleEndianOn: (ByteArray new: 48).	wst		nextPutShort: self etmSize;		nextPutShort: self pointSize;		nextPutShort: self orientation;		nextPutShort: self masterHeight;		nextPutShort: self minScale;		nextPutShort: self maxScale;		nextPutShort: self masterUnits;		nextPutShort: self capHeight;		nextPutShort: self xHeight;		nextPutShort: self lcAscent;		nextPutShort: self lcDescent;		nextPutShort: self slant;		nextPutShort: self superScript;		nextPutShort: self subScript;		nextPutShort: self superScriptSize;		nextPutShort: self subScriptSize;		nextPutShort: self ulOffset;		nextPutShort: self ulWidth;		nextPutShort: self dblUpperUlOffset;		nextPutShort: self dblLowerUlOffset;		nextPutShort: self dblUpperUlWidth;		nextPutShort: self dblLowerUlWidth;		nextPutShort: self soOffset;		nextPutShort: self soWidth.	^wst contents</body></methods><methods><class-id>Graphics.Fonts.ExtTextMetrics</class-id> <category>initialize-release</category><body package="Type1">initializeCapHeight: capHeightInteger xHeight: xHeightInteger lcAscent: lcAscentInteger lcDescent: lcDescentInteger slant: slantInteger superScript: superScriptInteger subScript: subScriptInteger superScriptSize: superScriptSizeInteger subScriptSize: subScriptSizeInteger ulOffset: ulOffsetInteger ulWidth: ulWidthInteger dblUpperUlOffset: dblUpperUlOffsetInteger dblLowerUlOffset: dblLowerUlOffsetInteger dblUpperUlWidth: dblUpperUlWidthInteger dblLowerUlWidth: dblLowerUlWidthInteger soOffset: soOffsetInteger soWidth: soWidthInteger	capHeight := capHeightInteger.	xHeight := xHeightInteger.	lcAscent := lcAscentInteger.	lcDescent := lcDescentInteger.	slant := slantInteger.	superScript := superScriptInteger.	subScript := subScriptInteger.	superScriptSize := superScriptSizeInteger.	subScriptSize := subScriptSizeInteger.	ulOffset := ulOffsetInteger.	ulWidth := ulWidthInteger.	dblUpperUlOffset := dblUpperUlOffsetInteger.	dblLowerUlOffset := dblLowerUlOffsetInteger.	dblUpperUlWidth := dblUpperUlWidthInteger.	dblLowerUlWidth := dblLowerUlWidthInteger.	soOffset := soOffsetInteger.	soWidth := soWidthInteger.	self beImmutable</body></methods><methods><class-id>Graphics.Fonts.ExtTextMetrics class</class-id> <category>instance creation</category><body package="Type1">capHeight: capHeightInteger xHeight: xHeightInteger lcAscent: lcAscentInteger lcDescent: lcDescentInteger slant: slantInteger superScript: superScriptInteger subScript: subScriptInteger superScriptSize: superScriptSizeInteger subScriptSize: subScriptSizeInteger ulOffset: ulOffsetInteger ulWidth: ulWidthInteger dblUpperUlOffset: dblUpperUlOffsetInteger dblLowerUlOffset: dblLowerUlOffsetInteger dblUpperUlWidth: dblUpperUlWidthInteger dblLowerUlWidth: dblLowerUlWidthInteger soOffset: soOffsetInteger soWidth: soWidthInteger	| inst |	inst := self new.	inst		initializeCapHeight: capHeightInteger		xHeight: xHeightInteger		lcAscent: lcAscentInteger		lcDescent: lcDescentInteger		slant: slantInteger		superScript: superScriptInteger		subScript: subScriptInteger		superScriptSize: superScriptSizeInteger		subScriptSize: subScriptSizeInteger		ulOffset: ulOffsetInteger		ulWidth: ulWidthInteger		dblUpperUlOffset: dblUpperUlOffsetInteger		dblLowerUlOffset: dblLowerUlOffsetInteger		dblUpperUlWidth: dblUpperUlWidthInteger		dblLowerUlWidth: dblLowerUlWidthInteger		soOffset: soOffsetInteger		soWidth: soWidthInteger.	^inst</body><body package="Type1">fromBytes: aByteArray48	| rst dummy etmSize masterHeight |	rst := ByteReadStream littleEndianOn: aByteArray48.	dummy := self new.	etmSize := rst nextShort.	etmSize = dummy etmSize ifFalse: [		"found 0 in TeX font"		etmSize isZero ifFalse: [			self error: 'etmSize is not correct']].	rst nextShort = dummy pointSize ifFalse: [		self error: 'pointSize is not correct'].	rst nextShort = dummy orientation ifFalse: [		self error: 'orientation is not correct'].	masterHeight := rst nextShort.	masterHeight = dummy masterHeight ifFalse: [		"found 300 in TeX font"		"self error: 'masterHeight is not correct' "].	rst nextShort = dummy minScale ifFalse: [		self error: 'minScale is not correct'].	rst nextShort = dummy maxScale ifFalse: [		self error: 'maxScale is not correct'].	rst nextShort = dummy masterUnits ifFalse: [		self error: 'masterUnits is not correct'].	^self		capHeight: rst nextShort		xHeight: rst nextShort		lcAscent: rst nextShort		lcDescent: rst nextShort		slant: rst nextShort		superScript: rst nextShort		subScript: rst nextShort		superScriptSize: rst nextShort		subScriptSize: rst nextShort		ulOffset: rst nextShort		ulWidth: rst nextShort		dblUpperUlOffset: rst nextShort		dblLowerUlOffset: rst nextShort		dblUpperUlWidth: rst nextShort		dblLowerUlWidth: rst nextShort		soOffset: rst nextShort		soWidth: rst nextShort</body></methods><methods><class-id>Graphics.Fonts.ExtTextMetrics class</class-id> <category>test instances</category><body package="Fonts test resources">example	^ExtTextMetrics		capHeight: 800		xHeight: 500		lcAscent: 700		lcDescent: 200		slant: 0		superScript: 700		subScript: -100		superScriptSize: 100		subScriptSize: 100		ulOffset: 177		ulWidth: 38		dblUpperUlOffset: 50		dblLowerUlOffset: 100		dblUpperUlWidth: 25		dblLowerUlWidth: 25		soOffset: 231		soWidth: 38</body><body package="Fonts test resources">exampleBytes	^self exampleBytesTazLT4SemiLight</body><body package="Fonts test resources">exampleBytesTazLT4SemiLight	^#[52 0 240 0 0 0 232 3 3 0 232 3 232 3 32 3 244 1 188 2 200 0 0 0 188 2 156 255 100 0 100 0 177 0 38 0 50 0 100 0 25 0 25 0 231 0 38 0]</body></methods><methods><class-id>Graphics.Fonts.OpenType.Prep class</class-id> <category>accessing</category><body package="Fonts UI Support">documentation	^'The Control Value Program consists of a set of TrueType instructions that will be executed whenever the font or point size or transformation matrix change and before each glyph is interpreted. Any instruction is legal in the CV Program but since no glyph is associated with it, instructions intended to move points within a particular glyph outline cannot be used in the CV Program. The name ''prep'' is anachronistic (the table used to be known as the Pre Program table.)'</body><body package="OpenType">tag	^'prep'</body><body package="Fonts UI Support">title	^'Control Value Program'</body></methods><methods><class-id>Graphics.Fonts.OpenType.Colr class</class-id> <category>accessing</category><body package="Fonts UI Support">documentation	^'The COLR table adds support for multi-colored glyphs in a manner that is compatible with existing text engines and easy to support with current OFF font files.The COLR table defines a list of base glyphs — which are regular glyphs, typically associated with a cmap entry. Each base glyph is associated by the COLR table to a list of glyphs, each corresponding to layers that can be combined, creating a colored representation of the base glyph. The layered glyphs are explicitly defined in bottom-up z-order and each of their advance widths must match those of the base glyph. If the font has vertical metrics, the associated layer glyphs must also have the same advance height and vertical Y origin as the base glyph.The COLR table works together with the CPAL table which holds the color palettes used by the color layers.Fonts using ''COLR'' and ''CPAL'' tables must implement GlyphID 1 as the .null glyph. If the COLR table is present in a font but no CPAL table exists, then the COLR table will not be supported for this font.'</body><body package="OpenType">tag	^'COLR'</body><body package="Fonts UI Support">title	^'Color Table'</body></methods><methods><class-id>Graphics.Fonts.OpenType.Cmap</class-id> <category>accessing</category><body package="OpenType">codeForGlyph: aGlyphId	^self platformTable codeForGlyph: aGlyphId</body><body package="OpenType">createEncodingTables	"The cmap table header is followed by an array of encoding records that specify the particular encoding and the offset to the subtable for that encoding. The number of encoding records is numTables. An encoding record entry looks like:Record Type 	Name 		DescriptionUSHORT 		platformID 	Platform ID.USHORT 		encodingID 	Platform-specific encoding ID.ULONG 		offset 		Byte offset from beginning of table to the subtable for this encoding."	| b subtableClass subtable |	b := self bytes.	^(1 to: self numTables) collect: [:i |		| pos platformID encodingID offset format |		pos := (i - 1) * 8 + 5.		platformID := b unsignedShortAt: pos bigEndian: true.		encodingID := b unsignedShortAt: pos + 2 bigEndian: true.		offset := b unsignedLongAt: pos + 4 bigEndian: true.		format := b unsignedShortAt: offset + 1 bigEndian: true.		subtableClass := CmapSubtable classFor: format.		subtable := subtableClass platform: platformID encoding: encodingID contents: ByteArray new.		subtable readFrom: self contents at: offset]</body><body package="Fonts UI Support">descriptionText	| wst |	wst := TextStream on: (String new: 200).	wst		nextPutAll: 'version: ';		emphasis: #(#bold);		nextPutAll: self version printString;		cr;		emphasis: nil;		nextPutAll: 'Subtables:'.	self tables do: [:table |		wst			cr;			nextPutAllText: table descriptionText].	^wst contents</body><body package="OpenType">encodingTables	"&lt;Dictionary key: Integer value: CmapSubtable"	^encodingTables ifNil: [		| dict |		dict := OrderedDictionary new.		self createEncodingTables do: [:table |			(dict at: table platform ifAbsentPut: [OrderedCollection new]) add: table].		encodingTables := dict]</body><body package="OpenType">glyphIndexAtUnicode: aUnicodeInteger	"&lt;Integer | nil&gt;"	^self platformTable glyphIndexAtUnicode: aUnicodeInteger</body><body package="OpenType">numTables	"USHORT  	numTables  	Number of encoding tables that follow."	^self bytes unsignedShortAt: 3 bigEndian: true</body><body package="OpenType">platformTable	"&lt;CmapSubtable"	^self platformTables first</body><body package="OpenType">platformTables	"&lt;SequenceableCollection of: CmapSubtable"	^self encodingTables at: self platformID</body><body package="OpenType">tables	^self encodingTables values inject: OrderedCollection new into: [:list :tables | list , tables]</body><body package="Fonts UI Support">treeChildren	^self tables</body><body package="OpenType">version	"USHORT  	version  	Table version number (0)."	^self bytes unsignedShortAt: 1 bigEndian: true</body></methods><methods><class-id>Graphics.Fonts.OpenType.Cmap</class-id> <category>testing</category><body package="Fonts UI Support">hasTreeChildren	^true</body></methods><methods><class-id>Graphics.Fonts.OpenType.Cmap class</class-id> <category>accessing</category><body package="Fonts UI Support">documentation	^'This table defines the mapping of character codes to the glyph index values used in the font. It may contain more than one subtable, in order to support more than one character encoding scheme. Character codes that do not correspond to any glyph in the font should be mapped to glyph index 0. The glyph at this location must be a special glyph representing a missing character, commonly known as .notdef.The table header indicates the character encodings for which subtables are present. Each subtable is in one of seven possible formats and begins with a format code indicating the format used.The platform ID and platform-specific encoding ID in the header entry (and, in the case of the Macintosh platform, the language field in the subtable itself) are used to specify a particular ''cmap'' encoding. The header entries must be sorted first by platform ID, then by platform-specific encoding ID, and then by the language field in the corresponding subtable. Each platform ID, platform-specific encoding ID, and subtable language combination may appear only once in the ''cmap'' table.'</body><body package="OpenType">tag	^'cmap'</body><body package="Fonts UI Support">title	^'Character To Glyph Index Mapping Table'</body></methods><methods><class-id>Graphics.Fonts.OpenType.Svg class</class-id> <category>accessing</category><body package="Fonts UI Support">documentation	^'This table contains SVG descriptions for some or all of the glyphs in the font. For every SVG glyph description, there must also exist a corresponding CFF or TT glyph description in the font.'</body><body package="OpenType">tag	^'SVG '</body><body package="Fonts UI Support">title	^'The SVG (Scalable Vector Graphics) table'</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable</class-id> <category>accessing</category><body package="OpenType">codeForGlyph: aGlyphId	^self indexToCode at: aGlyphId ifAbsent: [Character illegalCode]</body><body package="OpenType">contents	"&lt;ByteArray&gt;	Bytes of this subtable"	^contents</body><body package="Fonts UI Support">descriptionText	| wst |	wst := TextStream on: String new.	wst		nextPutAll: self class name asString;		nextPutAll: ' platform: ';		nextPutAll: self platform printString;		nextPutAll: ' encoding: ';		nextPutAll: self encoding printString;		nextPutAll: ' format: ';		nextPutAll: self formatNumber printString;		nextPutAll: ' bytes: ';		nextPutAll: self contents size printString;		yourself.	^wst contents</body><body package="OpenType">encoding	"&lt;Integer&gt;	Platform-specific encoding ID"	^encoding</body><body package="OpenType">formatNumber	"&lt;Integer&gt;"	^self class formatNumber</body><body package="OpenType">glyphIndexAtUnicode: aUnicodeInteger	"&lt;Integer | nil&gt;"	^self subclassResponsibility</body><body package="OpenType">indexToCode	"&lt;Dictionary key: Integer value: Integer&gt;"	^self subclassResponsibility</body><body package="Fonts UI Support">listIcon	^self class toolListIcon</body><body package="Fonts UI Support">listText	^self class name asText allBold , ('[' , self platform printString , ', ' , self encoding printString , ']') asText</body><body package="OpenType">platform	"&lt;Integer&gt;	Platform ID"	^platform</body><body package="Fonts UI Support">treeChildren	^#()</body><body package="Fonts UI">view	^Graphics.Fonts.TextView on: self asDescription</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable</class-id> <category>initialize-release</category><body package="OpenType">initializePlatform: platformInteger encoding: encodingInteger contents: contentsByteArray	platform := platformInteger.	encoding := encodingInteger.	contents := contentsByteArray.	self beImmutable</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable</class-id> <category>printing</category><body package="OpenType">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'platform' value: self platform).	args add: (printer constant: 'encoding' value: self encoding).	args add: (printer constant: 'contents' value: self contents).	^printer printvalue: self arguments: args</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable</class-id> <category>reading</category><body package="OpenType">readFrom: uninterpretedBytes at: offset	"&lt;CmapSubtable&gt;"	^self subclassResponsibility</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable</class-id> <category>testing</category><body package="Fonts UI Support">hasTreeChildren	^false</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable class</class-id> <category>instance creation</category><body package="OpenType">platform: platformInteger encoding: encodingInteger contents: contentsByteArray	| inst |	inst := self new.	inst		initializePlatform: platformInteger		encoding: encodingInteger		contents: contentsByteArray.	^inst</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable class</class-id> <category>accessing</category><body package="OpenType">classFor: formatInteger	^self allSubclasses detect: [:sc |		sc subclasses isEmpty and: [		sc formatNumber = formatInteger]]</body><body package="OpenType">formatNumber	"&lt;Integer&gt;"	^self subclassResponsibility</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapLanguageSubtable</class-id> <category>accessing</category><body package="Fonts UI Support">descriptionText	| wst |	wst := TextStream on: String new.	wst		nextPutAll: self class name asString;		nextPutAll: ' platform: ';		nextPutAll: self platform printString;		nextPutAll: ' encoding: ';		nextPutAll: self encoding printString;		nextPutAll: ' format: ';		nextPutAll: self formatNumber printString;		nextPutAll: ' language: ';		nextPutAll: self language printString;		nextPutAll: ' bytes: ';		nextPutAll: self contents size printString;		yourself.	^wst contents</body><body package="OpenType">language	"&lt;Integer&gt;	Please see “Note on the language field in 'cmap' subtables“ in this document"	^language</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapLanguageSubtable</class-id> <category>printing</category><body package="OpenType">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'platform' value: self platform).	args add: (printer constant: 'encoding' value: self encoding).	args add: (printer constant: 'contents' value: self contents).	args add: (printer constant: 'language' value: self language).	^printer printvalue: self arguments: args</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapLanguageSubtable</class-id> <category>reading</category><body package="OpenType">readFrom: bytes at: offset	"Type  	Name  	DescriptionUSHORT 	format 	Format number is set to 0.USHORT 	length 	This is the length in bytes of the subtable.USHORT 	language 	Please see “Note on the language field in 'cmap' subtables“ in this document."	| aLength aLanguage uBytes |	uBytes := UninterpretedBytes from: (bytes copyFrom: offset + 1 to: offset + 6).	(uBytes unsignedShortAt: 1 bigEndian: true) = self formatNumber ifFalse: [		^self error: 'wrong format'].	aLength := uBytes unsignedShortAt: 3 bigEndian: true.	aLanguage := uBytes unsignedShortAt: 5 bigEndian: true.	^self class		platform: self platform		encoding: self encoding		contents: (bytes copyFrom: offset + 1 to: offset + aLength)		language: aLanguage</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapLanguageSubtable</class-id> <category>initialize-release</category><body package="OpenType">initializePlatform: platformInteger encoding: encodingInteger contents: contentsByteArray language: languageInteger	platform := platformInteger.	encoding := encodingInteger.	contents := contentsByteArray.	language := languageInteger.	self beImmutable</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapLanguageSubtable class</class-id> <category>instance creation</category><body package="OpenType">platform: platformInteger encoding: encodingInteger contents: contentsByteArray language: languageInteger	| inst |	inst := self new.	inst		initializePlatform: platformInteger		encoding: encodingInteger		contents: contentsByteArray		language: languageInteger.	^inst</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable2</class-id> <category>accessing</category><body package="OpenType">glyphIndexAtUnicode: aUnicodeInteger	^self notYetImplemented</body><body package="OpenType">indexToCode	^self notYetImplemented</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable2 class</class-id> <category>accessing</category><body package="OpenType">formatNumber	^2</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable2 class</class-id> <category>test instances</category><body package="Fonts test resources">example	^CmapSubtable2 platform: 1 encoding: 1 contents: #[42] language: 1</body></methods><methods><class-id>Graphics.Fonts.OpenType.Gdef class</class-id> <category>accessing</category><body package="Fonts UI Support">documentation	^'The Glyph Definition (GDEF) table contains four types of information in four independent tables:    * The GlyphClassDef table classifies the different types of glyphs in the font.    * The AttachmentList table identifies all attachment points on the glyphs, which streamlines data access and bitmap caching.    * The LigatureCaretList table contains positioning data for ligature carets, which the text-processing client uses on screen to select and highlight the individual components of a ligature glyph.    * The MarkAttachClassDef table classifies mark glyphs, to help group together marks that are positioned similarly.    * The MarkGlyphSetsTable allows the enumeration of an arbitrary number of glyph sets that can be used as an extension of the mark attachment class definition to allow lookups to filter mark glyphs by arbitrary sets of marks.The GSUB and GPOS tables may reference certain GDEF table information. See, for example, the LookupFlag bit enumeration in “OpenType Layout Common Table Formats”.'</body><body package="OpenType">tag	^'GDEF'</body><body package="Fonts UI Support">title	^'The Glyph Definition Table'</body></methods><methods><class-id>Graphics.Fonts.OpenType.Glyf class</class-id> <category>accessing</category><body package="Fonts UI Support">documentation	^'This table contains information that describes the glyphs in the font in the TrueType outline format. Information regarding the rasterizer (scaler) refers to the TrueType rasterizer.'</body><body package="OpenType">tag	^'glyf'</body><body package="Fonts UI Support">title	^'Glyf Data'</body></methods><methods><class-id>Graphics.Fonts.OpenType.Glyph</class-id> <category>printing</category><body package="OpenType">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'id' value: self id).	args add: (printer constant: 'name' value: self name).	args add: (printer constant: 'charString' value: self charString).	args add: (printer constant: 'code' value: self code).	args add: (printer constant: 'hMetric' value: self hMetric).	^printer printvalue: self arguments: args</body></methods><methods><class-id>Graphics.Fonts.OpenType.Glyph</class-id> <category>accessing</category><body package="OpenType">asCharacter	"&lt;Character | nil&gt;"	^Graphics.Fonts.FontBody characterNamed: self name</body><body package="OpenType">charString	"&lt;Charstring&gt;"	^charString</body><body package="OpenType">code	"&lt;Integer&gt;"	^code</body><body package="Fonts UI Support">descriptionText	| wst |	wst := TextStream on: (String new: 200).	self charString operations do: [:operation |		wst			nextPutAll: operation printString;			cr].	wst		cr;		nextPutAll: 'Bytes: ';		cr;		nextPutAll: self charString bytes printString.	^wst contents</body><body package="OpenType">hMetric	"&lt;HorMetric&gt;"	^hMetric</body><body package="OpenType">id	"&lt;Integer&gt;"	^id</body><body package="OpenType">infoText	^self hMetric asDescription , (' (first Byte: ' , self charString bytes first printString , ')') asText</body><body package="OpenType">leftSideBearing	^self hMetric lsb</body><body package="Fonts UI Support">listText	| wst |	wst := TextStream on: (String new: 200).	wst		nextPutAll: self id printString;		nextPutAll: ': ';		emphasis: #(#bold);		nextPutAll: self name;		emphasis: nil.	self code ifNotNil: [		wst			nextPutAll: ' (';			nextPutAll: self code printString;			nextPut: $)].	^wst contents</body><body package="OpenType">name	"&lt;Symbol&gt;"	^name</body><body package="OpenType">postScriptName	"&lt;Symbol&gt;"	^self name</body><body package="Fonts UI Support">shortDescriptionText	^self hMetric asDescription , (' (first Byte: ' , self charString bytes first printString , ')') asText</body><body package="OpenType">unicode	"&lt;Integer&gt;	System code for this character. Can be two byte big"	^self asCharacter ifNil: [Character illegalCode] ifNotNil: #asInteger</body><body package="OpenType">width	^self hMetric advanceWidth</body></methods><methods><class-id>Graphics.Fonts.OpenType.Glyph</class-id> <category>initialize-release</category><body package="OpenType">initializeId: idInteger name: nameSymbol charString: charStringCharstring code: codeInteger hMetric: hMetricHorMetric	id := idInteger.	name := nameSymbol.	charString := charStringCharstring.	code := codeInteger.	hMetric := hMetricHorMetric.	self beImmutable</body></methods><methods><class-id>Graphics.Fonts.OpenType.Glyph class</class-id> <category>instance creation</category><body package="OpenType">id: idInteger name: nameSymbol charString: charStringCharstring code: codeInteger hMetric: hMetricHorMetric	| inst |	inst := self new.	inst		initializeId: idInteger		name: nameSymbol		charString: charStringCharstring		code: codeInteger		hMetric: hMetricHorMetric.	^inst</body></methods><methods><class-id>Graphics.Fonts.OpenType.Glyph class</class-id> <category>test instances</category><body package="Fonts test resources">example	^Glyph		id: 1		name: 'a string'		charString: #[42]		code: 1		hMetric: (HorMetric advanceWidth: 500 lsb: 16)</body></methods><methods><class-id>Graphics.Fonts.OpenType.HorMetric</class-id> <category>accessing</category><body package="OpenType">advanceWidth	"&lt;Integer&gt;"	^advanceWidth</body><body package="OpenType">lsb	"&lt;Integer&gt;"	^lsb</body></methods><methods><class-id>Graphics.Fonts.OpenType.HorMetric</class-id> <category>initialize-release</category><body package="OpenType">initializeAdvanceWidth: advanceWidthInteger lsb: lsbInteger	advanceWidth := advanceWidthInteger.	lsb := lsbInteger.	self beImmutable</body></methods><methods><class-id>Graphics.Fonts.OpenType.HorMetric</class-id> <category>printing</category><body package="OpenType">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'advanceWidth' value: self advanceWidth).	args add: (printer constant: 'lsb' value: self lsb).	^printer printvalue: self arguments: args</body></methods><methods><class-id>Graphics.Fonts.OpenType.HorMetric class</class-id> <category>instance creation</category><body package="OpenType">advanceWidth: advanceWidthInteger lsb: lsbInteger	| inst |	inst := self new.	inst initializeAdvanceWidth: advanceWidthInteger lsb: lsbInteger.	^inst</body></methods><methods><class-id>Graphics.Fonts.OpenType.HorMetric class</class-id> <category>test instances</category><body package="Fonts test resources">example	^HorMetric advanceWidth: 1 lsb: 1</body></methods><methods><class-id>Graphics.Fonts.OpenType.Post</class-id> <category>accessing</category><body package="Fonts UI Support">descriptionText	| wst |	wst := TextStream on: (String new: 200).	wst		nextPutAll: 'version: ';		emphasis: #(#bold);		nextPutAll: self versionMajor printString;		nextPut: $.;		nextPutAll: self versionMinor printString.	self printAttribute: #italicAngle on: wst.	self printAttribute: #underlinePosition on: wst.	self printAttribute: #underlineThickness on: wst.	self printAttribute: #isFixedPitch on: wst.	self printAttribute: #minMemType42 on: wst.	self printAttribute: #maxMemType42 on: wst.	self printAttribute: #minMemType1 on: wst.	self printAttribute: #maxMemType1 on: wst.	^wst contents</body><body package="OpenType">isFixedPitch	"&lt;Boolean&gt;"	"ULONG 	isFixedPitch 	Set to 0 if the font is proportionally spaced, non-zero if the font is not proportionally spaced (i.e. monospaced)."	^(self bytes unsignedLongAt: 13 bigEndian: true) isZero not</body><body package="OpenType">italicAngle	"&lt;Number&gt;"	"Fixed 	italicAngle 	Italic angle in counter-clockwise degrees from the vertical. 						Zero for upright text, negative for text that leans to the right (forward)."	^(self bytes longAt: 5 bigEndian: true) / 16r10000</body><body package="OpenType">maxMemType1	"&lt;Integer&gt;"	"ULONG 	maxMemType1 		Maximum memory usage when an OpenType font is downloaded as a Type 1 font."	^self bytes unsignedLongAt: 29 bigEndian: true</body><body package="OpenType">maxMemType42	"&lt;Integer&gt;"	"ULONG 	maxMemType42 		Maximum memory usage when an OpenType font is downloaded."	^self bytes unsignedLongAt: 21 bigEndian: true</body><body package="OpenType">minMemType1	"&lt;Integer&gt;"	"ULONG 	minMemType1 		Minimum memory usage when an OpenType font is downloaded as a Type 1 font."	^self bytes unsignedLongAt: 25 bigEndian: true</body><body package="OpenType">minMemType42	"&lt;Integer&gt;"	"ULONG 	minMemType42 		Minimum memory usage when an OpenType font is downloaded."	^self bytes unsignedLongAt: 17 bigEndian: true</body><body package="OpenType">psUnderlinePosition	^self underlinePosition - (self underlineThickness / 2)</body><body package="OpenType">underlinePosition	"&lt;Integer&gt;"	"FWord 	underlinePositionThis is the suggested distance of the top of the underline from the baseline (negative values indicate below baseline).The PostScript definition of this FontInfo dictionary key (the y coordinate of the center of the stroke) is not used for historical reasons. The value of the PostScript key may be calculated by subtracting half the underlineThickness from the value of this field."	^self bytes shortAt: 9 bigEndian: true</body><body package="OpenType">underlineThickness	"&lt;Integer&gt;"	"FWord 	underlineThickness 		Suggested values for the underline thickness."	^self bytes shortAt: 11 bigEndian: true</body><body package="OpenType">versionMajor	"Fixed 	Table version number 	0x00010000 for version 1.0."	^self bytes unsignedShortAt: 1 bigEndian: true</body><body package="OpenType">versionMinor	"Fixed 	Table version number 	0x00010000 for version 1.0."	^self bytes unsignedShortAt: 3 bigEndian: true</body></methods><methods><class-id>Graphics.Fonts.OpenType.Post class</class-id> <category>accessing</category><body package="Fonts UI Support">documentation	^'This table contains additional information needed to use TrueType or OpenType fonts on PostScript printers. This includes data for the FontInfo dictionary entry and the PostScript names of all the glyphs. For more information about PostScript names, see the Adobe document Unicode and Glyph Names.Versions 1.0, 2.0, and 2.5 refer to TrueType fonts and OpenType fonts with TrueType data. OpenType fonts with TrueType data may also use Version 3.0. OpenType fonts with CFF data use Version 3.0 only.'</body><body package="OpenType">tag	^'post'</body><body package="Fonts UI Support">title	^'PostScript'</body></methods><methods><class-id>WindowsFonts.AxisInfo</class-id> <category>printing</category><body package="Fonts for Windows">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'minValue' value: self minValue).	args add: (printer constant: 'maxValue' value: self maxValue).	args add: (printer constant: 'axisName' value: self axisName).	^printer printvalue: self arguments: args</body></methods><methods><class-id>WindowsFonts.AxisInfo</class-id> <category>accessing</category><body package="Fonts for Windows">axisName	"&lt;String&gt;"	^axisName</body><body package="Fonts for Windows">maxValue	"&lt;Integer&gt;"	^maxValue</body><body package="Fonts for Windows">minValue	"&lt;Integer&gt;"	^minValue</body></methods><methods><class-id>WindowsFonts.AxisInfo</class-id> <category>initialize-release</category><body package="Fonts for Windows">initializeFrom: anAXISINFO	self		initializeMinValue: (anAXISINFO memberAt: #axMinValue)		maxValue: (anAXISINFO memberAt: #axMaxValue)		axisName: (anAXISINFO refMemberAt: #axAxisName) copyUnicodeStringFromHeap</body><body package="Fonts for Windows">initializeMinValue: minValueInteger maxValue: maxValueInteger axisName: axisNameString	minValue := minValueInteger.	maxValue := maxValueInteger.	axisName := axisNameString.	self beImmutable</body></methods><methods><class-id>WindowsFonts.AxisInfo class</class-id> <category>instance creation</category><body package="Fonts for Windows">minValue: minValueInteger maxValue: maxValueInteger axisName: axisNameString	| inst |	inst := self new.	inst initializeMinValue: minValueInteger maxValue: maxValueInteger axisName: axisNameString.	^inst</body><body package="Fonts for Windows">newFrom: anAXISINFO	| inst |	inst := self new.	inst initializeFrom: anAXISINFO.	^inst</body></methods><methods><class-id>WindowsFonts.AxisInfo class</class-id> <category>test instances</category><body package="Fonts for Windows">example	^AxisInfo minValue: 1 maxValue: 1 axisName: 'a string'</body></methods><methods><class-id>WindowsFonts.Logfont</class-id> <category>accessing</category><body package="Fonts for Windows">charSet	"&lt;Integer&gt;Specifies the character set. The following values are predefined.ANSI_CHARSETBALTIC_CHARSETCHINESEBIG5_CHARSETDEFAULT_CHARSETEASTEUROPE_CHARSETGB2312_CHARSETGREEK_CHARSETHANGUL_CHARSETMAC_CHARSETOEM_CHARSETRUSSIAN_CHARSETSHIFTJIS_CHARSETSYMBOL_CHARSETTURKISH_CHARSETVIETNAMESE_CHARSETKorean language edition of Windows:    JOHAB_CHARSETMiddle East language edition of Windows:    ARABIC_CHARSET    HEBREW_CHARSETThai language edition of Windows:    THAI_CHARSET The OEM_CHARSET value specifies a character set that is operating-system dependent.Windows 95/98/Me: You can use the DEFAULT_CHARSET value to allow the name and size of a font to fully describe the logical font. If the specified font name does not exist, a font from any character set can be substituted for the specified font, so you should use DEFAULT_CHARSET sparingly to avoid unexpected results.Windows NT/2000/XP: DEFAULT_CHARSET is set to a value based on the current system locale. For example, when the system locale is English (United States), it is set as ANSI_CHARSET.Fonts with other character sets may exist in the operating system. If an application uses a font with an unknown character set, it should not attempt to translate or interpret strings that are rendered with that font.This parameter is important in the font mapping process. To ensure consistent results, specify a specific character set. If you specify a typeface name in the lfFaceName member, make sure that the lfCharSet value matches the character set of the typeface specified in lfFaceName. "	^charSet</body><body package="Fonts for Windows">charSetName	"&lt;String&gt;"	^CharSet nameAt: self charSet</body><body package="Fonts for Windows">clipPrecision	"&lt;Integer&gt;Specifies the clipping precision. The clipping precision defines how to clip characters that are partially outside the clipping region. It can be one or more of the following values.SAMPLEPATH='/workshop/downloads/For more information about the orientation of coordinate systems, see the description of the nOrientation parameterValue 	MeaningCLIP_CHARACTER_PRECIS 	Not used.CLIP_DEFAULT_PRECIS 	Specifies default clipping behavior.CLIP_DFA_DISABLE 	Windows XP SP1: Turns off font association for the font. Note that this flag is not guaranteed to have any effect on any platform after Windows Server 2003.CLIP_EMBEDDED 	You must specify this flag to use an embedded read-only font.CLIP_LH_ANGLES 	When this value is used, the rotation for all fonts depends on whether the orientation of the coordinate system is left-handed or right-handed.If not used, device fonts always rotate counterclockwise, but the rotation of other fonts is dependent on the orientation of the coordinate system.CLIP_MASK 	Not used.CLIP_DFA_OVERRIDE 	Windows 2000: Turns off font association for the font. This is identical to CLIP_DFA_DISABLE, but it can have problems in some situations; the recommended flag to use is CLIP_DFA_DISABLE.CLIP_STROKE_PRECIS 	Not used by the font mapper, but is returned when raster, vector, or TrueType fonts are enumerated.Windows NT/2000/XP: For compatibility, this value is always returned when enumerating fonts.CLIP_TT_ALWAYS 	Not used."	^clipPrecision</body><body package="Fonts for Windows">clipPrecisionNames	"&lt;SequenceableCollection of: String"	^self class clipPrecisionNamesIn: self clipPrecision</body><body package="Fonts for Windows">clipPrecisionNamesString	"&lt;String"	| wst |	wst := WriteStream on: (String new: 20).	self clipPrecisionNames do: [:name | wst nextPutAll: name] separatedBy: [		wst space].	^wst contents</body><body package="Fonts for Windows">escapement	"&lt;Integer&gt;Specifies the angle, in tenths of degrees, between the escapement vector and the x-axis of the device. The escapement vector is parallel to the base line of a row of text.Windows NT/2000/XP: When the graphics mode is set to GM_ADVANCED, you can specify the escapement angle of the string independently of the orientation angle of the string's characters.When the graphics mode is set to GM_COMPATIBLE, lfEscapement specifies both the escapement and orientation. You should set lfEscapement and lfOrientation to the same value.Windows 95/98/Me: The lfEscapement member specifies both the escapement and orientation. You should set lfEscapement and lfOrientation to the same value"	^escapement</body><body package="Fonts for Windows">faceName	"&lt;String&gt;A null-terminated string that specifies the typeface name of the font. The length of this string must not exceed 32 TCHARS, including the terminating NULL. The EnumFontFamiliesEx function can be used to enumerate the typeface names of all currently available fonts. If lfFaceName is an empty string, GDI uses the first font that matches the other specified attributes."	^faceName</body><body package="Fonts for Windows">family	"Bits 4 through 7 of the member specify the font family and can be one of the following values.FF_DECORATIVEFF_DONTCAREFF_MODERNFF_ROMANFF_SCRIPTFF_SWISSThe proper value can be obtained by using the Boolean OR operator to join one pitch constant with one family constant.Font families describe the look of a font in a general way. They are intended for specifying fonts when the exact typeface desired is not available. The values for font families are as follows.Value 	MeaningFF_DECORATIVE 	Novelty fonts. Old English is an example.FF_DONTCARE 	Use default font.FF_MODERN 	Fonts with constant stroke width (monospace), with or without serifs. Monospace fonts are usually modern. Pica, Elite, and CourierNew are examples.FF_ROMAN 	Fonts with variable stroke width (proportional) and with serifs. MS Serif is an example.FF_SCRIPT 	Fonts designed to look like handwriting. Script and Cursive are examples.FF_SWISS 	Fonts with variable stroke width (proportional) and without serifs. MS Sans Serif is an example."	^self pitchAndFamily bitAnd: 2r11110000</body><body package="Fonts for Windows">familyName	"&lt;String&gt;"	^Family nameAt: self family</body><body package="Fonts for Windows">height	"&lt;Integer&gt;Specifies the height, in logical units, of the font's character cell or character. The character height value (also known as the em height) is the character cell height value minus the internal-leading value. The font mapper interprets the value specified in lfHeight in the following manner.Value 	Meaning&gt; 0 	The font mapper transforms this value into device units and matches it against the cell height of the available fonts.0 	The font mapper uses a default height value when it searches for a match.&lt; 0 	The font mapper transforms this value into device units and matches its absolute value against the character height of the available fonts.For all height comparisons, the font mapper looks for the largest font that does not exceed the requested size.This mapping occurs when the font is used for the first time.For the MM_TEXT mapping mode, you can use the following formula to specify a height for a font with a specified point size:lfHeight = -MulDiv(PointSize, GetDeviceCaps(hDC, LOGPIXELSY), 72);"	^height</body><body package="Fonts for Windows">italic	"&lt;Integer&gt;Specifies an italic font if set to TRUE."	^italic</body><body package="Fonts for Windows">orientation	"&lt;Integer&gt;Specifies the angle, in tenths of degrees, between each character's base line and the x-axis of the device."	^orientation</body><body package="Fonts for Windows">outPrecision	"&lt;Integer&gt;Specifies the output precision. The output precision defines how closely the output must match the requested font's height, width, character orientation, escapement, pitch, and font type. It can be one of the following values.Value 	MeaningOUT_CHARACTER_PRECIS 	Not used.OUT_DEFAULT_PRECIS 	Specifies the default font mapper behavior.OUT_DEVICE_PRECIS 	Instructs the font mapper to choose a Device font when the system contains multiple fonts with the same name.OUT_OUTLINE_PRECIS 	Windows NT/2000/XP: This value instructs the font mapper to choose from TrueType and other outline-based fonts.OUT_PS_ONLY_PRECIS 	Windows 2000/XP: Instructs the font mapper to choose from only PostScript fonts. If there are no PostScript fonts installed in the system, the font mapper returns to default behavior.OUT_RASTER_PRECIS 	Instructs the font mapper to choose a raster font when the system contains multiple fonts with the same name.OUT_STRING_PRECIS 	This value is not used by the font mapper, but it is returned when raster fonts are enumerated.OUT_STROKE_PRECIS 	Windows NT/2000/XP: This value is not used by the font mapper, but it is returned when TrueType, other outline-based fonts, and vector fonts are enumerated.Windows 95:This value is used to map vector fonts, and is returned when TrueType or vector fonts are enumerated.OUT_TT_ONLY_PRECIS 	Instructs the font mapper to choose from only TrueType fonts. If there are no TrueType fonts installed in the system, the font mapper returns to default behavior.OUT_TT_PRECIS 	Instructs the font mapper to choose a TrueType font when the system contains multiple fonts with the same name.Applications can use the OUT_DEVICE_PRECIS, OUT_RASTER_PRECIS, OUT_TT_PRECIS, and OUT_PS_ONLY_PRECIS values to control how the font mapper chooses a font when the operating system contains more than one font with a specified name. For example, if an operating system contains a font named Symbol in raster and TrueType form, specifying OUT_TT_PRECIS forces the font mapper to choose the TrueType version. Specifying OUT_TT_ONLY_PRECIS forces the font mapper to choose a TrueType font, even if it must substitute a TrueType font of another name."	^outPrecision</body><body package="Fonts for Windows">outPrecisionName	^self class outPrecisionNameAt: self outPrecision</body><body package="Fonts for Windows">pitch	"&lt;Integer&gt;Specifies the pitch and family of the font. The two low-order bits specify the pitch of the font and can be one of the following values.0 DEFAULT_PITCH1 FIXED_PITCH2 VARIABLE_PITCH"	^self pitchAndFamily bitAnd: 2r11</body><body package="Fonts for Windows">pitchAndFamily	"&lt;Integer&gt;Specifies the pitch and family of the font. The two low-order bits specify the pitch of the font and can be one of the following values.0 DEFAULT_PITCH1 FIXED_PITCH2 VARIABLE_PITCHBits 4 through 7 of the member specify the font family and can be one of the following values.FF_DECORATIVEFF_DONTCAREFF_MODERNFF_ROMANFF_SCRIPTFF_SWISSThe proper value can be obtained by using the Boolean OR operator to join one pitch constant with one family constant.Font families describe the look of a font in a general way. They are intended for specifying fonts when the exact typeface desired is not available. The values for font families are as follows.Value 	MeaningFF_DECORATIVE 	Novelty fonts. Old English is an example.FF_DONTCARE 	Use default font.FF_MODERN 	Fonts with constant stroke width (monospace), with or without serifs. Monospace fonts are usually modern. Pica, Elite, and CourierNew are examples.FF_ROMAN 	Fonts with variable stroke width (proportional) and with serifs. MS Serif is an example.FF_SCRIPT 	Fonts designed to look like handwriting. Script and Cursive are examples.FF_SWISS 	Fonts with variable stroke width (proportional) and without serifs. MS Sans Serif is an example."	^pitchAndFamily</body><body package="Fonts for Windows">pitchName	"&lt;String&gt;"	^Pitch nameAt: self pitch</body><body package="Fonts for Windows">quality	"&lt;Integer&gt;Specifies the output quality. The output quality defines how carefully the graphics device interface (GDI) must attempt to match the logical-font attributes to those of an actual physical font. It can be one of the following values.Value 	MeaningANTIALIASED_QUALITY 	Windows NT 4.0 and later: Font is always antialiased if the font supports it and the size of the font is not too small or too large.Windows 95 Plus!, Windows 98/Me: The display must greater than 8-bit color, it must be a single plane device, it cannot be a palette display, and it cannot be in a multiple display monitor setup. In addition, you must select a TrueType font into a screen DC prior to using it in a DIBSection, otherwise antialiasing does not occur.CLEARTYPE_QUALITY 	Windows XP: If set, text is rendered (when possible) using ClearType antialiasing method. See Remarks for more information.DEFAULT_QUALITY 	Appearance of the font does not matter.DRAFT_QUALITY 	Appearance of the font is less important than when PROOF_QUALITY is used. For GDI raster fonts, scaling is enabled, which means that more font sizes are available, but the quality may be lower. Bold, italic, underline, and strikeout fonts are synthesized if necessary.NONANTIALIASED_QUALITY 	Windows 95/98/Me, Windows NT 4.0 and later: Font is never antialiased.PROOF_QUALITY 	Character quality of the font is more important than exact matching of the logical-font attributes. For GDI raster fonts, scaling is disabled and the font closest in size is chosen. Although the chosen font size may not be mapped exactly when PROOF_QUALITY is used, the quality of the font is high and there is no distortion of appearance. Bold, italic, underline, and strikeout fonts are synthesized if necessary.If neither ANTIALIASED_QUALITY nor NONANTIALIASED_QUALITY is selected, the font is antialiased only if the user chooses smooth screen fonts in Control Panel. "	^quality</body><body package="Fonts for Windows">qualityName	^self class qualityNameAt: self quality</body><body package="Fonts for Windows">strikeOut	"&lt;Integer&gt;Specifies a strikeout font if set to TRUE."	^strikeOut</body><body package="Fonts for Windows">underline	"&lt;Integer&gt;Specifies an underlined font if set to TRUE"	^underline</body><body package="Fonts for Windows">vmEncodingName	"&lt;String&gt;	encoding name as done in the VM (Version Id: #[62 41 62 96 75 0 0 0 62 41 62 96]) in ntfont.c"	self charSet = 0 ifTrue: [		^'ansi'].	self charSet = 2 ifTrue: [		^'symbol'].	self charSet = 128 ifTrue: [		^'kanji'].	self charSet = 255 ifTrue: [		^'oem'].	^'special' , self charSet printString</body><body package="Fonts for Windows">vwFontnameType: aType	| wst h |	h := aType = 1		ifTrue: [self height]		ifFalse: [0].	wst := String new writeStream.	wst		nextPutAll: self faceName;		nextPut: $~;		print: h;		nextPut: $~;		print: self weight;		nextPut: $~;		print: self italic;		nextPut: $~;		print: self underline;		nextPut: $~;		print: self strikeOut;		nextPut: $~;		nextPutAll: self vmEncodingName;		nextPut: $~;		print: aType.	^wst contents</body><body package="Fonts for Windows">weight	"&lt;Integer&gt;Specifies the weight of the font in the range 0 through 1000. For example, 400 is normal and 700 is bold. If this value is zero, a default weight is used.The following values are defined for convenience.Value 	WeightFW_DONTCARE 	0FW_THIN 	100FW_EXTRALIGHT 	200FW_ULTRALIGHT 	200FW_LIGHT 	300FW_NORMAL 	400FW_REGULAR 	400FW_MEDIUM 	500FW_SEMIBOLD 	600FW_DEMIBOLD 	600FW_BOLD 	700FW_EXTRABOLD 	800FW_ULTRABOLD 	800FW_HEAVY 	900FW_BLACK 	900"	^weight</body><body package="Fonts for Windows">width	"&lt;Integer&gt;Specifies the average width, in logical units, of characters in the font. If lfWidth is zero, the aspect ratio of the device is matched against the digitization aspect ratio of the available fonts to find the closest match, determined by the absolute value of the difference."	^width</body></methods><methods><class-id>WindowsFonts.Logfont</class-id> <category>testing</category><body package="Fonts for Windows">isDecorative	^self family = Family decorative value</body><body package="Fonts for Windows">isDefaultPitch	^self pitch = Pitch default value</body><body package="Fonts for Windows">isDontCare	^self family = Family dontCare value</body><body package="Fonts for Windows">isFixedPitch	^self pitch = Pitch fixed value</body><body package="Fonts for Windows">isItalic	^self italic isZero not</body><body package="Fonts for Windows">isModern	^self family = Family modern value</body><body package="Fonts for Windows">isRoman	^self family = Family roman value</body><body package="Fonts for Windows">isScript	^self family = Family script value</body><body package="Fonts for Windows">isStrikeOut	^self strikeOut isZero not</body><body package="Fonts for Windows">isSwiss	^self family = Family swiss value</body><body package="Fonts for Windows">isUnderline	^self underline isZero not</body><body package="Fonts for Windows">isVariablePitch	^self pitch = Pitch variable value</body></methods><methods><class-id>WindowsFonts.Logfont</class-id> <category>initialize-release</category><body package="Fonts for Windows">initializeFrom: aLOGFONT	self		initializeHeight: (aLOGFONT memberAt: #lfHeight)		width: (aLOGFONT memberAt: #lfWidth)		escapement: (aLOGFONT memberAt: #lfEscapement)		orientation: (aLOGFONT memberAt: #lfOrientation)		weight: (aLOGFONT memberAt: #lfWeight)		italic: (aLOGFONT memberAt: #lfItalic)		underline: (aLOGFONT memberAt: #lfUnderline)		strikeOut: (aLOGFONT memberAt: #lfStrikeOut)		charSet: (aLOGFONT memberAt: #lfCharSet)		outPrecision: (aLOGFONT memberAt: #lfOutPrecision)		clipPrecision: (aLOGFONT memberAt: #lfClipPrecision)		quality: (aLOGFONT memberAt: #lfQuality)		pitchAndFamily: (aLOGFONT memberAt: #lfPitchAndFamily)		faceName: (aLOGFONT memberAt: #lfFaceName) copyUnicodeStringFromHeap</body><body package="Fonts for Windows">initializeHeight: heightInteger width: widthInteger escapement: escapementInteger orientation: orientationInteger weight: weightInteger italic: italicInteger underline: underlineInteger strikeOut: strikeOutInteger charSet: charSetInteger outPrecision: outPrecisionInteger clipPrecision: clipPrecisionInteger quality: qualityInteger pitchAndFamily: pitchAndFamilyInteger faceName: faceNameString	height := heightInteger.	width := widthInteger.	escapement := escapementInteger.	orientation := orientationInteger.	weight := weightInteger.	italic := italicInteger.	underline := underlineInteger.	strikeOut := strikeOutInteger.	charSet := charSetInteger.	outPrecision := outPrecisionInteger.	clipPrecision := clipPrecisionInteger.	quality := qualityInteger.	pitchAndFamily := pitchAndFamilyInteger.	faceName := faceNameString.	self beImmutable</body></methods><methods><class-id>WindowsFonts.Logfont</class-id> <category>converting</category><body package="Fonts for Windows">asLogfont	"&lt;Logfont&gt;	as base structure used for CreateFontIndirect"	^Logfont		height: self height		width: self width		escapement: self escapement		orientation: self orientation		weight: self weight		italic: self italic		underline: self underline		strikeOut: self strikeOut		charSet: self charSet		outPrecision: self class outDefaultPrecis		clipPrecision: self class clipDefaultPrecis		quality: self quality		pitchAndFamily: self pitchAndFamily		faceName: self faceName</body><body package="Fonts for Windows">asLogfontSized: aPixelSize	"&lt;Logfont&gt;	as base structure used for CreateFontIndirect"	^Logfont		height: aPixelSize		width: 0		escapement: self escapement		orientation: self orientation		weight: self weight		italic: self italic		underline: self underline		strikeOut: self strikeOut		charSet: self charSet		outPrecision: self class outDefaultPrecis		clipPrecision: self class clipDefaultPrecis		quality: self quality		pitchAndFamily: self pitchAndFamily		faceName: self faceName</body></methods><methods><class-id>WindowsFonts.Logfont</class-id> <category>printing</category><body package="Fonts for Windows">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'height' value: self height).	args add: (printer constant: 'width' value: self width).	args add: (printer constant: 'escapement' value: self escapement).	args add: (printer constant: 'orientation' value: self orientation).	args add: (printer constant: 'weight' value: self weight).	args add: (printer constant: 'italic' value: self italic).	args add: (printer constant: 'underline' value: self underline).	args add: (printer constant: 'strikeOut' value: self strikeOut).	args add: (printer constant: 'charSet' value: self charSet).	args add: (printer constant: 'outPrecision' value: self outPrecision).	args add: (printer constant: 'clipPrecision' value: self clipPrecision).	args add: (printer constant: 'quality' value: self quality).	args add: (printer constant: 'pitchAndFamily' value: self pitchAndFamily).	args add: (printer constant: 'faceName' value: self faceName).	^printer printvalue: self arguments: args</body></methods><methods><class-id>WindowsFonts.Logfont class</class-id> <category>constants</category><body package="Fonts for Windows">antialiasedQuality	"Windows NT 4.0 and later: Font is always antialiased if the font supports it and the size of the font is not too small or too large.Windows 95 Plus!, Windows 98/Me: The display must greater than 8-bit color, it must be a single plane device, it cannot be a palette display, and it cannot be in a multiple display monitor setup. In addition, you must select a TrueType font into a screen DC prior to using it in a DIBSection, otherwise antialiasing does not occur"	^4</body><body package="Fonts for Windows">clearTypeNaturalQuality	"???"	^6</body><body package="Fonts for Windows">clearTypeQuality	"Windows XP: If set, text is rendered (when possible) using ClearType antialiasing method. See Remarks for more information"	^5</body><body package="Fonts for Windows">clipCharacterPrecis	"Not used"	^1</body><body package="Fonts for Windows">clipDFADisable	"Windows XP SP1: Turns off font association for the font. Note that this flag is not guaranteed to have any effect on any platform after Windows Server 2003"	^4 &lt;&lt; 4</body><body package="Fonts for Windows">clipDefaultPrecis	"Specifies default clipping behavior"	^0</body><body package="Fonts for Windows">clipEmbedded	"You must specify this flag to use an embedded read-only font"	^8 &lt;&lt; 4</body><body package="Fonts for Windows">clipLHAngles	"When this value is used, the rotation for all fonts depends on whether the orientation of the coordinate system is left-handed or right-handed.If not used, device fonts always rotate counterclockwise, but the rotation of other fonts is dependent on the orientation of the coordinate system"	^1 &lt;&lt; 4</body><body package="Fonts for Windows">clipStrokePrecis	"Not used by the font mapper, but is returned when raster, vector, or TrueType fonts are enumerated.Windows NT/2000/XP: For compatibility, this value is always returned when enumerating fonts"	^2</body><body package="Fonts for Windows">clipTTAlways	"Not used"	^2 &lt;&lt; 4</body><body package="Fonts for Windows">defaultQuality	"Appearance of the font does not matter"	^0</body><body package="Fonts for Windows">draftQuality	"Appearance of the font is less important than when PROOF_QUALITY is used. For GDI raster fonts, scaling is enabled, which means that more font sizes are available, but the quality may be lower. Bold, italic, underline, and strikeout fonts are synthesized if necessary"	^1</body><body package="Fonts for Windows">monoFont	^8</body><body package="Fonts for Windows">nonAntialiasedQuality	"Windows 95/98/Me, Windows NT 4.0 and later: Font is never antialiased"	^3</body><body package="Fonts for Windows">outCharacterPrecis	"Not used"	^2</body><body package="Fonts for Windows">outDefaultPrecis	"Specifies the default font mapper behavior"	^0</body><body package="Fonts for Windows">outDevicePrecis	"Instructs the font mapper to choose a Device font when the system contains multiple fonts with the same name"	^5</body><body package="Fonts for Windows">outOutlinePrecis	"Windows NT/2000/XP: This value instructs the font mapper to choose from TrueType and other outline-based fonts"	^8</body><body package="Fonts for Windows">outPSOnlyPrecis	"Windows 2000/XP: Instructs the font mapper to choose from only PostScript fonts. If there are no PostScript fonts installed in the system, the font mapper returns to default behavior"	^10</body><body package="Fonts for Windows">outRasterPrecis	"Instructs the font mapper to choose a raster font when the system contains multiple fonts with the same name"	^6</body><body package="Fonts for Windows">outScreenOutlinePrecis	"???"	^9</body><body package="Fonts for Windows">outStringPrecis	"This value is not used by the font mapper, but it is returned when raster fonts are enumerated"	^1</body><body package="Fonts for Windows">outStrokePrecis	"Windows NT/2000/XP: This value is not used by the font mapper, but it is returned when TrueType, other outline-based fonts, and vector fonts are enumerated.Windows 95:This value is used to map vector fonts, and is returned when TrueType or vector fonts are enumerated"	^3</body><body package="Fonts for Windows">outTTOnlyPrecis	"Instructs the font mapper to choose from only TrueType fonts. If there are no TrueType fonts installed in the system, the font mapper returns to default behavior"	^7</body><body package="Fonts for Windows">outTTPrecis	"Instructs the font mapper to choose a TrueType font when the system contains multiple fonts with the same name"	^4</body><body package="Fonts for Windows">proofQuality	"Character quality of the font is more important than exact matching of the logical-font attributes. For GDI raster fonts, scaling is disabled and the font closest in size is chosen. Although the chosen font size may not be mapped exactly when PROOF_QUALITY is used, the quality of the font is high and there is no distortion of appearance. Bold, italic, underline, and strikeout fonts are synthesized if necessary"	^2</body></methods><methods><class-id>WindowsFonts.Logfont class</class-id> <category>accessing</category><body package="Fonts for Windows">clipPrecisionNames	| dict |	dict := Dictionary new.	dict at: self clipDefaultPrecis put: 'ClipDefaultPrecis'.	dict at: self clipCharacterPrecis put: 'ClipCharacterPrecis'.	dict at: self clipStrokePrecis put: 'ClipStrokePrecis'.	dict at: self clipLHAngles put: 'ClipLHAngles'.	dict at: self clipTTAlways put: 'ClipTTAlways'.	dict at: self clipDFADisable put: 'ClipDFADisable'.	dict at: self clipEmbedded put: 'ClipEmbedded'.	^dict</body><body package="Fonts for Windows">clipPrecisionNamesIn: aClipPrecision	| names precis |	names := OrderedCollection new.	precis := aClipPrecision bitAnd: 16rF.	precis = self clipDefaultPrecis		ifTrue: [		names add: (self clipPrecisionNames at: self clipDefaultPrecis)]		ifFalse: [		(precis bitAnd: self clipCharacterPrecis) isZero not ifTrue: [			names add: (self clipPrecisionNames at: self clipCharacterPrecis)].		(precis bitAnd: self clipStrokePrecis) isZero not ifTrue: [			names add: (self clipPrecisionNames at: self clipStrokePrecis)]].	(aClipPrecision bitAnd: self clipLHAngles) isZero not ifTrue: [		names add: (self clipPrecisionNames at: self clipLHAngles)].	(aClipPrecision bitAnd: self clipTTAlways) isZero not ifTrue: [		names add: (self clipPrecisionNames at: self clipTTAlways)].	(aClipPrecision bitAnd: self clipDFADisable) isZero not ifTrue: [		names add: (self clipPrecisionNames at: self clipDFADisable)].	(aClipPrecision bitAnd: self clipEmbedded) isZero not ifTrue: [		names add: (self clipPrecisionNames at: self clipEmbedded)].	^names</body><body package="Fonts for Windows">outPrecisionNameAt: anOutPrecision	^self outPrecisionNames at: anOutPrecision</body><body package="Fonts for Windows">outPrecisionNames	| dict |	dict := Dictionary new.	dict at: self outDefaultPrecis put: 'DefaultPrecis'.	dict at: self outStringPrecis put: 'StringPrecis'.	dict at: self outCharacterPrecis put: 'CharacterPrecis'.	dict at: self outStrokePrecis put: 'StrokePrecis'.	dict at: self outTTPrecis put: 'TTPrecis'.	dict at: self outDevicePrecis put: 'DevicePrecis'.	dict at: self outRasterPrecis put: 'RasterPrecis'.	dict at: self outTTOnlyPrecis put: 'TTOnlyPrecis'.	dict at: self outOutlinePrecis put: 'OutlinePrecis'.	dict at: self outScreenOutlinePrecis put: 'ScreenOutlinePrecis'.	dict at: self outPSOnlyPrecis put: 'PSOnlyPrecis'.	^dict</body><body package="Fonts for Windows">qualityNameAt: aQuality	"&lt;String&gt;"	^self qualityNames at: aQuality</body><body package="Fonts for Windows">qualityNames	| dict |	dict := Dictionary new.	dict at: self defaultQuality put: 'DefaultQuality'.	dict at: self draftQuality put: 'DraftQuality'.	dict at: self proofQuality put: 'ProofQuality'.	dict at: self nonAntialiasedQuality put: 'NonAntialiasedQuality'.	dict at: self antialiasedQuality put: 'AntialiasedQuality'.	dict at: self clearTypeQuality put: 'ClearTypeQuality'.	dict at: self clearTypeNaturalQuality put: 'ClearTypeNaturalQuality'.	^dict</body></methods><methods><class-id>WindowsFonts.Logfont class</class-id> <category>test instances</category><body package="Fonts for Windows">example	^Logfont		height: 1		width: 1		escapement: 1		orientation: 1		weight: 1		italic: 1		underline: 1		strikeOut: 1		charSet: 1		outPrecision: 1		clipPrecision: 1		quality: 1		pitchAndFamily: 1		faceName: 'a string'</body></methods><methods><class-id>WindowsFonts.Logfont class</class-id> <category>instance creation</category><body package="Fonts for Windows">height: heightInteger width: widthInteger escapement: escapementInteger orientation: orientationInteger weight: weightInteger italic: italicInteger underline: underlineInteger strikeOut: strikeOutInteger charSet: charSetInteger outPrecision: outPrecisionInteger clipPrecision: clipPrecisionInteger quality: qualityInteger pitchAndFamily: pitchAndFamilyInteger faceName: faceNameString	| inst |	inst := self new.	inst		initializeHeight: heightInteger		width: widthInteger		escapement: escapementInteger		orientation: orientationInteger		weight: weightInteger		italic: italicInteger		underline: underlineInteger		strikeOut: strikeOutInteger		charSet: charSetInteger		outPrecision: outPrecisionInteger		clipPrecision: clipPrecisionInteger		quality: qualityInteger		pitchAndFamily: pitchAndFamilyInteger		faceName: faceNameString.	^inst</body><body package="Fonts for Windows">newFrom: aLOGFONT	| inst |	inst := self new.	inst initializeFrom: aLOGFONT.	^inst</body></methods><methods><class-id>WindowsFonts.EnumLogfontEx</class-id> <category>accessing</category><body package="Fonts for Windows">fullName	"&lt;String&gt;	Specifies a null-terminated string specifying the unique name of the font. For example, ABC Font Company TrueType Bold Italic Sans Serif. Windows 95/98/Me: Specifies the unique name of a TrueType font. For other type fonts, see explanation in elfLogFont."	^fullName</body><body package="Fonts for Windows">script	"&lt;String&gt;	Specifies a null-terminated string specifying the script, that is, the character set, of the font. For example, Cyrillic."	^script</body><body package="Fonts for Windows">style	"&lt;String&gt;	Specifies a null-terminated string specifying the style of the font. For example, Bold Italic."	^style</body></methods><methods><class-id>WindowsFonts.EnumLogfontEx</class-id> <category>initialize-release</category><body package="Fonts for Windows">initializeFrom: aENUMLOGFONTEX	| aLOGFONT |	aLOGFONT := aENUMLOGFONTEX memberAt: #elfLogFont.	self		initializeHeight: (aLOGFONT memberAt: #lfHeight)		width: (aLOGFONT memberAt: #lfWidth)		escapement: (aLOGFONT memberAt: #lfEscapement)		orientation: (aLOGFONT memberAt: #lfOrientation)		weight: (aLOGFONT memberAt: #lfWeight)		italic: (aLOGFONT memberAt: #lfItalic)		underline: (aLOGFONT memberAt: #lfUnderline)		strikeOut: (aLOGFONT memberAt: #lfStrikeOut)		charSet: (aLOGFONT memberAt: #lfCharSet)		outPrecision: (aLOGFONT memberAt: #lfOutPrecision)		clipPrecision: (aLOGFONT memberAt: #lfClipPrecision)		quality: (aLOGFONT memberAt: #lfQuality)		pitchAndFamily: (aLOGFONT memberAt: #lfPitchAndFamily)		faceName: (aLOGFONT memberAt: #lfFaceName) copyUnicodeStringFromHeap		fullName: (aENUMLOGFONTEX memberAt: #elfFullName) copyUnicodeStringFromHeap		style: (aENUMLOGFONTEX memberAt: #elfStyle) copyUnicodeStringFromHeap		script: (aENUMLOGFONTEX memberAt: #elfScript) copyUnicodeStringFromHeap</body><body package="Fonts for Windows">initializeHeight: heightInteger width: widthInteger escapement: escapementInteger orientation: orientationInteger weight: weightInteger italic: italicInteger underline: underlineInteger strikeOut: strikeOutInteger charSet: charSetInteger outPrecision: outPrecisionInteger clipPrecision: clipPrecisionInteger quality: qualityInteger pitchAndFamily: pitchAndFamilyInteger faceName: faceNameString fullName: fullNameString style: styleString script: scriptString	height := heightInteger.	width := widthInteger.	escapement := escapementInteger.	orientation := orientationInteger.	weight := weightInteger.	italic := italicInteger.	underline := underlineInteger.	strikeOut := strikeOutInteger.	charSet := charSetInteger.	outPrecision := outPrecisionInteger.	clipPrecision := clipPrecisionInteger.	quality := qualityInteger.	pitchAndFamily := pitchAndFamilyInteger.	faceName := faceNameString.	fullName := fullNameString.	style := styleString.	script := scriptString.	self beImmutable</body></methods><methods><class-id>WindowsFonts.EnumLogfontEx</class-id> <category>printing</category><body package="Fonts for Windows">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'height' value: self height).	args add: (printer constant: 'width' value: self width).	args add: (printer constant: 'escapement' value: self escapement).	args add: (printer constant: 'orientation' value: self orientation).	args add: (printer constant: 'weight' value: self weight).	args add: (printer constant: 'italic' value: self italic).	args add: (printer constant: 'underline' value: self underline).	args add: (printer constant: 'strikeOut' value: self strikeOut).	args add: (printer constant: 'charSet' value: self charSet).	args add: (printer constant: 'outPrecision' value: self outPrecision).	args add: (printer constant: 'clipPrecision' value: self clipPrecision).	args add: (printer constant: 'quality' value: self quality).	args add: (printer constant: 'pitchAndFamily' value: self pitchAndFamily).	args add: (printer constant: 'faceName' value: self faceName).	args add: (printer constant: 'fullName' value: self fullName).	args add: (printer constant: 'style' value: self style).	args add: (printer constant: 'script' value: self script).	^printer printvalue: self arguments: args</body></methods><methods><class-id>WindowsFonts.EnumLogfontEx class</class-id> <category>test instances</category><body package="Fonts for Windows">example	^EnumLogfontEx		height: 1		width: 1		escapement: 1		orientation: 1		weight: 1		italic: 1		underline: 1		strikeOut: 1		charSet: 1		outPrecision: 1		clipPrecision: 1		quality: 1		pitchAndFamily: 1		faceName: 'a string'		fullName: 'a string'		style: 'a string'		script: 'a string'</body></methods><methods><class-id>WindowsFonts.EnumLogfontEx class</class-id> <category>instance creation</category><body package="Fonts for Windows">height: heightInteger width: widthInteger escapement: escapementInteger orientation: orientationInteger weight: weightInteger italic: italicInteger underline: underlineInteger strikeOut: strikeOutInteger charSet: charSetInteger outPrecision: outPrecisionInteger clipPrecision: clipPrecisionInteger quality: qualityInteger pitchAndFamily: pitchAndFamilyInteger faceName: faceNameString fullName: fullNameString style: styleString script: scriptString	| inst |	inst := self new.	inst		initializeHeight: heightInteger		width: widthInteger		escapement: escapementInteger		orientation: orientationInteger		weight: weightInteger		italic: italicInteger		underline: underlineInteger		strikeOut: strikeOutInteger		charSet: charSetInteger		outPrecision: outPrecisionInteger		clipPrecision: clipPrecisionInteger		quality: qualityInteger		pitchAndFamily: pitchAndFamilyInteger		faceName: faceNameString		fullName: fullNameString		style: styleString		script: scriptString.	^inst</body></methods><methods><class-id>WindowsFonts.EnumLogfontExDv</class-id> <category>accessing</category><body package="Fonts for Windows">designVector	"&lt;Array&gt;"	^designVector ifNil: [#()]</body></methods><methods><class-id>WindowsFonts.EnumLogfontExDv</class-id> <category>initialize-release</category><body package="Fonts for Windows">designVectorFrom: aDESIGNVECTOR	"&lt;SequenceableCollection of: AxisInfo&gt;"	| axis numAxis |	numAxis := aDESIGNVECTOR memberAt: #dvNumAxes.	axis := OrderedCollection new: numAxis.	1 to: numAxis do: [:i |		axis add: (AxisInfo newFrom: ((aDESIGNVECTOR memberAt: #dvValues) at: i))].	^axis</body><body package="Fonts for Windows">initializeFrom: aENUMLOGFONTEXDV	| aLOGFONT aENUMLOGFONTEX |	aENUMLOGFONTEX := aENUMLOGFONTEXDV memberAt: #elfEnumLogfontEx.	aLOGFONT := aENUMLOGFONTEX memberAt: #elfLogFont.	self		initializeHeight: (aLOGFONT memberAt: #lfHeight)		width: (aLOGFONT memberAt: #lfWidth)		escapement: (aLOGFONT memberAt: #lfEscapement)		orientation: (aLOGFONT memberAt: #lfOrientation)		weight: (aLOGFONT memberAt: #lfWeight)		italic: (aLOGFONT memberAt: #lfItalic)		underline: (aLOGFONT memberAt: #lfUnderline)		strikeOut: (aLOGFONT memberAt: #lfStrikeOut)		charSet: (aLOGFONT memberAt: #lfCharSet)		outPrecision: (aLOGFONT memberAt: #lfOutPrecision)		clipPrecision: (aLOGFONT memberAt: #lfClipPrecision)		quality: (aLOGFONT memberAt: #lfQuality)		pitchAndFamily: (aLOGFONT memberAt: #lfPitchAndFamily)		faceName: (aLOGFONT memberAt: #lfFaceName) copyUnicodeStringFromHeap		fullName: (aENUMLOGFONTEX memberAt: #elfFullName) copyUnicodeStringFromHeap		style: (aENUMLOGFONTEX memberAt: #elfStyle) copyUnicodeStringFromHeap		script: (aENUMLOGFONTEX memberAt: #elfScript) copyUnicodeStringFromHeap		designVector: (self designVectorFrom: (aENUMLOGFONTEXDV memberAt: #elfDesignVector))</body><body package="Fonts for Windows">initializeHeight: heightInteger width: widthInteger escapement: escapementInteger orientation: orientationInteger weight: weightInteger italic: italicInteger underline: underlineInteger strikeOut: strikeOutInteger charSet: charSetInteger outPrecision: outPrecisionInteger clipPrecision: clipPrecisionInteger quality: qualityInteger pitchAndFamily: pitchAndFamilyInteger faceName: faceNameString fullName: fullNameString style: styleString script: scriptString designVector: designVectorArray	height := heightInteger.	width := widthInteger.	escapement := escapementInteger.	orientation := orientationInteger.	weight := weightInteger.	italic := italicInteger.	underline := underlineInteger.	strikeOut := strikeOutInteger.	charSet := charSetInteger.	outPrecision := outPrecisionInteger.	clipPrecision := clipPrecisionInteger.	quality := qualityInteger.	pitchAndFamily := pitchAndFamilyInteger.	faceName := faceNameString.	fullName := fullNameString.	style := styleString.	script := scriptString.	(designVectorArray notNil and: [	designVectorArray notEmpty]) ifTrue: [			designVector := (Array withAll: designVectorArray) beImmutable].	self beImmutable</body></methods><methods><class-id>WindowsFonts.EnumLogfontExDv</class-id> <category>printing</category><body package="Fonts for Windows">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'height' value: self height).	args add: (printer constant: 'width' value: self width).	args add: (printer constant: 'escapement' value: self escapement).	args add: (printer constant: 'orientation' value: self orientation).	args add: (printer constant: 'weight' value: self weight).	args add: (printer constant: 'italic' value: self italic).	args add: (printer constant: 'underline' value: self underline).	args add: (printer constant: 'strikeOut' value: self strikeOut).	args add: (printer constant: 'charSet' value: self charSet).	args add: (printer constant: 'outPrecision' value: self outPrecision).	args add: (printer constant: 'clipPrecision' value: self clipPrecision).	args add: (printer constant: 'quality' value: self quality).	args add: (printer constant: 'pitchAndFamily' value: self pitchAndFamily).	args add: (printer constant: 'faceName' value: self faceName).	args add: (printer constant: 'fullName' value: self fullName).	args add: (printer constant: 'style' value: self style).	args add: (printer constant: 'script' value: self script).	args add: (printer array: 'designVector' value: self designVector).	^printer printvalue: self arguments: args</body></methods><methods><class-id>WindowsFonts.EnumLogfontExDv class</class-id> <category>instance creation</category><body package="Fonts for Windows">height: heightInteger width: widthInteger escapement: escapementInteger orientation: orientationInteger weight: weightInteger italic: italicInteger underline: underlineInteger strikeOut: strikeOutInteger charSet: charSetInteger outPrecision: outPrecisionInteger clipPrecision: clipPrecisionInteger quality: qualityInteger pitchAndFamily: pitchAndFamilyInteger faceName: faceNameString fullName: fullNameString style: styleString script: scriptString designVector: designVectorArray	| inst |	inst := self new.	inst		initializeHeight: heightInteger		width: widthInteger		escapement: escapementInteger		orientation: orientationInteger		weight: weightInteger		italic: italicInteger		underline: underlineInteger		strikeOut: strikeOutInteger		charSet: charSetInteger		outPrecision: outPrecisionInteger		clipPrecision: clipPrecisionInteger		quality: qualityInteger		pitchAndFamily: pitchAndFamilyInteger		faceName: faceNameString		fullName: fullNameString		style: styleString		script: scriptString		designVector: designVectorArray.	^inst</body></methods><methods><class-id>WindowsFonts.EnumLogfontExDv class</class-id> <category>test instances</category><body package="Fonts for Windows">example	^EnumLogfontExDv		height: 1		width: 1		escapement: 1		orientation: 1		weight: 1		italic: 1		underline: 1		strikeOut: 1		charSet: 1		outPrecision: 1		clipPrecision: 1		quality: 1		pitchAndFamily: 1		faceName: 'a string'		fullName: 'a string'		style: 'a string'		script: 'a string'		designVector: #(1 #a $x 'name')</body></methods><methods><class-id>WindowsFonts.EnumLogfontExDv class</class-id> <category>instance creation optional</category><body package="Fonts for Windows">height: heightInteger width: widthInteger escapement: escapementInteger orientation: orientationInteger weight: weightInteger italic: italicInteger underline: underlineInteger strikeOut: strikeOutInteger charSet: charSetInteger outPrecision: outPrecisionInteger clipPrecision: clipPrecisionInteger quality: qualityInteger pitchAndFamily: pitchAndFamilyInteger faceName: faceNameString fullName: fullNameString style: styleString script: scriptString	| inst |	inst := self new.	inst		initializeHeight: heightInteger		width: widthInteger		escapement: escapementInteger		orientation: orientationInteger		weight: weightInteger		italic: italicInteger		underline: underlineInteger		strikeOut: strikeOutInteger		charSet: charSetInteger		outPrecision: outPrecisionInteger		clipPrecision: clipPrecisionInteger		quality: qualityInteger		pitchAndFamily: pitchAndFamilyInteger		faceName: faceNameString		fullName: fullNameString		style: styleString		script: scriptString		designVector: nil.	^inst</body></methods><methods><class-id>WindowsFonts.NewTextMetricEx</class-id> <category>testing</category><body package="Fonts for Windows">isDevice	^self newTextMetric iisDevice</body><body package="Fonts for Windows">isFixedPitch	^self newTextMetric isFixedPitch</body><body package="Fonts for Windows">isItalic	^self newTextMetric isItalic</body><body package="Fonts for Windows">isMultipleMaster	^self newTextMetric isMultipleMaster</body><body package="Fonts for Windows">isStruckOut	^self newTextMetric isStruckOut</body><body package="Fonts for Windows">isTrueType	^self newTextMetric isTrueType</body><body package="Fonts for Windows">isUnderlined	^self newTextMetric isUnderlined</body><body package="Fonts for Windows">isVariablePitch	^self newTextMetric isVariablePitch</body><body package="Fonts for Windows">isVector	^self newTextMetric isVector</body></methods><methods><class-id>WindowsFonts.NewTextMetricEx</class-id> <category>accessing</category><body package="Fonts for Windows">ascent	^self newTextMetric ascent</body><body package="Fonts for Windows">aveCharWidth	^self newTextMetric aveCharWidth</body><body package="Fonts for Windows">breakChar	^self newTextMetric breakChar</body><body package="Fonts for Windows">charSet	^self newTextMetric charSet</body><body package="Fonts for Windows">charSetName	^self newTextMetric charSetName</body><body package="Fonts for Windows">defaultChar	^self newTextMetric defaultChar</body><body package="Fonts for Windows">descent	^self newTextMetric descent</body><body package="Fonts for Windows">digitizedAspectX	^self newTextMetric digitizedAspectX</body><body package="Fonts for Windows">digitizedAspectY	^self newTextMetric digitizedAspectY</body><body package="Fonts for Windows">externalLeading	^self newTextMetric externalLeading</body><body package="Fonts for Windows">family	^self newTextMetric family</body><body package="Fonts for Windows">familyName	^self newTextMetric familyName</body><body package="Fonts for Windows">firstChar	^self newTextMetric firstChar</body><body package="Fonts for Windows">fontSig	"&lt;FontSignature&gt;"	^fontSig</body><body package="Fonts for Windows">height	^self newTextMetric height</body><body package="Fonts for Windows">internalLeading	^self newTextMetric internalLeading</body><body package="Fonts for Windows">italic	^self newTextMetric italic</body><body package="Fonts for Windows">lastChar	^self newTextMetric lastChar</body><body package="Fonts for Windows">maxCharWidth	^self newTextMetric maxCharWidth</body><body package="Fonts for Windows">newTextMetric	"&lt;NewTextMetric&gt;"	^newTextMetric</body><body package="Fonts for Windows">overhang	^self newTextMetric overhang</body><body package="Fonts for Windows">pitch	^self newTextMetric pitch</body><body package="Fonts for Windows">pitchAndFamily	^self newTextMetric pitchAndFamily</body><body package="Fonts for Windows">pitchNames	^self newTextMetric pitchNames</body><body package="Fonts for Windows">pitchNamesString	^self newTextMetric pitchNamesString</body><body package="Fonts for Windows">struckOut	^self newTextMetric struckOut</body><body package="Fonts for Windows">underlined	^self newTextMetric underlined</body><body package="Fonts for Windows">weight	"&lt;Integer&gt;"	^self newTextMetric weight</body></methods><methods><class-id>WindowsFonts.NewTextMetricEx</class-id> <category>printing</category><body package="Fonts for Windows">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'newTextMetric' value: self newTextMetric).	args add: (printer constant: 'fontSig' value: self fontSig).	^printer printvalue: self arguments: args</body></methods><methods><class-id>WindowsFonts.NewTextMetricEx</class-id> <category>initialize-release</category><body package="Fonts for Windows">initializeFrom: aNEWTEXTMETRICEX	self		initializeNewTextMetric: (NewTextMetric newFrom: (aNEWTEXTMETRICEX memberAt: #ntmTm))		fontSig: (FontSignature newFrom: (aNEWTEXTMETRICEX memberAt: #ntmFontSig))</body><body package="Fonts for Windows">initializeNewTextMetric: newTextMetricNewTextMetric fontSig: fontSigFontSignature	newTextMetric := newTextMetricNewTextMetric.	fontSig := fontSigFontSignature.	self beImmutable</body></methods><methods><class-id>WindowsFonts.NewTextMetricEx class</class-id> <category>instance creation</category><body package="Fonts for Windows">newFrom: aNEWTEXTMETRICEX	| inst |	inst := self new.	inst initializeFrom: aNEWTEXTMETRICEX.	^inst</body><body package="Fonts for Windows">newTextMetric: newTextMetricNewTextMetric fontSig: fontSigFontSignature	| inst |	inst := self new.	inst initializeNewTextMetric: newTextMetricNewTextMetric fontSig: fontSigFontSignature.	^inst</body></methods><methods><class-id>WindowsFonts.NewTextMetricEx class</class-id> <category>test instances</category><body package="Fonts for Windows">example	^NewTextMetricEx		newTextMetric: (NewTextMetric			height: 1			ascent: 1			descent: 1			internalLeading: 1			externalLeading: 1			aveCharWidth: 1			maxCharWidth: 1			weight: 1			overhang: 1			digitizedAspectX: 1			digitizedAspectY: 1			firstChar: $a			lastChar: $a			defaultChar: $a			breakChar: $a			italic: 1			underlined: 1			struckOut: 1			pitchAndFamily: 1			charSet: 1			flags: 1			sizeEM: 1			cellHeight: 1			avgWidth: 1)		fontSig: (FontSignature usb: 1 csb: 1)</body></methods><methods><class-id>WindowsFonts.EnumTextMetric</class-id> <category>accessing</category><body package="Fonts for Windows">axes	"&lt;Array&gt;"	^axes ifNil: [#()]</body></methods><methods><class-id>WindowsFonts.EnumTextMetric</class-id> <category>initialize-release</category><body package="Fonts for Windows">axesFrom: aAXESLIST	"&lt;SequenceableCollection of: AxisInfo&gt;"	| axis numAxis |	numAxis := aAXESLIST memberAt: #axlNumAxes.	axis := OrderedCollection new: numAxis.	1 to: numAxis do: [:i |		axis add: (AxisInfo newFrom: ((aAXESLIST memberAt: #axlAxisInfo) at: i))].	^axis</body><body package="Fonts for Windows">initializeFrom: aENUMTEXTMETRIC	| aNEWTEXTMETRICEX |	aNEWTEXTMETRICEX := aENUMTEXTMETRIC memberAt: #etmNewTextMetricEx.	self		initializeNewTextMetric: (NewTextMetric newFrom: (aNEWTEXTMETRICEX memberAt: #ntmTm))		fontSig: (FontSignature newFrom: (aNEWTEXTMETRICEX memberAt: #ntmFontSig))		axes: (self axesFrom: (aENUMTEXTMETRIC memberAt: #etmAxesList))</body><body package="Fonts for Windows">initializeNewTextMetric: newTextMetricNewTextMetric fontSig: fontSigFontSignature axes: axesArray	newTextMetric := newTextMetricNewTextMetric.	fontSig := fontSigFontSignature.	(axesArray notNil and: [	axesArray notEmpty]) ifTrue: [			axes := (Array withAll: axesArray) beImmutable].	self beImmutable</body></methods><methods><class-id>WindowsFonts.EnumTextMetric</class-id> <category>printing</category><body package="Fonts for Windows">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'newTextMetric' value: self newTextMetric).	args add: (printer constant: 'fontSig' value: self fontSig).	args add: (printer array: 'axes' value: self axes).	^printer printvalue: self arguments: args</body></methods><methods><class-id>WindowsFonts.EnumTextMetric class</class-id> <category>instance creation</category><body package="Fonts for Windows">newTextMetric: newTextMetricNewTextMetric fontSig: fontSigFontSignature axes: axesArray	| inst |	inst := self new.	inst		initializeNewTextMetric: newTextMetricNewTextMetric		fontSig: fontSigFontSignature		axes: axesArray.	^inst</body></methods><methods><class-id>WindowsFonts.EnumTextMetric class</class-id> <category>instance creation optional</category><body package="Fonts for Windows">newTextMetric: newTextMetricNewTextMetric fontSig: fontSigFontSignature	| inst |	inst := self new.	inst		initializeNewTextMetric: newTextMetricNewTextMetric		fontSig: fontSigFontSignature		axes: nil.	^inst</body></methods><methods><class-id>WindowsFonts.EnumTextMetric class</class-id> <category>test instances</category><body package="Fonts for Windows">example	^EnumTextMetric		newTextMetric: (NewTextMetric			height: 1			ascent: 1			descent: 1			internalLeading: 1			externalLeading: 1			aveCharWidth: 1			maxCharWidth: 1			weight: 1			overhang: 1			digitizedAspectX: 1			digitizedAspectY: 1			firstChar: $a			lastChar: $a			defaultChar: $a			breakChar: $a			italic: 1			underlined: 1			struckOut: 1			pitchAndFamily: 1			charSet: 1			flags: 1			sizeEM: 1			cellHeight: 1			avgWidth: 1)		fontSig: (FontSignature usb: 1 csb: 1)		axes: #(1 #a $x 'name')</body></methods><methods><class-id>Graphics.Fonts.TreeRoot</class-id> <category>testing</category><body package="Fonts UI Support">hasTreeChildren	^true</body></methods><methods><class-id>Graphics.Fonts.TreeRoot</class-id> <category>initialize-release</category><body package="Fonts UI Support">initializeFile: aFile	file := aFile</body></methods><methods><class-id>Graphics.Fonts.TreeRoot</class-id> <category>accessing</category><body package="Fonts UI Support">descriptionText	^self file descriptionText</body><body package="Fonts UI Support">file	^file</body><body package="Fonts UI Support">groups	^groups ifNil: [groups := self file treeGroups]</body><body package="Fonts UI Support">listIcon	^FontListIcons visualFor: #openType</body><body package="Fonts UI Support">listText	^self file listText</body><body package="Fonts UI Support">treeChildren	^self groups</body><body package="Fonts UI">view	^TextView on: self descriptionText</body></methods><methods><class-id>Graphics.Fonts.TreeRoot class</class-id> <category>instance creation</category><body package="Fonts UI Support">file: aFile	| inst |	inst := self new.	inst initializeFile: aFile.	^inst</body></methods><methods><class-id>Graphics.Fonts.ItemView</class-id> <category>accessing</category><body package="Fonts UI">item	^item</body></methods><methods><class-id>Graphics.Fonts.ItemView</class-id> <category>initialize-release</category><body package="Fonts UI">initializeItem: anObject	item := anObject</body></methods><methods><class-id>Graphics.Fonts.ItemView class</class-id> <category>instance creation</category><body package="Fonts UI">on: anObject	| inst |	inst := self new.	inst initializeItem: anObject.	^inst</body></methods><methods><class-id>Graphics.Fonts.OpenType.Tableview</class-id> <category>aspects</category><body package="Fonts UI">descriptionText	^descriptionText ifNil: [descriptionText := self item descriptionText asValue]</body><body package="Fonts UI">infoText	^infoText ifNil: [infoText := self item class documentation asText asValue]</body><body package="Fonts UI">titleText	^titleText ifNil: [titleText := self item class title asText allBold asValue]</body></methods><methods><class-id>Graphics.Fonts.OpenType.Tableview</class-id> <category>interface opening</category><body package="Fonts UI">changeLayout	"adapted to VW 8 while staying backward compatible"	| topComponent |	topComponent := self builder composite.	(topComponent respondsTo: #invalidateLayout) ifTrue: [		^topComponent invalidateLayout].	topComponent layoutComponentsForBounds: topComponent bounds</body><body package="Fonts UI">doLayout	| titleHeight infoHeight |	titleHeight := (self widgetAt: #TitleTextEditor) preferredHeight + 4.	(self wrapperAt: #TitleTextEditor) component layout bottomOffset: titleHeight.	(self wrapperAt: #InfoTextEditor) component layout topOffset: titleHeight.	infoHeight := (self widgetAt: #InfoTextEditor) preferredHeight + 4.	(self wrapperAt: #InfoTextEditor) component layout bottomOffset: infoHeight + titleHeight.	(self wrapperAt: #DescriptionTextEditor) component layout topOffset: infoHeight + titleHeight.	self changeLayout</body><body package="Fonts UI">postBuildWith: aBuilder 	super postBuildWith: aBuilder.	self doLayout</body></methods><methods><class-id>Graphics.Fonts.FontExplorer</class-id> <category>actions</category><body package="Fonts UI">browseWeb	self treeView selection class browse</body><body package="Fonts UI">changeLayout	"adapted to VW 8 while staying backward compatible"	| topComponent |	topComponent := self mainWindow topComponent component.	(topComponent respondsTo: #invalidateLayout) ifTrue: [		^topComponent invalidateLayout].	topComponent layoutComponentsForBounds: topComponent bounds.	topComponent invalidate</body><body package="Fonts UI">doLayout	| treeTop |	treeTop := (self widgetAt: #InfoTextEditor) preferredHeight + 28.	(self wrapperAt: #InfoTextEditor) component layout bottomOffset: treeTop.	(self wrapperAt: #TreeView) component layout topOffset: treeTop.	self changeLayout</body><body package="Fonts UI">inspectSelection	self treeView selection inspect</body><body package="Fonts UI">itemSelected	| subcanvas |	subcanvas := self widgetAt: #DetailsSubcanvas.	self treeView selection ifNotNil: [:selected |		subcanvas client: selected view spec: #windowSpec builder: self builder newSubBuilder.		^subcanvas invalidate].	subcanvas client: self spec: #emptySpec builder: self builder newSubBuilder.	subcanvas invalidate</body><body package="Fonts UI">openFile	| filenameString |	filenameString := Dialog requestFileName: 'open an OpenType file' default: '*.otf'.	filenameString isEmpty ifTrue: [		^self].	self openFile: filenameString</body><body package="Fonts UI">openFile: filenameString	Cursor wait showWhile: [		self setFont: (Graphics.Fonts.OpenType.Font newFromFile: filenameString asFilename)]</body><body package="Fonts UI">setFont: aFont	self treeView selection: nil.	self treeView list: #().	self reset.	font := aFont.	self mainWindow label: self filename.	self updateMenu.	self fileInfoText value: self fileInfo.	self infoText value: self fontInfo.	self doLayout.	self treeView list: self initialTree.	self treeView tree expandFully: 1</body></methods><methods><class-id>Graphics.Fonts.FontExplorer</class-id> <category>accessing</category><body package="Fonts UI">fileInfo	| wst |	self font ifNil: [		^'kein Font geladen' asText].	wst := TextStream on: ByteString new.	^wst		emphasis: nil;		nextPutAllText: self filename asFilename tail asText allBold;		cr;		contents</body><body package="Fonts UI">filename	"&lt;String | nil&gt;"	self font ifNil: [		^nil].	^self font filename</body><body package="Fonts UI">font	"&lt;File&gt;"	^font</body><body package="Fonts UI">fontInfo	self font ifNil: [		^'(no Infos)' asText emphasizeAllWith: #italic].	^self font fileInfoText</body><body package="Fonts UI">initialTree	^TreeModel		on: (TreeRoot file: self font)		displayRoot: true		childrenWith: [:item |		item treeChildren]		testHasChildrenWith: [:item |		item hasTreeChildren]</body></methods><methods><class-id>Graphics.Fonts.FontExplorer</class-id> <category>menus</category><body package="Fonts UI">fileMenu	| classified submenus sorted menu |	classified := Font loadedFonts associations groupedBy: [:assoc | assoc value class].	submenus := OrderedDictionary new.	classified keysAndValuesDo: [:class :fonts |		| submenu |		submenu := Menu new.		(fonts sorted: [:a :b | a key &lt;= b key]) do: [:assoc |			| menuItem |			menuItem := MenuItem labeled: assoc key.			menuItem value: [self setFont: assoc value].			menuItem labelImage: assoc value class listIcon.			submenu addItem: menuItem].		submenus at: class put: ((MenuItem labeled: class menuLabel) submenu: submenu)].	sorted := submenus keys asSortedCollection: [:a :b | a menuIndex &lt;= b menuIndex].	menu := Menu new.	sorted do: [:key | menu addItem: (submenus at: key)].	^menu</body><body package="Fonts UI">helpMenu	| menu |	menu := Menu new.	menu addItem: ((MenuItem labeled: '&amp;Inspect...')		value: #inspect;		labelImage: (ToolbarIconLibrary visualFor: #inspect);		helpText: '&amp;Inspect...';		yourself).	^menu</body><body package="Fonts UI">menuBar	"&lt;Menu&gt;"	| menu fontMenu |	menu := Menu new.	fontMenu := MenuItem labeled: '&amp;Fonts'.	fontMenu nameKey: #FontMenu.	fontMenu submenu: (Menu new addPart: self fileMenu).	menu addItem: fontMenu.	menu addItem: ((MenuItem labeled: '&amp;Help') submenu: (Menu new addPart: self helpMenu)).	^menu</body><body package="Fonts UI">treeMenu	| menu |	menu := Menu new.	menu addItem: ((MenuItem labeled: '&amp;Browse Web')		value: #browseWeb;		enablementSelector: #hasSelection;		labelImage: (ToolbarIconLibrary visualFor: #help);		yourself).	menu addItem: ((MenuItem labeled: '&amp;Inspect')		value: #inspectSelection;		enablementSelector: #hasSelection;		labelImage: (ToolbarIconLibrary visualFor: #inspect);		yourself).	^menu</body><body package="Fonts UI">updateMenu	(self builder ifNotNil: [:b | b aspectAt: #menuBar]) ifNotNil: [:menu |		self rebuildMenu: menu with: self menuBar augmentTo: FontExplorer]</body></methods><methods><class-id>Graphics.Fonts.FontExplorer</class-id> <category>aspects</category><body package="Fonts UI">detailsSubcanvas	^detailsSubcanvas ifNil: [detailsSubcanvas := TextView new]</body><body package="Fonts UI">fileInfoText	^fileInfoText ifNil: [fileInfoText := String new asValue]</body><body package="Fonts UI">infoText	^infoText ifNil: [infoText := String new asValue]</body><body package="Fonts UI">treeView	^treeView ifNil: [treeView := SelectionInTree new]</body></methods><methods><class-id>Graphics.Fonts.FontExplorer</class-id> <category>initialize-release</category><body package="Fonts UI">release	self reset.	FileDropManager default unregisterWindow: self mainWindow.	super release</body><body package="Fonts UI">reset	self font ifNotNil: [:aFont |		aFont release.		font := nil]</body></methods><methods><class-id>Graphics.Fonts.FontExplorer</class-id> <category>interface opening</category><body package="Fonts UI">postBuildWith: aBuilder	super postBuildWith: aBuilder.	aBuilder window icon: self class icon</body><body package="Fonts UI">postOpenWith: aBuilder	super postOpenWith: aBuilder.	FileDropManager default registerWindow: aBuilder window.	aBuilder window application: self.	aBuilder window sendWindowEvents: #(#wm_dropfiles).	self updateMenu</body></methods><methods><class-id>Graphics.Fonts.FontExplorer</class-id> <category>interface closing</category><body package="Fonts UI">noticeOfWindowClose: aWindow	super noticeOfWindowClose: aWindow.	self release</body></methods><methods><class-id>Graphics.Fonts.FontExplorer</class-id> <category>testing</category><body package="Fonts UI">hasSelection	^self treeView selection notNil</body></methods><methods><class-id>Graphics.Fonts.FontExplorer</class-id> <category>events</category><body package="Fonts UI">handleDropEvent: anEvent	| files |	files := (FileDropManager default dropObjectFrom: anEvent) files.	self openFile: files removeFirst.	files do: [:file |		| inst |		inst := self class new.		inst open.		inst openFile: file]</body><body package="Fonts UI">windowEvent: anEvent from: anApplicationWindow 	anEvent key = #wm_dropfiles ifTrue: [		self handleDropEvent: anEvent.		^self].	super windowEvent: anEvent from: anApplicationWindow.	^self</body></methods><methods><class-id>Graphics.Fonts.FontExplorer class</class-id> <category>resources</category><body package="Fonts UI">icon	^Icon figure: self openTypeIconFigure shape: self openTypeIconMask</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable4</class-id> <category>accessing</category><body package="Fonts Development">characterToIndex	"&lt;Dictionary key: Character value: Integer&gt;"	| dict |	dict := OrderedDictionary new.	self segments do: [:segment |		segment characterCodes do: [:code |			(segment glyphIndexAtCode: code glyphs: self glyphIdArray) ifNotNil: [:index |				dict at: code asCharacter put: index]]].	^dict</body><body package="Fonts Development">codeToIndex	"&lt;Dictionary key: Integer value: Integer&gt;"	| dict |	dict := OrderedDictionary new.	self segments do: [:segment |		segment characterCodes do: [:code |			(segment glyphIndexAtCode: code glyphs: self glyphIdArray) ifNotNil: [:index |				dict at: code put: index]]].	^dict</body><body package="OpenType">glyphIdArray	"&lt;Array&gt;	Glyph index array"	^glyphIdArray ifNil: [#()]</body><body package="OpenType">glyphIndexAtUnicode: aUnicodeInteger	| segment |	aUnicodeInteger = Character illegalCode ifTrue: [		^nil].	segment := self segments detect: [:seg | seg endCode &gt;= aUnicodeInteger].	^segment glyphIndexAtCode: aUnicodeInteger glyphs: self glyphIdArray</body><body package="OpenType">indexToCode	"&lt;Dictionary&gt;	Cache for the index to code mapping"	^indexToCode ifNil: [Dictionary new beImmutable]</body><body package="OpenType">segments	"&lt;Array&gt;	code ranges"	^segments ifNil: [#()]</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable4</class-id> <category>initialize-release</category><body package="OpenType">initializePlatform: platformInteger encoding: encodingInteger contents: contentsByteArray language: languageInteger segments: segmentsArray glyphIdArray: glyphIdArrayArray indexToCode: indexToCodeDictionary	platform := platformInteger.	encoding := encodingInteger.	contents := contentsByteArray.	language := languageInteger.	(segmentsArray notNil and: [	segmentsArray notEmpty]) ifTrue: [			segments := (Array withAll: segmentsArray) beImmutable].	(glyphIdArrayArray notNil and: [	glyphIdArrayArray notEmpty]) ifTrue: [			glyphIdArray := (Array withAll: glyphIdArrayArray) beImmutable].	(indexToCodeDictionary notNil and: [	indexToCodeDictionary notEmpty]) ifTrue: [			indexToCode := (OrderedDictionary withAll: indexToCodeDictionary) beImmutable].	self beImmutable</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable4</class-id> <category>marshaling</category><body package="OpenType">passInstVars	"for OpenTalk StSt"	^#(#default #default #default #default #default #default)</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable4</class-id> <category>reading</category><body package="OpenType">readFrom: bytes at: offset	"Type  	Name  						DescriptionUSHORT  	format  						Format number is set to 4.USHORT 	length 						This is the length in bytes of the subtable.USHORT 	language 					Please see “Note on the language field in 'cmap' subtables“ in this document.USHORT 	segCountX2 				2 x segCount.USHORT 	searchRange 				2 x (2**floor(log2(segCount)))USHORT 	entrySelector 				log2(searchRange/2)USHORT 	rangeShift 					2 x segCount - searchRangeUSHORT 	endCount[segCount] 		End characterCode for each segment, last=0xFFFF.USHORT 	reservedPad 				Set to 0.USHORT 	startCount[segCount] 		Start character code for each segment.SHORT 	idDelta[segCount] 			Delta for all character codes in segment.USHORT 	idRangeOffset[segCount] 	Offsets into glyphIdArray or 0USHORT 	glyphIdArray[ ] 				Glyph index array (arbitrary length)"	| subtable uBytes segCountX2 segCount o endCodes startCodes deltas glyphIndexes segs uGlyphs glyphs glyphIdOffset offsetx codeMapping |	subtable := super readFrom: bytes at: offset.	uBytes := UninterpretedBytes from: subtable contents.	segCountX2 := uBytes unsignedShortAt: 7 bigEndian: true.	segCount := segCountX2 / 2.	o := 14 + 1.	endCodes := (0 to: segCount - 1) collect: [:i |		uBytes unsignedShortAt: i * 2 + o bigEndian: true].	o := segCountX2 + o + 2.	startCodes := (0 to: segCount - 1) collect: [:i |		uBytes unsignedShortAt: i * 2 + o bigEndian: true].	o := segCountX2 + o.	deltas := (0 to: segCount - 1) collect: [:i | uBytes shortAt: i * 2 + o bigEndian: true].	o := segCountX2 + o.	glyphIdOffset := segCountX2 + o.	glyphIndexes := (0 to: segCount - 1) collect: [:i |		| rangeOffset |		offsetx := i * 2 + o.		rangeOffset := uBytes unsignedShortAt: offsetx bigEndian: true.		rangeOffset isZero			ifTrue: [nil]			ifFalse: [			(offsetx + rangeOffset - glyphIdOffset) / 2]].	segs := (1 to: segCount) collect: [:i |		(glyphIndexes at: i)			ifNil: [			Segment startCode: (startCodes at: i) endCode: (endCodes at: i) delta: (deltas at: i)]			ifNotNil: [:glyphIndex |			IndexedSegment				startCode: (startCodes at: i)				endCode: (endCodes at: i)				delta: (deltas at: i)				glyphIdArrayIndex: glyphIndex]].	uGlyphs := UninterpretedBytes from: (subtable contents copyFrom: segCountX2 + o to: subtable contents size).	glyphs := (0 to: uGlyphs sizeInBytes / 2 - 1) collect: [:i |		uGlyphs unsignedShortAt: i * 2 + 1 bigEndian: true].	codeMapping := OrderedDictionary new: glyphs size.	segs do: [:segment |		segment characterCodes do: [:code |			(segment glyphIndexAtCode: code glyphs: glyphs) ifNotNil: [:index |				codeMapping at: index put: code]]].	^self class		platform: subtable platform		encoding: subtable encoding		contents: subtable contents		language: subtable language		segments: segs		glyphIdArray: glyphs		indexToCode: codeMapping</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable4</class-id> <category>printing</category><body package="OpenType">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'platform' value: self platform).	args add: (printer constant: 'encoding' value: self encoding).	args add: (printer constant: 'contents' value: self contents).	args add: (printer constant: 'language' value: self language).	args add: (printer array: 'segments' value: self segments).	args add: (printer array: 'glyphIdArray' value: self glyphIdArray).	args add: (printer dictionary: 'indexToCode' value: self indexToCode).	^printer printvalue: self arguments: args</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable4 class</class-id> <category>accessing</category><body package="OpenType">formatNumber	^4</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable4 class</class-id> <category>instance creation optional</category><body package="OpenType">platform: platformInteger encoding: encodingInteger contents: contentsByteArray language: languageInteger	| inst |	inst := self new.	inst		initializePlatform: platformInteger		encoding: encodingInteger		contents: contentsByteArray		language: languageInteger		segments: nil		glyphIdArray: nil		indexToCode: nil.	^inst</body><body package="OpenType">platform: platformInteger encoding: encodingInteger contents: contentsByteArray language: languageInteger glyphIdArray: glyphIdArrayArray	| inst |	inst := self new.	inst		initializePlatform: platformInteger		encoding: encodingInteger		contents: contentsByteArray		language: languageInteger		segments: nil		glyphIdArray: glyphIdArrayArray		indexToCode: nil.	^inst</body><body package="OpenType">platform: platformInteger encoding: encodingInteger contents: contentsByteArray language: languageInteger glyphIdArray: glyphIdArrayArray indexToCode: indexToCodeDictionary	| inst |	inst := self new.	inst		initializePlatform: platformInteger		encoding: encodingInteger		contents: contentsByteArray		language: languageInteger		segments: nil		glyphIdArray: glyphIdArrayArray		indexToCode: indexToCodeDictionary.	^inst</body><body package="OpenType">platform: platformInteger encoding: encodingInteger contents: contentsByteArray language: languageInteger indexToCode: indexToCodeDictionary	| inst |	inst := self new.	inst		initializePlatform: platformInteger		encoding: encodingInteger		contents: contentsByteArray		language: languageInteger		segments: nil		glyphIdArray: nil		indexToCode: indexToCodeDictionary.	^inst</body><body package="OpenType">platform: platformInteger encoding: encodingInteger contents: contentsByteArray language: languageInteger segments: segmentsArray	| inst |	inst := self new.	inst		initializePlatform: platformInteger		encoding: encodingInteger		contents: contentsByteArray		language: languageInteger		segments: segmentsArray		glyphIdArray: nil		indexToCode: nil.	^inst</body><body package="OpenType">platform: platformInteger encoding: encodingInteger contents: contentsByteArray language: languageInteger segments: segmentsArray glyphIdArray: glyphIdArrayArray	| inst |	inst := self new.	inst		initializePlatform: platformInteger		encoding: encodingInteger		contents: contentsByteArray		language: languageInteger		segments: segmentsArray		glyphIdArray: glyphIdArrayArray		indexToCode: nil.	^inst</body><body package="OpenType">platform: platformInteger encoding: encodingInteger contents: contentsByteArray language: languageInteger segments: segmentsArray indexToCode: indexToCodeDictionary	| inst |	inst := self new.	inst		initializePlatform: platformInteger		encoding: encodingInteger		contents: contentsByteArray		language: languageInteger		segments: segmentsArray		glyphIdArray: nil		indexToCode: indexToCodeDictionary.	^inst</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable4 class</class-id> <category>instance creation</category><body package="OpenType">platform: platformInteger encoding: encodingInteger contents: contentsByteArray language: languageInteger segments: segmentsArray glyphIdArray: glyphIdArrayArray indexToCode: indexToCodeDictionary	| inst |	inst := self new.	inst		initializePlatform: platformInteger		encoding: encodingInteger		contents: contentsByteArray		language: languageInteger		segments: segmentsArray		glyphIdArray: glyphIdArrayArray		indexToCode: indexToCodeDictionary.	^inst</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable4 class</class-id> <category>test instances</category><body package="Fonts test resources">example	^CmapSubtable4		platform: 1		encoding: 1		contents: #[42]		language: 1		segments: #(1 #a $x 'name')		glyphIdArray: #(1 #a $x 'name')</body></methods><methods><class-id>Graphics.Fonts.OpenType.FontHeader</class-id> <category>accessing</category><body package="OpenType">checkSumAdjustment	"&lt;Integer&gt;"	^checkSumAdjustment</body><body package="OpenType">created	"&lt;Timestamp&gt;"	^created</body><body package="OpenType">flags	"&lt;Integer&gt;	Bit 0: Baseline for font at y=0;Bit 1: Left sidebearing point at x=0;Bit 2: Instructions may depend on point size;Bit 3: Force ppem to integer values for all internal scaler math; may use fractional ppem sizes if this bit is clear;Bit 4: Instructions may alter advance width (the advance widths might not scale linearly);Bits 5-10: These should be set according to Apple's specification . However, they are not implemented in OpenType.Bit 11: Font data is ‘lossless’ as a results of having been subjected to optimizing transformation and/or compression (such as e.g. compression mechanisms defined by ISO/IEC 14496-18, MicroType Express, WOFF 2.0 or similar) where the original font functionality and features are retained but the binary compatibility between input and output font files is not guaranteed. As a result of the applied transform, the ‘DSIG’ Table may also be invalidated.Bit 12: Font converted (produce compatible metrics)Bit 13: Font optimized for ClearType™. Note, fonts that rely on embedded bitmaps (EBDT) for rendering should not be considered optimized for ClearType, and therefore should keep this bit cleared.Bit 14: Last Resort font. If set, indicates that the glyphs encoded in the cmap subtables are simply generic symbolic representations of code point ranges and don’t truly represent support for those code points. If unset, indicates that the glyphs encoded in the cmap subtables represent proper support for those code points.Bit 15: Reserved, set to 0 "	^flags</body><body package="OpenType">fontBBox	"&lt;Rectangle&gt;"	^self glyphBBox</body><body package="OpenType">fontDirectionHint	"&lt;Integer&gt;	Deprecated (Set to 2).0: Fully mixed directional glyphs;1: Only strongly left to right;2: Like 1 but also contains neutrals;-1: Only strongly right to left;-2: Like -1 but also contains neutrals."	^fontDirectionHint</body><body package="OpenType">fontRevision	"&lt;FixedPoint&gt;	Set by font manufacturer"	^fontRevision</body><body package="OpenType">glyphBBox	"&lt;Rectangle&gt;	For all glyph bounding boxes."	^glyphBBox</body><body package="OpenType">glyphDataFormat	"&lt;Integer&gt;	0 for current format."	^glyphDataFormat</body><body package="OpenType">indexToLocFormat	"&lt;Integer&gt;	0 for short offsets, 1 for long."	^indexToLocFormat</body><body package="OpenType">lowestRecPPEM	"&lt;Integer&gt;	Smallest readable size in pixels."	^lowestRecPPEM</body><body package="OpenType">macStyle	"&lt;Integer&gt;	Bit 0: Bold (if set to 1);Bit 1: Italic (if set to 1)Bit 2: Underline (if set to 1)Bit 3: Outline (if set to 1)Bit 4: Shadow (if set to 1)Bit 5: Condensed (if set to 1)Bit 6: Extended (if set to 1)Bits 7-15: Reserved (set to 0).Note that the macStyle bits must agree with the 'OS/2' table fsSelection bits. The fsSelection bits are used over the macStyle bits in Microsoft Windows. The PANOSE values and 'post' table values are ignored for determining bold or italic fonts."	^macStyle</body><body package="OpenType">modified	"&lt;Timestamp&gt;"	^modified</body><body package="OpenType">unitsPerEm	"&lt;Integer&gt;	Valid range is from 16 to 16384. This value should be a power of 2 for fonts that have TrueType outlines."	^unitsPerEm</body><body package="OpenType">version	"&lt;FixedPoint&gt;	should be 1.0"	^version</body></methods><methods><class-id>Graphics.Fonts.OpenType.FontHeader</class-id> <category>printing</category><body package="OpenType">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'version' value: self version).	args add: (printer constant: 'fontRevision' value: self fontRevision).	args add: (printer constant: 'checkSumAdjustment' value: self checkSumAdjustment).	args add: (printer constant: 'flags' value: self flags).	args add: (printer constant: 'unitsPerEm' value: self unitsPerEm).	args add: (printer constant: 'created' value: self created).	args add: (printer constant: 'modified' value: self modified).	args add: (printer constant: 'glyphBBox' value: self glyphBBox).	args add: (printer constant: 'macStyle' value: self macStyle).	args add: (printer constant: 'lowestRecPPEM' value: self lowestRecPPEM).	args add: (printer constant: 'fontDirectionHint' value: self fontDirectionHint).	args add: (printer constant: 'indexToLocFormat' value: self indexToLocFormat).	args add: (printer constant: 'glyphDataFormat' value: self glyphDataFormat).	^printer printvalue: self arguments: args</body></methods><methods><class-id>Graphics.Fonts.OpenType.FontHeader</class-id> <category>initialize-release</category><body package="OpenType">initializeVersion: versionFixedPoint fontRevision: fontRevisionFixedPoint checkSumAdjustment: checkSumAdjustmentInteger flags: flagsInteger unitsPerEm: unitsPerEmInteger created: createdTimestamp modified: modifiedTimestamp glyphBBox: glyphBBoxRectangle macStyle: macStyleInteger lowestRecPPEM: lowestRecPPEMInteger fontDirectionHint: fontDirectionHintInteger indexToLocFormat: indexToLocFormatInteger glyphDataFormat: glyphDataFormatInteger	version := versionFixedPoint.	fontRevision := fontRevisionFixedPoint.	checkSumAdjustment := checkSumAdjustmentInteger.	flags := flagsInteger.	unitsPerEm := unitsPerEmInteger.	created := createdTimestamp.	modified := modifiedTimestamp.	glyphBBox := glyphBBoxRectangle.	macStyle := macStyleInteger.	lowestRecPPEM := lowestRecPPEMInteger.	fontDirectionHint := fontDirectionHintInteger.	indexToLocFormat := indexToLocFormatInteger.	glyphDataFormat := glyphDataFormatInteger.	self beImmutable</body></methods><methods><class-id>Graphics.Fonts.OpenType.FontHeader</class-id> <category>converting</category><body package="OpenType">asBytes	"&lt;ByteArray&gt;"	| wst |	wst := Graphics.Fonts.ByteWriteStream bigEndianOn: (ByteArray new: 54).	wst nextPutFixedVersion: self version.	wst nextPutFixed: self fontRevision.	wst nextPutUnsignedLong: self checkSumAdjustment.	wst nextPutUnsignedLong: self class magicNumber.	wst nextPutUnsignedShort: self flags.	wst nextPutUnsignedShort: self unitsPerEm.	wst nextPutLongDateTime: self created.	wst nextPutLongDateTime: self modified.	wst nextPutShort: self glyphBBox origin x.	wst nextPutShort: self glyphBBox origin y.	wst nextPutShort: self glyphBBox corner x.	wst nextPutShort: self glyphBBox corner y.	wst nextPutUnsignedShort: self macStyle.	wst nextPutUnsignedShort: self lowestRecPPEM.	wst nextPutShort: self fontDirectionHint.	wst nextPutShort: self indexToLocFormat.	wst nextPutShort: self glyphDataFormat.	^wst contents</body></methods><methods><class-id>Graphics.Fonts.OpenType.FontHeader class</class-id> <category>instance creation</category><body package="OpenType">fromBytes: aByteArray	| rst version fontRevision checkSumAdjustment |	rst := Graphics.Fonts.ByteReadStream bigEndianOn: aByteArray.	version := rst nextFixedVersion.	fontRevision := rst nextFixed.	checkSumAdjustment := rst nextUnsignedLong.	rst nextUnsignedLong = self magicNumber ifFalse: [		self error: 'magicNumber is not correct'].	^self		version: version		fontRevision: fontRevision		checkSumAdjustment: checkSumAdjustment		flags: rst nextUnsignedShort		unitsPerEm: rst nextUnsignedShort		created: rst nextLongDateTime		modified: rst nextLongDateTime		glyphBBox: (rst nextShort @ rst nextShort corner: rst nextShort @ rst nextShort)		macStyle: rst nextUnsignedShort		lowestRecPPEM: rst nextUnsignedShort		fontDirectionHint: rst nextShort		indexToLocFormat: rst nextShort		glyphDataFormat: rst nextShort</body><body package="OpenType">magicNumber	^16r5F0F3CF5</body><body package="OpenType">version: versionFixedPoint fontRevision: fontRevisionFixedPoint checkSumAdjustment: checkSumAdjustmentInteger flags: flagsInteger unitsPerEm: unitsPerEmInteger created: createdTimestamp modified: modifiedTimestamp glyphBBox: glyphBBoxRectangle macStyle: macStyleInteger lowestRecPPEM: lowestRecPPEMInteger fontDirectionHint: fontDirectionHintInteger indexToLocFormat: indexToLocFormatInteger glyphDataFormat: glyphDataFormatInteger	| inst |	inst := self new.	inst		initializeVersion: versionFixedPoint		fontRevision: fontRevisionFixedPoint		checkSumAdjustment: checkSumAdjustmentInteger		flags: flagsInteger		unitsPerEm: unitsPerEmInteger		created: createdTimestamp		modified: modifiedTimestamp		glyphBBox: glyphBBoxRectangle		macStyle: macStyleInteger		lowestRecPPEM: lowestRecPPEMInteger		fontDirectionHint: fontDirectionHintInteger		indexToLocFormat: indexToLocFormatInteger		glyphDataFormat: glyphDataFormatInteger.	^inst</body></methods><methods><class-id>Graphics.Fonts.OpenType.FontHeader class</class-id> <category>test instances</category><body package="Fonts test resources">example	^FontHeader		version: 1.0		fontRevision: 2.2		checkSumAdjustment: 3453633193		flags: 3		unitsPerEm: 1000		created: (Timestamp d: 12 m: 9 y: 2008 h: 11 m: 59 s: 27)		modified: (Timestamp d: 12 m: 9 y: 2008 h: 11 m: 59 s: 27)		glyphBBox: (-53 @ -285 corner: 1121 @ 1012)		macStyle: 0		lowestRecPPEM: 3		fontDirectionHint: 2		indexToLocFormat: 0		glyphDataFormat: 0</body><body package="Fonts test resources">exampleDifferentDates	^FontHeader		version: 1.0		fontRevision: 1.0		checkSumAdjustment: 3395040194		flags: 3		unitsPerEm: 1000		created: (Timestamp d: 14 m: 1 y: 2010 h: 1)		modified: (Timestamp d: 22 m: 7 y: 2010 h: 9 m: 46 s: 28)		glyphBBox: (-80 @ -214 corner: 1033 @ 991)		macStyle: 0		lowestRecPPEM: 3		fontDirectionHint: 2		indexToLocFormat: 0		glyphDataFormat: 0</body><body package="Fonts test resources">exampleUnitsPerEm2000	^FontHeader		version: 1.0		fontRevision: 7.504		checkSumAdjustment: 2521734574		flags: 3		unitsPerEm: 2000		created: (Timestamp d: 18 m: 10 y: 2013 h: 16 m: 13 s: 8)		modified: (Timestamp d: 18 m: 10 y: 2013 h: 15 m: 13 s: 13)		glyphBBox: (-1351 @ -476 corner: 3135 @ 1948)		macStyle: 0		lowestRecPPEM: 7		fontDirectionHint: 2		indexToLocFormat: 0		glyphDataFormat: 0</body></methods><methods><class-id>Graphics.Fonts.CFF.Encoding class</class-id> <category>instance creation</category><body package="CompactFontFormat">fromBytes: aByteStream	| formatByte dataFormat |	formatByte := aByteStream peek.	dataFormat := formatByte bitAnd: 16r7F.	dataFormat = 0 ifTrue: [		^Encoding0 fromBytes: aByteStream].	dataFormat = 1 ifTrue: [		^Encoding1 fromBytes: aByteStream].	self error: 'wrong format'</body></methods><methods><class-id>Graphics.Fonts.PFMHeader</class-id> <category>accessing</category><body package="Type1">ascent	"&lt;Integer&gt;	WORD: The distance from the top of a character definition cell to the baseline of the typographical font"	^ascent</body><body package="Type1">avgWidth	"&lt;Integer&gt;	WORD: The average width of characters in the font (generally defined as the width of the letter x). This value does not include the overhang required for bold or italic characters"	^avgWidth</body><body package="Type1">breakChar	"&lt;Integer&gt;	BYTE: The character that will be used to define word breaks for text justification"	^breakChar</body><body package="Type1">charSet	"&lt;Integer&gt;	BYTE: The character set of the font"	^charSet</body><body package="Type1">copyright	"&lt;String&gt;	CHAR[60]: The font supplier's copyright information"	^copyright</body><body package="Type1">defaultChar	"&lt;Integer&gt;	BYTE: The character to substitute for characters not in the font"	^defaultChar</body><body package="Type1">externalLeading	"&lt;Integer&gt;	WORD: The amount of extra leading that the application adds between rows"	^externalLeading</body><body package="Type1">familySymbol	"&lt;Symbol&gt;	The family of the font as Symbol known to Windows.	Raises error on unknown"	| bits |	bits := self pitchAndFamily bitShift: -4.	bits isZero ifTrue: [		^#FF_DONTCARE].	^#(#FF_ROMAN #FF_SWISS #FF_MODERN #FF_SCRIPT #FF_DECORATIVE) at: bits</body><body package="Type1">firstChar	"&lt;Integer&gt;	BYTE: The first character code defined in the font"	^firstChar</body><body package="Type1">horizRes	"&lt;Integer&gt;	WORD	This field contains the horizontal resolution at which the font was digitized (the value is in dots per inch). The value of this field should be set to 0x012C (300 dpi)"	^16r012c</body><body package="Type1">internalLeading	"&lt;Integer&gt;	WORD: The amount of leading inside the bounds set by pixHeight. Accent marks and other diacritical characters can occur in this area"	^internalLeading</body><body package="Type1">italic	"&lt;Boolean&gt;	BYTE: An italic font if not equal to zero"	^italic</body><body package="Type1">lastChar	"&lt;Integer&gt;	BYTE: The last character code defined in the font"	^lastChar</body><body package="Type1">maxWidth	"&lt;Integer&gt;	WORD: The width of the widest character in the font"	^maxWidth</body><body package="Type1">numberOfCharacters	"&lt;Integer&gt;"	^self lastChar - self firstChar + 1</body><body package="Type1">pitchAndFamily	"&lt;Integer&gt;	BYTE: The pitch and the family of the font"	^pitchAndFamily</body><body package="Type1">pitchSymbol	"&lt;Symbol&gt;	The pitch of the font as Symbol known to Windows.	Raises error on unknown"	self isFixedPitch ifTrue: [		^#FIXED_PITCH].	^#VARIABLE_PITCH</body><body package="Type1">pixHeight	"&lt;Integer&gt;	WORD	This field contains the height of all characters in the font. For raster fonts this field contains the height in scan lines of every character bitmap. For vector fonts this field contains the height of the grid on which the font was digitized. The value is ignored by PostScript printer drivers"	^pixHeight</body><body package="Type1">pixWidth	"&lt;Integer&gt;	WORD	This field contains the width of all characters in the font. For raster fonts this field contains the width in pixels of every character bitmap if the font is fixed-pitch, otherwise this field is zero and the character's widths are specified in the WidthTable table. For vector fonts this field contains the width of the grid on which the font was digitized. The value is ignored by PostScript printer drivers"	^0</body><body package="Type1">points	"&lt;Integer&gt;	WORD	This field contains the point size at which this font looks best. Since this is not relevant for scalable fonts the field is ignored. The value of this field should be set to 0x000a (10 pt)"	^16r000a</body><body package="Type1">stemV	"&lt;Integer&gt;"	"usWeightClass - roughly estimate StemV.Estimation is based on the following expression:	stemv = (os2-&gt;usWeightClass/65)*(os2-&gt;usWeightClass/65)+50I've found this expression in some Adobe document (lost). We usethis expression also, otherwise, we must analyze glyph data.found in:(This is dvipdfmx, an eXtended version of dvipdfm by Mark A. Wicks.Copyright (C) 2002 by Jin-Hwan Cho and Shunsaku Hirata,the dvipdfmx project team &lt;dvipdfmx@project.ktug.or.kr&gt;)"	| wc |	wc := self weight / 65.	^(wc * wc + 50) rounded</body><body package="Type1">strikeOut	"&lt;Boolean&gt;	BYTE: An strikeout font if not equal to zero"	^strikeOut</body><body package="Type1">type	"&lt;Integer&gt;	WORD	This field contains the font type. The low-order byte is a combination of the following values (only the values being of interest in PFM files are given):    0x00 (PF_RASTER_TYPE): font is a raster font    0x01 (PF_VECTOR_TYPE): font is a vector font    0x80 (PF_DEVICE_REALIZED): font realized by the device driver The high-order byte is never used in PFM files, it is always zero.In PFM files for Type-1 fonts the value in this field is always 0x0081. "	^16r0081</body><body package="Type1">underline	"&lt;Boolean&gt;	BYTE: An underlined font if not equal to zero"	^underline</body><body package="Type1">vertRes	"&lt;Integer&gt;	WORD	This field contains the vertical resolution at which the font was digitized (the value is in dots per inch). The value of this field should be set to 0x012C (300 dpi)"	^16r012c</body><body package="Type1">weight	"&lt;Integer&gt;	WORD: The weight of the font in the range 0 through 1000. For example, 400 is roman and 700 is bold. If this value is zero, a default weight is used"	^weight</body><body package="Type1">widthBytes	"&lt;Integer&gt;	WORD	This field contains the number of bytes in every row of the font bitmap. The value is always an even quantity so that rows of the bitmap start on 16 bit boundaries. This field is not used for vector fonts, it is therefore zero in e.g. PFM files for Type-1 fonts"	^0</body></methods><methods><class-id>Graphics.Fonts.PFMHeader</class-id> <category>printing</category><body package="Type1">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'copyright' value: self copyright).	args add: (printer constant: 'ascent' value: self ascent).	args add: (printer constant: 'internalLeading' value: self internalLeading).	args add: (printer constant: 'externalLeading' value: self externalLeading).	args add: (printer constant: 'italic' value: self italic).	args add: (printer constant: 'underline' value: self underline).	args add: (printer constant: 'strikeOut' value: self strikeOut).	args add: (printer constant: 'weight' value: self weight).	args add: (printer constant: 'charSet' value: self charSet).	args add: (printer constant: 'pixHeight' value: self pixHeight).	args add: (printer constant: 'pitchAndFamily' value: self pitchAndFamily).	args add: (printer constant: 'avgWidth' value: self avgWidth).	args add: (printer constant: 'maxWidth' value: self maxWidth).	args add: (printer constant: 'firstChar' value: self firstChar).	args add: (printer constant: 'lastChar' value: self lastChar).	args add: (printer constant: 'defaultChar' value: self defaultChar).	args add: (printer constant: 'breakChar' value: self breakChar).	^printer printvalue: self arguments: args</body></methods><methods><class-id>Graphics.Fonts.PFMHeader</class-id> <category>initialize-release</category><body package="Type1">initializeCopyright: copyrightString ascent: ascentInteger internalLeading: internalLeadingInteger externalLeading: externalLeadingInteger italic: italicBoolean underline: underlineBoolean strikeOut: strikeOutBoolean weight: weightInteger charSet: charSetInteger pixHeight: pixHeightInteger pitchAndFamily: pitchAndFamilyInteger avgWidth: avgWidthInteger maxWidth: maxWidthInteger firstChar: firstCharInteger lastChar: lastCharInteger defaultChar: defaultCharInteger breakChar: breakCharInteger	copyright := copyrightString.	ascent := ascentInteger.	internalLeading := internalLeadingInteger.	externalLeading := externalLeadingInteger.	italic := italicBoolean.	underline := underlineBoolean.	strikeOut := strikeOutBoolean.	weight := weightInteger.	charSet := charSetInteger.	pixHeight := pixHeightInteger.	pitchAndFamily := pitchAndFamilyInteger.	avgWidth := avgWidthInteger.	maxWidth := maxWidthInteger.	firstChar := firstCharInteger.	lastChar := lastCharInteger.	defaultChar := defaultCharInteger.	breakChar := breakCharInteger.	self beImmutable</body></methods><methods><class-id>Graphics.Fonts.PFMHeader</class-id> <category>testing</category><body package="Type1">isFixedPitch	^(self pitchAndFamily bitAnd: 2r00000001) isZero</body></methods><methods><class-id>Graphics.Fonts.PFMHeader</class-id> <category>converting</category><body package="Type1">asBytes	"&lt;ByteArray[95]&gt;	ByteArray suited to be written to a PFM file"	| wst |	wst := ByteWriteStream littleEndianOn: (ByteArray new: 95).	wst		nextPutAll: self copyright asByteArray;		nextPutUnsignedShort: self type;		nextPutUnsignedShort: self points;		nextPutUnsignedShort: self vertRes;		nextPutUnsignedShort: self horizRes;		nextPutUnsignedShort: self ascent;		nextPutUnsignedShort: self internalLeading;		nextPutUnsignedShort: self externalLeading;		nextPutBooleanByte: self italic;		nextPutBooleanByte: self underline;		nextPutBooleanByte: self strikeOut;		nextPutUnsignedShort: self weight;		nextPut: self charSet;		nextPutUnsignedShort: self pixWidth;		nextPutUnsignedShort: self pixHeight;		nextPut: self pitchAndFamily;		nextPutUnsignedShort: self avgWidth;		nextPutUnsignedShort: self maxWidth;		nextPut: self firstChar;		nextPut: self lastChar;		nextPut: self defaultChar;		nextPut: self breakChar;		nextPutUnsignedShort: self widthBytes.	^wst contents</body></methods><methods><class-id>Graphics.Fonts.PFMHeader class</class-id> <category>instance creation</category><body package="Type1">copyright: copyrightString ascent: ascentInteger internalLeading: internalLeadingInteger externalLeading: externalLeadingInteger italic: italicBoolean underline: underlineBoolean strikeOut: strikeOutBoolean weight: weightInteger charSet: charSetInteger pixHeight: pixHeightInteger pitchAndFamily: pitchAndFamilyInteger avgWidth: avgWidthInteger maxWidth: maxWidthInteger firstChar: firstCharInteger lastChar: lastCharInteger defaultChar: defaultCharInteger breakChar: breakCharInteger	| inst |	inst := self new.	inst		initializeCopyright: copyrightString		ascent: ascentInteger		internalLeading: internalLeadingInteger		externalLeading: externalLeadingInteger		italic: italicBoolean		underline: underlineBoolean		strikeOut: strikeOutBoolean		weight: weightInteger		charSet: charSetInteger		pixHeight: pixHeightInteger		pitchAndFamily: pitchAndFamilyInteger		avgWidth: avgWidthInteger		maxWidth: maxWidthInteger		firstChar: firstCharInteger		lastChar: lastCharInteger		defaultChar: defaultCharInteger		breakChar: breakCharInteger.	^inst</body><body package="Type1">copyright: copyrightString type: typeInteger points: pointsInteger vertRes: vertResInteger horizRes: horizResInteger ascent: ascentInteger internalLeading: internalLeadingInteger externalLeading: externalLeadingInteger italic: italicBoolean underline: underlineBoolean strikeOut: strikeOutBoolean weight: weightInteger charSet: charSetInteger pixWidth: pixWidthInteger pixHeight: pixHeightInteger pitchAndFamily: pitchAndFamilyInteger avgWidth: avgWidthInteger maxWidth: maxWidthInteger firstChar: firstCharInteger lastChar: lastCharInteger defaultChar: defaultCharInteger breakChar: breakCharInteger widthBytes: widthBytesInteger	| dummy |	dummy := self new.	typeInteger = dummy type ifFalse: [		self error: 'type is not correct'].	"ignored - doc says points are irrelevant and should be set to 10. However found 12 in a TeX font"	"pointsInteger = dummy points ifFalse: [		self error: 'points is not correct']."	vertResInteger = dummy vertRes ifFalse: [		self error: 'vertRes is not correct'].	horizResInteger = dummy horizRes ifFalse: [		self error: 'horizRes is not correct'].	"ignored - doc says points are irrelevant and should be set to 0. However found 1000 in a TeX font"	"pixWidthInteger = dummy pixWidth ifFalse: [		self error: 'pixWidth is not correct']."	widthBytesInteger = dummy widthBytes ifFalse: [		self error: 'widthBytes is not correct'].	^self		copyright: copyrightString		ascent: ascentInteger		internalLeading: internalLeadingInteger		externalLeading: externalLeadingInteger		italic: italicBoolean		underline: underlineBoolean		strikeOut: strikeOutBoolean		weight: weightInteger		charSet: charSetInteger		pixHeight: pixHeightInteger		pitchAndFamily: pitchAndFamilyInteger		avgWidth: avgWidthInteger		maxWidth: maxWidthInteger		firstChar: firstCharInteger		lastChar: lastCharInteger		defaultChar: defaultCharInteger		breakChar: breakCharInteger</body><body package="Type1">fromBytes: aByteArray95	| rst |	rst := ByteReadStream littleEndianOn: aByteArray95.	^self		copyright: (rst next: 60) asByteString		type: rst nextUnsignedShort		points: rst nextUnsignedShort		vertRes: rst nextUnsignedShort		horizRes: rst nextUnsignedShort		ascent: rst nextUnsignedShort		internalLeading: rst nextUnsignedShort		externalLeading: rst nextUnsignedShort		italic: rst nextBooleanByte		underline: rst nextBooleanByte		strikeOut: rst nextBooleanByte		weight: rst nextUnsignedShort		charSet: rst next		pixWidth: rst nextUnsignedShort		pixHeight: rst nextUnsignedShort		pitchAndFamily: rst next		avgWidth: rst nextUnsignedShort		maxWidth: rst nextUnsignedShort		firstChar: rst next		lastChar: rst next		defaultChar: rst next		breakChar: rst next		widthBytes: rst nextUnsignedShort</body></methods><methods><class-id>Graphics.Fonts.PFMHeader class</class-id> <category>test instances</category><body package="Fonts test resources">example	^PFMHeader		copyright: 'Copyright 1997, 1999, 2002, 2006 by Luc[as] de Groot. All' , #[0 0 0] asByteString		ascent: 864		internalLeading: 62		externalLeading: 0		italic: false		underline: false		strikeOut: false		weight: 400		charSet: 0		pixHeight: 1062		pitchAndFamily: 33		avgWidth: 382		maxWidth: 1025		firstChar: 5		lastChar: 255		defaultChar: 27		breakChar: 0</body><body package="Fonts test resources">exampleBytes	^self exampleBytesTazLT4SemiLight</body><body package="Fonts test resources">exampleBytesTazLT4SemiLight	^#[67 111 112 121 114 105 103 104 116 32 49 57 57 55 44 32 49 57 57 57 44 32 50 48 48 50 44 32 50 48 48 54 32 98 121 32 76 117 99 91 97 115 93 32 100 101 32 71 114 111 111 116 46 32 65 108 108 0 0 0 129 0 10 0 44 1 44 1 96 3 62 0 0 0 0 0 0 144 1 0 0 0 38 4 33 126 1 1 4 5 255 27 0 0 0]</body></methods><methods><class-id>Graphics.Fonts.PFMHeader class</class-id> <category>win31 DDK Documentation</category><body package="Fonts Development">doc24StructureReference	^'PFMHEADER	typedef struct PFMHEADER {		WORD  dfVersion;		WORD  dfSize;		char  dfCopyright[60];		WORD  dfType;		WORD  dfPoints;		WORD  dfVertRes;		WORD  dfHorizRes;		WORD  dfAscent;		WORD  dfInternalLeading;		WORD  dfExternalLeading;		BYTE  dfItalic;		BYTE  dfUnderline;		BYTE  dfStrikeOut;		WORD  dfWeight;		BYTE  dfCharSet;		WORD  dfPixWidth;		WORD  dfPixHeight;		BYTE  dfPitchAndFamily;		WORD  dfAvgWidth;		WORD  dfMaxWidth;		BYTE  dfFirstChar;		BYTE  dfLastChar;		BYTE  dfDefaultChar;		BYTE  dfBreakChar;		WORD  dfWidthBytes;		DWORD dfDevice;		DWORD dfFace;		DWORD dfBitsPointer;		DWORD dfBitsOffset;	} PFMHEADER;The PFMHEADER structure contains the information about a Windows raster or vector font. The PFMHEADER structure is identical to the Windows 2.x FONTINFO structure. The PFMHEADER structure is also identical to a font-file header. For more information about the FONTINFO structure, see the Microsoft Windows Device Driver Adaptation Guide.'</body><body package="Fonts Development">kb65123FontFileFormat	^'Field          Description-----          -----------dfVersion      2 bytes specifying the version (0200H or 0300H) of               the file.dfSize         4 bytes specifying the total size of the file in               bytes.dfCopyright    60 bytes specifying copyright information.dfType         2 bytes specifying the type of font file.               The low-order byte is exclusively for GDI use. If the               low-order bit of the WORD is zero, it is a bitmap               (raster) font file. If the low-order bit is 1, it is a               vector font file. The second bit is reserved and must               be zero. If no bits follow in the file and the bits are               located in memory at a fixed address specified in               dfBitsOffset, the third bit is set to 1; otherwise, the               bit is set to 0 (zero). The high-order bit of the low               byte is set if the font was realized by a device. The               remaining bits in the low byte are reserved and set to               zero.               The high byte is reserved for device use and will               always be set to zero for GDI-realized standard fonts.               Physical fonts with the high-order bit of the low byte               set may use this byte to describe themselves. GDI will               never inspect the high byte.dfPoints       2 bytes specifying the nominal point size at which               this character set looks best.dfVertRes      2 bytes specifying the nominal vertical resolution               (dots-per-inch) at which this character set was               digitized.dfHorizRes     2 bytes specifying the nominal horizontal resolution               (dots-per-inch) at which this character set was               digitized.dfAscent       2 bytes specifying the distance from the top of a               character definition cell to the baseline of the               typographical font. It is useful for aligning the               baselines of fonts of different heights.dfInternalLeading               Specifies the amount of leading inside the bounds set               by dfPixHeight. Accent marks may occur in this area.               This may be zero at the designer''s option.dfExternalLeading               Specifies the amount of extra leading that the designer               requests the application add between rows. Since this               area is outside of the font proper, it contains no               marks and will not be altered by text output calls in               either the OPAQUE or TRANSPARENT mode. This may be zero               at the designer''s option.dfItalic       1 (one) byte specifying whether or not the character               definition data represent an italic font. The low-order               bit is 1 if the flag is set. All the other bits are               zero.dfUnderline    1 byte specifying whether or not the character               definition data represent an underlined font. The               low-order bit is 1 if the flag is set. All the other               bits are 0 (zero).dfStrikeOut    1 byte specifying whether or not the character               definition data represent a struckout font. The low-               order bit is 1 if the flag is set. All the other bits               are zero.dfWeight       2 bytes specifying the weight of the characters in the               character definition data, on a scale of 1 to 1000. A               dfWeight of 400 specifies a regular weight.dfCharSet      1 byte specifying the character set defined by this               font.dfPixWidth     2 bytes. For vector fonts, specifies the width of the               grid on which the font was digitized. For raster fonts,               if dfPixWidth is nonzero, it represents the width for               all the characters in the bitmap; if it is zero, the               font has variable width characters whose widths are               specified in the dfCharTable array.dfPixHeight    2 bytes specifying the height of the character bitmap               (raster fonts), or the height of the grid on which a               vector font was digitized.dfPitchAndFamily               Specifies the pitch and font family. The low bit is set               if the font is variable pitch. The high four bits give               the family name of the font. Font families describe in               a general way the look of a font. They are intended for               specifying fonts when the exact face name desired is               not available. The families are as follows:                  Family               Description                  ------               -----------                  FF_DONTCARE (0&lt;&lt;4)   Don''t care or don''t know.                  FF_ROMAN (1&lt;&lt;4)      Proportionally spaced fonts                                       with serifs.                  FF_SWISS (2&lt;&lt;4)      Proportionally spaced fonts                                       without serifs.                  FF_MODERN (3&lt;&lt;4)     Fixed-pitch fonts.                  FF_SCRIPT (4&lt;&lt;4)                  FF_DECORATIVE (5&lt;&lt;4)dfAvgWidth     2 bytes specifying the width of characters in the font.               For fixed-pitch fonts, this is the same as dfPixWidth.               For variable-pitch fonts, this is the width of the               character "X."dfMaxWidth     2 bytes specifying the maximum pixel width of any               character in the font. For fixed-pitch fonts, this is               simply dfPixWidth.dfFirstChar    1 byte specifying the first character code defined by               this font. Character definitions are stored only for               the characters actually present in a font. Therefore,               use this field when calculating indexes into either               dfBits or dfCharOffset.dfLastChar     1 byte specifying the last character code defined by               this font. Note that all the characters with codes               between dfFirstChar and dfLastChar must be present in               the font character definitions.dfDefaultChar  1 byte specifying the character to substitute               whenever a string contains a character out of the               range. The character is given relative to dfFirstChar               so that dfDefaultChar is the actual value of the               character, less dfFirstChar. The dfDefaultChar should               indicate a special character that is not a space.dfBreakChar    1 byte specifying the character that will define word               breaks. This character defines word breaks for word               wrapping and word spacing justification. The character               is given relative to dfFirstChar so that dfBreakChar is               the actual value of the character, less that of               dfFirstChar. The dfBreakChar is normally (32 -               dfFirstChar), which is an ASCII space.dfWidthBytes   2 bytes specifying the number of bytes in each row of               the bitmap. This is always even, so that the rows start               on WORD boundaries. For vector fonts, this field has no               meaning.dfDevice       4 bytes specifying the offset in the file to the string               giving the device name. For a generic font, this value               is zero.dfFace         4 bytes specifying the offset in the file to the               null-terminated string that names the face.dfBitsPointer  4 bytes specifying the absolute machine address of               the bitmap. This is set by GDI at load time. The               dfBitsPointer is guaranteed to be even.dfBitsOffset   4 bytes specifying the offset in the file to the               beginning of the bitmap information. If the 04H bit in               the dfType is set, then dfBitsOffset is an absolute               address of the bitmap (probably in ROM).               For raster fonts, dfBitsOffset points to a sequence of               bytes that make up the bitmap of the font, whose height               is the height of the font, and whose width is the sum               of the widths of the characters in the font rounded up               to the next WORD boundary.               For vector fonts, it points to a string of bytes or               words (depending on the size of the grid on which the               font was digitized) that specify the strokes for each               character of the font. The dfBitsOffset field must be               even.dfReserved     1 byte, not used.dfFlags        4 bytes specifying the bits flags, which are additional               flags that define the format of the Glyph bitmap, as               follows:               DFF_FIXED            equ  0001h ; font is fixed pitch               DFF_PROPORTIONAL     equ  0002h ; font is proportional                                               ; pitch               DFF_ABCFIXED         equ  0004h ; font is an ABC fixed                                               ; font               DFF_ABCPROPORTIONAL  equ  0008h ; font is an ABC pro-                                               ; portional font               DFF_1COLOR           equ  0010h ; font is one color               DFF_16COLOR          equ  0020h ; font is 16 color               DFF_256COLOR         equ  0040h ; font is 256 color               DFF_RGBCOLOR         equ  0080h ; font is RGB colordfAspace       2 bytes specifying the global A space, if any. The               dfAspace is the distance from the current position to               the left edge of the bitmap.dfBspace       2 bytes specifying the global B space, if any. The               dfBspace is the width of the character.dfCspace       2 bytes specifying the global C space, if any. The               dfCspace is the distance from the right edge of the               bitmap to the new current position. The increment of a               character is the sum of the three spaces. These apply               to all glyphs and is the case for DFF_ABCFIXED.dfColorPointer               4 bytes specifying the offset to the color table for               color fonts, if any. The format of the bits is similar               to a DIB, but without the header. That is, the               characters are not split up into disjoint bytes.               Instead, they are left intact. If no color table is               needed, this entry is NULL.               [NOTE: This information is different from that in the               hard-copy Developer''s Notes and reflects a correction.]dfReserved1    16 bytes, not used.               [NOTE: This information is different from that in the               hard-copy Developer''s Notes and reflects a correction.]dfCharTable    For raster fonts, the CharTable is an array of entries               each consisting of two 2-byte WORDs for Windows 2.x and               three 2-byte WORDs for Windows 3.0. The first WORD of               each entry is the character width. The second WORD of               each entry is the byte offset from the beginning of the               FONTINFO structure to the character bitmap. For Windows               3.0, the second and third WORDs are used for the               offset.               There is one extra entry at the end of this table that               describes an absolute-space character. This entry               corresponds to a character that is guaranteed to be               blank; this character is not part of the normal               character set.               The number of entries in the table is calculated as               ((dfLastChar - dfFirstChar) + 2). This includes a               spare, the sentinel offset mentioned in the following               paragraph.               For fixed-pitch vector fonts, each 2-byte entry in this               array specifies the offset from the start of the bitmap               to the beginning of the string of stroke specification               units for the character. The number of bytes or WORDs               to be used for a particular character is calculated by               subtracting its entry from the next one, so that there               is a sentinel at the end of the array of values.               For proportionally spaced vector fonts, each 4-byte               entry is divided into two 2-byte fields. The first               field gives the starting offset from the start of the               bitmap of the character strokes. The second field gives               the pixel width of the character.&lt;facename&gt;     An ASCII character string specifying the name of the               font face. The size of this field is the length of the               string plus a NULL terminator.&lt;devicename&gt;   An ASCII character string specifying the name of the               device if this font file is for a specific device. The               size of this field is the length of the string plus a               NULL terminator.&lt;bitmaps&gt;      This field contains the character bitmap definitions.               Each character is stored as a contiguous set of bytes.               (In the old font format, this was not the case.)               The first byte contains the first 8 bits of the first               scanline (that is, the top line of the character). The               second byte contains the first 8 bits of the second               scanline. This continues until a first "column" is               completely defined.               The following byte contains the next 8 bits of the               first scanline, padded with zeros on the right if               necessary (and so on, down through the second               "column"). If the glyph is quite narrow, each scanline               is covered by 1 byte, with bits set to zero as               necessary for padding. If the glyph is very wide, a               third or even fourth set of bytes can be present.                  NOTE: The character bitmaps must be stored                  contiguously and arranged in ascending order.               The following is a single-character example, in which               are given the bytes for a 12 x 14 pixel character, as               shown here schematically.                  ............                  .....**.....                  ....*..*....                  ...*....*...                  ..*......*..                  ..*......*..                  ..*......*..                  ..********..                  ..*......*..                  ..*......*..                  ..*......*..                  ............                  ............                  ............               The bytes are given here in two sets, because the               character is less than 17 pixels wide.                  00 06 09 10 20 20 20 3F 20 20 20 00 00 00                  00 00 00 80 40 40 40 C0 40 40 40 00 00 00               Note that in the second set of bytes, the second digit               of each is always zero. It would correspond to the 13th               through 16th pixels on the right side of the character,               if they were present.'</body></methods><methods><class-id>Graphics.Fonts.ByteReadStream</class-id> <category>accessing</category><body package="Fonts Basics">bigEndian	"&lt;Boolean&gt;	true iff big endian, false iff little endian"	^bigEndian ifNil: [UninterpretedBytes isBigEndian]</body><body package="Fonts Basics">bigEndian: aBoolean	bigEndian := aBoolean</body><body package="Fonts Basics">nextBooleanByte	"&lt;Boolean&gt;"	^(UninterpretedBytes from: (self next: 1)) booleanByteAt: 1</body><body package="Fonts Basics">nextFixed	"&lt;Float&gt;"	"Most tables have version numbers, and the version number for the entire font is contained in the Table Directory. Note that there are two different table version number types, each with its own numbering scheme. USHORT version numbers always start at zero (0). Fixed version numbers start at one (1.0 or 0x00010000), except where noted (EBDT, EBLC and EBSC tables).Implementations reading tables must include code to check version numbers so that if and when the format and therefore the version number changes, older implementations will reject newer versions gracefully, if the changes are incompatible.When a Fixed number is used as a version, the upper 16 bits comprise a major version number, and the lower 16 bits a minor. Tables with non-zero minor version numbers always specify the literal value of the version number since the normal representation of Fixed numbers is not necessarily followed. For example, the version number of 'maxp' table version 0.5 is 0x00005000, and that of 'vhea' table version 1.1 is 0x00011000. If an implementation understands a major version number, then it can safely proceed reading the table. The minor version number indicates extensions to the format that are undetectable by implementations that do not support them.The only exception to this is the Offset Table's sfnt version. This serves solely to identify whether the OpenType font contains TrueType outlines (a value of 1.0) or CFF data (the tag 'OTTO'), as described in the section below, 'Organization of an OpenType font.'When a USHORT number is used to indicate version, it should be treated as though it were a minor version number; i.e., all format changes are compatible extensions."	^(self nextLong / 16r10000) asFloat</body><body package="Fonts Basics">nextFixedVersion	"&lt;FixedPoint&gt;"	"Most tables have version numbers, and the version number for the entire font is contained in the Table Directory. Note that there are two different table version number types, each with its own numbering scheme. USHORT version numbers always start at zero (0). Fixed version numbers start at one (1.0 or 0x00010000), except where noted (EBDT, EBLC and EBSC tables).Implementations reading tables must include code to check version numbers so that if and when the format and therefore the version number changes, older implementations will reject newer versions gracefully, if the changes are incompatible.When a Fixed number is used as a version, the upper 16 bits comprise a major version number, and the lower 16 bits a minor. Tables with non-zero minor version numbers always specify the literal value of the version number since the normal representation of Fixed numbers is not necessarily followed. For example, the version number of 'maxp' table version 0.5 is 0x00005000, and that of 'vhea' table version 1.1 is 0x00011000. If an implementation understands a major version number, then it can safely proceed reading the table. The minor version number indicates extensions to the format that are undetectable by implementations that do not support them.The only exception to this is the Offset Table's sfnt version. This serves solely to identify whether the OpenType font contains TrueType outlines (a value of 1.0) or CFF data (the tag 'OTTO'), as described in the section below, 'Organization of an OpenType font.'When a USHORT number is used to indicate version, it should be treated as though it were a minor version number; i.e., all format changes are compatible extensions."	| major byte1String byte2String fraction |	major := self nextUnsignedShort.	byte1String := '0' , (self next printStringRadix: 16) last: 2.	byte2String := '0' , (self next printStringRadix: 16) last: 2.	fraction := ('0.' , byte1String , byte2String) asNumber.	^major + fraction</body><body package="Fonts Basics">nextLong	"&lt;Integer&gt;"	^(UninterpretedBytes from: (self next: 4)) longAt: 1 bigEndian: self bigEndian</body><body package="Fonts Basics">nextLongDateTime	"&lt;Timestamp&gt;"	"LONGDATETIME 	created 	Number of seconds since 12:00 midnight that started January 1st 1904 in GMT/UTC time zone. 64-bit integer"	^Timestamp fromLongDateTime: self nextLongLong</body><body package="Fonts Basics">nextLongLong	"&lt;Integer&gt;"	^(UninterpretedBytes from: (self next: 8)) longLongAt: 1 bigEndian: self bigEndian</body><body package="Fonts Basics">nextShort	"&lt;Integer&gt;"	^(UninterpretedBytes from: (self next: 2)) shortAt: 1 bigEndian: self bigEndian</body><body package="Fonts Basics">nextString	"&lt;ByteString&gt;"	^(self upTo: 0) asByteString</body><body package="Fonts Basics">nextUnsignedLong	"&lt;Integer&gt;"	^(UninterpretedBytes from: (self next: 4)) unsignedLongAt: 1 bigEndian: self bigEndian</body><body package="Fonts Basics">nextUnsignedShort	"&lt;Integer&gt;"	^(UninterpretedBytes from: (self next: 2)) unsignedShortAt: 1 bigEndian: self bigEndian</body></methods><methods><class-id>Graphics.Fonts.ByteReadStream class</class-id> <category>instance creation</category><body package="Fonts Basics">bigEndianOn: aByteArray	| inst |	inst := self on: aByteArray.	inst bigEndian: true.	^inst</body><body package="Fonts Basics">littleEndianOn: aByteArray	| inst |	inst := self on: aByteArray.	inst bigEndian: false.	^inst</body></methods><methods><class-id>Graphics.Fonts.KernTrack</class-id> <category>printing</category><body package="Type1">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'degree' value: self degree).	args add: (printer constant: 'minSize' value: self minSize).	args add: (printer constant: 'minAmount' value: self minAmount).	args add: (printer constant: 'maxSize' value: self maxSize).	args add: (printer constant: 'maxAmount' value: self maxAmount).	^printer printvalue: self arguments: args</body></methods><methods><class-id>Graphics.Fonts.KernTrack</class-id> <category>accessing</category><body package="Type1">degree	"&lt;Integer&gt;	short: the amount to change the character spacing. Negative values mean closer together, positive values mean farther apart"	^degree</body><body package="Type1">maxAmount	"&lt;Integer&gt;	short: the track kerning amount to use for font heights greater or equal maxSize"	^maxAmount</body><body package="Type1">maxSize	"&lt;Integer&gt;	short: the maximum font height (in device units) for which to use linear track kerning. For font heights between minSize and maxSize the track kerning amount has to increase linearily from minAmount to maxAmount"	^maxSize</body><body package="Type1">minAmount	"&lt;Integer&gt;	short: the track kerning amount to use for font heights less or equal minSize"	^minAmount</body><body package="Type1">minSize	"&lt;Integer&gt;	short: the minimum font height (in device units) for which to use linear track kerning"	^minSize</body></methods><methods><class-id>Graphics.Fonts.KernTrack</class-id> <category>converting</category><body package="Type1">asBytes	"&lt;ByteArray[10]&gt;	ByteArray suited to be written to a PFM file"	| wst |	wst := ByteWriteStream littleEndianOn: (ByteArray new: 10).	wst		nextPutShort: self degree;		nextPutShort: self minSize;		nextPutShort: self minAmount;		nextPutShort: self maxSize;		nextPutShort: self maxAmount.	^wst contents</body></methods><methods><class-id>Graphics.Fonts.KernTrack</class-id> <category>initialize-release</category><body package="Type1">initializeDegree: degreeInteger minSize: minSizeInteger minAmount: minAmountInteger maxSize: maxSizeInteger maxAmount: maxAmountInteger	degree := degreeInteger.	minSize := minSizeInteger.	minAmount := minAmountInteger.	maxSize := maxSizeInteger.	maxAmount := maxAmountInteger.	self beImmutable</body></methods><methods><class-id>Graphics.Fonts.KernTrack class</class-id> <category>instance creation</category><body package="Type1">degree: degreeInteger minSize: minSizeInteger minAmount: minAmountInteger maxSize: maxSizeInteger maxAmount: maxAmountInteger	| inst |	inst := self new.	inst		initializeDegree: degreeInteger		minSize: minSizeInteger		minAmount: minAmountInteger		maxSize: maxSizeInteger		maxAmount: maxAmountInteger.	^inst</body><body package="Type1">fromBytes: aByteArray10	| rst |	rst := ByteReadStream littleEndianOn: aByteArray10.	^self		degree: rst nextShort		minSize: rst nextShort		minAmount: rst nextShort		maxSize: rst nextShort		maxAmount: rst nextShort</body></methods><methods><class-id>Graphics.Fonts.KernTrack class</class-id> <category>test instances</category><body package="Fonts test resources">example	^KernTrack degree: -40 minSize: 5 minAmount: -10 maxSize: 10 maxAmount: -40</body></methods><methods><class-id>Graphics.Fonts.AdobeFontMetric</class-id> <category>private</category><body package="Type1">ascender: aString	ascender := aString asNumber</body><body package="Type1">capHeight: aString	capHeight := aString asNumber</body><body package="Type1">charMetricsSize: aString	aString isEmpty ifTrue: [^self].	charMetricsSize := aString asNumber</body><body package="Type1">charWidth: aString	self direction charWidth: aString</body><body package="Type1">characterSet: aString	characterSet := aString</body><body package="Type1">characters: aString	characters := aString asNumber</body><body package="Type1">comment: aString	comment := self comment , (self comment isEmpty ifTrue: [''] ifFalse: ['']), aString</body><body package="Type1">compositesSize: aString	aString isEmpty ifTrue: [^self].	aString asNumber</body><body package="Type1">descender: aString	descender := aString asNumber</body><body package="Type1">encodingScheme: aString	encodingScheme := aString</body><body package="Type1">familyName: aString	familyName := aString</body><body package="Type1">fileFormatVersion: aString	fileFormatVersion := aString</body><body package="Type1">fontBBox: aString	| numbers llx lly urx ury |	numbers := (aString tokensBasedOn: Character space) collect: [:token |		token asNumber].	llx := numbers at: 1.	lly := numbers at: 2.	urx := numbers at: 3.	ury := numbers at: 4.	fontBBox := llx @ lly corner: urx @ ury</body><body package="Type1">fontName: aString	fontName := aString</body><body package="Type1">fullName: aString	fullName := aString</body><body package="Fonts Development">isBaseFont: aString	isBaseFont := aString = 'true'.	isBaseFont ifFalse: [		self error: 'only base fonts supported so far']</body><body package="Fonts Development">isCIDFont: aString	aString = 'true' ifTrue: [		self error: 'no CID fonts supported so far']</body><body package="Type1">isFixedPitch: aString	self direction isFixedPitch: aString</body><body package="Fonts Development">isFixedV: aString	isFixedV := aString = 'true'.	isFixedV ifFalse: [		self error: 'only one direction supported so far']</body><body package="Type1">italicAngle: aString	self direction italicAngle: aString</body><body package="Type1">kernDataSize: aString	"ignore"	aString isEmpty ifTrue: [^self]</body><body package="Type1">kernPairsSize: aString	aString isEmpty ifTrue: [^self].	kernPairsSize := aString asNumber</body><body package="Type1">metricsSets: aString	metricsSets := aString asNumber.	metricsSets = 0 ifFalse: [		self error: 'only horizontal direction supported so far']</body><body package="Type1">notice: aString	notice := aString</body><body package="Type1">trackKernSize: aString	aString isEmpty ifTrue: [^self].	aString asNumber</body><body package="Type1">underlinePosition: aString	self direction underlinePosition: aString</body><body package="Type1">underlineThickness: aString	self direction underlineThickness: aString</body><body package="Fonts Development">vVector: aString	| numbers |	numbers := (aString tokensBasedOn: Character space) collect: [:token |		token asNumber].	vVector := numbers first @ numbers last</body><body package="Type1">version: aString	version := aString</body><body package="Type1">weight: aString	weight := aString</body><body package="Type1">xHeight: aString	xHeight := aString asNumber</body></methods><methods><class-id>Graphics.Fonts.AdobeFontMetric</class-id> <category>attributes</category><body package="Type1">ascender	"&lt;Number&gt;"	"(Optional.) For roman font programs: usually the y-value of the top of the lowercase d. If this font program contains no lowercase d, this keyword might be missing or number might be 0."	^ascender ifNil: [0]</body><body package="Type1">capHeight	"&lt;Number&gt;"	"(Optional.) Usually the y-value of the top of the capital H. If this font program contains no capital H, this keyword might be missing or number might be 0."	^capHeight ifNil: [0]</body><body package="Type1">charMetricsSize	"&lt;Integer&gt;"	^charMetricsSize ifNil: [		200]</body><body package="Type1">charWidth	^self direction charWidth</body><body package="Type1">characterSet	"&lt;String&gt;"	"(Optional.) String describing the character set (glyph complement) of this font program.Examples: AdobeStandardLatin; AdobeStandardCyrillic"	^characterSet</body><body package="Type1">characters	"&lt;Integer&gt;"	"(Optional.) The number of characters defined in this font program."	^characters</body><body package="Type1">comment	"&lt;String&gt;	may have multiple lines: one for each comment statement"	^comment ifNil: [		String new]</body><body package="Type1">descender	"&lt;Number&gt;"	"(Optional.) For roman font programs: typically the y-value of the bottom of the lowercase p. If this font program contains no lowercase p, this keyword might be missing or number might be 0."	^descender ifNil: [0]</body><body package="Type1">encodingScheme	"&lt;String&gt;"	"(Optional.) String indicating the default encoding vector for this font program. Common ones are AdobeStandardEncoding and JIS12-88-CFEncoding. Special font programs might state FontSpecific."	^encodingScheme</body><body package="Type1">familyName	"&lt;String&gt;	(Optional.) The name of the typeface family to which the font belongs."	^familyName ifNil: [		self fontName copyUpTo: $-]</body><body package="Fonts test resources">fileFormatVersion	"&lt;String&gt;"	^fileFormatVersion</body><body package="Type1">fontBBox	"&lt;Rectangle&gt;	(Required.) Four numbers giving the lower left corner and the upper right corner of the font bounding box, in the sequence llx lly urx ury.NoteThe bounding box given here is that of the flattened paths, not the Bézier curve descriptions. These values were specified to be integers in version 3.0 and before, but with the addition of multiple master fonts, the use of “numbers” is allowed."	^fontBBox</body><body package="Type1">fontName	"&lt;String&gt;"	"(Required.) Name of the font program as presented to the PostScript language findfont operator."	^fontName</body><body package="Type1">fullName	"&lt;String&gt;	(Optional.) The full text name of the font."	^fullName</body><body package="Type1">headroom	"&lt;Number&gt;	the distance between ascend to upper bound of the fontBBox"	^self fontBBox corner y - self ascender</body><body package="Fonts Development">isBaseFont	"&lt;Boolean&gt;"	"(Optional.) boolean is true if this font program is a base font and false otherwise. If not present, this is assumed to be a base font program. Always false in the top level of an ACFM file."	^isBaseFont ifNil: [		true]</body><body package="Fonts Development">isCIDFont	"&lt;Boolean&gt;"	"(Required if AFM is for a CID-keyed font.) If the boolean is true, the font is a CID-keyed font, and the metrics are in CID number order. If CID number is omitted, there is no character for that code point."	^false</body><body package="Type1">isFixedPitch	^self direction isFixedPitch</body><body package="Fonts Development">isFixedV	"&lt;Boolean&gt;"	"(Optional.) If boolean is true, this indicates that VVector is the same for every character in this font. If this keyword is present, its value must not conflict with VVector; if absent, its value is assumed to be true if VVector is present, and false if VVector is absent."	^isFixedV ifNil: [		true]</body><body package="Type1">italicAngle	"&lt;Number&gt;"	^self direction italicAngle</body><body package="Type1">kernPairsSize	"&lt;Integer&gt;"	^kernPairsSize ifNil: [		100]</body><body package="Type1">metricsSets	"&lt;Integer[0 1 2]&gt;	0 = writing directions 0 only	1 = writing directions 1 only	2 = both"	^metricsSets ifNil: [0]</body><body package="Type1">notice	"&lt;String&gt;"	"(Optional.) Font name trademark or copyright notice."	^notice</body><body package="Type1">underlinePosition	^self direction underlinePosition</body><body package="Type1">underlineThickness	^self direction underlineThickness</body><body package="Fonts Development">vVector	"&lt;Point x: Number y: Number&gt;"	"(Required when MetricsSets 2.) Components of a vector from origin 0 (the origin for writing direction 0) to origin 1 (the origin for writing direction 1). If present, then the VVectors for all characters are the same (and IsFixedV is true); otherwise they are not the same."	^vVector</body><body package="Type1">version	"&lt;String&gt;"	"(Optional.) Font program version identifier. Matches the string found in the FontInfo dictionary of the font program itself."	^version</body><body package="Type1">weight	"&lt;String&gt;	(Optional.) Weight of the font."	^weight</body><body package="Type1">weightNumber	"&lt;Integer [1..999]&gt;	(Optional.) Weight of the font."	| dict |	dict := Dictionary new.	dict at: 'thin' put: 100.	dict at: 'extralight' put: 200.	dict at: 'ultralight' put: 200.	dict at: 'light' put: 300.	dict at: 'normal' put: 400.	dict at: 'regular' put: 400.	dict at: 'book' put: 400.	dict at: 'medium' put: 500.	dict at: 'roman' put: 500.	dict at: 'semibold' put: 600.	dict at: 'demibold' put: 600.	dict at: 'demi' put: 600.	dict at: 'bold' put: 700.	dict at: 'extra bold' put: 800.	dict at: 'extrabold' put: 800.	dict at: 'ultrabold' put: 800.	dict at: 'heavy' put: 900.	dict at: 'black' put: 900.	dict at: 'extrablack' put: 950.	dict at: 'ultrablack' put: 950.	^dict at: self weight asLowercase ifAbsent: [400]</body><body package="Type1">xHeight	"&lt;Number&gt;"	"(Optional.) Typically the y-value of the top of the lowercase x. If this font program contains no lowercase x, this keyword might be missing or number might be 0."	^xHeight ifNil: [0]</body></methods><methods><class-id>Graphics.Fonts.AdobeFontMetric</class-id> <category>accessing encoding</category><body package="Type1">byteEncoder	"&lt;ByteCharacterEncoder&gt;"	self encodingScheme = 'AdobeStandardEncoding' ifTrue: [		^Font standardEncoder].	self encodingScheme = 'WinAnsiEncoding' ifTrue: [		^Font winAnsiEncoder].	self encodingScheme = 'FontSpecific' ifTrue: [		^Font winAnsiEncoder]</body><body package="Type1">encodedCharMetrics	^self charMetrics reject: [:charMetric | charMetric c = -1]</body><body package="Type1">firstChar	"&lt;Integer&gt;"	self newEncoder decoder doWithIndex: [:char :i |		char asInteger = Character illegalCode ifFalse: [			^i - 1]].	^self error: 'no character'</body><body package="Type1">lastChar	"&lt;Integer&gt;"	self newEncoder decoder reverse doWithIndex: [:char :i |		char asInteger = Character illegalCode ifFalse: [			^256 - i]].	^self error: 'no character'</body><body package="Type1">newEncoder	"&lt;ByteCharacterEncoder&gt;	Encoder with the font-specified mapping.	unencoded characters are not treated"	| encoder |	encoder := ByteCharacterEncoder new.	self encodedCharMetrics do: [:charMetric |		charMetric asCharacter ifNotNil: [:character |			(self platformEncoder encode: character) = Character illegalCode ifFalse: [				encoder encode: character as: charMetric c]]].	^encoder</body><body package="Type1">platformEncoder	^Locale current defaultStreamEncoder</body><body package="Type1">unencodedCharMetrics	^self charMetrics select: [:charMetric | charMetric c = -1]</body><body package="Type1">widths	"&lt;Array of: Integer&gt;	lastChar - firstChar + 1 widths"	^(self firstChar to: self lastChar) collect: [:i |		| m |		m := self charMetricAt: i.		m ifNil: [0] ifNotNil: [m width]]</body><body package="Type1">widths256	"&lt;Array of: Integer&gt;	256 widths"	^(0 to: 255)		collect: [:i | (self charMetricAt: i) ifNotNil: #width ifNil: [0]]</body></methods><methods><class-id>Graphics.Fonts.AdobeFontMetric</class-id> <category>accessing</category><body package="Type1">addComposite: composite	self composites add: composite</body><body package="Type1">addKernPair: kernPair	self kernPairs add: kernPair</body><body package="Type1">addTrackKern: kernPair	self trackKern add: kernPair</body><body package="Type1">charMetricAt: index	"&lt;CharMetric | nil&gt;"	^self charMetrics detect: [:cm |		cm c = index	] ifNone: [		nil]</body><body package="Type1">charMetricNamed: symbol	"&lt;CharMetric&gt;"	^self charMetrics detect: [:cm |		cm n = symbol	] ifNone: [		nil]</body><body package="Type1">charMetrics	"&lt;Collection of: CharMetric&gt;"	^charMetrics ifNil: [charMetrics := OrderedCollection new: self charMetricsSize]</body><body package="Type1">composites	"&lt;Collection of: Object&gt;"	"The composite character data section also appears only in AFM files. It is optional. Composite characters are new characters made up of characters already existing in the font program, such as accented characters. Character metric information for composite characters is found in the Character Metrics section of the AFM file.Although most PostScript language font programs available from Adobe Systems include a rather extensive set of composite characters, some applications might want to generate their own. This section provides the data necessary for accurate positioning of the individual pieces. All units are expressed in the standard 1000 unit-per-font-scale-factor charactercoordinate system. StartComposites integerEndComposites(Required if composite character data are present.) integer indicates how many pairs to expect. The data for each composite character is represented as a list of keys and values separated by semicolons. Each composite character gets one line of description. The following are the standard keys:CC name integerThe composite character name followed by the number of parts that comprise the composite.PCC name deltax deltayOne of the parts of the composite character. The character name is given followed by the x and y displacement from the origin. A composite character line might look like thisCC Aacute 2; PCC A 0 0; PCC acute 194 214;"	^composites ifNil: [		composites := OrderedCollection new]</body><body package="Fonts UI Support">descriptionText	^self description</body><body package="Type1">direction	"&lt;DirectionalFontMetric&gt;	horizontal only"	"(Optional if MetricsSets 0, required otherwise.) integer is 0, 1, or 2. Encloses the metrics for writing direction integer. StartDirection 2 implies that the metrics for both writing directions are the same. If MetricsSets 0 was specified or implied, StartDirection ... EndDirection can be omitted, and StartDirection 0 is implied."	^self directions at: self metricsSets</body><body package="Type1">directions	"&lt;Dictionary key: Integer[0 1 2] value: DirectionalFontMetric&gt;	0 = horizontal only	1 = vertical only	2 = both"	^directions ifNil: [		| dict |		dict := Dictionary new.		dict at: 0 put: DirectionalFontMetric new.		directions := dict]</body><body package="Type1">font	"&lt;FontClass&gt;"	^font</body><body package="Type1">font: aFont	font := aFont</body><body package="Fonts Development">kernData	"&lt;Collection of: Object&gt;"	"The kerning data section appears only in the AFM file. It is optional and may or may not be present for a given font program. The section is surrounded by the lines StartKernData and EndKernData.Kerning data is supplied in two forms: track kerning and pair-wise kerning. Track kerning is applied to all characters uniformly, whereas pair-wise kerning is applied to specific character pairs. Track kerning and pair-wise kerning can be used independently or together (that is, it is possible to apply track kerning to a line of text and then to apply pair-wise kerning after). The two forms of kerning data are treated as subsections within the kerning data section, and can independently be present or absent.StartKernDataEndKernData(Required if track or pair-wise kerning are present.) These keywords delimit the kerning section of the file."	| list |	list := OrderedCollection new.	trackKern ifNotNil: [list add: self trackKern].	kernPairs ifNotNil: [list add: self kernPairs].	^list</body><body package="Type1">kernPairs	"&lt;Collection of: KernPair&gt;"	"The pair-wise kerning data is surrounded by the keywords:StartKernPairs integerEndKernPairsStartKernPairs0 integerEndKernPairsStartKernPairs1 integerEndKernPairs(Required if pair-wise kerning data are present.) integer indicates the number of pairs to expect. StartKernPairs and StartKernPairs0 denote writing direction 0; StartKernPairs1 denotes writing direction 1. An AFM file can contain pair-wise kerning data for more than one writing direction, each delimited by the StartKernPairs0 or StartKernPairs1 ... EndKernPairs. There is one kerning pair per line. Each line begins with a keyword of the form KP, KPH, KPX, or KPY."	^kernPairs ifNil: [		kernPairs := OrderedCollection new: self kernPairsSize]</body><body package="Fonts UI Support">listIcon	^FontListIcons visualFor: #afm</body><body package="Fonts UI Support">listText	^(self fontName, ' metrics') asText</body><body package="Type1">postScriptName	"&lt;String&gt;	the name as used by PostScript and PDF"	^self fontName</body><body package="Type1">stdHW	"&lt;Number&gt;"	"(Optional). This number specifies the dominant width of horizontal stems (measured vertically in character space units)."	^stdHW ifNil: [0]</body><body package="Type1">stdHW: aString	stdHW := aString asNumber</body><body package="Type1">stdVW	"&lt;Number&gt;"	"(Optional). This number specifies the dominant with of vertical stems (measured horizontally in character space units)."	^stdVW ifNil: [0]</body><body package="Type1">stdVW: aString	stdVW := aString asNumber</body><body package="Type1">stemV	"&lt;Number&gt;"	^stdVW ifNil: [		| wc |		wc := self weightNumber / 65.		^(wc * wc + 50) rounded]</body><body package="Type1">trackKern	"&lt;Collection of: String&gt;"	"Track kerning may be specified for those writing directions mentioned by MetricsSets. The track kerning data is surrounded by the keywords:StartTrackKern integerEndTrackKern(Required if track kerning data are present.) integer indicates how many different sets of track kerning data are present.Normally track kerning is provided in different degrees of tightness. Within a track (a degree of tightness), the amount to decrease (or possibly increase) the amount of space between characters increases (or possibly decreases) with the point size of the font (for example, for tight track kerning, the amount to decrease the space between characters at 6 point might be 0.1 points and at 72 point it might be 3.78 points). These distances are measured along the width of the characters: parallel to the x-axis for horizontal writing directions and parallel to the y-axis for vertical writing directions. The data itself begins with the keyword TrackKern and is followed by the track kerning informationTrackKern degree min-ptsize min-kern max-ptsize max-kern The degree is an integer where increasingly negative degrees represent tighter track kerning and increasingly positive degrees represent looser track kerning. min-ptsize, min-kern, max-ptsize, and max-kern are all numbers. Since the track kerning is a linear function, the minimum and maximum cutoffvalues (point sizes) are provided, along with the amount to track kern by, at the point size.The kerning amounts are given relative to the point size. From those four values, the track kerning function can be derived. The track kerning function is a linear function. The equation for the line is determined from the data provided and, therefore, the track kerning values for any point size can be determined. The track kerning values for any point size below/above the minimum/maximum point size are constant (the minimum kerning amount/ maximum kerning amount)."	^trackKern ifNil: [		trackKern := OrderedCollection new]</body><body package="Fonts UI Support">treeChildren	^#()</body><body package="Fonts UI">view	^TextView on: self descriptionText</body></methods><methods><class-id>Graphics.Fonts.AdobeFontMetric</class-id> <category>printing</category><body package="Type1">describeGeneralAttributesOn: wst	self comment notEmpty ifTrue: [		wst			cr;			nextPutAllText: (self comment asText emphasizeAllWith: #italic)].	notice ifNotNil: [		wst			cr;			nextPutAllText: (self notice asText emphasizeAllWith: #(#bold #italic))].	fullName ifNotNil: [		wst			cr;			nextPutAllText: 'FullName ' asText , self fullName asText allBold].	version ifNotNil: [		wst			cr;			nextPutAllText: 'Version ' asText , self version asText allBold].	familyName ifNotNil: [		wst			cr;			nextPutAllText: 'FamilyName ' asText , self familyName asText allBold].	weight ifNotNil: [		wst			cr;			nextPutAllText: 'Weight ' asText , self weight asText allBold].	encodingScheme ifNotNil: [		wst			cr;			nextPutAllText: 'EncodingScheme ' asText , self encodingScheme asText allBold].	fontBBox ifNotNil: [		wst			cr;			nextPutAllText: 'FontBBox ' asText , self fontBBox printString asText allBold].	capHeight ifNotNil: [		wst			cr;			nextPutAllText: 'CapHeight ' asText , self capHeight printString asText allBold].	xHeight ifNotNil: [		wst			cr;			nextPutAllText: 'XHeight ' asText , self xHeight printString asText allBold].	descender ifNotNil: [		wst			cr;			nextPutAllText: 'Descender ' asText , self descender printString asText allBold].	ascender ifNotNil: [		wst			cr;			nextPutAllText: 'Ascender ' asText , self ascender printString asText allBold].	stdHW ifNotNil: [		wst			cr;			nextPutAllText: 'StdHW ' asText , self stdHW printString asText allBold].	stdVW ifNotNil: [		wst			cr;			nextPutAllText: 'StdVW ' asText , self stdVW printString asText allBold]</body><body package="Type1">description	"&lt;Text&gt;"	| wst |	wst := TextStream on: (String new: 200).	wst nextPutAllText: self fontName asText allBold.	self describeGeneralAttributesOn: wst.	self direction describeOn: wst.	^wst contents</body></methods><methods><class-id>Graphics.Fonts.AdobeFontMetric</class-id> <category>initialize-release</category><body package="Type1">initializeFromAfm: readstream	AfmParser parseFrom: readstream into: self</body></methods><methods><class-id>Graphics.Fonts.AdobeFontMetric</class-id> <category>testing</category><body package="Fonts UI Support">hasTreeChildren	^true</body><body package="Type1">isItalic	^self italicAngle isZero not</body></methods><methods><class-id>Graphics.Fonts.AdobeFontMetric class</class-id> <category>parsing</category><body package="Type1">fromAfm: readstream	"self fromAfm: SmallCharts.Süddeutsche.HelveticaNeueBoldCond afmString readStream"	| inst |	inst := self new.	[	inst initializeFromAfm: readstream	] ensure: [readstream close].	(inst fontName isNil or: [	inst fontBBox isNil]) ifTrue: [		^nil].	^inst</body></methods><methods><class-id>Graphics.Fonts.AdobeFontMetric class</class-id> <category>dynamic references</category><body package="Fonts Runtime">dynamicallyReferencedSelectors	^#(#characterSet:)</body></methods><methods><class-id>Graphics.Fonts.AdobeFontMetric class</class-id> <category>test instances</category><body package="Fonts test resources">abrevitatedTimesRoman	^self fromAfm: self abrevitatedTimesRomanString readStream</body><body package="Fonts test resources">abrevitatedTimesRomanString	^'StartFontMetrics 3.0Comment Copyright 1985, 1987, 1989, 1990 Adobe Systems ...[truncated]FontName Times-RomanFullName Times RomanFamilyName TimesWeight RomanItalicAngle 0IsFixedPitch falseFontBBox -170 -223 1024 896UnderlinePosition -109UnderlineThickness 49Version 001.004Notice Copyright 1985, 1987, 1989, 1990 Adobe Systems ...[truncated]EncodingScheme AdobeStandardEncodingCapHeight 662XHeight 448Ascender 682Descender -217StartCharMetrics 228C 32 ; WX 250 ; N space ; B 0 0 0 0 ;C 33 ; WX 333 ; N exclam ; B 109 -14 224 676 ;C 34 ; WX 408 ; N quotedbl ; B 70 445 337 685 ;C 35 ; WX 500 ; N numbersign ; B 4 0 495 662 ;C 36 ; WX 500 ; N dollar ; B 44 -87 456 727 ;C 37 ; WX 833 ; N percent ; B 61 -14 772 676 ;C 101 ; WX 444 ; N e ; B 22 -10 421 458 ;C 102 ; WX 333 ; N f ; B 20 0 383 682 ; L i fi ; L l fl ;C 103 ; WX 500 ; N g ; B 27 -217 470 458 ;C 104 ; WX 500 ; N h ; B 9 0 490 682 ;C 105 ; WX 278 ; N i ; B 22 0 259 682 ;C 249 ; WX 500 ; N oslash ; B 30 -108 470 549 ;C 250 ; WX 722 ; N oe ; B 30 -10 690 458 ;C 251 ; WX 500 ; N germandbls ; B 12 -10 468 682 ;C -1 ; WX 611 ; N Zcaron ; B 7 0 597 888 ;C -1 ; WX 444 ; N ccedilla ; B 25 -215 412 458 ;C -1 ; WX 500 ; N ydieresis ; B 15 -217 476 623 ;C -1 ; WX 750 ; N onehalf ; B 30 -14 720 676 ;EndCharMetricsStartKernDataStartTrackKern 3Comment Light kerningTrackKern -1 14 0 72 -1.89Comment Medium kerningTrackKern -2 8 0 72 -3.2Comment Tight kerningTrackKern -3 6 -.1 72 -3.78EndTrackKernStartKernPairs 113KPX A y -92KPX A w -92KPX y period -65KPX y comma -65EndKernPairsEndKernDataStartComposites 58CC Aacute 2 ; PCC A 0 0 ; PCC acute 195 214 ;CC Acircumflex 2 ; PCC A 0 0 ; PCC circumflex 195 214 ;CC zcaron 2 ; PCC z 0 0 ; PCC caron 56 0 ;EndCompositesEndFontMetrics'</body><body package="Fonts test resources">helvetica	^(Font fontAt: #Helvetica) metrics</body></methods><methods><class-id>Graphics.Fonts.CFF.TwoByteOperator</class-id> <category>testing</category><body package="CompactFontFormat">isExtended: integer	^self value = integer</body><body package="CompactFontFormat">isSimple: integer	^false</body></methods><methods><class-id>Graphics.Fonts.CFF.TwoByteCharstringOperator class</class-id> <category>accessing</category><body package="CompactFontFormat">namesDictionary	| dict |	dict := Dictionary new.	dict at: 0 put: 'dotsection'.	"1 2 reserved"	dict at: 3 put: 'and'.	dict at: 4 put: 'or'.	dict at: 5 put: 'not'.	"6 7 8 reserved"	dict at: 9 put: 'abs'.	dict at: 10 put: 'add'.	dict at: 11 put: 'sub'.	dict at: 12 put: 'div'.	"13 reserved"	dict at: 14 put: 'neg'.	dict at: 15 put: 'eq'.	"16 17 reserved"	dict at: 18 put: 'drop'.	"19 reserved"	dict at: 20 put: 'put'.	dict at: 21 put: 'get'.	dict at: 22 put: 'ifelse'.	dict at: 23 put: 'random'.	dict at: 24 put: 'mul'.	"25 reserved"	dict at: 26 put: 'sqrt'.	dict at: 27 put: 'dup'.	dict at: 28 put: 'exch'.	dict at: 29 put: 'index'.	dict at: 30 put: 'roll'.	"31 32 33 reserved"	dict at: 34 put: 'hflex'.	dict at: 35 put: 'flex'.	dict at: 36 put: 'hflex1'.	dict at: 37 put: 'flex1'.	"38 - 255 reserved"	^dict</body></methods><methods><class-id>Graphics.Fonts.CFF.TwoByteCharstringOperator class</class-id> <category>test instances</category><body package="Fonts test resources">example	^TwoByteCharstringOperator value: 1</body></methods><methods><class-id>Graphics.Fonts.CFF.Charset1</class-id> <category>accessing</category><body package="CompactFontFormat">ranges	"&lt;Array&gt;"	^ranges ifNil: [#()]</body><body package="CompactFontFormat">sids	| wst |	wst := WriteStream on: Array new.	wst nextPut: 0.	self ranges do: [:range | wst nextPutAll: range values].	^wst contents</body></methods><methods><class-id>Graphics.Fonts.CFF.Charset1</class-id> <category>initialize-release</category><body package="CompactFontFormat">initializeRanges: rangesArray	(rangesArray notNil and: [	rangesArray notEmpty]) ifTrue: [			ranges := (Array withAll: rangesArray) beImmutable].	self beImmutable</body></methods><methods><class-id>Graphics.Fonts.CFF.Charset1</class-id> <category>printing</category><body package="CompactFontFormat">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer array: 'ranges' value: self ranges).	^printer printvalue: self arguments: args</body></methods><methods><class-id>Graphics.Fonts.CFF.Charset1 class</class-id> <category>instance creation</category><body package="CompactFontFormat">nLeftFrom: aByteStream	^aByteStream next</body><body package="CompactFontFormat">numberOfGlyphs: numberOfGlyphs fromBytes: aByteStream	| ranges namesToRead |	ranges := OrderedCollection new.	namesToRead := numberOfGlyphs - 1.	[namesToRead strictlyPositive] whileTrue: [		| range |		range := Range first: (self sidFrom: aByteStream) nLeft: (self nLeftFrom: aByteStream).		ranges add: range.		namesToRead := namesToRead - (range nLeft + 1)].	^self ranges: ranges</body><body package="CompactFontFormat">ranges: rangesArray	| inst |	inst := self new.	inst initializeRanges: rangesArray.	^inst</body></methods><methods><class-id>Graphics.Fonts.CFF.Charset1 class</class-id> <category>test instances</category><body package="Fonts test resources">example	^Charset1 ranges: #(1 #a $x 'name')</body></methods><methods><class-id>Graphics.Fonts.CFF.Charset2 class</class-id> <category>instance creation</category><body package="CompactFontFormat">nLeftFrom: aByteStream	^(UninterpretedBytes from: (aByteStream next: 2)) unsignedShortAt: 1 bigEndian: true</body></methods><methods><class-id>Graphics.Fonts.OpenType.Vorg class</class-id> <category>accessing</category><body package="Fonts UI Support">documentation	^'This table specifies the y coordinate of the vertical origin of every glyph in the font.This table may be optionally present only in CFF OpenType fonts. If present in TrueType OpenType fonts it must be ignored by font clients, just as any other unrecognized table would be. This is because this table is not needed for TrueType OpenType fonts: the Vertical Metrics (''vmtx'') and Glyph Data (''glyf'') tables in TrueType OpenType fonts provide all the information necessary to accurately calculate the y coordinate of a glyph''s vertical origin. See the “Vertical Origin and Advance Height” section in the ''vmtx'' table specification for more details.This table was added to version 1.3 of the OpenType specification. Note that the ''vmtx'' and Vertical Header (''vhea'') tables continue to be required for all OpenType fonts that support vertical writing. Advance heights must continue to be obtained from the ''vmtx'' table; that is the only place they are stored.If a ''VORG'' table is present in a CFF OpenType font, a font client may choose to obtain the y coordinate of a glyph''s vertical origin either:   1. directly from the ''VORG'', or:   2. by first calculating the top of the glyph''s bounding box from the CFF charstring data and then adding to it the glyph''s top side bearing from the ''vmtx'' table.The former method offers the advantage of increased accuracy and efficiency, since bounding box results calculated from the CFF charstring as in the latter method can differ depending on the rounding decisions and data types of the bounding box algorithm. The latter method provides compatibility for font clients who are either unaware of or choose not to support the ''VORG''.Thus, the ''VORG'' doesn''t add any new font metric values per se; it simply improves accuracy and efficiency for CFF OpenType font clients, since the intermediate step of calculating bounding boxes from the CFF charstring is rendered unnecessary.See the section “OpenType CJK Font Guidelines“ for more information about constructing CJK (Chinese, Japanese, and Korean) fonts.'</body><body package="OpenType">tag	^'VORG'</body><body package="Fonts UI Support">title	^'Vertical Metrics Table'</body></methods><methods><class-id>Graphics.Fonts.OpenType.Gsub</class-id> <category>accessing</category><body package="Fonts UI Support">descriptionText	| wst |	wst := TextStream on: (String new: 200).	wst		nextPutAll: '(not implemented)';		cr;		cr;		nextPutAll: 'Bytes: ';		nextPutAll: self contents printString.	^wst contents</body></methods><methods><class-id>Graphics.Fonts.OpenType.Gsub class</class-id> <category>accessing</category><body package="Fonts UI Support">documentation	^'The Glyph Substitution table (GSUB) contains information for substituting glyphs to render the scripts and language systems supported in a font. Many language systems require glyph substitutes. For example, in the Arabic script, the glyph shape that depicts a particular character varies according to its position in a word or text string. In other language systems, glyph substitutes are aesthetic options for the user, such as the use of ligature glyphs in the English language'</body><body package="OpenType">tag	^'GSUB'</body><body package="Fonts UI Support">title	^'The Glyph Substitution Table'</body></methods><methods><class-id>Graphics.Fonts.OpenType.Loca class</class-id> <category>accessing</category><body package="Fonts UI Support">documentation	^'The indexToLoc table stores the offsets to the locations of the glyphs in the font, relative to the beginning of the glyphData table. In order to compute the length of the last glyph element, there is an extra entry after the last valid index.By definition, index zero points to the “missing character,” which is the character that appears if a character is not found in the font. The missing character is commonly represented by a blank box or a space. If the font does not contain an outline for the missing character, then the first and second offsets should have the same value. This also applies to any other characters without an outline, such as the space character. If a glyph has no outline, then loca[n] = loca [n+1]. In the particular case of the last glyph(s), loca[n] will be equal the length of the glyph data (''glyf'') table. The offsets must be in ascending order with loca[n] &lt;= loca[n+1].Most routines will look at the ''maxp'' table to determine the number of glyphs in the font, but the value in the ''loca'' table must agree.'</body><body package="OpenType">tag	^'loca'</body><body package="Fonts UI Support">title	^'Index to Location'</body></methods><methods><class-id>Graphics.Fonts.OpenType.Ebsc class</class-id> <category>accessing</category><body package="Fonts UI Support">documentation	^'The ''EBSC'' table provides a mechanism for describing embedded bitmaps which are created by scaling other embedded bitmaps. While this is the sort of thing that outline font technologies were invented to avoid, there are cases (small sizes of Kanji, for example) where scaling a bitmap produces a more legible font than scan-converting an outline. For this reason the ''EBSC'' table allows a font to define a bitmap strike as a scaled version of another strike.'</body><body package="OpenType">tag	^'EBSC'</body><body package="Fonts UI Support">title	^'Embedded Bitmap Scaling Table'</body></methods><methods><class-id>Graphics.Fonts.OpenType.Pclt class</class-id> <category>accessing</category><body package="Fonts UI Support">documentation	^'The ''PCLT'' table is strongly discouraged for OpenType™ fonts with TrueType outlines. Extra information on many of these fields can be found in the HP PCL 5 Printer Language Technical Reference Manual  available from Hewlett-Packard Boise Printer Division.'</body><body package="OpenType">tag	^'PCLT'</body><body package="Fonts UI Support">title	^'PCL 5 Table'</body></methods><methods><class-id>Graphics.Fonts.OpenType.Hdmx class</class-id> <category>accessing</category><body package="Fonts UI Support">documentation	^'The hdmx table relates to OpenType™ fonts with TrueType outlines. The Horizontal Device Metrics table stores integer advance widths scaled to particular pixel sizes. This allows the font manager to build integer width tables without calling the scaler for each glyph. Typically this table contains only selected screen sizes. This table is sorted by pixel size. The checksum for this table applies to both subtables listed.Note that for non-square pixel grids, the character width (in pixels) will be used to determine which device record to use. For example, a 12 point character on a device with a resolution of 72x96 would be 12 pixels high and 16 pixels wide. The hdmx device record for 16 pixel characters would be used.If bit 4 of the flag field in the ''head'' table is not set, then it is assumed that the font scales linearly; in this case an ''hdmx'' table is not necessary and should not be built. If bit 4 of the flag field is set, then one or more glyphs in the font are assumed to scale nonlinearly. In this case, performance can be improved by including the ''hdmx'' table with one or more important DeviceRecord''s for important sizes. Please see the chapter “Recommendations for OpenType Fonts” for more detail.'</body><body package="OpenType">tag	^'hdmx'</body><body package="Fonts UI Support">title	^'Horizontal Device Metrics'</body></methods><methods><class-id>Graphics.Fonts.OpenType.Dsig class</class-id> <category>accessing</category><body package="Fonts UI Support">documentation	^'The DSIG table contains the digital signature of the OpenType™ font. Signature formats are widely documented and rely on a key pair architecture. Software developers, or publishers posting material on the Internet, create signatures using a private key. Operating systems or applications authenticate the signature using a public key.The W3C and major software and operating system developers have specified security standards that describe signature formats, specify secure collections of web objects, and recommend authentication architecture. OpenType fonts with signatures will support these standards.OpenType fonts offer many security features:    * Operating systems and browsing applications can identify the source and integrity of font files before using them,    * Font developers can specify embedding restrictions in OpenType fonts, and these restrictions cannot be altered in a font signed by the developer.The enforcement of signatures is an administrative policy, enabled by the operating system. Windows will soon require installed software components, including fonts, to be signed. Internet browsers will also give users and administrators the ability to screen out unsigned objects obtained on-line, including web pages, fonts, graphics, and software components.Anyone can obtain identity certificates and encryption keys from a certifying agency, such as Verisign or GTE''s Cybertrust, free or at a very low cost.'</body><body package="OpenType">tag	^'DSIG'</body><body package="Fonts UI Support">title	^'Digital Signature Table'</body></methods><methods><class-id>Graphics.Fonts.OpenType.Cblc class</class-id> <category>accessing</category><body package="Fonts UI Support">documentation	^'Two tables are used to embed color bitmaps in OFF fonts. They are the ''CBLC'' table for embedded bitmap locators and the ''CBDT'' table for embedded color bitmap data. The ''CBLC'' table begins with a header containing the table version and number of strikes. An OFF font may have one or more strikes embedded in the ''CBDT'' table.'</body><body package="OpenType">tag	^'CBLC'</body><body package="Fonts UI Support">title	^'Color Bitmap Location Table'</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapLanguageSubtable32</class-id> <category>reading</category><body package="OpenType">readFrom: bytes at: offset	"Type  	Name  		DescriptionUSHORT 	format 		Subtable format; set to 8.USHORT	reserved	Reserved; set to 0ULONG		length		Byte length of this subtable (including the header)ULONG		language	Please see “Note on the language field in 'cmap' subtables“ in this document."	| aLength aLanguage uBytes |	uBytes := UninterpretedBytes from: (bytes copyFrom: offset + 1 to: offset + 12).	(uBytes unsignedShortAt: 1 bigEndian: true) = self formatNumber ifFalse: [		^self error: 'wrong format'].	aLength := uBytes unsignedLongAt: 5 bigEndian: true.	aLanguage := uBytes unsignedLongAt: 9 bigEndian: true.	^self class		platform: self platform		encoding: self encoding		contents: (bytes copyFrom: offset + 1 to: offset + aLength)		language: aLanguage</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable10</class-id> <category>accessing</category><body package="OpenType">glyphIndexAtUnicode: aUnicodeInteger	^self notYetImplemented</body><body package="OpenType">indexToCode	^self notYetImplemented</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable10 class</class-id> <category>accessing</category><body package="OpenType">formatNumber	^10</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable10 class</class-id> <category>test instances</category><body package="Fonts test resources">example	^CmapSubtable10 platform: 1 encoding: 1 contents: #[42] language: 1</body></methods><methods><class-id>Graphics.Fonts.CFF.CFFTests</class-id> <category>tests</category><body package="Fonts tests">testDictIntegers	self assert: (Dict integerFrom: #[16r8B] readStream) = 0.	self assert: (Dict integerFrom: #[16rEF] readStream) = 100.	self assert: (Dict integerFrom: #[16r27] readStream) = -100.	self assert: (Dict integerFrom: #[16rFA 16r7C] readStream) = 1000.	self assert: (Dict integerFrom: #[16rFE 16r7C] readStream) = -1000.	self assert: (Dict integerFrom: #[16r1C 16r27 16r10] readStream) = 10000.	self assert: (Dict integerFrom: #[16r1C 16rD8 16rF0] readStream) = -10000.	self assert: (Dict integerFrom: #[16r1D 16r00 16r01 16r86 16rA0] readStream) = 100000.	self assert: (Dict integerFrom: #[16r1D 16rFF 16rFE 16r79 16r60] readStream) = -100000.</body><body package="Fonts tests">testDictReals	self assert: (Dict realFrom: #[16r1E 16rE2 16rA2 16r5F] readStream) = -2.25.	self assert: (Dict realFrom: #[16r1E 16r0A 16r14 16r05 16r41 16rC3 16rFF] readStream) = 0.140541e-3.</body></methods><methods><class-id>WindowsFonts.NamedValue</class-id> <category>accessing</category><body package="Fonts for Windows">name	"&lt;String&gt;"	^name</body><body package="Fonts for Windows">value	"&lt;Integer&gt;"	^value</body></methods><methods><class-id>WindowsFonts.NamedValue</class-id> <category>printing</category><body package="Fonts for Windows">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'name' value: self name).	args add: (printer constant: 'value' value: self value).	^printer printvalue: self arguments: args</body></methods><methods><class-id>WindowsFonts.NamedValue</class-id> <category>initialize-release</category><body package="Fonts for Windows">initializeName: nameString value: valueInteger	name := nameString.	value := valueInteger.	self beImmutable</body></methods><methods><class-id>WindowsFonts.NamedValue class</class-id> <category>test instances</category><body package="Fonts for Windows">example	^NamedValue name: 'a string' value: 1</body></methods><methods><class-id>WindowsFonts.NamedValue class</class-id> <category>instance creation</category><body package="Fonts for Windows">name: nameString value: valueInteger	| inst |	inst := self new.	inst initializeName: nameString value: valueInteger.	^inst</body></methods><methods><class-id>WindowsFonts.NamedValue class</class-id> <category>accessing</category><body package="Fonts for Windows">all	"&lt;SequenceableCollection of: NamedValue&gt;	all known or defined instances"	^self subclassResponsibility</body><body package="Fonts for Windows">instanceAt: integer	"&lt;NamedValue | nil&gt;"	^self all detect: [:charSet | charSet value = integer] ifNone: [nil]</body><body package="Fonts for Windows">nameAt: integer	"&lt;String&gt;"	^(self instanceAt: integer) ifNil: [String new] ifNotNil: [:charSet | charSet name]</body></methods><methods><class-id>WindowsFonts.FontSignature</class-id> <category>initialize-release</category><body package="Fonts for Windows">initializeFrom: aFONTSIGNATURE	| usbs usbTemp csbs csbTemp |	usbs := aFONTSIGNATURE memberAt: #fsUsb.	usbTemp := usbs at: 0.	"usbTemp := usbTemp bitAnd: 16r3FFFFFFF."	usbTemp := usbTemp &lt;&lt; 32.	usbTemp := usbTemp bitOr: (usbs at: 1).	usbTemp := usbTemp &lt;&lt; 32.	usbTemp := usbTemp bitOr: (usbs at: 2).	usbTemp := usbTemp &lt;&lt; 32.	usbTemp := usbTemp bitOr: (usbs at: 3).	csbs := aFONTSIGNATURE memberAt: #fsCsb.	csbTemp := csbs at: 0.	csbTemp := csbTemp &lt;&lt; 32.	csbTemp := csbTemp bitOr: (csbs at: 1).	self initializeUsb: usbTemp csb: csbTemp</body><body package="Fonts for Windows">initializeUsb: usbInteger csb: csbInteger	usb := usbInteger.	csb := csbInteger.	self beImmutable</body></methods><methods><class-id>WindowsFonts.FontSignature</class-id> <category>printing</category><body package="Fonts for Windows">printOn: stream	stream		nextPut: $(;		nextPutAll: self class name asString;		nextPutAll: ' usb: '.	self usb printOn: stream paddedWith: $0 to: 128 base: 2.	stream nextPutAll: ' csb: '.	self csb printOn: stream paddedWith: $0 to: 64 base: 2.	stream nextPut: $)</body><body package="Fonts for Windows">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'usb' value: self usb).	args add: (printer constant: 'csb' value: self csb).	^printer printvalue: self arguments: args</body></methods><methods><class-id>WindowsFonts.FontSignature</class-id> <category>accessing</category><body package="Fonts for Windows">codePages	"&lt;SequenceableCollection of: BitCodepage&gt;"	^self class codePageBitfieldsIn: self csb</body><body package="Fonts for Windows">csb	"&lt;Integer&gt;	A 64-bit, code-page bitfield (CPB) that identifies a specific character set or code page. Code pages are in the lower 32 bits of this bitfield. The high 32 are used for non-Windows code pages."	^csb</body><body package="Fonts for Windows">unicodeSubsets	"&lt;SequenceableCollection of: UnicodeSubset&gt;"	^self class unicodeSubsetBitfieldsIn: self usb</body><body package="Fonts for Windows">usb	"&lt;Integer&gt;	A 128-bit Unicode subset bitfield (USB) identifying up to 126 Unicode subranges. Each bit, except the two most significant bits, represents a single subrange. The most significant bit is always 1 and identifies the bitfield as a font signature; the second most significant bit is reserved and must be 0. Unicode subranges are numbered in accordance with the ISO 10646 standard."	^usb</body></methods><methods><class-id>WindowsFonts.FontSignature class</class-id> <category>accessing</category><body package="Fonts for Windows">codePageBitfields	"&lt;SequenceableCollection of: BitCodepage&gt;"	^BitCodepage bitfields</body><body package="Fonts for Windows">codePageBitfieldsIn: aCsb	"&lt;SequenceableCollection of: BitCodepage&gt;"	^(self codePageBitfields select: [:bitCodepage | (aCsb bitAnd: bitCodepage mask) isZero not]) select: [:bitCodepage |		bitCodepage hasCodepage]</body><body package="Fonts for Windows">unicodeSubsetBitfields	"&lt;SequenceableCollection of: UnicodeSubset&gt;"	^UnicodeSubset bitfields</body><body package="Fonts for Windows">unicodeSubsetBitfieldsIn: aUsb	"&lt;SequenceableCollection of: UnicodeSubset&gt;"	^(self unicodeSubsetBitfields select: [:unicodeSubset | (aUsb bitAnd: unicodeSubset mask) isZero not]) "select: [:unicodeSubset |		unicodeSubset hasRange]"</body></methods><methods><class-id>WindowsFonts.FontSignature class</class-id> <category>instance creation</category><body package="Fonts for Windows">newFrom: aFONTSIGNATURE	| inst |	inst := self new.	inst initializeFrom: aFONTSIGNATURE.	^inst</body><body package="Fonts for Windows">usb: usbInteger csb: csbInteger	| inst |	inst := self new.	inst initializeUsb: usbInteger csb: csbInteger.	^inst</body></methods><methods><class-id>WindowsFonts.FontSignature class</class-id> <category>test instances</category><body package="Fonts for Windows">example	^FontSignature usb: 1 csb: 1</body></methods><methods><class-id>WindowsFonts.Pitch class</class-id> <category>instances</category><body package="Fonts for Windows">default	^Pitch name: 'default' value: 0</body><body package="Fonts for Windows">fixed	^Pitch name: 'Fixed' value: 1</body><body package="Fonts for Windows">unknownPitch	^Pitch name: '11' value: 3</body><body package="Fonts for Windows">variable	^Pitch name: 'Variable' value: 2</body></methods><methods><class-id>WindowsFonts.Pitch class</class-id> <category>test instances</category><body package="Fonts for Windows">example	^Pitch name: 'default' value: 0</body></methods><methods><class-id>WindowsFonts.Pitch class</class-id> <category>accessing</category><body package="Fonts for Windows">all	"&lt;SequenceableCollection of: Pitch&gt;"	^Array		with: self default		with: self fixed		with: self variable		with: self unknownPitch</body></methods><methods><class-id>WindowsFonts.TextMetric</class-id> <category>accessing</category><body package="Fonts for Windows">ascent	"&lt;Integer&gt;	Specifies the ascent (units above the base line) of characters."	^ascent</body><body package="Fonts for Windows">aveCharWidth	"&lt;Integer&gt;	Specifies the average width of characters in the font (generally defined as the width of the letter x). This value does not include the overhang required for bold or italic characters."	^aveCharWidth</body><body package="Fonts for Windows">breakChar	"&lt;Character&gt;	Specifies the value of the character that will be used to define word breaks for text justification."	^breakChar</body><body package="Fonts for Windows">charSet	"&lt;Integer&gt;	Specifies the character set of the font. The character set can be one of the following values. ANSI_CHARSETBALTIC_CHARSETCHINESEBIG5_CHARSETDEFAULT_CHARSETEASTEUROPE_CHARSETGB2312_CHARSETGREEK_CHARSETHANGUL_CHARSETMAC_CHARSETOEM_CHARSETRUSSIAN_CHARSETSHIFTJIS_CHARSETSYMBOL_CHARSETTURKISH_CHARSETVIETNAMESE_CHARSET Korean language edition of Windows: JOHAB_CHARSET Middle East language edition of Windows: ARABIC_CHARSETHEBREW_CHARSET Thai language edition of Windows: THAI_CHARSET"	^charSet</body><body package="Fonts for Windows">charSetName	"&lt;String&gt;"	^CharSet nameAt: self charSet</body><body package="Fonts for Windows">defaultChar	"&lt;Character&gt;	Specifies the value of the character to be substituted for characters not in the font."	^defaultChar</body><body package="Fonts for Windows">descent	"&lt;Integer&gt;	Specifies the descent (units below the base line) of characters."	^descent</body><body package="Fonts for Windows">digitizedAspectX	"&lt;Integer&gt;	Specifies the horizontal aspect of the device for which the font was designed."	^digitizedAspectX</body><body package="Fonts for Windows">digitizedAspectY	"&lt;Integer&gt;	Specifies the vertical aspect of the device for which the font was designed. The ratio of the tmDigitizedAspectX and tmDigitizedAspectY members is the aspect ratio of the device for which the font was designed."	^digitizedAspectY</body><body package="Fonts for Windows">externalLeading	"&lt;Integer&gt;	Specifies the amount of extra leading (space) that the application adds between rows. Since this area is outside the font, it contains no marks and is not altered by text output calls in either OPAQUE or TRANSPARENT mode. The designer may set this member to zero. "	^externalLeading</body><body package="Fonts for Windows">family	"The four high-order bits of tmPitchAndFamily designate the font's font family. An application can use the value 0xF0 and the bitwise AND operator to mask out the four low-order bits of tmPitchAndFamily, thus obtaining a value that can be directly compared with font family names to find an identical match. For information about font families, see the description of the LOGFONT structure"	^self pitchAndFamily bitAnd: 16rF0</body><body package="Fonts for Windows">familyName	"&lt;String&gt;"	^Family nameAt: self family</body><body package="Fonts for Windows">firstChar	"&lt;Character&gt;	Specifies the value of the first character defined in the font."	^firstChar</body><body package="Fonts for Windows">height	"&lt;Integer&gt;	Specifies the height (ascent + descent) of characters."	^height</body><body package="Fonts for Windows">internalLeading	"&lt;Integer&gt;	Specifies the amount of leading (space) inside the bounds set by the tmHeight member. Accent marks and other diacritical characters may occur in this area. The designer may set this member to zero."	^internalLeading</body><body package="Fonts for Windows">italic	"&lt;Integer&gt;	Specifies an italic font if it is nonzero."	^italic</body><body package="Fonts for Windows">lastChar	"&lt;Character&gt;	Specifies the value of the last character defined in the font."	^lastChar</body><body package="Fonts for Windows">maxCharWidth	"&lt;Integer&gt;	Specifies the width of the widest character in the font."	^maxCharWidth</body><body package="Fonts for Windows">overhang	"&lt;Integer&gt;	Specifies the extra width per string that may be added to some synthesized fonts. When synthesizing some attributes, such as bold or italic, graphics device interface (GDI) or a device may have to add width to a string on both a per-character and per-string basis. For example, GDI makes a string bold by expanding the spacing of each character and overstriking by an offset value; it italicizes a font by shearing the string. In either case, there is an overhang past the basic string. For bold strings, the overhang is the distance by which the overstrike is offset. For italic strings, the overhang is the amount the top of the font is sheared past the bottom of the font. The tmOverhang member enables the application to determine how much of the character width returned by a GetTextExtentPoint32 function call on a single character is the actual character width and how much is the per-string extra width. The actual width is the extent minus the overhang."	^overhang</body><body package="Fonts for Windows">pitch	"&lt;Integer&gt;The four low-order bits of this member specify information about the pitch and the technology of the font. A constant is defined for each of the four bits.Constant 	MeaningTMPF_FIXED_PITCH 	If this bit is set the font is a variable pitch font. If this bit is clear the font is a fixed pitch font. Note very carefully that those meanings are the opposite of what the constant name implies.TMPF_VECTOR 	If this bit is set the font is a vector font.TMPF_TRUETYPE 	If this bit is set the font is a TrueType font.TMPF_DEVICE 	If this bit is set the font is a device font.An application should carefully test for qualities encoded in these low-order bits, making no arbitrary assumptions. For example, besides having their own bits set, TrueType and PostScript fonts set the TMPF_VECTOR bit. A monospace bitmap font has all of these low-order bits clear; a proportional bitmap font sets the TMPF_FIXED_PITCH bit. A Postscript printer device font sets the TMPF_DEVICE, TMPF_VECTOR, and TMPF_FIXED_PITCH bits"	^self pitchAndFamily bitAnd: 2r1111</body><body package="Fonts for Windows">pitchAndFamily	"&lt;Integer&gt;	Specifies information about the pitch, the technology, and the family of a physical font. The four low-order bits of this member specify information about the pitch and the technology of the font. A constant is defined for each of the four bits.Constant 				Meaning 0x01 TMPF_FIXED_PITCH 	If this bit is set the font is a variable pitch font. If this bit is clear the font is a fixed pitch font. Note very carefully that those meanings are the opposite of what the constant name implies. 0x02 TMPF_VECTOR 		If this bit is set the font is a vector font. 0x04 TMPF_TRUETYPE 		If this bit is set the font is a TrueType font. 0x08 TMPF_DEVICE 			If this bit is set the font is a device font. An application should carefully test for qualities encoded in these low-order bits, making no arbitrary assumptions. For example, besides having their own bits set, TrueType and PostScript fonts set the TMPF_VECTOR bit. A monospace bitmap font has all of these low-order bits clear; a proportional bitmap font sets the TMPF_FIXED_PITCH bit. A Postscript printer device font sets the TMPF_DEVICE, TMPF_VECTOR, and TMPF_FIXED_PITCH bits. The four high-order bits of tmPitchAndFamily designate the font's font family. An application can use the value 0xF0 and the bitwise AND operator to mask out the four low-order bits of tmPitchAndFamily, thus obtaining a value that can be directly compared with font family names to find an identical match. For information about font families, see the description of the LOGFONT structure."	^pitchAndFamily</body><body package="Fonts for Windows">pitchNames	^self class pitchNamesIn: self pitch</body><body package="Fonts for Windows">pitchNamesString	| wst |	wst := WriteStream on: (String new: 20).	self pitchNames do: [:name | wst nextPutAll: name] separatedBy: [wst space].	^wst contents</body><body package="Fonts for Windows">struckOut	"&lt;Integer&gt;	Specifies a strikeout font if it is nonzero. "	^struckOut</body><body package="Fonts for Windows">underlined	"&lt;Integer&gt;	Specifies an underlined font if it is nonzero. "	^underlined</body><body package="Fonts for Windows">weight	"&lt;Integer&gt;	Specifies the weight of the font. "	^weight</body></methods><methods><class-id>WindowsFonts.TextMetric</class-id> <category>initialize-release</category><body package="Fonts for Windows">initializeFrom: aTEXTMETRIC	self		initializeHeight: (aTEXTMETRIC memberAt: #tmHeight)		ascent: (aTEXTMETRIC memberAt: #tmAscent)		descent: (aTEXTMETRIC memberAt: #tmDescent)		internalLeading: (aTEXTMETRIC memberAt: #tmInternalLeading)		externalLeading: (aTEXTMETRIC memberAt: #tmExternalLeading)		aveCharWidth: (aTEXTMETRIC memberAt: #tmAveCharWidth)		maxCharWidth: (aTEXTMETRIC memberAt: #tmMaxCharWidth)		weight: (aTEXTMETRIC memberAt: #tmWeight)		overhang: (aTEXTMETRIC memberAt: #tmOverhang)		digitizedAspectX: (aTEXTMETRIC memberAt: #tmDigitizedAspectX)		digitizedAspectY: (aTEXTMETRIC memberAt: #tmDigitizedAspectY)		firstChar: (aTEXTMETRIC memberAt: #tmFirstChar) asCharacter		lastChar: (aTEXTMETRIC memberAt: #tmLastChar) asCharacter		defaultChar: (aTEXTMETRIC memberAt: #tmDefaultChar) asCharacter		breakChar: (aTEXTMETRIC memberAt: #tmBreakChar) asCharacter		italic: (aTEXTMETRIC memberAt: #tmItalic)		underlined: (aTEXTMETRIC memberAt: #tmUnderlined)		struckOut: (aTEXTMETRIC memberAt: #tmStruckOut)		pitchAndFamily: (aTEXTMETRIC memberAt: #tmPitchAndFamily)		charSet: (aTEXTMETRIC memberAt: #tmCharSet)</body><body package="Fonts for Windows">initializeHeight: heightInteger ascent: ascentInteger descent: descentInteger internalLeading: internalLeadingInteger externalLeading: externalLeadingInteger aveCharWidth: aveCharWidthInteger maxCharWidth: maxCharWidthInteger weight: weightInteger overhang: overhangInteger digitizedAspectX: digitizedAspectXInteger digitizedAspectY: digitizedAspectYInteger firstChar: firstCharCharacter lastChar: lastCharCharacter defaultChar: defaultCharCharacter breakChar: breakCharCharacter italic: italicInteger underlined: underlinedInteger struckOut: struckOutInteger pitchAndFamily: pitchAndFamilyInteger charSet: charSetInteger	height := heightInteger.	ascent := ascentInteger.	descent := descentInteger.	internalLeading := internalLeadingInteger.	externalLeading := externalLeadingInteger.	aveCharWidth := aveCharWidthInteger.	maxCharWidth := maxCharWidthInteger.	weight := weightInteger.	overhang := overhangInteger.	digitizedAspectX := digitizedAspectXInteger.	digitizedAspectY := digitizedAspectYInteger.	firstChar := firstCharCharacter.	lastChar := lastCharCharacter.	defaultChar := defaultCharCharacter.	breakChar := breakCharCharacter.	italic := italicInteger.	underlined := underlinedInteger.	struckOut := struckOutInteger.	pitchAndFamily := pitchAndFamilyInteger.	charSet := charSetInteger.	self beImmutable</body></methods><methods><class-id>WindowsFonts.TextMetric</class-id> <category>printing</category><body package="Fonts for Windows">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'height' value: self height).	args add: (printer constant: 'ascent' value: self ascent).	args add: (printer constant: 'descent' value: self descent).	args add: (printer constant: 'internalLeading' value: self internalLeading).	args add: (printer constant: 'externalLeading' value: self externalLeading).	args add: (printer constant: 'aveCharWidth' value: self aveCharWidth).	args add: (printer constant: 'maxCharWidth' value: self maxCharWidth).	args add: (printer constant: 'weight' value: self weight).	args add: (printer constant: 'overhang' value: self overhang).	args add: (printer constant: 'digitizedAspectX' value: self digitizedAspectX).	args add: (printer constant: 'digitizedAspectY' value: self digitizedAspectY).	args add: (printer constant: 'firstChar' value: self firstChar).	args add: (printer constant: 'lastChar' value: self lastChar).	args add: (printer constant: 'defaultChar' value: self defaultChar).	args add: (printer constant: 'breakChar' value: self breakChar).	args add: (printer constant: 'italic' value: self italic).	args add: (printer constant: 'underlined' value: self underlined).	args add: (printer constant: 'struckOut' value: self struckOut).	args add: (printer constant: 'pitchAndFamily' value: self pitchAndFamily).	args add: (printer constant: 'charSet' value: self charSet).	^printer printvalue: self arguments: args</body></methods><methods><class-id>WindowsFonts.TextMetric</class-id> <category>testing</category><body package="Fonts for Windows">isDevice	^(self pitchAndFamily bitAnd: self class tmpfDevice) isZero not</body><body package="Fonts for Windows">isFixedPitch	^(self pitchAndFamily bitAnd: self class tmpfFixedPitch) isZero</body><body package="Fonts for Windows">isItalic	^self italic isZero not</body><body package="Fonts for Windows">isMultipleMaster	^false</body><body package="Fonts for Windows">isStruckOut	^self struckOut isZero not</body><body package="Fonts for Windows">isTrueType	^(self pitchAndFamily bitAnd: self class tmpfTrueType) isZero not</body><body package="Fonts for Windows">isUnderlined	^self underlined isZero not</body><body package="Fonts for Windows">isVariablePitch	^(self pitchAndFamily bitAnd: self class tmpfFixedPitch) isZero not</body><body package="Fonts for Windows">isVector	^(self pitchAndFamily bitAnd: self class tmpfVector) isZero not</body></methods><methods><class-id>WindowsFonts.TextMetric class</class-id> <category>accessing</category><body package="Fonts for Windows">pitchNames	| dict |	dict := Dictionary new.	dict at: self tmpfFixedPitch put: 'FixedPitch'.	dict at: self tmpfVector put: 'Vector'.	dict at: self tmpfTrueType put: 'TrueType'.	dict at: self tmpfDevice put: 'Device'.	^dict</body><body package="Fonts for Windows">pitchNamesIn: aPitch	"&lt;SequenceableCollection of: String"	| pitches names |	pitches := Array		with: self tmpfFixedPitch		with: self tmpfVector		with: self tmpfTrueType		with: self tmpfDevice.	names := OrderedCollection new.	(aPitch bitAnd: pitches first) isZero ifTrue: [			names add: (self pitchNames at: pitches first)].	(pitches allButFirst: 1) do: [:pitch |		(aPitch bitAnd: pitch) isZero not ifTrue: [			names add: (self pitchNames at: pitch)]].	^names asArray</body></methods><methods><class-id>WindowsFonts.TextMetric class</class-id> <category>instance creation</category><body package="Fonts for Windows">height: heightInteger ascent: ascentInteger descent: descentInteger internalLeading: internalLeadingInteger externalLeading: externalLeadingInteger aveCharWidth: aveCharWidthInteger maxCharWidth: maxCharWidthInteger weight: weightInteger overhang: overhangInteger digitizedAspectX: digitizedAspectXInteger digitizedAspectY: digitizedAspectYInteger firstChar: firstCharCharacter lastChar: lastCharCharacter defaultChar: defaultCharCharacter breakChar: breakCharCharacter italic: italicInteger underlined: underlinedInteger struckOut: struckOutInteger pitchAndFamily: pitchAndFamilyInteger charSet: charSetInteger	| inst |	inst := self new.	inst		initializeHeight: heightInteger		ascent: ascentInteger		descent: descentInteger		internalLeading: internalLeadingInteger		externalLeading: externalLeadingInteger		aveCharWidth: aveCharWidthInteger		maxCharWidth: maxCharWidthInteger		weight: weightInteger		overhang: overhangInteger		digitizedAspectX: digitizedAspectXInteger		digitizedAspectY: digitizedAspectYInteger		firstChar: firstCharCharacter		lastChar: lastCharCharacter		defaultChar: defaultCharCharacter		breakChar: breakCharCharacter		italic: italicInteger		underlined: underlinedInteger		struckOut: struckOutInteger		pitchAndFamily: pitchAndFamilyInteger		charSet: charSetInteger.	^inst</body><body package="Fonts for Windows">newFrom: aTEXTMETRIC	| inst |	inst := self new.	inst initializeFrom: aTEXTMETRIC.	^inst</body></methods><methods><class-id>WindowsFonts.TextMetric class</class-id> <category>test instances</category><body package="Fonts for Windows">example	^TextMetric		height: 1		ascent: 1		descent: 1		internalLeading: 1		externalLeading: 1		aveCharWidth: 1		maxCharWidth: 1		weight: 1		overhang: 1		digitizedAspectX: 1		digitizedAspectY: 1		firstChar: $a		lastChar: $a		defaultChar: $a		breakChar: $a		italic: 1		underlined: 1		struckOut: 1		pitchAndFamily: 1		charSet: 1</body></methods><methods><class-id>WindowsFonts.TextMetric class</class-id> <category>constants</category><body package="Fonts for Windows">tmpfDevice	^8</body><body package="Fonts for Windows">tmpfFixedPitch	"If this bit is set the font is a variable pitch font. If this bit is clear the font is a fixed pitch font.	Note very carefully that those meanings are the opposite of what the constant name implies."	^1</body><body package="Fonts for Windows">tmpfTrueType	^4</body><body package="Fonts for Windows">tmpfVector	^2</body></methods><methods><class-id>WindowsFonts.NewTextMetric</class-id> <category>accessing</category><body package="Fonts for Windows">avgWidth	"&lt;Integer&gt;	Specifies the average width of characters in the font, in notional units. This value should be compared with the value of the ntmSizeEM member."	^avgWidth</body><body package="Fonts for Windows">cellHeight	"&lt;Integer&gt;	Specifies the height, in notional units, of the font. This value should be compared with the value of the ntmSizeEM member."	^cellHeight</body><body package="Fonts for Windows">flagNames	"&lt;SequenceableCollection of: String"	^self class flagNamesIn: self flags</body><body package="Fonts for Windows">flagNamesString	"&lt;String"	| wst |	wst := WriteStream on: (String new: 20).	self flagNames do: [:flagname | wst nextPutAll: flagname] separatedBy: [		wst space].	^wst contents</body><body package="Fonts for Windows">flags	"&lt;Integer&gt;	Specifies whether the font is italic, underscored, outlined, bold, and so forth. May be any reasonable combination of the following values.Bit 	Name 						Meaning 0 	NTM_ITALIC 				italic 5 	NTM_BOLD 				bold 8 	NTM_REGULAR 			regular 16 	NTM_NONNEGATIVE_AC 	Windows 2000/XP: no glyph in a font at any size has a negative A or C space. 17 	NTM_PS_OPENTYPE 		Windows 2000/XP: PostScript OpenType font 18 	NTM_TT_OPENTYPE 		Windows 2000/XP: TrueType OpenType font 19 	NTM_MULTIPLEMASTER 	Windows 2000/XP: multiple master font 20 	NTM_TYPE1 				Windows 2000/XP: Type 1 font 21 	NTM_DSIG 					Windows 2000/XP: font with a digital signature. This allows traceability and ensures that the font has been tested and is not corrupted"	^flags</body><body package="Fonts for Windows">sizeEM	"&lt;Integer&gt;	Specifies the size of the em square for the font. This value is in notional units (that is, the units for which the font was designed"	^sizeEM</body></methods><methods><class-id>WindowsFonts.NewTextMetric</class-id> <category>printing</category><body package="Fonts for Windows">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'height' value: self height).	args add: (printer constant: 'ascent' value: self ascent).	args add: (printer constant: 'descent' value: self descent).	args add: (printer constant: 'internalLeading' value: self internalLeading).	args add: (printer constant: 'externalLeading' value: self externalLeading).	args add: (printer constant: 'aveCharWidth' value: self aveCharWidth).	args add: (printer constant: 'maxCharWidth' value: self maxCharWidth).	args add: (printer constant: 'weight' value: self weight).	args add: (printer constant: 'overhang' value: self overhang).	args add: (printer constant: 'digitizedAspectX' value: self digitizedAspectX).	args add: (printer constant: 'digitizedAspectY' value: self digitizedAspectY).	args add: (printer constant: 'firstChar' value: self firstChar).	args add: (printer constant: 'lastChar' value: self lastChar).	args add: (printer constant: 'defaultChar' value: self defaultChar).	args add: (printer constant: 'breakChar' value: self breakChar).	args add: (printer constant: 'italic' value: self italic).	args add: (printer constant: 'underlined' value: self underlined).	args add: (printer constant: 'struckOut' value: self struckOut).	args add: (printer constant: 'pitchAndFamily' value: self pitchAndFamily).	args add: (printer constant: 'charSet' value: self charSet).	args add: (printer constant: 'flags' value: self flags).	args add: (printer constant: 'sizeEM' value: self sizeEM).	args add: (printer constant: 'cellHeight' value: self cellHeight).	args add: (printer constant: 'avgWidth' value: self avgWidth).	^printer printvalue: self arguments: args</body></methods><methods><class-id>WindowsFonts.NewTextMetric</class-id> <category>initialize-release</category><body package="Fonts for Windows">initHeight: heightInteger ascent: ascentInteger descent: descentInteger intLeading: internalLeadingInteger extLeading: externalLeadingInteger aveCharWidth: aveCharWidthInteger maxCharWidth: maxCharWidthInteger weight: weightInteger overhang: overhangInteger digitizedAspectX: digitizedAspectXInteger digitizedAspectY: digitizedAspectYInteger firstChar: firstCharCharacter lastChar: lastCharCharacter defaultChar: defaultCharCharacter breakChar: breakCharCharacter italic: italicInteger underlined: underlinedInteger struckOut: struckOutInteger pitchAndFamily: pitchAndFamilyInteger charSet: charSetInteger flags: flagsInteger sizeEM: sizeEMInteger cellHeight: cellHeightInteger avgWidth: avgWidthInteger	height := heightInteger.	ascent := ascentInteger.	descent := descentInteger.	internalLeading := internalLeadingInteger.	externalLeading := externalLeadingInteger.	aveCharWidth := aveCharWidthInteger.	maxCharWidth := maxCharWidthInteger.	weight := weightInteger.	overhang := overhangInteger.	digitizedAspectX := digitizedAspectXInteger.	digitizedAspectY := digitizedAspectYInteger.	firstChar := firstCharCharacter.	lastChar := lastCharCharacter.	defaultChar := defaultCharCharacter.	breakChar := breakCharCharacter.	italic := italicInteger.	underlined := underlinedInteger.	struckOut := struckOutInteger.	pitchAndFamily := pitchAndFamilyInteger.	charSet := charSetInteger.	flags := flagsInteger.	sizeEM := sizeEMInteger.	cellHeight := cellHeightInteger.	avgWidth := avgWidthInteger.	self beImmutable</body><body package="Fonts for Windows">initializeFrom: aNEWTEXTMETRIC	self		initHeight: (aNEWTEXTMETRIC memberAt: #tmHeight)		ascent: (aNEWTEXTMETRIC memberAt: #tmAscent)		descent: (aNEWTEXTMETRIC memberAt: #tmDescent)		intLeading: (aNEWTEXTMETRIC memberAt: #tmInternalLeading)		extLeading: (aNEWTEXTMETRIC memberAt: #tmExternalLeading)		aveCharWidth: (aNEWTEXTMETRIC memberAt: #tmAveCharWidth)		maxCharWidth: (aNEWTEXTMETRIC memberAt: #tmMaxCharWidth)		weight: (aNEWTEXTMETRIC memberAt: #tmWeight)		overhang: (aNEWTEXTMETRIC memberAt: #tmOverhang)		digitizedAspectX: (aNEWTEXTMETRIC memberAt: #tmDigitizedAspectX)		digitizedAspectY: (aNEWTEXTMETRIC memberAt: #tmDigitizedAspectY)		firstChar: (aNEWTEXTMETRIC memberAt: #tmFirstChar) asCharacter		lastChar: (aNEWTEXTMETRIC memberAt: #tmLastChar) asCharacter		defaultChar: (aNEWTEXTMETRIC memberAt: #tmDefaultChar) asCharacter		breakChar: (aNEWTEXTMETRIC memberAt: #tmBreakChar) asCharacter		italic: (aNEWTEXTMETRIC memberAt: #tmItalic)		underlined: (aNEWTEXTMETRIC memberAt: #tmUnderlined)		struckOut: (aNEWTEXTMETRIC memberAt: #tmStruckOut)		pitchAndFamily: (aNEWTEXTMETRIC memberAt: #tmPitchAndFamily)		charSet: (aNEWTEXTMETRIC memberAt: #tmCharSet)		flags: (aNEWTEXTMETRIC memberAt: #ntmFlags)		sizeEM: (aNEWTEXTMETRIC memberAt: #ntmSizeEM)		cellHeight: (aNEWTEXTMETRIC memberAt: #ntmCellHeight)		avgWidth: (aNEWTEXTMETRIC memberAt: #ntmAvgWidth)</body></methods><methods><class-id>WindowsFonts.NewTextMetric</class-id> <category>testing</category><body package="Fonts for Windows">isMultipleMaster	^(self flags bitAnd: self class ntmMultipleMaster) isZero not</body></methods><methods><class-id>WindowsFonts.NewTextMetric class</class-id> <category>instance creation</category><body package="Fonts for Windows">height: heightInteger ascent: ascentInteger descent: descentInteger internalLeading: internalLeadingInteger externalLeading: externalLeadingInteger aveCharWidth: aveCharWidthInteger maxCharWidth: maxCharWidthInteger weight: weightInteger overhang: overhangInteger digitizedAspectX: digitizedAspectXInteger digitizedAspectY: digitizedAspectYInteger firstChar: firstCharCharacter lastChar: lastCharCharacter defaultChar: defaultCharCharacter breakChar: breakCharCharacter italic: italicInteger underlined: underlinedInteger struckOut: struckOutInteger pitchAndFamily: pitchAndFamilyInteger charSet: charSetInteger flags: flagsInteger sizeEM: sizeEMInteger cellHeight: cellHeightInteger avgWidth: avgWidthInteger	| inst |	inst := self new.	inst		initHeight: heightInteger		ascent: ascentInteger		descent: descentInteger		intLeading: internalLeadingInteger		extLeading: externalLeadingInteger		aveCharWidth: aveCharWidthInteger		maxCharWidth: maxCharWidthInteger		weight: weightInteger		overhang: overhangInteger		digitizedAspectX: digitizedAspectXInteger		digitizedAspectY: digitizedAspectYInteger		firstChar: firstCharCharacter		lastChar: lastCharCharacter		defaultChar: defaultCharCharacter		breakChar: breakCharCharacter		italic: italicInteger		underlined: underlinedInteger		struckOut: struckOutInteger		pitchAndFamily: pitchAndFamilyInteger		charSet: charSetInteger		flags: flagsInteger		sizeEM: sizeEMInteger		cellHeight: cellHeightInteger		avgWidth: avgWidthInteger.	^inst</body></methods><methods><class-id>WindowsFonts.NewTextMetric class</class-id> <category>constants</category><body package="Fonts for Windows">ntmBold	"bold"	^16r00000020</body><body package="Fonts for Windows">ntmDSig	"Windows 2000/XP: font with a digital signature. This allows traceability and ensures that the font has been tested and is not corrupted"	^16r00200000</body><body package="Fonts for Windows">ntmItalic	"italic"	^16r00000001</body><body package="Fonts for Windows">ntmMultipleMaster	"Windows 2000/XP: multiple master font"	^16r00080000</body><body package="Fonts for Windows">ntmNonNegativeAC	"Windows 2000/XP: no glyph in a font at any size has a negative A or C space"	^16r00010000</body><body package="Fonts for Windows">ntmPSOpenType	"Windows 2000/XP: PostScript OpenType font"	^16r00020000</body><body package="Fonts for Windows">ntmRegular	"regular"	^16r00000040</body><body package="Fonts for Windows">ntmTTOpenType	"Windows 2000/XP: TrueType OpenType font"	^16r00040000</body><body package="Fonts for Windows">ntmType1	"Windows 2000/XP: Type 1 font"	^16r00100000</body></methods><methods><class-id>WindowsFonts.NewTextMetric class</class-id> <category>accessing</category><body package="Fonts for Windows">flagNames	| dict |	dict := Dictionary new.	dict at: self ntmItalic put: 'Italic'.	dict at: self ntmBold put: 'Bold'.	dict at: self ntmRegular put: 'Regular'.	dict at: self ntmNonNegativeAC put: 'NonNegativeAC'.	dict at: self ntmPSOpenType put: 'PSOpenType'.	dict at: self ntmTTOpenType put: 'TTOpenType'.	dict at: self ntmMultipleMaster put: 'MultipleMaster'.	dict at: self ntmType1 put: 'Type1'.	dict at: self ntmDSig put: 'DSig'.	^dict</body><body package="Fonts for Windows">flagNamesIn: flags	"&lt;SequenceableCollection of: String"	| flagtypes names |	flagtypes := OrderedCollection new.	flagtypes add: self ntmItalic.	flagtypes add: self ntmBold.	flagtypes add: self ntmRegular.	flagtypes add: self ntmNonNegativeAC.	flagtypes add: self ntmPSOpenType.	flagtypes add: self ntmTTOpenType.	flagtypes add: self ntmMultipleMaster.	flagtypes add: self ntmType1.	flagtypes add: self ntmDSig.	names := OrderedCollection new.	flagtypes do: [:flag |		(flags bitAnd: flag) isZero not ifTrue: [			names add: (self flagNames at: flag)]].	^names</body></methods><methods><class-id>WindowsFonts.NewTextMetric class</class-id> <category>test instances</category><body package="Fonts for Windows">example	^NewTextMetric		height: 1		ascent: 1		descent: 1		internalLeading: 1		externalLeading: 1		aveCharWidth: 1		maxCharWidth: 1		weight: 1		overhang: 1		digitizedAspectX: 1		digitizedAspectY: 1		firstChar: $a		lastChar: $a		defaultChar: $a		breakChar: $a		italic: 1		underlined: 1		struckOut: 1		pitchAndFamily: 1		charSet: 1		flags: 1		sizeEM: 1		cellHeight: 1		avgWidth: 1</body></methods><methods><class-id>Graphics.Fonts.OpenType.Tablegroup</class-id> <category>initialize-release</category><body package="Fonts UI Support">initializeName: aString tables: symbols file: aFile	name := aString.	file := aFile.	symbols do: [:symbol |		| tableClass |		tableClass := Table subclasses detect: [:subclass | subclass name = symbol].		self tables add: (self file tables at: tableClass tag ifAbsent: [			tableClass tag: tableClass tag])]</body></methods><methods><class-id>Graphics.Fonts.OpenType.Tablegroup</class-id> <category>accessing</category><body package="Fonts UI Support">descriptionText	^Text new</body><body package="Fonts UI Support">file	^file</body><body package="Fonts UI Support">listIcon	^Graphics.Fonts.FontListIcons visualFor: #openType</body><body package="Fonts UI Support">listText	^self name asText</body><body package="Fonts UI Support">name	^name</body><body package="Fonts UI Support">tables	^tables ifNil: [tables := OrderedCollection new]</body><body package="Fonts UI Support">treeChildren	^self tables</body><body package="Fonts UI">view	^Graphics.Fonts.TextView on: self descriptionText</body></methods><methods><class-id>Graphics.Fonts.OpenType.Tablegroup</class-id> <category>testing</category><body package="Fonts UI Support">hasTreeChildren	^true</body></methods><methods><class-id>Graphics.Fonts.OpenType.Tablegroup class</class-id> <category>instance creation</category><body package="Fonts UI Support">name: aString tables: list file: aFile	| inst |	inst := self new.	inst initializeName: aString tables: list file: aFile.	^inst</body></methods><methods><class-id>Graphics.Fonts.GlyphView</class-id> <category>accessing</category><body package="Fonts UI">at: aCoordinatePoint	^self translated: (self scaled: aCoordinatePoint)</body><body package="Fonts UI">displayRectangle	^self bounds insetBy: (10 @ 10 corner: 15 @ 15)</body><body package="Fonts UI">font	"&lt;Font&gt;"	^font</body><body package="Fonts UI">font: aFont glyph: aGlyph	font := aFont.	glyph := aGlyph.	self resetScale.	self invalidate</body><body package="Fonts UI">glyph	"&lt;Glyph&gt;"	^glyph</body><body package="Fonts UI">glyphsBoundingDisplayRectangle	| rect pos ext |	rect := self glyphsRectangle.	pos := self at: rect left @ rect bottom.	ext := self scaled: rect extent.	^Rectangle left: pos x top: pos y width: ext x height: ext y</body><body package="Fonts UI">glyphsRectangle	"&lt;Rectangle&gt;	the bounding box of all glyphs of the font"	self font ifNil: [		^0 @ 0 extent: 1 @ 1].	^self font fontBBox</body><body package="Fonts UI">lineHeight	^1</body><body package="Fonts UI">scale	^scale ifNil: [		| scalePoint |		scalePoint := self displayRectangle extent / self glyphsRectangle extent.		scale := scalePoint x min: scalePoint y]</body><body package="Fonts UI">scaled: aPostScriptCoordinate	^(aPostScriptCoordinate * self scale) rounded</body><body package="Fonts UI">selectionRectangleFrom: aRectangle 	^aRectangle origin corner: aRectangle corner - 1</body><body package="Fonts UI">translated: aScaledCoordinate	^self translation + (aScaledCoordinate x @ aScaledCoordinate y negated)</body><body package="Fonts UI">translation	^translation ifNil: [		| glyphRect viewRect offsetExtent offsetOrigin offset originOnScreen |		glyphRect := self glyphsRectangle.		viewRect := self displayRectangle.		offsetExtent := ((viewRect extent - (glyphRect extent scaledBy: self scale)) / 2) rounded.		offsetOrigin := (glyphRect origin scaledBy: self scale) rounded.		offset := offsetExtent - offsetOrigin.		originOnScreen := viewRect left @ viewRect bottom.		translation := originOnScreen + (offset x @ offset y negated)]</body></methods><methods><class-id>Graphics.Fonts.GlyphView</class-id> <category>initialize-release</category><body package="Fonts UI">initializeGlyph: aGlyph	glyph := aGlyph</body><body package="Fonts UI">initializeGlyph: aGlyph font: aFont	glyph := aGlyph.	font := aFont</body></methods><methods><class-id>Graphics.Fonts.GlyphView</class-id> <category>actions</category><body package="Fonts UI">resetScale	scale := nil.	translation := nil</body></methods><methods><class-id>Graphics.Fonts.GlyphView</class-id> <category>displaying</category><body package="Fonts UI">displayCharacterOn: aGC	| char attr position string scanner |	char := self glyph asCharacter ifNil: [		^self].	char = Character illegalCode asCharacter ifTrue: [		^self].	aGC paint: ColorValue black.	attr := self font screenFont.	attr scalingFactor: self scalingFactor.	position := self at: 0 @ 0.	string := String with: char.	scanner := DisplayScanner new.	scanner textStyle: attr.	^scanner		displayLine: (1 to: 1)		inText: string		left: position x		right: SmallInteger maxVal		top: position y - attr baseline		on: aGC</body><body package="Fonts UI">displayGlyphOn: aGC	self font canDisplayUnencodedGlyphs ifTrue: [		^self displayUnencodedGlyphOn: aGC].	self displayCharacterOn: aGC</body><body package="Fonts UI">displayMetricsOn: aGC	| width ascender descender box lsb capHeight xHeight |	width := self glyph width.	ascender := self font ascender.	descender := self font descender.	box := Rectangle origin: (self at: 0 @ ascender) corner: (self at: width @ descender).	lsb := self glyph leftSideBearing.	capHeight := self font capHeight.	xHeight := self font xHeight.	aGC paint: ColorValue black.	aGC lineWidth: 1.	aGC displayLineFrom: (self at: -15 @ 0) to: (self at: width + 15 @ 0).	aGC displayRectangularBorder: box.	aGC displayLineFrom: (self at: lsb @ -15) to: (self at: lsb @ 15).	aGC displayLineFrom: (self at: 0 @ capHeight) to: (self at: width @ capHeight).	aGC displayLineFrom: (self at: 0 @ xHeight) to: (self at: width @ xHeight).</body><body package="Fonts UI">displayOn: aGC	| oldClipBox |	self glyph ifNil: [		^self].	oldClipBox := aGC clippingBounds.	aGC clippingRectangle: (self bounds intersect: oldClipBox).	self displaySheetOn: aGC.	self displayMetricsOn: aGC.	self displayGlyphOn: aGC.	aGC clippingRectangle: oldClipBox</body><body package="Fonts UI">displaySheetOn: aGC	| rect |	rect := self glyphsBoundingDisplayRectangle.	aGC paint: SymbolicPaint shadow.	aGC displayRectangle: (rect translatedBy: 5 @ 5).	aGC paint: SymbolicPaint background.	aGC displayRectangle: rect.	aGC paint: SymbolicPaint shadow.	aGC displayRectangularBorder: rect</body><body package="Fonts UI">displayUnencodedGlyphOn: aGC	| glyphs |	glyphs := WordArray with: self glyph id.	aGC medium withHDCDo: [:hdc |		| lib attr deviceFont hFont |		lib := OSSystemSupport concreteClass new.		lib SetBkMode: lib TRANSPARENT in: hdc.		lib SetTextColor: ColorValue black asColorRef in: hdc.		attr := self font screenFont.		attr scalingFactor: self scalingFactor.		deviceFont := aGC findFont: (attr fontAt: nil for: aGC fontPolicy).		hFont := lib HFONT baseType newOfAddress: deviceFont handle key.		lib withObject: hFont in: hdc do: [			| offset position rect tm ascent |			rect := self glyphsBoundingDisplayRectangle rounded.			offset := self localPointToGlobal: 0 @ 0.			rect := (rect translatedBy: offset) insetBy: 1.			position := self at: 0 @ 0.			position := position + offset.			tm := lib getTextMetrics: hdc.			ascent := tm memberAt: #tmAscent.			lib				ExtTextOut: (glyphs copyToHeap: #gcMalloc:)				size: glyphs size				atX: position x				y: position y - ascent				options: (lib ETO_CLIPPED bitOr: lib ETO_GLYPH_INDEX)				rect: (lib newRECTFrom: rect)				spacing: 0				in: hdc]]</body><body package="Fonts UI">scalingFactor	^self scale * 72 * self font unitsPerEm / 1000</body></methods><methods><class-id>Graphics.Fonts.GlyphView</class-id> <category>framing</category><body package="Fonts UI">preferredExtent	^self glyphsBoundingDisplayRectangle extent</body></methods><methods><class-id>Graphics.Fonts.GlyphView class</class-id> <category>instance creation</category><body package="Fonts UI">on: aGlyph	| inst |	inst := self new.	inst initializeGlyph: aGlyph.	^inst</body><body package="Fonts UI">on: aGlyph font: aFont	| inst |	inst := self new.	inst initializeGlyph: aGlyph font: aFont.	^inst</body></methods><methods><class-id>WindowsFonts.Win32Fontsupport</class-id> <category>defines</category><body package="Fonts for Windows">ANSI_FIXED_FONT	&lt;C: #define ANSI_FIXED_FONT               11	&gt;</body><body package="Fonts for Windows">ANSI_VAR_FONT	&lt;C: #define ANSI_VAR_FONT               12	&gt;</body><body package="Fonts for Windows">CF_ANSIONLY	&lt;C: #define CF_ANSIONLY 0x00000400L	&gt;</body><body package="Fonts for Windows">CF_APPLY	&lt;C: #define CF_APPLY 0x00000200L	&gt;</body><body package="Fonts for Windows">CF_BOTH	&lt;C: #define CF_BOTH (CF_SCREENFONTS | CF_PRINTERFONTS)	&gt;</body><body package="Fonts for Windows">CF_EFFECTS	&lt;C: #define CF_EFFECTS 0x00000100L	&gt;</body><body package="Fonts for Windows">CF_ENABLEHOOK	&lt;C: #define CF_ENABLEHOOK 0x00000008L	&gt;</body><body package="Fonts for Windows">CF_ENABLETEMPLATE	&lt;C: #define CF_ENABLETEMPLATE 0x00000010L	&gt;</body><body package="Fonts for Windows">CF_ENABLETEMPLATEHANDLE	&lt;C: #define CF_ENABLETEMPLATEHANDLE 0x00000020L	&gt;</body><body package="Fonts for Windows">CF_FIXEDPITCHONLY	&lt;C: #define CF_FIXEDPITCHONLY          0x00004000L	&gt;</body><body package="Fonts for Windows">CF_FORCEFONTEXIST	&lt;C: #define CF_FORCEFONTEXIST          0x00010000L	&gt;</body><body package="Fonts for Windows">CF_INITTOLOGFONTSTRUCT	&lt;C: #define CF_INITTOLOGFONTSTRUCT 0x00000040L	&gt;</body><body package="Fonts for Windows">CF_LIMITSIZE	&lt;C: #define CF_LIMITSIZE 0x00002000L	&gt;</body><body package="Fonts for Windows">CF_NOFACESEL	&lt;C: #define CF_NOFACESEL               0x00080000L	&gt;</body><body package="Fonts for Windows">CF_NOOEMFONTS	&lt;C: #define CF_NOOEMFONTS CF_NOVECTORFONTS	&gt;</body><body package="Fonts for Windows">CF_NOSCRIPTSEL	&lt;C: #define CF_NOSCRIPTSEL             0x00800000L	&gt;</body><body package="Fonts for Windows">CF_NOSIMULATIONS	&lt;C: #define CF_NOSIMULATIONS 0x00001000L	&gt;</body><body package="Fonts for Windows">CF_NOSIZESEL	&lt;C: #define CF_NOSIZESEL               0x00200000L	&gt;</body><body package="Fonts for Windows">CF_NOSTYLESEL	&lt;C: #define CF_NOSTYLESEL              0x00100000L	&gt;</body><body package="Fonts for Windows">CF_NOVECTORFONTS	&lt;C: #define CF_NOVECTORFONTS 0x00000800L	&gt;</body><body package="Fonts for Windows">CF_NOVERTFONTS	&lt;C: #define CF_NOVERTFONTS             0x01000000L	&gt;</body><body package="Fonts for Windows">CF_PRINTERFONTS	&lt;C: #define CF_PRINTERFONTS 2	&gt;</body><body package="Fonts for Windows">CF_SCALABLEONLY	&lt;C: #define CF_SCALABLEONLY            0x00020000L	&gt;</body><body package="Fonts for Windows">CF_SCREENFONTS	&lt;C: #define CF_SCREENFONTS 1	&gt;</body><body package="Fonts for Windows">CF_SCRIPTSONLY	&lt;C: #define CF_SCRIPTSONLY CF_ANSIONLY	&gt;</body><body package="Fonts for Windows">CF_SELECTSCRIPT	&lt;C: #define CF_SELECTSCRIPT            0x00400000L	&gt;</body><body package="Fonts for Windows">CF_SHOWHELP	&lt;C: #define CF_SHOWHELP 0x00000004L	&gt;</body><body package="Fonts for Windows">CF_TTONLY	&lt;C: #define CF_TTONLY                  0x00040000L	&gt;</body><body package="Fonts for Windows">CF_USESTYLE	&lt;C: #define CF_USESTYLE 0x00000080L	&gt;</body><body package="Fonts for Windows">CF_WYSIWYG	"must also have CF_SCREENFONTS &amp; CF_PRINTERFONTS"	&lt;C: #define CF_WYSIWYG 0x00008000L	&gt;</body><body package="Fonts for Windows">CLR_INVALID	&lt;C: #define CLR_INVALID     0xFFFFFFFF	&gt;</body><body package="Fonts for Windows">DEFAULT_GUI_FONT	&lt;C: #define DEFAULT_GUI_FONT               17	&gt;</body><body package="Fonts for Windows">DEVICE_DEFAULT_FONT	&lt;C: #define DEVICE_DEFAULT_FONT               14	&gt;</body><body package="Fonts for Windows">DEVICE_FONTTYPE	&lt;C: #define DEVICE_FONTTYPE 2	&gt;</body><body package="Fonts for Windows">DSIG_FONTTYPE	&lt;C: #define DSIG_FONTTYPE 0x40000	&gt;</body><body package="Fonts for Windows">ITALIC_FONTTYPE	&lt;C: #define ITALIC_FONTTYPE 0x0200	&gt;</body><body package="Fonts for Windows">OEM_FIXED_FONT	&lt;C: #define OEM_FIXED_FONT               10	&gt;</body><body package="Fonts for Windows">PRINTER_FONTTYPE	&lt;C: #define PRINTER_FONTTYPE 0x4000	&gt;</body><body package="Fonts for Windows">PS_OPENTYPE_FONTTYPE	&lt;C: #define PS_OPENTYPE_FONTTYPE 0x10000	&gt;</body><body package="Fonts for Windows">RASTER_FONTTYPE	&lt;C: #define RASTER_FONTTYPE 1	&gt;</body><body package="Fonts for Windows">REGULAR_FONTTYPE	&lt;C: #define REGULAR_FONTTYPE 0x0400	&gt;</body><body package="Fonts for Windows">SCREEN_FONTTYPE	&lt;C: #define SCREEN_FONTTYPE 0x2000	&gt;</body><body package="Fonts for Windows">SIMULATED_FONTTYPE	&lt;C: #define SIMULATED_FONTTYPE 0x8000	&gt;</body><body package="Fonts for Windows">SYSTEM_FIXED_FONT	&lt;C: #define SYSTEM_FIXED_FONT               16	&gt;</body><body package="Fonts for Windows">SYSTEM_FONT	&lt;C: #define SYSTEM_FONT               13	&gt;</body><body package="Fonts for Windows">TRUETYPE_FONTTYPE	&lt;C: #define TRUETYPE_FONTTYPE 4	&gt;</body><body package="Fonts for Windows">TT_OPENTYPE_FONTTYPE	&lt;C: #define TT_OPENTYPE_FONTTYPE 0x20000	&gt;</body><body package="Fonts for Windows">TYPE1_FONTTYPE	&lt;C: #define TYPE1_FONTTYPE 0x40000	&gt;</body></methods><methods><class-id>WindowsFonts.Win32Fontsupport</class-id> <category>structs</category><body package="Fonts for Windows">tagAXESLIST	&lt;C: struct tagAXESLIST {		DWORD    axlReserved;		DWORD    axlNumAxes;		AXISINFO axlAxisInfo[16];	}&gt;</body><body package="Fonts for Windows">tagAXISINFO	&lt;C: struct tagAXISINFO {		LONG axMinValue;		LONG axMaxValue;		TCHAR axAxisName[16];	}&gt;</body><body package="Fonts for Windows">tagCHOOSEFONT	&lt;C: struct tagCHOOSEFONT {		DWORD 			lStructSize;		HWND 				hwndOwner;          	// caller's window handle		HDC 				hDC;                		// printer DC/IC or NULL		LPLOGFONT 		lpLogFont;          	// ptr. to a LOGFONT struct		INT 					iPointSize;         	// 10 * size in points of selected font		DWORD 			Flags;              		// enum. type flags		COLORREF 		rgbColors;          	// returned text color		LPARAM 			lCustData;          	// data passed to hook fn.		LPCFHOOKPROC 	lpfnHook;           	// ptr. to hook function		LPCWSTR 			lpTemplateName;   	// custom template name		HINSTANCE 		hInstance;           	// instance handle of.EXE that contains cust. dlg. template		LPWSTR 			lpszStyle;            	// return the style field here must be LF_FACESIZE or bigger		WORD 				nFontType;          	// same value reported to the EnumFonts call back with the extra FONTTYPE_ bits added		WORD 				___MISSING_ALIGNMENT__;		INT 					nSizeMin;            	// minimum pt size allowed &amp;		INT 					nSizeMax;           	// max pt size allowed if CF_LIMITSIZE is used	}&gt;</body><body package="Fonts for Windows">tagDESIGNVECTOR	&lt;C: struct tagDESIGNVECTOR {		DWORD dvReserved;		DWORD dvNumAxes;		LONG dvValues[16];	}&gt;</body><body package="Fonts for Windows">tagENUMLOGFONTEX	&lt;C: struct tagENUMLOGFONTEX {		LOGFONT  elfLogFont;		TCHAR  elfFullName[64];		TCHAR  elfStyle[32];		TCHAR  elfScript[32];	}&gt;</body><body package="Fonts for Windows">tagENUMLOGFONTEXDV	&lt;C: struct tagENUMLOGFONTEXDV {		ENUMLOGFONTEX elfEnumLogfontEx;		DESIGNVECTOR elfDesignVector;	}&gt;</body><body package="Fonts for Windows">tagENUMTEXTMETRIC	&lt;C: struct tagENUMTEXTMETRIC {		NEWTEXTMETRICEX etmNewTextMetricEx;		AXESLIST etmAxesList;	}&gt;</body><body package="Fonts for Windows">tagFONTSIGNATURE	&lt;C: struct tagFONTSIGNATURE {		DWORD fsUsb[4];		DWORD fsCsb[2];	}&gt;</body><body package="Fonts for Windows">tagLOGFONT	&lt;C: struct tagLOGFONT {		LONG lfHeight; 		LONG lfWidth; 		LONG lfEscapement; 		LONG lfOrientation; 		LONG lfWeight; 		BYTE lfItalic; 		BYTE lfUnderline; 		BYTE lfStrikeOut; 		BYTE lfCharSet; 		BYTE lfOutPrecision; 		BYTE lfClipPrecision; 		BYTE lfQuality; 		BYTE lfPitchAndFamily; 		TCHAR lfFaceName[32];	}&gt;</body><body package="Fonts for Windows">tagNEWTEXTMETRIC	&lt;C: struct tagNEWTEXTMETRIC {		LONG tmHeight; 		LONG tmAscent; 		LONG tmDescent; 		LONG tmInternalLeading; 		LONG tmExternalLeading; 		LONG tmAveCharWidth; 		LONG tmMaxCharWidth; 		LONG tmWeight; 		LONG tmOverhang; 		LONG tmDigitizedAspectX; 		LONG tmDigitizedAspectY; 		TCHAR tmFirstChar; 		TCHAR tmLastChar; 		TCHAR tmDefaultChar; 		TCHAR tmBreakChar; 		BYTE tmItalic; 		BYTE tmUnderlined; 		BYTE tmStruckOut; 		BYTE tmPitchAndFamily; 		BYTE tmCharSet; 		DWORD  ntmFlags; 		UINT   ntmSizeEM; 		UINT   ntmCellHeight; 		UINT   ntmAvgWidth; 	}&gt;</body><body package="Fonts for Windows">tagNEWTEXTMETRICEX	&lt;C: struct tagNEWTEXTMETRICEX {		NEWTEXTMETRIC  ntmTm;		FONTSIGNATURE  ntmFontSig;	}&gt;</body><body package="Fonts for Windows">tagTEXTMETRIC	&lt;C: struct tagTEXTMETRIC {		LONG tmHeight; 		LONG tmAscent; 		LONG tmDescent; 		LONG tmInternalLeading; 		LONG tmExternalLeading; 		LONG tmAveCharWidth; 		LONG tmMaxCharWidth; 		LONG tmWeight; 		LONG tmOverhang; 		LONG tmDigitizedAspectX; 		LONG tmDigitizedAspectY; 		TCHAR tmFirstChar; 		TCHAR tmLastChar; 		TCHAR tmDefaultChar; 		TCHAR tmBreakChar; 		BYTE tmItalic; 		BYTE tmUnderlined; 		BYTE tmStruckOut; 		BYTE tmPitchAndFamily; 		BYTE tmCharSet; 	}&gt;</body></methods><methods><class-id>WindowsFonts.Win32Fontsupport</class-id> <category>types</category><body package="Fonts for Windows">AXESLIST	&lt;C: typedef struct tagAXESLIST AXESLIST&gt;</body><body package="Fonts for Windows">AXISINFO	&lt;C: typedef struct tagAXISINFO AXISINFO&gt;</body><body package="Fonts for Windows">BOOL	&lt;C: typedef long BOOL&gt;</body><body package="Fonts for Windows">BYTE	&lt;C: typedef unsigned char BYTE&gt;</body><body package="Fonts for Windows">CHOOSEFONT	&lt;C: typedef struct tagCHOOSEFONT CHOOSEFONT&gt;</body><body package="Fonts for Windows">COLORREF	&lt;C: typedef DWORD COLORREF&gt;</body><body package="Fonts for Windows">DESIGNVECTOR	&lt;C: typedef struct tagDESIGNVECTOR DESIGNVECTOR&gt;</body><body package="Fonts for Windows">DWORD	&lt;C: typedef unsigned long DWORD&gt;</body><body package="Fonts for Windows">ENUMLOGFONTEX	&lt;C: typedef struct tagENUMLOGFONTEX ENUMLOGFONTEX&gt;</body><body package="Fonts for Windows">ENUMLOGFONTEXDV	&lt;C: typedef struct tagENUMLOGFONTEXDV ENUMLOGFONTEXDV&gt;</body><body package="Fonts for Windows">ENUMTEXTMETRIC	&lt;C: typedef struct tagENUMTEXTMETRIC ENUMTEXTMETRIC&gt;</body><body package="Fonts for Windows">EnumFontFamExProc	&lt;C: typedef int ( * EnumFontFamExProc) (		ENUMLOGFONTEX *lpelfe,		NEWTEXTMETRICEX *lpntme,		DWORD FontType,		LPARAM lParam	)&gt;</body><body package="Fonts for Windows">FONTENUMPROC	&lt;C: typedef void * FONTENUMPROC&gt;</body><body package="Fonts for Windows">FONTSIGNATURE	&lt;C: typedef struct tagFONTSIGNATURE FONTSIGNATURE&gt;</body><body package="Fonts for Windows">HANDLE	&lt;C: typedef void * HANDLE&gt;</body><body package="Fonts for Windows">HBITMAP	&lt;C: typedef HANDLE HBITMAP&gt;</body><body package="Fonts for Windows">HBRUSH	&lt;C: typedef HANDLE HBRUSH&gt;</body><body package="Fonts for Windows">HDC	&lt;C: typedef HANDLE HDC&gt;</body><body package="Fonts for Windows">HFONT	&lt;C: typedef HANDLE HFONT&gt;</body><body package="Fonts for Windows">HINSTANCE	&lt;C: typedef HANDLE HINSTANCE&gt;</body><body package="Fonts for Windows">HWND	&lt;C: typedef HANDLE HWND&gt;</body><body package="Fonts for Windows">INT	&lt;C: typedef int INT&gt;</body><body package="Fonts for Windows">LOGFONT	&lt;C: typedef struct tagLOGFONT LOGFONT&gt;</body><body package="Fonts for Windows">LONG	&lt;C: typedef long LONG&gt;</body><body package="Fonts for Windows">LPARAM	&lt;C: typedef LONG LPARAM&gt;</body><body package="Fonts for Windows">LPCFHOOKPROC	&lt;C: typedef void * LPCFHOOKPROC&gt;</body><body package="Fonts for Windows">LPCHOOSEFONT	&lt;C: typedef void * LPCHOOSEFONT&gt;</body><body package="Fonts for Windows">LPCSTR	&lt;C: typedef const char * LPCSTR&gt;</body><body package="Fonts for Windows">LPCTSTR	&lt;C: typedef LPCSTR LPCTSTR&gt;</body><body package="Fonts for Windows">LPCVOID	&lt;C: typedef void * LPCVOID&gt;</body><body package="Fonts for Windows">LPCWSTR	&lt;C: typedef void * LPCWSTR&gt;</body><body package="Fonts for Windows">LPLOGFONT	&lt;C: typedef LOGFONT * LPLOGFONT&gt;</body><body package="Fonts for Windows">LPTEXTMETRIC	&lt;C: typedef void * LPTEXTMETRIC&gt;</body><body package="Fonts for Windows">LPTSTR	&lt;C: typedef char * LPTSTR&gt;</body><body package="Fonts for Windows">LPWSTR	&lt;C: typedef void * LPWSTR&gt;</body><body package="Fonts for Windows">NEWTEXTMETRIC	&lt;C: typedef struct tagNEWTEXTMETRIC NEWTEXTMETRIC&gt;</body><body package="Fonts for Windows">NEWTEXTMETRICEX	&lt;C: typedef struct tagNEWTEXTMETRICEX NEWTEXTMETRICEX&gt;</body><body package="Fonts for Windows">TCHAR	&lt;C: typedef WCHAR TCHAR&gt;</body><body package="Fonts for Windows">TEXTMETRIC	&lt;C: typedef struct tagTEXTMETRIC TEXTMETRIC&gt;</body><body package="Fonts for Windows">UINT	&lt;C: typedef unsigned int UINT&gt;</body><body package="Fonts for Windows">WCHAR	&lt;C: typedef unsigned short WCHAR&gt;</body><body package="Fonts for Windows">WORD	&lt;C: typedef unsigned short WORD&gt;</body><body package="Fonts for Windows">va_list	&lt;C: typedef void * va_list&gt;</body></methods><methods><class-id>WindowsFonts.Win32Fontsupport</class-id> <category>actions</category><body package="Fonts for Windows">baseFlags	^self CF_SCREENFONTS bitOr: (self CF_EFFECTS bitOr: (self CF_SCALABLEONLY bitOr: (self CF_SELECTSCRIPT bitOr: self CF_SCRIPTSONLY)))</body><body package="Fonts for Windows">createSysColorBrush: crColor	^self GetSysColorBrush: crColor</body><body package="Fonts for Windows">extTextOut: string at: aPoint clip: aRectangle in: hdc	| syslib |	syslib := OSSystemSupport concreteClass new.	syslib		ExtTextOut: string gcCopyToHeapUnicode		size: string size		atX: aPoint x		y: aPoint y		options: syslib ETO_CLIPPED		rect: (syslib newRECTFrom: aRectangle)		spacing: 0		in: hdc</body><body package="Fonts for Windows">graphicsMode	"&lt;Integer&gt;	GM_COMPATIBLE       1	GM_ADVANCED         2"	"Win32Fontsupport new graphicsMode"	| hdc |	hdc := OSSystemSupport concreteClass new GetDC: nil.	^self GetGraphicsMode: hdc</body><body package="Fonts for Windows">graphicsMode: graphicsModeInteger	"GM_COMPATIBLE       1	GM_ADVANCED         2"	"Win32Fontsupport new graphicsMode: 2"	| hdc |	hdc := OSSystemSupport concreteClass new GetDC: nil.	^self SetGraphicsMode: graphicsModeInteger for: hdc</body><body package="Fonts for Windows">graphicsMode: graphicsModeInteger for: hWND	"GM_COMPATIBLE       1	GM_ADVANCED         2"	^OSSystemSupport concreteClass new withHDCFor: hWND do: [:hdc |		self SetGraphicsMode: graphicsModeInteger for: hdc]</body><body package="Fonts for Windows">logfontFacenamed: facename	"pointer to LOGFONT struct on the heap"	| lpLogFont |	lpLogFont := self newLpLogFont.	self putUnicode: (facename first: 31) into: lpLogFont at: #lfFaceName.	^lpLogFont</body><body package="Fonts for Windows">logfontFromCallbackWithLogfont: lpelfe textMetric: lpntme fontType: fontType	| filled textMetric |self halt.	filled := Logfont newFrom: lpelfe.	textMetric := TextMetric newFrom: lpntme.	^filled -&gt; textMetric</body><body package="Fonts for Windows">newLogFontCharSet: aCharSet faceName: aFaceName	"pointer to LOGFONT struct on the heap"	| lpLogFont |	lpLogFont := self LOGFONT gcMalloc.	lpLogFont zeroFill.	lpLogFont memberAt: #lfCharSet put: aCharSet.	self putUnicode: (aFaceName first: 31) into: lpLogFont at: #lfFaceName.	^lpLogFont</body><body package="Fonts for Windows">newLpChooseFont	"pointer to new CHOOSEFONT struct on the heap"	| lpChooseFont |	lpChooseFont := self CHOOSEFONT gcMalloc.	lpChooseFont zeroFill.	lpChooseFont memberAt: #lStructSize put: lpChooseFont type referentType sizeof.	^lpChooseFont</body><body package="Fonts for Windows">newLpLogFont	| lpLogFont |	lpLogFont := self LOGFONT gcMalloc.	lpLogFont zeroFill.	lpLogFont memberAt: #lfCharSet put: CharSet default value.	^lpLogFont</body><body package="Fonts for Windows">newLpLogFontFrom: aLogfont	| lpLogFont |	lpLogFont := self LOGFONT gcMalloc.	lpLogFont zeroFill.	lpLogFont memberAt: #lfHeight put: aLogfont height.	lpLogFont memberAt: #lfWidth put: aLogfont width.	lpLogFont memberAt: #lfEscapement put: aLogfont escapement.	lpLogFont memberAt: #lfOrientation put: aLogfont orientation.	lpLogFont memberAt: #lfWeight put: aLogfont weight.	lpLogFont memberAt: #lfItalic put: aLogfont italic.	lpLogFont memberAt: #lfUnderline put: aLogfont underline.	lpLogFont memberAt: #lfStrikeOut put: aLogfont strikeOut.	lpLogFont memberAt: #lfCharSet put: aLogfont charSet.	lpLogFont memberAt: #lfOutPrecision put: aLogfont outPrecision.	lpLogFont memberAt: #lfClipPrecision put: aLogfont clipPrecision.	lpLogFont memberAt: #lfQuality put: aLogfont quality.	lpLogFont memberAt: #lfPitchAndFamily put: aLogfont pitchAndFamily.	self putUnicode: (aLogfont faceName first: 31) into: lpLogFont at: #lfFaceName.	^lpLogFont</body><body package="Fonts for Windows">newSystemFontTyped: fontType logfont: lpelfe textmetric: lpntme	| logfont textmetric isTrueType |	isTrueType := (fontType bitAnd: 4) isZero not.	isTrueType		ifTrue: [		| aNEWTEXTMETRIC flags isMultipleMaster |		lpntme type referentType: self NEWTEXTMETRICEX.		aNEWTEXTMETRIC := lpntme memberAt: #ntmTm.		flags := aNEWTEXTMETRIC memberAt: #ntmFlags.		isMultipleMaster := (flags bitAnd: NewTextMetric ntmMultipleMaster) isZero not.		isMultipleMaster			ifTrue: [			lpntme type referentType: self ENUMTEXTMETRIC.			textmetric := EnumTextMetric newFrom: lpntme.			lpelfe type referentType: self ENUMLOGFONTEXDV.			logfont := EnumLogfontExDv newFrom: lpelfe]			ifFalse: [			textmetric := NewTextMetricEx newFrom: lpntme.			lpelfe type referentType: self ENUMLOGFONTEX.			logfont := EnumLogfontEx newFrom: lpelfe]]		ifFalse: [		lpntme type referentType: self TEXTMETRIC.		textmetric := TextMetric newFrom: lpntme.		lpelfe type referentType: self ENUMLOGFONTEX.		logfont := EnumLogfontEx newFrom: lpelfe].	^SystemFont type: fontType font: logfont metric: textmetric</body><body package="Fonts for Windows">putUnicode: name into: lpLogFont at: refMember	| bytes null aPointer |	bytes := name asByteArrayEncoding: #UCS_2.	null := (ByteString new: 1) asByteArrayEncoding: #UCS_2.	aPointer := lpLogFont refMemberAt: refMember.	aPointer copyAt: 0 from: bytes size: bytes size startingAt: 1.	aPointer copyAt: bytes size from: null size: null size startingAt: 1</body><body package="Fonts for Windows">signalOsError: errorCode	^OSSystemSupport concreteClass new signalOsError: errorCode</body><body package="Fonts for Windows">systemFonts: lpLogFont for: hdc	"&lt;SequenceableCollection of: SystemFont&gt;	get all font for a specific faceName.	remove fonts with duplicate logfonts"	| fonts callback logfonts |	fonts := OrderedCollection new.	logfonts := Set new.	callback := CCallback		do: [:lpelfe :lpntme :fontType :lParam |		| font logfont |		font := self newSystemFontTyped: fontType logfont: lpelfe textmetric: lpntme.		logfont := font asLogfont.		(logfonts includes: logfont) ifFalse: [			logfonts add: logfont.			fonts add: font].		1]		ofType: self EnumFontFamExProc.	(self EnumFontFamiliesEx: hdc with: lpLogFont with: callback with: 0 with: 0) isZero ifTrue: [		^#()].	^fonts</body><body package="Fonts for Windows">systemFontsWithDuplicates	"&lt;SequenceableCollection of: SystemFont&gt;"	"self new systemFonts"	| fonts duplicates hdc lpLogFont |	hdc := OSSystemSupport concreteClass new GetDC: nil.	lpLogFont := self newLpLogFont.	fonts := OrderedCollection new.	duplicates := OrderedCollection new.	(self uniqueFacenamesFor: hdc) do: [:facename |		| fontAndDuplicates |		self putUnicode: (facename first: 31) into: lpLogFont at: #lfFaceName.		fontAndDuplicates := self systemFontsWithDuplicates: lpLogFont for: hdc.		fonts addAll: fontAndDuplicates first.		duplicates addAll: fontAndDuplicates last].	duplicates inspect.	^fonts</body><body package="Fonts for Windows">systemFontsWithDuplicates: lpLogFont for: hdc	| fonts callback logfonts duplicates |	fonts := OrderedCollection new.	logfonts := Set new.	duplicates := OrderedCollection new.	callback := CCallback		do: [:lpelfe :lpntme :fontType :lParam |		| font logfont |		font := self newSystemFontTyped: fontType logfont: lpelfe textmetric: lpntme.		logfont := font asLogfont.		(logfonts includes: logfont)			ifFalse: [			logfonts add: logfont.			fonts add: font]			ifTrue: [			duplicates add: font].		1]		ofType: self EnumFontFamExProc.	(self EnumFontFamiliesEx: hdc with: lpLogFont with: callback with: 0 with: 0) isZero ifTrue: [		^#()].	^Array		with: fonts		with: duplicates</body><body package="Fonts for Windows">textOut: string at: aPoint in: hdc	^self TextOut: string gcCopyToHeapUnicode size: string size atX: aPoint x y: aPoint y in: hdc</body><body package="Fonts for Windows">uniqueFacenamesFor: hdc	"&lt;SequenceableCollection of: String&gt;	all facenames of all fonts without duplicates. This is the first step to find all system fonts"	| defaultFontName facenames lastFacename callback |	defaultFontName := 'System'.	facenames := OrderedCollection with: defaultFontName.	lastFacename := String new.	callback := CCallback		do: [:lpelfe :lpntme :fontType :lParam |		| facename |		facename := ((lpelfe memberAt: #elfLogFont) memberAt: #lfFaceName) copyUnicodeStringFromHeap.		(facename ~= lastFacename and: [		facename ~= defaultFontName]) ifTrue: [				facenames add: facename.				lastFacename := facename].		1]		ofType: self EnumFontFamExProc.	(self EnumFontFamiliesEx: hdc with: self newLpLogFont with: callback with: 0 with: 0) isZero ifTrue: [		^#()].	^facenames</body></methods><methods><class-id>WindowsFonts.Win32Fontsupport</class-id> <category>API</category><body package="Fonts for Windows">chooseLogfontFace: facenameString for: hwd	"&lt;LogFont | nil&gt;"	| lpLogFont lpChooseFont |	lpLogFont := self logfontFacenamed: facenameString.	lpChooseFont := self newLpChooseFont.	lpChooseFont memberAt: #hwndOwner put: hwd.	lpChooseFont memberAt: #lpLogFont put: lpLogFont.	lpChooseFont memberAt: #Flags put: (self baseFlags bitOr: self CF_INITTOLOGFONTSTRUCT).	(self ChooseFont: lpChooseFont) isZero ifTrue: [		^nil].	^Logfont newFrom: lpLogFont</body><body package="Fonts for Windows">chooseLogfontFor: hwd	"&lt;LogFont | nil&gt;"	| lpLogFont lpChooseFont |	lpLogFont := self newLpLogFont.	lpChooseFont := self newLpChooseFont.	lpChooseFont memberAt: #hwndOwner put: hwd.	lpChooseFont memberAt: #lpLogFont put: lpLogFont.	lpChooseFont memberAt: #Flags put: self baseFlags.	(self ChooseFont: lpChooseFont) isZero ifTrue: [		^nil].	^Logfont newFrom: lpLogFont</body><body package="Fonts for Windows">createColoredBrush: crColor	"&lt;HBRUSH&gt;"	^self CreateSolidBrush: crColor</body><body package="Fonts for Windows">systemFontHeight	"self new systemFontHeight"	| hdc sysFonts heights syslib |	sysFonts := Dictionary new.	sysFonts at: 'OEM_FIXED_FONT' put: self OEM_FIXED_FONT.	sysFonts at: 'ANSI_FIXED_FONT' put: self ANSI_FIXED_FONT.	sysFonts at: 'ANSI_VAR_FONT' put: self ANSI_VAR_FONT.	sysFonts at: 'SYSTEM_FONT' put: self SYSTEM_FONT.	sysFonts at: 'DEVICE_DEFAULT_FONT' put: self DEVICE_DEFAULT_FONT.	sysFonts at: 'SYSTEM_FIXED_FONT' put: self SYSTEM_FIXED_FONT.	sysFonts at: 'DEFAULT_GUI_FONT' put: self DEFAULT_GUI_FONT.	heights := Dictionary new.	syslib := OSSystemSupport concreteClass new.	hdc := syslib GetDC: nil.	sysFonts keysAndValuesDo: [:name :id |		| sysfont metric |		sysfont := self GetStockObject: id.		syslib selectObject: sysfont into: hdc.		metric := syslib getTextMetrics: hdc.		heights at: name put: (metric memberAt: #tmHeight)].	^heights</body><body package="Fonts for Windows">systemFonts	"&lt;SequenceableCollection of: SystemFont&gt;"	"self new systemFonts"	| fonts hdc lpLogFont |	hdc := OSSystemSupport concreteClass new GetDC: nil.	lpLogFont := self newLpLogFont.	fonts := OrderedCollection new.	(self uniqueFacenamesFor: hdc) do: [:facename |		self putUnicode: (facename first: 31) into: lpLogFont at: #lfFaceName.		fonts addAll: (self systemFonts: lpLogFont for: hdc)].	^fonts</body><body package="Fonts for Windows">systemFontsMatching: lpLogFont	| hdc callback fonts |	fonts := OrderedCollection new.	hdc := OSSystemSupport concreteClass new GetDC: nil.	callback := CCallback		do: [:lpelfe :lpntme :fontType :lParam |		fonts add: (self newSystemFontTyped: fontType logfont: lpelfe textmetric: lpntme).		1]		ofType: self EnumFontFamExProc.	(self EnumFontFamiliesEx: hdc with: lpLogFont with: callback with: 0 with: 0) isZero ifTrue: [		^#()].	^fonts</body><body package="Fonts for Windows">withFont: aLogfont in: hdc do: zeroArgumentBlock	"answer whatever the block answers"	| hFont |	hFont := self CreateFontIndirect: aLogfont.	^[self withObject: hFont in: hdc do: zeroArgumentBlock] ensure: [		self DeleteObject: hFont]</body><body package="Fonts for Windows">withObject: hGdiObj in: hdc do: zeroArgumentBlock	"answer whatever the block answers"	^OSSystemSupport concreteClass new withObject: hGdiObj in: hdc do: zeroArgumentBlock</body></methods><methods><class-id>Graphics.Fonts.FontProgramHeader</class-id> <category>accessing</category><body package="Type1">contents	"&lt;String&gt;	cleartext PostScript code"	^contents</body><body package="Type1">familyName	"&lt;String&gt;	The name of the typeface family to which the font belongs"	^familyName</body><body package="Type1">fontBBox	"&lt;Rectangle&gt;	the font bounding box"	^fontBBox</body><body package="Fonts UI Support">listIcon	^Type1Font listIcon</body><body package="Fonts UI Support">listText	^self class name asString asText</body><body package="Fonts UI Support">treeChildren	^#()</body><body package="Fonts UI">view	^TextView on: self asSource</body></methods><methods><class-id>Graphics.Fonts.FontProgramHeader</class-id> <category>initialize-release</category><body package="Type1">initializeFamilyName: familyNameString fontBBox: fontBBoxRectangle contents: contentsString	familyName := familyNameString.	fontBBox := fontBBoxRectangle.	contents := contentsString.	self beImmutable</body></methods><methods><class-id>Graphics.Fonts.FontProgramHeader</class-id> <category>printing</category><body package="Type1">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'familyName' value: self familyName).	args add: (printer constant: 'fontBBox' value: self fontBBox).	args add: (printer constant: 'contents' value: self contents).	^printer printvalue: self arguments: args</body></methods><methods><class-id>Graphics.Fonts.FontProgramHeader</class-id> <category>testing</category><body package="Fonts UI Support">hasTreeChildren	^false</body></methods><methods><class-id>Graphics.Fonts.FontProgramHeader class</class-id> <category>instance creation</category><body package="Type1">familyName: familyNameString fontBBox: fontBBoxRectangle contents: contentsString	| inst |	inst := self new.	inst		initializeFamilyName: familyNameString		fontBBox: fontBBoxRectangle		contents: contentsString.	^inst</body><body package="Type1">familyNameFrom: contentsString	"&lt;String&gt;"	| rst |	rst := contentsString readStream.	rst upToAll: '/FamilyName'.	rst upTo: $(.	^rst upTo: $)</body><body package="Type1">fontBBoxFrom: contentsString	"&lt;Rectangle&gt;	hack: just extract this piece of information from the header without parsing all PostScript"	| rst numbersString numbers llx lly urx ury wst numbersStrings |	rst := contentsString readStream.	rst upToAll: '/FontBBox'.	rst next: 10.	[	| c |	c := rst peek.	c isDigit or: [	'-+' includes: c]] whileFalse: [rst next].	wst := String new writeStream.	[	| c |	c := rst peek.	c isDigit or: [	c isSeparator or: [	'-+' includes: c]]] whileTrue: [			wst nextPut: rst next].	numbersString := wst contents.	numbersStrings := numbersString runsSatisfying: [:c |		c isDigit or: [		'-+' includes: c]].	numbers := numbersStrings collect: [:string | string asNumber].	llx := numbers at: 1.	lly := numbers at: 2.	urx := numbers at: 3.	ury := numbers at: 4.	^llx @ lly corner: urx @ ury</body><body package="Type1">fromHeader: contentsString	^self		familyName: (self familyNameFrom: contentsString)		fontBBox: (self fontBBoxFrom: contentsString)		contents: contentsString</body></methods><methods><class-id>Graphics.Fonts.FontProgramHeader class</class-id> <category>test instances</category><body package="Fonts test resources">example	^FontProgram example header</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable13</class-id> <category>accessing</category><body package="OpenType">glyphIndexAtUnicode: aUnicodeInteger	^self notYetImplemented</body><body package="OpenType">indexToCode	^self notYetImplemented</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable13 class</class-id> <category>accessing</category><body package="OpenType">formatNumber	^13</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable13 class</class-id> <category>test instances</category><body package="Fonts test resources">example	^CmapSubtable13 platform: 1 encoding: 1 contents: #[42] language: 1</body></methods><methods><class-id>Graphics.Fonts.PairKern</class-id> <category>initialize-release</category><body package="Type1">initializeFirst: firstInteger second: secondInteger kernAmount: kernAmountInteger	first := firstInteger.	second := secondInteger.	kernAmount := kernAmountInteger.	self beImmutable</body></methods><methods><class-id>Graphics.Fonts.PairKern</class-id> <category>accessing</category><body package="Type1">first	"&lt;Integer&gt;	BYTE: the first (left) character of the kerning pair"	^first</body><body package="Type1">kernAmount	"&lt;Integer&gt;	short: the kerning amount in font units, the value is mostly negative"	^kernAmount</body><body package="Type1">second	"&lt;Integer&gt;	BYTE: the second (right) character of the kerning pair"	^second</body></methods><methods><class-id>Graphics.Fonts.PairKern</class-id> <category>printing</category><body package="Type1">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'first' value: self first).	args add: (printer constant: 'second' value: self second).	args add: (printer constant: 'kernAmount' value: self kernAmount).	^printer printvalue: self arguments: args</body></methods><methods><class-id>Graphics.Fonts.PairKern</class-id> <category>converting</category><body package="Type1">asBytes	"&lt;ByteArray[4]&gt;	ByteArray suited to be written to a PFM file"	| wst |	wst := ByteWriteStream littleEndianOn: (ByteArray new: 4).	wst		nextPut: self first;		nextPut: self second;		nextPutShort: self kernAmount.	^wst contents</body></methods><methods><class-id>Graphics.Fonts.PairKern class</class-id> <category>instance creation</category><body package="Type1">first: firstInteger second: secondInteger kernAmount: kernAmountInteger	| inst |	inst := self new.	inst initializeFirst: firstInteger second: secondInteger kernAmount: kernAmountInteger.	^inst</body><body package="Type1">fromBytes: aByteArray4	| rst |	rst := ByteReadStream littleEndianOn: aByteArray4.	^self first: rst next second: rst next kernAmount: rst nextShort</body><body package="Type1">readKernPairs: numberOfKernPairs from: byteReadstream at: kernTableOffset	"&lt;SequenceableCollection of: PairKern&gt;"	| kernPairs |	numberOfKernPairs isZero ifTrue: [		^#()].	byteReadstream position: kernTableOffset.	kernPairs := (UninterpretedBytes from: (byteReadstream next: 2))		unsignedShortAt: 1		bigEndian: false.	numberOfKernPairs = kernPairs ifFalse: [		self error: 'the number of kerning pairs is not correct'].	^(1 to: numberOfKernPairs) collect: [:i | self fromBytes: (byteReadstream next: 4)]</body><body package="Type1">tableFromBytes: aByteArray	"&lt;SequenceableCollection of: PairKern&gt;"	| rst numberOfKernPairs |	rst := aByteArray readStream.	numberOfKernPairs := (UninterpretedBytes from: (rst next: 2)) unsignedShortAt: 1 bigEndian: false.	^(1 to: numberOfKernPairs) collect: [:i | self fromBytes: (rst next: 4)]</body></methods><methods><class-id>Graphics.Fonts.PairKern class</class-id> <category>test instances</category><body package="Fonts test resources">example	^PairKern first: 65 second: 28 kernAmount: -6</body><body package="Fonts test resources">exampleBytes	^self exampleBytesTazLT4SemiLight</body><body package="Fonts test resources">exampleBytesTazLT4SemiLight	^#[65 28 250 255]</body></methods><methods><class-id>Graphics.Fonts.PostScriptFontMetrics</class-id> <category>accessing</category><body package="Type1">ascender	^self extTextMetrics lcAscent</body><body package="Type1">descender	^self extTextMetrics lcDescent negated</body><body package="Type1">driverInfo	"&lt;String&gt;	additional informations for the printer driver like the name of the font, sequences necessary for selecting the font etc. "	^driverInfo</body><body package="Type1">extTextMetrics	"&lt;ExtTextMetrics&gt;	This section (52 Bytes) contains additional informations about the font (orientation, minimum and maximum acceptable size of the font, the cap height, the degree of obliqueness for italic fonts etc.)"	^extTextMetrics</body><body package="Type1">extentTable	"&lt;Array&gt;	the character widths for scalable fonts"	^extentTable ifNil: [#()]</body><body package="Type1">faceName	"&lt;String&gt;	the name of the font face, normally without suffixes like »-Bold«, »-Italic« etc.	Used in a windows LOGFONT"	^faceName</body><body package="Type1">font	"&lt;Type1.Font&gt;	back pointer to containing font object"	^font</body><body package="Type1">font: aFont	font := aFont</body><body package="Type1">header	"&lt;PFMHeader&gt;	The header (117 Bytes) with basic information"	^header</body><body package="Type1">kerningPairs	"&lt;Array&gt;	kerning pairs together with the kerning amount for every pair"	^kerningPairs ifNil: [#()]</body><body package="Type1">kerningTracks	"&lt;Array&gt;	informations for globally font kerning according to the size the font is printed with"	^kerningTracks ifNil: [#()]</body><body package="Type1">postScriptName	"&lt;String&gt;	the name as used by PostScript and PDF"	^self driverInfo</body><body package="Type1">stemV	"&lt;Integer&gt;"	^self header stemV</body><body package="Type1">underlinePosition	^self extTextMetrics ulOffset negated</body><body package="Type1">underlineThickness	^self extTextMetrics ulWidth</body><body package="Type1">weight	"&lt;Integer&gt;	WORD: The weight of the font in the range 0 through 1000. For example, 400 is roman and 700 is bold. If this value is zero, a default weight is used"	^self header weight</body></methods><methods><class-id>Graphics.Fonts.PostScriptFontMetrics</class-id> <category>testing</category><body package="Type1">isFixedPitch	^self header isFixedPitch</body><body package="Type1">isItalic	^self header italic</body></methods><methods><class-id>Graphics.Fonts.PostScriptFontMetrics</class-id> <category>converting</category><body package="Type1">asBytes	"&lt;ByteArray&gt;	ByteArray suited to be written as a PFM file.	The order of elements follows the advice of Adobe in technical note 5178.PFM.pdf :		1. header (required)		2. extension (required)		3. extTextMetrics		4. deviceName (constant 'PostScript')		5. faceName		6. driverInfo (PostScript name)		7. extentTable		8. kerningPairs		(9. kerningTracks) - never seen - junk feature?	Therefore, the offsets 1 to 5 are fixed"	| extTextMetricsOffset deviceOffset sizeOfDeviceName faceOffset sizeOfFaceName driverInfoOffset sizeOfDriverInfo extentTableOffset sizeOfExtentTable kerningPairsOffset sizeOfKerningPairs kerningTracksOffset sizeOfKerningTracks fileSize wst |	extTextMetricsOffset := 117 + 30.	deviceOffset := extTextMetricsOffset + 52.	sizeOfDeviceName := self class deviceName size + 1.	faceOffset := deviceOffset + sizeOfDeviceName.	sizeOfFaceName := self faceName size + 1.	driverInfoOffset := faceOffset + sizeOfFaceName.	sizeOfDriverInfo := self driverInfo size + 1.	extentTableOffset := driverInfoOffset + sizeOfDriverInfo.	sizeOfExtentTable := self extentTable size * 2.	kerningPairsOffset := 0.	self kerningPairs notEmpty ifTrue: [		kerningPairsOffset := extentTableOffset + sizeOfExtentTable].	sizeOfKerningPairs := self sizeOfKerningPairs.	kerningTracksOffset := 0.	self kerningTracks notEmpty ifTrue: [		kerningTracksOffset := extentTableOffset + sizeOfExtentTable + sizeOfKerningPairs].	sizeOfKerningTracks := self kerningTracks size * 10.	fileSize := extentTableOffset + sizeOfExtentTable + sizeOfKerningPairs + sizeOfKerningTracks.	wst := ByteWriteStream littleEndianOn: (ByteArray new: fileSize).	wst		nextPutUnsignedShort: self class version;		nextPutUnsignedLong: fileSize;		nextPutAll: self header asBytes;		nextPutUnsignedLong: deviceOffset;		nextPutUnsignedLong: faceOffset;		nextPutUnsignedLong: 0;		nextPutUnsignedLong: 0;		nextPutUnsignedShort: 30;		nextPutUnsignedLong: extTextMetricsOffset;		nextPutUnsignedLong: extentTableOffset;		nextPutUnsignedLong: 0;		nextPutUnsignedLong: kerningPairsOffset;		nextPutUnsignedLong: kerningTracksOffset;		nextPutUnsignedLong: driverInfoOffset;		nextPutUnsignedLong: 0;		nextPutAll: self extTextMetrics asBytes;		nextPutUnsignedShort: self kerningPairs size;		nextPutUnsignedShort: self kerningTracks size;		nextPutString: self class deviceName;		nextPutString: self faceName;		nextPutString: self driverInfo.	self extentTable do: [:extent | wst nextPutUnsignedShort: extent].	self kerningPairs notEmpty ifTrue: [		wst nextPutUnsignedShort: self kerningPairs size.		self kerningPairs do: [:pairKern | wst nextPutAll: pairKern asBytes]].	self kerningTracks do: [:kernTrack | wst nextPutAll: kernTrack asBytes].	^wst contents</body><body package="Type1">sizeOfKerningPairs	"&lt;Integer&gt;	2 bytes added for the size header WORD"	| count |	count := self kerningPairs size.	count isZero ifTrue: [		^0].	^count * 4 + 2</body></methods><methods><class-id>Graphics.Fonts.PostScriptFontMetrics</class-id> <category>initialize-release</category><body package="Type1">initializeHeader: headerPFMHeader extTextMetrics: extTextMetricsExtTextMetrics faceName: faceNameString driverInfo: driverInfoString extentTable: extentTableArray kerningPairs: kerningPairsArray kerningTracks: kerningTracksArray	header := headerPFMHeader.	extTextMetrics := extTextMetricsExtTextMetrics.	faceName := faceNameString.	driverInfo := driverInfoString.	(extentTableArray notNil and: [	extentTableArray notEmpty]) ifTrue: [			extentTable := (Array withAll: extentTableArray) beImmutable].	(kerningPairsArray notNil and: [	kerningPairsArray notEmpty]) ifTrue: [			kerningPairs := (Array withAll: kerningPairsArray) beImmutable].	(kerningTracksArray notNil and: [	kerningTracksArray notEmpty]) ifTrue: [			kerningTracks := (Array withAll: kerningTracksArray) beImmutable].</body></methods><methods><class-id>Graphics.Fonts.PostScriptFontMetrics</class-id> <category>printing</category><body package="Type1">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'header' value: self header).	args add: (printer constant: 'extTextMetrics' value: self extTextMetrics).	args add: (printer constant: 'faceName' value: self faceName).	args add: (printer constant: 'driverInfo' value: self driverInfo).	args add: (printer array: 'extentTable' value: self extentTable).	args add: (printer array: 'kerningPairs' value: self kerningPairs).	args add: (printer array: 'kerningTracks' value: self kerningTracks).	^printer printvalue: self arguments: args</body></methods><methods><class-id>Graphics.Fonts.PostScriptFontMetrics</class-id> <category>comparing</category><body package="Type1">= aPostScriptFontMetrics	^self class == aPostScriptFontMetrics class and: [	self font = aPostScriptFontMetrics font and: [	self header = aPostScriptFontMetrics header and: [	self extTextMetrics = aPostScriptFontMetrics extTextMetrics and: [	self faceName = aPostScriptFontMetrics faceName and: [	self driverInfo = aPostScriptFontMetrics driverInfo and: [	self extentTable = aPostScriptFontMetrics extentTable and: [	self kerningPairs = aPostScriptFontMetrics kerningPairs and: [	self kerningTracks = aPostScriptFontMetrics kerningTracks]]]]]]]]</body><body package="Type1">hash	^self font hash bitXor: (self header hash bitXor: (self extTextMetrics hash bitXor: (self faceName hash bitXor: (self driverInfo hash bitXor: (self extentTable hash bitXor: (self kerningPairs hash bitXor: self kerningTracks))))))</body></methods><methods><class-id>Graphics.Fonts.PostScriptFontMetrics class</class-id> <category>instance creation</category><body package="Type1">fromBytes: aByteArray	| rst header deviceOffset faceOffset extMetricsOffset extentTableOffset pairKernTableOffset trackKernTableOffset driverInfoOffset extTextMetrics numberOfKernPairs numberOfKernTracks faceName driverInfo extentTable kerningPairs kerningTracks |	rst := ByteReadStream littleEndianOn: aByteArray.	"PFMHeader"	rst nextUnsignedShort = self version ifFalse: [		self error: 'version is not correct'].	rst nextUnsignedLong = aByteArray size ifFalse: [		self error: 'file size is not correct'].	header := PFMHeader fromBytes: (rst next: 95).	deviceOffset := rst nextUnsignedLong.	faceOffset := rst nextUnsignedLong.	rst next: 8.	"PFMExtension"	rst nextUnsignedShort = 30 ifFalse: [		self error: 'sizeFields is not correct'].	extMetricsOffset := rst nextUnsignedLong.	extentTableOffset := rst nextUnsignedLong.	rst nextUnsignedLong isZero ifFalse: [		self error: 'originTable is not correct'].	pairKernTableOffset := rst nextUnsignedLong.	trackKernTableOffset := rst nextUnsignedLong.	driverInfoOffset := rst nextUnsignedLong.	rst nextUnsignedLong isZero ifFalse: [		self error: 'reserved is not correct'].	rst position: extMetricsOffset.	extTextMetrics := ExtTextMetrics fromBytes: (rst next: 48).	numberOfKernPairs := rst nextUnsignedShort.	numberOfKernTracks := rst nextUnsignedShort.	rst position: deviceOffset.	rst nextString = self deviceName ifFalse: [		self error: 'deviceName is not correct'].	rst position: faceOffset.	faceName := rst nextString.	rst position: driverInfoOffset.	driverInfo := rst nextString.	rst position: extentTableOffset.	extentTable := (1 to: header numberOfCharacters) collect: [:i |		(UninterpretedBytes from: (rst next: 2)) unsignedShortAt: 1 bigEndian: false].	numberOfKernPairs isZero ifFalse: [		rst position: pairKernTableOffset.		kerningPairs := PairKern tableFromBytes: (rst next: numberOfKernPairs * 4 + 2).		numberOfKernPairs = kerningPairs size ifFalse: [			self error: 'the number of kerning pairs is not correct']].	numberOfKernTracks isZero ifFalse: [		rst position: trackKernTableOffset.		kerningTracks := (1 to: numberOfKernTracks) collect: [:i |			KernTrack fromBytes: (rst next: 10)]].	^self		header: header		extTextMetrics: extTextMetrics		faceName: faceName		driverInfo: driverInfo		extentTable: extentTable		kerningPairs: kerningPairs		kerningTracks: kerningTracks</body><body package="Type1">header: headerPFMHeader extTextMetrics: extTextMetricsExtTextMetrics faceName: faceNameString driverInfo: driverInfoString extentTable: extentTableArray kerningPairs: kerningPairsArray kerningTracks: kerningTracksArray	| inst |	inst := self new.	inst		initializeHeader: headerPFMHeader		extTextMetrics: extTextMetricsExtTextMetrics		faceName: faceNameString		driverInfo: driverInfoString		extentTable: extentTableArray		kerningPairs: kerningPairsArray		kerningTracks: kerningTracksArray.	^inst</body></methods><methods><class-id>Graphics.Fonts.PostScriptFontMetrics class</class-id> <category>instance creation optional</category><body package="Type1">header: headerPFMHeader extTextMetrics: extTextMetricsExtTextMetrics faceName: faceNameString driverInfo: driverInfoString	| inst |	inst := self new.	inst		initializeHeader: headerPFMHeader		extTextMetrics: extTextMetricsExtTextMetrics		faceName: faceNameString		driverInfo: driverInfoString		extentTable: nil		kerningPairs: nil		kerningTracks: nil.	^inst</body><body package="Type1">header: headerPFMHeader extTextMetrics: extTextMetricsExtTextMetrics faceName: faceNameString driverInfo: driverInfoString extentTable: extentTableArray	| inst |	inst := self new.	inst		initializeHeader: headerPFMHeader		extTextMetrics: extTextMetricsExtTextMetrics		faceName: faceNameString		driverInfo: driverInfoString		extentTable: extentTableArray		kerningPairs: nil		kerningTracks: nil.	^inst</body><body package="Type1">header: headerPFMHeader extTextMetrics: extTextMetricsExtTextMetrics faceName: faceNameString driverInfo: driverInfoString extentTable: extentTableArray kerningPairs: kerningPairsArray	| inst |	inst := self new.	inst		initializeHeader: headerPFMHeader		extTextMetrics: extTextMetricsExtTextMetrics		faceName: faceNameString		driverInfo: driverInfoString		extentTable: extentTableArray		kerningPairs: kerningPairsArray		kerningTracks: nil.	^inst</body><body package="Type1">header: headerPFMHeader extTextMetrics: extTextMetricsExtTextMetrics faceName: faceNameString driverInfo: driverInfoString extentTable: extentTableArray kerningTracks: kerningTracksArray	| inst |	inst := self new.	inst		initializeHeader: headerPFMHeader		extTextMetrics: extTextMetricsExtTextMetrics		faceName: faceNameString		driverInfo: driverInfoString		extentTable: extentTableArray		kerningPairs: nil		kerningTracks: kerningTracksArray.	^inst</body><body package="Type1">header: headerPFMHeader extTextMetrics: extTextMetricsExtTextMetrics faceName: faceNameString driverInfo: driverInfoString kerningPairs: kerningPairsArray	| inst |	inst := self new.	inst		initializeHeader: headerPFMHeader		extTextMetrics: extTextMetricsExtTextMetrics		faceName: faceNameString		driverInfo: driverInfoString		extentTable: nil		kerningPairs: kerningPairsArray		kerningTracks: nil.	^inst</body><body package="Type1">header: headerPFMHeader extTextMetrics: extTextMetricsExtTextMetrics faceName: faceNameString driverInfo: driverInfoString kerningPairs: kerningPairsArray kerningTracks: kerningTracksArray	| inst |	inst := self new.	inst		initializeHeader: headerPFMHeader		extTextMetrics: extTextMetricsExtTextMetrics		faceName: faceNameString		driverInfo: driverInfoString		extentTable: nil		kerningPairs: kerningPairsArray		kerningTracks: kerningTracksArray.	^inst</body><body package="Type1">header: headerPFMHeader extTextMetrics: extTextMetricsExtTextMetrics faceName: faceNameString driverInfo: driverInfoString kerningTracks: kerningTracksArray	| inst |	inst := self new.	inst		initializeHeader: headerPFMHeader		extTextMetrics: extTextMetricsExtTextMetrics		faceName: faceNameString		driverInfo: driverInfoString		extentTable: nil		kerningPairs: nil		kerningTracks: kerningTracksArray.	^inst</body></methods><methods><class-id>Graphics.Fonts.PostScriptFontMetrics class</class-id> <category>accessing</category><body package="Fonts Development">allInstalledPFMs	"&lt;SequenceableCollection of: PostScriptFontMetrics&gt;"	"self allInstalledPFMs"	| fontsDir |	fontsDir := 'c:\windows\fonts' asFilename.	^(fontsDir directoryContents select: [:f | '*.PFM' match: f asUppercase]) collect: [:f |		self fromBytes: (fontsDir construct: f) contentsOfEntireBinaryFile]</body><body package="Type1">deviceName	"&lt;String&gt;	the name of the printer driver family"	^'PostScript'</body><body package="Type1">version	"&lt;Integer&gt;	WORD	the version of the PFM file. For PFM files that conform to this description (namely PFM files for Type-1 fonts) the value is always 0x0100"	^16r0100</body></methods><methods><class-id>Graphics.Fonts.PostScriptFontMetrics class</class-id> <category>test instances</category><body package="Fonts test resources">example	^PostScriptFontMetrics		header: (PFMHeader			copyright: 'Copyright 1997, 1999, 2002, 2006 by Luc[as] de Groot. All   '			ascent: 864			internalLeading: 62			externalLeading: 0			italic: false			underline: false			strikeOut: false			weight: 400			charSet: 0			pixHeight: 1062			pitchAndFamily: 33			avgWidth: 382			maxWidth: 1025			firstChar: 5			lastChar: 255			defaultChar: 27			breakChar: 0)		extTextMetrics: (ExtTextMetrics			capHeight: 800			xHeight: 500			lcAscent: 700			lcDescent: 200			slant: 0			superScript: 700			subScript: -100			superScriptSize: 100			subScriptSize: 100			ulOffset: 177			ulWidth: 38			dblUpperUlOffset: 50			dblLowerUlOffset: 100			dblUpperUlWidth: 25			dblLowerUlWidth: 25			soOffset: 231			soWidth: 38)		faceName: 'Taz LT4 SemiLight'		driverInfo: 'Taz-LT4SemiLight'		extentTable: #(400 219 382 400 382 400 400 400 218 382 382 382 382 382 382 382 382 382 382 382 263 482 482 369 240 450 343 214 290 440 607 443 688 747 246 322 322 445 550 264 258 256 410 520 520 520 520 520 520 520 520 520 520 310 311 550 550 550 425 951 517 509 482 574 429 409 542 594 233 326 459 358 757 592 621 501 621 516 458 418 588 514 787 506 465 450 363 410 363 550 500 352 479 488 374 489 467 265 488 499 218 218 416 218 773 499 501 488 488 307 359 295 499 401 654 430 394 343 400 231 400 550 382 550 382 264 442 458 691 500 500 400 1019 458 331 740 382 382 382 382 253 253 445 445 550 500 1000 400 623 359 331 798 382 382 465 214 290 420 500 550 550 285 550 400 787 381 519 550 550 605 400 464 550 442 438 400 550 560 175 380 310 378 519 678 688 683 425 517 517 517 517 517 517 658 482 429 429 429 429 233 233 233 233 584 592 621 621 621 621 621 550 628 588 588 588 588 465 501 487 479 479 479 479 479 479 753 374 467 467 467 467 218 218 218 218 473 499 501 501 501 501 501 550 506 499 499 499 499 394 488 394)		kerningPairs: ((OrderedCollection new: 698)			add: (PairKern first: 65 second: 28 kernAmount: -6);			add: (PairKern first: 67 second: 28 kernAmount: -5);			add: (PairKern first: 90 second: 28 kernAmount: -10);			add: (PairKern first: 65 second: 29 kernAmount: -10);			add: (PairKern first: 90 second: 29 kernAmount: -10);			add: (PairKern first: 132 second: 29 kernAmount: -20);			add: (PairKern first: 89 second: 31 kernAmount: -28);			add: (PairKern first: 102 second: 33 kernAmount: 10);			add: (PairKern first: 44 second: 34 kernAmount: -38);			add: (PairKern first: 46 second: 34 kernAmount: -48);			add: (PairKern first: 65 second: 34 kernAmount: -45);			add: (PairKern first: 65 second: 42 kernAmount: -56);			add: (PairKern first: 29 second: 44 kernAmount: -30);			add: (PairKern first: 45 second: 44 kernAmount: -44);			add: (PairKern first: 66 second: 44 kernAmount: -24);			add: (PairKern first: 68 second: 44 kernAmount: -59);			add: (PairKern first: 70 second: 44 kernAmount: -86);			add: (PairKern first: 74 second: 44 kernAmount: -55);			add: (PairKern first: 79 second: 44 kernAmount: -45);			add: (PairKern first: 80 second: 44 kernAmount: -147);			add: (PairKern first: 84 second: 44 kernAmount: -89);			add: (PairKern first: 85 second: 44 kernAmount: -48);			add: (PairKern first: 86 second: 44 kernAmount: -95);			add: (PairKern first: 87 second: 44 kernAmount: -62);			add: (PairKern first: 89 second: 44 kernAmount: -119);			add: (PairKern first: 98 second: 44 kernAmount: -20);			add: (PairKern first: 101 second: 44 kernAmount: -26);			add: (PairKern first: 102 second: 44 kernAmount: -55);			add: (PairKern first: 111 second: 44 kernAmount: -42);			add: (PairKern first: 114 second: 44 kernAmount: -95);			add: (PairKern first: 115 second: 44 kernAmount: -27);			add: (PairKern first: 118 second: 44 kernAmount: -87);			add: (PairKern first: 119 second: 44 kernAmount: -75);			add: (PairKern first: 121 second: 44 kernAmount: -77);			add: (PairKern first: 147 second: 44 kernAmount: -118);			add: (PairKern first: 148 second: 44 kernAmount: -127);			add: (PairKern first: 28 second: 45 kernAmount: -50);			add: (PairKern first: 44 second: 45 kernAmount: -50);			add: (PairKern first: 46 second: 45 kernAmount: -65);			add: (PairKern first: 65 second: 45 kernAmount: -17);			add: (PairKern first: 67 second: 45 kernAmount: -65);			add: (PairKern first: 69 second: 45 kernAmount: -8);			add: (PairKern first: 70 second: 45 kernAmount: -8);			add: (PairKern first: 75 second: 45 kernAmount: -59);			add: (PairKern first: 76 second: 45 kernAmount: -50);			add: (PairKern first: 82 second: 45 kernAmount: -45);			add: (PairKern first: 84 second: 45 kernAmount: -46);			add: (PairKern first: 86 second: 45 kernAmount: -30);			add: (PairKern first: 87 second: 45 kernAmount: -22);			add: (PairKern first: 88 second: 45 kernAmount: -38);			add: (PairKern first: 89 second: 45 kernAmount: -84);			add: (PairKern first: 90 second: 45 kernAmount: -56);			add: (PairKern first: 99 second: 45 kernAmount: -28);			add: (PairKern first: 102 second: 45 kernAmount: -35);			add: (PairKern first: 107 second: 45 kernAmount: -45);			add: (PairKern first: 114 second: 45 kernAmount: -27);			add: (PairKern first: 115 second: 45 kernAmount: -11);			add: (PairKern first: 116 second: 45 kernAmount: -25);			add: (PairKern first: 118 second: 45 kernAmount: -7);			add: (PairKern first: 119 second: 45 kernAmount: -7);			add: (PairKern first: 120 second: 45 kernAmount: -31);			add: (PairKern first: 121 second: 45 kernAmount: -5);			add: (PairKern first: 122 second: 45 kernAmount: -26);			add: (PairKern first: 29 second: 46 kernAmount: -20);			add: (PairKern first: 45 second: 46 kernAmount: -30);			add: (PairKern first: 66 second: 46 kernAmount: -20);			add: (PairKern first: 68 second: 46 kernAmount: -47);			add: (PairKern first: 70 second: 46 kernAmount: -79);			add: (PairKern first: 74 second: 46 kernAmount: -53);			add: (PairKern first: 79 second: 46 kernAmount: -33);			add: (PairKern first: 80 second: 46 kernAmount: -132);			add: (PairKern first: 83 second: 46 kernAmount: -7);			add: (PairKern first: 84 second: 46 kernAmount: -91);			add: (PairKern first: 85 second: 46 kernAmount: -40);			add: (PairKern first: 86 second: 46 kernAmount: -94);			add: (PairKern first: 87 second: 46 kernAmount: -59);			add: (PairKern first: 89 second: 46 kernAmount: -109);			add: (PairKern first: 101 second: 46 kernAmount: -23);			add: (PairKern first: 102 second: 46 kernAmount: -50);			add: (PairKern first: 111 second: 46 kernAmount: -36);			add: (PairKern first: 114 second: 46 kernAmount: -85);			add: (PairKern first: 115 second: 46 kernAmount: -20);			add: (PairKern first: 118 second: 46 kernAmount: -78);			add: (PairKern first: 119 second: 46 kernAmount: -67);			add: (PairKern first: 121 second: 46 kernAmount: -67);			add: (PairKern first: 147 second: 46 kernAmount: -118);			add: (PairKern first: 148 second: 46 kernAmount: -127);			add: (PairKern first: 47 second: 47 kernAmount: -134);			add: (PairKern first: 70 second: 47 kernAmount: -61);			add: (PairKern first: 74 second: 47 kernAmount: -24);			add: (PairKern first: 80 second: 47 kernAmount: -81);			add: (PairKern first: 83 second: 47 kernAmount: -11);			add: (PairKern first: 84 second: 47 kernAmount: -67);			add: (PairKern first: 85 second: 47 kernAmount: -31);			add: (PairKern first: 86 second: 47 kernAmount: -68);			add: (PairKern first: 87 second: 47 kernAmount: -45);			add: (PairKern first: 89 second: 47 kernAmount: -69);			add: (PairKern first: 102 second: 47 kernAmount: -34);			add: (PairKern first: 114 second: 47 kernAmount: -25);			add: (PairKern first: 118 second: 47 kernAmount: -23);			add: (PairKern first: 119 second: 47 kernAmount: -15);			add: (PairKern first: 84 second: 58 kernAmount: -30);			add: (PairKern first: 86 second: 58 kernAmount: -25);			add: (PairKern first: 87 second: 58 kernAmount: -15);			add: (PairKern first: 89 second: 58 kernAmount: -44);			add: (PairKern first: 65 second: 63 kernAmount: -20);			add: (PairKern first: 84 second: 63 kernAmount: 16);			add: (PairKern first: 102 second: 63 kernAmount: 10);			add: (PairKern first: 45 second: 65 kernAmount: -17);			add: (PairKern first: 47 second: 65 kernAmount: -61);			add: (PairKern first: 66 second: 65 kernAmount: -25);			add: (PairKern first: 67 second: 65 kernAmount: -13);			add: (PairKern first: 68 second: 65 kernAmount: -30);			add: (PairKern first: 69 second: 65 kernAmount: -6);			add: (PairKern first: 70 second: 65 kernAmount: -62);			add: (PairKern first: 71 second: 65 kernAmount: -20);			add: (PairKern first: 74 second: 65 kernAmount: -29);			add: (PairKern first: 75 second: 65 kernAmount: -10);			add: (PairKern first: 79 second: 65 kernAmount: -24);			add: (PairKern first: 80 second: 65 kernAmount: -61);			add: (PairKern first: 82 second: 65 kernAmount: -34);			add: (PairKern first: 83 second: 65 kernAmount: -10);			add: (PairKern first: 84 second: 65 kernAmount: -71);			add: (PairKern first: 85 second: 65 kernAmount: -27);			add: (PairKern first: 86 second: 65 kernAmount: -65);			add: (PairKern first: 87 second: 65 kernAmount: -48);			add: (PairKern first: 88 second: 65 kernAmount: -15);			add: (PairKern first: 89 second: 65 kernAmount: -87);			add: (PairKern first: 90 second: 65 kernAmount: -26);			add: (PairKern first: 147 second: 65 kernAmount: -78);			add: (PairKern first: 148 second: 65 kernAmount: -90);			add: (PairKern first: 28 second: 74 kernAmount: 18);			add: (PairKern first: 45 second: 74 kernAmount: -37);			add: (PairKern first: 47 second: 74 kernAmount: -27);			add: (PairKern first: 65 second: 74 kernAmount: 4);			add: (PairKern first: 66 second: 74 kernAmount: -14);			add: (PairKern first: 68 second: 74 kernAmount: -22);			add: (PairKern first: 70 second: 74 kernAmount: -53);			add: (PairKern first: 74 second: 74 kernAmount: -14);			add: (PairKern first: 76 second: 74 kernAmount: 18);			add: (PairKern first: 79 second: 74 kernAmount: -29);			add: (PairKern first: 80 second: 74 kernAmount: -61);			add: (PairKern first: 84 second: 74 kernAmount: -42);			add: (PairKern first: 85 second: 74 kernAmount: -17);			add: (PairKern first: 86 second: 74 kernAmount: -68);			add: (PairKern first: 87 second: 74 kernAmount: -45);			add: (PairKern first: 89 second: 74 kernAmount: -67);			add: (PairKern first: 147 second: 74 kernAmount: -78);			add: (PairKern first: 148 second: 74 kernAmount: -85);			add: (PairKern first: 84 second: 77 kernAmount: -8);			add: (PairKern first: 86 second: 77 kernAmount: -8);			add: (PairKern first: 89 second: 77 kernAmount: -26);			add: (PairKern first: 148 second: 77 kernAmount: -18);			add: (PairKern first: 28 second: 79 kernAmount: -25);			add: (PairKern first: 46 second: 79 kernAmount: -27);			add: (PairKern first: 47 second: 79 kernAmount: -27);			add: (PairKern first: 65 second: 79 kernAmount: -23);			add: (PairKern first: 67 second: 79 kernAmount: -24);			add: (PairKern first: 69 second: 79 kernAmount: -4);			add: (PairKern first: 75 second: 79 kernAmount: -35);			add: (PairKern first: 76 second: 79 kernAmount: -31);			add: (PairKern first: 82 second: 79 kernAmount: -26);			add: (PairKern first: 83 second: 79 kernAmount: -7);			add: (PairKern first: 84 second: 79 kernAmount: -37);			add: (PairKern first: 86 second: 79 kernAmount: -26);			add: (PairKern first: 87 second: 79 kernAmount: -12);			add: (PairKern first: 88 second: 79 kernAmount: -48);			add: (PairKern first: 89 second: 79 kernAmount: -49);			add: (PairKern first: 90 second: 79 kernAmount: -39);			add: (PairKern first: 132 second: 79 kernAmount: -31);			add: (PairKern first: 147 second: 79 kernAmount: -34);			add: (PairKern first: 148 second: 79 kernAmount: -49);			add: (PairKern first: 191 second: 79 kernAmount: -17);			add: (PairKern first: 28 second: 83 kernAmount: -17);			add: (PairKern first: 45 second: 83 kernAmount: -24);			add: (PairKern first: 65 second: 83 kernAmount: -22);			add: (PairKern first: 66 second: 83 kernAmount: -7);			add: (PairKern first: 67 second: 83 kernAmount: -12);			add: (PairKern first: 69 second: 83 kernAmount: -4);			add: (PairKern first: 70 second: 83 kernAmount: -11);			add: (PairKern first: 75 second: 83 kernAmount: -15);			add: (PairKern first: 76 second: 83 kernAmount: -17);			add: (PairKern first: 79 second: 83 kernAmount: -14);			add: (PairKern first: 84 second: 83 kernAmount: -11);			add: (PairKern first: 86 second: 83 kernAmount: -15);			add: (PairKern first: 87 second: 83 kernAmount: -3);			add: (PairKern first: 88 second: 83 kernAmount: -21);			add: (PairKern first: 89 second: 83 kernAmount: -27);			add: (PairKern first: 90 second: 83 kernAmount: -16);			add: (PairKern first: 132 second: 83 kernAmount: -12);			add: (PairKern first: 147 second: 83 kernAmount: -15);			add: (PairKern first: 148 second: 83 kernAmount: -20);			add: (PairKern first: 191 second: 83 kernAmount: -9);			add: (PairKern first: 28 second: 84 kernAmount: -62);			add: (PairKern first: 44 second: 84 kernAmount: -43);			add: (PairKern first: 45 second: 84 kernAmount: -34);			add: (PairKern first: 46 second: 84 kernAmount: -47);			add: (PairKern first: 47 second: 84 kernAmount: 20);			add: (PairKern first: 65 second: 84 kernAmount: -62);			add: (PairKern first: 66 second: 84 kernAmount: -21);			add: (PairKern first: 68 second: 84 kernAmount: -34);			add: (PairKern first: 71 second: 84 kernAmount: -12);			add: (PairKern first: 76 second: 84 kernAmount: -69);			add: (PairKern first: 77 second: 84 kernAmount: -13);			add: (PairKern first: 79 second: 84 kernAmount: -24);			add: (PairKern first: 81 second: 84 kernAmount: -17);			add: (PairKern first: 84 second: 84 kernAmount: 6);			add: (PairKern first: 102 second: 84 kernAmount: 28);			add: (PairKern first: 132 second: 84 kernAmount: -79);			add: (PairKern first: 147 second: 84 kernAmount: 19);			add: (PairKern first: 148 second: 84 kernAmount: 20);			add: (PairKern first: 171 second: 84 kernAmount: -30);			add: (PairKern first: 187 second: 84 kernAmount: -26);			add: (PairKern first: 191 second: 84 kernAmount: -34);			add: (PairKern first: 28 second: 85 kernAmount: -20);			add: (PairKern first: 46 second: 85 kernAmount: -28);			add: (PairKern first: 65 second: 85 kernAmount: -24);			add: (PairKern first: 75 second: 85 kernAmount: -13);			add: (PairKern first: 76 second: 85 kernAmount: -20);			add: (PairKern first: 82 second: 85 kernAmount: -14);			add: (PairKern first: 88 second: 85 kernAmount: -18);			add: (PairKern first: 132 second: 85 kernAmount: -25);			add: (PairKern first: 28 second: 86 kernAmount: -61);			add: (PairKern first: 44 second: 86 kernAmount: -53);			add: (PairKern first: 45 second: 86 kernAmount: -23);			add: (PairKern first: 46 second: 86 kernAmount: -59);			add: (PairKern first: 47 second: 86 kernAmount: 20);			add: (PairKern first: 65 second: 86 kernAmount: -60);			add: (PairKern first: 66 second: 86 kernAmount: -19);			add: (PairKern first: 68 second: 86 kernAmount: -21);			add: (PairKern first: 71 second: 86 kernAmount: -16);			add: (PairKern first: 75 second: 86 kernAmount: -13);			add: (PairKern first: 76 second: 86 kernAmount: -70);			add: (PairKern first: 77 second: 86 kernAmount: -13);			add: (PairKern first: 79 second: 86 kernAmount: -15);			add: (PairKern first: 80 second: 86 kernAmount: -6);			add: (PairKern first: 81 second: 86 kernAmount: -9);			add: (PairKern first: 82 second: 86 kernAmount: -15);			add: (PairKern first: 83 second: 86 kernAmount: -19);			add: (PairKern first: 88 second: 86 kernAmount: -24);			add: (PairKern first: 90 second: 86 kernAmount: -11);			add: (PairKern first: 102 second: 86 kernAmount: 12);			add: (PairKern first: 132 second: 86 kernAmount: -91);			add: (PairKern first: 171 second: 86 kernAmount: -12);			add: (PairKern first: 187 second: 86 kernAmount: -10);			add: (PairKern first: 191 second: 86 kernAmount: -28);			add: (PairKern first: 28 second: 87 kernAmount: -48);			add: (PairKern first: 44 second: 87 kernAmount: -30);			add: (PairKern first: 45 second: 87 kernAmount: -4);			add: (PairKern first: 46 second: 87 kernAmount: -45);			add: (PairKern first: 47 second: 87 kernAmount: 20);			add: (PairKern first: 65 second: 87 kernAmount: -37);			add: (PairKern first: 66 second: 87 kernAmount: -4);			add: (PairKern first: 68 second: 87 kernAmount: -7);			add: (PairKern first: 71 second: 87 kernAmount: -5);			add: (PairKern first: 76 second: 87 kernAmount: -49);			add: (PairKern first: 79 second: 87 kernAmount: -8);			add: (PairKern first: 82 second: 87 kernAmount: -3);			add: (PairKern first: 90 second: 87 kernAmount: -6);			add: (PairKern first: 102 second: 87 kernAmount: 10);			add: (PairKern first: 132 second: 87 kernAmount: -50);			add: (PairKern first: 191 second: 87 kernAmount: -25);			add: (PairKern first: 28 second: 88 kernAmount: -15);			add: (PairKern first: 45 second: 88 kernAmount: -35);			add: (PairKern first: 65 second: 88 kernAmount: -13);			add: (PairKern first: 66 second: 88 kernAmount: -37);			add: (PairKern first: 67 second: 88 kernAmount: -10);			add: (PairKern first: 68 second: 88 kernAmount: -38);			add: (PairKern first: 70 second: 88 kernAmount: -29);			add: (PairKern first: 71 second: 88 kernAmount: -24);			add: (PairKern first: 74 second: 88 kernAmount: -17);			add: (PairKern first: 76 second: 88 kernAmount: -14);			add: (PairKern first: 79 second: 88 kernAmount: -53);			add: (PairKern first: 80 second: 88 kernAmount: -48);			add: (PairKern first: 82 second: 88 kernAmount: -26);			add: (PairKern first: 83 second: 88 kernAmount: -19);			add: (PairKern first: 85 second: 88 kernAmount: -15);			add: (PairKern first: 86 second: 88 kernAmount: -6);			add: (PairKern first: 88 second: 88 kernAmount: -25);			add: (PairKern first: 89 second: 88 kernAmount: -24);			add: (PairKern first: 90 second: 88 kernAmount: -27);			add: (PairKern first: 28 second: 89 kernAmount: -71);			add: (PairKern first: 44 second: 89 kernAmount: -41);			add: (PairKern first: 45 second: 89 kernAmount: -47);			add: (PairKern first: 46 second: 89 kernAmount: -66);			add: (PairKern first: 47 second: 89 kernAmount: 20);			add: (PairKern first: 65 second: 89 kernAmount: -86);			add: (PairKern first: 66 second: 89 kernAmount: -40);			add: (PairKern first: 68 second: 89 kernAmount: -48);			add: (PairKern first: 71 second: 89 kernAmount: -23);			add: (PairKern first: 74 second: 89 kernAmount: -12);			add: (PairKern first: 75 second: 89 kernAmount: -10);			add: (PairKern first: 76 second: 89 kernAmount: -80);			add: (PairKern first: 77 second: 89 kernAmount: -32);			add: (PairKern first: 79 second: 89 kernAmount: -43);			add: (PairKern first: 80 second: 89 kernAmount: -16);			add: (PairKern first: 81 second: 89 kernAmount: -25);			add: (PairKern first: 82 second: 89 kernAmount: -31);			add: (PairKern first: 83 second: 89 kernAmount: -24);			add: (PairKern first: 88 second: 89 kernAmount: -34);			add: (PairKern first: 90 second: 89 kernAmount: -11);			add: (PairKern first: 132 second: 89 kernAmount: -108);			add: (PairKern first: 171 second: 89 kernAmount: -37);			add: (PairKern first: 187 second: 89 kernAmount: -37);			add: (PairKern first: 191 second: 89 kernAmount: -42);			add: (PairKern first: 28 second: 90 kernAmount: -17);			add: (PairKern first: 45 second: 90 kernAmount: -16);			add: (PairKern first: 65 second: 90 kernAmount: -14);			add: (PairKern first: 66 second: 90 kernAmount: -15);			add: (PairKern first: 68 second: 90 kernAmount: -31);			add: (PairKern first: 70 second: 90 kernAmount: -14);			add: (PairKern first: 71 second: 90 kernAmount: -14);			add: (PairKern first: 76 second: 90 kernAmount: -17);			add: (PairKern first: 79 second: 90 kernAmount: -28);			add: (PairKern first: 80 second: 90 kernAmount: -30);			add: (PairKern first: 82 second: 90 kernAmount: -21);			add: (PairKern first: 83 second: 90 kernAmount: -13);			add: (PairKern first: 86 second: 90 kernAmount: -9);			add: (PairKern first: 88 second: 90 kernAmount: -17);			add: (PairKern first: 89 second: 90 kernAmount: -10);			add: (PairKern first: 90 second: 90 kernAmount: -26);			add: (PairKern first: 67 second: 97 kernAmount: -8);			add: (PairKern first: 68 second: 97 kernAmount: -4);			add: (PairKern first: 70 second: 97 kernAmount: -28);			add: (PairKern first: 75 second: 97 kernAmount: -5);			add: (PairKern first: 80 second: 97 kernAmount: -13);			add: (PairKern first: 82 second: 97 kernAmount: -15);			add: (PairKern first: 84 second: 97 kernAmount: -75);			add: (PairKern first: 86 second: 97 kernAmount: -46);			add: (PairKern first: 87 second: 97 kernAmount: -24);			add: (PairKern first: 88 second: 97 kernAmount: -16);			add: (PairKern first: 89 second: 97 kernAmount: -68);			add: (PairKern first: 90 second: 97 kernAmount: -17);			add: (PairKern first: 98 second: 97 kernAmount: -7);			add: (PairKern first: 102 second: 97 kernAmount: -20);			add: (PairKern first: 107 second: 97 kernAmount: -12);			add: (PairKern first: 114 second: 97 kernAmount: -10);			add: (PairKern first: 118 second: 97 kernAmount: -9);			add: (PairKern first: 119 second: 97 kernAmount: -7);			add: (PairKern first: 120 second: 97 kernAmount: -12);			add: (PairKern first: 121 second: 97 kernAmount: -8);			add: (PairKern first: 122 second: 97 kernAmount: -5);			add: (PairKern first: 147 second: 97 kernAmount: -26);			add: (PairKern first: 148 second: 97 kernAmount: -42);			add: (PairKern first: 28 second: 100 kernAmount: -10);			add: (PairKern first: 29 second: 100 kernAmount: -10);			add: (PairKern first: 47 second: 100 kernAmount: -34);			add: (PairKern first: 65 second: 100 kernAmount: -4);			add: (PairKern first: 67 second: 100 kernAmount: -20);			add: (PairKern first: 70 second: 100 kernAmount: -21);			add: (PairKern first: 75 second: 100 kernAmount: -20);			add: (PairKern first: 76 second: 100 kernAmount: -10);			add: (PairKern first: 80 second: 100 kernAmount: -17);			add: (PairKern first: 82 second: 100 kernAmount: -39);			add: (PairKern first: 84 second: 100 kernAmount: -86);			add: (PairKern first: 86 second: 100 kernAmount: -48);			add: (PairKern first: 87 second: 100 kernAmount: -25);			add: (PairKern first: 88 second: 100 kernAmount: -40);			add: (PairKern first: 89 second: 100 kernAmount: -90);			add: (PairKern first: 90 second: 100 kernAmount: -43);			add: (PairKern first: 99 second: 100 kernAmount: -11);			add: (PairKern first: 102 second: 100 kernAmount: -28);			add: (PairKern first: 107 second: 100 kernAmount: -38);			add: (PairKern first: 114 second: 100 kernAmount: -25);			add: (PairKern first: 115 second: 100 kernAmount: -10);			add: (PairKern first: 116 second: 100 kernAmount: -24);			add: (PairKern first: 118 second: 100 kernAmount: -13);			add: (PairKern first: 119 second: 100 kernAmount: -12);			add: (PairKern first: 120 second: 100 kernAmount: -29);			add: (PairKern first: 121 second: 100 kernAmount: -11);			add: (PairKern first: 122 second: 100 kernAmount: -19);			add: (PairKern first: 132 second: 100 kernAmount: -17);			add: (PairKern first: 147 second: 100 kernAmount: -57);			add: (PairKern first: 148 second: 100 kernAmount: -71);			add: (PairKern first: 223 second: 100 kernAmount: -4);			add: (PairKern first: 29 second: 102 kernAmount: 16);			add: (PairKern first: 80 second: 102 kernAmount: 5);			add: (PairKern first: 88 second: 102 kernAmount: -12);			add: (PairKern first: 89 second: 102 kernAmount: -13);			add: (PairKern first: 114 second: 102 kernAmount: 15);			add: (PairKern first: 115 second: 102 kernAmount: -7);			add: (PairKern first: 132 second: 102 kernAmount: -20);			add: (PairKern first: 148 second: 102 kernAmount: -10);			add: (PairKern first: 223 second: 102 kernAmount: -7);			add: (PairKern first: 84 second: 109 kernAmount: -53);			add: (PairKern first: 86 second: 109 kernAmount: -21);			add: (PairKern first: 87 second: 109 kernAmount: -6);			add: (PairKern first: 88 second: 109 kernAmount: -22);			add: (PairKern first: 89 second: 109 kernAmount: -44);			add: (PairKern first: 90 second: 109 kernAmount: -20);			add: (PairKern first: 148 second: 109 kernAmount: -12);			add: (PairKern first: 28 second: 111 kernAmount: -10);			add: (PairKern first: 29 second: 111 kernAmount: -11);			add: (PairKern first: 47 second: 111 kernAmount: -34);			add: (PairKern first: 65 second: 111 kernAmount: -5);			add: (PairKern first: 67 second: 111 kernAmount: -21);			add: (PairKern first: 70 second: 111 kernAmount: -21);			add: (PairKern first: 75 second: 111 kernAmount: -20);			add: (PairKern first: 76 second: 111 kernAmount: -11);			add: (PairKern first: 80 second: 111 kernAmount: -17);			add: (PairKern first: 82 second: 111 kernAmount: -42);			add: (PairKern first: 84 second: 111 kernAmount: -86);			add: (PairKern first: 86 second: 111 kernAmount: -48);			add: (PairKern first: 87 second: 111 kernAmount: -26);			add: (PairKern first: 88 second: 111 kernAmount: -40);			add: (PairKern first: 89 second: 111 kernAmount: -88);			add: (PairKern first: 90 second: 111 kernAmount: -43);			add: (PairKern first: 99 second: 111 kernAmount: -12);			add: (PairKern first: 102 second: 111 kernAmount: -29);			add: (PairKern first: 107 second: 111 kernAmount: -39);			add: (PairKern first: 114 second: 111 kernAmount: -25);			add: (PairKern first: 115 second: 111 kernAmount: -10);			add: (PairKern first: 116 second: 111 kernAmount: -24);			add: (PairKern first: 118 second: 111 kernAmount: -14);			add: (PairKern first: 119 second: 111 kernAmount: -12);			add: (PairKern first: 120 second: 111 kernAmount: -29);			add: (PairKern first: 121 second: 111 kernAmount: -11);			add: (PairKern first: 122 second: 111 kernAmount: -19);			add: (PairKern first: 132 second: 111 kernAmount: -17);			add: (PairKern first: 147 second: 111 kernAmount: -55);			add: (PairKern first: 148 second: 111 kernAmount: -71);			add: (PairKern first: 223 second: 111 kernAmount: -4);			add: (PairKern first: 75 second: 115 kernAmount: -7);			add: (PairKern first: 84 second: 115 kernAmount: -65);			add: (PairKern first: 86 second: 115 kernAmount: -20);			add: (PairKern first: 87 second: 115 kernAmount: -6);			add: (PairKern first: 89 second: 115 kernAmount: -61);			add: (PairKern first: 90 second: 115 kernAmount: -11);			add: (PairKern first: 107 second: 115 kernAmount: -7);			add: (PairKern first: 115 second: 115 kernAmount: -10);			add: (PairKern first: 120 second: 115 kernAmount: -8);			add: (PairKern first: 132 second: 115 kernAmount: -6);			add: (PairKern first: 147 second: 115 kernAmount: -28);			add: (PairKern first: 148 second: 115 kernAmount: -38);			add: (PairKern first: 28 second: 116 kernAmount: -15);			add: (PairKern first: 29 second: 116 kernAmount: 14);			add: (PairKern first: 46 second: 116 kernAmount: -15);			add: (PairKern first: 65 second: 116 kernAmount: -19);			add: (PairKern first: 67 second: 116 kernAmount: -4);			add: (PairKern first: 76 second: 116 kernAmount: -14);			add: (PairKern first: 80 second: 116 kernAmount: 5);			add: (PairKern first: 88 second: 116 kernAmount: -23);			add: (PairKern first: 89 second: 116 kernAmount: -11);			add: (PairKern first: 90 second: 116 kernAmount: -16);			add: (PairKern first: 98 second: 116 kernAmount: -6);			add: (PairKern first: 101 second: 116 kernAmount: -6);			add: (PairKern first: 104 second: 116 kernAmount: -6);			add: (PairKern first: 114 second: 116 kernAmount: 13);			add: (PairKern first: 115 second: 116 kernAmount: -11);			add: (PairKern first: 118 second: 116 kernAmount: 8);			add: (PairKern first: 119 second: 116 kernAmount: 5);			add: (PairKern first: 121 second: 116 kernAmount: 9);			add: (PairKern first: 132 second: 116 kernAmount: -16);			add: (PairKern first: 223 second: 116 kernAmount: -10);			add: (PairKern first: 28 second: 117 kernAmount: -17);			add: (PairKern first: 65 second: 117 kernAmount: -8);			add: (PairKern first: 67 second: 117 kernAmount: -13);			add: (PairKern first: 70 second: 117 kernAmount: -8);			add: (PairKern first: 75 second: 117 kernAmount: -22);			add: (PairKern first: 76 second: 117 kernAmount: -15);			add: (PairKern first: 82 second: 117 kernAmount: -18);			add: (PairKern first: 84 second: 117 kernAmount: -56);			add: (PairKern first: 86 second: 117 kernAmount: -23);			add: (PairKern first: 87 second: 117 kernAmount: -4);			add: (PairKern first: 88 second: 117 kernAmount: -27);			add: (PairKern first: 89 second: 117 kernAmount: -50);			add: (PairKern first: 90 second: 117 kernAmount: -26);			add: (PairKern first: 102 second: 117 kernAmount: -6);			add: (PairKern first: 107 second: 117 kernAmount: -18);			add: (PairKern first: 122 second: 117 kernAmount: -17);			add: (PairKern first: 132 second: 117 kernAmount: -11);			add: (PairKern first: 147 second: 117 kernAmount: -20);			add: (PairKern first: 148 second: 117 kernAmount: -33);			add: (PairKern first: 28 second: 118 kernAmount: -41);			add: (PairKern first: 44 second: 118 kernAmount: -27);			add: (PairKern first: 46 second: 118 kernAmount: -37);			add: (PairKern first: 65 second: 118 kernAmount: -28);			add: (PairKern first: 67 second: 118 kernAmount: -35);			add: (PairKern first: 70 second: 118 kernAmount: -6);			add: (PairKern first: 71 second: 118 kernAmount: -19);			add: (PairKern first: 75 second: 118 kernAmount: -32);			add: (PairKern first: 76 second: 118 kernAmount: -44);			add: (PairKern first: 77 second: 118 kernAmount: -6);			add: (PairKern first: 83 second: 118 kernAmount: -15);			add: (PairKern first: 84 second: 118 kernAmount: -56);			add: (PairKern first: 88 second: 118 kernAmount: -50);			add: (PairKern first: 89 second: 118 kernAmount: -38);			add: (PairKern first: 90 second: 118 kernAmount: -47);			add: (PairKern first: 97 second: 118 kernAmount: -11);			add: (PairKern first: 98 second: 118 kernAmount: -10);			add: (PairKern first: 101 second: 118 kernAmount: -12);			add: (PairKern first: 104 second: 118 kernAmount: -16);			add: (PairKern first: 107 second: 118 kernAmount: -8);			add: (PairKern first: 111 second: 118 kernAmount: -12);			add: (PairKern first: 115 second: 118 kernAmount: -17);			add: (PairKern first: 120 second: 118 kernAmount: -4);			add: (PairKern first: 122 second: 118 kernAmount: -9);			add: (PairKern first: 132 second: 118 kernAmount: -52);			add: (PairKern first: 223 second: 118 kernAmount: -24);			add: (PairKern first: 28 second: 119 kernAmount: -40);			add: (PairKern first: 44 second: 119 kernAmount: -18);			add: (PairKern first: 46 second: 119 kernAmount: -32);			add: (PairKern first: 65 second: 119 kernAmount: -28);			add: (PairKern first: 66 second: 119 kernAmount: -10);			add: (PairKern first: 67 second: 119 kernAmount: -35);			add: (PairKern first: 71 second: 119 kernAmount: -20);			add: (PairKern first: 75 second: 119 kernAmount: -33);			add: (PairKern first: 76 second: 119 kernAmount: -34);			add: (PairKern first: 77 second: 119 kernAmount: -6);			add: (PairKern first: 82 second: 119 kernAmount: -7);			add: (PairKern first: 83 second: 119 kernAmount: -15);			add: (PairKern first: 84 second: 119 kernAmount: -62);			add: (PairKern first: 88 second: 119 kernAmount: -49);			add: (PairKern first: 89 second: 119 kernAmount: -35);			add: (PairKern first: 90 second: 119 kernAmount: -49);			add: (PairKern first: 97 second: 119 kernAmount: -12);			add: (PairKern first: 98 second: 119 kernAmount: -8);			add: (PairKern first: 101 second: 119 kernAmount: -11);			add: (PairKern first: 104 second: 119 kernAmount: -15);			add: (PairKern first: 111 second: 119 kernAmount: -10);			add: (PairKern first: 115 second: 119 kernAmount: -14);			add: (PairKern first: 132 second: 119 kernAmount: -46);			add: (PairKern first: 223 second: 119 kernAmount: -20);			add: (PairKern first: 45 second: 120 kernAmount: -13);			add: (PairKern first: 65 second: 120 kernAmount: -6);			add: (PairKern first: 66 second: 120 kernAmount: -10);			add: (PairKern first: 70 second: 120 kernAmount: -16);			add: (PairKern first: 74 second: 120 kernAmount: -11);			add: (PairKern first: 84 second: 120 kernAmount: -57);			add: (PairKern first: 86 second: 120 kernAmount: -18);			add: (PairKern first: 89 second: 120 kernAmount: -39);			add: (PairKern first: 97 second: 120 kernAmount: -14);			add: (PairKern first: 98 second: 120 kernAmount: -17);			add: (PairKern first: 101 second: 120 kernAmount: -23);			add: (PairKern first: 102 second: 120 kernAmount: -6);			add: (PairKern first: 104 second: 120 kernAmount: -18);			add: (PairKern first: 111 second: 120 kernAmount: -31);			add: (PairKern first: 115 second: 120 kernAmount: -16);			add: (PairKern first: 223 second: 120 kernAmount: -14);			add: (PairKern first: 28 second: 121 kernAmount: -38);			add: (PairKern first: 44 second: 121 kernAmount: -15);			add: (PairKern first: 46 second: 121 kernAmount: -40);			add: (PairKern first: 65 second: 121 kernAmount: -30);			add: (PairKern first: 66 second: 121 kernAmount: -13);			add: (PairKern first: 67 second: 121 kernAmount: -35);			add: (PairKern first: 70 second: 121 kernAmount: -6);			add: (PairKern first: 71 second: 121 kernAmount: -19);			add: (PairKern first: 75 second: 121 kernAmount: -38);			add: (PairKern first: 76 second: 121 kernAmount: -44);			add: (PairKern first: 77 second: 121 kernAmount: -6);			add: (PairKern first: 82 second: 121 kernAmount: -9);			add: (PairKern first: 83 second: 121 kernAmount: -15);			add: (PairKern first: 84 second: 121 kernAmount: -56);			add: (PairKern first: 86 second: 121 kernAmount: -16);			add: (PairKern first: 88 second: 121 kernAmount: -48);			add: (PairKern first: 89 second: 121 kernAmount: -37);			add: (PairKern first: 90 second: 121 kernAmount: -42);			add: (PairKern first: 97 second: 121 kernAmount: -10);			add: (PairKern first: 98 second: 121 kernAmount: -9);			add: (PairKern first: 101 second: 121 kernAmount: -11);			add: (PairKern first: 104 second: 121 kernAmount: -18);			add: (PairKern first: 107 second: 121 kernAmount: -8);			add: (PairKern first: 111 second: 121 kernAmount: -12);			add: (PairKern first: 115 second: 121 kernAmount: -17);			add: (PairKern first: 120 second: 121 kernAmount: -4);			add: (PairKern first: 122 second: 121 kernAmount: -9);			add: (PairKern first: 132 second: 121 kernAmount: -42);			add: (PairKern first: 223 second: 121 kernAmount: -24);			add: (PairKern first: 68 second: 122 kernAmount: -10);			add: (PairKern first: 70 second: 122 kernAmount: -13);			add: (PairKern first: 83 second: 122 kernAmount: -10);			add: (PairKern first: 84 second: 122 kernAmount: -43);			add: (PairKern first: 86 second: 122 kernAmount: -15);			add: (PairKern first: 88 second: 122 kernAmount: -14);			add: (PairKern first: 89 second: 122 kernAmount: -38);			add: (PairKern first: 98 second: 122 kernAmount: -9);			add: (PairKern first: 101 second: 122 kernAmount: -13);			add: (PairKern first: 104 second: 122 kernAmount: -9);			add: (PairKern first: 111 second: 122 kernAmount: -21);			add: (PairKern first: 115 second: 122 kernAmount: -10);			add: (PairKern first: 148 second: 122 kernAmount: -13);			add: (PairKern first: 28 second: 147 kernAmount: -32);			add: (PairKern first: 44 second: 147 kernAmount: -118);			add: (PairKern first: 46 second: 147 kernAmount: -118);			add: (PairKern first: 65 second: 147 kernAmount: -77);			add: (PairKern first: 71 second: 147 kernAmount: -8);			add: (PairKern first: 76 second: 147 kernAmount: -92);			add: (PairKern first: 80 second: 147 kernAmount: 14);			add: (PairKern first: 84 second: 147 kernAmount: 11);			add: (PairKern first: 98 second: 147 kernAmount: -20);			add: (PairKern first: 101 second: 147 kernAmount: -13);			add: (PairKern first: 102 second: 147 kernAmount: 23);			add: (PairKern first: 114 second: 147 kernAmount: 20);			add: (PairKern first: 118 second: 147 kernAmount: 20);			add: (PairKern first: 119 second: 147 kernAmount: 15);			add: (PairKern first: 120 second: 147 kernAmount: 20);			add: (PairKern first: 121 second: 147 kernAmount: 20);			add: (PairKern first: 223 second: 147 kernAmount: -20);			add: (PairKern first: 28 second: 148 kernAmount: -45);			add: (PairKern first: 44 second: 148 kernAmount: -109);			add: (PairKern first: 46 second: 148 kernAmount: -118);			add: (PairKern first: 65 second: 148 kernAmount: -57);			add: (PairKern first: 76 second: 148 kernAmount: -92);			add: (PairKern first: 80 second: 148 kernAmount: 18);			add: (PairKern first: 84 second: 148 kernAmount: 18);			add: (PairKern first: 86 second: 148 kernAmount: 10);			add: (PairKern first: 87 second: 148 kernAmount: 15);			add: (PairKern first: 102 second: 148 kernAmount: 15);			add: (PairKern first: 114 second: 148 kernAmount: 15);			add: (PairKern first: 118 second: 148 kernAmount: 25);			add: (PairKern first: 119 second: 148 kernAmount: 15);			add: (PairKern first: 120 second: 148 kernAmount: 20);			add: (PairKern first: 121 second: 148 kernAmount: 20);			add: (PairKern first: 239 second: 148 kernAmount: 11);			add: (PairKern first: 84 second: 154 kernAmount: -37);			add: (PairKern first: 89 second: 154 kernAmount: -52);			add: (PairKern first: 148 second: 154 kernAmount: -5);			add: (PairKern first: 75 second: 171 kernAmount: -15);			add: (PairKern first: 84 second: 171 kernAmount: -37);			add: (PairKern first: 86 second: 171 kernAmount: -17);			add: (PairKern first: 89 second: 171 kernAmount: -37);			add: (PairKern first: 76 second: 183 kernAmount: -32);			add: (PairKern first: 75 second: 187 kernAmount: -36);			add: (PairKern first: 84 second: 187 kernAmount: -37);			add: (PairKern first: 86 second: 187 kernAmount: -26);			add: (PairKern first: 89 second: 187 kernAmount: -37);			add: (PairKern first: 47 second: 198 kernAmount: -25);			add: (PairKern first: 66 second: 198 kernAmount: -6);			add: (PairKern first: 68 second: 198 kernAmount: -21);			add: (PairKern first: 70 second: 198 kernAmount: -49);			add: (PairKern first: 74 second: 198 kernAmount: -9);			add: (PairKern first: 76 second: 198 kernAmount: 16);			add: (PairKern first: 79 second: 198 kernAmount: -12);			add: (PairKern first: 80 second: 198 kernAmount: -52);			add: (PairKern first: 81 second: 198 kernAmount: 30);			add: (PairKern first: 84 second: 198 kernAmount: -63);			add: (PairKern first: 85 second: 198 kernAmount: -15);			add: (PairKern first: 86 second: 198 kernAmount: -62);			add: (PairKern first: 87 second: 198 kernAmount: -36);			add: (PairKern first: 89 second: 198 kernAmount: -87);			add: (PairKern first: 132 second: 198 kernAmount: 40);			add: (PairKern first: 147 second: 198 kernAmount: -115);			add: (PairKern first: 148 second: 198 kernAmount: -112);			add: (PairKern first: 65 second: 208 kernAmount: -5);			add: (PairKern first: 132 second: 208 kernAmount: -7);			add: (PairKern first: 89 second: 223 kernAmount: -40);			add: (PairKern first: 84 second: 224 kernAmount: -55);			add: (PairKern first: 86 second: 224 kernAmount: -40);			add: (PairKern first: 89 second: 224 kernAmount: -58);			add: (PairKern first: 84 second: 226 kernAmount: -57);			add: (PairKern first: 89 second: 226 kernAmount: -57);			add: (PairKern first: 84 second: 227 kernAmount: -33);			add: (PairKern first: 86 second: 227 kernAmount: -37);			add: (PairKern first: 89 second: 227 kernAmount: -42);			add: (PairKern first: 84 second: 228 kernAmount: -48);			add: (PairKern first: 86 second: 228 kernAmount: -40);			add: (PairKern first: 89 second: 228 kernAmount: -46);			add: (PairKern first: 84 second: 229 kernAmount: -61);			add: (PairKern first: 86 second: 229 kernAmount: -37);			add: (PairKern first: 89 second: 229 kernAmount: -48);			add: (PairKern first: 84 second: 232 kernAmount: -69);			add: (PairKern first: 89 second: 232 kernAmount: -72);			add: (PairKern first: 84 second: 234 kernAmount: -65);			add: (PairKern first: 89 second: 234 kernAmount: -79);			add: (PairKern first: 84 second: 235 kernAmount: -66);			add: (PairKern first: 89 second: 235 kernAmount: -72);			add: (PairKern first: 84 second: 236 kernAmount: 20);			add: (PairKern first: 87 second: 236 kernAmount: 12);			add: (PairKern first: 89 second: 236 kernAmount: 7);			add: (PairKern first: 147 second: 236 kernAmount: 15);			add: (PairKern first: 75 second: 238 kernAmount: 4);			add: (PairKern first: 84 second: 238 kernAmount: 17);			add: (PairKern first: 86 second: 238 kernAmount: 11);			add: (PairKern first: 87 second: 238 kernAmount: 12);			add: (PairKern first: 89 second: 238 kernAmount: 13);			add: (PairKern first: 147 second: 238 kernAmount: 10);			add: (PairKern first: 70 second: 239 kernAmount: 15);			add: (PairKern first: 75 second: 239 kernAmount: 14);			add: (PairKern first: 84 second: 239 kernAmount: 37);			add: (PairKern first: 86 second: 239 kernAmount: 15);			add: (PairKern first: 87 second: 239 kernAmount: 20);			add: (PairKern first: 89 second: 239 kernAmount: 31);			add: (PairKern first: 147 second: 239 kernAmount: 21);			add: (PairKern first: 84 second: 241 kernAmount: -41);			add: (PairKern first: 84 second: 242 kernAmount: -70);			add: (PairKern first: 86 second: 242 kernAmount: -48);			add: (PairKern first: 89 second: 242 kernAmount: -80);			add: (PairKern first: 84 second: 244 kernAmount: -83);			add: (PairKern first: 89 second: 244 kernAmount: -81);			add: (PairKern first: 84 second: 245 kernAmount: -55);			add: (PairKern first: 86 second: 245 kernAmount: -48);			add: (PairKern first: 89 second: 245 kernAmount: -71);			add: (PairKern first: 84 second: 246 kernAmount: -64);			add: (PairKern first: 86 second: 246 kernAmount: -48);			add: (PairKern first: 89 second: 246 kernAmount: -81);			add: (PairKern first: 84 second: 249 kernAmount: -48);			add: (PairKern first: 84 second: 252 kernAmount: -51);			add: (PairKern first: 84 second: 255 kernAmount: -33);			yourself)</body><body package="Fonts test resources">exampleBytes	^self exampleBytesTazLT4SemiLight</body><body package="Fonts test resources">exampleBytesTazLT4SemiLight	^(ByteArray fromPackedString: '@@GUCP@@P6=0^WI)Y6!4HCD9NS\,HCD9NS$,HCH0LCH,HCH0LCX X''$ SGU#V6E3WRA$YRAG\&amp;=/]B8 PV1,@@@@ P@J@B0AK@E @38@@@@@@@BP@P@@@BXDHW8A@PPE?1,@@@CG@@@@4 @@@@@@@@@@@@@@G BS@@@@=P@@@@@@@@C+@ @@@@@@@NP@@@@@@@@@M@C0@@@@:@LC@N C:@L @?PA/@KH@@@@/@J\?6P@Y@B1@BX@L A$@A$@FPC''@BX@. H@@EA/\7QSX7I)\GP@UFE:HD1TMBASYV5)SF%''ZGP@UFE:KT1TMEM%[V%LZV](]@BP@],@_ FP@W8A$@FP@Y@A6 A&gt;@W8A_ E&gt;@W8A_ E&gt;@W8A_ E&gt;@W8AA0G"@^HA\PG0@LHAU0GV@BHA.@E_@+,A,@K+@/X@P EB@[4AI HH@PHA@@FZ@P BB@HH@  BB@HH@  BB@HH@  BM D7@RXBI H&amp;@*$A-0LE@/4A8 D&gt;@*4A&amp;PD^@%HB:PAF@\,AY G5@%@B[PK5@V4BA@KJ@ZHAS@HB@!LC&gt; GQ@\HAZ0FZ@V,AI K4@V@A70G(@WXA:PGS@P$A:@G3@](@6 B @](@APO3@_TA:@G(@SLAY0D''@_LA$PFN@*8A" EW@Y@A90BP@RXB_ D&amp;@''8AB@F:@\(A,0K4@_PA$@G;@&lt;(AR0G$@''8A_ E&gt;@W8A?PC=@K4A/PD&amp;@/PA:@NP@V&lt;BY0EK@Q8C_ E&gt;@]DA5 @"@ZPA=@D&amp;@"XBGPD&amp;@)@AD0M=@P\BI H&amp;@%4B$@GP@RXB. F6@Y@AI H0@*&lt;@_@D6@W(AA0J&amp;@+@B*0J)@PTBAPHE@ TBAPHE@)HB8 F-@Z4A+PF-@^$@:PC)@N$@R@IP@&amp;4B[PI-@&amp;4B[PH&amp;@''PBS@IL@$0BS@KQ@_TA90G_@]&lt;A70G_@]&lt;A70G1@''XA40GS@]LA40GZ@M(@6 CZ@M$A&lt;0G5@_TA=PG5@_TAI K:@_LA&lt;0G3@_LA" G(@X(A. IAGO+?P13;?5(\=/=AG_[?V!76?8P];O=YG&gt;S?Y"DJ@B0"6/&lt;.H-C?PRKS?4D*2O&lt;]KNK?KR3T?4H,:O=DKLW?Q"2*?4(,2_=OKMO?TB1-?5P,)?=UKMC?U"2!?5\,0/=YKH''?X"3,?6T,9/=&amp;KL''?[23V?7H,(_=3KNW?]"2)?7\,-_=9KKO?$22J?9P, _&lt;\K\;?KB7N?28-/?=AK^??P26??4T-&gt;O=FK_#?R27E?40-3/=RK]O?UB7R?5X-8/=WK^+?VB7Z?5$-+O=ZK\#?X27$?6X-7_=+K]O?\"7%?7L-=_=4K^_?]"79?7\-&gt;_=8K^G?^R7;?7(-9/&lt;]K.3?KR;"?4H.;O=DK-G?Q":1?4(.2?=OK-??TB9&lt;?5L.&gt;_=TK*W?UR;X?5X.(/=WK,W?VR:S?6T.:_=&amp;K,;?[2;\?7H.*?=3K.3?]":2?7\./_=9K+7?$2:J?9P. _&lt;/K7+?Q"?C?4(/:O=PK:??T2?5?5P//_=UK&gt;G?U"&gt;&lt;?5\/4?=YK;/?Y"?^?7H/9?=6K&gt;''?]2?1?5P:8/=VN._?U3+1?5$:5O=AO&gt;3?UC&lt;P@FX?B @-P^??K4GC?4IA9?=CP_O?QDG"?4UA&gt;/=FP\K?Q4G,?4)A8?=KP_[?S4G(?5AA0?=RP];?T4G6?5QA._=UP^W?U$F??5]A4O=XP_G?VTF)?5)A9/&gt;SP[K?%DF&amp;?11JD @-R-/?K4+%?4EJA@ABR/K?QD+*?4YJ2?=JR/K?SD(R@D=J8?=PR,O?UD+V?5UJ;?=VR+3?U4+S?5%J/_&gt;SR+K?%D*+?5QM&gt;O=VS_#?VT7&amp;?9QM;/&lt;\S&gt;_?K$?%?2=O9_=AS&gt;''?P4?(?4UO?O=KS=7?SD?!?5IO9/=SS?''?UD?[?5YO9/=WS?S?VD?P?5%O3?=ZS=''?!D?!?9MO7/&gt;TS&lt;??/4?/?11S;?&lt;-T&gt;#?PUO*?4IS&gt;_=CT?S?QUO&lt;?4YS=_=KT?G?SEO/?4=S&lt;/=TT?W?U%O1?5]S?_=XT&gt;/?VUO%?5)S&lt;O&gt;DT?S?$5O1?9QS;O&gt;?T?_?GESB?21T5_&lt;-UM;?K%SQ?2=TE@AAULK?P%S+?4QT7/=GUOS?SER;?45T&lt;?=OUN#?TUS/?5QTA A&amp;UA0@!ER1?9MTD0BTUAP@*5S"?;-T9/&gt;?UM;?GEW,?29U9O=AU^#?R5W3?41U;O=RU_K?VEW.?8QU9?&lt;\U,O?KE[K?25V:_&lt;.U,W?K5XT@DEV1O=BU.7?QE[+?4]V&lt;O=KU/O?SEZ:?45V&lt;?=OU/G?TE[:?5EV=?=RU/G?T5[-?5!V:O=ZU/W?Y%XL@HQV)_&gt;+U/S?.5[6?;=V9O&lt;\U=C?KE_"?25W?O&lt;.U=O?K5\T@DEW6?=BU?3?QE_9?4]W&gt;?=LU&lt;??S5_8?5IW?_=ZU?+?Y%\J@HQW3/&gt;?U&gt;_?GE#1?25X7_=AVOO?P%#[?4MX=/=DVM+?Q%##?4]X:O=JVN??SE#2?4=X2?=PVMC?T%#&amp;?5MX;_=UVOG?U%#:?5!X9?=YVN#?V%#%?11Y._&lt;,V]_?KU''Q?29Y//&lt;/VQP@PU&amp;*?4IY6O=DV]C?Q5'')?4)Y=O=KV_[?SE&amp;0?45Y8O=OV]W?TE''0?5EY9?=RV^G?T5''(?5!Y7/=ZV_W?!E&amp;T?:-Y6?&gt;;V]/?/5''V?11Z;?&lt;-V/C?PU+2?4IZ&lt;_=DV.G?Q%+2?4]Z&lt;/=LV.??S5+$?5AZ8/=RV./?T5+3?5YZ=?=XV.??VU+6?5)Z9/=CX_#?QFG&lt;?4Y!9O=KX_/?TFG3?5I!&lt;_=TX[W?U&amp;GR?5]!:O=XX_C?VVF&lt;?5)!;?="X_''?Y&amp;G,?6-!=O=2X_[?]&amp;G7?7]!&gt;_=8X_S?^VG8?7)!&gt;?&gt;SX^[?%FGV?11$=/&lt;]YO[?K6S^?4E$?O=CYN3?Q&amp;S+?4-$;O=LYO[?TFS/?5I$6_=TYJ+?U&amp;SP?5]$9?=XYM#?VVR&amp;?5)$5_=#YOW?Y&amp;S$?6-$6/=2YN_?\6S6?7Q$:O=6YOO?]6S4?7!$8?=9YOW?^&amp;S-?8Q$;?&gt;SYL_?%FR9?==$?O&lt;]Y!@@TFXE@E!&amp;=O=YY/O?\&amp;XO@GM&amp;&gt;_&gt;DY.3?%F[6?==&amp;&gt;_=T[\/?U&amp;7+?5]-&gt;/=X[^+?VV7T?5)-;O&gt;T[_S?GF?6?15/=_&lt;/[=;?PV?;?4M/:?=F[&gt;/?R6?,?41/=_=P[&gt;??T&amp;?V?5Q/*/=V[=C?U6?&amp;?5!/6O=Y[:#?V&amp;?U?6M/=O=&amp;[&gt;O?Z6?Y?7I/9?=3[?[?]F?(?7Y/&lt;/=7[?S?^F?#?7%/=_=:[&gt;7?!F?/?9M/2_&gt;T[;''?76?&lt;?4-3&gt;_=T\;??U''O,?5]3&gt;/=Y\&lt;O?V''O5?6-3&gt;_=3\?[?^GO8?8Q3&gt;/&gt;S\&gt;S?%GOZ?114&lt;_&lt;]]@8@K''S1?4E4;_=C]O3?SGS2?5A4APAX]N''?VWS5?5)4&lt;O="]O+?YWS:?6!4&gt;/=2]@4@\7S5?7Y4B@A7]@T@^WPI@HQ4&lt;O?_]O[?GGW/?4E5&gt;O=C]_O?Q''W8?4-5:/=L]_G?T''W.?5Q52O=V]^''?U7W&lt;?5!59_=Y]\;?V''W&amp;?6Y5&gt;/=+]^;?^''W/?8Q5=_&gt;S]^3?%GW_?1165?&lt;,].W?K''[[?4E69O=C]-7?Q''[:?4]6;_=K].C?SG[T?456&gt;/=S]/G?UG[H?5!63/=Y]-+?V''[Q?6E6=_="]/[?YW[4?6!6&lt;O=+]/#?[7[4?7M6;?=8]/3?^''[7?8Q63O?_].#?GG_X?217;/&lt;.]&gt;C?PW_$?4I7=/=C]=7?Q7_,?4-77?=L]=;?SW_:?5I7&gt;_=S]?G?UG_B?5!73?=Y]=7?V''_O?6E7=O="]?#?YW_5?6!7&lt;_=/]?[?\7_2?8Q74/?_]&gt;3?KW#3?4E8&gt;/=B^O[?Q''#0?4)8=_=T^L_?U''#.?5%86_=!^OK?X''#/?6U8:_=&amp;^O+?ZG#.?6=88_=3^OC?77#2?1196/&lt;,^_G?K''''X?4E98/=B^_O?P7'']?4Y9&gt;/=G^^7?R7''Z?4195O=M^_+?T''''7?5M9&lt;_=T^\#?U''''0?5!94O=Y^]/?V''''V?6E9=/="^__?YW''5?6!9;/=+^_#?[7''4?7M9;?=8^_3?^''''7?8Q95/?_^^#?QG+6?4Y:&lt;?=S^/[?UG+U?5Y:&lt;_=X^/K?VW+Z?6I:=?=%^/O?ZG+7?6=::?=3^/[?%G+3?12S8O&lt;,$8+?K)NJ?4FS,?=G$?#?SIN$?5BSC AT$0,@X)O,?6VS&lt;?=&amp;$1\@\)LT@GZSE@A7$0&lt;@^ILT@G&amp;SE@C_$&gt;3?GISS?22T$?&lt;.%H+?PYSG?42T)O=P%AH@UIPR@EZTB AW%@&lt;@Y)PO@GJTC0A6%A$@]9PO@G"TE@A9%AP@;9PK@ERZ6?=Y&amp;,3?%I+;?4.+&lt;_=T*=/?U*//?5&amp;+6?=L-&gt;C?R;/\?5R;6?=V.&gt;[?V[/[?2?F9?=B1/+?QL[+?4[F3?=J1/_?SLXP@D?F=O=P1,3?T\X^@ESF0_=U1/G?U,[B?5_F7O=Y1*''?!LX(@IOF#_&gt;T1)C?P]C;?8SP&gt;_=Y7=#?UNCI?5[ 6O=Y8L[?UNKG?5''"1?=T8=??U.O[?5''#5/=T9MC?U.SX?5''$4/=T9\O?U.W[?5''%4O=T:K/?V^"8?5S*/?=Y:+G?UN.&gt;?5''+.O=T;AP@U&gt;0L@E'',A0BS;@&lt;@R&gt;8D@ES.DPAV; ,@U&gt;8L@E''.CPBS; (@Q.&lt;O@D//C AT;2T@U.&lt;O@E_/E@AY;1&lt;@$&gt;&lt;U@ES15?=T&lt;++?U/KP?5''2,O=T=J7?V_R/?5S52_=V=]C?V_V9?5S60O=V=-C?V_Z/?5S94O=T?L7?UO?_?0@a')</body></methods><methods><class-id>Graphics.Fonts.PostScriptFontMetrics class</class-id> <category>win31 DDK Documentation</category><body package="Fonts Development">doc21PrinterFontMetricFiles	^'2.1 Printer Font Metrics FilesA printer font metrics (PFM) file has the following general form:	PFMHEADER		Header;				/* font header */	WORD				WidthTable[];		/* character widths */	PFMEXTENSION	Extensions;			/* extensions */	char				DeviceName[];		/* printer-device name */	char				FaceName[];		/* font name */	EXTTEXTMETRIC	ExtTextMetrics;		/* extended-text metrics */	WORD				ExtentTable[];		/* unscaled-character widths */	DRIVERINFO		DriverInfo;			/* driver-specific information */	PAIRKERN			KerningPairs[];		/* pair-kerning table */	KERNTRACK		KerningTracks[];		/* track-kerning table */The PFMHEADER structure, the PFMEXTENSION structure, and font name must be present in every PFM file. Whether a PFM file contains any of the other structures and arrays depends on the printer driver and the font vendor''s preferences.The PFMHEADER and PFMEXTENSION structures must be, respectively, the first and second structures in the file. The remaining structures and arrays may appear in any order. Their locations are indicated by the offsets in the PFMHEADER and PFMEXTENSION structures.The following sections describe the arrays in the file, such as the width table. For more information about the structures, see Section 2.4, Structure Reference, later in this chapter.2.1.1 Width TableThe width table in the PFM file is an array of 16-bit values containing the width of each character in the font. The number of elements in the array is computed as dfLastChar - dfFirst + 2. Since the last entry is extra, it is set to zero.The width table is optional. For example, fixed-pitch fonts do not require the table since all characters have the same width. If the table is provided, it must be placed between the PFMHEADER and PFMEXTENSION structures.2.1.2 Device and Font NamesThe device and font names are null-terminated strings specifying the name of the printer device and font face, respectively.2.1.3 Extent TableThe extent table is an array of 16-bit values containing the width of each character in the font at the default point size.'</body><body package="Fonts Development">doc24StructureReference	^'2.4 Structure ReferenceEXTTEXTMETRIC	typedef struct{		short etmSize;		short etmPointSize;		short etmOrientation;		short etmMasterHeight;		short etmMinScale;		short etmMaxScale;		short etmMasterUnits;		short etmCapHeight;		short etmXHeight;		short etmLowerCaseAscent;		short etmUpperCaseDescent;		short etmSlant;		short etmSuperScript;		short etmSubScript;		short etmSuperScriptSize;		short etmSubScriptSize;		short etmUnderlineOffset;		short etmUnderlineWidth;		short etmDoubleUpperUnderlineOffset;		short etmDoubleLowerUnderlineOffset;		short etmDoubleUpperUnderlineWidth;		short etmDoubleLowerUnderlineWidth;		short etmStrikeOutOffset;		short etmStrikeOutWidth;		WORD  etmKernPairs;		WORD  etmKernTracks;	}EXTTEXTMETRIC;The EXTTEXTMETRIC structure provides extended-metric information for a font. All the measurements are given in the specified units, regardless of the current mapping mode of the display context.Members   etmSize   Specifies the size of this structure (in bytes).   etmPointSize   Specifies the nominal point size of this font in twips (twentieths of a point). This is the intended graphics art size of the font; the actual size may differ slightly depending on the resolution of the device.   etmOrientation   Specifies the font''s orientation. It can be one of the following values.    Value   Meaning    -----------------------------------------------------------------------    0       Either orientation.    1       Portrait.    2       Landscape.   This value refers to the ability of this font to be imaged on a page of the given orientation. Landscape pages are those whose width (x-dimension) is greater than their height (y-dimension).   etmMasterHeight   Specifies the font size in device units for which the values in this font''s extent table are exact.   etmMinScale   Specifies the minimum valid size for a given font (in device units).			                          etmMinScale * 72            smallest point size = ----------------      	                                dfVertRes   In this example, 72 represents the number of points-per-inch. The dfVertRes member contains the number of dots-per-inch.   etmMaxScale    Specifies the maximum valid size for a given font (in device units).	                                 etmMaxScale * 72            largest point size = ----------------      	                              dfVertRes   In this example, 72 represents the number of points-per-inch. The dfVertRes member contains the number of dots-per-inch.   etmMasterUnits   Specifies the integer number of units-per-em where an em equals etmMasterHeight. In other words, the etmMasterHeight member is expressed in font units rather than device units.   etmCapHeight   Specifies the height of uppercase characters for a given font (in font units). Typically, H is used for the measurement purposes.   etmXHeight   Specifies the height of lowercase characters for a given font (in font units). Typically, x is used for the measurement purposes.   etmLowerCaseAscent   Specifies the distance (in font units) that the ascender of lowercase letters extends above the baseline. This distance is typically specified for a lowercase d.   etmLowerCaseDescent   Specifies the distance (in font units) that the descender of lowercase letters extends below the baseline. This distance is typically specified for a lowercase p.   etmSlant   Specifies the angle in tenths of degrees clockwise (to the right) from the upright version of the font (assuming this font is slanted or italicized).   etmSuperScript   Specifies the recommended amount (in font units) to offset superscript characters from the baseline. This amount is typically specified by a negative offset.   etmSubScript   Specifies the recommended amount (in font units) to offset subscript characters from the baseline. This amount is typically specified by a positive offset.   etmSuperScriptSize   Specifies the recommended size (in font units) of superscript characters for this font.   etmSubScriptSize   Specifies the recommended size (in font units) of subscript characters for this font.   etmUnderlineOffset   Specifies the offset (in font units) downward from the baseline where the top of a single underline bar should appear.   etmUnderlineWidth   Specifies the thickness (in font units) of the underline bar.   etmDoubleUpperUnderlineOffset   Specifies the offset (in font units) downward from the baseline where the top of the upper, double underline bar should appear.   etmDoubleLowerUnderlineOffset   Specifies the offset (in font units) downward from the baseline where the top of the lower, double underline bar should appear.   etmDoubleUpperUnderlineWidth   Specifies the thickness (in font units) of the upper, double underline bar.   etmDoubleLowerUnderlineWidth   Specifies the thickness (in font units) of the lower, double underline bar.   etmStrikeOutOffset   Specifies the offset (in font units) upward from the baseline where the top of a strikeout bar should appear.   etmStrikeOutWidth   Specifies the thickness (in font units) of the strikeout bar.   etmKernPairs   Specifies the number of character-kerning pairs defined for the given font. You can use this value to calculate the size of the pair-kern table returned by the GETPAIRKERNTABLE escape. It will not be greater than 512 kern pairs.   etmKernTracks   Specifies the number of kerning tracks defined for the given font. You can use this value to calculate the size of the track-kern table returned by the GETTRACKKERNTABLE escape. It will not be greater than 16 kern tracks.PFMEXTENSION	typedef tagPFMEXTENSION {		WORD  dfSizeFields;		DWORD dfExtMetricsOffset;		DWORD dfExtentTable;		DWORD dfOriginTable;		DWORD dfPairKernTable;		DWORD dfTrackKernTable;		DWORD dfDriverInfo;		DWORD dfReserved;	} PFMEXTENSION;The PFMEXTENSION structure contains extended information for printer fonts.Members   dfSizeFields   Specifies the size (in bytes) of this structure.   dfExtMetricsOffset   Specifies the byte offset in the file to the EXTTEXTMETRIC structure for the given font.   dfExtentTable   Specifies the byte offset in the file to the extent table. The size of the table is dfLastChar - dfFirstChar + 1 WORD. The extent table contains the unscaled widths (in 1/1000''s of an em) of the characters in the font.   dfOriginTable   Specifies the byte offset in the file to the table of character origins. The size of the table is dfLastChar - dfFirstChar + 1 WORD. For screen-font files, this table gives the signed amount of left adjustment to add to the current position before drawing the characters. Negative values indicate left movement; positive values indicate right movement. This should be NULL for PFM files.   dfPairKernTable   Specifies the byte offset in the file to the optional pair-kerning table should be NULL if no kerning pairs are defined for this font. The size of the table is given by the etmKernPairs member of the EXTTEXTMETRIC structure.   dfTrackKernTable   Specifies the byte offset in the file to the optional track-kerning table. This should be NULL if no kerning tracks are defined for this font. The size of the table is given by the etmKernTracks member of the EXTTEXTMETRIC structure.   dfDriverInfo   Specifies the byte offset in the file to additional driver-specific information. Each driver writer is responsible for documenting the format of the data pointed to by this member. These formats will be made public so that third parties that want to create compatible printer font metrics files may do so.   dfReserved   Reserved; must be zero.PFMHEADER	typedef struct PFMHEADER {		WORD  dfVersion;		WORD  dfSize;		char  dfCopyright[60];		WORD  dfType;		WORD  dfPoints;		WORD  dfVertRes;		WORD  dfHorizRes;		WORD  dfAscent;		WORD  dfInternalLeading;		WORD  dfExternalLeading;		BYTE  dfItalic;		BYTE  dfUnderline;		BYTE  dfStrikeOut;		WORD  dfWeight;		BYTE  dfCharSet;		WORD  dfPixWidth;		WORD  dfPixHeight;		BYTE  dfPitchAndFamily;		WORD  dfAvgWidth;		WORD  dfMaxWidth;		BYTE  dfFirstChar;		BYTE  dfLastChar;		BYTE  dfDefaultChar;		BYTE  dfBreakChar;		WORD  dfWidthBytes;		DWORD dfDevice;		DWORD dfFace;		DWORD dfBitsPointer;		DWORD dfBitsOffset;	} PFMHEADER;The PFMHEADER structure contains the information about a Windows raster or vector font. The PFMHEADER structure is identical to the Windows 2.x FONTINFO structure. The PFMHEADER structure is also identical to a font-file header. For more information about the FONTINFO structure, see the Microsoft Windows Device Driver Adaptation Guide.'</body><body package="Fonts Development">doc73PFMFilesForPostScriptPrinters	^'7.3 PFM Files for PostScript PrintersBecause PostScript fonts are scalable, the PFM files for the PostScript fonts do not contain width tables. The files have the following form:	PFMHEADER		Header;				/* font header */	PFMEXTENSION	Extensions;			/* extensions */	char				DeviceName[];		/* printer device name */	char				FaceName[];		/* font face name */	EXTTEXTMETRIC	ExtTextMetrics;		/* extended text metrics */	WORD				ExtentTable[];		/* unscaled character widths */	DRIVERINFO		DriverInfo;			/* driver-specific information */	PAIRKERN			KerningPairs[];		/* pair-kerning table (optional)*/	KERNTRACK		KerningTracks[];		/* track-kerning table (optional)*/The PostScript driver for Windows assumes all PostScript fonts are scalable fonts, so it ignores the dfPoints and dfPixHeight members in the PFM header. The members dfAvgWidth and dfMaxWidth are in units of 1000 units-per-em.Although the PostScript naming convention includes the attributes of the font (that is, bold and italic) in the font name, the attributes should be stripped from the font name and represented in the dfWeight and dfItalic members in the PFM header.The extent table is an array of 16-bit values containing the unscaled widths of the characters and assuming 1000 units-per-em. The range of the table should be from dfFirstChar to dfLastChar. The size of the table should be dfLastChar - dfFirstChar + 1.Pair-kern values should be in the same 1000 units-per-em measurement as the extents. As of this writing, we do not know of any application that uses the track-kern table.In the EXTTEXTMETRIC structure, the PostScript driver assumes the following values for each font:dfVertRes = 300etmMasterHeight = 300etmMasterUnits = 1000In other words, the driver assumes all fonts use Adobe''s standard 1000 units-per-em method for describing a font. You must build the extent table based upon 1000 units-per-em to be consistent with this restriction in the driver.The driver also assumes that the font may be scaled to any point size the application requests. We recommend that the true scaling range of the font be indicated in the etmMinScale and etmMaxScale members (in device units, at 300 dpi). The driver currently ignores these members.Because the Windows PostScript driver assumes all PostScript fonts are scalable fonts, it ignores the etmPointSize member. The etmSize member is not the point size, but rather the size (that is, the number of bytes) of the EXTTEXTMETRIC structure.As of this writing, we do not know of any application that uses the members in the EXTTEXTMETRIC structure except for etmKernPairs. If your font contains kern pairs, you must fill in the EXTTEXTMETRIC structure to indicate the number of kern pairs. Do not leave the other members blank; fill them in with reasonable values in the event an application does use them.The driver-specific data structure pointed to by dfDriverInfo is a null-terminated string containing the PostScript name for the font. There are two names for the font:o   The Windows name for the font which appears in the font list in the application''s font dialog box.o   The PostScript name for the font, which can vary according to printer manufacturer and which the driver sends to the printer to select the font.Both strings must be null-terminated. The Windows name for the font is pointed to by dfFace and the PostScript name for the font is pointed to by dfDriverInfo.To create a PFM file for the internally-supported printers, Microsoft converts Font Metric (AFM) files to the PFM file format. These files, provided with the DDK, are ASCII files that define the metrics for each font. There are 63 AFM files supporting 63 unique fonts. Printers with resident fonts that are not supported in the current version of the driver will need to define those files as soft fonts.If you need to define a font that is not available currently in the PostScript printer driver, you will need to modify the driver sources to add additional AFM files. Please refer to the PostScript driver''s MAKE file that is included on the DDK disks for more information on how the driver builds AFM and PFM files.'</body></methods><methods><class-id>Graphics.Fonts.CFF.TwoByteDictOperator</class-id> <category>accessing</category><body package="CompactFontFormat">name	| dict |	dict := Dictionary new.	dict at: 0 put: 'Copyright'.	dict at: 1 put: 'isFixedPitch'.	dict at: 2 put: 'ItalicAngle'.	dict at: 3 put: 'UnderlinePosition'.	dict at: 4 put: 'UnderlineThickness'.	dict at: 5 put: 'PaintType'.	dict at: 6 put: 'CharstringType'.	dict at: 7 put: 'FontMatrix'.	dict at: 8 put: 'StrokeWidth'.	dict at: 9 put: 'BlueScale'.	dict at: 10 put: 'BlueShift'.	dict at: 11 put: 'BlueFuzz'.	dict at: 12 put: 'StemSnapH'.	dict at: 13 put: 'StemSnapV'.	dict at: 14 put: 'ForceBold'.	"15 16 reserved"	dict at: 17 put: 'LanguageGroup'.	dict at: 18 put: 'ExpansionFactor'.	dict at: 19 put: 'initialRandomSeed'.	dict at: 20 put: 'SyntheticBase'.	dict at: 21 put: 'PostScript'.	dict at: 22 put: 'BaseFontName'.	dict at: 23 put: 'BaseFontBlend'.	"24 - 29 reserved"	"required CIDFont top DICT entries"	dict at: 30 put: 'ROS'.	dict at: 31 put: 'CIDFontVersion'.	dict at: 32 put: 'CIDFontRevision'.	dict at: 33 put: 'CIDFontType'.	dict at: 34 put: 'CIDCount'.	dict at: 35 put: 'UIDBase'.	dict at: 36 put: 'FDArray'.	dict at: 37 put: 'FDSelect'.	dict at: 38 put: 'FontName'.	"39 - 255 reserved"	^dict at: self value ifAbsent: ['unknown']</body></methods><methods><class-id>Graphics.Fonts.CFF.TwoByteDictOperator</class-id> <category>testing</category><body package="Fonts UI Support">hasOneSID	"the operation has one argument which is a SID (String ID)"	^#(0 21 22 38) includes: self value</body></methods><methods><class-id>Graphics.Fonts.CFF.TwoByteDictOperator class</class-id> <category>accessing</category><body package="CompactFontFormat">namesDictionary	| dict |	dict := Dictionary new.	dict at: 0 put: 'Copyright'.	dict at: 1 put: 'isFixedPitch'.	dict at: 2 put: 'ItalicAngle'.	dict at: 3 put: 'UnderlinePosition'.	dict at: 4 put: 'UnderlineThickness'.	dict at: 5 put: 'PaintType'.	dict at: 6 put: 'CharstringType'.	dict at: 7 put: 'FontMatrix'.	dict at: 8 put: 'StrokeWidth'.	dict at: 9 put: 'BlueScale'.	dict at: 10 put: 'BlueShift'.	dict at: 11 put: 'BlueFuzz'.	dict at: 12 put: 'StemSnapH'.	dict at: 13 put: 'StemSnapV'.	dict at: 14 put: 'ForceBold'.	"15 16 reserved"	dict at: 17 put: 'LanguageGroup'.	dict at: 18 put: 'ExpansionFactor'.	dict at: 19 put: 'initialRandomSeed'.	dict at: 20 put: 'SyntheticBase'.	dict at: 21 put: 'PostScript'.	dict at: 22 put: 'BaseFontName'.	dict at: 23 put: 'BaseFontBlend'.	"24 - 29 reserved"	"required CIDFont top DICT entries"	dict at: 30 put: 'ROS'.	dict at: 31 put: 'CIDFontVersion'.	dict at: 32 put: 'CIDFontRevision'.	dict at: 33 put: 'CIDFontType'.	dict at: 34 put: 'CIDCount'.	dict at: 35 put: 'UIDBase'.	dict at: 36 put: 'FDArray'.	dict at: 37 put: 'FDSelect'.	dict at: 38 put: 'FontName'.	"39 - 255 reserved"	^dict</body></methods><methods><class-id>Graphics.Fonts.CFF.TwoByteDictOperator class</class-id> <category>test instances</category><body package="Fonts test resources">example	^TwoByteDictOperator value: 1</body></methods><methods><class-id>Graphics.Fonts.CFF.TopDict</class-id> <category>accessing</category><body package="CompactFontFormat">baseFontBlend	"&lt;delta&gt;	(added as needed by Adobe-based technology)"	| op |	op := self operations detect: [:operation | operation isExtended: 23] ifNone: [		^#()].	^op operands</body><body package="CompactFontFormat">baseFontName	"&lt;SID&gt;	(added as needed by Adobe-based technology)"	| op |	op := self operations detect: [:operation | operation isExtended: 22] ifNone: [		^0].	^op operands first</body><body package="CompactFontFormat">biasFor: nSubrs	"see 16 Local / Global Subrs INDEXes"	self charstringType = 1 ifTrue: [		^0].	nSubrs &lt; 1240 ifTrue: [		^107].	nSubrs &lt; 33900 ifTrue: [		^1131].	^32768</body><body package="CompactFontFormat">charStrings	"&lt;Number&gt;	CharStrings offset (0)"	| op |	op := self operations detect: [:operation | operation isSimple: 17] ifNone: [		^0].	^op operands first</body><body package="CompactFontFormat">charset	"&lt;Number&gt;	charset offset (0)"	| op |	op := self operations detect: [:operation | operation isSimple: 15] ifNone: [		^0].	^op operands first</body><body package="CompactFontFormat">charstringType	"&lt;Number&gt;"	| op |	op := self operations detect: [:operation | operation isExtended: 6] ifNone: [		^2].	^op operands first</body><body package="CompactFontFormat">copyright	"&lt;SID&gt;	FontInfo"	^(self operations detect: [:operation | operation isExtended: 0]) operands first</body><body package="CompactFontFormat">encoding	"&lt;Number&gt;	Encoding offset (0)"	| op |	op := self operations detect: [:operation | operation isSimple: 16] ifNone: [		^0].	^op operands first</body><body package="CompactFontFormat">familyName	"&lt;SID&gt;	FontInfo"	^(self operations detect: [:operation | operation isSimple: 3]) operands first</body><body package="CompactFontFormat">fontBBox	"&lt;Array4 of: Number&gt;"	| op |	op := self operations detect: [:operation | operation isSimple: 5] ifNone: [		^#(0 0 0 0)].	^op operands</body><body package="CompactFontFormat">fontClass	^Type1Font</body><body package="CompactFontFormat">fontMatrix	"&lt;Array6 of: Number&gt;"	| op |	op := self operations detect: [:operation | operation isExtended: 7] ifNone: [		^#(0.001 0 0 0.001 0 0)].	^op operands</body><body package="CompactFontFormat">fullName	"&lt;SID&gt;	FontInfo"	^(self operations detect: [:operation | operation isSimple: 2]) operands first</body><body package="CompactFontFormat">isFixedPitch	"&lt;Boolean&gt;	FontInfo"	| op |	op := self operations detect: [:operation | operation isExtended: 1] ifNone: [		^false].	^op operands first = 1</body><body package="CompactFontFormat">italicAngle	"&lt;Number&gt;	FontInfo"	| op |	op := self operations detect: [:operation | operation isExtended: 2] ifNone: [		^0].	^op operands first</body><body package="CompactFontFormat">notice	"&lt;SID&gt;	FontInfo"	^(self operations detect: [:operation | operation isSimple: 1]) operands first</body><body package="CompactFontFormat">paintType	"&lt;Number&gt;"	| op |	op := self operations detect: [:operation | operation isExtended: 5] ifNone: [		^0].	^op operands first</body><body package="CompactFontFormat">postScript	"&lt;SID&gt;	embedded PostScript language code"	| op |	op := self operations detect: [:operation | operation isExtended: 21] ifNone: [		^0].	^op operands first</body><body package="CompactFontFormat">private	"&lt;Array2 of: Number&gt;	Private DICT size and offset (0)"	| op |	op := self operations detect: [:operation | operation isSimple: 18] ifNone: [		^#()].	^op operands</body><body package="CompactFontFormat">strokeWidth	"&lt;Number&gt;	FontInfo"	| op |	op := self operations detect: [:operation | operation isExtended: 8] ifNone: [		^0].	^op operands first</body><body package="CompactFontFormat">syntheticBase	"&lt;Number&gt;	synthetic base font index"	| op |	op := self operations detect: [:operation | operation isExtended: 20] ifNone: [		^0].	^op operands first</body><body package="CompactFontFormat">underlinePosition	"&lt;Number&gt;	FontInfo"	| op |	op := self operations detect: [:operation | operation isExtended: 3] ifNone: [		^-100].	^op operands first</body><body package="CompactFontFormat">underlineThickness	"&lt;Number&gt;	FontInfo"	| op |	op := self operations detect: [:operation | operation isExtended: 4] ifNone: [		^50].	^op operands first</body><body package="CompactFontFormat">uniqueID	"&lt;Number&gt;"	^(self operations detect: [:operation | operation isSimple: 13]) operands first</body><body package="CompactFontFormat">version	"&lt;SID&gt;	FontInfo"	^(self operations detect: [:operation | operation isSimple: 0]) operands first</body><body package="CompactFontFormat">weight	"&lt;SID&gt;	FontInfo"	^(self operations detect: [:operation | operation isSimple: 4]) operands first</body><body package="CompactFontFormat">xUID	"&lt;Array&gt;"	| op |	op := self operations detect: [:operation | operation isSimple: 14] ifNone: [		^#()].	^op operands</body></methods><methods><class-id>Graphics.Fonts.CFF.TopDict</class-id> <category>font creation</category><body package="CompactFontFormat">charStringsFrom: aByteStream	aByteStream position: self charStrings.	^Index fromBytes: aByteStream collect: [:data | Charstring bytes: data]</body><body package="CompactFontFormat">charsetForGlyphs: numberOfGlyphs from: aByteStream	| offset charsetFormat |	offset := self charset.	offset = 0 ifTrue: [		^StandardCharset isoAdobe].	offset = 1 ifTrue: [		^StandardCharset expert].	offset = 2 ifTrue: [		^StandardCharset expertSubset].	aByteStream position: offset.	charsetFormat := aByteStream next.	charsetFormat = 0 ifTrue: [		^Charset0 numberOfGlyphs: numberOfGlyphs fromBytes: aByteStream].	charsetFormat = 1 ifTrue: [		^Charset1 numberOfGlyphs: numberOfGlyphs fromBytes: aByteStream].	^Charset2 numberOfGlyphs: numberOfGlyphs fromBytes: aByteStream</body><body package="CompactFontFormat">encodingFrom: aByteStream	| offset |	offset := self encoding.	offset = 0 ifTrue: [		^StandardEncoding standard].	offset = 1 ifTrue: [		^StandardEncoding expert].	aByteStream position: offset.	^Encoding fromBytes: aByteStream</body><body package="CompactFontFormat">fontNamed: fontName file: anOpenTypeFile strings: strings globalSubr: globalSubr from: aByteStream	| encoding charStrings charset privateDict localSubr |	encoding := self encodingFrom: aByteStream.	charStrings := self charStringsFrom: aByteStream.	charset := self charsetForGlyphs: charStrings size from: aByteStream.	privateDict := self privateDictFrom: aByteStream.	localSubr := self localSubrFor: privateDict from: aByteStream.	^self fontClass		name: fontName		file: anOpenTypeFile		topDict: self		encoding: encoding		charset: charset		privateDict: privateDict		charStrings: charStrings		strings: strings		localSubr: localSubr		globalSubr: globalSubr</body><body package="CompactFontFormat">localSubrFor: privateDict from: aByteStream	"&lt;Array&gt;"	| localOffset privateOffsetPair privateOffset |	localOffset := privateDict subrs.	localOffset isZero ifTrue: [		^#()].	privateOffsetPair := self private.	privateOffsetPair isEmpty ifTrue: [		^#()].	privateOffset := privateOffsetPair last.	aByteStream position: privateOffset + localOffset.	^Index fromBytes: aByteStream collect: [:data | Subroutine bytes: data]</body><body package="CompactFontFormat">privateDictFrom: aByteStream	| sizeAndOffset |	sizeAndOffset := self private.	sizeAndOffset isEmpty ifTrue: [		^PrivateDict new].	aByteStream position: sizeAndOffset last.	^PrivateDict fromBytes: (aByteStream next: sizeAndOffset first) readStream</body></methods><methods><class-id>Graphics.Fonts.CFF.TopDict class</class-id> <category>instance creation</category><body package="CompactFontFormat">fromBytes: aByteStream	| dict |	dict := super fromBytes: aByteStream.	dict operations first operator = (TwoByteDictOperator value: 30) ifTrue: [		^CIDTopDict operations: dict operations].	^dict</body></methods><methods><class-id>Graphics.Fonts.CFF.TopDict class</class-id> <category>test instances</category><body package="Fonts test resources">example	^TopDict operations: #(1 #a $x 'name')</body></methods><methods><class-id>Graphics.Fonts.CFF.CIDTopDict</class-id> <category>accessing</category><body package="CompactFontFormat">cIDCount	"&lt;Number&gt;"	| op |	op := self operations detect: [:operation | operation isExtended: 34] ifNone: [		^8720].	^op operands first</body><body package="CompactFontFormat">cIDFontRevision	"&lt;Number&gt;"	| op |	op := self operations detect: [:operation | operation isExtended: 32] ifNone: [		^0].	^op operands first</body><body package="CompactFontFormat">cIDFontType	"&lt;Number&gt;"	| op |	op := self operations detect: [:operation | operation isExtended: 33] ifNone: [		^0].	^op operands first</body><body package="CompactFontFormat">cIDFontVersion	"&lt;Number&gt;"	| op |	op := self operations detect: [:operation | operation isExtended: 31] ifNone: [		^0].	^op operands first</body><body package="CompactFontFormat">fdArray	"&lt;Number&gt;	Font DICT (FD) INDEX offset (0)"	| op |	op := self operations detect: [:operation | operation isExtended: 36] ifNone: [		^0].	^op operands first</body><body package="CompactFontFormat">fdSelect	"&lt;Number&gt;	FDSelect offset (0)"	| op |	op := self operations detect: [:operation | operation isExtended: 37] ifNone: [		^0].	^op operands first</body><body package="CompactFontFormat">fontClass	^CIDFont</body><body package="CompactFontFormat">fontName	"&lt;SID&gt;	FD FontName"	| op |	op := self operations detect: [:operation | operation isExtended: 38] ifNone: [		^0].	^op operands first</body><body package="CompactFontFormat">ros	"&lt;[SID SID Number]&gt;	Registry Ordering Supplement"	| op |	op := self operations detect: [:operation | operation isExtended: 30] ifNone: [		^#()].	^op operands</body><body package="CompactFontFormat">uIDBase	"&lt;Number&gt;"	| op |	op := self operations detect: [:operation | operation isExtended: 35] ifNone: [		^0].	^op operands first</body></methods><methods><class-id>Graphics.Fonts.CFF.CharstringOperator class</class-id> <category>accessing</category><body package="CompactFontFormat">namesDictionary	| dict |	dict := Dictionary new.	"0 reserverd"	dict at: 1 put: 'hstem'.	"2 reserverd"	dict at: 3 put: 'vstem'.	dict at: 4 put: 'vmoveto'.	dict at: 5 put: 'rlineto'.	dict at: 6 put: 'hlineto'.	dict at: 7 put: 'vlineto'.	dict at: 8 put: 'rrcurveto'.	"9 reserverd"	dict at: 10 put: 'callsubr'.	dict at: 11 put: 'return'.	"12 escape for TwoByteOperators"	"13 reserverd"	dict at: 14 put: 'endchar'.	"15 - 17 reserverd"	dict at: 18 put: 'hstemhm'.	dict at: 19 put: 'hintmask'.	dict at: 20 put: 'cntrmask'.	dict at: 21 put: 'rmoveto'.	dict at: 22 put: 'hmoveto'.	dict at: 23 put: 'vstemhm'.	dict at: 24 put: 'rcurveline'.	dict at: 25 put: 'rlinecurve'.	dict at: 26 put: 'vvcurveto'.	dict at: 27 put: 'hhcurveto'.	"28 shortint"	dict at: 29 put: 'callgsubr'.	dict at: 30 put: 'vhcurveto'.	dict at: 31 put: 'hvcurveto'.	^dict</body></methods><methods><class-id>Graphics.Fonts.CFF.CharstringOperator class</class-id> <category>test instances</category><body package="Fonts test resources">example	^CharstringOperator value: 1</body></methods><methods><class-id>Graphics.Fonts.OpenType.Cvt class</class-id> <category>accessing</category><body package="Fonts UI Support">documentation	^'This table contains a list of values that can be referenced by instructions. They can be used, among other things, to control characteristics for different glyphs. The length of the table must be an integral number of FWORD units.'</body><body package="OpenType">tag	^'cvt '</body><body package="Fonts UI Support">title	^'Control Value Table'</body></methods><methods><class-id>Graphics.Fonts.OpenType.Vdmx class</class-id> <category>accessing</category><body package="Fonts UI Support">documentation	^'The VDMX table relates to OpenType™ fonts with TrueType outlines. Under Windows, the usWinAscent and usWinDescent values from the ''OS/2'' table will be used to determine the maximum black height for a font at any given size. Windows calls this distance the Font Height. Because TrueType instructions can lead to Font Heights that differ from the actual scaled and rounded values, basing the Font Height strictly on the yMax and yMin can result in “lost pixels.” Windows will clip any pixels that extend above the yMax or below the yMin. In order to avoid grid fitting the entire font to determine the correct height, the VDMX table has been defined.'</body><body package="OpenType">tag	^'VDMX'</body><body package="Fonts UI Support">title	^'Vertical Device Metrics'</body></methods><methods><class-id>Graphics.Fonts.CFF.Font</class-id> <category>accessing</category><body package="CompactFontFormat">charStrings	"&lt;Array&gt;"	^charStrings ifNil: [#()]</body><body package="CompactFontFormat">charset	"&lt;Charset&gt;"	^charset</body><body package="Fonts UI Support">descriptionText	| wst |	wst := TextStream on: (String new: 200).	wst		emphasis: #(#bold);		nextPutAll: self name;		cr;		nextPutAll: 'top DICT';		emphasis: nil.	self topDict operations do: [:operation |		wst			crtab;			nextPutAllText: (self operationDescriptionFor: operation)].	wst		cr;		emphasis: #(#bold);		nextPutAll: 'Private DICT';		emphasis: nil.	self privateDict operations do: [:operation |		wst			crtab;			nextPutAllText: (self operationDescriptionFor: operation)].	^wst contents</body><body package="CompactFontFormat">encoding	"&lt;Encoding&gt;"	^encoding</body><body package="CompactFontFormat">familyName	"&lt;String&gt;	Used to locate screen fonts on Windows"	^self stringAt: self topDict familyName</body><body package="CompactFontFormat">file	^file</body><body package="CompactFontFormat">fontBBox	"&lt;Rectangle&gt;"	| array llx lly urx ury |	array := self topDict fontBBox.	llx := array at: 1.	lly := array at: 2.	urx := array at: 3.	ury := array at: 4.	^llx @ lly corner: urx @ ury</body><body package="CompactFontFormat">forceBold	"&lt;Boolean&gt;"	^self privateDict forceBold</body><body package="CompactFontFormat">globalSubr	"&lt;Array&gt;"	^globalSubr ifNil: [#()]</body><body package="Fonts UI Support">listIcon	^self class toolListIcon</body><body package="Fonts UI Support">listText	^self name asText allBold</body><body package="CompactFontFormat">localSubr	"&lt;Array&gt;"	^localSubr ifNil: [#()]</body><body package="CompactFontFormat">name	"&lt;String&gt;	the PostScript name of the font.	Used in PDF in the font resource dictionary.	This is not used to locate fonts on Windows where you have to use #familyName (see OpenType.File&gt;&gt;logfont:)"	^name</body><body package="CompactFontFormat">nameOfGlyph: aGlyphId	"&lt;String&gt;"	^self stringAt: (self charset sids at: aGlyphId + 1)</body><body package="Fonts UI Support">operationDescriptionFor: operation	"&lt;Text&gt;"	| wst |	wst := TextStream on: (String new: 200).	wst		emphasis: nil;		nextPutAll: operation operator name;		nextPutAll: ': ';		emphasis: #(#bold).	operation hasOneSID		ifTrue: [		wst			nextPutAll: (self stringAt: operation operand);			emphasis: nil;			nextPutAll: ' (';			nextPutAll: operation operand printString;			nextPut: $)]		ifFalse: [		operation operands do: [:arg | wst nextPutAll: arg printString] separatedBy: [			wst space]].	^wst contents</body><body package="CompactFontFormat">privateDict	"&lt;PrivateDict&gt;"	^privateDict</body><body package="CompactFontFormat">stringAt: integer	integer &lt;= 390 ifTrue: [		^self class standardStrings at: integer + 1].	^self strings at: integer - 390</body><body package="CompactFontFormat">strings	"&lt;Array&gt;"	^strings ifNil: [#()]</body><body package="CompactFontFormat">topDict	"&lt;TopDict&gt;"	^topDict</body><body package="Fonts UI Support">treeChildren	^Array with: (CharactersNode on: self)</body><body package="CompactFontFormat">unitsPerEm	"&lt;Integer&gt;	Valid range is from 16 to 16384. This value should be a power of 2 for fonts that have TrueType outlines"	^self file unitsPerEm</body><body package="Fonts UI">view	^Graphics.Fonts.TextView on: self descriptionText</body></methods><methods><class-id>Graphics.Fonts.CFF.Font</class-id> <category>initialize-release</category><body package="CompactFontFormat">initializeName: nameString file: anOpenTypeFile topDict: topDictTopDict encoding: encodingEncoding charset: charsetCharset privateDict: privateDictPrivateDict charStrings: charStringsArray strings: stringsArray localSubr: localSubrArray globalSubr: globalSubrArray	file := anOpenTypeFile.	name := nameString.	topDict := topDictTopDict.	encoding := encodingEncoding.	charset := charsetCharset.	privateDict := privateDictPrivateDict.	(charStringsArray notNil and: [	charStringsArray notEmpty]) ifTrue: [			charStrings := (Array withAll: charStringsArray) beImmutable].	(stringsArray notNil and: [	stringsArray notEmpty]) ifTrue: [			strings := (Array withAll: stringsArray) beImmutable].	(localSubrArray notNil and: [	localSubrArray notEmpty]) ifTrue: [			localSubr := (Array withAll: localSubrArray) beImmutable].	(globalSubrArray notNil and: [	globalSubrArray notEmpty]) ifTrue: [			globalSubr := (Array withAll: globalSubrArray) beImmutable]</body></methods><methods><class-id>Graphics.Fonts.CFF.Font</class-id> <category>printing</category><body package="CompactFontFormat">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'name' value: self name).	args add: (printer constant: 'topDict' value: self topDict).	args add: (printer constant: 'encoding' value: self encoding).	args add: (printer constant: 'charset' value: self charset).	args add: (printer constant: 'privateDict' value: self privateDict).	args add: (printer array: 'charStrings' value: self charStrings).	args add: (printer array: 'strings' value: self strings).	args add: (printer array: 'localSubr' value: self localSubr).	args add: (printer array: 'globalSubr' value: self globalSubr).	^printer printvalue: self arguments: args</body></methods><methods><class-id>Graphics.Fonts.CFF.Font</class-id> <category>testing</category><body package="Fonts UI Support">hasTreeChildren	^true</body></methods><methods><class-id>Graphics.Fonts.CFF.Font class</class-id> <category>accessing</category><body package="CompactFontFormat">standardStrings	"from Appendix A"	^#('.notdef' 'space' 'exclam' 'quotedbl' 'numbersign' 'dollar' 'percent' 'ampersand' 'quoteright' 'parenleft' 'parenright' 'asterisk' 'plus' 'comma' 'hyphen' 'period' 'slash' 'zero' 'one' 'two' 'three' 'four' 'five' 'six' 'seven' 'eight' 'nine' 'colon' 'semicolon' 'less' 'equal' 'greater' 'question' 'at' 'A' 'B' 'C' 'D' 'E' 'F' 'G' 'H' 'I' 'J' 'K' 'L' 'M' 'N' 'O' 'P' 'Q' 'R' 'S' 'T' 'U' 'V' 'W' 'X' 'Y' 'Z' 'bracketleft' 'backslash' 'bracketright' 'asciicircum' 'underscore' 'quoteleft' 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't' 'u' 'v' 'w' 'x' 'y' 'z' 'braceleft' 'bar' 'braceright' 'asciitilde' 'exclamdown' 'cent' 'sterling' 'fraction' 'yen' 'florin' 'section' 'currency' 'quotesingle' 'quotedblleft' 'guillemotleft' 'guilsinglleft' 'guilsinglright' 'fi' 'fl' 'endash' 'dagger' 'daggerdbl' 'periodcentered' 'paragraph' 'bullet' 'quotesinglbase' 'quotedblbase' 'quotedblright' 'guillemotright' 'ellipsis' 'perthousand' 'questiondown' 'grave' 'acute' 'circumflex' 'tilde' 'macron' 'breve' 'dotaccent' 'dieresis' 'ring' 'cedilla' 'hungarumlaut' 'ogonek' 'caron' 'emdash' 'AE' 'ordfeminine' 'Lslash' 'Oslash' 'OE' 'ordmasculine' 'ae' 'dotlessi' 'lslash' 'oslash' 'oe' 'germandbls' 'onesuperior' 'logicalnot' 'mu' 'trademark' 'Eth' 'onehalf' 'plusminus' 'Thorn' 'onequarter' 'divide' 'brokenbar' 'degree' 'thorn' 'threequarters' 'twosuperior' 'registered' 'minus' 'eth' 'multiply' 'threesuperior' 'copyright' 'Aacute' 'Acircumflex' 'Adieresis' 'Agrave' 'Aring' 'Atilde' 'Ccedilla' 'Eacute' 'Ecircumflex' 'Edieresis' 'Egrave' 'Iacute' 'Icircumflex' 'Idieresis' 'Igrave' 'Ntilde' 'Oacute' 'Ocircumflex' 'Odieresis' 'Ograve' 'Otilde' 'Scaron' 'Uacute' 'Ucircumflex' 'Udieresis' 'Ugrave' 'Yacute' 'Ydieresis' 'Zcaron' 'aacute' 'acircumflex' 'adieresis' 'agrave' 'aring' 'atilde' 'ccedilla' 'eacute' 'ecircumflex' 'edieresis' 'egrave' 'iacute' 'icircumflex' 'idieresis' 'igrave' 'ntilde' 'oacute' 'ocircumflex' 'odieresis' 'ograve' 'otilde' 'scaron' 'uacute' 'ucircumflex' 'udieresis' 'ugrave' 'yacute' 'ydieresis' 'zcaron' 'exclamsmall' 'Hungarumlautsmall' 'dollaroldstyle' 'dollarsuperior' 'ampersandsmall' 'Acutesmall' 'parenleftsuperior' 'parenrightsuperior' 'twodotenleader' 'onedotenleader' 'zerooldstyle' 'oneoldstyle' 'twooldstyle' 'threeoldstyle' 'fouroldstyle' 'fiveoldstyle' 'sixoldstyle' 'sevenoldstyle' 'eightoldstyle' 'nineoldstyle' 'commasuperior' 'threequartersemdash' 'periodsuperior' 'questionsmall' 'asuperior' 'bsuperior' 'centsuperior' 'dsuperior' 'esuperior' 'isuperior' 'lsuperior' 'msuperior' 'nsuperior' 'osuperior' 'rsuperior' 'ssuperior' 'tsuperior' 'ff' 'ffi' 'ffl' 'parenleftinferior' 'parenrightinferior' 'Circumflexsmall' 'hyphensuperior' 'Gravesmall' 'Asmall' 'Bsmall' 'Csmall' 'Dsmall' 'Esmall' 'Fsmall' 'Gsmall' 'Hsmall' 'Ismall' 'Jsmall' 'Ksmall' 'Lsmall' 'Msmall' 'Nsmall' 'Osmall' 'Psmall' 'Qsmall' 'Rsmall' 'Ssmall' 'Tsmall' 'Usmall' 'Vsmall' 'Wsmall' 'Xsmall' 'Ysmall' 'Zsmall' 'colonmonetary' 'onefitted' 'rupiah' 'Tildesmall' 'exclamdownsmall' 'centoldstyle' 'Lslashsmall' 'Scaronsmall' 'Zcaronsmall' 'Dieresissmall' 'Brevesmall' 'Caronsmall' 'Dotaccentsmall' 'Macronsmall' 'figuredash' 'hypheninferior' 'Ogoneksmall' 'Ringsmall' 'Cedillasmall' 'questiondownsmall' 'oneeighth' 'threeeighths' 'fiveeighths' 'seveneighths' 'onethird' 'twothirds' 'zerosuperior' 'foursuperior' 'fivesuperior' 'sixsuperior' 'sevensuperior' 'eightsuperior' 'ninesuperior' 'zeroinferior' 'oneinferior' 'twoinferior' 'threeinferior' 'fourinferior' 'fiveinferior' 'sixinferior' 'seveninferior' 'eightinferior' 'nineinferior' 'centinferior' 'dollarinferior' 'periodinferior' 'commainferior' 'Agravesmall' 'Aacutesmall' 'Acircumflexsmall' 'Atildesmall' 'Adieresissmall' 'Aringsmall' 'AEsmall' 'Ccedillasmall' 'Egravesmall' 'Eacutesmall' 'Ecircumflexsmall' 'Edieresissmall' 'Igravesmall' 'Iacutesmall' 'Icircumflexsmall' 'Idieresissmall' 'Ethsmall' 'Ntildesmall' 'Ogravesmall' 'Oacutesmall' 'Ocircumflexsmall' 'Otildesmall' 'Odieresissmall' 'OEsmall' 'Oslashsmall' 'Ugravesmall' 'Uacutesmall' 'Ucircumflexsmall' 'Udieresissmall' 'Yacutesmall' 'Thornsmall' 'Ydieresissmall' '001.000' '001.001' '001.002' '001.003' 'Black' 'Bold' 'Book' 'Light' 'Medium' 'Regular' 'Roman' 'Semibold')</body></methods><methods><class-id>Graphics.Fonts.CFF.Font class</class-id> <category>instance creation</category><body package="CompactFontFormat">name: nameString file: anOpenTypeFile topDict: topDictTopDict encoding: encodingEncoding charset: charsetCharset privateDict: privateDictPrivateDict charStrings: charStringsArray strings: stringsArray localSubr: localSubrArray globalSubr: globalSubrArray	| inst |	inst := self new.	inst		initializeName: nameString		file: anOpenTypeFile		topDict: topDictTopDict		encoding: encodingEncoding		charset: charsetCharset		privateDict: privateDictPrivateDict		charStrings: charStringsArray		strings: stringsArray		localSubr: localSubrArray		globalSubr: globalSubrArray.	^inst</body></methods><methods><class-id>Graphics.Fonts.CFF.CIDFont</class-id> <category>initialize-release</category><body package="CompactFontFormat">initializeName: nameString topDict: topDictTopDict encoding: encodingEncoding charset: charsetCharset privateDict: privateDictPrivateDict charStrings: charStringsArray strings: stringsArray localSubr: localSubrArray globalSubr: globalSubrArray fontDicts: fontDictsArray fdSelect: fdSelectValue	name := nameString.	topDict := topDictTopDict.	encoding := encodingEncoding.	charset := charsetCharset.	privateDict := privateDictPrivateDict.	(charStringsArray notNil and: [	charStringsArray notEmpty]) ifTrue: [			charStrings := (Array withAll: charStringsArray) beImmutable].	(stringsArray notNil and: [	stringsArray notEmpty]) ifTrue: [			strings := (Array withAll: stringsArray) beImmutable].	(localSubrArray notNil and: [	localSubrArray notEmpty]) ifTrue: [			localSubr := (Array withAll: localSubrArray) beImmutable].	(globalSubrArray notNil and: [	globalSubrArray notEmpty]) ifTrue: [			globalSubr := (Array withAll: globalSubrArray) beImmutable].	(fontDictsArray notNil and: [	fontDictsArray notEmpty]) ifTrue: [			fontDicts := (Array withAll: fontDictsArray) beImmutable].	fdSelect := fdSelectValue.	self beImmutable</body></methods><methods><class-id>Graphics.Fonts.CFF.CIDFont</class-id> <category>accessing</category><body package="CompactFontFormat">fdSelect	"&lt;Value&gt;	Glyph-Font mapping. Not implemented."	^fdSelect</body><body package="CompactFontFormat">fontDicts	"&lt;Array&gt;"	^fontDicts ifNil: [#()]</body></methods><methods><class-id>Graphics.Fonts.CFF.CIDFont</class-id> <category>printing</category><body package="CompactFontFormat">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'name' value: self name).	args add: (printer constant: 'topDict' value: self topDict).	args add: (printer constant: 'encoding' value: self encoding).	args add: (printer constant: 'charset' value: self charset).	args add: (printer constant: 'privateDict' value: self privateDict).	args add: (printer array: 'charStrings' value: self charStrings).	args add: (printer array: 'strings' value: self strings).	args add: (printer array: 'localSubr' value: self localSubr).	args add: (printer array: 'globalSubr' value: self globalSubr).	args add: (printer array: 'fontDicts' value: self fontDicts).	args add: (printer constant: 'fdSelect' value: self fdSelect).	^printer printvalue: self arguments: args</body></methods><methods><class-id>Graphics.Fonts.CFF.CIDFont class</class-id> <category>instance creation</category><body package="CompactFontFormat">name: nameString topDict: topDictTopDict encoding: encodingEncoding charset: charsetCharset privateDict: privateDictPrivateDict charStrings: charStringsArray strings: stringsArray localSubr: localSubrArray globalSubr: globalSubrArray fontDicts: fontDictsArray fdSelect: fdSelectValue	| inst |	inst := self new.	inst		initializeName: nameString		topDict: topDictTopDict		encoding: encodingEncoding		charset: charsetCharset		privateDict: privateDictPrivateDict		charStrings: charStringsArray		strings: stringsArray		localSubr: localSubrArray		globalSubr: globalSubrArray		fontDicts: fontDictsArray		fdSelect: fdSelectValue.	^inst</body></methods><methods><class-id>Graphics.Fonts.CFF.Subroutine</class-id> <category>accessing</category><body package="CompactFontFormat">bytes	"&lt;Array&gt;"	^bytes ifNil: [#()]</body></methods><methods><class-id>Graphics.Fonts.CFF.Subroutine</class-id> <category>printing</category><body package="CompactFontFormat">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer array: 'bytes' value: self bytes).	^printer printvalue: self arguments: args</body></methods><methods><class-id>Graphics.Fonts.CFF.Subroutine</class-id> <category>initialize-release</category><body package="CompactFontFormat">initializeBytes: bytesArray	(bytesArray notNil and: [	bytesArray notEmpty]) ifTrue: [			bytes := (Array withAll: bytesArray) beImmutable].	self beImmutable</body></methods><methods><class-id>Graphics.Fonts.CFF.Subroutine class</class-id> <category>instance creation</category><body package="CompactFontFormat">bytes: bytesArray	| inst |	inst := self new.	inst initializeBytes: bytesArray.	^inst</body></methods><methods><class-id>Graphics.Fonts.CFF.Subroutine class</class-id> <category>test instances</category><body package="Fonts test resources">example	^Subroutine bytes: #(1 #a $x 'name')</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable14</class-id> <category>accessing</category><body package="OpenType">glyphIndexAtUnicode: aUnicodeInteger	^self notYetImplemented</body><body package="OpenType">indexToCode	^self notYetImplemented</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable14</class-id> <category>reading</category><body package="OpenType">readFrom: uninterpretedBytes at: offset	^self notYetImplemented</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable14 class</class-id> <category>accessing</category><body package="OpenType">formatNumber	^14</body></methods><methods><class-id>Graphics.Fonts.OpenType.Font</class-id> <category>accessing</category><body package="OpenType">cff	"&lt;Cff&gt;"	^self tables at: 'CFF '</body><body package="OpenType">characterGlyphs	^self glyphs allButFirst: 1</body><body package="OpenType">cmap	^self tables at: 'cmap'</body><body package="OpenType">codeForGlyph: aGlyphId	^self cmap codeForGlyph: aGlyphId</body><body package="OpenType">createGlyphs	"&lt;Array of: Glyph&gt;"	| cffFont sids hMetrics list |	cffFont := self font.	sids := cffFont charset sids.	hMetrics := self hMetrics.	list := OrderedCollection new: self numGlyphs.	cffFont charStrings doWithIndex: [:charString :index |		| id sid string code hMetric |		id := index - 1.		sid := sids at: index.		string := cffFont stringAt: sid.		code := self codeForGlyph: id.		code = Character illegalCode ifTrue: [			code := nil].		hMetric := hMetrics at: index.		list add: (Glyph id: id name: string asSymbol charString: charString code: code hMetric: hMetric)].	^list asArray</body><body package="OpenType">descriptionText	| wst |	wst := TextStream on: (String new: 200).	wst nextPutAll: 'Tables:'.	self tables keysAndValuesDo: [:tag :table |		wst			crtab;			emphasis: #(#bold);			nextPutAll: tag;			emphasis: nil;			nextPutAll: ' [';			nextPutAll: (NumberPrintPolicy print: table contents size using: '#,##0') string;			nextPutAll: ' bytes]'].	^wst contents</body><body package="OpenType">entrySelector	"&lt;Integer&gt;	Log2(maximum power of 2 &lt;= numTables)."	^entrySelector</body><body package="OpenType">faceName	^self familyName</body><body package="OpenType">familyName	"&lt;String&gt;"	^self nameAt: 1</body><body package="Fonts UI Support">fileInfoText	| wst |	wst := TextStream on: ByteString new.	wst		emphasis: nil;		nextPutAll: 'sfntVersion: ';		emphasis: #(#bold);		nextPutAll: self sfntVersion;		cr;		emphasis: nil;		nextPutAll: 'numTables: ';		emphasis: #(#bold);		nextPutAll: self numTables printString;		cr;		emphasis: nil;		nextPutAll: 'searchRange: ';		emphasis: #(#bold);		nextPutAll: self searchRange printString;		cr;		emphasis: nil;		nextPutAll: 'entrySelector: ';		emphasis: #(#bold);		nextPutAll: self entrySelector printString;		cr;		emphasis: nil;		nextPutAll: 'rangeShift: ';		emphasis: #(#bold);		nextPutAll: self rangeShift printString;		yourself.	^wst contents</body><body package="OpenType">filename	"&lt;String&gt;	the file name of the Windows font file"	^filename</body><body package="OpenType">font	^self cff fontSet fonts first</body><body package="OpenType">forceBold	"&lt;Boolean&gt;"	^self cff forceBold</body><body package="OpenType">glyphAtUnicode: aUnicodeInteger	^(self glyphIndexAtUnicode: aUnicodeInteger) ifNotNil: [:gid | self glyphs at: gid + 1]</body><body package="OpenType">glyphIndexAtUnicode: aUnicodeInteger	"&lt;Integer | nil&gt;"	^self cmap glyphIndexAtUnicode: aUnicodeInteger</body><body package="OpenType">glyphNamed: aString	"&lt;Glyph | nil&gt;"	| symbol |	symbol := aString asSymbol.	^self glyphs detect: [:glyph | glyph name = symbol] ifNone: [nil]</body><body package="OpenType">glyphs	"&lt;Array of: Glyph&gt;"	^glyphs ifNil: [glyphs := self createGlyphs]</body><body package="OpenType">glyphsFor: aString	"&lt;SequenceableCollection of Glyph&gt;"	^aString asOrderedCollection collect: [:char | self glyphAtUnicode: char asInteger]</body><body package="OpenType">head	^self tables at: 'head'</body><body package="OpenType">header	^header ifNil: [header := FontHeader fromBytes: self head contents]</body><body package="OpenType">hhea	^self tables at: 'hhea'</body><body package="OpenType">hmtx	^self tables at: 'hmtx'</body><body package="OpenType">italicAngle	^self post italicAngle</body><body package="Fonts UI Support">listText	^('OpenType[', self numTables printString, ']') asText</body><body package="OpenType">maxp	^self tables at: 'maxp'</body><body package="OpenType">nameAt: nameId	"&lt;String | nil&gt;"	^self nameTable nameAt: nameId</body><body package="OpenType">nameOfGlyph: aGlyphId	"&lt;String&gt;"	^self cff nameOfGlyph: aGlyphId</body><body package="OpenType">nameTable	^self tables at: 'name'</body><body package="OpenType">numGlyphs	"&lt;Integer&gt;	Number of glyphs."	^self maxp numGlyphs</body><body package="OpenType">numTables	"&lt;Integer&gt;	Number of tables."	^numTables</body><body package="OpenType">numberOfHMetrics	"&lt;Integer&gt;	Number of horizontal metrics."	^self hhea numberOfHMetrics</body><body package="OpenType">os2	^self tables at: 'OS/2'</body><body package="OpenType">pdfFlags	| flags |	flags := super pdfFlags.	self forceBold ifTrue: [		flags := flags bitOr: 2r01000000000000000000].	^flags</body><body package="OpenType">platformTable	"&lt;CmapSubtable"	^self cmap platformTable</body><body package="OpenType">post	^self tables at: 'post'</body><body package="OpenType">postScriptName	^self nameAt: 6</body><body package="OpenType">rangeShift	"&lt;Integer&gt;	NumTables x 16-searchRange."	^rangeShift</body><body package="OpenType">searchRange	"&lt;Integer&gt;	(Maximum power of 2 &lt;= numTables) x 16."	^searchRange</body><body package="OpenType">setWidth	^self os2 widthClass / 10.0</body><body package="OpenType">sfntVersion	"&lt;String&gt; (Fixed ??!)	0x00010000 for version 1.0	OpenType fonts that contain TrueType outlines should use the value of 1.0 for the sfnt version. OpenType fonts containing CFF data should use the tag 'OTTO' as the sfnt version number.	NOTE: The Apple specification for TrueType fonts allows for 'true' and 'typ1' for sfnt version. These version tags should not be used for fonts which contain OpenType tables."	^sfntVersion</body><body package="OpenType">tables	"&lt;Dictionary key: String value: OpenTypeTable&gt;"	^tables ifNil: [Dictionary new beImmutable]</body><body package="OpenType">tables: aDictionary	tables := aDictionary</body><body package="OpenType">tabularGlyphFor: aCharacter	"&lt;Glyph&gt;"	| glyph |	glyph := self glyphAtUnicode: aCharacter asInteger.	^(self tabularVariantOf: glyph) ifNil: [glyph]</body><body package="OpenType">tabularGlyphIds	"&lt;SequenceableCollection of: Integer&gt;	cached GIDs"	^tabularGlyphIds ifNil: [		tabularGlyphIds := (0 to: self numGlyphs - 1) select: [:gid |			| name |			name := self nameOfGlyph: gid.			self tabularSuffixes anySatisfy: [:suffix | '*.' , suffix match: name]]]</body><body package="OpenType">tabularGlyphsFor: aString	"&lt;SequenceableCollection of Glyph&gt;"	^aString asOrderedCollection collect: [:char | self tabularGlyphFor: char]</body><body package="OpenType">tabularSuffixes	^#('tab' 'lt' 'fitted' 'tf')</body><body package="OpenType">tabularVariantOf: aGlyph	"&lt;Glyph | nil&gt;	Preliminary - This should make use of the GDEF table of the font"	self tabularSuffixes do: [:suffix |		(self glyphNamed: aGlyph name , '.' , suffix) ifNotNil: [:tabGlyph |			^tabGlyph]].	^nil</body><body package="Fonts UI Support">treeChildren	^self treeGroups</body><body package="Fonts UI Support">treeGroups	| list |	list := OrderedCollection new.	list add: (Tablegroup		name: 'Required'		tables: #(#Cmap #Head #Hhea #Hmtx #Maxp #Name #OS2 #Post)		file: self).	list add: (Tablegroup name: 'TrueType' tables: #(#Cvt #Fpgm #Glyf #Loca #Prep #Gasp) file: self).	list add: (Tablegroup name: 'PostScript' tables: #(#Cff #Vorg) file: self).	list add: (Tablegroup name: 'SVG' tables: #(#Svg) file: self).	list add: (Tablegroup name: 'Bitmaps' tables: #(#Ebdt #Eblc #Ebsc #Cbdt #Cblc) file: self).	list add: (Tablegroup		name: 'Advanced Typography'		tables: #(#Base #Gdef #Gpos #Gsub #Jstf #Math)		file: self).	list add: (Tablegroup		name: 'Other'		tables: #(#Dsig #Hdmx #Kern #Ltsh #Pclt #Vdmx #Vhea #Vmtx #Colr #Cpal)		file: self).	^list</body><body package="OpenType">weight	^self os2 weightClass</body></methods><methods><class-id>Graphics.Fonts.OpenType.Font</class-id> <category>testing</category><body package="OpenType">canDisplayUnencodedGlyphs	^true</body><body package="OpenType">hasTabularGlyphs	^self tabularGlyphIds notEmpty</body><body package="OpenType">isFixedPitch	^self post isFixedPitch</body><body package="OpenType">isItalic	^self os2 isItalic</body></methods><methods><class-id>Graphics.Fonts.OpenType.Font</class-id> <category>printing</category><body package="OpenType">printOn: stream	stream		nextPutAll: 'OpenTypePS(';		nextPutAll: self postScriptName;		nextPut: $)</body><body package="OpenType">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'sfntVersion' value: self sfntVersion).	args add: (printer constant: 'numTables' value: self numTables).	args add: (printer constant: 'searchRange' value: self searchRange).	args add: (printer constant: 'entrySelector' value: self entrySelector).	args add: (printer constant: 'rangeShift' value: self rangeShift).	args add: (printer dictionary: 'tables' value: self tables).	^printer printvalue: self arguments: args</body></methods><methods><class-id>Graphics.Fonts.OpenType.Font</class-id> <category>initialize-release</category><body package="OpenType">initializeFilename: fileString sfntVersion: sfntVersionString numTables: numTablesInteger searchRange: searchRangeInteger entrySelector: entrySelectorInteger rangeShift: rangeShiftInteger	filename := fileString.	sfntVersion := sfntVersionString.	numTables := numTablesInteger.	searchRange := searchRangeInteger.	entrySelector := entrySelectorInteger.	rangeShift := rangeShiftInteger</body></methods><methods><class-id>Graphics.Fonts.OpenType.Font</class-id> <category>accessing metrics</category><body package="OpenType">ascender	^self os2 typoAscender</body><body package="OpenType">capHeight	^self os2 capHeight</body><body package="OpenType">descender	^self os2 typoDescender</body><body package="OpenType">fontBBox	^self header fontBBox</body><body package="OpenType">hMetrics	"&lt;Array of: HorMetric&gt;	Horizontal metrics."	^self hmtx hMetrics</body><body package="OpenType">leftSideBearingOfUnicode: unicode	^(self glyphAtUnicode: unicode) ifNil: [0] ifNotNil: #leftSideBearing</body><body package="OpenType">stemV	^self os2 stemV</body><body package="OpenType">stringWidthOf: aString at: fontSize	| stringGlyphs |	stringGlyphs := self glyphsFor: aString.	^self widthOfGlyphs: stringGlyphs at: fontSize</body><body package="OpenType">tabularStringWidthOf: aString at: fontSize	| stringGlyphs |	stringGlyphs := self tabularGlyphsFor: aString.	^self widthOfGlyphs: stringGlyphs at: fontSize</body><body package="OpenType">underlinePosition	^self post psUnderlinePosition</body><body package="OpenType">underlineThickness	^self post underlineThickness</body><body package="OpenType">unitsPerEm	"&lt;Integer&gt;	Valid range is from 16 to 16384. This value should be a power of 2 for fonts that have TrueType outlines"	^self header unitsPerEm</body><body package="OpenType">widthOfGlyphs: stringGlyphs at: fontSize	| width |	width := stringGlyphs inject: 0 into: [:sum :glyph | sum + glyph width].	^width * fontSize / self unitsPerEm</body><body package="OpenType">widths	"&lt;Array of: Integer&gt;"	^self hMetrics collect: #advanceWidth</body><body package="OpenType">xHeight	^self os2 xHeight</body></methods><methods><class-id>Graphics.Fonts.OpenType.Font class</class-id> <category>instance creation</category><body package="OpenType">file: fileString contents: aByteArray	^self newFilename: fileString from: aByteArray readStream</body><body package="OpenType">filename: fileString sfntVersion: sfntVersionString numTables: numTablesInteger searchRange: searchRangeInteger entrySelector: entrySelectorInteger rangeShift: rangeShiftInteger	| inst |	inst := self new.	inst		initializeFilename: fileString		sfntVersion: sfntVersionString		numTables: numTablesInteger		searchRange: searchRangeInteger		entrySelector: entrySelectorInteger		rangeShift: rangeShiftInteger.	^inst</body><body package="OpenType">newFilename: fileString from: aBinaryReadStream	| sfntVersion numTables header tables inst |	sfntVersion := (aBinaryReadStream next: 4) asString.	header := UninterpretedBytes from: (aBinaryReadStream next: 8).	numTables := header unsignedShortAt: 1 bigEndian: true.	inst := self		filename: fileString		sfntVersion: sfntVersion		numTables: numTables		searchRange: (header unsignedShortAt: 3 bigEndian: true)		entrySelector: (header unsignedShortAt: 5 bigEndian: true)		rangeShift: (header unsignedShortAt: 7 bigEndian: true).	tables := OrderedDictionary new.	numTables timesRepeat: [		| table |		table := Table newFor: inst from: aBinaryReadStream.		tables at: table tag put: table].	inst tables: tables.	^inst</body><body package="OpenType">newFromFile: aFilename	| rst |	rst := aFilename readStream.	^[	rst binary.	self newFilename: aFilename tail from: rst] ensure: [rst close]</body></methods><methods><class-id>Graphics.Fonts.OpenType.Font class</class-id> <category>accessing</category><body package="Fonts UI Support">listIcon	^Graphics.Fonts.FontListIcons visualFor: #openType</body><body package="OpenType">loadFontFromWindowsFontDirectory: aFilenameString	| fontfile |	fontfile := (Filename expandEnvironmentIn: '$(windir)\fonts\' , aFilenameString) asFilename.	fontfile definitelyExists ifTrue: [		^self fontAt: aFilenameString ifAbsentPut: [self newFromFile: fontfile]].	Error raiseSignal: 'Schrift nicht gefunden: ' , aFilenameString</body><body package="Fonts UI Support">menuIndex	^3</body><body package="Fonts UI Support">menuLabel	^'&amp;OpenType'</body></methods><methods><class-id>Graphics.Fonts.OpenType.Font class</class-id> <category>dynamic references</category><body package="OpenType">dynamicallyReferencedClasses	^CmapSubtable allSubclasses , Table allSubclasses collect: [:cl | cl fullName asSymbol]</body></methods><methods><class-id>Graphics.Fonts.OpenType.Font class</class-id> <category>fonts</category><body package="Fonts test resources">freeSansBoldCOPYING"                    GNU GENERAL PUBLIC LICENSE                       Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. &lt;http://fsf.org/&gt; Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.                            Preamble  The GNU General Public License is a free, copyleft license forsoftware and other kinds of works.  The licenses for most software and other practical works are designedto take away your freedom to share and change the works.  By contrast,the GNU General Public License is intended to guarantee your freedom toshare and change all versions of a program--to make sure it remains freesoftware for all its users.  We, the Free Software Foundation, use theGNU General Public License for most of our software; it applies also toany other work released this way by its authors.  You can apply it toyour programs, too.  When we speak of free software, we are referring to freedom, notprice.  Our General Public Licenses are designed to make sure that youhave the freedom to distribute copies of free software (and charge forthem if you wish), that you receive source code or can get it if youwant it, that you can change the software or use pieces of it in newfree programs, and that you know you can do these things.  To protect your rights, we need to prevent others from denying youthese rights or asking you to surrender the rights.  Therefore, you havecertain responsibilities if you distribute copies of the software, or ifyou modify it: responsibilities to respect the freedom of others.  For example, if you distribute copies of such a program, whethergratis or for a fee, you must pass on to the recipients the samefreedoms that you received.  You must make sure that they, too, receiveor can get the source code.  And you must show them these terms so theyknow their rights.  Developers that use the GNU GPL protect your rights with two steps:(1) assert copyright on the software, and (2) offer you this Licensegiving you legal permission to copy, distribute and/or modify it.  For the developers' and authors' protection, the GPL clearly explainsthat there is no warranty for this free software.  For both users' andauthors' sake, the GPL requires that modified versions be marked aschanged, so that their problems will not be attributed erroneously toauthors of previous versions.  Some devices are designed to deny users access to install or runmodified versions of the software inside them, although the manufacturercan do so.  This is fundamentally incompatible with the aim ofprotecting users' freedom to change the software.  The systematicpattern of such abuse occurs in the area of products for individuals touse, which is precisely where it is most unacceptable.  Therefore, wehave designed this version of the GPL to prohibit the practice for thoseproducts.  If such problems arise substantially in other domains, westand ready to extend this provision to those domains in future versionsof the GPL, as needed to protect the freedom of users.  Finally, every program is threatened constantly by software patents.States should not allow patents to restrict development and use ofsoftware on general-purpose computers, but in those that do, we wish toavoid the special danger that patents applied to a free program couldmake it effectively proprietary.  To prevent this, the GPL assures thatpatents cannot be used to render the program non-free.  The precise terms and conditions for copying, distribution andmodification follow.                       TERMS AND CONDITIONS  0. Definitions.  'This License' refers to version 3 of the GNU General Public License.  'Copyright' also means copyright-like laws that apply to other kinds ofworks, such as semiconductor masks.  'The Program' refers to any copyrightable work licensed under thisLicense.  Each licensee is addressed as 'you'.  'Licensees' and'recipients' may be individuals or organizations.  To 'modify' a work means to copy from or adapt all or part of the workin a fashion requiring copyright permission, other than the making of anexact copy.  The resulting work is called a 'modified version' of theearlier work or a work 'based on' the earlier work.  A 'covered work' means either the unmodified Program or a work basedon the Program.  To 'propagate' a work means to do anything with it that, withoutpermission, would make you directly or secondarily liable forinfringement under applicable copyright law, except executing it on acomputer or modifying a private copy.  Propagation includes copying,distribution (with or without modification), making available to thepublic, and in some countries other activities as well.  To 'convey' a work means any kind of propagation that enables otherparties to make or receive copies.  Mere interaction with a user througha computer network, with no transfer of a copy, is not conveying.  An interactive user interface displays 'Appropriate Legal Notices'to the extent that it includes a convenient and prominently visiblefeature that (1) displays an appropriate copyright notice, and (2)tells the user that there is no warranty for the work (except to theextent that warranties are provided), that licensees may convey thework under this License, and how to view a copy of this License.  Ifthe interface presents a list of user commands or options, such as amenu, a prominent item in the list meets this criterion.  1. Source Code.  The 'source code' for a work means the preferred form of the workfor making modifications to it.  'Object code' means any non-sourceform of a work.  A 'Standard Interface' means an interface that either is an officialstandard defined by a recognized standards body, or, in the case ofinterfaces specified for a particular programming language, one thatis widely used among developers working in that language.  The 'System Libraries' of an executable work include anything, otherthan the work as a whole, that (a) is included in the normal form ofpackaging a Major Component, but which is not part of that MajorComponent, and (b) serves only to enable use of the work with thatMajor Component, or to implement a Standard Interface for which animplementation is available to the public in source code form.  A'Major Component', in this context, means a major essential component(kernel, window system, and so on) of the specific operating system(if any) on which the executable work runs, or a compiler used toproduce the work, or an object code interpreter used to run it.  The 'Corresponding Source' for a work in object code form means allthe source code needed to generate, install, and (for an executablework) run the object code and to modify the work, including scripts tocontrol those activities.  However, it does not include the work'sSystem Libraries, or general-purpose tools or generally available freeprograms which are used unmodified in performing those activities butwhich are not part of the work.  For example, Corresponding Sourceincludes interface definition files associated with source files forthe work, and the source code for shared libraries and dynamicallylinked subprograms that the work is specifically designed to require,such as by intimate data communication or control flow between thosesubprograms and other parts of the work.  The Corresponding Source need not include anything that userscan regenerate automatically from other parts of the CorrespondingSource.  The Corresponding Source for a work in source code form is thatsame work.  2. Basic Permissions.  All rights granted under this License are granted for the term ofcopyright on the Program, and are irrevocable provided the statedconditions are met.  This License explicitly affirms your unlimitedpermission to run the unmodified Program.  The output from running acovered work is covered by this License only if the output, given itscontent, constitutes a covered work.  This License acknowledges yourrights of fair use or other equivalent, as provided by copyright law.  You may make, run and propagate covered works that you do notconvey, without conditions so long as your license otherwise remainsin force.  You may convey covered works to others for the sole purposeof having them make modifications exclusively for you, or provide youwith facilities for running those works, provided that you comply withthe terms of this License in conveying all material for which you donot control copyright.  Those thus making or running the covered worksfor you must do so exclusively on your behalf, under your directionand control, on terms that prohibit them from making any copies ofyour copyrighted material outside their relationship with you.  Conveying under any other circumstances is permitted solely underthe conditions stated below.  Sublicensing is not allowed; section 10makes it unnecessary.  3. Protecting Users' Legal Rights From Anti-Circumvention Law.  No covered work shall be deemed part of an effective technologicalmeasure under any applicable law fulfilling obligations under article11 of the WIPO copyright treaty adopted on 20 December 1996, orsimilar laws prohibiting or restricting circumvention of suchmeasures.  When you convey a covered work, you waive any legal power to forbidcircumvention of technological measures to the extent such circumventionis effected by exercising rights under this License with respect tothe covered work, and you disclaim any intention to limit operation ormodification of the work as a means of enforcing, against the work'susers, your or third parties' legal rights to forbid circumvention oftechnological measures.  4. Conveying Verbatim Copies.  You may convey verbatim copies of the Program's source code as youreceive it, in any medium, provided that you conspicuously andappropriately publish on each copy an appropriate copyright notice;keep intact all notices stating that this License and anynon-permissive terms added in accord with section 7 apply to the code;keep intact all notices of the absence of any warranty; and give allrecipients a copy of this License along with the Program.  You may charge any price or no price for each copy that you convey,and you may offer support or warranty protection for a fee.  5. Conveying Modified Source Versions.  You may convey a work based on the Program, or the modifications toproduce it from the Program, in the form of source code under theterms of section 4, provided that you also meet all of these conditions:    a) The work must carry prominent notices stating that you modified    it, and giving a relevant date.    b) The work must carry prominent notices stating that it is    released under this License and any conditions added under section    7.  This requirement modifies the requirement in section 4 to    'keep intact all notices'.    c) You must license the entire work, as a whole, under this    License to anyone who comes into possession of a copy.  This    License will therefore apply, along with any applicable section 7    additional terms, to the whole of the work, and all its parts,    regardless of how they are packaged.  This License gives no    permission to license the work in any other way, but it does not    invalidate such permission if you have separately received it.    d) If the work has interactive user interfaces, each must display    Appropriate Legal Notices; however, if the Program has interactive    interfaces that do not display Appropriate Legal Notices, your    work need not make them do so.  A compilation of a covered work with other separate and independentworks, which are not by their nature extensions of the covered work,and which are not combined with it such as to form a larger program,in or on a volume of a storage or distribution medium, is called an'aggregate' if the compilation and its resulting copyright are notused to limit the access or legal rights of the compilation's usersbeyond what the individual works permit.  Inclusion of a covered workin an aggregate does not cause this License to apply to the otherparts of the aggregate.  6. Conveying Non-Source Forms.  You may convey a covered work in object code form under the termsof sections 4 and 5, provided that you also convey themachine-readable Corresponding Source under the terms of this License,in one of these ways:    a) Convey the object code in, or embodied in, a physical product    (including a physical distribution medium), accompanied by the    Corresponding Source fixed on a durable physical medium    customarily used for software interchange.    b) Convey the object code in, or embodied in, a physical product    (including a physical distribution medium), accompanied by a    written offer, valid for at least three years and valid for as    long as you offer spare parts or customer support for that product    model, to give anyone who possesses the object code either (1) a    copy of the Corresponding Source for all the software in the    product that is covered by this License, on a durable physical    medium customarily used for software interchange, for a price no    more than your reasonable cost of physically performing this    conveying of source, or (2) access to copy the    Corresponding Source from a network server at no charge.    c) Convey individual copies of the object code with a copy of the    written offer to provide the Corresponding Source.  This    alternative is allowed only occasionally and noncommercially, and    only if you received the object code with such an offer, in accord    with subsection 6b.    d) Convey the object code by offering access from a designated    place (gratis or for a charge), and offer equivalent access to the    Corresponding Source in the same way through the same place at no    further charge.  You need not require recipients to copy the    Corresponding Source along with the object code.  If the place to    copy the object code is a network server, the Corresponding Source    may be on a different server (operated by you or a third party)    that supports equivalent copying facilities, provided you maintain    clear directions next to the object code saying where to find the    Corresponding Source.  Regardless of what server hosts the    Corresponding Source, you remain obligated to ensure that it is    available for as long as needed to satisfy these requirements.    e) Convey the object code using peer-to-peer transmission, provided    you inform other peers where the object code and Corresponding    Source of the work are being offered to the general public at no    charge under subsection 6d.  A separable portion of the object code, whose source code is excludedfrom the Corresponding Source as a System Library, need not beincluded in conveying the object code work.  A 'User Product' is either (1) a 'consumer product', which means anytangible personal property which is normally used for personal, family,or household purposes, or (2) anything designed or sold for incorporationinto a dwelling.  In determining whether a product is a consumer product,doubtful cases shall be resolved in favor of coverage.  For a particularproduct received by a particular user, 'normally used' refers to atypical or common use of that class of product, regardless of the statusof the particular user or of the way in which the particular useractually uses, or expects or is expected to use, the product.  A productis a consumer product regardless of whether the product has substantialcommercial, industrial or non-consumer uses, unless such uses representthe only significant mode of use of the product.  'Installation Information' for a User Product means any methods,procedures, authorization keys, or other information required to installand execute modified versions of a covered work in that User Product froma modified version of its Corresponding Source.  The information mustsuffice to ensure that the continued functioning of the modified objectcode is in no case prevented or interfered with solely becausemodification has been made.  If you convey an object code work under this section in, or with, orspecifically for use in, a User Product, and the conveying occurs aspart of a transaction in which the right of possession and use of theUser Product is transferred to the recipient in perpetuity or for afixed term (regardless of how the transaction is characterized), theCorresponding Source conveyed under this section must be accompaniedby the Installation Information.  But this requirement does not applyif neither you nor any third party retains the ability to installmodified object code on the User Product (for example, the work hasbeen installed in ROM).  The requirement to provide Installation Information does not include arequirement to continue to provide support service, warranty, or updatesfor a work that has been modified or installed by the recipient, or forthe User Product in which it has been modified or installed.  Access to anetwork may be denied when the modification itself materially andadversely affects the operation of the network or violates the rules andprotocols for communication across the network.  Corresponding Source conveyed, and Installation Information provided,in accord with this section must be in a format that is publiclydocumented (and with an implementation available to the public insource code form), and must require no special password or key forunpacking, reading or copying.  7. Additional Terms.  'Additional permissions' are terms that supplement the terms of thisLicense by making exceptions from one or more of its conditions.Additional permissions that are applicable to the entire Program shallbe treated as though they were included in this License, to the extentthat they are valid under applicable law.  If additional permissionsapply only to part of the Program, that part may be used separatelyunder those permissions, but the entire Program remains governed bythis License without regard to the additional permissions.  When you convey a copy of a covered work, you may at your optionremove any additional permissions from that copy, or from any part ofit.  (Additional permissions may be written to require their ownremoval in certain cases when you modify the work.)  You may placeadditional permissions on material, added by you to a covered work,for which you have or can give appropriate copyright permission.  Notwithstanding any other provision of this License, for material youadd to a covered work, you may (if authorized by the copyright holders ofthat material) supplement the terms of this License with terms:    a) Disclaiming warranty or limiting liability differently from the    terms of sections 15 and 16 of this License; or    b) Requiring preservation of specified reasonable legal notices or    author attributions in that material or in the Appropriate Legal    Notices displayed by works containing it; or    c) Prohibiting misrepresentation of the origin of that material, or    requiring that modified versions of such material be marked in    reasonable ways as different from the original version; or    d) Limiting the use for publicity purposes of names of licensors or    authors of the material; or    e) Declining to grant rights under trademark law for use of some    trade names, trademarks, or service marks; or    f) Requiring indemnification of licensors and authors of that    material by anyone who conveys the material (or modified versions of    it) with contractual assumptions of liability to the recipient, for    any liability that these contractual assumptions directly impose on    those licensors and authors.  All other non-permissive additional terms are considered 'furtherrestrictions' within the meaning of section 10.  If the Program as youreceived it, or any part of it, contains a notice stating that it isgoverned by this License along with a term that is a furtherrestriction, you may remove that term.  If a license document containsa further restriction but permits relicensing or conveying under thisLicense, you may add to a covered work material governed by the termsof that license document, provided that the further restriction doesnot survive such relicensing or conveying.  If you add terms to a covered work in accord with this section, youmust place, in the relevant source files, a statement of theadditional terms that apply to those files, or a notice indicatingwhere to find the applicable terms.  Additional terms, permissive or non-permissive, may be stated in theform of a separately written license, or stated as exceptions;the above requirements apply either way.  8. Termination.  You may not propagate or modify a covered work except as expresslyprovided under this License.  Any attempt otherwise to propagate ormodify it is void, and will automatically terminate your rights underthis License (including any patent licenses granted under the thirdparagraph of section 11).  However, if you cease all violation of this License, then yourlicense from a particular copyright holder is reinstated (a)provisionally, unless and until the copyright holder explicitly andfinally terminates your license, and (b) permanently, if the copyrightholder fails to notify you of the violation by some reasonable meansprior to 60 days after the cessation.  Moreover, your license from a particular copyright holder isreinstated permanently if the copyright holder notifies you of theviolation by some reasonable means, this is the first time you havereceived notice of violation of this License (for any work) from thatcopyright holder, and you cure the violation prior to 30 days afteryour receipt of the notice.  Termination of your rights under this section does not terminate thelicenses of parties who have received copies or rights from you underthis License.  If your rights have been terminated and not permanentlyreinstated, you do not qualify to receive new licenses for the samematerial under section 10.  9. Acceptance Not Required for Having Copies.  You are not required to accept this License in order to receive orrun a copy of the Program.  Ancillary propagation of a covered workoccurring solely as a consequence of using peer-to-peer transmissionto receive a copy likewise does not require acceptance.  However,nothing other than this License grants you permission to propagate ormodify any covered work.  These actions infringe copyright if you donot accept this License.  Therefore, by modifying or propagating acovered work, you indicate your acceptance of this License to do so.  10. Automatic Licensing of Downstream Recipients.  Each time you convey a covered work, the recipient automaticallyreceives a license from the original licensors, to run, modify andpropagate that work, subject to this License.  You are not responsiblefor enforcing compliance by third parties with this License.  An 'entity transaction' is a transaction transferring control of anorganization, or substantially all assets of one, or subdividing anorganization, or merging organizations.  If propagation of a coveredwork results from an entity transaction, each party to thattransaction who receives a copy of the work also receives whateverlicenses to the work the party's predecessor in interest had or couldgive under the previous paragraph, plus a right to possession of theCorresponding Source of the work from the predecessor in interest, ifthe predecessor has it or can get it with reasonable efforts.  You may not impose any further restrictions on the exercise of therights granted or affirmed under this License.  For example, you maynot impose a license fee, royalty, or other charge for exercise ofrights granted under this License, and you may not initiate litigation(including a cross-claim or counterclaim in a lawsuit) alleging thatany patent claim is infringed by making, using, selling, offering forsale, or importing the Program or any portion of it.  11. Patents.  A 'contributor' is a copyright holder who authorizes use under thisLicense of the Program or a work on which the Program is based.  Thework thus licensed is called the contributor's 'contributor version'.  A contributor's 'essential patent claims' are all patent claimsowned or controlled by the contributor, whether already acquired orhereafter acquired, that would be infringed by some manner, permittedby this License, of making, using, or selling its contributor version,but do not include claims that would be infringed only as aconsequence of further modification of the contributor version.  Forpurposes of this definition, 'control' includes the right to grantpatent sublicenses in a manner consistent with the requirements ofthis License.  Each contributor grants you a non-exclusive, worldwide, royalty-freepatent license under the contributor's essential patent claims, tomake, use, sell, offer for sale, import and otherwise run, modify andpropagate the contents of its contributor version.  In the following three paragraphs, a 'patent license' is any expressagreement or commitment, however denominated, not to enforce a patent(such as an express permission to practice a patent or covenant not tosue for patent infringement).  To 'grant' such a patent license to aparty means to make such an agreement or commitment not to enforce apatent against the party.  If you convey a covered work, knowingly relying on a patent license,and the Corresponding Source of the work is not available for anyoneto copy, free of charge and under the terms of this License, through apublicly available network server or other readily accessible means,then you must either (1) cause the Corresponding Source to be soavailable, or (2) arrange to deprive yourself of the benefit of thepatent license for this particular work, or (3) arrange, in a mannerconsistent with the requirements of this License, to extend the patentlicense to downstream recipients.  'Knowingly relying' means you haveactual knowledge that, but for the patent license, your conveying thecovered work in a country, or your recipient's use of the covered workin a country, would infringe one or more identifiable patents in thatcountry that you have reason to believe are valid.  If, pursuant to or in connection with a single transaction orarrangement, you convey, or propagate by procuring conveyance of, acovered work, and grant a patent license to some of the partiesreceiving the covered work authorizing them to use, propagate, modifyor convey a specific copy of the covered work, then the patent licenseyou grant is automatically extended to all recipients of the coveredwork and works based on it.  A patent license is 'discriminatory' if it does not include withinthe scope of its coverage, prohibits the exercise of, or isconditioned on the non-exercise of one or more of the rights that arespecifically granted under this License.  You may not convey a coveredwork if you are a party to an arrangement with a third party that isin the business of distributing software, under which you make paymentto the third party based on the extent of your activity of conveyingthe work, and under which the third party grants, to any of theparties who would receive the covered work from you, a discriminatorypatent license (a) in connection with copies of the covered workconveyed by you (or copies made from those copies), or (b) primarilyfor and in connection with specific products or compilations thatcontain the covered work, unless you entered into that arrangement,or that patent license was granted, prior to 28 March 2007.  Nothing in this License shall be construed as excluding or limitingany implied license or other defenses to infringement that mayotherwise be available to you under applicable patent law.  12. No Surrender of Others' Freedom.  If conditions are imposed on you (whether by court order, agreement orotherwise) that contradict the conditions of this License, they do notexcuse you from the conditions of this License.  If you cannot convey acovered work so as to satisfy simultaneously your obligations under thisLicense and any other pertinent obligations, then as a consequence you maynot convey it at all.  For example, if you agree to terms that obligate youto collect a royalty for further conveying from those to whom you conveythe Program, the only way you could satisfy both those terms and thisLicense would be to refrain entirely from conveying the Program.  13. Use with the GNU Affero General Public License.  Notwithstanding any other provision of this License, you havepermission to link or combine any covered work with a work licensedunder version 3 of the GNU Affero General Public License into a singlecombined work, and to convey the resulting work.  The terms of thisLicense will continue to apply to the part which is the covered work,but the special requirements of the GNU Affero General Public License,section 13, concerning interaction through a network will apply to thecombination as such.  14. Revised Versions of this License.  The Free Software Foundation may publish revised and/or new versions ofthe GNU General Public License from time to time.  Such new versions willbe similar in spirit to the present version, but may differ in detail toaddress new problems or concerns.  Each version is given a distinguishing version number.  If theProgram specifies that a certain numbered version of the GNU GeneralPublic License 'or any later version' applies to it, you have theoption of following the terms and conditions either of that numberedversion or of any later version published by the Free SoftwareFoundation.  If the Program does not specify a version number of theGNU General Public License, you may choose any version ever publishedby the Free Software Foundation.  If the Program specifies that a proxy can decide which futureversions of the GNU General Public License can be used, that proxy'spublic statement of acceptance of a version permanently authorizes youto choose that version for the Program.  Later license versions may give you additional or differentpermissions.  However, no additional obligations are imposed on anyauthor or copyright holder as a result of your choosing to follow alater version.  15. Disclaimer of Warranty.  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BYAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHTHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM 'AS IS' WITHOUT WARRANTYOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULARPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAMIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OFALL NECESSARY SERVICING, REPAIR OR CORRECTION.  16. Limitation of Liability.  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITINGWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYSTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANYGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THEUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OFDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRDPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OFSUCH DAMAGES.  17. Interpretation of Sections 15 and 16.  If the disclaimer of warranty and limitation of liability providedabove cannot be given local legal effect according to their terms,reviewing courts shall apply local law that most closely approximatesan absolute waiver of all civil liability in connection with theProgram, unless a warranty or assumption of liability accompanies acopy of the Program in return for a fee.                     END OF TERMS AND CONDITIONS            How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatestpossible use to the public, the best way to achieve this is to make itfree software which everyone can redistribute and change under these terms.  To do so, attach the following notices to the program.  It is safestto attach them to the start of each source file to most effectivelystate the exclusion of warranty; and each file should have at leastthe 'copyright' line and a pointer to where the full notice is found.    &lt;one line to give the program's name and a brief idea of what it does.&gt;    Copyright (C) &lt;year&gt;  &lt;name of author&gt;    This program is free software: you can redistribute it and/or modify    it under the terms of the GNU General Public License as published by    the Free Software Foundation, either version 3 of the License, or    (at your option) any later version.    This program is distributed in the hope that it will be useful,    but WITHOUT ANY WARRANTY; without even the implied warranty of    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the    GNU General Public License for more details.    You should have received a copy of the GNU General Public License    along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.Also add information on how to contact you by electronic and paper mail.  If the program does terminal interaction, make it output a shortnotice like this when it starts in an interactive mode:    &lt;program&gt;  Copyright (C) &lt;year&gt;  &lt;name of author&gt;    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.    This is free software, and you are welcome to redistribute it    under certain conditions; type `show c' for details.The hypothetical commands `show w' and `show c' should show the appropriateparts of the General Public License.  Of course, your program's commandsmight be different; for a GUI interface, you would use an 'about box'.  You should also get your employer (if you work as a programmer) or school,if any, to sign a 'copyright disclaimer' for the program, if necessary.For more information on this, and how to apply and follow the GNU GPL, see&lt;http://www.gnu.org/licenses/&gt;.  The GNU General Public License does not permit incorporating your programinto proprietary programs.  If your program is a subroutine library, youmay consider it more useful to permit linking proprietary applications withthe library.  If this is what you want to do, use the GNU Lesser GeneralPublic License instead of this License.  But first, please read&lt;http://www.gnu.org/philosophy/why-not-lgpl.html&gt;."</body></methods><methods><class-id>Graphics.Fonts.OpenType.Font class</class-id> <category>workspace tools</category><body package="Fonts Development">importAllIn: aDirectoryName into: aPackagename	| dir |	dir := aDirectoryName asFilename.	dir directoryContents do: [:baseFilenameString |		self importFile: (dir construct: baseFilenameString) in: aPackagename]</body><body package="Fonts Development">importInstalledWindowsFont: aFontBaseFilename in: aPackagename	| directory |	directory := (Filename expandEnvironmentIn: '$(windir)\fonts') asFilename.	self importFile: (directory construct: aFontBaseFilename , '.otf') in: aPackagename</body></methods><methods><class-id>Graphics.Fonts.OpenType.Font class</class-id> <category>actions</category><body package="Fonts Development">import: aFilename as: aFontSymbol in: aPackageName	"Add an OpenType installed font as static resource method"	"self import: 'AGaramondPro-Regular.otf' asFilename as: #GaramondProRegular in: 'OpenType' "	"Fonts.Font fontAt: #GaramondProRegular"	| selector methodSource change |	selector := aFontSymbol asString.	selector at: 1 put: selector first asLowercase.	methodSource := selector , '	&lt;font: ' , aFontSymbol printString , '&gt;	^self		file: ' , aFilename tail printString , '		contents: ' , aFilename contentsOfEntireBinaryFile asSource.	change := Refactory.Browser.AddMethodChange		compile: (Refactory.Browser.RBParser parseMethod: methodSource) formattedCode		in: self class		classified: #fonts.	change package: (Store.Registry packageNamed: aPackageName).	Refactory.Browser.RefactoryChangeManager instance performChange: change.	Fonts.Font resetLoadedFonts</body><body package="Fonts Development">importFile: aFilename in: aPackagename	self		import: aFilename		as: ((aFilename tail readStream upTo: $.) select: [:char | char isAlphaNumeric]) asSymbol		in: aPackagename</body></methods><methods><class-id>Graphics.Fonts.OpenType.OS2</class-id> <category>accessing</category><body package="OpenType">avgCharWidth	"Format: 	2-byte signed shortUnits: 			Pels / em unitsTitle: 			Average weighted escapement.Description: 	The Average Character Width parameter specifies the arithmetic average of the escapement (width) of all non-zero width glyphs in the font.Comments: 		The value for xAvgCharWidth is calculated by obtaining the arithmetic average of the width of all non-zero width glyphs in the font. 				Furthermore, it is strongly recommended that implementers do not rely on this value for computing layout for lines of text. 				Especially, for cases where complex scripts are used."	^self bytes shortAt: 3 bigEndian: true</body><body package="OpenType">capHeight	"Format: 	SHORTDescription: 	This metric specifies the distance between the baseline and the approximate height of uppercase letters measured in FUnits. This value would normally be specified by a type designer but in situations where that is not possible, for example when a legacy font is being converted, the value may be set equal to the top of the unscaled and unhinted glyph bounding box of the glyph encoded at U+0048 (LATIN CAPITAL LETTER H). If no glyph is encoded in this position the field should be set to 0.This metric, if specified, can be used in systems that specify type size by capital height measured in millimeters. It can also be used as an alignment metric; the top of a drop capital, for instance, can be aligned to the sCapHeight metric of the first line of text. "	^self bytes shortAt: 89 bigEndian: true</body><body package="Fonts UI Support">descriptionText	| wst |	wst := TextStream on: (String new: 200).	wst		nextPutAll: '(not fully implemented)';		cr.	self printAttribute: #version on: wst.	self printAttribute: #avgCharWidth on: wst.	self printAttribute: #weightClass on: wst.	self printAttribute: #widthClass on: wst.	self printAttribute: #fsType on: wst.	self printAttribute: #sFamilyClass on: wst.	self printAttribute: #fsSelection on: wst.	self printAttribute: #firstCharIndex on: wst.	self printAttribute: #typoAscender on: wst.	self printAttribute: #typoDescender on: wst.	self printAttribute: #xHeight on: wst.	self printAttribute: #capHeight on: wst.	wst		cr;		cr;		emphasis: nil;		nextPutAll: 'Bytes: ';		nextPutAll: self contents printString.	^wst contents</body><body package="OpenType">firstCharIndex	"Format: 	2-byte USHORTDescription: 	The minimum Unicode index (character code) in this font, according to the cmap subtable for platform ID 3 and platform- specific encoding ID 0 or 1. For most fonts supporting Win-ANSI or other character sets, this value would be 0x0020. This field cannot represent supplementary character values (codepoints greater than 0xFFFF). Fonts that support supplementary characters should set the value in this field to 0xFFFF if the minimum index value is a supplementary character."	^self bytes unsignedShortAt: 65 bigEndian: true</body><body package="OpenType">fsSelection	"Format: 	2-byte bit field.Title: 	Font selection flags.Description: 	Contains information concerning the nature of the font patterns, as follows:Bit # 	macStyle bit 	C definition 			Description0 		bit 1 			ITALIC 				Font contains Italic characters, otherwise they are upright.1 	  					UNDERSCORE 		Characters are underscored.2 	  					NEGATIVE 			Characters have their foreground and background reversed.3 	  					OUTLINED 			Outline (hollow) characters, otherwise they are solid.4 	  					STRIKEOUT 		Characters are overstruck.5 		bit 0 			BOLD 				Characters are emboldened.6 	  					REGULAR 			Characters are in the standard weight/style for the font.Comments: 	All undefined bits must be zero.This field contains information on the original design of the font. Bits 0 &amp; 5 can be used to determine if the font was designed with these features or whether some type of machine simulation was performed on the font to achieve this appearance. Bits 1-4 are rarely used bits that indicate the font is primarily a decorative or special purpose font.If bit 6 is set, then bits 0 and 5 must be clear, else the behavior is undefined. As noted above, the settings of bits 0 and 1 must be reflected in the macStyle bits in the 'head' table. While bit 6 on implies that bits 0 and 1 of macStyle are clear (along with bits 0 and 5 of fsSelection), the reverse is not true. Bits 0 and 1 of macStyle (and 0 and 5 of fsSelection) may be clear and that does not give any indication of whether or not bit 6 of fsSelection is clear (e.g., Arial Light would have all bits cleared; it is not the regular version of Arial)."	^self bytes unsignedShortAt: 63 bigEndian: true</body><body package="OpenType">fsType	"Format: 	2-byte unsigned shortTitle: 			Type flags.Description: 	Indicates font embedding licensing rights for the font. 				Embeddable fonts may be stored in a document. 				When a document with embedded fonts is opened on a system that does not have the font installed (the remote system), 				the embedded font may be loaded for temporary (and in some cases, permanent) use on that system 				by an embedding-aware application. Embedding licensing rights are granted by the vendor of the font.				The OpenType Font Embedding DLL Specification and DLL release notes 				describe the APIs used to implement support for OpenType font embedding and loading. 				Applications that implement support for font embedding, 				either through use of the Font Embedding DLL or through other means, 				must not embed fonts which are not licensed to permit embedding. 				Further, applications loading embedded fonts for temporary use (see Preview &amp; Print and Editable embedding below) 				must delete the fonts when the document containing the embedded font is closed.				This version of the OS/2 table makes bits 0 - 3 a set of exclusive bits. 				In other words, at most one bit in this range may be set at a time. 				The purpose is to remove misunderstandings caused by previous behavior of using the least restrictive of the bits that are set.Bit 	Bit Mask 	Description  	0x0000 		Installable Embedding: No fsType bit is set. Thus fsType is zero.				Fonts with this setting indicate that they may be embedded and permanently installed on the remote system by an application. 				The user of the remote system acquires the identical rights, obligations and licenses for that font as the original purchaser of the font, 				and is subject to the same end-user license agreement, copyright, design patent, and/or trademark as was the original purchaser.0 	0x0001 		Reserved, must be zero.1 	0x0002 		Restricted License embedding:				Fonts that have only this bit set must not be modified, embedded or exchanged in any manner 				without first obtaining permission of the legal owner.				Caution: For Restricted License embedding to take effect, it must be the only level of embedding selected.2 	0x0004 		Preview &amp; Print embedding: When this bit is set, the font may be embedded, and temporarily loaded on the remote system. 				Documents containing Preview &amp; Print fonts must be opened 'read-only;' no edits can be applied to the document.3 	0x0008 		Editable embedding: When this bit is set, the font may be embedded but must only be installed temporarily on other systems. 				In contrast to Preview &amp; Print fonts, documents containing Editable fonts may be opened 				for reading, editing is permitted, and changes may be saved.4-7 	  			Reserved, must be zero.8 	0x0100 		No subsetting: When this bit is set, the font may not be subsetted prior to embedding. 				Other embedding restrictions specified in bits 0-3 and 9 also apply.9 	0x0200 		Bitmap embedding only: When this bit is set, only bitmaps contained in the font may be embedded. 				No outline data may be embedded. 				If there are no bitmaps available in the font, then the font is considered unembeddable and the embedding services will fail. 				Other embedding restrictions specified in bits 0-3 and 8 also apply.10-15 	  		Reserved, must be zero. "	^self bytes unsignedShortAt: 9 bigEndian: true</body><body package="OpenType">lastCharIndex	"Format: 	2-byte USHORTDescription: 	The maximum Unicode index (character code) in this font, according to the cmap subtable for platform ID 3 and encoding ID 0 or 1. This value depends on which character sets the font supports. This field cannot represent supplementary character values (codepoints greater than 0xFFFF). Fonts that support supplementary characters should set the value in this field to 0xFFFF."	^self bytes unsignedShortAt: 67 bigEndian: true</body><body package="OpenType">sFamilyClass	"Format:  	2-byte signed shortTitle: 	Font-family class and subclass.Description: 	This parameter is a classification of font-family design.Comments: 	The font class and font subclass are registered values assigned by IBM to each font family. This parameter is intended for use in selecting an lternate font when the requested font is not available. The font class is the most general and the font subclass is the most specific. The high byte of this field contains the family class, while the low byte contains the family subclass. More information about this field."	^self bytes shortAt: 31 bigEndian: true</body><body package="OpenType">stemV	"&lt;Integer&gt;"	"usWeightClass - roughly estimate StemV.Estimation is based on the following expression:	stemv = (os2-&gt;usWeightClass/65)*(os2-&gt;usWeightClass/65)+50I've found this expression in some Adobe document (lost). We usethis expression also, otherwise, we must analyze glyph data.found in:(This is dvipdfmx, an eXtended version of dvipdfm by Mark A. Wicks.Copyright (C) 2002 by Jin-Hwan Cho and Shunsaku Hirata,the dvipdfmx project team &lt;dvipdfmx@project.ktug.or.kr&gt;)"	| wc |	wc := self weightClass / 65.	^(wc * wc + 50) rounded</body><body package="OpenType">typoAscender	"Format: 	SHORTDescription: 	The typographic ascender for this font. Remember that this is not the same as the Ascender value in the 'hhea' table, which Apple defines in a far different manner. One good source for sTypoAscender in Latin based fonts is the Ascender value from an AFM file. For CJK fonts see below.The suggested usage for sTypoAscender is that it be used in conjunction with unitsPerEm to compute a typographically correct default line spacing. The goal is to free applications from Macintosh or Windows-specific metrics which are constrained by backward compatibility requirements. These new metrics, when combined with the character design widths, will allow applications to lay out documents in a typographically correct and portable fashion. These metrics will be exposed through Windows APIs. Macintosh applications will need to access the 'sfnt' resource and parse it to extract this data from the 'OS/2' table.For CJK (Chinese, Japanese, and Korean) fonts that are intended to be used for vertical writing (in addition to horizontal writing), the required value for sTypoAscender is that which describes the top of the of the ideographic em-box. For example, if the ideographic em-box of the font extends from coordinates 0,-120 to 1000,880 (that is, a 1000x1000 box set 120 design units below the Latin baseline), then the value of sTypoAscender must be set to 880. Failing to adhere to these requirements will result in incorrect vertical layout."	^self bytes shortAt: 69 bigEndian: true</body><body package="OpenType">typoDescender	"Format: 	SHORTDescription: 	The typographic descender for this font. Remember that this is not the same as the Descender value in the 'hhea' table, which Apple defines in a far different manner. One good source for sTypoDescender in Latin based fonts is the Descender value from an AFM file. For CJK fonts see below.The suggested usage for sTypoDescender is that it be used in conjunction with unitsPerEm to compute a typographically correct default line spacing. The goal is to free applications from Macintosh or Windows-specific metrics which are constrained by backward compatability requirements. These new metrics, when combined with the character design widths, will allow applications to lay out documents in a typographically correct and portable fashion. These metrics will be exposed through Windows APIs. Macintosh applications will need to access the 'sfnt' resource and parse it to extract this data from the 'OS/2' table (unless Apple exposes the 'OS/2' table through a new API).For CJK (Chinese, Japanese, and Korean) fonts that are intended to be used for vertical writing (in addition to horizontal writing), the required value for sTypoDescender is that which describes the bottom of the of the ideographic em-box. For example, if the ideographic em-box of the font extends from coordinates 0,-120 to 1000,880 (that is, a 1000x1000 box set 120 design units below the Latin baseline), then the value of sTypoDescender must be set to -120. Failing to adhere to these requirements will result in incorrect vertical layout. "	^self bytes shortAt: 71 bigEndian: true</body><body package="OpenType">version	"Format: 	2-byte unsigned shortUnits: 			n/aTitle: 			OS/2 table version number.Description: 	The version number for this OS/2 table.Comments: 		The version number allows for identification of the precise contents and layout for the OS/2 table. 				The version number for this layout is three (3). 				Versions zero (0, TrueType rev 1.5), one (1, TrueType rev 1.66), and two (2, OpenType rev 1.2) have been used previously."	^self bytes unsignedShortAt: 1 bigEndian: true</body><body package="OpenType">weightClass	"Format: 	2-byte unsigned shortTitle: 			Weight class.Description: 	Indicates the visual weight (degree of blackness or thickness of strokes) of the characters in the font.Comments:Value 	Description 				C Definition (from windows.h)100 	Thin 					FW_THIN200 	Extra-light (Ultra-light) 	FW_EXTRALIGHT300 	Light 					FW_LIGHT400 	Normal (Regular) 		FW_NORMAL500 	Medium 				FW_MEDIUM600 	Semi-bold (Demi-bold) 	FW_SEMIBOLD700 	Bold 					FW_BOLD800 	Extra-bold (Ultra-bold) 	FW_EXTRABOLD900 	Black (Heavy) 			FW_BLACK"	^self bytes unsignedShortAt: 5 bigEndian: true</body><body package="OpenType">widthClass	"Format: 	2-byte unsigned shortTitle: 			Width class.Description: 	Indicates a relative change from the normal aspect ratio (width to height ratio) as specified by a font designer for the glyphs in a font.Comments: 		Although every character in a font may have a different numeric aspect ratio, 				each character in a font of normal width has a relative aspect ratio of one. 				When a new type style is created of a different width class (either by a font designer or by some automated means) 				the relative aspect ratio of the characters in the new font is 				some percentage greater or less than those same characters in the normal font -- it is this difference that this parameter specifies.Value 	Description 			C Definition 							% of normal1 		Ultra-condensed 	FWIDTH_ULTRA_CONDENSED 	502 		Extra-condensed 	FWIDTH_EXTRA_CONDENSED 	62.53 		Condensed 			FWIDTH_CONDENSED 			754 		Semi-condensed 	FWIDTH_SEMI_CONDENSED 		87.55 		Medium (normal) 	FWIDTH_NORMAL 					1006 		Semi-expanded 		FWIDTH_SEMI_EXPANDED 		112.57 		Expanded 			FWIDTH_EXPANDED 				1258 		Extra-expanded 		FWIDTH_EXTRA_EXPANDED 		1509 		Ultra-expanded 		FWIDTH_ULTRA_EXPANDED 		200"	^self bytes unsignedShortAt: 7 bigEndian: true</body><body package="OpenType">xHeight	"Format: 	SHORTDescription: 	This metric specifies the distance between the baseline and the approximate height of non-ascending lowercase letters measured in FUnits. This value would normally be specified by a type designer but in situations where that is not possible, for example when a legacy font is being converted, the value may be set equal to the top of the unscaled and unhinted glyph bounding box of the glyph encoded at U+0078 (LATIN SMALL LETTER X). If no glyph is encoded in this position the field should be set to 0.This metric, if specified, can be used in font substitution: the xHeight value of one font can be scaled to approximate the apparent size of another. "	^self bytes shortAt: 87 bigEndian: true</body></methods><methods><class-id>Graphics.Fonts.OpenType.OS2</class-id> <category>testing</category><body package="OpenType">canEmbed	^(self fsType bitAnd: 2r1110) &gt; 2</body><body package="OpenType">canSubset	^(self fsType bitAnd: 2r1100000000) isZero</body><body package="OpenType">hasRestriction	^self fsType isZero not</body><body package="OpenType">isItalic	^(self fsSelection bitAnd: 1) isZero not</body></methods><methods><class-id>Graphics.Fonts.OpenType.OS2 class</class-id> <category>accessing</category><body package="Fonts UI Support">documentation	^'The OS/2 table consists of a set of metrics that are required in OpenType fonts.'</body><body package="Fonts UI Support">pageName	^'os2'</body><body package="OpenType">tag	^'OS/2'</body><body package="Fonts UI Support">title	^'OS/2 and Windows Metrics'</body></methods><methods><class-id>Graphics.Fonts.OpenType.ScriptRecord</class-id> <category>initialize-release</category><body package="OpenType">initializeTag: tagInteger offset: offsetInteger	tag := tagInteger.	offset := offsetInteger.	self beImmutable</body></methods><methods><class-id>Graphics.Fonts.OpenType.ScriptRecord</class-id> <category>accessing</category><body package="OpenType">offset	"&lt;Integer&gt;	Offset 	Script 	Offset to Script table-from beginning of ScriptList"	^offset</body><body package="OpenType">tag	"&lt;Integer&gt;	Tag 	ScriptTag 	4-byte ScriptTag identifier"	^tag</body></methods><methods><class-id>Graphics.Fonts.OpenType.ScriptRecord</class-id> <category>printing</category><body package="OpenType">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'tag' value: self tag).	args add: (printer constant: 'offset' value: self offset).	^printer printvalue: self arguments: args</body></methods><methods><class-id>Graphics.Fonts.OpenType.ScriptRecord class</class-id> <category>instance creation</category><body package="OpenType">tag: tagInteger offset: offsetInteger	| inst |	inst := self new.	inst initializeTag: tagInteger offset: offsetInteger.	^inst</body></methods><methods><class-id>Graphics.Fonts.OpenType.ScriptRecord class</class-id> <category>test instances</category><body package="OpenType">example	^ScriptRecord tag: 1 offset: 1</body></methods><methods><class-id>Graphics.Fonts.OpenType.Kern</class-id> <category>accessing</category><body package="Fonts UI Support">descriptionText	| wst |	wst := TextStream on: (String new: 200).	wst		nextPutAll: '(not implemented)';		cr;		cr;		nextPutAll: 'Bytes: ';		nextPutAll: self contents printString.	^wst contents</body></methods><methods><class-id>Graphics.Fonts.OpenType.Kern class</class-id> <category>accessing</category><body package="Fonts UI Support">documentation	^'NOTE: Apple has extended the definition of the ''kern'' table to provide additional functionality. The Apple extensions are not supported on Windows. Fonts intended for cross-platform use or for the Windows platform in general should conform to the ''kern'' table format specified here.The kerning table contains the values that control the intercharacter spacing for the glyphs in a font. There is currently no system level support for kerning (other than returning the kern pairs and kern values). OpenType™ fonts containing CFF outlines are not supported by the ''kern'' table and must use the ''GPOS'' OpenType Layout table.Each subtable varies in format, and can contain information for vertical or horizontal text, and can contain kerning values or minimum values. Kerning values are used to adjust inter-character spacing, and minimum values are used to limit the amount of adjustment that the scaler applies by the combination of kerning and tracking. Because the adjustments are additive, the order of the subtables containing kerning values is not important. However, tables containing minimum values should usually be placed last, so that they can be used to limit the total effect of other subtables.'</body><body package="OpenType">tag	^'kern'</body><body package="Fonts UI Support">title	^'Kerning'</body></methods><methods><class-id>Graphics.Fonts.OpenType.Gpos</class-id> <category>accessing</category><body package="OpenType">FeatureList	"Offset 	FeatureList 	Offset to FeatureList table-from beginning of GPOS table"	^self bytes unsignedShortAt: 7 bigEndian: true</body><body package="OpenType">LookupList	"Offset 	LookupList 	Offset to LookupList table-from beginning of GPOS table"	^self bytes unsignedShortAt: 9 bigEndian: true</body><body package="OpenType">ScriptCount	"uint16 	ScriptCount 	Number of ScriptRecords"	^self bytes unsignedShortAt: self ScriptList + 1 bigEndian: true</body><body package="OpenType">ScriptList	"Offset 	ScriptList 	Offset to ScriptList table-from beginning of GPOS table"	^self bytes unsignedShortAt: 5 bigEndian: true</body><body package="OpenType">Version	"Fixed 	Version 	Version of the GPOS table-initially = 0x00010000"	| signed fraction |	signed := self bytes shortAt: 1 bigEndian: true.	fraction := self bytes unsignedShortAt: 3 bigEndian: true.	^signed + (fraction / 16rFFFF)</body><body package="Fonts UI Support">descriptionText	| wst |	wst := TextStream on: (String new: 200).	wst		nextPutAll: '(not implemented)';		cr;		cr;		nextPutAll: 'Bytes: ';		nextPutAll: self contents printString;		cr.	self scriptRecords do: [:sr |		wst			cr;			nextPutAll: sr printString].	^wst contents</body><body package="OpenType">scriptRecords	"struct 	ScriptRecord[ScriptCount] 	Array of ScriptRecords - listed alphabetically by ScriptTag"	| start |	start := self ScriptList + 3.	^(1 to: self ScriptCount) collect: [:index |		| pos |		pos := start + ((index - 1) * 6).		ScriptRecord			tag: (self contents copyFrom: pos to: pos + 3) asByteString			offset: (self bytes unsignedShortAt: pos + 4 bigEndian: true)]</body></methods><methods><class-id>Graphics.Fonts.OpenType.Gpos class</class-id> <category>accessing</category><body package="Fonts UI Support">documentation	^'The Glyph Positioning table (GPOS) provides precise control over glyph placement for sophisticated text layout and rendering in each script and language system that a font supports.'</body><body package="OpenType">tag	^'GPOS'</body><body package="Fonts UI Support">title	^'The Glyph Positioning Table'</body></methods><methods><class-id>Graphics.Fonts.FontProgramTests</class-id> <category>tests</category><body package="Fonts tests">testCharstringDecoding	self assert: (FontProgram charstringDecoded: #[0 1 71 18 0 0 67 111]) = #[16 217 17 218 108 81 169 133].	self assert: (FontProgram charstringEncoded: #[16 217 17 218 108 81 169 133]) = #[0 1 71 18 0 0 67 111].	self assert: (FontProgram charstringDecoded: #[0 0 0 0 0 0 0 0]) = #[16 216 136 237 216 32 160 19].	self assert: (FontProgram charstringEncoded: #[16 216 136 237 216 32 160 19]) = #[0 0 0 0 0 0 0 0].</body><body package="Fonts tests">testEexecDecoding	self assert: (FontProgram eexecDecoded: #[0 1 71 18 0 0 67 111]) = #[217 218 140 33 182 145 148 117].	self assert: (FontProgram eexecEncoded: #[217 218 140 33 182 145 148 117]) = #[0 1 71 18 0 0 67 111].	self assert: (FontProgram eexecDecoded: #[0 0 0 0 0 0 0 0]) = #[217 219 253 89 34 97 140 67].	self assert: (FontProgram eexecEncoded: #[217 219 253 89 34 97 140 67]) = #[0 0 0 0 0 0 0 0].</body><body package="Fonts tests">testPfa	self assert: (FontProgram fromPfa: FontProgram example asPfa) = FontProgram example</body></methods><methods><class-id>Graphics.Fonts.OpenType.OpenTypeTests</class-id> <category>tests</category><body package="Fonts tests">testFontHeaderReadWrite	self assert: FontHeader example asBytes size = 54.	self assert: (FontHeader fromBytes: FontHeader example asBytes) asBytes = FontHeader example asBytes.	self assert: FontHeader exampleDifferentDates asBytes size = 54.	self assert: (FontHeader fromBytes: FontHeader exampleDifferentDates asBytes) = FontHeader exampleDifferentDates.	self assert: (FontHeader fromBytes: FontHeader exampleDifferentDates asBytes) asBytes = FontHeader exampleDifferentDates asBytes.	self assert: FontHeader exampleUnitsPerEm2000 asBytes size = 54.	self assert: (FontHeader fromBytes: FontHeader exampleUnitsPerEm2000 asBytes) asBytes = FontHeader exampleUnitsPerEm2000 asBytes</body><body package="Fonts tests">testGlyphNameMapping	"no tabular glyphs (with Adobe notation of '*.tab' "	| file |	file := Font freeSansBold.	self assert: file numGlyphs = 2469.	0 to: file numGlyphs - 1 do: [:gid |		self assert: (file glyphNamed: (file nameOfGlyph: gid)) id = gid].	self assert: ((file tabularGlyphsFor: 'ABC') collect: [:glyph | glyph id]) asArray = #(36 37 38).	self assert: ((file tabularGlyphsFor: '0123456789') collect: [:glyph | glyph id]) asArray = #(19 20 21 22 23 24 25 26 27 28).	self assert: file tabularGlyphIds = #()</body><body package="Fonts tests">testNames	| file fontNames |	file := Font freeSansBold.	self assert: (file nameAt: 1) = 'FreeSans'.	self assert: (file nameAt: 6) = 'FreeSansBold'.	self assert: (file nameAt: 7) isNil.	fontNames := file nameTable nameRecords select: [:nameRecord | nameRecord nameID = 2].	self assert: (fontNames collect: [:name | name string]) = #('Bold' 'получерен' 'tučné' 'fed' 'Fett' 'Έντονα' 'Bold' 'Negrita' 'Lihavoitu' 'Gras' 'Félkövér' 'Grassetto' 'Vet' 'Halvfet' 'Pogrubiony' 'Negrito' 'gros' 'Полужирный' 'Tučné' 'Fet' 'Kalın' 'huruf tebal' 'жирний' 'Krepko' 'treknraksts' 'pusjuodis' 'đậm' 'Lodia').	fontNames := file nameTable nameRecords select: [:nameRecord | nameRecord nameID = 4].	self assert: (fontNames collect: [:name | name string]) = #('Free Sans Bold' 'Free Sans получерен' 'Free Sans tučné' 'Free Sans fed' 'Free Sans Fett' 'Free Sans Έντονα' 'Free Sans Bold' 'Free Sans Negrita' 'Free Sans Lihavoitu' 'Free Sans Gras' 'Free Sans Félkövér' 'Free Sans Grassetto' 'Free Sans Vet' 'Free Sans Halvfet' 'Free Sans Pogrubiony' 'Free Sans Negrito' 'Free Sans gros' 'Free Sans Полужирный' 'Free Sans Tučné' 'Free Sans Fet' 'Free Sans Kalın' 'Free Sans huruf tebal' 'Free Sans жирний' 'Free Sans Krepko' 'Free Sans treknraksts' 'Free Sans pusjuodis' 'Free Sans đậm' 'Free Sans Lodia')</body></methods><methods><class-id>Graphics.CharacterDecodingTests</class-id> <category>tests</category><body package="Fonts tests">testAdobeExamples	"see http://www.adobe.com/devnet/opentype/archives/glyph.html	or http://www.adobe.com/devnet-archive/opentype/archives/glyph.html	section 3"	self assert: (PostScriptFontBody unicodesForGlyphName: #Lcommaaccent) size = 1.	self assert: (PostScriptFontBody unicodesForGlyphName: #Lcommaaccent) first = 16r013B.	self assert: (PostScriptFontBody unicodesForGlyphName: #Lcommaaccent) first asCharacter printString = '$Ļ "16r013B"'.	self assert: (PostScriptFontBody unicodesForGlyphName: #uni20AC0308) size = 2.	self assert: (PostScriptFontBody unicodesForGlyphName: #uni20AC0308) asArray = #(16r20AC 16r0308).	self assert: (PostScriptFontBody unicodesForGlyphName: #uni20AC0308) first asCharacter printString = '$€ "16r20AC"'.	self assert: (PostScriptFontBody unicodesForGlyphName: #uni20AC0308) last asCharacter printString = '$̈ "16r0308"'.	self assert: (PostScriptFontBody unicodesForGlyphName: #u1040C) size = 1.	self assert: (PostScriptFontBody unicodesForGlyphName: #u1040C) first = 16r1040C.	self assert: (PostScriptFontBody unicodesForGlyphName: #uniD801DC0C) isEmpty.	self assert: (PostScriptFontBody unicodesForGlyphName: #uni20ac) isEmpty.	self assert: (PostScriptFontBody unicodesForGlyphName: #'Lcommaaccent_uni20AC0308_u1040C.alternate') size = 4.	self assert: (PostScriptFontBody unicodesForGlyphName: #'Lcommaaccent_uni20AC0308_u1040C.alternate') asArray = #(16r013B 16r20AC 16r0308 16r1040C).	self assert: (PostScriptFontBody unicodesForGlyphName: #foo) isEmpty.	self assert: (PostScriptFontBody unicodesForGlyphName: #'.notdef') isEmpty</body><body package="Fonts tests">testCharacterNames	self assert: (PostScriptFontBody characterNamesAtUnicode: 16r013B) sorted = #(#Lcedilla #Lcommaaccent).	self assert: ((PostScriptFontBody named: 'Helvetica') characterNameAtUnicode: 16r013B) = #Lcommaaccent.	self assert: (PostScriptFontBody characterNamesAtUnicode: 16r20AC) sorted = #(#euro #Euro).	self assert: ((PostScriptFontBody named: 'Helvetica') characterNameAtUnicode: 16r20AC) = #Euro.	self assert: (PostScriptFontBody characterNamesAtUnicode: 16r0308) = #(#dieresiscmb).	self assert: ((PostScriptFontBody named: 'Helvetica') characterNameAtUnicode: 16r0308) = #'.notdef'.	self assert: (PostScriptFontBody characterNamesAtUnicode: 16r1040C) = #(#u1040C).	self assert: (PostScriptFontBody characterNamesAtUnicode: 16rD801) = #(#'.notdef').	self assert: (PostScriptFontBody characterNamesAtUnicode: 16rDC0C) = #(#'.notdef').	self assert: (PostScriptFontBody characterNamesAtUnicode: 16rFFFF) = #(#uniFFFF).	self assert: ((PostScriptFontBody named: 'Helvetica') characterNameAtUnicode: 16rFFFF) = #'.notdef'.	self assert: (PostScriptFontBody unicodesForGlyphName: #uniFFFF) asArray = #(16rFFFF).</body></methods><methods><class-id>WindowsFonts.SystemFont</class-id> <category>accessing</category><body package="Fonts for Windows">font	"&lt;LogFont&gt;"	^font</body><body package="Fonts for Windows">metric	"&lt;TextMetric&gt;"	^metric</body><body package="Fonts for Windows">type	"&lt;Integer&gt;	Specifies the type of the font. This parameter can be a combination of these values:DEVICE_FONTTYPERASTER_FONTTYPETRUETYPE_FONTTYPE "	^type</body><body package="Fonts for Windows">typeString	| items wst |	items := OrderedCollection new.	self isRaster ifTrue: [		items add: 'Raster'].	self isDevice ifTrue: [		items add: 'Device'].	self isTrueType ifTrue: [		items add: 'TrueType'].	wst := WriteStream on: (String new: 20).	items do: [:item | wst nextPutAll: item] separatedBy: [wst space].	^wst contents</body><body package="Fonts for Windows">vwFontname	"&lt;String&gt;"	^self font vwFontnameType: self type</body></methods><methods><class-id>WindowsFonts.SystemFont</class-id> <category>converting</category><body package="Fonts for Windows">asFontDescriptionSized: aPixelsize	^(FontDescription new)		family: (Array with: self font faceName);		pixelSize: (self isRaster			ifTrue: [self font height]			ifFalse: [aPixelsize]);		boldness: self font weight / 1000;		italic: self font isItalic;		yourself</body><body package="Fonts for Windows">asLogfont	"&lt;Logfont&gt;"	^self font asLogfont</body><body package="Fonts for Windows">asLogfontSized: aPixelSize	"&lt;Logfont&gt;"	self isRaster ifTrue: [		^self font asLogfont].	^self font asLogfontSized: aPixelSize</body><body package="Fonts for Windows">asVariableSizeTextAttributeSized: aPixelsize	| cAttr tAttr |	cAttr := VariableCharacterAttributes newWithDefaultAttributes.	cAttr setDefaultQuery: (self asFontDescriptionSized: aPixelsize).	tAttr := VariableSizeTextAttributes characterAttributes: cAttr.	tAttr scalingFactor: 1.0.	tAttr install.	^tAttr</body></methods><methods><class-id>WindowsFonts.SystemFont</class-id> <category>testing</category><body package="Fonts for Windows">isDevice	^(self type bitAnd: 2) isZero not</body><body package="Fonts for Windows">isRaster	^(self type bitAnd: 1) isZero not</body><body package="Fonts for Windows">isTrueType	^(self type bitAnd: 4) isZero not</body></methods><methods><class-id>WindowsFonts.SystemFont</class-id> <category>printing</category><body package="Fonts for Windows">printOn: stream	stream		nextPutAll: self font faceName;		nextPutAll: ' [';		nextPutAll: self typeString;		nextPutAll: '][';		nextPutAll: self font charSetName;		nextPutAll: '][';		nextPutAll: self font pitchName;		nextPutAll: '][';		nextPutAll: self font familyName;		nextPutAll: '][';		nextPutAll: self font outPrecisionName;		nextPutAll: '][';		nextPutAll: self font clipPrecisionNamesString;		nextPutAll: '][';		nextPutAll: self font qualityName;		nextPutAll: ']'</body><body package="Fonts for Windows">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'type' value: self type).	args add: (printer constant: 'font' value: self font).	args add: (printer constant: 'metric' value: self metric).	^printer printvalue: self arguments: args</body></methods><methods><class-id>WindowsFonts.SystemFont</class-id> <category>initialize-release</category><body package="Fonts for Windows">initializeType: typeInteger font: fontLogFont metric: metricTextMetric	type := typeInteger.	font := fontLogFont.	metric := metricTextMetric.	self beImmutable</body></methods><methods><class-id>WindowsFonts.SystemFont class</class-id> <category>test instances</category><body package="Fonts for Windows">example	^SystemFont		type: 1		font: (Logfont			height: 1			width: 1			escapement: 1			orientation: 1			weight: 1			italic: 1			underline: 1			strikeOut: 1			charSet: 1			outPrecision: 1			clipPrecision: 1			quality: 1			pitchAndFamily: 1			faceName: 'a string')		metric: (TextMetric			height: 1			ascent: 1			descent: 1			internalLeading: 1			externalLeading: 1			aveCharWidth: 1			maxCharWidth: 1			weight: 1			overhang: 1			digitizedAspectX: 1			digitizedAspectY: 1			firstChar: $a			lastChar: $a			defaultChar: $a			breakChar: $a			italic: 1			underlined: 1			struckOut: 1			pitchAndFamily: 1			charSet: 1)</body></methods><methods><class-id>WindowsFonts.SystemFont class</class-id> <category>instance creation</category><body package="Fonts for Windows">fontFamilies	"&lt;SequenceableCollection of: SystemFont&gt;"	"self fontFamilies"	^Win32Fontsupport new systemFonts</body><body package="Fonts for Windows">type: typeInteger font: fontLogFont metric: metricTextMetric	| inst |	inst := self new.	inst initializeType: typeInteger font: fontLogFont metric: metricTextMetric.	^inst</body></methods><methods><class-id>Graphics.Fonts.CFF.CharactersNode</class-id> <category>accessing</category><body package="Fonts UI Support">descriptionText	| wst |	wst := TextStream on: (String new: 200).	self object file glyphs do: [:glyph |		wst			nextPutAll: glyph id printString;			nextPutAll: ': ';			emphasis: #(#bold);			nextPutAll: glyph name;			emphasis: nil.		glyph code ifNotNil: [			wst				nextPutAll: ' code: ';				emphasis: #(#bold);				nextPutAll: glyph code printString;				emphasis: nil;				nextPutAll: ' (';				emphasis: #(#bold);				nextPutAll: glyph code asCharacter printString;				emphasis: nil;				nextPutAll: ')'].		wst			nextPutAll: ' charString: ';			nextPutAll: glyph charString bytes printString;			cr].	^wst contents</body><body package="Fonts UI Support">font	^self object</body><body package="Fonts UI Support">glyphs	^self object file glyphs</body><body package="Fonts UI Support">listIcon	^ListIconLibrary visualFor: #collection</body><body package="Fonts UI Support">listText	^('Glyphs[', self object file glyphs size printString, ']') asText</body><body package="Fonts UI Support">object	^object</body><body package="Fonts UI">view	^Graphics.Fonts.CharsetView on: self</body></methods><methods><class-id>Graphics.Fonts.CFF.CharactersNode</class-id> <category>testing</category><body package="Fonts UI Support">hasTreeChildren	^false</body></methods><methods><class-id>Graphics.Fonts.CFF.CharactersNode</class-id> <category>initialize-release</category><body package="Fonts UI Support">initializeObject: anObject	object := anObject</body></methods><methods><class-id>Graphics.Fonts.CFF.CharactersNode class</class-id> <category>instance creation</category><body package="Fonts UI Support">on: anObject	| inst |	inst := self new.	inst initializeObject: anObject.	^inst</body></methods><methods><class-id>Graphics.Fonts.TextView</class-id> <category>initialize-release</category><body package="Fonts UI">initializeItem: anObject	super initializeItem: anObject.	self textHolder value: self item</body></methods><methods><class-id>Graphics.Fonts.TextView</class-id> <category>aspects</category><body package="Fonts UI">textHolder	^textHolder ifNil: [textHolder := String new asValue]</body></methods><methods><class-id>Graphics.Fonts.CharMetricEncodingTests</class-id> <category>Testing</category><body package="Fonts tests">testCharMetricsHelvetica	| fontMetric charMetric |	fontMetric := (Font fontAt: #Helvetica) metrics.	charMetric := fontMetric charMetricAt: 169.	self assert: charMetric n = #copyright.	self assert: charMetric c = 169.	self assert: charMetric asCharacter = $©.	self assert: charMetric asCharacter asInteger = 169.	charMetric := fontMetric charMetricAt: 39.	self assert: charMetric n = #quotesingle.	self assert: charMetric c = 39.	self assert: charMetric asCharacter = $'.	self assert: charMetric asCharacter asInteger = 39.	charMetric := fontMetric charMetricAt: 164.	self assert: charMetric n = #currency.	self assert: charMetric c = 164.	self assert: charMetric asCharacter = $¤.	self assert: charMetric asCharacter asInteger = 164.</body><body package="Fonts tests">testCharMetricsTimesRoman	| fontMetric charMetric |	fontMetric := (Font fontAt: #'Times-Roman') metrics.	charMetric := fontMetric charMetricAt: 169.	self assert: charMetric n = #quotesingle.	self assert: charMetric c = 169.	self assert: charMetric asCharacter = $'.	self assert: charMetric asCharacter asInteger = 16r0027.	charMetric := fontMetric charMetricAt: 39.	self assert: charMetric n = #quoteright.	self assert: charMetric c = 39.	self assert: charMetric asCharacter = $’.	self assert: charMetric asCharacter asInteger = 16r2019.	charMetric := fontMetric charMetricAt: 164.	self assert: charMetric n = #fraction.	self assert: charMetric c = 164.	self assert: charMetric asCharacter = $⁄.	self assert: charMetric asCharacter asInteger = 16r2044.</body></methods><methods><class-id>Graphics.Fonts.CFF.FontSet</class-id> <category>accessing</category><body package="CompactFontFormat">fonts	"&lt;Array of: Font&gt;"	^fonts</body><body package="CompactFontFormat">forceBold	"&lt;Boolean&gt;"	^self fonts first forceBold</body><body package="CompactFontFormat">nameOfGlyph: aGlyphId	"&lt;String&gt;"	^self fonts first nameOfGlyph: aGlyphId</body><body package="CompactFontFormat">version	"&lt;Float&gt;"	^version</body></methods><methods><class-id>Graphics.Fonts.CFF.FontSet</class-id> <category>initialize-release</category><body package="CompactFontFormat">initializeVersion: versionVersion fonts: fontsArray	version := versionVersion.	(fontsArray notNil and: [	fontsArray notEmpty]) ifTrue: [			fonts := (Array withAll: fontsArray) beImmutable].	self beImmutable</body></methods><methods><class-id>Graphics.Fonts.CFF.FontSet</class-id> <category>printing</category><body package="CompactFontFormat">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'version' value: self version).	args add: (printer array: 'fonts' value: self fonts).	^printer printvalue: self arguments: args</body></methods><methods><class-id>Graphics.Fonts.CFF.FontSet class</class-id> <category>instance creation</category><body package="CompactFontFormat">for: anOpenTypeFile fromBytes: aByteStream	| header version names topDicts strings globalSubr fonts |	header := Header fromBytes: aByteStream.	version := header version.	aByteStream skip: header hdrSize - 4.	names := Index stringsFromBytes: aByteStream.	topDicts := Index fromBytes: aByteStream collect: [:data |		TopDict fromBytes: data readStream].	strings := Index stringsFromBytes: aByteStream.	globalSubr := Index fromBytes: aByteStream collect: [:data | Subroutine bytes: data].	fonts := OrderedCollection new.	names with: topDicts do: [:fontName :topDict |		fonts add: (topDict			fontNamed: fontName			file: anOpenTypeFile			strings: strings			globalSubr: globalSubr			from: aByteStream)].	^self version: version fonts: fonts</body><body package="CompactFontFormat">version: versionVersion fonts: fontsArray	| inst |	inst := self new.	inst initializeVersion: versionVersion fonts: fontsArray.	^inst</body></methods><methods><class-id>Graphics.Fonts.CFF.FontSet class</class-id> <category>dynamic references</category><body package="CompactFontFormat">dynamicallyReferencedClasses	^Font withAllSubclasses , Dict withAllSubclasses , Mapping allSubclasses , Operator withAllSubclasses , (Array with: Subroutine) collect: [:cl |		cl fullName asSymbol]</body></methods><methods><class-id>Graphics.Fonts.CFF.FontSet class</class-id> <category>test instances</category><body package="Fonts test resources">example	^self for: nil fromBytes: self exampleBytes readStream</body><body package="Fonts test resources">exampleBytes	"from Appendix D"	^#[16r01 16r00 16r04 16r01 16r00 16r01 16r01 16r01 16r13 16r41 16r42 16r43 16r44 16r45 16r46 16r2b 16r54 16r69 16r6d 16r65 16r73 16r2d 16r52 16r6f 16r6d 16r61 16r6e 16r00 16r01 16r01 16r01 16r1f 16rf8 16r1b 16r00 16rf8 16r1c 16r02 16rf8 16r1d 16r03 16rf8 16r19 16r04 16r1c 16r6f 16r00 16r0d 16rfb 16r3c 16rfb 16r6e 16rfa 16r7c 16rfa 16r16 16r05 16re9 16r11 16rb8 16rf1 16r12 16r00 16r03 16r01 16r01 16r08 16r13 16r18 16r30 16r30 16r31 16r2e 16r30 16r30 16r37 16r54 16r69 16r6d 16r65 16r73 16r20 16r52 16r6f 16r6d 16r61 16r6e 16r54 16r69 16r6d 16r65 16r73 16r00 16r00 16r00 16r02 16r01 16r01 16r02 16r03 16r0e 16r0e 16r7d 16r99 16rf9 16r2a 16r99 16rfb 16r76 16r95 16rf7 16r73 16r8b 16r06 16rf7 16r9a 16r93 16rfc 16r7c 16r8c 16r07 16r7d 16r99 16rf8 16r56 16r95 16rf7 16r5e 16r99 16r08 16rfb 16r6e 16r8c 16rf8 16r73 16r93 16rf7 16r10 16r8b 16r09 16ra7 16r0a 16rdf 16r0b 16rf7 16r8e 16r14]</body></methods><methods><class-id>Graphics.Fonts.Glyphs</class-id> <category>accessing</category><body package="Type1">font	^font</body><body package="Type1">glyphs	^glyphs ifNil: [#()]</body><body package="Fonts UI Support">listIcon	^FontListIcons visualFor: #font</body><body package="Fonts UI Support">listText	^(self class name asString , '[' , self glyphs size printString , ']') asText</body><body package="Fonts UI Support">treeChildren	^self glyphs</body><body package="Fonts UI">view	^CharsetView on: self</body></methods><methods><class-id>Graphics.Fonts.Glyphs</class-id> <category>initialize-release</category><body package="Type1">initializeGlyphs: someGlyphs font: aFont	glyphs := someGlyphs.	font := aFont</body></methods><methods><class-id>Graphics.Fonts.Glyphs</class-id> <category>testing</category><body package="Fonts UI Support">hasTreeChildren	^false</body></methods><methods><class-id>Graphics.Fonts.Glyphs class</class-id> <category>instance creation</category><body package="Type1">on: someGlyphs font: aFont	| inst |	inst := self new.	inst initializeGlyphs: someGlyphs font: aFont.	^inst</body></methods><methods><class-id>Graphics.Fonts.CFF.StandardEncoding</class-id> <category>printing</category><body package="CompactFontFormat">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'name' value: self name).	args add: (printer array: 'codes' value: self codes).	^printer printvalue: self arguments: args</body></methods><methods><class-id>Graphics.Fonts.CFF.StandardEncoding</class-id> <category>initialize-release</category><body package="CompactFontFormat">initializeName: nameString codes: codesArray	name := nameString.	(codesArray notNil and: [	codesArray notEmpty]) ifTrue: [			codes := (Array withAll: codesArray) beImmutable].	self beImmutable</body></methods><methods><class-id>Graphics.Fonts.CFF.StandardEncoding</class-id> <category>accessing</category><body package="CompactFontFormat">codes	"&lt;Array256 of: SID&gt;"	^codes ifNil: [#()]</body><body package="CompactFontFormat">name	"&lt;String&gt;"	^name</body></methods><methods><class-id>Graphics.Fonts.CFF.StandardEncoding class</class-id> <category>instances</category><body package="CompactFontFormat">expert	"&lt;StandardEncoding&gt;"	^self		name: 'Expert'		codes: #(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 229 230 0 231 232 233 234 235 236 237 238 13 14 15 99 239 240 241 242 243 244 245 246 247 248 27 28 249 250 251 252 0 253 254 255 256 257 0 0 0 258 0 0 259 260 261 262 0 0 263 264 265 0 266 109 110 267 268 269 0 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 304 305 306 0 0 307 308 309 310 311 0 312 0 0 313 0 0 314 315 0 0 316 317 318 0 0 0 158 155 163 319 320 321 322 323 324 325 0 0 326 150 164 169 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378)</body><body package="CompactFontFormat">standard	"&lt;StandardEncoding&gt;"	^self		name: 'Standard'		codes: #(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 0 111 112 113 114 0 115 116 117 118 119 120 121 122 0 123 0 124 125 126 127 128 129 130 131 0 132 133 0 134 135 136 137 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 138 0 139 0 0 0 0 140 141 142 143 0 0 0 0 0 144 0 0 0 145 0 0 146 147 148 149 0 0 0 0)</body></methods><methods><class-id>Graphics.Fonts.CFF.StandardEncoding class</class-id> <category>instance creation</category><body package="CompactFontFormat">name: nameString codes: codesArray	| inst |	inst := self new.	inst initializeName: nameString codes: codesArray.	^inst</body></methods><methods><class-id>Graphics.Fonts.CFF.StandardEncoding class</class-id> <category>instance creation optional</category><body package="CompactFontFormat">name: nameString	| inst |	inst := self new.	inst initializeName: nameString codes: nil.	^inst</body></methods><methods><class-id>Graphics.Fonts.CFF.StandardEncoding class</class-id> <category>test instances</category><body package="Fonts test resources">example	^StandardEncoding standard</body></methods><methods><class-id>Graphics.Fonts.CustomFont</class-id> <category>accessing</category><body package="Type1">faceName	^self metrics familyName</body><body package="Type1">familyName	^self program familyName</body><body package="Type1">filename	"&lt;String&gt;	the file name of the Windows font files (without extension)"	^filename</body><body package="Fonts UI Support">listText	^'Type 1' asText</body><body package="Type1">program	"&lt;FontProgram&gt;	the font program (from pfb or pfa)"	^program</body><body package="Type1">screenFontDescription	"We should not use this for selecting the screen font on windows"	| fd |	fd := FontDescription new.	fd family: self screenFamilyName.	"fd setWidth: self setWidth."		"dont use this"	fd boldness: self weight / 1000.0.	fd italic: self isItalic.	fd fixedWidth: self isFixedPitch.	^fd</body><body package="Type1">setWidth	"this is tricky, since the value must be derived from FullName of the header of the font program.	Apparently there are many non standard conventions used by the font vendors.	For now we just answer the default and dont use it for the FontDescription.	We dont need to use this for selecting the screen font on windows"	^0.5</body><body package="Fonts UI Support">treeChildren	^Array		with: self metrics		with: self program		with: (Glyphs on: self glyphs font: self)</body></methods><methods><class-id>Graphics.Fonts.CustomFont</class-id> <category>initialize-release</category><body package="Type1">initializeFilename: fileString metrics: aPostScriptFontMetrics program: aFontProgram	filename := fileString.	program := aFontProgram.	self initializeMetrics: aPostScriptFontMetrics</body></methods><methods><class-id>Graphics.Fonts.CustomFont</class-id> <category>converting</category><body package="Type1">asPfa	"&lt;String&gt;	the contents of a PFA file"	^self program asPfa</body></methods><methods><class-id>Graphics.Fonts.CustomFont class</class-id> <category>instance creation</category><body package="Type1">file: fileString pfb: pfbByteArray afm: afmString	"add the source methods with	&lt;Filename&gt; contentsOfEntireBinaryFile asSource"	| inst |	inst := self new.	inst		initializeFilename: fileString		metrics: (AdobeFontMetric fromAfm: afmString readStream)		program: (FontProgram fromPfb: pfbByteArray).	^inst</body><body package="Type1">file: fileString pfb: pfbByteArray pfm: pfmByteArray	"add the source methods with	&lt;Filename&gt; contentsOfEntireBinaryFile asSource"	| inst |	inst := self new.	inst		initializeFilename: fileString		metrics: (PostScriptFontMetrics fromBytes: pfmByteArray)		program: (FontProgram fromPfb: pfbByteArray).	^inst</body></methods><methods><class-id>Graphics.Fonts.CustomFont class</class-id> <category>fonts</category><body package="Fonts test resources">nimbusSansLReguAfm	^'StartFontMetrics 3.0Comment Copyright (URW)++,Copyright 1999 by (URW)++ Design &amp; DevelopmentComment Creation Date: 12/22/1999Comment See the file COPYING (GNU General Public License) for license conditions.FontName NimbusSanL-ReguFullName Nimbus Sans L RegularFamilyName Nimbus Sans LWeight RegularItalicAngle 0.0IsFixedPitch falseUnderlinePosition -151UnderlineThickness 50Version 1.05Notice (URW)++,Copyright 1999 by (URW)++ Design &amp; DevelopmentEncodingScheme AdobeStandardEncodingFontBBox -174 -285 1001 953CapHeight 729XHeight 524Descender -218Ascender 729StartCharMetrics 316C 32 ; WX 278 ; N space ; B 191 0 191 0 ;C 33 ; WX 278 ; N exclam ; B 124 0 208 729 ;C 34 ; WX 355 ; N quotedbl ; B 52 464 305 709 ;C 35 ; WX 556 ; N numbersign ; B 14 -20 542 697 ;C 36 ; WX 556 ; N dollar ; B 26 -126 518 770 ;C 37 ; WX 889 ; N percent ; B 29 -20 859 709 ;C 38 ; WX 667 ; N ampersand ; B 52 -23 637 709 ;C 39 ; WX 221 ; N quoteright ; B 64 497 157 729 ;C 40 ; WX 333 ; N parenleft ; B 73 -212 291 729 ;C 41 ; WX 333 ; N parenright ; B 38 -212 256 729 ;C 42 ; WX 389 ; N asterisk ; B 40 441 343 729 ;C 43 ; WX 584 ; N plus ; B 50 -10 534 474 ;C 44 ; WX 278 ; N comma ; B 87 -147 192 104 ;C 45 ; WX 333 ; N hyphen ; B 46 240 284 312 ;C 46 ; WX 278 ; N period ; B 87 0 191 104 ;C 47 ; WX 278 ; N slash ; B -8 -20 284 729 ;C 48 ; WX 556 ; N zero ; B 43 -23 507 709 ;C 49 ; WX 556 ; N one ; B 102 0 347 709 ;C 50 ; WX 556 ; N two ; B 34 0 511 709 ;C 51 ; WX 556 ; N three ; B 32 -23 506 709 ;C 52 ; WX 556 ; N four ; B 28 0 520 709 ;C 53 ; WX 556 ; N five ; B 35 -23 513 709 ;C 54 ; WX 556 ; N six ; B 43 -23 513 709 ;C 55 ; WX 556 ; N seven ; B 46 0 520 709 ;C 56 ; WX 556 ; N eight ; B 37 -23 513 709 ;C 57 ; WX 556 ; N nine ; B 38 -23 509 709 ;C 58 ; WX 278 ; N colon ; B 110 0 214 524 ;C 59 ; WX 278 ; N semicolon ; B 110 -147 215 524 ;C 60 ; WX 584 ; N less ; B 45 -9 534 474 ;C 61 ; WX 584 ; N equal ; B 50 111 534 353 ;C 62 ; WX 584 ; N greater ; B 50 -9 539 474 ;C 63 ; WX 556 ; N question ; B 77 0 509 741 ;C 64 ; WX 1015 ; N at ; B 34 -142 951 741 ;C 65 ; WX 667 ; N A ; B 17 0 653 729 ;C 66 ; WX 667 ; N B ; B 79 0 623 729 ;C 67 ; WX 722 ; N C ; B 48 -23 677 741 ;C 68 ; WX 722 ; N D ; B 89 0 667 729 ;C 69 ; WX 667 ; N E ; B 90 0 613 729 ;C 70 ; WX 611 ; N F ; B 90 0 579 729 ;C 71 ; WX 778 ; N G ; B 44 -23 709 741 ;C 72 ; WX 722 ; N H ; B 83 0 644 729 ;C 73 ; WX 278 ; N I ; B 100 0 194 729 ;C 74 ; WX 500 ; N J ; B 17 -23 426 729 ;C 75 ; WX 667 ; N K ; B 79 0 658 729 ;C 76 ; WX 556 ; N L ; B 80 0 533 729 ;C 77 ; WX 833 ; N M ; B 75 0 761 729 ;C 78 ; WX 722 ; N N ; B 76 0 646 729 ;C 79 ; WX 778 ; N O ; B 38 -23 742 741 ;C 80 ; WX 667 ; N P ; B 91 0 617 729 ;C 81 ; WX 778 ; N Q ; B 38 -59 742 741 ;C 82 ; WX 722 ; N R ; B 93 0 679 729 ;C 83 ; WX 667 ; N S ; B 48 -23 621 741 ;C 84 ; WX 611 ; N T ; B 21 0 593 729 ;C 85 ; WX 722 ; N U ; B 85 -23 645 729 ;C 86 ; WX 667 ; N V ; B 30 0 645 729 ;C 87 ; WX 944 ; N W ; B 22 0 929 729 ;C 88 ; WX 667 ; N X ; B 22 0 649 729 ;C 89 ; WX 667 ; N Y ; B 13 0 661 729 ;C 90 ; WX 611 ; N Z ; B 28 0 583 729 ;C 91 ; WX 278 ; N bracketleft ; B 64 -212 250 729 ;C 92 ; WX 278 ; N backslash ; B -8 -20 284 729 ;C 93 ; WX 278 ; N bracketright ; B 23 -212 209 729 ;C 94 ; WX 469 ; N asciicircum ; B 44 329 425 709 ;C 95 ; WX 556 ; N underscore ; B -22 -176 578 -126 ;C 96 ; WX 222 ; N quoteleft ; B 65 477 158 709 ;C 97 ; WX 556 ; N a ; B 42 -23 535 539 ;C 98 ; WX 556 ; N b ; B 54 -23 523 729 ;C 99 ; WX 500 ; N c ; B 31 -23 477 539 ;C 100 ; WX 556 ; N d ; B 26 -23 495 729 ;C 101 ; WX 556 ; N e ; B 40 -23 513 539 ;C 102 ; WX 278 ; N f ; B 18 0 258 732 ;C 103 ; WX 556 ; N g ; B 29 -218 489 539 ;C 104 ; WX 556 ; N h ; B 70 0 486 729 ;C 105 ; WX 222 ; N i ; B 66 0 150 729 ;C 106 ; WX 222 ; N j ; B -18 -218 153 729 ;C 107 ; WX 500 ; N k ; B 58 0 502 729 ;C 108 ; WX 222 ; N l ; B 68 0 152 729 ;C 109 ; WX 833 ; N m ; B 70 0 762 539 ;C 110 ; WX 556 ; N n ; B 70 0 487 539 ;C 111 ; WX 556 ; N o ; B 36 -23 510 539 ;C 112 ; WX 556 ; N p ; B 54 -218 523 539 ;C 113 ; WX 556 ; N q ; B 26 -218 495 539 ;C 114 ; WX 333 ; N r ; B 69 0 321 539 ;C 115 ; WX 500 ; N s ; B 34 -23 459 539 ;C 116 ; WX 278 ; N t ; B 14 -23 254 668 ;C 117 ; WX 556 ; N u ; B 65 -23 482 524 ;C 118 ; WX 500 ; N v ; B 10 0 486 524 ;C 119 ; WX 722 ; N w ; B 6 0 708 524 ;C 120 ; WX 500 ; N x ; B 17 0 473 524 ;C 121 ; WX 500 ; N y ; B 20 -218 478 524 ;C 122 ; WX 500 ; N z ; B 31 0 457 524 ;C 123 ; WX 334 ; N braceleft ; B 43 -212 276 729 ;C 124 ; WX 260 ; N bar ; B 100 -212 160 729 ;C 125 ; WX 334 ; N braceright ; B 29 -212 262 729 ;C 126 ; WX 584 ; N asciitilde ; B 75 268 508 438 ;C 161 ; WX 333 ; N exclamdown ; B 121 -205 205 524 ;C 162 ; WX 556 ; N cent ; B 52 -120 510 628 ;C 163 ; WX 556 ; N sterling ; B 26 -23 535 729 ;C 164 ; WX 167 ; N fraction ; B -174 -20 336 709 ;C 165 ; WX 556 ; N yen ; B 11 0 545 709 ;C 166 ; WX 556 ; N florin ; B 11 -212 542 738 ;C 167 ; WX 556 ; N section ; B 43 -213 506 729 ;C 168 ; WX 556 ; N currency ; B 67 133 489 551 ;C 169 ; WX 191 ; N quotesingle ; B 48 464 142 709 ;C 170 ; WX 333 ; N quotedblleft ; B 48 477 299 709 ;C 171 ; WX 556 ; N guillemotleft ; B 98 106 455 438 ;C 172 ; WX 333 ; N guilsinglleft ; B 91 106 243 438 ;C 173 ; WX 333 ; N guilsinglright ; B 85 106 239 438 ;C 174 ; WX 500 ; N fi ; B 12 0 436 732 ;C 175 ; WX 500 ; N fl ; B 17 0 430 732 ;C 177 ; WX 556 ; N endash ; B -5 240 561 312 ;C 178 ; WX 556 ; N dagger ; B 38 -177 513 709 ;C 179 ; WX 556 ; N daggerdbl ; B 38 -177 513 709 ;C 180 ; WX 278 ; N periodcentered ; B 87 302 211 427 ;C 182 ; WX 537 ; N paragraph ; B 48 -177 522 729 ;C 183 ; WX 350 ; N bullet ; B 50 220 300 470 ;C 184 ; WX 222 ; N quotesinglbase ; B 64 -128 158 104 ;C 185 ; WX 333 ; N quotedblbase ; B 47 -128 300 104 ;C 186 ; WX 333 ; N quotedblright ; B 49 477 302 709 ;C 187 ; WX 556 ; N guillemotright ; B 98 106 451 438 ;C 188 ; WX 1000 ; N ellipsis ; B 115 0 885 104 ;C 189 ; WX 1000 ; N perthousand ; B 9 -22 993 738 ;C 191 ; WX 611 ; N questiondown ; B 95 -217 528 524 ;C 193 ; WX 333 ; N grave ; B 22 592 231 740 ;C 194 ; WX 333 ; N acute ; B 92 592 301 740 ;C 195 ; WX 333 ; N circumflex ; B 20 591 307 741 ;C 196 ; WX 333 ; N tilde ; B 5 613 319 717 ;C 197 ; WX 333 ; N macron ; B 28 631 302 701 ;C 198 ; WX 333 ; N breve ; B 15 597 316 732 ;C 199 ; WX 333 ; N dotaccent ; B 115 612 219 716 ;C 200 ; WX 333 ; N dieresis ; B 30 612 296 715 ;C 202 ; WX 333 ; N ring ; B 79 579 255 754 ;C 203 ; WX 333 ; N cedilla ; B 39 -214 287 0 ;C 205 ; WX 333 ; N hungarumlaut ; B -35 590 348 740 ;C 206 ; WX 333 ; N ogonek ; B 57 -205 265 0 ;C 207 ; WX 333 ; N caron ; B 19 591 306 741 ;C 208 ; WX 1000 ; N emdash ; B -9 240 1001 312 ;C 225 ; WX 1000 ; N AE ; B 11 0 950 729 ;C 227 ; WX 370 ; N ordfeminine ; B 37 303 333 742 ;C 232 ; WX 556 ; N Lslash ; B 0 0 552 729 ;C 233 ; WX 778 ; N Oslash ; B 30 -23 744 755 ;C 234 ; WX 1000 ; N OE ; B 43 -20 959 741 ;C 235 ; WX 365 ; N ordmasculine ; B 40 303 324 742 ;C 241 ; WX 889 ; N ae ; B 34 -23 845 539 ;C 245 ; WX 278 ; N dotlessi ; B 94 0 178 524 ;C 248 ; WX 222 ; N lslash ; B 0 0 212 729 ;C 249 ; WX 611 ; N oslash ; B 18 -30 529 539 ;C 250 ; WX 944 ; N oe ; B 40 -23 899 539 ;C 251 ; WX 611 ; N germandbls ; B 126 -20 566 729 ;C -1 ; WX 722 ; N Udieresis ; B 85 -23 645 914 ;C -1 ; WX 722 ; N Uacute ; B 85 -23 645 939 ;C -1 ; WX 667 ; N Scedilla ; B 45 -214 621 741 ;C -1 ; WX 611 ; N Tcaron ; B 21 0 593 940 ;C -1 ; WX 667 ; N Scaron ; B 48 -23 621 940 ;C -1 ; WX 722 ; N Rcaron ; B 93 0 679 940 ;C -1 ; WX 722 ; N Racute ; B 93 0 679 939 ;C -1 ; WX 667 ; N Sacute ; B 48 -23 621 939 ;C -1 ; WX 778 ; N Otilde ; B 38 -23 742 916 ;C -1 ; WX 556 ; N ucircumflex ; B 65 -23 482 741 ;C -1 ; WX 778 ; N Ohungarumlaut ; B 38 -23 742 939 ;C -1 ; WX 722 ; N Uhungarumlaut ; B 85 -23 645 939 ;C -1 ; WX 666 ; N Yacute ; B 13 0 661 939 ;C -1 ; WX 722 ; N Eth ; B 20 0 667 729 ;C -1 ; WX 722 ; N Dcroat ; B 20 0 667 729 ;C -1 ; WX 611 ; N Zacute ; B 28 0 583 939 ;C -1 ; WX 722 ; N Uring ; B 85 -23 645 953 ;C -1 ; WX 556 ; N gbreve ; B 29 -218 489 732 ;C -1 ; WX 556 ; N eogonek ; B 40 -204 514 539 ;C -1 ; WX 556 ; N edotaccent ; B 40 -23 513 716 ;C -1 ; WX 556 ; N ecaron ; B 40 -23 513 741 ;C -1 ; WX 722 ; N Ugrave ; B 85 -23 645 939 ;C -1 ; WX 666 ; N Thorn ; B 91 0 616 729 ;C -1 ; WX 556 ; N eacute ; B 40 -23 513 740 ;C -1 ; WX 556 ; N edieresis ; B 40 -23 513 715 ;C -1 ; WX 635 ; N dcaron ; B 26 -23 648 729 ;C -1 ; WX 500 ; N ccedilla ; B 31 -214 477 539 ;C -1 ; WX 500 ; N ccaron ; B 31 -23 477 741 ;C -1 ; WX 500 ; N cacute ; B 31 -23 477 740 ;C -1 ; WX 556 ; N aogonek ; B 43 -205 596 539 ;C -1 ; WX 556 ; N aring ; B 42 -23 535 754 ;C -1 ; WX 556 ; N atilde ; B 42 -23 535 717 ;C -1 ; WX 556 ; N abreve ; B 42 -23 535 732 ;C -1 ; WX 556 ; N egrave ; B 40 -23 513 740 ;C -1 ; WX 556 ; N agrave ; B 42 -23 535 740 ;C -1 ; WX 556 ; N aacute ; B 42 -23 535 740 ;C -1 ; WX 556 ; N adieresis ; B 42 -23 535 715 ;C -1 ; WX 722 ; N Uogonek ; B 85 -205 645 729 ;C -1 ; WX 556 ; N ugrave ; B 65 -23 482 740 ;C -1 ; WX 556 ; N uacute ; B 65 -23 482 740 ;C -1 ; WX 556 ; N udieresis ; B 65 -23 482 715 ;C -1 ; WX 308 ; N tcaron ; B 14 -23 321 800 ;C -1 ; WX 500 ; N scommaaccent ; B 34 -285 459 539 ;C -1 ; WX 611 ; N Zcaron ; B 28 0 583 940 ;C -1 ; WX 556 ; N ecircumflex ; B 40 -23 513 741 ;C -1 ; WX 722 ; N Ucircumflex ; B 85 -23 645 940 ;C -1 ; WX 556 ; N acircumflex ; B 42 -23 535 741 ;C -1 ; WX 611 ; N Zdotaccent ; B 28 0 583 915 ;C -1 ; WX 500 ; N scaron ; B 34 -23 459 741 ;C -1 ; WX 667 ; N Amacron ; B 17 0 653 900 ;C -1 ; WX 500 ; N sacute ; B 34 -23 459 740 ;C -1 ; WX 611 ; N Tcommaaccent ; B 21 -285 593 729 ;C -1 ; WX 667 ; N Ydieresis ; B 13 0 661 914 ;C -1 ; WX 555 ; N thorn ; B 54 -218 522 714 ;C -1 ; WX 667 ; N Emacron ; B 90 0 613 900 ;C -1 ; WX 778 ; N Ograve ; B 38 -23 742 939 ;C -1 ; WX 778 ; N Oacute ; B 38 -23 742 939 ;C -1 ; WX 778 ; N Odieresis ; B 38 -23 742 914 ;C -1 ; WX 722 ; N Ntilde ; B 76 0 646 916 ;C -1 ; WX 722 ; N Ncaron ; B 76 0 646 940 ;C -1 ; WX 722 ; N Nacute ; B 76 0 646 939 ;C -1 ; WX 556 ; N Lcaron ; B 80 0 533 729 ;C -1 ; WX 556 ; N Lacute ; B 70 0 533 939 ;C -1 ; WX 278 ; N Idotaccent ; B 92 0 196 915 ;C -1 ; WX 333 ; N racute ; B 69 0 331 740 ;C -1 ; WX 278 ; N Icircumflex ; B -1 0 286 940 ;C -1 ; WX 556 ; N ohungarumlaut ; B 36 -23 526 740 ;C -1 ; WX 556 ; N otilde ; B 36 -23 510 717 ;C -1 ; WX 556 ; N Euro ; B 2 -23 543 709 ;C -1 ; WX 556 ; N ocircumflex ; B 36 -23 510 741 ;C -1 ; WX 351 ; N onesuperior ; B 61 284 222 709 ;C -1 ; WX 351 ; N twosuperior ; B 19 284 326 709 ;C -1 ; WX 351 ; N threesuperior ; B 16 270 322 709 ;C -1 ; WX 278 ; N Igrave ; B 1 0 210 939 ;C -1 ; WX 278 ; N Iacute ; B 71 0 280 939 ;C -1 ; WX 278 ; N Imacron ; B 20 0 274 900 ;C -1 ; WX 278 ; N Iogonek ; B 66 -204 234 729 ;C -1 ; WX 278 ; N Idieresis ; B 9 0 275 907 ;C -1 ; WX 778 ; N Gbreve ; B 44 -23 709 931 ;C -1 ; WX 722 ; N Umacron ; B 85 -23 645 900 ;C -1 ; WX 667 ; N Kcommaaccent ; B 79 -285 658 729 ;C -1 ; WX 556 ; N ograve ; B 36 -23 510 740 ;C -1 ; WX 667 ; N Scommaaccent ; B 48 -285 621 741 ;C -1 ; WX 667 ; N Eogonek ; B 90 -205 652 729 ;C -1 ; WX 556 ; N oacute ; B 36 -23 510 740 ;C -1 ; WX 667 ; N Edotaccent ; B 90 0 613 915 ;C -1 ; WX 222 ; N iogonek ; B 25 -204 190 729 ;C -1 ; WX 556 ; N gcommaaccent ; B 29 -218 489 817 ;C -1 ; WX 556 ; N odieresis ; B 36 -23 510 715 ;C -1 ; WX 556 ; N ntilde ; B 70 0 487 717 ;C -1 ; WX 556 ; N ncaron ; B 70 0 487 741 ;C -1 ; WX 667 ; N Ecaron ; B 90 0 613 940 ;C -1 ; WX 667 ; N Ecircumflex ; B 90 0 613 940 ;C -1 ; WX 500 ; N scedilla ; B 34 -214 459 539 ;C -1 ; WX 333 ; N rcaron ; B 48 0 335 741 ;C -1 ; WX 667 ; N Egrave ; B 90 0 613 939 ;C -1 ; WX 667 ; N Eacute ; B 90 0 613 939 ;C -1 ; WX 778 ; N Gcommaaccent ; B 44 -285 709 741 ;C -1 ; WX 722 ; N Rcommaaccent ; B 93 -285 679 729 ;C -1 ; WX 667 ; N Edieresis ; B 90 0 613 914 ;C -1 ; WX 556 ; N nacute ; B 70 0 487 740 ;C -1 ; WX 556 ; N uogonek ; B 65 -204 521 524 ;C -1 ; WX 556 ; N umacron ; B 65 -23 482 701 ;C -1 ; WX 722 ; N Dcaron ; B 89 0 667 940 ;C -1 ; WX 292 ; N lcaron ; B 68 0 305 729 ;C -1 ; WX 722 ; N Ccaron ; B 48 -23 677 940 ;C -1 ; WX 722 ; N Cacute ; B 48 -23 677 939 ;C -1 ; WX 722 ; N Ccedilla ; B 48 -214 677 741 ;C -1 ; WX 606 ; N degree ; B 151 383 454 686 ;C -1 ; WX 667 ; N Aogonek ; B 17 -205 692 729 ;C -1 ; WX 584 ; N minus ; B 40 197 544 267 ;C -1 ; WX 584 ; N multiply ; B 95 34 488 427 ;C -1 ; WX 584 ; N divide ; B 50 0 534 472 ;C -1 ; WX 667 ; N Aring ; B 17 0 653 953 ;C -1 ; WX 1000 ; N trademark ; B 63 292 938 729 ;C -1 ; WX 333 ; N rcommaaccent ; B 65 -285 321 539 ;C -1 ; WX 222 ; N lacute ; B 63 0 272 939 ;C -1 ; WX 556 ; N omacron ; B 36 -23 510 701 ;C -1 ; WX 667 ; N Atilde ; B 17 0 653 916 ;C -1 ; WX 278 ; N icircumflex ; B -7 0 280 741 ;C -1 ; WX 278 ; N igrave ; B -5 0 204 740 ;C -1 ; WX 556 ; N ncommaaccent ; B 70 -285 487 539 ;C -1 ; WX 222 ; N lcommaaccent ; B 63 -285 163 729 ;C -1 ; WX 584 ; N plusminus ; B 50 -11 534 623 ;C -1 ; WX 869 ; N onehalf ; B 61 -20 844 709 ;C -1 ; WX 869 ; N onequarter ; B 61 -20 849 709 ;C -1 ; WX 869 ; N threequarters ; B 16 -20 849 709 ;C -1 ; WX 278 ; N iacute ; B 65 0 274 740 ;C -1 ; WX 667 ; N Abreve ; B 17 0 653 931 ;C -1 ; WX 500 ; N kcommaaccent ; B 58 -285 502 729 ;C -1 ; WX 778 ; N Omacron ; B 38 -23 742 900 ;C -1 ; WX 222 ; N imacron ; B -16 0 231 701 ;C -1 ; WX 556 ; N emacron ; B 40 -23 513 701 ;C -1 ; WX 556 ; N amacron ; B 42 -23 535 701 ;C -1 ; WX 278 ; N tcommaaccent ; B 14 -285 254 668 ;C -1 ; WX 500 ; N ydieresis ; B 20 -218 478 715 ;C -1 ; WX 500 ; N zdotaccent ; B 31 0 457 716 ;C -1 ; WX 500 ; N zcaron ; B 31 0 457 741 ;C -1 ; WX 500 ; N zacute ; B 31 0 457 740 ;C -1 ; WX 500 ; N yacute ; B 20 -218 478 740 ;C -1 ; WX 556 ; N uhungarumlaut ; B 65 -23 530 740 ;C -1 ; WX 556 ; N eth ; B 36 -23 510 743 ;C -1 ; WX 556 ; N uring ; B 65 -23 482 754 ;C -1 ; WX 778 ; N Ocircumflex ; B 38 -23 742 940 ;C -1 ; WX 333 ; N commaaccent ; B 116 -285 216 -60 ;C -1 ; WX 737 ; N copyright ; B -13 -22 751 742 ;C -1 ; WX 737 ; N registered ; B -13 -22 751 742 ;C -1 ; WX 667 ; N Acircumflex ; B 17 0 653 940 ;C -1 ; WX 278 ; N idieresis ; B 3 0 269 708 ;C -1 ; WX 489 ; N lozenge ; B 16 0 462 744 ;C -1 ; WX 711 ; N Delta ; B 10 0 701 729 ;C -1 ; WX 548 ; N notequal ; B 32 -25 516 486 ;C -1 ; WX 542 ; N radical ; B 7 -36 512 913 ;C -1 ; WX 667 ; N Agrave ; B 17 0 653 939 ;C -1 ; WX 667 ; N Aacute ; B 17 0 653 939 ;C -1 ; WX 584 ; N lessequal ; B 45 -11 534 639 ;C -1 ; WX 584 ; N greaterequal ; B 45 -11 534 639 ;C -1 ; WX 584 ; N logicalnot ; B 40 86 544 375 ;C -1 ; WX 711 ; N summation ; B 17 -97 694 760 ;C -1 ; WX 490 ; N partialdiff ; B 22 -15 458 750 ;C -1 ; WX 722 ; N Ncommaaccent ; B 76 -285 646 729 ;C -1 ; WX 556 ; N dcroat ; B 26 -23 557 729 ;C -1 ; WX 260 ; N brokenbar ; B 100 -212 160 729 ;C -1 ; WX 556 ; N Lcommaaccent ; B 80 -285 533 729 ;C -1 ; WX 667 ; N Adieresis ; B 17 0 653 914 ;C -1 ; WX 556 ; N mu ; B 65 -220 544 524 ;C -1 ; WX 278 ; N .notdef ; B 191 0 191 0 ;EndCharMetricsStartKernDataStartKernPairs 998KPX A C -36KPX A Ccedilla -36KPX A G -35KPX A O -33KPX A Odieresis -33KPX A Q -32KPX A T -93KPX A U -37KPX A Uacute -37KPX A Ucircumflex -37KPX A Udieresis -37KPX A Ugrave -37KPX A V -75KPX A W -51KPX A Y -99KPX A a -4KPX A b 4KPX A c -11KPX A ccedilla -10KPX A comma 5KPX A d -8KPX A e -16KPX A g -10KPX A guillemotleft -44KPX A guilsinglleft -40KPX A hyphen -3KPX A o -13KPX A period 5KPX A q -8KPX A quotedblright -56KPX A quoteright -65KPX A t -16KPX A u -12KPX A v -31KPX A w -21KPX A y -34KPX Aacute C -36KPX Aacute G -35KPX Aacute O -33KPX Aacute Q -32KPX Aacute T -93KPX Aacute U -37KPX Aacute V -75KPX Aacute W -51KPX Aacute Y -99KPX Aacute a -4KPX Aacute b 4KPX Aacute c -11KPX Aacute comma 5KPX Aacute d -8KPX Aacute e -16KPX Aacute g -10KPX Aacute guillemotleft -44KPX Aacute guilsinglleft -40KPX Aacute hyphen -3KPX Aacute o -13KPX Aacute period 5KPX Aacute q -8KPX Aacute quoteright -65KPX Aacute t -16KPX Aacute u -12KPX Aacute v -31KPX Aacute w -21KPX Aacute y -34KPX Acircumflex C -36KPX Acircumflex G -35KPX Acircumflex O -33KPX Acircumflex Q -32KPX Acircumflex T -93KPX Acircumflex U -37KPX Acircumflex V -75KPX Acircumflex W -51KPX Acircumflex Y -99KPX Acircumflex comma 5KPX Acircumflex period 5KPX Adieresis C -36KPX Adieresis G -35KPX Adieresis O -33KPX Adieresis Q -32KPX Adieresis T -93KPX Adieresis U -37KPX Adieresis V -75KPX Adieresis W -51KPX Adieresis Y -99KPX Adieresis a -4KPX Adieresis b 4KPX Adieresis c -11KPX Adieresis comma 5KPX Adieresis d -8KPX Adieresis g -10KPX Adieresis guillemotleft -44KPX Adieresis guilsinglleft -40KPX Adieresis hyphen -3KPX Adieresis o -13KPX Adieresis period 5KPX Adieresis q -8KPX Adieresis quotedblright -56KPX Adieresis quoteright -65KPX Adieresis t -16KPX Adieresis u -12KPX Adieresis v -31KPX Adieresis w -21KPX Adieresis y -34KPX Agrave C -36KPX Agrave G -35KPX Agrave O -33KPX Agrave Q -32KPX Agrave T -93KPX Agrave U -37KPX Agrave V -75KPX Agrave W -51KPX Agrave Y -99KPX Agrave comma 5KPX Agrave period 5KPX Aring C -36KPX Aring G -35KPX Aring O -33KPX Aring Q -32KPX Aring T -93KPX Aring U -37KPX Aring V -75KPX Aring W -51KPX Aring Y -99KPX Aring a -4KPX Aring b 4KPX Aring c -11KPX Aring comma 5KPX Aring d -8KPX Aring e -16KPX Aring g -10KPX Aring guillemotleft -44KPX Aring guilsinglleft -40KPX Aring hyphen -3KPX Aring o -13KPX Aring period 5KPX Aring q -8KPX Aring quotedblright -56KPX Aring quoteright -65KPX Aring t -16KPX Aring u -12KPX Aring v -31KPX Aring w -21KPX Aring y -34KPX Atilde C -36KPX Atilde G -35KPX Atilde O -33KPX Atilde Q -32KPX Atilde T -93KPX Atilde U -37KPX Atilde V -75KPX Atilde W -51KPX Atilde Y -99KPX Atilde comma 5KPX Atilde period 5KPX B A -21KPX B AE -21KPX B Aacute -21KPX B Acircumflex -21KPX B Adieresis -21KPX B Aring -21KPX B Atilde -21KPX B O -7KPX B OE -5KPX B Oacute -7KPX B Ocircumflex -7KPX B Odieresis -7KPX B Ograve -7KPX B Oslash -1KPX B V -41KPX B W -25KPX B Y -44KPX C A -32KPX C AE -33KPX C Aacute -32KPX C Adieresis -32KPX C Aring -32KPX C H -12KPX C K -10KPX C O -8KPX C Oacute -8KPX C Odieresis -8KPX Ccedilla A -31KPX D A -42KPX D Aacute -42KPX D Acircumflex -42KPX D Adieresis -42KPX D Agrave -42KPX D Aring -42KPX D Atilde -42KPX D J -5KPX D T -45KPX D V -51KPX D W -29KPX D X -53KPX D Y -63KPX F A -69KPX F Aacute -69KPX F Acircumflex -69KPX F Adieresis -69KPX F Agrave -69KPX F Aring -69KPX F Atilde -69KPX F J -51KPX F O -22KPX F Odieresis -22KPX F a -33KPX F aacute -33KPX F adieresis -33KPX F ae -29KPX F aring -33KPX F comma -108KPX F e -24KPX F eacute -24KPX F hyphen -14KPX F i -10KPX F j -12KPX F o -21KPX F oacute -21KPX F odieresis -21KPX F oe -23KPX F oslash -21KPX F period -108KPX F r -35KPX F u -33KPX G A -6KPX G AE -3KPX G Aacute -6KPX G Acircumflex -6KPX G Adieresis -6KPX G Agrave -6KPX G Aring -6KPX G Atilde -6KPX G T -44KPX G V -50KPX G W -28KPX G Y -62KPX J A -32KPX J AE -31KPX J Adieresis -32KPX J Aring -32KPX K C -51KPX K G -51KPX K O -48KPX K OE -45KPX K Oacute -48KPX K Odieresis -48KPX K S -38KPX K T 20KPX K a -11KPX K adieresis -11KPX K ae -7KPX K aring -11KPX K e -32KPX K hyphen -47KPX K o -29KPX K oacute -29KPX K odieresis -29KPX K u -19KPX K udieresis -19KPX K y -62KPX L A 17KPX L AE 20KPX L Aacute 17KPX L Adieresis 17KPX L Aring 17KPX L C -41KPX L Ccedilla -37KPX L G -42KPX L O -41KPX L Oacute -41KPX L Ocircumflex -41KPX L Odieresis -41KPX L Ograve -41KPX L Otilde -41KPX L S -19KPX L T -105KPX L U -35KPX L Udieresis -35KPX L V -105KPX L W -68KPX L Y -121KPX L hyphen -125KPX L quotedblright -141KPX L quoteright -149KPX L u -7KPX L udieresis -7KPX L y -56KPX N A -9KPX N AE -6KPX N Aacute -9KPX N Adieresis -9KPX N Aring -9KPX N C -3KPX N Ccedilla -3KPX N G -2KPX N O 0KPX N Oacute 0KPX N Odieresis 0KPX N a -5KPX N aacute -5KPX N adieresis -5KPX N ae -2KPX N aring -5KPX N comma -7KPX N e 0KPX N eacute 0KPX N o 2KPX N oacute 2KPX N odieresis 2KPX N oslash 4KPX N period -7KPX N u 0KPX N udieresis 0KPX O A -35KPX O AE -39KPX O Aacute -35KPX O Adieresis -35KPX O Aring -35KPX O T -42KPX O V -45KPX O W -23KPX O X -46KPX O Y -59KPX Oacute A -35KPX Oacute T -42KPX Oacute V -45KPX Oacute W -23KPX Oacute Y -59KPX Ocircumflex T -42KPX Ocircumflex V -45KPX Ocircumflex Y -59KPX Odieresis A -35KPX Odieresis T -42KPX Odieresis V -45KPX Odieresis W -23KPX Odieresis X -46KPX Odieresis Y -59KPX Ograve T -42KPX Ograve V -45KPX Ograve Y -59KPX Oslash A -33KPX Otilde T -42KPX Otilde V -45KPX Otilde Y -59KPX P A -78KPX P AE -86KPX P Aacute -78KPX P Adieresis -78KPX P Aring -78KPX P J -78KPX P a -28KPX P aacute -28KPX P adieresis -28KPX P ae -24KPX P aring -28KPX P comma -135KPX P e -31KPX P eacute -31KPX P hyphen -40KPX P o -27KPX P oacute -27KPX P odieresis -27KPX P oe -28KPX P oslash -27KPX P period -135KPX R C -16KPX R Ccedilla -16KPX R G -15KPX R O -13KPX R OE -11KPX R Oacute -13KPX R Odieresis -13KPX R T -23KPX R U -17KPX R Udieresis -17KPX R V -39KPX R W -27KPX R Y -43KPX R a -15KPX R aacute -15KPX R adieresis -15KPX R ae -12KPX R aring -15KPX R e -12KPX R eacute -12KPX R hyphen -2KPX R o -9KPX R oacute -9KPX R odieresis -9KPX R oe -11KPX R u -9KPX R uacute -9KPX R udieresis -9KPX R y -8KPX S A -22KPX S AE -22KPX S Aacute -22KPX S Adieresis -22KPX S Aring -22KPX S T -28KPX S V -42KPX S W -28KPX S Y -48KPX S t -3KPX T A -95KPX T AE -97KPX T Aacute -95KPX T Acircumflex -95KPX T Adieresis -95KPX T Agrave -95KPX T Aring -95KPX T Atilde -95KPX T C -44KPX T G -45KPX T J -100KPX T O -42KPX T OE -35KPX T Oacute -42KPX T Ocircumflex -42KPX T Odieresis -42KPX T Ograve -42KPX T Oslash -41KPX T Otilde -42KPX T S -24KPX T V 12KPX T W 16KPX T Y 20KPX T a -100KPX T ae -97KPX T c -90KPX T colon -133KPX T comma -100KPX T e -95KPX T g -89KPX T guillemotleft -121KPX T guilsinglleft -117KPX T hyphen -77KPX T i -3KPX T j -5KPX T o -92KPX T oslash -87KPX T period -100KPX T r -92KPX T s -92KPX T semicolon -129KPX T u -91KPX T v -95KPX T w -93KPX T y -100KPX U A -36KPX U AE -39KPX U Aacute -36KPX U Acircumflex -36KPX U Adieresis -36KPX U Aring -36KPX U Atilde -36KPX U comma -27KPX U m -4KPX U n -4KPX U p 3KPX U period -25KPX U r -4KPX Uacute A -36KPX Uacute comma -27KPX Uacute m -4KPX Uacute n -4KPX Uacute p 3KPX Uacute period -25KPX Uacute r -4KPX Ucircumflex A -36KPX Udieresis A -36KPX Udieresis b 3KPX Udieresis comma -27KPX Udieresis m -4KPX Udieresis n -4KPX Udieresis p 3KPX Udieresis period -25KPX Udieresis r -4KPX Ugrave A -36KPX V A -71KPX V AE -78KPX V Aacute -71KPX V Acircumflex -71KPX V Adieresis -71KPX V Agrave -71KPX V Aring -71KPX V Atilde -71KPX V C -43KPX V G -42KPX V O -40KPX V Oacute -40KPX V Ocircumflex -40KPX V Odieresis -40KPX V Ograve -40KPX V Oslash -33KPX V Otilde -40KPX V S -35KPX V T 15KPX V a -59KPX V ae -55KPX V colon -66KPX V comma -89KPX V e -57KPX V g -50KPX V guillemotleft -83KPX V guilsinglleft -80KPX V hyphen -38KPX V i -5KPX V o -54KPX V oslash -50KPX V period -89KPX V r -42KPX V semicolon -66KPX V u -41KPX V y -20KPX W A -50KPX W AE -56KPX W Aacute -50KPX W Acircumflex -50KPX W Adieresis -50KPX W Agrave -50KPX W Aring -50KPX W Atilde -50KPX W C -23KPX W G -22KPX W O -20KPX W Oacute -20KPX W Ocircumflex -20KPX W Odieresis -20KPX W Ograve -20KPX W Oslash -13KPX W Otilde -20KPX W S -24KPX W T 19KPX W a -38KPX W ae -34KPX W colon -52KPX W comma -56KPX W e -32KPX W g -25KPX W guillemotleft -58KPX W guilsinglleft -54KPX W hyphen -13KPX W i -1KPX W o -29KPX W oslash -25KPX W period -56KPX W r -28KPX W semicolon -53KPX W u -28KPX W y -6KPX X C -48KPX X O -45KPX X Odieresis -45KPX X Q -44KPX X a -15KPX X e -36KPX X hyphen -51KPX X o -33KPX X u -24KPX X y -61KPX Y A -96KPX Y AE -103KPX Y Aacute -96KPX Y Acircumflex -96KPX Y Adieresis -96KPX Y Agrave -96KPX Y Aring -96KPX Y Atilde -96KPX Y C -58KPX Y G -58KPX Y O -56KPX Y Oacute -56KPX Y Ocircumflex -56KPX Y Odieresis -56KPX Y Ograve -56KPX Y Oslash -54KPX Y Otilde -56KPX Y S -41KPX Y T 23KPX Y a -88KPX Y ae -84KPX Y colon -87KPX Y comma -111KPX Y e -89KPX Y g -83KPX Y guillemotleft -123KPX Y guilsinglleft -119KPX Y hyphen -84KPX Y i 3KPX Y o -86KPX Y oslash -82KPX Y p -54KPX Y period -111KPX Y semicolon -88KPX Y u -63KPX Y v -36KPX Z v -33KPX Z y -38KPX a j -4KPX a quoteright -23KPX a v -21KPX a w -13KPX a y -26KPX aacute v -21KPX aacute w -13KPX aacute y -26KPX adieresis v -21KPX adieresis w -13KPX adieresis y -26KPX ae v -16KPX ae w -10KPX ae y -20KPX agrave v -21KPX agrave w -13KPX agrave y -26KPX aring v -21KPX aring w -13KPX aring y -26KPX b v -11KPX b w -3KPX b y -15KPX c h 1KPX c k 7KPX comma one -100KPX comma quotedblright -41KPX comma quoteright -50KPX e quoteright -18KPX e t -10KPX e v -15KPX e w -9KPX e x -27KPX e y -19KPX eacute v -15KPX eacute w -9KPX eacute y -19KPX ecircumflex v -15KPX ecircumflex w -9KPX ecircumflex y -19KPX eight four 1KPX eight one -48KPX eight seven -33KPX f a -9KPX f aacute -9KPX f adieresis -9KPX f ae -5KPX f aring -9KPX f e -15KPX f eacute -15KPX f f 22KPX f i -2KPX f j -4KPX f l -3KPX f o -10KPX f oacute -10KPX f odieresis -10KPX f oe -12KPX f oslash -9KPX f quoteright 0KPX f s 0KPX f t 24KPX five four 1KPX five one -76KPX five seven -26KPX four four 5KPX four one -84KPX four seven -56KPX g a -5KPX g adieresis -5KPX g ae -1KPX g aring -5KPX g e 0KPX g eacute 0KPX g l 0KPX g oacute 3KPX g odieresis 3KPX g r 0KPX guillemotright A -50KPX guillemotright AE -54KPX guillemotright Aacute -50KPX guillemotright Adieresis -50KPX guillemotright Aring -50KPX guillemotright T -126KPX guillemotright V -93KPX guillemotright W -66KPX guillemotright Y -133KPX guilsinglright A -44KPX guilsinglright AE -48KPX guilsinglright Aacute -44KPX guilsinglright Adieresis -44KPX guilsinglright Aring -44KPX guilsinglright T -121KPX guilsinglright V -88KPX guilsinglright W -60KPX guilsinglright Y -128KPX h quoteright -15KPX h y -18KPX hyphen A -7KPX hyphen AE -11KPX hyphen Aacute -7KPX hyphen Adieresis -7KPX hyphen Aring -7KPX hyphen T -80KPX hyphen V -46KPX hyphen W -19KPX hyphen Y -92KPX i T -7KPX i j -3KPX k a -2KPX k aacute -2KPX k adieresis -2KPX k ae 2KPX k aring -2KPX k comma 0KPX k e -21KPX k eacute -21KPX k g -16KPX k hyphen -41KPX k o -19KPX k oacute -19KPX k odieresis -19KPX k period 0KPX k s -3KPX k u -11KPX k udieresis -6KPX l v 0KPX l y -5KPX m p 5KPX m v -13KPX m w -7KPX m y -18KPX n T -96KPX n p 5KPX n quoteright -14KPX n v -13KPX n w -7KPX n y -18KPX nine four -3KPX nine one -43KPX nine seven -37KPX o T -99KPX o quoteright -21KPX o t -10KPX o v -18KPX o w -10KPX o x -27KPX o y -22KPX oacute v -18KPX oacute w -10KPX oacute y -22KPX ocircumflex t -10KPX odieresis t -10KPX odieresis v -18KPX odieresis w -10KPX odieresis x -27KPX odieresis y -22KPX ograve v -18KPX ograve w -10KPX ograve y -22KPX one comma -74KPX one eight -65KPX one five -67KPX one four -81KPX one nine -65KPX one one -118KPX one period -74KPX one seven -90KPX one six -62KPX one three -67KPX one two -69KPX one zero -62KPX p t -4KPX p y -16KPX period one -101KPX period quotedblright -41KPX period quoteright -51KPX q c 8KPX q u 4KPX quotedblbase A 30KPX quotedblbase AE 30KPX quotedblbase T -75KPX quotedblbase V -69KPX quotedblbase W -34KPX quotedblbase Y -91KPX quotedblleft A -52KPX quotedblleft AE -64KPX quotedblleft Aacute -52KPX quotedblleft Adieresis -52KPX quotedblleft Aring -52KPX quotedblleft T 9KPX quotedblleft V 15KPX quotedblleft W 27KPX quotedblleft Y 5KPX quotedblright A -53KPX quotedblright AE -66KPX quotedblright Aacute -53KPX quotedblright Adieresis -53KPX quotedblright Aring -53KPX quotedblright T 11KPX quotedblright V 15KPX quotedblright W 26KPX quotedblright Y 7KPX quoteleft A -67KPX quoteleft AE -79KPX quoteleft Aacute -67KPX quoteleft Adieresis -67KPX quoteleft Aring -67KPX quoteleft T -5KPX quoteleft V 0KPX quoteleft W 12KPX quoteleft Y -9KPX quoteright A -72KPX quoteright AE -85KPX quoteright Aacute -72KPX quoteright Adieresis -72KPX quoteright Aring -72KPX quoteright comma -60KPX quoteright d -20KPX quoteright o -26KPX quoteright period -60KPX quoteright r -18KPX quoteright s -18KPX quoteright t -7KPX quoteright v -2KPX quoteright w 2KPX quoteright y -6KPX r a -5KPX r aacute -5KPX r acircumflex -5KPX r adieresis -5KPX r ae -1KPX r agrave -5KPX r aring -5KPX r c -6KPX r ccedilla -9KPX r colon -22KPX r comma -69KPX r d -1KPX r e -11KPX r eacute -11KPX r ecircumflex -11KPX r egrave -11KPX r f 26KPX r g -4KPX r h 0KPX r hyphen -47KPX r i 1KPX r j 0KPX r k 6KPX r l 1KPX r m 0KPX r n 0KPX r o -6KPX r oacute -6KPX r ocircumflex -6KPX r odieresis -6KPX r oe -8KPX r ograve -6KPX r oslash -6KPX r p 8KPX r period -69KPX r q -3KPX r quoteright 1KPX r r 0KPX r s 4KPX r semicolon -22KPX r t 28KPX r u 2KPX r v 29KPX r w 31KPX r x 20KPX r y 24KPX r z 9KPX s quoteright -22KPX s t -3KPX seven colon -77KPX seven comma -119KPX seven eight -28KPX seven five -30KPX seven four -93KPX seven one -53KPX seven period -119KPX seven seven -4KPX seven six -40KPX seven three -23KPX seven two -28KPX six four 1KPX six one -43KPX six seven -30KPX t S -8KPX t a -1KPX t aacute -1KPX t adieresis -1KPX t ae 2KPX t aring -1KPX t colon -28KPX t e -14KPX t eacute -14KPX t h -3KPX t o -12KPX t oacute -12KPX t odieresis -12KPX t quoteright -1KPX t semicolon -28KPX three four -2KPX three one -49KPX three seven -33KPX two four -37KPX two one -36KPX two seven -25KPX u quoteright -8KPX v a -18KPX v aacute -18KPX v acircumflex -18KPX v adieresis -18KPX v ae -14KPX v agrave -18KPX v aring -18KPX v atilde -18KPX v c -16KPX v colon -23KPX v comma -69KPX v e -21KPX v eacute -21KPX v ecircumflex -21KPX v egrave -21KPX v g -14KPX v hyphen -12KPX v l 0KPX v o -17KPX v oacute -17KPX v odieresis -17KPX v ograve -17KPX v oslash -17KPX v period -69KPX v s -9KPX v semicolon -23KPX w a -15KPX w aacute -15KPX w acircumflex -15KPX w adieresis -15KPX w ae -11KPX w agrave -15KPX w aring -15KPX w atilde -15KPX w c -7KPX w colon -23KPX w comma -50KPX w e -12KPX w eacute -12KPX w ecircumflex -12KPX w egrave -12KPX w g -6KPX w hyphen -1KPX w l 0KPX w o -9KPX w oacute -9KPX w odieresis -9KPX w ograve -9KPX w oslash -6KPX w period -50KPX w s -5KPX w semicolon -23KPX x a -17KPX x c -23KPX x e -28KPX x eacute -28KPX x o -25KPX x q -20KPX y a -22KPX y aacute -22KPX y acircumflex -22KPX y adieresis -22KPX y ae -18KPX y agrave -22KPX y aring -22KPX y atilde -22KPX y c -19KPX y colon -27KPX y comma -70KPX y e -24KPX y eacute -24KPX y ecircumflex -24KPX y egrave -24KPX y g -17KPX y hyphen -14KPX y l -4KPX y o -20KPX y oacute -20KPX y odieresis -20KPX y ograve -20KPX y oslash -19KPX y period -70KPX y s -12KPX y semicolon -27KPX zero four -2KPX zero one -46KPX zero seven -39EndKernPairsEndKernDataEndFontMetrics'</body><body package="Fonts test resources">nimbusSansLReguCOPYING"		    GNU GENERAL PUBLIC LICENSE		       Version 2, June 1991 Copyright (C) 1989, 1991 Free Software Foundation, Inc.     59 Temple Place, Suite 330, Boston, MA  02111-1307  USA Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.			    Preamble  The licenses for most software are designed to take away yourfreedom to share and change it.  By contrast, the GNU General PublicLicense is intended to guarantee your freedom to share and change freesoftware--to make sure the software is free for all its users.  ThisGeneral Public License applies to most of the Free SoftwareFoundation's software and to any other program whose authors commit tousing it.  (Some other Free Software Foundation software is covered bythe GNU Library General Public License instead.)  You can apply it toyour programs, too.  When we speak of free software, we are referring to freedom, notprice.  Our General Public Licenses are designed to make sure that youhave the freedom to distribute copies of free software (and charge forthis service if you wish), that you receive source code or can get itif you want it, that you can change the software or use pieces of itin new free programs; and that you know you can do these things.  To protect your rights, we need to make restrictions that forbidanyone to deny you these rights or to ask you to surrender the rights.These restrictions translate to certain responsibilities for you if youdistribute copies of the software, or if you modify it.  For example, if you distribute copies of such a program, whethergratis or for a fee, you must give the recipients all the rights thatyou have.  You must make sure that they, too, receive or can get thesource code.  And you must show them these terms so they know theirrights.  We protect your rights with two steps: (1) copyright the software, and(2) offer you this license which gives you legal permission to copy,distribute and/or modify the software.  Also, for each author's protection and ours, we want to make certainthat everyone understands that there is no warranty for this freesoftware.  If the software is modified by someone else and passed on, wewant its recipients to know that what they have is not the original, sothat any problems introduced by others will not reflect on the originalauthors' reputations.  Finally, any free program is threatened constantly by softwarepatents.  We wish to avoid the danger that redistributors of a freeprogram will individually obtain patent licenses, in effect making theprogram proprietary.  To prevent this, we have made it clear that anypatent must be licensed for everyone's free use or not licensed at all.  The precise terms and conditions for copying, distribution andmodification follow.		    GNU GENERAL PUBLIC LICENSE   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION  0. This License applies to any program or other work which containsa notice placed by the copyright holder saying it may be distributedunder the terms of this General Public License.  The 'Program', below,refers to any such program or work, and a 'work based on the Program'means either the Program or any derivative work under copyright law:that is to say, a work containing the Program or a portion of it,either verbatim or with modifications and/or translated into anotherlanguage.  (Hereinafter, translation is included without limitation inthe term 'modification'.)  Each licensee is addressed as 'you'.Activities other than copying, distribution and modification are notcovered by this License; they are outside its scope.  The act ofrunning the Program is not restricted, and the output from the Programis covered only if its contents constitute a work based on theProgram (independent of having been made by running the Program).Whether that is true depends on what the Program does.  1. You may copy and distribute verbatim copies of the Program'ssource code as you receive it, in any medium, provided that youconspicuously and appropriately publish on each copy an appropriatecopyright notice and disclaimer of warranty; keep intact all thenotices that refer to this License and to the absence of any warranty;and give any other recipients of the Program a copy of this Licensealong with the Program.You may charge a fee for the physical act of transferring a copy, andyou may at your option offer warranty protection in exchange for a fee.  2. You may modify your copy or copies of the Program or any portionof it, thus forming a work based on the Program, and copy anddistribute such modifications or work under the terms of Section 1above, provided that you also meet all of these conditions:    a) You must cause the modified files to carry prominent notices    stating that you changed the files and the date of any change.    b) You must cause any work that you distribute or publish, that in    whole or in part contains or is derived from the Program or any    part thereof, to be licensed as a whole at no charge to all third    parties under the terms of this License.    c) If the modified program normally reads commands interactively    when run, you must cause it, when started running for such    interactive use in the most ordinary way, to print or display an    announcement including an appropriate copyright notice and a    notice that there is no warranty (or else, saying that you provide    a warranty) and that users may redistribute the program under    these conditions, and telling the user how to view a copy of this    License.  (Exception: if the Program itself is interactive but    does not normally print such an announcement, your work based on    the Program is not required to print an announcement.)These requirements apply to the modified work as a whole.  Ifidentifiable sections of that work are not derived from the Program,and can be reasonably considered independent and separate works inthemselves, then this License, and its terms, do not apply to thosesections when you distribute them as separate works.  But when youdistribute the same sections as part of a whole which is a work basedon the Program, the distribution of the whole must be on the terms ofthis License, whose permissions for other licensees extend to theentire whole, and thus to each and every part regardless of who wrote it.Thus, it is not the intent of this section to claim rights or contestyour rights to work written entirely by you; rather, the intent is toexercise the right to control the distribution of derivative orcollective works based on the Program.In addition, mere aggregation of another work not based on the Programwith the Program (or with a work based on the Program) on a volume ofa storage or distribution medium does not bring the other work underthe scope of this License.  3. You may copy and distribute the Program (or a work based on it,under Section 2) in object code or executable form under the terms ofSections 1 and 2 above provided that you also do one of the following:    a) Accompany it with the complete corresponding machine-readable    source code, which must be distributed under the terms of Sections    1 and 2 above on a medium customarily used for software interchange; or,    b) Accompany it with a written offer, valid for at least three    years, to give any third party, for a charge no more than your    cost of physically performing source distribution, a complete    machine-readable copy of the corresponding source code, to be    distributed under the terms of Sections 1 and 2 above on a medium    customarily used for software interchange; or,    c) Accompany it with the information you received as to the offer    to distribute corresponding source code.  (This alternative is    allowed only for noncommercial distribution and only if you    received the program in object code or executable form with such    an offer, in accord with Subsection b above.)The source code for a work means the preferred form of the work formaking modifications to it.  For an executable work, complete sourcecode means all the source code for all modules it contains, plus anyassociated interface definition files, plus the scripts used tocontrol compilation and installation of the executable.  However, as aspecial exception, the source code distributed need not includeanything that is normally distributed (in either source or binaryform) with the major components (compiler, kernel, and so on) of theoperating system on which the executable runs, unless that componentitself accompanies the executable.If distribution of executable or object code is made by offeringaccess to copy from a designated place, then offering equivalentaccess to copy the source code from the same place counts asdistribution of the source code, even though third parties are notcompelled to copy the source along with the object code.  4. You may not copy, modify, sublicense, or distribute the Programexcept as expressly provided under this License.  Any attemptotherwise to copy, modify, sublicense or distribute the Program isvoid, and will automatically terminate your rights under this License.However, parties who have received copies, or rights, from you underthis License will not have their licenses terminated so long as suchparties remain in full compliance.  5. You are not required to accept this License, since you have notsigned it.  However, nothing else grants you permission to modify ordistribute the Program or its derivative works.  These actions areprohibited by law if you do not accept this License.  Therefore, bymodifying or distributing the Program (or any work based on theProgram), you indicate your acceptance of this License to do so, andall its terms and conditions for copying, distributing or modifyingthe Program or works based on it.  6. Each time you redistribute the Program (or any work based on theProgram), the recipient automatically receives a license from theoriginal licensor to copy, distribute or modify the Program subject tothese terms and conditions.  You may not impose any furtherrestrictions on the recipients' exercise of the rights granted herein.You are not responsible for enforcing compliance by third parties tothis License.  7. If, as a consequence of a court judgment or allegation of patentinfringement or for any other reason (not limited to patent issues),conditions are imposed on you (whether by court order, agreement orotherwise) that contradict the conditions of this License, they do notexcuse you from the conditions of this License.  If you cannotdistribute so as to satisfy simultaneously your obligations under thisLicense and any other pertinent obligations, then as a consequence youmay not distribute the Program at all.  For example, if a patentlicense would not permit royalty-free redistribution of the Program byall those who receive copies directly or indirectly through you, thenthe only way you could satisfy both it and this License would be torefrain entirely from distribution of the Program.If any portion of this section is held invalid or unenforceable underany particular circumstance, the balance of the section is intended toapply and the section as a whole is intended to apply in othercircumstances.It is not the purpose of this section to induce you to infringe anypatents or other property right claims or to contest validity of anysuch claims; this section has the sole purpose of protecting theintegrity of the free software distribution system, which isimplemented by public license practices.  Many people have madegenerous contributions to the wide range of software distributedthrough that system in reliance on consistent application of thatsystem; it is up to the author/donor to decide if he or she is willingto distribute software through any other system and a licensee cannotimpose that choice.This section is intended to make thoroughly clear what is believed tobe a consequence of the rest of this License.  8. If the distribution and/or use of the Program is restricted incertain countries either by patents or by copyrighted interfaces, theoriginal copyright holder who places the Program under this Licensemay add an explicit geographical distribution limitation excludingthose countries, so that distribution is permitted only in or amongcountries not thus excluded.  In such case, this License incorporatesthe limitation as if written in the body of this License.  9. The Free Software Foundation may publish revised and/or new versionsof the General Public License from time to time.  Such new versions willbe similar in spirit to the present version, but may differ in detail toaddress new problems or concerns.Each version is given a distinguishing version number.  If the Programspecifies a version number of this License which applies to it and 'anylater version', you have the option of following the terms and conditionseither of that version or of any later version published by the FreeSoftware Foundation.  If the Program does not specify a version number ofthis License, you may choose any version ever published by the Free SoftwareFoundation.  10. If you wish to incorporate parts of the Program into other freeprograms whose distribution conditions are different, write to the authorto ask for permission.  For software which is copyrighted by the FreeSoftware Foundation, write to the Free Software Foundation; we sometimesmake exceptions for this.  Our decision will be guided by the two goalsof preserving the free status of all derivatives of our free software andof promoting the sharing and reuse of software generally.			    NO WARRANTY  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTYFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHENOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIESPROVIDE THE PROGRAM 'AS IS' WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSEDOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OFMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK ASTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THEPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,REPAIR OR CORRECTION.  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITINGWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/ORREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISINGOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITEDTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BYYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHERPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THEPOSSIBILITY OF SUCH DAMAGES.		     END OF TERMS AND CONDITIONS	    How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatestpossible use to the public, the best way to achieve this is to make itfree software which everyone can redistribute and change under these terms.  To do so, attach the following notices to the program.  It is safestto attach them to the start of each source file to most effectivelyconvey the exclusion of warranty; and each file should have at leastthe 'copyright' line and a pointer to where the full notice is found.    &lt;one line to give the program's name and a brief idea of what it does.&gt;    Copyright (C) &lt;year&gt;  &lt;name of author&gt;    This program is free software; you can redistribute it and/or modify    it under the terms of the GNU General Public License as published by    the Free Software Foundation; either version 2 of the License, or    (at your option) any later version.    This program is distributed in the hope that it will be useful,    but WITHOUT ANY WARRANTY; without even the implied warranty of    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the    GNU General Public License for more details.    You should have received a copy of the GNU General Public License    along with this program; if not, write to the Free Software    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USAAlso add information on how to contact you by electronic and paper mail.If the program is interactive, make it output a short notice like thiswhen it starts in an interactive mode:    Gnomovision version 69, Copyright (C) year  name of author    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.    This is free software, and you are welcome to redistribute it    under certain conditions; type `show c' for details.The hypothetical commands `show w' and `show c' should show the appropriateparts of the General Public License.  Of course, the commands you use maybe called something other than `show w' and `show c'; they could even bemouse-clicks or menu items--whatever suits your program.You should also get your employer (if you work as a programmer) or yourschool, if any, to sign a 'copyright disclaimer' for the program, ifnecessary.  Here is a sample; alter the names:  Yoyodyne, Inc., hereby disclaims all copyright interest in the program  `Gnomovision' (which makes passes at compilers) written by James Hacker.  &lt;signature of Ty Coon&gt;, 1 April 1989  Ty Coon, President of ViceThis General Public License does not permit incorporating your program intoproprietary programs.  If your program is a subroutine library, you mayconsider it more useful to permit linking proprietary applications with thelibrary.  If this is what you want to do, use the GNU Library GeneralPublic License instead of this License."</body><body package="Fonts test resources">nimbusSansLReguPfb	^(ByteArray fromPackedString: ' @FPA@@@IREPT25AYF="YTY/[''P-LR80N"ANZV5"]WMSXV9LKUI%Y7T LR80MVDJIRUTZWQ,YS( S&amp;%-X''U3T6E.SB5RYV]5B"T%P7I%XWQ)[69DXWQ%N"ATZGT SVE2HCH0HCD0N#@8N#T1HCH0LCLJIRUC\&amp;U!]F=2N"AP\&amp;%-[7( TFU4YWI,ZV8JIRUD[6M5[VU.]EM5\GA,ZVU$T&amp;U3[7U2X6U3N"A&amp;[694HD9)[VI5\5M![$0-T&amp;U'']P(%HDM/\G%2ZV](]B@(UUIWJR,+KDM/\G%2ZV](]B@1NS$9HFI9HB!UT%\)J2, QFU3ZV].HBX QFU6YV1/\F5%[''PJIRAGYV9%\&amp;E4YVP X''$ TFY!QVQ)]B@1K#@ JF!4]G@:K2=0Y&amp;E%YF%4K''M&amp;K&amp;9%]B&lt;)B"T%QV9$P6=-[VU.]GLJQ&amp;=.]DQ)\&amp;U#]F=2^R=NZV5"]WMSXV9LKUI%Y7T Z69/]69;K49)[VI5\5M![$0-T&amp;U'']RA&amp;ZV9$Y&amp;=.]BA$]W@/UV9)\WU%RTP Z69/]69;YGU0B"=U[&amp;%1]VUIQBA''YWP MS@2LC$0L"A%\RA%^FM(K4Y/[''QT^WA%HF]%]B@1HFU1HFE.YG5;\F=0HFY![GM%_V%&amp;YV13YP);\6E6YRA4\''U%_W-&amp;XV13YW5)Y&amp;U,\6U=^6Y![GM%_V%&amp;YV13YP(1LRA$ZVM4HFI%Y6%.B"=F[694UG%0YR@1HFQ%Y (/Q&amp;=.]D5!]GI)^BA[LB80LCD LB@0HC@.LC@1HC@ LBA]\&amp;U!YF=.[G$ YFU&amp;B"=F[694S&amp;E-YR@/S&amp;%-X''U3T6E.SB5RYV]5HFQ%Y (/Q&amp;=.]DIB[7  V241M3P KSH8MR@1LC@1HC$5L2A]\&amp;U!YF=.[G$ YFU&amp;B"=U[&amp;%1]VUIQB@5LCH0NS@2HFQ%Y (/TFE)[''QT^WA%HC@ YFU&amp;B"=F[694RV9&amp;[2@9HFQ)X7P YGU0HFI%Y6%.B"@/]&amp;U2\6%/["@(LR80MVD)HGI%XVQ/[&amp;19HFQ%Y ( K49/]F%#YR@(P6=0^WI)Y6!4HE00MSAUT%]\LCT1J2,,P6=0^WI)Y6!4HCD9NS$ X''$ WC@5LEURU500MSD+J2ADYWM)Y68 I"ADYWY%[F=0[VU.]B$ \&amp;U!YF=.[G$ YFU&amp;B"@/Q''U,[D9![VT JD9)[VI5\2ASXV93HD0 T&amp;U'']V1!\"$ \&amp;U!YF=.[G$ YFU&amp;B"@/Q&amp;E-ZV19S&amp;E-YR@(S&amp;%-X''U3HEM![''L SB$ \&amp;U!YF=.[G$ YFU&amp;B"@/U6U)Y6!4HB!RYV]5[FE2JRA2YVE$[69,^RA$YVXJHB=I]FE,ZVMA[&amp;],YR@0HFQ%Y ( K6%3Q&amp;%8YVQPZWQ#ZBA&amp;XV13YRA$YVXJHB=U[&amp;Q%\&amp;1)[&amp;UP[7M)]F%/["@-LST1HFQ%Y ( K5U.YFU2[F%.YUQ(ZVM+[&amp;U3\2@5LBA$YVXJYV9$HGI%XVQ/[&amp;19HFQ%Y (/QV9#[6Q)[&amp;\ T7Q![&amp;Q!\&amp;QE[&amp;M/YF%.Y2A$YVXJX7U2\&amp;U.]FQ)X7P YV9$B&amp;M5\''I%[''Q&amp;ZV1%HFU%^FU#B(@B)J\@@F''Y@DEDML$=D''LPYO5S[DLOCQXP3SM5QRY63VA*V;IB0P$G)[6S]/$*HZ5[FD"''GGKB,_K)#&lt;[[&gt;29,_U#5UM4^!''/&lt;R0^)PCV&amp;JOO +$#=F*8\6Y:)/V(LJ%3; W]=D?&lt;YW)U/!UYIV083G_*4.E9&gt;4W8$*H/]R^4^Z)''!:%N=U-,H4[$21/!1C4&lt;B"C(8P9.;B@K:-X[W+=E&lt;]\KHY=2E%^_56X&gt;ZOE(^M&amp;,8H9FXPYJ\1D=_9-J NS?^/Q4T;;[:8_*]E[WE^3,&gt;IA-0R%O]C84^70V05WRSV,5:Y''*N!4N2_)A+81JN&amp;TN3DECVMPBF[M*+ZPM V+?&gt;\7:U.*#J4,[MT8C?VVGL/EZXBBN.C\G8_,T]^[ER:/E!B/1=B''I5@%:$UBCKYFK?P&amp;?S(O''6MV@RFH,;A22[N,[ ''!D^Y/HC.D,(&gt;''S K5DK&lt;9*\,M*V"%JGNB15N"S$.[J!,[$M&gt;3;7D.H9%*L_DU._[_E=,]?SZN,ZV,Q7Q3-IJ=_1UT!,''15/JA!CBA&amp;/RO(N "#8!0''CO$T"7V[M"=NH''Y!&gt;WIM:F@FKYJ=L)/&lt;\0&amp;M5UY8. Q!''0P6)^UL&lt;G;X[A1OTE!''5O)$;XG]S%I"&gt;*?GK1!MR H"GM[D\32\&gt;8PU;LZ?&gt;6CW90G5YX41;&amp;L?E%3( *5\D9%;YTHTF?M$]EJ@G7ZZ#KK.RBI&lt;#!9^V2D@35$&amp;&gt;^.8%?M&lt;7I#''*&gt;(-O\Q&amp;)SA(%U;8 3I%3BF_3&lt;R&gt; 6TA @!(1-*-7)6,: ,WBGQYU&gt;]XCH&lt;/PM0;:R''?&gt;P&gt;3.K?HAC2FX5^*)EZD!R&amp;JOT9!@.B]6[.A2O;&amp;F%N/A''EJQ"&lt;AAM"9=AOFOJ8&amp;''LI!OL;&gt;_LV[1 ,/)1?%#S@?31E%_C[9"DZ9;?"7Q7GL@:28-+T?&amp;61K=GVU.V9\#:[QY:H?1 M_OE)S]:+^CT7J4JDC@2NL./8B=T[&amp;0(+1&gt;-QNK%&lt;&amp;?0KE GD5PA#:O-K3Y3L (W5RMC[&gt;O;R!FF2-V[:RQUZ"/0QYCR3&amp;(C^(5B"+2;S8J,_"#7DNY;0R%F/&lt;)!G;*@36NM1%[(WD(^;O9&gt;7''NSL]%U)C&amp;T8K''"[P\P\];KRP?=J:)U-W5HX+L()&gt;+6-HZKK ME H;R/_PLK(''BM%KZ?! WF;O"6Y1.1]D1#U^F&amp;\Q9H[^L]I7[VXRC1NUB&lt;3V?/''BK\:-DXDT[ZC&lt;/B_0K&amp;].=XH38!NA;M^5RAVKX"9\Y\Z@&gt;EL9*S%A@ /+7=?Q3OC(SX&lt;P2R_QQ(Y"R\):G0T0DFN*6VYP+E"IS$/S*E%:@9Y%IWT" I?I1ZC2U!.''DXV!$[1&amp;7-,X^,-YC&amp;-]Y38$9[G//7&amp;=0II)CL:C;@1$E65Z0TT[U\;$*FC-MNK&lt;QT_3EK72MM_S[/@:IAIWTX:YA/7M&gt;=_''-LYH)AMA^GY7/ZUPMA,/G][$:MH#A^HS8.E76)''RKR+ 8U9#E&lt;IM3PS* *;&gt;TS]UO209S(&gt;!*7K#F#GY%Z..XXE5O,#''VT=&gt;"ABIV''UE379V&amp;KA_*JJ&lt;=G&gt;-G$*F,(&gt; DL?5Z#!H@DU[8C[."V7?XQ&gt;7#_;=,OC$") SB@63TH&amp;;2:T%S7"&amp;S$BP;_I6YE%!05V&lt;5X-MX_#I^WE2=&amp;)XEKE![H/=[S! 2&gt;7\VOQV\LK2#LP78.OTKL;KR1QZ+/''J:@1%Q&gt;)(0MQS%E=&lt;-U8C&gt;=0)31HD[JO4X8,SG O*"$6F;&gt;^^8''S4&gt;*O(AC+''#G7-\($11)._\G3^%4P+M ]95JA=GX**)0Y4QO/UB1A#"\CF0YE?\ @N]Z_0VJ-T'';:.=R#[QM/*LBEDGY(@&lt;D6''Y]'']82&gt;J"N8G)75S@&amp;ADO];]+^&gt;X,^:/)_[-D#8L;U;2&gt;QNQDBI0T0V=%K%''_G60G+L(A]MW-,-@"W#T$*#X@B$%1U3;HJ+-USF$S:$&amp;BS(\,/M38X*]2KJ8^#%A_W#X"Y/]&lt;0V&amp; +SZVEW_+RP-LQV7VR6E@UHE_.Y[X8I!EXC88TH;ZN''^10:K1AM(&lt;\A0\/V&lt;0&lt;_EWW&lt;QI/F=Y/7A''(FP-K9V; D\%HU1O2#SOSI[&lt;W+1@&lt;OPW''^:_MD-#,;R#DI''NV&lt;:\UV(\7&gt;[CW60LY6-XG?&gt;H,LY;&amp;S6CE^LMZ7P*M''T6FFOG.JP''^#ER^!]3OE&amp;YN''&lt;;MFQ&gt;E@/*%*D*$:YV2M]28R_&amp;#!#G#.Z7DFOWV-(\%6DKYM,85?+T&lt;UB/@+$5V&gt;ZKN3J(R9H$:#)X6RW8/T&gt;S7P)8)O8RFV0,YSQDGOY''J+T$/1+&gt;#1*:LD.''YV*W&gt;_4N"A6U+M -L/S)],3HGZ_7.JR^\RP!NR8=993*5X+12P$9HCMA.1FI_NP!I:4$[67;[_!,61T]5OO#7N7/PJY8-T_K=J+S&gt;T&lt;X&lt;^ET/S+8[1#*Y&lt;;&amp;FQ.1E-Q&amp;N2T@B:VZX,''*_GXY-4J;:LETPF^-O;PX6LXKV]5%PCC)6H%R++4(/J(#DM5_:B/:CQGX4IU?E0^@O_RY=X&gt;-_5C+1M9T1T6]ZY0@[!D M8WY4OBPKIZZ@P*+D''-MJU)2J@99PR$B''B@K4F4S% @):+(83];]MN]RQ6*Y;;4+XE03HF();KN0J\%S2 L6(&amp;I2WT[&lt;)0L''2LDL%EYKQ&lt;@]K"6*"KIE-]''QVGKZZJ$*A$8,O]L.HV1.._@YU)&lt;&amp;D-+,9C4,&gt;0*?[&amp;PDE3RN2C?**&gt;R]TJ_/0Y;WAJ%EBP\@(6[2&lt;WV_.\?V8$5:6HBXX;F"&lt;O&lt;^,9Q)_U&lt;"QW6\)&amp;-+G"*E+D=4P2 Z)FTN3Z/7NVHQDL&lt;&lt;!X:\LHB/VJD6.&gt;^K?''B.T]O1J\80B;WWGC)PX&amp;8R,UTWSSS&gt;:/@G22''F@V^1T,[9CZ1*"C!DRO7A9KOLU.*(/0#JJN*[EA+]["U_AP_X4:_X7?R[1SV''PY85_#.F(M@6*FJ)*:#.;*A,?=K_4(@XBDE8HTC1W1^#][S14/6NG$\,)3F*U,(D\=!,7E@];;&lt;LX1N88-$5F9YYZ&amp;A[MU+$Q^[")K!DO]MJPJ86I677_V0D$K#2''(1,=0W9Y@P8IX+-7BR:R1,?OP&gt;PNX!.F8XQ]&gt;O"R^ 40D.&gt;(UJ^3\7XH,@E,3-$!]-S-USA7&lt;$TQ^$7.F6B-%Z 2Q+X&gt;VT&lt;&gt;8D69/9X[Q/"'';,E]$"E.XBU.F?ZK-UN^FAIP&gt;A?SX&lt;8S2(&amp;P7O#C?9ER@&amp;?C!LG:,''?UIHR&gt;Y?LB(%&lt;U),PA9I8DKAV9QATAT&lt;&amp;_/?MUX3PNF6S_WXGXZ%A57&amp;SA:J/W"%CBV2[\%&gt;&amp;Y!@BQNM]K.N-PF*P2M4Z=$2TE^1-Z? %H%J7XA.V''ZU?),JEK?RA3)#R5N927Q!.QD$R-@MNK%5"2;#LO*SS)A1X+NU+Q=_^8H]"&amp;-5'']&amp;&gt; ?0KWX0NYX69 LX VTC#&amp;56;*#W#/J;7Y$0]W_@3D_%L[8S,%J^:N*''A &amp;@V:[DW9I:*9L''H($N&amp;"P3(T B8=N0E]EP=5YPGG"R!0VE#30*26^FG&gt;^EXI_U96(0&gt;5RP&amp;&lt; AWFCR;7DR-?:)K1&lt;KT]?[(C^+ &lt;%SP^V'',=E[=%Y]UW[M&lt;BR-4U-))A*]A;13%H9_J9%*7?W8T+SS2&amp;QN;=N3= ]\E86AL%XAWIA$64ZA&gt;G_YWJ4X9''&gt;4&amp;MUJJ=OK,"KN_^0D9 ) 8J2&lt;''9=*#-MH,9 FTD?Y* Y&amp;V@5^0E5I09937YFESH3@FE8.ZZ&lt;P=(:"?F^&amp;5K&lt;&amp;_R:HR[EN1;4(4V2=&gt;S9 CP7H#CR,6%VL)X0(8M5+2"=%IT!:ZN_CI8M^, 51BQKMA,RAS:VK#065B&amp;WYU^N-I4$[DBPL&lt;([5&amp;''+"&amp;KAFT:-TJCYN ''FL"TJ/B;Z0XI&amp;?A4NSA)/5==#-F(D.)\..?,&amp;B\QV)IZV?%/.''.(Z;C&lt;=6YF:2;/3?Z]T;Z!+._&amp;&amp;2,CZX^E7*P$^7K@R=;.#3KGAN$NRZ 4%23J$.LK6J_Q9$$]WUH^MXE9]:C"@ .]ULA]MN$X):&lt;G0CVJBUTN_/)R.[D?/]+&amp;*CQ:^:KNZC[C;[C[ETHS,/.\_?E/&gt;&amp;1^MEH;4TZRO2L+*8];A+U)"QUXN)O9D8;&gt;CA6@;T$\B.1JVUMFA7Z67CF^L7V$H"27HI!H4691:$37EL*JRU+MLN WW^\&gt;W(F5ED,X18;EF!;''#T[1]T)@H2EGBR*O(%1TH8=2WJB&lt;8^(IB^+JN3W? M40S4Z@H+&amp;[]"TPGB++4W'') YB@31N9$S9J^@E@G82WJ"/P("$''O]T''@Q5H&gt;(%9H&amp;/]@DE+C5FF+*L]3^G[-OU0.!90VOT6,LX[X1L(U:NGN&lt;HI$OVAXP-8&amp;, ^D-[&gt;#&lt;IM(ME2Q@RNKI!3U^&amp;( 7]W]NH!./=!J\M%2&gt;IG5&amp;NOMZ8V:%?/)IP%''0;HC1"IO18:Q:QA]KW=2(IHD+-K4T]&lt;P 2EA("H\4LKWWC^2X:&gt;AS3LA7[%H** M4CU&gt;M^F@TWR@H&amp;H0O2E+\:!&lt;3YYDDWJ* [G$MWTNWFY_XB?[@,.,FO=T"/M/P^HY&lt;FSE-$6H7^+%+ZD_.?7&lt;E4^83=9Q0R#$\Z7\RK*%I7+F&lt;G&amp;\$C4X1#0"+2COK0K1]0M7NJER(MW!\0SY''W)N!&gt;- ''G0O!/9K)YE@6-5L7&amp;_.DH!E:WW_6M^!*O3(BHO)4"(68&lt;&gt;P(_HPN(4?5_T&lt;2GDPLMIHO7U$&lt;D*;N]AYK#I&gt;\!N]Z)3[0T#5+]&amp;!$%I*SEM&amp;4=W%Y.\L:&gt;.)4 ^NJW^RO&lt;]KA/+&gt;.8G.P6Z#KMN7;2X2]6+L?,Y1-?  08Y0F)\9F&lt;GSH6:-PC&gt;P]P7]-+,R6UDVIBCF(U&gt;*B;^BRO_,F+Z!1):@''OM,CO72 6DLOYY:PTBMM35_52NE:&lt;H8&lt;X(%RXKX,*RZ/""GF4&amp;*&lt;,(:LSR/?&gt;.UMX!]6I.%4./NA2*Y&gt;GFLG-W3]MFJ4=J-KH,YLQO1Y6=C%,$+XH2"?)''BVNZJG-.XQ73.(WAS=/4[IBJ^;^;+B"%&amp;Y&gt;JIXI#\]V;JRUI=&amp;M(7N?EZ"+Z/G8C# (K7K"C%:ZGA3H!W IR5M\.;J9ZH96;U*''..&lt;%I4V)HK5A&lt;-[QE7A^Y$(W&amp;";3_% ?&amp;@UM+MO9A,V7S''#(M-DM"P;69QXC-!3=3UD!7B4:5(^?L$WAL%?_T@:,$=Q^H;I+(E/ME,&lt;&amp;8@3VN&lt;KP1PBRJ.=Y@KL2;5B6WL$7=T9H$Y6]GN25:A,&lt;2FJ&amp;]Z5[PC:,G9E@8(DLI,N#549O.G+HC''#9_#AG''=YI&gt;9E:"N&lt;7H9+!9$=4!&gt;W4V&amp;3,G6D3U-_+W4[.)PI16=P"[V$04\S##Q,@39W!!1R%;P&lt;L5*DB@;Y G:M3?CGP+?S+?=JHNR5H@X@XN5DFMF;@4\=MOH?"D"QPCS4?IQ/PZA(;[0Y_//]\\0#D6B4H''*RP5:1# M)(&gt;J"L:VU#HQ?-6TUT''N&lt;)XN1THIW&gt;2]1+STXS1!&lt;M9_864K 4/Q%PF1&gt;7O@U5_\P"J"-N=EVH/5;5GE0? XSDLD\BRT2B#W=/#=P7"% [%4+![UGHE\FV?8$B06 _R?0V#R''0Y:YZU1:I.AZ48IW2YK)VD3PCF*#RKB''1,VESD9#O\/)"U%?.@&amp;B07L\41;3AT2;W4:$U4RRW:?''^$ =P"9A"J,&gt;&lt;X6,085P"C;2@2,47BEPEY(/Y^]C!#&lt;]H6PNA;N/=9;K?$JNE:WD;1U3(SZ$36T.2N[8UIISS5W,E* @=+)&gt;R5\U^"RG1[U:#VQ]$7X/!90-LFXE*R#*+*GW&amp;VO7F]4GB@?GT9",O8B=#ZV)H2CK4GE0.ZB^#X-RAPM4;K +&lt;!/1@*OKDROFV?X0EF2:.]HTMAT6=''-$RQV&lt;]6()* RB)1R&gt;P''ATW&lt;OGVB($QG/,''Z0!EWS.4T$E?GX^&lt;? *OE:C#7X''N.E&amp;GBH8(O)WVN7?8TO2^(S1I&gt;R-ZYX-6DJ@%).1IC5PB!=!V%?SJ#",&lt;?C3[76C3+L8#E+RXD''L;@$5D*N^;JK&lt;A&gt;@ HVE2,;91BZ]2OH50UFH+NP4K?35&lt;K1$[S94^#T0NOXK):_[H2T*-*KQ 16W!\ +-*#9L]@R/B0+.(_%7 7&lt;ARK!S)V]1#S:\,V&lt;TZT642J=+C@^K 37U.OOT21@ANXJX=3\&gt;/Y!6;)*!_0&gt;;32$&lt; [6(+5\O?(LHL MJH4*Z&amp;=-M&amp;SE4CU_"4+B50[=Q2@S/B;AP*+(&lt;TF-%&gt;V]]V3%  CWYYZ4[V6TK''QM[2VH71H^=20[S+?.G5P^7SM7TY*2!#K#3V03:C5SHMRKDX(2-9P1JZ"&amp;&gt;1WKTM,U\2$.,/+_3(?L#D@_&lt;O)RJ3/3B8_Q,$4VD1=N.*_Z: #E,V&amp;#8(\5_-3:-[L3UL56T0T"J*^F\7XTE+J\%*0H"F(RO,,.NAM01+HE_;)HX72A#[$+&gt;M:IR.$7^B/*)NL--0)2BT''*J&lt;?ER;FVD"NG.''\TP_?,/V8O-T;=JT(=DI4RL=V,P-R46&amp;#&gt;P!]HR;%5U81S(H:T\(TVHD,RZ:DWH3E@\3&amp;96GO;2D:%,;Z''-=B,;\O P/ 0 03%Y[^"[1/]UO4!+GZ#IZ5T,&gt;&gt;0GXY5X2Q=S1@LV3X?,:HX.P&amp;J+5(&lt;;;[$-A]=&amp;6/&gt;H&lt;:4O%&amp;(!P]B%E!3AI&amp;AUMCWR+_\E&amp;#QKQ-JDG];^H .D33?45V+H2L\XHN5V1:TC7US Z36X\6*Z8)N032I/ (*&gt;?-%Q(*1Z/_\BC=&gt;5MX&amp;%R N#P9U5-_N+IJY#\32&amp;IFTNWSUN8;3X:=*.&amp;6K0MEUE%4RQM05HPWO8F-D2[32M+A46&lt;2 Z?EN2O [&amp;&lt;*''VVQ_SB^ ^,9[R86^ND2FJ,&lt; KQ0!^,2,&amp;GF;=,2&gt;=A 7R]@.+9T9[K^$:D]W6[''QY9I5!IIFL=\M;5Y$FD9&lt;58P*=+3RH5RA"DWEX+N@F/3]CWK[8XE[&lt;[,&lt;&gt;N8Z** =9*O"\HO&amp;J+HS[4#&lt;1ZNY]4[Q:0-0NHXXW7LGK"]E48^MOM ?1RM''\#WH&gt;;8L#_)E+^]?)(^ 8.6FFS2#W+P6.P&lt;)I^RC/5434*6TH4[4TB'',R5PP&amp;!-]M)XQBG?5*)AS$)F8#]J*.3?G%^1*;E]O+@Z*X5^*&amp;[VZJ_T^R,GCX7=;W8X(?&lt;8D8&amp;*DK4,SP(:N!7Y@EW!BL I:1C@GHS!5^7O)?UUB%I.=GV?9%FAI5LB$07U&amp;:(;(S*9)U&amp;MAJ: :MS4X3_XT/OOX8$OM;[!,BJ16@@PN)U0T$G!T.M;A;K!]M)9!P&lt;D\&lt;Z?B/#%CZKVIN-7WG0M87L=_W$"32HM\3NE!^S.Q#A5NT^MDDX?A]@,]P]P5VE 6,2XUL"Q:!WCXXLEU8C5Z#/L=;LFYXEP-=;R6);*&gt;B*0"D1U;&lt;Q72F1B]_\#].LWA@%**[*2=KU"L,#6&gt;./4:Y/3"&gt;;QSO;#A+^UC06]=D) 79.]U/A?YF-ELE=^=$0-$YOK7''Z_Y1-KA*_C&gt;M&lt;A#&amp;YZ,XQ*SRCC"AG)VTE4DAO8)2_T*]U1AWWPM&amp;.VX5*@#75;P8];TN3$.&lt;UX]"\6&lt;8E&lt;GL:&gt;V+&gt;J2R3CE52WRE=]C:J@#;7E M??9T?!]25NIDI@LL)SD6U&amp;H.\33_JQA&amp;_ (=RQ?-1U\#KBR,''%S?8"4SH\M.3-=T''(&lt;H^V30W^)2''&amp;,D)2]KT!!WK7B@&lt;.3[S\,5 W?3N,,+S&gt;?,O6084](VZW1''E=&lt;Y&amp;'')@:JA5DD+! /YJ[G.&amp;**,@A$I?&lt;$O]X8CYM:,4L&lt;+&gt;?&amp;IT9&lt;?2X7Q%[*X=GL&amp;-#BMP[M&gt;(+6DPXK&amp;&amp;Z?O5N0?238$1''&lt;B@?MXO&gt;L[T=$;^:&gt;*["$=@3^PU&gt;9WR!V996,&lt;R 0#8S^_DN,,;&gt;1_CGS_''Q8?EZ$#^A%- 9:TGTJ,83/\C")QSN8?;^^ZDG0\/K"S)R8V&gt;VTE]//8.QCO_1[M&lt;TL+4QJ8YTVZI7&amp;^X?D67NL^X3YFEB9KJ''1=[G\+GUA''-2DS0W?X9E:@C*K2&gt;R!R]"=]WFLD+E8O-&lt;YL)X2_;O/F[&amp;=.)3V_I09R[T%5][!7080Z0(A@PJ+"^25B9_(D1)I4MILK6S_6-4GIQU-HBT4)EK/![,"1,"U6IM6%_EO?N([@_&gt;(?&amp;(IU21\+XNDNZ_TU+4%F7]AU(7?C5Z[2!%!/CW^I3S9U @&amp;JO&lt;::&gt;:D;0R/\]B4)6"SJ&lt;FV\UOX%\!WY,-8E.!KYF1P:99AM%0P+&gt;&lt;@-U/\,6D%":?0-,_\$-9BKX+_/&gt;.)O=8/?#I+%(&lt;$/Q7#"81!3&lt;U0MECV7=YX/["F!&gt;-SYSK#E7OFO3(][2)UP8 6I0I"D/X+B$[CG)-X/''O* /A&lt;S67DLX5F&amp;5T$AOV6H#V ):0BT_KZ5Q!JGP/?SHX-$W[0?.)\ W?"(T''&lt;^#M8:=P&amp;6F4D;CBW72^1N&gt;%DY6?$/RW:ZDFQJ9R)[Q2T&gt;P#/^.6)T( .=''/)#4.LGAV!C/Q3&amp;P\ 0CE%O+QY@Z2W/X Q,:PG6W$:YZQC[&amp;"]GOK."KQL(@K%?5HD^Z8E3V+LNY\?V2GT:)?5(/''_2 5N'')QS7.\PIZEJ;@XDA.NC,^8"GK)+&amp;N3IX?''.1]FR+F$&lt;()16\[5HYA6ZO,:W^( #/FX3P''&amp;_(#!I''1,:N:PTKJ?(]WF&lt;8IN5ZU:RGJ+PX]E=4T&lt;E45QR)1E_(R?_$SH)''/]LQI8"G.6%&lt;1''3N;I&lt;W&amp;%I''90]SFK,IQU,&lt;A&lt;RYQF-''B''CA2%9+4(EC+=&lt;O-=M-&lt;3Y#: &gt;LD-@VL^&gt;M8!7;NL^YM)G,CCM&amp;H&amp;Z N+R#E?[B4%=F2Y=EZ))?.%DF_P&gt;''AMP79":J RS0HO"&lt;VTXZL+:M?3''8.4:R)T'',&amp;[) \+J&amp;-&amp;&lt;N(@E_%,/@!:*[;1PV=FX%A$_3^#ZN][J&lt;/_S:L0SRCI7EZRC^5N/5WBM?Y6&amp;5$FN#:0E;F&amp;X&lt;2T \^["T#%RR6N2IK#1C0H&lt;LF(^#CW*[XC&lt;5IA(&lt;2^T!Y]#PS-%R\'',*XAXXWR;CJ4/H"5T"0-_962*0XLT2DQO0Q(0X_U"QVW$(]VZ0Q]SWOS_"7&gt;66#@6&amp;Y5R@X?]582VK\E8QUABR&gt;5)F:B!E52CM&amp;%%5BQH.V=4WB4@B92^&amp;XWS]Y@&amp;&gt;!2@UA!NQ_$O?QV-\P1"XH; 9;_T3&gt;75L\I=Q8.5Z8$J!;D=A$9?86I6R7.&lt;0,QBJCSG]5-6Z,53/R+C&lt;_==#G^[[&lt;6@WCIV "F _$#;GJH,G)Q*D@IH0T)M2RQAD8Q%IU4RU/8:@[,QH4J^"77S&lt;A&gt;!"FX*5E+04 L''W@I K)GVJZ]''UT)V::O8;"$225[:5JL+D"I!(*H&amp;(-BI&gt;4).Z#OJ]''(#2QP1''@''+U0[H\*#,8^X:!U_T7Z1$;V#0=UIPT)=(G&gt;Z]6.IR/.!0I''S_\)LE0&amp;[Z\&gt;.HVU5%BM0,]ND&lt;+YH#7XTSQ8\)74$I$#Z*&gt;T%&gt;G0QXB37D/%Z W,J&amp;M''%SLO;-A(M&lt;=L^FYFL3I+CD&amp;M?FL9O/KE) TO1&gt;+7[[@3ID;\&amp;''''7=#P/N0TI&amp;W2 \Z.0B&amp;@*./F*N]&lt;F@.5]S/!/L*%FDH;\N/V43U*-P=XAGBIESPNNKZ@TLL''%6@&gt;PB45F7+A?F6U*SK@I1*@W._=W 1\GBC+_&amp;SX3W&lt;R[/1FMG#!MK,R#7C8J9ZO@"+,&amp;--,,N:??.Y R1;^CXTU1*8L&amp;0PH0-(:$R1Q&lt;!J@!8&lt;)Y=4#[JU\9D&lt;L''9*QWH6Z;Y-*OQOAA?FL[4L7I##*]#G-6.^KL$@% _?=''45?T5YBDP\G&amp;K.''=Q19)[DZ"+!%VD+I)7RO29A4)G3C07A&lt;ZU_9&gt;4$D*F*6+X _D1''38VEP]T[0/X?L*R-G3+D''7Z''":(ZLI@&gt;"0WJS*C,=C6.M%1W\L0[4E#W1[PH8\M&lt;_9]/_&gt;''5OV$/[G_=(]L7T;Y%''?G&amp;[E&amp;I#U]6KVA4W7R@,]6@(YW;;H:%=[E"!;CUE)IP5G6_G(LM,4%QTQ\,CA3?@EKGR6W$&amp;;UW@VP=CK]5,,Q7#7\D!I"J3T^:Z+\*X/[./Z''#KFUA1^&gt;NNLT33''[.V]6!(RD_4U*!+2#2P-=SS\Q,$US:IH%G7AH]@$SM+2BM* ''Q!]DQYC+$E^1!T6*C''B?FB24@LTP+1X.V Z2J0,''1)&lt;TI10M2XK6SRF7-U_&gt;\T.7[&gt;H#]6\&gt;1!=6C8_EF1Q$G&lt;&amp;AL J#*FF 86:"!0^E,?T#='';1RZFZ45JW )G=N&lt;Z$0E97E?]74I(R6I7%X+XTN#@EVM&lt;%HFO@&gt;UF^ZA.+6IC&amp;M+:,F;=E_U7G4OD$"D#$"T[H1&amp;.)&lt;4V";&amp;[''I\G:PPG+3%7E;,WGYU;=0&amp;;8EOC 6I\+IU;FL89&lt;_%)Y?M01G^?IS_$"3($+&amp;4T?"7H6XC3/J:OB$_:]NIGPOX3UEG!!&gt;_3,618LS[B*!"Y.IOT6M,=F9S4F6-8"V@ ^YJI%@''D::D5&gt;&lt;YFO+5:!7X+-N\T#!+GD!$%*X50"MJR-&gt;HG,-@?Y/NA&amp;(;%7_&lt;4-F?=B:$D+!3QB$"CAEY(F$L# ,"5[ "WCBO!6F@B(CB(G&gt;''J.,1.N,(*9X_]2GA/;A7M$J:\.]1@)%;_EU;BNC_A'';#!5$?%G0649$ZI$%99ZG;^MA[&amp;.0Q&amp;,7S=PM*''F_;''$I\''/.9FL_0R;''!3PV9TS_X+.)F/F&amp;.CC-PX7?F;8-8GYNJ-0O6H#S!O 9"7BVJ1*YP%CZR!'']D.$&amp;D(WH?V_\[8P\-/Z^1:Q2LO_M9;HF''0)V''PG9Y&gt;.^KX"^)04/&gt;3J&gt;VPS_DN22TTF! V)]O;&amp;.FPB4#_4_JI!*/U"KL((&gt;3G_;I,:58I 3O(S1N&lt;!F,#8X7+.Z5U9+&gt;#IU;Y)1&amp;2/\5(!U[E^5OG2H%#(890O7N"C/A*]L@ 6M-.G/;]-6(E+H4= \S*CI:;,.,LF7&lt;4+D#WJC1WYY$;&gt;!#A''W97M-%HG3[!''_MO(_A@-+^_]Z%^U5-]Y!&amp;=QZ%5/P+Q#FSU(1V7G%_4#)]FM&lt;?^,1:KKSN&amp;W"+KW7MU6K,AA&amp;6GVT5YHGT/F"%AW!A@]T\6J?&amp;Q7?P-&amp;6P[-NX#O&lt;NCTHAU&gt;2W[S-''G6@(%S''Y$;&amp;T9''EU+Z?H8W(.0.%G_8U80M$R,SC\$&lt;1.!X$GWC7HM857T*&lt;4T=G% GHB8+BRDZ]M84VWG:SFX8-)NQ-W+$@52W*(EW,4XWNIT:I+M?G3I_IC)U3I^LS?+7,6/3)T]H*E.5Y(&lt;.NQ4/SJ1TFHV7]K ?GE=$DJ^''F9#5S)2\1:H&gt;BC/10QN]T&amp;@\@F!%Z==3#)&amp;J&amp;,BF$,_7/ 62A\4&lt;U4#Q;$LE0DE?:H"A/-=?VP8/9^;#54F(49OM_NRE.&gt;8T(RK;XEQV$M+2_[DU-8MBN_D!ED0\S^HYNAJ9L,M&amp;C8,EEPY?CPQT="@X&gt;PBV([)!F.[06_/YH.D(P$@&lt;-&lt;LE]"_HCV,OX!JW(Z+TDNO9[K3$^/EM1)R:(&lt;(WAP*[R+R:KX);,JC@@@&gt;BY#OZ^&gt; 8$ZKA,9[.4U&amp;KZ''I8WETJ:A&amp;LB&gt;].)F_%5UTTR+; 2KVP4NRVX:VL5/:\B[DB7B''.B%-E*QV[+,L''2607 )Z$*ISL''5I+1T)^[.''&lt;K^(Y!#9BKH12ZR7A^N:_BE5SJ@ 2#EY,1H0(:KGJ/X=B(V$)&amp;V9E7X3&amp;3"/^S^D5O"&amp;).5/ -D1I8*+S./%Q/[HXV$0110OQZ SS?^V2P?E&gt;3( ,,QV.1-F%"D&gt;''F]:09(Y+\YR*"5B;3W#N&amp;.JP;D?PRIU9:5SQ:]V9HHOU?5W2"%7$^(E^DGUN+QD%3FR.DRQ+1VX=8;?&amp;DY.%3ZXMF''HL O(C"@HP&gt;&gt;/G!?KI%''&lt;1M(;XMG/&amp;17261WN5-/T@GH:[.B!(.R3REN*N4F[\VC=! /#BU]%6$5J!#!F?,)S,VH:VNI93BB,0QU?!QHGSWJO8JASO;&gt;*U: A1J2 .Z(FA R#X@ES2,!6=A?3\T)YK659PD6!_#^;=(+25T!&gt;PZ]E:B[''5GB2&amp;? # 2H*A!;8-&lt;RZS'' -@(A&gt;-/93,1FY-\U GAD&lt;^:%RA2OOM55\O\4YXC0MN=JQ4F)37;%H+&amp;Q^CO._[UNQ-=&gt;:JG\+[5)AF=!YE4^W(H#.+U^^9UJ,3''.#&lt;,QC=\Y.K&amp;4-@R&gt;OL@SXU_ZY$35 0WU(OCTHCYM@D&lt;G;E@3&gt;U*&lt;D.]];&gt;8/[CD#/719-/''EM''H9\R%XDAU;]GM]Z# !BQ"F3D\A[STO -%E1HZ=[$.1X[GS^\P&lt;I3WUYO@R4Z:3:/.(\V9PJ"''-"PJC!U=A0Z&gt;.7.?#5T-H''8J ]T.T[_R?N(!OY8!&lt;$T:&lt;/(FEV)?/Q*:L:#NL*MZZ=_$.7UM9+%/24R]CH7S9W[2,&gt;?JZHQ[Y+M50&lt;Q?70%@SA3&amp;-Z2)FZ5&lt;AE]3*60M\$7X(F(3U7&amp;Q@KL(*7;/GZRT$K7MFPR],\&amp;8N^W.,7(C"N HFK?L/_%@_;#T2O/3Y4./%J4_Z04)986'' :M=*\8QZ-69&amp;B[/$&amp;^=4V[+9]CQKN9),BO-RC&amp;M7ZA#D\&amp;MPF)C6N''CRXFXFEW$W[JA.5S*1 _$6P@E (V7] 8Y7Q_[6!C EM?+GFZ,JKAWZ4!S@OS&gt;XZW7:_JV=*CDT:R_O0SLKHQWL?"G@9SG"71ZU\U&amp;.7R_R#WUN2&gt;$J!9&lt;RUDLG N+JZ%\T&gt;ONY1_DZS.C(VC4S8S=ZIZ7]2[9]IL1I84P@KW)-QYW,/GW%:99O+99)W[IZJ7T3=Y-P27Y^XN)BVI0Y48X"&gt;MPF^P=J[5EZ''&gt;#H F[X\D)0,W)5@@J)=DX*1XF-4\;=_QJ$&amp;)B.%:?WEK9*+M.9I89U''=2L)TQ&gt;_&gt;,U2$X%I][[TP+,TV717H9]!&amp;*EXUNUUJVU+ D]G!Z!KZVO7O.GQR4B@G#Y1!YKV-4&amp;/M;MH+/^.LCPIA=3M'' P1-[7&lt;FQNTHK8&lt;BBDSO]&gt;_.BS@&gt;VC1U?9X6Q8GL?0JA+2^*6X" B:OXB-6&lt;!;*&amp;WTH, M5L&lt;ASP&gt;^"(PEBZ%;AG2=1!B^%S!^DH!B7UD''U:=1\/FI3]%0_"^!K$.6=N38(%4U+$PEK*1[I2R_+5T;&gt;TK(JU?P);.O*__\-P8B?L^W;&amp;,5]=*MOPK[JL98/BF_&amp;QXZNM"]L/%HLY-^L1-:&amp;''6(+A^K8% ^47:C %?_P_34E!VP:?4LC[,W8%)MKW''08,G];]&amp;_4MY18XT#TKCV6&lt;,TG9]0HWEI8.]P4$D3?,:]&gt; &lt;?"&amp;&amp;2MQ1SM5)5,N&amp;&lt;92%?#)D1OT&gt;Y@!$T''&amp;L:S.^UPQB&lt;_,SW+G-^WU\@#V?72@E$G"ZI3%K@[,^HU6\/ IVD6)S,M /IC&lt;FVN#U0&lt;*5R7.";*DB)2&gt;V!_^_20:$C!K/&amp;;.[^US+!-" ,_5E5\O) 18E.TB;^*(V#^MKN&lt; FV+9@,"O3J L''&amp;V%:R+S&amp;&lt;75LJS9_JP$''(!JRVAUF!-A8+5D1($A3BJ +XM^ \=#C;#6E-[1+?!+H[PLDB!*,%[?!=U:4=P)&gt; -3J-=$C/Y! L;EE2''=/5RA&amp;N@.8?ISJ9JSZ^]%A*:\B)\G5Z5-_R@E.1K+^=/O*4P$HLR^"BD&lt;M%Y!8:*AU!D6&lt;''Q0J&amp;48?)-]6N=TEE"LR6N)$QS9BJ=A,NT&gt;76_Q8*.''ST&gt;$@UC!_)@23(EAT7Y+*35Z&lt;#$LQQ&amp;''"A2U#&gt;;YY2OWU6&gt;@4*$$\!TYX2-OT;8+F.NA$(EZ+WB6KR 4]:-X5J)&gt;A&lt;9QY_?!Z+I7#F];0\XJZ&lt;7^YY=[?O!(&amp;ZR5YRLN G3-$(23$NMP6&gt;IV(2.5091_OLF38TV#L0QZQGE=''2''6N%QJ&gt;B T/"B-6D/Y=U ''7LHX YHU5D]7$1F;G8&gt;4!9&amp;4"^GL,&lt;R0:YA/*V]PO="1@",N:(HHORLFIIJ"IR4G..+GEI_@GC8CT]H;E&lt;W9)UO#]$NX] H61U&amp;CE&gt;M$46JM.2C![Y9Y2 ^U+5IRN(,.QU[&amp;N)2+RKLE:S%YXKMR&amp;4''[V(2@M-:G;98%%@E?2F1.3&gt;EO./9.1M$=KHIFHIXT7$!Y/!&lt;U&gt;BRP] 0&lt;_NX=Y- A)1LK^FH=]UW1&gt;LR''"LDY($8P\QAE%2#&gt;7,3S1K.&amp; M&amp;/S 9;@P"]&lt;@5-^V1$F%2''RK4/1A0G)1:O^-+:7(9ZW(Q&gt;DAB??5KXJ+J\S:3RJO)H:*69HG1\VV$A&gt;AW8A4"%HM&lt;CN^L @_S8?7;K2U9(!M&amp;0^G$6%&gt;A9G42QO5V-9Y94BS1JT("M=''B#IMG)HP%CG:O8*LL+4Y)J1V,4@*N;% WQSD1%;%P,Z+!3G+TC_]Z ''"Y(.HQ.6#7/MC#H&gt;,2S9$3T]''" NKS-I*?8QE0&gt;"7"!K OP,&gt;69=6K;J@=;@E=-$/_4I*&gt;O2JC&gt;#P53RN?$%0[(9S($(?2%3BE@?.EQO=?:7Z*!:E;N''9\N&lt;RV=@C;/GF+B=3^XZ8"E#Q7FA=(%3TZ9;M1(*YU5:I7V&amp;?)W6!N&amp;''M&lt;MSNXF&amp;W.L(5ZOL7''03&amp;)\NZ6EH8L7(93&lt;IR2;T"1VQ&amp;N,N:3,13&lt;@ON&lt;2&lt;9I&amp;]3;.U8 C+,(BUD=\=O__2)&amp;T!\O(_N\,5''-F7S]&lt;.TS4=:BY(&gt;W7Z9&gt;@3T]S&amp;+2,Y@R6[C\D+%LA=ZC:O''W5+X[LK8Q&amp;%KB_]:/K-8_[W6G;Z8VQQBFI,QJD&lt;&amp;A"S;R96B5P[O([Z](RK*#LIIR9947YX-:P1()''+Q61?;P2ZMHK[.CL\P0%+*;R!%&amp;3O:AEPT]'')8 ]TZD:4?''3:Y 0=1687HXQ?_)VV")?YDA29"CQA8HA,DH-?E])M*/(]H#1@/@%P/*8V3JI\2/N:8 8A&amp;D1JG+O+JD[GTBMGFLKK4)WB,]EF:PMN%@\&amp;W!@=!8"F;,8HN4!FB("M97!44WU)BW_J5-R8J3[_.[/E])*]Y(H*M:&lt;IMC\8[%53I.J+,@&lt;&lt;89Q@/5BNNE[%%N''Z&lt;+JOYE)_*YH.6LT6+5X9EK_"QKL2I8P+]XQL[E6E^+WA8!&amp;N3H%G.''&amp;6W"&lt;I?E#U''V&amp;](;G+D/N CQ9%I1]^WI&gt;T;?6X^S61$/&gt;CQW)&gt;#N@V==G4H,V?-0[J2NI8''"R]&lt;M$H@&amp;BUT+C5S,&lt;IG8$&amp;KC."/=D=;Z[*&amp;:*:Q-*L&gt;UG4)PXNR:!P?M!''&amp;O&gt;)Y%/*O\5@XUZ(5[)S7#^+@J*BKTPHOI0.?6Y ^,VQA,V&gt;M$KY&amp;7)M%L/+/+R^SSY_&amp;()*&amp;YB0@V)@M"5BKW2S@EI6RB3SF''EY&gt;=/V"0T7)(G?J  +B)CZ]CZLT&gt;;B_JU($JIIYDJ##@FQZ%24U!.E_";B\$9M*B,FJ$CL4DUY0+&amp;X^VJI.(\*%]*-#8I13''*C\\78?Q!P#RST5/U''@(Z3K^H?(X\3_T''H70R]''*:8EX6&gt;B+WY_&amp;FIVEM-O-UCHQO0TKF&gt;!A4YLJ(&lt;@!?GJ]7N5)S(U788:G!-$3Q$A,D0#:^X1F_=ITO93''28''!1Q$H04Y:Z!ZH7+&gt;0H*/5$&gt;"&lt;$]2!S2_J67O 1U(K")KNAXC!M=^/!K?R?)R8]DA]6K :L3.OGCU0&lt;YTZW17"''=*AUYW"K\;19J" W),)ED")WX,W%=*@-DSF!Z:RTGV:OGCHM$)WHAOK+6VRL*TB'';EX/IY2ZRI+#[--&gt;9"F#9)-?WSSS"S9G4"ZQB2W8+^[F;LVSZ59''8R8H&amp;Q0"MK519/-:-%5!+V)*FL#IT%G$YA?=2]:!NV7671X8.O 3:.Y.EN3Y\G-=KWHXL,D-L#]\.&gt;8AA0NE_''3 +,$ P.@)7CJ=#*$07PM"!DJU4!$FJ/*FV^W)[9E]/6&amp;,G.L1I,7[@XF!;8J&gt;!Y4+D5S^^(0[''(CN3*X&lt;T3K 3?Z=SC_$^2*:K-JKZ#BP9%&gt;\M!+^Z&gt;UJ&lt;&lt;\#&lt;G4 198V7"&lt;*+V#IZ0M&lt;N1TQ+U]\29?,?ACCS3_"%ZL_Z./_%,XASXV1F,F@=SL""U9 &gt;?JYM#9"F:MRA\&amp;8F)T$*(W&amp;18;1IQ=1=U(.&lt;QYE.-%BEW:0ASV&gt;$!LO&gt;*[&amp;_&amp;A[Y\[IGXR0O2CU4RHX&gt;PUL$L:GZ RC:@ B7Z:)X"K:K/B^=XA-5''74TH4((JZ+W",HQB7-U6.''A94 ?EK+[J#YDI1&amp;L6OE)U3/V)#&gt;S;9$+&lt;H2AB*V3ZDWVX8 HYSD!&gt;L!^*\I/TZ:Y2&lt;B.,%QMR,TGTFT&lt;T@-(.!&gt;AC.9G9;*I/8U(Q0&lt;+A 3)K,&lt;*0N"(169,G5]4PP^0+&amp;79Q!D^T&lt;EAI5,'';C^=Q^B R-&amp;X72EQ;"&amp;V@Y%DF.BY]&gt;Q^$4[R\=+,=^9]!]9M1/1''&lt;F?U&gt;944H(V][OP89G8;NE" 3F''@+VX/V$_@8"7"-GOCZ$:5@''#MDQWKPHPJ_3-=JO''C6@ D/B#560^ 8Y;,M1H1HN)9T=@''QVT+B!5E-)#T9BB$"-GN2H.9J4L]#S"%&gt;*=^ HQGY!!^:D1?6NCH-GU5G[ZWI^*-Y-31E!'',GP_XC[NK6#U%0\Q:-^*!EL\91.Q.K4-/D/XP!"317W=!A/YO/2. X+W-&lt;2 &gt;6]D&gt;)NNS&lt;)YZJEYTWLW+AQ;@0H ?)TQ$IR5&lt;%DT)B9P^0^V,V-&lt;U&gt;MHM_J8M 86.[&lt;DNA:"  &lt;2S)$*''0,K7&gt;W5Q)PR]^DV"L _"XV&gt;+ZXQ,-C&lt;CU;VP"TD.Y,VT7V$P?QU&amp;4($+O!7''5IV/9;&gt;*0&amp; #F!!UG"^AJ=]/CC ]FO^N2MX--/2_*$(X)0 PEO*1&gt;0&amp;\QWO]",6%&amp;%*^FX)$@K4DF0&gt;"F!A4Q:UV^[;86Z0"PRQ!S,.@''-4P?8!O0TPYV-VH''D][NIN/$+N_@7F]MY3KRZ,.YY=$7Y6GPK"161U(&lt;P/''54D_N;RVXQG.WB+)$XO2&amp;J\/G,+/^?NF&lt;OK_&amp;TF6T:-@J$2BXU)IEO9)L+BP0F5L)E-"XTJ*VFQ_$G:U,V&amp;,PH=,F\ONNU0#0_J(  JBJH&gt;V8?1/,1H\%AGRDQWZV7.C#9L2T6:VH*AS?MQ5^L.RT$*)8B&gt;E^SML8ARF5EXX!$ .;";L&lt;I[Q3"\''C/T_"94+)GE_(L_X7%]X^,Y00\G\*+)+GAQ[0''X2@8ORM2M ,VP=-F2I[*" 1XCNHUS&gt;AB&gt;^5K2CJ" []T(X*&lt;DV#S_49M=*UNNF.D4;P.;8[&lt;@E[HN3KY%^0PBN''R% 9I&gt;X/[LI=?I[M_GD&gt;Q''ZKP?ZC7B2IK%I^.M%:C"-,7-#E$_K[V\RL&gt;I,\&amp;N4&lt;&amp;7H.+P_J.@#;T3]IJ\1[BRL=?E$N\IR9M[])PP[VMYO2YX?&amp;"GBEWG3_G$58@Y&lt;[--&amp;\L=F4\7K&amp;-@N#AX]4;"[''-"A+/ &lt;FL''[0F&gt;&amp;5C\I,WUT1YH!&lt;:/IG0Z&lt;"YF\F,#[@,6+9&gt;Q&amp;:PAU!G52(1;C@1O]''_. N&amp;;\]=G\7&gt;5X9VM &lt;P=R\4K=&gt;7WH(RM)9.@0P^VT:E&gt;86VW;;YO=6NM(VT9SL:5L&amp;=3''Z#^&amp;T1-EEJ]YC&lt;/&gt;&lt;+K"^?3_,FE+=B)M2!Y"GST&amp;J!U2;,''58"1BXX5ZO^8/1W#0,4JSV46=&amp;3.PIA09Z_HG;(&lt;O(RMLR\@''&lt;\M^*TO*:2Q;/D5A=7221\ZT09 42;QKJ^6/)+7EL9)IB$E8_KF(,!*03@&lt;6I%;:;L!Y9Z8*^+[+\S]5:=[6M6,&amp;?4PJ0;4&lt;-.J-A2/]?10^$EJ-EK9\^W9''!9&amp;4*[\W) HA4,:8@DJ0A8.7H?^+:L&gt;&gt;)@BF2"+3@5AUE+?8-.L-78S31K88G&amp;7 \&gt;PQZ&gt;N(4Z/$OYM\#EUXX")K(&gt;'',\T)M[\/E2Q8F:&amp;U+)HO%5XQ.%#N1OV^HU;R$)&lt;''99RXEL$G*R2!(_[ET\@U?!QG ''=S&lt;8 &amp;!/-3Y"W0M?08C6OD0;"MK&amp;7_+E/7RQ&amp;&lt;3VO)*--UD0Y:&amp;_-D;A*^U()I.C6^DZ@VRWK@JGOQFUEQA(?O;N_DHP&amp;EX4@)A[GAII9''&amp;GR2 ,(@+P5"%"J3NZO"V;4*Y@O&amp;/UYIQD0D3''E87]''%VW36*=:V0UGNPNX]#A8+LQRIHRM\#QESE\XE1?S$\Z?#H^*"''BB&gt;:"*/-A:AAA&lt;"]]QW''!^:&gt;_U6\394D]\UW_!EL*!R^B-Z%+D5ME4F/N:+U;#.#L1QG]*U,X 03N]B@H[LO53GAFI&amp;G&gt;+NM_:UE''84) B4F&amp;6O:&amp;K&amp;E\,[#];YC_(GV5=N&lt;UR@''?P"Q*VR&lt;ZQW)_\\:POHWA KPQY-49#CO[D$D,GYWG-J[$%85"#!0''"4)PD%R"P9&gt;Z?3XP2@&gt;C3M&lt;";5(6X\B^*):DL$CI$&amp;1HK7@!PR9./M89KCO#OTVHAK.6+T2XIMIJME%U*Q3I]W;V!1(:%HN&amp;BJM0*OS6/"_(3S+8A;1=JV&amp;V35ZO2;-&amp;AC_YY4^VM&gt;:KLDK5,J;U218G \SU\/=2*GLGEI&gt;25S&lt;(J&lt;!S!/8"9XS6U(,[_-"FE@]4*!9KO#F6)X-^R\G,O!(2"P,[#/)_I^"XYHC?8U9VTZ&amp;Y,(DTQ?QF;+&lt;:N]V(0_J5F,46+IJPL,RRM:&lt;,A,Z,*5)!@;K]KIQ=/QDI":''''&gt;2\0[]Y7M=2R+F158OB+I2=.ZH&amp;T''K@Q:FDRSG4I]59*=82-=SV-D$%/DW@=(-]PF''V&lt;.''5DUX&lt; RNMM"&lt;?P!^L''D@%;)5-E**''*7*B+50P8&amp;!O6P;"3Y$.).+=7Y =,NH*5.VO)*L&amp;D)7;"7F.=D]_HRR0DUL15!A#&amp;N] M^6N6^84)3(&lt;GE:OVN^+86YMJS7#AC3V:^QX,?H0S)M@7XXP%H''B7W4EZB ?\875B*I"\HJ.H4HK+IG(:WJ_+@&gt;H=P''$PD5Y+!,])+&gt;A_)MB]%U@''759J(J+\]\[/)(=@M&amp;84SRX  K#P&gt;37''#-K&amp;&lt;&lt;"AE%2LZOQ)##U5E7,G/,@#S.2T;*7^69CG2L&amp;IKJ$G!-AK_?5!BGW%06 K-F;4[P:L=;?.Y;YVRP2C*$=-((M5&lt;&lt;J8141Q5^6,V3-42?D0%I8);;W:4)#44LE2 &amp;F1K[WWG^5TP&amp;P+HZ]\^JS8=,I@5#M7Z_ 8;CI[:AB$&lt;D4Q5&amp;W9[BQO,$]F,IOC=@$[]Q[871*9&lt;&lt;(,Z,%/)''YJL_H[;ASB4(HXH&lt;&gt;-@X-LV\PB$-H\#071!STNJ9&amp;BZ3H/8S;\?#6MC2E&amp;SM&amp;4OJ1E;_3B[R;@Z@3+CR_4OFYD&lt;!VG''16%\3I%.Z1&amp;4NXPL&gt;\@TK\!;;''P\:%Y GT0E.R&gt;&gt;J"/,R^1:2.''&lt;4#)"''W_G)30++0R7/2=_(8)!5K^90/*$*[4179ZY/8 =\!(^5M.R"61WM6B% ''@+1&gt;A45RWKG;=*/&lt;-)/O7^PJD/%^8TV0^P=.6-DY))A''"2CYX_JH^W*]!34*-.QTH2TIPB 199#/&amp;RO:VU#H\79Z-4@M&gt;-H7S^WD?999(/+U;JXW 3\&lt;-4&lt;&amp;YN"C''=+JU=KGVZHB:&amp;O;].&amp;-7;" &amp;"%/).&amp;R5)WE-ZI(-!JNCN507H]FP#/\VYJ7?CR0PGS\S\^_/4QN@B+#C?8_JQ"3H (&amp;''#*P2''^6=P3:*$EN9!S*&lt;P5&lt;Y]-70Q?ZHS)5&lt;8N+4J].M;;_3HGHVMQE 6[SV&amp;7CHG ^4\:V_1BZR8&lt;B.05Q&lt;03DE+&gt;I3P_(@JCQ@AK2&lt;[-H 89!*"(%!]@-4+3-_K?( 8_*DK?+A@Y%8P"!E*CF/SQ43=B=_6#&amp;97E_4S&lt;SRHX,P0@B*9E80_0MS)!DDK+!#I2.\=A2,5OQ4CEI@"BRO$2$;NZ4&lt;''Y2E("8^VC''&amp;Z"PC\$7SCIZ.4K]GM$NO?.39D,$2C85/;T#* EM5+3C9SAFR.?VKU$_GPOF, 8Q&amp;.I:(@_![MMW06.![U=''AWQ*ZD^M&amp;[_[9Z35TDL_=YS+,4[0@JUKX3DAB/8TTX"U&lt;U%KGL@!0%=&lt;Z"2G$2(_R75@V-?LB]"99F &amp;95E6JMO-@($F44=C=MV+:I'' RMZY]/7XYCGBV!JGE*4V''/''*CWL''9VK*\M\ B04Z0%&amp;/@U,FAA:"1-W''^&amp;]!ZJ$X!OA2LY(=O,N)A3]#TF.R7 R0&lt;''NE*\-%#)''#OXY_M68\74(X[.''Q?W&gt;KOFCEG-VYL&gt;AV:EBR7%@]L[:&gt;$3[[!*RIWO?46]OWYS^ [:(''0+]"&amp;OD&amp;=S;,SJ0B/OC;/,40''O/!%L5NH3&gt;1S!$EA3XZ[&amp;8#0341F''/C;'']VQ9-FZD@OK9^Z5=:OF7A5^$?S_K.9$8"J=PIR6L1%SX=&lt;_LW!]M"C%5V,LM4QL6^&lt;G&lt;''?A]UG@H22OC,-2L)R#BK&amp;&lt;# !;LWV$W0DXPS4V&lt;;.&gt;JR:3F4Z7WD_AO6XZ&amp;Q-BQ&gt;T*7&lt;0/4O9''L''0N&amp;;RF&amp;'';4V!RN.(_=Y&lt;8&amp;OX^3/F]T_$[V9@K:Z+H%&gt;FH %,$$+%3!2QGJ*\_G7!.^DH&amp;DXEB 57$C-(6/J)!.B%;[7I1_]M=:*^Q#%?T("9?/VJFH#T''$YH\R3I0=/R3?3,D:= '',M8ZMUIW&gt;3Y#-XNESOA6A9_SF+*;CFXFZPX-@%$B27F5*OU]+:ETL''VD#\=,&amp;"HU11RL4_&lt;!B''OAW"@\&lt;1V5GB@F9C@,AJ_56!70*6G-P&gt;XMC?KA,I3SZ2N.EYN\)HPG0HUZ-OW%OU.#"X;&gt;%$(''G([\=L%Z;/ZMDPP2,/IIIX3A2V/VNG?B:,PP&lt;J&lt;ZY31K4;F@X2%-$8D:$R5O&lt;/FRDJK$T^O,Y,&amp;K;0AJ0S7&amp;5\GPT$@G=I?[V@G5''M@O!7E''FP%#=9]CAYCI@E4/3VD!;U]/.=H*9,OSU&amp;U[Z&amp;O/U!2L8.^+9S&lt;C''52A P7+2)3D_M?HW[;:)0H_&amp;+.,-E8_4Y&lt;AD@!R+&amp;*T4,]4_K!)/B80O5WN[C/QBK#V_(LU_[. BW2R/6:+/OM4;*P6ZUX/G,3=D:23.JDLI.D6:^2MR8DTP%9!+O@D1''69!XL0$*CBADU =Q3+&gt;THKK Z[LR&gt;81U],+8[BE$GI. L-3Q:69HX;N)&gt;P(=W=D]ZZHF&gt;&lt;^WAPTN8L. 4QKQL]@F?S 3#&gt;)Q/-6P+#I7. YX6''C)DC$_W$E#LIZFS10$IB&lt;S(7DE?#!(UUKF[(R6M=\7 N,+Y%&amp;U J^B",''P#O^-U!H[J8E&gt;0H;MWT3SM%6=(W&lt;1HLT ML\672NRM1(LM:4S0&lt;]NN_S6L.[M&lt;9VKKD,[U8 DZ_]U!+AE/8/W,8'']P9,@C''+.*^45-X*'']6CI4]%_VUI!]G\&lt; SC5/!Z-&amp;S,I&amp;)38"[W.P,/R/*0Z L% $''_C+(]LIU=3#Q^*F0V98JKB-:Q44KT# F $65%&amp;2] F.W&amp;DE_089%N=X"46[DF;PZ%=,/DF&gt;1''YQ\QUGM P&amp;-F80OCF^/,Q-Y7$0Y,G$/L"2[88H S[GOO*YI&amp;N''/U_LMM[$X]+;@Y1.-SEY/04)W&lt;6Y&lt;*J"U/9"HY@W"Q&amp;5E L&lt;6L&lt;@#SW!&lt;&gt;):]%#0,:\,$%"$^U-]NP$\73*GDM]"3Q"''/O!JVUF"0# ''W(,P[\&amp;VA$C7-^F2QS&lt;.6&gt;7@J[YGD%CQBT6X=.03;''CJ-\0?1*I@_Y=+:''3$#9D*9#E3B]9/T;AP8D&lt;H7''F2&amp;/::-9"L;14^J;O66X]&gt;J;XD]^D;:RN8DO[73X!689];P*]J2P8S7$:&lt;V"]X@!-)U1U5=''(/BOZT-@F8.;+?#@0]U;,$T%RW_IJ,M9*U-Y!IV^%Y(6/SJMMKO-:R61%[L&gt;)7+)_%HB_HPR3.=PAE8UA&lt;ZHMZP-X\AWC4RB2D&lt;AN&amp;RCO$40@I3 S+?+N\?XX#JB1Q]]PSQ#.W1IZBV;R^.&amp;2XULX&lt;E#@MXJ :-81*PE$W%\.: N"?.&lt;-V&amp;324?]D'')''R.B*-_]A1N=A+@C3./#''FS#@5+2KLXTG=S5NB3,&lt;BIG(BA=-CWSE$ZRFJ!! W*0JP]QA[V4Z8"9&amp;"?!Y V-K.V6X,)V&amp;03B=QI+2/V=&lt;V/\=Y)@#E@^06BY%D)^BA?5T862^&gt;..4&gt;H^&amp;#3O,69)$D+Z,*+41W*@05]J$&gt;Z=I/)]]F2]S^XZ.HWYN&gt;HO?11/;F*],J\3V[''I8:?]^VLG7Y R)=M3&amp;E+MZ@BE-A7AZA99;(^5+CE^WO,I:H=EX"N;]S #(20HNML:M)EIP@ELM_6\K91=E]J.FJZ0MB,U7V2JU&amp;/0ED0* 34J3HS^NT[H@AT#Z;WMA&amp;3=8ZZ3Z^! U8R*R0]II4\\+^]YN^SJ\T.\Z%CSW0 ''"];66&amp;@*I=)R&gt;@$%,9M[F,.:@!X+:ANH[PFGV"FZC-!,EC%FDJ51;M:FG^&amp;D_M&amp;K[0SZ;ZGO+9C!: 7@[N171"W=GC-S;(HP3L^=R3SF%8&amp;1I=Q*HQA7A2#\+H (;^5Y_5&lt;N:&amp;1AKY+$TK!!3VCSET\BF\[)&amp;;JRN^.%J3+P-BV8A^*:ME!0+X&amp;OE0&gt;&amp;W&lt;T".M(?QB\MUDF!F7@ZRBK(I;2H@MV\0F9&lt;%E+@#8B]2\9-QC%QPLJ+NIF''/L(&lt;*#PDLCV?(O7%QO!@WD8D:]C^W&amp;B*/&lt;/;T))\D!P"3N;JW._"P!?=0&gt;(5''ZC06=F "4''8G];72?;;4L(+3R//&lt;$]CZWH1?;-S''TZCF*T0CE&gt;B//J/9&amp;,([)LE1.9&gt;E4^:"*5!$1%+''.&lt;5NS!)(=/+@''N"KSA294;ZV:1,[V[I_5THC",H&lt;GN7W ''.CAP*[3-@M.!/E?Z;O%7T""R"&amp;FA@,CCF!!RYO&lt;JMY,7''&amp;"HNJKDI("J6KQ&lt;9UXOY$[''U''K3_65B_^SLY2#EA(@F&lt;?NUGS-&lt;[B?-"B#JI,![1RYPK-L9WH!U''QMJ,&gt;E9GF -DEY.T&lt;&gt;)-]/?(SR\6EYU6YX--(?/5K5&amp;''!7Q",&amp;66B*D&amp;ZAL6LI''NW+$3GL37Y@R@-^T8S$H5"DV%&lt;U^95Z0?YV 8_V7N(.A""5EO@2O2X%V?7^1 R%ULQ[U_#]]K.65K&gt;.X1S4YH?*N/CUN&lt;[,M-G)Z)@K"A" 7H6Z^LPYE=L!GIRC+-L:( &lt;YL&amp;"I3&lt;*OC)2L**ZF^TBB_#D_*''NU.&gt;07=SN,H%R8B''-L.GCKP25IS8POPF10WC3%.W),VWPRS@=S&amp;0+3&gt;?L$(^["QY +PZ@E] /-1Q9#)?7&amp;B+Y(&lt;&amp;TUOG^9H8L-/QYMLZU;/N(W2C''C3BS"L[J R"EC,ZJDN. ]3&amp;]@&lt;^#.@;P1(OE&amp;MGU1 WNX.F_KH&lt;3,GH9Q)?&lt;O&gt;]$AH9G_E(6%=TD6_2"6I($5+9DY4XB@./-Z Q"1;)"*2Q66*D@"JVKD]# \VQTN3&amp;G$9BTF@R+9*&amp;7 32@5&gt;%P4U5@?&amp;M1H7&gt;W#=WK@"N&gt;/''Q [[$L1;T/,BD7.&lt;V&lt;*&amp;IB^RP%\"88/5WVI19]W$CRLMW?EW4Y_1I1"E09@5B%:QVZ %*XH&amp;]MS:#-43+]W571K=MG"MJ4?!47D "/G8WIP8JO&amp;D[N&lt;GEZP@6O6_+AGZF\,S+&amp;''SXRE U:R,P63E/''M52*,\"P7WHR9_$F3CWASB=#%+:\6% F S:FH*:.G^N")_+@R(*__?]VN&gt;9Q%TTEXZ84^DHFC''E;]]+0IM9_)RE.F:YT/E0N38O6_I*U),^42R;FD BT8XT#3(*&gt;K9G\ZGNVL8^KWS#BP]2R''67/QN*1E4CY!Q&lt;BW.@9V"$JKJ/QJPZF5#&amp;ECWJ$?4,:''#8E&lt;F$7I5 [TA\EZ8)E93[;(:D&gt;"US=653,-''-)0!R09LBVL[U_J?IB?_MA4+''D:$G1KUW^I.G[$:I3GV33*:U59$3&lt;_1EHE.U2M*[K-7,QFUK^@$%U]ZJ/_JQP]K&gt;O$267+8UT&amp;!:\G\=)(SQ#)OVO[HLJ;9;3HK''94"C''D.REN7U3A455VE_C&amp;/-"$OU 0JZ*9J:38A\%.9Z71K)K0F4W.+N=ATE386,:&lt;/)TJTBJ8A3&lt;)QJ8JK(8;.K''JS;Q/,Q%."DGO1QIT+VG%!(5D=[LFOH"59_6?L?8XO1-;Y+"MY @W+1D[(\(2NJ7298X_@GAD=&gt;F&amp;Q4U-^DTF&amp;K6JIASL%ZF&lt;-!EQF?52V?@7^%P:.%T4RX.Y11"_,DX[V.FZ? 6N $GEPL&amp;,O&gt;/;E3:/G#)#9^*HNH@K"^5BG:&amp;26_[UG2Y):YYEOF(!%"^-THZ&gt;_.U/G2KG7X/7O^458*&gt;4:!FL:1CZ8S#G*([ZT+!7''"5O(@0^$*+[TO)&amp;WM%XY$:9LJ0BN6[NPYO*''\RQC]2''=5WL''4&lt;X 79R@$J.''L!7D]-C\(^@B]F)M3+*EN+/G(#2,/@G6@%E0T71$.?45)J,ZEKKL@)XKJ''&amp;CL9@N"%15QIG( F9?[#/J8K!]&amp;*S7['' ?6)(92Y80ZI 7&lt;^'',PO@D)NXP!"C2_\G)*3!@3#COPN\&amp;GT/T3DBA8:OM#H1!:@S]X)DE1"*?,^\0C7"]&gt;IV=-D_X.;T(85.^WFEG. ! 03)29^0W[6&lt;AT"!6UOQGOG/2B:E0X&amp;X''NOO*''Z&gt;*;@=.#%JD6H0 4 =I[AYN=VW*\GI&amp;-Z/;GE[;QQ4#M(;Z$H,?:5]Z)2L6I#0&lt;\!%,'',B_GF&lt;U4F[M+L\Q?P&amp;JZ;3&lt;7UP$]P204&gt;''1LTY1&lt;..#WS@=_6JG_24RQI''&amp;&lt;-R T=$],&lt;BS-RMY+8FA8''KYY=?H5,X9&lt;TJ&lt;\T+\-KO2C^+W-%106FR,TQ^VRXM_FI^[8-9KU%#(J9G.;-5&lt;7H.:"&lt;1X&gt;O3R''IMPNOYQ8;4B(GSR&gt;.P 04[**)XMG_-E&lt;''O( AK&amp;^,COW:657YIY&gt; Z1M74&lt;''CFS*Z+XX?(&amp;+,@HH[0CQ1D$0$%3&gt;?N$G:NQT7.R4S*I/?&gt;&gt;:GU^\U?.!:/2C(O68&gt;)BNAKEXX!Z.5V0AK9T,8_R7!7LG(@2IS+ZPOV&lt;T162L_^QK:2&gt;HVINXBZPKD0 CN\BF0H 6A%''@/:L\%B__/W+A2_925DN]:"F''6Z[JD[YV9S?&lt;2GG",H.B59]ZT]B5*Q$!=5QW(D+?FP/V:^4GAS.7LZYAR9U4VQ%PE +IIJ@1D\56NI/N#@3Y@Q-;R%P!FNKKYHBB-S?-&gt;57@28 -9:+[@(RQJ#[UH#6$3JQ78N_A?X= _G^*X''2!.M L:,UB37B.J1G(]DS3_:\D%*C5V@#''I09&amp;CFEBRZB:P&gt;F-ZS%0?0RQN''*K]S_&gt;''W2LH^F5.+&amp;VC$&lt;@5#UO%[7+UJ%^;8+;IK+8 X70H?^Z]7:A#FJA! W^GOZ''#5EE'':9HK(S3&gt;;;872Y!&lt;8_OR[G-,''1P+QB&gt;,B:1Z#F\M_2&lt;C$G!@),''_9X^ 83+6Y \WK=&lt;!F]JS2Y/B;_ET(&amp;5[V6JN-$&gt;2W!5+PT(:)*1.ZRCV&lt;^F;W??7?![A,54![[761Z.?GDC5DBLVS(AHZ],*E19,"UV/6%"-X=A\17%86QZQO&lt;A8C5VB&gt;NKC C9V,Z)^/%JN[B:$H7V7(JXZV7-H]?.G$8(UE. R5$S19 R$+/A"[3P2,@CEMM$T6Z+"BQB9%P9Q]N/HE!R-/3_DM3X8Y^8&amp;CSG5''-A5@]88=7)](9P.KD!)N6G;@1.J0Z&amp;/J-?S,7S#''QPAI?\]R4V:T"UJQ]X(_FC=3S^4EGK^SOGR)YLH!J+0X^5P.*24AACMOH)C9&lt;S]4\E&lt;J%)F=_I!4=4ATV8I6.-H*[653EN57+4BKIYR?ZMGI6]PMGWAK1="3TZEK)%[!3QA&amp;_8C:P^''(_I24@TJD.?TAN$(FJ)X;(F+M)EK"90VY1"AI3_,B?NP8F @NDVO/8B6,=U9J]K:OJ-7U@B&amp;-1;YY[8=];OKH=("&amp;:XNPPPUUY]\'':EJ++^2Y,G$*&lt;E''?-$1,$WV?9"4_PZ0&gt;P*WCW+M''THQG!(%&gt;%-)UFX^:^&amp;#W7_-FI::?=@N#[C\E+G-HL5#9ZV%6]G&lt;^OD8K:A [ _'']@/ZV&lt;)=$\-''GD-GU(-W[ZKZPY:YL*]7F)I&amp;P&gt;G^[Q"Y"\,.=2N18TL$$IEI:)/I3418Z*%\&lt;T7-.D2"TE8V-[9&lt;3+E#5FTXOR-&gt;S^&lt;1]JBQU6#:@%V4JTK;NWCO;*&amp;-%N8M&lt;%C\GCZ+XF]__H@6M3@%[$%6(%="G-&lt;V.UAUPXE)[_UE85''@O14$V58N4_81P''HC! AM@&amp;LHC-7G670T][2+/MYPCI4R/^N4_0*SCK9IXXK=]3;"W.+T;&lt;1Y?A/_S:''+YD)*7L6,U2UVX:%+#W7O^6O,=F6&lt;C*1;0\RCZ62&gt;9ZKKZ"60NPX#)3S&amp;$[4V1,1TF/,=8CM&amp;UE_0\\ ;C$]8T HJ?G]*&amp;472\JG&lt;&lt;QB$Z K$^/E?8+''(\0&amp;F@9Q/&gt;H_JK?*XHA"N-[-^4+&gt;C''\&lt;"53#D&amp;F]IV&amp;^3A45T.AE0&gt;BK@R* ;S8V]UUJ:N&lt;:P[AQ$Y__OG^7]/ERZ7MG_9E:OSBT,&amp;\BCK!&amp;X&lt;4-;UT*QS]3VL:JL;$H!T7D=M^"''Z(&amp;682''/0UA/K$8LQ7XC4.Q"W3I7@*^:Y6_\*YFFK(W-@5UQL81''")#+)6C"NIO_64_]B&lt;W^D#7Q!SYF\P+/&gt;&amp;0XYQ(6@ LA65,&lt;K8YO:^GR:/#5-UAE\/_77@5AY*$X,[0Y7 F)/;3GVJA''V;PGG7FD*@6K''"[Y,%+.8(?[\)V/5 Y*]V_120$HA\R&lt;!;;6N6Q] CCL6&amp;I5UJIU3(&lt;#.)[Z.)G8\^L7N=(,#9SE.X!''"WLN #1D:Q(&lt;*!G;1KN&gt;V4X"6GGM&amp;^V5''+Q:$2T_TW7.)OQ3^X[$&amp;''"]+Z3O$SY \_FHQS[(RU@^!UQ@?_Q&amp;6 03JB2NNWZ?WQJQ7R;2T/W[O=) X"5*L3BHWR_$_&gt;9@C&lt;&lt;''"[H\C3HUM\RR@"%34&amp;:L.(P_0;()H9G?L;&lt;TSF5726YJ_#VU!(, _3X6CK\P%B()UI(DJ]M0.OF6JU\5O%#&lt;" F&amp;K5*J!_=R5L9^L_1+;-9-R(0O./"("\$^Z79*+:R3Y)^L3!FJ^:4?PQU=,?8K01=Z1BIH!(@5477.V$"O7 *D)A[Y&amp;GQ&amp;=*Y9FA*!I#V2[WN?46,R7Q&gt;V"Q _O\%D()7$#;#+W:1\75@/*696F[!V-O*[@)/9Y@3B8I91% 4I6;R +?W&gt;QRE^ O7&gt;&amp;4KA]Z4?68CX8J&amp;)1UC[Q1_@]V&amp;2,ED&lt;[@7S$X+H1+MK)=?!;\P?KN=;YU$:_^-4 *J&lt;^!J$I''VHYX^%''D.6]OW!=C]IV^ZE1\778%\O8"J;E)9NKP9MG&amp;%V1=EDZMN8WP!OK)*SY''2E4DAAN^5&gt;WE7A24E%NVQ=4$/K8*GX1*DUL:&gt;2=/(FZ^@-@+-O?]SG#EGGF''&amp;%W5K9X%F5,(1\@]BM3@TX''3*NH*1:VV /73"Y5&amp;,8B^TH^K;-7#%_[93+: ?&gt;/KW++)0?(-7JJK=RKLI7S)BCS"7Y +1.#@''G@,;QIWC&lt;:V@8S;_3@# BYU,1-/53#-KYY;@F''HY+I41+G,)OZ :6IAU99T"93W4=IKU)V!:6:++QIN"TCL"N=\+HX=12&gt;)$$.]/E./2-?M6DKY)&amp;,%82*./!)=&amp;MP*R&gt;DQML?D D[V,+M*S*XKT#GD!W_JITH5R.I&amp;N4FQT&gt;V\&lt;)N"5\3+?P/-\(6/4&amp;N/(52J\( &amp;H55D''(KG; R-84#+D.0P#6ME!I6W&lt;=9E&gt;9^0YZXMPTA%W!780_O)2#SJC^*&gt;&amp;O&amp;@?!S_INZP+X ^G0&gt;P#+QRH8,"I^%$EPCUS/&amp;9Y;D)D.L6(8STG5_H+?7#^3^2*M7AS&lt;6JB%0R ^"HDMZ%U"\GDL''&gt;[D.D5S/]%-11N5&gt;#4)]E/_7F?3%.],P&amp;Q!SX:&amp;9''@*_D6''($)Y:KH;7&lt;W2@845C/54@PBE6T"?]"S3B2C/%?)Y3^_9;S"IP.J@1OJY=''E$2F@8#PY48#&gt;YP@AC@KMQ)DCI)/C-3GF194=1=VF%)Y]SL.!&gt;-[UAGE@!4ULN#:682[J._FS[0G)55BS(:Z;"_%%[ $C_(U4FD7O9CU;IWCR0]R3J2ZUCR0@NJ-(-VZPR6:Z&lt;2K][LG.PV3H3X1+B8G0(N''\4)SCIIZ&gt;*K?5VD"!U'' 9&gt;0-7=06/G$B)=JVT= :PU1?+4L;Q^0V*-]S.=$VP_KJ&gt;TH4+%SX%)[_)ZPDYX$;*[(^R[4XR+8[(&amp;JI*8&amp;Q2J^TP.--^NR"6SR28$?SY2VS&gt;RIP)=4F6JY]OZVHRKZENS9B&lt;.%]6M]"S-7:65QS*N0GBVA:_;W53VA7P#5LGO!#/WZ27AAN)Y"TTQSDHG&amp;\V.Y:&gt;];=&amp;EL1P!)_) K@NI1[^"/B:[[T3__U0LT%!B)VIPQE$&amp;NXDE"4WG12,A&lt;6X6K/8K9\P==X=''H3XAKYWO50V8"*WC%(K7=!NN-''6:6.W,2?J]D0P,$WTCE%Y_!&lt;\$!B%W9-(AEN=[5-"OOQT(R5F#,]U"$438;4''$2-J59Y5;UT"8@=IB@2!"U&gt;.[5NY(O(S&amp;.T+7? 3OYC0Q7?7"L(36M5_1W][-P[];@S''T)&gt;!EXWE#K9(0ECF57;Z-A 5NVYC.#I8&amp;\:T"2&gt;/[CEI]P42SQ_&amp;DA(S%KYI2**B62D:C8K0\&amp;NK,/1LH\4&lt;VB;I][I$S-6UX #IU/#=&lt;&amp;ZF3LNF&amp;Y"1/X:%U_E]^6E\HLH)&lt;=ZZ4]9Y#XRSY^&amp;V"2.[8\7 /;IQY/*O8.2+3%*Q1D.-1(@X.Y84\Y1RK@76OA&lt;8K1B@YP3)TNSI!+=_.BZ\*0JV28*+4''KZ2*]652U]H,&lt;FD/?\,PB;+''/!3X&gt;+RSC&amp;%&gt;/"D1W:?C(R\7\*U34A''G.R&lt;?UE^T@E"&lt;%/6VBQJQ_U*VTKK"J\QOPIZX#Z''"20XRNXP_6Y=2,EC?Q*OP^F^0NN4FX&gt;%QL\TU/ZO''+B5*+T6(G(WYLK7U*C&gt;K2+AVL3$-''S2H**"&gt;GJ+)^RYSB1B%C-OUQ3]8P F[XL$6?K+67J.9@J6B"1Q2FUW5GGK5 1J ,-V #''N51IB.1TE20RTV@\,\]L&lt;O8\S]1EN=+1=&lt;L5*&amp;((4CP4YAY,F!8-S/-T.E5 4!&gt;:"L0KO;WO_5''!],@VBS"MI4MP5;+^74+%E#E?;N^,8J8"\V-+]%CL];&lt;;4HDPR"+T-5_@''$ED.."0IL:85\Y!&lt;E,HHE].&amp;#I.V:?XYT#&lt;)M"99I?8WRUIW^Y''C:UL-]-#R8B4.$H=A;,!(UE''97^22=-SBEWP?R7Z+^^3D-XW-[E=S!IJ^QG"V&amp;H&amp;Z:U+BY^U:I;&lt;2S.O7@[6F9F"M#H[!\_MW6"*/!@&amp;--&lt;#QS+VB\H-J537+#Q!+OO)J+J:\,E3LR&lt;,&gt;J++V-YH^9&amp;Q$#U(A.5$:G5OQ\[MX1B0=[K+ &lt;8ID1]N&gt;$LM1TON%2!##:N@\I_3''U0T20:''%@.6[&gt;&gt;KVMIUM_J40''&amp;)-&lt;A66#@D[O"/E:PSE]Z8GU ;U41$60 J;KR]S145P[*N=C.&amp;YC,@NA:HJIL?:VS@Z%RN@Q8&gt;?4X27&lt;=#1VM*ZYP69]8/G^Y^XVD7*A&gt;8TXESKL^\+&gt;LEI#_7[_G5%"=J3P?;L^WW!*M G-W&amp;86@(2,&amp;/X#(=Z6$+R!&lt;A[3O%I/UK4$%!ZJE"MYC+EGJ6;;OT4]Y''F%WL,,5FF:U0=M\S*@=7''J1,=CZ@:8_"*O#Q3 &amp;;&amp;K$;U3"C/ S32J"I6Z2R&lt;7DE8X''#+1DR8*]:XM=NU[@$(X.O9&amp;ZIZ0)''@L?)RF*O\''/_BRN_:&amp;*AV@&lt;?=]\$?:?C''^?$3J$V/MTN436;WO7&gt;4/)Z,+_ 6#LF6S,W"^Z5_3\CD#FCP^#5A$F )YD70G40^Q*AHU3_IJ#"VX#H]BHTJ275!LF&amp;Y&amp;.6"X0''8UXN "4[2-G8N*(L&gt;#J.FZA,TN% R&lt;_R\MQ&gt;&gt;_M*HLIQN]IHRJASNDL[J!8#!05*$)\1=JXER;2F*F1\09*5603!?Z2D56Z&amp;WY-]AES(/0\V/# !N,OFU!4^ICPL1;NSE%) NNNKT%0S?8!=@%JFSB7(*U!8K!DB39(7=?C\C4$2(:S/77,@Q*)&gt;''&amp;D?O$8I]U+BVXSC0IW+KV/WT/:H%''U\*J;1%K^="/HY#R$-C5$_3H''I]1\ND$!!V/]-Q."WUZ-@:GMG4I"MGLVRU2&lt;EWZ.,PE BMV;AMG)2R"65:G  P-.JW?GZJY*$0C\G9F28,$8S''L8@_2/&gt;/VVAR-F@Q]HL"''2)%?VT(,C&gt;&amp;5+81.^=X&lt;0*3&gt;?(8)1"ZRTNR;F(XYE^T151(70,R.5Q[T\FS!NK?E]=U6!R!NJ&gt;Q$N7((!P[) ''8,U@UB0(:D-"4G=%DY[WVJT$^H:)15Y?!0LMW9"]B]''C#="&lt;&amp;FUS@!X2O3%UR(WF5=$S&amp;31; A-?)AVGE3BRI5&lt;DHV68RJ16J6,L$J3*@3(F&amp;W&lt;UTI&gt;U''6)BG :3/!0Z8-EU.F&gt;U&lt;!T4X[I*)ML9/! &gt;W@YACY(VS22#!HS/A-APY,6^D_#2YP7C[''/HTOPU".I42H6%2V$_8L&gt;M#*)PYBU&lt;,\KM1,DR3N06W/CLN\G[@25UW 51O-;JJG](A&amp;+O\J?GW9,%B/C6GR&gt;,U&amp;@]O*N5PIJ:.X2(68&lt;4OF^D9J"=;A%U^,PO0=.OK7/!I&amp;Q_"%=D?R(+!*G5W!G.*H+CV%$#S[,3XN=*-OE9,U_!24&amp;+JT$/&gt;A49DK5)8$.Y$B84&lt;8=D9-D#NA _.%X*:''YE#V''7S:9$AAB7)-2%]7SP@(U_^OYM&gt;_G0E2B[L''9;_$D&amp;#"92T4%PH+&gt;B^\''680V2''N1N/"GMVQ\RM+HQAH\6S/1_''U4UL''&lt;S"&amp;*$@&lt;3%]18HV/FDLN@7 7! 652&gt;HS$7Z1A#;FZ&lt;1?N\&amp;!&amp;2+Z&amp;L8L,1I ^R=JVY=O7U%_X(O9,^TU+VQ@NS+&amp;7_9 !J:&gt;^I2@[L?MOG/75LGL?J6,ESOR.;3N]=8;&lt;OY!*''&gt;%RAE5[,5MLH.W@Z&lt;T''D,5]:]#VP)M- Y#JO(&gt;R_\H&amp;Q/OA@7VPSAT87DPNUOJ&amp;".5D ''F(Q-Z)\5T#4J=&gt; !0[#SLP)68?1H65QC\N^L6V.@]6+L7\9 .PW%; FZ70 FOLEJY?RWSW9Q&amp;J G%8UMIZ -=8&lt;G$=-* *UZ5-Q[[P+K\2M-9QYG&amp;HU%L9+Y1Q6^)?PUV[[-ON?LKW-HM1;Y@3 9^1&gt;XE[/=&amp;+5&gt;*:DV?TRU4,PQ7+Y76WJ/HGE$V^.$Q0Y.?(=J2LML&gt;JPCOA-EGQMR()5+PPO+,"_*^NQFBIR&lt;.)+,SN19QB&gt;M&gt;[(&gt;A&amp;G?PB%KC)VG")TXT[0YH.$U1*R%+)^,)ZFK,M6&amp;%+(X8*K7 !['',''68;$I#@E&amp;%AX!+_6T(LPN9D\Y(@T1F-C$B#T"Y1./3D18AXR99XI6SP^.##]9[Y4F%T_/?8."/4AUY8-C*W%C\JJLFP\SWL@:[\\ES&amp;S\UX=0T9KSUJ0MC7?=C*E@IVGE"/Y.9,%_$5&amp;0,&amp;J66*LV70F:/1=&gt;[''$_0GT5.JQ +_( X4ZO=N3P;1-E&lt;6"4[:#,U26?.F*52:4 @E&lt;E-4C+WV[GVJP^EG_B6UY.!21\[.C.%-NGBZEV:XC%UNB3;G!XSP]=F[DVDD@+924=3A"U&lt;4QC]$7_0''N^66=JM[).O1^&lt;R9X#;@V7PR.+E''G3&amp;, QM*EK17K2_ZUDZ(&gt;Z=_?Y@=$%@G8YX?/X(1^$5*56%.N 4!=GC+2R#YM+OL)R28(X#X,IXDOX):?GMN(GH;X]3J(.4PX.*-X="IO/LKKJ)^%@0):%N=[Z]F!L6J_=\?^Z_"&lt;8CNMVLYAUI99+=ES-"54J7DEJG%A0G [^1LOCZ-3=6/T?^Y &amp;4K 7ZFN!D&lt;4HWG6DV2A?\!7=B"@W89-QH^D5GJ=Z[C5LKUGMC/U&gt;Q/!@I''!N^FHJ^VCH.N1;"4OMP&gt;7Y(%WD)&lt;-.G_S)0\#+OWK"*!158D+''LZ9RY NY&lt;.C=Z&lt;*EX9#UL/CP+BYN3SV^ T!5&gt;)9C_5I]A_]$^-BQS&gt;%9&amp;IB!7=U5N\J0_&gt;OSL.$BDKLV2^''KPV''=*%=:FN:.19BG(-]_,E[%UAKSU!(4-H&lt;&amp;_$PE0=\0Y-Y,PBE /?TVIPX2//@/0C.VKX"FO6T)"#\N%4BOT@Y\4&gt;VUZKP''L4@-)+5UK= *A;*$@W-?7H?#&gt;G=T3PO4@[LBJCM5-#"PY[_HXY)C-CNIHP&lt;RD9Q5=YR,@(M=BSX&gt;&lt;I&amp;.?W. 6\1M!?''_.G42J-%$CI@&gt;OQW8M$HM[TQJG7(H3#Y?4@BHJO &gt;ZXLU1&gt;;QY#(+3USCE*/D2E0BFY X/6 6ZLI$WUEJ#17$SQSH7IY*&lt;.)-G*12RZ_''[;#R_WP=Q$R"&lt;Z&amp;1OT2C1&amp;J&amp;0A*^D.B&gt;:DN8!_?E2L*1.J@5M%I.4Q&gt;''X!B%QZM(M[@9I^X/0/8MQT]+]&amp;N(I0%F/M;\JVGL[?&lt;]IJY="ZB*-J3JP3GA@64TH(QTC ",C"QI;?R%]JBJP1E30&gt;)3Z!''%PGUGZ::9"!B*4#MAFZ89$+LJ''*4:@O40H&amp;2$BEIF7&lt;6WXSW![BKX*.PA%9=&amp;]!-\5X]JXJ^M/DHFTS\&amp;ID9*JF[JUF7O19L&gt;O;.&gt;4SSIB[V 6"A.JW;V(IM;/3@F#_"C"#*K_L0QK"5)UJ&gt;1&lt;_56@]7=;$/&gt;J0R&amp;\)SYL#+U5-&amp;^]+G/XT2]:"BOF7T6W=H@(FO&amp;I*$3,$3^MAX&gt;KK]GP%JZ5I!S;1RWVD]AOFAA&lt;SG&lt;N /''N&lt;R7O9(!K,]=#''9K-3''S9YOK?YZ8P^;[:5]JMQ;5JI[)?3A7+5 CSS"= N,4_U].?JZWV642./4VU&gt;:L\#R#;#O;6$-U5/X7C*ETK8''NO3D3R6QQCA9&amp;HE+\S;= 19GL ;: C_5Y3"=H0FE)\IJ.[?M(&gt;C?AN*Y!SR:%3LT3&lt;SYR4J46S=[F%FLV53#8N2S?@)&gt;EN2:KE''+)4$\AJYJL2 #]*!!6#$2B8$ZDJZU5O0.L,7?SBA[(^;BI#1RH.,OAW4*:FX@/7AJZ^I&amp;2_0EE+"EQ'':DG?]/G^](R=XT&gt;DB:,G\-NES0#6E[8R(9RFE0E_Z@B(7443_)$IDCGW^0%;N#@4:US!\KP2A^TI*T''9O0TL W&lt;F-SBM/VNLR786V_&lt;IIZP"RS0;/_,D?:^N37+30 SRSH!8&amp;7%:+''!K=-0)3&amp;[5W!$IVO#5^_IQV8D*./H'';%?R*AO.&gt;$P^\$2Q"&lt;YFA[G9-9H''8").@A7OH0-+E&amp;*"&amp;_(M0A_6XK0[5NM&lt;V^_+R%/$.Q(*W1%Z3]?&lt;)F=Q_54@19L-O @ H4$O"VSDBO3!WL/R4T1GA1PR2 _"44;H]TE+Z/T?)7Z,JNF$FO17A+!_?2:PNGKR)LS#=5&amp;X6UT?BSZX''2E\O%/:"704AG#YK''JZ^0T95.VA?K(^G[BGTE_OIGJS''(!U+Y,Z24E) S''W_+R_E+U$D[7@&lt; W&lt;!''/*2JAI6U.$C#99F"H\BVUK[FA:%"''_0,ESOP"&gt;4L64HCD&gt;46H2G-6_\0,F4+].K?I\[80J?,CV7L/S'']&lt;CNVR^D0N]&lt;_"M]*K?/ [F@"AC#C07WQY.X5&lt;]2PP\E3QV?M8TT6-T/N?1S4B-&lt;."QO$,!J.FLZ=-4\&amp;]S&lt;XF\YAB"8V&lt;6#P1]&gt;_^B:@27\7QDX^A/5W ]&gt;&lt;M,AEYK?9GS6[(XP:.T*TC+D)7PLL;-)-8B.&lt;C*4'')N=$=Q(/%.&amp;FBBD3&lt;&gt;&amp;''WL#1B)GU-6!TN5Y7XAM;YQ;7-2-%*X^9+YH08=ID0''J,&lt;:I+ 6(U/H#DAE./[J5+&gt;+3_J3EJU87!YF;\*?VQ@(?5#4=DK\"Z40!H3_I*%=6)8?GSZX&amp;&amp;#9"7,8D(UU5+UY=#MB7G8+#HE&gt;389U0&lt;3RQ''X%Y72*NQY''X\H3%5@A;&lt;9B[7L]X&amp;FOXO,57JQ$V^#4;P9QX+E,(_PG@,_M^@CTXF6&gt;6.C=%=*3RQ"J&amp;3]NOFMNB(L/(]O+DII/B&lt;15WKU\*F2N]1$Q7N9).)1"MB6/+(1P_D+M2D68J9/12__56.4-K_D&gt;HT''!]A=#''&lt;S/O*Z''F1T$7&gt;MJ7]A''&lt;WY3''7Z\SNHGU?U%Q[Q)R+X,]*N\CM3KQ9F7QKMYDW6C8T/\&amp;&amp;4QTWZS(/SM0@\?@2O(KU?&lt;*HX&amp;*-LI)=Y_S1?QQF_=Q\LL-\\^G&lt;]&lt;6*W*)L^4?O"?Y.&lt;W&lt;GI0X.&amp;WZN@FTW#0?QL^@@\/79#UH:&amp;;\YUBW0D;U0/VREZ+])GDH+O*X''!$OH* :I)E9&amp;J]?4MV\:SB5&gt;$LP$8A"F4G0%MKFK41U\7LBTCLD9.4\^-0*U/F!KA16D;Q3&gt;PK9#K;!&amp;(T85+;L.L''-&amp;6LPKJ7MI9:GZ?%W%P]B\T?22/Z&lt;OI@"[?KT3]UUR*&lt;@VQAWF&amp;&amp;%LCL#&lt;:]X"Z SG^M_*X.L1I_A&amp;VB5%!V9A;6D23\;LQ9ZBAIT(9,&lt;1F1V P9%[HZBUD1)_#$''O%U!:N=:^-DHY3?=?_?/2:,YCQ7''H)BK6[(CC69C$^I/ 9YPMN?CQ\?;I%G56DQMQ@EY#Q^7XD_''L%K%&gt;WR2V%'':1M)V&lt;JM!#$E6T$I8OKA0)&amp;&amp;=ZA#2Z&lt;^)/$"7GA8Q2A #)%&gt;I&gt;P''&lt;4$,3J%WB8F&gt;PR[A)DQTYZ@O&amp;=6+D&gt;S$KG,N)7T=O]LDJKZ8=[3.).A$&amp;:''F3=:HA1%AR#+&lt;_22YW&gt;"Y&gt;3075LV]DW''$DN[R9A]55NKZISSN!4P*$KT)V#2Y)\=AG]#Z'']V8GHI^VAE&amp;&amp;V_V3U!NQ!(WA34[%0GW1]G&gt;4I^0L%@+ $_O''R6:RVR^&lt;;5&gt;Z?T++[_;0V^;+7,SM6;@O(; SX [)=]N?AZ6ZZ,B2!G_JQC( GF"W#=N ]$QV&lt;3N+&lt;GJ4$J-8+C=#"L=J@TC]KO57P5&gt;PTHB/H,-*_5\ 0ZV-V&lt;:YXRO9.]*?(:#)6[$ K_NUMRJZ:1=;L\:2+*RP&lt;Y PH"%#,31A]#0&amp;&lt;&gt;//; =O=\EUSNA(;IAPUE#''OO+O_MS?$8LC4-!-*P1#=[II"RHZT:1P+,\4VCL]&amp;2];&lt;$RJ/#:NQMU!SW''SBV]3&gt;I5:#LIAM_P]V6Y:4!4?QQW]Q7B",!;TV&amp;#:!JBHSM)VJ1;B2[ZN(0LY;]''9BMLF9\%I''WW-!]=[.B8J2 L=6P[4G$?. H5A9?VU&amp;8;)VW4757**XUDZ[&lt;P;O ?7^2%;WZDH8)=-_-*\/F@^&gt;UM8/BL&amp;?&gt;&amp;BHE*-$#Z''DG0[45#UGOQ7YV9&amp;&lt;2C)[Z.#"F)H3''(W2C&gt;"33@S &amp;E;2S?*JO*-U=U[MK;-!&lt;:[61!G=J]\]Q?2'' @Q[*ZD ;&gt;+HTW&amp;YX@R[Z+1R8T&gt;H#:,Q*P_A$F8P-\:\ED=#U^296X&gt;/E[\+PV$32- ?^V;+*74^:95^XV=I88*F2]IOT:[TSF]I@.#O''# ;!8VE;^3\UWY330XXMFQEJQU_,@1 :.RIIHR$VJPA!$&amp;?/6/V:?\!1IY-?UM$X''"&amp;)WDR&lt;+5''&lt;TI-3,!*SC@P56#&lt;7#]N*:JFZ)[HW^''\\8"5''C0QZV_B''.IRLF;J!S+JOK;G%(Y.OKP_#FJYN?V]NW$=C0H@_XTI0%=:#L8#"^O=:H($92H_US!OF*E=RL^+F&gt;C,M:IGRE.J7*S:9HP G[,K_( #[!6NC[WJVR0?B28Q%_/[)?C&lt;-$%M9_/MKM+B6&gt;J3L^*0$_0U\1M81I*K+.,!:1$TU;;&lt;_EDH417X1_P4C$Y@(;!&amp;!(* X_''G#=^0^CFR^K-#I8/E"^A@/NR''YRB[-%Z2V%FH&lt;?LD8_"_5^$"3IU,U52?)9GOVYTR\BZ^&lt;([Y@[5C1+E[I$Y18--%^D.&lt;M+89\8AH+Y3ZWKJI&gt;T"%P%"";X9"DLJ&gt;$X$$M==VSP.15!!LR4&gt;Z@R^D98FU&lt;YTFA@4U6&amp;2E=*XZ''HC*,;B&amp;;&gt;E9L9+*,(GL4G2/R''UAC#@F''&amp;E^2F&gt;/[)J=UQRZ8TQ+99I2$N''X#CC$JN&amp;-2^^&lt;-3SXTQ:&gt;Q''8I?#P]W_AD;%&lt;BQ6OF-NZRV%3DXV%1##D1U%O-T3-&gt;D ML.4TQV=AIZ ,BU!/@@G0XO&gt;RVW)&gt;MJQ&amp;;-@S;H Y1$[B78B6!+[4*P=-U]UF[R+-G9$ GPRR,&lt;)FW:_?^JC]F''J^]L,TG$#^#&lt;W?Y/_V25AI)?9T.@(&lt;$+[B1XFN0.[2C:8[Z0+Y.?BOA;A# /:]$1;4#,"W!I37_7EZ*2U?CU[_U@2GC@),&gt;3=EJ2S_MLR]#RI,\(29DDI9FA!(8B!T_[-6\B%P2&amp;BJ&amp;Z(*7L9@F\1"C_P8A61KT5KHAR7VJOK;F:0-#.ED.9E?9&amp;(#O^?2IR3&amp;3%'';KFX420"W,96OV=B3P"V:]33J&amp;$W""3:XZS)N(=CQL16VJ\N!D!SQ![^C^SZ%#H&gt;X;PFG?Q8WHFJ*)4!P[!&amp;?635M&gt;WR#HGH@S4G&lt;=_2]*_IHW\SE''T-I L#MYVE)NJ0_ $:&amp;@3%W''EWX&gt;SAEXV0P8]@R12C _7H)QH="NUDI^R4N=X./YH#S\IR#;.0$J("C^+8AB9Y6MZH)^!MA3+.$.U$(6G1@R&gt;QW,LL)R16%4=4NSQ^H''W[7K/^73K=7(%\XMI''*RG$R^=0W ''Q6&gt;21&amp;V$"VUQUZ-Z;/$&lt;9-NY?TERC4_M51Z&lt;B768R7Y_R#4-DFVU0SKB4-G^\Y, :7A!BB=#AVSXLC1[G.*K+L(U*.H7&lt;IKHN7[VF)DP#ST_:2&lt;%F;B ;,LX=_]ZZ@A:"6IIQ&lt;:[UN#G/3N@L&amp;R.T:\&lt;&gt;NI4L=IHC]EF7&amp;X_OMZHX=G9''O-9B_'':#SRC[L^M-&gt;(O1H%L(O-.IFQ489[C-VG*L-:4JDQY&lt;RL@NV ,0-/@&lt;T[#LO06) :EAL?YG; &amp;W.;@Z&lt;_V_D\K%A[T6K-O!T5"7YUK&lt;9=Z2BDLP/_Y%QO&gt;+V\ZKE[(T3;&amp;6;J^T84I+2_T2;DG+/7LEL-I,"V[$K9Q%X=]6B&amp;A8''HZ[:WTS.WN%?M:LD&gt;?AKA7\''#, @&gt;MQ$V5\%K)FO$".;0FT46&amp;UPAEF''.W4Q6:W1''" ^1_+%X-I]4V86_$&gt;3/8";4FP%XV]L66MX;!)5AD@E&lt;,&gt;&lt;C&amp;K2.*AC=WX6S3X&gt;$5!Z0H7ZZN&gt;JTP#@1+''1U9==33TM$YC_#O[ZR\57?O/1YZ&amp;^F.)&gt;L ZVV5*+&amp;J928Q,/0E4$Q6CE:(0#\U%4M=[2 J+W)%Q4?: )9@/!%(L[1I&lt;=*IF9G%HQ#8JBV8Z(&amp;5[(&gt;($ SQ&amp; +"AKH,_)&amp;W;G72215GMN12.Y&gt;,W(%&lt;\1B\BZCIRM/W@J8:,UA0NJ9,3838J''/4V/ ^S!X .I=$UAX\45WP&gt;MXH]&amp;63:\%5MO)G"87@&lt;S_)]6-:![KMLK^4?Y:O;@M6''U2@_''[:"0 ^*!L9;/]$]Q(V-8?LA!QGI_ ISO(%4PI 7"Z)JYGT''EZ L?/]E9'' M3I_T[PRU0$![*:@&lt;A0_6J:.8D\&gt;LT0 5MUVKP5JC[O(6029U(I?8#@&lt;6Z!T*;SNP3]A?2AKKP@;J:J[#D"V^DTA3RJ.[F''RJR0A/OXIU*#K\20$-C[=.\IXB M^I?,:\*WVKX[8KH(_M ZT3H,LL-[BJ7?(&gt;#51*&amp;4''5Y@P&gt;?]&lt;%J&amp;9*K6ZV\VAUG&amp;0&lt;BOCUD,@R=D77*;%1"V&amp;F2$ME_Y!E%Z+N9_&lt;4ABN0RMPFA]BAFMUIU&lt;,7%!.11*.XOA\DV[S0:/#J4!I2D,X*I,A:N)PR9"C P;&lt;18^:3_.P!\GJ)MV,=,OR2?1H(,B7 /WPK''1H;8R&gt;:.8Q:%&amp;!G!M&gt;$V+]?MI/DQX QISOY)),?2)BBKSQS72#\Y0,-A,6:=(*#R-6+J[\(3OM[5+U 9M,RWTL3KGA:Q-$_KX([S8/RZ9G/)KV*N1 -3R9Q[0"3;#"HXD:U+;5CRD9DN[P^&lt;2#%[/&gt;%P$IB+- U''F Q1]$RH/4DZ%+Q0 UHB+7]%OFTISSF[9QJP&amp;^F+ IT[D98''V5AU/"WK\(:0\_3@XYC X''%#J"&gt;DTQ/D_08.Z17W#@&gt;B($9;YI]TP\$ @%2R3\[&gt;F/MA+U J\Z$!GBJF-&gt;?"0*8#EBV\7M230L\)''DD$?!]!LIAFN3&lt;2"[P?N9W.2#N%&lt;S%EW\H%&gt;!\5\I+,#P#&lt;MH4()+:QHMEX?XVM74YA[X_22;48]54;%)\:@AX$]0,R6U#8&amp;B=AS#!XG)=^UZ;D^//H''\''RKNSP#^&amp;+DX7+]DU+CWR&gt;G,!^A7E9]_3FEAS! XDQS''&amp;U[SGX&gt;0''8Q9Y&lt;"V_@V!9\&amp;_F=-91=M2)9!N!(]?Z(\F/9)2H?@;)28)@H*0YO5R$,=''*J3K&amp;&lt;UP)9=4Q!Q+5$)!ZZW:3K"0HQRZ =D8QKOR*&amp;9:VXKA&amp;Y57\KHRHU*B:8A+9+%48FO^%E"K*?UF&lt;MXS&gt;_X0M&lt;"D+7^;S+ONUJ8X-+C%''UFEIO&amp;G$L^6[O74K.VXPQ/''=\Z03N[\TTIT/+ORM]A-/A?DEQ3UD,G6-2DJ_C TCP-)0(0DD''UE5UXA\=&lt;$ &gt;;-H1V*P^#(Y6LTJ*KX$)MM8&amp;)3V@L(#L-]=DA:@#8NBKB%B;.#")(9/C(3;8[X;W/,^KQ+95.LQ;"CU#MXP!\XGGT#&gt;&amp;*P-YFNK_^RT@=*"46Y5"M:FW&gt;+H&lt;&gt;SI&gt;\&gt;WQ+\*=.R.--XZ?Q.IV1W&lt;$5H1,OIE1X@/8;62MK-S-HM9+S%&lt;-?UC1A"4U&lt;J)QC9\Y@%CD53#V,$A*&gt;2X9BZHL1D@+*O_4HZO/YZ0*:&gt;)VH65M9OP:Z:#,AGPH#7F%//XN%(?*/[:=IV[:MOQV1PRLZQ&lt;*$57Q.1E17"@''ZZYB8?E(W=1-T(36KJ?2+HB571QWB?W5N#T4V8/$247*:@C/"[^AUIF\PO")6;&gt;B=K,1$1R#JZ^21F13@Z$QJ*NJ=O&amp;;-!I+H6#VZ "D.@L:;I5B&gt;?=(N=90BCYL8U16K[Q&lt;")OI=U-OJEZ7B)9&lt;#&lt;\P(CV]3QV&lt;''!O@%H9"/&lt; A/@&gt;]%Y7@KYKF.1:.E:;GZ!)F:! &gt;D^NP,"K9CG@_IIJ3B:6.&gt;M4"GHO$T8M7[0U2C\E!R5PQ]13!V2OR6* $&gt;@2+8[ZQ4._A:HQ&lt;,O!&lt;,T3T/FAI\FD$$3 _2!:@?T\7AOHYNF[!,SD9" GP2BV?&amp;&gt;/68-%&lt;@FQ?FPDYLSJ&lt;\.#869&lt;30[''@,KVZ5%&amp;T6#9/]A*.#"D$4OH8]=NB&gt;KXQ;$&lt;/7''M4CXN1YA"KF__D&lt;&amp;K6%V^: (G7E:\7.&gt;VJ1X_WHK2?H4??B3,7ND0#5\S0G%/3(-L\]6BN&amp;%K]A$DX&amp;YY0\8&lt;S8''/2X$X+//J-S88&amp;JM&amp;-/IL)VX%(M3[+ON_)-PW-#KKT0WEI*P''PR1I&gt;JC&gt;S;5/B5G&lt;%;!\F#CO:Q&lt;25&amp;%\&gt;41JE!&amp;$:- JY41S!6VZ--+[]#&lt;_E)UEONI"\V&amp;GR#!E=\X)WAB)4&lt;T44T. -IG_=+9#3Q +II[ F5OYL\!W(M6U]0[ZSQ(G7\1[ KSDA26;F(-B\=S".?-B.-Y3.ROLR+DL3Z0^^VP),I%_._&amp;UK0Z-I"Y:V/^$G6\= /[''@OP&gt;E#=MWM=:PK@I=G^5W]I5"47IRYFM?LC56QS*&amp;L""*=N7L7Y1^;&gt;BJ0=_DESK@_$"JX[%&gt;_H/F5A ^U\J3%_2CHCEU)^07%)A^"I?SZI,6+F7Y/RES*W;U4^A0I%E9TZP $1X]F!$#\HNG1[VR''D3MB&gt;]OS3IM7O&gt;A%&lt;PDDJ86IG)AA)20%B8X UBLT$PC%NZOK'')NX5J,MF_E[&gt;BZC\&lt;A*BOP? @7Y,KK[5=P?FJO27:CNV=+8X1E@5WJ74U)/R,4F;ZG).R5)Q$"G3R 7031P+0*]-CC/%.QP^3LK4-^&gt;8@]\0Y*H;0X%:.9.04J\774 ?12;7^0''VK( ;FTA]S@%=1^69^I83$A.G3,KX+:6]TD]X*F\G1K^UXKEQLIR+[LS,.''J.&lt;2XI&gt;7% $*H^(%%*0"3B"8$J4=86L$.#45[A@/8$YS_;Z2S3X#_;S^]O).@&lt;79^K]$D5KE?6LQ#PG*_R&amp;4ET8E1&amp;LA:.JMG11),_%,*D\D.0-B^[8IVB6BNY&amp;5%@&gt;HZV5M&amp;;L*!(2T+:W[\@PH4._DUJ4OMM/,8%7ZW!I2;)'' 0 2[)E]KZ"9%&lt;$/J[X@^G0X^.0!%#DHRTR1:-;\NVGR\=(_O\92S(P$O03G3&lt;@2EZ:O5=T.E8XJMT"$[@-=5TU/%BMR::HM!XD92_N!"O@_&gt;BPQ)_#O2;^:;+9VILHG)3GJS&amp;2?=LZ]B)R0&gt;O+E *1\R-DS&lt;8^TI.W9QR;_SJ\+3=?# =].\DIJRJ)=L^/CD1V,2%F*5(=QZA&amp;AWRN%V(\+Y&amp;AY(BBL7D]13Q&amp;EO?;6-I#UDV_IKJV$NC&lt;0 J&amp;K3^%A2;6/J[R731/CNJ\%PFMD?=K5O+R1F'';P4H#%8L\]''TSA&lt;#&lt;&amp;KH@H7?KD&lt;&lt;HT(*[(/8@";](H.2^*SXP&lt;EDL%NX.&lt;W=DAANB&lt;+NC99^5IE.Y9^!W,1=KP-:4--[5Y1"W-][\"5&gt;&gt;C&gt;CQ!268/DOZ[OY&gt;" )YT#ZS&gt;1Y]:,,9N-6R&lt;)GD"RK&lt;F;K$3(X[C*EN97N[NE";K+%0;1GZK"ME8 3(-CTT.46QWOA++9*&amp;PSIZ7;LN&lt;^?HF7TJ"^D=_;UKJ$:1@0\.,3)4*N.YM9PL&lt;ZF[TP&gt;;=?4)_/FY37#LK^MZU);COM0'';;1;:,,#.O0D*ZKQ^^AS''"''=GO&lt;C&gt;W &lt;7D4!WJ1ZN?@?#/BV/+ZR\1@*IT5523PY)!UWJDF$&lt;=;-GE%&gt;T&amp;.ZU$YG$SKV8T+DQ2-(DL=&lt;:2JE:-1T ?5''@.QFN&gt;4=R1C9VEU+F''1#C4PC?2057B5T=*P1&lt;T%&amp;=]RC&gt;!''CVP&gt;_UY*9Y#V&lt;$+Z=\ RE:O+&gt;U*D,F7 H$*D)12*CCE[Y^WU#,([$-12M0W+)83 WD9K[=-&lt;[A?]=E@W9X6$^,B+.&amp; JT)[QS(=;S3FM4OLFSF&lt;_6B;+2,.6?D&amp;?7#RA\O5;2C0@J\BV=NH.[_$:&lt;N!2&amp;UOA^=-MLSV"&lt;;/)DYB4(^*5GE^4OJTG.9KAX.&gt;V:42-LY&amp;(!@@80*"X?9: QK)&amp;0X#+]DO&gt;SK0/\=?V,@= Z2M^@6R#6C#W&amp;!/6#^#U!^0+;7H&gt;41(P]J[J1&lt;*&amp;7''&amp;;CHQ:2*(XW."&lt;JDBNR*UCSVM@!74N-_B\P6WSF,MZ"FP%L%E8XI_)_E@384CYU&lt;:BJ:KNVP4U-^#&lt;6@WXS4P [S7U&gt;RV(&amp;9Q@U+Q@^\)K''@NK7TBLAWA&gt;1\A#&lt;R"S07D@0?''!2O#(V2G%F&amp;O,^[X".(LR*7158ARY_((JVO@)9#6?RSLPX"GRPM=1HS6YKJC84%0GT0=&amp;&gt;*QK?F[OG85W"R$AYK#8$GK''W;  )/U"#V\]S $8&amp; _L0_&amp;K_N#F/I^&amp;1]$8,Y''EJ(2:KR:)M/TI&gt;((?"_L0A&lt;3"YKJ2T^5-,NZ:B:5%%P,&amp;F;J?4Z B9,&amp;4@^Z8"J.4^W!=&lt;3 :V-U&gt;DY%4(OK\L(KX5[@";%J?I2AOX8^JS0;_$''$G#:YQ;,SL];AO&gt;\FKUSK&gt;_9F .UE[C&lt;4=O+?&lt;N&gt;-GBT)8:TI3O-9QU\))&amp;Q_*A552''_[L6J%,07-P^I9D91(HBPK(]U7OE3&amp;J5FQGBS!IM1R+&lt;N_P)A0&lt;U_/5B\*;?QLLEB+7-M?&amp;-Y4_D_Y:GAR7UP6KM97:F2/Y;G87EV_0D_L$/*HB16;T",?"3ZY_81FQX&amp;![5R"X6#ADAX5I\ #71G75,(YZ$R2,&amp;5U?V*30"9A?RW@2W5KM%JY)WN\\F^!T4!XMPU^ Q#@M;5Y&amp;UJ5\ ?X:FK,()GO@C#"[J;4L"[?3&amp;=/BA:WD^ X.Z\X-C4OY@0,_-N[!84V@#B;":JXRP2@=5?[&amp;5:C:5Q:EI2EC8''.**,5L*IQ8U)WSSB\N;))[(F22/3:80\\EU="\0FIK_F,/UZZD\N4R!_33/RGE9L?2*4:8;4E(7@EP%$U.X#D^ 6C^:&gt;]WPL2[+%^I9Y7ZL)_#3^U'']C*L&amp;);3[FKX\B?]6,9-(*S:;YFJ"^-/:_XQ8_9JKS[ALO)8==M3@ 5]@8N.OL2A 1U=:9&amp;R&amp;&lt;M=V\]; M!(MRI#20+UP:L6@;:Q #&lt;.!&lt;U&lt;*(=%4-\+ KZ!&amp;&gt;&gt;%A[R##E59_8S[2EY6)[$\K^^7)$S7J,/&amp;!''1?O^!-XOB@&lt;;!R!5/0/9:U#L''M]+B*SXYG&gt;8KX[%CSB(.R+XC[ &gt;*+X2!&amp;]W.?)-9M-6!_*A&gt;DU_$_(F%_N?Q&lt;2P0F#H35CM86J[)MAUSF5RS ) &amp;(*.^W1O/]G:UR''*-4Y@5YB?9"*W:MI^/)0C;.@:._/G2C''!-&gt;&amp;D&amp;&lt;=QDW[_[?/P,Y9O&gt;/K0F_&amp;U/V90=*B$[]DC&gt;&gt;*U.ZI(1)E?[^X$Q\J&amp;C3E",D1NIU\0XI\[?(@X0'' 0AQKBW79(6&lt;NY.GTEZ:$*9EB=P[CD(FU6"U$:''Q.!DK!)4B*["FSUQ41%OR&amp;X^Z,_B\; U_=[!5-NL.[]I8K%.OVQ#PG0N2?4FRU"49I#)_X!7G_!%Q(?_E=((W?''"C&amp;K,L7]\$T(Y,:HXN0MCSUMGHD''S+W0^LN!:, ^VWZAU:4O.H9BT''+CHXC&gt;[LF,MN\N72-HIL 6RF:NS+;X(+4_9B&amp;KRIA .+=(Z]F,+,NGA5/X8M@28&amp;0 Q&gt;3+L!2[A"=YWQ]E;6P!SI\7(BWQV;@VPQ.Z--$,R7''MQX&amp;2$@ -N"SP(D%,A)R50$FO$:EL&gt;JLC"M6J!G)-CWWQWX9$);+C8&gt;]''UOG"3&lt;M+GQ8B[1\I:H ^FN*CD2AI*4ARI;@56EMKFXD,&gt;N:3;5OK-[P!+A9@&lt;U?[_,&gt;5,7?_W.GNZ2PPGM)-&gt;$''0S''\O&amp;.VYT@CN[KD#&gt;M*?II*LJ9X[GWL0HG,''OK9''5QKSDKC!\!/B''&gt;7!:X6)Q3^/MP?K78.K(5_M$"42 XC&lt;N^$*?WVRZN_[]72YW1 A7,C''!=NDS@W+X,\OL5%Y]!&amp;"O[&amp;D1A.9H3O?D2I=&amp;W7@9HPRS55*;_.]&amp;D4V8!F)1C[679O@&lt;AS"&gt;W%C3FH&gt;/++?UQ=!!AN&lt;C#%81''; OY0#K!+D,)"&lt;)&gt;%?;]$A-0L60$M4IWGQJE5F[,*@GXDV L54N(SW9=JA?[MC8=H"RTDPM...Z()%U+0!N".!!@P@:VHDDQE!N4\^_9?HG]''^07+*&amp;69R*H:@3IQD8&amp;W6Y)(C&gt;J-9AEA1OSS_IWY4[G1PIJZ8T%08@%Z@&lt;&lt;1(JR&gt;R''''13NX.4. J5]&lt;4/(XQC#"@]&gt;2W[''''[=@[K%O+CHP[3:XN+@V]UZ&lt;Z(&amp;(G.K@7K&lt;+6F''2HOV./19-Y7!N"0-!BP7"8M^$5R"6GV.+:4=@R]O:&amp;\!D&amp;.$&amp;!6''BMIPJ$3X;S?+"&lt;G**3-[5^;''V2F$C6/EQ5;\HKR4X7!(4O6Z6GL&lt;9,GIGQ3W#/)TQGP=GM^:-B_8&lt;$BS)5$[;,G3!Z"97@KYNP]5O$@;&gt;?V#?N$5W''E271ZOY0PGSFT1_/EH-W%]-\.90;&gt;F6/:Z :L% #60Q24LCPAG''=G@/PKM(+JU''Z2+-[N"O63]Z#Z9G^E\&lt;&gt;9''F@LO"Y&amp;,RYSKO&gt;&lt;7 8FQ?E\(V5^]7]965NI9 &lt;"?[2DY=28J7LTU?5''-D(C&amp;4R-Q]/;A)"G)&amp;0+;P$S&amp;&gt;";3O&gt;J081V?M8,R"BDPS BD&amp;CS8+A!(P?&gt;FCD,3O1FW.D;._)Y0L+U+N&lt;&gt;$:'']$2S_D&lt;C7/.S9M6\%-8P,B!8H(6Y)@6G:&amp;R)+=EOWV;T#L=M&gt;;%@IL,\B*YDH9X;:^&amp;HK''A&lt;X''X3O@.#=.;;)BR"8P?8#O].QZ034JYA8&amp;U#J^6&gt;3LWRD;.:QE!/U2J&amp;6. $WA:D(FP!3V-%&amp;&gt;I3(PU][ $.U6&amp;.$7V[YSN&lt;''H;1O%.RCRPRW[-Q?&lt;]JF#PKV-%O^E;O62Q]QCE"?I=A^4&amp;HEQK-8Z:=IQ]&amp;!I@T -.3^,;3@$K?3*/:A-EIKCB/0GW,K^!UR&amp;[OWH(&gt;V (SS+G835 ].C*R&gt;J7_) 9J T7ZKZ9AV%*3A)K3IP'':,X&gt;GIJ@S5!^QG&gt;P&amp;6%I :L1\+. X_&gt;Z)=W R0U*KIG-Q2NEAKRJ*A@*IR''HP-I.D_ /#:#&amp;IQ/CY/H0Q-5E$J)M"''S&amp;!5%W\V]W''9/(X320L"[,RZ!9]FF&amp;MXVLW&lt;$[4DJ#11@  RX8LSHH5$TE#/WXXB8H''S(CPVX!H?V74ZS^L/O(MOBXJIJ(VPSJ1#\@D:)$D0_]@Q1 F&lt;]A+?,FSE4"&gt;$5WAH/J^TL,930I?(R&lt;P[GJ25"(8K_ZE@:#QP1F-TZ/.$(N%H''*$U=C+0-0[EWRE?"J2[9&lt;KS_#H9&gt;TH7LL,@ -,?E\QD@YLTA+::KP\.A)-:&amp;X$;[6@\PM:RMS;U1:"$M:"&amp;QU@V^3EHU@3A)^''B)Y'':2J&amp;8L%3)CU&lt;2TS''.HMLN\_,@FSHDP)/_2L;M8&gt;+#&lt;90U''%/[/R0=2= A&amp;DO"2BG=9@LD3P1VU&lt;GFX3''BY!L@&gt;F,0@%F&lt;_XTIC3D=N@W)87COG-8D["K3F$?48A#RO%&gt;=2IVXU.?17P_&lt;:S&amp;FJ\)NO_TX9$/,VTW90H(K(T&lt;3(\DR=S&amp;KGJ""";D#I&lt;Q$&lt;^GW@L%%;''JP(&gt;NR=6!J$SJ-?[%+7#@:RLH!I1\9S_=''^J_8!2Y3PJKGLB[/5TC9D#*N1"J$_-C 8.:VZ^''3FD"N''F3&lt;UF&lt;V#B29Q&amp;L''LP$E79\F]\IY1ZR+\''&lt;W8KPX-W5_6O9+?$"[8&amp;38T-ES#^^?\G^;AJ*VY/GZ.;+[ 78+ O($  G''"5QHMQ3Z:A[&gt;!''FCE0( Q9L;!H%O55\P2]5'']%$4%[8S=C1&lt;NXRI87Q5LK"-PU2"Y;1BT$#9NGG)%83@ L!]=U5BVCW/BS;C\3_K:7(NZFMT6-&amp;&gt;U57W/A1AH]SS_''3[TZI):J"PD&gt;_VW*_4DIGRU /.-,Z(L++E&gt;@PO''7OUIEG::4#P&lt;-HW3:=+;\"H;ML\W69XQ 5E5PC1F&lt;;10L1)GDS/5Y+82''N0L=T&gt;D917)[(;1H0N:AO&amp;T,O8ZAI"DAYU&gt;R6LW"K/DG."-5]&gt;E+J6X3\_''=?5\,KZ)9K];G8=?!-TN''6L,6#HQ"&amp;Y/%R@V%*@SL.XJ+4P6OK?NH&lt;HMP&amp;9,5XQEDM\;($,MB#PR@/I]TMF3G^MN\?&gt;\W\V)9&gt;)"T*9BW:&amp;A ,1SAE[2V_4BB;"GELR^6?P_BFF9*R(^POI2&amp;W?D&amp;Y8&gt;%I''&amp;T*,:@!\D"2&gt;?'';S#5?LD;8/S44:?&lt;7S\^.^9R.\Q.B$I^3E5&gt;F] O''WN)4MA9S+N.PPGP\B!\HYZ D+6=KB5MB5?!ZM]+21]85&gt;^&lt;Q56G=\#''HJE5;EY0!L"5G506&gt;]LON= &lt;J"5L32&lt;&amp;5116DODY:2+&lt;,Q\V231(Q\1_\(OTP%^K.8\U*ON?ZU$CI^]^XQ*8[+[=6PB_5(1B\-@!=%=BWF_,\QEC1-B"+9XQO0^!\1+H.QQ:$A2S8J:^JF_\^C%)YQ COPKI8VT&amp;%Z&amp;*98:BDJJ:8D6 E_U-Q2&lt; E."QKQ/Y2=#(XP+Y!''W"$JK6UN89TQ:^F_USOSF-@%&lt;''5ZR=&gt;UGH62;*$[4''27])+6''DD$#S=,[L\-:!9OB&lt;&amp;54X@DOQ&amp;PYP #293(U_:"/FA"ZK]&gt;9PS)7(&gt;5JR1H$/6!O$@FCIFP95;//[V_N05!]L.37E''JM(.T:S_2 &amp;GT,67@FZ5G[6E++0A#$K*?]-@3M-0K63*8!/&amp;:5;?+39:N?:./.]1VXU[X"QW/5&lt;A,1Q*C?_3M9B&gt;2''I@-Z@CG5_Y6J0_ JL%Z]=BBS["*%&lt;*?)@WN:[SS\-EDB2 B"#KI*PY;#YZW+W"_V^?NK^8G2L:Z@BUP)]299Z-IMC;*A+M5U%T!GQ6P)C,LG8BQ#BE0?4M#0#,*AWI_]1B:S''\9/=I/N6%2K!5CZ?4\9B;%.&amp;X0@W3GK-*B*J@;]:,^42CJ4-SB&lt;Y.3ZZ8VVWMF?CG.4I,9?C&amp;#.V13A O1(0IYI2D3%)43&gt;S4/AC_2OV)VZO@2W7IO UEZ]K!-E*ZMSBA7)(F81/&amp;6&gt;$&lt;8SG--3FJ7L6IZK;L_*5^@KC01$A)F?7"4]8:^:**L9D?E=#&gt;+4%39&gt;[MB6RNK$-5BZP/@+*K''*X_)#JB"3T*71._(1RH5[O17-C*(46 ]&gt;?JQ05P#OIF*)$:G:DM+H0A^W6AQ2A\_JV /?\&gt;.:=[A"Z0[+U**/7O=S.9#3L -K*?^VPD8WIK*35=4[[BVDQ''VG_ ;YW6F )''^(JJ(+A_ZHT.I^J#1PU=&lt;ZELA3;&gt;=''L&amp;49DYM1/)7&lt;&amp;_EX&amp;,[E P&lt;^&amp;,A)3;&gt;1P[!^LE^^L]L;,D[D$1&gt;:44X:X8Q1K&lt;Z4/B''P&gt;M_^/I78)O::KLT6 K=58,Y[Q0X\&lt;+U+)-NP(\6?!0Y_P6.;8(-P*!Z-]^[ZPK^P!.N!F&gt;N/+O X K(OE*$YC5=J]&lt;,PB158O''AH71N"F]E=F5681&gt;6B,_?1W\()D96!$BPK 8B&lt;Q[X^!YS?"4 =,U0;BPZ$1=[?NQXM%SX$+ABP4OJBD@)WEIW^),QAH(Z2L=!'';AQ&lt;HZ:&lt;W!@Q#YW[N=''%1VD;A''1I+L-BX &lt;!25*5=*:2A!!BG8ZLTIJ&gt;:)!6;03N[BBEU6B,3%''_FQHMV^,@E=#IKY,1/*"5J&amp;A;V HZ)''WH*5P^=1W5E&amp;@[DHJ#H1.LA&gt;_I^&amp;-(D,&amp;(&lt;9MYV_JWXW76 HC@,(M$?&amp;M\ D9(ES9&gt;KOWSS?XB.&gt;U%1FQF-?HGGF74A5M,#%%9Z&gt;G!$-,7&amp;?DR--&gt;T99E&lt;=\1*$E"F3LINU?GI&amp;''I&amp;W63?6*Y4N%8,''TZ5F]&gt;+&amp;$),])MZVC@".&lt;CW!)8H6!7YGY)7[MNUP.40%&gt;2W3*2)60Z&amp;EC(KL:S\?)D4C5)/$H,-0RO+X62/Z=BQE:TS"MF2] +(50??JRSM@B+ &amp;U1/DL_A^*^R7MI0AVU''+Q_K.HY)3''.A9/06)3\\HX:&amp;]D$:FOZ.S;3"?0";&gt;2WJK]YZ(?8(3K7#,/M,"M803YV50_*ABXG%Z+5&amp;%;C[0./Z!8OG;*3^L?ZHH95@Z4E +RA%/&gt;X)/,YRLX],ES''@4"^XZU^#(L7)H$%)%&amp;PM+@V X60MJ]&gt;-G^"X#BR($HN_ 5%QAYRX+)"R_!SRFV=,JIQC1M0&gt; "..YVP1FQTG$\X*N''P%4BJZ&amp;4)=^.U0(&gt;#93^U''SCH#-#Z+!G]OQ7B/9L*^3-Q!^!&lt;XJ/:SY=4248B!;!O58W"W&lt;6(Z3;C41T1"UN9!GJ[^:QSJLNN#(N/9WAM\&gt;X]=[$]Q.6@E$5A(I^F@!8T2&gt;''+UCRQ8:+''T&lt;5JWW2*:W)CT&gt;CEITQJ;JO#4WC6F8K1S@JO$YF!WJ:SV6%B-HWM1D(*HS[/)I7&lt;9/''408?JUK+JN%8C[NL!''"5&lt;CI#0-KGM1J)@, [9C@FAD5PN_,KWB*NFU&amp;VO5)["&gt;J6;271D*^&lt;255[=1F91LN$3IN]LY.RK-[W&gt;ZLGF\RL&lt;D"$E?L[NR65T%N071=?(^&lt;N^ /R2@DR22D!XL .S(@D$76#1K2&amp;.TSNQ\#'' FS*6P9H+U1U''HP)V&gt;H/NT:OD@*E8TNJX&amp;A:,)Z=;7*&amp;F&lt;8#+#EW_9"5F$B3#&amp;-UE''DYMIP(0N.[=''X]**@ED.YO:TP% %!)"SPTDWNW@((QZ,!O/HID?4"&lt;;"L?Y_MG;!419#9S;&gt;:QA.W&amp;LGUM/U7!K.]X/W''5S3 G5\VCZUCUH+4/0Y:E&amp;84/+ J4&lt;GXM_&lt;E)'':''&amp;XE..B-$2;Q;[VM[^VA/1I/C"7:7 25[V?&gt;6V0=0*ZCT8K&lt;%?VVSN1DGB#V81FI"ULT&amp;+T-7O&amp;@-./XCX[E@;(7X,/&amp;T&lt;4D.!Q9GI:@[#XY^I0L=Y$WD 4-.[LZZB&gt;C&lt;*9W''H6 1O5*FC-S(W9XGHT]1VG+;PGP,0])2(&lt;@''V)@C9-8+*/KRI%-V+J@=(1&amp;_Z0]Q]KHDIRBU''8\RQ87KX#0?2QG-CW]7U/E0VF%*&gt;HX-]9#"FE"E''42+$&gt;T*8Q$WN0A&amp;X''PAK]\0M)C UC5=C@02O\^WV!VADA&gt;-3QIV/[6!(AS&lt;JK@PZW5=5GE$K!#3B-,)&amp;L6&amp;Q)Q58FL,RB?62(;_/$&gt;B''!79CR@@;F@"N&amp;&lt;&amp;\N : A&gt;"3L[&gt;0./Q+Y(&lt;Q=_BK=\:RM)&lt;16/X0YOPXVU_AYO''M8;WR=6G8/@3:@UTBVIN6&lt;#,AJ*&gt;YNU%Y6&lt;8QE".&lt;E_''(.Y4_;DS].C?)B3/*SY-GPI91!/N\^KEZED\C0&gt;M2?C&lt;/TN=?H?DN2W9DD:G;NJ4=%*=#:-Z:0&gt;MQS)^IH!;B''IG_,\S&lt;7=EO2:?%*.A;#1#SDO)D%JW)+''%5*62I=Z6E()-$AF#),H@,M=/1/$).Q!''@TA/^/X7&gt;5Y%PG53YG!LQQ3&lt;N]NW%9H3QLHK8\(EV1@",_7U/5.-$:''5&gt;(*.U@G]&amp;,[WH[IG@41I.QVQPEGVA@UK$50^\BU*@::F8\.&amp;KO$T,K[:MWQCM:B7FCG*T$HVU$N",M!P.Y&amp;T+&amp;.CH"+!5&lt;3(L/*K:0N&gt;-0&amp;]/X3429DZ=4WMBZ6A#.%LXPXD5&lt;I;=DST6 3E&amp;&amp;A1/7+X;)9SO/*]$SV9;D\16J2N^@3)Z%1?%K_8WW"Z!#"Z;2VWR7,"90UQ08CMZL;/M]Y%[VI;50G&lt;9=GD[?&amp;@Z$I/Y\E#Y JKK+Y)''/&amp;T(G4H#0XB&lt;%KP\3;.5@%J$.1Q&lt;#3.C&lt;OJ,JTB%3V;V/Z,J\/H1*%FP6&amp;HHU=I[^L?N7J@=,I;C_83EO)%MYVSLTN&amp;?I$''D"1KK669W;D/2(''+#IMBUF=&amp;:60(=GV55?$VUG.E#/DY1''W:D.9''Y^P$5_UF(+4A!.L8%!.K@3&gt;Y&gt;-%LXT6,PGAL!E"Y8%9&gt;L;8C2[  MA&gt;5EA '',FGR@''/@2\421#*Z+$IX:Z"JPD80 ZSR$0(&gt;.I;3&gt;A="''V@&lt;/.WLL 3.KX\ZL]B -$TU(&amp;OW&amp;W.L*OV5&lt;_C?%H3$ ZB*:LPE9Q/]&gt;]&gt;C,&amp;_M''NF7Y#^!5 F^L:''5HW6RWB1I"Y#EB&lt;''44S]I@%#%BGY^T.N+Q==H-\:" 0:W6B/TZ@LD,8,0&lt;]&amp;1W&gt;!/PREK2%,B@1''%RZ$JNO\+T$X''MS."+U__N8 1CMCA&lt;DLVJQ4?/8''FZX OR.H]O0130ZCU*@D.O&lt;(-''59"?''#&lt;VA_#WK$RF(HU65K-KHUC2L78./,3W9HG!%;Y\WN R6#SCI1.GWCD)R-FQ?K5%FK7YU&lt;!\O]"JQCV@GT+8CV)#@&amp;"&lt;I,3%:I2]DW@''&gt;VR;.MC)U$L2._+LI:0V*&amp;D!-[+/.%&amp;KJ51:E2&gt;A8G3U#P" ]!NA&amp;HIA=&amp;ZM,-\2%6BC?4D@X&gt;K5X=%E0WK&gt;?&lt;&gt;!N+5\)-6UGH5W+CKA[^A WZJO5&lt;8BROT)]5N T*UZ9WJ&gt;^OVD]X4-,VIU"44+O/],F(&lt;?*,+RG&lt;/OBREW1.TX_.D?5I48LX OSHC=PHV&gt;$J[0L1BCD@%1-XF''/##N&gt;W#+\N;NG.I6/-MBWEDSI*73SX6/R5V6^ZK9&amp;?JW=''D@I!(T)A56*/1S]W= UMV7B:UB@[4Q#A &amp;Y$LX V.''\SC684A44J=#IFZ?OQ"5&lt;.?TDWII),#2)47,F9+[?N6 *G@;D*/?KKZV7 _&gt;%WN,I1BG98;,SEIEJZG8((X?+-E'',7-H$WHU48H T]]:5C]&lt;7W/GB''B1_'':&gt;*X(B&lt;&amp;G\FDH[2F_[4I 15?MOF&amp;W*=8M0WB1RT3^46M-C&amp;B)ZF,D^LMC_PQV W4FB]V[G)QG$=Z]0%(6)O,MB%CQ405(MV*41$35NJ''MV-CNJ;EVN&amp;''!P*[J1-M1&lt;5&amp;*C!)R45V!Q%)6URUBP/"''DTZU052-DPC [U*KA.74V&lt;DLA&lt;IHPM5G%IL!7B).T8K/,E\T8M"*&amp;M-#OY2,%Z;H*D97&gt;4SN?[I*.UL_MB=PD\+# ?O?%O^_!:&amp;^"PK5XH+J3W*4?X;$NY!L)27TS@Y4K9&gt;,KR&lt;GU7IT7$0V&lt;YWAN(J(%IV1Y?^KUD&amp;Q 3C/%1*R3+&amp;M;1/U$CN3&gt;&gt;JP3(&amp;ZGZ X#M@@=.YN!(\.0,?&gt;99$9"IVDLA$ON;W#9L4EDR\OL\, #9GZ.+3&gt;AEJ&lt;=OJO["RY&amp; \7[KF.6/[[]$8SF7C/&amp;1@-_V\M!;5O.I5R^*81AH4)G94JTD(X J/$K6S8($!F_S&amp;&gt;(;7$6BNHE=6"O@ZF:VD*RG#R]"W/UCIND2SLCD]0L"&lt;GK[N+])L#UQ+Q+LWXIF,#)\U&gt;;8$,WQ-&gt;-HE2[H":O5\C/1''5G!"SM&lt;R9IVC40M&gt;D&lt;"%GR)?9Z9L=!Q[=,CA6Z#C@?VA,-$[87/-6]Y;8BOS]0I\QIYV99!VS5=K5MSU3SL-W&gt;/N0^M[5)10IFRB%U(R(K);I8_D9WJTK2U]C@_U.B6VYHW5\M2P)[,\([EU6&amp;T6@HME/QN81M:D.TV[?;WUIJHWG8MKF3D3\.GQ_CVNB6+W7GN''C)GSCJ"".D+V*T6A[NY[]/.S1E-^]!_6\F7TP73/JOD2(&gt;.1+(J&amp;?RYK3Y"$=:+ "S7$8[:T#+&gt;N4&amp;&amp;B,1&gt;#\LXY+F^?ERF:^21#^(,6*!:IQF$B=^"Z;_@U^.(&lt;)DQD)DWTWK67&amp;#00)U-ZE*0&amp;M^U%05!)D_C!3 ]T1K97UMJ!TSXG^#K65$+/;G1V&amp;X19%K2LH(]D]:=^#Y!AF;&gt;_8+WE7F\2[UY:QXE8BU@W?\*8S)CG-BP2J_"X49E&lt;D /_2E9@Z)WX,?VC/S6%OA(-"T\X9RF-(J:S$YUR%=(RFK8I6S?8AI.B.[ 3&gt;N%L.-DS\2/FVJU!P])*''%_M)E+@IY IEV_MA59]H7B*?^%Y+G5B$PH%(II.7Y%2XE0^6WR3+&amp;O?D=+60H"..D$NKO%''''(L$1:Z%V!S4!\L(VB$UW*!IG^[$H (=3_L''U]0:XLJDP?8-4"G&lt;&amp;H\&amp; I.$TL]6I''GC9U''X38S]!X+UD]SCR=3JYUQUMS5)YB8WC588S#2''E :Z_L/\,&lt;F&gt;&lt;M]XO )$@494;&gt;WG37[]O(J?4D=YU,480[%_(S]WJB^,A&gt;K&lt;1,:[8S&amp;8]*[(A8''K[P:C&gt;/^]M;QEUO!@''J)DDWIZ&amp;1#/QQFGB$8*R?$6;$&gt;*YU5#1[!)-8/3K17:F1?X3GOSY/@ZA/X?"( C+1T&amp;)!'':W(CA''G&lt;_L8!.K&lt;&amp;_]P$E$#R:MUJ09&gt;7Y%%:L7=&amp;8"LNZ0^\\9O''&lt;%%%9] %PB6)\:(D3;, I;VO1UJ.&amp;(&lt;,E:6A0+M[I\U_09%SF%CH"\$V7J.K:P8J1X=[8OI6*6Z%";\4&amp;5_ K/''2;(ZC;F91Z,H37''1%P3N&amp;&amp;6L8H]RJ&gt;5 O"3,W.C''#QE( O?5G[RK%V/[WA;;KWYE"H^JA&lt;_4A$O67\T1^FLA:&amp;@#W)+IFWB &gt;WW[ET_KW@&lt;QEEK4EMR(U,H.]@. ^9''MG5MB0T"7&lt;0&gt;.29''&gt;!HKQ''A?:75$;3T&lt;11"B&lt;5!T1EH1''_:?XMWMD,1UZBU":N7/8I?G=S/F0&amp;6N1?7Q4V_[.@;.HI_.!P?:Y0\=TW303?S]8!UJI[\[\%7*/N.":$4PY&amp;;%Q[HF.]\3E*+:=I:,^H 5."+[3(WQ)FJ[T9%''EQ5Y:*)8#TX&lt;A4["5]#"YDODFLS3;,''4&amp;!2&gt;)\01*2S?GX;32115=Y0''G 0])L^RF;:QE!\ZW+C SH-&lt;NR\4!#K#Y;UL/"E8?6HXM&amp;6\:A#5AQ,)R_G&gt;?1%JSN;P$+G7(''*;GFGO363:KFAFMW:8YV(&lt;"!JQ8#"C&gt;UL[(8;,R+,2[0/:O$?LE0^&amp;:Y#01:MC5*2VE^L&lt;C2D\U&gt;D92\^!\B@)^*R!HD;H9H4FKN__#H&gt;@W^\5C_H (ZJ*\])2&gt;LBJ*EH**J7R[B(N?:A].W''&lt;,J[\L9DJ:_NB+]?A:0],8_E9&lt;_#!^M''Q.75GHT&lt;2J&gt;N![4L3)/SGO\L;AD[0:UIW?)U/XD1Q8:WA*%S95.P37M,&amp; \2?$SNC![&lt;6730U/8P.?!A:ZZ6@JIL&amp;!&amp;]EY01N;G9AHD[6@5/WZJ?H7-(Q$7@NVN,C*Z*Y.A;#9.GD7-&gt;%2)  _3=RLW!-1A1PD:#4)L,PQ''\!^@5N%59''KE=D@07L389&gt;E&gt;''W7+FBUR=-Q&lt;MY[H=8;Y4YQQ2]Q(-ZF _\5"5VR@^0&gt;&amp;2?)5M0&gt;R+O2:DBGQ#A(K! 1( A9&gt;?KSP37\)+6E72_HMTG;35(60#9''++[=AO6S0W^IN*ZP?[2XPI*4*%!PW3#KAAITAXY&amp;$&lt;JCEX*/B)*9HA@8SNE36(&amp;0VE;*E@4GP4TJ:Z6;R2CK&gt;Z%!O&gt; &amp;#VA)@Y:3*4CMNV;[GBJ(7C(FA)GZ=]1&gt;D_OP2%X*)$H(4$V\?\NOLR;_4+S+2#R&amp;LA#ICRA+#J.RO-Y[N&amp;9[ZW@675!=[(*$9!_GO/=PY&amp;XSQ&lt;K0-]UL&lt;KR&amp;X=:=[(''V2@-@O][@H/* YG-"O-;0U_*$#THL7FTG*3U@;4 J/.TPO#"BBD0;.U .2&amp;6]9=:?^A-,V#^%1]GCRW7Q9YL9!(3J$+"=RO=&gt;&amp;*SU2=Z&lt;U(1LD*O].4P&gt;M@L!F668/E46H,''JLGR@%Y!N5,O%@&amp;#,JWO7CG,*]$^X])[U+5ZY\P[2,*]94@TF6X XQY]G-M^F1+JIH [42N7D _MQGTF2VL1XA893SER.GM&lt;&amp;W;]6[S25Z*CAH@TY;QM_?PT#K;2V:KQQB''C*KI\($U(EHF&gt;&lt;P6=9R\%HTR''5$F%&amp;A;#?9F''S9%NF:&amp;S&lt;MD@X5 OHJEZGF+LV_VX$?YJ^N.8WS3 Q6D3B*17W&amp; Y[&gt; 6X-&gt;34MA0#B_]BJ+$%$B:C"1K/6I8Y?%6U-/&amp;S7#[*K4Z!HA\MJ$-TVQA:*ERKW?3E/Y/K$GE3.(4Q_P7-&gt;$C&lt;8FHNO?B1;5*A%L*G_Z)9.3O#JH(Z.$&lt;H'''']XERH)\&lt;WJNR\ ]&amp;ZV9.''53.&amp;JAPE]K!1QN%(G6S.IGRL%R-VI$U&gt;C,:T$$DMNX1''-I^M&gt;K-$=.IOF$UEF=VBCRF2+8AI+FM8)I.%82"Z,5IU[5*]ORO![*,9''_.1RXEF?LM0#LG_/&lt;!^9^&amp;2X/(4KF",E'']U_#.6Z-QH@R*:8*FP4W:].D*.7;''C#@"NKW+/#-.3SO)#/L-:$)SJ=%9S.,#1/S$&amp;\8M\/9_6X!9PG+"GAMB @46]T&gt;";KT+&lt;NC9"/VH9IC?GOU;DF^5-XZTLP016!&lt;8!&amp;$0YY&lt;''2K_P/ST5K&amp;\WQF8R#BN05&gt;S4C C[A1[Y]FS7)R3.*X&amp;W_R&amp;SRIJ*''@$Z*N)&amp;8$(XR-;9&lt;KR7@=^#&gt;&gt;OP_N&gt;I$S&amp;;LAN''^PIFL[?T@G=M&lt;3C.ZJ[;9Q_HQ%(P,0;T#R*DXU^&gt;O6[.*?T$JP"Z?A(MWE24&gt;,0*3^\KO3%FQSL%''&lt;J]WD$#J_JI4''O#;/0U60''41BYBJ.,&gt;3&amp;55A6U_51M;\^/&lt;8F?''M\N&amp;9)!M)%7*1&lt;D%02/83"4@E(=84M4-IJ%%-HFOT$!%=\%I''J4.FUR,SIY0)T2L&lt;8J=0WJQ]Z(IG#ZB?&gt;V?D!2-JE?G,O+,Z06FK''@#@-D$U5GQR2MPY*C4M\;9 #7H;9&gt;''PHNQW/HJ1W^KP6\J;*MOG_)%LR\Z&gt;8O&amp;M0C&lt;YEGZRXZY;1^PRL!L''3R$&amp;+FL"K=!&lt;F%=%NAK?\&gt;@F@&gt;IS9! 4AU&amp;;@2=J5H$4%AAH0.ZS3$V5(+6HABPM%BD:[,302T)&lt;_\A233?LA_&amp;R''9L@+6P&amp;#T;TC=''YA+&lt;#7Y;ETA#6OF@NB.IO3:^XGI%O\-S7=Q(+&lt;;DJE[79X1%SM+,;#NN)K$?BCP(1[S*$&gt;MG0YYYB  *.''04/1W+UQ,V=;W&lt;?E_^5WO,3J8_TJ+,FZ15A$XUZM=W5AU''YOX:I2[#FVNC-C6\.E4U@^RTCAH=5-1 .!YJ8D_:RQH9!BUKFA&amp;Y-2&lt;RCR"M2Y%:''TV)J8*-X&amp;9ET P*E=VIA30Q8B$G?&gt;LI* ^OUD1-CFHA7^"_)5[X7\+E;TZJ%BA33[/47/9M @FRNMSP$4,WT(T"FL^!&gt;3\N56DRQZ)=LDN[VSF6KQ/[?B=^OTL4N7IMBE WWB\Q6W/T''''?_ 9PUY,-@I\&amp;Q.@(W/L=N#UO !A=S*&gt;H2V7 M]MCB9([)4"351^:%Q (&amp;];DSG"&lt;F:,N:''.''(]ZSQVR&gt;IUF8(3Y]*V5_C*(P! \PE[@/7N"3?NM9&amp;T&lt;Q&gt;B9P]^&gt;CU*C05U;]T;/@.N4''V[B+H6\FH9VQMRHU8W)!R[Y?-$E-!7J_&lt;\3&amp;9HI[O:P6CG^1=V_ :\HUL]KH*N^)?H#\U,0.^QF&amp;RO6.T_=^S_/,+0-OYL;MPDTK&lt;&lt;;&gt;+* S0Q&amp;W%[Z"#%=6UGTAY@5 *XXD=S58 &gt;&lt;64=\*Q)66E R,D6:6]F''47@=GK-+R@[/=I N=;3IMU!46.K\L3AY9B^,3M,(U8''3+N:"KWT_[F.S*]IGFA15!&lt;Z6?*,@G67]*:B:]YITC[Q/K\M[J18N0A&gt;&lt;P&lt;&amp;GLA!8=,G=:I_XAXMF3WU6[I7R/W :[&gt;9''9!Q\COL%UMYYU7!%JB3U4]IO7KS5''\K6R6-S.;U&lt;Y*:I&lt;\88@N@R^V9*SL1I ''!WBRB?EB&amp;W7&gt;,^3&gt;(X![3$.\V$M4,KB(+4C''J2_B]+,#$A)W8!#:1NC^6%,]FY)SGY^PT _T5UY:*0\LNL&lt;\T]B&gt;0@,:9M.C5MJN3K&lt;VHJ6ARD=(R9LAE1)4?Q$[NS?%+,,PBZC&amp;CGFM8XQ &amp;(L&lt;"\_A0C^(;''@9C&gt;\\"S2AZ_5807?GL.#YL+9I@1T,?]-$[3QK%;T*N&gt;''$]8[TKG[85T+PO\+BN;;ML;%KZ9&lt;\C^#UW^I(&lt;\!YOE.K3%YC^.[''S!&amp;LQU;^!7!009ED(.C]IJK1" W]]UO]+YNH,VR0A!''C,L4AU446\,#T["/5G\_OP*N''?90VDZYZ0&gt;F:X,W\\&amp;1\5&amp;:''[&amp;SD&lt;K,9L6XA+@1OYSNS$+JP+=)O@OB@G_BZFZ :/##=&lt;M+I7&amp;&gt;4!22VK*S%2X-D1_Z.P&amp;&lt;Z]TKCG:)FFL)ONYQ?*A8.*?W/:1]+_SL&gt;5/\^H-_D3"QU%@-&lt;N*N!.(V*&lt;^W:4OY&lt;6)+:''W]MDU&gt;D7"*X9,!Z-O''(JU]''?,6[7W _DH&gt;OL-I[P]F,15*/(5?@G&amp;S#YO5&gt;UA?0QHEB _OFP0S5!IR N^&gt;$NB=T&lt;D:?=&amp;[EHWM9,4FT3.P./S"E-4%P8%0&amp;=IEISM$#:.&amp;U@B3Q\&amp;UZHP?B&gt;B4)A&lt;8#0[Z.I!UIZ 4O9L?3&amp;8Y&amp;+=6!DT/U:\+]L?+417N;9(YU!RLCYB.''U_&lt;&gt;V/)KNS=_MFDG]47&lt;IS.QVEYU9BC-)I@JATCMQHC?K9K.UJ/%/\\(1,M$HU&gt;&amp;;+S%)1R@Z2YM&lt;)J!*-:NG!ZI0IT"%7&lt;8\PVAO7;(!2]NG3FH2@GR(7[&gt;#DMKJ6AMH 9 \!_)\-F0JY$)E#6K9HPEG=:I)3+94DM-#KY-&gt;#.^I\"\[ZQFY6C:-JEC2B&gt;T/P&gt;I7E%UF"=W)ZY@KB545]?6.LES:K^\]&amp;3K&gt;I?;OQXU$.E.(^''SRQ6-X/A_I:?]NT8&lt;4''&gt;VV$GCW%:)/=.H&lt;#.9$Q*K'':RI,1H(?80E\UJN_YX$JVGDQ,#RS&lt;*.L'',7@1W%QH1X&amp;_.)HF/BDD@"@9I&amp;1X8(MR2]LD-4%T?:G!&amp;#RAXWA//-8/U=NOQ%$!XZP%"U#1F&gt;NO''QL84%F+YL I%1[:F9_"%E8&amp;3F7MA#PNNTF/YR+?Z01WVF@_VVD]_O.8AOS2DEOF3-I=]U&amp;.-[E)KKS_=''@7*GDF"!11-,=/M2+[N^=RF''TWJL^03 P5+4#V*WM%N*#"W1J,T+''L5Y+B=IM\=N?Q/G&lt;+&lt;&lt;A"''3XW[;_V-VD_ %^ (&lt;WTN&gt;Z2N&gt;&lt;6C)]\V&gt;\-W8C1A^GY[P"UXJRYV-0Q7HQ#FW-7YH(I:_LU,D&amp;@G4CZ!)N [IJ..-P,;YGBC-@MSROZAAD.JLV&amp;7-9,ZFFK&lt;5'':A 8[K#=T:U?7LC3E1B5EVUW52K*Y]ENS:%2,V:8XR^UWN MQZ&amp;83&amp;8JN.%HWI2D?&lt;YOUTP:4%4]4H%(GZU.,Q9P$NQ4HY#)G V?+C[K-+V#E5?HO&lt;Y*MPVN=X_''N\$N$&gt;,5@B9X)^1S\O?)"Y["C)G!3 BS#XAD-1;WB9@[Y)^8D$\7A4BI0QQQE2&lt;7[.(J;479*=H4:^[D[*B]) =+=;.UXPX''6K-6\IEC0MOI[=EQEK2D7_!A7 2Z S*H6XC#;EXXC7:?Y&amp;H]@)ZW!P0]V[([UI8;F^$+8[NNIP1L?L\8&gt;NVIM''H''5I.5&lt;;IL]U7Z\"01=Q&gt;&lt;&gt;P/50\+=T31*Z6+''0OG_&gt;4&lt;^6WZ1G52+7CQ&amp;-+(;8=4\NWY''G/) 1_@SC7?H 6GFK9D5KKNYTRXC] BOV/F3WVP''+MI/DI- R#3D2LAC]P9:CL*UK3!V[@:&lt;V$[G]/BVC4*^&amp;E&lt;_3#W,9X1)V$ZAYH.,!:OZ?_H;+FCN..],+ E@&gt;,0$AW*CVU(&amp;42UR_SS?&gt;WP95:O%/CUW2C5?=Q@- ?+S:,?6.3M&lt;V0%AA4[Y/@1*&lt;4U,H?BI3U1%X9G&lt;"\ZB"LT"JZIDG.@ _*EA0.&lt;WQFN(K/6@B#9,HAR8=#YWB]]7!_?Q%I,^Q."D8QEJO)4%NP6!B)B3K4I)/&lt;72&gt;;S,G2YI R \@QSPS3I^,P/3XDV''&lt;4XW2\G)M3+N+#2VM0)"R(HJ9_''E!Y"_:F+^!&lt;$*S63#WJ?O2.Z10DXOR%+3B[YT&lt;2\V01R Q$!*63,,X$6G&lt;!(*O751VO$.U6HI&amp;@)GLO@.67''F;E385.RH:L%3Y=$KM.@4;Y[942U!D92($BB=OA[@;0E0@-Q-4Y;ITB:DC%JXY''@#\43=T-V#RZD4]=CU$M4.,I0ZLQ=ZFWJ\BW8A/''EN0XJ+OT0,5?/0E1''9V3HU_]#/;T 8G4&gt;^/&lt;"T)Z,:M%/-.1\$]&amp;Z[#GA"6&gt;Z9LT*C=/IQIE$J0HVJVF(@710B7R2Q&lt;2?@Z+J)&amp;4&gt;._B_O6[F8)7EBZDD)(O8%NZ 0Z 34:/":):+ 16C?M75D#L$=Q1P%T8WKHX,&amp;TW)E3(F3-[&gt;L82+,K&amp;7P.O,4*4:@PJ2*3,!OCGB&lt;P(:''D#! _]%^G7(X3M&lt;JP"=LCG*GJ0N_R!ZE. &gt;M[Q31&amp;-@(Q%(@#:550JN _I@\P[?\)^(D''7K!77]+@KE;B''0;.20B#M;&amp;N42U8Z\J?\=# N\51OMEU&amp;GO&amp;_:A8FF=;VZF5M8W%&amp;5UNMZ96+BH970"M&gt;E''H9BP+*59.K.?H$S\/,U38(!!:NH^4)[QJR,#Z0]9,KA3?$1=8P] ,T7SUP6B5#_^=Y9Z,CF.?HJ\FDU+GWZ/;&lt;^-&amp;8*";?]BB\4.BK%3&gt;M! F4$+GVU8"IY:JA,C^; (F036RCA1&amp;GR$QFFC#NBA"&lt;&amp;ZX:.C&lt;*0,-^#X&gt;VEYL*(CT5ED2=#6A&lt;Y1D&lt;4]+Y&amp;&lt;(09''CC&lt;!ILG?X-KQ()L)@^_HML\DQE^S#4OXD4PUQM)]Q703[Y/$B9?2NE&amp;J92\Y&lt;54X!=6XKKTG-%@]5GOT)/$#;YAP#1J$/6 C;T?2 @B%W5F&lt;0JYP1A\9O?]&amp;?+9FL-9I"^EX@0XS7 ;_J%8Z9Y&gt;G% FQ[PVH[_CIS7M@G%%0#&amp;T4!6]3;A-H?QP3J&lt;SXKF .MRG7V2&lt;F#;X ]E"]8RHXTRB&gt;@8P78@NDP9XSE8+_U+T[1?Z"WW:Z@N&gt;-''['' )8.N&lt;4)OC57"G-&lt;X0&lt;@)NY8-$X; $T4I&lt;&amp;=_-''CU/CY53&lt;&lt;O"U 6FJ.+&gt;$TL@ &gt; K#1ZWX/DVNX6TGK&gt;AF,]?3*M3?Y+SDA==*JV)OVE5T:C5BTZ(,/5_\(KX6;] 0!/"YGSALB#79"R]9[_J"=%4L6%NK72M22LF-(T,S8IX6"7&gt;&lt;&gt;#X )/954*''R"XTP7$]ZO&amp;1L1BE40U3&gt;=CQ-U&gt;2V@5''6J7KY&amp;"*,C9.%0+UPOX?$&lt;H15C*H,%7RMH#(.;\*\C:?7#C&amp;A:.U-0.;X1R-_"*EWM?[Z0-+&gt;DL_&lt;J.P(%,;_&lt;JC8J=5D%8-=U+IGM9E%T4Z#1M2-R]1$WGNP -KQRZ\T*Y;R6NH\.0X;=;"X,KH78/]@1,@;9P.L"8$X &amp;*$H@2\S-K##[=T#:0=]0DNX-)6G(6$N_77T_="7R3&lt;''-% D:A]?2Y_@/P E_C3(I[@4"H:U4#F47/BO&amp;''_=D&gt;I*B$?+-M'']#QJC#=E471\0E:Z[&lt;$/7:QE5*-W_&gt;;EJL7NW1 25SF:XF;F(&gt;*^W, N_.I3D&lt;4Y[@8BP$L&gt;:%C4U+D^2!8:)H5W(P?&lt;:9I]T?+UD_&lt;?H-X,^1SB6RBD''),[M&amp;T8T[BV)*\C&amp;]:SO;BG1/".''&lt;Y#I ;7Z6^XF#:(FWHQR%CO-M064B[YJ%8#MK-J\*(9&amp;PWD_;)R=&amp;5.&amp;4*#''N1CF7''J(:ON?:+ 4S&gt;Y"K:7U4AQW81:O+M]L-T 1_QW//,T&lt;6+\"64CE^?(5_&gtamp;M,YVE2]F=-XWI+B''-2YWM4[7I%_V%&amp; @Lb')</body><body package="Fonts test resources">nimbusSansLReguPfm	"included for completeness - not used by the system"	^(ByteArray fromPackedString: '@@EGD @@P6=0^WI)Y6!4HCD9NS$ UUIWHEM/Y''Q7XWI%K"ASYVT Y&amp;%,YRACS5AYRT9GHFY/\"A,ZVM%[''M%K&amp;=0 P@L@B0AK@GY@ @@@@@@@@BP@PC(@&gt; C@R@B=0L ?7T@@@CG@@@@4 @@@@@@@@@@@@@@G BS@@@@;P@@@@@@@@B-@ @@@@@@@M4@@@@@@@@@@@C0@@@@K@DC@N C:@OY@ 0B6PKZ@@@@8@FV@H(B" I&gt;@CH@_ C"@CH@L @_@SH@9 L@@EA/\7QSX7I)\GP@S&amp;%-X''U3T6E.S@ANZV5"]WMSXV9LKUI%Y7T@E DV@VLAK@H,@''$C&amp;0J?@D4ASPFE@T BE EM@QXAE D,@"0BK@H,@"0BK@H,@"0BK@H,@!XAE EH@$ BR@H,@/\C&amp;0J[@-HB4 J[@&amp;LBB OR@!XA=@F[@"0BPPOR@ (C&amp;0HJ@=HB&amp;0I#@-HB&amp;0J0@9,B&amp;0I#@!XAE DV@]TAK@IM@R0BK@K4@R0BK@HV@R0BK@K^@M8@=@G^@DDCK@H,@"0BK@IM@_PAE D,@/PA4 K4@_PA=@EN@PPAS EH@%8AW E^@]8@K@IM@^ CK@H,@$4A:@N[@$4A:@M^@U8AW E^@]8@7PAM@T4AW D,@. CSPG(@?PASPF0@58AW F[@%8ASPD,@"0BK@H,@ PAK@IM@^DB\ D,@$ BW G!@%8AW IH@%&lt;AW0EM@R0BFPI^@T4AW0E-@R0BYPM%@6TCX0J[@),B&amp;0J[@),B&amp;0K(@=HB&amp;0J[@),B&amp;0HV@QXAE DV@]HB4 HJ@0(CB LJ@0(CR@HJ@=HB4 KR@-HB&amp; JZ@&amp;LBK@H,@"0BK@H,@"0B^PO4@R0BK@H,@"0BE DV@QXAE D,@"0BK@H,@"0BK@H,@$ BX0H,@"0BK@H,@/PAJ0K4@^XCLR26?3\,"_=AK@T@Q"2T?48,&gt;_=PKG''?UB2\?5T,9_=VKJ_?U23H?5$,$_=+K@@@\"2;?7X,.?=7KL;?^R2:?9H,1O?@K@T@0R0E@LH,APCCK@T@1B0E@LT,APCZKNW?7B3%?4D-?_=FK_K?R27Q?40- ?=PK]#?T"7&gt;?5P-,?=VK]+?U273?5 -3_=YKZ3?Z27W?7H-4_=6K_S?]27??7$-&lt;/?AK_7?1B7=?&lt;T-?_&lt;1K+[?M2:I?4D.APAFK)S?S";9?5@.^_=TK)3?UR;''?5X.)?=WK,#?VR:Q?6,.@@A2K+/?]":;?7\.3/=9K++?$";D?&lt;@.APCAK T@0"8E@LL.APCDK T@1R8E@M(.9??\K._?LSCB?201''O&lt;.LY/?LCGR?3D1"/&lt;2L]3?L3GO?3P1+O&lt;5L[S?M#GU?3\12?&lt;8L]C?NSGU?3D2.?&lt;7L.S?LSN=?3\3:_&lt;0MO;?LSR/?3H46?&lt;3MO;?MCPE@CT4@P@6M@D@M3R#?3 4@P@9MO7?LSV=?3\58/&lt;1M,K?M3[X?3@76_&lt;1M:[?L#_''?3L77?&lt;4M&lt;#?MS_&amp;?3X78/&lt;7M?3?NC__?3$76?&lt;1NK??M3#$?3D9/?&lt;7N+O?UC);?5X://=WN,3?VS*)?7H::/=4N.S?]#+)?7\::_=9N.W?UC-??5X;//=WN&lt;/?VS.(?7H;:/=4N&gt;S?]#/)?7\;:_=9N&gt;W?KTG9?4IA:?=CP^C?QDGV?4YA.?=GP_+?R$G ?41ADPANP__?S4G]?5AA,/=SP^+?UDF!?5UA7O=VP[''?U4GN?5%A(O&gt;DPQ8@$TF=?9IA.O&gt;SP\3?%DGK?9-A5O&gt;;P\;?14G!?=MA7_?VP]7?6DG_?=%A7O?ZP]3?64G\?=1A7O=AP=3?R4OM?41C5?=NP?7?T$O0?5QC5O=VP=W?U4O)?5!C4O=YP&lt;[?0DO\?&lt;EC7O?BP=3?04O\?&lt;QC7O?EP=3?PT_]?4-G3_=LQ=[?S$_&gt;?5IG&lt;_=TQ=O?U$_V?5]G:/=YQ&lt;[?0D_]?&lt;EG7_?BQ=7?04_]?&lt;QG7_?EQ=7?P4#4?4QJ&gt;?=FR,7?TD*2?5QJ''O=CR?[?PT?_?4IO&gt;_=CS?#?Q$?*?4-O4O=LS=_?S$&lt;@@EIO&lt;?=TS=[?U$?X?5]O;O=XS=O?VT?H?&lt;AO7??AS=??0$?_?&lt;MO7??DS=??1T?_?4EQ8O=XT]S?0EG ?&lt;EQ8O?BT^C?05G ?&lt;QQ8O?ET^C?R5OZ?41S;_=TT&gt;#?U%O]?5]S:O=YT=_?]EO8?25T,O=AUJO?QESS?4]T5O=KUAP@SERW?4=T5/=RUN''?T5S$?5YTC0AWUAL@VUPW@F%T&gt;_=.UJC?[5R]?8QT-_&gt;QUO/?$5PI@IQTB0B[UH_?.5RB?&lt;AT(??AUJO?0%R#?&lt;MT(??DUJO?1UR#?=IT5/?SUM[?5ESV?=UT5/?VUM[?PUW[?41U7_=RU^??0EW[?&lt;EU6??BU]/?05W[?&lt;QU6??EU]/?KU[R?4EV-_=BU-_?QE[M?4]V3/=LU)_?S5[S?5IV6_=SU-[?UEXL@HQV.?&gt;QU @@$5XO@IQVC0B[U*#?.5Z#?&lt;AV-_?AU+W?0%Z5?&lt;MV-_?DU+W?1UZ5?=IV4??SU-O?5E[S?=UV4??VU-O?KU_-?4EW3_=BU&gt;_?QE_#?4]W9O=LU;3?S5_)?5IW9_=SU&gt;S?UE\P@HQW7/&gt;QU00@$5\[@IQWF B[U&lt;S?.5^&gt;?&lt;AW3_?AU&lt;7?0%_M?&lt;MW3_?DU&lt;7?1U_M?=MW:_?VU&gt;''?QE#K?4=X4/?VVMK?KU&amp;$?4EY''_=BV]S?QE''A?4]Y0/=LVX_?S5''E?5IY5_=SV]C?UE$T@HQY)_&gt;QV__?$5$E@IQYA0B[VXC?.5%;?&lt;AY''_?AVY7?0%&amp;]?&lt;MY''_?DVY7?1U&amp;]?=IY1_?SV\W?5E''E?=UY1_?VV\W?PVG&lt;?4Y!7?=KX_W?S&amp;G;?5A!9O=RX_G?UFF\?5Y!1_=WX]+?VFG1?5%!*O=&amp;X__?Y6G;?6-!?/=2X_/?]FG??7Y!;/=7X_G?^FG/?7%!:/?AX_3?1FG&lt;?&lt;U!?O=AX P@0VHD@LQ"A@CEX P@7FHC@DE#=_=TX:[?\VLH@GI#&gt;/=6X?C?]6O9?7!#:_=9X&gt;7?0VO5?&lt;Q#=_?EX?W?PVS8?7I$??&gt;RYN3?0VS8?&lt;Q$&gt;O?EYO#?PVW0?4Y%:O=KY^C?S&amp;T@@EA%8_=RY_S?UFV!?5Y%1?=WY^C?VFW\?5%%)?=&amp;Y_G?Y6T@@F-%:?=2Y_W?]FW2?7Y%:?=7Y_S?^FW$?7%%:O?AY_C?1VW0?6Y&amp;E A2Y!(@PV_6?5Q'')?=VY&lt;;?U6_''?5%''+_=+Y?C?\&amp;_&lt;?7Y''&lt;/=7Y?+?^V_/?&lt;E''=/?DY?[?1V_6?6M(@PA2Z@@@]F#=?4Y)=/=TZ_7?U&amp;'';?5])??=YZPL@Y&amp;''&gt;?7I)@PAFZ/S?UF+;?6E*?O=&amp;Z/3?ZV+=?7I*@@A#Z0\@\&amp;,F@FY,?_=''[@@@\&amp;0A@GY,@@A7[@@@^V3&lt;?5U-?O=2[P@@6&amp;7&lt;?=1-?O=U[/3?\&amp;8@@M).?O?\[/3?PV?3?4Y/:?=K[&gt;O?S&amp;&lt;B@EA/9_=R[?_?UF&gt;$?5Y/2/=W[&gt;O?VF?_?5%/*/=&amp;[?[?Z6?-?7I/&gt;/=4[?S?]&amp;?/?7]/=?=8[&gt;_?^V?,?9I/9/?A[?O?1F?3?&lt;U/&lt;?=U\@L@VWCJ?650APA.\@T@\''@H@M)0@0C\\@L@PWG8?7I1?_=8\^3?0WG8?&lt;Q1&gt;O?E\_#?Q''K]?5Q2)O=U\/3?U''KV?5]29O=''\ @@\''H@@II2;/?Z\/3?7GK&lt;?5Q3)O=&amp;\0@@Z7O=?7I3A@A6\?_?]7O;?7%3=O&gt;R\&gt;;?PWS0?5M4?_=%]O[?Y''PX@F=4=/=0]O3?\''P\@GM4?_&gt;R]O''?0WS0?&lt;Q4&lt;O?E]OC?=GS6??Y4=/=A]_S?Q''W_?4-5;_=L]_''?S''T@@EI5=?=T]ZW?U''WW?5]59O=X]^#?VWWA?6-5=_=1]PP@\''TB@LE5=O?D]_S?1WW4?4E68_=T]*G?VW[\?5)67?=!]./?X''[5?6U6&lt;_=,] @@[W[3?696&lt;?=/].;?\''X]@II6?/?A].G?1G[!?&lt;U68_? ]./?8W[+?&gt;Q6:??%]./?9''[0?&gt;%6&lt;_?*]/G?&lt;''[.??M6;/?6].;?PW_+?5Q7(?=!]?O?X''_=?6U7=?=-]?''?[''_9?6=7=/=2]1&lt;@$''\B@LE7:??D]&gt;/?1W_+?&gt;A7&lt;??!]?O?9G_3?&gt;U7&lt;??&amp;]?[?:W_7?&gt;)7=??2]?[?&lt;7_6??Y7=/=%^NW?[7#%?7I8E@C6^NW?PW''^?4-90/=L^\#?T''''8?5Q9''O=V^^3?U7'':?5!90?=Z^]+?XW''&amp;?6I9&lt;_=%^^7?ZG''.?619&gt;?=-^^;?[''''.?6=9:/=0^_C?\''$X@II9&gt;/?A^];?1G''^?&lt;U97/? ^^[?8W''&amp;?&gt;Q99/?%^^[?9'''',?&gt;%9;_?*^^7?&lt;''''*??M9:/?6^^+?\''(I@DFK6O=T"8/?U(.0?5^K2/=Y"8''?0X/X?&lt;RK6O?E"=#?P(3;?4.L4?=R#OW?UH3]?22R3/&lt;.$,7?PYJ??42RZ?=!$.''?YYK.?6ZR@@A($/G?[)K2?6&gt;R:?=2$ D@\9K*?7RR??=5$/#?0YJ??&lt;RR/??E$+??KISW?2:T5?=A%L#?SIQ3?&lt;RT2O?E%L#?Q)3)?5B\9O=R''OW?Y)34?7J\&gt;O=A*=S?UJ.G?5Z++_=W*&lt;[?VZ.E?&lt;F+5O?D*=S?1Z/T?4S@5/=F0K/?Q&lt;C:?5S@(_=V0K''?U&lt;CN?5''@(O&lt;-0_''?P,G+?4OA8O=D0][?Q,F;?4_A&gt;/=L0QD@S,G7?4?A7_=P0[K?T&lt;G*?5SA(_=U0]3?U,F9?5_A3/=Y0ZC?$\F=?9KA.O&gt;S0\3?%LGK?9/A5O&gt;;0\;?P,K+?4SB5/=F0+/?Q&lt;K:?5SB(_=U0-3?U,J9?5_B3/=Y0*C?P,O+?4SC5/=F0;/?Q&lt;O:?5SC(_=U0=3?U,N9?5_C3/=Y0:C?K\S9?4KD:?=C1NC?QLSV?4[D.?=G1O+?R,S ?43DDPAN1O_?S&lt;S]?5CD,/=S1N+?ULR!?5WD7O=V1K''?U&lt;SN?5''D(O&gt;Q1K7?$,R8?9OD3O&gt;T1L/?&amp;&lt;ST?;/D3/&lt;-1_''?P,W+?4OE8O=D1][?Q,V;?4_E&gt;/=J1^C?SLTQ@D;E=?=O1]7?TLV2?5OE:/=T1ZG?U\W\?5[E._=W1\;?V\V ?9GE/_&gt;R1[#?$&lt;WL?9SE2?&gt;[1]S?.&lt;WN?27F=_=B1./?P&lt;[_?4_F?_=J1.G?SLXT@D;F&gt;/=O1-''?TLZ*?5OF:/=T1)??U\[Y?5[F,/=W1,#?V\ZY?8SFG BQ1+G?$,Z+?9OF0O&gt;T1+;?&amp;&lt;[P?;/F2/=A1=3?SL_[?4;G?_=R1?C?P-K9?43R5?=T4-[?U-KX?5_R;O=Y4,#?P-O9?4OS&gt;O=K4=C?SMOW?4;S@@AR4?O?UMOV?5[S6O=W4&gt;3?V]OH?4KT&gt;_=L5M_?UMSV?5[T6O=W5N3?V]SH?43U5?=T5][?U-WX?5_U;O=Y5\#?P][_?4KV&gt;_=C5/#?Q-[*?4/V4O=L5-_?S-X@@EKV&lt;?=T5-[?U-[X?5_V;O=X5-O?V][H?4KX??=T6M_?U-#_?5_X&lt;?=Y6L+?P]''[?4GZ6?=A6=/?P]3[?43\7_=R7N??\.C;?7[ ;/=78OG?^^C*?4[!7?=N8_/?TNG$?5K!&lt;_=&amp;8__?Z&gt;G&gt;?7K!&gt;?=48_??].G.?7_!&lt;_=98^+?\.K;?7[";/=78/G?^^K*?7[#;/=78?G?^^O*?4[$7?=K9OW?S.S;?5C$9O=R9OG?Y.S7?6_$&gt;?=+9O;?\.S;?7S$??=69N;?]&gt;S1?7''$:/=F9]??R&gt;W5?4;%&gt;?=P9^S?T.W1?6[%=?=''9_/?Z&gt;W&gt;?7K%&gt;?=49_??].W.?7_%&lt;_=99^+?Q.[#?4/&amp;&gt;_=N9/;?TN[(?5K&amp;=O=T9)??U.[I?5_&amp;7/=Y9*3?Y.[;?6_&amp;??=+9 H@\.[??7S&amp;@ A69/K?]&gt;[5?7''&amp;;/=A9?[?\._7?7K(=_=6:N/?]&gt;#4?7''(:O=F:^#?S.$@@EC)8_=R:_S?Y.''1?6_)@@A+:^/?\.''5?7S)&lt;/=6:^/?]&gt;''4?7#)9O=9:^#?\.+5?7[*:?=7:/S?^^+(?7K2&gt;/=6&lt;.??]?K7?7''2;O=F&lt;&gt;/?R?O#?4;3@ AP&lt;&gt;W?T/O7?6[3=/=''&lt;0L@Z?O-?7K3&gt;/=4&lt;?S?]/O/?7_3=?=9&lt;&gt;3?\/S:?4[6:?=K=.O?S/XB@EC69_=R=/_?Y/[6?6_6@0A+=.7?\/[:?7S6=O=6=.??]?[7?7''6;O=F&gt;N/?S/ D@EC89_=T&gt;J''?U/#N?5_89?=Y&gt;J;?Y/#7?7K8&gt;/=6&gt;N??]?#:?7''8;_=R&gt;/_?R?3-?43&lt;&gt;_=N?@@@T/37?6/&lt;&gt;/&lt;b')</body></methods><methods><class-id>Graphics.Fonts.CustomFont class</class-id> <category>actions</category><body package="Fonts Development">import: filenameTrunk as: selectorSymbol	"generates a class method named selectorSymbol with the filenameTrunk.pfb and filenameTrunk.pfm from the windows fonts directory"	"self import: 'Amplitude-Bold' as: #amplitudeBold"	| fontsDir wst |	fontsDir := (Filename expandEnvironmentIn: '$(windir)\fonts') asFilename.	wst := String new writeStream.	wst		nextPutAll: selectorSymbol asString;		crtab;		nextPutAll: '^self';		crtab;		tab;		nextPutAll: 'file: ';		nextPutAll: filenameTrunk printString;		crtab;		tab;		nextPutAll: 'pfb: ';		nextPutAll: (fontsDir construct: filenameTrunk , '.pfb') contentsOfEntireBinaryFile asSource;		crtab;		tab;		nextPutAll: 'pfm: ';		nextPutAll: (fontsDir construct: filenameTrunk , '.pfm') contentsOfEntireBinaryFile asSource.	Refactory.Browser.RefactoryChangeManager instance performChange: (Refactory.Browser.AddMethodChange		compile: wst contents		in: self class		classified: #fonts)</body></methods><methods><class-id>Graphics.Fonts.CFF.Type1Font</class-id> <category>accessing</category><body package="CompactFontFormat">ascender	^self file ascender</body><body package="CompactFontFormat">capHeight	^self file capHeight</body><body package="CompactFontFormat">descender	^self file descender</body><body package="CompactFontFormat">screenFont	^self file screenFont</body><body package="CompactFontFormat">xHeight	^self file xHeight</body></methods><methods><class-id>Graphics.Fonts.CFF.Type1Font</class-id> <category>testing</category><body package="CompactFontFormat">canDisplayUnencodedGlyphs	^self file canDisplayUnencodedGlyphs</body></methods><methods><class-id>Graphics.Fonts.CFF.Type1Font class</class-id> <category>test instances</category><body package="Fonts test resources">example	^FontSet example fonts first</body></methods><methods><class-id>Graphics.Fonts.OpenType.Eblc class</class-id> <category>accessing</category><body package="Fonts UI Support">documentation	^'Three tables are used to embed bitmaps in OpenType™ fonts. They are the ''EBLC'' table for embedded bitmap locators, the ''EBDT'' table for embedded bitmap data, and the ''EBSC'' table for embedded bitmap scaling information. OpenType embedded bitmaps are called ''sbits'' (for “scaler bitmaps”). A set of bitmaps for a face at a given size is called a strike.The ''EBLC'' table identifies the sizes and glyph ranges of the sbits, and keeps offsets to glyph bitmap data in indexSubTables. The ''EBDT'' table then stores the glyph bitmap data, also in a number of different possible formats. Glyph metrics information may be stored in either the ''EBLC'' or ''EBDT'' table, depending upon the indexSubTable and glyph bitmap formats. The ''EBSC'' table identifies sizes that will be handled by scaling up or scaling down other sbit sizes.The ''EBLC'' table uses the same format as the Apple Apple Advanced Typography (AAT) ''bloc'' table.'</body><body package="OpenType">tag	^'EBLC'</body><body package="Fonts UI Support">title	^'Embedded Bitmap Location Table'</body></methods><methods><class-id>Graphics.Fonts.CFF.PrivateDict</class-id> <category>accessing</category><body package="CompactFontFormat">blueFuzz	"&lt;Number&gt;"	| op |	op := self operations detect: [:operation | operation isExtended: 11] ifNone: [		^1].	^op operands first</body><body package="CompactFontFormat">blueScale	"&lt;Number&gt;"	| op |	op := self operations detect: [:operation | operation isExtended: 9] ifNone: [		^0.039625].	^op operands first</body><body package="CompactFontFormat">blueShift	"&lt;Number&gt;"	| op |	op := self operations detect: [:operation | operation isExtended: 10] ifNone: [		^7].	^op operands first</body><body package="CompactFontFormat">blueValues	"&lt;delta&gt;"	| op |	op := self operations detect: [:operation | operation isSimple: 6] ifNone: [		^#()].	^op operands</body><body package="CompactFontFormat">defaultWidthX	"&lt;Number&gt;The defaultWidthX and nominalWidthX operators supply width values for glyphs.If a glyph width equals the defaultWidthX value it can be omitted from the charstring, otherwise the glyph width is computed by adding the charstring width to nominalWidthX value.If nominalWidthX is carefully chosen the bulk of the widths in the charstrings can be reduced from 2-byte to single-byte numbers thereby saving space."	| op |	op := self operations detect: [:operation | operation isSimple: 20] ifNone: [		^0].	^op operands first</body><body package="CompactFontFormat">expansionFactor	"&lt;Number&gt;"	| op |	op := self operations detect: [:operation | operation isExtended: 18] ifNone: [		^0.06].	^op operands first</body><body package="CompactFontFormat">familyBlues	"&lt;delta&gt;"	| op |	op := self operations detect: [:operation | operation isSimple: 8] ifNone: [		^#()].	^op operands</body><body package="CompactFontFormat">familyOtherBlues	"&lt;delta&gt;"	| op |	op := self operations detect: [:operation | operation isSimple: 9] ifNone: [		^#()].	^op operands</body><body package="CompactFontFormat">forceBold	"&lt;Boolean&gt;"	| op |	op := self operations detect: [:operation | operation isExtended: 14] ifNone: [		^false].	^op operands first = 1</body><body package="CompactFontFormat">initialRandomSeed	"&lt;Number&gt;"	| op |	op := self operations detect: [:operation | operation isExtended: 19] ifNone: [		^0].	^op operands first</body><body package="CompactFontFormat">languageGroup	"&lt;Number&gt;"	| op |	op := self operations detect: [:operation | operation isExtended: 17] ifNone: [		^0].	^op operands first</body><body package="CompactFontFormat">nominalWidthX	"&lt;Number&gt;The defaultWidthX and nominalWidthX operators supply width values for glyphs.If a glyph width equals the defaultWidthX value it can be omitted from the charstring, otherwise the glyph width is computed by adding the charstring width to nominalWidthX value.If nominalWidthX is carefully chosen the bulk of the widths in the charstrings can be reduced from 2-byte to single-byte numbers thereby saving space."	| op |	op := self operations detect: [:operation | operation isSimple: 21] ifNone: [		^0].	^op operands first</body><body package="CompactFontFormat">otherBlues	"&lt;delta&gt;"	| op |	op := self operations detect: [:operation | operation isSimple: 7] ifNone: [		^#()].	^op operands</body><body package="CompactFontFormat">stdHW	"&lt;Number&gt;"	| op |	op := self operations detect: [:operation | operation isSimple: 10] ifNone: [		^0].	^op operands first</body><body package="CompactFontFormat">stdVW	"&lt;Number&gt;"	| op |	op := self operations detect: [:operation | operation isSimple: 11] ifNone: [		^0].	^op operands first</body><body package="CompactFontFormat">stemSnapH	"&lt;delta&gt;"	| op |	op := self operations detect: [:operation | operation isExtended: 12] ifNone: [		^#()].	^op operands</body><body package="CompactFontFormat">stemSnapV	"&lt;delta&gt;"	| op |	op := self operations detect: [:operation | operation isExtended: 13] ifNone: [		^#()].	^op operands</body><body package="CompactFontFormat">subrs	"&lt;Number&gt;	Offset (self) to local subrs"	| op |	op := self operations detect: [:operation | operation isSimple: 19] ifNone: [		^0].	^op operands first</body></methods><methods><class-id>Graphics.Fonts.CFF.PrivateDict class</class-id> <category>test instances</category><body package="Fonts test resources">example	^PrivateDict operations: #(1 #a $x 'name')</body></methods><methods><class-id>Graphics.Fonts.OpenType.Base class</class-id> <category>accessing</category><body package="Fonts UI Support">documentation	^'The Baseline table (BASE) provides information used to align glyphs of different scripts and sizes in a line of text, whether the glyphs are in the same font or in different fonts. To improve text layout, the Baseline table also provides minimum (min) and maximum (max) glyph extent values for each script, language system, or feature in a font.'</body><body package="OpenType">tag	^'BASE'</body><body package="Fonts UI Support">title	^'Baseline Table'</body></methods><methods><class-id>Graphics.Fonts.OpenType.Math class</class-id> <category>accessing</category><body package="Fonts UI Support">documentation	^'Mathematical formulas are complex text objects in which multiple elements with various metric, style or positioning attributes are combined. In order for a math handling engine to support layout of mathematical formulas, several types of font-specific information particular to the layout of formulas are required. The MATH table format defines data structures for font-specific information necessary for math formula layout.General structure of math formulas is hierarchical, with formulas composed of smaller sub-formula components, where each sub-formula may be composed of even simpler sub-formulas, and so on down to individual characters, e.g. letters or numbers.'</body><body package="OpenType">tag	^'MATH'</body><body package="Fonts UI Support">title	^'Math layout data'</body></methods><methods><class-id>Graphics.Fonts.OpenType.Cff</class-id> <category>printing</category><body package="OpenType">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'tag' value: self tag).	args add: (printer optional: 'contents' value: contents).	args add: (printer constant: 'fontSet' value: self fontSet).	^printer printvalue: self arguments: args</body></methods><methods><class-id>Graphics.Fonts.OpenType.Cff</class-id> <category>accessing</category><body package="Fonts UI Support">descriptionText	| wst |	wst := TextStream on: (String new: 200).	wst		nextPutAll: 'version: ';		emphasis: #(#bold);		nextPutAll: self fontSet version printString;		cr;		emphasis: nil;		nextPutAll: 'Fonts:'.	self fontSet fonts do: [:font |		wst			cr;			nextPutAll: font name].	^wst contents</body><body package="OpenType">fontSet	"&lt;FontSet&gt;"	^fontSet ifNil: [		fontSet := Graphics.Fonts.CFF.FontSet for: self file fromBytes: self contents readStream]</body><body package="OpenType">forceBold	"&lt;Boolean&gt;"	^self fontSet forceBold</body><body package="OpenType">nameOfGlyph: aGlyphId	"&lt;String&gt;"	^self fontSet nameOfGlyph: aGlyphId</body><body package="Fonts UI Support">treeChildren	^self fontSet fonts</body></methods><methods><class-id>Graphics.Fonts.OpenType.Cff</class-id> <category>testing</category><body package="Fonts UI Support">hasTreeChildren	^self fontSet notNil</body></methods><methods><class-id>Graphics.Fonts.OpenType.Cff class</class-id> <category>accessing</category><body package="Fonts UI Support">documentation	^'This table contains a compact representation of a PostScript Type 1, or CIDFont and is structured according to Adobe Technical Note #5176: “The Compact Font Format Specification,” and Adobe Technical Note #5177: “Type 2 Charstring Format.”Existing TrueType fonts use a glyph index to specify and access glyphs within a font, e.g. to index the loca table and thereby access glyph data in the glyf table. This concept is retained in OpenType™ PostScript fonts except that glyph data is accessed through the CharStrings INDEX of the CFF table.'</body><body package="OpenType">tag	^'CFF '</body><body package="Fonts UI Support">title	^'PostScript font program (Compact Font Format) table'</body></methods><methods><class-id>Graphics.Fonts.OpenType.Segment</class-id> <category>testing</category><body package="OpenType">isEndsegment	^self endCode = Character illegalCode</body></methods><methods><class-id>Graphics.Fonts.OpenType.Segment</class-id> <category>accessing</category><body package="OpenType">characterCodes	^self startCode to: self endCode</body><body package="OpenType">codes	"&lt;ByteArray&gt;"	^(self startCode to: self endCode) collect: [:code |		self glyphIndexAtCode: code glyphs: #()]</body><body package="OpenType">delta	"&lt;Integer&gt;	Delta for all character codes"	^delta</body><body package="OpenType">endCode	"&lt;Integer&gt;	End characterCode, last=0xFFFF"	^endCode</body><body package="OpenType">glyphIndexAtCode: aCharacterCode glyphs: glyphIdArray	"&lt;Integer | nil&gt;"	(self isEndsegment or: [	self startCode &gt; aCharacterCode]) ifTrue: [			^nil].	^aCharacterCode + self delta bitAnd: 16rFFFF</body><body package="OpenType">numberOfCodes	"&lt;Integer&gt;"	^self endCode - self startCode + 1</body><body package="OpenType">startCode	"&lt;Integer&gt;	Start character code"	^startCode</body></methods><methods><class-id>Graphics.Fonts.OpenType.Segment</class-id> <category>initialize-release</category><body package="OpenType">initializeStartCode: startCodeInteger endCode: endCodeInteger delta: deltaInteger	startCode := startCodeInteger.	endCode := endCodeInteger.	delta := deltaInteger.	self beImmutable</body></methods><methods><class-id>Graphics.Fonts.OpenType.Segment</class-id> <category>printing</category><body package="OpenType">printOn: stream	self isEndsegment ifTrue: [		stream nextPutAll: 'Endsegment'.		^self].	stream		nextPutAll: self class name asString;		nextPutAll: ' start: ';		nextPutAll: self startCode printString;		nextPutAll: ' [';		nextPutAll: self numberOfCodes printString;		nextPutAll: '] ';		nextPutAll: self codes printString</body><body package="OpenType">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'startCode' value: self startCode).	args add: (printer constant: 'endCode' value: self endCode).	args add: (printer constant: 'delta' value: self delta).	^printer printvalue: self arguments: args</body></methods><methods><class-id>Graphics.Fonts.OpenType.Segment class</class-id> <category>instance creation</category><body package="OpenType">startCode: startCodeInteger endCode: endCodeInteger delta: deltaInteger	| inst |	inst := self new.	inst initializeStartCode: startCodeInteger endCode: endCodeInteger delta: deltaInteger.	^inst</body></methods><methods><class-id>Graphics.Fonts.OpenType.Segment class</class-id> <category>test instances</category><body package="Fonts test resources">example	^Segment startCode: 10 endCode: 20 delta: -9</body></methods><methods><class-id>Graphics.Fonts.OpenType.IndexedSegment</class-id> <category>accessing</category><body package="OpenType">codes	^(self startCode to: self endCode) collect: [:code | self glyphArrayIndexOf: code]</body><body package="OpenType">glyphArrayIndexOf: aCharacterCode	^self glyphIdArrayIndex + (aCharacterCode - self startCode)</body><body package="OpenType">glyphIdArrayIndex	"&lt;Integer&gt;	Index in glyphIdArray"	^glyphIdArrayIndex</body><body package="OpenType">glyphIndexAtCode: aCharacterCode glyphs: glyphIdArray	"&lt;Integer | nil&gt;"	| i id |	self startCode &lt;= aCharacterCode ifFalse: [		^nil].	i := self glyphArrayIndexOf: aCharacterCode.	id := glyphIdArray at: i + 1.	id isZero ifTrue: [		^nil].	^id + self delta bitAnd: 16rFFFF</body></methods><methods><class-id>Graphics.Fonts.OpenType.IndexedSegment</class-id> <category>initialize-release</category><body package="OpenType">initializeStartCode: startCodeInteger endCode: endCodeInteger delta: deltaInteger glyphIdArrayIndex: glyphIdArrayIndexInteger	startCode := startCodeInteger.	endCode := endCodeInteger.	delta := deltaInteger.	glyphIdArrayIndex := glyphIdArrayIndexInteger.	self beImmutable</body></methods><methods><class-id>Graphics.Fonts.OpenType.IndexedSegment</class-id> <category>printing</category><body package="OpenType">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'startCode' value: self startCode).	args add: (printer constant: 'endCode' value: self endCode).	args add: (printer constant: 'delta' value: self delta).	args add: (printer constant: 'glyphIdArrayIndex' value: self glyphIdArrayIndex).	^printer printvalue: self arguments: args</body></methods><methods><class-id>Graphics.Fonts.OpenType.IndexedSegment class</class-id> <category>instance creation</category><body package="OpenType">startCode: startCodeInteger endCode: endCodeInteger delta: deltaInteger glyphIdArrayIndex: glyphIdArrayIndexInteger	| inst |	inst := self new.	inst		initializeStartCode: startCodeInteger		endCode: endCodeInteger		delta: deltaInteger		glyphIdArrayIndex: glyphIdArrayIndexInteger.	^inst</body></methods><methods><class-id>Graphics.Fonts.OpenType.IndexedSegment class</class-id> <category>test instances</category><body package="Fonts test resources">example	^IndexedSegment startCode: 1 endCode: 1 delta: 1 glyphIdArrayIndex: 1</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable12</class-id> <category>accessing</category><body package="OpenType">glyphIndexAtUnicode: aUnicodeInteger	^self notYetImplemented</body><body package="OpenType">indexToCode	^self notYetImplemented</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable12 class</class-id> <category>accessing</category><body package="OpenType">formatNumber	^12</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable12 class</class-id> <category>test instances</category><body package="Fonts test resources">example	^CmapSubtable12 platform: 1 encoding: 1 contents: #[42] language: 1</body></methods><methods><class-id>Graphics.Fonts.OpenType.Ebdt class</class-id> <category>accessing</category><body package="Fonts UI Support">documentation	^'Three tables are used to embed bitmaps in OpenType™ fonts. They are the ''EBLC'' table for embedded bitmap locators, the ''EBDT'' table for embedded bitmap data, and the ''EBSC'' table for embedded bitmap scaling information.OpenType embedded bitmaps are also called ''sbits'' (for “scaler bitmaps”). A set of bitmaps for a face at a given size is called a strike.The ''EBLC'' table identifies the sizes and glyph ranges of the sbits, and keeps offsets to glyph bitmap data in indexSubTables. The ''EBDT'' table then stores the glyph bitmap data, in a number of different possible formats. Glyph metrics information may be stored in either the ''EBLC'' or ''EBDT'' table, depending upon the indexSubTable and glyph bitmap data formats. The ''EBSC'' table identifies sizes that will be handled by scaling up or scaling down other sbit sizes.The ''EBDT'' table is a super set of Apple''s Apple Advanced Typography (AAT) ''bdat'' table.'</body><body package="OpenType">tag	^'EBDT'</body><body package="Fonts UI Support">title	^'Embedded Bitmap Data Table'</body></methods><methods><class-id>Graphics.Fonts.OpenType.Fpgm class</class-id> <category>accessing</category><body package="Fonts UI Support">documentation	^'This table is similar to the CVT Program, except that it is only run once, when the font is first used. It is used only for FDEFs and IDEFs. Thus the CVT Program need not contain function definitions. However, the CVT Program may redefine existing FDEFs or IDEFs.This table is optional.'</body><body package="OpenType">tag	^'fpgm'</body><body package="Fonts UI Support">title	^'Font Program'</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable6</class-id> <category>accessing</category><body package="OpenType">glyphIndexAtUnicode: aUnicodeInteger	^self notYetImplemented</body><body package="OpenType">indexToCode	^self notYetImplemented</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable6 class</class-id> <category>accessing</category><body package="OpenType">formatNumber	^6</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable6 class</class-id> <category>test instances</category><body package="Fonts test resources">example	^CmapSubtable6 platform: 1 encoding: 1 contents: #[42] language: 1</body></methods><methods><class-id>Graphics.Fonts.AfmParsingTest</class-id> <category>Testing</category><body package="Fonts tests">testCharMetric	| bookString charMetric |	bookString := 'C 102 ; WX 333 ; N f ; B 20 0 383 682 ; L i fi ; L l fl ;'.	charMetric := AfmParser new charMetricFrom: bookString.	self assert: charMetric class = CharacterMetric.	self assert: charMetric c = 102.	self assert: charMetric w = (333 @ 0).	self assert: charMetric n = #f.	self assert: charMetric b printString = '20 @ 0 corner: 383 @ 682'.	self assert: charMetric l printString = 'Dictionary (#i -&gt; #fi #l -&gt; #fl )'</body><body package="Fonts tests">testEmptyLines	| fontMetric |	fontMetric := AdobeFontMetric fromAfm: 'StartFontMetrics 2.0FontName MinimalTestFontBBox -164 -224 1066 961EndFontMetrics' readStream.	self assert: fontMetric class name = #AdobeFontMetric.	self assert: fontMetric fileFormatVersion = '2.0'.	self assert: fontMetric fontName = 'MinimalTest'.	self assert: fontMetric fontBBox printString = '-164 @ -224 corner: 1066 @ 961'.	self assert: fontMetric familyName = 'MinimalTest'</body><body package="Fonts tests">testFamilyName	| fontMetric |	fontMetric := AdobeFontMetric fromAfm: 'StartFontMetrics 2.0Comment AFM Generated by Ghostscript/pf2afmFontName HelveticaNeue-BoldCondFullName Helvetica 77 Bold CondensedFontBBox -164 -224 1066 961EndFontMetrics' readStream.	self assert: fontMetric class name = #AdobeFontMetric.	self assert: fontMetric comment = 'AFM Generated by Ghostscript/pf2afm'.	self assert: fontMetric fontName = 'HelveticaNeue-BoldCond'.	self assert: fontMetric fullName = 'Helvetica 77 Bold Condensed'.	self assert: fontMetric familyName = 'HelveticaNeue'</body><body package="Fonts tests">testKernPairs	| bookString kernPair |	bookString := 'KPX V A -129'.	kernPair := AfmParser new kernPairFrom: bookString.	self assert: kernPair class name = #KernPair.	self assert: kernPair firstCharacter = #V.	self assert: kernPair secondCharacter = #A.	self assert: kernPair kerning = (-129 @ 0)</body><body package="Fonts tests">testKeyValue	| parser kv |	parser := AfmParser new.	kv := parser keyAndValue: 'StartFontMetrics 2.0'.	self assert: kv key = 'StartFontMetrics'.	self assert: kv value = '2.0'.	kv := parser keyAndValue: 'StartFontMetrics	2.0'.	self assert: kv key = 'StartFontMetrics'.	self assert: kv value = '2.0'.	kv := parser keyAndValue: '	 	 StartFontMetrics	 	 	  	 	2.0 	 	'.	self assert: kv key = 'StartFontMetrics'.	self assert: kv value = '2.0'</body><body package="Fonts tests">testMinimalAFM	| fontMetric |	fontMetric := AdobeFontMetric fromAfm: 'StartFontMetrics 2.0FontName MinimalTestFontBBox -164 -224 1066 961EndFontMetrics' readStream.	self assert: fontMetric class name = #AdobeFontMetric.	self assert: fontMetric fileFormatVersion = '2.0'.	self assert: fontMetric fontName = 'MinimalTest'.	self assert: fontMetric familyName = 'MinimalTest'</body><body package="Fonts tests">testMinimalUnorderedAFM	self		should: [		AdobeFontMetric fromAfm: 'FullName MinimalTestStartFontMetrics 2.0EndFontMetrics' readStream]		raise: Error.	self		should: [		AdobeFontMetric fromAfm: 'StartFontMetrics 2.0EndFontMetricsFullName MinimalTest' readStream]		raise: Error.	self		should: [		AdobeFontMetric fromAfm: 'StartFontMetrics 2.0FullName MinimalTest' readStream]		raise: Error.	self		should: [		AdobeFontMetric fromAfm: 'FullName MinimalTest' readStream]		raise: Error.	self		should: [		AdobeFontMetric fromAfm: 'FullName MinimalTestEndFontMetrics' readStream]		raise: Error</body><body package="Fonts tests">testNames	| fontMetric |	fontMetric := AdobeFontMetric fromAfm: 'StartFontMetrics 2.0Comment AFM Generated by Ghostscript/pf2afmFontName HelveticaNeue-BoldCondFullName Helvetica 77 Bold CondensedFamilyName Helvetica NeueFontBBox -164 -224 1066 961EndFontMetrics' readStream.	self assert: fontMetric class name = #AdobeFontMetric.	self assert: fontMetric comment = 'AFM Generated by Ghostscript/pf2afm'.	self assert: fontMetric fontName = 'HelveticaNeue-BoldCond'.	self assert: fontMetric fullName = 'Helvetica 77 Bold Condensed'.	self assert: fontMetric familyName = 'Helvetica Neue'</body><body package="Fonts tests">testNoNameAFM	| fontMetric |	fontMetric := AdobeFontMetric fromAfm: 'StartFontMetrics 2.0EndFontMetrics' readStream.	self assert: fontMetric isNil</body><body package="Fonts tests">testTimesRoman	| afm |	afm := AdobeFontMetric fromAfm: AdobeFontMetric abrevitatedTimesRomanString readStream.	self assert: (afm isKindOf: AdobeFontMetric)</body><body package="Fonts tests">testTwoComments	| fontMetric |	fontMetric := AdobeFontMetric fromAfm: 'StartFontMetrics 2.0Comment AFM Generated by Ghostscript/pf2afmFontName MinimalTestComment and now some extra commentFontBBox -164 -224 1066 961EndFontMetrics' readStream.	self assert: fontMetric class name = #AdobeFontMetric.	self assert: fontMetric comment = 'AFM Generated by Ghostscript/pf2afmand now some extra comment'</body></methods><methods><class-id>WindowsFonts.BitCodepage</class-id> <category>testing</category><body package="Fonts for Windows">hasCodepage	^self codepage notNil</body></methods><methods><class-id>WindowsFonts.BitCodepage</class-id> <category>printing</category><body package="Fonts for Windows">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'bit' value: self bit).	args add: (printer constant: 'codepage' value: self codepage).	args add: (printer constant: 'description' value: self description).	^printer printvalue: self arguments: args</body></methods><methods><class-id>WindowsFonts.BitCodepage</class-id> <category>accessing</category><body package="Fonts for Windows">bit	"&lt;Integer&gt;"	^bit</body><body package="Fonts for Windows">codepage	"&lt;Integer&gt;"	^codepage</body><body package="Fonts for Windows">description	"&lt;String&gt;"	^description</body><body package="Fonts for Windows">mask	"&lt;Integer&gt;"	^2 ** (63 - self bit)</body></methods><methods><class-id>WindowsFonts.BitCodepage</class-id> <category>initialize-release</category><body package="Fonts for Windows">initializeBit: bitInteger codepage: codepageInteger description: descriptionString	bit := bitInteger.	codepage := codepageInteger.	description := descriptionString.	self beImmutable</body></methods><methods><class-id>WindowsFonts.BitCodepage class</class-id> <category>accessing</category><body package="Fonts for Windows">bitfields	"&lt;SequenceableCollection of: BitCodepage&gt;"	"self bitfields"	| bits |	bits := OrderedCollection new.	bits add: (BitCodepage bit: 0 codepage: 1252 description: 'Latin 1').	bits add: (BitCodepage bit: 1 codepage: 1250 description: 'Latin 2: Central Europe').	bits add: (BitCodepage bit: 2 codepage: 1251 description: 'Cyrillic').	bits add: (BitCodepage bit: 3 codepage: 1253 description: 'Greek').	bits add: (BitCodepage bit: 4 codepage: 1254 description: 'Turkish').	bits add: (BitCodepage bit: 5 codepage: 1255 description: 'Hebrew').	bits add: (BitCodepage bit: 6 codepage: 1256 description: 'Arabic').	bits add: (BitCodepage bit: 7 codepage: 1257 description: 'Baltic').	bits add: (BitCodepage bit: 8 codepage: 1258 description: 'Vietnamese').	bits add: (BitCodepage bit: 9 description: 'Reserved for ANSI').	bits add: (BitCodepage bit: 10 description: 'Reserved for ANSI').	bits add: (BitCodepage bit: 11 description: 'Reserved for ANSI').	bits add: (BitCodepage bit: 12 description: 'Reserved for ANSI').	bits add: (BitCodepage bit: 13 description: 'Reserved for ANSI').	bits add: (BitCodepage bit: 14 description: 'Reserved for ANSI').	bits add: (BitCodepage bit: 15 description: 'Reserved for ANSI').	bits add: (BitCodepage bit: 16 codepage: 874 description: 'Thai').	bits add: (BitCodepage bit: 17 codepage: 932 description: 'Japanese, Shift-JIS').	bits add: (BitCodepage bit: 18 codepage: 936 description: 'Simplified Chinese (PRC, Singapore)').	bits add: (BitCodepage		bit: 19		codepage: 949		description: 'Korean Unified Hangul Code (Hangul TongHabHyung Code)').	bits add: (BitCodepage		bit: 20		codepage: 950		description: 'Traditional Chinese (Taiwan; Hong Kong SAR, PRC)').	bits add: (BitCodepage bit: 21 codepage: 1361 description: 'Korean (Johab)').	bits add: (BitCodepage bit: 22 description: 'Reserved for alternate ANSI and OEM').	bits add: (BitCodepage bit: 23 description: 'Reserved for alternate ANSI and OEM').	bits add: (BitCodepage bit: 24 description: 'Reserved for alternate ANSI and OEM').	bits add: (BitCodepage bit: 25 description: 'Reserved for alternate ANSI and OEM').	bits add: (BitCodepage bit: 26 description: 'Reserved for alternate ANSI and OEM').	bits add: (BitCodepage bit: 27 description: 'Reserved for alternate ANSI and OEM').	bits add: (BitCodepage bit: 28 description: 'Reserved for alternate ANSI and OEM').	bits add: (BitCodepage bit: 29 description: 'Reserved for alternate ANSI and OEM').	bits add: (BitCodepage bit: 30 description: 'Reserved by system.').	bits add: (BitCodepage bit: 31 description: 'Reserved by system.').	bits add: (BitCodepage bit: 32 description: 'Reserved for OEM').	bits add: (BitCodepage bit: 33 description: 'Reserved for OEM').	bits add: (BitCodepage bit: 34 description: 'Reserved for OEM').	bits add: (BitCodepage bit: 35 description: 'Reserved for OEM').	bits add: (BitCodepage bit: 36 description: 'Reserved for OEM').	bits add: (BitCodepage bit: 37 description: 'Reserved for OEM').	bits add: (BitCodepage bit: 38 description: 'Reserved for OEM').	bits add: (BitCodepage bit: 39 description: 'Reserved for OEM').	bits add: (BitCodepage bit: 40 description: 'Reserved for OEM').	bits add: (BitCodepage bit: 41 description: 'Reserved for OEM').	bits add: (BitCodepage bit: 42 description: 'Reserved for OEM').	bits add: (BitCodepage bit: 43 description: 'Reserved for OEM').	bits add: (BitCodepage bit: 44 description: 'Reserved for OEM').	bits add: (BitCodepage bit: 45 description: 'Reserved for OEM').	bits add: (BitCodepage bit: 46 description: 'Reserved for OEM').	bits add: (BitCodepage bit: 47 codepage: 1258 description: 'Vietnamese').	bits add: (BitCodepage bit: 48 codepage: 869 description: 'Modern Greek').	bits add: (BitCodepage bit: 49 codepage: 866 description: 'Russian').	bits add: (BitCodepage bit: 50 codepage: 865 description: 'Nordic').	bits add: (BitCodepage bit: 51 codepage: 864 description: 'Arabic').	bits add: (BitCodepage bit: 52 codepage: 863 description: 'Canadian French').	bits add: (BitCodepage bit: 53 codepage: 862 description: ' ').	bits add: (BitCodepage bit: 54 codepage: 861 description: 'Icelandic').	bits add: (BitCodepage bit: 55 codepage: 860 description: 'Portuguese').	bits add: (BitCodepage bit: 56 codepage: 857 description: 'Turkish').	bits add: (BitCodepage bit: 57 codepage: 855 description: 'Cyrillic; primarily Russian').	bits add: (BitCodepage bit: 58 codepage: 852 description: 'Latin 2').	bits add: (BitCodepage bit: 59 codepage: 775 description: 'Baltic').	bits add: (BitCodepage bit: 60 codepage: 737 description: 'Greek; formerly 437G').	bits add: (BitCodepage bit: 61 codepage: 708 description: 'Arabic; ASMO 708').	bits add: (BitCodepage bit: 62 codepage: 850 description: 'Multilingual Latin 1').	bits add: (BitCodepage bit: 63 codepage: 437 description: 'US').	^bits</body></methods><methods><class-id>WindowsFonts.BitCodepage class</class-id> <category>instance creation</category><body package="Fonts for Windows">bit: bitInteger codepage: codepageInteger description: descriptionString	| inst |	inst := self new.	inst initializeBit: bitInteger codepage: codepageInteger description: descriptionString.	^inst</body><body package="Fonts for Windows">bit: bitInteger description: descriptionString	| inst |	inst := self new.	inst initializeBit: bitInteger codepage: nil description: descriptionString.	^inst</body></methods><methods><class-id>WindowsFonts.BitCodepage class</class-id> <category>test instances</category><body package="Fonts for Windows">example	^BitCodepage bit: 1 codepage: 1 description: 'a string'</body></methods><methods><class-id>WindowsFonts.CharSet class</class-id> <category>instances</category><body package="Fonts for Windows">ansi	^CharSet name: 'ANSI' value: 0</body><body package="Fonts for Windows">arabic	^CharSet name: 'Arabic' value: 178</body><body package="Fonts for Windows">baltic	^CharSet name: 'Baltic' value: 186</body><body package="Fonts for Windows">chineseBig5	^CharSet name: 'ChineseBig5' value: 136</body><body package="Fonts for Windows">default	^CharSet name: 'default' value: 1</body><body package="Fonts for Windows">eastEurope	^CharSet name: 'EastEurope' value: 238</body><body package="Fonts for Windows">gb2312	^CharSet name: 'GB2312' value: 134</body><body package="Fonts for Windows">greek	^CharSet name: 'Greek' value: 161</body><body package="Fonts for Windows">hangul	^CharSet name: 'Hangul' value: 129</body><body package="Fonts for Windows">hebrew	^CharSet name: 'Hebrew' value: 177</body><body package="Fonts for Windows">johab	^CharSet name: 'Johab' value: 130</body><body package="Fonts for Windows">mac	^CharSet name: 'Mac' value: 77</body><body package="Fonts for Windows">oem	^CharSet name: 'OEM' value: 255</body><body package="Fonts for Windows">russian	^CharSet name: 'Russian' value: 204</body><body package="Fonts for Windows">shiftJIS	^CharSet name: 'ShiftJIS' value: 128</body><body package="Fonts for Windows">symbol	^CharSet name: 'Symbol' value: 2</body><body package="Fonts for Windows">thai	^CharSet name: 'Thai' value: 222</body><body package="Fonts for Windows">turkish	^CharSet name: 'Turkish' value: 162</body><body package="Fonts for Windows">vietnamese	^CharSet name: 'Vietnamese' value: 163</body></methods><methods><class-id>WindowsFonts.CharSet class</class-id> <category>accessing</category><body package="Fonts for Windows">all	"&lt;SequenceableCollection of: CharSet&gt;"	| instances |	instances := OrderedCollection new.	instances add: self default.	instances add: self ansi.	instances add: self oem.	instances add: self symbol.	instances add: self mac.	instances add: self shiftJIS.	instances add: self hangul.	instances add: self johab.	instances add: self gb2312.	instances add: self chineseBig5.	instances add: self greek.	instances add: self turkish.	instances add: self vietnamese.	instances add: self hebrew.	instances add: self arabic.	instances add: self baltic.	instances add: self russian.	instances add: self thai.	instances add: self eastEurope.	^instances</body></methods><methods><class-id>WindowsFonts.CharSet class</class-id> <category>test instances</category><body package="Fonts for Windows">example	^CharSet name: 'DEFAULT' value: 1</body></methods><methods><class-id>Graphics.CharacterNamingTests</class-id> <category>test VW fonts</category><body package="Fonts tests">testVWCourier	| used notInOld notInNew |	used := #(#a #A #aacute #Aacute #acircumflex #Acircumflex #acute #adieresis #Adieresis #ae #AE #agrave #Agrave #ampersand #aring #Aring #arrowboth #arrowdown #arrowleft #arrowright #arrowup #asciicircum #asciitilde #asterisk #at #atilde #Atilde #b #B #backslash #bar #braceleft #braceright #bracketleft #bracketright #breve #brokenbar #bullet #c #C #caron #ccedilla #Ccedilla #cedilla #cent #center #circumflex #colon #comma #copyright #currency #d #D #dagger #daggerdbl #dectab #degree #dieresis #divide #dollar #dotaccent #dotlessi #down #e #E #eacute #Eacute #ecircumflex #Ecircumflex #edieresis #Edieresis #egrave #Egrave #eight #ellipsis #emdash #endash #equal #eth #Eth #Euro #exclam #exclamdown #f #F #fi #five #fl #florin #format #four #fraction #g #G #gcaron #Gcaron #germandbls #grave #graybox #greater #guillemotleft #guillemotright #guilsinglleft #guilsinglright #h #H #hungarumlaut #hyphen #i #I #iacute #Iacute #icircumflex #Icircumflex #idieresis #Idieresis #Idot #igrave #Igrave #ij #IJ #indent #j #J #k #K #l #L #largebullet #left #less #lira #ll #LL #logicalnot #lslash #Lslash #m #M #macron #merge #minus #mu #multiply #n #N #nine #notegraphic #ntilde #Ntilde #numbersign #o #O #oacute #Oacute #ocircumflex #Ocircumflex #odieresis #Odieresis #oe #OE #ogonek #ograve #Ograve #one #onehalf #onequarter #onesuperior #ordfeminine #ordmasculine #oslash #Oslash #otilde #Otilde #overscore #p #P #paragraph #parenleft #parenright #percent #period #periodcentered #perthousand #plus #plusminus #prescription #q #Q #question #questiondown #quotedbl #quotedblbase #quotedblleft #quotedblright #quoteleft #quoteright #quotesinglbase #quotesingle #r #R #registered #return #ring #s #S #scaron #Scaron #scedilla #Scedilla #section #semicolon #seven #six #slash #space #square #sterling #stop #t #T #tab #thorn #Thorn #three #threequarters #threesuperior #tilde #trademark #two #twosuperior #u #U #uacute #Uacute #ucircumflex #Ucircumflex #udieresis #Udieresis #ugrave #Ugrave #underscore #up #v #V #w #W #x #X #y #Y #yacute #Yacute #ydieresis #Ydieresis #yen #z #Z #zcaron #Zcaron #zero) asSet.	self assert: used size = 261.	notInOld := used - oldDecodings keys.	notInNew := used - newDecodings keys.	self assert: notInOld size = 40.	self assert: notInNew size = 15.	self assert: notInNew asArray sorted = #(#center #dectab #down #format #graybox #indent #largebullet #left #merge #notegraphic #return #square #stop #tab #up).</body><body package="Fonts tests">testVWCourierBold	| used notInOld notInNew |	used := #(#a #A #aacute #Aacute #acircumflex #Acircumflex #acute #adieresis #Adieresis #ae #AE #agrave #Agrave #ampersand #aring #Aring #arrowboth #arrowdown #arrowleft #arrowright #arrowup #asciicircum #asciitilde #asterisk #at #atilde #Atilde #b #B #backslash #bar #braceleft #braceright #bracketleft #bracketright #breve #brokenbar #bullet #c #C #caron #ccedilla #Ccedilla #cedilla #cent #center #circumflex #colon #comma #copyright #currency #d #D #dagger #daggerdbl #dectab #degree #dieresis #divide #dollar #dotaccent #dotlessi #down #e #E #eacute #Eacute #ecircumflex #Ecircumflex #edieresis #Edieresis #egrave #Egrave #eight #ellipsis #emdash #endash #equal #eth #Eth #Euro #exclam #exclamdown #f #F #fi #five #fl #florin #format #four #fraction #g #G #gcaron #Gcaron #germandbls #grave #graybox #greater #guillemotleft #guillemotright #guilsinglleft #guilsinglright #h #H #hungarumlaut #hyphen #i #I #iacute #Iacute #icircumflex #Icircumflex #idieresis #Idieresis #Idot #igrave #Igrave #ij #IJ #indent #j #J #k #K #l #L #largebullet #left #less #lira #ll #LL #logicalnot #lslash #Lslash #m #M #macron #merge #minus #mu #multiply #n #N #nine #notegraphic #ntilde #Ntilde #numbersign #o #O #oacute #Oacute #ocircumflex #Ocircumflex #odieresis #Odieresis #oe #OE #ogonek #ograve #Ograve #one #onehalf #onequarter #onesuperior #ordfeminine #ordmasculine #oslash #Oslash #otilde #Otilde #overscore #p #P #paragraph #parenleft #parenright #percent #period #periodcentered #perthousand #plus #plusminus #prescription #q #Q #question #questiondown #quotedbl #quotedblbase #quotedblleft #quotedblright #quoteleft #quoteright #quotesinglbase #quotesingle #r #R #registered #return #ring #s #S #scaron #Scaron #scedilla #Scedilla #section #semicolon #seven #six #slash #space #square #sterling #stop #t #T #tab #thorn #Thorn #three #threequarters #threesuperior #tilde #trademark #two #twosuperior #u #U #uacute #Uacute #ucircumflex #Ucircumflex #udieresis #Udieresis #ugrave #Ugrave #underscore #up #v #V #w #W #x #X #y #Y #yacute #Yacute #ydieresis #Ydieresis #yen #z #Z #zcaron #Zcaron #zero) asSet.	self assert: used size = 261.	notInOld := used - oldDecodings keys.	notInNew := used - newDecodings keys.	self assert: notInOld size = 40.	self assert: notInNew size = 15.	self assert: notInNew asArray sorted = #(#center #dectab #down #format #graybox #indent #largebullet #left #merge #notegraphic #return #square #stop #tab #up).</body><body package="Fonts tests">testVWCourierBoldOblique	| used notInOld notInNew |	used := #(#a #A #aacute #Aacute #acircumflex #Acircumflex #acute #adieresis #Adieresis #ae #AE #agrave #Agrave #ampersand #aring #Aring #arrowboth #arrowdown #arrowleft #arrowright #arrowup #asciicircum #asciitilde #asterisk #at #atilde #Atilde #b #B #backslash #bar #braceleft #braceright #bracketleft #bracketright #breve #brokenbar #bullet #c #C #caron #ccedilla #Ccedilla #cedilla #cent #center #circumflex #colon #comma #copyright #currency #d #D #dagger #daggerdbl #dectab #degree #dieresis #divide #dollar #dotaccent #dotlessi #down #e #E #eacute #Eacute #ecircumflex #Ecircumflex #edieresis #Edieresis #egrave #Egrave #eight #ellipsis #emdash #endash #equal #eth #Eth #Euro #exclam #exclamdown #f #F #fi #five #fl #florin #format #four #fraction #g #G #gcaron #Gcaron #germandbls #grave #graybox #greater #guillemotleft #guillemotright #guilsinglleft #guilsinglright #h #H #hungarumlaut #hyphen #i #I #iacute #Iacute #icircumflex #Icircumflex #idieresis #Idieresis #Idot #igrave #Igrave #ij #IJ #indent #j #J #k #K #l #L #largebullet #left #less #lira #ll #LL #logicalnot #lslash #Lslash #m #M #macron #merge #minus #mu #multiply #n #N #nine #notegraphic #ntilde #Ntilde #numbersign #o #O #oacute #Oacute #ocircumflex #Ocircumflex #odieresis #Odieresis #oe #OE #ogonek #ograve #Ograve #one #onehalf #onequarter #onesuperior #ordfeminine #ordmasculine #oslash #Oslash #otilde #Otilde #overscore #p #P #paragraph #parenleft #parenright #percent #period #periodcentered #perthousand #plus #plusminus #prescription #q #Q #question #questiondown #quotedbl #quotedblbase #quotedblleft #quotedblright #quoteleft #quoteright #quotesinglbase #quotesingle #r #R #registered #return #ring #s #S #scaron #Scaron #scedilla #Scedilla #section #semicolon #seven #six #slash #space #square #sterling #stop #t #T #tab #thorn #Thorn #three #threequarters #threesuperior #tilde #trademark #two #twosuperior #u #U #uacute #Uacute #ucircumflex #Ucircumflex #udieresis #Udieresis #ugrave #Ugrave #underscore #up #v #V #w #W #x #X #y #Y #yacute #Yacute #ydieresis #Ydieresis #yen #z #Z #zcaron #Zcaron #zero) asSet.	self assert: used size = 261.	notInOld := used - oldDecodings keys.	notInNew := used - newDecodings keys.	self assert: notInOld size = 40.	self assert: notInNew size = 15.	self assert: notInNew asArray sorted = #(#center #dectab #down #format #graybox #indent #largebullet #left #merge #notegraphic #return #square #stop #tab #up).</body><body package="Fonts tests">testVWCourierOblique	| used notInOld notInNew |	used := #(#a #A #aacute #Aacute #acircumflex #Acircumflex #acute #adieresis #Adieresis #ae #AE #agrave #Agrave #ampersand #aring #Aring #arrowboth #arrowdown #arrowleft #arrowright #arrowup #asciicircum #asciitilde #asterisk #at #atilde #Atilde #b #B #backslash #bar #braceleft #braceright #bracketleft #bracketright #breve #brokenbar #bullet #c #C #caron #ccedilla #Ccedilla #cedilla #cent #center #circumflex #colon #comma #copyright #currency #d #D #dagger #daggerdbl #dectab #degree #dieresis #divide #dollar #dotaccent #dotlessi #down #e #E #eacute #Eacute #ecircumflex #Ecircumflex #edieresis #Edieresis #egrave #Egrave #eight #ellipsis #emdash #endash #equal #eth #Eth #Euro #exclam #exclamdown #f #F #fi #five #fl #florin #format #four #fraction #g #G #gcaron #Gcaron #germandbls #grave #graybox #greater #guillemotleft #guillemotright #guilsinglleft #guilsinglright #h #H #hungarumlaut #hyphen #i #I #iacute #Iacute #icircumflex #Icircumflex #idieresis #Idieresis #Idot #igrave #Igrave #ij #IJ #indent #j #J #k #K #l #L #largebullet #left #less #lira #ll #LL #logicalnot #lslash #Lslash #m #M #macron #merge #minus #mu #multiply #n #N #nine #notegraphic #ntilde #Ntilde #numbersign #o #O #oacute #Oacute #ocircumflex #Ocircumflex #odieresis #Odieresis #oe #OE #ogonek #ograve #Ograve #one #onehalf #onequarter #onesuperior #ordfeminine #ordmasculine #oslash #Oslash #otilde #Otilde #overscore #p #P #paragraph #parenleft #parenright #percent #period #periodcentered #perthousand #plus #plusminus #prescription #q #Q #question #questiondown #quotedbl #quotedblbase #quotedblleft #quotedblright #quoteleft #quoteright #quotesinglbase #quotesingle #r #R #registered #return #ring #s #S #scaron #Scaron #scedilla #Scedilla #section #semicolon #seven #six #slash #space #square #sterling #stop #t #T #tab #thorn #Thorn #three #threequarters #threesuperior #tilde #trademark #two #twosuperior #u #U #uacute #Uacute #ucircumflex #Ucircumflex #udieresis #Udieresis #ugrave #Ugrave #underscore #up #v #V #w #W #x #X #y #Y #yacute #Yacute #ydieresis #Ydieresis #yen #z #Z #zcaron #Zcaron #zero) asSet.	self assert: used size = 261.	notInOld := used - oldDecodings keys.	notInNew := used - newDecodings keys.	self assert: notInOld size = 40.	self assert: notInNew size = 15.	self assert: notInNew asArray sorted = #(#center #dectab #down #format #graybox #indent #largebullet #left #merge #notegraphic #return #square #stop #tab #up).</body><body package="Fonts tests">testVWHelvetica	| used notInOld notInNew |	used := #(#a #A #aacute #Aacute #acircumflex #Acircumflex #acute #adieresis #Adieresis #ae #AE #agrave #Agrave #ampersand #aring #Aring #asciicircum #asciitilde #asterisk #at #atilde #Atilde #b #B #backslash #bar #braceleft #braceright #bracketleft #bracketright #breve #brokenbar #bullet #c #C #caron #ccedilla #Ccedilla #cedilla #cent #circumflex #colon #comma #copyright #currency #d #D #dagger #daggerdbl #degree #dieresis #divide #dollar #dotaccent #dotlessi #e #E #eacute #Eacute #ecircumflex #Ecircumflex #edieresis #Edieresis #egrave #Egrave #eight #ellipsis #emdash #endash #equal #eth #Eth #Euro #exclam #exclamdown #f #F #fi #five #fl #florin #four #fraction #g #G #germandbls #grave #greater #guillemotleft #guillemotright #guilsinglleft #guilsinglright #h #H #hungarumlaut #hyphen #i #I #iacute #Iacute #icircumflex #Icircumflex #idieresis #Idieresis #igrave #Igrave #j #J #k #K #l #L #less #logicalnot #lslash #Lslash #m #M #macron #minus #mu #multiply #n #N #nine #ntilde #Ntilde #numbersign #o #O #oacute #Oacute #ocircumflex #Ocircumflex #odieresis #Odieresis #oe #OE #ogonek #ograve #Ograve #one #onehalf #onequarter #onesuperior #ordfeminine #ordmasculine #oslash #Oslash #otilde #Otilde #p #P #paragraph #parenleft #parenright #percent #period #periodcentered #perthousand #plus #plusminus #q #Q #question #questiondown #quotedbl #quotedblbase #quotedblleft #quotedblright #quoteleft #quoteright #quotesinglbase #quotesingle #r #R #registered #ring #s #S #scaron #Scaron #section #semicolon #seven #six #slash #space #sterling #t #T #thorn #Thorn #three #threequarters #threesuperior #tilde #trademark #two #twosuperior #u #U #uacute #Uacute #ucircumflex #Ucircumflex #udieresis #Udieresis #ugrave #Ugrave #underscore #v #V #w #W #x #X #y #Y #yacute #Yacute #ydieresis #Ydieresis #yen #z #Z #zcaron #Zcaron #zero) asSet.	self assert: used size = 229.	notInOld := used - oldDecodings keys.	notInNew := used - newDecodings keys.	self assert: notInOld size = 13.	self assert: notInNew isEmpty.	self assert: notInOld asArray sorted = #(#brokenbar #eth #Eth #onehalf #onequarter #onesuperior #thorn #Thorn #threequarters #threesuperior #twosuperior #yacute #Yacute).</body><body package="Fonts tests">testVWHelveticaBold	| used notInOld notInNew |	used := #(#a #A #aacute #Aacute #acircumflex #Acircumflex #acute #adieresis #Adieresis #ae #AE #agrave #Agrave #ampersand #aring #Aring #asciicircum #asciitilde #asterisk #at #atilde #Atilde #b #B #backslash #bar #braceleft #braceright #bracketleft #bracketright #breve #brokenbar #bullet #c #C #caron #ccedilla #Ccedilla #cedilla #cent #circumflex #colon #comma #copyright #currency #d #D #dagger #daggerdbl #degree #dieresis #divide #dollar #dotaccent #dotlessi #e #E #eacute #Eacute #ecircumflex #Ecircumflex #edieresis #Edieresis #egrave #Egrave #eight #ellipsis #emdash #endash #equal #eth #Eth #Euro #exclam #exclamdown #f #F #fi #five #fl #florin #four #fraction #g #G #germandbls #grave #greater #guillemotleft #guillemotright #guilsinglleft #guilsinglright #h #H #hungarumlaut #hyphen #i #I #iacute #Iacute #icircumflex #Icircumflex #idieresis #Idieresis #igrave #Igrave #j #J #k #K #l #L #less #logicalnot #lslash #Lslash #m #M #macron #minus #mu #multiply #n #N #nine #ntilde #Ntilde #numbersign #o #O #oacute #Oacute #ocircumflex #Ocircumflex #odieresis #Odieresis #oe #OE #ogonek #ograve #Ograve #one #onehalf #onequarter #onesuperior #ordfeminine #ordmasculine #oslash #Oslash #otilde #Otilde #p #P #paragraph #parenleft #parenright #percent #period #periodcentered #perthousand #plus #plusminus #q #Q #question #questiondown #quotedbl #quotedblbase #quotedblleft #quotedblright #quoteleft #quoteright #quotesinglbase #quotesingle #r #R #registered #ring #s #S #scaron #Scaron #section #semicolon #seven #six #slash #space #sterling #t #T #thorn #Thorn #three #threequarters #threesuperior #tilde #trademark #two #twosuperior #u #U #uacute #Uacute #ucircumflex #Ucircumflex #udieresis #Udieresis #ugrave #Ugrave #underscore #v #V #w #W #x #X #y #Y #yacute #Yacute #ydieresis #Ydieresis #yen #z #Z #zcaron #Zcaron #zero) asSet.	self assert: used size = 229.	notInOld := used - oldDecodings keys.	notInNew := used - newDecodings keys.	self assert: notInOld size = 13.	self assert: notInNew isEmpty.	self assert: notInOld asArray sorted = #(#brokenbar #eth #Eth #onehalf #onequarter #onesuperior #thorn #Thorn #threequarters #threesuperior #twosuperior #yacute #Yacute).</body><body package="Fonts tests">testVWHelveticaBoldOblique	| used notInOld notInNew |	used := #(#a #A #aacute #Aacute #acircumflex #Acircumflex #acute #adieresis #Adieresis #ae #AE #agrave #Agrave #ampersand #aring #Aring #asciicircum #asciitilde #asterisk #at #atilde #Atilde #b #B #backslash #bar #braceleft #braceright #bracketleft #bracketright #breve #brokenbar #bullet #c #C #caron #ccedilla #Ccedilla #cedilla #cent #circumflex #colon #comma #copyright #currency #d #D #dagger #daggerdbl #degree #dieresis #divide #dollar #dotaccent #dotlessi #e #E #eacute #Eacute #ecircumflex #Ecircumflex #edieresis #Edieresis #egrave #Egrave #eight #ellipsis #emdash #endash #equal #eth #Eth #Euro #exclam #exclamdown #f #F #fi #five #fl #florin #four #fraction #g #G #germandbls #grave #greater #guillemotleft #guillemotright #guilsinglleft #guilsinglright #h #H #hungarumlaut #hyphen #i #I #iacute #Iacute #icircumflex #Icircumflex #idieresis #Idieresis #igrave #Igrave #j #J #k #K #l #L #less #logicalnot #lslash #Lslash #m #M #macron #minus #mu #multiply #n #N #nine #ntilde #Ntilde #numbersign #o #O #oacute #Oacute #ocircumflex #Ocircumflex #odieresis #Odieresis #oe #OE #ogonek #ograve #Ograve #one #onehalf #onequarter #onesuperior #ordfeminine #ordmasculine #oslash #Oslash #otilde #Otilde #p #P #paragraph #parenleft #parenright #percent #period #periodcentered #perthousand #plus #plusminus #q #Q #question #questiondown #quotedbl #quotedblbase #quotedblleft #quotedblright #quoteleft #quoteright #quotesinglbase #quotesingle #r #R #registered #ring #s #S #scaron #Scaron #section #semicolon #seven #six #slash #space #sterling #t #T #thorn #Thorn #three #threequarters #threesuperior #tilde #trademark #two #twosuperior #u #U #uacute #Uacute #ucircumflex #Ucircumflex #udieresis #Udieresis #ugrave #Ugrave #underscore #v #V #w #W #x #X #y #Y #yacute #Yacute #ydieresis #Ydieresis #yen #z #Z #zcaron #Zcaron #zero) asSet.	self assert: used size = 229.	notInOld := used - oldDecodings keys.	notInNew := used - newDecodings keys.	self assert: notInOld size = 13.	self assert: notInNew isEmpty.	self assert: notInOld asArray sorted = #(#brokenbar #eth #Eth #onehalf #onequarter #onesuperior #thorn #Thorn #threequarters #threesuperior #twosuperior #yacute #Yacute).</body><body package="Fonts tests">testVWHelveticaOblique	| used notInOld notInNew |	used := #(#a #A #aacute #Aacute #acircumflex #Acircumflex #acute #adieresis #Adieresis #ae #AE #agrave #Agrave #ampersand #aring #Aring #asciicircum #asciitilde #asterisk #at #atilde #Atilde #b #B #backslash #bar #braceleft #braceright #bracketleft #bracketright #breve #brokenbar #bullet #c #C #caron #ccedilla #Ccedilla #cedilla #cent #circumflex #colon #comma #copyright #currency #d #D #dagger #daggerdbl #degree #dieresis #divide #dollar #dotaccent #dotlessi #e #E #eacute #Eacute #ecircumflex #Ecircumflex #edieresis #Edieresis #egrave #Egrave #eight #ellipsis #emdash #endash #equal #eth #Eth #Euro #exclam #exclamdown #f #F #fi #five #fl #florin #four #fraction #g #G #germandbls #grave #greater #guillemotleft #guillemotright #guilsinglleft #guilsinglright #h #H #hungarumlaut #hyphen #i #I #iacute #Iacute #icircumflex #Icircumflex #idieresis #Idieresis #igrave #Igrave #j #J #k #K #l #L #less #logicalnot #lslash #Lslash #m #M #macron #minus #mu #multiply #n #N #nine #ntilde #Ntilde #numbersign #o #O #oacute #Oacute #ocircumflex #Ocircumflex #odieresis #Odieresis #oe #OE #ogonek #ograve #Ograve #one #onehalf #onequarter #onesuperior #ordfeminine #ordmasculine #oslash #Oslash #otilde #Otilde #p #P #paragraph #parenleft #parenright #percent #period #periodcentered #perthousand #plus #plusminus #q #Q #question #questiondown #quotedbl #quotedblbase #quotedblleft #quotedblright #quoteleft #quoteright #quotesinglbase #quotesingle #r #R #registered #ring #s #S #scaron #Scaron #section #semicolon #seven #six #slash #space #sterling #t #T #thorn #Thorn #three #threequarters #threesuperior #tilde #trademark #two #twosuperior #u #U #uacute #Uacute #ucircumflex #Ucircumflex #udieresis #Udieresis #ugrave #Ugrave #underscore #v #V #w #W #x #X #y #Y #yacute #Yacute #ydieresis #Ydieresis #yen #z #Z #zcaron #Zcaron #zero) asSet.	self assert: used size = 229.	notInOld := used - oldDecodings keys.	notInNew := used - newDecodings keys.	self assert: notInOld size = 13.	self assert: notInNew isEmpty.	self assert: notInOld asArray sorted = #(#brokenbar #eth #Eth #onehalf #onequarter #onesuperior #thorn #Thorn #threequarters #threesuperior #twosuperior #yacute #Yacute).</body><body package="Fonts tests">testVWSymbol	| used notInOld notInNew |	used := #(#aleph #alpha #Alpha #ampersand #angle #angleleft #angleright #apple #approxequal #arrowboth #arrowdblboth #arrowdbldown #arrowdblleft #arrowdblright #arrowdblup #arrowdown #arrowhorizex #arrowleft #arrowright #arrowup #arrowvertex #asteriskmath #bar #beta #Beta #braceex #braceleft #braceleftbt #braceleftmid #bracelefttp #braceright #bracerightbt #bracerightmid #bracerighttp #bracketleft #bracketleftbt #bracketleftex #bracketlefttp #bracketright #bracketrightbt #bracketrightex #bracketrighttp #bullet #carriagereturn #chi #Chi #circlemultiply #circleplus #club #colon #comma #congruent #copyrightsans #copyrightserif #degree #delta #Delta #diamond #divide #dotmath #eight #element #ellipsis #emptyset #epsilon #Epsilon #equal #equivalence #eta #Eta #Euro #exclam #existential #five #florin #four #fraction #gamma #Gamma #gradient #greater #greaterequal #heart #Ifraktur #infinity #integral #integralbt #integralex #integraltp #intersection #iota #Iota #kappa #Kappa #lambda #Lambda #less #lessequal #logicaland #logicalnot #logicalor #lozenge #minus #minute #mu #Mu #multiply #nine #notelement #notequal #notsubset #nu #Nu #numbersign #omega #Omega #omega1 #omicron #Omicron #one #parenleft #parenleftbt #parenleftex #parenlefttp #parenright #parenrightbt #parenrightex #parenrighttp #partialdiff #percent #period #perpendicular #phi #Phi #phi1 #pi #Pi #plus #plusminus #product #propersubset #propersuperset #proportional #psi #Psi #question #radical #radicalex #reflexsubset #reflexsuperset #registersans #registerserif #Rfraktur #rho #Rho #second #semicolon #seven #sigma #Sigma #sigma1 #similar #six #slash #space #spade #suchthat #summation #tau #Tau #therefore #theta #Theta #theta1 #three #trademarksans #trademarkserif #two #underscore #union #universal #upsilon #Upsilon #Upsilon1 #weierstrass #xi #Xi #zero #zeta #Zeta) asSet.	self assert: used size = 190.	notInOld := used - oldDecodings keys.	notInNew := used - newDecodings keys.	self assert: notInOld isEmpty.	self assert: notInNew isEmpty</body><body package="Fonts tests">testVWTimesBold	| used notInOld notInNew |	used := #(#a #A #aacute #Aacute #acircumflex #Acircumflex #acute #adieresis #Adieresis #ae #AE #agrave #Agrave #ampersand #aring #Aring #asciicircum #asciitilde #asterisk #at #atilde #Atilde #b #B #backslash #bar #braceleft #braceright #bracketleft #bracketright #breve #brokenbar #bullet #c #C #caron #ccedilla #Ccedilla #cedilla #cent #circumflex #colon #comma #copyright #currency #d #D #dagger #daggerdbl #degree #dieresis #divide #dollar #dotaccent #dotlessi #e #E #eacute #Eacute #ecircumflex #Ecircumflex #edieresis #Edieresis #egrave #Egrave #eight #ellipsis #emdash #endash #equal #eth #Eth #Euro #exclam #exclamdown #f #F #fi #five #fl #florin #four #fraction #g #G #germandbls #grave #greater #guillemotleft #guillemotright #guilsinglleft #guilsinglright #h #H #hungarumlaut #hyphen #i #I #iacute #Iacute #icircumflex #Icircumflex #idieresis #Idieresis #igrave #Igrave #j #J #k #K #l #L #less #logicalnot #lslash #Lslash #m #M #macron #minus #mu #multiply #n #N #nine #ntilde #Ntilde #numbersign #o #O #oacute #Oacute #ocircumflex #Ocircumflex #odieresis #Odieresis #oe #OE #ogonek #ograve #Ograve #one #onehalf #onequarter #onesuperior #ordfeminine #ordmasculine #oslash #Oslash #otilde #Otilde #p #P #paragraph #parenleft #parenright #percent #period #periodcentered #perthousand #plus #plusminus #q #Q #question #questiondown #quotedbl #quotedblbase #quotedblleft #quotedblright #quoteleft #quoteright #quotesinglbase #quotesingle #r #R #registered #ring #s #S #scaron #Scaron #section #semicolon #seven #six #slash #space #sterling #t #T #thorn #Thorn #three #threequarters #threesuperior #tilde #trademark #two #twosuperior #u #U #uacute #Uacute #ucircumflex #Ucircumflex #udieresis #Udieresis #ugrave #Ugrave #underscore #v #V #w #W #x #X #y #Y #yacute #Yacute #ydieresis #Ydieresis #yen #z #Z #zcaron #Zcaron #zero) asSet.	self assert: used size = 229.	notInOld := used - oldDecodings keys.	notInNew := used - newDecodings keys.	self assert: notInOld size = 13.	self assert: notInNew isEmpty.	self assert: notInOld asArray sorted = #(#brokenbar #eth #Eth #onehalf #onequarter #onesuperior #thorn #Thorn #threequarters #threesuperior #twosuperior #yacute #Yacute).</body><body package="Fonts tests">testVWTimesBoldItalic	| used notInOld notInNew |	used := #(#a #A #aacute #Aacute #acircumflex #Acircumflex #acute #adieresis #Adieresis #ae #AE #agrave #Agrave #ampersand #aring #Aring #asciicircum #asciitilde #asterisk #at #atilde #Atilde #b #B #backslash #bar #braceleft #braceright #bracketleft #bracketright #breve #brokenbar #bullet #c #C #caron #ccedilla #Ccedilla #cedilla #cent #circumflex #colon #comma #copyright #currency #d #D #dagger #daggerdbl #degree #dieresis #divide #dollar #dotaccent #dotlessi #e #E #eacute #Eacute #ecircumflex #Ecircumflex #edieresis #Edieresis #egrave #Egrave #eight #ellipsis #emdash #endash #equal #eth #Eth #Euro #exclam #exclamdown #f #F #fi #five #fl #florin #four #fraction #g #G #germandbls #grave #greater #guillemotleft #guillemotright #guilsinglleft #guilsinglright #h #H #hungarumlaut #hyphen #i #I #iacute #Iacute #icircumflex #Icircumflex #idieresis #Idieresis #igrave #Igrave #j #J #k #K #l #L #less #logicalnot #lslash #Lslash #m #M #macron #minus #mu #multiply #n #N #nine #ntilde #Ntilde #numbersign #o #O #oacute #Oacute #ocircumflex #Ocircumflex #odieresis #Odieresis #oe #OE #ogonek #ograve #Ograve #one #onehalf #onequarter #onesuperior #ordfeminine #ordmasculine #oslash #Oslash #otilde #Otilde #p #P #paragraph #parenleft #parenright #percent #period #periodcentered #perthousand #plus #plusminus #q #Q #question #questiondown #quotedbl #quotedblbase #quotedblleft #quotedblright #quoteleft #quoteright #quotesinglbase #quotesingle #r #R #registered #ring #s #S #scaron #Scaron #section #semicolon #seven #six #slash #space #sterling #t #T #thorn #Thorn #three #threequarters #threesuperior #tilde #trademark #two #twosuperior #u #U #uacute #Uacute #ucircumflex #Ucircumflex #udieresis #Udieresis #ugrave #Ugrave #underscore #v #V #w #W #x #X #y #Y #yacute #Yacute #ydieresis #Ydieresis #yen #z #Z #zcaron #Zcaron #zero) asSet.	self assert: used size = 229.	notInOld := used - oldDecodings keys.	notInNew := used - newDecodings keys.	self assert: notInOld size = 13.	self assert: notInNew isEmpty.	self assert: notInOld asArray sorted = #(#brokenbar #eth #Eth #onehalf #onequarter #onesuperior #thorn #Thorn #threequarters #threesuperior #twosuperior #yacute #Yacute).</body><body package="Fonts tests">testVWTimesItalic	| used notInOld notInNew |	used := #(#a #A #aacute #Aacute #acircumflex #Acircumflex #acute #adieresis #Adieresis #ae #AE #agrave #Agrave #ampersand #aring #Aring #asciicircum #asciitilde #asterisk #at #atilde #Atilde #b #B #backslash #bar #braceleft #braceright #bracketleft #bracketright #breve #brokenbar #bullet #c #C #caron #ccedilla #Ccedilla #cedilla #cent #circumflex #colon #comma #copyright #currency #d #D #dagger #daggerdbl #degree #dieresis #divide #dollar #dotaccent #dotlessi #e #E #eacute #Eacute #ecircumflex #Ecircumflex #edieresis #Edieresis #egrave #Egrave #eight #ellipsis #emdash #endash #equal #eth #Eth #Euro #exclam #exclamdown #f #F #fi #five #fl #florin #four #fraction #g #G #germandbls #grave #greater #guillemotleft #guillemotright #guilsinglleft #guilsinglright #h #H #hungarumlaut #hyphen #i #I #iacute #Iacute #icircumflex #Icircumflex #idieresis #Idieresis #igrave #Igrave #j #J #k #K #l #L #less #logicalnot #lslash #Lslash #m #M #macron #minus #mu #multiply #n #N #nine #ntilde #Ntilde #numbersign #o #O #oacute #Oacute #ocircumflex #Ocircumflex #odieresis #Odieresis #oe #OE #ogonek #ograve #Ograve #one #onehalf #onequarter #onesuperior #ordfeminine #ordmasculine #oslash #Oslash #otilde #Otilde #p #P #paragraph #parenleft #parenright #percent #period #periodcentered #perthousand #plus #plusminus #q #Q #question #questiondown #quotedbl #quotedblbase #quotedblleft #quotedblright #quoteleft #quoteright #quotesinglbase #quotesingle #r #R #registered #ring #s #S #scaron #Scaron #section #semicolon #seven #six #slash #space #sterling #t #T #thorn #Thorn #three #threequarters #threesuperior #tilde #trademark #two #twosuperior #u #U #uacute #Uacute #ucircumflex #Ucircumflex #udieresis #Udieresis #ugrave #Ugrave #underscore #v #V #w #W #x #X #y #Y #yacute #Yacute #ydieresis #Ydieresis #yen #z #Z #zcaron #Zcaron #zero) asSet.	self assert: used size = 229.	notInOld := used - oldDecodings keys.	notInNew := used - newDecodings keys.	self assert: notInOld size = 13.	self assert: notInNew isEmpty.	self assert: notInOld asArray sorted = #(#brokenbar #eth #Eth #onehalf #onequarter #onesuperior #thorn #Thorn #threequarters #threesuperior #twosuperior #yacute #Yacute).</body><body package="Fonts tests">testVWTimesRoman	| used notInOld notInNew |	used := #(#a #A #aacute #Aacute #acircumflex #Acircumflex #acute #adieresis #Adieresis #ae #AE #agrave #Agrave #ampersand #aring #Aring #asciicircum #asciitilde #asterisk #at #atilde #Atilde #b #B #backslash #bar #braceleft #braceright #bracketleft #bracketright #breve #brokenbar #bullet #c #C #caron #ccedilla #Ccedilla #cedilla #cent #circumflex #colon #comma #copyright #currency #d #D #dagger #daggerdbl #degree #dieresis #divide #dollar #dotaccent #dotlessi #e #E #eacute #Eacute #ecircumflex #Ecircumflex #edieresis #Edieresis #egrave #Egrave #eight #ellipsis #emdash #endash #equal #eth #Eth #Euro #exclam #exclamdown #f #F #fi #five #fl #florin #four #fraction #g #G #germandbls #grave #greater #guillemotleft #guillemotright #guilsinglleft #guilsinglright #h #H #hungarumlaut #hyphen #i #I #iacute #Iacute #icircumflex #Icircumflex #idieresis #Idieresis #igrave #Igrave #j #J #k #K #l #L #less #logicalnot #lslash #Lslash #m #M #macron #minus #mu #multiply #n #N #nine #ntilde #Ntilde #numbersign #o #O #oacute #Oacute #ocircumflex #Ocircumflex #odieresis #Odieresis #oe #OE #ogonek #ograve #Ograve #one #onehalf #onequarter #onesuperior #ordfeminine #ordmasculine #oslash #Oslash #otilde #Otilde #p #P #paragraph #parenleft #parenright #percent #period #periodcentered #perthousand #plus #plusminus #q #Q #question #questiondown #quotedbl #quotedblbase #quotedblleft #quotedblright #quoteleft #quoteright #quotesinglbase #quotesingle #r #R #registered #ring #s #S #scaron #Scaron #section #semicolon #seven #six #slash #space #sterling #t #T #thorn #Thorn #three #threequarters #threesuperior #tilde #trademark #two #twosuperior #u #U #uacute #Uacute #ucircumflex #Ucircumflex #udieresis #Udieresis #ugrave #Ugrave #underscore #v #V #w #W #x #X #y #Y #yacute #Yacute #ydieresis #Ydieresis #yen #z #Z #zcaron #Zcaron #zero) asSet.	self assert: used size = 229.	notInOld := used - oldDecodings keys.	notInNew := used - newDecodings keys.	self assert: notInOld size = 13.	self assert: notInNew isEmpty.	self assert: notInOld asArray sorted = #(#brokenbar #eth #Eth #onehalf #onequarter #onesuperior #thorn #Thorn #threequarters #threesuperior #twosuperior #yacute #Yacute).</body><body package="Fonts tests">testVWZapfDingbats	| used notInOld notInNew |	used := #(#a1 #a10 #a100 #a101 #a102 #a103 #a104 #a105 #a106 #a107 #a108 #a109 #a11 #a110 #a111 #a112 #a117 #a118 #a119 #a12 #a120 #a121 #a122 #a123 #a124 #a125 #a126 #a127 #a128 #a129 #a13 #a130 #a131 #a132 #a133 #a134 #a135 #a136 #a137 #a138 #a139 #a14 #a140 #a141 #a142 #a143 #a144 #a145 #a146 #a147 #a148 #a149 #a15 #a150 #a151 #a152 #a153 #a154 #a155 #a156 #a157 #a158 #a159 #a16 #a160 #a161 #a162 #a163 #a164 #a165 #a166 #a167 #a168 #a169 #a17 #a170 #a171 #a172 #a173 #a174 #a175 #a176 #a177 #a178 #a179 #a18 #a180 #a181 #a182 #a183 #a184 #a185 #a186 #a187 #a188 #a189 #a19 #a190 #a191 #a192 #a193 #a194 #a195 #a196 #a197 #a198 #a199 #a2 #a20 #a200 #a201 #a202 #a203 #a204 #a205 #a206 #a21 #a22 #a23 #a24 #a25 #a26 #a27 #a28 #a29 #a3 #a30 #a31 #a32 #a33 #a34 #a35 #a36 #a37 #a38 #a39 #a4 #a40 #a41 #a42 #a43 #a44 #a45 #a46 #a47 #a48 #a49 #a5 #a50 #a51 #a52 #a53 #a54 #a55 #a56 #a57 #a58 #a59 #a6 #a60 #a61 #a62 #a63 #a64 #a65 #a66 #a67 #a68 #a69 #a7 #a70 #a71 #a72 #a73 #a74 #a75 #a76 #a77 #a78 #a79 #a8 #a81 #a82 #a83 #a84 #a85 #a86 #a87 #a88 #a89 #a9 #a90 #a91 #a92 #a93 #a94 #a95 #a96 #a97 #a98 #a99 #space) asSet.	self assert: used size = 202.	notInOld := used - oldDecodings keys.	notInNew := used - newDecodings keys.	self assert: notInOld isEmpty.	self assert: notInNew isEmpty</body></methods><methods><class-id>Graphics.CharacterNamingTests</class-id> <category>tests</category><body package="Fonts tests">testDifferenceToEncodingForNewFonts	"The encoding for new fonts is not that useful. Anyhow, here are the differences to the old encoding.	It does show the buggy old encoding of #fraction and #mu"	| notTheSame issues unicodeLink oldAndNewNames namesNotInNew |	namesNotInNew := oldDecodings keys - decodingForNewFonts keys.	"1. the old decoding has many character names which are not in the encoding for new fonts"	self assert: namesNotInNew size = 235.	"2. there are different codes for 2 names"	notTheSame := (oldDecodings keys - namesNotInNew reject: [:symbol |		(oldDecodings at: symbol) = (decodingForNewFonts at: symbol)]) asSortedCollection.	self assert: notTheSame asArray = #(#fraction #mu).	"the new mapping of the old codes"	oldAndNewNames := notTheSame collect: [:symbol |		symbol -&gt; (newEncodings at: (oldDecodings at: symbol))].	self assert: (oldAndNewNames collect: [:assoc |		Array			with: assoc key			with: assoc value first]) asArray = #(#(#fraction #divisionslash) #(#mu #mugreek)).	"for looking up the details of the characters"	unicodeLink := ' http://www.fileformat.info/info/unicode/char/'.	issues := notTheSame collect: [:symbol |		symbol printString , unicodeLink , ((oldDecodings at: symbol) printStringRadix: 16) , unicodeLink , ((decodingForNewFonts at: symbol) printStringRadix: 16) , ' '].	self assert: issues first = '#fraction http://www.fileformat.info/info/unicode/char/2215 http://www.fileformat.info/info/unicode/char/2044 '.	self assert: issues last = '#mu http://www.fileformat.info/info/unicode/char/3BC http://www.fileformat.info/info/unicode/char/B5 '.	"3. there are a more useful characters in the encoding for new fonts"	self assert: oldDecodings size - namesNotInNew size = 329.	self assert: decodingForNewFonts size = 586</body><body package="Fonts tests">testDifferenceToNewEncoding	"The old encoding has several problems as can be seen below"	| namesNotInNew notTheSame issues unicodeLink oldAndNewNames |	"1. the old decoding has one illegal character name: #quotdbl (there is also the correct entry #quotedbl with the same code)"	namesNotInNew := oldDecodings keys - newDecodings keys.	self assert: namesNotInNew asArray = #(#quotdbl).	"2. there are different codes for 45 names"	notTheSame := (oldDecodings keys - namesNotInNew reject: [:symbol |		(oldDecodings at: symbol) = (newDecodings at: symbol)]) asSortedCollection.	self assert: notTheSame size = 45.	"the new mapping of the old codes"	oldAndNewNames := notTheSame collect: [:symbol |		symbol -&gt; (newEncodings at: (oldDecodings at: symbol) ifAbsent: [#()])].	"16 names map to codes which are not in the new encoding"	self assert: ((oldAndNewNames select: [:assoc | assoc value isEmpty]) collect: [:assoc | assoc key]) asArray = #(#a205 #a206 #a85 #a86 #a89 #a90 #a91 #a92 #a93 #a94 #a95 #a96 #copyrightsans #parenrightbt #registersans #trademarksans).	"29 names map to codes which are mapped to other names in the new encoding"	self assert: ((oldAndNewNames reject: [:assoc | assoc value isEmpty]) collect: [:assoc |		Array with: assoc key with: assoc value first]) asArray = #(#(#a87 #tortoiseshellbracketleft) #(#a88 #tortoiseshellbracketright) #(#arrowhorizex #Aacutesmall) #(#arrowvertex #Agravesmall) #(#braceex #Ntildesmall) #(#braceleftbt #Ethsmall) #(#braceleftmid #Idieresissmall) #(#bracelefttp #Icircumflexsmall) #(#bracerightbt #Yacutesmall) #(#bracerightmid #Udieresissmall) #(#bracerighttp #Ucircumflexsmall) #(#bracketleftbt #Iacutesmall) #(#bracketleftex #Igravesmall) #(#bracketlefttp #Edieresissmall) #(#bracketrightbt #Uacutesmall) #(#bracketrightex #Ugravesmall) #(#bracketrighttp #Oslashsmall) #(#copyrightserif #copyright) #(#fraction #divisionslash) #(#integralex #Oacutesmall) #(#mu #mugreek) #(#parenleftbt #Ecircumflexsmall) #(#parenleftex #Eacutesmall) #(#parenlefttp #Egravesmall) #(#parenrightex #Odieresissmall) #(#parenrighttp #Otildesmall) #(#radicalex #overline) #(#registerserif #registered) #(#trademarkserif #trademark)).	"for looking up the details of the characters"	unicodeLink := ' http://unicode.org/cldr/utility/character.jsp?a='.	unicodeLink := ' http://www.fileformat.info/info/unicode/char/'.	issues := notTheSame collect: [:symbol |		symbol printString , unicodeLink , ((oldDecodings at: symbol) printStringRadix: 16) , unicodeLink , ((newDecodings at: symbol) printStringRadix: 16) , ' '].	self assert: (issues at: 1) = '#a205 http://www.fileformat.info/info/unicode/char/27C0 http://www.fileformat.info/info/unicode/char/276E '.	self assert: (issues at: 2) = '#a206 http://www.fileformat.info/info/unicode/char/27C2 http://www.fileformat.info/info/unicode/char/2770 '.	self assert: (issues at: 3) = '#a85 http://www.fileformat.info/info/unicode/char/27C1 http://www.fileformat.info/info/unicode/char/276F '.	self assert: (issues at: 4) = '#a86 http://www.fileformat.info/info/unicode/char/27C3 http://www.fileformat.info/info/unicode/char/2771 '.	self assert: (issues at: 5) = '#a87 http://www.fileformat.info/info/unicode/char/3014 http://www.fileformat.info/info/unicode/char/2772 '.	self assert: (issues at: 6) = '#a88 http://www.fileformat.info/info/unicode/char/3015 http://www.fileformat.info/info/unicode/char/2773 '.	self assert: (issues at: 7) = '#a89 http://www.fileformat.info/info/unicode/char/27C4 http://www.fileformat.info/info/unicode/char/2768 '.	self assert: (issues at: 8) = '#a90 http://www.fileformat.info/info/unicode/char/27C5 http://www.fileformat.info/info/unicode/char/2769 '.	self assert: (issues at: 9) = '#a91 http://www.fileformat.info/info/unicode/char/27C6 http://www.fileformat.info/info/unicode/char/276C '.	self assert: (issues at: 10) = '#a92 http://www.fileformat.info/info/unicode/char/27C7 http://www.fileformat.info/info/unicode/char/276D '.	self assert: (issues at: 11) = '#a93 http://www.fileformat.info/info/unicode/char/27C8 http://www.fileformat.info/info/unicode/char/276A '.	self assert: (issues at: 12) = '#a94 http://www.fileformat.info/info/unicode/char/27C9 http://www.fileformat.info/info/unicode/char/276B '.	self assert: (issues at: 13) = '#a95 http://www.fileformat.info/info/unicode/char/27CA http://www.fileformat.info/info/unicode/char/2774 '.	self assert: (issues at: 14) = '#a96 http://www.fileformat.info/info/unicode/char/27CB http://www.fileformat.info/info/unicode/char/2775 '.	self assert: (issues at: 15) = '#arrowhorizex http://www.fileformat.info/info/unicode/char/F7E1 http://www.fileformat.info/info/unicode/char/F8E7 '.	self assert: (issues at: 16) = '#arrowvertex http://www.fileformat.info/info/unicode/char/F7E0 http://www.fileformat.info/info/unicode/char/F8E6 '.	self assert: (issues at: 17) = '#braceex http://www.fileformat.info/info/unicode/char/F7F1 http://www.fileformat.info/info/unicode/char/F8F4 '.	self assert: (issues at: 18) = '#braceleftbt http://www.fileformat.info/info/unicode/char/F7F0 http://www.fileformat.info/info/unicode/char/F8F3 '.	self assert: (issues at: 19) = '#braceleftmid http://www.fileformat.info/info/unicode/char/F7EF http://www.fileformat.info/info/unicode/char/F8F2 '.	self assert: (issues at: 20) = '#bracelefttp http://www.fileformat.info/info/unicode/char/F7EE http://www.fileformat.info/info/unicode/char/F8F1 '.	self assert: (issues at: 21) = '#bracerightbt http://www.fileformat.info/info/unicode/char/F7FD http://www.fileformat.info/info/unicode/char/F8FE '.	self assert: (issues at: 22) = '#bracerightmid http://www.fileformat.info/info/unicode/char/F7FC http://www.fileformat.info/info/unicode/char/F8FD '.	self assert: (issues at: 23) = '#bracerighttp http://www.fileformat.info/info/unicode/char/F7FB http://www.fileformat.info/info/unicode/char/F8FC '.	self assert: (issues at: 24) = '#bracketleftbt http://www.fileformat.info/info/unicode/char/F7ED http://www.fileformat.info/info/unicode/char/F8F0 '.	self assert: (issues at: 25) = '#bracketleftex http://www.fileformat.info/info/unicode/char/F7EC http://www.fileformat.info/info/unicode/char/F8EF '.	self assert: (issues at: 26) = '#bracketlefttp http://www.fileformat.info/info/unicode/char/F7EB http://www.fileformat.info/info/unicode/char/F8EE '.	self assert: (issues at: 27) = '#bracketrightbt http://www.fileformat.info/info/unicode/char/F7FA http://www.fileformat.info/info/unicode/char/F8FB '.	self assert: (issues at: 28) = '#bracketrightex http://www.fileformat.info/info/unicode/char/F7F9 http://www.fileformat.info/info/unicode/char/F8FA '.	self assert: (issues at: 29) = '#bracketrighttp http://www.fileformat.info/info/unicode/char/F7F8 http://www.fileformat.info/info/unicode/char/F8F9 '.	self assert: (issues at: 30) = '#copyrightsans http://www.fileformat.info/info/unicode/char/F701 http://www.fileformat.info/info/unicode/char/F8E9 '.	self assert: (issues at: 31) = '#copyrightserif http://www.fileformat.info/info/unicode/char/A9 http://www.fileformat.info/info/unicode/char/F6D9 '.	self assert: (issues at: 32) = '#fraction http://www.fileformat.info/info/unicode/char/2215 http://www.fileformat.info/info/unicode/char/2044 '.	self assert: (issues at: 33) = '#integralex http://www.fileformat.info/info/unicode/char/F7F3 http://www.fileformat.info/info/unicode/char/F8F5 '.	self assert: (issues at: 34) = '#mu http://www.fileformat.info/info/unicode/char/3BC http://www.fileformat.info/info/unicode/char/B5 '.	self assert: (issues at: 35) = '#parenleftbt http://www.fileformat.info/info/unicode/char/F7EA http://www.fileformat.info/info/unicode/char/F8ED '.	self assert: (issues at: 36) = '#parenleftex http://www.fileformat.info/info/unicode/char/F7E9 http://www.fileformat.info/info/unicode/char/F8EC '.	self assert: (issues at: 37) = '#parenlefttp http://www.fileformat.info/info/unicode/char/F7E8 http://www.fileformat.info/info/unicode/char/F8EB '.	self assert: (issues at: 38) = '#parenrightbt http://www.fileformat.info/info/unicode/char/F7F7 http://www.fileformat.info/info/unicode/char/F8F8 '.	self assert: (issues at: 39) = '#parenrightex http://www.fileformat.info/info/unicode/char/F7F6 http://www.fileformat.info/info/unicode/char/F8F7 '.	self assert: (issues at: 40) = '#parenrighttp http://www.fileformat.info/info/unicode/char/F7F5 http://www.fileformat.info/info/unicode/char/F8F6 '.	self assert: (issues at: 41) = '#radicalex http://www.fileformat.info/info/unicode/char/203E http://www.fileformat.info/info/unicode/char/F8E5 '.	self assert: (issues at: 42) = '#registersans http://www.fileformat.info/info/unicode/char/F700 http://www.fileformat.info/info/unicode/char/F8E8 '.	self assert: (issues at: 43) = '#registerserif http://www.fileformat.info/info/unicode/char/AE http://www.fileformat.info/info/unicode/char/F6DA '.	self assert: (issues at: 44) = '#trademarksans http://www.fileformat.info/info/unicode/char/F702 http://www.fileformat.info/info/unicode/char/F8EA '.	self assert: (issues at: 45) = '#trademarkserif http://www.fileformat.info/info/unicode/char/2122 http://www.fileformat.info/info/unicode/char/F6DB '.	"3. there are a lot more characters in the Adobe encoding"	self assert: oldDecodings size = 564.	self assert: newDecodings size = 4482</body><body package="Fonts tests">testPrivateUseAreaNames	"The old and new encoding use characters from the Private Use Areas (PUA),	but that are not many, so that omitting them does not have much effect"	| isPrivateUseBlock privateUseOld privateUseNew privateUseForNewFonts |	isPrivateUseBlock := [:code |	(code between: 16rE000 and: 16rF8FF) or: [	(code between: 16rF0000 and: 16rFFFFD) or: [	code between: 16r100000 and: 16r10FFFD]]].	privateUseOld := oldDecodings associations select: [:assoc |		isPrivateUseBlock value: assoc value].	self assert: privateUseOld size = 26.	self assert: (privateUseOld collect: [:assoc | assoc key]) sorted asArray = #(#apple #arrowhorizex #arrowvertex #braceex #braceleftbt #braceleftmid #bracelefttp #bracerightbt #bracerightmid #bracerighttp #bracketleftbt #bracketleftex #bracketlefttp #bracketrightbt #bracketrightex #bracketrighttp #copyrightsans #integralex #parenleftbt #parenleftex #parenlefttp #parenrightbt #parenrightex #parenrighttp #registersans #trademarksans).	privateUseNew := newDecodings associations select: [:assoc |		isPrivateUseBlock value: assoc value].	self assert: privateUseNew size = 192.	privateUseForNewFonts := decodingForNewFonts associations select: [:assoc |		isPrivateUseBlock value: assoc value].	self assert: privateUseForNewFonts isEmpty.</body></methods><methods><class-id>Graphics.CharacterNamingTests</class-id> <category>initialize-release</category><body package="Fonts tests">setUp	| originalDecodings originalEncodings |	originalDecodings := PostScriptFontBody.Decodings.	originalEncodings := PostScriptFontBody.Encodings.	[	PostScriptFontBody processEncodingsOld.	oldDecodings := PostScriptFontBody.Decodings.	oldEncodings := PostScriptFontBody.Encodings.	PostScriptFontBody processEncodings.	newDecodings := PostScriptFontBody.Decodings.	newEncodings := PostScriptFontBody.Encodings] ensure: [			PostScriptFontBody.Decodings := originalDecodings.			PostScriptFontBody.Encodings := originalEncodings].	decodingForNewFonts := PostScriptFontBody adobeGlyphDecodingForNewFonts</body></methods><methods><class-id>Graphics.CharacterNamingTests</class-id> <category>test fonts</category><body package="Fonts tests">testStandardFontsGlyphNames	| used notInOld notInNew |	used := #(#a #A #aacute #Aacute #abreve #Abreve #acircumflex #Acircumflex #acute #adieresis #Adieresis #ae #AE #agrave #Agrave #amacron #Amacron #ampersand #aogonek #Aogonek #aring #Aring #asciicircum #asciitilde #asterisk #at #atilde #Atilde #b #B #backslash #bar #braceleft #braceright #bracketleft #bracketright #breve #brokenbar #bullet #c #C #cacute #Cacute #caron #ccaron #Ccaron #ccedilla #Ccedilla #cedilla #cent #circumflex #colon #comma #commaaccent #copyright #currency #d #D #dagger #daggerdbl #dcaron #Dcaron #dcroat #Dcroat #degree #Delta #dieresis #divide #dollar #dotaccent #dotlessi #e #E #eacute #Eacute #ecaron #Ecaron #ecircumflex #Ecircumflex #edieresis #Edieresis #edotaccent #Edotaccent #egrave #Egrave #eight #ellipsis #emacron #Emacron #emdash #endash #eogonek #Eogonek #equal #eth #Eth #Euro #exclam #exclamdown #f #F #fi #five #fl #florin #four #fraction #g #G #gbreve #Gbreve #gcommaaccent #Gcommaaccent #germandbls #grave #greater #greaterequal #guillemotleft #guillemotright #guilsinglleft #guilsinglright #h #H #hungarumlaut #hyphen #i #I #iacute #Iacute #icircumflex #Icircumflex #idieresis #Idieresis #Idotaccent #igrave #Igrave #imacron #Imacron #iogonek #Iogonek #j #J #k #K #kcommaaccent #Kcommaaccent #l #L #lacute #Lacute #lcaron #Lcaron #lcommaaccent #Lcommaaccent #less #lessequal #logicalnot #lozenge #lslash #Lslash #m #M #macron #minus #mu #multiply #n #N #nacute #Nacute #ncaron #Ncaron #ncommaaccent #Ncommaaccent #nine #notequal #ntilde #Ntilde #numbersign #o #O #oacute #Oacute #ocircumflex #Ocircumflex #odieresis #Odieresis #oe #OE #ogonek #ograve #Ograve #ohungarumlaut #Ohungarumlaut #omacron #Omacron #one #onehalf #onequarter #onesuperior #ordfeminine #ordmasculine #oslash #Oslash #otilde #Otilde #p #P #paragraph #parenleft #parenright #partialdiff #percent #period #periodcentered #perthousand #plus #plusminus #q #Q #question #questiondown #quotedbl #quotedblbase #quotedblleft #quotedblright #quoteleft #quoteright #quotesinglbase #quotesingle #r #R #racute #Racute #radical #rcaron #Rcaron #rcommaaccent #Rcommaaccent #registered #ring #s #S #sacute #Sacute #scaron #Scaron #scedilla #Scedilla #scommaaccent #Scommaaccent #section #semicolon #seven #six #slash #space #sterling #summation #t #T #tcaron #Tcaron #tcommaaccent #Tcommaaccent #thorn #Thorn #three #threequarters #threesuperior #tilde #trademark #two #twosuperior #u #U #uacute #Uacute #ucircumflex #Ucircumflex #udieresis #Udieresis #ugrave #Ugrave #uhungarumlaut #Uhungarumlaut #umacron #Umacron #underscore #uogonek #Uogonek #uring #Uring #v #V #w #W #x #X #y #Y #yacute #Yacute #ydieresis #Ydieresis #yen #z #Z #zacute #Zacute #zcaron #Zcaron #zdotaccent #Zdotaccent #zero) asSet.	self assert: used size = 315.	notInOld := used - oldDecodings keys.	notInNew := used - newDecodings keys.	self assert: notInOld size = 91.	self assert: notInNew isEmpty.	self assert: notInOld asArray sorted = #(#abreve #Abreve #amacron #Amacron #aogonek #Aogonek #brokenbar #cacute #Cacute #ccaron #Ccaron #commaaccent #dcaron #Dcaron #dcroat #Dcroat #ecaron #Ecaron #edotaccent #Edotaccent #emacron #Emacron #eogonek #Eogonek #eth #Eth #gbreve #Gbreve #gcommaaccent #Gcommaaccent #Idotaccent #imacron #Imacron #iogonek #Iogonek #kcommaaccent #Kcommaaccent #lacute #Lacute #lcaron #Lcaron #lcommaaccent #Lcommaaccent #nacute #Nacute #ncaron #Ncaron #ncommaaccent #Ncommaaccent #ohungarumlaut #Ohungarumlaut #omacron #Omacron #onehalf #onequarter #onesuperior #racute #Racute #rcaron #Rcaron #rcommaaccent #Rcommaaccent #sacute #Sacute #scedilla #Scedilla #scommaaccent #Scommaaccent #tcaron #Tcaron #tcommaaccent #Tcommaaccent #thorn #Thorn #threequarters #threesuperior #twosuperior #uhungarumlaut #Uhungarumlaut #umacron #Umacron #uogonek #Uogonek #uring #Uring #yacute #Yacute #zacute #Zacute #zdotaccent #Zdotaccent)</body><body package="Fonts tests">testSymbol	| used notInOld notInNew |	used := #(#aleph #alpha #Alpha #ampersand #angle #angleleft #angleright #apple #approxequal #arrowboth #arrowdblboth #arrowdbldown #arrowdblleft #arrowdblright #arrowdblup #arrowdown #arrowhorizex #arrowleft #arrowright #arrowup #arrowvertex #asteriskmath #bar #beta #Beta #braceex #braceleft #braceleftbt #braceleftmid #bracelefttp #braceright #bracerightbt #bracerightmid #bracerighttp #bracketleft #bracketleftbt #bracketleftex #bracketlefttp #bracketright #bracketrightbt #bracketrightex #bracketrighttp #bullet #carriagereturn #chi #Chi #circlemultiply #circleplus #club #colon #comma #congruent #copyrightsans #copyrightserif #degree #delta #Delta #diamond #divide #dotmath #eight #element #ellipsis #emptyset #epsilon #Epsilon #equal #equivalence #eta #Eta #Euro #exclam #existential #five #florin #four #fraction #gamma #Gamma #gradient #greater #greaterequal #heart #Ifraktur #infinity #integral #integralbt #integralex #integraltp #intersection #iota #Iota #kappa #Kappa #lambda #Lambda #less #lessequal #logicaland #logicalnot #logicalor #lozenge #minus #minute #mu #Mu #multiply #nine #notelement #notequal #notsubset #nu #Nu #numbersign #omega #Omega #omega1 #omicron #Omicron #one #parenleft #parenleftbt #parenleftex #parenlefttp #parenright #parenrightbt #parenrightex #parenrighttp #partialdiff #percent #period #perpendicular #phi #Phi #phi1 #pi #Pi #plus #plusminus #product #propersubset #propersuperset #proportional #psi #Psi #question #radical #radicalex #reflexsubset #reflexsuperset #registersans #registerserif #Rfraktur #rho #Rho #second #semicolon #seven #sigma #Sigma #sigma1 #similar #six #slash #space #spade #suchthat #summation #tau #Tau #therefore #theta #Theta #theta1 #three #trademarksans #trademarkserif #two #underscore #union #universal #upsilon #Upsilon #Upsilon1 #weierstrass #xi #Xi #zero #zeta #Zeta) asSet.	self assert: used size = 190.	notInOld := used - oldDecodings keys.	notInNew := used - newDecodings keys.	self assert: notInOld isEmpty.	self assert: notInNew isEmpty.</body><body package="Fonts tests">testZapfDingbats	"all ZapfDingbats characters are encoded by the old and new encoding, but not by the EncodingForNewFonts"	| used notInOld notInNew |	used := #(#a1 #a10 #a100 #a101 #a102 #a103 #a104 #a105 #a106 #a107 #a108 #a109 #a11 #a110 #a111 #a112 #a117 #a118 #a119 #a12 #a120 #a121 #a122 #a123 #a124 #a125 #a126 #a127 #a128 #a129 #a13 #a130 #a131 #a132 #a133 #a134 #a135 #a136 #a137 #a138 #a139 #a14 #a140 #a141 #a142 #a143 #a144 #a145 #a146 #a147 #a148 #a149 #a15 #a150 #a151 #a152 #a153 #a154 #a155 #a156 #a157 #a158 #a159 #a16 #a160 #a161 #a162 #a163 #a164 #a165 #a166 #a167 #a168 #a169 #a17 #a170 #a171 #a172 #a173 #a174 #a175 #a176 #a177 #a178 #a179 #a18 #a180 #a181 #a182 #a183 #a184 #a185 #a186 #a187 #a188 #a189 #a19 #a190 #a191 #a192 #a193 #a194 #a195 #a196 #a197 #a198 #a199 #a2 #a20 #a200 #a201 #a202 #a203 #a204 #a205 #a206 #a21 #a22 #a23 #a24 #a25 #a26 #a27 #a28 #a29 #a3 #a30 #a31 #a32 #a33 #a34 #a35 #a36 #a37 #a38 #a39 #a4 #a40 #a41 #a42 #a43 #a44 #a45 #a46 #a47 #a48 #a49 #a5 #a50 #a51 #a52 #a53 #a54 #a55 #a56 #a57 #a58 #a59 #a6 #a60 #a61 #a62 #a63 #a64 #a65 #a66 #a67 #a68 #a69 #a7 #a70 #a71 #a72 #a73 #a74 #a75 #a76 #a77 #a78 #a79 #a8 #a81 #a82 #a83 #a84 #a85 #a86 #a87 #a88 #a89 #a9 #a90 #a91 #a92 #a93 #a94 #a95 #a96 #a97 #a98 #a99 #space) asSet.	self assert: used size = 202.	notInOld := used - oldDecodings keys.	notInNew := used - newDecodings keys.	self assert: notInOld isEmpty.	self assert: notInNew isEmpty</body></methods><methods><class-id>Graphics.Fonts.PFMTests</class-id> <category>tests</category><body package="Fonts tests">testRead	self shouldnt: [PFMHeader fromBytes: PFMHeader exampleBytes] raise: Error.	self assert: (PFMHeader fromBytes: PFMHeader exampleBytes) = PFMHeader example.	self shouldnt: [ExtTextMetrics fromBytes: ExtTextMetrics exampleBytes] raise: Error.	self assert: (ExtTextMetrics fromBytes: ExtTextMetrics exampleBytes) = ExtTextMetrics example.	self shouldnt: [PairKern fromBytes: PairKern exampleBytes] raise: Error.	self assert: (PairKern fromBytes: PairKern exampleBytes) = PairKern example.	self shouldnt: [PostScriptFontMetrics fromBytes: PostScriptFontMetrics exampleBytes] raise: Error.	self assert: (PostScriptFontMetrics fromBytes: PostScriptFontMetrics exampleBytes) = PostScriptFontMetrics example.</body><body package="Fonts tests">testReadWrite	self assert: (PFMHeader fromBytes: PFMHeader exampleBytes) asBytes = PFMHeader exampleBytes.	self assert: (ExtTextMetrics fromBytes: ExtTextMetrics exampleBytes) asBytes = ExtTextMetrics exampleBytes.	self assert: (PairKern fromBytes: PairKern exampleBytes) asBytes = PairKern exampleBytes.	self assert: (PostScriptFontMetrics fromBytes: PostScriptFontMetrics exampleBytes) asBytes = PostScriptFontMetrics exampleBytes.</body></methods><methods><class-id>Graphics.Fonts.OpenType.Cbdt class</class-id> <category>accessing</category><body package="Fonts UI Support">documentation	^'Two tables are used to embed color bitmaps in OFF fonts. They are the ''CBLC'' table for embedded bitmap locators and the ''CBDT'' table for embedded color bitmap data. The formats of these two tables are backward compatible with EBLC and EBDT used for embedded monochrome and grayscale bitmaps'</body><body package="OpenType">tag	^'CBDT'</body><body package="Fonts UI Support">title	^'Color Bitmap Data Table'</body></methods><methods><class-id>Graphics.Fonts.CFF.Index</class-id> <category>accessing</category><body package="CompactFontFormat">count	"&lt;Integer&gt;	Card16. Number of objects stored in INDEX"	^count</body><body package="CompactFontFormat">data	"&lt;Array&gt;	Card8. [&lt;varies&gt;] Object data"	^data ifNil: [#()]</body><body package="CompactFontFormat">offSize	"&lt;Integer&gt;	OffSize. Offset array element size"	^offSize</body><body package="CompactFontFormat">offset	"&lt;Array&gt;	Offset. [count+1] Offset array (from byte preceding object data)"	^offset ifNil: [#()]</body></methods><methods><class-id>Graphics.Fonts.CFF.Index</class-id> <category>printing</category><body package="CompactFontFormat">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'count' value: self count).	args add: (printer constant: 'offSize' value: self offSize).	args add: (printer array: 'offset' value: self offset).	args add: (printer array: 'data' value: self data).	^printer printvalue: self arguments: args</body></methods><methods><class-id>Graphics.Fonts.CFF.Index</class-id> <category>initialize-release</category><body package="CompactFontFormat">initializeCount: countInteger offSize: offSizeInteger offset: offsetArray data: dataArray	count := countInteger.	offSize := offSizeInteger.	(offsetArray notNil and: [	offsetArray notEmpty]) ifTrue: [			offset := (Array withAll: offsetArray) beImmutable].	(dataArray notNil and: [	dataArray notEmpty]) ifTrue: [			data := (Array withAll: dataArray) beImmutable].	self beImmutable</body></methods><methods><class-id>Graphics.Fonts.CFF.Index class</class-id> <category>instance creation optional</category><body package="CompactFontFormat">count: countInteger offSize: offSizeInteger	| inst |	inst := self new.	inst initializeCount: countInteger offSize: offSizeInteger offset: nil data: nil.	^inst</body><body package="CompactFontFormat">count: countInteger offSize: offSizeInteger data: dataArray	| inst |	inst := self new.	inst initializeCount: countInteger offSize: offSizeInteger offset: nil data: dataArray.	^inst</body><body package="CompactFontFormat">count: countInteger offSize: offSizeInteger offset: offsetArray	| inst |	inst := self new.	inst initializeCount: countInteger offSize: offSizeInteger offset: offsetArray data: nil.	^inst</body></methods><methods><class-id>Graphics.Fonts.CFF.Index class</class-id> <category>instance creation</category><body package="CompactFontFormat">count: countInteger offSize: offSizeInteger offset: offsetArray data: dataArray	| inst |	inst := self new.	inst		initializeCount: countInteger		offSize: offSizeInteger		offset: offsetArray		data: dataArray.	^inst</body><body package="CompactFontFormat">fromBytes: aByteStream	| count offSize offsets objectData data |	count := (UninterpretedBytes from: (aByteStream next: 2))		unsignedShortAt: 1		bigEndian: true.	count isZero ifTrue: [		^self new].	offSize := aByteStream next.	offsets := OrderedCollection new: count + 1.	count + 1 timesRepeat: [		| bytes uBytes |		bytes := aByteStream next: offSize.		uBytes := UninterpretedBytes from: (ByteArray new: 4 - bytes size withAll: 0) , bytes.		offsets add: (uBytes unsignedLongAt: 1 bigEndian: true)].	objectData := aByteStream next: offsets last - 1.	data := OrderedCollection new: count.	offsets inject: nil into: [:last :next |		last ifNotNil: [data add: (objectData copyFrom: last to: next - 1)].		next].	^self count: count offSize: offSize offset: offsets data: data</body><body package="CompactFontFormat">fromBytes: aByteStream collect: block	^(self fromBytes: aByteStream) data collect: block</body><body package="CompactFontFormat">stringsFromBytes: aByteStream	^self fromBytes: aByteStream collect: #asByteString</body></methods><methods><class-id>Graphics.Fonts.CFF.Index class</class-id> <category>test instances</category><body package="Fonts test resources">example	^Index count: 1 offSize: 1 offset: #(1 #a $x 'name') data: #(1 #a $x 'name')</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable0</class-id> <category>reading</category><body package="OpenType">readFrom: bytes at: offset	"Type  	Name  	DescriptionUSHORT 	format 	Format number is set to 0.USHORT 	length 	This is the length in bytes of the subtable.USHORT 	language 	Please see “Note on the language field in 'cmap' subtables“ in this document.BYTE 	glyphIdArray[256] 	An array that maps character codes to glyph index values."	| subtable |	subtable := super readFrom: bytes at: offset.	^self class		platform: subtable platform		encoding: subtable encoding		contents: subtable contents		language: subtable language		glyphIdArray: (subtable contents copyFrom: 6 to: subtable contents size)</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable0</class-id> <category>initialize-release</category><body package="OpenType">initializePlatform: platformInteger encoding: encodingInteger contents: contentsByteArray language: languageInteger glyphIdArray: glyphIdArrayByteArray	platform := platformInteger.	encoding := encodingInteger.	contents := contentsByteArray.	language := languageInteger.	glyphIdArray := glyphIdArrayByteArray.	self beImmutable</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable0</class-id> <category>accessing</category><body package="OpenType">glyphIdArray	"&lt;ByteArray&gt;	An array that maps character codes to glyph index values"	^glyphIdArray</body><body package="OpenType">glyphIndexAtUnicode: aUnicodeInteger	^self notYetImplemented</body><body package="OpenType">indexToCode	^self notYetImplemented</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable0</class-id> <category>printing</category><body package="OpenType">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'platform' value: self platform).	args add: (printer constant: 'encoding' value: self encoding).	args add: (printer constant: 'contents' value: self contents).	args add: (printer constant: 'language' value: self language).	args add: (printer constant: 'glyphIdArray' value: self glyphIdArray).	^printer printvalue: self arguments: args</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable0 class</class-id> <category>accessing</category><body package="OpenType">formatNumber	^0</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable0 class</class-id> <category>instance creation</category><body package="OpenType">platform: platformInteger encoding: encodingInteger contents: contentsByteArray language: languageInteger glyphIdArray: glyphIdArrayByteArray	| inst |	inst := self new.	inst		initializePlatform: platformInteger		encoding: encodingInteger		contents: contentsByteArray		language: languageInteger		glyphIdArray: glyphIdArrayByteArray.	^inst</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable0 class</class-id> <category>test instances</category><body package="Fonts test resources">example	^CmapSubtable0 platform: 1 encoding: 1 contents: #[42] language: 1 glyphIdArray: #[42]</body></methods><methods><class-id>Graphics.Fonts.CFF.Operation</class-id> <category>accessing</category><body package="Fonts UI Support">operand	"&lt;Number&gt;"	^self operands first</body><body package="CompactFontFormat">operands	"&lt;Array&gt;"	^operands ifNil: [#()]</body><body package="CompactFontFormat">operator	"&lt;Operator&gt;"	^operator</body></methods><methods><class-id>Graphics.Fonts.CFF.Operation</class-id> <category>testing</category><body package="Fonts UI Support">hasOneSID	^self operator hasOneSID</body><body package="CompactFontFormat">isExtended: integer	^self operator isExtended: integer</body><body package="CompactFontFormat">isSimple: integer	^self operator isSimple: integer</body></methods><methods><class-id>Graphics.Fonts.CFF.Operation</class-id> <category>initialize-release</category><body package="CompactFontFormat">initializeOperator: operatorOperator operands: operandsArray	operator := operatorOperator.	(operandsArray notNil and: [	operandsArray notEmpty]) ifTrue: [			operands := (Array withAll: operandsArray) beImmutable].	self beImmutable</body></methods><methods><class-id>Graphics.Fonts.CFF.Operation</class-id> <category>printing</category><body package="CompactFontFormat">printOn: stream	self operands do: [:arg |		stream			nextPutAll: arg printString;			space].	stream nextPutAll: self operator name</body><body package="CompactFontFormat">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'operator' value: self operator).	args add: (printer array: 'operands' value: self operands).	^printer printvalue: self arguments: args</body></methods><methods><class-id>Graphics.Fonts.CFF.Operation class</class-id> <category>instance creation optional</category><body package="CompactFontFormat">operator: operatorOperator	| inst |	inst := self new.	inst initializeOperator: operatorOperator operands: nil.	^inst</body></methods><methods><class-id>Graphics.Fonts.CFF.Operation class</class-id> <category>instance creation</category><body package="CompactFontFormat">operator: operatorOperator operands: operandsArray	| inst |	inst := self new.	inst initializeOperator: operatorOperator operands: operandsArray.	^inst</body></methods><methods><class-id>Graphics.Fonts.CFF.Operation class</class-id> <category>test instances</category><body package="Fonts test resources">example	^Operation operator: (DictOperator value: 4) operands: #(385)</body></methods><methods><class-id>Graphics.Fonts.CFF.Header</class-id> <category>accessing</category><body package="CompactFontFormat">hdrSize	"&lt;Integer&gt;	Card8. Header size (bytes)"	^hdrSize</body><body package="CompactFontFormat">major	"&lt;Integer&gt;	Card8. Format major version (starting at 1)"	^major</body><body package="CompactFontFormat">minor	"&lt;Integer&gt;	Card8. Format minor version (starting at 0)"	^minor</body><body package="CompactFontFormat">offSize	"&lt;Integer&gt;	OffSize. Absolute offset (0) size"	^offSize</body><body package="CompactFontFormat">version	"&lt;Float&gt;"	^(self major printString, '.', self minor printString) asNumber</body></methods><methods><class-id>Graphics.Fonts.CFF.Header</class-id> <category>printing</category><body package="CompactFontFormat">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'major' value: self major).	args add: (printer constant: 'minor' value: self minor).	args add: (printer constant: 'hdrSize' value: self hdrSize).	args add: (printer constant: 'offSize' value: self offSize).	^printer printvalue: self arguments: args</body></methods><methods><class-id>Graphics.Fonts.CFF.Header</class-id> <category>initialize-release</category><body package="CompactFontFormat">initializeMajor: majorInteger minor: minorInteger hdrSize: hdrSizeInteger offSize: offSizeInteger	major := majorInteger.	minor := minorInteger.	hdrSize := hdrSizeInteger.	offSize := offSizeInteger.	self beImmutable</body></methods><methods><class-id>Graphics.Fonts.CFF.Header class</class-id> <category>instance creation</category><body package="CompactFontFormat">fromBytes: aByteStream	^self		major: aByteStream next		minor: aByteStream next		hdrSize: aByteStream next		offSize: aByteStream next</body><body package="CompactFontFormat">major: majorInteger minor: minorInteger hdrSize: hdrSizeInteger offSize: offSizeInteger	| inst |	inst := self new.	inst		initializeMajor: majorInteger		minor: minorInteger		hdrSize: hdrSizeInteger		offSize: offSizeInteger.	^inst</body></methods><methods><class-id>Graphics.Fonts.CFF.Header class</class-id> <category>test instances</category><body package="Fonts test resources">example	^Header major: 1 minor: 1 hdrSize: 1 offSize: 1</body></methods><methods><class-id>Graphics.Fonts.ByteWriteStream</class-id> <category>accessing</category><body package="Fonts Basics">bigEndian	"&lt;Boolean&gt;	true iff big endian, false iff little endian"	^bigEndian ifNil: [UninterpretedBytes isBigEndian]</body><body package="Fonts Basics">bigEndian: aBoolean	bigEndian := aBoolean</body><body package="Fonts Basics">nextPutBooleanByte: aBoolean	| bytes |	bytes := UninterpretedBytes new: 1.	bytes booleanByteAt: 1 put: aBoolean.	self nextPut: bytes asByteArray first</body><body package="Fonts Basics">nextPutFixed: aNumber	self nextPutLong: (aNumber * 16r10000) rounded</body><body package="Fonts Basics">nextPutFixedVersion: aNumber	self nextPutUnsignedShort: aNumber truncated.	self nextPutUnsignedShort: ('16r' , (aNumber asFloat fractionPart printString allButFirst: 2)) asNumber rounded</body><body package="Fonts Basics">nextPutLong: anInteger	| bytes |	bytes := UninterpretedBytes new: 4.	bytes longAt: 1 put: anInteger bigEndian: self bigEndian.	self nextPutAll: bytes asByteArray</body><body package="Fonts Basics">nextPutLongDateTime: aTimestamp	self nextPutLongLong: aTimestamp asLongDateTime</body><body package="Fonts Basics">nextPutLongLong: anInteger	| bytes |	bytes := UninterpretedBytes new: 8.	bytes longLongAt: 1 put: anInteger bigEndian: self bigEndian.	self nextPutAll: bytes asByteArray</body><body package="Fonts Basics">nextPutShort: anInteger	| bytes |	bytes := UninterpretedBytes new: 2.	bytes shortAt: 1 put: anInteger bigEndian: self bigEndian.	self nextPutAll: bytes asByteArray</body><body package="Fonts Basics">nextPutString: aByteString	self		nextPutAll: aByteString asByteArray;		nextPut: 0</body><body package="Fonts Basics">nextPutUnsignedLong: anInteger	| bytes |	bytes := UninterpretedBytes new: 4.	bytes unsignedLongAt: 1 put: anInteger bigEndian: self bigEndian.	self nextPutAll: bytes asByteArray</body><body package="Fonts Basics">nextPutUnsignedShort: anInteger	| bytes |	bytes := UninterpretedBytes new: 2.	bytes unsignedShortAt: 1 put: anInteger bigEndian: self bigEndian.	self nextPutAll: bytes asByteArray</body></methods><methods><class-id>Graphics.Fonts.ByteWriteStream class</class-id> <category>instance creation</category><body package="Fonts Basics">bigEndianOn: aByteArray	| inst |	inst := self on: aByteArray.	inst bigEndian: true.	^inst</body><body package="Fonts Basics">littleEndianOn: aByteArray	| inst |	inst := self on: aByteArray.	inst bigEndian: false.	^inst</body></methods><methods><class-id>Graphics.Fonts.FontBody</class-id> <category>private</category><body package="Fonts Basics">underlinePosition	"&lt;Float&gt;	location of the preferred underline, measured from the baseline as a value between 0 and 1"	^underlinePosition</body><body package="Fonts Basics">underlineThickness	"&lt;Float&gt;	width of the preferred underline, as a value between 0 and 1"	^underlineThickness</body></methods><methods><class-id>Graphics.Fonts.FontBody</class-id> <category>accessing</category><body package="Fonts Basics">fontBBox	"&lt;Rectangle&gt;"	^fontBBox</body><body package="Fonts Basics">fontBBox: aRectangle	fontBBox := aRectangle</body></methods><methods><class-id>Graphics.Fonts.FontBody</class-id> <category>initialize-release</category><body package="Fonts Basics">initializeFromFont: aFont	fullName := aFont postScriptName.	family := aFont familyName.	setWidth := aFont setWidth.	boldness := aFont weight / 1000.0.	italic := aFont isItalic.	fixedWidth := aFont isFixedPitch.	ascent := aFont ascenderInTextSpace.	descent := aFont descenderInTextSpace negated.	underlinePosition := aFont underlinePositionInTextSpace.	underlineThickness := aFont underlineThicknessInTextSpace.	fontBBox := aFont fontBBoxInTextSpace.	self setEncodingFrom: aFont</body><body package="Fonts Basics">release	PostScriptFonts removeKey: self name.	super release</body><body package="Fonts Basics">setEncodingFrom: aFont	| widthsAtUnicodes |	widths := nil.	widthsAtUnicodes := IdentityDictionary new: aFont characterGlyphs size.	aFont characterGlyphs do: [:glyph |		self widths at: glyph postScriptName put: glyph width.		widthsAtUnicodes at: glyph unicode put: glyph width].	simpleWidths := nil.	encoder := aFont class winAnsiEncoder.	self encoder decoder doWithIndex: [:char :index |		widthsAtUnicodes at: char asInteger ifPresent: [:width |			self simpleWidths at: index put: width]]</body></methods><methods><class-id>Graphics.Fonts.FontBody class</class-id> <category>initialize-release</category><body package="Fonts Basics">postLoad: aParcelOrPackage	"called when the code is loaded"	self processEncodings</body></methods><methods><class-id>Graphics.Fonts.FontBody class</class-id> <category>font metric loading</category><body package="Fonts Basics">installFromFont: aFont	"create an instance from the font, and add the FontBody to the printer fonts"	| fontBody |	fontBody := self new.	fontBody initializeFromFont: aFont.	PostScriptFonts do: [:existing |		(existing encoder = fontBody encoder and: [		existing encoder ~~ fontBody encoder]) ifTrue: [				fontBody setEncoder: existing encoder]].	PostScriptFonts at: fontBody name put: fontBody.	PostScriptPrinter printsColor: true</body></methods><methods><class-id>Graphics.Fonts.CFF.Charstring</class-id> <category>initialize-release</category><body package="CompactFontFormat">initializeBytes: bytesArray	(bytesArray notNil and: [	bytesArray notEmpty]) ifTrue: [			bytes := (Array withAll: bytesArray) beImmutable].	self beImmutable</body></methods><methods><class-id>Graphics.Fonts.CFF.Charstring</class-id> <category>accessing</category><body package="CompactFontFormat">bytes	"&lt;Array&gt;"	^bytes ifNil: [#()]</body><body package="CompactFontFormat">operations	"&lt;SequenceableCollection of: Operation&gt;"	| operations args rst |	operations := OrderedCollection new.	args := OrderedCollection new.	rst := self bytes readStream.	[rst atEnd] whileFalse: [		| element |		element := self readElementFrom: rst.		element respondsToArithmetic			ifTrue: [args add: element]			ifFalse: [			operations add: (Operation operator: element operands: args).			args := OrderedCollection new]].	^operations</body></methods><methods><class-id>Graphics.Fonts.CFF.Charstring</class-id> <category>reading</category><body package="CompactFontFormat">integerFrom: byteStream	"&lt;Integer&gt;"	| b0 b1 |	b0 := byteStream next.	(b0 between: 32 and: 246) ifTrue: [		^b0 - 139].	b1 := byteStream next.	(b0 between: 247 and: 250) ifTrue: [		^(b0 - 247) * 256 + b1 + 108].	(b0 between: 251 and: 254) ifTrue: [		^(b0 - 251) negated * 256 - b1 - 108].	self error: 'no Integer operand'</body><body package="CompactFontFormat">operatorFrom: byteStream	"&lt;Operator&gt;"	| byte |	byte := byteStream next.	byte = 12 ifTrue: [		^TwoByteCharstringOperator value: byteStream next].	^CharstringOperator value: byte</body><body package="CompactFontFormat">readElementFrom: byteStream	"&lt;Operator | Number&gt;"	| byte |	byte := byteStream peek.	byte = 28 ifTrue: [		^self shortIntFrom: byteStream].	(byte between: 0 and: 31) ifTrue: [		^self operatorFrom: byteStream].	byte = 255 ifTrue: [		^self signedFractionFrom: byteStream].	^self integerFrom: byteStream</body><body package="CompactFontFormat">shortIntFrom: byteStream	"&lt;Integer&gt;"	byteStream next = 28 ifFalse: [		^self error: 'no Integer operand'].	^(UninterpretedBytes from: (ByteArray		with: byteStream next		with: byteStream next))			shortAt: 1			bigEndian: true</body><body package="CompactFontFormat">signedFractionFrom: byteStream	"&lt;Number&gt;"	| integer fraction |	byteStream next = 255 ifFalse: [		^self error: 'no Integer operand'].	integer := (UninterpretedBytes from: (ByteArray		with: byteStream next		with: byteStream next))			shortAt: 1			bigEndian: true.	fraction := (UninterpretedBytes from: (ByteArray		with: byteStream next		with: byteStream next))			shortAt: 1			bigEndian: true.	^integer + (fraction / 256)</body></methods><methods><class-id>Graphics.Fonts.CFF.Charstring</class-id> <category>printing</category><body package="CompactFontFormat">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer array: 'bytes' value: self bytes).	^printer printvalue: self arguments: args</body></methods><methods><class-id>Graphics.Fonts.CFF.Charstring class</class-id> <category>instance creation</category><body package="CompactFontFormat">bytes: bytesArray	| inst |	inst := self new.	inst initializeBytes: bytesArray.	^inst</body></methods><methods><class-id>Graphics.Fonts.CFF.Charstring class</class-id> <category>test instances</category><body package="Fonts test resources">example	"from 'Adobe Type 1 Font Format' pp.58"	^Charstring bytes: #[189 249 180 13 139 239 3 139 239 1 248 236 239 1 139 22 249 80 6 239 7 252 236 6 248 136 7 248 236 6 239 7 253 80 6 9 14]</body></methods><methods><class-id>Graphics.Fonts.DirectionalFontMetric</class-id> <category>attributes</category><body package="Type1">charWidth	"&lt;Point x: Number y: Number&gt;"	"(Optional.) The x and y components of the width vector of this font program’s characters. If present, it means that all characters in this font program have the same CharWidth for this writing direction, and implies IsFixedPitch is true."	^charWidth</body><body package="Type1">isFixedPitch	"&lt;Boolean&gt;"	"(Optional.) If boolean is true, this indicates that the font program is a fixed pitch (monospaced) font. A value of false indicates a proportionally spaced font. If this keyword is present, its value must not conflict with CharWidth; if absent, its value is assumed to be true if CharWidth is present and false if Charwidth is absent."	^isFixedPitch ifNil: [charWidth notNil]</body><body package="Type1">italicAngle	"&lt;Number&gt;"	"(Optional.) Angle (in degrees counter-clockwise from the vertical) of the dominant vertical strokes of the font. For non-italic fonts, this angle will be zero.Example: –12."	^italicAngle ifNil: [0]</body><body package="Type1">underlinePosition	"&lt;Number&gt;"	"(Optional.) Distance from the baseline for centering underlining strokes. This can be interpreted as a y-displacement for writing direction 0, and an xdisplacement for writing direction 1."	^underlinePosition</body><body package="Type1">underlineThickness	"&lt;Number&gt;"	"(Optional.) This is the stroke width for underlining, and is generally proportional to the stroke widths of characters in the font program."	^underlineThickness</body></methods><methods><class-id>Graphics.Fonts.DirectionalFontMetric</class-id> <category>private</category><body package="Type1">charWidth: aString	| numbers |	numbers := (aString tokensBasedOn: Character space) collect: [:token |		token asNumber].	charWidth := numbers first @ numbers last</body><body package="Type1">isFixedPitch: aString	isFixedPitch := aString = 'true'</body><body package="Type1">italicAngle: aString	italicAngle := aString asNumber</body><body package="Type1">underlinePosition: aString	underlinePosition := aString asNumber</body><body package="Type1">underlineThickness: aString	underlineThickness := aString asNumber</body></methods><methods><class-id>Graphics.Fonts.DirectionalFontMetric</class-id> <category>printing</category><body package="Type1">describeOn: wst	underlinePosition ifNotNil: [wst cr; nextPutAllText: 'UnderlinePosition ' asText, self underlinePosition printString asText allBold].	underlineThickness ifNotNil: [wst cr; nextPutAllText: 'UnderlineThickness ' asText, self underlineThickness printString asText allBold].	italicAngle ifNotNil: [wst cr; nextPutAllText: 'ItalicAngle ' asText, self italicAngle printString asText allBold].	isFixedPitch ifNotNil: [wst cr; nextPutAllText: 'IsFixedPitch ' asText, self isFixedPitch printString asText allBold].	charWidth ifNotNil: [wst cr; nextPutAllText: 'CharWidth ' asText, self charWidth asText allBold].</body></methods><methods><class-id>Graphics.Fonts.CFF.Encoding1</class-id> <category>accessing</category><body package="CompactFontFormat">ranges	"&lt;Array&gt;"	^ranges ifNil: [#()]</body><body package="CompactFontFormat">supplement	"&lt;EncodingSupplement&gt;"	^supplement ifNil: [EncodingSupplement new]</body></methods><methods><class-id>Graphics.Fonts.CFF.Encoding1</class-id> <category>printing</category><body package="CompactFontFormat">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer array: 'ranges' value: self ranges).	args add: (printer optional: 'supplement' value: supplement).	^printer printvalue: self arguments: args</body></methods><methods><class-id>Graphics.Fonts.CFF.Encoding1</class-id> <category>initialize-release</category><body package="CompactFontFormat">initializeRanges: rangesArray supplement: supplementEncodingSupplement	(rangesArray notNil and: [	rangesArray notEmpty]) ifTrue: [			ranges := (Array withAll: rangesArray) beImmutable].	(supplementEncodingSupplement notNil and: [	self supplement ~= supplementEncodingSupplement]) ifTrue: [			supplement := supplementEncodingSupplement].	self beImmutable</body></methods><methods><class-id>Graphics.Fonts.CFF.Encoding1 class</class-id> <category>instance creation</category><body package="CompactFontFormat">fromBytes: aByteStream	| formatByte hasSupplement nRanges ranges |	formatByte := aByteStream next.	hasSupplement := (formatByte bitAnd: 16r80) isZero not.	nRanges := aByteStream next.	ranges := OrderedCollection new: nRanges.	nRanges timesRepeat: [		ranges add: (Range first: aByteStream next nLeft: aByteStream next)].	hasSupplement ifFalse: [		^self ranges: ranges].	^self ranges: ranges supplement: (EncodingSupplement fromBytes: aByteStream)</body><body package="CompactFontFormat">ranges: rangesArray supplement: supplementEncodingSupplement	| inst |	inst := self new.	inst initializeRanges: rangesArray supplement: supplementEncodingSupplement.	^inst</body></methods><methods><class-id>Graphics.Fonts.CFF.Encoding1 class</class-id> <category>instance creation optional</category><body package="CompactFontFormat">ranges: rangesArray	| inst |	inst := self new.	inst initializeRanges: rangesArray supplement: nil.	^inst</body><body package="CompactFontFormat">supplement: supplementEncodingSupplement	| inst |	inst := self new.	inst initializeRanges: nil supplement: supplementEncodingSupplement.	^inst</body></methods><methods><class-id>Graphics.Fonts.CFF.Encoding1 class</class-id> <category>test instances</category><body package="Fonts test resources">example	^Encoding1 ranges: #(1 #a $x 'name')</body></methods><methods><class-id>Graphics.Fonts.CFF.Encoding0</class-id> <category>initialize-release</category><body package="CompactFontFormat">initializeCodes: codesArray supplement: supplementEncodingSupplement	(codesArray notNil and: [	codesArray notEmpty]) ifTrue: [			codes := (Array withAll: codesArray) beImmutable].	(supplementEncodingSupplement notNil and: [	self supplement ~= supplementEncodingSupplement]) ifTrue: [			supplement := supplementEncodingSupplement].	self beImmutable</body></methods><methods><class-id>Graphics.Fonts.CFF.Encoding0</class-id> <category>printing</category><body package="CompactFontFormat">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer array: 'codes' value: self codes).	args add: (printer optional: 'supplement' value: supplement).	^printer printvalue: self arguments: args</body></methods><methods><class-id>Graphics.Fonts.CFF.Encoding0</class-id> <category>accessing</category><body package="CompactFontFormat">codes	"&lt;Array&gt;"	^codes ifNil: [#()]</body><body package="CompactFontFormat">supplement	"&lt;EncodingSupplement&gt;"	^supplement ifNil: [EncodingSupplement new]</body></methods><methods><class-id>Graphics.Fonts.CFF.Encoding0 class</class-id> <category>instance creation optional</category><body package="CompactFontFormat">codes: codesArray	| inst |	inst := self new.	inst initializeCodes: codesArray supplement: nil.	^inst</body><body package="CompactFontFormat">supplement: supplementEncodingSupplement	| inst |	inst := self new.	inst initializeCodes: nil supplement: supplementEncodingSupplement.	^inst</body></methods><methods><class-id>Graphics.Fonts.CFF.Encoding0 class</class-id> <category>instance creation</category><body package="CompactFontFormat">codes: codesArray supplement: supplementEncodingSupplement	| inst |	inst := self new.	inst initializeCodes: codesArray supplement: supplementEncodingSupplement.	^inst</body><body package="CompactFontFormat">fromBytes: aByteStream	| formatByte hasSupplement nCodes codes |	formatByte := aByteStream next.	hasSupplement := (formatByte bitAnd: 16r80) isZero not.	nCodes := aByteStream next.	codes := aByteStream next: nCodes.	hasSupplement ifFalse: [		^self codes: codes].	^self codes: codes supplement: (EncodingSupplement fromBytes: aByteStream)</body></methods><methods><class-id>Graphics.Fonts.CFF.Encoding0 class</class-id> <category>test instances</category><body package="Fonts test resources">example	^Encoding0 codes: #(1 #a $x 'name')</body></methods><methods><class-id>Graphics.Fonts.CFF.StandardCharset</class-id> <category>accessing</category><body package="CompactFontFormat">glyphs	"&lt;Array of: SID&gt;	Glyph name array"	^glyphs ifNil: [#()]</body><body package="CompactFontFormat">name	^name</body><body package="CompactFontFormat">sids	^#(0), self glyphs</body></methods><methods><class-id>Graphics.Fonts.CFF.StandardCharset</class-id> <category>printing</category><body package="CompactFontFormat">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'name' value: self name).	args add: (printer array: 'glyphs' value: self glyphs).	^printer printvalue: self arguments: args</body></methods><methods><class-id>Graphics.Fonts.CFF.StandardCharset</class-id> <category>initialize-release</category><body package="CompactFontFormat">initializeName: nameString glyphs: glyphsArray	name := nameString.	(glyphsArray notNil and: [	glyphsArray notEmpty]) ifTrue: [			glyphs := (Array withAll: glyphsArray) beImmutable].	self beImmutable</body></methods><methods><class-id>Graphics.Fonts.CFF.StandardCharset class</class-id> <category>instances</category><body package="CompactFontFormat">expert	"&lt;StandardCharset&gt;"	^self		name: 'Expert'		glyphs: #(1 229 230 231 232 233 234 235 236 237 238 13 14 15 99 239 240 241 242 243 244 245 246 247 248 27 28 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 109 110 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 158 155 163 319 320 321 322 323 324 325 326 150 164 169 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378)</body><body package="CompactFontFormat">expertSubset	"&lt;StandardCharset&gt;"	^self		name: 'Expert Subset'		glyphs: #(1 231 232 235 236 237 238 13 14 15 99 239 240 241 242 243 244 245 246 247 248 27 28 249 250 251 253 254 255 256 257 258 259 260 261 262 263 264 265 266 109 110 267 268 269 270 272 300 301 302 305 314 315 158 155 163 320 321 322 323 324 325 326 150 164 169 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346)</body><body package="CompactFontFormat">isoAdobe	"&lt;StandardCharset&gt;"	^self		name: 'ISOAdobe'		glyphs: #(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228)</body></methods><methods><class-id>Graphics.Fonts.CFF.StandardCharset class</class-id> <category>instance creation optional</category><body package="CompactFontFormat">name: nameString	| inst |	inst := self new.	inst initializeName: nameString glyphs: nil.	^inst</body></methods><methods><class-id>Graphics.Fonts.CFF.StandardCharset class</class-id> <category>instance creation</category><body package="CompactFontFormat">name: nameString glyphs: glyphsArray	| inst |	inst := self new.	inst initializeName: nameString glyphs: glyphsArray.	^inst</body></methods><methods><class-id>Graphics.Fonts.CFF.StandardCharset class</class-id> <category>test instances</category><body package="Fonts test resources">example	^StandardCharset isoAdobe</body></methods><methods><class-id>Graphics.Fonts.OpenType.Hmtx</class-id> <category>accessing</category><body package="Fonts UI Support">descriptionText	| wst |	wst := TextStream on: (String new: 200).	wst		nextPutAll: '(not implemented)';		cr;		cr;		nextPutAll: 'Bytes: ';		nextPutAll: self contents printString.	^wst contents</body><body package="OpenType">hMetrics	"&lt;Array of HorMetric&gt;"	^hMetrics ifNil: [		| bytes offset metrics advanceWidth |		bytes := self bytes.		offset := 1.		metrics := OrderedCollection new: self file numGlyphs.		self file numberOfHMetrics timesRepeat: [			advanceWidth := bytes unsignedShortAt: offset bigEndian: true.			offset := offset + 2.			metrics add: (HorMetric advanceWidth: advanceWidth lsb: (bytes shortAt: offset bigEndian: true)).			offset := offset + 2].		self file numGlyphs - self file numberOfHMetrics timesRepeat: [			metrics add: (HorMetric advanceWidth: advanceWidth lsb: (bytes shortAt: offset bigEndian: true)).			offset := offset + 2].		hMetrics := metrics asArray]</body></methods><methods><class-id>Graphics.Fonts.OpenType.Hmtx class</class-id> <category>accessing</category><body package="Fonts UI Support">documentation	^'The type longHorMetric is defined as an array where each element has two parts: the advance width, which is of type USHORT, and the left side bearing, which is of type SHORT. These fields are in font design units.'</body><body package="OpenType">tag	^'hmtx'</body><body package="Fonts UI Support">title	^'Horizontal Metrics'</body></methods><methods><class-id>Graphics.Fonts.OpenType.Ltsh class</class-id> <category>accessing</category><body package="Fonts UI Support">documentation	^'The LTSH table relates to OpenType™ fonts containing TrueType outlines. There are noticeable improvements to fonts on the screen when instructions are carefully applied to the sidebearings. The gain in readability is offset by the necessity for the OS to grid fit the glyphs in order to find the actual advance width for the glyphs (since instructions may be moving the sidebearing points). The TrueType outline format already has two mechanisms to side step the speed issues: the ''hdmx'' table, where precomputed advance widths may be saved for selected ppem sizes, and the ''vdmx'' table, where precomputed vertical advance widths may be saved for selected ppem sizes. The ''LTSH'' table (Linear ThreSHold) is a second, complementary method.The LTSH table defines the point at which it is reasonable to assume linearly scaled advance widths on a glyph-by-glyph basis. This table should not be included unless bit 4 of the “flags” field in the ''head'' table is set. The criteria for linear scaling is:a. (ppem size is ³50) AND (difference between the rounded linear width and the rounded instructed width £ 2% of the rounded linear width)or b. Linear width == Instructed widthThe LTSH table records the ppem for each glyph at which the scaling becomes linear again, despite instructions effecting the advance width. It is a requirement that, at and above the recorded threshold size, the glyph remain linear in its scaling (i.e., not legal to set threshold at 55 ppem if glyph becomes nonlinear again at 90 ppem).'</body><body package="OpenType">tag	^'LTSH'</body><body package="Fonts UI Support">title	^'Linear Threshold'</body></methods><methods><class-id>Graphics.Fonts.OpenType.Vhea class</class-id> <category>accessing</category><body package="Fonts UI Support">documentation	^'The vertical header table (tag name: ''vhea'') contains information needed for vertical fonts. The glyphs of vertical fonts are written either top to bottom or bottom to top. This table contains information that is general to the font as a whole. Information that pertains to specific glyphs is given in the vertical metrics table (tag name: ''vmtx'') described separately. The formats of these tables are similar to those for horizontal metrics (hhea and hmtx).Data in the vertical header table must be consistent with data that appears in the vertical metrics table. The advance height and top sidebearing values in the vertical metrics table must correspond with the maximum advance height and minimum bottom sidebearing values in the vertical header table.See the section “OpenType CJK Font Guidelines“ for more information about constructing CJK (Chinese, Japanese, and Korean) fonts.The difference between version 1.0 and version 1.1 is the name and definition of:    * ascender becomes vertTypoAscender    * descender becomes vertTypoDescender    * lineGap becomes vertTypoLineGap'</body><body package="OpenType">tag	^'vhea'</body><body package="Fonts UI Support">title	^'Vertical Header Table'</body></methods><methods><class-id>Graphics.Fonts.OpenType.Hhea</class-id> <category>accessing</category><body package="OpenType">advanceWidthMax	"UFWORD 	advanceWidthMax 	Maximum advance width value in 'hmtx' table."	^self bytes unsignedShortAt: 11 bigEndian: true</body><body package="OpenType">ascender	"FWORD 	Ascender 	Typographic ascent.  (Distance from baseline of highest ascender)"	^self bytes shortAt: 5 bigEndian: true</body><body package="OpenType">caretOffset	"SHORT 	caretOffset 	The amount by which a slanted highlight on a glyph needs to be shifted to produce the best appearance. Set to 0 for non-slanted fonts"	^self bytes shortAt: 23 bigEndian: true</body><body package="OpenType">caretSlopeRise	"SHORT 	caretSlopeRise 	Used to calculate the slope of the cursor (rise/run); 1 for vertical."	^self bytes shortAt: 19 bigEndian: true</body><body package="OpenType">caretSlopeRun	"SHORT 	caretSlopeRun 	0 for vertical."	^self bytes shortAt: 21 bigEndian: true</body><body package="OpenType">descender	"FWORD 	Descender 	Typographic descent.  (Distance from baseline of lowest descender)"	^self bytes shortAt: 7 bigEndian: true</body><body package="Fonts UI Support">descriptionText	| wst |	wst := TextStream on: (String new: 200).	wst		nextPutAll: 'Table version number: ';		emphasis: #(#bold);		nextPutAll: self versionMajor printString;		nextPut: $.;		nextPutAll: self versionMinor printString.	self printAttribute: #ascender on: wst.	self printAttribute: #descender on: wst.	self printAttribute: #lineGap on: wst.	self printAttribute: #advanceWidthMax on: wst.	self printAttribute: #minLeftSideBearing on: wst.	self printAttribute: #minRightSideBearing on: wst.	self printAttribute: #xMaxExtent on: wst.	self printAttribute: #caretSlopeRise on: wst.	self printAttribute: #caretSlopeRun on: wst.	self printAttribute: #caretOffset on: wst.	self printAttribute: #metricDataFormat on: wst.	self printAttribute: #numberOfHMetrics on: wst.	^wst contents</body><body package="OpenType">lineGap	"FWORD 	LineGap 	Typographic line gap. Negative LineGap values are treated as zero in Windows 3.1, System 6, and System 7."	^self bytes shortAt: 9 bigEndian: true</body><body package="OpenType">metricDataFormat	"SHORT 	metricDataFormat 	0 for current format."	^self bytes shortAt: 33 bigEndian: true</body><body package="OpenType">minLeftSideBearing	"FWORD 	minLeftSideBearing 	Minimum left sidebearing value in 'hmtx' table."	^self bytes shortAt: 13 bigEndian: true</body><body package="OpenType">minRightSideBearing	"FWORD 	minRightSideBearing 	Minimum right sidebearing value; calculated as Min(aw - lsb - (xMax - xMin))."	^self bytes shortAt: 15 bigEndian: true</body><body package="OpenType">numberOfHMetrics	"USHORT  	numberOfHMetrics  	Number of hMetric entries in 'hmtx' table"	^self bytes unsignedShortAt: 35 bigEndian: true</body><body package="OpenType">versionMajor	"Fixed 	Table version number 	0x00010000 for version 1.0."	^self bytes unsignedShortAt: 1 bigEndian: true</body><body package="OpenType">versionMinor	"Fixed 	Table version number 	0x00010000 for version 1.0."	^self bytes unsignedShortAt: 3 bigEndian: true</body><body package="OpenType">xMaxExtent	"FWORD 	xMaxExtent 	Max(lsb + (xMax - xMin))."	^self bytes shortAt: 17 bigEndian: true</body></methods><methods><class-id>Graphics.Fonts.OpenType.Hhea class</class-id> <category>accessing</category><body package="Fonts UI Support">documentation	^'This table contains information for horizontal layout. The values in the minRightSidebearing, minLeftSideBearing and xMaxExtent should be computed using only glyphs that have contours. Glyphs with no contours should be ignored for the purposes of these calculations. All reserved areas must be set to 0.'</body><body package="OpenType">tag	^'hhea'</body><body package="Fonts UI Support">title	^'Horizontal Header'</body></methods><methods><class-id>Graphics.Fonts.OpenType.Vmtx class</class-id> <category>accessing</category><body package="Fonts UI Support">documentation	^'The vertical metrics table allows you to specify the vertical spacing for each glyph in a vertical font. This table consists of either one or two arrays that contain metric information (the advance heights and top sidebearings) for the vertical layout of each of the glyphs in the font.'</body><body package="OpenType">tag	^'vmtx'</body><body package="Fonts UI Support">title	^'Vertical Metrics Table'</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable8</class-id> <category>accessing</category><body package="OpenType">glyphIndexAtUnicode: aUnicodeInteger	^self notYetImplemented</body><body package="OpenType">indexToCode	^self notYetImplemented</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable8 class</class-id> <category>accessing</category><body package="OpenType">formatNumber	^8</body></methods><methods><class-id>Graphics.Fonts.OpenType.CmapSubtable8 class</class-id> <category>test instances</category><body package="Fonts test resources">example	^CmapSubtable8 platform: 1 encoding: 1 contents: #[42] language: 1</body></methods><methods><class-id>Graphics.Fonts.OpenType.Cpal class</class-id> <category>accessing</category><body package="Fonts UI Support">documentation	^'The palette table is a set of one or more palettes, each containing a predefined number of RGBA values arranged consecutively by palette index value. It may also contain name table IDs describing the palettes and their entries.The first palette, number 0, is the default palette. The palettes are referenced by colorRecordIndices, this is the index into the array of color records where the palette starts. Multiple colorRecordIndices may refer to the same palette, therefore the number of actual palettes in the table may be less than the numPalettes entry. A minimum of one palette, the default, must be provided in the table if the table is present. Each palette must have the same number of entries as defined by numPaletteEntries, which must be at least one entry. Any empty CPAL table, with no palettes and no color records is not permissible. It is permissible for palettes to overlap and share data; therefore, the total number of color records in the CPAL table may be less than the number of palette entries multiplied by the number of palettes.For each of the palettes, the first color record is index zero. There can be no more than numPaletteEntries of RGBA values.'</body><body package="OpenType">tag	^'CPAL'</body><body package="Fonts UI Support">title	^'Color Palette Table'</body></methods><methods><class-id>Graphics.Fonts.OpenType.NameRecord</class-id> <category>accessing</category><body package="OpenType">bytes	"&lt;ByteArray&gt;"	^bytes</body><body package="OpenType">description	"&lt;String&gt;"	^self class nameIdDescriptions at: self nameID ifAbsent: ['no description']</body><body package="OpenType">encodingID	"&lt;Integer&gt;"	^encodingID</body><body package="OpenType">encodingString	"&lt;String&gt;"	| strings |	strings := self encodingStrings.	strings isEmpty ifTrue: [		^'(-)'].	^strings at: self encodingID + 1</body><body package="OpenType">encodingStrings	"&lt;Array of: String&gt;"	self platformID = 3 ifTrue: [		^#('Symbol' 'Unicode BMP only' 'ShiftJIS' 'PRC' 'Big5' 'Wansung' 'Johab' 'Reserved' 'Reserved' 'Reserved' 'Unicode full repertoire')].	self platformID = 1 ifTrue: [		^#('Roman' 'Japanese' 'Chinese (Traditional)' 'Korean' 'Arabic' 'Hebrew' 'Greek' 'Russian' 'RSymbol' 'Devanagari' 'Gurmukhi' 'Gujarati' 'Oriya' 'Bengali' 'Tamil' 'Telugu' 'Kannada' 'Malayalam' 'Sinhalese' 'Burmese' 'Khmer' 'Thai' 'Laotian' 'Georgian' 'Armenian' 'Chinese (Simplified)' 'Tibetan' 'Mongolian' 'Geez' 'Slavic' 'Vietnamese' 'Sindhi' 'Uninterpreted')].	self platformID = 0 ifTrue: [		^#('Unicode 1.0 semantics' 'Unicode 1.1 semantics' 'ISO 10646:1993 semantics' 'Unicode 2.0 and onwards semantics, Unicode BMP only.' 'Unicode 2.0 and onwards semantics, Unicode full repertoire.')].	^#()</body><body package="OpenType">languageID	"&lt;Integer&gt;"	^languageID</body><body package="OpenType">nameID	"&lt;Integer&gt;"	^nameID</body><body package="OpenType">platformID	"&lt;Integer&gt;"	^platformID</body><body package="OpenType">platformString	"&lt;String&gt;"	^self platformStrings at: self platformID + 1</body><body package="OpenType">platformStrings	"&lt;Array of: String&gt;"	^#('Unicode' 'Macintosh' 'ISO' 'Microsoft' 'Custom')</body><body package="OpenType">shortDescription	"&lt;String&gt;"	^self class shortNameIdDescriptions at: self nameID ifAbsent: ['no description']</body><body package="OpenType">string	"&lt;String&gt;"	(self platformID = 3 and: [	self encodingID = 1]) ifTrue: [			| copy |			copy := self bytes copy.			copy twoByteEndiannessSwap.			^copy asStringEncoding: #UTF16].	(self platformID = 1 and: [	self encodingID = 0]) ifTrue: [			^self bytes asStringEncoding: #'iso8859-1'].	^self bytes asStringEncoding: #default</body></methods><methods><class-id>Graphics.Fonts.OpenType.NameRecord</class-id> <category>printing</category><body package="OpenType">printOn: stream	stream		nextPutAll: self class name asString;		nextPut: $[;		nextPutAll: self platformString;		nextPut: $—;		nextPutAll: self encodingString;		nextPut: $—;		nextPutAll: self languageID printString;		nextPut: $—;		nextPutAll: self nameID printString;		nextPut: $(;		nextPutAll: self shortDescription;		nextPut: $);		nextPut: $];		nextPutAll: self string</body><body package="OpenType">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'platformID' value: self platformID).	args add: (printer constant: 'encodingID' value: self encodingID).	args add: (printer constant: 'languageID' value: self languageID).	args add: (printer constant: 'nameID' value: self nameID).	args add: (printer constant: 'bytes' value: self bytes).	^printer printvalue: self arguments: args</body></methods><methods><class-id>Graphics.Fonts.OpenType.NameRecord</class-id> <category>initialize-release</category><body package="OpenType">initializePlatformID: platformIDSmallInteger encodingID: encodingIDSmallInteger languageID: languageIDSmallInteger nameID: nameIDSmallInteger bytes: bytesByteArray	platformID := platformIDSmallInteger.	encodingID := encodingIDSmallInteger.	languageID := languageIDSmallInteger.	nameID := nameIDSmallInteger.	bytes := bytesByteArray.	self beImmutable</body></methods><methods><class-id>Graphics.Fonts.OpenType.NameRecord class</class-id> <category>accessing</category><body package="OpenType">nameIdDescriptions	"self nameIdDescriptions"	| dict |	dict := IdentityDictionary new.	dict at: 0 put: 'Copyright notice.'.	dict at: 1 put: 'Font Family name. Up to four fonts can share the Font Family name, forming a font style linking group (regular, italic, bold, bold italic - as defined by OS/2.fsSelection bit settings).'.	dict at: 2 put: 'Font Subfamily name. The Font Subfamily name distiguishes the font in a group with the same Font Family name (name ID 1). This is assumed to address style (italic, oblique) and weight (light, bold, black, etc.). A font with no particular differences in weight or style (e.g. medium weight, not italic and fsSelection bit 6 set) should have the string "Regular" stored in this position.'.	dict at: 3 put: 'Unique font identifier'.	dict at: 4 put: 'Full font name; this should be a combination of strings 1 and 2. Exception: if the font is "Regular" as indicated in string 2, then use only the family name contained in string 1.An exception to the above definition of Full font name is for Microsoft platform strings for CFF OpenType fonts: in this case, the Full font name string must be identical to the PostScript FontName in the CFF Name INDEX.'.	dict at: 5 put: 'Version string. Should begin with the syntax ''Version &lt;number&gt;.&lt;number&gt;'' (upper case, lower case, or mixed, with a space between "Version" and the number).The string must contain a version number of the following form: one or more digits (0-9) of value less than 65,535, followed by a period, followed by one or more digits of value less than 65,535. Any character other than a digit will terminate the minor number. A character such as ";" is helpful to separate different pieces of version information.The first such match in the string can be used by installation software to compare font versions. Note that some installers may require the string to start with "Version ", followed by a version number as above.'.	dict at: 6 put: 'Postscript name for the font; Name ID 6 specifies a string which is used to invoke a PostScript language font that corresponds to this OpenType font. If no name ID 6 is present, then there is no defined method for invoking this font on a PostScript interpreter.OpenType fonts which include a name with name ID of 6 shall include these two names with name ID 6, and characteristics as follows:   1. Platform: 1 [Macintosh]; Platform-specific encoding: 0 [Roman]; Language: 0 [English].   2. Platform: 3 [Microsoft]; Platform-specific encoding: 1 [Unicode]; Language: 0x409 [English (American)]. Names with name ID 6 other than the above two, if present, must be ignored.When translated to ASCII, these two name strings must be identical; no longer than 63 characters; and restricted to the printable ASCII subset, codes 33 through 126, except for the 10 characters: ''['', '']'', ''('', '')'', ''{'', ''}'', ''&lt;'', ''&gt;'', ''/'', ''%''.In CFF OpenType fonts, these two name strings, when translated to ASCII, must also be identical to the font name as stored in the CFF''s Name INDEX.The term "PostScript Name" here means a string identical to the two identical name ID 6 strings described above.Depending on the particular font format that PostScript language font uses, the invocation method for the PostScript font differs, and the semantics of the resulting PostScript language font differ. The method used to invoke this font depends on the presence of name ID 20.If a name ID 20 is present in this font, then the default assumption should be that the PostScript Name defined by name ID 6 should be used with the "composefont" invocation. This PostScript Name is then the name of a PostScript language CIDFont resource which corresponds to the glyphs of the OpenType font. This name is valid to pass, with an appropriate PostScript language CMap reference, and an instance name, to the PostScript language "composefont" operator.If no name ID 20 is present in this font, then the default assumption should be that the PostScript Name defined by name ID 6 should be used with the "findfont" invocation, for locating the font in the context of a PostScript interpreter. This PostScript Name is then the name of a PostScript language Font resource which corresponds to the glyphs of the OpenType font. This name is valid to pass to the PostScript language "findfont" operator. Note that this does not necessarily imply that the resulting font dictionary accepts an /Encoding array, such as when the font referenced is a Type 0 PostScript font.Note that this specification applies only to data fork OpenType fonts. Macintosh resource-fork TrueType and other Macintosh sfnt-wrapped fonts supply the PostScript font name to be used with the "findfont" invocation, in order to invoke the font in a PostScript interpreter, in the FOND resource style-mapping table.Developers may choose to ignore the default usage when appropriate. For example, PostScript printers whose version is earlier than 2015 cannot process CID font resources, and a CJK OpenType/CFF-CID font can be downloaded only as a set of Type 1 PostScript fonts. Legacy CJK TrueType fonts, which do not have a name ID 20, may still be most effectively downloaded as a CID font resource. Definition of the full set of situations in which the defaults should not be followed is outside the scope of this document.'.	dict at: 7 put: 'Trademark; this is used to save any trademark notice/information for this font. Such information should be based on legal advice. This is distinctly separate from the copyright.'.	dict at: 8 put: 'Manufacturer Name.'.	dict at: 9 put: 'Designer; name of the designer of the typeface.'.	dict at: 10 put: 'Description; description of the typeface. Can contain revision information, usage recommendations, history, features, etc.'.	dict at: 11 put: 'URL Vendor; URL of font vendor (with protocol, e.g., http://, ftp://). If a unique serial number is embedded in the URL, it can be used to register the font.'.	dict at: 12 put: 'URL Designer; URL of typeface designer (with protocol, e.g., http://, ftp://).'.	dict at: 13 put: 'License Description; description of how the font may be legally used, or different example scenarios for licensed use. This field should be written in plain language, not legalese.'.	dict at: 14 put: 'License Info URL; URL where additional licensing information can be found.'.	dict at: 15 put: 'Reserved; Set to zero.'.	dict at: 16 put: 'Preferred Family; For historical reasons, font families have contained a maximum of four styles, but font designers may group more than four fonts to a single family. The Preferred Family allows font designers to include the preferred family grouping which contains more than four fonts. This ID is only present if it is different from ID 1.'.	dict at: 17 put: 'Preferred Subfamily; Allows font designers to include the preferred subfamily grouping that is more descriptive than ID 2. This ID is only present if it is different from ID 2 and must be unique for the the Preferred Family.'.	dict at: 18 put: 'Compatible Full (Macintosh only); On the Macintosh, the menu name is constructed using the FOND resource. This usually matches the Full Name. If you want the name of the font to appear differently than the Full Name, you can insert the Compatible Full Name in ID 18.'.	dict at: 19 put: 'Sample text; This can be the font name, or any other text that the designer thinks is the best sample to display the font in.'.	dict at: 20 put: 'PostScript CID findfont name; Its presence in a font means that the nameID 6 holds a PostScript font name that is meant to be used with the "composefont" invocation in order to invoke the font in a PostScript interpreter. See the definition of name ID 6.The value held in the name ID 20 string is interpreted as a PostScript font name that is meant to be used with the "findfont" invocation, in order to invoke the font in a PostScript interpreter.If the name ID 20 is present in a font, there must be one name ID 20 record for every Macintosh platform cmap subtable in that font. A particular name ID 20 record is associated with the encoding specified by the matching cmap subtable. A name ID 20 record is matched to a cmap subtable when they have the same platform and platform-specific encoding IDs, and corresponding language/version IDs. Name ID 20 records are meant to be used only with Macintosh cmap subtables. The version field for a cmap subtable is one more than the language ID value for the corresponding name ID 20 record, with the exception of the cmap subtable version field 0. This version field, meaning "not language-specific", corresponds to the language ID value 0xFFFF, or decimal 65535, for the corresponding name ID 20 record.When translated to ASCII, this name string must be restricted to the printable ASCII subset, codes 33 through 126, except for the 10 characters: ''['', '']'', ''('', '')'', ''{'', ''}'', ''&lt;'', ''&gt;'', ''/'', ''%''.Note that this specification applies only to data fork OpenType fonts. Macintosh resource-fork TrueType and other Macintosh sfnt-wrapped fonts supply the PostScript font name to be used with the "findfont" invocation, in order to invoke the font in a PostScript interpreter, in the FOND resource style-mapping table.Note that a particular Name ID 20 string always corresponds to a particular Macintosh cmap subtable. However, some host OpenType/TTF fonts also contain a post table, format 4, which provides a mapping from glyph ID to encoding value, and also corresponds to a particular Macintosh cmap subtable. Unfortunately, the post table format 4 contains no provision for identifying which Macintosh cmap subtable it matches, nor for providing more than one mapping. Host fonts which contain a post table format 4, should also contain only a single Macintosh cmap subtable, and a single Name ID 20 string. In the case where there is more than one Macintosh cmap subtable and more than one Name ID 20 string, there is no definition of which one matches the post table format 4.'.	^dict</body><body package="OpenType">shortNameIdDescriptions	"self shortNameIdDescriptions"	| dict |	dict := IdentityDictionary new.	dict at: 0 put: 'Copyright'.	dict at: 1 put: 'Font Family'.	dict at: 2 put: 'Font Subfamily'.	dict at: 3 put: 'Unique font identifier'.	dict at: 4 put: 'Full font name'.	dict at: 5 put: 'Version'.	dict at: 6 put: 'Postscript name'.	dict at: 7 put: 'Trademark'.	dict at: 8 put: 'Manufacturer'.	dict at: 9 put: 'Designer'.	dict at: 10 put: 'Description'.	dict at: 11 put: 'URL Vendor'.	dict at: 12 put: 'URL Designer'.	dict at: 13 put: 'License'.	dict at: 14 put: 'License Info URL'.	dict at: 15 put: 'Reserved'.	dict at: 16 put: 'Preferred Family'.	dict at: 17 put: 'Preferred Subfamily'.	dict at: 18 put: 'Compatible Full (Macintosh only)'.	dict at: 19 put: 'Sample text'.	dict at: 20 put: 'PostScript CID findfont name'.	^dict</body></methods><methods><class-id>Graphics.Fonts.OpenType.NameRecord class</class-id> <category>instance creation</category><body package="OpenType">platformID: platformIDSmallInteger encodingID: encodingIDSmallInteger languageID: languageIDSmallInteger nameID: nameIDSmallInteger bytes: bytesByteArray	| inst |	inst := self new.	inst		initializePlatformID: platformIDSmallInteger		encodingID: encodingIDSmallInteger		languageID: languageIDSmallInteger		nameID: nameIDSmallInteger		bytes: bytesByteArray.	^inst</body></methods><methods><class-id>Graphics.Fonts.OpenType.NameRecord class</class-id> <category>test instances</category><body package="Fonts test resources">example	^NameRecord		platformID: 1		encodingID: 1		languageID: 1		nameID: 1		bytes: #[97 32 115 116 114 105 110 103]</body></methods><methods><class-id>Graphics.Fonts.OpenType.Jstf class</class-id> <category>accessing</category><body package="Fonts UI Support">documentation	^'The Justification table (JSTF) provides font developers with additional control over glyph substitution and positioning in justified text. Text-processing clients now have more options to expand or shrink word and glyph spacing so text fills the specified line length.'</body><body package="OpenType">tag	^'JSTF'</body><body package="Fonts UI Support">title	^'The Justification Table'</body></methods><methods><class-id>Graphics.Fonts.OpenType.Head</class-id> <category>accessing</category><body package="OpenType">checkSumAdjustment	"ULONG 	checkSumAdjustment 	To compute: set it to 0, sum the entire font as ULONG, then store 0xB1B0AFBA - sum."	^self bytes unsignedLongAt: 9 bigEndian: true</body><body package="OpenType">created	"&lt;Timestamp&gt;"	"LONGDATETIME 	created 	Number of seconds since 12:00 midnight that started January 1st 1904 in GMT/UTC time zone. 64-bit integer"	^Timestamp fromLongDateTime: (self bytes longLongAt: 21 bigEndian: true)</body><body package="Fonts UI Support">descriptionText	| wst value |	wst := TextStream on: (String new: 200).	value := FontHeader fromBytes: self contents.	wst nextPutAllText: value asDescription.	^wst contents</body><body package="OpenType">flags	"USHORT 	flags 	Bit 0: Baseline for font at y=0;Bit 1: Left sidebearing point at x=0;Bit 2: Instructions may depend on point size;Bit 3: Force ppem to integer values for all internal scaler math; may use fractional ppem sizes if this bit is clear;Bit 4: Instructions may alter advance width (the advance widths might not scale linearly);Bits 5-10: These should be set according to Apple's specification . However, they are not implemented in OpenType.Bit 11: Font data is ‘lossless’ as a results of having been subjected to optimizing transformation and/or compression (such as e.g. compression mechanisms defined by ISO/IEC 14496-18, MicroType Express, WOFF 2.0 or similar) where the original font functionality and features are retained but the binary compatibility between input and output font files is not guaranteed. As a result of the applied transform, the ‘DSIG’ Table may also be invalidated.Bit 12: Font converted (produce compatible metrics)Bit 13: Font optimized for ClearType™. Note, fonts that rely on embedded bitmaps (EBDT) for rendering should not be considered optimized for ClearType, and therefore should keep this bit cleared.Bit 14: Last Resort font. If set, indicates that the glyphs encoded in the cmap subtables are simply generic symbolic representations of code point ranges and don’t truly represent support for those code points. If unset, indicates that the glyphs encoded in the cmap subtables represent proper support for those code points.Bit 15: Reserved, set to 0 "	^self bytes unsignedShortAt: 17 bigEndian: true</body><body package="OpenType">fontBBox	^self xMin @ self yMin corner: self xMax @ self yMax</body><body package="OpenType">fontDirectionHint	"SHORT 	fontDirectionHint 	Deprecated (Set to 2).0: Fully mixed directional glyphs;1: Only strongly left to right;2: Like 1 but also contains neutrals;-1: Only strongly right to left;-2: Like -1 but also contains neutrals. 1"	^self bytes shortAt: 49 bigEndian: true</body><body package="OpenType">glyphDataFormat	"SHORT 	glyphDataFormat 	0 for current format."	^self bytes shortAt: 53 bigEndian: true</body><body package="OpenType">indexToLocFormat	"SHORT 	indexToLocFormat 	0 for short offsets, 1 for long."	^self bytes shortAt: 51 bigEndian: true</body><body package="OpenType">lowestRecPPEM	"USHORT 	lowestRecPPEM 	Smallest readable size in pixels."	^self bytes unsignedShortAt: 47 bigEndian: true</body><body package="OpenType">macStyle	"USHORT 	macStyle 	Bit 0: Bold (if set to 1);Bit 1: Italic (if set to 1)Bit 2: Underline (if set to 1)Bit 3: Outline (if set to 1)Bit 4: Shadow (if set to 1)Bit 5: Condensed (if set to 1)Bit 6: Extended (if set to 1)Bits 7-15: Reserved (set to 0)."	^self bytes unsignedShortAt: 45 bigEndian: true</body><body package="OpenType">magicNumber	"ULONG 	magicNumber 	Set to 0x5F0F3CF5."	^self bytes unsignedLongAt: 13 bigEndian: true</body><body package="OpenType">modified	"&lt;Timestamp&gt;"	"LONGDATETIME 	modified 	Number of seconds since 12:00 midnight that started January 1st 1904 in GMT/UTC time zone. 64-bit integer"	^Timestamp fromLongDateTime: (self bytes longLongAt: 29 bigEndian: true)</body><body package="OpenType">unitsPerEm	"USHORT 	unitsPerEm 	Valid range is from 16 to 16384. This value should be a power of 2 for fonts that have TrueType outlines."	^self bytes unsignedShortAt: 19 bigEndian: true</body><body package="OpenType">xMax	"SHORT 	xMax 	For all glyph bounding boxes."	^self bytes shortAt: 41 bigEndian: true</body><body package="OpenType">xMin	"SHORT 	xMin 	For all glyph bounding boxes."	^self bytes shortAt: 37 bigEndian: true</body><body package="OpenType">yMax	"SHORT 	yMax 	For all glyph bounding boxes."	^self bytes shortAt: 43 bigEndian: true</body><body package="OpenType">yMin	"SHORT 	yMin 	For all glyph bounding boxes."	^self bytes shortAt: 39 bigEndian: true</body></methods><methods><class-id>Graphics.Fonts.OpenType.Head class</class-id> <category>accessing</category><body package="Fonts UI Support">documentation	^'This table gives global information about the font. The bounding box values should be computed using only glyphs that have contours. Glyphs with no contours should be ignored for the purposes of these calculations.'</body><body package="OpenType">tag	^'head'</body><body package="Fonts UI Support">title	^'Font Header'</body></methods><methods><class-id>Graphics.Fonts.OpenType.Name</class-id> <category>accessing</category><body package="OpenType">count	"USHORT  	count  	Number of name records."	^self bytes unsignedShortAt: 3 bigEndian: true</body><body package="Fonts UI Support">descriptionText	| wst |	wst := TextStream on: (String new: 200).	wst		nextPutAll: 'format: ';		emphasis: #(#bold);		nextPutAll: self format printString;		emphasis: nil.	self nameRecords do: [:record |		wst			cr;			nextPut: $[;			nextPutAll: record platformString;			nextPut: $—;			nextPutAll: record encodingString;			nextPut: $—;			nextPutAll: record languageID printString;			nextPut: $—;			nextPutAll: record nameID printString;			nextPut: $(;			nextPutAll: record shortDescription;			nextPut: $);			nextPut: $];			tab;			emphasis: #(#bold);			nextPutAll: record string;			emphasis: nil].	^wst contents</body><body package="OpenType">format	"USHORT  	format  	Format selector (=0)."	^self bytes unsignedShortAt: 1 bigEndian: true</body><body package="OpenType">nameAt: nameId	"&lt;String | nil&gt;	returns a string from the names table with ID nameId.	Incoplete implementation (should be able to map language and encoding IDs properly).	So, you may not get the string in the correct encoding/language, 	but if there is a string with the right ID, one of its variants will be returned."	| allNames platformNames |	allNames := self nameRecords select: [:nameRecord | nameRecord nameID = nameId].	allNames isEmpty ifTrue: [		^nil].	platformNames := allNames select: [:nameRecord | nameRecord platformID = self platformID].	platformNames isEmpty ifTrue: [		^allNames first string].	^platformNames first string</body><body package="OpenType">nameRecords	"&lt;SequenceableCollection of: NameRecord&gt;	NameRecord  	nameRecord[count]  	The name records where count is the number of records."	| length start stringOffset |	stringOffset := self stringOffset.	^(1 to: self count) collect: [:i |		| offset bytes |		offset := 7 + (12 * (i - 1)).		bytes := UninterpretedBytes from: (self contents copyFrom: offset to: offset + 11).		length := bytes unsignedShortAt: 9 bigEndian: true.		start := stringOffset + (bytes unsignedShortAt: 11 bigEndian: true).		NameRecord			platformID: (bytes unsignedShortAt: 1 bigEndian: true)			encodingID: (bytes unsignedShortAt: 3 bigEndian: true)			languageID: (bytes unsignedShortAt: 5 bigEndian: true)			nameID: (bytes unsignedShortAt: 7 bigEndian: true)			bytes: (self contents copyFrom: start + 1 to: start + length)]</body><body package="OpenType">stringOffset	"USHORT  	stringOffset  	Offset to start of string storage (from start of table)."	^self bytes unsignedShortAt: 5 bigEndian: true</body></methods><methods><class-id>Graphics.Fonts.OpenType.Name class</class-id> <category>accessing</category><body package="Fonts UI Support">documentation	^'The naming table allows multilingual strings to be associated with the OpenTypeTM font file. These strings can represent copyright notices, font names, family names, style names, and so on. To keep this table short, the font manufacturer may wish to make a limited set of entries in some small set of languages; later, the font can be "localized" and the strings translated or added. Other parts of the OpenType font file that require these strings can then refer to them simply by their index number. Clients that need a particular string can look it up by its platform ID, character encoding ID, language ID and name ID. Note that some platforms may require single byte character strings, while others may require double byte strings.'</body><body package="OpenType">tag	^'name'</body><body package="Fonts UI Support">title	^'Naming Table'</body></methods><methods><class-id>Graphics.Fonts.OpenType.Maxp</class-id> <category>accessing</category><body package="Fonts UI Support">descriptionText	| wst |	wst := TextStream on: (String new: 200).	wst		nextPutAll: '(Only Version 0.5 implemented)';		cr.	self printAttribute: #version on: wst.	self printAttribute: #numGlyphs on: wst.	wst		cr;		cr;		emphasis: nil;		nextPutAll: 'Bytes: ';		nextPutAll: self contents printString.	^wst contents</body><body package="OpenType">numGlyphs	"USHORT 	The number of glyphs in the font."	^self bytes unsignedShortAt: 5 bigEndian: true</body><body package="OpenType">version	"Fixed 	Table version number		0x00005000 for version 0.5 	(Note the difference in the representation of a non-zero fractional part, in Fixed numbers.)		0x00010000 for version 1.0."	| major minor |	major := self bytes unsignedShortAt: 1 bigEndian: true.	minor := self bytes unsignedShortAt: 3 bigEndian: true.	(major isZero and: [minor = 16r5000]) ifTrue: [		^0.5].	(major = 1 and: [minor isZero]) ifTrue: [		^1.0].	^self error: 'invalid version number'</body></methods><methods><class-id>Graphics.Fonts.OpenType.Maxp class</class-id> <category>accessing</category><body package="Fonts UI Support">documentation	^'This table establishes the memory requirements for this font. Fonts with CFF data must use Version 0.5 of this table, specifying only the numGlyphs field. Fonts with TrueType outlines must use Version 1.0 of this table, where all data is required.'</body><body package="OpenType">tag	^'maxp'</body><body package="Fonts UI Support">title	^'Maximum Profile'</body></methods><methods><class-id>Graphics.Fonts.FontEncodingTest</class-id> <category>Testing</category><body package="Fonts tests">testDecoderDifferenceToISO8859_1	| fontEncoder isoEncoder inFontButNotInIso inIsoButNotInFont inFontButNotInIsoString inIsoButNotInFontString |	fontEncoder := (FontBody named: 'Helvetica') encoder.	isoEncoder := StreamEncoder lookupEncoderDirectory: #ISO8859_1.	inFontButNotInIso := fontEncoder decoder asSet - isoEncoder decoder asSet.	inIsoButNotInFont := isoEncoder decoder asSet - fontEncoder decoder asSet.	inFontButNotInIsoString := String fromString: inFontButNotInIso asSortedCollection.	inIsoButNotInFontString := String fromString: inIsoButNotInFont asSortedCollection.	self assert: inFontButNotInIsoString = 'ŒœŠšŸŽžƒˆ˜–—‘’‚“”„†‡•…‰‹›€™￿'.	self deny: inIsoButNotInFontString = ' 	''` ¤¦­²³µ¹¼½¾Ð×ÝÞðýþ'</body><body package="Fonts tests">testDifferenceToISO8859_1	| fontEncoder isoEncoder inFontButNotInIso inIsoButNotInFont |	fontEncoder := (FontBody named: 'Helvetica') encoder.	isoEncoder := StreamEncoder lookupEncoderDirectory: #ISO8859_1.	inFontButNotInIso := fontEncoder encoder - isoEncoder encoder.	inIsoButNotInFont := isoEncoder encoder - fontEncoder encoder.	self assert: inFontButNotInIso isEmpty.	self deny: inIsoButNotInFont isEmpty</body><body package="Fonts tests">testISO8859_15Encoder	| wst string |	wst := ((ByteArray new: 1000) withEncoding: #ISO8859_15) writeStream.	"isoEncoder := StreamEncoder lookupEncoderDirectory: #ISO8859_15."	wst nextPutAll: 'äöüÄÖÜß€'.	string := wst encodedContents asStringEncoding: #ISO8859_15.	self assert: string = 'äöüÄÖÜß€'</body><body package="Fonts tests">testSomeSymbolicEncodings	| font |	font := FontBody named: 'Helvetica'.	self assert: (font encodeSymbolic: $Ä) = #Adieresis.	self assert: (font encodeSymbolic: $ä) = #adieresis.	self assert: (font encodeSymbolic: $Ö) = #Odieresis.	self assert: (font encodeSymbolic: $ö) = #odieresis.	self assert: (font encodeSymbolic: $Ü) = #Udieresis.	self assert: (font encodeSymbolic: $ü) = #udieresis.	self assert: (font encodeSymbolic: $ß) = #germandbls.	self assert: (font encodeSymbolic: 16r20AC asCharacter) = #Euro.	self assert: (font encodeSymbolic: $€) = #Euro</body><body package="Fonts tests">testSymbolicEncoding	| font decodingArray list wst psEncoding |	font := FontBody named: 'Helvetica'.	decodingArray := font encoder decoder.	list := OrderedCollection new: 128.	129 to: 256 do: [:char |		| symb |		symb := font encodeSymbolic: (decodingArray at: char).		symb isNil			ifTrue: [list add: #space]			ifFalse: [list add: symb]].	wst := WriteStream on: (String new: 1000).	list do: [:symbol |		wst nextPut: $/.		wst nextPutAll: symbol asString].	psEncoding := wst contents.	self assert: psEncoding = '/Euro/space/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/space/Zcaron/space/space/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/space/zcaron/Ydieresis/space/exclamdown/cent/sterling/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/space/registered/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis'</body><body package="Fonts tests">testSymbolicEncodingsSymbol	| font |	[font := FontBody named: 'Symbol'] on: KeyNotFoundError do: [:ex |		^self].	self assert: (font encodeSymbolic: $Ä) isNil.	self assert: (font encodeSymbolic: $ä) isNil.	self assert: (font encodeSymbolic: $Ö) isNil.	self assert: (font encodeSymbolic: $ö) isNil.	self assert: (font encodeSymbolic: $Ü) isNil.	self assert: (font encodeSymbolic: $ü) isNil.	self assert: (font encodeSymbolic: $ß) isNil.	self assert: (font encodeSymbolic: 16r20AC asCharacter) = #Euro.	self assert: (font encodeSymbolic: $€) = #Euro</body></methods><methods><class-id>WindowsFonts.Family class</class-id> <category>instances</category><body package="Fonts for Windows">decorative	"Old English, etc."	^Family name: 'Decorative' value: 5 &lt;&lt; 4</body><body package="Fonts for Windows">dontCare	"Don't care or don't know."	^Family name: 'dont care' value: 0 &lt;&lt; 4</body><body package="Fonts for Windows">modern	"Constant stroke width, serifed or sans-serifed. Pica, Elite, Courier, etc."	^Family name: 'Modern' value: 3 &lt;&lt; 4</body><body package="Fonts for Windows">roman	"Variable stroke width, serifed. Times Roman, Century Schoolbook, etc."	^Family name: 'Roman' value: 1 &lt;&lt; 4</body><body package="Fonts for Windows">script	"Cursive, etc."	^Family name: 'Script' value: 4 &lt;&lt; 4</body><body package="Fonts for Windows">swiss	"Variable stroke width, sans-serifed. Helvetica, Swiss, etc."	^Family name: 'Swiss' value: 2 &lt;&lt; 4</body></methods><methods><class-id>WindowsFonts.Family class</class-id> <category>accessing</category><body package="Fonts for Windows">all	"&lt;SequenceableCollection of: Family&gt;"	| instances |	instances := OrderedCollection new.	instances add: self dontCare.	instances add: self roman.	instances add: self swiss.	instances add: self modern.	instances add: self script.	instances add: self decorative.	^instances</body></methods><methods><class-id>WindowsFonts.Family class</class-id> <category>test instances</category><body package="Fonts for Windows">example	^Family name: 'dont care' value: 0</body></methods><methods><class-id>WindowsFonts.UnicodeSubset</class-id> <category>accessing</category><body package="Fonts for Windows">bit	"&lt;Integer&gt;"	^bit</body><body package="Fonts for Windows">description	"&lt;String&gt;"	^description</body><body package="Fonts for Windows">from	"&lt;Integer&gt;"	^from</body><body package="Fonts for Windows">mask	"&lt;Integer&gt;"	^2 ** (127 - self bit)</body><body package="Fonts for Windows">to	"&lt;Integer&gt;"	^to</body></methods><methods><class-id>WindowsFonts.UnicodeSubset</class-id> <category>testing</category><body package="Fonts for Windows">hasRange	^self from notNil and: [	self to notNil]</body></methods><methods><class-id>WindowsFonts.UnicodeSubset</class-id> <category>printing</category><body package="Fonts for Windows">printvalueWith: printer	| args |	args := OrderedCollection new.	args add: (printer constant: 'bit' value: self bit).	args add: (printer constant: 'from' value: self from).	args add: (printer constant: 'to' value: self to).	args add: (printer constant: 'description' value: self description).	^printer printvalue: self arguments: args</body></methods><methods><class-id>WindowsFonts.UnicodeSubset</class-id> <category>initialize-release</category><body package="Fonts for Windows">initializeBit: bitInteger from: fromInteger to: toInteger description: descriptionString	bit := bitInteger.	from := fromInteger.	to := toInteger.	description := descriptionString.	self beImmutable</body></methods><methods><class-id>WindowsFonts.UnicodeSubset class</class-id> <category>test instances</category><body package="Fonts for Windows">example	^UnicodeSubset bit: 1 from: 1 to: 1 description: 'a string'</body></methods><methods><class-id>WindowsFonts.UnicodeSubset class</class-id> <category>accessing</category><body package="Fonts for Windows">bitfields	"&lt;SequenceableCollection of: UnicodeSubset&gt;"	"self bitfields"	| subsets |	subsets := OrderedCollection new.	subsets add: (UnicodeSubset bit: 0 from: 0 to: 16r007F description: 'Basic Latin').	subsets add: (UnicodeSubset bit: 1 from: 16r0080 to: 16r00FF description: 'Latin-1 Supplement').	subsets add: (UnicodeSubset bit: 2 from: 16r0100 to: 16r017F description: 'Latin Extended-A').	subsets add: (UnicodeSubset bit: 3 from: 16r0180 to: 16r024F description: 'Latin Extended-B').	subsets add: (UnicodeSubset bit: 4 from: 16r0250 to: 16r02AF description: 'IPA Extensions').	subsets add: (UnicodeSubset bit: 4 from: 16r1D00 to: 16r1D7F description: 'Phonetic Extensions').	subsets add: (UnicodeSubset bit: 4 from: 16r1D80 to: 16r1DBF description: 'Phonetic Extensions Supplement').	subsets add: (UnicodeSubset bit: 5 from: 16r02B0 to: 16r02FF description: 'Spacing Modifier Letters').	subsets add: (UnicodeSubset bit: 5 from: 16rA700 to: 16rA71F description: 'Modifier Tone Letters').	subsets add: (UnicodeSubset bit: 6 from: 16r0300 to: 16r036F description: 'Combining Diacritical Marks').	subsets add: (UnicodeSubset bit: 6 from: 16r1DC0 to: 16r1DFF description: 'Combining Diacritical Marks Supplement').	subsets add: (UnicodeSubset bit: 7 from: 16r0370 to: 16r03FF description: 'Greek and Coptic').	subsets add: (UnicodeSubset bit: 8 from: 16r2C80 to: 16r2CFF description: 'Coptic').	subsets add: (UnicodeSubset bit: 9 from: 16r0400 to: 16r04FF description: 'Cyrillic').	subsets add: (UnicodeSubset bit: 9 from: 16r0500 to: 16r052F description: 'Cyrillic Supplementary').	subsets add: (UnicodeSubset bit: 10 from: 16r0530 to: 16r058F description: 'Armenian').	subsets add: (UnicodeSubset bit: 11 from: 16r0590 to: 16r05FF description: 'Hebrew').	subsets add: (UnicodeSubset bit: 12 description: 'Reserved').	subsets add: (UnicodeSubset bit: 13 from: 16r0600 to: 16r06FF description: 'Arabic').	subsets add: (UnicodeSubset bit: 13 from: 16r0750 to: 16r077F description: 'Arabic Supplement').	subsets add: (UnicodeSubset bit: 14 from: 16r07C0 to: 16r07FF description: 'N''Ko').	subsets add: (UnicodeSubset bit: 15 from: 16r0900 to: 16r097F description: 'Devanagari').	subsets add: (UnicodeSubset bit: 16 from: 16r0980 to: 16r09FF description: 'Bengali').	subsets add: (UnicodeSubset bit: 17 from: 16r0A00 to: 16r0A7F description: 'Gurmukhi').	subsets add: (UnicodeSubset bit: 18 from: 16r0A80 to: 16r0AFF description: 'Gujarati').	subsets add: (UnicodeSubset bit: 19 from: 16r0B00 to: 16r0B7F description: 'Oriya').	subsets add: (UnicodeSubset bit: 20 from: 16r0B80 to: 16r0BFF description: 'Tamil').	subsets add: (UnicodeSubset bit: 21 from: 16r0C00 to: 16r0C7F description: 'Telugu').	subsets add: (UnicodeSubset bit: 22 from: 16r0C80 to: 16r0CFF description: 'Kannada').	subsets add: (UnicodeSubset bit: 23 from: 16r0D00 to: 16r0D7F description: 'Malayalam').	subsets add: (UnicodeSubset bit: 24 from: 16r0E00 to: 16r0E7F description: 'Thai').	subsets add: (UnicodeSubset bit: 25 from: 16r0E80 to: 16r0EFF description: 'Lao').	subsets add: (UnicodeSubset bit: 26 from: 16r10A0 to: 16r10FF description: 'Georgian').	subsets add: (UnicodeSubset bit: 26 from: 16r2D00 to: 16r2D2F description: 'Georgian Supplement').	subsets add: (UnicodeSubset bit: 27 from: 16r1B00 to: 16r1B7F description: 'Balinese').	subsets add: (UnicodeSubset bit: 28 from: 16r1100 to: 16r11FF description: 'Hangul Jamo').	subsets add: (UnicodeSubset bit: 29 from: 16r1E00 to: 16r1EFF description: 'Latin Extended Additional').	subsets add: (UnicodeSubset bit: 29 from: 16r2C60 to: 16r2C7F description: 'Latin Extended-C').	subsets add: (UnicodeSubset bit: 29 from: 16rA720 to: 16rA7FF description: 'Latin Extended-D').	subsets add: (UnicodeSubset bit: 30 from: 16r1F00 to: 16r1FFF description: 'Greek Extended').	subsets add: (UnicodeSubset bit: 31 from: 16r2000 to: 16r206F description: 'General Punctuation').	subsets add: (UnicodeSubset bit: 31 from: 16r2E00 to: 16r2E7F description: 'Supplemental Punctuation').	subsets add: (UnicodeSubset bit: 32 from: 16r2070 to: 16r209F description: 'Superscripts and Subscripts').	subsets add: (UnicodeSubset bit: 33 from: 16r20A0 to: 16r20CF description: 'Currency Symbols').	subsets add: (UnicodeSubset bit: 34 from: 16r20D0 to: 16r20FF description: 'Combining Diacritical Marks for Symbols').	subsets add: (UnicodeSubset bit: 35 from: 16r2100 to: 16r214F description: 'Letterlike Symbols').	subsets add: (UnicodeSubset bit: 36 from: 16r2150 to: 16r218F description: 'Number Forms').	subsets add: (UnicodeSubset bit: 37 from: 16r2190 to: 16r21FF description: 'Arrows').	subsets add: (UnicodeSubset bit: 37 from: 16r27F0 to: 16r27FF description: 'Supplemental Arrows-A').	subsets add: (UnicodeSubset bit: 37 from: 16r2900 to: 16r297F description: 'Supplemental Arrows-B').	subsets add: (UnicodeSubset bit: 37 from: 16r2B00 to: 16r2BFF description: 'Miscellaneous Symbols and Arrows').	subsets add: (UnicodeSubset bit: 38 from: 16r2200 to: 16r22FF description: 'Mathematical Operators').	subsets add: (UnicodeSubset bit: 38 from: 16r27C0 to: 16r27EF description: 'Miscellaneous Mathematical Symbols-A').	subsets add: (UnicodeSubset bit: 38 from: 16r2980 to: 16r29FF description: 'Miscellaneous Mathematical Symbols-B').	subsets add: (UnicodeSubset bit: 38 from: 16r2A00 to: 16r2AFF description: 'Supplemental Mathematical Operators').	subsets add: (UnicodeSubset bit: 39 from: 16r2300 to: 16r23FF description: 'Miscellaneous Technical').	subsets add: (UnicodeSubset bit: 40 from: 16r2400 to: 16r243F description: 'Control Pictures').	subsets add: (UnicodeSubset bit: 41 from: 16r2440 to: 16r245F description: 'Optical Character Recognition').	subsets add: (UnicodeSubset bit: 42 from: 16r2460 to: 16r24FF description: 'Enclosed Alphanumerics').	subsets add: (UnicodeSubset bit: 43 from: 16r2500 to: 16r257F description: 'Box Drawing').	subsets add: (UnicodeSubset bit: 44 from: 16r2580 to: 16r259F description: 'Block Elements').	subsets add: (UnicodeSubset bit: 45 from: 16r25A0 to: 16r25FF description: 'Geometric Shapes').	subsets add: (UnicodeSubset bit: 46 from: 16r2600 to: 16r26FF description: 'Miscellaneous Symbols').	subsets add: (UnicodeSubset bit: 47 from: 16r2700 to: 16r27BF description: 'Dingbats').	subsets add: (UnicodeSubset bit: 48 from: 16r3000 to: 16r303F description: 'Chinese, Japanese, and Korean (CJK) Symbols and Punctuation').	subsets add: (UnicodeSubset bit: 49 from: 16r3040 to: 16r309F description: 'Hiragana').	subsets add: (UnicodeSubset bit: 50 from: 16r30A0 to: 16r30FF description: 'Katakana').	subsets add: (UnicodeSubset bit: 50 from: 16r31F0 to: 16r31FF description: 'Katakana Phonetic Extensions').	subsets add: (UnicodeSubset bit: 51 from: 16r3100 to: 16r312F description: 'Bopomofo').	subsets add: (UnicodeSubset bit: 51 from: 16r31A0 to: 16r31Bf description: 'Bopomofo Extended').	subsets add: (UnicodeSubset bit: 52 from: 16r3130 to: 16r318F description: 'Hangul Compatibility Jamo').	subsets add: (UnicodeSubset bit: 53 from: 16rA840 to: 16rA87F description: 'Phags-pa').	subsets add: (UnicodeSubset bit: 54 from: 16r3200 to: 16r32FF description: 'Enclosed CJK Letters and Months').	subsets add: (UnicodeSubset bit: 55 from: 16r3300 to: 16r33FF description: 'CJK Compatibility').	subsets add: (UnicodeSubset bit: 56 from: 16rAC00 to: 16rD7A3 description: 'Hangul Syllables').	subsets add: (UnicodeSubset bit: 57 from: 16rD800 to: 16rDFFF description: 'Surrogates. Note that setting this bit implies that there is at least one supplementary code point beyond the Basic Multilingual Plane (BMP) that is supported by this font. See Surrogates and Supplementary Characters.').	subsets add: (UnicodeSubset bit: 58 from: 16r10900 to: 16r1091F description: 'Phoenician').	subsets add: (UnicodeSubset bit: 59 from: 16r2E80 to: 16r2EFF description: 'CJK Radicals Supplement').	subsets add: (UnicodeSubset bit: 59 from: 16r2F00 to: 16r2FDF description: 'Kangxi Radicals').	subsets add: (UnicodeSubset bit: 59 from: 16r2FF0 to: 16r2FFF description: 'Ideographic Description Characters').	subsets add: (UnicodeSubset bit: 59 from: 16r3190 to: 16r319F description: 'Kanbun').	subsets add: (UnicodeSubset bit: 59 from: 16r3400 to: 16r4DBF description: 'CJK Unified Ideographs Extension A').	subsets add: (UnicodeSubset bit: 59 from: 16r4E00 to: 16r9FFF description: 'CJK Unified Ideographs').	subsets add: (UnicodeSubset bit: 59 from: 16r20000 to: 16r2A6DF description: 'CJK Unified Ideographs Extension B').	subsets add: (UnicodeSubset bit: 60 from: 16rE000 to: 16rF8FF description: 'Private Use (Plane 0)').	subsets add: (UnicodeSubset bit: 61 from: 16r31C0 to: 16r31EF description: 'CJK Strokes').	subsets add: (UnicodeSubset bit: 61 from: 16rF900 to: 16rFAFF description: 'CJK Compatibility Ideographs').	subsets add: (UnicodeSubset bit: 61 from: 16r2F800 to: 16r2FA1F description: 'CJK Compatibility Ideographs Supplement').	subsets add: (UnicodeSubset bit: 62 from: 16rFB00 to: 16rFB4F description: 'Alphabetic Presentation Forms').	subsets add: (UnicodeSubset bit: 63 from: 16rFB50 to: 16rFDFF description: 'Arabic Presentation Forms-A').	subsets add: (UnicodeSubset bit: 64 from: 16rFE20 to: 16rFE2F description: 'Combining Half Marks').	subsets add: (UnicodeSubset bit: 65 from: 16rFE10 to: 16rFE1F description: 'Vertical Forms').	subsets add: (UnicodeSubset bit: 65 from: 16rFE30 to: 16rFE4F description: 'CJK Compatibility Forms').	subsets add: (UnicodeSubset bit: 66 from: 16rFE50 to: 16rFE6F description: 'Small Form Variants').	subsets add: (UnicodeSubset bit: 67 from: 16rFE70 to: 16rFEFE description: 'Arabic Presentation Forms-B').	subsets add: (UnicodeSubset bit: 68 from: 16rFF00 to: 16rFFEF description: 'Halfwidth and Fullwidth Forms').	subsets add: (UnicodeSubset bit: 69 from: 16rFFF0 to: 16rFFFF description: 'Specials').	subsets add: (UnicodeSubset bit: 70 from: 16r0F00 to: 16r0FFF description: 'Tibetan').	subsets add: (UnicodeSubset bit: 71 from: 16r0700 to: 16r074F description: 'Syriac').	subsets add: (UnicodeSubset bit: 72 from: 16r0780 to: 16r07BF description: 'Thaana').	subsets add: (UnicodeSubset bit: 73 from: 16r0D80 to: 16r0DFF description: 'Sinhala').	subsets add: (UnicodeSubset bit: 74 from: 16r1000 to: 16r109F description: 'Myanmar').	subsets add: (UnicodeSubset bit: 75 from: 16r1200 to: 16r137F description: 'Ethiopic').	subsets add: (UnicodeSubset bit: 75 from: 16r1380 to: 16r139F description: 'Ethiopic Supplement').	subsets add: (UnicodeSubset bit: 75 from: 16r2D80 to: 16r2DDF description: 'Ethiopic Extended').	subsets add: (UnicodeSubset bit: 76 from: 16r13A0 to: 16r13FF description: 'Cherokee').	subsets add: (UnicodeSubset bit: 77 from: 16r1400 to: 16r167F description: 'Unified Canadian Aboriginal Syllabics').	subsets add: (UnicodeSubset bit: 78 from: 16r1680 to: 16r169F description: 'Ogham').	subsets add: (UnicodeSubset bit: 79 from: 16r16A0 to: 16r16FF description: 'Runic').	subsets add: (UnicodeSubset bit: 80 from: 16r1780 to: 16r17FF description: 'Khmer').	subsets add: (UnicodeSubset bit: 80 from: 16r19E0 to: 16r19FF description: 'Khmer Symbols').	subsets add: (UnicodeSubset bit: 81 from: 16r1800 to: 16r18AF description: 'Mongolian').	subsets add: (UnicodeSubset bit: 82 from: 16r2800 to: 16r28FF description: 'Braille Patterns').	subsets add: (UnicodeSubset bit: 83 from: 16rA000 to: 16rA48F description: 'Yi Syllables').	subsets add: (UnicodeSubset bit: 83 from: 16rA490 to: 16rA4CF description: 'Yi Radicals').	subsets add: (UnicodeSubset bit: 84 from: 16r1700 to: 16r171F description: 'Tagalog').	subsets add: (UnicodeSubset bit: 84 from: 16r1720 to: 16r173F description: 'Hanunoo').	subsets add: (UnicodeSubset bit: 84 from: 16r1740 to: 16r175F description: 'Buhid').	subsets add: (UnicodeSubset bit: 84 from: 16r1760 to: 16r177F description: 'Tagbanwa').	subsets add: (UnicodeSubset bit: 85 from: 16r10300 to: 16r1032F description: 'Old Italic').	subsets add: (UnicodeSubset bit: 86 from: 16r10330 to: 16r1034F description: 'Gothic').	subsets add: (UnicodeSubset bit: 87 from: 16r10400 to: 16r1044F description: 'Deseret').	subsets add: (UnicodeSubset bit: 88 from: 16r1D000 to: 16r1D0FF description: 'Byzantine Musical Symbols').	subsets add: (UnicodeSubset bit: 88 from: 16r1D100 to: 16r1D1FF description: 'Musical Symbols').	subsets add: (UnicodeSubset bit: 88 from: 16r1D200 to: 16r1D24F description: 'Ancient Greek Musical Notation').	subsets add: (UnicodeSubset bit: 89 from: 16r1D400 to: 16r1D7FF description: 'Mathematical Alphanumeric Symbols').	subsets add: (UnicodeSubset bit: 90 from: 16rFF000 to: 16rFFFFD description: 'Private Use (Plane 15)').	subsets add: (UnicodeSubset bit: 90 from: 16r100000 to: 16r10FFFD description: 'Private Use (Plane 16)').	subsets add: (UnicodeSubset bit: 91 from: 16rFE00 to: 16rFE0F description: 'Variation Selectors').	subsets add: (UnicodeSubset bit: 91 from: 16rE0100 to: 16rE01EF description: 'Variation Selectors Supplement').	subsets add: (UnicodeSubset bit: 92 from: 16rE0000 to: 16rE007F description: 'Tags').	subsets add: (UnicodeSubset bit: 93 from: 16r1900 to: 16r194F description: 'Limbu').	subsets add: (UnicodeSubset bit: 94 from: 16r1950 to: 16r197F description: 'Tai Le').	subsets add: (UnicodeSubset bit: 95 from: 16r1980 to: 16r19DF description: 'New Tai Lue').	subsets add: (UnicodeSubset bit: 96 from: 16r1A00 to: 16r1A1F description: 'Buginese').	subsets add: (UnicodeSubset bit: 97 from: 16r2C00 to: 16r2C5F description: 'Glagolitic').	subsets add: (UnicodeSubset bit: 98 from: 16r2D30 to: 16r2D7F description: 'Tifinagh').	subsets add: (UnicodeSubset bit: 99 from: 16r4DC0 to: 16r4DFF description: 'Yijing Hexagram Symbols').	subsets add: (UnicodeSubset bit: 100 from: 16rA800 to: 16rA82F description: 'Syloti Nagri').	subsets add: (UnicodeSubset bit: 101 from: 16r10000 to: 16r1007F description: 'Linear B Syllabary').	subsets add: (UnicodeSubset bit: 101 from: 16r10080 to: 16r100FF description: 'Linear B Ideograms').	subsets add: (UnicodeSubset bit: 101 from: 16r10100 to: 16r1013F description: 'Aegean Numbers').	subsets add: (UnicodeSubset bit: 102 from: 16r10140 to: 16r1018F description: 'Ancient Greek Numbers').	subsets add: (UnicodeSubset bit: 103 from: 16r10380 to: 16r1039F description: 'Ugaritic').	subsets add: (UnicodeSubset bit: 104 from: 16r103A0 to: 16r103DF description: 'Old Persian').	subsets add: (UnicodeSubset bit: 105 from: 16r10450 to: 16r1047F description: 'Shavian').	subsets add: (UnicodeSubset bit: 106 from: 16r10480 to: 16r104AF description: 'Osmanya').	subsets add: (UnicodeSubset bit: 107 from: 16r10800 to: 16r1083F description: 'Cypriot Syllabary').	subsets add: (UnicodeSubset bit: 108 from: 16r10A00 to: 16r10A5F description: 'Kharoshthi').	subsets add: (UnicodeSubset bit: 109 from: 16r1D300 to: 16r1D35F description: 'Tai Xuan Jing Symbols').	subsets add: (UnicodeSubset bit: 110 from: 16r12000 to: 16r123FF description: 'Cuneiform').	subsets add: (UnicodeSubset bit: 110 from: 16r12400 to: 16r1247F description: 'Cuneiform Numbers and Punctuation').	subsets add: (UnicodeSubset bit: 111 from: 16r1D360 to: 16r1D37F description: 'Counting Rod Numerals').	subsets add: (UnicodeSubset bit: 112 description: 'Reserved').	subsets add: (UnicodeSubset bit: 113 description: 'Reserved').	subsets add: (UnicodeSubset bit: 114 description: 'Reserved').	subsets add: (UnicodeSubset bit: 115 description: 'Reserved').	subsets add: (UnicodeSubset bit: 116 description: 'Reserved').	subsets add: (UnicodeSubset bit: 117 description: 'Reserved').	subsets add: (UnicodeSubset bit: 118 description: 'Reserved').	subsets add: (UnicodeSubset bit: 119 description: 'Reserved').	subsets add: (UnicodeSubset bit: 120 description: 'Reserved').	subsets add: (UnicodeSubset bit: 121 description: 'Reserved').	subsets add: (UnicodeSubset bit: 122 description: 'Reserved').	subsets add: (UnicodeSubset bit: 123 description: 'Windows 2000 or later: Layout progress, horizontal from right to left').	subsets add: (UnicodeSubset bit: 124 description: 'Windows 2000 or later: Layout progress, vertical before horizontal').	subsets add: (UnicodeSubset bit: 125 description: 'Windows 2000 or later: Layout progress, vertical bottom to top').	subsets add: (UnicodeSubset bit: 126 description: 'Reserved; must be 0').	subsets add: (UnicodeSubset bit: 127 description: 'Reserved; must be 1').	^subsets</body></methods><methods><class-id>WindowsFonts.UnicodeSubset class</class-id> <category>instance creation</category><body package="Fonts for Windows">bit: bitInteger description: descriptionString	| inst |	inst := self new.	inst initializeBit: bitInteger from: nil to: nil description: descriptionString.	^inst</body><body package="Fonts for Windows">bit: bitInteger from: fromInteger to: toInteger description: descriptionString	| inst |	inst := self new.	inst initializeBit: bitInteger from: fromInteger to: toInteger description: descriptionString.	^inst</body></methods><methods><class-id>Graphics.Fonts.CharsetView</class-id> <category>interface opening</category><body package="Fonts UI">postBuildWith: aBuilder 	super postBuildWith: aBuilder.	(self widgetAt: #CharacterList) displayStringSelector: #listText.</body></methods><methods><class-id>Graphics.Fonts.CharsetView</class-id> <category>aspects</category><body package="Fonts UI">charStringHolder	^charStringHolder ifNil: [charStringHolder := String new asValue]</body><body package="Fonts UI">characters	^characters ifNil: [characters := SelectionInList with: self item glyphs]</body><body package="Fonts UI">glyphView	^glyphView ifNil: [glyphView := GlyphView on: nil]</body><body package="Fonts UI">infoText	^infoText ifNil: [infoText := String new asValue]</body></methods><methods><class-id>Graphics.Fonts.CharsetView</class-id> <category>menus</category><body package="Fonts UI">characterMenu	| menu |	menu := Menu new.	menu addItem: ((MenuItem labeled: '&amp;Inspect')		value: #inspectItem;		enablementSelector: #hasSelection;		labelImage: (ToolbarIconLibrary visualFor: #inspect);		yourself).	^menu</body></methods><methods><class-id>Graphics.Fonts.CharsetView</class-id> <category>testing</category><body package="Fonts UI">hasSelection	^self characters selection notNil</body></methods><methods><class-id>Graphics.Fonts.CharsetView</class-id> <category>events</category><body package="Fonts UI">selectionChanged	| sel |	sel := self characters selection.	sel ifNil: [		self setDisplayCharacter: nil.		self infoText value: Text new.		self charStringHolder value: Text new.		^self].	self setDisplayCharacter: sel.	self infoText value: sel shortDescriptionText.	self charStringHolder value: sel descriptionText.</body><body package="Fonts UI">setDisplayCharacter: sel	self glyphView font: self item font glyph: sel</body></methods><methods><class-id>Graphics.Fonts.CharsetView</class-id> <category>actions</category><body package="Fonts UI">inspectItem	self characters selection inspect</body></methods><methods><class-id>Graphics.ColorValue</class-id> <category>converting</category><body package="Fonts Basics">asColorRef	"^a COLORREF, a long"	"like 0x00bbggrr"	| long |	long := UninterpretedBytes new: 4.	long byteAt: 4 put: 0.	long byteAt: 3 put: ((self blue * 256) truncated min: 255).	long byteAt: 2 put: ((self green * 256) truncated min: 255).	long byteAt: 1 put: ((self red * 256) truncated min: 255).	^long longAt: 1</body></methods><methods><class-id>Core.Timestamp class</class-id> <category>instance creation</category><body package="Fonts Basics">fromLongDateTime: secondsFromNewyear1904	"Answer a new Timestamp from the number of seconds since 12:00 am, January 1, 1904.	Used in the OpenType file format"	^self fromSeconds: secondsFromNewyear1904 + self newyear1904AsSeconds</body><body package="Fonts Basics">newyear1904AsSeconds	"^(self d: 1 m: 1 y: 1904) asSeconds"	^94608000</body></methods><methods><class-id>Core.Timestamp</class-id> <category>conversion</category><body package="Fonts Basics">asLongDateTime	"&lt;Integer&gt;	as seconds from new year 1904"	^self asSeconds - self class newyear1904AsSeconds</body></methods><methods><class-id>Graphics.PostScriptPrinterFont</class-id> <category>accessing</category><body package="Fonts Basics">fontBBox	"&lt;Rectangle&gt;"	^fontBody fontBBox scaledBy: size</body></methods><methods><class-id>Graphics.PostScriptFontBody class</class-id> <category>font metric loading</category><body package="Fonts Basics">adobeGlyphDecodingFrom: rst	"&lt;IdentityDictionary key: Symbol value: Integer&gt;"	^(self tokenLinesFrom: rst) inject: IdentityDictionary new into: [:dict :tokens |		dict at: tokens first asSymbol put: ('16r' , tokens last) asNumber.		dict]</body></methods><methods><class-id>Graphics.PostScriptFontBody class</class-id> <category>adobe definitions</category><body package="Fonts Basics">adobeGlyphlistTxt	"from http://www.adobe.com/devnet-archive/opentype/archives/glyphlist.txt"	^'# #################################################################################### Copyright (c) 1997,1998,2002,2007 Adobe Systems Incorporated# # Permission is hereby granted, free of charge, to any person obtaining a# copy of this documentation file to use, copy, publish, distribute,# sublicense, and/or sell copies of the documentation, and to permit# others to do the same, provided that:# - No modification, editing or other alteration of this document is# allowed; and# - The above copyright notice and this permission notice shall be# included in all copies of the documentation.# # Permission is hereby granted, free of charge, to any person obtaining a# copy of this documentation file, to create their own derivative works# from the content of this document to use, copy, publish, distribute,# sublicense, and/or sell the derivative works, and to permit others to do# the same, provided that the derived work is not represented as being a# copy or version of this document.# # Adobe shall not be liable to any party for any loss of revenue or profit# or for indirect, incidental, special, consequential, or other similar# damages, whether based on tort (including without limitation negligence# or strict liability), contract or other legal or equitable grounds even# if Adobe has been advised or had reason to know of the possibility of# such damages.Ê The Adobe materials are provided on an "AS IS" basis.Ê# Adobe specifically disclaims all express, statutory, or implied# warranties relating to the Adobe materials, including but not limited to# those concerning merchantability or fitness for a particular purpose or# non-infringement of any third party rights regarding the Adobe# materials.# #################################################################################### Name:          Adobe Glyph List# Table version: 2.0# Date:          September 20, 2002## See http://partners.adobe.com/asn/developer/typeforum/unicodegn.html## Format: Semicolon-delimited fields:#            (1) glyph name#            (2) Unicode scalar valueA;0041AE;00C6AEacute;01FCAEmacron;01E2AEsmall;F7E6Aacute;00C1Aacutesmall;F7E1Abreve;0102Abreveacute;1EAEAbrevecyrillic;04D0Abrevedotbelow;1EB6Abrevegrave;1EB0Abrevehookabove;1EB2Abrevetilde;1EB4Acaron;01CDAcircle;24B6Acircumflex;00C2Acircumflexacute;1EA4Acircumflexdotbelow;1EACAcircumflexgrave;1EA6Acircumflexhookabove;1EA8Acircumflexsmall;F7E2Acircumflextilde;1EAAAcute;F6C9Acutesmall;F7B4Acyrillic;0410Adblgrave;0200Adieresis;00C4Adieresiscyrillic;04D2Adieresismacron;01DEAdieresissmall;F7E4Adotbelow;1EA0Adotmacron;01E0Agrave;00C0Agravesmall;F7E0Ahookabove;1EA2Aiecyrillic;04D4Ainvertedbreve;0202Alpha;0391Alphatonos;0386Amacron;0100Amonospace;FF21Aogonek;0104Aring;00C5Aringacute;01FAAringbelow;1E00Aringsmall;F7E5Asmall;F761Atilde;00C3Atildesmall;F7E3Aybarmenian;0531B;0042Bcircle;24B7Bdotaccent;1E02Bdotbelow;1E04Becyrillic;0411Benarmenian;0532Beta;0392Bhook;0181Blinebelow;1E06Bmonospace;FF22Brevesmall;F6F4Bsmall;F762Btopbar;0182C;0043Caarmenian;053ECacute;0106Caron;F6CACaronsmall;F6F5Ccaron;010CCcedilla;00C7Ccedillaacute;1E08Ccedillasmall;F7E7Ccircle;24B8Ccircumflex;0108Cdot;010ACdotaccent;010ACedillasmall;F7B8Chaarmenian;0549Cheabkhasiancyrillic;04BCChecyrillic;0427Chedescenderabkhasiancyrillic;04BEChedescendercyrillic;04B6Chedieresiscyrillic;04F4Cheharmenian;0543Chekhakassiancyrillic;04CBCheverticalstrokecyrillic;04B8Chi;03A7Chook;0187Circumflexsmall;F6F6Cmonospace;FF23Coarmenian;0551Csmall;F763D;0044DZ;01F1DZcaron;01C4Daarmenian;0534Dafrican;0189Dcaron;010EDcedilla;1E10Dcircle;24B9Dcircumflexbelow;1E12Dcroat;0110Ddotaccent;1E0ADdotbelow;1E0CDecyrillic;0414Deicoptic;03EEDelta;2206Deltagreek;0394Dhook;018ADieresis;F6CBDieresisAcute;F6CCDieresisGrave;F6CDDieresissmall;F7A8Digammagreek;03DCDjecyrillic;0402Dlinebelow;1E0EDmonospace;FF24Dotaccentsmall;F6F7Dslash;0110Dsmall;F764Dtopbar;018BDz;01F2Dzcaron;01C5Dzeabkhasiancyrillic;04E0Dzecyrillic;0405Dzhecyrillic;040FE;0045Eacute;00C9Eacutesmall;F7E9Ebreve;0114Ecaron;011AEcedillabreve;1E1CEcharmenian;0535Ecircle;24BAEcircumflex;00CAEcircumflexacute;1EBEEcircumflexbelow;1E18Ecircumflexdotbelow;1EC6Ecircumflexgrave;1EC0Ecircumflexhookabove;1EC2Ecircumflexsmall;F7EAEcircumflextilde;1EC4Ecyrillic;0404Edblgrave;0204Edieresis;00CBEdieresissmall;F7EBEdot;0116Edotaccent;0116Edotbelow;1EB8Efcyrillic;0424Egrave;00C8Egravesmall;F7E8Eharmenian;0537Ehookabove;1EBAEightroman;2167Einvertedbreve;0206Eiotifiedcyrillic;0464Elcyrillic;041BElevenroman;216AEmacron;0112Emacronacute;1E16Emacrongrave;1E14Emcyrillic;041CEmonospace;FF25Encyrillic;041DEndescendercyrillic;04A2Eng;014AEnghecyrillic;04A4Enhookcyrillic;04C7Eogonek;0118Eopen;0190Epsilon;0395Epsilontonos;0388Ercyrillic;0420Ereversed;018EEreversedcyrillic;042DEscyrillic;0421Esdescendercyrillic;04AAEsh;01A9Esmall;F765Eta;0397Etarmenian;0538Etatonos;0389Eth;00D0Ethsmall;F7F0Etilde;1EBCEtildebelow;1E1AEuro;20ACEzh;01B7Ezhcaron;01EEEzhreversed;01B8F;0046Fcircle;24BBFdotaccent;1E1EFeharmenian;0556Feicoptic;03E4Fhook;0191Fitacyrillic;0472Fiveroman;2164Fmonospace;FF26Fourroman;2163Fsmall;F766G;0047GBsquare;3387Gacute;01F4Gamma;0393Gammaafrican;0194Gangiacoptic;03EAGbreve;011EGcaron;01E6Gcedilla;0122Gcircle;24BCGcircumflex;011CGcommaaccent;0122Gdot;0120Gdotaccent;0120Gecyrillic;0413Ghadarmenian;0542Ghemiddlehookcyrillic;0494Ghestrokecyrillic;0492Gheupturncyrillic;0490Ghook;0193Gimarmenian;0533Gjecyrillic;0403Gmacron;1E20Gmonospace;FF27Grave;F6CEGravesmall;F760Gsmall;F767Gsmallhook;029BGstroke;01E4H;0048H18533;25CFH18543;25AAH18551;25ABH22073;25A1HPsquare;33CBHaabkhasiancyrillic;04A8Hadescendercyrillic;04B2Hardsigncyrillic;042AHbar;0126Hbrevebelow;1E2AHcedilla;1E28Hcircle;24BDHcircumflex;0124Hdieresis;1E26Hdotaccent;1E22Hdotbelow;1E24Hmonospace;FF28Hoarmenian;0540Horicoptic;03E8Hsmall;F768Hungarumlaut;F6CFHungarumlautsmall;F6F8Hzsquare;3390I;0049IAcyrillic;042FIJ;0132IUcyrillic;042EIacute;00CDIacutesmall;F7EDIbreve;012CIcaron;01CFIcircle;24BEIcircumflex;00CEIcircumflexsmall;F7EEIcyrillic;0406Idblgrave;0208Idieresis;00CFIdieresisacute;1E2EIdieresiscyrillic;04E4Idieresissmall;F7EFIdot;0130Idotaccent;0130Idotbelow;1ECAIebrevecyrillic;04D6Iecyrillic;0415Ifraktur;2111Igrave;00CCIgravesmall;F7ECIhookabove;1EC8Iicyrillic;0418Iinvertedbreve;020AIishortcyrillic;0419Imacron;012AImacroncyrillic;04E2Imonospace;FF29Iniarmenian;053BIocyrillic;0401Iogonek;012EIota;0399Iotaafrican;0196Iotadieresis;03AAIotatonos;038AIsmall;F769Istroke;0197Itilde;0128Itildebelow;1E2CIzhitsacyrillic;0474Izhitsadblgravecyrillic;0476J;004AJaarmenian;0541Jcircle;24BFJcircumflex;0134Jecyrillic;0408Jheharmenian;054BJmonospace;FF2AJsmall;F76AK;004BKBsquare;3385KKsquare;33CDKabashkircyrillic;04A0Kacute;1E30Kacyrillic;041AKadescendercyrillic;049AKahookcyrillic;04C3Kappa;039AKastrokecyrillic;049EKaverticalstrokecyrillic;049CKcaron;01E8Kcedilla;0136Kcircle;24C0Kcommaaccent;0136Kdotbelow;1E32Keharmenian;0554Kenarmenian;053FKhacyrillic;0425Kheicoptic;03E6Khook;0198Kjecyrillic;040CKlinebelow;1E34Kmonospace;FF2BKoppacyrillic;0480Koppagreek;03DEKsicyrillic;046EKsmall;F76BL;004CLJ;01C7LL;F6BFLacute;0139Lambda;039BLcaron;013DLcedilla;013BLcircle;24C1Lcircumflexbelow;1E3CLcommaaccent;013BLdot;013FLdotaccent;013FLdotbelow;1E36Ldotbelowmacron;1E38Liwnarmenian;053CLj;01C8Ljecyrillic;0409Llinebelow;1E3ALmonospace;FF2CLslash;0141Lslashsmall;F6F9Lsmall;F76CM;004DMBsquare;3386Macron;F6D0Macronsmall;F7AFMacute;1E3EMcircle;24C2Mdotaccent;1E40Mdotbelow;1E42Menarmenian;0544Mmonospace;FF2DMsmall;F76DMturned;019CMu;039CN;004ENJ;01CANacute;0143Ncaron;0147Ncedilla;0145Ncircle;24C3Ncircumflexbelow;1E4ANcommaaccent;0145Ndotaccent;1E44Ndotbelow;1E46Nhookleft;019DNineroman;2168Nj;01CBNjecyrillic;040ANlinebelow;1E48Nmonospace;FF2ENowarmenian;0546Nsmall;F76ENtilde;00D1Ntildesmall;F7F1Nu;039DO;004FOE;0152OEsmall;F6FAOacute;00D3Oacutesmall;F7F3Obarredcyrillic;04E8Obarreddieresiscyrillic;04EAObreve;014EOcaron;01D1Ocenteredtilde;019FOcircle;24C4Ocircumflex;00D4Ocircumflexacute;1ED0Ocircumflexdotbelow;1ED8Ocircumflexgrave;1ED2Ocircumflexhookabove;1ED4Ocircumflexsmall;F7F4Ocircumflextilde;1ED6Ocyrillic;041EOdblacute;0150Odblgrave;020COdieresis;00D6Odieresiscyrillic;04E6Odieresissmall;F7F6Odotbelow;1ECCOgoneksmall;F6FBOgrave;00D2Ogravesmall;F7F2Oharmenian;0555Ohm;2126Ohookabove;1ECEOhorn;01A0Ohornacute;1EDAOhorndotbelow;1EE2Ohorngrave;1EDCOhornhookabove;1EDEOhorntilde;1EE0Ohungarumlaut;0150Oi;01A2Oinvertedbreve;020EOmacron;014COmacronacute;1E52Omacrongrave;1E50Omega;2126Omegacyrillic;0460Omegagreek;03A9Omegaroundcyrillic;047AOmegatitlocyrillic;047COmegatonos;038FOmicron;039FOmicrontonos;038COmonospace;FF2FOneroman;2160Oogonek;01EAOogonekmacron;01ECOopen;0186Oslash;00D8Oslashacute;01FEOslashsmall;F7F8Osmall;F76FOstrokeacute;01FEOtcyrillic;047EOtilde;00D5Otildeacute;1E4COtildedieresis;1E4EOtildesmall;F7F5P;0050Pacute;1E54Pcircle;24C5Pdotaccent;1E56Pecyrillic;041FPeharmenian;054APemiddlehookcyrillic;04A6Phi;03A6Phook;01A4Pi;03A0Piwrarmenian;0553Pmonospace;FF30Psi;03A8Psicyrillic;0470Psmall;F770Q;0051Qcircle;24C6Qmonospace;FF31Qsmall;F771R;0052Raarmenian;054CRacute;0154Rcaron;0158Rcedilla;0156Rcircle;24C7Rcommaaccent;0156Rdblgrave;0210Rdotaccent;1E58Rdotbelow;1E5ARdotbelowmacron;1E5CReharmenian;0550Rfraktur;211CRho;03A1Ringsmall;F6FCRinvertedbreve;0212Rlinebelow;1E5ERmonospace;FF32Rsmall;F772Rsmallinverted;0281Rsmallinvertedsuperior;02B6S;0053SF010000;250CSF020000;2514SF030000;2510SF040000;2518SF050000;253CSF060000;252CSF070000;2534SF080000;251CSF090000;2524SF100000;2500SF110000;2502SF190000;2561SF200000;2562SF210000;2556SF220000;2555SF230000;2563SF240000;2551SF250000;2557SF260000;255DSF270000;255CSF280000;255BSF360000;255ESF370000;255FSF380000;255ASF390000;2554SF400000;2569SF410000;2566SF420000;2560SF430000;2550SF440000;256CSF450000;2567SF460000;2568SF470000;2564SF480000;2565SF490000;2559SF500000;2558SF510000;2552SF520000;2553SF530000;256BSF540000;256ASacute;015ASacutedotaccent;1E64Sampigreek;03E0Scaron;0160Scarondotaccent;1E66Scaronsmall;F6FDScedilla;015ESchwa;018FSchwacyrillic;04D8Schwadieresiscyrillic;04DAScircle;24C8Scircumflex;015CScommaaccent;0218Sdotaccent;1E60Sdotbelow;1E62Sdotbelowdotaccent;1E68Seharmenian;054DSevenroman;2166Shaarmenian;0547Shacyrillic;0428Shchacyrillic;0429Sheicoptic;03E2Shhacyrillic;04BAShimacoptic;03ECSigma;03A3Sixroman;2165Smonospace;FF33Softsigncyrillic;042CSsmall;F773Stigmagreek;03DAT;0054Tau;03A4Tbar;0166Tcaron;0164Tcedilla;0162Tcircle;24C9Tcircumflexbelow;1E70Tcommaaccent;0162Tdotaccent;1E6ATdotbelow;1E6CTecyrillic;0422Tedescendercyrillic;04ACTenroman;2169Tetsecyrillic;04B4Theta;0398Thook;01ACThorn;00DEThornsmall;F7FEThreeroman;2162Tildesmall;F6FETiwnarmenian;054FTlinebelow;1E6ETmonospace;FF34Toarmenian;0539Tonefive;01BCTonesix;0184Tonetwo;01A7Tretroflexhook;01AETsecyrillic;0426Tshecyrillic;040BTsmall;F774Twelveroman;216BTworoman;2161U;0055Uacute;00DAUacutesmall;F7FAUbreve;016CUcaron;01D3Ucircle;24CAUcircumflex;00DBUcircumflexbelow;1E76Ucircumflexsmall;F7FBUcyrillic;0423Udblacute;0170Udblgrave;0214Udieresis;00DCUdieresisacute;01D7Udieresisbelow;1E72Udieresiscaron;01D9Udieresiscyrillic;04F0Udieresisgrave;01DBUdieresismacron;01D5Udieresissmall;F7FCUdotbelow;1EE4Ugrave;00D9Ugravesmall;F7F9Uhookabove;1EE6Uhorn;01AFUhornacute;1EE8Uhorndotbelow;1EF0Uhorngrave;1EEAUhornhookabove;1EECUhorntilde;1EEEUhungarumlaut;0170Uhungarumlautcyrillic;04F2Uinvertedbreve;0216Ukcyrillic;0478Umacron;016AUmacroncyrillic;04EEUmacrondieresis;1E7AUmonospace;FF35Uogonek;0172Upsilon;03A5Upsilon1;03D2Upsilonacutehooksymbolgreek;03D3Upsilonafrican;01B1Upsilondieresis;03ABUpsilondieresishooksymbolgreek;03D4Upsilonhooksymbol;03D2Upsilontonos;038EUring;016EUshortcyrillic;040EUsmall;F775Ustraightcyrillic;04AEUstraightstrokecyrillic;04B0Utilde;0168Utildeacute;1E78Utildebelow;1E74V;0056Vcircle;24CBVdotbelow;1E7EVecyrillic;0412Vewarmenian;054EVhook;01B2Vmonospace;FF36Voarmenian;0548Vsmall;F776Vtilde;1E7CW;0057Wacute;1E82Wcircle;24CCWcircumflex;0174Wdieresis;1E84Wdotaccent;1E86Wdotbelow;1E88Wgrave;1E80Wmonospace;FF37Wsmall;F777X;0058Xcircle;24CDXdieresis;1E8CXdotaccent;1E8AXeharmenian;053DXi;039EXmonospace;FF38Xsmall;F778Y;0059Yacute;00DDYacutesmall;F7FDYatcyrillic;0462Ycircle;24CEYcircumflex;0176Ydieresis;0178Ydieresissmall;F7FFYdotaccent;1E8EYdotbelow;1EF4Yericyrillic;042BYerudieresiscyrillic;04F8Ygrave;1EF2Yhook;01B3Yhookabove;1EF6Yiarmenian;0545Yicyrillic;0407Yiwnarmenian;0552Ymonospace;FF39Ysmall;F779Ytilde;1EF8Yusbigcyrillic;046AYusbigiotifiedcyrillic;046CYuslittlecyrillic;0466Yuslittleiotifiedcyrillic;0468Z;005AZaarmenian;0536Zacute;0179Zcaron;017DZcaronsmall;F6FFZcircle;24CFZcircumflex;1E90Zdot;017BZdotaccent;017BZdotbelow;1E92Zecyrillic;0417Zedescendercyrillic;0498Zedieresiscyrillic;04DEZeta;0396Zhearmenian;053AZhebrevecyrillic;04C1Zhecyrillic;0416Zhedescendercyrillic;0496Zhedieresiscyrillic;04DCZlinebelow;1E94Zmonospace;FF3AZsmall;F77AZstroke;01B5a;0061aabengali;0986aacute;00E1aadeva;0906aagujarati;0A86aagurmukhi;0A06aamatragurmukhi;0A3Eaarusquare;3303aavowelsignbengali;09BEaavowelsigndeva;093Eaavowelsigngujarati;0ABEabbreviationmarkarmenian;055Fabbreviationsigndeva;0970abengali;0985abopomofo;311Aabreve;0103abreveacute;1EAFabrevecyrillic;04D1abrevedotbelow;1EB7abrevegrave;1EB1abrevehookabove;1EB3abrevetilde;1EB5acaron;01CEacircle;24D0acircumflex;00E2acircumflexacute;1EA5acircumflexdotbelow;1EADacircumflexgrave;1EA7acircumflexhookabove;1EA9acircumflextilde;1EABacute;00B4acutebelowcmb;0317acutecmb;0301acutecomb;0301acutedeva;0954acutelowmod;02CFacutetonecmb;0341acyrillic;0430adblgrave;0201addakgurmukhi;0A71adeva;0905adieresis;00E4adieresiscyrillic;04D3adieresismacron;01DFadotbelow;1EA1adotmacron;01E1ae;00E6aeacute;01FDaekorean;3150aemacron;01E3afii00208;2015afii08941;20A4afii10017;0410afii10018;0411afii10019;0412afii10020;0413afii10021;0414afii10022;0415afii10023;0401afii10024;0416afii10025;0417afii10026;0418afii10027;0419afii10028;041Aafii10029;041Bafii10030;041Cafii10031;041Dafii10032;041Eafii10033;041Fafii10034;0420afii10035;0421afii10036;0422afii10037;0423afii10038;0424afii10039;0425afii10040;0426afii10041;0427afii10042;0428afii10043;0429afii10044;042Aafii10045;042Bafii10046;042Cafii10047;042Dafii10048;042Eafii10049;042Fafii10050;0490afii10051;0402afii10052;0403afii10053;0404afii10054;0405afii10055;0406afii10056;0407afii10057;0408afii10058;0409afii10059;040Aafii10060;040Bafii10061;040Cafii10062;040Eafii10063;F6C4afii10064;F6C5afii10065;0430afii10066;0431afii10067;0432afii10068;0433afii10069;0434afii10070;0435afii10071;0451afii10072;0436afii10073;0437afii10074;0438afii10075;0439afii10076;043Aafii10077;043Bafii10078;043Cafii10079;043Dafii10080;043Eafii10081;043Fafii10082;0440afii10083;0441afii10084;0442afii10085;0443afii10086;0444afii10087;0445afii10088;0446afii10089;0447afii10090;0448afii10091;0449afii10092;044Aafii10093;044Bafii10094;044Cafii10095;044Dafii10096;044Eafii10097;044Fafii10098;0491afii10099;0452afii10100;0453afii10101;0454afii10102;0455afii10103;0456afii10104;0457afii10105;0458afii10106;0459afii10107;045Aafii10108;045Bafii10109;045Cafii10110;045Eafii10145;040Fafii10146;0462afii10147;0472afii10148;0474afii10192;F6C6afii10193;045Fafii10194;0463afii10195;0473afii10196;0475afii10831;F6C7afii10832;F6C8afii10846;04D9afii299;200Eafii300;200Fafii301;200Dafii57381;066Aafii57388;060Cafii57392;0660afii57393;0661afii57394;0662afii57395;0663afii57396;0664afii57397;0665afii57398;0666afii57399;0667afii57400;0668afii57401;0669afii57403;061Bafii57407;061Fafii57409;0621afii57410;0622afii57411;0623afii57412;0624afii57413;0625afii57414;0626afii57415;0627afii57416;0628afii57417;0629afii57418;062Aafii57419;062Bafii57420;062Cafii57421;062Dafii57422;062Eafii57423;062Fafii57424;0630afii57425;0631afii57426;0632afii57427;0633afii57428;0634afii57429;0635afii57430;0636afii57431;0637afii57432;0638afii57433;0639afii57434;063Aafii57440;0640afii57441;0641afii57442;0642afii57443;0643afii57444;0644afii57445;0645afii57446;0646afii57448;0648afii57449;0649afii57450;064Aafii57451;064Bafii57452;064Cafii57453;064Dafii57454;064Eafii57455;064Fafii57456;0650afii57457;0651afii57458;0652afii57470;0647afii57505;06A4afii57506;067Eafii57507;0686afii57508;0698afii57509;06AFafii57511;0679afii57512;0688afii57513;0691afii57514;06BAafii57519;06D2afii57534;06D5afii57636;20AAafii57645;05BEafii57658;05C3afii57664;05D0afii57665;05D1afii57666;05D2afii57667;05D3afii57668;05D4afii57669;05D5afii57670;05D6afii57671;05D7afii57672;05D8afii57673;05D9afii57674;05DAafii57675;05DBafii57676;05DCafii57677;05DDafii57678;05DEafii57679;05DFafii57680;05E0afii57681;05E1afii57682;05E2afii57683;05E3afii57684;05E4afii57685;05E5afii57686;05E6afii57687;05E7afii57688;05E8afii57689;05E9afii57690;05EAafii57694;FB2Aafii57695;FB2Bafii57700;FB4Bafii57705;FB1Fafii57716;05F0afii57717;05F1afii57718;05F2afii57723;FB35afii57793;05B4afii57794;05B5afii57795;05B6afii57796;05BBafii57797;05B8afii57798;05B7afii57799;05B0afii57800;05B2afii57801;05B1afii57802;05B3afii57803;05C2afii57804;05C1afii57806;05B9afii57807;05BCafii57839;05BDafii57841;05BFafii57842;05C0afii57929;02BCafii61248;2105afii61289;2113afii61352;2116afii61573;202Cafii61574;202Dafii61575;202Eafii61664;200Cafii63167;066Dafii64937;02BDagrave;00E0agujarati;0A85agurmukhi;0A05ahiragana;3042ahookabove;1EA3aibengali;0990aibopomofo;311Eaideva;0910aiecyrillic;04D5aigujarati;0A90aigurmukhi;0A10aimatragurmukhi;0A48ainarabic;0639ainfinalarabic;FECAaininitialarabic;FECBainmedialarabic;FECCainvertedbreve;0203aivowelsignbengali;09C8aivowelsigndeva;0948aivowelsigngujarati;0AC8akatakana;30A2akatakanahalfwidth;FF71akorean;314Falef;05D0alefarabic;0627alefdageshhebrew;FB30aleffinalarabic;FE8Ealefhamzaabovearabic;0623alefhamzaabovefinalarabic;FE84alefhamzabelowarabic;0625alefhamzabelowfinalarabic;FE88alefhebrew;05D0aleflamedhebrew;FB4Falefmaddaabovearabic;0622alefmaddaabovefinalarabic;FE82alefmaksuraarabic;0649alefmaksurafinalarabic;FEF0alefmaksurainitialarabic;FEF3alefmaksuramedialarabic;FEF4alefpatahhebrew;FB2Ealefqamatshebrew;FB2Faleph;2135allequal;224Calpha;03B1alphatonos;03ACamacron;0101amonospace;FF41ampersand;0026ampersandmonospace;FF06ampersandsmall;F726amsquare;33C2anbopomofo;3122angbopomofo;3124angkhankhuthai;0E5Aangle;2220anglebracketleft;3008anglebracketleftvertical;FE3Fanglebracketright;3009anglebracketrightvertical;FE40angleleft;2329angleright;232Aangstrom;212Banoteleia;0387anudattadeva;0952anusvarabengali;0982anusvaradeva;0902anusvaragujarati;0A82aogonek;0105apaatosquare;3300aparen;249Capostrophearmenian;055Aapostrophemod;02BCapple;F8FFapproaches;2250approxequal;2248approxequalorimage;2252approximatelyequal;2245araeaekorean;318Earaeakorean;318Darc;2312arighthalfring;1E9Aaring;00E5aringacute;01FBaringbelow;1E01arrowboth;2194arrowdashdown;21E3arrowdashleft;21E0arrowdashright;21E2arrowdashup;21E1arrowdblboth;21D4arrowdbldown;21D3arrowdblleft;21D0arrowdblright;21D2arrowdblup;21D1arrowdown;2193arrowdownleft;2199arrowdownright;2198arrowdownwhite;21E9arrowheaddownmod;02C5arrowheadleftmod;02C2arrowheadrightmod;02C3arrowheadupmod;02C4arrowhorizex;F8E7arrowleft;2190arrowleftdbl;21D0arrowleftdblstroke;21CDarrowleftoverright;21C6arrowleftwhite;21E6arrowright;2192arrowrightdblstroke;21CFarrowrightheavy;279Earrowrightoverleft;21C4arrowrightwhite;21E8arrowtableft;21E4arrowtabright;21E5arrowup;2191arrowupdn;2195arrowupdnbse;21A8arrowupdownbase;21A8arrowupleft;2196arrowupleftofdown;21C5arrowupright;2197arrowupwhite;21E7arrowvertex;F8E6asciicircum;005Easciicircummonospace;FF3Easciitilde;007Easciitildemonospace;FF5Eascript;0251ascriptturned;0252asmallhiragana;3041asmallkatakana;30A1asmallkatakanahalfwidth;FF67asterisk;002Aasteriskaltonearabic;066Dasteriskarabic;066Dasteriskmath;2217asteriskmonospace;FF0Aasterisksmall;FE61asterism;2042asuperior;F6E9asymptoticallyequal;2243at;0040atilde;00E3atmonospace;FF20atsmall;FE6Baturned;0250aubengali;0994aubopomofo;3120audeva;0914augujarati;0A94augurmukhi;0A14aulengthmarkbengali;09D7aumatragurmukhi;0A4Cauvowelsignbengali;09CCauvowelsigndeva;094Cauvowelsigngujarati;0ACCavagrahadeva;093Daybarmenian;0561ayin;05E2ayinaltonehebrew;FB20ayinhebrew;05E2b;0062babengali;09ACbackslash;005Cbackslashmonospace;FF3Cbadeva;092Cbagujarati;0AACbagurmukhi;0A2Cbahiragana;3070bahtthai;0E3Fbakatakana;30D0bar;007Cbarmonospace;FF5Cbbopomofo;3105bcircle;24D1bdotaccent;1E03bdotbelow;1E05beamedsixteenthnotes;266Cbecause;2235becyrillic;0431beharabic;0628behfinalarabic;FE90behinitialarabic;FE91behiragana;3079behmedialarabic;FE92behmeeminitialarabic;FC9Fbehmeemisolatedarabic;FC08behnoonfinalarabic;FC6Dbekatakana;30D9benarmenian;0562bet;05D1beta;03B2betasymbolgreek;03D0betdagesh;FB31betdageshhebrew;FB31bethebrew;05D1betrafehebrew;FB4Cbhabengali;09ADbhadeva;092Dbhagujarati;0AADbhagurmukhi;0A2Dbhook;0253bihiragana;3073bikatakana;30D3bilabialclick;0298bindigurmukhi;0A02birusquare;3331blackcircle;25CFblackdiamond;25C6blackdownpointingtriangle;25BCblackleftpointingpointer;25C4blackleftpointingtriangle;25C0blacklenticularbracketleft;3010blacklenticularbracketleftvertical;FE3Bblacklenticularbracketright;3011blacklenticularbracketrightvertical;FE3Cblacklowerlefttriangle;25E3blacklowerrighttriangle;25E2blackrectangle;25ACblackrightpointingpointer;25BAblackrightpointingtriangle;25B6blacksmallsquare;25AAblacksmilingface;263Bblacksquare;25A0blackstar;2605blackupperlefttriangle;25E4blackupperrighttriangle;25E5blackuppointingsmalltriangle;25B4blackuppointingtriangle;25B2blank;2423blinebelow;1E07block;2588bmonospace;FF42bobaimaithai;0E1Abohiragana;307Cbokatakana;30DCbparen;249Dbqsquare;33C3braceex;F8F4braceleft;007Bbraceleftbt;F8F3braceleftmid;F8F2braceleftmonospace;FF5Bbraceleftsmall;FE5Bbracelefttp;F8F1braceleftvertical;FE37braceright;007Dbracerightbt;F8FEbracerightmid;F8FDbracerightmonospace;FF5Dbracerightsmall;FE5Cbracerighttp;F8FCbracerightvertical;FE38bracketleft;005Bbracketleftbt;F8F0bracketleftex;F8EFbracketleftmonospace;FF3Bbracketlefttp;F8EEbracketright;005Dbracketrightbt;F8FBbracketrightex;F8FAbracketrightmonospace;FF3Dbracketrighttp;F8F9breve;02D8brevebelowcmb;032Ebrevecmb;0306breveinvertedbelowcmb;032Fbreveinvertedcmb;0311breveinverteddoublecmb;0361bridgebelowcmb;032Abridgeinvertedbelowcmb;033Abrokenbar;00A6bstroke;0180bsuperior;F6EAbtopbar;0183buhiragana;3076bukatakana;30D6bullet;2022bulletinverse;25D8bulletoperator;2219bullseye;25CEc;0063caarmenian;056Ecabengali;099Acacute;0107cadeva;091Acagujarati;0A9Acagurmukhi;0A1Acalsquare;3388candrabindubengali;0981candrabinducmb;0310candrabindudeva;0901candrabindugujarati;0A81capslock;21EAcareof;2105caron;02C7caronbelowcmb;032Ccaroncmb;030Ccarriagereturn;21B5cbopomofo;3118ccaron;010Dccedilla;00E7ccedillaacute;1E09ccircle;24D2ccircumflex;0109ccurl;0255cdot;010Bcdotaccent;010Bcdsquare;33C5cedilla;00B8cedillacmb;0327cent;00A2centigrade;2103centinferior;F6DFcentmonospace;FFE0centoldstyle;F7A2centsuperior;F6E0chaarmenian;0579chabengali;099Bchadeva;091Bchagujarati;0A9Bchagurmukhi;0A1Bchbopomofo;3114cheabkhasiancyrillic;04BDcheckmark;2713checyrillic;0447chedescenderabkhasiancyrillic;04BFchedescendercyrillic;04B7chedieresiscyrillic;04F5cheharmenian;0573chekhakassiancyrillic;04CCcheverticalstrokecyrillic;04B9chi;03C7chieuchacirclekorean;3277chieuchaparenkorean;3217chieuchcirclekorean;3269chieuchkorean;314Achieuchparenkorean;3209chochangthai;0E0Achochanthai;0E08chochingthai;0E09chochoethai;0E0Cchook;0188cieucacirclekorean;3276cieucaparenkorean;3216cieuccirclekorean;3268cieuckorean;3148cieucparenkorean;3208cieucuparenkorean;321Ccircle;25CBcirclemultiply;2297circleot;2299circleplus;2295circlepostalmark;3036circlewithlefthalfblack;25D0circlewithrighthalfblack;25D1circumflex;02C6circumflexbelowcmb;032Dcircumflexcmb;0302clear;2327clickalveolar;01C2clickdental;01C0clicklateral;01C1clickretroflex;01C3club;2663clubsuitblack;2663clubsuitwhite;2667cmcubedsquare;33A4cmonospace;FF43cmsquaredsquare;33A0coarmenian;0581colon;003Acolonmonetary;20A1colonmonospace;FF1Acolonsign;20A1colonsmall;FE55colontriangularhalfmod;02D1colontriangularmod;02D0comma;002Ccommaabovecmb;0313commaaboverightcmb;0315commaaccent;F6C3commaarabic;060Ccommaarmenian;055Dcommainferior;F6E1commamonospace;FF0Ccommareversedabovecmb;0314commareversedmod;02BDcommasmall;FE50commasuperior;F6E2commaturnedabovecmb;0312commaturnedmod;02BBcompass;263Ccongruent;2245contourintegral;222Econtrol;2303controlACK;0006controlBEL;0007controlBS;0008controlCAN;0018controlCR;000DcontrolDC1;0011controlDC2;0012controlDC3;0013controlDC4;0014controlDEL;007FcontrolDLE;0010controlEM;0019controlENQ;0005controlEOT;0004controlESC;001BcontrolETB;0017controlETX;0003controlFF;000CcontrolFS;001CcontrolGS;001DcontrolHT;0009controlLF;000AcontrolNAK;0015controlRS;001EcontrolSI;000FcontrolSO;000EcontrolSOT;0002controlSTX;0001controlSUB;001AcontrolSYN;0016controlUS;001FcontrolVT;000Bcopyright;00A9copyrightsans;F8E9copyrightserif;F6D9cornerbracketleft;300Ccornerbracketlefthalfwidth;FF62cornerbracketleftvertical;FE41cornerbracketright;300Dcornerbracketrighthalfwidth;FF63cornerbracketrightvertical;FE42corporationsquare;337Fcosquare;33C7coverkgsquare;33C6cparen;249Ecruzeiro;20A2cstretched;0297curlyand;22CFcurlyor;22CEcurrency;00A4cyrBreve;F6D1cyrFlex;F6D2cyrbreve;F6D4cyrflex;F6D5d;0064daarmenian;0564dabengali;09A6dadarabic;0636dadeva;0926dadfinalarabic;FEBEdadinitialarabic;FEBFdadmedialarabic;FEC0dagesh;05BCdageshhebrew;05BCdagger;2020daggerdbl;2021dagujarati;0AA6dagurmukhi;0A26dahiragana;3060dakatakana;30C0dalarabic;062Fdalet;05D3daletdagesh;FB33daletdageshhebrew;FB33dalethatafpatah;05D3 05B2dalethatafpatahhebrew;05D3 05B2dalethatafsegol;05D3 05B1dalethatafsegolhebrew;05D3 05B1dalethebrew;05D3dalethiriq;05D3 05B4dalethiriqhebrew;05D3 05B4daletholam;05D3 05B9daletholamhebrew;05D3 05B9daletpatah;05D3 05B7daletpatahhebrew;05D3 05B7daletqamats;05D3 05B8daletqamatshebrew;05D3 05B8daletqubuts;05D3 05BBdaletqubutshebrew;05D3 05BBdaletsegol;05D3 05B6daletsegolhebrew;05D3 05B6daletsheva;05D3 05B0daletshevahebrew;05D3 05B0dalettsere;05D3 05B5dalettserehebrew;05D3 05B5dalfinalarabic;FEAAdammaarabic;064Fdammalowarabic;064Fdammatanaltonearabic;064Cdammatanarabic;064Cdanda;0964dargahebrew;05A7dargalefthebrew;05A7dasiapneumatacyrilliccmb;0485dblGrave;F6D3dblanglebracketleft;300Adblanglebracketleftvertical;FE3Ddblanglebracketright;300Bdblanglebracketrightvertical;FE3Edblarchinvertedbelowcmb;032Bdblarrowleft;21D4dblarrowright;21D2dbldanda;0965dblgrave;F6D6dblgravecmb;030Fdblintegral;222Cdbllowline;2017dbllowlinecmb;0333dbloverlinecmb;033Fdblprimemod;02BAdblverticalbar;2016dblverticallineabovecmb;030Edbopomofo;3109dbsquare;33C8dcaron;010Fdcedilla;1E11dcircle;24D3dcircumflexbelow;1E13dcroat;0111ddabengali;09A1ddadeva;0921ddagujarati;0AA1ddagurmukhi;0A21ddalarabic;0688ddalfinalarabic;FB89dddhadeva;095Cddhabengali;09A2ddhadeva;0922ddhagujarati;0AA2ddhagurmukhi;0A22ddotaccent;1E0Bddotbelow;1E0Ddecimalseparatorarabic;066Bdecimalseparatorpersian;066Bdecyrillic;0434degree;00B0dehihebrew;05ADdehiragana;3067deicoptic;03EFdekatakana;30C7deleteleft;232Bdeleteright;2326delta;03B4deltaturned;018Ddenominatorminusonenumeratorbengali;09F8dezh;02A4dhabengali;09A7dhadeva;0927dhagujarati;0AA7dhagurmukhi;0A27dhook;0257dialytikatonos;0385dialytikatonoscmb;0344diamond;2666diamondsuitwhite;2662dieresis;00A8dieresisacute;F6D7dieresisbelowcmb;0324dieresiscmb;0308dieresisgrave;F6D8dieresistonos;0385dihiragana;3062dikatakana;30C2dittomark;3003divide;00F7divides;2223divisionslash;2215djecyrillic;0452dkshade;2593dlinebelow;1E0Fdlsquare;3397dmacron;0111dmonospace;FF44dnblock;2584dochadathai;0E0Edodekthai;0E14dohiragana;3069dokatakana;30C9dollar;0024dollarinferior;F6E3dollarmonospace;FF04dollaroldstyle;F724dollarsmall;FE69dollarsuperior;F6E4dong;20ABdorusquare;3326dotaccent;02D9dotaccentcmb;0307dotbelowcmb;0323dotbelowcomb;0323dotkatakana;30FBdotlessi;0131dotlessj;F6BEdotlessjstrokehook;0284dotmath;22C5dottedcircle;25CCdoubleyodpatah;FB1Fdoubleyodpatahhebrew;FB1Fdowntackbelowcmb;031Edowntackmod;02D5dparen;249Fdsuperior;F6EBdtail;0256dtopbar;018Cduhiragana;3065dukatakana;30C5dz;01F3dzaltone;02A3dzcaron;01C6dzcurl;02A5dzeabkhasiancyrillic;04E1dzecyrillic;0455dzhecyrillic;045Fe;0065eacute;00E9earth;2641ebengali;098Febopomofo;311Cebreve;0115ecandradeva;090Decandragujarati;0A8Decandravowelsigndeva;0945ecandravowelsigngujarati;0AC5ecaron;011Becedillabreve;1E1Decharmenian;0565echyiwnarmenian;0587ecircle;24D4ecircumflex;00EAecircumflexacute;1EBFecircumflexbelow;1E19ecircumflexdotbelow;1EC7ecircumflexgrave;1EC1ecircumflexhookabove;1EC3ecircumflextilde;1EC5ecyrillic;0454edblgrave;0205edeva;090Fedieresis;00EBedot;0117edotaccent;0117edotbelow;1EB9eegurmukhi;0A0Feematragurmukhi;0A47efcyrillic;0444egrave;00E8egujarati;0A8Feharmenian;0567ehbopomofo;311Dehiragana;3048ehookabove;1EBBeibopomofo;311Feight;0038eightarabic;0668eightbengali;09EEeightcircle;2467eightcircleinversesansserif;2791eightdeva;096Eeighteencircle;2471eighteenparen;2485eighteenperiod;2499eightgujarati;0AEEeightgurmukhi;0A6Eeighthackarabic;0668eighthangzhou;3028eighthnotebeamed;266Beightideographicparen;3227eightinferior;2088eightmonospace;FF18eightoldstyle;F738eightparen;247Beightperiod;248Feightpersian;06F8eightroman;2177eightsuperior;2078eightthai;0E58einvertedbreve;0207eiotifiedcyrillic;0465ekatakana;30A8ekatakanahalfwidth;FF74ekonkargurmukhi;0A74ekorean;3154elcyrillic;043Belement;2208elevencircle;246Aelevenparen;247Eelevenperiod;2492elevenroman;217Aellipsis;2026ellipsisvertical;22EEemacron;0113emacronacute;1E17emacrongrave;1E15emcyrillic;043Cemdash;2014emdashvertical;FE31emonospace;FF45emphasismarkarmenian;055Bemptyset;2205enbopomofo;3123encyrillic;043Dendash;2013endashvertical;FE32endescendercyrillic;04A3eng;014Bengbopomofo;3125enghecyrillic;04A5enhookcyrillic;04C8enspace;2002eogonek;0119eokorean;3153eopen;025Beopenclosed;029Aeopenreversed;025Ceopenreversedclosed;025Eeopenreversedhook;025Deparen;24A0epsilon;03B5epsilontonos;03ADequal;003Dequalmonospace;FF1Dequalsmall;FE66equalsuperior;207Cequivalence;2261erbopomofo;3126ercyrillic;0440ereversed;0258ereversedcyrillic;044Descyrillic;0441esdescendercyrillic;04ABesh;0283eshcurl;0286eshortdeva;090Eeshortvowelsigndeva;0946eshreversedloop;01AAeshsquatreversed;0285esmallhiragana;3047esmallkatakana;30A7esmallkatakanahalfwidth;FF6Aestimated;212Eesuperior;F6ECeta;03B7etarmenian;0568etatonos;03AEeth;00F0etilde;1EBDetildebelow;1E1Betnahtafoukhhebrew;0591etnahtafoukhlefthebrew;0591etnahtahebrew;0591etnahtalefthebrew;0591eturned;01DDeukorean;3161euro;20ACevowelsignbengali;09C7evowelsigndeva;0947evowelsigngujarati;0AC7exclam;0021exclamarmenian;055Cexclamdbl;203Cexclamdown;00A1exclamdownsmall;F7A1exclammonospace;FF01exclamsmall;F721existential;2203ezh;0292ezhcaron;01EFezhcurl;0293ezhreversed;01B9ezhtail;01BAf;0066fadeva;095Efagurmukhi;0A5Efahrenheit;2109fathaarabic;064Efathalowarabic;064Efathatanarabic;064Bfbopomofo;3108fcircle;24D5fdotaccent;1E1Ffeharabic;0641feharmenian;0586fehfinalarabic;FED2fehinitialarabic;FED3fehmedialarabic;FED4feicoptic;03E5female;2640ff;FB00ffi;FB03ffl;FB04fi;FB01fifteencircle;246Efifteenparen;2482fifteenperiod;2496figuredash;2012filledbox;25A0filledrect;25ACfinalkaf;05DAfinalkafdagesh;FB3Afinalkafdageshhebrew;FB3Afinalkafhebrew;05DAfinalkafqamats;05DA 05B8finalkafqamatshebrew;05DA 05B8finalkafsheva;05DA 05B0finalkafshevahebrew;05DA 05B0finalmem;05DDfinalmemhebrew;05DDfinalnun;05DFfinalnunhebrew;05DFfinalpe;05E3finalpehebrew;05E3finaltsadi;05E5finaltsadihebrew;05E5firsttonechinese;02C9fisheye;25C9fitacyrillic;0473five;0035fivearabic;0665fivebengali;09EBfivecircle;2464fivecircleinversesansserif;278Efivedeva;096Bfiveeighths;215Dfivegujarati;0AEBfivegurmukhi;0A6Bfivehackarabic;0665fivehangzhou;3025fiveideographicparen;3224fiveinferior;2085fivemonospace;FF15fiveoldstyle;F735fiveparen;2478fiveperiod;248Cfivepersian;06F5fiveroman;2174fivesuperior;2075fivethai;0E55fl;FB02florin;0192fmonospace;FF46fmsquare;3399fofanthai;0E1Ffofathai;0E1Dfongmanthai;0E4Fforall;2200four;0034fourarabic;0664fourbengali;09EAfourcircle;2463fourcircleinversesansserif;278Dfourdeva;096Afourgujarati;0AEAfourgurmukhi;0A6Afourhackarabic;0664fourhangzhou;3024fourideographicparen;3223fourinferior;2084fourmonospace;FF14fournumeratorbengali;09F7fouroldstyle;F734fourparen;2477fourperiod;248Bfourpersian;06F4fourroman;2173foursuperior;2074fourteencircle;246Dfourteenparen;2481fourteenperiod;2495fourthai;0E54fourthtonechinese;02CBfparen;24A1fraction;2044franc;20A3g;0067gabengali;0997gacute;01F5gadeva;0917gafarabic;06AFgaffinalarabic;FB93gafinitialarabic;FB94gafmedialarabic;FB95gagujarati;0A97gagurmukhi;0A17gahiragana;304Cgakatakana;30ACgamma;03B3gammalatinsmall;0263gammasuperior;02E0gangiacoptic;03EBgbopomofo;310Dgbreve;011Fgcaron;01E7gcedilla;0123gcircle;24D6gcircumflex;011Dgcommaaccent;0123gdot;0121gdotaccent;0121gecyrillic;0433gehiragana;3052gekatakana;30B2geometricallyequal;2251gereshaccenthebrew;059Cgereshhebrew;05F3gereshmuqdamhebrew;059Dgermandbls;00DFgershayimaccenthebrew;059Egershayimhebrew;05F4getamark;3013ghabengali;0998ghadarmenian;0572ghadeva;0918ghagujarati;0A98ghagurmukhi;0A18ghainarabic;063Aghainfinalarabic;FECEghaininitialarabic;FECFghainmedialarabic;FED0ghemiddlehookcyrillic;0495ghestrokecyrillic;0493gheupturncyrillic;0491ghhadeva;095Aghhagurmukhi;0A5Aghook;0260ghzsquare;3393gihiragana;304Egikatakana;30AEgimarmenian;0563gimel;05D2gimeldagesh;FB32gimeldageshhebrew;FB32gimelhebrew;05D2gjecyrillic;0453glottalinvertedstroke;01BEglottalstop;0294glottalstopinverted;0296glottalstopmod;02C0glottalstopreversed;0295glottalstopreversedmod;02C1glottalstopreversedsuperior;02E4glottalstopstroke;02A1glottalstopstrokereversed;02A2gmacron;1E21gmonospace;FF47gohiragana;3054gokatakana;30B4gparen;24A2gpasquare;33ACgradient;2207grave;0060gravebelowcmb;0316gravecmb;0300gravecomb;0300gravedeva;0953gravelowmod;02CEgravemonospace;FF40gravetonecmb;0340greater;003Egreaterequal;2265greaterequalorless;22DBgreatermonospace;FF1Egreaterorequivalent;2273greaterorless;2277greateroverequal;2267greatersmall;FE65gscript;0261gstroke;01E5guhiragana;3050guillemotleft;00ABguillemotright;00BBguilsinglleft;2039guilsinglright;203Agukatakana;30B0guramusquare;3318gysquare;33C9h;0068haabkhasiancyrillic;04A9haaltonearabic;06C1habengali;09B9hadescendercyrillic;04B3hadeva;0939hagujarati;0AB9hagurmukhi;0A39haharabic;062Dhahfinalarabic;FEA2hahinitialarabic;FEA3hahiragana;306Fhahmedialarabic;FEA4haitusquare;332Ahakatakana;30CFhakatakanahalfwidth;FF8Ahalantgurmukhi;0A4Dhamzaarabic;0621hamzadammaarabic;0621 064Fhamzadammatanarabic;0621 064Chamzafathaarabic;0621 064Ehamzafathatanarabic;0621 064Bhamzalowarabic;0621hamzalowkasraarabic;0621 0650hamzalowkasratanarabic;0621 064Dhamzasukunarabic;0621 0652hangulfiller;3164hardsigncyrillic;044Aharpoonleftbarbup;21BCharpoonrightbarbup;21C0hasquare;33CAhatafpatah;05B2hatafpatah16;05B2hatafpatah23;05B2hatafpatah2f;05B2hatafpatahhebrew;05B2hatafpatahnarrowhebrew;05B2hatafpatahquarterhebrew;05B2hatafpatahwidehebrew;05B2hatafqamats;05B3hatafqamats1b;05B3hatafqamats28;05B3hatafqamats34;05B3hatafqamatshebrew;05B3hatafqamatsnarrowhebrew;05B3hatafqamatsquarterhebrew;05B3hatafqamatswidehebrew;05B3hatafsegol;05B1hatafsegol17;05B1hatafsegol24;05B1hatafsegol30;05B1hatafsegolhebrew;05B1hatafsegolnarrowhebrew;05B1hatafsegolquarterhebrew;05B1hatafsegolwidehebrew;05B1hbar;0127hbopomofo;310Fhbrevebelow;1E2Bhcedilla;1E29hcircle;24D7hcircumflex;0125hdieresis;1E27hdotaccent;1E23hdotbelow;1E25he;05D4heart;2665heartsuitblack;2665heartsuitwhite;2661hedagesh;FB34hedageshhebrew;FB34hehaltonearabic;06C1heharabic;0647hehebrew;05D4hehfinalaltonearabic;FBA7hehfinalalttwoarabic;FEEAhehfinalarabic;FEEAhehhamzaabovefinalarabic;FBA5hehhamzaaboveisolatedarabic;FBA4hehinitialaltonearabic;FBA8hehinitialarabic;FEEBhehiragana;3078hehmedialaltonearabic;FBA9hehmedialarabic;FEECheiseierasquare;337Bhekatakana;30D8hekatakanahalfwidth;FF8Dhekutaarusquare;3336henghook;0267herutusquare;3339het;05D7hethebrew;05D7hhook;0266hhooksuperior;02B1hieuhacirclekorean;327Bhieuhaparenkorean;321Bhieuhcirclekorean;326Dhieuhkorean;314Ehieuhparenkorean;320Dhihiragana;3072hikatakana;30D2hikatakanahalfwidth;FF8Bhiriq;05B4hiriq14;05B4hiriq21;05B4hiriq2d;05B4hiriqhebrew;05B4hiriqnarrowhebrew;05B4hiriqquarterhebrew;05B4hiriqwidehebrew;05B4hlinebelow;1E96hmonospace;FF48hoarmenian;0570hohipthai;0E2Bhohiragana;307Bhokatakana;30DBhokatakanahalfwidth;FF8Eholam;05B9holam19;05B9holam26;05B9holam32;05B9holamhebrew;05B9holamnarrowhebrew;05B9holamquarterhebrew;05B9holamwidehebrew;05B9honokhukthai;0E2Ehookabovecomb;0309hookcmb;0309hookpalatalizedbelowcmb;0321hookretroflexbelowcmb;0322hoonsquare;3342horicoptic;03E9horizontalbar;2015horncmb;031Bhotsprings;2668house;2302hparen;24A3hsuperior;02B0hturned;0265huhiragana;3075huiitosquare;3333hukatakana;30D5hukatakanahalfwidth;FF8Chungarumlaut;02DDhungarumlautcmb;030Bhv;0195hyphen;002Dhypheninferior;F6E5hyphenmonospace;FF0Dhyphensmall;FE63hyphensuperior;F6E6hyphentwo;2010i;0069iacute;00EDiacyrillic;044Fibengali;0987ibopomofo;3127ibreve;012Dicaron;01D0icircle;24D8icircumflex;00EEicyrillic;0456idblgrave;0209ideographearthcircle;328Fideographfirecircle;328Bideographicallianceparen;323Fideographiccallparen;323Aideographiccentrecircle;32A5ideographicclose;3006ideographiccomma;3001ideographiccommaleft;FF64ideographiccongratulationparen;3237ideographiccorrectcircle;32A3ideographicearthparen;322Fideographicenterpriseparen;323Dideographicexcellentcircle;329Dideographicfestivalparen;3240ideographicfinancialcircle;3296ideographicfinancialparen;3236ideographicfireparen;322Bideographichaveparen;3232ideographichighcircle;32A4ideographiciterationmark;3005ideographiclaborcircle;3298ideographiclaborparen;3238ideographicleftcircle;32A7ideographiclowcircle;32A6ideographicmedicinecircle;32A9ideographicmetalparen;322Eideographicmoonparen;322Aideographicnameparen;3234ideographicperiod;3002ideographicprintcircle;329Eideographicreachparen;3243ideographicrepresentparen;3239ideographicresourceparen;323Eideographicrightcircle;32A8ideographicsecretcircle;3299ideographicselfparen;3242ideographicsocietyparen;3233ideographicspace;3000ideographicspecialparen;3235ideographicstockparen;3231ideographicstudyparen;323Bideographicsunparen;3230ideographicsuperviseparen;323Cideographicwaterparen;322Cideographicwoodparen;322Dideographiczero;3007ideographmetalcircle;328Eideographmooncircle;328Aideographnamecircle;3294ideographsuncircle;3290ideographwatercircle;328Cideographwoodcircle;328Dideva;0907idieresis;00EFidieresisacute;1E2Fidieresiscyrillic;04E5idotbelow;1ECBiebrevecyrillic;04D7iecyrillic;0435ieungacirclekorean;3275ieungaparenkorean;3215ieungcirclekorean;3267ieungkorean;3147ieungparenkorean;3207igrave;00ECigujarati;0A87igurmukhi;0A07ihiragana;3044ihookabove;1EC9iibengali;0988iicyrillic;0438iideva;0908iigujarati;0A88iigurmukhi;0A08iimatragurmukhi;0A40iinvertedbreve;020Biishortcyrillic;0439iivowelsignbengali;09C0iivowelsigndeva;0940iivowelsigngujarati;0AC0ij;0133ikatakana;30A4ikatakanahalfwidth;FF72ikorean;3163ilde;02DCiluyhebrew;05ACimacron;012Bimacroncyrillic;04E3imageorapproximatelyequal;2253imatragurmukhi;0A3Fimonospace;FF49increment;2206infinity;221Einiarmenian;056Bintegral;222Bintegralbottom;2321integralbt;2321integralex;F8F5integraltop;2320integraltp;2320intersection;2229intisquare;3305invbullet;25D8invcircle;25D9invsmileface;263Biocyrillic;0451iogonek;012Fiota;03B9iotadieresis;03CAiotadieresistonos;0390iotalatin;0269iotatonos;03AFiparen;24A4irigurmukhi;0A72ismallhiragana;3043ismallkatakana;30A3ismallkatakanahalfwidth;FF68issharbengali;09FAistroke;0268isuperior;F6EDiterationhiragana;309Diterationkatakana;30FDitilde;0129itildebelow;1E2Diubopomofo;3129iucyrillic;044Eivowelsignbengali;09BFivowelsigndeva;093Fivowelsigngujarati;0ABFizhitsacyrillic;0475izhitsadblgravecyrillic;0477j;006Ajaarmenian;0571jabengali;099Cjadeva;091Cjagujarati;0A9Cjagurmukhi;0A1Cjbopomofo;3110jcaron;01F0jcircle;24D9jcircumflex;0135jcrossedtail;029Djdotlessstroke;025Fjecyrillic;0458jeemarabic;062Cjeemfinalarabic;FE9Ejeeminitialarabic;FE9Fjeemmedialarabic;FEA0jeharabic;0698jehfinalarabic;FB8Bjhabengali;099Djhadeva;091Djhagujarati;0A9Djhagurmukhi;0A1Djheharmenian;057Bjis;3004jmonospace;FF4Ajparen;24A5jsuperior;02B2k;006Bkabashkircyrillic;04A1kabengali;0995kacute;1E31kacyrillic;043Akadescendercyrillic;049Bkadeva;0915kaf;05DBkafarabic;0643kafdagesh;FB3Bkafdageshhebrew;FB3Bkaffinalarabic;FEDAkafhebrew;05DBkafinitialarabic;FEDBkafmedialarabic;FEDCkafrafehebrew;FB4Dkagujarati;0A95kagurmukhi;0A15kahiragana;304Bkahookcyrillic;04C4kakatakana;30ABkakatakanahalfwidth;FF76kappa;03BAkappasymbolgreek;03F0kapyeounmieumkorean;3171kapyeounphieuphkorean;3184kapyeounpieupkorean;3178kapyeounssangpieupkorean;3179karoriisquare;330Dkashidaautoarabic;0640kashidaautonosidebearingarabic;0640kasmallkatakana;30F5kasquare;3384kasraarabic;0650kasratanarabic;064Dkastrokecyrillic;049Fkatahiraprolongmarkhalfwidth;FF70kaverticalstrokecyrillic;049Dkbopomofo;310Ekcalsquare;3389kcaron;01E9kcedilla;0137kcircle;24DAkcommaaccent;0137kdotbelow;1E33keharmenian;0584kehiragana;3051kekatakana;30B1kekatakanahalfwidth;FF79kenarmenian;056Fkesmallkatakana;30F6kgreenlandic;0138khabengali;0996khacyrillic;0445khadeva;0916khagujarati;0A96khagurmukhi;0A16khaharabic;062Ekhahfinalarabic;FEA6khahinitialarabic;FEA7khahmedialarabic;FEA8kheicoptic;03E7khhadeva;0959khhagurmukhi;0A59khieukhacirclekorean;3278khieukhaparenkorean;3218khieukhcirclekorean;326Akhieukhkorean;314Bkhieukhparenkorean;320Akhokhaithai;0E02khokhonthai;0E05khokhuatthai;0E03khokhwaithai;0E04khomutthai;0E5Bkhook;0199khorakhangthai;0E06khzsquare;3391kihiragana;304Dkikatakana;30ADkikatakanahalfwidth;FF77kiroguramusquare;3315kiromeetorusquare;3316kirosquare;3314kiyeokacirclekorean;326Ekiyeokaparenkorean;320Ekiyeokcirclekorean;3260kiyeokkorean;3131kiyeokparenkorean;3200kiyeoksioskorean;3133kjecyrillic;045Cklinebelow;1E35klsquare;3398kmcubedsquare;33A6kmonospace;FF4Bkmsquaredsquare;33A2kohiragana;3053kohmsquare;33C0kokaithai;0E01kokatakana;30B3kokatakanahalfwidth;FF7Akooposquare;331Ekoppacyrillic;0481koreanstandardsymbol;327Fkoroniscmb;0343kparen;24A6kpasquare;33AAksicyrillic;046Fktsquare;33CFkturned;029Ekuhiragana;304Fkukatakana;30AFkukatakanahalfwidth;FF78kvsquare;33B8kwsquare;33BEl;006Clabengali;09B2lacute;013Aladeva;0932lagujarati;0AB2lagurmukhi;0A32lakkhangyaothai;0E45lamaleffinalarabic;FEFClamalefhamzaabovefinalarabic;FEF8lamalefhamzaaboveisolatedarabic;FEF7lamalefhamzabelowfinalarabic;FEFAlamalefhamzabelowisolatedarabic;FEF9lamalefisolatedarabic;FEFBlamalefmaddaabovefinalarabic;FEF6lamalefmaddaaboveisolatedarabic;FEF5lamarabic;0644lambda;03BBlambdastroke;019Blamed;05DClameddagesh;FB3Clameddageshhebrew;FB3Clamedhebrew;05DClamedholam;05DC 05B9lamedholamdagesh;05DC 05B9 05BClamedholamdageshhebrew;05DC 05B9 05BClamedholamhebrew;05DC 05B9lamfinalarabic;FEDElamhahinitialarabic;FCCAlaminitialarabic;FEDFlamjeeminitialarabic;FCC9lamkhahinitialarabic;FCCBlamlamhehisolatedarabic;FDF2lammedialarabic;FEE0lammeemhahinitialarabic;FD88lammeeminitialarabic;FCCClammeemjeeminitialarabic;FEDF FEE4 FEA0lammeemkhahinitialarabic;FEDF FEE4 FEA8largecircle;25EFlbar;019Albelt;026Clbopomofo;310Clcaron;013Elcedilla;013Clcircle;24DBlcircumflexbelow;1E3Dlcommaaccent;013Cldot;0140ldotaccent;0140ldotbelow;1E37ldotbelowmacron;1E39leftangleabovecmb;031Alefttackbelowcmb;0318less;003Clessequal;2264lessequalorgreater;22DAlessmonospace;FF1Clessorequivalent;2272lessorgreater;2276lessoverequal;2266lesssmall;FE64lezh;026Elfblock;258Clhookretroflex;026Dlira;20A4liwnarmenian;056Clj;01C9ljecyrillic;0459ll;F6C0lladeva;0933llagujarati;0AB3llinebelow;1E3Bllladeva;0934llvocalicbengali;09E1llvocalicdeva;0961llvocalicvowelsignbengali;09E3llvocalicvowelsigndeva;0963lmiddletilde;026Blmonospace;FF4Clmsquare;33D0lochulathai;0E2Clogicaland;2227logicalnot;00AClogicalnotreversed;2310logicalor;2228lolingthai;0E25longs;017Flowlinecenterline;FE4Elowlinecmb;0332lowlinedashed;FE4Dlozenge;25CAlparen;24A7lslash;0142lsquare;2113lsuperior;F6EEltshade;2591luthai;0E26lvocalicbengali;098Clvocalicdeva;090Clvocalicvowelsignbengali;09E2lvocalicvowelsigndeva;0962lxsquare;33D3m;006Dmabengali;09AEmacron;00AFmacronbelowcmb;0331macroncmb;0304macronlowmod;02CDmacronmonospace;FFE3macute;1E3Fmadeva;092Emagujarati;0AAEmagurmukhi;0A2Emahapakhhebrew;05A4mahapakhlefthebrew;05A4mahiragana;307Emaichattawalowleftthai;F895maichattawalowrightthai;F894maichattawathai;0E4Bmaichattawaupperleftthai;F893maieklowleftthai;F88Cmaieklowrightthai;F88Bmaiekthai;0E48maiekupperleftthai;F88Amaihanakatleftthai;F884maihanakatthai;0E31maitaikhuleftthai;F889maitaikhuthai;0E47maitholowleftthai;F88Fmaitholowrightthai;F88Emaithothai;0E49maithoupperleftthai;F88Dmaitrilowleftthai;F892maitrilowrightthai;F891maitrithai;0E4Amaitriupperleftthai;F890maiyamokthai;0E46makatakana;30DEmakatakanahalfwidth;FF8Fmale;2642mansyonsquare;3347maqafhebrew;05BEmars;2642masoracirclehebrew;05AFmasquare;3383mbopomofo;3107mbsquare;33D4mcircle;24DCmcubedsquare;33A5mdotaccent;1E41mdotbelow;1E43meemarabic;0645meemfinalarabic;FEE2meeminitialarabic;FEE3meemmedialarabic;FEE4meemmeeminitialarabic;FCD1meemmeemisolatedarabic;FC48meetorusquare;334Dmehiragana;3081meizierasquare;337Emekatakana;30E1mekatakanahalfwidth;FF92mem;05DEmemdagesh;FB3Ememdageshhebrew;FB3Ememhebrew;05DEmenarmenian;0574merkhahebrew;05A5merkhakefulahebrew;05A6merkhakefulalefthebrew;05A6merkhalefthebrew;05A5mhook;0271mhzsquare;3392middledotkatakanahalfwidth;FF65middot;00B7mieumacirclekorean;3272mieumaparenkorean;3212mieumcirclekorean;3264mieumkorean;3141mieumpansioskorean;3170mieumparenkorean;3204mieumpieupkorean;316Emieumsioskorean;316Fmihiragana;307Fmikatakana;30DFmikatakanahalfwidth;FF90minus;2212minusbelowcmb;0320minuscircle;2296minusmod;02D7minusplus;2213minute;2032miribaarusquare;334Amirisquare;3349mlonglegturned;0270mlsquare;3396mmcubedsquare;33A3mmonospace;FF4Dmmsquaredsquare;339Fmohiragana;3082mohmsquare;33C1mokatakana;30E2mokatakanahalfwidth;FF93molsquare;33D6momathai;0E21moverssquare;33A7moverssquaredsquare;33A8mparen;24A8mpasquare;33ABmssquare;33B3msuperior;F6EFmturned;026Fmu;00B5mu1;00B5muasquare;3382muchgreater;226Bmuchless;226Amufsquare;338Cmugreek;03BCmugsquare;338Dmuhiragana;3080mukatakana;30E0mukatakanahalfwidth;FF91mulsquare;3395multiply;00D7mumsquare;339Bmunahhebrew;05A3munahlefthebrew;05A3musicalnote;266Amusicalnotedbl;266Bmusicflatsign;266Dmusicsharpsign;266Fmussquare;33B2muvsquare;33B6muwsquare;33BCmvmegasquare;33B9mvsquare;33B7mwmegasquare;33BFmwsquare;33BDn;006Enabengali;09A8nabla;2207nacute;0144nadeva;0928nagujarati;0AA8nagurmukhi;0A28nahiragana;306Anakatakana;30CAnakatakanahalfwidth;FF85napostrophe;0149nasquare;3381nbopomofo;310Bnbspace;00A0ncaron;0148ncedilla;0146ncircle;24DDncircumflexbelow;1E4Bncommaaccent;0146ndotaccent;1E45ndotbelow;1E47nehiragana;306Dnekatakana;30CDnekatakanahalfwidth;FF88newsheqelsign;20AAnfsquare;338Bngabengali;0999ngadeva;0919ngagujarati;0A99ngagurmukhi;0A19ngonguthai;0E07nhiragana;3093nhookleft;0272nhookretroflex;0273nieunacirclekorean;326Fnieunaparenkorean;320Fnieuncieuckorean;3135nieuncirclekorean;3261nieunhieuhkorean;3136nieunkorean;3134nieunpansioskorean;3168nieunparenkorean;3201nieunsioskorean;3167nieuntikeutkorean;3166nihiragana;306Bnikatakana;30CBnikatakanahalfwidth;FF86nikhahitleftthai;F899nikhahitthai;0E4Dnine;0039ninearabic;0669ninebengali;09EFninecircle;2468ninecircleinversesansserif;2792ninedeva;096Fninegujarati;0AEFninegurmukhi;0A6Fninehackarabic;0669ninehangzhou;3029nineideographicparen;3228nineinferior;2089ninemonospace;FF19nineoldstyle;F739nineparen;247Cnineperiod;2490ninepersian;06F9nineroman;2178ninesuperior;2079nineteencircle;2472nineteenparen;2486nineteenperiod;249Aninethai;0E59nj;01CCnjecyrillic;045Ankatakana;30F3nkatakanahalfwidth;FF9Dnlegrightlong;019Enlinebelow;1E49nmonospace;FF4Enmsquare;339Annabengali;09A3nnadeva;0923nnagujarati;0AA3nnagurmukhi;0A23nnnadeva;0929nohiragana;306Enokatakana;30CEnokatakanahalfwidth;FF89nonbreakingspace;00A0nonenthai;0E13nonuthai;0E19noonarabic;0646noonfinalarabic;FEE6noonghunnaarabic;06BAnoonghunnafinalarabic;FB9Fnoonhehinitialarabic;FEE7 FEECnooninitialarabic;FEE7noonjeeminitialarabic;FCD2noonjeemisolatedarabic;FC4Bnoonmedialarabic;FEE8noonmeeminitialarabic;FCD5noonmeemisolatedarabic;FC4Enoonnoonfinalarabic;FC8Dnotcontains;220Cnotelement;2209notelementof;2209notequal;2260notgreater;226Fnotgreaternorequal;2271notgreaternorless;2279notidentical;2262notless;226Enotlessnorequal;2270notparallel;2226notprecedes;2280notsubset;2284notsucceeds;2281notsuperset;2285nowarmenian;0576nparen;24A9nssquare;33B1nsuperior;207Fntilde;00F1nu;03BDnuhiragana;306Cnukatakana;30CCnukatakanahalfwidth;FF87nuktabengali;09BCnuktadeva;093Cnuktagujarati;0ABCnuktagurmukhi;0A3Cnumbersign;0023numbersignmonospace;FF03numbersignsmall;FE5Fnumeralsigngreek;0374numeralsignlowergreek;0375numero;2116nun;05E0nundagesh;FB40nundageshhebrew;FB40nunhebrew;05E0nvsquare;33B5nwsquare;33BBnyabengali;099Enyadeva;091Enyagujarati;0A9Enyagurmukhi;0A1Eo;006Foacute;00F3oangthai;0E2Dobarred;0275obarredcyrillic;04E9obarreddieresiscyrillic;04EBobengali;0993obopomofo;311Bobreve;014Focandradeva;0911ocandragujarati;0A91ocandravowelsigndeva;0949ocandravowelsigngujarati;0AC9ocaron;01D2ocircle;24DEocircumflex;00F4ocircumflexacute;1ED1ocircumflexdotbelow;1ED9ocircumflexgrave;1ED3ocircumflexhookabove;1ED5ocircumflextilde;1ED7ocyrillic;043Eodblacute;0151odblgrave;020Dodeva;0913odieresis;00F6odieresiscyrillic;04E7odotbelow;1ECDoe;0153oekorean;315Aogonek;02DBogonekcmb;0328ograve;00F2ogujarati;0A93oharmenian;0585ohiragana;304Aohookabove;1ECFohorn;01A1ohornacute;1EDBohorndotbelow;1EE3ohorngrave;1EDDohornhookabove;1EDFohorntilde;1EE1ohungarumlaut;0151oi;01A3oinvertedbreve;020Fokatakana;30AAokatakanahalfwidth;FF75okorean;3157olehebrew;05ABomacron;014Domacronacute;1E53omacrongrave;1E51omdeva;0950omega;03C9omega1;03D6omegacyrillic;0461omegalatinclosed;0277omegaroundcyrillic;047Bomegatitlocyrillic;047Domegatonos;03CEomgujarati;0AD0omicron;03BFomicrontonos;03CComonospace;FF4Fone;0031onearabic;0661onebengali;09E7onecircle;2460onecircleinversesansserif;278Aonedeva;0967onedotenleader;2024oneeighth;215Bonefitted;F6DConegujarati;0AE7onegurmukhi;0A67onehackarabic;0661onehalf;00BDonehangzhou;3021oneideographicparen;3220oneinferior;2081onemonospace;FF11onenumeratorbengali;09F4oneoldstyle;F731oneparen;2474oneperiod;2488onepersian;06F1onequarter;00BConeroman;2170onesuperior;00B9onethai;0E51onethird;2153oogonek;01EBoogonekmacron;01EDoogurmukhi;0A13oomatragurmukhi;0A4Boopen;0254oparen;24AAopenbullet;25E6option;2325ordfeminine;00AAordmasculine;00BAorthogonal;221Foshortdeva;0912oshortvowelsigndeva;094Aoslash;00F8oslashacute;01FFosmallhiragana;3049osmallkatakana;30A9osmallkatakanahalfwidth;FF6Bostrokeacute;01FFosuperior;F6F0otcyrillic;047Fotilde;00F5otildeacute;1E4Dotildedieresis;1E4Foubopomofo;3121overline;203Eoverlinecenterline;FE4Aoverlinecmb;0305overlinedashed;FE49overlinedblwavy;FE4Coverlinewavy;FE4Boverscore;00AFovowelsignbengali;09CBovowelsigndeva;094Bovowelsigngujarati;0ACBp;0070paampssquare;3380paasentosquare;332Bpabengali;09AApacute;1E55padeva;092Apagedown;21DFpageup;21DEpagujarati;0AAApagurmukhi;0A2Apahiragana;3071paiyannoithai;0E2Fpakatakana;30D1palatalizationcyrilliccmb;0484palochkacyrillic;04C0pansioskorean;317Fparagraph;00B6parallel;2225parenleft;0028parenleftaltonearabic;FD3Eparenleftbt;F8EDparenleftex;F8ECparenleftinferior;208Dparenleftmonospace;FF08parenleftsmall;FE59parenleftsuperior;207Dparenlefttp;F8EBparenleftvertical;FE35parenright;0029parenrightaltonearabic;FD3Fparenrightbt;F8F8parenrightex;F8F7parenrightinferior;208Eparenrightmonospace;FF09parenrightsmall;FE5Aparenrightsuperior;207Eparenrighttp;F8F6parenrightvertical;FE36partialdiff;2202paseqhebrew;05C0pashtahebrew;0599pasquare;33A9patah;05B7patah11;05B7patah1d;05B7patah2a;05B7patahhebrew;05B7patahnarrowhebrew;05B7patahquarterhebrew;05B7patahwidehebrew;05B7pazerhebrew;05A1pbopomofo;3106pcircle;24DFpdotaccent;1E57pe;05E4pecyrillic;043Fpedagesh;FB44pedageshhebrew;FB44peezisquare;333Bpefinaldageshhebrew;FB43peharabic;067Epeharmenian;057Apehebrew;05E4pehfinalarabic;FB57pehinitialarabic;FB58pehiragana;307Apehmedialarabic;FB59pekatakana;30DApemiddlehookcyrillic;04A7perafehebrew;FB4Epercent;0025percentarabic;066Apercentmonospace;FF05percentsmall;FE6Aperiod;002Eperiodarmenian;0589periodcentered;00B7periodhalfwidth;FF61periodinferior;F6E7periodmonospace;FF0Eperiodsmall;FE52periodsuperior;F6E8perispomenigreekcmb;0342perpendicular;22A5perthousand;2030peseta;20A7pfsquare;338Aphabengali;09ABphadeva;092Bphagujarati;0AABphagurmukhi;0A2Bphi;03C6phi1;03D5phieuphacirclekorean;327Aphieuphaparenkorean;321Aphieuphcirclekorean;326Cphieuphkorean;314Dphieuphparenkorean;320Cphilatin;0278phinthuthai;0E3Aphisymbolgreek;03D5phook;01A5phophanthai;0E1Ephophungthai;0E1Cphosamphaothai;0E20pi;03C0pieupacirclekorean;3273pieupaparenkorean;3213pieupcieuckorean;3176pieupcirclekorean;3265pieupkiyeokkorean;3172pieupkorean;3142pieupparenkorean;3205pieupsioskiyeokkorean;3174pieupsioskorean;3144pieupsiostikeutkorean;3175pieupthieuthkorean;3177pieuptikeutkorean;3173pihiragana;3074pikatakana;30D4pisymbolgreek;03D6piwrarmenian;0583plus;002Bplusbelowcmb;031Fpluscircle;2295plusminus;00B1plusmod;02D6plusmonospace;FF0Bplussmall;FE62plussuperior;207Apmonospace;FF50pmsquare;33D8pohiragana;307Dpointingindexdownwhite;261Fpointingindexleftwhite;261Cpointingindexrightwhite;261Epointingindexupwhite;261Dpokatakana;30DDpoplathai;0E1Bpostalmark;3012postalmarkface;3020pparen;24ABprecedes;227Aprescription;211Eprimemod;02B9primereversed;2035product;220Fprojective;2305prolongedkana;30FCpropellor;2318propersubset;2282propersuperset;2283proportion;2237proportional;221Dpsi;03C8psicyrillic;0471psilipneumatacyrilliccmb;0486pssquare;33B0puhiragana;3077pukatakana;30D7pvsquare;33B4pwsquare;33BAq;0071qadeva;0958qadmahebrew;05A8qafarabic;0642qaffinalarabic;FED6qafinitialarabic;FED7qafmedialarabic;FED8qamats;05B8qamats10;05B8qamats1a;05B8qamats1c;05B8qamats27;05B8qamats29;05B8qamats33;05B8qamatsde;05B8qamatshebrew;05B8qamatsnarrowhebrew;05B8qamatsqatanhebrew;05B8qamatsqatannarrowhebrew;05B8qamatsqatanquarterhebrew;05B8qamatsqatanwidehebrew;05B8qamatsquarterhebrew;05B8qamatswidehebrew;05B8qarneyparahebrew;059Fqbopomofo;3111qcircle;24E0qhook;02A0qmonospace;FF51qof;05E7qofdagesh;FB47qofdageshhebrew;FB47qofhatafpatah;05E7 05B2qofhatafpatahhebrew;05E7 05B2qofhatafsegol;05E7 05B1qofhatafsegolhebrew;05E7 05B1qofhebrew;05E7qofhiriq;05E7 05B4qofhiriqhebrew;05E7 05B4qofholam;05E7 05B9qofholamhebrew;05E7 05B9qofpatah;05E7 05B7qofpatahhebrew;05E7 05B7qofqamats;05E7 05B8qofqamatshebrew;05E7 05B8qofqubuts;05E7 05BBqofqubutshebrew;05E7 05BBqofsegol;05E7 05B6qofsegolhebrew;05E7 05B6qofsheva;05E7 05B0qofshevahebrew;05E7 05B0qoftsere;05E7 05B5qoftserehebrew;05E7 05B5qparen;24ACquarternote;2669qubuts;05BBqubuts18;05BBqubuts25;05BBqubuts31;05BBqubutshebrew;05BBqubutsnarrowhebrew;05BBqubutsquarterhebrew;05BBqubutswidehebrew;05BBquestion;003Fquestionarabic;061Fquestionarmenian;055Equestiondown;00BFquestiondownsmall;F7BFquestiongreek;037Equestionmonospace;FF1Fquestionsmall;F73Fquotedbl;0022quotedblbase;201Equotedblleft;201Cquotedblmonospace;FF02quotedblprime;301Equotedblprimereversed;301Dquotedblright;201Dquoteleft;2018quoteleftreversed;201Bquotereversed;201Bquoteright;2019quoterightn;0149quotesinglbase;201Aquotesingle;0027quotesinglemonospace;FF07r;0072raarmenian;057Crabengali;09B0racute;0155radeva;0930radical;221Aradicalex;F8E5radoverssquare;33AEradoverssquaredsquare;33AFradsquare;33ADrafe;05BFrafehebrew;05BFragujarati;0AB0ragurmukhi;0A30rahiragana;3089rakatakana;30E9rakatakanahalfwidth;FF97ralowerdiagonalbengali;09F1ramiddlediagonalbengali;09F0ramshorn;0264ratio;2236rbopomofo;3116rcaron;0159rcedilla;0157rcircle;24E1rcommaaccent;0157rdblgrave;0211rdotaccent;1E59rdotbelow;1E5Brdotbelowmacron;1E5Dreferencemark;203Breflexsubset;2286reflexsuperset;2287registered;00AEregistersans;F8E8registerserif;F6DAreharabic;0631reharmenian;0580rehfinalarabic;FEAErehiragana;308Crehyehaleflamarabic;0631 FEF3 FE8E 0644rekatakana;30ECrekatakanahalfwidth;FF9Aresh;05E8reshdageshhebrew;FB48reshhatafpatah;05E8 05B2reshhatafpatahhebrew;05E8 05B2reshhatafsegol;05E8 05B1reshhatafsegolhebrew;05E8 05B1reshhebrew;05E8reshhiriq;05E8 05B4reshhiriqhebrew;05E8 05B4reshholam;05E8 05B9reshholamhebrew;05E8 05B9reshpatah;05E8 05B7reshpatahhebrew;05E8 05B7reshqamats;05E8 05B8reshqamatshebrew;05E8 05B8reshqubuts;05E8 05BBreshqubutshebrew;05E8 05BBreshsegol;05E8 05B6reshsegolhebrew;05E8 05B6reshsheva;05E8 05B0reshshevahebrew;05E8 05B0reshtsere;05E8 05B5reshtserehebrew;05E8 05B5reversedtilde;223Dreviahebrew;0597reviamugrashhebrew;0597revlogicalnot;2310rfishhook;027Erfishhookreversed;027Frhabengali;09DDrhadeva;095Drho;03C1rhook;027Drhookturned;027Brhookturnedsuperior;02B5rhosymbolgreek;03F1rhotichookmod;02DErieulacirclekorean;3271rieulaparenkorean;3211rieulcirclekorean;3263rieulhieuhkorean;3140rieulkiyeokkorean;313Arieulkiyeoksioskorean;3169rieulkorean;3139rieulmieumkorean;313Brieulpansioskorean;316Crieulparenkorean;3203rieulphieuphkorean;313Frieulpieupkorean;313Crieulpieupsioskorean;316Brieulsioskorean;313Drieulthieuthkorean;313Erieultikeutkorean;316Arieulyeorinhieuhkorean;316Drightangle;221Frighttackbelowcmb;0319righttriangle;22BFrihiragana;308Arikatakana;30EArikatakanahalfwidth;FF98ring;02DAringbelowcmb;0325ringcmb;030Aringhalfleft;02BFringhalfleftarmenian;0559ringhalfleftbelowcmb;031Cringhalfleftcentered;02D3ringhalfright;02BEringhalfrightbelowcmb;0339ringhalfrightcentered;02D2rinvertedbreve;0213rittorusquare;3351rlinebelow;1E5Frlongleg;027Crlonglegturned;027Armonospace;FF52rohiragana;308Drokatakana;30EDrokatakanahalfwidth;FF9Broruathai;0E23rparen;24ADrrabengali;09DCrradeva;0931rragurmukhi;0A5Crreharabic;0691rrehfinalarabic;FB8Drrvocalicbengali;09E0rrvocalicdeva;0960rrvocalicgujarati;0AE0rrvocalicvowelsignbengali;09C4rrvocalicvowelsigndeva;0944rrvocalicvowelsigngujarati;0AC4rsuperior;F6F1rtblock;2590rturned;0279rturnedsuperior;02B4ruhiragana;308Brukatakana;30EBrukatakanahalfwidth;FF99rupeemarkbengali;09F2rupeesignbengali;09F3rupiah;F6DDruthai;0E24rvocalicbengali;098Brvocalicdeva;090Brvocalicgujarati;0A8Brvocalicvowelsignbengali;09C3rvocalicvowelsigndeva;0943rvocalicvowelsigngujarati;0AC3s;0073sabengali;09B8sacute;015Bsacutedotaccent;1E65sadarabic;0635sadeva;0938sadfinalarabic;FEBAsadinitialarabic;FEBBsadmedialarabic;FEBCsagujarati;0AB8sagurmukhi;0A38sahiragana;3055sakatakana;30B5sakatakanahalfwidth;FF7Bsallallahoualayhewasallamarabic;FDFAsamekh;05E1samekhdagesh;FB41samekhdageshhebrew;FB41samekhhebrew;05E1saraaathai;0E32saraaethai;0E41saraaimaimalaithai;0E44saraaimaimuanthai;0E43saraamthai;0E33saraathai;0E30saraethai;0E40saraiileftthai;F886saraiithai;0E35saraileftthai;F885saraithai;0E34saraothai;0E42saraueeleftthai;F888saraueethai;0E37saraueleftthai;F887sarauethai;0E36sarauthai;0E38sarauuthai;0E39sbopomofo;3119scaron;0161scarondotaccent;1E67scedilla;015Fschwa;0259schwacyrillic;04D9schwadieresiscyrillic;04DBschwahook;025Ascircle;24E2scircumflex;015Dscommaaccent;0219sdotaccent;1E61sdotbelow;1E63sdotbelowdotaccent;1E69seagullbelowcmb;033Csecond;2033secondtonechinese;02CAsection;00A7seenarabic;0633seenfinalarabic;FEB2seeninitialarabic;FEB3seenmedialarabic;FEB4segol;05B6segol13;05B6segol1f;05B6segol2c;05B6segolhebrew;05B6segolnarrowhebrew;05B6segolquarterhebrew;05B6segoltahebrew;0592segolwidehebrew;05B6seharmenian;057Dsehiragana;305Bsekatakana;30BBsekatakanahalfwidth;FF7Esemicolon;003Bsemicolonarabic;061Bsemicolonmonospace;FF1Bsemicolonsmall;FE54semivoicedmarkkana;309Csemivoicedmarkkanahalfwidth;FF9Fsentisquare;3322sentosquare;3323seven;0037sevenarabic;0667sevenbengali;09EDsevencircle;2466sevencircleinversesansserif;2790sevendeva;096Dseveneighths;215Esevengujarati;0AEDsevengurmukhi;0A6Dsevenhackarabic;0667sevenhangzhou;3027sevenideographicparen;3226seveninferior;2087sevenmonospace;FF17sevenoldstyle;F737sevenparen;247Asevenperiod;248Esevenpersian;06F7sevenroman;2176sevensuperior;2077seventeencircle;2470seventeenparen;2484seventeenperiod;2498seventhai;0E57sfthyphen;00ADshaarmenian;0577shabengali;09B6shacyrillic;0448shaddaarabic;0651shaddadammaarabic;FC61shaddadammatanarabic;FC5Eshaddafathaarabic;FC60shaddafathatanarabic;0651 064Bshaddakasraarabic;FC62shaddakasratanarabic;FC5Fshade;2592shadedark;2593shadelight;2591shademedium;2592shadeva;0936shagujarati;0AB6shagurmukhi;0A36shalshelethebrew;0593shbopomofo;3115shchacyrillic;0449sheenarabic;0634sheenfinalarabic;FEB6sheeninitialarabic;FEB7sheenmedialarabic;FEB8sheicoptic;03E3sheqel;20AAsheqelhebrew;20AAsheva;05B0sheva115;05B0sheva15;05B0sheva22;05B0sheva2e;05B0shevahebrew;05B0shevanarrowhebrew;05B0shevaquarterhebrew;05B0shevawidehebrew;05B0shhacyrillic;04BBshimacoptic;03EDshin;05E9shindagesh;FB49shindageshhebrew;FB49shindageshshindot;FB2Cshindageshshindothebrew;FB2Cshindageshsindot;FB2Dshindageshsindothebrew;FB2Dshindothebrew;05C1shinhebrew;05E9shinshindot;FB2Ashinshindothebrew;FB2Ashinsindot;FB2Bshinsindothebrew;FB2Bshook;0282sigma;03C3sigma1;03C2sigmafinal;03C2sigmalunatesymbolgreek;03F2sihiragana;3057sikatakana;30B7sikatakanahalfwidth;FF7Csiluqhebrew;05BDsiluqlefthebrew;05BDsimilar;223Csindothebrew;05C2siosacirclekorean;3274siosaparenkorean;3214sioscieuckorean;317Esioscirclekorean;3266sioskiyeokkorean;317Asioskorean;3145siosnieunkorean;317Bsiosparenkorean;3206siospieupkorean;317Dsiostikeutkorean;317Csix;0036sixarabic;0666sixbengali;09ECsixcircle;2465sixcircleinversesansserif;278Fsixdeva;096Csixgujarati;0AECsixgurmukhi;0A6Csixhackarabic;0666sixhangzhou;3026sixideographicparen;3225sixinferior;2086sixmonospace;FF16sixoldstyle;F736sixparen;2479sixperiod;248Dsixpersian;06F6sixroman;2175sixsuperior;2076sixteencircle;246Fsixteencurrencydenominatorbengali;09F9sixteenparen;2483sixteenperiod;2497sixthai;0E56slash;002Fslashmonospace;FF0Fslong;017Fslongdotaccent;1E9Bsmileface;263Asmonospace;FF53sofpasuqhebrew;05C3softhyphen;00ADsoftsigncyrillic;044Csohiragana;305Dsokatakana;30BDsokatakanahalfwidth;FF7Fsoliduslongoverlaycmb;0338solidusshortoverlaycmb;0337sorusithai;0E29sosalathai;0E28sosothai;0E0Bsosuathai;0E2Aspace;0020spacehackarabic;0020spade;2660spadesuitblack;2660spadesuitwhite;2664sparen;24AEsquarebelowcmb;033Bsquarecc;33C4squarecm;339Dsquarediagonalcrosshatchfill;25A9squarehorizontalfill;25A4squarekg;338Fsquarekm;339Esquarekmcapital;33CEsquareln;33D1squarelog;33D2squaremg;338Esquaremil;33D5squaremm;339Csquaremsquared;33A1squareorthogonalcrosshatchfill;25A6squareupperlefttolowerrightfill;25A7squareupperrighttolowerleftfill;25A8squareverticalfill;25A5squarewhitewithsmallblack;25A3srsquare;33DBssabengali;09B7ssadeva;0937ssagujarati;0AB7ssangcieuckorean;3149ssanghieuhkorean;3185ssangieungkorean;3180ssangkiyeokkorean;3132ssangnieunkorean;3165ssangpieupkorean;3143ssangsioskorean;3146ssangtikeutkorean;3138ssuperior;F6F2sterling;00A3sterlingmonospace;FFE1strokelongoverlaycmb;0336strokeshortoverlaycmb;0335subset;2282subsetnotequal;228Asubsetorequal;2286succeeds;227Bsuchthat;220Bsuhiragana;3059sukatakana;30B9sukatakanahalfwidth;FF7Dsukunarabic;0652summation;2211sun;263Csuperset;2283supersetnotequal;228Bsupersetorequal;2287svsquare;33DCsyouwaerasquare;337Ct;0074tabengali;09A4tackdown;22A4tackleft;22A3tadeva;0924tagujarati;0AA4tagurmukhi;0A24taharabic;0637tahfinalarabic;FEC2tahinitialarabic;FEC3tahiragana;305Ftahmedialarabic;FEC4taisyouerasquare;337Dtakatakana;30BFtakatakanahalfwidth;FF80tatweelarabic;0640tau;03C4tav;05EAtavdages;FB4Atavdagesh;FB4Atavdageshhebrew;FB4Atavhebrew;05EAtbar;0167tbopomofo;310Atcaron;0165tccurl;02A8tcedilla;0163tcheharabic;0686tchehfinalarabic;FB7Btchehinitialarabic;FB7Ctchehmedialarabic;FB7Dtchehmeeminitialarabic;FB7C FEE4tcircle;24E3tcircumflexbelow;1E71tcommaaccent;0163tdieresis;1E97tdotaccent;1E6Btdotbelow;1E6Dtecyrillic;0442tedescendercyrillic;04ADteharabic;062Atehfinalarabic;FE96tehhahinitialarabic;FCA2tehhahisolatedarabic;FC0Ctehinitialarabic;FE97tehiragana;3066tehjeeminitialarabic;FCA1tehjeemisolatedarabic;FC0Btehmarbutaarabic;0629tehmarbutafinalarabic;FE94tehmedialarabic;FE98tehmeeminitialarabic;FCA4tehmeemisolatedarabic;FC0Etehnoonfinalarabic;FC73tekatakana;30C6tekatakanahalfwidth;FF83telephone;2121telephoneblack;260Etelishagedolahebrew;05A0telishaqetanahebrew;05A9tencircle;2469tenideographicparen;3229tenparen;247Dtenperiod;2491tenroman;2179tesh;02A7tet;05D8tetdagesh;FB38tetdageshhebrew;FB38tethebrew;05D8tetsecyrillic;04B5tevirhebrew;059Btevirlefthebrew;059Bthabengali;09A5thadeva;0925thagujarati;0AA5thagurmukhi;0A25thalarabic;0630thalfinalarabic;FEACthanthakhatlowleftthai;F898thanthakhatlowrightthai;F897thanthakhatthai;0E4Cthanthakhatupperleftthai;F896theharabic;062Bthehfinalarabic;FE9Athehinitialarabic;FE9Bthehmedialarabic;FE9Cthereexists;2203therefore;2234theta;03B8theta1;03D1thetasymbolgreek;03D1thieuthacirclekorean;3279thieuthaparenkorean;3219thieuthcirclekorean;326Bthieuthkorean;314Cthieuthparenkorean;320Bthirteencircle;246Cthirteenparen;2480thirteenperiod;2494thonangmonthothai;0E11thook;01ADthophuthaothai;0E12thorn;00FEthothahanthai;0E17thothanthai;0E10thothongthai;0E18thothungthai;0E16thousandcyrillic;0482thousandsseparatorarabic;066Cthousandsseparatorpersian;066Cthree;0033threearabic;0663threebengali;09E9threecircle;2462threecircleinversesansserif;278Cthreedeva;0969threeeighths;215Cthreegujarati;0AE9threegurmukhi;0A69threehackarabic;0663threehangzhou;3023threeideographicparen;3222threeinferior;2083threemonospace;FF13threenumeratorbengali;09F6threeoldstyle;F733threeparen;2476threeperiod;248Athreepersian;06F3threequarters;00BEthreequartersemdash;F6DEthreeroman;2172threesuperior;00B3threethai;0E53thzsquare;3394tihiragana;3061tikatakana;30C1tikatakanahalfwidth;FF81tikeutacirclekorean;3270tikeutaparenkorean;3210tikeutcirclekorean;3262tikeutkorean;3137tikeutparenkorean;3202tilde;02DCtildebelowcmb;0330tildecmb;0303tildecomb;0303tildedoublecmb;0360tildeoperator;223Ctildeoverlaycmb;0334tildeverticalcmb;033Etimescircle;2297tipehahebrew;0596tipehalefthebrew;0596tippigurmukhi;0A70titlocyrilliccmb;0483tiwnarmenian;057Ftlinebelow;1E6Ftmonospace;FF54toarmenian;0569tohiragana;3068tokatakana;30C8tokatakanahalfwidth;FF84tonebarextrahighmod;02E5tonebarextralowmod;02E9tonebarhighmod;02E6tonebarlowmod;02E8tonebarmidmod;02E7tonefive;01BDtonesix;0185tonetwo;01A8tonos;0384tonsquare;3327topatakthai;0E0Ftortoiseshellbracketleft;3014tortoiseshellbracketleftsmall;FE5Dtortoiseshellbracketleftvertical;FE39tortoiseshellbracketright;3015tortoiseshellbracketrightsmall;FE5Etortoiseshellbracketrightvertical;FE3Atotaothai;0E15tpalatalhook;01ABtparen;24AFtrademark;2122trademarksans;F8EAtrademarkserif;F6DBtretroflexhook;0288triagdn;25BCtriaglf;25C4triagrt;25BAtriagup;25B2ts;02A6tsadi;05E6tsadidagesh;FB46tsadidageshhebrew;FB46tsadihebrew;05E6tsecyrillic;0446tsere;05B5tsere12;05B5tsere1e;05B5tsere2b;05B5tserehebrew;05B5tserenarrowhebrew;05B5tserequarterhebrew;05B5tserewidehebrew;05B5tshecyrillic;045Btsuperior;F6F3ttabengali;099Fttadeva;091Fttagujarati;0A9Fttagurmukhi;0A1Ftteharabic;0679ttehfinalarabic;FB67ttehinitialarabic;FB68ttehmedialarabic;FB69tthabengali;09A0tthadeva;0920tthagujarati;0AA0tthagurmukhi;0A20tturned;0287tuhiragana;3064tukatakana;30C4tukatakanahalfwidth;FF82tusmallhiragana;3063tusmallkatakana;30C3tusmallkatakanahalfwidth;FF6Ftwelvecircle;246Btwelveparen;247Ftwelveperiod;2493twelveroman;217Btwentycircle;2473twentyhangzhou;5344twentyparen;2487twentyperiod;249Btwo;0032twoarabic;0662twobengali;09E8twocircle;2461twocircleinversesansserif;278Btwodeva;0968twodotenleader;2025twodotleader;2025twodotleadervertical;FE30twogujarati;0AE8twogurmukhi;0A68twohackarabic;0662twohangzhou;3022twoideographicparen;3221twoinferior;2082twomonospace;FF12twonumeratorbengali;09F5twooldstyle;F732twoparen;2475twoperiod;2489twopersian;06F2tworoman;2171twostroke;01BBtwosuperior;00B2twothai;0E52twothirds;2154u;0075uacute;00FAubar;0289ubengali;0989ubopomofo;3128ubreve;016Ducaron;01D4ucircle;24E4ucircumflex;00FBucircumflexbelow;1E77ucyrillic;0443udattadeva;0951udblacute;0171udblgrave;0215udeva;0909udieresis;00FCudieresisacute;01D8udieresisbelow;1E73udieresiscaron;01DAudieresiscyrillic;04F1udieresisgrave;01DCudieresismacron;01D6udotbelow;1EE5ugrave;00F9ugujarati;0A89ugurmukhi;0A09uhiragana;3046uhookabove;1EE7uhorn;01B0uhornacute;1EE9uhorndotbelow;1EF1uhorngrave;1EEBuhornhookabove;1EEDuhorntilde;1EEFuhungarumlaut;0171uhungarumlautcyrillic;04F3uinvertedbreve;0217ukatakana;30A6ukatakanahalfwidth;FF73ukcyrillic;0479ukorean;315Cumacron;016Bumacroncyrillic;04EFumacrondieresis;1E7Bumatragurmukhi;0A41umonospace;FF55underscore;005Funderscoredbl;2017underscoremonospace;FF3Funderscorevertical;FE33underscorewavy;FE4Funion;222Auniversal;2200uogonek;0173uparen;24B0upblock;2580upperdothebrew;05C4upsilon;03C5upsilondieresis;03CBupsilondieresistonos;03B0upsilonlatin;028Aupsilontonos;03CDuptackbelowcmb;031Duptackmod;02D4uragurmukhi;0A73uring;016Fushortcyrillic;045Eusmallhiragana;3045usmallkatakana;30A5usmallkatakanahalfwidth;FF69ustraightcyrillic;04AFustraightstrokecyrillic;04B1utilde;0169utildeacute;1E79utildebelow;1E75uubengali;098Auudeva;090Auugujarati;0A8Auugurmukhi;0A0Auumatragurmukhi;0A42uuvowelsignbengali;09C2uuvowelsigndeva;0942uuvowelsigngujarati;0AC2uvowelsignbengali;09C1uvowelsigndeva;0941uvowelsigngujarati;0AC1v;0076vadeva;0935vagujarati;0AB5vagurmukhi;0A35vakatakana;30F7vav;05D5vavdagesh;FB35vavdagesh65;FB35vavdageshhebrew;FB35vavhebrew;05D5vavholam;FB4Bvavholamhebrew;FB4Bvavvavhebrew;05F0vavyodhebrew;05F1vcircle;24E5vdotbelow;1E7Fvecyrillic;0432veharabic;06A4vehfinalarabic;FB6Bvehinitialarabic;FB6Cvehmedialarabic;FB6Dvekatakana;30F9venus;2640verticalbar;007Cverticallineabovecmb;030Dverticallinebelowcmb;0329verticallinelowmod;02CCverticallinemod;02C8vewarmenian;057Evhook;028Bvikatakana;30F8viramabengali;09CDviramadeva;094Dviramagujarati;0ACDvisargabengali;0983visargadeva;0903visargagujarati;0A83vmonospace;FF56voarmenian;0578voicediterationhiragana;309Evoicediterationkatakana;30FEvoicedmarkkana;309Bvoicedmarkkanahalfwidth;FF9Evokatakana;30FAvparen;24B1vtilde;1E7Dvturned;028Cvuhiragana;3094vukatakana;30F4w;0077wacute;1E83waekorean;3159wahiragana;308Fwakatakana;30EFwakatakanahalfwidth;FF9Cwakorean;3158wasmallhiragana;308Ewasmallkatakana;30EEwattosquare;3357wavedash;301Cwavyunderscorevertical;FE34wawarabic;0648wawfinalarabic;FEEEwawhamzaabovearabic;0624wawhamzaabovefinalarabic;FE86wbsquare;33DDwcircle;24E6wcircumflex;0175wdieresis;1E85wdotaccent;1E87wdotbelow;1E89wehiragana;3091weierstrass;2118wekatakana;30F1wekorean;315Eweokorean;315Dwgrave;1E81whitebullet;25E6whitecircle;25CBwhitecircleinverse;25D9whitecornerbracketleft;300Ewhitecornerbracketleftvertical;FE43whitecornerbracketright;300Fwhitecornerbracketrightvertical;FE44whitediamond;25C7whitediamondcontainingblacksmalldiamond;25C8whitedownpointingsmalltriangle;25BFwhitedownpointingtriangle;25BDwhiteleftpointingsmalltriangle;25C3whiteleftpointingtriangle;25C1whitelenticularbracketleft;3016whitelenticularbracketright;3017whiterightpointingsmalltriangle;25B9whiterightpointingtriangle;25B7whitesmallsquare;25ABwhitesmilingface;263Awhitesquare;25A1whitestar;2606whitetelephone;260Fwhitetortoiseshellbracketleft;3018whitetortoiseshellbracketright;3019whiteuppointingsmalltriangle;25B5whiteuppointingtriangle;25B3wihiragana;3090wikatakana;30F0wikorean;315Fwmonospace;FF57wohiragana;3092wokatakana;30F2wokatakanahalfwidth;FF66won;20A9wonmonospace;FFE6wowaenthai;0E27wparen;24B2wring;1E98wsuperior;02B7wturned;028Dwynn;01BFx;0078xabovecmb;033Dxbopomofo;3112xcircle;24E7xdieresis;1E8Dxdotaccent;1E8Bxeharmenian;056Dxi;03BExmonospace;FF58xparen;24B3xsuperior;02E3y;0079yaadosquare;334Eyabengali;09AFyacute;00FDyadeva;092Fyaekorean;3152yagujarati;0AAFyagurmukhi;0A2Fyahiragana;3084yakatakana;30E4yakatakanahalfwidth;FF94yakorean;3151yamakkanthai;0E4Eyasmallhiragana;3083yasmallkatakana;30E3yasmallkatakanahalfwidth;FF6Cyatcyrillic;0463ycircle;24E8ycircumflex;0177ydieresis;00FFydotaccent;1E8Fydotbelow;1EF5yeharabic;064Ayehbarreearabic;06D2yehbarreefinalarabic;FBAFyehfinalarabic;FEF2yehhamzaabovearabic;0626yehhamzaabovefinalarabic;FE8Ayehhamzaaboveinitialarabic;FE8Byehhamzaabovemedialarabic;FE8Cyehinitialarabic;FEF3yehmedialarabic;FEF4yehmeeminitialarabic;FCDDyehmeemisolatedarabic;FC58yehnoonfinalarabic;FC94yehthreedotsbelowarabic;06D1yekorean;3156yen;00A5yenmonospace;FFE5yeokorean;3155yeorinhieuhkorean;3186yerahbenyomohebrew;05AAyerahbenyomolefthebrew;05AAyericyrillic;044Byerudieresiscyrillic;04F9yesieungkorean;3181yesieungpansioskorean;3183yesieungsioskorean;3182yetivhebrew;059Aygrave;1EF3yhook;01B4yhookabove;1EF7yiarmenian;0575yicyrillic;0457yikorean;3162yinyang;262Fyiwnarmenian;0582ymonospace;FF59yod;05D9yoddagesh;FB39yoddageshhebrew;FB39yodhebrew;05D9yodyodhebrew;05F2yodyodpatahhebrew;FB1Fyohiragana;3088yoikorean;3189yokatakana;30E8yokatakanahalfwidth;FF96yokorean;315Byosmallhiragana;3087yosmallkatakana;30E7yosmallkatakanahalfwidth;FF6Eyotgreek;03F3yoyaekorean;3188yoyakorean;3187yoyakthai;0E22yoyingthai;0E0Dyparen;24B4ypogegrammeni;037Aypogegrammenigreekcmb;0345yr;01A6yring;1E99ysuperior;02B8ytilde;1EF9yturned;028Eyuhiragana;3086yuikorean;318Cyukatakana;30E6yukatakanahalfwidth;FF95yukorean;3160yusbigcyrillic;046Byusbigiotifiedcyrillic;046Dyuslittlecyrillic;0467yuslittleiotifiedcyrillic;0469yusmallhiragana;3085yusmallkatakana;30E5yusmallkatakanahalfwidth;FF6Dyuyekorean;318Byuyeokorean;318Ayyabengali;09DFyyadeva;095Fz;007Azaarmenian;0566zacute;017Azadeva;095Bzagurmukhi;0A5Bzaharabic;0638zahfinalarabic;FEC6zahinitialarabic;FEC7zahiragana;3056zahmedialarabic;FEC8zainarabic;0632zainfinalarabic;FEB0zakatakana;30B6zaqefgadolhebrew;0595zaqefqatanhebrew;0594zarqahebrew;0598zayin;05D6zayindagesh;FB36zayindageshhebrew;FB36zayinhebrew;05D6zbopomofo;3117zcaron;017Ezcircle;24E9zcircumflex;1E91zcurl;0291zdot;017Czdotaccent;017Czdotbelow;1E93zecyrillic;0437zedescendercyrillic;0499zedieresiscyrillic;04DFzehiragana;305Czekatakana;30BCzero;0030zeroarabic;0660zerobengali;09E6zerodeva;0966zerogujarati;0AE6zerogurmukhi;0A66zerohackarabic;0660zeroinferior;2080zeromonospace;FF10zerooldstyle;F730zeropersian;06F0zerosuperior;2070zerothai;0E50zerowidthjoiner;FEFFzerowidthnonjoiner;200Czerowidthspace;200Bzeta;03B6zhbopomofo;3113zhearmenian;056Azhebrevecyrillic;04C2zhecyrillic;0436zhedescendercyrillic;0497zhedieresiscyrillic;04DDzihiragana;3058zikatakana;30B8zinorhebrew;05AEzlinebelow;1E95zmonospace;FF5Azohiragana;305Ezokatakana;30BEzparen;24B5zretroflexhook;0290zstroke;01B6zuhiragana;305Azukatakana;30BA#--end'</body><body package="Fonts Basics">adobeZapfdingbatsTxt	"from http://www.adobe.com/devnet-archive/opentype/archives/zapfdingbats.txt"	^'# #################################################################################### Copyright (c) 1997,1998,2002,2007 Adobe Systems Incorporated# # Permission is hereby granted, free of charge, to any person obtaining a# copy of this documentation file to use, copy, publish, distribute,# sublicense, and/or sell copies of the documentation, and to permit# others to do the same, provided that:# - No modification, editing or other alteration of this document is# allowed; and# - The above copyright notice and this permission notice shall be# included in all copies of the documentation.# # Permission is hereby granted, free of charge, to any person obtaining a# copy of this documentation file, to create their own derivative works# from the content of this document to use, copy, publish, distribute,# sublicense, and/or sell the derivative works, and to permit others to do# the same, provided that the derived work is not represented as being a# copy or version of this document.# # Adobe shall not be liable to any party for any loss of revenue or profit# or for indirect, incidental, special, consequential, or other similar# damages, whether based on tort (including without limitation negligence# or strict liability), contract or other legal or equitable grounds even# if Adobe has been advised or had reason to know of the possibility of# such damages.Ê The Adobe materials are provided on an "AS IS" basis.Ê# Adobe specifically disclaims all express, statutory, or implied# warranties relating to the Adobe materials, including but not limited to# those concerning merchantability or fitness for a particular purpose or# non-infringement of any third party rights regarding the Adobe# materials.# #################################################################################### Name:          ITC Zapf Dingbats Glyph List# Table version: 2.0# Date:          September 20, 2002## See http://partners.adobe.com/asn/developer/typeforum/unicodegn.html## Format: Semicolon-delimited fields:#            (1) glyph name#            (2) Unicode scalar value#a100;275Ea101;2761a102;2762a103;2763a104;2764a105;2710a106;2765a107;2766a108;2767a109;2660a10;2721a110;2665a111;2666a112;2663a117;2709a118;2708a119;2707a11;261Ba120;2460a121;2461a122;2462a123;2463a124;2464a125;2465a126;2466a127;2467a128;2468a129;2469a12;261Ea130;2776a131;2777a132;2778a133;2779a134;277Aa135;277Ba136;277Ca137;277Da138;277Ea139;277Fa13;270Ca140;2780a141;2781a142;2782a143;2783a144;2784a145;2785a146;2786a147;2787a148;2788a149;2789a14;270Da150;278Aa151;278Ba152;278Ca153;278Da154;278Ea155;278Fa156;2790a157;2791a158;2792a159;2793a15;270Ea160;2794a161;2192a162;27A3a163;2194a164;2195a165;2799a166;279Ba167;279Ca168;279Da169;279Ea16;270Fa170;279Fa171;27A0a172;27A1a173;27A2a174;27A4a175;27A5a176;27A6a177;27A7a178;27A8a179;27A9a17;2711a180;27ABa181;27ADa182;27AFa183;27B2a184;27B3a185;27B5a186;27B8a187;27BAa188;27BBa189;27BCa18;2712a190;27BDa191;27BEa192;279Aa193;27AAa194;27B6a195;27B9a196;2798a197;27B4a198;27B7a199;27ACa19;2713a1;2701a200;27AEa201;27B1a202;2703a203;2750a204;2752a205;276Ea206;2770a20;2714a21;2715a22;2716a23;2717a24;2718a25;2719a26;271Aa27;271Ba28;271Ca29;2722a2;2702a30;2723a31;2724a32;2725a33;2726a34;2727a35;2605a36;2729a37;272Aa38;272Ba39;272Ca3;2704a40;272Da41;272Ea42;272Fa43;2730a44;2731a45;2732a46;2733a47;2734a48;2735a49;2736a4;260Ea50;2737a51;2738a52;2739a53;273Aa54;273Ba55;273Ca56;273Da57;273Ea58;273Fa59;2740a5;2706a60;2741a61;2742a62;2743a63;2744a64;2745a65;2746a66;2747a67;2748a68;2749a69;274Aa6;271Da70;274Ba71;25CFa72;274Da73;25A0a74;274Fa75;2751a76;25B2a77;25BCa78;25C6a79;2756a7;271Ea81;25D7a82;2758a83;2759a84;275Aa85;276Fa86;2771a87;2772a88;2773a89;2768a8;271Fa90;2769a91;276Ca92;276Da93;276Aa94;276Ba95;2774a96;2775a97;275Ba98;275Ca99;275Da9;2720#-- end'</body></methods><methods><class-id>Graphics.PostScriptFontBody class</class-id> <category>encoding decoding</category><body package="Fonts Basics">characterNamed: aPostScriptGlyphNameSymbol	"&lt;Character | nil&gt;	from http://www.adobe.com/devnet/opentype/archives/glyph.html	or http://www.adobe.com/devnet-archive/opentype/archives/glyph.html.	If the name maps to more than one character, no character is returned since this glyph cannot adequately be encoded.	This behavior is not correct, but a correct change need to change the structure of the senders."	| listOfIntegers |	listOfIntegers := self unicodesForGlyphName: aPostScriptGlyphNameSymbol.	listOfIntegers isEmpty ifTrue: [		^nil].	listOfIntegers size &gt; 1 ifTrue: [		^nil].	^listOfIntegers first asCharacter</body><body package="Fonts Basics">characterNamesAtUnicode: anInteger	"&lt;SequenceableCollection of: Symbol&gt;"	(Encodings at: anInteger ifAbsent: [nil]) ifNotNil: [:names |		^names].	(self isBMPCode: anInteger) ifTrue: [		^Array with: ('uni' , ('000' , (anInteger printStringRadix: 16) last: 4)) asSymbol].	(self isSupplementaryCode: anInteger) ifTrue: [		^Array with: ('u' , (anInteger printStringRadix: 16)) asSymbol].	^#(#'.notdef')</body></methods><methods><class-id>Graphics.PostScriptFontBody class</class-id> <category>testing</category><body package="Fonts Basics">isBMPCode: anInteger	"true, iff anInteger is a code point in the unicode Base Multilingual Plane"	^(anInteger between: 16r0000 and: 16rD7FF) or: [	anInteger between: 16rE000 and: 16rFFFF]</body><body package="Fonts Basics">isSupplementaryCode: anInteger	"true, iff anInteger is a code point in a unicode supplementary plane"	^anInteger between: 16r10000 and: 16r10FFFF</body></methods><methods><class-id>Graphics.PostScriptFontBody class</class-id> <category>font metric loading</category><body package="Fonts Basics">processEncodings	"self processEncodings"	Decodings := IdentityDictionary new.	(self adobeGlyphDecodingFrom: self adobeZapfdingbatsTxt readStream) keysAndValuesDo: [:glyphSymbol :unicode |		Decodings at: glyphSymbol put: unicode].	(self adobeGlyphDecodingFrom: self adobeGlyphlistTxt readStream) keysAndValuesDo: [:glyphSymbol :unicode |		Decodings at: glyphSymbol put: unicode].	"I would put this into a lazy initializing accessor"	Encodings := IdentityDictionary new.	Decodings keysAndValuesDo: [:glyphSymbol :unicode |		Encodings at: unicode put: ((Encodings at: unicode ifAbsent: [#()]) copyWith: glyphSymbol)]</body><body package="Fonts Basics">tokenLinesFrom: rst	"&lt;SequenceableCollection of: (SequenceableCollection of: String)&gt;"	| list |	list := OrderedCollection new.	[rst atEnd] whileFalse: [		| line |		line := rst upTo: Character cr.		(line notEmpty and: [		(line first = $#) not]) ifTrue: [				list add: (line tokensBasedOn: $;)]].	^list</body></methods><methods><class-id>Graphics.PostScriptFontBody class</class-id> <category>encoding decoding</category><body package="Fonts Basics">unicodesForGlyphName: aPostScriptGlyphNameSymbol	"&lt;SequenceableCollection of: Integer&gt;	from http://www.adobe.com/devnet/opentype/archives/glyph.html	or http://www.adobe.com/devnet-archive/opentype/archives/glyph.html"	^((aPostScriptGlyphNameSymbol readStream upTo: $.) tokensBasedOn: $_) inject: OrderedCollection new into: [:list :component |		(Decodings at: component asSymbol ifAbsent: nil)			ifNil: [			list addAll: (self unicodesForHexName: component)]			ifNotNil: [:unicode |			list add: unicode].		list]</body><body package="Fonts Basics">unicodesForHexName: aPostScriptGlyphNameString	"&lt;SequenceableCollection of: Integer&gt;	aPostScriptGlyphNameString starts either with 'uni' or 'u', followed by hexadecimal digits"	| digits unicode |	(aPostScriptGlyphNameString notEmpty and: [	aPostScriptGlyphNameString first = $u]) ifFalse: [			^#()].	(aPostScriptGlyphNameString first: 3) = 'uni' ifTrue: [		| groupsOf4Digits rst list |		groupsOf4Digits := aPostScriptGlyphNameString allButFirst: 3.		((groupsOf4Digits allSatisfy: [:char | '0123456789ABCDEF' includes: char]) and: [		(groupsOf4Digits size \\ 4) isZero]) ifFalse: [				^#()].		rst := groupsOf4Digits readStream.		list := OrderedCollection new.		[rst atEnd] whileFalse: [			| number |			number := ('16r' , (rst next: 4)) asNumber.			(self isBMPCode: number) ifTrue: [				list add: number]].		^list].	"4 to 6 hex digits"	digits := aPostScriptGlyphNameString allButFirst: 1.	((digits allSatisfy: [:char | '0123456789ABCDEF' includes: char]) and: [	digits size between: 4 and: 6]) ifFalse: [			^#()].	unicode := ('16r' , digits) asNumber.	((self isBMPCode: unicode) or: [	self isSupplementaryCode: unicode]) ifTrue: [			^Array with: unicode].	^#()</body></methods><methods><class-id>Graphics.PostScriptFontBody</class-id> <category>accessing</category><body package="Fonts Basics">characterNameAtUnicode: anInteger	"&lt;Symbol&gt;"	anInteger = Character illegalCode ifTrue: [		^#'.notdef'].	^(self class characterNamesAtUnicode: anInteger)		detect: [:symbol |		self widths includesKey: symbol]		ifNone: [		#'.notdef']</body></methods><methods><class-id>Graphics.PostScriptFontBody</class-id> <category>initialize-release</category><body package="Fonts Basics">encode: cName as: code	code &lt; 0 ifTrue: [		^self].	(self class characterNamed: cName) ifNotNil: [:char |		self encoder encode: char as: code.		self simpleWidths at: code + 1 put: (self widths at: cName)]</body></methods><methods><class-id>Graphics.PostScriptFontBody class</class-id> <category>font metric loading</category><body package="Fonts test resources">adobeGlyphDecodingForNewFonts	"&lt;IdentityDictionary key: Symbol value: Integer&gt;	the file format is slightly different from the AGL (Adobe Glyph List)"	^(self tokenLinesFrom: self aglfnTxt readStream) inject: IdentityDictionary new into: [:dict :tokens |		dict at: (tokens at: 2) asSymbol put: ('16r' , tokens first) asNumber.		dict]</body></methods><methods><class-id>Graphics.PostScriptFontBody class</class-id> <category>adobe definitions</category><body package="Fonts test resources">aglfnTxt	"from http://www.adobe.com/devnet-archive/opentype/archives/aglfn.txt"	^'# #################################################################################### Copyright (c) 2003,2005,2006,2007 Adobe Systems Incorporated# # Permission is hereby granted, free of charge, to any person obtaining a# copy of this documentation file to use, copy, publish, distribute,# sublicense, and/or sell copies of the documentation, and to permit# others to do the same, provided that:# - No modification, editing or other alteration of this document is# allowed; and# - The above copyright notice and this permission notice shall be# included in all copies of the documentation.# # Permission is hereby granted, free of charge, to any person obtaining a# copy of this documentation file, to create their own derivative works# from the content of this document to use, copy, publish, distribute,# sublicense, and/or sell the derivative works, and to permit others to do# the same, provided that the derived work is not represented as being a# copy or version of this document.# # Adobe shall not be liable to any party for any loss of revenue or profit# or for indirect, incidental, special, consequential, or other similar# damages, whether based on tort (including without limitation negligence# or strict liability), contract or other legal or equitable grounds even# if Adobe has been advised or had reason to know of the possibility of# such damages.� The Adobe materials are provided on an "AS IS" basis.�# Adobe specifically disclaims all express, statutory, or implied# warranties relating to the Adobe materials, including but not limited to# those concerning merchantability or fitness for a particular purpose or# non-infringement of any third party rights regarding the Adobe# materials.# #################################################################################### Name:          Adobe Glyph List For New Fonts# Table version: 1.7# Date:          6 Nov 2008## Description:##   The Adobe Glyph List For New Fonts (AGLFN) is meant to provide a list of #   base glyph names which are compatible with the AGL specification at#   http://www.adobe.com/devnet/opentype/archives/glyph.html.#   and which can be used as described in section 6 of that document.##   This list comprises the set of glyph names from the AGLv2.0 which map#   to via the AGL rules to the semantically correct Unicode value. For#   example, Asmall is omitted as the AGL maps this to the Unicode#   Private Use Area value F761, rather than to the Unicode value for the#   character "A". "ffi" is also omitted, as the AGL maps this to the#   Alphabetic Presentation Forms Area value FB03, rather than#   decomposing it to the three-value Unicode sequence 0066,0066,0069.#    See section 7.1 of the Unicode Standard 4.0 on this issue.#   "arrowvertex" is omitted because this now has a real Unicode#   character value, and the AGL is now incorrect in mapping this to the #   Private Use Area value  F8E6.##  If you do not find an appropriate name for your glyph in this list,#  then please refer to section 6 of the document:#   http://www.adobe.com/devnet/opentype/archives/glyph.html.##	The Unicode values and names are given for convenience.## Format: Semicolon-delimited fields:##   (1) Standard UV or CUS UV. (4 uppercase hexadecimal digits)##   (2) Glyph name. (upper- and lowercase letters, digits)##   (3) Character names: Unicode character names for standard UVs, and#       descriptive names for CUS UVs. (uppercase letters, hyphen, space)##   The entries are sorted by glyph name in increasing ASCII order; entries#   with the same glyph name are sorted in decreasing priority order.##   Lines starting with "#" are comments; blank lines should be ignored.##   1.7  [6 Nov 2008]#	http://www.adobe.com/devnet/opentype/archives/aglfn17.txt#	- reverted to the original 1.4 and earlier mappings for Delta, Omega, and mu. #	- removed mappings for "afii" names. These should#	now be assigned "uni" names.#	- removed mappings for commaaccent names. These should#	now be assigned "uni" names. ##   1.6  [30 January 2006]#	http://www.adobe.com/devnet/opentype/archives/aglfn16.txt#	- Completed work intended in 1.5##   1.5  [23 November 2005]#      - removed duplicated block at end of file#      - changed mappings:#            2206;Delta;INCREMENT changed to 0394;Delta;GREEK CAPITAL LETTER DELTA#            2126;Omega;OHM SIGN changed to 03A9;Omega;GREEK CAPITAL LETTER OMEGA#            03BC;mu;MICRO SIGN changed to 03BC;mu;GREEK SMALL LETTER MU#      - corrected statement above about why ffi is omitted.#   1.4  [24 September 2003]  Changed version to 1.4, to avoid confusion #		with the AGL 1.3#		http://www.adobe.com/devnet/opentype/archives/aglfn14.txt#			fixed spelling errors in the header#			fully removed arrowvertex, as it is mapped only to a PUA Unicode value in some fonts.##   1.1  [17 April 2003]  Renamed [Tt]cedilla back to [Tt]commaaccent:##   1.0  [31 Jan 2003]  Original version. Derived from the AGLv1.2 by:#	-  removing the PUA area codes#	- removing duplicate Unicode mappings, and #	- renaming tcommaaccent to tcedilla and Tcommaaccent to Tcedilla #0041;A;LATIN CAPITAL LETTER A00C6;AE;LATIN CAPITAL LETTER AE01FC;AEacute;LATIN CAPITAL LETTER AE WITH ACUTE00C1;Aacute;LATIN CAPITAL LETTER A WITH ACUTE0102;Abreve;LATIN CAPITAL LETTER A WITH BREVE00C2;Acircumflex;LATIN CAPITAL LETTER A WITH CIRCUMFLEX00C4;Adieresis;LATIN CAPITAL LETTER A WITH DIAERESIS00C0;Agrave;LATIN CAPITAL LETTER A WITH GRAVE0391;Alpha;GREEK CAPITAL LETTER ALPHA0386;Alphatonos;GREEK CAPITAL LETTER ALPHA WITH TONOS0100;Amacron;LATIN CAPITAL LETTER A WITH MACRON0104;Aogonek;LATIN CAPITAL LETTER A WITH OGONEK00C5;Aring;LATIN CAPITAL LETTER A WITH RING ABOVE01FA;Aringacute;LATIN CAPITAL LETTER A WITH RING ABOVE AND ACUTE00C3;Atilde;LATIN CAPITAL LETTER A WITH TILDE0042;B;LATIN CAPITAL LETTER B0392;Beta;GREEK CAPITAL LETTER BETA0043;C;LATIN CAPITAL LETTER C0106;Cacute;LATIN CAPITAL LETTER C WITH ACUTE010C;Ccaron;LATIN CAPITAL LETTER C WITH CARON00C7;Ccedilla;LATIN CAPITAL LETTER C WITH CEDILLA0108;Ccircumflex;LATIN CAPITAL LETTER C WITH CIRCUMFLEX010A;Cdotaccent;LATIN CAPITAL LETTER C WITH DOT ABOVE03A7;Chi;GREEK CAPITAL LETTER CHI0044;D;LATIN CAPITAL LETTER D010E;Dcaron;LATIN CAPITAL LETTER D WITH CARON0110;Dcroat;LATIN CAPITAL LETTER D WITH STROKE2206;Delta;INCREMENT0045;E;LATIN CAPITAL LETTER E00C9;Eacute;LATIN CAPITAL LETTER E WITH ACUTE0114;Ebreve;LATIN CAPITAL LETTER E WITH BREVE011A;Ecaron;LATIN CAPITAL LETTER E WITH CARON00CA;Ecircumflex;LATIN CAPITAL LETTER E WITH CIRCUMFLEX00CB;Edieresis;LATIN CAPITAL LETTER E WITH DIAERESIS0116;Edotaccent;LATIN CAPITAL LETTER E WITH DOT ABOVE00C8;Egrave;LATIN CAPITAL LETTER E WITH GRAVE0112;Emacron;LATIN CAPITAL LETTER E WITH MACRON014A;Eng;LATIN CAPITAL LETTER ENG0118;Eogonek;LATIN CAPITAL LETTER E WITH OGONEK0395;Epsilon;GREEK CAPITAL LETTER EPSILON0388;Epsilontonos;GREEK CAPITAL LETTER EPSILON WITH TONOS0397;Eta;GREEK CAPITAL LETTER ETA0389;Etatonos;GREEK CAPITAL LETTER ETA WITH TONOS00D0;Eth;LATIN CAPITAL LETTER ETH20AC;Euro;EURO SIGN0046;F;LATIN CAPITAL LETTER F0047;G;LATIN CAPITAL LETTER G0393;Gamma;GREEK CAPITAL LETTER GAMMA011E;Gbreve;LATIN CAPITAL LETTER G WITH BREVE01E6;Gcaron;LATIN CAPITAL LETTER G WITH CARON011C;Gcircumflex;LATIN CAPITAL LETTER G WITH CIRCUMFLEX0120;Gdotaccent;LATIN CAPITAL LETTER G WITH DOT ABOVE0048;H;LATIN CAPITAL LETTER H25CF;H18533;BLACK CIRCLE25AA;H18543;BLACK SMALL SQUARE25AB;H18551;WHITE SMALL SQUARE25A1;H22073;WHITE SQUARE0126;Hbar;LATIN CAPITAL LETTER H WITH STROKE0124;Hcircumflex;LATIN CAPITAL LETTER H WITH CIRCUMFLEX0049;I;LATIN CAPITAL LETTER I0132;IJ;LATIN CAPITAL LIGATURE IJ00CD;Iacute;LATIN CAPITAL LETTER I WITH ACUTE012C;Ibreve;LATIN CAPITAL LETTER I WITH BREVE00CE;Icircumflex;LATIN CAPITAL LETTER I WITH CIRCUMFLEX00CF;Idieresis;LATIN CAPITAL LETTER I WITH DIAERESIS0130;Idotaccent;LATIN CAPITAL LETTER I WITH DOT ABOVE2111;Ifraktur;BLACK-LETTER CAPITAL I00CC;Igrave;LATIN CAPITAL LETTER I WITH GRAVE012A;Imacron;LATIN CAPITAL LETTER I WITH MACRON012E;Iogonek;LATIN CAPITAL LETTER I WITH OGONEK0399;Iota;GREEK CAPITAL LETTER IOTA03AA;Iotadieresis;GREEK CAPITAL LETTER IOTA WITH DIALYTIKA038A;Iotatonos;GREEK CAPITAL LETTER IOTA WITH TONOS0128;Itilde;LATIN CAPITAL LETTER I WITH TILDE004A;J;LATIN CAPITAL LETTER J0134;Jcircumflex;LATIN CAPITAL LETTER J WITH CIRCUMFLEX004B;K;LATIN CAPITAL LETTER K039A;Kappa;GREEK CAPITAL LETTER KAPPA004C;L;LATIN CAPITAL LETTER L0139;Lacute;LATIN CAPITAL LETTER L WITH ACUTE039B;Lambda;GREEK CAPITAL LETTER LAMDA013D;Lcaron;LATIN CAPITAL LETTER L WITH CARON013F;Ldot;LATIN CAPITAL LETTER L WITH MIDDLE DOT0141;Lslash;LATIN CAPITAL LETTER L WITH STROKE004D;M;LATIN CAPITAL LETTER M039C;Mu;GREEK CAPITAL LETTER MU004E;N;LATIN CAPITAL LETTER N0143;Nacute;LATIN CAPITAL LETTER N WITH ACUTE0147;Ncaron;LATIN CAPITAL LETTER N WITH CARON00D1;Ntilde;LATIN CAPITAL LETTER N WITH TILDE039D;Nu;GREEK CAPITAL LETTER NU004F;O;LATIN CAPITAL LETTER O0152;OE;LATIN CAPITAL LIGATURE OE00D3;Oacute;LATIN CAPITAL LETTER O WITH ACUTE014E;Obreve;LATIN CAPITAL LETTER O WITH BREVE00D4;Ocircumflex;LATIN CAPITAL LETTER O WITH CIRCUMFLEX00D6;Odieresis;LATIN CAPITAL LETTER O WITH DIAERESIS00D2;Ograve;LATIN CAPITAL LETTER O WITH GRAVE01A0;Ohorn;LATIN CAPITAL LETTER O WITH HORN0150;Ohungarumlaut;LATIN CAPITAL LETTER O WITH DOUBLE ACUTE014C;Omacron;LATIN CAPITAL LETTER O WITH MACRON2126;Omega;OHM SIGN038F;Omegatonos;GREEK CAPITAL LETTER OMEGA WITH TONOS039F;Omicron;GREEK CAPITAL LETTER OMICRON038C;Omicrontonos;GREEK CAPITAL LETTER OMICRON WITH TONOS00D8;Oslash;LATIN CAPITAL LETTER O WITH STROKE01FE;Oslashacute;LATIN CAPITAL LETTER O WITH STROKE AND ACUTE00D5;Otilde;LATIN CAPITAL LETTER O WITH TILDE0050;P;LATIN CAPITAL LETTER P03A6;Phi;GREEK CAPITAL LETTER PHI03A0;Pi;GREEK CAPITAL LETTER PI03A8;Psi;GREEK CAPITAL LETTER PSI0051;Q;LATIN CAPITAL LETTER Q0052;R;LATIN CAPITAL LETTER R0154;Racute;LATIN CAPITAL LETTER R WITH ACUTE0158;Rcaron;LATIN CAPITAL LETTER R WITH CARON211C;Rfraktur;BLACK-LETTER CAPITAL R03A1;Rho;GREEK CAPITAL LETTER RHO0053;S;LATIN CAPITAL LETTER S250C;SF010000;BOX DRAWINGS LIGHT DOWN AND RIGHT2514;SF020000;BOX DRAWINGS LIGHT UP AND RIGHT2510;SF030000;BOX DRAWINGS LIGHT DOWN AND LEFT2518;SF040000;BOX DRAWINGS LIGHT UP AND LEFT253C;SF050000;BOX DRAWINGS LIGHT VERTICAL AND HORIZONTAL252C;SF060000;BOX DRAWINGS LIGHT DOWN AND HORIZONTAL2534;SF070000;BOX DRAWINGS LIGHT UP AND HORIZONTAL251C;SF080000;BOX DRAWINGS LIGHT VERTICAL AND RIGHT2524;SF090000;BOX DRAWINGS LIGHT VERTICAL AND LEFT2500;SF100000;BOX DRAWINGS LIGHT HORIZONTAL2502;SF110000;BOX DRAWINGS LIGHT VERTICAL2561;SF190000;BOX DRAWINGS VERTICAL SINGLE AND LEFT DOUBLE2562;SF200000;BOX DRAWINGS VERTICAL DOUBLE AND LEFT SINGLE2556;SF210000;BOX DRAWINGS DOWN DOUBLE AND LEFT SINGLE2555;SF220000;BOX DRAWINGS DOWN SINGLE AND LEFT DOUBLE2563;SF230000;BOX DRAWINGS DOUBLE VERTICAL AND LEFT2551;SF240000;BOX DRAWINGS DOUBLE VERTICAL2557;SF250000;BOX DRAWINGS DOUBLE DOWN AND LEFT255D;SF260000;BOX DRAWINGS DOUBLE UP AND LEFT255C;SF270000;BOX DRAWINGS UP DOUBLE AND LEFT SINGLE255B;SF280000;BOX DRAWINGS UP SINGLE AND LEFT DOUBLE255E;SF360000;BOX DRAWINGS VERTICAL SINGLE AND RIGHT DOUBLE255F;SF370000;BOX DRAWINGS VERTICAL DOUBLE AND RIGHT SINGLE255A;SF380000;BOX DRAWINGS DOUBLE UP AND RIGHT2554;SF390000;BOX DRAWINGS DOUBLE DOWN AND RIGHT2569;SF400000;BOX DRAWINGS DOUBLE UP AND HORIZONTAL2566;SF410000;BOX DRAWINGS DOUBLE DOWN AND HORIZONTAL2560;SF420000;BOX DRAWINGS DOUBLE VERTICAL AND RIGHT2550;SF430000;BOX DRAWINGS DOUBLE HORIZONTAL256C;SF440000;BOX DRAWINGS DOUBLE VERTICAL AND HORIZONTAL2567;SF450000;BOX DRAWINGS UP SINGLE AND HORIZONTAL DOUBLE2568;SF460000;BOX DRAWINGS UP DOUBLE AND HORIZONTAL SINGLE2564;SF470000;BOX DRAWINGS DOWN SINGLE AND HORIZONTAL DOUBLE2565;SF480000;BOX DRAWINGS DOWN DOUBLE AND HORIZONTAL SINGLE2559;SF490000;BOX DRAWINGS UP DOUBLE AND RIGHT SINGLE2558;SF500000;BOX DRAWINGS UP SINGLE AND RIGHT DOUBLE2552;SF510000;BOX DRAWINGS DOWN SINGLE AND RIGHT DOUBLE2553;SF520000;BOX DRAWINGS DOWN DOUBLE AND RIGHT SINGLE256B;SF530000;BOX DRAWINGS VERTICAL DOUBLE AND HORIZONTAL SINGLE256A;SF540000;BOX DRAWINGS VERTICAL SINGLE AND HORIZONTAL DOUBLE015A;Sacute;LATIN CAPITAL LETTER S WITH ACUTE0160;Scaron;LATIN CAPITAL LETTER S WITH CARON015E;Scedilla;LATIN CAPITAL LETTER S WITH CEDILLA015C;Scircumflex;LATIN CAPITAL LETTER S WITH CIRCUMFLEX03A3;Sigma;GREEK CAPITAL LETTER SIGMA0054;T;LATIN CAPITAL LETTER T03A4;Tau;GREEK CAPITAL LETTER TAU0166;Tbar;LATIN CAPITAL LETTER T WITH STROKE0164;Tcaron;LATIN CAPITAL LETTER T WITH CARON0398;Theta;GREEK CAPITAL LETTER THETA00DE;Thorn;LATIN CAPITAL LETTER THORN0055;U;LATIN CAPITAL LETTER U00DA;Uacute;LATIN CAPITAL LETTER U WITH ACUTE016C;Ubreve;LATIN CAPITAL LETTER U WITH BREVE00DB;Ucircumflex;LATIN CAPITAL LETTER U WITH CIRCUMFLEX00DC;Udieresis;LATIN CAPITAL LETTER U WITH DIAERESIS00D9;Ugrave;LATIN CAPITAL LETTER U WITH GRAVE01AF;Uhorn;LATIN CAPITAL LETTER U WITH HORN0170;Uhungarumlaut;LATIN CAPITAL LETTER U WITH DOUBLE ACUTE016A;Umacron;LATIN CAPITAL LETTER U WITH MACRON0172;Uogonek;LATIN CAPITAL LETTER U WITH OGONEK03A5;Upsilon;GREEK CAPITAL LETTER UPSILON03D2;Upsilon1;GREEK UPSILON WITH HOOK SYMBOL03AB;Upsilondieresis;GREEK CAPITAL LETTER UPSILON WITH DIALYTIKA038E;Upsilontonos;GREEK CAPITAL LETTER UPSILON WITH TONOS016E;Uring;LATIN CAPITAL LETTER U WITH RING ABOVE0168;Utilde;LATIN CAPITAL LETTER U WITH TILDE0056;V;LATIN CAPITAL LETTER V0057;W;LATIN CAPITAL LETTER W1E82;Wacute;LATIN CAPITAL LETTER W WITH ACUTE0174;Wcircumflex;LATIN CAPITAL LETTER W WITH CIRCUMFLEX1E84;Wdieresis;LATIN CAPITAL LETTER W WITH DIAERESIS1E80;Wgrave;LATIN CAPITAL LETTER W WITH GRAVE0058;X;LATIN CAPITAL LETTER X039E;Xi;GREEK CAPITAL LETTER XI0059;Y;LATIN CAPITAL LETTER Y00DD;Yacute;LATIN CAPITAL LETTER Y WITH ACUTE0176;Ycircumflex;LATIN CAPITAL LETTER Y WITH CIRCUMFLEX0178;Ydieresis;LATIN CAPITAL LETTER Y WITH DIAERESIS1EF2;Ygrave;LATIN CAPITAL LETTER Y WITH GRAVE005A;Z;LATIN CAPITAL LETTER Z0179;Zacute;LATIN CAPITAL LETTER Z WITH ACUTE017D;Zcaron;LATIN CAPITAL LETTER Z WITH CARON017B;Zdotaccent;LATIN CAPITAL LETTER Z WITH DOT ABOVE0396;Zeta;GREEK CAPITAL LETTER ZETA0061;a;LATIN SMALL LETTER A00E1;aacute;LATIN SMALL LETTER A WITH ACUTE0103;abreve;LATIN SMALL LETTER A WITH BREVE00E2;acircumflex;LATIN SMALL LETTER A WITH CIRCUMFLEX00B4;acute;ACUTE ACCENT0301;acutecomb;COMBINING ACUTE ACCENT00E4;adieresis;LATIN SMALL LETTER A WITH DIAERESIS00E6;ae;LATIN SMALL LETTER AE01FD;aeacute;LATIN SMALL LETTER AE WITH ACUTE00E0;agrave;LATIN SMALL LETTER A WITH GRAVE2135;aleph;ALEF SYMBOL03B1;alpha;GREEK SMALL LETTER ALPHA03AC;alphatonos;GREEK SMALL LETTER ALPHA WITH TONOS0101;amacron;LATIN SMALL LETTER A WITH MACRON0026;ampersand;AMPERSAND2220;angle;ANGLE2329;angleleft;LEFT-POINTING ANGLE BRACKET232A;angleright;RIGHT-POINTING ANGLE BRACKET0387;anoteleia;GREEK ANO TELEIA0105;aogonek;LATIN SMALL LETTER A WITH OGONEK2248;approxequal;ALMOST EQUAL TO00E5;aring;LATIN SMALL LETTER A WITH RING ABOVE01FB;aringacute;LATIN SMALL LETTER A WITH RING ABOVE AND ACUTE2194;arrowboth;LEFT RIGHT ARROW21D4;arrowdblboth;LEFT RIGHT DOUBLE ARROW21D3;arrowdbldown;DOWNWARDS DOUBLE ARROW21D0;arrowdblleft;LEFTWARDS DOUBLE ARROW21D2;arrowdblright;RIGHTWARDS DOUBLE ARROW21D1;arrowdblup;UPWARDS DOUBLE ARROW2193;arrowdown;DOWNWARDS ARROW2190;arrowleft;LEFTWARDS ARROW2192;arrowright;RIGHTWARDS ARROW2191;arrowup;UPWARDS ARROW2195;arrowupdn;UP DOWN ARROW21A8;arrowupdnbse;UP DOWN ARROW WITH BASE005E;asciicircum;CIRCUMFLEX ACCENT007E;asciitilde;TILDE002A;asterisk;ASTERISK2217;asteriskmath;ASTERISK OPERATOR0040;at;COMMERCIAL AT00E3;atilde;LATIN SMALL LETTER A WITH TILDE0062;b;LATIN SMALL LETTER B005C;backslash;REVERSE SOLIDUS007C;bar;VERTICAL LINE03B2;beta;GREEK SMALL LETTER BETA2588;block;FULL BLOCK007B;braceleft;LEFT CURLY BRACKET007D;braceright;RIGHT CURLY BRACKET005B;bracketleft;LEFT SQUARE BRACKET005D;bracketright;RIGHT SQUARE BRACKET02D8;breve;BREVE00A6;brokenbar;BROKEN BAR2022;bullet;BULLET0063;c;LATIN SMALL LETTER C0107;cacute;LATIN SMALL LETTER C WITH ACUTE02C7;caron;CARON21B5;carriagereturn;DOWNWARDS ARROW WITH CORNER LEFTWARDS010D;ccaron;LATIN SMALL LETTER C WITH CARON00E7;ccedilla;LATIN SMALL LETTER C WITH CEDILLA0109;ccircumflex;LATIN SMALL LETTER C WITH CIRCUMFLEX010B;cdotaccent;LATIN SMALL LETTER C WITH DOT ABOVE00B8;cedilla;CEDILLA00A2;cent;CENT SIGN03C7;chi;GREEK SMALL LETTER CHI25CB;circle;WHITE CIRCLE2297;circlemultiply;CIRCLED TIMES2295;circleplus;CIRCLED PLUS02C6;circumflex;MODIFIER LETTER CIRCUMFLEX ACCENT2663;club;BLACK CLUB SUIT003A;colon;COLON20A1;colonmonetary;COLON SIGN002C;comma;COMMA2245;congruent;APPROXIMATELY EQUAL TO00A9;copyright;COPYRIGHT SIGN00A4;currency;CURRENCY SIGN0064;d;LATIN SMALL LETTER D2020;dagger;DAGGER2021;daggerdbl;DOUBLE DAGGER010F;dcaron;LATIN SMALL LETTER D WITH CARON0111;dcroat;LATIN SMALL LETTER D WITH STROKE00B0;degree;DEGREE SIGN03B4;delta;GREEK SMALL LETTER DELTA2666;diamond;BLACK DIAMOND SUIT00A8;dieresis;DIAERESIS0385;dieresistonos;GREEK DIALYTIKA TONOS00F7;divide;DIVISION SIGN2593;dkshade;DARK SHADE2584;dnblock;LOWER HALF BLOCK0024;dollar;DOLLAR SIGN20AB;dong;DONG SIGN02D9;dotaccent;DOT ABOVE0323;dotbelowcomb;COMBINING DOT BELOW0131;dotlessi;LATIN SMALL LETTER DOTLESS I22C5;dotmath;DOT OPERATOR0065;e;LATIN SMALL LETTER E00E9;eacute;LATIN SMALL LETTER E WITH ACUTE0115;ebreve;LATIN SMALL LETTER E WITH BREVE011B;ecaron;LATIN SMALL LETTER E WITH CARON00EA;ecircumflex;LATIN SMALL LETTER E WITH CIRCUMFLEX00EB;edieresis;LATIN SMALL LETTER E WITH DIAERESIS0117;edotaccent;LATIN SMALL LETTER E WITH DOT ABOVE00E8;egrave;LATIN SMALL LETTER E WITH GRAVE0038;eight;DIGIT EIGHT2208;element;ELEMENT OF2026;ellipsis;HORIZONTAL ELLIPSIS0113;emacron;LATIN SMALL LETTER E WITH MACRON2014;emdash;EM DASH2205;emptyset;EMPTY SET2013;endash;EN DASH014B;eng;LATIN SMALL LETTER ENG0119;eogonek;LATIN SMALL LETTER E WITH OGONEK03B5;epsilon;GREEK SMALL LETTER EPSILON03AD;epsilontonos;GREEK SMALL LETTER EPSILON WITH TONOS003D;equal;EQUALS SIGN2261;equivalence;IDENTICAL TO212E;estimated;ESTIMATED SYMBOL03B7;eta;GREEK SMALL LETTER ETA03AE;etatonos;GREEK SMALL LETTER ETA WITH TONOS00F0;eth;LATIN SMALL LETTER ETH0021;exclam;EXCLAMATION MARK203C;exclamdbl;DOUBLE EXCLAMATION MARK00A1;exclamdown;INVERTED EXCLAMATION MARK2203;existential;THERE EXISTS0066;f;LATIN SMALL LETTER F2640;female;FEMALE SIGN2012;figuredash;FIGURE DASH25A0;filledbox;BLACK SQUARE25AC;filledrect;BLACK RECTANGLE0035;five;DIGIT FIVE215D;fiveeighths;VULGAR FRACTION FIVE EIGHTHS0192;florin;LATIN SMALL LETTER F WITH HOOK0034;four;DIGIT FOUR2044;fraction;FRACTION SLASH20A3;franc;FRENCH FRANC SIGN0067;g;LATIN SMALL LETTER G03B3;gamma;GREEK SMALL LETTER GAMMA011F;gbreve;LATIN SMALL LETTER G WITH BREVE01E7;gcaron;LATIN SMALL LETTER G WITH CARON011D;gcircumflex;LATIN SMALL LETTER G WITH CIRCUMFLEX0121;gdotaccent;LATIN SMALL LETTER G WITH DOT ABOVE00DF;germandbls;LATIN SMALL LETTER SHARP S2207;gradient;NABLA0060;grave;GRAVE ACCENT0300;gravecomb;COMBINING GRAVE ACCENT003E;greater;GREATER-THAN SIGN2265;greaterequal;GREATER-THAN OR EQUAL TO00AB;guillemotleft;LEFT-POINTING DOUBLE ANGLE QUOTATION MARK00BB;guillemotright;RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK2039;guilsinglleft;SINGLE LEFT-POINTING ANGLE QUOTATION MARK203A;guilsinglright;SINGLE RIGHT-POINTING ANGLE QUOTATION MARK0068;h;LATIN SMALL LETTER H0127;hbar;LATIN SMALL LETTER H WITH STROKE0125;hcircumflex;LATIN SMALL LETTER H WITH CIRCUMFLEX2665;heart;BLACK HEART SUIT0309;hookabovecomb;COMBINING HOOK ABOVE2302;house;HOUSE02DD;hungarumlaut;DOUBLE ACUTE ACCENT002D;hyphen;HYPHEN-MINUS0069;i;LATIN SMALL LETTER I00ED;iacute;LATIN SMALL LETTER I WITH ACUTE012D;ibreve;LATIN SMALL LETTER I WITH BREVE00EE;icircumflex;LATIN SMALL LETTER I WITH CIRCUMFLEX00EF;idieresis;LATIN SMALL LETTER I WITH DIAERESIS00EC;igrave;LATIN SMALL LETTER I WITH GRAVE0133;ij;LATIN SMALL LIGATURE IJ012B;imacron;LATIN SMALL LETTER I WITH MACRON221E;infinity;INFINITY222B;integral;INTEGRAL2321;integralbt;BOTTOM HALF INTEGRAL2320;integraltp;TOP HALF INTEGRAL2229;intersection;INTERSECTION25D8;invbullet;INVERSE BULLET25D9;invcircle;INVERSE WHITE CIRCLE263B;invsmileface;BLACK SMILING FACE012F;iogonek;LATIN SMALL LETTER I WITH OGONEK03B9;iota;GREEK SMALL LETTER IOTA03CA;iotadieresis;GREEK SMALL LETTER IOTA WITH DIALYTIKA0390;iotadieresistonos;GREEK SMALL LETTER IOTA WITH DIALYTIKA AND TONOS03AF;iotatonos;GREEK SMALL LETTER IOTA WITH TONOS0129;itilde;LATIN SMALL LETTER I WITH TILDE006A;j;LATIN SMALL LETTER J0135;jcircumflex;LATIN SMALL LETTER J WITH CIRCUMFLEX006B;k;LATIN SMALL LETTER K03BA;kappa;GREEK SMALL LETTER KAPPA0138;kgreenlandic;LATIN SMALL LETTER KRA006C;l;LATIN SMALL LETTER L013A;lacute;LATIN SMALL LETTER L WITH ACUTE03BB;lambda;GREEK SMALL LETTER LAMDA013E;lcaron;LATIN SMALL LETTER L WITH CARON0140;ldot;LATIN SMALL LETTER L WITH MIDDLE DOT003C;less;LESS-THAN SIGN2264;lessequal;LESS-THAN OR EQUAL TO258C;lfblock;LEFT HALF BLOCK20A4;lira;LIRA SIGN2227;logicaland;LOGICAL AND00AC;logicalnot;NOT SIGN2228;logicalor;LOGICAL OR017F;longs;LATIN SMALL LETTER LONG S25CA;lozenge;LOZENGE0142;lslash;LATIN SMALL LETTER L WITH STROKE2591;ltshade;LIGHT SHADE006D;m;LATIN SMALL LETTER M00AF;macron;MACRON2642;male;MALE SIGN2212;minus;MINUS SIGN2032;minute;PRIME00B5;mu;MICRO SIGN00D7;multiply;MULTIPLICATION SIGN266A;musicalnote;EIGHTH NOTE266B;musicalnotedbl;BEAMED EIGHTH NOTES006E;n;LATIN SMALL LETTER N0144;nacute;LATIN SMALL LETTER N WITH ACUTE0149;napostrophe;LATIN SMALL LETTER N PRECEDED BY APOSTROPHE0148;ncaron;LATIN SMALL LETTER N WITH CARON0039;nine;DIGIT NINE2209;notelement;NOT AN ELEMENT OF2260;notequal;NOT EQUAL TO2284;notsubset;NOT A SUBSET OF00F1;ntilde;LATIN SMALL LETTER N WITH TILDE03BD;nu;GREEK SMALL LETTER NU0023;numbersign;NUMBER SIGN006F;o;LATIN SMALL LETTER O00F3;oacute;LATIN SMALL LETTER O WITH ACUTE014F;obreve;LATIN SMALL LETTER O WITH BREVE00F4;ocircumflex;LATIN SMALL LETTER O WITH CIRCUMFLEX00F6;odieresis;LATIN SMALL LETTER O WITH DIAERESIS0153;oe;LATIN SMALL LIGATURE OE02DB;ogonek;OGONEK00F2;ograve;LATIN SMALL LETTER O WITH GRAVE01A1;ohorn;LATIN SMALL LETTER O WITH HORN0151;ohungarumlaut;LATIN SMALL LETTER O WITH DOUBLE ACUTE014D;omacron;LATIN SMALL LETTER O WITH MACRON03C9;omega;GREEK SMALL LETTER OMEGA03D6;omega1;GREEK PI SYMBOL03CE;omegatonos;GREEK SMALL LETTER OMEGA WITH TONOS03BF;omicron;GREEK SMALL LETTER OMICRON03CC;omicrontonos;GREEK SMALL LETTER OMICRON WITH TONOS0031;one;DIGIT ONE2024;onedotenleader;ONE DOT LEADER215B;oneeighth;VULGAR FRACTION ONE EIGHTH00BD;onehalf;VULGAR FRACTION ONE HALF00BC;onequarter;VULGAR FRACTION ONE QUARTER2153;onethird;VULGAR FRACTION ONE THIRD25E6;openbullet;WHITE BULLET00AA;ordfeminine;FEMININE ORDINAL INDICATOR00BA;ordmasculine;MASCULINE ORDINAL INDICATOR221F;orthogonal;RIGHT ANGLE00F8;oslash;LATIN SMALL LETTER O WITH STROKE01FF;oslashacute;LATIN SMALL LETTER O WITH STROKE AND ACUTE00F5;otilde;LATIN SMALL LETTER O WITH TILDE0070;p;LATIN SMALL LETTER P00B6;paragraph;PILCROW SIGN0028;parenleft;LEFT PARENTHESIS0029;parenright;RIGHT PARENTHESIS2202;partialdiff;PARTIAL DIFFERENTIAL0025;percent;PERCENT SIGN002E;period;FULL STOP00B7;periodcentered;MIDDLE DOT22A5;perpendicular;UP TACK2030;perthousand;PER MILLE SIGN20A7;peseta;PESETA SIGN03C6;phi;GREEK SMALL LETTER PHI03D5;phi1;GREEK PHI SYMBOL03C0;pi;GREEK SMALL LETTER PI002B;plus;PLUS SIGN00B1;plusminus;PLUS-MINUS SIGN211E;prescription;PRESCRIPTION TAKE220F;product;N-ARY PRODUCT2282;propersubset;SUBSET OF2283;propersuperset;SUPERSET OF221D;proportional;PROPORTIONAL TO03C8;psi;GREEK SMALL LETTER PSI0071;q;LATIN SMALL LETTER Q003F;question;QUESTION MARK00BF;questiondown;INVERTED QUESTION MARK0022;quotedbl;QUOTATION MARK201E;quotedblbase;DOUBLE LOW-9 QUOTATION MARK201C;quotedblleft;LEFT DOUBLE QUOTATION MARK201D;quotedblright;RIGHT DOUBLE QUOTATION MARK2018;quoteleft;LEFT SINGLE QUOTATION MARK201B;quotereversed;SINGLE HIGH-REVERSED-9 QUOTATION MARK2019;quoteright;RIGHT SINGLE QUOTATION MARK201A;quotesinglbase;SINGLE LOW-9 QUOTATION MARK0027;quotesingle;APOSTROPHE0072;r;LATIN SMALL LETTER R0155;racute;LATIN SMALL LETTER R WITH ACUTE221A;radical;SQUARE ROOT0159;rcaron;LATIN SMALL LETTER R WITH CARON2286;reflexsubset;SUBSET OF OR EQUAL TO2287;reflexsuperset;SUPERSET OF OR EQUAL TO00AE;registered;REGISTERED SIGN2310;revlogicalnot;REVERSED NOT SIGN03C1;rho;GREEK SMALL LETTER RHO02DA;ring;RING ABOVE2590;rtblock;RIGHT HALF BLOCK0073;s;LATIN SMALL LETTER S015B;sacute;LATIN SMALL LETTER S WITH ACUTE0161;scaron;LATIN SMALL LETTER S WITH CARON015F;scedilla;LATIN SMALL LETTER S WITH CEDILLA015D;scircumflex;LATIN SMALL LETTER S WITH CIRCUMFLEX2033;second;DOUBLE PRIME00A7;section;SECTION SIGN003B;semicolon;SEMICOLON0037;seven;DIGIT SEVEN215E;seveneighths;VULGAR FRACTION SEVEN EIGHTHS2592;shade;MEDIUM SHADE03C3;sigma;GREEK SMALL LETTER SIGMA03C2;sigma1;GREEK SMALL LETTER FINAL SIGMA223C;similar;TILDE OPERATOR0036;six;DIGIT SIX002F;slash;SOLIDUS263A;smileface;WHITE SMILING FACE0020;space;SPACE2660;spade;BLACK SPADE SUIT00A3;sterling;POUND SIGN220B;suchthat;CONTAINS AS MEMBER2211;summation;N-ARY SUMMATION263C;sun;WHITE SUN WITH RAYS0074;t;LATIN SMALL LETTER T03C4;tau;GREEK SMALL LETTER TAU0167;tbar;LATIN SMALL LETTER T WITH STROKE0165;tcaron;LATIN SMALL LETTER T WITH CARON2234;therefore;THEREFORE03B8;theta;GREEK SMALL LETTER THETA03D1;theta1;GREEK THETA SYMBOL00FE;thorn;LATIN SMALL LETTER THORN0033;three;DIGIT THREE215C;threeeighths;VULGAR FRACTION THREE EIGHTHS00BE;threequarters;VULGAR FRACTION THREE QUARTERS02DC;tilde;SMALL TILDE0303;tildecomb;COMBINING TILDE0384;tonos;GREEK TONOS2122;trademark;TRADE MARK SIGN25BC;triagdn;BLACK DOWN-POINTING TRIANGLE25C4;triaglf;BLACK LEFT-POINTING POINTER25BA;triagrt;BLACK RIGHT-POINTING POINTER25B2;triagup;BLACK UP-POINTING TRIANGLE0032;two;DIGIT TWO2025;twodotenleader;TWO DOT LEADER2154;twothirds;VULGAR FRACTION TWO THIRDS0075;u;LATIN SMALL LETTER U00FA;uacute;LATIN SMALL LETTER U WITH ACUTE016D;ubreve;LATIN SMALL LETTER U WITH BREVE00FB;ucircumflex;LATIN SMALL LETTER U WITH CIRCUMFLEX00FC;udieresis;LATIN SMALL LETTER U WITH DIAERESIS00F9;ugrave;LATIN SMALL LETTER U WITH GRAVE01B0;uhorn;LATIN SMALL LETTER U WITH HORN0171;uhungarumlaut;LATIN SMALL LETTER U WITH DOUBLE ACUTE016B;umacron;LATIN SMALL LETTER U WITH MACRON005F;underscore;LOW LINE2017;underscoredbl;DOUBLE LOW LINE222A;union;UNION2200;universal;FOR ALL0173;uogonek;LATIN SMALL LETTER U WITH OGONEK2580;upblock;UPPER HALF BLOCK03C5;upsilon;GREEK SMALL LETTER UPSILON03CB;upsilondieresis;GREEK SMALL LETTER UPSILON WITH DIALYTIKA03B0;upsilondieresistonos;GREEK SMALL LETTER UPSILON WITH DIALYTIKA AND TONOS03CD;upsilontonos;GREEK SMALL LETTER UPSILON WITH TONOS016F;uring;LATIN SMALL LETTER U WITH RING ABOVE0169;utilde;LATIN SMALL LETTER U WITH TILDE0076;v;LATIN SMALL LETTER V0077;w;LATIN SMALL LETTER W1E83;wacute;LATIN SMALL LETTER W WITH ACUTE0175;wcircumflex;LATIN SMALL LETTER W WITH CIRCUMFLEX1E85;wdieresis;LATIN SMALL LETTER W WITH DIAERESIS2118;weierstrass;SCRIPT CAPITAL P1E81;wgrave;LATIN SMALL LETTER W WITH GRAVE0078;x;LATIN SMALL LETTER X03BE;xi;GREEK SMALL LETTER XI0079;y;LATIN SMALL LETTER Y00FD;yacute;LATIN SMALL LETTER Y WITH ACUTE0177;ycircumflex;LATIN SMALL LETTER Y WITH CIRCUMFLEX00FF;ydieresis;LATIN SMALL LETTER Y WITH DIAERESIS00A5;yen;YEN SIGN1EF3;ygrave;LATIN SMALL LETTER Y WITH GRAVE007A;z;LATIN SMALL LETTER Z017A;zacute;LATIN SMALL LETTER Z WITH ACUTE017E;zcaron;LATIN SMALL LETTER Z WITH CARON017C;zdotaccent;LATIN SMALL LETTER Z WITH DOT ABOVE0030;zero;DIGIT ZERO03B6;zeta;GREEK SMALL LETTER ZETA'</body></methods><methods><class-id>Graphics.PostScriptFontBody class</class-id> <category>font metric loading</category><body package="Fonts test resources">processEncodingsOld	| codes codeStream |	codes := self psCodes.	(codes class == Array and: [codes size even])		ifFalse:	[self error: (#errBadCharacterCode &lt;&lt; #dialogs &gt;&gt; 'Character code file may be bad')].	codeStream := codes readStream.	Decodings := IdentityDictionary new.	Encodings := IdentityDictionary new.	[codeStream atEnd]		whileFalse:			[| charName charVal |			charName := codeStream next.			charVal := codeStream next.			(charName isString and: [charVal isInteger])				ifTrue:	[charName := charName asSymbol.						Encodings at: charVal								put: ((Encodings										at: charVal										ifAbsent: [#()])									copyWith: charName).						Decodings at: charName put: charVal]				ifFalse:	[self error: (#errBadCharacterCode &lt;&lt; #dialogs &gt;&gt; 'Character code file may be bad')]].</body></methods><methods><class-id>Graphics.ByteCharacterEncoder</class-id> <category>private</category><body package="Fonts test resources">encoder	"private - addition to test for differences"	^encoder</body></methods><methods><class-id>Graphics.Pixmap</class-id> <category>accessing</category><body package="Fonts for Windows">hBitmap	"&lt;HGDIOBJ *&gt;"	^OSSystemSupport concreteClass new HGDIOBJ baseType newOfAddress: (self osHandle unsignedLongAt: 5)</body></methods><methods><class-id>Graphics.Pixmap</class-id> <category>actions</category><body package="Fonts for Windows">withHDCDo: oneArgumentBlock	"answer whatever the block answers"	| lib |	lib := OSSystemSupport concreteClass new.	^lib withBitmapHDCDo: [:hdc |		lib withObject: self hBitmap in: hdc do: [oneArgumentBlock value: hdc]]</body></methods><methods><class-id>Graphics.DisplaySurface</class-id> <category>accessing</category><body package="Fonts for Windows">osHandle	^handle</body></methods><methods><class-id>Graphics.GraphicsMedium</class-id> <category>actions</category><body package="Fonts for Windows">withHDCDo: oneArgumentBlock	^self error: 'not implemented yet'</body></methods><methods><class-id>UI.ApplicationModel</class-id> <category>actions</category><body package="Fonts for Windows">chooseNativeScreenFont	"&lt;LogFont | nil&gt;"	"self chooseNativeScreenFont"	^self mainWindow chooseNativeScreenFont</body><body package="Fonts for Windows">chooseNativeScreenFontNamed: aFacename	"&lt;LogFont | nil&gt;"	"self chooseNativeScreenFontNamed: 'Taz' "	^self mainWindow chooseNativeScreenFontNamed: aFacename</body></methods><methods><class-id>OS.Win32SystemSupport</class-id> <category>types</category><body package="Fonts for Windows">COLORREF	&lt;C: typedef DWORD COLORREF&gt;</body></methods><methods><class-id>OS.Win32SystemSupport</class-id> <category>defines</category><body package="Fonts for Windows">COMPLEXREGION	&lt;C: #define COMPLEXREGION 3	&gt;</body><body package="Fonts for Windows">ETO_CLIPPED	&lt;C: #define ETO_CLIPPED 0x0004	&gt;</body><body package="Fonts for Windows">ETO_GLYPH_INDEX	&lt;C: #define ETO_GLYPH_INDEX 0x0010	&gt;</body><body package="Fonts for Windows">ETO_OPAQUE	&lt;C: #define ETO_OPAQUE 0x0002	&gt;</body></methods><methods><class-id>OS.Win32SystemSupport</class-id> <category>action</category><body package="Fonts for Windows">getTextMetrics: hdc	| lptm |	lptm := self TEXTMETRIC gcMalloc.	lptm zeroFill.	self GetTextMetrics: lptm in: hdc.	^lptm</body></methods><methods><class-id>OS.Win32SystemSupport</class-id> <category>types</category><body package="Fonts for Windows">HFONT	&lt;C: typedef HANDLE HFONT&gt;</body><body package="Fonts for Windows">HGDIOBJ	&lt;C: typedef HANDLE HGDIOBJ&gt;</body><body package="Fonts for Windows">HRGN	&lt;C: typedef HANDLE HRGN&gt;</body><body package="Fonts for Windows">LOGFONT	&lt;C: typedef struct tagLOGFONT LOGFONT&gt;</body><body package="Fonts for Windows">LPLOGFONT	&lt;C: typedef LOGFONT * LPLOGFONT&gt;</body><body package="Fonts for Windows">LPTEXTMETRIC	&lt;C: typedef TEXTMETRIC * LPTEXTMETRIC&gt;</body><body package="Fonts for Windows">LPWORD	&lt;C: typedef WORD * LPWORD&gt;</body></methods><methods><class-id>OS.Win32SystemSupport</class-id> <category>utilities</category><body package="Fonts for Windows">newRECTFrom: aRectangle	"&lt;RECT *&gt;"	| lprc |	lprc := self PRECT gcMalloc.	lprc memberAt: #top put: aRectangle top.	lprc memberAt: #bottom put: aRectangle bottom.	lprc memberAt: #right put: aRectangle right.	lprc memberAt: #left put: aRectangle left.	^lprc</body></methods><methods><class-id>OS.Win32SystemSupport</class-id> <category>defines</category><body package="Fonts for Windows">NULL_BRUSH	&lt;C: #define NULL_BRUSH 5	&gt;</body><body package="Fonts for Windows">NULLREGION	&lt;C: #define NULLREGION 1	&gt;</body></methods><methods><class-id>OS.Win32SystemSupport</class-id> <category>types</category><body package="Fonts for Windows">PRECT	&lt;C: typedef struct RECT PRECT&gt;</body></methods><methods><class-id>OS.Win32SystemSupport</class-id> <category>actions</category><body package="Fonts for Windows">putUnicode: name into: lpLogFont at: refMember	| bytes null aPointer |	bytes := name asByteArrayEncoding: #UCS_2.	null := (ByteString new: 1) asByteArrayEncoding: #UCS_2.	aPointer := lpLogFont refMemberAt: refMember.	aPointer copyAt: 0 from: bytes size: bytes size startingAt: 1.	aPointer copyAt: bytes size from: null size: null size startingAt: 1</body></methods><methods><class-id>OS.Win32SystemSupport</class-id> <category>action</category><body package="Fonts for Windows">selectObject: hgdiobj into: hdc	"&lt;Integer&gt;	returns the handle of the replaced object of this kind.	not for regions!"	^self SelectObject: hdc hGdiObj: hgdiobj</body></methods><methods><class-id>OS.Win32SystemSupport</class-id> <category>defines</category><body package="Fonts for Windows">SIMPLEREGION	&lt;C: #define SIMPLEREGION 2	&gt;</body></methods><methods><class-id>OS.Win32SystemSupport</class-id> <category>structs</category><body package="Fonts for Windows">tagLOGFONT	&lt;C: struct tagLOGFONT {		LONG lfHeight; 		LONG lfWidth; 		LONG lfEscapement; 		LONG lfOrientation; 		LONG lfWeight; 		BYTE lfItalic; 		BYTE lfUnderline; 		BYTE lfStrikeOut; 		BYTE lfCharSet; 		BYTE lfOutPrecision; 		BYTE lfClipPrecision; 		BYTE lfQuality; 		BYTE lfPitchAndFamily; 		TCHAR lfFaceName[32];	}&gt;</body><body package="Fonts for Windows">tagTEXTMETRIC	&lt;C: struct tagTEXTMETRIC {		LONG tmHeight; 		LONG tmAscent; 		LONG tmDescent; 		LONG tmInternalLeading; 		LONG tmExternalLeading; 		LONG tmAveCharWidth; 		LONG tmMaxCharWidth; 		LONG tmWeight; 		LONG tmOverhang; 		LONG tmDigitizedAspectX; 		LONG tmDigitizedAspectY; 		TCHAR tmFirstChar; 		TCHAR tmLastChar; 		TCHAR tmDefaultChar; 		TCHAR tmBreakChar; 		BYTE tmItalic; 		BYTE tmUnderlined; 		BYTE tmStruckOut; 		BYTE tmPitchAndFamily; 		BYTE tmCharSet; 	}&gt;</body></methods><methods><class-id>OS.Win32SystemSupport</class-id> <category>types</category><body package="Fonts for Windows">TEXTMETRIC	&lt;C: typedef struct tagTEXTMETRIC TEXTMETRIC&gt;</body></methods><methods><class-id>OS.Win32SystemSupport</class-id> <category>defines</category><body package="Fonts for Windows">TRANSPARENT	&lt;C: #define TRANSPARENT 1	&gt;</body></methods><methods><class-id>OS.Win32SystemSupport</class-id> <category>utilities</category><body package="Fonts for Windows">withBitmapHDCDo: oneArgumentBlock	"answer whatever the block answers"	| hdc |	hdc := self CreateCompatibleDC: 0.	^[oneArgumentBlock value: hdc] ensure: [self DeleteDC: hdc]</body></methods><methods><class-id>OS.Win32SystemSupport</class-id> <category>actions</category><body package="Fonts for Windows">withFont: aLogfont in: hdc do: zeroArgumentBlock	"answer whatever the block answers"	| hFont |	hFont := self CreateFontIndirect: aLogfont.	^[self withObject: hFont in: hdc do: zeroArgumentBlock] ensure: [		self DeleteObject: hFont]</body></methods><methods><class-id>OS.Win32SystemSupport</class-id> <category>utilities</category><body package="Fonts for Windows">withHDCFor: hWND do: oneArgumentBlock	"answer whatever the block answers"	| hdc |	hdc := self GetDC: hWND.	^[oneArgumentBlock value: hdc] ensure: [self ReleaseDC: hdc forWindow: hWND]</body><body package="Fonts for Windows">withObject: hGdiObj in: hdc do: zeroArgumentBlock	"answer whatever the block answers"	| oldHGdiObj |	oldHGdiObj := self selectObject: hGdiObj into: hdc.	^zeroArgumentBlock ensure: [self selectObject: oldHGdiObj into: hdc]</body></methods><methods><class-id>Graphics.Window</class-id> <category>actions</category><body package="Fonts for Windows">chooseNativeScreenFont	"&lt;LogFont | nil&gt;"	"self chooseNativeScreenFont"	^WindowsFonts.Win32Fontsupport new chooseLogfontFor: self windowHandle</body><body package="Fonts for Windows">chooseNativeScreenFontNamed: aFacename	"&lt;LogFont | nil&gt;"	"self chooseNativeScreenFontNamed: 'Tahoma' "	^WindowsFonts.Win32Fontsupport new chooseLogfontFace: aFacename for: self windowHandle</body><body package="Fonts for Windows">withHDCDo: oneArgumentBlock	"answer whatever the block answers"	| lib hwnd |	lib := OSSystemSupport concreteClass new.	hwnd := lib HWND baseType newOfAddress: self windowHandle.	^lib withHDCFor: hwnd do: oneArgumentBlock</body></methods><methods><class-id>Graphics.PostScriptPrinter class</class-id> <category>class initialization</category><body package="Fonts Development">release	"self release"	Default := nil</body></methods><methods><class-id>Tools.VisualLauncher class</class-id> <category>resources</category><body package="Fonts Development">fontsIcon	^Graphics.Fonts.FontListIcons visualFor: #font</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>Object</name><environment>Core</environment><super></super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Kernel-Objects</category><attributes><package>Kernel-Objects</package></attributes></class><class><name>ApplicationModel</name><environment>UI</environment><super>UI.Model</super><private>false</private><indexed-type>none</indexed-type><inst-vars>builder uiSession eventHandlers </inst-vars><class-inst-vars>savedWindowInformation </class-inst-vars><imports></imports><category>UIBuilder-Framework</category><attributes><package>UIBuilder-Framework</package></attributes></class><class><name>VisualLauncher</name><environment>Tools</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>menuBar toolBar textCollector transcriptView statusBar </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Tools-Misc</category><attributes><package>Tools-Misc</package></attributes></class><class><name>Error</name><environment>Core</environment><super>Core.Exception</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Kernel-Exception Handling</category><attributes><package>Kernel-Exception Handling</package></attributes></class><class><name>Value</name><environment>Smalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Values</category><attributes><package>Values</package></attributes></class><class><name>WriteStream</name><environment>Core</environment><super>Core.InternalStream</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Collections-Streams</category><attributes><package>Collections-Streams</package></attributes></class><class><name>GraphicsMedium</name><environment>Graphics</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Graphics-Support</category><attributes><package>Graphics-Support</package></attributes></class><class><name>DisplaySurface</name><environment>Graphics</environment><super>Graphics.GraphicsMedium</super><private>false</private><indexed-type>none</indexed-type><inst-vars>handle width height background deferredDisplayBlocks </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>OS-Window System</category><attributes><package>OS-Window System</package></attributes></class><class><name>ExternalInterface</name><environment>External</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars>includeFiles includeDirectories libraryFiles libraryDirectories virtual optimizationLevel </class-inst-vars><imports>			private Kernel.OpcodePool.*			</imports><category>External-Interface</category><attributes><package>External-Interface</package></attributes></class><class><name>Win32SystemSupport</name><environment>OS</environment><super>OS.OSSystemSupport</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports>			private OS.Win32SystemSupportDictionary.*			</imports><category>OS-Support</category><attributes><includeFiles></includeFiles><includeDirectories></includeDirectories><libraryFiles><item>kernel32.dll</item> <item>gdi32.dll</item> <item>advapi32.dll</item> <item>user32.dll</item></libraryFiles><libraryDirectories></libraryDirectories><beVirtual>false</beVirtual><optimizationLevel>full</optimizationLevel><package>OS-PC</package></attributes></class><class><name>ByteCharacterEncoder</name><environment>Graphics</environment><super>Core.CharacterEncoder</super><private>false</private><indexed-type>none</indexed-type><inst-vars>encoder decoder streamEncodingType definitionClass </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Graphics-Fonts</category><attributes><package>Graphics-Fonts</package></attributes></class><class><name>ListIconLibrary</name><environment>Tools</environment><super>Tools.IconLibrary</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Tools-Misc</category><attributes><package>Tools-Resources</package></attributes></class><class><name>Timestamp</name><environment>Core</environment><super>Core.Magnitude</super><private>false</private><indexed-type>none</indexed-type><inst-vars>year month day hours minutes seconds milliseconds partialNanosecond </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Magnitude-General</category><attributes><package>Magnitude-General</package></attributes></class><class><name>Pixmap</name><environment>Graphics</environment><super>Graphics.UnmappableSurface</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>OS-Window System</category><attributes><package>OS-Window System</package></attributes></class><class><name>PostScriptFontBody</name><environment>Graphics</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>fullName family boldness italic serif fixedWidth setWidth widths simpleWidths defaultWidth encoder ascent descent underlinePosition underlineThickness fontSource </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Graphics-Printing-PostScript</category><attributes><package>Graphics-Printing-PostScript</package></attributes></class><class><name>PostScriptPrinterFont</name><environment>Graphics</environment><super>Graphics.DeviceFont</super><private>false</private><indexed-type>none</indexed-type><inst-vars>name size ascent descent fontBody encoder fontDescription simpleWidthTable </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Graphics-Printing-PostScript</category><attributes><package>Graphics-Printing-PostScript</package></attributes></class><class><name>Window</name><environment>Graphics</environment><super>Graphics.DisplaySurface</super><private>false</private><indexed-type>none</indexed-type><inst-vars>inputOrigin creationOrigin sensor iconic windowType effectiveWindowType statusLineHeight allowsStatusLine mapped eventHandlers windowManager </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>OS-Window System</category><attributes><package>OS-Window System</package></attributes></class><class><name>ColorValue</name><environment>Graphics</environment><super>Graphics.SimplePaint</super><private>false</private><indexed-type>none</indexed-type><inst-vars>red green blue </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Graphics-Support</category><attributes><package>Graphics-Support</package></attributes></class><class><name>TestCase</name><environment>SUnit</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>testSelector </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>SUnit</category><attributes><package>SUnitToo</package></attributes></class><class><name>ReadStream</name><environment>Core</environment><super>Core.InternalStream</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Collections-Streams</category><attributes><package>Collections-Streams</package></attributes></class><class><name>View</name><environment>UI</environment><super>Graphics.DependentPart</super><private>false</private><indexed-type>none</indexed-type><inst-vars>controller </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Interface-Framework</category><attributes><package>Interface-Framework</package></attributes></class></st-source>