<?xml version="1.0"?><st-source><!-- Name: Xtreams-Xtras-TestsNotice: The MIT LicenseCopyright 2010-2013 Cincom Systems, Martin Kobetic and Michael Lucas-SmithPermission is hereby granted, free of charge, to any person obtaining a copyof this software and associated documentation files (the "Software"), to dealin the Software without restriction, including without limitation the rightsto use, copy, modify, merge, publish, distribute, sublicense, and/or sellcopies of the Software, and to permit persons to whom the Software isfurnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included inall copies or substantial portions of the Software.THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS ORIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THEAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHERLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS INTHE SOFTWARE.DbIdentifier: bear73DbTrace: 490991DbUsername: jkottDbVersion: 8.2 - 1DevelopmentPrerequisites: #(#(#any 'Xtreams-Core' '') #(#any 'Xtreams-Xtras' '') #(#any 'SUnitToo' '') #(#any 'Xtreams-Core-Tests' ''))DialectVersion: VisualWorks 7.9DisregardedPrerequisites: #(#(#name 'Xtreams-Support' #componentType #package))ExplicitPrerequisites: #()IgnoredPrerequisites: #()PackageName: Xtreams-Xtras-TestsParcel: #('Xtreams-Xtras-Tests')PrerequisiteDescriptions: #(#(#name 'Xtreams-Core') #(#name 'Xtreams-Xtras' #componentType #package) #(#name 'SUnitToo') #(#name 'Xtreams-Core-Tests' #componentType #package))PrerequisiteParcels: #(#('Xtreams-Core' '') #('Xtreams-Xtras' '') #('SUnitToo' '') #('Xtreams-Core-Tests' ''))PrintStringCache: (8.2 - 1,jkott)Version: 8.2 - 1Date: 11:27:50 AM June 16, 2017 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.3 (jun17.3) of June 16, 2017 on June 16, 2017 at 11:27:50 AM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>PointerReadingWritingTest</name><environment>Xtreams</environment><super>Xtreams.InfiniteReadingWritingTests</super><private>true</private><indexed-type>none</indexed-type><inst-vars>pointer </inst-vars><class-inst-vars></class-inst-vars><imports>			private External.*			</imports><category></category><attributes><package>Xtreams-Xtras-Tests</package></attributes></class><class><name>PointerReadStreamTest</name><environment>Xtreams</environment><super>SUnit.TestCase</super><private>true</private><indexed-type>none</indexed-type><inst-vars>pointer values </inst-vars><class-inst-vars></class-inst-vars><imports>			private External.*			</imports><category></category><attributes><package>Xtreams-Xtras-Tests</package></attributes></class><class><name>PointerWriteStreamTest</name><environment>Xtreams</environment><super>SUnit.TestCase</super><private>true</private><indexed-type>none</indexed-type><inst-vars>stream </inst-vars><class-inst-vars></class-inst-vars><imports>			private External.*			</imports><category></category><attributes><package>Xtreams-Xtras-Tests</package></attributes></class><methods><class-id>Xtreams.PointerReadingWritingTest</class-id> <category>initialize-release</category><body package="Xtreams-Xtras-Tests">setUp	pointer := CIntegerType unsignedChar malloc: 1.	(input := pointer reading) contentsSpecies: ByteArray.	(output := pointer writing) contentsSpecies: ByteArray</body><body package="Xtreams-Xtras-Tests">tearDown	pointer free</body></methods><methods><class-id>Xtreams.PointerReadingWritingTest</class-id> <category>tests - core</category><body package="Xtreams-Xtras-Tests">testPutUint16"	This test does not apply here"</body><body package="Xtreams-Xtras-Tests">testPutUint24"	This test does not apply here"</body><body package="Xtreams-Xtras-Tests">testPutUint32"	This test does not apply here"</body></methods><methods><class-id>Xtreams.PointerReadStreamTest</class-id> <category>initialize-release</category><body package="Xtreams-Xtras-Tests">prepareChars	values := 'Hello World!'.	pointer := CIntegerType char malloc: values size.	pointer copyAt: 0 from: values size: values size startingAt: 1</body><body package="Xtreams-Xtras-Tests">prepareFloats	values := (1 to: 50) collect: [ :i | i reciprocal asFloat ].	pointer := CLimitedPrecisionRealType float malloc: values size.	1 to: values size do: [ :i | pointer at: i - 1 put: i reciprocal asFloat ].</body><body package="Xtreams-Xtras-Tests">tearDown	pointer ifNotNil: [ pointer free ]</body><body package="Xtreams-Xtras-Tests">testPositioningFloats	| stream |	self prepareFloats.	stream := pointer reading.	stream length: values size.	stream ++ 10.	self assert: stream position = 10.	stream -- 5.	self assert: stream position = 5.	stream += 10.	self assert: stream position = 10.	stream -= 10.	self assert: stream position = (values size - 10).	self assert: ([ stream ++ 20. false ] on: Incomplete do: [ :ex | ex count = 10 ])</body><body package="Xtreams-Xtras-Tests">testReadingChars	| stream |	self prepareFloats.	stream := pointer reading.	stream length: values size.	self assert: stream rest = values.	self should: [ stream get ] raise: Incomplete.</body><body package="Xtreams-Xtras-Tests">testReadingFloats	| stream |	self prepareFloats.	stream := pointer reading.	stream length: values size.	self assert: stream rest = values.	self should: [ stream get ] raise: Incomplete.</body></methods><methods><class-id>Xtreams.PointerWriteStreamTest</class-id> <category>initialize-release</category><body package="Xtreams-Xtras-Tests">prepareChars	| pointer |	pointer := CIntegerType char malloc: 50.	stream := pointer writing length: 50; yourself.</body><body package="Xtreams-Xtras-Tests">prepareFloats	| pointer |	pointer := CLimitedPrecisionRealType float malloc: 50.	stream := pointer writing length: 50; yourself.</body><body package="Xtreams-Xtras-Tests">tearDown	stream ifNotNil: [ stream terminal free. stream := nil ]</body><body package="Xtreams-Xtras-Tests">testGrowing	self prepareChars.	50 timesRepeat: [stream put: Character tab].	stream put: Character tab.	self assert: (stream terminal at: 50) = Character tab asInteger.	stream close.	self assert: stream length = 51</body><body package="Xtreams-Xtras-Tests">testWritingChars	| string result |	self prepareChars.	stream put: Character tab.	self assert: (stream terminal at: 0) = Character tab asInteger.	string := 'Hello World!'.	stream write: string.	result := ByteString new: string size.	stream terminal copyAt: 1 to: result size: string size startingAt: 1. 	self assert: string = result.	stream close.	self assert: stream length = (string size + 1).</body><body package="Xtreams-Xtras-Tests">testWritingFloats	| values |	self prepareFloats.	stream put: Float pi.	self assert: (stream terminal at: 0) = Float pi.	values := (1 to: 10) collect: [ :i | i reciprocal asFloat ].	stream write: values.	self assert: (stream terminal at: 10) = 10 reciprocal asFloat.	stream close.	self assert: stream length = 11.</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>TestCase</name><environment>SUnit</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>testSelector </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>SUnit</category><attributes><package>SUnitToo</package></attributes></class><class><name>InfiniteReadingWritingTests</name><environment>Xtreams</environment><super>Xtreams.ReadingWritingTest</super><private>true</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports>			private Kernel.*			</imports><category></category><attributes><package>Xtreams-Core-Tests</package></attributes></class></st-source>