<?xml version="1.0"?><st-source><!-- Name: VB-Sketch-DontModeMeInNotice: Copyright 2007-2013 Cincom Systems, Inc.  All rights reserved.Comment: An experimental tweak of the Refactoring Browser to support modeless editing. With this installed, it is possible to go to a different method or class within the same browser. while a method is being edited The "postponed" edit appears as an icon at the bottom of the browser. Clicking it will jump back to the edit in progress.NOTE: Close all browser windows before or immediately after loading this package.  This package is currently unloadable and is should not be loaded into image that has RB_Tabs loaded (or vice versa).- Vassili Bykov, April 2006http://www.cincomsmalltalk.com/userblogs/vbykov/blogView?showComments=true&printTitle=Dont_Mode_Me_In&entry=3347470901DbIdentifier: bear73DbTrace: 400872DbUsername: nrossDbVersion: 7.10 - 1PackageName: VB-Sketch-DontModeMeInParcel: #('VB-Sketch-DontModeMeIn')ParcelName: VB-Sketch-DontModeMeInPrintStringCache: (7.10 - 1,nross)Version: 7.10 - 1Date: 7:29:50 AM April 3, 2013 --><time-stamp>From VisualWorksÂ®, Pre-Release 7.10 (mar13.5) of April 3, 2013 on April 3, 2013 at 7:29:50 AM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>CodeModelSwitchNotification</name><environment>Refactory.Browser</environment><super>Core.Notification</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>VB-Sketch-DontModeMeIn</category><attributes><package>VB-Sketch-DontModeMeIn</package></attributes></class><comment><class-id>Refactory.Browser.CodeModelSwitchNotification</class-id><body>CodeModelSwitchNotification is signalled by the code model switch logic once the current code model of a browser has been replaced by a new one. Tab controls want to listen to that because such a switch effectively disables the control in the middle of a switch. For example, if you edit a class comment and switch to the definition tab, the entire CodeModel responsible for the comment tool, including the definition tab label that you click, if being replaced with a brand new tab bar. The definition tab that takes over the is tab in the new code model, not the old one that was clicked. So, the old tab bar needs to shut up in the middle of the switch and not insist on activating its own definition tab.</body></comment><class><name>SnapbackManager</name><environment>Smalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>browser codeModels tagsAndModels knownMethodDefinitions </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>VB-Experiment-Browse Freely</category><attributes><package>VB-Sketch-DontModeMeIn</package></attributes></class><comment><class-id>SnapbackManager</class-id><body>SnapbackManager keeps track of postponed edits, which are browser CodeModels for the browser states that have been suspended with unaccepted edits, presumably to be resumed at a later time.Instance Variables:	browser	&lt;RefactoringBrowser&gt;	The host browser.	codeModels	&lt;Collection of: CodeModel&gt;	The postponed edits.	knownMethodDefinitions	&lt;Collection&gt;	Method definitions with postponed edits. Used to highlight methods with postponed edits in the browser view.	tagsAndModels	&lt;Dictionary&gt;	</body></comment><class><name>SnapbackBar</name><environment>Smalltalk</environment><super>UI.Win98ToolBar</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>VB-Sketch-Browse Freely</category><attributes><package>VB-Sketch-DontModeMeIn</package></attributes></class><comment><class-id>SnapbackBar</class-id><body>SnapbackBar implements a bar of buttons at the bottom of the browser, each representing a postponed edit.</body></comment><class><name>BrowserApplicationModel</name><environment>Refactory.Browser</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>snapbackManager postponedEditsMenuHolder </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Browser-RB UI</category><attributes><package>VB-Sketch-DontModeMeIn</package></attributes></class><comment><class-id>Refactory.Browser.BrowserApplicationModel</class-id><body>BrowserApplicationModel is an abstract class that extends the standard ApplicationModel. It adds functions to easily change subcanvases and change the properties of the widgets.Subclasses with subcanvases should override the #subcanvases method so that the new subcanvas is also returned in the list of subcanvas open in this application. The subcanvas information is used so that #updateRequest's can be made of the whole application without the need to write a specific updateRequest in each subclass that defines uses a subcanvas. Also, when installing the same application model several different times, the builder must be nil'ed and the #subcanvases method is also used to nil the builder.Shared Variables:	PromptOnRefactoring	&lt;Boolean&gt;	should we open a changes list when performing a refactoring</body></comment><methods><class-id>SnapbackManager</class-id> <category>privileged-for CodeTools</category><body package="VB-Sketch-DontModeMeIn">registerMethodDefinition: aMethodDefinition	knownMethodDefinitions add: aMethodDefinition</body><body package="VB-Sketch-DontModeMeIn">registerMethodDefinition: aMethodDefinition forCodeModel: aCodeModel	knownMethodDefinitions at: aMethodDefinition put: aCodeModel</body><body package="VB-Sketch-DontModeMeIn">registerSnapbackTag: anObject forCodeModel: aCodeModel	tagsAndModels at: anObject put: aCodeModel</body><body package="VB-Sketch-DontModeMeIn">restorePostponedEditWithTag: anObject	"Answer true if we switched the browser to a postponed edit, false otherwise."		| postponedEdit |	postponedEdit := tagsAndModels at: anObject ifAbsent: [nil].	postponedEdit notNil ifTrue:		[browser switchBackToPostponedEdit: postponedEdit.		^true].	^false</body><body package="VB-Sketch-DontModeMeIn">unregisterMethodDefinition: aMethodDefinition	knownMethodDefinitions remove: aMethodDefinition</body><body package="VB-Sketch-DontModeMeIn">unregisterSnapbackTag: anObject	tagsAndModels removeKey: anObject</body></methods><methods><class-id>SnapbackManager</class-id> <category>testing</category><body package="VB-Sketch-DontModeMeIn">isEmpty	^codeModels isEmpty</body><body package="VB-Sketch-DontModeMeIn">isKnownMethodDefinition: aMethodDefinition	"Is the method definition one of those we have as	currently postponed edits?"	^knownMethodDefinitions includes: aMethodDefinition</body></methods><methods><class-id>SnapbackManager</class-id> <category>accessing</category><body package="VB-Sketch-DontModeMeIn">add: aCodeModel	codeModels add: aCodeModel.	aCodeModel 		lock;		addedToSnapbackManager: self</body><body package="VB-Sketch-DontModeMeIn">buildMenuFor: aRefactoringBrowser	| menu item |	menu := Menu new.	codeModels do:		[:each |		item := MenuItem labeled: each displayString.		item value: 			((PluggableAdaptor on: false asValue)				getBlock: [:m | false]				putBlock: [:m :v | aRefactoringBrowser switchBackToPostponedEdit: each]				updateBlock: [:m :v : a | false]).		menu addItem: item].	^menu</body><body package="VB-Sketch-DontModeMeIn">remove: aCodeModel	codeModels remove: aCodeModel.	aCodeModel 		removedFromSnapbackManager: self;		unlock</body></methods><methods><class-id>SnapbackManager</class-id> <category>initialize-release</category><body package="VB-Sketch-DontModeMeIn">initBrowser: aBrowser	browser := aBrowser</body><body package="VB-Sketch-DontModeMeIn">initialize	codeModels := OrderedCollection new.	tagsAndModels := Dictionary new.	knownMethodDefinitions := Set new</body></methods><methods><class-id>SnapbackManager class</class-id> <category>instance creation</category><body package="VB-Sketch-DontModeMeIn">for: aBrowser	^self new initBrowser: aBrowser</body><body package="VB-Sketch-DontModeMeIn">new	^super new initialize</body></methods><methods><class-id>SnapbackBar</class-id> <category>private</category><body package="VB-Sketch-DontModeMeIn">newButtonFor: item 	| button model label |	item value isSymbol 		ifTrue: 			[model := (PluggableAdaptor on: ValueHolder new) 						getBlock: [:b | item isOn]						putBlock: 							[:b :v | 							self triggerEvent: #toolBarButtonSelected: with: item nameKey.							(self performer actionFor: item value) value]						updateBlock: [:b :a :p | false]]		ifFalse: [model := item value].	button := self toolbarButtonViewClass model: model.	label := LabelAndIcon with: item label.	label icon: (ToolbarIconLibrary visualFor: #postponed).	button label: label.	button helpText: 'Switch back to this postponed edit'.	self configureNewButton: button.	^button</body></methods><methods><class-id>UI.SelectionView</class-id> <category>private</category><body package="VB-Sketch-DontModeMeIn">useSelectionIndex: anIndex 	"Set my selection index in advance of notifiying my	selection channel and repair any pending damage. 	This has the effect of showing the selection as early	as possible in the event that the actual work done	during the selection takes considerable time."	self makeVisible: anIndex.	self selectionIndex: anIndex."vb: The following line is changed to protect against a nil sensor.The view may end up getting removed from the window as the result of selection index change,in which case the controller will have no sensor at this point."	self controller sensor ifNotNil:		[:sensor | sensor window repairDamages].	self selectionChannel value: anIndex</body></methods><methods><class-id>Refactory.Browser.BrowserCodeTool</class-id> <category>updating</category><body package="VB-Sketch-DontModeMeIn">addedToSnapbackManager: aSnapbackManager	super addedToSnapbackManager: aSnapbackManager.	self definition notNil ifTrue:		[aSnapbackManager			registerMethodDefinition: self definition]</body></methods><methods><class-id>Refactory.Browser.BrowserCodeTool</class-id> <category>printing</category><body package="VB-Sketch-DontModeMeIn">displayString	^codeModel selector 		ifNil: ['(new method)']		ifNotNil: [:selector | selector printString]</body></methods><methods><class-id>Refactory.Browser.BrowserCodeTool</class-id> <category>updating</category><body package="VB-Sketch-DontModeMeIn">removedFromSnapbackManager: aSnapbackManager	super removedFromSnapbackManager: aSnapbackManager.	self definition notNil ifTrue:		[aSnapbackManager			unregisterMethodDefinition: self definition]</body></methods><methods><class-id>Refactory.Browser.BrowserCodeTool</class-id> <category>accessing</category><body package="VB-Sketch-DontModeMeIn">snapbackTag	^Array with: self class name with: self objectName with: self selector</body></methods><methods><class-id>Refactory.Browser.BrowserTextTool</class-id> <category>updating</category><body package="VB-Sketch-DontModeMeIn">addedToSnapbackManager: aSnapbackManager	aSnapbackManager		registerSnapbackTag: self snapbackTag 		forCodeModel: codeModel</body><body package="VB-Sketch-DontModeMeIn">okToChangeToolFocus	Cursor wait showWhile:		[codeModel browser createPostponedEdit].	^true</body><body package="VB-Sketch-DontModeMeIn">removedFromSnapbackManager: aSnapbackManager	aSnapbackManager unregisterSnapbackTag: self snapbackTag</body></methods><methods><class-id>Refactory.Browser.BrowserTextTool</class-id> <category>accessing</category><body package="VB-Sketch-DontModeMeIn">snapbackTag	^Array with: self class name with: self objectName</body></methods><methods><class-id>Refactory.Browser.CodeTool</class-id> <category>updating</category><body package="VB-Sketch-DontModeMeIn">addedToSnapbackManager: aSnapbackManager	"The tool is an edit in progress that has been postponed. Some subclasses	may want to register information with the snapback manager that will allow	the manager to find and install them back automatically when the time is right."</body><body package="VB-Sketch-DontModeMeIn">removedFromSnapbackManager: aSnapbackManager</body></methods><methods><class-id>Refactory.Browser.CodeTool</class-id> <category>accessing</category><body package="VB-Sketch-DontModeMeIn">snapbackTag	^Array with: self class name</body></methods><methods><class-id>Refactory.Browser.RefactoringBrowser</class-id> <category>actions</category><body package="VB-Sketch-DontModeMeIn">createPostponedEdit	| oldBuffer newBuffer |	self bufferChangeRequest.	oldBuffer := self currentToolset.		"New buffer should be created before the old is added to snapback manager."	newBuffer := CodeModel navigator: navigator.	newBuffer lockPolicyClass: policyClass.	self toolsets remove: oldBuffer ifAbsent: [nil].	self toolsets add: newBuffer.	self snapbackManager add: oldBuffer. 	builder window sensor invalidationSuppressWhile:		[self updatePostponedEditsMenu.		self switchToBuffer: self toolsets size.		self currentToolset tool updateContents.		self enable: #removeBuffer.		self updateCodeToolZoomed].	self updateSnapbackBarVisibility.	CodeModelSwitchNotification raise</body></methods><methods><class-id>Refactory.Browser.RefactoringBrowser</class-id> <category>aspects</category><body package="VB-Sketch-DontModeMeIn">postponedEditsMenuHolder	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^postponedEditsMenuHolder isNil		ifTrue:			[postponedEditsMenuHolder := self testMenu asValue]		ifFalse:			[postponedEditsMenuHolder]</body></methods><methods><class-id>Refactory.Browser.RefactoringBrowser</class-id> <category>interface closing</category><body package="VB-Sketch-DontModeMeIn">requestForWindowClose	self		suspendFindWidgetWhile: [super requestForWindowClose ifFalse: [^false]].	(builder isNil or: [builder window isOpen not]) ifTrue: [^true].	self toolsets size &gt; 1 		ifTrue: 			[(self confirm: (#MultipleViewsExistExitAnyway &lt;&lt; #browser &gt;&gt; 'Multiple views exist.Exit anyway?')) 				ifFalse: [^false]].	self snapbackManager isEmpty ifFalse:		[(self confirm: 'This browser has postponed edits. Exit anyway?') ifFalse: [^false]].	self areAllBuffersClean ifTrue: [^true].	^self confirm: (#ModifiedViewsExistsExitAnyway &lt;&lt; #browser &gt;&gt; 'Modified views exists.Exit anyway?')</body></methods><methods><class-id>Refactory.Browser.RefactoringBrowser</class-id> <category>accessing</category><body package="VB-Sketch-DontModeMeIn">snapbackBarView	^SnapbackBar menu: self postponedEditsMenuHolder performer: self</body></methods><methods><class-id>Refactory.Browser.RefactoringBrowser</class-id> <category>private</category><body package="VB-Sketch-DontModeMeIn">snapbackManager	snapbackManager isNil ifTrue: [snapbackManager := SnapbackManager for: self].	^snapbackManager</body></methods><methods><class-id>Refactory.Browser.RefactoringBrowser</class-id> <category>actions</category><body package="VB-Sketch-DontModeMeIn">switchBackToPostponedEdit: aCodeModel	|tool|	tool := self currentToolset.	tool updateRequest ifFalse: [^self].	self toolsets remove: tool ifAbsent: [nil].	builder window sensor invalidationSuppressWhile:		[tool release.		self toolsets add: aCodeModel.		self snapbackManager remove: aCodeModel.		self updatePostponedEditsMenu.		self switchToBuffer: self toolsets size]. 	self updateSnapbackBarVisibility</body></methods><methods><class-id>Refactory.Browser.RefactoringBrowser</class-id> <category>private</category><body package="VB-Sketch-DontModeMeIn">testMenu	^Menu new</body><body package="VB-Sketch-DontModeMeIn">updatePostponedEditsMenu	| menu |	menu := self snapbackManager buildMenuFor: self.	self postponedEditsMenuHolder value: menu</body><body package="VB-Sketch-DontModeMeIn">updateSnapbackBarVisibility	| snapbackBarLayout codeToolLayout height |	snapbackBarLayout := (builder componentAt: #snapbackBar) component layout.	codeToolLayout := (builder componentAt: #codeTool) component layout.	self snapbackManager isEmpty		ifTrue:			[snapbackBarLayout topOffset: 0.			codeToolLayout bottomOffset: 0]		ifFalse:			[height := (self widgetAt: #snapbackBar) preferredBounds height.			snapbackBarLayout topOffset: height negated.			codeToolLayout bottomOffset: height negated].	builder window refresh</body></methods><methods><class-id>Refactory.Browser.SelectorNavigatorPart</class-id> <category>private</category><body package="VB-Sketch-DontModeMeIn">iconFor: aMethodDefinition 	^(navigator dispatcher browser snapbackManager isKnownMethodDefinition: aMethodDefinition)		ifTrue: [ListIconLibrary visualFor: #postponed]		ifFalse: [super iconFor: aMethodDefinition]</body></methods><methods><class-id>UI.TabControlBarController</class-id> <category>private</category><body package="VB-Sketch-DontModeMeIn">selectDownAt: aPoint 	"Private - Begin selection at the relative point aPoint, starting to drag through to a longer selection."	| index |	view numberOfElements = 0 ifTrue: [^self]. 	index := self findElementFor: aPoint."vb: We need to listen to CodeModelSwitchNotification and abortour usual tab switching routine if it happens, because it means our controlhas just been removed from its host window and it can't function properly anymore."	[view targetIndex: index.	self selectTarget]		on: Refactory.Browser.CodeModelSwitchNotification		do: [:ex | ex return]</body></methods><methods><class-id>Refactory.Browser.BrowserNavigator</class-id> <category>actions</category><body package="VB-Sketch-DontModeMeIn">findGlobalName	| dialog bindingRef |	dialog := IncrementalSearchDialog forSelectionWithSearch:		[:entry | self referencesMatchingPartialName: entry].	dialog		windowLabel: #FindClassVariableOrNameSpace &lt;&lt; #browser &gt;&gt; 'Find Class, Variable, or Name Space';		firstLabel: #FindC &lt;&lt; #browser &gt;&gt; 'Find:';		secondLabel: #ClassesNamespacesAndVariablesC &lt;&lt; #browser &gt;&gt; 'Classes, Variables, Name Spaces:';		iconSelector: #toolListIcon;		displayStringSelector: #toolListDisplayString;		objectToStringBlock: [:class | class name asString].	bindingRef := dialog select.	bindingRef isNil ifTrue: [^self].	self changeRequest ifFalse: [^self].	self setBinding: bindingRef binding</body></methods><methods><class-id>Refactory.Browser.BrowserCommentTool</class-id> <category>printing</category><body package="VB-Sketch-DontModeMeIn">displayString	^self commentObject name, ' Comment'</body></methods><methods><class-id>Refactory.Browser.CodeModel</class-id> <category>updating</category><body package="VB-Sketch-DontModeMeIn">addedToSnapbackManager: aSnapbackManager	"The model has been remembered as a postponed edit--the tool	might want to register some information with the snapback manager."	self selectedTool notNil ifTrue: [self selectedTool addedToSnapbackManager: aSnapbackManager]</body></methods><methods><class-id>Refactory.Browser.CodeModel</class-id> <category>accessing</category><body package="VB-Sketch-DontModeMeIn">browser	^navigator dispatcher browser</body></methods><methods><class-id>Refactory.Browser.CodeModel</class-id> <category>printing</category><body package="VB-Sketch-DontModeMeIn">displayString	^self selectedTool displayString</body></methods><methods><class-id>Refactory.Browser.CodeModel</class-id> <category>updating</category><body package="VB-Sketch-DontModeMeIn">removedFromSnapbackManager: aSnapbackManager	self selectedTool notNil ifTrue: [self selectedTool removedFromSnapbackManager: aSnapbackManager]</body></methods><methods><class-id>Refactory.Browser.CodeModel</class-id> <category>private</category><body package="VB-Sketch-DontModeMeIn">replacedByPostponedEdit	self selectedTool notNil ifTrue:		[^self snapbackManager restorePostponedEditWithTag: self selectedTool snapbackTag].	^false</body></methods><methods><class-id>Refactory.Browser.CodeModel</class-id> <category>accessing</category><body package="VB-Sketch-DontModeMeIn">snapbackManager	^self browser snapbackManager</body></methods><methods><class-id>Refactory.Browser.CodeModel</class-id> <category>updating</category><body package="VB-Sketch-DontModeMeIn">updateCodeTool	self installCodeTool: false.	self replacedByPostponedEdit 		ifFalse: 			[self selectedTool notNil ifTrue: [self selectedTool updateContents].			self updateLabel]</body></methods><methods><class-id>Tools.ListIconLibrary class</class-id> <category>resources</category><body package="VB-Sketch-DontModeMeIn">postponed16x16	"UIMaskEditor new openOnClass: self andSelector: #postponed16x16"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 16@16 depth: 4 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8127 7388 7388)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6328 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6810 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8095 7388 7388)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7003 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7966 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7227 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6456 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7420 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7613 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8095 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6617 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7806 0 0)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: #[68 68 68 68 68 68 68 68 68 68 68 68 68 68 68 68 68 68 68 136 136 68 68 68 68 68 204 204 204 204 68 68 68 70 102 102 102 102 100 68 68 78 238 238 238 238 228 68 68 187 187 187 187 187 187 68 68 170 0 160 10 0 170 68 68 119 51 115 55 51 119 68 68 85 85 85 85 85 85 68 68 66 34 34 34 34 36 68 68 77 221 221 221 221 212 68 68 68 153 153 153 153 68 68 68 68 68 17 17 68 68 68 68 68 68 68 68 68 68 68 68 68 68 68 68 68 68 68])</body><body package="VB-Sketch-DontModeMeIn">postponed16x16mask	"UIMaskEditor new openOnClass: self andSelector: #postponed16x16mask"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 16@16 depth: 1 bitsPerPixel: 1 palette: CoveragePalette monoMaskPalette usingBits: #[0 0 0 0 0 0 0 0 3 192 0 0 15 240 0 0 31 248 0 0 31 248 0 0 63 252 0 0 63 252 0 0 63 252 0 0 63 252 0 0 31 248 0 0 31 248 0 0 15 240 0 0 3 192 0 0 0 0 0 0 0 0 0 0])</body></methods><methods><class-id>Refactory.Browser.RefactoringBrowser class</class-id> <category>interface specs</category><body package="VB-Sketch-DontModeMeIn">windowSpec	"UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#properties: #(#{UI.PropertyListDictionary} #sizeType #specifiedSize #positionType #lastSavedPosition #openType #advanced #positionAutoSave true ) 			#label: '' 			#min: #(#{Core.Point} 472 312 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 701 361 1501 961 ) 			#flags: 4 			#menu: #menuBar 			#toolBar: #toolbarMenuHolder ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.SubCanvasSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 0 0 0 1 -2 0.333333 ) 					#name: #navigator 					#flags: 0 					#majorKey: #NavigatorTool 					#minorKey: #windowSpec 					#clientKey: #navigator ) 				#(#{UI.SubCanvasSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 2 0.333333 0 1 0 1 ) 					#name: #codeTool 					#flags: 0 					#majorKey: #CodeModelSubcanvas 					#minorKey: #windowSpec 					#clientKey: #codeTool ) 				#(#{UI.ArbitraryComponentSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 0 1 0 1 1 1 ) 					#name: #snapbackBar					#flags: 0 					#component: #snapbackBarView ) 				#(#{UI.ResizingSplitterSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 -2 0.333333 0 1 2 0.333333 ) 					#name: #splitter 					#horizontal: true 					#minAboveSize: 50 					#minBelowSize: 30 					#aboveWidgets: 'navigator' 					#belowWidgets: 'codeTool' ) ) ) )</body></methods><methods><class-id>Tools.ToolbarIconLibrary class</class-id> <category>resources</category><body package="VB-Sketch-DontModeMeIn">postponed20x20	"UIMaskEditor new openOnClass: self andSelector: #postponed20x20"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 20@20 depth: 5 bitsPerPixel: 8 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7549 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6810 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7773 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7292 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7035 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6521 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7966 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8030 6167 6167)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6713 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6456 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7998 6167 6167)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7420 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6938 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7163 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7645 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8127 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7773 2730 2730)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7870 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7966 6167 6167)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7516 2730 2730)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7934 6167 6167)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6617 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8063 0 0)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'A@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDB@ HB@ HA@PDA@PDA@PDA@PDDQDQDQDQDQDQDPPDA@PDA@PDAA XFA XFA XFA XF@PDA@PDA@PGA0\GA0\GA0\GA0\GA0PDA@PDD1LSD1LSD1LSD1LSD1LSD0PDA@PB@ HB@ HB@ HB@ HB@ HBA@PDDA@PDA@PDA@PDA@PDA@PDA@PA@P@@AHIBQH@D $ID @RBP$R@@@DA@4MC@PDC@4LA@PLCP0DA@0MCPPD@0LTA@PT@1PDAAPCE@PDE@LCA@POC1TVE!TOEQXVEP&lt;UE!XUC0&lt;DA@TEAPTEAPTEAPTEAPTEAPTEAPPDA@8NC 8NC 8NC 8NC 8NC 8DA@PD@PDA@PDA@PDA@PDA@PDA@PPDA@PDB (JB (JB (JB (JB (DA@PDA@PDE1\WE1\WE1\WE1\WA@PDA@PDA@PDA XFA XFA XFA PDA@PDA@PDA@PDA@,KB0,KB0PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@PDA@@a'))</body><body package="VB-Sketch-DontModeMeIn">postponed20x20mask	"UIMaskEditor new openOnClass: self andSelector: #postponed20x20mask"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 20@20 depth: 1 bitsPerPixel: 1 palette: CoveragePalette monoMaskPalette usingBits: #[0 0 0 0 1 248 0 0 7 254 0 0 15 255 0 0 31 255 128 0 63 255 192 0 63 255 192 0 127 255 224 0 127 255 224 0 127 255 224 0 127 255 224 0 127 255 224 0 127 255 224 0 63 255 192 0 63 255 192 0 31 255 128 0 15 255 0 0 7 254 0 0 1 248 0 0 0 0 0 0])</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>Object</name><environment>Core</environment><super></super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Kernel-Objects</category><attributes><package>Kernel-Objects</package></attributes></class><class><name>ApplicationModel</name><environment>UI</environment><super>UI.Model</super><private>false</private><indexed-type>none</indexed-type><inst-vars>builder uiSession eventHandlers </inst-vars><class-inst-vars>savedWindowInformation </class-inst-vars><imports></imports><category>UIBuilder-Framework</category><attributes><package>UIBuilder-Framework</package></attributes></class><class><name>TabControlBarController</name><environment>UI</environment><super>UI.SelectController</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>UIBasics-Controllers</category><attributes><package>UIBasics-Controllers</package></attributes></class><class><name>SelectionView</name><environment>UI</environment><super>UI.ScrollingView</super><private>false</private><indexed-type>none</indexed-type><inst-vars>sequence selectionChannel selectionIndex targetIndex grid textStyle displayStringSelector </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>UIBasics-Support</category><attributes><package>UIBasics-Support</package></attributes></class><class><name>CodeTool</name><environment>Refactory.Browser</environment><super>Refactory.Browser.BrowserApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>codeModel menu </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Browser-Code Tools</category><attributes><package>Browser-BrowserUI</package></attributes></class><class><name>CodeModel</name><environment>Refactory.Browser</environment><super>Refactory.Browser.AbstractCodeModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Browser-BrowserUI</package></attributes></class><class><name>BrowserTextTool</name><environment>Refactory.Browser</environment><super>Refactory.Browser.CodeTool</super><private>false</private><indexed-type>none</indexed-type><inst-vars>savedText changed textHolder originalText menuBarMenu </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Browser-Code Tools</category><attributes><package>Browser-BrowserUI</package></attributes></class><class><name>RefactoringBrowser</name><environment>Refactory.Browser</environment><super>Refactory.Browser.AbstractRefactoringBrowser</super><private>false</private><indexed-type>none</indexed-type><inst-vars>policyClass </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Browser-RB UI</category><attributes><package>Browser-BrowserUI</package></attributes></class><class><name>Notification</name><environment>Core</environment><super>Core.Exception</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Kernel-Exception Handling</category><attributes><package>Kernel-Exception Handling</package></attributes></class><class><name>BrowserCodeTool</name><environment>Refactory.Browser</environment><super>Refactory.Browser.BrowserTextTool</super><private>false</private><indexed-type>none</indexed-type><inst-vars>modified initialLookPrefs </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Browser-Code Tools</category><attributes><package>Browser-BrowserUI</package></attributes></class><class><name>BrowserNavigator</name><environment>Refactory.Browser</environment><super>Refactory.Browser.AbstractBrowserNavigator</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Browser-Navigator</category><attributes><package>Browser-BrowserUI</package></attributes></class><class><name>SelectorNavigatorPart</name><environment>Refactory.Browser</environment><super>Refactory.Browser.ProtocolItemNavigatorPart</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Browser-Navigator Parts</category><attributes><package>Browser-BaseUI</package></attributes></class><class><name>BrowserCommentTool</name><environment>Refactory.Browser</environment><super>Refactory.Browser.BrowserTextTool</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Browser-Code Tools</category><attributes><package>Browser-BrowserUI</package></attributes></class><class><name>Win98ToolBar</name><environment>UI</environment><super>UI.ToolBar</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>UILooks-MSWin</category><attributes><package>UILooks-MSWin</package></attributes></class></st-source>