<?xml version="1.0"?><st-source><!-- Name: VB-Sketch-Browser HistoryNotice: Copyright 2006-2013 Cincom Systems, Inc.  All rights reserved.Comment: Adds a History menu item to the browser, for easy navigation to recently visited classes and packages. Alt+0 is always set as a shortcut to the most recently visited class. (Pressing it repeatedly will go back and forth between two classes).- Vassili Bykov, April 2006DbIdentifier: bear73DbTrace: 400871DbUsername: nrossDbVersion: 7.10 - 1DevelopmentPrerequisites: #(#(#any 'Browser-BaseUI' '') #(#any 'VB-Sketch-DontModeMeIn' ''))PackageName: VB-Sketch-Browser HistoryParcel: #('VB-Sketch-Browser History')ParcelName: VB-Sketch-Browser HistoryPrerequisiteParcels: #(#('Browser-BaseUI' '') #('VB-Sketch-DontModeMeIn' ''))PrintStringCache: (7.10 - 1,nross)Version: 7.10 - 1Date: 7:29:48 AM April 3, 2013 --><time-stamp>From VisualWorksÂ®, Pre-Release 7.10 (mar13.5) of April 3, 2013 on April 3, 2013 at 7:29:48 AM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>Navigator</name><environment>Refactory.Browser</environment><super>Refactory.Browser.BrowserApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>environment state dispatcher parts partsDictionary menus showOnlyFiltered history </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Browser-Navigator</category><attributes><package>VB-Sketch-Browser History</package></attributes></class><comment><class-id>Refactory.Browser.Navigator</class-id><body>Navigator is an abstract superclass. A navigator allows the user to browse a portion of the system and select various classes, method, and other program items. This roughly corresponds to the top portion of the classic Smalltalk browser. This is a component-based framework and allows the various lists and tabs to be swapped in depending on the purpose it will be used for.Instance Variables:	dispatcher	&lt;RBActionDispatcher&gt;	This is responsible to performing the various menu and keystroke actions.	environment	&lt;BrowserEnvironment&gt;	The portion of the image being browsed.	menus	&lt;Dictionary key: String value: Menu&gt;	Map of all of the menus in this navigator. The string is an identifier used for lookup.	parts	&lt;(Collection of: CodeComponentTabNavigatorPart)&gt;	The components being displayed in this navigator.	partsDictionary	&lt;Dictionary key: Symbol  value: NavigatorPart&gt;	Map of possible components that can be displayed in a navigator.	showOnlyFiltered	&lt;Boolean&gt;	should we display methods in packages we haven't selected	state	&lt;NavigatorState&gt;	The current set of selections in the navigator. This is a memento and is used to implement the buffers feature.Shared Variables:	DefaultNamespace	&lt;String&gt;	the name of the default namespace for class definitions	LastProtocol	&lt;Symbol&gt;	the last protocol that was selected in the navigator	ShowOnlyFiltered	&lt;Boolean&gt;	should the default browsers filter by the packages/parcels selected? This is option can be overridden by each browser.</body></comment><class><name>NavigationHistory</name><environment>Refactory.Browser</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>navigator classVisits pundleVisits </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Browser-BaseUI</category><attributes><package>VB-Sketch-Browser History</package></attributes></class><comment><class-id>Refactory.Browser.NavigationHistory</class-id><body>NavigationHistory keeps track of user navigation by recording the state of the browser for pundle and class selections. Various navigator parts are notifying it of visiting various code components, and the history keeps track of those visits.Instance Variables:	navigator	&lt;Navigator&gt;	The navigator whose navigation we are tracking.	classVisits	&lt;OrderedCollection of: NavigationVisit&gt;	Visits within particular classes.	pundleVisits	&lt;OrderedCollection of: NavigationVisit&gt;	Visits within particluar pundles.</body></comment><class><name>NavigationVisit</name><environment>Refactory.Browser</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>objectName navigatorState </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Browser-BaseUI</category><attributes><package>VB-Sketch-Browser History</package></attributes></class><comment><class-id>Refactory.Browser.NavigationVisit</class-id><body>NavigationVisit records the state of the navigator as it was visiting a given component. What component that is is defined by the context (that is, by NavigationHistory which uses Visits keep track of user actions). A visit only stores the name of the component.Instance Variables:	objectName	&lt;String&gt;	The name of the component visited.	navigatorState	&lt;NavigatorState&gt;	Navigator state while visiting the component.</body></comment><shared-variable><name>SortVisitsAlphabetically</name><environment>Refactory.Browser.NavigationHistory</environment><private>false</private><constant>false</constant><category>settings</category><initializer>false</initializer><attributes><package>VB-Sketch-Browser History</package></attributes></shared-variable><methods><class-id>Refactory.Browser.Navigator</class-id> <category>accessing</category><body package="VB-Sketch-Browser History">history	history isNil ifTrue: [history := NavigationHistory for: self].	^history</body><body package="VB-Sketch-Browser History">restoreHistoryState: aNavigatorState	Cursor wait showWhile:		[self changeRequest.		self updateWithState: aNavigatorState]</body></methods><methods><class-id>Refactory.Browser.NavigationHistory</class-id> <category>parameters</category><body package="VB-Sketch-Browser History">maxClasses	"The actual number of classes visible on the menu will be one less	because the current visit will not show up."	^10</body><body package="VB-Sketch-Browser History">maxPackages	"The actual number of packages visible on the menu will be one less	because the current visit will not show up."	^7</body></methods><methods><class-id>Refactory.Browser.NavigationHistory</class-id> <category>visit recording</category><body package="VB-Sketch-Browser History">recordClassName: aString	self recordClassName: aString state: navigator getState</body><body package="VB-Sketch-Browser History">recordClassName: aString state: aNavigatorState	| record |	record := self recordForVisitingClassNamed: aString.	record notNil ifTrue: [classVisits remove: record].	record := NavigationVisit objectName: aString navigatorState: aNavigatorState copy.	classVisits addFirst: record.	[classVisits size &gt; self maxClasses] whileTrue: 		[classVisits removeLast]</body><body package="VB-Sketch-Browser History">recordClassVisit	| names |	names := navigator getState objectNames.	names size = 1 ifTrue: [self recordClassName: names first]</body><body package="VB-Sketch-Browser History">recordClassVisitWithState: aNavigatorState	| names |	names := aNavigatorState objectNames.	names size = 1 ifTrue: [self recordClassName: names first state: aNavigatorState]</body><body package="VB-Sketch-Browser History">recordPundleAndClass	self		recordPundleVisit;		recordClassVisit</body><body package="VB-Sketch-Browser History">recordPundleName: aString	self recordPundleName: aString state: navigator getState</body><body package="VB-Sketch-Browser History">recordPundleName: aString state: aNavigatorState	| record |	record := self recordForVisitingPackageNamed: aString.	record notNil ifTrue: [pundleVisits remove: record].	record := NavigationVisit objectName: aString navigatorState: aNavigatorState copy.	pundleVisits addFirst: record.	[pundleVisits size &gt; self maxPackages] whileTrue: 		[pundleVisits removeLast]</body><body package="VB-Sketch-Browser History">recordPundleVisit	| names |	names := navigator getState pundles collect: [:each | each name].	names size = 1 ifTrue: [self recordPundleName: names first]</body><body package="VB-Sketch-Browser History">recordPundleVisitWithState: aNavigatorState	| names |	names := aNavigatorState pundles collect: [:each | each name].	names size = 1 ifTrue: [self recordPundleName: names first state: aNavigatorState]</body></methods><methods><class-id>Refactory.Browser.NavigationHistory</class-id> <category>private</category><body package="VB-Sketch-Browser History">classNamed: aString	^(aString asStrictReference home: nil) bindingOrNil value</body><body package="VB-Sketch-Browser History">packageNamed: aString	^Store.Registry packageNamed: aString</body><body package="VB-Sketch-Browser History">pundleNamed: aString	^Store.Registry pundleNamed: aString</body><body package="VB-Sketch-Browser History">recordForVisitingClassNamed: aString	^classVisits detect: [:some | some objectName = aString] ifNone: [nil]</body><body package="VB-Sketch-Browser History">recordForVisitingPackageNamed: aString	^pundleVisits detect: [:some | some objectName = aString] ifNone: [nil]</body><body package="VB-Sketch-Browser History">sortedVisits: aCollection	^SortVisitsAlphabetically		ifTrue: [aCollection asSortedCollection: [:a :b | a objectName &lt;= b objectName]]		ifFalse: [aCollection]</body></methods><methods><class-id>Refactory.Browser.NavigationHistory</class-id> <category>initialize-release</category><body package="VB-Sketch-Browser History">initialize	pundleVisits := OrderedCollection new: 10.	classVisits := OrderedCollection new: 10</body><body package="VB-Sketch-Browser History">navigator: aNavigator	navigator := aNavigator</body></methods><methods><class-id>Refactory.Browser.NavigationHistory</class-id> <category>private-flat menu</category><body package="VB-Sketch-Browser History">buildClassMenuPart	| menu class mostRecentVisit |	menu := Menu new.	menu addItem: (self makeLabelItem: 'Recent Classes:').	mostRecentVisit := self mostRecentVisitExcluding: navigator selectedClasses.	(self sortedVisitsForClassesExcluding: navigator selectedClasses) do:		[:each | | item reference |		class := self classNamed: each objectName.		reference := class strictReference.		item := MenuItem labeled: class name.		item 			labelImage: reference toolListIcon;			value: [navigator restoreHistoryState: each navigatorState].		mostRecentVisit == each ifTrue:			[item 				shortcutKeyCharacter: $0;				shortcutModifiers: 8].		menu addItem: item].	^menu</body><body package="VB-Sketch-Browser History">buildPackageMenuPart	| menu |	menu := Menu new.	menu addItem: (self makeLabelItem: 'Recent Packages:').	(self sortedVisitsForPundlesExcluding: navigator pundles) do:		[:each | | item package |		package := self pundleNamed: each objectName.		item := MenuItem labeled: package name.		item 			labelImage: package toolListIcon;			value: [navigator restoreHistoryState: each navigatorState].		menu addItem: item].	^menu</body><body package="VB-Sketch-Browser History">makeClearHistoryItem	^(MenuItem labeled: 'Clear History')		value: [self clear];		yourself</body><body package="VB-Sketch-Browser History">makeLabelItem: aString	^(MenuItem labeled: aString)		disable;		yourself</body></methods><methods><class-id>Refactory.Browser.NavigationHistory</class-id> <category>accessing</category><body package="VB-Sketch-Browser History">buildMenu	| menu |	menu := Menu new.	menu addPart: self buildClassMenuPart.	menu addLine.	menu addPart: self buildPackageMenuPart.	menu addLine.	menu addItem: self makeClearHistoryItem.	^menu</body><body package="VB-Sketch-Browser History">classNames	^classVisits collect: [:each | each objectName]</body><body package="VB-Sketch-Browser History">classes	| classes |	classes := self classNames collect: 		[:each | (each asStrictReference home: nil) bindingOrNil value].	^classes reject: [:any | any isNil].</body><body package="VB-Sketch-Browser History">clear	self initialize</body><body package="VB-Sketch-Browser History">mostRecentVisitExcluding: aCollection	^classVisits 		detect: 			[:some | | class |			class := self classNamed: some objectName.			class notNil and: [(aCollection includes: class) not and: [(aCollection includes: class class) not]]]		ifNone: [nil]</body><body package="VB-Sketch-Browser History">pundleNames	^pundleVisits collect: [:each | each objectName]</body><body package="VB-Sketch-Browser History">pundles	"Answer the packages for the remembered package names;	only those that still exist."	| packages |	packages := self pundleNames collect: 		[:each | Store.Registry packageNamed: each].	^packages reject: [:any | any isNil]</body><body package="VB-Sketch-Browser History">sortedVisitsForClassesExcluding: aCollection	"Return recorded visits for classes excluding those in the collection	and those that don't exist anymore, sorted by class name."	^self sortedVisits: (self visitsForClassesExcluding: aCollection)</body><body package="VB-Sketch-Browser History">sortedVisitsForPundlesExcluding: aCollection	"Return recorded visits for pundles excluding those in the collection	and those that don't exist anymore, sorted by pundle name."	^self sortedVisits: (self visitsForPundlesExcluding: aCollection)</body><body package="VB-Sketch-Browser History">visitsForClassesExcluding: aCollection	"Return recorded visits for classes excluding those in the collection	and those that don't exist anymore."	^classVisits select: 		[:each | | class |		class := self classNamed: each objectName.		class notNil and: [(aCollection includes: class) not and: [(aCollection includes: class class) not]]]</body><body package="VB-Sketch-Browser History">visitsForPundlesExcluding: aCollection	"Return recorded visits for pundles excluding those in the collection	and those that don't exist anymore."	^pundleVisits select: 		[:each | | pundle |		pundle := self pundleNamed: each objectName.		pundle notNil and: [(aCollection includes: pundle) not]]</body></methods><methods><class-id>Refactory.Browser.NavigationHistory class</class-id> <category>settings</category><body package="VB-Sketch-Browser History">sortVisitsAlphabetically	"Whether to sort visits alphabetically or in least recently visited first order."	^SortVisitsAlphabetically</body><body package="VB-Sketch-Browser History">sortVisitsAlphabetically: aBoolean	"Set whether to sort visits alphabetically or in least recently visited first order."	"self sortVisitsAlphabetically: true"	"self sortVisitsAlphabetically: false"	SortVisitsAlphabetically := aBoolean</body></methods><methods><class-id>Refactory.Browser.NavigationHistory class</class-id> <category>instance creation</category><body package="VB-Sketch-Browser History">for: aNavigator	^self new navigator: aNavigator</body><body package="VB-Sketch-Browser History">new	^super new initialize</body></methods><methods><class-id>Refactory.Browser.NavigationVisit</class-id> <category>accessing</category><body package="VB-Sketch-Browser History">navigatorState	^navigatorState</body><body package="VB-Sketch-Browser History">objectName	^objectName</body></methods><methods><class-id>Refactory.Browser.NavigationVisit</class-id> <category>initialize-release</category><body package="VB-Sketch-Browser History">initializeObjectName: aString navigatorState: aNavigatorState	objectName := aString.	navigatorState := aNavigatorState</body></methods><methods><class-id>Refactory.Browser.NavigationVisit class</class-id> <category>instance creation</category><body package="VB-Sketch-Browser History">objectName: aString navigatorState: aNavigatorState	^self new initializeObjectName: aString navigatorState: aNavigatorState</body></methods><methods><class-id>Refactory.Browser.ClassNavigatorPart</class-id> <category>changing</category><body package="VB-Sketch-Browser History">changed	self selections size = 1 ifTrue:		[navigator history recordClassVisit].	super changed</body></methods><methods><class-id>Refactory.Browser.ClassNavigatorPart</class-id> <category>updating widgets</category><body package="VB-Sketch-Browser History">selectState: aNavigatorState 	self fillInListFor: aNavigatorState.	self select: aNavigatorState objectNames.	navigator history recordClassVisitWithState: aNavigatorState</body></methods><methods><class-id>Refactory.Browser.PundleNavigatorPart</class-id> <category>changing</category><body package="VB-Sketch-Browser History">changed	self selections size = 1 ifTrue:		[navigator history recordPundleVisit].	super changed</body></methods><methods><class-id>Refactory.Browser.PundleNavigatorPart</class-id> <category>updating widgets</category><body package="VB-Sketch-Browser History">selectState: aNavigatorState	| pundles |	super selectState: aNavigatorState.	pundles := self objectList selections collect: [:each | each codeComponent].	pundles size = 1 ifTrue:		[navigator history recordPundleVisitWithState: aNavigatorState]</body></methods><methods><class-id>Refactory.Browser.RefactoringBrowser</class-id> <category>menu</category><body package="VB-Sketch-Browser History">menuBar	| menu |	menu := Menu new.	menu		addItem: ((MenuItem labeled: (#_Browser &lt;&lt; #browser &gt;&gt; '&amp;Browser'))					nameKey: #Browser;					submenu: (self buildTopLevelMenuFrom: #browserMenu);					yourself);		addItem: ((MenuItem labeled: (#_Edit &lt;&lt; #browser &gt;&gt; '&amp;Edit'))					nameKey: #Edit;					submenu: [self currentToolset menu value];					yourself);		addItem: ((MenuItem labeled: (#_Find &lt;&lt; #browser &gt;&gt; '&amp;Find'))					nameKey: #Find;					submenu: (self buildTopLevelMenuFrom: #findMenu);					yourself);		addItem: ((MenuItem labeled: (#_View &lt;&lt; #browser &gt;&gt; '&amp;View'))					nameKey: #View;					submenu: (self buildTopLevelMenuFrom: #viewMenu);					yourself);		addItem: ((MenuItem labeled: (#_History &lt;&lt; #browser &gt;&gt; '&amp;History'))					nameKey: #View;					submenu: [navigator history buildMenu];					yourself).	navigator windowMenuItems do: 			[:each | 			menu addItem: ((MenuItem labeled: each key)						nameKey: (each key copyWithout: $&amp;) asSymbol;						submenu: each value;						yourself)].	menu		addItem: ((MenuItem labeled: (#Tools &lt;&lt; #browser &gt;&gt; 'Tools'))					nameKey: #Tools;					submenu: (self buildTopLevelMenuFrom: #toolsMenu);					yourself);		addItem: ((MenuItem labeled: (#Help &lt;&lt; #browser &gt;&gt; 'Help'))					nameKey: #Help;					submenu: (self buildTopLevelMenuFrom: #helpMenu);					yourself).	menu 		augmentFrom: self class		to: self menuAugmentationRoot		menuName: #menuBar		for: self.	^menu</body></methods><methods><class-id>Refactory.Browser.ProtocolItemNavigatorPart</class-id> <category>changing</category><body package="VB-Sketch-Browser History">changed	self fillInProtocolForSelection.	navigator history recordPundleAndClass.	super changed</body></methods><methods><class-id>Refactory.Browser.ProtocolNavigatorPart</class-id> <category>changing</category><body package="VB-Sketch-Browser History">changed	navigator history recordPundleAndClass.	super changed</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>Object</name><environment>Core</environment><super></super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Kernel-Objects</category><attributes><package>Kernel-Objects</package></attributes></class><class><name>BrowserApplicationModel</name><environment>Refactory.Browser</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>snapbackManager postponedEditsMenuHolder </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Browser-RB UI</category><attributes><package>VB-Sketch-DontModeMeIn</package></attributes></class><class><name>ProtocolNavigatorPart</name><environment>Refactory.Browser</environment><super>Refactory.Browser.ListNavigatorPart</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Browser-Navigator Parts</category><attributes><package>Browser-BaseUI</package></attributes></class><class><name>RefactoringBrowser</name><environment>Refactory.Browser</environment><super>Refactory.Browser.AbstractRefactoringBrowser</super><private>false</private><indexed-type>none</indexed-type><inst-vars>policyClass </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Browser-RB UI</category><attributes><package>Browser-BrowserUI</package></attributes></class><class><name>ProtocolItemNavigatorPart</name><environment>Refactory.Browser</environment><super>Refactory.Browser.ListNavigatorPart</super><private>false</private><indexed-type>none</indexed-type><inst-vars>protocolHolder listSelector </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Browser-Navigator Parts</category><attributes><package>Browser-BaseUI</package></attributes></class><class><name>ClassNavigatorPart</name><environment>Refactory.Browser</environment><super>Refactory.Browser.ListNavigatorPart</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Browser-Navigator Parts</category><attributes><package>Browser-BaseUI</package></attributes></class><class><name>PundleNavigatorPart</name><environment>Refactory.Browser</environment><super>Refactory.Browser.HierarchyPundleNavigatorPart</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Browser-Navigator Parts</category><attributes><package>Browser-BaseUI</package></attributes></class></st-source>