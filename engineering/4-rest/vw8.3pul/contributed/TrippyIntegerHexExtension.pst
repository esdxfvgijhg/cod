<?xml version="1.0"?><st-source><!-- Name: TrippyIntegerHexExtensionComment: This package provides additional integer hex printing functionality to Trippy.  In particular, negative numbers are printed as if they were signed integers expressed in twos complement notation.DbIdentifier: bear73DbTrace: 305055PackageName: TrippyIntegerHexExtensionParcel: #('TrippyIntegerHexExtension')PrintStringCache: (7.8 - 1001,avalloud)Version: 7.8 - 1001Date: 10:15:49 AM October 22, 2010 --><time-stamp>From VisualWorksÂ®, Pre-Release 7.8 (oct10.4) of October 22, 2010 on October 22, 2010 at 10:15:49 AM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><methods><class-id>Core.Integer</class-id> <category>printing - trippy</category><body package="TrippyIntegerHexExtension" selector="hexPrintStringWith:">hexPrintStringWith: byteGrouping	| answer numberOfBytes toPrint threshold |	answer := String new writeStream.	numberOfBytes := self digitLength + byteGrouping - 1 // byteGrouping * byteGrouping.	self &lt; 0 ifTrue: [answer nextPutAll: '(-) '] ifFalse: [answer nextPutAll: '(+) '].	threshold := 1 bitShift: numberOfBytes * 8.	toPrint := threshold + self bitAnd: threshold - 1.	[		| thisChunk |		thisChunk := toPrint bitShift: byteGrouping - numberOfBytes * 8.		thisChunk			printOn: answer			paddedWith: $0			to: byteGrouping * 2			base: 16.		toPrint := toPrint - (thisChunk bitShift: numberOfBytes - byteGrouping * 8).		numberOfBytes := numberOfBytes - byteGrouping.		numberOfBytes &gt; 0 ifTrue: [answer nextPut: Character space].		numberOfBytes = 0	] whileFalse.	^answer contents</body><body package="TrippyIntegerHexExtension" selector="inspectorExtraAttributesHex">inspectorExtraAttributesHex	&lt;inspectorFields&gt;	| attribute2 attribute4 attribute8 |	attribute2 := Tools.Trippy.TextAttribute		label: #hexLE &lt;&lt; #dialogs &gt;&gt; 'C2 - hex'		text: (self hexPrintStringWith: 2).	attribute4 := Tools.Trippy.TextAttribute		label: #hexLE &lt;&lt; #dialogs &gt;&gt; 'C4 - hex'		text: (self hexPrintStringWith: 4).	attribute8 := Tools.Trippy.TextAttribute		label: #hexLE &lt;&lt; #dialogs &gt;&gt; 'C8 - hex'		text: (self hexPrintStringWith: 8).	^OrderedCollection with: attribute2 with: attribute4 with: attribute8</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>Integer</name><environment>Core</environment><super>Core.Number</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Magnitude-Numbers</category><attributes><package>Magnitude-Numbers</package></attributes></class></st-source>