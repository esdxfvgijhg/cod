<?xml version="1.0"?><st-source><!-- Name: ObjectiveCConnect-TestsComment: This package contains tests for the ObjectiveCConnect package.DbIdentifier: bear73DbTrace: 382763DbUsername: smichaelDbVersion: 7.10 - 1PackageName: ObjectiveCConnect-TestsParcel: #('ObjectiveCConnect-Tests')PrintStringCache: (7.10 - 1,smichael)Version: 7.10 - 1Date: 5:05:44 PM September 14, 2012 --><time-stamp>From VisualWorksÂ®, Pre-Release 7.10 (sep12.2) of September 14, 2012 on September 14, 2012 at 10:05:44 AM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>MacOSXOnly</name><environment>Core</environment><super>SUnit.TestResource</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>ObjectiveCConnect-Tests</package></attributes></class><comment><class-id>Core.MacOSXOnly</class-id><body>MacOSXOnly resource restricts test execution to the OS X platform only.</body></comment><class><name>ObjectiveCObjectTests</name><environment>Core</environment><super>SUnit.TestCase</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports>			private Root.ObjectiveC.*			</imports><category></category><attributes><package>ObjectiveCConnect-Tests</package></attributes></class><methods><class-id>Core.MacOSXOnly</class-id> <category>Testing</category><body package="ObjectiveCConnect-Tests">isAvailable	^ExternalInterface currentPlatformID == #osx and: [Screen default isMacOSX]</body></methods><methods><class-id>Core.ObjectiveCObjectTests</class-id> <category>tests</category><body package="ObjectiveCConnect-Tests">testCallback	| callback assert |	assert := false.	callback := ObjectiveCCallback do: [assert := true] resultType: CVoidType void argumentTypes: (Array with: ObjectiveCRuntime id with: ObjectiveCRuntime SEL).	ObjectiveCRuntime object: callback object __to_objc_id perform: callback selector.	self assert: assert.	callback := ObjectiveCCallback do: [1] resultType: CIntegerType int argumentTypes: (Array with: ObjectiveCRuntime id with: ObjectiveCRuntime SEL).	self assert: (ObjectiveCRuntime object: callback object __to_objc_id perform: callback selector) = 1.	callback := ObjectiveCCallback do: [:id :sel :x | x + 1] resultType: CIntegerType int argumentTypes: (Array with: ObjectiveCRuntime id with: ObjectiveCRuntime SEL with: CIntegerType int).	self assert: (ObjectiveCRuntime object: callback object __to_objc_id perform: callback selector with: 2) = 3.	assert := false.	callback := ObjectiveCCallback do: [:id :sel | assert := id isKindOf: ObjectiveCObject] resultType: CVoidType void argumentTypes: (Array with: ObjectiveCRuntime id with: ObjectiveCRuntime SEL).	ObjectiveCRuntime object: callback object __to_objc_id perform: callback selector.	self assert: assert.	assert := false.	callback := ObjectiveCCallback do: [:id :sel | assert := sel isSymbol] resultType: CVoidType void argumentTypes: (Array with: ObjectiveCRuntime id with: ObjectiveCRuntime SEL).	ObjectiveCRuntime object: callback object __to_objc_id perform: callback selector.	self assert: assert</body><body package="ObjectiveCConnect-Tests">testConvertPointToNSPoint	| point nsPoint |	point := 10 @ 20.	nsPoint := point __to_objc_NSPoint.	self assert: (nsPoint memberAt: #x) asInteger = point x.	self assert: (nsPoint memberAt: #y) asInteger = point y.	point := 10.5 @ 20.3333.	nsPoint := point __to_objc_NSPoint.	self assert: (nsPoint memberAt: #x) = point x.	self assert: (nsPoint memberAt: #y) = point y.</body><body package="ObjectiveCConnect-Tests">testConvertRectToNSRect	| rect nsRect |	rect :=(10@ 20 corner: 30 @ 40).	nsRect := rect __to_objc_NSRect.	self assert: ((nsRect memberAt: #origin) memberAt: #x) asInteger = rect origin x.	self assert: ((nsRect memberAt: #origin) memberAt: #y) asInteger = rect origin y.	self assert: ((nsRect memberAt: #size) memberAt: #width) asInteger = rect width.	self assert: ((nsRect memberAt: #size) memberAt: #height) asInteger = rect height.</body><body package="ObjectiveCConnect-Tests">testException	| menuitem |	menuitem := Root.ObjectiveC.NSMenuItem alloc.	menuitem initWithTitle: 'testing' action: nil keyEquivalent: NSString string.	self assert: menuitem title cString copyCStringFromHeap = 'testing'</body><body package="ObjectiveCConnect-Tests">testNameSpaceLookup	self assert: (Root.ObjectiveC.NSDate date isKindOf: ObjectiveCObject)</body><body package="ObjectiveCConnect-Tests">testReturnBoolean	| object1 object2 |	object1 := Root.ObjectiveC.NSObject alloc.	object2 := Root.ObjectiveC.NSObject alloc.	self assert: (object1 isEqual: object1).	self deny: (object1 isEqual: object2)</body><body package="ObjectiveCConnect-Tests">testReturnDouble	self assert: Root.ObjectiveC.NSDate date timeIntervalSinceNow class = Double</body><body package="ObjectiveCConnect-Tests">testReturnObject	self assert: (Root.ObjectiveC.NSDate date isKindOf: ObjectiveCObject)</body><body package="ObjectiveCConnect-Tests">testReturnStructure	| currentWindow window frame box |	currentWindow := Window currentWindow.	box := currentWindow getDisplayBox.	window := currentWindow windowHandle __from_objc_id.	frame := window frame.	self assert: frame notNil.	self assert: box width = frame width.	self assert: box left = frame left.	"We can't test the top/height, because OSX includes the windows decorations that we don't.	self assert: box top = frame top.	self assert: box height = frame height"</body></methods><methods><class-id>Core.ObjectiveCObjectTests class</class-id> <category>accessing</category><body package="ObjectiveCConnect-Tests">resources	^Array with: MacOSXOnly.</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>TestResource</name><environment>SUnit</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars>current </class-inst-vars><imports></imports><category>SUnit</category><attributes><package>SUnitToo</package></attributes></class><class><name>TestCase</name><environment>SUnit</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>testSelector </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>SUnit</category><attributes><package>SUnitToo</package></attributes></class></st-source>