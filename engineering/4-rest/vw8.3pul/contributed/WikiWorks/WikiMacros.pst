<?xml version="1.0"?><st-source><!-- Name: WikiMacrosComment: ancient legacy codeDbIdentifier: psql_public_cst_2007DbTrace: 92369DbUsername: niallrDbVersion: 7.10.1 - 1PackageName: WikiMacrosParcel: #('WikiMacros')ParcelName: WikiMacrosPrintStringCache: (7.10.1 - 1,niallr)Version: 7.10.1 - 1Date: 4:59:40 PM January 26, 2016 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.2 (aug15.1) of August 7, 2015 on January 26, 2016 at 4:59:40 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>WikiMacrosProcessor</name><environment>WikiWorks</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>macrosMap initialString </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Web-Wiki-Model</category><attributes><package>WikiMacros</package></attributes></class><class><name>KeySortedDictionary</name><environment>WikiWorks</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>collection </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>WikiMacros</category><attributes><package>WikiMacros</package></attributes></class><methods><class-id>WikiWorks.WikiMacrosProcessor</class-id> <category>processing</category><body package="WikiMacros">processString: aPageString by: anAuthor withSignatureTable: aSignaturePageString 	| processedPage |	processedPage := aPageString.	(anAuthor notNil) &amp; (aSignaturePageString notNil) 		ifTrue: 			[processedPage := self processString: aPageString						usingMacrosTable: (self signatureMacrosTableFrom: aSignaturePageString for: anAuthor)].	^self processString: processedPage usingMacrosTable: self macrosTable</body><body package="WikiMacros">processString: aString usingMacrosTable: aMacrosTable	initialString := aString.	macrosMap := KeySortedDictionary new.	self addToMacrosMap: '&lt;pre&gt;'.	self addToMacrosMap: '&lt;/pre&gt;'.	aMacrosTable keysDo: [:macros | self addToMacrosMap: macros].	^self processMacrosMapUsingMacrosTable: aMacrosTable</body></methods><methods><class-id>WikiWorks.WikiMacrosProcessor</class-id> <category>private</category><body package="WikiMacros">printDate	^Date today displayString copyFrom:1 to: 10</body><body package="WikiMacros">printFullDate	^TimestampPrintPolicy print: (Date today) using: 'd mmmm yyyy'</body><body package="WikiMacros">printTime	^Time now shortPrintString</body><body package="WikiMacros">printTimeDate	^self printTime , ' / ' , self printDate</body></methods><methods><class-id>WikiWorks.WikiMacrosProcessor</class-id> <category>processing-private</category><body package="WikiMacros">addToMacrosMap: aMacros 	| curMacrosPos |	curMacrosPos := 0.	[curMacrosPos := initialString findString: aMacros startingAt: curMacrosPos + 1.	curMacrosPos = 0] 			whileFalse: [macrosMap at: curMacrosPos put: aMacros]</body><body package="WikiMacros">processMacrosMapUsingMacrosTable: aMacrosTable	| resultString insidePre lastCopyIndex |	insidePre := false.	resultString := ''.	lastCopyIndex := 1.	macrosMap keysAndValuesDo: 			[:curMacrosPos :curMacros |			curMacros = '&lt;pre&gt;' ifTrue: [insidePre := true].			curMacros = '&lt;/pre&gt;' ifTrue: [insidePre := false].			(curMacros ~= '&lt;/pre&gt;') &amp; (insidePre = false) 				ifTrue: 					[resultString := resultString , (initialString copyFrom: lastCopyIndex to: (curMacrosPos - 1)) , (aMacrosTable at: curMacros) value.					lastCopyIndex := curMacrosPos + curMacros size]].	^resultString , (initialString copyFrom: lastCopyIndex)</body></methods><methods><class-id>WikiWorks.WikiMacrosProcessor</class-id> <category>macros</category><body package="WikiMacros">macrosTable	^(KeySortedDictionary sortBlock: [:first :second | first size &lt;= second size])		at: '::d' put: ['&lt;b&gt;' , self printDate , '&lt;/b&gt;'];		at: '::t' put: ['&lt;b&gt;' , self printTime , '&lt;/b&gt;'];		at: '::td' put: ['&lt;b&gt;' , self printTime , ' / ' , self printDate , '&lt;/b&gt;'];		at: '::fd' put: ['&lt;b&gt;' , self printFullDate , '&lt;/b&gt;'];		at: '::p' put: ['&amp;nbsp'];		yourself</body><body package="WikiMacros">signatureMacrosTableFrom: aMacrosPage for: anAuthor 	| signature signature2 pageStream |	signature := ''.	signature2 := ''.		pageStream := aMacrosPage readStream.	[pageStream atEnd] whileFalse: 			[ | lineStream |			lineStream := (pageStream upTo: Character cr) readStream.			(lineStream upTo: Character space) asUppercase = anAuthor asUppercase				ifTrue: 					[signature isEmpty						ifTrue: [signature := lineStream upToEnd]						ifFalse: [signature2 isEmpty ifTrue: [signature2 := lineStream upToEnd]]]].	^(KeySortedDictionary sortBlock: [:first :second | first size &lt;= second size])		at: '::s' put: [signature];		at: '::ss' put: [signature2];		yourself</body></methods><methods><class-id>WikiWorks.WikiMacrosProcessor class</class-id> <category>macros</category><body package="WikiMacros">signatureMacrosPageName	^'SIGNATURE MACROS'</body></methods><methods><class-id>WikiWorks.WikiMacrosProcessor class</class-id> <category>instance creation</category><body package="WikiMacros">processString: aPageString by: anAuthor withSignatureTable: aSignaturePageString 	^self new 		processString: aPageString		by: anAuthor		withSignatureTable: aSignaturePageString</body></methods><methods><class-id>WikiWorks.KeySortedDictionary</class-id> <category>accessing</category><body package="WikiMacros">at: aKey	^(collection detect: [:each | each key = aKey]) value</body><body package="WikiMacros">at: aKey put: aValue	^(collection detect: [:each | each key = aKey] ifNone: [collection add: (aKey-&gt;nil)]) value: aValue</body></methods><methods><class-id>WikiWorks.KeySortedDictionary</class-id> <category>initialize</category><body package="WikiMacros">sortBlock: aBlock	collection := SortedCollection sortBlock: [:first :second | aBlock value: (first key) value: (second key)].</body></methods><methods><class-id>WikiWorks.KeySortedDictionary</class-id> <category>enumerating</category><body package="WikiMacros">keysAndValuesDo: aBlock	collection do: [:each | aBlock value: (each key) value: (each value)]</body><body package="WikiMacros">keysDo: aBlock	collection do: [:each | aBlock value: (each key)]</body></methods><methods><class-id>WikiWorks.KeySortedDictionary class</class-id> <category>instance creation</category><body package="WikiMacros">new	^self basicNew sortBlock: [:first :second | first &lt;= second].</body><body package="WikiMacros">sortBlock: aBlock	^self basicNew sortBlock: aBlock.</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>Object</name><environment>Core</environment><super></super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Kernel-Objects</category><attributes><package>Kernel-Objects</package></attributes></class></st-source>