<?xml version="1.0"?><st-source><!-- Name: Protocols-TestingExtensionsNotice: Copyright 1999-2014 Cincom Systems, Inc.  All rights reserved.Comment: This package contains assorted extensions to the SUnit framework and various development extensions.This is the main test script that we used to run the test suite in a fully loaded development image and also as a test script for build testing in an unmodified visual.im (with the Internal tarball installed). To run it as a build test script, just dump the code in this method into a file, e.g. test.st and then run it as follows:		./visual.im -fileIn test.st	| parcelPath testDir results |	testDir := PortableFilename fromComponents: #('$(VISUALWORKS)' tests).	parcelPath := Parcel searchPathModel value.	(parcelPath includes: testDir) ifFalse: [ parcelPath addLast: testDir ].	Parcel ensureLoadedParcel: 'Protocols-TestingExtensions' withVersion: nil.	results := TestResult new.	#(	'Protocols-Common-Tests'		'Protocols-CommonTypeMappingsTests'	) do: [ :package |		Parcel ensureLoadedParcel: package withVersion: nil.		Transcript cr.		TestCase addResult: (TestCase runSuitesIn: package) to: results ].	Transcript cr; cr.	TestCase printResult: resultsDbIdentifier: bear73DbTrace: 445691DbUsername: tkoganDbVersion: 8.1 - 0DevelopmentPrerequisites: #(#(#any 'Protocols-Common' '') #(#any 'SUnitToo' '') #(#any 'Tools-Trippy' ''))DisregardedPrerequisites: #(#(#name 'Protocol-Common-Namespace' #componentType #package))PackageName: Protocols-TestingExtensionsParcel: #('Protocols-TestingExtensions')ParcelName: Protocols-TestingExtensionsPrerequisiteDescriptions: #(#(#name 'Protocols-Common') #(#name 'SUnitToo' #componentType #package) #(#name 'Tools-Trippy'))PrerequisiteParcels: #(#('Protocols-Common' '') #('SUnitToo' '') #('Tools-Trippy' ''))PrintStringCache: (8.1 - 0,tkogan)Version: 8.1 - 0Date: 3:05:09 PM April 21, 2017 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.3 (apr17.2) of April 21, 2017 on April 21, 2017 at 3:05:09 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>SU2TestCase</name><environment>Protocols</environment><super>SUnit.TestCase</super><private>false</private><indexed-type>none</indexed-type><inst-vars>debugging </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Protocols-TestingExtensions</package></attributes></class><comment><class-id>Protocols.SU2TestCase</class-id><body>Instance Variables	debugging	&lt;Boolean&gt; indicates if the test is running in debug mode</body></comment><class><name>SU2TestResource</name><environment>SUnit</environment><super>SUnit.TestResource</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Protocols-TestingExtensions</package></attributes></class><comment><class-id>SUnit.SU2TestResource</class-id><body>SU2TestResource originally included extension methods needed for testing protocols packages.  Those extensions have been moved into the SUnit.TestResource class extension in this package.  Due due the number of SU2TestResource subclasses in different test packages, we decided not to remove the class at this time.</body></comment><class><name>SU2TestCaseWithResource</name><environment>Protocols</environment><super>Protocols.SU2TestCase</super><private>false</private><indexed-type>none</indexed-type><inst-vars>resource </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Protocols-TestingExtensions</package></attributes></class><comment><class-id>Protocols.SU2TestCaseWithResource</class-id><body>Instance Variables	resource	&lt;TestResource&gt; This holds the actual instance of the test resource so that it is conveniently accessible from the test methods.</body></comment><shared-variable><name>Log</name><environment>Protocols</environment><private>false</private><constant>false</constant><category>Protocols-RBSUnitExtensions</category><initializer>nil</initializer><attributes><package>Protocols-TestingExtensions</package></attributes></shared-variable><methods><class-id>Protocols.SU2TestCase</class-id> <category>private</category><body package="Protocols-TestingExtensions">debugging	^debugging</body><body package="Protocols-TestingExtensions">debugging: aBoolean	debugging := aBoolean</body></methods><methods><class-id>Protocols.SU2TestCase</class-id> <category>initialize-release</category><body package="Protocols-TestingExtensions">initialize	super initialize.	debugging := false</body></methods><methods><class-id>Protocols.SU2TestCase</class-id> <category>running</category><body package="Protocols-TestingExtensions">debug	debugging := true.	self resources do: [ :r | r current debugging ].	^super debug</body></methods><methods><class-id>Protocols.SU2TestCase</class-id> <category>utilities</category><body package="Protocols-TestingExtensions">coolDownDelay	"There seem to be some limitations on how fast sockets are created and closed.  Use this at the end of tests starting and stopping their own brokers.  TCP brokers definitely need this, UDP brokers seem to vary based on momentary conditions of the system."	(Delay forMilliseconds: 100) wait</body></methods><methods><class-id>Protocols.SU2TestCase class</class-id> <category>instance creation</category><body package="Protocols-TestingExtensions">new	^super new initialize</body></methods><methods><class-id>Protocols.SU2TestCaseWithResource</class-id> <category>setup/teardown</category><body package="Protocols-TestingExtensions">setUp	resource isNil ifTrue: [		resource := self resources any current ].	^resource</body><body package="Protocols-TestingExtensions">tearDown	resource := nil</body></methods><methods><class-id>Protocols.EventCollector</class-id> <category>user interface</category><body package="Protocols-TestingExtensions">inspectorActions	^Array 		with: (Tools.Trippy.Action label: 'To Transcript' block: [self toTranscript] enablement: [self events notEmpty])		with: (Tools.Trippy.Action label: 'Clear To Transcript' block: [self clearToTranscript] enablement: [self events notEmpty])		with: (Tools.Trippy.Action label: 'Clear' block: [self clear] enablement: [self events notEmpty])		with: (Tools.Trippy.Action label: 'Reset Clock' block: [self resetClock] enablement: [true])</body></methods><methods><class-id>Protocols.EventCollector</class-id> <category>printing</category><body package="Protocols-TestingExtensions">printOn: aStream	super printOn: aStream.	aStream nextPut: $[;		print: events size;		nextPut: $]</body></methods><methods><class-id>Protocols.EventPrinter</class-id> <category>printing</category><body package="Protocols-TestingExtensions">printOn: aStream	aStream	nextPutAll: self class name.	label ifNotNil: [ 		aStream nextPut: $(;			nextPutAll: label;			nextPut: $) ]</body></methods><methods><class-id>SUnit.TestResource</class-id> <category>utilities</category><body package="Protocols-TestingExtensions">coolDownDelay	"There seem to be some limitations on how fast sockets are created and closed.  Use this at the end of tests starting and stopping their own brokers.  TCP brokers definitely need this, UDP brokers seem to vary based on momentary conditions of the system."	(Delay forMilliseconds: 100) wait</body></methods><methods><class-id>SUnit.TestResource</class-id> <category>Running</category><body package="Protocols-TestingExtensions">debugging	"Does nothing. Subclasses can override to provide additional debugging instrumentation."</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>TestResource</name><environment>SUnit</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars>current </class-inst-vars><imports></imports><category>SUnit</category><attributes><package>SUnitToo</package></attributes></class><class><name>EventPrinter</name><environment>Protocols</environment><super>Protocols.EventProcessor</super><private>false</private><indexed-type>none</indexed-type><inst-vars>label </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Opentalk</category><attributes><package>Protocols-Common</package></attributes></class><class><name>EventCollector</name><environment>Protocols</environment><super>Protocols.EventPrinter</super><private>false</private><indexed-type>none</indexed-type><inst-vars>events baseClockValue </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Opentalk</category><attributes><package>Protocols-Common</package></attributes></class><class><name>TestCase</name><environment>SUnit</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>testSelector </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>SUnit</category><attributes><package>SUnitToo</package></attributes></class></st-source>