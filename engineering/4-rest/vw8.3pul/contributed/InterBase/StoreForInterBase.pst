<?xml version="1.0"?><st-source><!-- Name: StoreForInterBaseNotice: Copyright 2001-2003 Anthony BorisCopyright 2009-2014 Niall RossThis utility is made available to use under the MIT license, as detailed below.Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.Comment: The InterBase/Firebird Connect, originally written by Anthony Boris <anthonyvb@yandex.ru>.This parcel contains the interface that allows StORE to work with an InterBase or Firebird database.Contributor(s): Anthony Boris, Niall Ross.DevelopmentPrerequisites: #(#(#any 'IBEXDI' '') #(#any 'StoreBase' ''))Namespace: GlorpPackageName: StoreForInterBaseParcel: #('StoreForInterBase')ParcelDirectory: StoreForInterBaseParcelName: StoreForInterBasePrerequisiteDescriptions: #(#(#name 'IBEXDI') #(#name 'StoreBase'))PrerequisiteParcels: #(#('IBEXDI' '') #('StoreBase' ''))Version: 8.0 - 1Post-Load Block: 	[ :pkg | Store.InterBaseDatabaseInstaller open]Date: 6:58:54 PM April 30, 2014 --><time-stamp>From VisualWorksÂ®, 7.10.1 of 6 February 2014 on 30 April 2014 at 18:58:54</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>InterBaseDatabaseInstaller</name><environment>Store</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>path alias username confirmPassword dbaName dbaPassword password pages connectionState dbName dbAlias protocol serverName descriptionText </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Store-InterBase</category><attributes><package>StoreForInterBase</package></attributes></class><comment><class-id>Store.InterBaseDatabaseInstaller</class-id><body>"Wizard" for Store for InterBase installation</body></comment><shared-variable><name>MyHelp</name><environment>Store.InterBaseDatabaseInstaller</environment><private>false</private><constant>false</constant><category>As yet unclassified</category><attributes><package>StoreForInterBase</package></attributes></shared-variable><methods><class-id>Store.InterBaseDatabaseInstaller</class-id> <category>private</category><body package="StoreForInterBase">addAlias	| key |	key := self dbAlias value.	key isEmpty ifTrue: [^self].	self connectionClass addLogical: key environment: self dbName value</body><body package="StoreForInterBase">messageFor: exception	"Copied from AdHocQueryTool / old-Store SQLBroker."	| errs msg |	exception signal == self connectionClass authenticationFailureSignal 		ifTrue: [^exception errorString].	errs := exception parameter.	^errs notNil		ifTrue:			[errs isSignalledException ifTrue: [^errs errorString].			(errs isEmpty not				and: [(msg := (exception parameter at: 1) dbmsErrorString) notNil				and: [msg isEmpty not]])					ifTrue: [msg]					ifFalse: [exception errorString]]		ifFalse: [exception errorString]</body></methods><methods><class-id>Store.InterBaseDatabaseInstaller</class-id> <category>accessing</category><body package="StoreForInterBase">connectionClass	^InterBaseConnection</body><body package="StoreForInterBase">databaseClass	^InterBaseDatabase</body><body package="StoreForInterBase">myPages	^#('Create Database' 'Add Users' 'Test' 'Install')</body><body package="StoreForInterBase">specArray	^#( createSpec usersSpec connectSpec installSpec)</body></methods><methods><class-id>Store.InterBaseDatabaseInstaller</class-id> <category>actions</category><body package="StoreForInterBase">addUser	| db |	self protocol value isNil ifTrue: [^Dialog warn: 'Select protocol !'].	(self protocol value ~~ #local and: [self serverName value isEmpty]) ifTrue: [^Dialog warn: 'Enter Server name!'].	self dbaName value isEmpty ifTrue: [^Dialog warn: 'Enter database administrator name !'].	self dbaPassword value isEmpty ifTrue: [^Dialog warn: 'Enter database administrator password !'].	self username value isEmpty ifTrue: [^Dialog warn: 'Enter new user name !'].	self password value isEmpty ifTrue: [^Dialog warn: 'Enter new user password !'].	self confirmPassword value = self password value ifFalse: [^Dialog warn: 'Re-type new user password !'].	db := self databaseClass new.Cursor database showWhile:		[[db addUser: self username value		password: self password value		serverName: self serverName value		protocol: 	self protocol value		dbaUser: self dbaName value		dbaPassword: self dbaPassword value] 		on: db class externalDatabaseErrorSignal			do:[ :exception |				exception appendNewLineToMessageText: (self messageFor: exception).				db := nil.				exception return]].	db notNil ifTrue: [Dialog warn: 'New user was added successfully !'].</body><body package="StoreForInterBase">connect	| connection | 	connection := self connectionClass new.	connection	username: (self username value);		password: (self password value);		environment: (self dbName value).	Cursor database showWhile:		[ [connection connect] on: connection class externalDatabaseErrorSignal			do:[ :exception |				exception appendNewLineToMessageText: (self messageFor: exception).				connection := nil.				exception return]].	connection notNil ifTrue: [Dialog warn: 'Connection successful !'. connection disconnect].</body><body package="StoreForInterBase">createDatabase	| c |	[(c := self connectionClass new) createDatabase: ('create database &lt;1p&gt; user &lt;2p&gt; password &lt;3p&gt; page_size 4096 '			expandMacrosWith: self dbName value			with: self dbaName value			with: self dbaPassword value)]		on: self connectionClass externalDatabaseErrorSignal		do: 			[:exception |			exception appendNewLineToMessageText: (self messageFor: exception).			c := nil.			exception return].	c notNil		ifTrue: 			[self addAlias.			Dialog warn: 'Database was created successfully !']</body><body package="StoreForInterBase">installStORE	"| dict |	dict := Dictionary new.	dict add: (#driver -&gt; #InterbaseConnection);		add: (#userName -&gt; self username value);		add: (#password -&gt; self password value);		add: (#env -&gt; (self dbAlias value isEmpty ifTrue: [self dbName value] ifFalse: [self dbAlias value] )).		DbRegistry connectionDesc at: #lastConnection put: dict."	"DbRegistry updateTablePrefix: self username value."	[DbRegistry installDatabaseTables] on: StoreError do: [:ex | ex return]</body></methods><methods><class-id>Store.InterBaseDatabaseInstaller</class-id> <category>aspects</category><body package="StoreForInterBase">confirmPassword	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^confirmPassword isNil		ifTrue:			[confirmPassword := String new asValue]		ifFalse:			[confirmPassword]</body><body package="StoreForInterBase">dbAlias	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^dbAlias isNil		ifTrue:			[dbAlias := String new asValue]		ifFalse:			[dbAlias]</body><body package="StoreForInterBase">dbName	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^dbName isNil		ifTrue:			[dbName := String new asValue]		ifFalse:			[dbName]</body><body package="StoreForInterBase">dbaName	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^dbaName isNil		ifTrue:			[dbaName := 'sysdba' copy asValue]		ifFalse:			[dbaName]</body><body package="StoreForInterBase">dbaPassword	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^dbaPassword isNil		ifTrue:			[dbaPassword := String new asValue]		ifFalse:			[dbaPassword]</body><body package="StoreForInterBase">descriptionText	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^descriptionText isNil		ifTrue:			[descriptionText := String new asValue]		ifFalse:			[descriptionText]</body><body package="StoreForInterBase">pages	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	pages isNil		ifTrue:			[(pages := SelectionInList with: self myPages) selectionIndex: 1.			pages selectionIndexHolder onChangeSend: #pagesChanged to: self].	^pages</body><body package="StoreForInterBase">password	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^password isNil		ifTrue:			[password := String new asValue]		ifFalse:			[password]</body><body package="StoreForInterBase">protocol		protocol isNil ifTrue:	[protocol := nil asValue.			protocol value: #local.			protocol onChangeSend: #protocolChanged to: self.].	^protocol</body><body package="StoreForInterBase">serverName	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^serverName isNil		ifTrue:			[serverName := String new asValue]		ifFalse:			[serverName]</body><body package="StoreForInterBase">username	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^username isNil		ifTrue:			[username := String new asValue]		ifFalse:			[username]</body></methods><methods><class-id>Store.InterBaseDatabaseInstaller</class-id> <category>changing</category><body package="StoreForInterBase">pagesChanged	| index |	index := self pages selectionIndex.	(self builder componentAt: #tabs) widget client: self spec: (self specArray at: index) builder: self builder.	self descriptionText value: (MyHelp at: index)</body><body package="StoreForInterBase">protocolChanged	self protocol value = #local ifTrue: [(self builder componentAt: #serverId)  disable ]		ifFalse: [(self builder componentAt: #serverId)  enable].</body></methods><methods><class-id>Store.InterBaseDatabaseInstaller</class-id> <category>interface opening</category><body package="StoreForInterBase">postOpenWith: aBuilder	super postOpenWith: aBuilder.	"(self builder componentAt: #descriptionId) widget controller: ReadOnlyTextEditorController new."	self pagesChanged</body></methods><methods><class-id>Store.InterBaseDatabaseInstaller class</class-id> <category>help texts</category><body package="StoreForInterBase">addUsersHelpText	"Heeg.ComposedTextEditor on: self addUsersHelpText for: self"	"Heeg.RtfWriter write: self addUsersHelpText into: 'addUsersHelpText.rtf'" 	"Heeg.HtmlWriter write: self addUsersHelpText into: 'addUsersHelpText.html'" 	^ (Text string: '	Add UsersProtocol: Protocol to use for connection with server.Server name: Specify server to administer 	for Local - leave blank;	for NetBEUI - network server name and remote installation path - path to isc4.gdb database (e.g. ntserver\e:\program files\firebird ) - NT only;	for TCP/IP - server name.AdministratorUser name: Specify InterBase administrator name (SYSDBA by default).Password: (''masterkey'' by default or check /opt/interbase/SYSDBA.password file on Linux).New userUser name: Enter new user namePassword: Enter passwordConfirm password: Confirm passwordIn case of problems use ''gsec'' utility.For example:cd /opt/interbase/bin/gsec -user sysdba -password masterkeyor, for create accounts on remote host:gsec -database host:/opt/interbase/isc4.gdb(where /opt/interbase/isc4.gdb path to security database)in interactive mode enter:add newuser -pw passwordquit For more info look into "Operation Guide" manual' runs: (Core.RunArray runs: #(1 9 1 9 45 12 36 5 21 7 139 6 16 13 1 10 59 9 81 8 1 10 21 9 16 17 72 17 1 42 41 43 86 4 7 5 8 6 50) values: ((Core.Array new: 39) at: 2 put: ((Core.Array new: 3) at: 1 put: #large; at: 2 put: #bold; at: 3 put: (#color -&gt; Graphics.ColorValue navy); yourself); at: 4 put: #italic; at: 6 put: #italic; at: 8 put: (#color -&gt; Graphics.ColorValue blue); at: 10 put: (#color -&gt; Graphics.ColorValue blue); at: 12 put: (#color -&gt; Graphics.ColorValue blue); at: 14 put: #bold; at: 16 put: #italic; at: 18 put: #italic; at: 20 put: #bold; at: 22 put: #italic; at: 24 put: #italic; at: 26 put: #italic; at: 28 put: #bold; at: 30 put: #bold; at: 32 put: #bold; at: 34 put: #bold; at: 35 put: #(#bold #italic); at: 36 put: #bold; at: 37 put: #(#bold #italic); at: 38 put: #bold; yourself)))</body><body package="StoreForInterBase">createDatabaseHelpText	"Heeg.ComposedTextEditor on: self createDatabaseHelpText for: self"	"Heeg.RtfWriter write: self createDatabaseHelpText into: 'createDatabaseHelpText.rtf'" 	"Heeg.HtmlWriter write: self createDatabaseHelpText into: 'createDatabaseHelpText.html'" 	^ (Text string: '	Create DatabaseAdministratorUser name: Enter InterBase administrator name (SYSDBA by default).Password: (''masterkey'' by default or check \opt\interbase\SYSDBA.password file on Linux).New databaseDatabase file name: Enter complete and absolute directory path to the database with hostname for non-local server. Examples: local server: /usr/visualworks/mystore.gdb (Linux) or c:\visualworks\mystore.gdb (NT).tcp/ip connection:hostname:/usr/visualworks/mystore.gdb orhostname:c:\visualworks\mystore.gdbNetBEUI connection:\\servername:c:\visualworks\mystore.gdbDatabase alias: Specify image-level alias (environment) for database for using instead full path (optional)In case of problems use ''''isql'' utility.For example:cd /opt/interbase/binisql in interactive mode enter:create database ''/opt/visualworks/mystore.gdb'' user ''sysdba'' password ''masterkey'' page_size 4096;exit; ' runs: (Core.RunArray runs: #(1 15 1 13 1 10 57 9 81 12 1 19 108 14 1 29 11 26 7 18 1 37 4 35 1 19 1 39 1 15 94 26 4 24 28 27 17 28 8 6 11 11 22 2) values: ((Core.Array new: 44) at: 2 put: ((Core.Array new: 3) at: 1 put: #bold; at: 2 put: #large; at: 3 put: (#color -&gt; Graphics.ColorValue navy); yourself); at: 4 put: #bold; at: 6 put: #italic; at: 8 put: #italic; at: 10 put: #bold; at: 12 put: #italic; at: 14 put: (#color -&gt; Graphics.ColorValue blue); at: 16 put: #bold; at: 18 put: #bold; at: 20 put: (#color -&gt; Graphics.ColorValue blue); at: 22 put: #bold; at: 24 put: #bold; at: 26 put: (#color -&gt; Graphics.ColorValue blue); at: 28 put: #bold; at: 30 put: #italic; at: 32 put: (#color -&gt; Graphics.ColorValue black); at: 33 put: #bold; at: 34 put: (#color -&gt; Graphics.ColorValue black); at: 35 put: ((Core.Array new: 2) at: 1 put: (#color -&gt; Graphics.ColorValue black); at: 2 put: #bold; yourself); at: 36 put: (#color -&gt; Graphics.ColorValue black); at: 37 put: ((Core.Array new: 2) at: 1 put: (#color -&gt; Graphics.ColorValue black); at: 2 put: #bold; yourself); at: 38 put: ((Core.Array new: 3) at: 1 put: (#color -&gt; Graphics.ColorValue black); at: 2 put: #bold; at: 3 put: #italic; yourself); at: 39 put: ((Core.Array new: 2) at: 1 put: (#color -&gt; Graphics.ColorValue black); at: 2 put: #bold; yourself); at: 40 put: ((Core.Array new: 3) at: 1 put: (#color -&gt; Graphics.ColorValue black); at: 2 put: #bold; at: 3 put: #italic; yourself); at: 41 put: ((Core.Array new: 2) at: 1 put: (#color -&gt; Graphics.ColorValue black); at: 2 put: #bold; yourself); at: 42 put: ((Core.Array new: 3) at: 1 put: (#color -&gt; Graphics.ColorValue black); at: 2 put: #bold; at: 3 put: #italic; yourself); at: 43 put: ((Core.Array new: 2) at: 1 put: (#color -&gt; Graphics.ColorValue black); at: 2 put: #bold; yourself); at: 44 put: (#color -&gt; Graphics.ColorValue black); yourself)))</body><body package="StoreForInterBase">installHelpText	"Heeg.ComposedTextEditor on: self installHelpText for: self"	"Heeg.RtfWriter write: self installHelpText into: 'installHelpText.rtf'" 	"Heeg.HtmlWriter write: self installHelpText into: 'installHelpText.html'" 	^ (Text string: '		InstallNow you can try install StORE for InterBase/Firebird.Read Chapter "Team Development and Version Control" of the VisualWorks Application Developers Guide for more info.See last info about StORE for InterBase/Firebird at goodies\other\InterBase\doc\changes.txt' runs: (Core.RunArray runs: #(2 7 266) values: ((Core.Array new: 3) at: 2 put: ((Core.Array new: 3) at: 1 put: (#color -&gt; Graphics.ColorValue navy); at: 2 put: #bold; at: 3 put: #large; yourself); yourself)))</body><body package="StoreForInterBase">testConnectionHelpText	"Heeg.ComposedTextEditor on: self testConnectionHelpText for: self"	"Heeg.RtfWriter write: self testConnectionHelpText into: 'testConnectionHelpText.rtf'" 	"Heeg.HtmlWriter write: self testConnectionHelpText into: 'testConnectionHelpText.html'" 	^ (Text string: '	Test ConnectionConnect infoEnvironment: Enter connect string to the database. For example: 	local connection - c:\visualworks\mystore.gdb 	TCP/IP connection - remotehost:/usr/visualworks/mystore.gdb (Linux) or remotehost:c:\visualworks\mystore.gdb (NT).	NetBEUI connection - \\ntserver\c:\visualworks\mystore.gdb (NT only)User name: Enter user name.Password: Enter your password .' runs: (Core.RunArray runs: #(1 15 1 12 1 12 54 16 32 17 99 18 51 10 18 9 23) values: ((Core.Array new: 17) at: 2 put: ((Core.Array new: 3) at: 1 put: (#color -&gt; Graphics.ColorValue navy); at: 2 put: #bold; at: 3 put: #large; yourself); at: 4 put: #bold; at: 6 put: #italic; at: 8 put: (#color -&gt; Graphics.ColorValue blue); at: 10 put: (#color -&gt; Graphics.ColorValue blue); at: 12 put: (#color -&gt; Graphics.ColorValue blue); at: 14 put: #italic; at: 16 put: #italic; yourself)))</body></methods><methods><class-id>Store.InterBaseDatabaseInstaller class</class-id> <category>class initialization</category><body package="StoreForInterBase">initialize	MyHelp := self installHelp</body><body package="StoreForInterBase">installHelp	^#(createDatabaseHelpText  addUsersHelpText testConnectionHelpText installHelpText) collect: [:s | self perform: s]</body></methods><methods><class-id>Store.InterBaseDatabaseInstaller class</class-id> <category>interface specs</category><body package="StoreForInterBase">connectSpec	"UIPainter new openOnClass: self andSelector: #connectSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Connect Spec' 			#min: #(#{Core.Point} 289 246 ) 			#max: #(#{Core.Point} 289 246 ) 			#bounds: #(#{Graphics.Rectangle} 512 384 801 630 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.LayoutFrame} 3 0 44 0 -8 1 230 0 ) 					#name: #GroupBox2 					#label: 'Connect Info' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 13 66 ) 					#name: #Label3 					#label: 'User Name:' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 13 116 ) 					#name: #Label4 					#label: 'Password:' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 13 0 90 0 -17 1 113 0 ) 					#name: #username 					#model: #username ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 13 0 140 0 -17 1 163 0 ) 					#name: #password 					#model: #password 					#type: #password ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 12 166 ) 					#name: #Label1 					#label: 'Environment:' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 13 0 190 0 -17 1 213 0 ) 					#name: #InputField1 					#model: #dbName ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 10 0.3 10 0 ) 					#name: #Label2 					#label: 'Test connection' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0.3 245 0 100 0.33 268 0 ) 					#name: #connect 					#model: #connect 					#label: 'Test Connection' 					#defaultable: true ) ) ) )</body><body package="StoreForInterBase">createSpec	"UIPainter new openOnClass: self andSelector: #createSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Create Database' 			#min: #(#{Core.Point} 289 327 ) 			#max: #(#{Core.Point} 289 327 ) 			#bounds: #(#{Graphics.Rectangle} 512 384 801 711 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.LayoutFrame} 5 0 3 0 -5 1 135 0 ) 					#name: #GroupBox1 					#label: 'Administrator ' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 15 16 ) 					#name: #Label1 					#label: 'User Name (e.g. SYSDBA):' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 15 69 ) 					#name: #Label2 					#label: 'Password:' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 15 0 41 0 -15 1 64 0 ) 					#name: #dbaName 					#model: #dbaName ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 15 0 93 0 -15 1 116 0 ) 					#name: #dbaPassword 					#model: #dbaPassword 					#type: #password ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.LayoutFrame} 5 0 140 0 -5 1 270 0 ) 					#name: #GroupBox2 					#label: 'New database' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 14 155 ) 					#name: #Label3 					#label: 'Database file name (full path): ' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 13 205 ) 					#name: #Label4 					#label: 'Database alias (VW environment) : ' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 15 0 177 0 -15 1 200 0 ) 					#name: #dbName 					#model: #dbName ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 15 0 230 0 -15 1 253 0 ) 					#name: #dbAlias 					#model: #dbAlias ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0.3 280 0 100 0.33 303 0 ) 					#name: #addUserId 					#model: #createDatabase 					#label: 'Create database' 					#defaultable: true ) ) ) )</body><body package="StoreForInterBase">installSpec	"UIPainter new openOnClass: self andSelector: #installSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Install StORE' 			#min: #(#{Core.Point} 289 246 ) 			#max: #(#{Core.Point} 289 246 ) 			#bounds: #(#{Graphics.Rectangle} 512 384 801 630 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0.3 0 0.4 110 0.3 40 0.4 ) 					#name: #installID 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #red ) ) 					#model: #installStORE 					#label: 'Install Now !' 					#style: #large 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 5 0.1 25 0 ) 					#name: #Label1 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #blue ) ) 					#label: 'StORE for InterBase/Firebird' 					#style: #large ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.LayoutFrame} 15 0 15 0 -15 1 67 0 ) 					#name: #GroupBox1 ) ) ) )</body><body package="StoreForInterBase">usersSpec	"UIPainter new openOnClass: self andSelector: #usersSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Create Users' 			#min: #(#{Core.Point} 317 380 ) 			#max: #(#{Core.Point} 317 380 ) 			#bounds: #(#{Graphics.Rectangle} 512 384 829 764 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0.4 345 0 60 0.4 368 0 ) 					#name: #addUserId 					#model: #addUser 					#label: 'Add User' 					#defaultable: true ) 				#(#{UI.MenuButtonSpec} 					#layout: #(#{Graphics.Rectangle} 16 24 119 47 ) 					#name: #MenuButton1 					#model: #protocol 					#menu: #protocolMenu ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 16 0 ) 					#name: #Label6 					#label: 'Protocol:' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 133 0 25 0 -15 1 48 0 ) 					#name: #serverId 					#flags: 40 					#model: #serverName ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 133 1 ) 					#name: #Label7 					#label: 'Server Name:' ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.LayoutFrame} 5 0 49 0 -5 1 170 0 ) 					#name: #GroupBox3 					#label: 'Administrator ' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 15 68 ) 					#name: #Label8 					#label: 'User Name (e.g. SYSDBA):' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 15 115 ) 					#name: #Label9 					#label: 'Password (e.g. ''masterkey''):' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 15 0 90 0 -15 1 113 0 ) 					#name: #dbaName 					#model: #dbaName ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 15 0 135 0 -15 1 158 0 ) 					#name: #dbaPassword 					#model: #dbaPassword 					#type: #password ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.LayoutFrame} 5 0 175 0 -5 1 340 0 ) 					#name: #GroupBox2 					#label: 'New User' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 14 287 ) 					#name: #Label5 					#label: 'Confirm password:' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 14 193 ) 					#name: #Label3 					#label: 'User Name:' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 14 243 ) 					#name: #Label4 					#label: 'Password:' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 15 0 216 0 -15 1 239 0 ) 					#name: #username 					#model: #username ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 15 0 263 0 -15 1 286 0 ) 					#name: #password 					#model: #password 					#type: #password ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 15 0 306 0 -15 1 329 0 ) 					#name: #confirmPassword 					#model: #confirmPassword 					#type: #password ) ) ) )</body><body package="StoreForInterBase">windowSpec	"UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Install StORE For InterBase/Firebird' 			#min: #(#{Core.Point} 600 416 ) 			#bounds: #(#{Graphics.Rectangle} 424 352 1024 768 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.TabControlSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 0 0 -2 0.5 -12 1 ) 					#name: #tabs 					#model: #pages 					#labels: #() ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} -50 0.5 -17 1 ) 					#name: #Label2 					#label: 'Â© 2001, 2002 Anthony Boris' 					#style: #small ) 				#(#{UI.ResizingSplitterSpec} 					#layout: #(#{Graphics.LayoutFrame} -1 0.5 24 0 1 0.5 -15 1 ) 					#name: #ResizingSplitter1 					#horizontal: false 					#minAboveSize: 150 					#minBelowSize: 100 					#aboveWidgets: 'tabs' 					#belowWidgets: '#CompositeDescription' ) 				#(#{UI.CompositeSpecCollection} 					#collection: #(						#(#{UI.TextEditorSpec} 							#layout: #(#{Graphics.LayoutFrame} 0 0 23 0 0 1.0 0 1.0 ) 							#name: #descriptionId 							#colors: 							#(#{UI.LookPreferences} 								#setBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 							#model: #descriptionText 							#isReadOnly: true 							#tabRequiresControl: true ) 						#(#{UI.LabelSpec} 							#layout: #(#{Graphics.LayoutOrigin} 0 0.144295 0 0 ) 							#name: #Label1 							#label: 'Overview (resize window/pane for best view)' ) ) 					#compositeSpec: 					#(#{UI.CompositeSpec} 						#layout: #(#{Graphics.LayoutFrame} 2 0.5 1 0 0 1 -12 1 ) 						#name: #CompositeDescription ) ) ) ) )</body></methods><methods><class-id>Store.InterBaseDatabaseInstaller class</class-id> <category>resources</category><body package="StoreForInterBase">protocolMenu	"MenuEditor new openOnClass: self andSelector: #protocolMenu"	&lt;resource: #menu&gt;	^#(#{UI.Menu} #(			#(#{UI.MenuItem} 				#rawLabel: 'Local' 				#value: #local ) 			#(#{UI.MenuItem} 				#rawLabel: 'TCP/IP' 				#value: #tcpip ) 			#(#{UI.MenuItem} 				#rawLabel: 'NetBEUI' 				#value: #netbeui ) ) #(1 2 ) nil ) decodeAsLiteralArray</body></methods><methods><class-id>Database.InterBaseConnection class</class-id> <category>glorp</category><body package="StoreForInterBase">glorpStoreDatabasePlatformClass	^FirebirdPlatform</body></methods><initialize><class-id>Store.InterBaseDatabaseInstaller</class-id></initialize><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>ApplicationModel</name><environment>UI</environment><super>UI.Model</super><private>false</private><indexed-type>none</indexed-type><inst-vars>builder uiSession eventHandlers </inst-vars><class-inst-vars>savedWindowInformation </class-inst-vars><imports></imports><category>UIBuilder-Framework</category><attributes><package>UIBuilder-Framework</package></attributes></class></st-source>