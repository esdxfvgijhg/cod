<?xml version="1.0"?><st-source><!-- Name: SpiderSolitaireNotice: Copyright 2006-2008 David BuckThis program is made available to use under the MIT license, as detailed below.Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.BundleName: SpiderSolitaireBundleStructure: a Store.BundleForParcelComment: This is a game of Spider Solitaire written by David Buck.To play, run	SpiderSolitaireUI openYou can start a game with 1 suit (the easiest), 2 suits (harder) or 4 suits (almost impossible).  The goal is to build sequences of cards of the same suit running from King down to Ace.  When you have a complete sequence of the same suit, the sequence is added to your "finished" piles at the bottom of the window.  You can grab and move any stack of cards that are in descending order and have the same suit.  You can drop a stack onto an empty column or onto a column whose bottom card is the next one up from the stack you are dragging (even if it's a different suit).  For example, you can drop a stack containing a 3 of spades, 2 of spades and Ace of spades onto a 4 of hearts.Clicking on the undealt cards will deal a new card from the undealt stacks in the bottom right onto each of the 10 columns.If you need help, you can hit the Hint button and it will show you a legal move (although not necessarily the best legal move).Parcel: nilParcelName: SpiderSolitairePrerequisiteParcels: #()Version: 1.7.2Post-Load Block: 	[:pkg | #{RSS.RSSFeedViewer} ifDefinedDo: [:cls | cls		registerPluginClass: Smalltalk.SpiderSolitaireUI		startupMessage: #open		label: 'Spider']].Pre-Unload Block: 	[:package | #{RSS.RSSFeedViewer} ifDefinedDo: [:cls | cls		unregisterPluginClass: Smalltalk.SpiderSolitaireUI]]Date: 11:30:05 AM June 16, 2017 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.3 (jun17.3) of June 16, 2017 on June 16, 2017 at 11:30:05 AM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>SpiderSolitaireUI</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>game </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>UIApplications-New</category><attributes><package>SpiderSolitaire</package></attributes></class><comment><class-id>SpiderSolitaireUI</class-id><body>The Spider Solitaire user interface.To run, evaluate:	SpiderSolitaireUI openInstance Variables:	game	&lt;SpiderSolitaireGame&gt;	the game</body></comment><class><name>Card</name><environment>Smalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>frontImage backImage faceUp number suit </inst-vars><class-inst-vars>images </class-inst-vars><imports></imports><category>SpiderSolitaire</category><attributes><package>SpiderSolitaire</package></attributes></class><comment><class-id>Card</class-id><body>A Card has a number and a suit and can be face up or face down.Instance Variables:	number	&lt;String&gt;	the number that appears on the card	suit	&lt;String&gt;	the suit of the card	faceUp	&lt;Boolean&gt;	is the card face up?	frontImage	&lt;Image&gt;	image to use when the card is face up	backImage	&lt;Image&gt;	image to use when the card is face down</body></comment><class><name>CardStack</name><environment>Smalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>cards position faceDownOffset faceUpOffset displayedFaceUpOffset name maxCardPosition </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>SpiderSolitaire</category><attributes><package>SpiderSolitaire</package></attributes></class><comment><class-id>CardStack</class-id><body>CardStack is an ordered collection of cards which may be face up or face down.  The stack can be named and can display itself on a user interface.A stack knows its preferred offset between face up cards being displayed.  If there's not enough space, it will reduce that offset smaller until there is enough space to display the cards.Instance Variables:	cards	&lt;(OrderedCollection of: Card)&gt;	the cards in the stack	displayedFaceUpOffset	&lt;Point&gt; the actual offset between face up cards	faceDownOffset	&lt;Point&gt;	 the preferred offset (which is the maximum) from a face down card to the next one	faceUpOffset	&lt;Point&gt;	the offset from a face up card to the next one	maxCardPosition	&lt;Point&gt;	the maximum card starting position.  If cards go past this, redude the displayedFaceUpOffset	name	&lt;String&gt;	the name of the stack	position	&lt;Point&gt;  the location of the stack</body></comment><class><name>CardView</name><environment>Smalltalk</environment><super>UI.View</super><private>false</private><indexed-type>none</indexed-type><inst-vars>gradientStart startColor gradientEnd endColor </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>SpiderSolitaire</category><attributes><package>SpiderSolitaire</package></attributes></class><comment><class-id>CardView</class-id><body>CardView is a custom view of a card game that shows stacks on a green table</body></comment><class><name>CardController</name><environment>Smalltalk</environment><super>UI.SelectController</super><private>false</private><indexed-type>none</indexed-type><inst-vars>stackBeingMoved </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>SpiderSolitaire</category><attributes><package>SpiderSolitaire</package></attributes></class><comment><class-id>CardController</class-id><body>CardController is a custom controller for a card game that allows stacks to be moved around.Instance Variables:	stackBeingMoved	&lt;CardStack&gt;	the stack currently being moved</body></comment><class><name>CardGame</name><environment>Smalltalk</environment><super>UI.Model</super><private>false</private><indexed-type>none</indexed-type><inst-vars>stacks hintsGiven stackBeingMoved sourceStack grabOffset </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>SpiderSolitaire</category><attributes><package>SpiderSolitaire</package></attributes></class><comment><class-id>CardGame</class-id><body>CardGame is an abstract class for card games especially solitaire games.Subclasses must implement the following messages:	hints		possibleMoves	testing		canDrop:on:		isLegalSplitAt:Instance Variables:	stacks	&lt;(Collection of: CardStack)&gt;	the card stacks	grabOffset	&lt;Point&gt;	  the offset from the card origin of the grab point	hintsGiven	&lt;Collection&gt;	hints that have already been given - next hint should be another one if possible	sourceStack	&lt;CardStack&gt;	the place where the stackBeingMoved is coming from.  On failure, move it back here.	stackBeingMoved	&lt;CardStack&gt;	the stack being moved</body></comment><class><name>SpiderSolitaireGame</name><environment>Smalltalk</environment><super>CardGame</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>SpiderSolitaire</category><attributes><package>SpiderSolitaire</package></attributes></class><comment><class-id>SpiderSolitaireGame</class-id><body>SpiderSolitaireGame contains the rules specific to Spider Solitaire</body></comment><class><name>Hint</name><environment>Smalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>fromStack fromCard toStack toCard </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>SpiderSolitaire</category><attributes><package>SpiderSolitaire</package></attributes></class><comment><class-id>Hint</class-id><body>A Hint is a suggestion of a possible move.Instance Variables:	fromCard	&lt;Card&gt;	the card to move (with the stack below it)	fromStack	&lt;CardStack&gt;	the stack that the card is on	toCard	&lt;Card&gt;	the card to drop the stack on	toStack	&lt;CardStack&gt;	the stack to drop the stack on</body></comment><methods><class-id>SpiderSolitaireUI</class-id> <category>opening</category><body package="SpiderSolitaire">postBuildWith: aBuilder	super postBuildWith: aBuilder.	self builder window		damageRepairPolicy: DoubleBufferingWindowDisplayPolicy new</body></methods><methods><class-id>SpiderSolitaireUI</class-id> <category>view</category><body package="SpiderSolitaire">cardView	^CardView new model: game</body></methods><methods><class-id>SpiderSolitaireUI</class-id> <category>initialize-release</category><body package="SpiderSolitaire">initialize	super initialize.	game := SpiderSolitaireGame new.	game expressInterestIn: #refresh for: self sendBack: #forceRefreshDisplay:</body></methods><methods><class-id>SpiderSolitaireUI</class-id> <category>actions</category><body package="SpiderSolitaire">checkForCancel	game hasStacks ifFalse: [^true].	game hasWon ifTrue: [^true].	^Dialog confirm: 'Do you want to abandon this game?'</body><body package="SpiderSolitaire">deal	game deal.	self forceRefreshDisplay</body><body package="SpiderSolitaire">forceRefreshDisplay	self forceRefreshDisplay: (self builder componentAt: #cardView) bounds</body><body package="SpiderSolitaire">forceRefreshDisplay: aRectangle	(self builder componentAt: #cardView) invalidateRectangle: aRectangle repairNow: true</body><body package="SpiderSolitaire">hint	game giveHint ifNotNil: [:hint | hint showOn: game]</body><body package="SpiderSolitaire">newFourSuits	self checkForCancel ifFalse: [^self].	game dealFourSuits.	self forceRefreshDisplay</body><body package="SpiderSolitaire">newOneSuit	self checkForCancel ifFalse: [^self].	game dealOneSuit.	self forceRefreshDisplay</body><body package="SpiderSolitaire">newTwoSuits	self checkForCancel ifFalse: [^self].	game dealTwoSuits.	self forceRefreshDisplay</body></methods><methods><class-id>SpiderSolitaireUI class</class-id> <category>interface specs</category><body package="SpiderSolitaire">dealImage	^ListIconLibrary visualFor: #twoPages</body><body package="SpiderSolitaire">hintImage	^ToolbarIconLibrary visualFor: #thought</body><body package="SpiderSolitaire">hintLabel	^ToolbarIconLibrary visualFor: #thought</body></methods><methods><class-id>SpiderSolitaireUI class</class-id> <category>resources</category><body package="SpiderSolitaire">fourSuit	^OpaqueImage figure: self fourSuitImage shape: self fourSuitMask</body><body package="SpiderSolitaire">oneSuit	^OpaqueImage figure: self oneSuitImage shape: self oneSuitMask</body><body package="SpiderSolitaire">twoSuit	^OpaqueImage figure: self twoSuitImage shape: self twoSuitMask</body></methods><methods><class-id>Card</class-id> <category>accessing</category><body package="SpiderSolitaire">backImage	^backImage</body><body package="SpiderSolitaire">backImage: anObject	backImage := anObject</body><body package="SpiderSolitaire">beFaceDown	faceUp := false</body><body package="SpiderSolitaire">beFaceUp	faceUp := true</body><body package="SpiderSolitaire">bounds	^frontImage bounds</body><body package="SpiderSolitaire">frontImage	^frontImage</body><body package="SpiderSolitaire">frontImage: anObject	frontImage := anObject</body><body package="SpiderSolitaire">number	^number</body><body package="SpiderSolitaire">number: anObject	number := anObject</body><body package="SpiderSolitaire">suit	^suit</body><body package="SpiderSolitaire">suit: anObject	suit := anObject</body></methods><methods><class-id>Card</class-id> <category>displaying</category><body package="SpiderSolitaire">displayOn: aGraphicsContext at: aPoint	self imageToDisplay displayOn: aGraphicsContext at: aPoint</body><body package="SpiderSolitaire">imageToDisplay	^self isFaceUp		ifTrue: [self frontImage]		ifFalse: [self backImage]</body></methods><methods><class-id>Card</class-id> <category>initialize-release</category><body package="SpiderSolitaire">initialize	faceUp := true</body></methods><methods><class-id>Card</class-id> <category>testing</category><body package="SpiderSolitaire">isFaceDown	^self isFaceUp not</body><body package="SpiderSolitaire">isFaceUp	^faceUp</body></methods><methods><class-id>Card</class-id> <category>printing</category><body package="SpiderSolitaire">printOn: aStream	self isFaceDown ifTrue: [^aStream nextPut: $-].	aStream		nextPutAll: self number;		nextPutAll: ' of ';		nextPutAll: self suit;		space</body></methods><methods><class-id>Card</class-id> <category>computing</category><body package="SpiderSolitaire">value	^#('ace' '2' '3' '4' '5' '6' '7' '8' '9' '10' 'jack' 'queen' 'king') indexOf: self number</body></methods><methods><class-id>Card class</class-id> <category>resources</category><body package="SpiderSolitaire">emptySpot	^OpaqueImage figure: self emptyImage shape: self emptyMask</body></methods><methods><class-id>Card class</class-id> <category>creation</category><body package="SpiderSolitaire">backImage	^self cardImageNamed: 'back'</body><body package="SpiderSolitaire">cardImageNamed: aString	^self images at: aString ifAbsentPut: [		CachedImage on: (self perform: aString asSymbol)]</body><body package="SpiderSolitaire">emptySpotImage	^self emptySpot</body><body package="SpiderSolitaire">images	images isNil ifTrue: [images := Dictionary new].	^images</body><body package="SpiderSolitaire">readCard: cardName suit: suitName	^(self new)		frontImage: (self cardImageNamed: suitName, '_', cardName);		backImage: self backImage;		number: cardName;		suit: suitName asSymbol;		yourself</body><body package="SpiderSolitaire">readCardNamed: aString 	^(self new)		frontImage: (self cardImageNamed: aString);		backImage: self backImage;		number: (aString copyFrom: 2 to: aString size) asSymbol;		suit: (#(#spades #clubs #diamonds #hearts) at: (#($s $c $d $h) indexOf: aString first));		yourself</body></methods><methods><class-id>Card class</class-id> <category>instance creation</category><body package="SpiderSolitaire">new	"Answer a newly created and initialized instance."	^super new initialize</body></methods><methods><class-id>CardStack</class-id> <category>accessing</category><body package="SpiderSolitaire">bounds	| bounds |	bounds := nil.	self		cardsAndPositionsDo: [:card :cardPosition | 			bounds isNil				ifTrue: [bounds := card bounds translatedBy: cardPosition]				ifFalse: [bounds := bounds merge: (card bounds translatedBy: cardPosition)]]		ifNone: [^self emptySpotImage bounds translatedBy: position].	^bounds</body><body package="SpiderSolitaire">cards	^cards</body><body package="SpiderSolitaire">faceDownOffset	^faceDownOffset</body><body package="SpiderSolitaire">faceDownOffset: anObject	faceDownOffset := anObject</body><body package="SpiderSolitaire">faceUpOffset	^faceUpOffset</body><body package="SpiderSolitaire">faceUpOffset: anObject	faceUpOffset := anObject.	displayedFaceUpOffset := anObject</body><body package="SpiderSolitaire">first	^cards first</body><body package="SpiderSolitaire">last	^cards last</body><body package="SpiderSolitaire">maxCardPosition	^maxCardPosition</body><body package="SpiderSolitaire">maxCardPosition: anObject	maxCardPosition := anObject</body><body package="SpiderSolitaire">name	^name</body><body package="SpiderSolitaire">name: anObject	name := anObject</body><body package="SpiderSolitaire">position	^position</body><body package="SpiderSolitaire">position: anObject	position := anObject</body><body package="SpiderSolitaire">size	^cards size</body><body package="SpiderSolitaire">width	^self emptySpotImage width</body></methods><methods><class-id>CardStack</class-id> <category>testing</category><body package="SpiderSolitaire">areAllCardsFaceUp	^cards allSatisfy: [:each | each isFaceUp]</body><body package="SpiderSolitaire">isAllOneSuit	^(cards collect: [:each | each suit]) asSet size = 1</body><body package="SpiderSolitaire">isDescendingSequence	^(#('king' 'queen' 'jack' '10' '9' '8' '7' '6' '5' '4' '3' '2' 'ace') indexOfSubCollection: (cards collect: [:each | each number]) startingAt: 1) ~= 0</body><body package="SpiderSolitaire">isEmpty	^cards isEmpty</body></methods><methods><class-id>CardStack</class-id> <category>displaying</category><body package="SpiderSolitaire">bottomCardPosition	| result |	self cardsAndPositionsDo: [:card :cardPosition | result := cardPosition] ifNone: [result := position].	^result</body><body package="SpiderSolitaire">cardsAndPositionsDo: aBlock ifNone: noneBlock	| currentPosition |	currentPosition := position.	cards size = 0 ifTrue: [		^noneBlock value].	cards do: [:card |		aBlock value: card value: currentPosition.		card isFaceDown			ifTrue: [currentPosition := currentPosition + faceDownOffset]			ifFalse: [currentPosition := currentPosition + displayedFaceUpOffset]]</body><body package="SpiderSolitaire">displayOn: aGraphicsContext	self		cardsAndPositionsDo: [:card :cardPosition |card displayOn: aGraphicsContext at: cardPosition]		ifNone: [self emptySpotImage displayOn: aGraphicsContext at: position]</body><body package="SpiderSolitaire">emptySpotImage	^self class emptySpotImage</body></methods><methods><class-id>CardStack</class-id> <category>adding and removing</category><body package="SpiderSolitaire">addCard: aCard 	cards add: aCard.	self makeStackFit</body><body package="SpiderSolitaire">addStack: aCardStack	aCardStack cards do: [:each | self addCard: each]</body><body package="SpiderSolitaire">cardAtPoint: aPoint	| lastCard |	lastCard := nil.	self		cardsAndPositionsDo: [:card :cardPosition | 			((card bounds translatedBy: cardPosition) containsPoint: aPoint)				ifTrue: [lastCard := card]]		ifNone: [^nil].	^lastCard</body><body package="SpiderSolitaire">extractStackAfter: aCard 	| newStack |	newStack := self stackStartingAt: aCard.	cards := self stackBefore: aCard.	self increaseFaceUpOffset.	^newStack</body><body package="SpiderSolitaire">increaseFaceUpOffset	[true] whileTrue: [		displayedFaceUpOffset y &gt;= faceUpOffset y ifTrue: [^self].		displayedFaceUpOffset := displayedFaceUpOffset + (0@1).		(self positionOfCard: self last) y &gt; maxCardPosition ifTrue: [			displayedFaceUpOffset := displayedFaceUpOffset - (0@1).			^self]]</body><body package="SpiderSolitaire">positionOfCard: aCard	self		cardsAndPositionsDo: [:card :cardPosition | 			card == aCard ifTrue: [^cardPosition]]		ifNone: [^nil]</body><body package="SpiderSolitaire">removeLast	| card |	card := cards removeLast.	self increaseFaceUpOffset.	^card</body><body package="SpiderSolitaire">splitAtPoint: aPoint	^self extractStackAfter: (self cardAtPoint: aPoint)</body><body package="SpiderSolitaire">stackBefore: aCard 	^cards copyFrom: 1 to: (cards indexOf: aCard) - 1</body><body package="SpiderSolitaire">stackStartingAt: aCard 	| newStack |	cards isEmpty ifTrue: [^CardStack new].	newStack := self class new.	(cards copyFrom: (cards indexOf: aCard) to: cards size) 		do: [:card | newStack addCard: card].	newStack		position: (self positionOfCard: aCard);		faceDownOffset: faceDownOffset;		faceUpOffset: displayedFaceUpOffset.	^newStack</body></methods><methods><class-id>CardStack</class-id> <category>operations</category><body package="SpiderSolitaire">flipBottomCardUp	cards isEmpty ifTrue: [^self].	cards last isFaceDown ifTrue: [cards last beFaceUp]</body><body package="SpiderSolitaire">hasCompleteSequence	| trialStack |	self size &lt; 13 ifTrue: [^false].	trialStack := self stackStartingAt: (cards at: self size - 12).	trialStack areAllCardsFaceUp ifFalse: [^false].	trialStack isDescendingSequence ifFalse: [^false].	trialStack isAllOneSuit ifFalse: [^false].	^true</body><body package="SpiderSolitaire">longestStackMatching: aBlock	| longestStack card stack |	longestStack := nil.	cards size to: 1 by: -1 do: [:cardIndex |		card := cards at: cardIndex.		card isFaceDown ifTrue: [^longestStack].		stack := self stackStartingAt: card.		(aBlock value: stack) ifTrue: [longestStack := stack]].	^longestStack</body><body package="SpiderSolitaire">makeStackFit	[(self positionOfCard: cards last) y &gt; maxCardPosition] whileTrue: 			[displayedFaceUpOffset y &lt;= 1 ifTrue: [^self].			displayedFaceUpOffset := displayedFaceUpOffset - (0 @ 1)]</body><body package="SpiderSolitaire">removeCompleteSequence	| trialStack |	self size &lt; 13 ifTrue: [^self].	trialStack := self stackStartingAt: (cards at: self size - 12).	trialStack areAllCardsFaceUp ifFalse: [^self].	trialStack isDescendingSequence ifFalse: [^self].	trialStack isAllOneSuit ifFalse: [^self].	self extractStackAfter: trialStack first</body></methods><methods><class-id>CardStack</class-id> <category>printing</category><body package="SpiderSolitaire">printOn: aStream	self cards do: [:each | each printOn: aStream]</body></methods><methods><class-id>CardStack</class-id> <category>initialize-release</category><body package="SpiderSolitaire">initialize	cards := OrderedCollection new.	position := 0@0.	faceDownOffset := 0@0.	faceUpOffset := 0@0.	displayedFaceUpOffset := 0@0.	maxCardPosition := 500 - Card back height - 10</body></methods><methods><class-id>CardStack class</class-id> <category>instance creation</category><body package="SpiderSolitaire">new	^super new initialize</body></methods><methods><class-id>CardStack class</class-id> <category>images</category><body package="SpiderSolitaire">emptySpotImage	^Card emptySpotImage</body></methods><methods><class-id>CardView</class-id> <category>controlling</category><body package="SpiderSolitaire">defaultControllerClass	^CardController</body></methods><methods><class-id>CardView</class-id> <category>displaying</category><body package="SpiderSolitaire">colorFor: position within: total 	| fraction |	fraction := position asFloat / total.	fraction &lt; gradientStart ifTrue: [^startColor].	fraction &gt; gradientEnd ifTrue: [^endColor].	^startColor		blendWith: endColor		weight: (fraction - gradientStart) / (gradientEnd - gradientStart)</body><body package="SpiderSolitaire">displayHorizontalGradientOn: aGraphicsContext 	| clip |	clip := aGraphicsContext clippingBounds.	clip origin x to: clip corner x		do: 			[:x | 			| bounds |			bounds := self bounds.			aGraphicsContext				paint: (self colorFor: x - bounds origin x within: bounds extent x);				displayLineFrom: x @ clip origin y to: x @ clip corner y]</body><body package="SpiderSolitaire">displayOn: aGraphicsContext	self displayVerticalGradientOn: aGraphicsContext.	model displayOn: aGraphicsContext</body><body package="SpiderSolitaire">displayVerticalGradientOn: aGraphicsContext 	| clip bounds |	clip := aGraphicsContext clippingBounds.	bounds := self bounds.	clip origin y to: clip corner y		do: 			[:y | 			aGraphicsContext				paint: (self colorFor: y - bounds origin y within: bounds extent y);				displayLineFrom: clip origin x @ y to: clip corner x @ y]</body></methods><methods><class-id>CardView</class-id> <category>initialize-release</category><body package="SpiderSolitaire">initialize	super initialize.	startColor := ColorValue red: 0.0 green: 1.0 blue: 0.0.	endColor := ColorValue red: 0.0 green: 0.5 blue: 0.0.	gradientStart := 0.0.	gradientEnd := 1.0</body></methods><methods><class-id>CardController</class-id> <category>events</category><body package="SpiderSolitaire">mouseMovedTo: aPoint	self model moveStackTo: aPoint.	self view invalidate</body><body package="SpiderSolitaire">redButtonPressedEvent: event	(self model isCardDeckAt: event point) ifTrue: [^self view topComponent model deal].	(self model isLegalSplitAt: event point)		ifTrue: [			self model startMoveAt: event point.			super redButtonPressedEvent: event].</body><body package="SpiderSolitaire">selectUpAt: aPoint	self model dropStackAt: aPoint.	self view invalidate</body></methods><methods><class-id>CardController</class-id> <category>tracker</category><body package="SpiderSolitaire">selectionTracker	^SelectTracker on: self</body></methods><methods><class-id>CardGame</class-id> <category>stack operations</category><body package="SpiderSolitaire">addStack: aStack	stacks add: aStack</body><body package="SpiderSolitaire">dropStackOn: targetStack 	targetStack addStack: stackBeingMoved.</body><body package="SpiderSolitaire">findStackAt: aPoint	^stacks detect: [:each | each bounds containsPoint: aPoint] ifNone: [nil]</body><body package="SpiderSolitaire">removeStack: aStack	stacks remove: aStack</body><body package="SpiderSolitaire">splitStackAt: aPoint	(self isLegalSplitAt: aPoint)		ifTrue: [^(self findStackAt: aPoint) splitAtPoint: aPoint].	^nil</body><body package="SpiderSolitaire">targetStackAt: aPoint	| targetStack |	targetStack := self findStackAt: aPoint.	(targetStack isNil 		or: [(self canDrop: stackBeingMoved on: targetStack) not]) 			ifTrue: [^nil].	^targetStack</body></methods><methods><class-id>CardGame</class-id> <category>shuffling</category><body package="SpiderSolitaire">shuffle: aCollectionOfCards 	| newCollection random remainingCards |	newCollection := OrderedCollection new: aCollectionOfCards size.	remainingCards := aCollectionOfCards asOrderedCollection.	random := Random new.	[remainingCards isEmpty] whileFalse: 			[| index |			index := (random next * remainingCards size) truncated + 1.			newCollection add: (remainingCards at: index).			remainingCards removeIndex: index].	^newCollection</body></methods><methods><class-id>CardGame</class-id> <category>displaying</category><body package="SpiderSolitaire">displayOn: aGraphicsContext	stacks do: [:each | each displayOn: aGraphicsContext]</body></methods><methods><class-id>CardGame</class-id> <category>testing</category><body package="SpiderSolitaire">canDrop: aStack on: anotherStack	self subclassResponsibility</body><body package="SpiderSolitaire">hasStacks	^stacks notEmpty</body><body package="SpiderSolitaire">isLegalSplitAt: aPoint	self subclassResponsibility</body></methods><methods><class-id>CardGame</class-id> <category>initialize-release</category><body package="SpiderSolitaire">clearHints	hintsGiven := OrderedCollection new</body><body package="SpiderSolitaire">initialize	stacks := OrderedCollection new.	self clearHints</body></methods><methods><class-id>CardGame</class-id> <category>decks</category><body package="SpiderSolitaire">cardNames	^#('ace' '2' '3' '4' '5' '6' '7' '8' '9' '10' 'jack' 'queen' 'king')</body><body package="SpiderSolitaire">clubsSuit	^self suitNamed: 'clubs'</body><body package="SpiderSolitaire">diamondsSuit	^self suitNamed: 'diamonds'</body><body package="SpiderSolitaire">heartsSuit	^self suitNamed: 'hearts'</body><body package="SpiderSolitaire">spadesSuit	^self suitNamed: 'spades'</body><body package="SpiderSolitaire">suitNamed: aString 	^self cardNames 		collect: [:cardName | Card readCard: cardName suit: aString]</body></methods><methods><class-id>CardGame</class-id> <category>controller callbacks</category><body package="SpiderSolitaire">dropStackAt: aPoint 	| targetStack |	self removeStack: stackBeingMoved.	targetStack := self targetStackAt: aPoint.	targetStack isNil 		ifTrue: [^sourceStack addStack: stackBeingMoved].	self dropStackOn: targetStack.	self clearHints</body><body package="SpiderSolitaire">moveStackTo: aPoint	stackBeingMoved position: aPoint - grabOffset</body><body package="SpiderSolitaire">startMoveAt: aPoint 	(self isLegalSplitAt: aPoint) ifFalse: [^self].	sourceStack := self findStackAt: aPoint.	stackBeingMoved := self splitStackAt: aPoint.	self captureGrabOffset: aPoint.	self addStack: stackBeingMoved</body></methods><methods><class-id>CardGame</class-id> <category>dealing</category><body package="SpiderSolitaire">animate: aCard from: oldPosition to: position 	| stack |	stack := CardStack new		position: 0@0;		maxCardPosition: 2000;		addCard: aCard.	stack position: oldPosition.	self addStack: stack.	self 		animateStack: stack		from: oldPosition		to: position		speed: 8.	self removeStack: stack</body><body package="SpiderSolitaire">animateStack: stack from: oldPosition to: position speed: aNumber	1 to: aNumber		do: 			[:i | 			| oldBounds |			oldBounds := stack bounds.			stack position: (position * i + (oldPosition * (aNumber - i))) / aNumber.			[self changed: #refresh with: (stack bounds merge: oldBounds)] fork.			(Delay forMilliseconds: 2) wait].</body></methods><methods><class-id>CardGame</class-id> <category>hints</category><body package="SpiderSolitaire">addHint: hint 	hintsGiven add: hint</body><body package="SpiderSolitaire">giveHint	| possibleMoves hint |	possibleMoves := self possibleMoves.	possibleMoves isEmpty ifTrue: [^nil].	possibleMoves removeAllSuchThat: 			[:each | 			hintsGiven contains: 					[:each2 | 					each fromStack name = each2 fromStack name 						and: [each toStack name = each2 toStack name]]].	possibleMoves isEmpty 		ifTrue: 			[possibleMoves := self possibleMoves.			hintsGiven := OrderedCollection new].	hint := (possibleMoves asSortedCollection: [:x :y | x score &gt; y score]) 				first.	self addHint: hint.	^hint</body><body package="SpiderSolitaire">possibleMoves	self subclassResponsibility</body></methods><methods><class-id>CardGame</class-id> <category>moving</category><body package="SpiderSolitaire">captureGrabOffset: aPoint 	grabOffset := aPoint - stackBeingMoved bounds origin</body></methods><methods><class-id>SpiderSolitaireGame</class-id> <category>columns</category><body package="SpiderSolitaire">column: columnNumber 	^self stackNamed: 'column' , columnNumber printString</body><body package="SpiderSolitaire">columnsDo: aBlock 	1 to: 10 do: [:columnNumber | aBlock value: (self column: columnNumber)]</body></methods><methods><class-id>SpiderSolitaireGame</class-id> <category>testing</category><body package="SpiderSolitaire">canDrop: aStack on: targetStack	targetStack size = 0 ifTrue: [^true].	^((targetStack stackStartingAt: targetStack last) addStack: aStack) isDescendingSequence</body><body package="SpiderSolitaire">checkForWin	self hasWon ifTrue: [Dialog warn: 'You won!!']</body><body package="SpiderSolitaire">hasEmptyColumns	self columnsDo: [:column | column size = 0 ifTrue: [^true]].	^false</body><body package="SpiderSolitaire">hasWon	self columnsDo: [:column | column size ~= 0 ifTrue: [^false]].	^true</body><body package="SpiderSolitaire">isCardDeckAt: aPoint	| stackToSplit |	stackToSplit := self findStackAt: aPoint.	stackToSplit isNil ifTrue: [^false].	^'undealt*' match: stackToSplit name</body><body package="SpiderSolitaire">isLegalSplit: stackToSplit at: aPoint	| trialSplit |	('column*' match: stackToSplit name) ifFalse: [^false].	trialSplit := stackToSplit stackStartingAt: (stackToSplit cardAtPoint: aPoint).	trialSplit isEmpty ifTrue: [^false].	trialSplit areAllCardsFaceUp ifFalse: [^false].	trialSplit isDescendingSequence ifFalse: [^false].	trialSplit isAllOneSuit ifFalse: [^false].	^true</body><body package="SpiderSolitaire">isLegalSplitAt: aPoint	| stackToSplit |	stackToSplit := self findStackAt: aPoint.	stackToSplit isNil ifTrue: [^false].	^self isLegalSplit: stackToSplit at: aPoint</body></methods><methods><class-id>SpiderSolitaireGame</class-id> <category>stack operations</category><body package="SpiderSolitaire">dropStackOn: targetStack 	super dropStackOn: targetStack.	targetStack hasCompleteSequence		ifTrue: [self removeCompleteSequenceFrom: targetStack].	self flipBottomCardsUp.	self checkForWin</body><body package="SpiderSolitaire">flipBottomCardsUp	self columnsDo: [:column | column flipBottomCardUp]</body><body package="SpiderSolitaire">removeCompleteSequenceFrom: targetStack	| completedStack |	completedStack := self addCompletedStack.	13 timesRepeat: [		| oldPosition card |		oldPosition := targetStack bottomCardPosition.		card := targetStack removeLast.		self animate: card from: oldPosition to: completedStack position.		completedStack addCard: card]</body><body package="SpiderSolitaire">stackNamed: aString	^stacks detect: [:each | each name = aString] ifNone: [nil]</body></methods><methods><class-id>SpiderSolitaireGame</class-id> <category>decks</category><body package="SpiderSolitaire">addColumnNumber: stackNumber 	| stack |	stack := CardStack new.	stack		name: 'column' , stackNumber printString;		position: (40 + ((stackNumber - 1) * 80)) @ 40;		faceUpOffset: 0 @ 25;		faceDownOffset: 0 @ 8.	self addStack: stack.	^stack</body><body package="SpiderSolitaire">addCompletedStack	| stack completedStacks |	completedStacks := stacks select: [:each | 'completed*' match: each name].	stack := CardStack new		maxCardPosition: 2000.	stack		name: 'completed' , (completedStacks size+ 1) printString;		position: (50 + ((completedStacks size) * 10)) @ 500;		faceUpOffset: 0 @ 0;		faceDownOffset: 0 @ 0.	self addStack: stack.	^stack</body><body package="SpiderSolitaire">addUndealtStackNumber: stackNumber 	| stack |	stack := CardStack new		maxCardPosition: 2000.	stack		name: 'undealt' , stackNumber printString;		position: (700 + ((stackNumber - 1) * 10)) @ 500;		faceUpOffset: 0 @ 0;		faceDownOffset: 0 @ 0.	self addStack: stack.	^stack</body><body package="SpiderSolitaire">dealFourSuits	| stream |	stream := WriteStream on: (Array new: 200).	2 timesRepeat: [stream nextPutAll: self spadesSuit].	2 timesRepeat: [stream nextPutAll: self heartsSuit].	2 timesRepeat: [stream nextPutAll: self clubsSuit].	2 timesRepeat: [stream nextPutAll: self diamondsSuit].	^self deck: stream contents</body><body package="SpiderSolitaire">dealInto: stack from: shuffledDeck 	^stack addCard: shuffledDeck removeLast beFaceDown</body><body package="SpiderSolitaire">dealOneSuit	| stream |	stream := WriteStream on: (Array new: 200).	8 timesRepeat: [stream nextPutAll: self spadesSuit].	^self deck: stream contents</body><body package="SpiderSolitaire">dealTwoSuits	| stream |	stream := WriteStream on: (Array new: 200).	4 timesRepeat: [stream nextPutAll: self spadesSuit].	4 timesRepeat: [stream nextPutAll: self heartsSuit].	^self deck: stream contents</body><body package="SpiderSolitaire">deck: aCollectionOfCards 	| shuffledDeck stack |	stacks := OrderedCollection new.	shuffledDeck := self shuffle: aCollectionOfCards.	1 to: 4 do: [:stackNumber | 		stack := self addColumnNumber: stackNumber.		5 timesRepeat: [self dealInto: stack from: shuffledDeck]].	5 to: 10 do: [:stackNumber | 		stack := self addColumnNumber: stackNumber.		4 timesRepeat: [self dealInto: stack from: shuffledDeck]].	6 to: 1 by: -1 do: [:stackNumber | 		stack := self addUndealtStackNumber: stackNumber.		10 timesRepeat: [self dealInto: stack from: shuffledDeck]].	self deal</body></methods><methods><class-id>SpiderSolitaireGame</class-id> <category>undealt stacks</category><body package="SpiderSolitaire">nextUndealtStackDo: aBlock ifNone: noneBlock	self undealtStacksDo: [:stack | ^aBlock value: stack].	^noneBlock value</body><body package="SpiderSolitaire">undealtStacksDo: aBlock	1 to: 6		do: 			[:stackNumber | 			| stack |			stack := self stackNamed: 'undealt' , stackNumber printString.			stack notNil ifTrue: [aBlock value: stack]].</body></methods><methods><class-id>SpiderSolitaireGame</class-id> <category>dealing</category><body package="SpiderSolitaire">deal	self hasEmptyColumns 		ifTrue: [^Dialog warn: 'Can''t deal with empty columns'].	self nextUndealtStackDo: [:stack | self dealToColumn: stack.		stack hasCompleteSequence			ifTrue: [self removeCompleteSequenceFrom: stack]]		ifNone: [Dialog warn: 'No stacks left'].	self flipBottomCardsUp.	self clearHints</body><body package="SpiderSolitaire">dealToColumn: stack 	self columnsDo: [:column |		self animate: stack last beFaceUp from: stack position to: column bottomCardPosition.		column addCard: stack removeLast].	^self removeStack: stack</body></methods><methods><class-id>SpiderSolitaireGame</class-id> <category>hints</category><body package="SpiderSolitaire">hintToMoveFrom: fromColumn to: toColumn	| moveableStack |	moveableStack := fromColumn longestStackMatching: [:stack | stack isDescendingSequence and: [stack isAllOneSuit]].	moveableStack isNil ifTrue: [^nil].	(self canDrop: moveableStack on: toColumn)		ifFalse: [^nil].	^Hint new		fromStack: fromColumn;		fromCard: moveableStack first;		toStack: toColumn;		yourself</body><body package="SpiderSolitaire">possibleMoves	| moves |	moves := OrderedCollection new.	self columnsDo: 			[:fromColumn | 			self columnsDo: 					[:toColumn | 					fromColumn == toColumn 						ifFalse: 							[| hint |							hint := self hintToMoveFrom: fromColumn to: toColumn.							hint notNil ifTrue: [moves add: hint]]]].	^moves</body></methods><methods><class-id>SpiderSolitaireGame class</class-id> <category>instance creation</category><body package="SpiderSolitaire">new	^super new initialize</body></methods><methods><class-id>Hint</class-id> <category>accessing</category><body package="SpiderSolitaire">fromCard	^fromCard</body><body package="SpiderSolitaire">fromCard: anObject	fromCard := anObject</body><body package="SpiderSolitaire">fromStack	^fromStack</body><body package="SpiderSolitaire">fromStack: anObject	fromStack := anObject</body><body package="SpiderSolitaire">toCard	^toCard</body><body package="SpiderSolitaire">toCard: anObject	toCard := anObject</body><body package="SpiderSolitaire">toStack	^toStack</body><body package="SpiderSolitaire">toStack: anObject	toStack := anObject</body></methods><methods><class-id>Hint</class-id> <category>showing</category><body package="SpiderSolitaire">showOn: aGame	| stack toPosition |	stack := fromStack stackStartingAt: fromCard.	aGame addStack: stack.	toStack isEmpty		ifTrue: [toPosition := toStack position]		ifFalse: [toPosition := (toStack positionOfCard: toStack last)  + (0@20)].	aGame		animateStack: stack		from: (fromStack positionOfCard: fromCard)		to: toPosition		speed: 50.	aGame removeStack: stack.	(Delay forMilliseconds: 250) wait.</body></methods><methods><class-id>Hint</class-id> <category>scoring</category><body package="SpiderSolitaire">score	| score |	score := 0.	(toStack isEmpty not and: [fromCard suit = toStack last suit])		ifTrue: [score := score + 100].	^score + fromCard value</body></methods><methods><class-id>SpiderSolitaireUI class</class-id> <category>interface specs</category><body package="SpiderSolitaire">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Spider Solitaire' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 1024 768 ) 			#bounds: #(#{Graphics.Rectangle} 454 247 1354 900 ) 			#colors: 			#(#{UI.LookPreferences} 				#setBackgroundColor: #(#{Graphics.ColorValue} 0 4423 0 ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ArbitraryComponentSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 0 0 0 1 0 1 ) 					#name: #cardView 					#flags: 0 					#component: #cardView ) 				#(#{UI.ActionButtonSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication true ) 					#layout: #(#{Graphics.LayoutFrame} 341 0 -40 1 358 0 -13 1 ) 					#name: #newOneSuit 					#flags: 0 					#model: #newOneSuit 					#helpText: 'New game with one suit' 					#label: #oneSuit 					#hasCharacterOrientedLabel: false 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication true ) 					#layout: #(#{Graphics.LayoutFrame} 387 0 -38 1 426 0 -15 1 ) 					#name: #newTwoSuits 					#flags: 0 					#model: #newTwoSuits 					#helpText: 'New game with two suits' 					#label: #twoSuit 					#hasCharacterOrientedLabel: false 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication true ) 					#layout: #(#{Graphics.LayoutFrame} 439 0 -40 1 510 0 -18 1 ) 					#name: #newFourSuits 					#flags: 0 					#model: #newFourSuits 					#helpText: 'New game with four suits' 					#label: #fourSuit 					#hasCharacterOrientedLabel: false 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication true ) 					#layout: #(#{Graphics.LayoutFrame} 733 0 -40 1 760 0 -18 1 ) 					#name: #hint 					#flags: 0 					#model: #hint 					#helpText: 'Hint' 					#label: #hintImage 					#hasCharacterOrientedLabel: false 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 679 0 -57 1 ) 					#name: #Label1 					#label: 'Click deck to deal more cards' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 348 0 -61 1 ) 					#name: #Label2 					#label: 'Click below to start a new game' ) ) ) )</body></methods><methods><class-id>SpiderSolitaireUI class</class-id> <category>resources</category><body package="SpiderSolitaire">fourSuitImage	"Tools.UIMaskEditor new openOnClass: self andSelector: #fourSuitImage"	&lt;resource: #image&gt;	^(Image extent: 66@17 depth: 2 bitsPerPixel: 2 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: '**********************@@@@B**(***)U*UZ** J****Z*(@@@@J**@***UU%UZ*(@J***%Z* @@@@** @**%UVUUZ*@@J**)UZ*@@@@B*(@@**UUUUU*(@@***UUZ(@@@@J*@@@*)UUUUV* @B**%UUZ @@@@* @@@*%UUUUZ* @***UUU*@@@@B(@@@@*UUUUU*@ HB*%UUU(@@@@J @@@B*UUUUZ @@@B)UUUU @@@@(@@@@B)UUUU(@@@@B)UUUZ@@@@B @@@@J)UUUZ @@@@J)UUV(@@@@J@@@@@*)UUV*@@@@@*%UUZ @@@@(@BH@B*)UU**@BH@J*%UV*@@@@B(@((@**)UZ**@((B**%U*(@@@@J**@****)V****@****%Z* @@@@** @****)**** @****&amp;**@@@@B*********************(@@@@@@a'))</body><body package="SpiderSolitaire">fourSuitMask	"Tools.UIMaskEditor new openOnClass: self andSelector: #fourSuitMask"	&lt;resource: #image&gt;	^(Image extent: 66@17 depth: 1 bitsPerPixel: 1 palette: CoveragePalette monoMaskPalette usingBits: (ByteArray fromPackedString: '@@@@@@@@@@@@@@@@@D@G#0A0@B@@@@@@@N@O78C8@G@@@@@@@_@_7&lt;G&lt;@O @@@@@@? _?&lt;G&lt;@_0@@@@@A?0_?&lt;G&lt;@?8@@@@@C?8_?&lt;C8@?8@@@@@G?&lt;_?&lt;]7A?&lt;@@@@@G?&lt;O?8??#?&gt;@@@@@O?&gt;O?9??1?&lt;@@@@@O?&gt;G?1??0?8@@@@@O?&gt;C?!??0?8@@@@@O5&gt;A?@&gt;/ _0@@@@@G$&lt;@&gt;@\''@O @@@@@@N@@\@A0@G@@@@@@@_@@H@C8@B@@@@@@@@@@@@@@@@@@@@@@'))</body><body package="SpiderSolitaire">heartImage	"Tools.UIMaskEditor new openOnClass: self andSelector: #heartImage"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 15@15 depth: 1 bitsPerPixel: 1 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 0)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: #[60 120 0 0 126 252 0 0 254 254 0 0 255 254 0 0 255 254 0 0 255 254 0 0 255 254 0 0 127 252 0 0 127 252 0 0 63 248 0 0 31 240 0 0 15 224 0 0 7 192 0 0 3 128 0 0 1 0 0 0])</body><body package="SpiderSolitaire">oneSuitImage	"Tools.UIMaskEditor new openOnClass: self andSelector: #oneSuitImage"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 15@14 depth: 2 bitsPerPixel: 2 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: #[106 160 42 168 170 128 10 168 170 0 2 168 168 0 0 168 160 0 0 40 128 0 0 8 128 0 0 8 0 0 0 0 0 0 0 0 0 0 0 0 0 8 128 0 128 40 160 8 170 160 42 168 170 128 10 168])</body><body package="SpiderSolitaire">oneSuitMask	"Tools.UIMaskEditor new openOnClass: self andSelector: #oneSuitMask"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 15@14 depth: 1 bitsPerPixel: 1 palette: CoveragePalette monoMaskPalette usingBits: #[3 128 0 0 7 192 0 0 15 224 0 0 31 240 0 0 63 248 0 0 127 252 0 0 127 252 0 0 255 254 0 0 255 254 0 0 255 254 0 0 253 126 0 0 121 60 0 0 3 128 0 0 7 192 0 0])</body><body package="SpiderSolitaire">twoSuitImage	"Tools.UIMaskEditor new openOnClass: self andSelector: #twoSuitImage"	&lt;resource: #image&gt;	^(Image extent: 35@17 depth: 2 bitsPerPixel: 2 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: '***********(@@@@***J***UZ%V(@@@@**(B**)UVUU(@@@@** @**%UVUUX@@@@**@@J*%UUUUX@@@@*(@@B*%UUUUX@@@@* @@@*%UUUUX@@@@*@@@@J%UUUUX@@@@*@@@@J)UUUU(@@@@(@@@@B)UUUU(@@@@(@@@@B*UUUV(@@@@(@@@@B*%UUZ(@@@@(@BH@B*)UU*(@@@@*@JJ@J**UV*(@@@@**(B****%Z*(@@@@** @****)**(@@@@***********(@@@@'))</body><body package="SpiderSolitaire">twoSuitMask	"Tools.UIMaskEditor new openOnClass: self andSelector: #twoSuitMask"	&lt;resource: #image&gt;	^(Image extent: 35@17 depth: 1 bitsPerPixel: 1 palette: CoveragePalette monoMaskPalette usingBits: #[0 0 0 0 0 0 0 0 0 64 7 143 0 0 0 0 0 224 15 223 128 0 0 0 1 240 31 223 192 0 0 0 3 248 31 255 192 0 0 0 7 252 31 255 192 0 0 0 15 254 31 255 192 0 0 0 31 255 31 255 192 0 0 0 31 255 15 255 128 0 0 0 63 255 143 255 128 0 0 0 63 255 135 255 0 0 0 0 63 255 131 254 0 0 0 0 63 95 129 252 0 0 0 0 30 79 0 248 0 0 0 0 0 224 0 112 0 0 0 0 1 240 0 32 0 0 0 0 0 0 0 0 0 0 0 0])</body></methods><methods><class-id>Card class</class-id> <category>resources</category><body package="SpiderSolitaire">back	"Tools.UIMaskEditor new openOnClass: self andSelector: #back"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 3 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 4111)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'D@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@PABH"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"P@@"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H@@"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H@@"H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L"H@@"H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L"H@@"H3H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H3L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H3L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H3L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H3L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H3L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H3L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H3L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H3L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H3L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H3L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H3L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H3L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H3L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H3L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H3L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H3L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H3L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H3L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H3L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H3L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L"L2H3H#L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L#L"H@@"H3H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H#L"H@@"H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L"H@@"H3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L"H@@"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H@@"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H@ABH"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"H"P@D@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@P'))</body><body package="SpiderSolitaire">clubs_10	"Tools.UIMaskEditor new openOnClass: self andSelector: #clubs_10"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 2 bitsPerPixel: 2 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedStringbody><body package="SpiderSolitaire">clubs_2	"Tools.UIMaskEditor new openOnClass: self andSelector: #clubs_2"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 2 bitsPerPixel: 2 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'P@@@@@@@@@@@@@@@@@@@@@@D@@@:*********************+@@@B**********************(@@@J********************** @@@* @********************@@@B(@@*******************(@@@J *B******************* @@@**(J*******************@@@B**@*******************(@@@J* J******************* @@@*(B********@***********@@@B*@******** @**********(@@@J JB******(@@********** @@@*B(J****** @B**********@@@B(@@*******@@J*********(@@@J @B*******@B********** @@@*********(B@ J*********@@@B*********@@@@J********(@@@J* J***** @@@@J******** @@@*(@J*****@@@@@*********@@@B* @*****(@@@@B********(@@@J*@B*****(@H @********* @@@*B@ *****(B" J*********@@@B @@@******(B**********(@@@J@@@B******@B********** @@@(@@@J******************@@@B(BHB******************(@@@J* J******************* @@@**@********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@********************@**@@@B*******************(B*(@@@J****************** H J @@@******************(@@@J@@@B********** @****** @@@(@@@J********** J******@@@B @@@*********(B" J*****B@ *@@@B*********@BH@J***** @*(@@@J******** @@@@J*****@B* @@@*********@@@@@*****(@J*@@@B********(@@@@B*****(B*(@@@J********(@@@@********* @@@*********(B@ J*********@@@B********** @******* @B(@@@J*********(@@*******@@J @@@********** @B******(J *@@@B**********@@J****** (B(@@@J**********@B********@* @@@***********@******** J*@@@B*******************(B*(@@@J*******************@** @@@*******************(J**@@@B******************* *B(@@@J*******************@@J @@@********************@B*@@@B**********************(@@@J********************** @@@:*********************+@@@D@@@@@@@@@@@@@@@@@@@@@@A@@@'))</body><body package="SpiderSolitaire">clubs_3	"Tools.UIMaskEditor new openOnClass: self andSelector: #clubs_3"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 2 bitsPerPixel: 2 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedStringbody><body package="SpiderSolitaire">clubs_4	"Tools.UIMaskEditor new openOnClass: self andSelector: #clubs_4"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 2 bitsPerPixel: 2 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'P@@@@@@@@@@@@@@@@@@@@@@D@@@:*********************+@@@B**********************(@@@J********************** @@@** ********************@@@B*(B*******************(@@@J*@J******************* @@@* @********************@@@B(BB*******************(@@@J@(J******************* @@@(@@B***@******* J******@@@B @@J** @******(@J*****(@@@J*(J**(@@******@@J***** @@@** *** @B*****(@@******@@@B*(@***@@J***** @B*****(@@@J* B***@B****** @****** @@@*****(B@ J****@ HB*****@@@B*****@@@@J*** @@@B****(@@@J* J* @@@@J**(@@@@B**** @@@*(@J*@@@@@*** @@@@J****@@@B* @*(@@@@B***@@@@@****(@@@J*@B*(@H @****@BH@J**** @@@*B@ *(B" J****@((B*****@@@B @@@**(B*******@******(@@@J@@@B**@B****** @****** @@@(@@@J******************@@@B(BHB******************(@@@J* J******************* @@@**@********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@********************@**@@@B*******************(B*(@@@J****************** H J @@@******************(@@@J@@@B****** @******(@J* @@@(@@@J****** J******(B**@@@B @@@*****(B" J****@((B*B@ *@@@B*****@BH@J*** @"@B* @*(@@@J**** @@@@J**(@@@@B*@B* @@@*****@@@@@*** @@@@J(@J*@@@B****(@@@@B***@@@@@*(B*(@@@J****(@@@@****@@@@J**** @@@*****(B@ J****@ HB*****@@@B****** @******(@J** B*(@@@J*****(@@******@@J**@J* @@@****** @B*****(@@***B**@@@B******@@J***** @B**(J*(@@@J******@B****** @**(@@B @@@*******@******* J** @@J@@@B*******************(J@(@@@J*******************  J @@@********************@B*@@@B*******************(@*(@@@J******************* J* @@@********************B**@@@B**********************(@@@J********************** @@@:*********************+@@@D@@@@@@@@@@@@@@@@@@@@@@A@@@'))</body><body package="SpiderSolitaire">clubs_5	"Tools.UIMaskEditor new openOnClass: self andSelector: #clubs_5"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 2 bitsPerPixel: 2 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'P@@@@@@@@@@@@@@@@@@@@@@D@@@:*********************+@@@B**********************(@@@J********************** @@@*@@J*******************@@@B(@@*******************(@@@J ********************* @@@*B*********************@@@B(@B*******************(@@@J @B******************* @@@**(J***@******* J******@@@B** *** @******(@J*****(@@@J *B**(@@******@@J***** @@@*B(J** @B*****(@@******@@@B(@@***@@J***** @B*****(@@@J(@J***@B****** @****** @@@*****(B@ J****@ HB*****@@@B*****@@@@J*** @@@B****(@@@J* J* @@@@J**(@@@@B**** @@@*(@J*@@@@@*** @@@@J****@@@B* @*(@@@@B***@@@@@****(@@@J*@B*(@H @****@BH@J**** @@@*B@ *(B" J****@((B*****@@@B @@@**(B*******@******(@@@J@@@B**@B****** @****** @@@(@@@J******************@@@B(BHB******************(@@@J* J******************* @@@**@********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B***********@**********(@@@J********** @********** @@@**********(@@**********@@@B********** @B*********(@@@J**********@@J********* @@@***********@B**********@@@B*********(B@ J********(@@@J*********@@@@J******** @@@********* @@@@J********@@@B*********@@@@@********(@@@J********(@@@@B******** @@@*********(@H @*********@@@B*********(B" J********(@@@J**********(B********** @@@***********@B**********@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@********************@**@@@B*******************(B*(@@@J****************** H J @@@******************(@@@J@@@B****** @******(@J* @@@(@@@J****** J******(B**@@@B @@@*****(B" J****@((B*B@ *@@@B*****@BH@J*** @"@B* @*(@@@J**** @@@@J**(@@@@B*@B* @@@*****@@@@@*** @@@@J(@J*@@@B****(@@@@B***@@@@@*(B*(@@@J****(@@@@****@@@@J**** @@@*****(B@ J****@ HB*****@@@B****** @******(@J**(@J(@@@J*****(@@******@@J**@@J @@@****** @B*****(@@**(J *@@@B******@@J***** @B** *B(@@@J******@B****** @***B** @@@*******@******* J**(J**@@@B******************* @B(@@@J******************* @J @@@********************* *@@@B*********************B(@@@J*******************@@J @@@*******************(@@*@@@B**********************(@@@J********************** @@@:*********************+@@@D@@@@@@@@@@@@@@@@@@@@@@A@@@'))</body><body package="SpiderSolitaire">clubs_6	"Tools.UIMaskEditor new openOnClass: self andSelector: #clubs_6"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 2 bitsPerPixel: 2 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'P@@@@@@@@@@@@@@@@@@@@@@D@@@:*********************+@@@B**********************(@@@J********************** @@@*(@********************@@@B*@B*******************(@@@J J******************** @@@*B*********************@@@B(@B*******************(@@@J @B******************* @@@*B(J***@******* J******@@@B(J *** @******(@J*****(@@@J *B**(@@******@@J***** @@@*B(J** @B*****(@@******@@@B(@@***@@J***** @B*****(@@@J(@J***@B****** @****** @@@*****(B@ J****@ HB*****@@@B*****@@@@J*** @@@B****(@@@J* J* @@@@J**(@@@@B**** @@@*(@J*@@@@@*** @@@@J****@@@B* @*(@@@@B***@@@@@****(@@@J*@B*(@H @****@BH@J**** @@@*B@ *(B" J****@((B*****@@@B @@@**(B*******@******(@@@J@@@B**@B****** @****** @@@(@@@J******************@@@B(BHB******************(@@@J* J******************* @@@**@********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B******(B*******@******(@@@J******@B****** @****** @@@****** @B*****(@@******@@@B******@@J***** @B*****(@@@J*****(@@******@@J***** @@@******(@J******@B******@@@B***** HB@****(B@ J****(@@@J****(@@@@****@@@@J**** @@@*****@@@@@*** @@@@J****@@@B****(@@@@B***@@@@@****(@@@J**** @@@@J**(@@@@B**** @@@***** @"@B***(@H @*****@@@B***** JJ@****(B" J****(@@@J****** J******(B****** @@@******(@J******@B******@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@********************@**@@@B*******************(B*(@@@J****************** H J @@@******************(@@@J@@@B****** @******(@J* @@@(@@@J****** J******(B**@@@B @@@*****(B" J****@((B*B@ *@@@B*****@BH@J*** @"@B* @*(@@@J**** @@@@J**(@@@@B*@B* @@@*****@@@@@*** @@@@J(@J*@@@B****(@@@@B***@@@@@*(B*(@@@J****(@@@@****@@@@J**** @@@*****(B@ J****@ HB*****@@@B****** @******(@J**(@J(@@@J*****(@@******@@J**@@J @@@****** @B*****(@@**(J *@@@B******@@J***** @B** *B(@@@J******@B****** @***B(J @@@*******@******* J**(J *@@@B******************* @B(@@@J******************* @J @@@********************* *@@@B********************(B(@@@J******************* @* @@@********************@J*@@@B**********************(@@@J********************** @@@:*********************+@@@D@@@@@@@@@@@@@@@@@@@@@@A@@@'))</body><body package="SpiderSolitaire">clubs_7	"Tools.UIMaskEditor new openOnClass: self andSelector: #clubs_7"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 2 bitsPerPixel: 2 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedStringbody><body package="SpiderSolitaire">clubs_8	"Tools.UIMaskEditor new openOnClass: self andSelector: #clubs_8"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 2 bitsPerPixel: 2 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'P@@@@@@@@@@@@@@@@@@@@@@D@@@:*********************+@@@B**********************(@@@J********************** @@@* @********************@@@B(@@*******************(@@@J *B******************* @@@*B(J*******************@@@B(J *******************(@@@J(@J******************* @@@*@@J**(B******* J******@@@B(J ***@B******(@J*****(@@@J *B** @B******@@J***** @@@*B(J**@@J*****(@@******@@@B(@@**(@@****** @B*****(@@@J(@J**(@J****** @****** @@@***** HB@*****@ HB*****@@@B****(@@@@**** @@@B****(@@@J* J*@@@@@***(@@@@B**** @@@*(@J(@@@@B*** @@@@J****@@@B* @* @@@@J***@@@@@****(@@@J*@B* @"@B****@BH@J**** @@@*B@ * JJ@*****@((B*****@@@B @@@** J*******@******(@@@J@@@B*(@J****** @****** @@@(@@@J******************@@@B(BHB******************(@@@J* J******************* @@@**@********************@@@B**********************(@@@J********************** @@@******(B******* J******@@@B******@B******(@J*****(@@@J***** @B******@@J***** @@@******@@J*****(@@******@@@B*****(@@****** @B*****(@@@J*****(@J****** @****** @@@***** HB@*****@ HB*****@@@B****(@@@@**** @@@B****(@@@J****@@@@@***(@@@@B**** @@@****(@@@@B*** @@@@J****@@@B**** @@@@J***@@@@@****(@@@J**** @"@B****@BH@J**** @@@***** JJ@*****@((B*****@@@B****** J*******@******(@@@J*****(@J****** @****** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B******@B******(@J*****(@@@J******@*******(B****** @@@***** JJ@*****@((B*****@@@B****(@H @**** @"@B****(@@@J****@@@@@***(@@@@B**** @@@****(@@@@B*** @@@@J****@@@B**** @@@@J***@@@@@****(@@@J**** @@@B****@@@@J**** @@@***** HB@*****@ HB*****@@@B******@B******(@J*****(@@@J***** @B******@@J***** @@@******@@J*****(@@******@@@B*****(@@****** @B*****(@@@J*****(@J****** @****** @@@******(B******* J******@@@B**********************(@@@J********************** @@@********************@**@@@B*******************(B*(@@@J****************** H J @@@******************(@@@J@@@B******@B******(@J* @@@(@@@J******@*******(B**@@@B @@@***** JJ@*****@((B*B@ *@@@B****(@H @**** @"@B* @*(@@@J****@@@@@***(@@@@B*@B* @@@****(@@@@B*** @@@@J(@J*@@@B**** @@@@J***@@@@@*(B*(@@@J**** @@@B****@@@@J**** @@@***** HB@*****@ HB*****@@@B******@B******(@J**(@J(@@@J***** @B******@@J**@@J @@@******@@J*****(@@**(J *@@@B*****(@@****** @B** *B(@@@J*****(@J****** @***B(J @@@******(B******* J**(@@*@@@B*******************(@J(@@@J*******************B(J @@@*******************(J *@@@B******************* *B(@@@J*******************@@J @@@********************@B*@@@B**********************(@@@J********************** @@@:*********************+@@@D@@@@@@@@@@@@@@@@@@@@@@A@@@'))</body><body package="SpiderSolitaire">clubs_9	"Tools.UIMaskEditor new openOnClass: self andSelector: #clubs_9"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 2 bitsPerPixel: 2 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'P@@@@@@@@@@@@@@@@@@@@@@D@@@:*********************+@@@B**********************(@@@J********************** @@@* @********************@@@B(@@*******************(@@@J *B******************* @@@*B(J*******************@@@B(J *******************(@@@J *B******************* @@@*@@J**(B******* J******@@@B*@@***@B******(@J*****(@@@J**B** @B******@@J***** @@@** J**@@J*****(@@******@@@B*@B**(@@****** @B*****(@@@J(@***(@J****** @****** @@@***** HB@*****@ HB*****@@@B****(@@@@**** @@@B****(@@@J* J*@@@@@***(@@@@B**** @@@*(@J(@@@@B*** @@@@J****@@@B* @* @@@@J***@@@@@****(@@@J*@B* @"@B****@BH@J**** @@@*B@ * JJ@*****@((B*****@@@B @@@** J*******@******(@@@J@@@B*(@J****** @****** @@@(@@@J******************@@@B(BHB******************(@@@J* J******************* @@@**@********************@@@B**********************(@@@J********************** @@@******(B******* J******@@@B******@B******(@J*****(@@@J***** @B******@@J***** @@@******@@J*****(@@******@@@B*****(@@****** @B*****(@@@J*****(@J****** @****** @@@***** HB@*****@ HB*****@@@B****(@@@@**** @@@B****(@@@J****@@@@@* J(@@@@B**** @@@****(@@@@B(@J @@@@J****@@@B**** @@@@J@@J@@@@@****(@@@J**** @"@B(@@*@BH@J**** @@@***** JJ@* @B*@((B*****@@@B****** J** @***@******(@@@J*****(@J*@ HB* @****** @@@********* @@@B*********@@@B********(@@@@B********(@@@J******** @@@@J******** @@@*********@@@@@*********@@@B******@B*@BH@J(@J*****(@@@J******@**@((B*(B****** @@@***** JJ@**@**@((B*****@@@B****(@H @* @* @"@B****(@@@J****@@@@@***(@@@@B**** @@@****(@@@@B*** @@@@J****@@@B**** @@@@J***@@@@@****(@@@J**** @@@B****@@@@J**** @@@***** HB@*****@ HB*****@@@B******@B******(@J*****(@@@J***** @B******@@J***** @@@******@@J*****(@@******@@@B*****(@@****** @B*****(@@@J*****(@J****** @****** @@@******(B******* J******@@@B**********************(@@@J********************** @@@********************@**@@@B*******************(B*(@@@J****************** H J @@@******************(@@@J@@@B******@B******(@J* @@@(@@@J******@*******(B**@@@B @@@***** JJ@*****@((B*B@ *@@@B****(@H @**** @"@B* @*(@@@J****@@@@@***(@@@@B*@B* @@@****(@@@@B*** @@@@J(@J*@@@B**** @@@@J***@@@@@*(B*(@@@J**** @@@B****@@@@J**** @@@***** HB@*****@ HB*****@@@B******@B******(@J***@J(@@@J***** @B******@@J** @* @@@******@@J*****(@@**(B**@@@B*****(@@****** @B** **(@@@J*****(@J****** @***@@* @@@******(B******* J**(@@*@@@B******************* *B(@@@J*******************B(J @@@*******************(J *@@@B******************* *B(@@@J*******************@@J @@@********************@B*@@@B**********************(@@@J********************** @@@:*********************+@@@D@@@@@@@@@@@@@@@@@@@@@@A@@@'))</body><body package="SpiderSolitaire">clubs_ace	"Tools.UIMaskEditor new openOnClass: self andSelector: #clubs_ace"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 2 bitsPerPixel: 2 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedStringbody><body package="SpiderSolitaire">clubs_jack	"Tools.UIMaskEditor new openOnClass: self andSelector: #clubs_jack"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 3 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 8191 0)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedStringbody><body package="SpiderSolitaire">clubs_king	"Tools.UIMaskEditor new openOnClass: self andSelector: #clubs_king"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 3 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedStringbody><body package="SpiderSolitaire">clubs_queen	"Tools.UIMaskEditor new openOnClass: self andSelector: #clubs_queen"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 3 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedStringbody><body package="SpiderSolitaire">diamonds_10	"Tools.UIMaskEditor new openOnClass: self andSelector: #diamonds_10"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 3 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3DSLQDSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3DSDQDQL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3DSDSLQL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3DSDSLQL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3DSDSLQL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3DSDSLQL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3DSDSLQL3L3L3D3L3L3L3L3L3L3L3L3LSL3L3L3L3L3L3L@@3DSDSLQL3L3L1DSL3L3L3L3L3L3L3L3DQL3L3L3L3L3L3L@@3DSDSLQL3L3LQDQL3L3L3L3L3L3L3L1DQD3L3L3L3L3L3L@@3DSDSLQL3L3DQDQD3L3L3L3L3L3L3LQDQDSL3L3L3L3L3L@@3DSDQDQL3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3DSLQDSL3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3L3L3L3L3LQDQDQDQL3L3L3L3L3L1DQDQDQD3L3L3L3L3L@@3L3L3L3L3DQDQDQDQD3L3L3L3L3LQDQDQDQDSL3L3L3L3L@@3L3D3L3L3LQDQDQDQL3L3L3L3L3L1DQDQDQD3L3L3L3L3L@@3L1DSL3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3LQDQL3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3DQDQD3L3L3DQDQD3L3L3L1L3L3L3LQDQDSL3L3L3L3L3L@@3DQDQD3L3L3LQDQL3L3L3LQD3L3L3L1DQD3L3L3L3L3L3L@@3DQDQD3L3L3L1DSL3L3L3DQDSL3L3L3DQL3L3L3L3L3L3L@@3LQDQL3L3L3L3D3L3L3L1DQDQL3L3L3LSL3L3L3L3L3L3L@@3L1DSL3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3L3L3L@@3L3D3L3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3DQDQDQDSL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L1DQDQDQDQL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3DQDQDQDSL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3D3L3L3LQDQDQD3L3L3LSL3L3L3L3L3L3L@@3L3L3L3L3L3L1DSL3L3LQDQDQD3L3L3DQL3L3L3L3L3L3L@@3L3L3L3L3L3LQDQL3L3L1DQDQL3L3L1DQD3L3L3L3L3L3L@@3L3L3L3L3L3DQDQD3L3L3DQDSL3L3LQDQDSL3L3L3L3L3L@@3L3L3L3L3L1DQDQDSL3L3LQD3L3L3DQDQDQL3L3L3L3L3L@@3L3L3L3L3L1DQDQDSL3L3L1L3L3L3DQDQDQL3L3L3L3L3L@@3L3L3L3L3LQDQDQDQL3L3L3L3L3L1DQDQDQD3L3L3L3L3L@@3L3L3L3L3DQDQDQDQD3L3L3L3L3LQDQDQDQDSL3L3L3L3L@@3L3L3L3L3LQDQDQDQL3L3L3L3L3L1DQDQDQD3L3L3L3L3L@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3L3L3L3L3L3DQDQD3L3L3L3L3L3L3LQDQDSL3L3L3L3L3L@@3L3L3L3L3L3LQDQL3L3L3L3L3L3L3L1DQD3L3L3L3L3L3L@@3L3L3L3L3L3L1DSL3L3L3L3L3L3L3L3DQL3L3L3L3L3L3L@@3L3L3L3L3L3L3D3L3L3L3L3L3L3L3L3LSL3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3D3L3L3L3L3L3L3L3L3LSL3L3L3L3L3L3L@@3L3L3L3L3L3L1DSL3L3L3L3L3L3L3L3DQL3L3L3L3L3L3L@@3L3L3L3L3L3LQDQL3L3L3L3L3L3L3L1DQD3L3L3L3L3L3L@@3L3L3L3L3L3DQDQD3L3L3L3L3L3L3LQDQDSL3L3L3L3L3L@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3L3L3L3L3LQDQDQDQL3L3L3L3L3L1DQDQDQD3L3L3L3L3L@@3L3L3L3L3DQDQDQDQD3L3L3L3L3LQDQDQDQDSL3L3L3L3L@@3L3L3L3L3LQDQDQDQL3L3L3L3L3L1DQDQDQD3L3L3L3L3L@@3L3L3L3L3L1DQDQDSL3L3L1L3L3L3DQDQDQL3L3L3L3L3L@@3L3L3L3L3L1DQDQDSL3L3LQD3L3L3DQDQDQL3L3L3L3L3L@@3L3L3L3L3L3DQDQD3L3L3DQDSL3L3LQDQDSL3L3L3L3L3L@@3L3L3L3L3L3LQDQL3L3L1DQDQL3L3L1DQD3L3L3L3L3L3L@@3L3L3L3L3L3L1DSL3L3LQDQDQD3L3L3DQL3L3L3L3L3L3L@@3L3L3L3L3L3L3D3L3L3LQDQDQD3L3L3LSL3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3DQDQDQDSL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L1DQDQDQDQL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3DQDQDQDSL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3LSL3L@@3L3L3L3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3DQL3L@@3L3L3L3L3L3L3D3L3L3L1DQDQL3L3L3LSL3L3L3L1DQD3L@@3L3L3L3L3L3L1DSL3L3L3DQDSL3L3L3DQL3L3L3LQDQDSL@@3L3L3L3L3L3LQDQL3L3L3LQD3L3L3L1DQD3L3L3LQDQDSL@@3L3L3L3L3L3DQDQD3L3L3L1L3L3L3LQDQDSL3L3LQDQDSL@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L1DQD3L@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3DQL3L@@3L3L3L3L3LQDQDQDQL3L3L3L3L3L1DQDQDQD3L3L3LSL3L@@3L3L3L3L3DQDQDQDQD3L3L3L3L3LQDQDQDQDSL3L3L3L3L@@3L3L3L3L3LQDQDQDQL3L3L3L3L3L1DQDQDQD3L3L3L3L3L@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3DQD3DSL@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L1DQDSDSL@@3L3L3L3L3L3DQDQD3L3L3L3L3L3L3LQDQDSL3L1D3DSDSL@@3L3L3L3L3L3LQDQL3L3L3L3L3L3L3L1DQD3L3L1D3DSDSL@@3L3L3L3L3L3L1DSL3L3L3L3L3L3L3L3DQL3L3L1D3DSDSL@@3L3L3L3L3L3L3D3L3L3L3L3L3L3L3L3LSL3L3L1D3DSDSL@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1D3DSDSL@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1D3DSDSL@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1D3DSDSL@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1D3DSDSL@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1DQDSDSL@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQD3DSL@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ '))</body><body package="SpiderSolitaire">diamonds_2	"Tools.UIMaskEditor new openOnClass: self andSelector: #diamonds_2"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 3 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L1DQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQDQDSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQL3DSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3DSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L1DSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3LQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3DQL3L3L3L3L3L3L3L3L1L3L3L3L3L3L3L3L3L3L3L3L@@3L1DSL3L3L3L3L3L3L3L3LQD3L3L3L3L3L3L3L3L3L3L3L@@3LQD3DSL3L3L3L3L3L3L3DQDSL3L3L3L3L3L3L3L3L3L3L@@3LQL3DSL3L3L3L3L3L3L1DQDQL3L3L3L3L3L3L3L3L3L3L@@3LQDQDSL3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3L3L3L@@3LQDQDSL3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3DQDQDQDSL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L1DQDQDQDQL3L3L3L3L3L3L3L3L3L@@3L3D3L3L3L3L3L3L3L3DQDQDQDSL3L3L3L3L3L3L3L3L3L@@3L1DSL3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3L3L3L@@3LQDQL3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3L3L3L@@3DQDQD3L3L3L3L3L3L3L1DQDQL3L3L3L3L3L3L3L3L3L3L@@3DQDQD3L3L3L3L3L3L3L3DQDSL3L3L3L3L3L3L3L3L3L3L@@3DQDQD3L3L3L3L3L3L3L3LQD3L3L3L3L3L3L3L3L3L3L3L@@3LQDQL3L3L3L3L3L3L3L3L1L3L3L3L3L3L3L3L3L3L3L3L@@3L1DSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3D3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LSL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQL3L@@3L3L3L3L3L3L3L3L3L3L3L1L3L3L3L3L3L3L3L3L1DQD3L@@3L3L3L3L3L3L3L3L3L3L3LQD3L3L3L3L3L3L3L3LQDQDSL@@3L3L3L3L3L3L3L3L3L3L3DQDSL3L3L3L3L3L3L3LQDQDSL@@3L3L3L3L3L3L3L3L3L3L1DQDQL3L3L3L3L3L3L3LQDQDSL@@3L3L3L3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L1DQD3L@@3L3L3L3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3DQL3L@@3L3L3L3L3L3L3L3L3L3DQDQDQDSL3L3L3L3L3L3L3LSL3L@@3L3L3L3L3L3L3L3L3L1DQDQDQDQL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3DQDQDQDSL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3DQDQD3L@@3L3L3L3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3DQDQD3L@@3L3L3L3L3L3L3L3L3L3L1DQDQL3L3L3L3L3L3L3DSL1D3L@@3L3L3L3L3L3L3L3L3L3L3DQDSL3L3L3L3L3L3L3DSLQD3L@@3L3L3L3L3L3L3L3L3L3L3LQD3L3L3L3L3L3L3L3L3DQL3L@@3L3L3L3L3L3L3L3L3L3L3L1L3L3L3L3L3L3L3L3L1DSL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQD3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQL3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DSL3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DSL1D3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQDQD3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQDQL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ '))</body><body package="SpiderSolitaire">diamonds_3	"Tools.UIMaskEditor new openOnClass: self andSelector: #diamonds_3"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 3 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQDQDSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQDQDSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQL1D3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3LQL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3DSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L1DQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L1DQDSL3L3L3L3L3L3L3L1L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3DSL3L3L3L3L3L3L3LQD3L3L3L3L3L3L3L3L3L3L3L@@3L3L3DSL3L3L3L3L3L3L3DQDSL3L3L3L3L3L3L3L3L3L3L@@3LQL3DSL3L3L3L3L3L3L1DQDQL3L3L3L3L3L3L3L3L3L3L@@3LQDQDSL3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3L3L3L@@3L1DQD3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3DQDQDQDSL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L1DQDQDQDQL3L3L3L3L3L3L3L3L3L@@3L3D3L3L3L3L3L3L3L3DQDQDQDSL3L3L3L3L3L3L3L3L3L@@3L1DSL3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3L3L3L@@3LQDQL3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3L3L3L@@3DQDQD3L3L3L3L3L3L3L1DQDQL3L3L3L3L3L3L3L3L3L3L@@3DQDQD3L3L3L3L3L3L3L3DQDSL3L3L3L3L3L3L3L3L3L3L@@3DQDQD3L3L3L3L3L3L3L3LQD3L3L3L3L3L3L3L3L3L3L3L@@3LQDQL3L3L3L3L3L3L3L3L1L3L3L3L3L3L3L3L3L3L3L3L@@3L1DSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3D3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L1L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3LQD3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3DQDSL3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L1DQDQL3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3DQDQDQDSL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L1DQDQDQDQL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3DQDQDQDSL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L1DQDQL3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3DQDSL3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3LQD3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L1L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LSL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQL3L@@3L3L3L3L3L3L3L3L3L3L3L1L3L3L3L3L3L3L3L3L1DQD3L@@3L3L3L3L3L3L3L3L3L3L3LQD3L3L3L3L3L3L3L3LQDQDSL@@3L3L3L3L3L3L3L3L3L3L3DQDSL3L3L3L3L3L3L3LQDQDSL@@3L3L3L3L3L3L3L3L3L3L1DQDQL3L3L3L3L3L3L3LQDQDSL@@3L3L3L3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L1DQD3L@@3L3L3L3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3DQL3L@@3L3L3L3L3L3L3L3L3L3DQDQDQDSL3L3L3L3L3L3L3LSL3L@@3L3L3L3L3L3L3L3L3L1DQDQDQDQL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3DQDQDQDSL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3LQDQL3L@@3L3L3L3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3DQDQD3L@@3L3L3L3L3L3L3L3L3L3L1DQDQL3L3L3L3L3L3L3DSL1D3L@@3L3L3L3L3L3L3L3L3L3L3DQDSL3L3L3L3L3L3L3DSL3L3L@@3L3L3L3L3L3L3L3L3L3L3LQD3L3L3L3L3L3L3L3DSL3L3L@@3L3L3L3L3L3L3L3L3L3L3L1L3L3L3L3L3L3L3L3DQDQL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQDQL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DSL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1D3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQL1D3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQDQD3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQDQD3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ '))</body><body package="SpiderSolitaire">diamonds_4	"Tools.UIMaskEditor new openOnClass: self andSelector: #diamonds_4"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 3 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L1D3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3LQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3DQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L1DQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQD1D3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3DQL1D3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3DQDQDQL3L3L3LSL3L3L3L3L3L3L3L3D3L3L3L3L3L3L3L@@3DQDQDQL3L3L3DQL3L3L3L3L3L3L3L1DSL3L3L3L3L3L3L@@3L3L1D3L3L3L1DQD3L3L3L3L3L3L3LQDQL3L3L3L3L3L3L@@3L3L1D3L3L3LQDQDSL3L3L3L3L3L3DQDQD3L3L3L3L3L3L@@3L3LQDSL3L3DQDQDQL3L3L3L3L3L1DQDQDSL3L3L3L3L3L@@3L3LQDSL3L3DQDQDQL3L3L3L3L3L1DQDQDSL3L3L3L3L3L@@3L3L3L3L3L1DQDQDQD3L3L3L3L3LQDQDQDQL3L3L3L3L3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3L3D3L3L3L1DQDQDQD3L3L3L3L3LQDQDQDQL3L3L3L3L3L@@3L1DSL3L3L3DQDQDQL3L3L3L3L3L1DQDQDSL3L3L3L3L3L@@3LQDQL3L3L3DQDQDQL3L3L3L3L3L1DQDQDSL3L3L3L3L3L@@3DQDQD3L3L3LQDQDSL3L3L3L3L3L3DQDQD3L3L3L3L3L3L@@3DQDQD3L3L3L1DQD3L3L3L3L3L3L3LQDQL3L3L3L3L3L3L@@3DQDQD3L3L3L3DQL3L3L3L3L3L3L3L1DSL3L3L3L3L3L3L@@3LQDQL3L3L3L3LSL3L3L3L3L3L3L3L3D3L3L3L3L3L3L3L@@3L1DSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3D3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LSL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQL3L@@3L3L3L3L3L3L3LSL3L3L3L3L3L3L3L3D3L3L3L3L1DQD3L@@3L3L3L3L3L3L3DQL3L3L3L3L3L3L3L1DSL3L3L3LQDQDSL@@3L3L3L3L3L3L1DQD3L3L3L3L3L3L3LQDQL3L3L3LQDQDSL@@3L3L3L3L3L3LQDQDSL3L3L3L3L3L3DQDQD3L3L3LQDQDSL@@3L3L3L3L3L3DQDQDQL3L3L3L3L3L1DQDQDSL3L3L1DQD3L@@3L3L3L3L3L3DQDQDQL3L3L3L3L3L1DQDQDSL3L3L3DQL3L@@3L3L3L3L3L1DQDQDQD3L3L3L3L3LQDQDQDQL3L3L3LSL3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3L3L3L3L3L1DQDQDQD3L3L3L3L3LQDQDQDQL3L3L3L3L3L@@3L3L3L3L3L3DQDQDQL3L3L3L3L3L1DQDQDSL3L3DQD3L3L@@3L3L3L3L3L3DQDQDQL3L3L3L3L3L1DQDQDSL3L3DQD3L3L@@3L3L3L3L3L3LQDQDSL3L3L3L3L3L3DQDQD3L3L3LQL3L3L@@3L3L3L3L3L3L1DQD3L3L3L3L3L3L3LQDQL3L3L3LQL3L3L@@3L3L3L3L3L3L3DQL3L3L3L3L3L3L3L1DSL3L3L1DQDQDSL@@3L3L3L3L3L3L3LSL3L3L3L3L3L3L3L3D3L3L3L1DQDQDSL@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQL1DSL@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQLQD3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQDQL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQDSL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQD3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQL3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ '))</body><body package="SpiderSolitaire">diamonds_5	"Tools.UIMaskEditor new openOnClass: self andSelector: #diamonds_5"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 3 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3DQDQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3DQDQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3DSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3DSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3DQDQL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3DQDQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L1D3L3L3L3LSL3L3L3L3L3L3L3L3D3L3L3L3L3L3L3L@@3L3L1D3L3L3L3DQL3L3L3L3L3L3L3L1DSL3L3L3L3L3L3L@@3DSL1D3L3L3L1DQD3L3L3L3L3L3L3LQDQL3L3L3L3L3L3L@@3DSL1D3L3L3LQDQDSL3L3L3L3L3L3DQDQD3L3L3L3L3L3L@@3DQDQD3L3L3DQDQDQL3L3L3L3L3L1DQDQDSL3L3L3L3L3L@@3LQDQL3L3L3DQDQDQL3L3L3L3L3L1DQDQDSL3L3L3L3L3L@@3L3L3L3L3L1DQDQDQD3L3L3L3L3LQDQDQDQL3L3L3L3L3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3L3D3L3L3L1DQDQDQD3L3L3L3L3LQDQDQDQL3L3L3L3L3L@@3L1DSL3L3L3DQDQDQL3L3L3L3L3L1DQDQDSL3L3L3L3L3L@@3LQDQL3L3L3DQDQDQL3L3L3L3L3L1DQDQDSL3L3L3L3L3L@@3DQDQD3L3L3LQDQDSL3L3L3L3L3L3DQDQD3L3L3L3L3L3L@@3DQDQD3L3L3L1DQD3L3L3L3L3L3L3LQDQL3L3L3L3L3L3L@@3DQDQD3L3L3L3DQL3L3L3L3L3L3L3L1DSL3L3L3L3L3L3L@@3LQDQL3L3L3L3LSL3L3L3L3L3L3L3L3D3L3L3L3L3L3L3L@@3L1DSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3D3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L1L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3LQD3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3DQDSL3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L1DQDQL3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3DQDQDQDSL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L1DQDQDQDQL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3DQDQDQDSL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L1DQDQL3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3DQDSL3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3LQD3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L1L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LSL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQL3L@@3L3L3L3L3L3L3LSL3L3L3L3L3L3L3L3D3L3L3L3L1DQD3L@@3L3L3L3L3L3L3DQL3L3L3L3L3L3L3L1DSL3L3L3LQDQDSL@@3L3L3L3L3L3L1DQD3L3L3L3L3L3L3LQDQL3L3L3LQDQDSL@@3L3L3L3L3L3LQDQDSL3L3L3L3L3L3DQDQD3L3L3LQDQDSL@@3L3L3L3L3L3DQDQDQL3L3L3L3L3L1DQDQDSL3L3L1DQD3L@@3L3L3L3L3L3DQDQDQL3L3L3L3L3L1DQDQDSL3L3L3DQL3L@@3L3L3L3L3L1DQDQDQD3L3L3L3L3LQDQDQDQL3L3L3LSL3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3L3L3L3L3L1DQDQDQD3L3L3L3L3LQDQDQDQL3L3L3L3L3L@@3L3L3L3L3L3DQDQDQL3L3L3L3L3L1DQDQDSL3L3LQDQL3L@@3L3L3L3L3L3DQDQDQL3L3L3L3L3L1DQDQDSL3L3DQDQD3L@@3L3L3L3L3L3LQDQDSL3L3L3L3L3L3DQDQD3L3L3DSL1D3L@@3L3L3L3L3L3L1DQD3L3L3L3L3L3L3LQDQL3L3L3DSL1D3L@@3L3L3L3L3L3L3DQL3L3L3L3L3L3L3L1DSL3L3L3DSL3L3L@@3L3L3L3L3L3L3LSL3L3L3L3L3L3L3L3D3L3L3L3DSL3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQDQD3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQDQD3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1D3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1D3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQDQD3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQDQD3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ '))</body><body package="SpiderSolitaire">diamonds_6	"Tools.UIMaskEditor new openOnClass: self andSelector: #diamonds_6"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 3 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3DQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L1DQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQDQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQDQDSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQL3DSL3L3L3D3L3L3L3L3L3L3L3L3LSL3L3L3L3L3L3L@@3LQL3DSL3L3L1DSL3L3L3L3L3L3L3L3DQL3L3L3L3L3L3L@@3LQL3DSL3L3LQDQL3L3L3L3L3L3L3L1DQD3L3L3L3L3L3L@@3LQL3DSL3L3DQDQD3L3L3L3L3L3L3LQDQDSL3L3L3L3L3L@@3LQDQDSL3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3L1DQD3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3L3L3L3L3LQDQDQDQL3L3L3L3L3L1DQDQDQD3L3L3L3L3L@@3L3L3L3L3DQDQDQDQL3L3L3L3L3LQDQDQDQDSL3L3L3L3L@@3L3D3L3L3LQDQDQDQL3L3L3L3L3L1DQDQDQD3L3L3L3L3L@@3L1DSL3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3LQDQL3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3DQDQD3L3L3DQDQD3L3L3L3L3L3L3LQDQDSL3L3L3L3L3L@@3DQDQD3L3L3LQDQL3L3L3L3L3L3L3L1DQD3L3L3L3L3L3L@@3DQDQD3L3L3L1DSL3L3L3L3L3L3L3L3DQL3L3L3L3L3L3L@@3LQDQL3L3L3L3D3L3L3L3L3L3L3L3L3LSL3L3L3L3L3L3L@@3L1DSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3D3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3D3L3L3L3L3L3L3L3L3LSL3L3L3L3L3L3L@@3L3L3L3L3L3L1DSL3L3L3L3L3L3L3L3DQL3L3L3L3L3L3L@@3L3L3L3L3L3LQDQL3L3L3L3L3L3L3L1DQD3L3L3L3L3L3L@@3L3L3L3L3L3DQDQD3L3L3L3L3L3L3LQDQDSL3L3L3L3L3L@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3L3L3L3L3LQDQDQDQL3L3L3L3L3L1DQDQDQD3L3L3L3L3L@@3L3L3L3L3DQDQDQDQL3L3L3L3L3LQDQDQDQDSL3L3L3L3L@@3L3L3L3L3LQDQDQDQL3L3L3L3L3L1DQDQDQD3L3L3L3L3L@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3L3L3L3L3L3DQDQD3L3L3L3L3L3L3LQDQDSL3L3L3L3L3L@@3L3L3L3L3L3LQDQL3L3L3L3L3L3L3L1DQD3L3L3L3L3L3L@@3L3L3L3L3L3L1DSL3L3L3L3L3L3L3L3DQL3L3L3L3L3L3L@@3L3L3L3L3L3L3D3L3L3L3L3L3L3L3L3LSL3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LSL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQL3L@@3L3L3L3L3L3L3D3L3L3L3L3L3L3L3L3LSL3L3L3L1DQD3L@@3L3L3L3L3L3L1DSL3L3L3L3L3L3L3L3DQL3L3L3LQDQDSL@@3L3L3L3L3L3LQDQL3L3L3L3L3L3L3L1DQD3L3L3LQDQDSL@@3L3L3L3L3L3DQDQD3L3L3L3L3L3L3LQDQDSL3L3LQDQDSL@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L1DQD3L@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3DQL3L@@3L3L3L3L3LQDQDQDQL3L3L3L3L3L1DQDQDQD3L3L3LSL3L@@3L3L3L3L3DQDQDQDQL3L3L3L3L3LQDQDQDQDSL3L3L3L3L@@3L3L3L3L3LQDQDQDQL3L3L3L3L3L1DQDQDQD3L3L3L3L3L@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3LQDQL3L@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3DQDQD3L@@3L3L3L3L3L3DQDQD3L3L3L3L3L3L3LQDQDSL3L3DSL1D3L@@3L3L3L3L3L3LQDQL3L3L3L3L3L3L3L1DQD3L3L3DSL1D3L@@3L3L3L3L3L3L1DSL3L3L3L3L3L3L3L3DQL3L3L3DSL1D3L@@3L3L3L3L3L3L3D3L3L3L3L3L3L3L3L3LSL3L3L3DSL1D3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQDQD3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQDQD3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1D3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQD3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQDQL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQDSL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ '))</body><body package="SpiderSolitaire">diamonds_7	"Tools.UIMaskEditor new openOnClass: self andSelector: #diamonds_7"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 3 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQDQDSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQDQDSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQL3DSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L1D3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L1D3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3LQL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3LQL3L3L3L3D3L3L3L3L3L3L3L3L3LSL3L3L3L3L3L3L@@3L3LQL3L3L3L1DSL3L3L3L3L3L3L3L3DQL3L3L3L3L3L3L@@3L3DSL3L3L3LQDQL3L3L3L3L3L3L3L1DQD3L3L3L3L3L3L@@3L3DSL3L3L3DQDQD3L3L3L3L3L3L3LQDQDSL3L3L3L3L3L@@3L3DSL3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3L3DSL3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3L3L3L3L3LQDQDQDQL3L3L3L3L3L1DQDQDQD3L3L3L3L3L@@3L3L3L3L3DQDQDQDQL3L3L3L3L3LQDQDQDQDSL3L3L3L3L@@3L3D3L3L3LQDQDQDQL3L3L3L3L3L1DQDQDQD3L3L3L3L3L@@3L1DSL3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3LQDQL3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3DQDQD3L3L3DQDQD3L3L3L3L3L3L3LQDQDSL3L3L3L3L3L@@3DQDQD3L3L3LQDQL3L3L3L3L3L3L3L1DQD3L3L3L3L3L3L@@3DQDQD3L3L3L1DSL3L3L3L3L3L3L3L3DQL3L3L3L3L3L3L@@3LQDQL3L3L3L3D3L3L3L3L3L3L3L3L3LSL3L3L3L3L3L3L@@3L1DSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3D3L3L3L3L3L3L3L3L3L1L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3LQD3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3DQDSL3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L1DQDQL3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3DQDQDQDSL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L1DQDQDQDQL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3DQDQDQDSL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L1DQDQL3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3DQDSL3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3LQD3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L1L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3D3L3L3L3L3L3L3L3L3LSL3L3L3L3L3L3L@@3L3L3L3L3L3L1DSL3L3L3L3L3L3L3L3DQL3L3L3L3L3L3L@@3L3L3L3L3L3LQDQL3L3L3L3L3L3L3L1DQD3L3L3L3L3L3L@@3L3L3L3L3L3DQDQD3L3L3L3L3L3L3LQDQDSL3L3L3L3L3L@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3L3L3L3L3LQDQDQDQL3L3L3L3L3L1DQDQDQD3L3L3L3L3L@@3L3L3L3L3DQDQDQDQL3L3L3L3L3LQDQDQDQDSL3L3L3L3L@@3L3L3L3L3LQDQDQDQL3L3L3L3L3L1DQDQDQD3L3L3L3L3L@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3L3L3L3L3L3DQDQD3L3L3L3L3L3L3LQDQDSL3L3L3L3L3L@@3L3L3L3L3L3LQDQL3L3L3L3L3L3L3L1DQD3L3L3L3L3L3L@@3L3L3L3L3L3L1DSL3L3L3L3L3L3L3L3DQL3L3L3L3L3L3L@@3L3L3L3L3L3L3D3L3L3L3L3L3L3L3L3LSL3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LSL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQL3L@@3L3L3L3L3L3L3D3L3L3L3L3L3L3L3L3LSL3L3L3L1DQD3L@@3L3L3L3L3L3L1DSL3L3L3L3L3L3L3L3DQL3L3L3LQDQDSL@@3L3L3L3L3L3LQDQL3L3L3L3L3L3L3L1DQD3L3L3LQDQDSL@@3L3L3L3L3L3DQDQD3L3L3L3L3L3L3LQDQDSL3L3LQDQDSL@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L1DQD3L@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3DQL3L@@3L3L3L3L3LQDQDQDQL3L3L3L3L3L1DQDQDQD3L3L3LSL3L@@3L3L3L3L3DQDQDQDQL3L3L3L3L3LQDQDQDQDSL3L3L3L3L@@3L3L3L3L3LQDQDQDQL3L3L3L3L3L1DQDQDQD3L3L3L3L3L@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3LQL3L@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3LQL3L@@3L3L3L3L3L3DQDQD3L3L3L3L3L3L3LQDQDSL3L3L3LQL3L@@3L3L3L3L3L3LQDQL3L3L3L3L3L3L3L1DQD3L3L3L3LQL3L@@3L3L3L3L3L3L1DSL3L3L3L3L3L3L3L3DQL3L3L3L3DSL3L@@3L3L3L3L3L3L3D3L3L3L3L3L3L3L3L3LSL3L3L3L3DSL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DSL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1D3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1D3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQL3DSL@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQDQDSL@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQDQDSL@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ '))</body><body package="SpiderSolitaire">diamonds_8	"Tools.UIMaskEditor new openOnClass: self andSelector: #diamonds_8"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 3 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L1DQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQDQDSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQL3DSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQL3DSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQL3DSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L1DQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQDQDSL3L3L3D3L3L3L3L3L3L3L3L3LSL3L3L3L3L3L3L@@3LQL3DSL3L3L1DSL3L3L3L3L3L3L3L3DQL3L3L3L3L3L3L@@3LQL3DSL3L3LQDQL3L3L3L3L3L3L3L1DQD3L3L3L3L3L3L@@3LQL3DSL3L3DQDQD3L3L3L3L3L3L3LQDQDSL3L3L3L3L3L@@3LQDQDSL3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3L1DQD3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3L3L3L3L3LQDQDQDQL3L3L3L3L3L1DQDQDQD3L3L3L3L3L@@3L3L3L3L3DQDQDQDQD3L3L3L3L3LQDQDQDQDSL3L3L3L3L@@3L3D3L3L3LQDQDQDQL3L3L3L3L3L1DQDQDQD3L3L3L3L3L@@3L1DSL3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3LQDQL3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3DQDQD3L3L3DQDQD3L3L3L3L3L3L3LQDQDSL3L3L3L3L3L@@3DQDQD3L3L3LQDQL3L3L3L3L3L3L3L1DQD3L3L3L3L3L3L@@3DQDQD3L3L3L1DSL3L3L3L3L3L3L3L3DQL3L3L3L3L3L3L@@3LQDQL3L3L3L3D3L3L3L3L3L3L3L3L3LSL3L3L3L3L3L3L@@3L1DSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3D3L3L3L3L3L3L3L3L3L1L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3LQD3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3DQDSL3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L1DQDQL3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3DQDQDQDSL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L1DQDQDQDQL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3DQDQDQDSL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L1DQDQL3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3DQDSL3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3LQD3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3D3L3L3L3L1L3L3L3L3LSL3L3L3L3L3L3L@@3L3L3L3L3L3L1DSL3L3L3L3L3L3L3L3DQL3L3L3L3L3L3L@@3L3L3L3L3L3LQDQL3L3L3L3L3L3L3L1DQD3L3L3L3L3L3L@@3L3L3L3L3L3DQDQD3L3L3L3L3L3L3LQDQDSL3L3L3L3L3L@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3L3L3L3L3LQDQDQDQL3L3L3L3L3L1DQDQDQD3L3L3L3L3L@@3L3L3L3L3DQDQDQDQD3L3L3L3L3L1DQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQL3L3L3L3L3LQDQDQDQDSL3L3L3L3L@@3L3L3L3L3LQDQDQDQL3L3L3L3L3L1DQDQDQD3L3L3L3L3L@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3L3L3L3L3L3DQDQD3L3L3L3L3L3L3LQDQDSL3L3L3L3L3L@@3L3L3L3L3L3LQDQL3L3L3L3L3L3L3L1DQD3L3L3L3L3L3L@@3L3L3L3L3L3L1DSL3L3L3L3L3L3L3L3DQL3L3L3L3L3L3L@@3L3L3L3L3L3L3D3L3L3L3L1L3L3L3L3LSL3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3LQD3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3DQDSL3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L1DQDQL3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3DQDQDQDSL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L1DQDQDQDQL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3DQDQDQDSL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L1DQDQL3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3DQDSL3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3LQD3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L1L3L3L3L3L3L3L3L3L3LSL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQL3L@@3L3L3L3L3L3L3D3L3L3L3L3L3L3L3L3LSL3L3L3L1DQD3L@@3L3L3L3L3L3L1DSL3L3L3L3L3L3L3L3DQL3L3L3LQDQDSL@@3L3L3L3L3L3LQDQL3L3L3L3L3L3L3L1DQD3L3L3LQDQDSL@@3L3L3L3L3L3DQDQD3L3L3L3L3L3L3LQDQDSL3L3LQDQDSL@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L1DQD3L@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3DQL3L@@3L3L3L3L3LQDQDQDQL3L3L3L3L3L1DQDQDQD3L3L3LSL3L@@3L3L3L3L3DQDQDQDQD3L3L3L3L3LQDQDQDQDSL3L3L3L3L@@3L3L3L3L3LQDQDQDQL3L3L3L3L3L1DQDQDQD3L3L3L3L3L@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3LQDQL3L@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3DQDQD3L@@3L3L3L3L3L3DQDQD3L3L3L3L3L3L3LQDQDSL3L3DSL1D3L@@3L3L3L3L3L3LQDQL3L3L3L3L3L3L3L1DQD3L3L3DSL1D3L@@3L3L3L3L3L3L1DSL3L3L3L3L3L3L3L3DQL3L3L3DSL1D3L@@3L3L3L3L3L3L3D3L3L3L3L3L3L3L3L3LSL3L3L3DQDQD3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQDQL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DSL1D3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DSL1D3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DSL1D3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQDQD3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQDQL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ '))</body><body package="SpiderSolitaire">diamonds_9	"Tools.UIMaskEditor new openOnClass: self andSelector: #diamonds_9"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 3 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L1DQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQDQDSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQL3DSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQL3DSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQL3DSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQL3DSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQDQDSL3L3L3D3L3L3L3L3L3L3L3L3LSL3L3L3L3L3L3L@@3L1DQDSL3L3L1DSL3L3L3L3L3L3L3L3DQL3L3L3L3L3L3L@@3L3L3DSL3L3LQDQL3L3L3L3L3L3L3L1DQD3L3L3L3L3L3L@@3L3L1DSL3L3DQDQD3L3L3L3L3L3L3LQDQDSL3L3L3L3L3L@@3L1DQD3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3L1DQL3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3L3L3L3L3LQDQDQDQL3L3L3L3L3L1DQDQDQD3L3L3L3L3L@@3L3L3L3L3DQDQDQDQD3L3L3L3L3LQDQDQDQDSL3L3L3L3L@@3L3D3L3L3LQDQDQDQL3L3L3L3L3L1DQDQDQD3L3L3L3L3L@@3L1DSL3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3LQDQL3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3DQDQD3L3L3DQDQD3L3L3L3L3L3L3LQDQDSL3L3L3L3L3L@@3DQDQD3L3L3LQDQL3L3L3L3L3L3L3L1DQD3L3L3L3L3L3L@@3DQDQD3L3L3L1DSL3L3L3L3L3L3L3L3DQL3L3L3L3L3L3L@@3LQDQL3L3L3L3D3L3L3L3L3L3L3L3L3LSL3L3L3L3L3L3L@@3L1DSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3D3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3D3L3L3L3L3L3L3L3L3LSL3L3L3L3L3L3L@@3L3L3L3L3L3L1DSL3L3L3L3L3L3L3L3DQL3L3L3L3L3L3L@@3L3L3L3L3L3LQDQL3L3L3L3L3L3L3L1DQD3L3L3L3L3L3L@@3L3L3L3L3L3DQDQD3L3L3L3L3L3L3LQDQDSL3L3L3L3L3L@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3L3L3L3L3LQDQDQDQL3L3L3L3L3L1DQDQDQD3L3L3L3L3L@@3L3L3L3L3DQDQDQDQD3L3L3L3L3LQDQDQDQDSL3L3L3L3L@@3L3L3L3L3LQDQDQDQL3L3L3L3L3L1DQDQDQD3L3L3L3L3L@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3L3L3L3L3L1DQDQDSL3L3L1L3L3L3DQDQDQL3L3L3L3L3L@@3L3L3L3L3L3DQDQD3L3L3LQD3L3L3LQDQDSL3L3L3L3L3L@@3L3L3L3L3L3LQDQL3L3L3DQDSL3L3L1DQD3L3L3L3L3L3L@@3L3L3L3L3L3L1DSL3L3L1DQDQL3L3L3DQL3L3L3L3L3L3L@@3L3L3L3L3L3L3D3L3L3LQDQDQD3L3L3LSL3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3DQDQDQDSL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L1DQDQDQDQL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3DQDQDQDSL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3D3L3L3L1DQDQL3L3L3LSL3L3L3L3L3L3L@@3L3L3L3L3L3L1DSL3L3L3DQDSL3L3L3DQL3L3L3L3L3L3L@@3L3L3L3L3L3LQDQL3L3L3LQD3L3L3L1DQD3L3L3L3L3L3L@@3L3L3L3L3L3DQDQD3L3L3L1L3L3L3LQDQDSL3L3L3L3L3L@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3L3L3L3L3LQDQDQDQL3L3L3L3L3L1DQDQDQD3L3L3L3L3L@@3L3L3L3L3DQDQDQDQD3L3L3L3L3LQDQDQDQDSL3L3L3L3L@@3L3L3L3L3LQDQDQDQL3L3L3L3L3L1DQDQDQD3L3L3L3L3L@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3L3L3L@@3L3L3L3L3L3DQDQD3L3L3L3L3L3L3LQDQDSL3L3L3L3L3L@@3L3L3L3L3L3LQDQL3L3L3L3L3L3L3L1DQD3L3L3L3L3L3L@@3L3L3L3L3L3L1DSL3L3L3L3L3L3L3L3DQL3L3L3L3L3L3L@@3L3L3L3L3L3L3D3L3L3L3L3L3L3L3L3LSL3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LSL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQL3L@@3L3L3L3L3L3L3D3L3L3L3L3L3L3L3L3LSL3L3L3L1DQD3L@@3L3L3L3L3L3L1DSL3L3L3L3L3L3L3L3DQL3L3L3LQDQDSL@@3L3L3L3L3L3LQDQL3L3L3L3L3L3L3L1DQD3L3L3LQDQDSL@@3L3L3L3L3L3DQDQD3L3L3L3L3L3L3LQDQDSL3L3LQDQDSL@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L1DQD3L@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L3DQL3L@@3L3L3L3L3LQDQDQDQL3L3L3L3L3L1DQDQDQD3L3L3LSL3L@@3L3L3L3L3DQDQDQDQD3L3L3L3L3LQDQDQDQDSL3L3L3L3L@@3L3L3L3L3LQDQDQDQL3L3L3L3L3L1DQDQDQD3L3L3L3L3L@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3L1DQL3L@@3L3L3L3L3L1DQDQDSL3L3L3L3L3L3DQDQDQL3L3LQDQL3L@@3L3L3L3L3L3DQDQD3L3L3L3L3L3L3LQDQDSL3L3DQL3L3L@@3L3L3L3L3L3LQDQL3L3L3L3L3L3L3L1DQD3L3L3DSL3L3L@@3L3L3L3L3L3L1DSL3L3L3L3L3L3L3L3DQL3L3L3DQDQL3L@@3L3L3L3L3L3L3D3L3L3L3L3L3L3L3L3LSL3L3L3DQDQD3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DSL1D3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DSL1D3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DSL1D3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DSL1D3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQDQD3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQDQL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ '))</body><body package="SpiderSolitaire">diamonds_ace	"Tools.UIMaskEditor new openOnClass: self andSelector: #diamonds_ace"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 3 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3LSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3LSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3DQL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3DQL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L1D1D3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L1D1D3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQL3DSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQDQDSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3DQDQDQL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3DSL3LQL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@1DQL3DQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@1DQL3DQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3LSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3DQL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L1DQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQDQDSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQDQDSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQDQDSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L1DQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3DQL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3LSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3D3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L1DSL3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3LQDQL3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3DQDQD3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L1DQDQDSL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L1DQDQDSL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3LQDQDQDQL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3DQDQDQDQD3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3LQDQDQDQL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L1DQDQDSL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L1DQDQDSL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3DQDQD3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3LQDQL3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L1DSL3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3D3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3D3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1DSL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQDQL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQDQD3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQDQD3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQDQD3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQDQL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1DSL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3D3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQD3LQDSL@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQD3LQDSL@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQL3L1D3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQDQDQD3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1DQDQL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1D3LQL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DSDSL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DSDSL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQD3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQD3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ '))</body><body package="SpiderSolitaire">diamonds_jack	"Tools.UIMaskEditor new openOnClass: self andSelector: #diamonds_jack"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 3 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedStringbody><body package="SpiderSolitaire">diamonds_king	"Tools.UIMaskEditor new openOnClass: self andSelector: #diamonds_king"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 3 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 8191)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedStringbody><body package="SpiderSolitaire">diamonds_queen	"Tools.UIMaskEditor new openOnClass: self andSelector: #diamonds_queen"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 3 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedStringbody><body package="SpiderSolitaire">emptyImage	"Tools.UIMaskEditor new openOnClass: self andSelector: #emptyImage"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 4 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7934 7966 7934)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7901 7934 7901)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7869 7934 7901)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7580 7837 7677)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7709 7869 7773)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8062 7709)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4432 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: '"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"@ @]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]0B@@G]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7@@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@I7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\PA7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]PA7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@A7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7\@@G]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7X@ F]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]0B@"@A @@@@@@@@@@@@@@H@@@@@@@@@@@@@@@@@@@@@@@@@@@"@'))</body><body package="SpiderSolitaire">emptyMask	"Tools.UIMaskEditor new openOnClass: self andSelector: #emptyMask"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 1 bitsPerPixel: 1 palette: CoveragePalette monoMaskPalette usingBits: (ByteArray fromPackedStringbody><body package="SpiderSolitaire">hearts_10	"Tools.UIMaskEditor new openOnClass: self andSelector: #hearts_10"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 3 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3DSLQDSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3DSDQDQL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3DSDSLQL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3DSDSLQL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3DSDSLQL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3DSDSLQL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3DSDSLQL3L1DQL3DQD3L3L3L3L3LQDSL1DQL3L3L3L3L3L@@3DSDSLQL3LQDQD1DQDSL3L3L3L3DQDQLQDQD3L3L3L3L3L@@3DSDSLQL3DQDQD1DQDQL3L3L3L1DQDQLQDQDSL3L3L3L3L@@3DSDSLQL3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3DSDQDQL3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3DSLQDSL3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3LQD1DSL3L1DQDQDQD3L3L3L3L3LQDQDQDQL3L3L3L3L3L@@3DQD1DQL3L3DQDQDQL3DQD3LQDSL1DQDQDSL3L3L3L3L3L@@3DQDQDQL3L3LQDQDSL1DQDSDQDQL3DQDQD3L3L3L3L3L3L@@3DQDQDQL3L3L1DQD3LQDQDSDQDQD3LQDQL3L3L3L3L3L3L@@3DQDQDQL3L3L3DQL3LQDQDQDQDQD3L1DSL3L3L3L3L3L3L@@3LQDQDSL3L3L3LSL3LQDQDQDQDQD3L3D3L3L3L3L3L3L3L@@3L1DQD3L3L3L3L3L3LQDQDQDQDQD3L3L3L3L3L3L3L3L3L@@3L3DQL3L3L3L3L3L3LQDQDQDQDQD3L3L3L3L3L3L3L3L3L@@3L3LSL3L3L3L3L3L3L1DQDQDQDQL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L1DQDQDQDQL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3DQDQDQDSL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L1DQL3DQD3L1DQDQL3LQDSL1DQL3L3L3L3L3L@@3L3L3L3L3LQDQD1DQDSL3DQDSL3DQDQLQDQD3L3L3L3L3L@@3L3L3L3L3DQDQD1DQDQL3LQD3L1DQDQLQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L1L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3L3L3L3L3L1DQDQDQD3L3L3L3L3LQDQDQDQL3L3L3L3L3L@@3L3L3L3L3L3DQDQDQL3L3L3L3L3L1DQDQDSL3L3L3L3L3L@@3L3L3L3L3L3LQDQDSL3L3L3L3L3L3DQDQD3L3L3L3L3L3L@@3L3L3L3L3L3L1DQD3L3L3L3L3L3L3LQDQL3L3L3L3L3L3L@@3L3L3L3L3L3L3DQL3L3L3L3L3L3L3L1DSL3L3L3L3L3L3L@@3L3L3L3L3L3L3LSL3L3L3L3L3L3L3L3D3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3LSL3L3L3L3L3L3L3L3D3L3L3L3L3L3L3L@@3L3L3L3L3L3L3DQL3L3L3L3L3L3L3L1DSL3L3L3L3L3L3L@@3L3L3L3L3L3L1DQD3L3L3L3L3L3L3LQDQL3L3L3L3L3L3L@@3L3L3L3L3L3LQDQDSL3L3L3L3L3L3DQDQD3L3L3L3L3L3L@@3L3L3L3L3L3DQDQDQL3L3L3L3L3L1DQDQDSL3L3L3L3L3L@@3L3L3L3L3L1DQDQDQD3L3L3L3L3LQDQDQDQL3L3L3L3L3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L1L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQD1DQDQL3LQD3L1DQDQLQDQDSL3L3L3L3L@@3L3L3L3L3LQDQD1DQDSL3DQDSL3DQDQLQDQD3L3L3L3L3L@@3L3L3L3L3L1DQL3DQD3L1DQDQL3LQDSL1DQL3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3DQDQDQDSL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L1DQDQDQDQL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L1DQDQDQDQL3L3L3L3L3L3L3D3L3L@@3L3L3L3L3L3L3L3L3LQDQDQDQDQD3L3L3L3L3L3L1DSL3L@@3L3L3L3L3L3L3L3L3LQDQDQDQDQD3L3L3L3L3L3LQDQL3L@@3L3L3L3L3L3L3LSL3LQDQDQDQDQD3L3D3L3L3L3DQDQD3L@@3L3L3L3L3L3L3DQL3LQDQDQDQDQD3L1DSL3L3L1DQDQDSL@@3L3L3L3L3L3L1DQD3LQDQDSDQDQD3LQDQL3L3L1DQDQDSL@@3L3L3L3L3L3LQDQDSL1DQDSDQDQL3DQDQD3L3L1DQDQDSL@@3L3L3L3L3L3DQDQDQL3DQD3LQDSL1DQDQDSL3L1DQLQDSL@@3L3L3L3L3L1DQDQDQD3L3L3L3L3LQDQDQDQL3L3DQLQD3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3DQD3DSL@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL1DQDSDSL@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL1D3DSDSL@@3L3L3L3L3DQDQD1DQDQL3L3L3L1DQDQLQDQDSL1D3DSDSL@@3L3L3L3L3LQDQD1DQDSL3L3L3L3DQDQLQDQD3L1D3DSDSL@@3L3L3L3L3L1DQL3DQD3L3L3L3L3LQDSL1DQL3L1D3DSDSL@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1D3DSDSL@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1D3DSDSL@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1D3DSDSL@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1D3DSDSL@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1DQDSDSL@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQD3DSL@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ '))</body><body package="SpiderSolitaire">hearts_2	"Tools.UIMaskEditor new openOnClass: self andSelector: #hearts_2"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 3 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L1DQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQDQDSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQL3DSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3DSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L1DSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3LQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3DQL3L3L3L3L3L3L3LQDSL1DQL3L3L3L3L3L3L3L3L3L@@3L1DSL3L3L3L3L3L3L3DQDQLQDQD3L3L3L3L3L3L3L3L3L@@3LQD3DSL3L3L3L3L3L1DQDQLQDQDSL3L3L3L3L3L3L3L3L@@3LQL3DSL3L3L3L3L3L1DQDQDQDQDSL3L3L3L3L3L3L3L3L@@3LQDQDSL3L3L3L3L3L1DQDQDQDQDSL3L3L3L3L3L3L3L3L@@3LQDQDSL3L3L3L3L3L1DQDQDQDQDSL3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L1DQDQDQDQDSL3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3DQDQDQDQD3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3DQDQDQDQD3L3L3L3L3L3L3L3L3L@@3LQD1DSL3L3L3L3L3L3LQDQDQDQL3L3L3L3L3L3L3L3L3L@@3DQD1DQL3L3L3L3L3L3L1DQDQDSL3L3L3L3L3L3L3L3L3L@@3DQDQDQL3L3L3L3L3L3L3DQDQD3L3L3L3L3L3L3L3L3L3L@@3DQDQDQL3L3L3L3L3L3L3LQDQL3L3L3L3L3L3L3L3L3L3L@@3DQDQDQL3L3L3L3L3L3L3L1DSL3L3L3L3L3L3L3L3L3L3L@@3LQDQDSL3L3L3L3L3L3L3L3D3L3L3L3L3L3L3L3L3L3L3L@@3L1DQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3DQL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3LSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3D3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1DSL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQDQL3L@@3L3L3L3L3L3L3L3L3L3L3L3D3L3L3L3L3L3L3L3DQDQD3L@@3L3L3L3L3L3L3L3L3L3L3L1DSL3L3L3L3L3L3L1DQDQDSL@@3L3L3L3L3L3L3L3L3L3L3LQDQL3L3L3L3L3L3L1DQDQDSL@@3L3L3L3L3L3L3L3L3L3L3DQDQD3L3L3L3L3L3L1DQDQDSL@@3L3L3L3L3L3L3L3L3L3L1DQDQDSL3L3L3L3L3L1DQLQDSL@@3L3L3L3L3L3L3L3L3L3LQDQDQDQL3L3L3L3L3L3DQLQD3L@@3L3L3L3L3L3L3L3L3L3DQDQDQDQD3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3DQDQDQDQD3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L1DQDQDQDQDSL3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L1DQDQDQDQDSL3L3L3L3L3DQDQD3L@@3L3L3L3L3L3L3L3L3L1DQDQDQDQDSL3L3L3L3L3DQDQD3L@@3L3L3L3L3L3L3L3L3L1DQDQDQDQDSL3L3L3L3L3DSL1D3L@@3L3L3L3L3L3L3L3L3L1DQDQLQDQDSL3L3L3L3L3DSLQD3L@@3L3L3L3L3L3L3L3L3L3DQDQLQDQD3L3L3L3L3L3L3DQL3L@@3L3L3L3L3L3L3L3L3L3LQDSL1DQL3L3L3L3L3L3L1DSL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQD3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQL3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DSL3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DSL1D3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQDQD3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQDQL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ '))</body><body package="SpiderSolitaire">hearts_3	"Tools.UIMaskEditor new openOnClass: self andSelector: #hearts_3"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 3 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQDQDSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQDQDSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQL1D3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3LQL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3DSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L1DQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L1DQDSL3L3L3L3L3L3LQDSL1DQL3L3L3L3L3L3L3L3L3L@@3L3L3DSL3L3L3L3L3L3DQDQLQDQD3L3L3L3L3L3L3L3L3L@@3L3L3DSL3L3L3L3L3L1DQDQLQDQDSL3L3L3L3L3L3L3L3L@@3LQL3DSL3L3L3L3L3L1DQDQDQDQDSL3L3L3L3L3L3L3L3L@@3LQDQDSL3L3L3L3L3L1DQDQDQDQDSL3L3L3L3L3L3L3L3L@@3L1DQD3L3L3L3L3L3L1DQDQDQDQDSL3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L1DQDQDQDQDSL3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3DQDQDQDQD3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3DQDQDQDQD3L3L3L3L3L3L3L3L3L@@3LQD1DSL3L3L3L3L3L3LQDQDQDQL3L3L3L3L3L3L3L3L3L@@3DQD1DQL3L3L3L3L3L3L1DQDQDSL3L3L3L3L3L3L3L3L3L@@3DQDQDQL3L3L3L3L3L3L3DQDQD3L3L3L3L3L3L3L3L3L3L@@3DQDQDQL3L3L3L3L3L3L3LQDQL3L3L3L3L3L3L3L3L3L3L@@3DQDQDQL3L3L3L3L3L3L3L1DSL3L3L3L3L3L3L3L3L3L3L@@3LQDQDSL3L3L3L3L3L3L3L3D3L3L3L3L3L3L3L3L3L3L3L@@3L1DQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3DQL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3LSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3LQDSL1DQL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3DQDQLQDQD3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L1DQDQLQDQDSL3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L1DQDQDQDQDSL3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L1DQDQDQDQDSL3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L1DQDQDQDQDSL3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L1DQDQDQDQDSL3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3DQDQDQDQD3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3DQDQDQDQD3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3LQDQDQDQL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L1DQDQDSL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3DQDQD3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3LQDQL3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L1DSL3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3D3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3D3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1DSL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQDQL3L@@3L3L3L3L3L3L3L3L3L3L3L3D3L3L3L3L3L3L3L3DQDQD3L@@3L3L3L3L3L3L3L3L3L3L3L1DSL3L3L3L3L3L3L1DQDQDSL@@3L3L3L3L3L3L3L3L3L3L3LQDQL3L3L3L3L3L3L1DQDQDSL@@3L3L3L3L3L3L3L3L3L3L3DQDQD3L3L3L3L3L3L1DQDQDSL@@3L3L3L3L3L3L3L3L3L3L1DQDQDSL3L3L3L3L3L1DQLQDSL@@3L3L3L3L3L3L3L3L3L3LQDQDQDQL3L3L3L3L3L3DQLQD3L@@3L3L3L3L3L3L3L3L3L3DQDQDQDQD3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3DQDQDQDQD3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L1DQDQDQDQDSL3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L1DQDQDQDQDSL3L3L3L3L3LQDQL3L@@3L3L3L3L3L3L3L3L3L1DQDQDQDQDSL3L3L3L3L3DQDQD3L@@3L3L3L3L3L3L3L3L3L1DQDQDQDQDSL3L3L3L3L3DSL1D3L@@3L3L3L3L3L3L3L3L3L1DQDQLQDQDSL3L3L3L3L3DSL3L3L@@3L3L3L3L3L3L3L3L3L3DQDQLQDQD3L3L3L3L3L3DSL3L3L@@3L3L3L3L3L3L3L3L3L3LQDSL1DQL3L3L3L3L3L3DQDQL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQDQL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DSL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1D3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQL1D3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQDQD3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQDQD3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ '))</body><body package="SpiderSolitaire">hearts_4	"Tools.UIMaskEditor new openOnClass: self andSelector: #hearts_4"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 3 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L1D3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3LQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3DQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L1DQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQD1D3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3DQL1D3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3DQDQDQL3L1DQL3DQD3L3L3L3L3LQDSL1DQL3L3L3L3L3L@@3DQDQDQL3LQDQD1DQDSL3L3L3L3DQDQLQDQD3L3L3L3L3L@@3L3L1D3L3DQDQD1DQDQL3L3L3L1DQDQLQDQDSL3L3L3L3L@@3L3L1D3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3LQDSL3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3LQDSL3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3LQD1DSL3L1DQDQDQD3L3L3L3L3LQDQDQDQL3L3L3L3L3L@@3DQD1DQL3L3DQDQDQL3L3L3L3L3L1DQDQDSL3L3L3L3L3L@@3DQDQDQL3L3LQDQDSL3L3L3L3L3L3DQDQD3L3L3L3L3L3L@@3DQDQDQL3L3L1DQD3L3L3L3L3L3L3LQDQL3L3L3L3L3L3L@@3DQDQDQL3L3L3DQL3L3L3L3L3L3L3L1DSL3L3L3L3L3L3L@@3LQDQDSL3L3L3LSL3L3L3L3L3L3L3L3D3L3L3L3L3L3L3L@@3L1DQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3DQL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3LSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3D3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1DSL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQDQL3L@@3L3L3L3L3L3L3LSL3L3L3L3L3L3L3L3D3L3L3L3DQDQD3L@@3L3L3L3L3L3L3DQL3L3L3L3L3L3L3L1DSL3L3L1DQDQDSL@@3L3L3L3L3L3L1DQD3L3L3L3L3L3L3LQDQL3L3L1DQDQDSL@@3L3L3L3L3L3LQDQDSL3L3L3L3L3L3DQDQD3L3L1DQDQDSL@@3L3L3L3L3L3DQDQDQL3L3L3L3L3L1DQDQDSL3L1DQLQDSL@@3L3L3L3L3L1DQDQDQD3L3L3L3L3LQDQDQDQL3L3DQLQD3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3DQD3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3DQD3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3LQL3L3L@@3L3L3L3L3DQDQD1DQDQL3L3L3L1DQDQLQDQDSL3LQL3L3L@@3L3L3L3L3LQDQD1DQDSL3L3L3L3DQDQLQDQD3L1DQDQDSL@@3L3L3L3L3L1DQL3DQD3L3L3L3L3LQDSL1DQL3L1DQDQDSL@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQL1DSL@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQLQD3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQDQL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQDSL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQD3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQL3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ '))</body><body package="SpiderSolitaire">hearts_5	"Tools.UIMaskEditor new openOnClass: self andSelector: #hearts_5"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 3 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQDQDSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQDQDSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQDQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQDQDSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3DSL3L1DQL3DQD3L3L3L3L3LQDSL1DQL3L3L3L3L3L@@3L3L3DSL3LQDQD1DQDSL3L3L3L3DQDQLQDQD3L3L3L3L3L@@3LQL3DSL3DQDQD1DQDQL3L3L3L1DQDQLQDQDSL3L3L3L3L@@3LQL3DSL3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3LQDQDSL3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L1DQD3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3LQD1DSL3L1DQDQDQD3L3L3L3L3LQDQDQDQL3L3L3L3L3L@@3DQD1DQL3L3DQDQDQL3L3L3L3L3L1DQDQDSL3L3L3L3L3L@@3DQDQDQL3L3LQDQDSL3L3L3L3L3L3DQDQD3L3L3L3L3L3L@@3DQDQDQL3L3L1DQD3L3L3L3L3L3L3LQDQL3L3L3L3L3L3L@@3DQDQDQL3L3L3DQL3L3L3L3L3L3L3L1DSL3L3L3L3L3L3L@@3LQDQDSL3L3L3LSL3L3L3L3L3L3L3L3D3L3L3L3L3L3L3L@@3L1DQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3DQL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3LSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3DQD3LQDSL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L1DQDSDQDQL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3LQDQDSDQDQD3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3LQDQDQDQDQD3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3LQDQDQDQDQD3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3LQDQDQDQDQD3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3LQDQDQDQDQD3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L1DQDQDQDQL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L1DQDQDQDQL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3DQDQDQDSL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L1DQDQL3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3DQDSL3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3LQD3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L1L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3D3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1DSL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQDQL3L@@3L3L3L3L3L3L3LSL3L3L3L3L3L3L3L3D3L3L3L3DQDQD3L@@3L3L3L3L3L3L3DQL3L3L3L3L3L3L3L1DSL3L3L1DQDQDSL@@3L3L3L3L3L3L1DQD3L3L3L3L3L3L3LQDQL3L3L1DQDQDSL@@3L3L3L3L3L3LQDQDSL3L3L3L3L3L3DQDQD3L3L1DQDQDSL@@3L3L3L3L3L3DQDQDQL3L3L3L3L3L1DQDQDSL3L1DQLQDSL@@3L3L3L3L3L1DQDQDQD3L3L3L3L3LQDQDQDQL3L3DQLQD3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3LQDQL3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3DQDQD3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3DSL1D3L@@3L3L3L3L3DQDQD1DQDQL3L3L3L1DQDQLQDQDSL3DSL1D3L@@3L3L3L3L3LQDQD1DQDSL3L3L3L3DQDQLQDQD3L3DSL3L3L@@3L3L3L3L3L1DQL3DQD3L3L3L3L3LQDSL1DQL3L3DSL3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQDQD3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQDQD3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1D3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1D3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQDQD3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQDQD3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ '))</body><body package="SpiderSolitaire">hearts_6	"Tools.UIMaskEditor new openOnClass: self andSelector: #hearts_6"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 3 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3DQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L1DQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQDQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQDQDSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQL3DSL3L1DQL3DQD3L3L3L3L3LQDSL1DQL3L3L3L3L3L@@3LQL3DSL3LQDQD1DQDSL3L3L3L3DQDQLQDQD3L3L3L3L3L@@3LQL3DSL3DQDQD1DQDQL3L3L3L1DQDQLQDQDSL3L3L3L3L@@3LQL3DSL3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3LQDQDSL3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L1DQD3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3LQD1DSL3L1DQDQDQD3L3L3L3L3LQDQDQDQL3L3L3L3L3L@@3DQD1DQL3L3DQDQDQL3L3L3L3L3L1DQDQDSL3L3L3L3L3L@@3DQDQDQL3L3LQDQDSL3L3L3L3L3L3DQDQD3L3L3L3L3L3L@@3DQDQDQL3L3L1DQD3L3L3L3L3L3L3LQDQL3L3L3L3L3L3L@@3DQDQDQL3L3L3DQL3L3L3L3L3L3L3L1DSL3L3L3L3L3L3L@@3LQDQDSL3L3L3LSL3L3L3L3L3L3L3L3D3L3L3L3L3L3L3L@@3L1DQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3DQL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3LSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L1DQL3DQD3L3L3L3L3LQDSL1DQL3L3L3L3L3L@@3L3L3L3L3LQDQD1DQDSL3L3L3L3DQDQLQDQD3L3L3L3L3L@@3L3L3L3L3DQDQD1DQDQL3L3L3L1DQDQLQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3L3L3L3L3L1DQDQDQD3L3L3L3L3LQDQDQDQL3L3L3L3L3L@@3L3L3L3L3L3DQDQDQL3L3L3L3L3L1DQDQDSL3L3L3L3L3L@@3L3L3L3L3L3LQDQDSL3L3L3L3L3L3DQDQD3L3L3L3L3L3L@@3L3L3L3L3L3L1DQD3L3L3L3L3L3L3LQDQL3L3L3L3L3L3L@@3L3L3L3L3L3L3DQL3L3L3L3L3L3L3L1DSL3L3L3L3L3L3L@@3L3L3L3L3L3L3LSL3L3L3L3L3L3L3L3D3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3D3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1DSL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQDQL3L@@3L3L3L3L3L3L3LSL3L3L3L3L3L3L3L3D3L3L3L3DQDQD3L@@3L3L3L3L3L3L3DQL3L3L3L3L3L3L3L1DSL3L3L1DQDQDSL@@3L3L3L3L3L3L1DQD3L3L3L3L3L3L3LQDQL3L3L1DQDQDSL@@3L3L3L3L3L3LQDQDSL3L3L3L3L3L3DQDQD3L3L1DQDQDSL@@3L3L3L3L3L3DQDQDQL3L3L3L3L3L1DQDQDSL3L1DQLQDSL@@3L3L3L3L3L1DQDQDQD3L3L3L3L3LQDQDQDQL3L3DQLQD3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3LQDQL3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3DQDQD3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3DSL1D3L@@3L3L3L3L3DQDQD1DQDQL3L3L3L1DQDQLQDQDSL3DSL1D3L@@3L3L3L3L3LQDQD1DQDSL3L3L3L3DQDQLQDQD3L3DSL1D3L@@3L3L3L3L3L1DQL3DQD3L3L3L3L3LQDSL1DQL3L3DSL1D3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQDQD3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQDQD3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1D3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQD3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQDQL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQDSL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ '))</body><body package="SpiderSolitaire">hearts_7	"Tools.UIMaskEditor new openOnClass: self andSelector: #hearts_7"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 3 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQDQDSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQDQDSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQL3DSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L1D3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L1D3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3LQL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3LQL3L3L1DQL3DQD3L3L3L3L3LQDSL1DQL3L3L3L3L3L@@3L3LQL3L3LQDQD1DQDSL3L3L3L3DQDQLQDQD3L3L3L3L3L@@3L3DSL3L3DQDQD1DQDQL3L3L3L1DQDQLQDQDSL3L3L3L3L@@3L3DSL3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3DSL3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3DSL3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3LQD1DSL3L1DQDQDQD3L3L3L3L3LQDQDQDQL3L3L3L3L3L@@3DQD1DQL3L3DQDQDQL3L3L3L3L3L1DQDQDSL3L3L3L3L3L@@3DQDQDQL3L3LQDQDSL3L3L3L3L3L3DQDQD3L3L3L3L3L3L@@3DQDQDQL3L3L1DQD3L3L3L3L3L3L3LQDQL3L3L3L3L3L3L@@3DQDQDQL3L3L3DQL3L3L3L3L3L3L3L1DSL3L3L3L3L3L3L@@3LQDQDSL3L3L3LSL3L3L3L3L3L3L3L3D3L3L3L3L3L3L3L@@3L1DQD3L3L3L3L3L3L3DQD3LQDSL3L3L3L3L3L3L3L3L3L@@3L3DQL3L3L3L3L3L3L1DQDSDQDQL3L3L3L3L3L3L3L3L3L@@3L3LSL3L3L3L3L3L3LQDQDSDQDQD3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3LQDQDQDQDQD3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3LQDQDQDQDQD3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3LQDQDQDQDQD3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3LQDQDQDQDQD3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L1DQDQDQDQL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L1DQDQDQDQL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3DQDQDQDSL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3LQDQDQD3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L1DQDQL3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3DQDSL3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3LQD3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L1L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L1DQL3DQD3L3L3L3L3LQDSL1DQL3L3L3L3L3L@@3L3L3L3L3LQDQD1DQDSL3L3L3L3DQDQLQDQD3L3L3L3L3L@@3L3L3L3L3DQDQD1DQDQL3L3L3L1DQDQLQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3L3L3L3L3L1DQDQDQD3L3L3L3L3LQDQDQDQL3L3L3L3L3L@@3L3L3L3L3L3DQDQDQL3L3L3L3L3L1DQDQDSL3L3L3L3L3L@@3L3L3L3L3L3LQDQDSL3L3L3L3L3L3DQDQD3L3L3L3L3L3L@@3L3L3L3L3L3L1DQD3L3L3L3L3L3L3LQDQL3L3L3L3L3L3L@@3L3L3L3L3L3L3DQL3L3L3L3L3L3L3L1DSL3L3L3L3L3L3L@@3L3L3L3L3L3L3LSL3L3L3L3L3L3L3L3D3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3D3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1DSL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQDQL3L@@3L3L3L3L3L3L3LSL3L3L3L3L3L3L3L3D3L3L3L3DQDQD3L@@3L3L3L3L3L3L3DQL3L3L3L3L3L3L3L1DSL3L3L1DQDQDSL@@3L3L3L3L3L3L1DQD3L3L3L3L3L3L3LQDQL3L3L1DQDQDSL@@3L3L3L3L3L3LQDQDSL3L3L3L3L3L3DQDQD3L3L1DQDQDSL@@3L3L3L3L3L3DQDQDQL3L3L3L3L3L1DQDQDSL3L1DQLQDSL@@3L3L3L3L3L1DQDQDQD3L3L3L3L3LQDQDQDQL3L3DQLQD3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3DSL3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3DSL3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3DSL3L@@3L3L3L3L3DQDQD1DQDQL3L3L3L1DQDQLQDQDSL3L3DSL3L@@3L3L3L3L3LQDQD1DQDSL3L3L3L3DQDQLQDQD3L3L1D3L3L@@3L3L3L3L3L1DQL3DQD3L3L3L3L3LQDSL1DQL3L3L1D3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1D3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQL3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQL3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DSL1D3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQDQD3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQDQD3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ '))</body><body package="SpiderSolitaire">hearts_8	"Tools.UIMaskEditor new openOnClass: self andSelector: #hearts_8"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 3 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L1DQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQDQDSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQL3DSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQL3DSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQL3DSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L1DQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQDQDSL3L1DQL3DQD3L3L3L3L3LQDSL1DQL3L3L3L3L3L@@3LQL3DSL3LQDQD1DQDSL3L3L3L3DQDQLQDQD3L3L3L3L3L@@3LQL3DSL3DQDQD1DQDQL3L3L3L1DQDQLQDQDSL3L3L3L3L@@3LQL3DSL3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3LQDQDSL3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L1DQD3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3LQD1DSL3L1DQDQDQD3L3L3L3L3LQDQDQDQL3L3L3L3L3L@@3DQD1DQL3L3DQDQDQL3L3L3L3L3L1DQDQDSL3L3L3L3L3L@@3DQDQDQL3L3LQDQDSL3L3L3L3L3L3DQDQD3L3L3L3L3L3L@@3DQDQDQL3L3L1DQD3L3L3L3L3L3L3LQDQL3L3L3L3L3L3L@@3DQDQDQL3L3L3DQL3L3L3L3L3L3L3L1DSL3L3L3L3L3L3L@@3LQDQDSL3L3L3LSL3L3L3L3L3L3L3L3D3L3L3L3L3L3L3L@@3L1DQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3DQL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3LSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L1DQL3DQD3L3L3L3L3LQDSL1DQL3L3L3L3L3L@@3L3L3L3L3LQDQD1DQDSL3L3L3L3DQDQLQDQD3L3L3L3L3L@@3L3L3L3L3DQDQD1DQDQL3L3L3L1DQDQLQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3L3L3L3L3L1DQDQDQD3L3L3L3L3LQDQDQDQL3L3L3L3L3L@@3L3L3L3L3L3DQDQDQL3L3L3L3L3L1DQDQDSL3L3L3L3L3L@@3L3L3L3L3L3LQDQDSL3L3L3L3L3L3DQDQD3L3L3L3L3L3L@@3L3L3L3L3L3L1DQD3L3L3L3L3L3L3LQDQL3L3L3L3L3L3L@@3L3L3L3L3L3L3DQL3L3L3L3L3L3L3L1DSL3L3L3L3L3L3L@@3L3L3L3L3L3L3LSL3L3L3L3L3L3L3L3D3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3LSL3L3L3L3L3L3L3L3D3L3L3L3L3L3L3L@@3L3L3L3L3L3L3DQL3L3L3L3L3L3L3L1DSL3L3L3L3L3L3L@@3L3L3L3L3L3L1DQD3L3L3L3L3L3L3LQDQL3L3L3L3L3L3L@@3L3L3L3L3L3LQDQDSL3L3L3L3L3L3DQDQD3L3L3L3L3L3L@@3L3L3L3L3L3DQDQDQL3L3L3L3L3L1DQDQDSL3L3L3L3L3L@@3L3L3L3L3L1DQDQDQD3L3L3L3L3LQDQDQDQL3L3L3L3L3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQD1DQDQL3L3L3L1DQDQLQDQDSL3L3L3L3L@@3L3L3L3L3LQDQD1DQDSL3L3L3L3DQDQLQDQD3L3L3L3L3L@@3L3L3L3L3L1DQL3DQD3L3L3L3L3LQDSL1DQL3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3D3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1DSL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQDQL3L@@3L3L3L3L3L3L3LSL3L3L3L3L3L3L3L3D3L3L3L3DQDQD3L@@3L3L3L3L3L3L3DQL3L3L3L3L3L3L3L1DSL3L3L1DQDQDSL@@3L3L3L3L3L3L1DQD3L3L3L3L3L3L3LQDQL3L3L1DQDQDSL@@3L3L3L3L3L3LQDQDSL3L3L3L3L3L3DQDQD3L3L1DQDQDSL@@3L3L3L3L3L3DQDQDQL3L3L3L3L3L1DQDQDSL3L1DQLQDSL@@3L3L3L3L3L1DQDQDQD3L3L3L3L3LQDQDQDQL3L3DQLQD3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3LQDQL3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3DQDQD3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3DSL1D3L@@3L3L3L3L3DQDQD1DQDQL3L3L3L1DQDQLQDQDSL3DSL1D3L@@3L3L3L3L3LQDQD1DQDSL3L3L3L3DQDQLQDQD3L3DSL1D3L@@3L3L3L3L3L1DQL3DQD3L3L3L3L3LQDSL1DQL3L3DQDQD3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQDQL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DSL1D3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DSL1D3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DSL1D3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQDQD3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQDQL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ '))</body><body package="SpiderSolitaire">hearts_9	"Tools.UIMaskEditor new openOnClass: self andSelector: #hearts_9"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 3 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L1DQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQDQDSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQL3DSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQL3DSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQL3DSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQL3DSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQDQDSL3L1DQL3DQD3L3L3L3L3LQDSL1DQL3L3L3L3L3L@@3L1DQDSL3LQDQD1DQDSL3L3L3L3DQDQLQDQD3L3L3L3L3L@@3L3L3DSL3DQDQD1DQDQL3L3L3L1DQDQLQDQDSL3L3L3L3L@@3L3L1DSL3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L1DQD3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L1DQL3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3LQD1DSL3L1DQDQDQD3L3L3L3L3LQDQDQDQL3L3L3L3L3L@@3DQD1DQL3L3DQDQDQL3L3L3L3L3L1DQDQDSL3L3L3L3L3L@@3DQDQDQL3L3LQDQDSL3L3L3L3L3L3DQDQD3L3L3L3L3L3L@@3DQDQDQL3L3L1DQD3L3L3L3L3L3L3LQDQL3L3L3L3L3L3L@@3DQDQDQL3L3L3DQL3L3L3L3L3L3L3L1DSL3L3L3L3L3L3L@@3LQDQDSL3L3L3LSL3L3L3L3L3L3L3L3D3L3L3L3L3L3L3L@@3L1DQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3DQL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3LSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L1DQL3DQD3L3L3L3L3LQDSL1DQL3L3L3L3L3L@@3L3L3L3L3LQDQD1DQDSL3L3L3L3DQDQLQDQD3L3L3L3L3L@@3L3L3L3L3DQDQD1DQDQL3L3L3L1DQDQLQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3L3L3L3L3L1DQDQDQD3L3L3L3L3LQDQDQDQL3L3L3L3L3L@@3L3L3L3L3L3DQDQDQL3L3L3L3L3L1DQDQDSL3L3L3L3L3L@@3L3L3L3L3L3LQDQDSL3L3L3L3L3L3DQDQD3L3L3L3L3L3L@@3L3L3L3L3L3L1DQD3L3DQD3LQDSL3LQDQL3L3L3L3L3L3L@@3L3L3L3L3L3L3DQL3L1DQDSDQDQL3L1DSL3L3L3L3L3L3L@@3L3L3L3L3L3L3LSL3LQDQDSDQDQD3L3D3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3LQDQDQDQDQD3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3LQDQDQDQDQD3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3LQDQDQDQDQD3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3LQDQDQDQDQD3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3LSL3L1DQDQDQDQL3L3D3L3L3L3L3L3L3L@@3L3L3L3L3L3L3DQL3L1DQDQDQDQL3L1DSL3L3L3L3L3L3L@@3L3L3L3L3L3L1DQD3L3DQDQDQDSL3LQDQL3L3L3L3L3L3L@@3L3L3L3L3L3LQDQDSL3LQDQDQD3L3DQDQD3L3L3L3L3L3L@@3L3L3L3L3L3DQDQDQL3L1DQDQL3L1DQDQDSL3L3L3L3L3L@@3L3L3L3L3L1DQDQDQD3L3DQDSL3LQDQDQDQL3L3L3L3L3L@@3L3L3L3L3LQDQDQDQDSL3LQD3L3DQDQDQDQD3L3L3L3L3L@@3L3L3L3L3LQDQDQDQDSL3L1L3L3DQDQDQDQD3L3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQD1DQDQL3L3L3L1DQDQLQDQDSL3L3L3L3L@@3L3L3L3L3LQDQD1DQDSL3L3L3L3DQDQLQDQD3L3L3L3L3L@@3L3L3L3L3L1DQL3DQD3L3L3L3L3LQDSL1DQL3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3D3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1DSL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQDQL3L@@3L3L3L3L3L3L3LSL3L3L3L3L3L3L3L3D3L3L3L3DQDQD3L@@3L3L3L3L3L3L3DQL3L3L3L3L3L3L3L1DSL3L3L1DQDQDSL@@3L3L3L3L3L3L1DQD3L3L3L3L3L3L3LQDQL3L3L1DQDQDSL@@3L3L3L3L3L3LQDQDSL3L3L3L3L3L3DQDQD3L3L1DQDQDSL@@3L3L3L3L3L3DQDQDQL3L3L3L3L3L1DQDQDSL3L1DQLQDSL@@3L3L3L3L3L1DQDQDQD3L3L3L3L3LQDQDQDQL3L3DQLQD3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3L3L3L3L3LQDQDQDQDSL3L3L3L3DQDQDQDQD3L3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L3L3L3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3L1DQL3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3LQDQL3L@@3L3L3L3L3DQDQDQDQDQL3L3L3L1DQDQDQDQDSL3DQL3L3L@@3L3L3L3L3DQDQD1DQDQL3L3L3L1DQDQLQDQDSL3DSL3L3L@@3L3L3L3L3LQDQD1DQDSL3L3L3L3DQDQLQDQD3L3DQDQL3L@@3L3L3L3L3L1DQL3DQD3L3L3L3L3LQDSL1DQL3L3DQDQD3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DSL1D3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DSL1D3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DSL1D3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DSL1D3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQDQD3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQDQL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ '))</body><body package="SpiderSolitaire">hearts_ace	"Tools.UIMaskEditor new openOnClass: self andSelector: #hearts_ace"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 3 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L1L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L1L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3LQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3LQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3DSDSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3DSDSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L1D3LQL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L1DQDQL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQDQDQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQL3L1D3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3DQD3LQDSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3DQD3LQDSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQD1DSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3DQD1DQL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3DQDQDQL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3DQDQDQL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3DQDQDQL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3LQDQDSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L1DQD3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3DQL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3LSL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3LQDSL1DQL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3DQDQLQDQD3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L1DQDQLQDQDSL3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L1DQDQDQDQDSL3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L1DQDQDQDQDSL3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L1DQDQDQDQDSL3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L1DQDQDQDQDSL3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3DQDQDQDQD3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3DQDQDQDQD3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3LQDQDQDQL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L1DQDQDSL3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3DQDQD3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3LQDQL3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L1DSL3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3D3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3D3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1DSL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQDQL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQDQD3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1DQDQDSL@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1DQDQDSL@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1DQDQDSL@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1DQLQDSL@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQLQD3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQD3LQDSL@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DQD3LQDSL@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQL3L1D3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQDQDQD3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1DQDQL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1D3LQL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DSDSL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3DSDSL3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQD3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3LQD3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L1L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@@3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L@ACL3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3L3P@H@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ '))</body><body package="SpiderSolitaire">hearts_jack	"Tools.UIMaskEditor new openOnClass: self andSelector: #hearts_jack"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 3 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 8191)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedStringbody><body package="SpiderSolitaire">hearts_king	"Tools.UIMaskEditor new openOnClass: self andSelector: #hearts_king"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 3 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedStringbody><body package="SpiderSolitaire">hearts_queen	"Tools.UIMaskEditor new openOnClass: self andSelector: #hearts_queen"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 3 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedStringbody><body package="SpiderSolitaire">spades_10	"Tools.UIMaskEditor new openOnClass: self andSelector: #spades_10"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 2 bitsPerPixel: 2 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'P@@@@@@@@@@@@@@@@@@@@@@D@@@:*********************+@@@B**********************(@@@J********************** @@@(J@J*******************@@@B  @J******************(@@@JBB ******************* @@@(HJB*******************@@@B  (J******************(@@@JBB ******************* @@@(HJB***J*******(*******@@@B  (J** J*******@******(@@@JBB **(@J****** @****** @@@(HJB**@@J*****(@@******@@@B  @J* @@J*****@@@*****(@@@JB B*(@@@J**** @@@***** @@@*****@@@@J***(@@@@*****@@@B****(@@@@**** @@@B****(@@@J****@@@@@***(@@@@B**** @@@**J*(@@@@B*** @@@@J****@@@B* J* @@@@J*J*@@@@@****(@@@J(@J*@@"@@* J(@BH@B**** @@@*@@J*@JJ@J(@J(@((@*****@@@B @@J** J**@@J**@******(@@@J@@@**(@J* @@J* @****** @@@(@@B*****(@@@J*********@@@B(H ******@@@@J********(@@@J*@******(@@@@********* @@@*(B******@@@@@*********@@@B********(@@@@B********(@@@J******** @@@@J******** @@@*******J*@@"@@*(*******@@@B****** J*@JJ@J*@******(@@@J*****(@J** J** @****** @@@******@@J*(@J*(@@******@@@B***** @@J*****@@@*****(@@@J****(@@@J**** @@@***** @@@*****@@@@J***(@@@@*****@@@B****(@@@@**** @@@B****(@@@J****@@@@@***(@@@@B**** @@@****(@@@@B*** @@@@J****@@@B**** @@@@J***@@@@@****(@@@J****@@"@@***(@BH@B**** @@@*****@JJ@J***(@((@*****@@@B****** J*******@******(@@@J*****(@J****** @****** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B******@B******(@J*****(@@@J******@*******(B****** @@@*****@JJ@J***(@((@*****@@@B**** @H @J***@@"@@****(@@@J****@@@@@***(@@@@B**** @@@****(@@@@B*** @@@@J****@@@B**** @@@@J***@@@@@****(@@@J**** @@@B****@@@@J**** @@@*****@@@@J***(@@@@*****@@@B*****@@@B****(@@@J****(@@@J*****@@@*****(@@B***** @@@******@@J*(@J*(@@******@@@B******@B**(B**(@J*****(@@@J******@*(@((@*(B****** @@@*******J*@@"@@*(*******@@@B********(@@@@B********(@@@J******** @@@@J******** @@@*********@@@@@****** J*@@@B*********@@@@J******@*(@@@J********(@@@@******BHJ @@@*********(@@@J***** @@J@@@B******@B*(@@B*(@J**@@@(@@@J******@**(@@**(B**(@@B @@@*****@JJ@J(@J(@((@*(@@*@@@B**** @H @J(B*@@"@@*(@J(@@@J****@@@@@*(*(@@@@B*(B* @@@****(@@@@B*** @@@@J*(**@@@B**** @@@@J***@@@@@****(@@@J**** @@@B****@@@@J**** @@@*****@@@@J***(@@@@*****@@@B*****@@@B****(@@@J* B (@@@J*****@@@*****(@@B*(@BB @@@******@@J*****(@@** (HJ@@@B******@B******(@J**B  (@@@J******@*******(B**(JBB @@@*******J*******(*** (HJ@@@B*******************B  (@@@J******************(JBB @@@******************* (HJ@@@B*******************B  (@@@J******************(@BB @@@*******************(@(J@@@B**********************(@@@J********************** @@@:*********************+@@@D@@@@@@@@@@@@@@@@@@@@@@A@@@'))</body><body package="SpiderSolitaire">spades_2	"Tools.UIMaskEditor new openOnClass: self andSelector: #spades_2"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 2 bitsPerPixel: 2 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedStringbody><body package="SpiderSolitaire">spades_3	"Tools.UIMaskEditor new openOnClass: self andSelector: #spades_3"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 2 bitsPerPixel: 2 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedStringbody><body package="SpiderSolitaire">spades_4	"Tools.UIMaskEditor new openOnClass: self andSelector: #spades_4"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 2 bitsPerPixel: 2 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'P@@@@@@@@@@@@@@@@@@@@@@D@@@:*********************+@@@B**********************(@@@J********************** @@@** ********************@@@B*(B*******************(@@@J*@J******************* @@@* @********************@@@B(BB*******************(@@@J@(J******************* @@@(@@B***J*******(*******@@@B @@J** J*******@******(@@@J*(J**(@J****** @****** @@@** ***@@J*****(@@******@@@B*(@** @@J*****@@@*****(@@@J* B*(@@@J**** @@@***** @@@*****@@@@J***(@@@@*****@@@B****(@@@@**** @@@B****(@@@J****@@@@@***(@@@@B**** @@@**J*(@@@@B*** @@@@J****@@@B* J* @@@@J***@@@@@****(@@@J(@J*@@"@@***(@BH@B**** @@@*@@J*@JJ@J***(@((@*****@@@B @@J** J*******@******(@@@J@@@**(@J****** @****** @@@(@@B*******************@@@B(H *******************(@@@J*@******************** @@@*(B********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@******************** J*@@@B********************@*(@@@J*******************BHJ @@@******************* @@J@@@B******@B******(@J**@@@(@@@J******@*******(B**(@@B @@@*****@JJ@J***(@((@*(@@*@@@B**** @H @J***@@"@@*(@J(@@@J****@@@@@***(@@@@B*(B* @@@****(@@@@B*** @@@@J*(**@@@B**** @@@@J***@@@@@****(@@@J**** @@@B****@@@@J**** @@@*****@@@@J***(@@@@*****@@@B*****@@@B****(@@@J* B*(@@@J*****@@@*****(@@B**@J* @@@******@@J*****(@@***B**@@@B******@B******(@J**(J*(@@@J******@*******(B**(@@B @@@*******J*******(*** @@J@@@B*******************(J@(@@@J*******************  J @@@********************@B*@@@B*******************(@*(@@@J******************* J* @@@********************B**@@@B**********************(@@@J********************** @@@:*********************+@@@D@@@@@@@@@@@@@@@@@@@@@@A@@@'))</body><body package="SpiderSolitaire">spades_5	"Tools.UIMaskEditor new openOnClass: self andSelector: #spades_5"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 2 bitsPerPixel: 2 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'P@@@@@@@@@@@@@@@@@@@@@@D@@@:*********************+@@@B**********************(@@@J********************** @@@(@@********************@@@B @B*******************(@@@JB********************* @@@(J*********************@@@B @J*******************(@@@J@@J******************* @@@** ****J*******(*******@@@B**B*** J*******@******(@@@JB(J**(@J****** @****** @@@(J ***@@J*****(@@******@@@B @B** @@J*****@@@*****(@@@J @**(@@@J**** @@@***** @@@*****@@@@J***(@@@@*****@@@B****(@@@@**** @@@B****(@@@J****@@@@@***(@@@@B**** @@@**J*(@@@@B*** @@@@J****@@@B* J* @@@@J***@@@@@****(@@@J(@J*@@"@@***(@BH@B**** @@@*@@J*@JJ@J***(@((@*****@@@B @@J** J*******@******(@@@J@@@**(@J****** @****** @@@(@@B*******************@@@B(H *******************(@@@J*@******************** @@@*(B********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J**********(*********** @@@***********@***********@@@B********** @**********(@@@J*********(@@********** @@@**********@@@**********@@@B********* @@@*********(@@@J********(@@@@********* @@@********* @@@B*********@@@B********(@@@@B********(@@@J******** @@@@J******** @@@*********@@@@@*********@@@B********(@BH@B********(@@@J********(@((@********* @@@***********@***********@@@B********** @**********(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@******************** J*@@@B********************@*(@@@J*******************BHJ @@@******************* @@J@@@B******@B******(@J**@@@(@@@J******@*******(B**(@@B @@@*****@JJ@J***(@((@*(@@*@@@B**** @H @J***@@"@@*(@J(@@@J****@@@@@***(@@@@B*(B* @@@****(@@@@B*** @@@@J*(**@@@B**** @@@@J***@@@@@****(@@@J**** @@@B****@@@@J**** @@@*****@@@@J***(@@@@*****@@@B*****@@@B****(@@@J*(@J(@@@J*****@@@*****(@@B**@@J @@@******@@J*****(@@**(J *@@@B******@B******(@J** *B(@@@J******@*******(B***B** @@@*******J*******(***(J**@@@B******************* @B(@@@J******************* @J @@@********************* *@@@B*********************B(@@@J*******************@@J @@@*******************(@@*@@@B**********************(@@@J********************** @@@:*********************+@@@D@@@@@@@@@@@@@@@@@@@@@@A@@@'))</body><body package="SpiderSolitaire">spades_6	"Tools.UIMaskEditor new openOnClass: self andSelector: #spades_6"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 2 bitsPerPixel: 2 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'P@@@@@@@@@@@@@@@@@@@@@@D@@@:*********************+@@@B**********************(@@@J********************** @@@*(@********************@@@B*@B*******************(@@@J J******************** @@@*B*********************@@@B(@B*******************(@@@J @B******************* @@@*B(J***J*******(*******@@@B(J *** J*******@******(@@@J *B**(@J****** @****** @@@*B(J**@@J*****(@@******@@@B(@@** @@J*****@@@*****(@@@J(@J*(@@@J**** @@@***** @@@*****@@@@J***(@@@@*****@@@B****(@@@@**** @@@B****(@@@J****@@@@@***(@@@@B**** @@@**J*(@@@@B*** @@@@J****@@@B* J* @@@@J***@@@@@****(@@@J(@J*@@"@@***(@BH@B**** @@@*@@J*@JJ@J***(@((@*****@@@B @@J** J*******@******(@@@J@@@**(@J****** @****** @@@(@@B*******************@@@B(H *******************(@@@J*@******************** @@@*(B********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J******"********J****** @@@******(B******* J******@@@B******@B******(@J*****(@@@J***** @B******@@J***** @@@*****(@@B***** @@J*****@@@B*****@@@B****(@@@J****(@@@J**** @@@B****@@@@J**** @@@*****@@@@J***(@@@@*****@@@B**** @@@@J***@@@@@****(@@@J****@@@@@***(@@@@B**** @@@****(@@@@B*** @@@@J****@@@B**** @H @J***@@"@@****(@@@J**** B" B****@JJ@J**** @@@******(B******* J******@@@B******@B******(@J*****(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@******************** J*@@@B********************@*(@@@J*******************BHJ @@@******************* @@J@@@B******@B******(@J**@@@(@@@J******@*******(B**(@@B @@@*****@JJ@J***(@((@*(@@*@@@B**** @H @J***@@"@@*(@J(@@@J****@@@@@***(@@@@B*(B* @@@****(@@@@B*** @@@@J*(**@@@B**** @@@@J***@@@@@****(@@@J**** @@@B****@@@@J**** @@@*****@@@@J***(@@@@*****@@@B*****@@@B****(@@@J****(@@@J*****@@@*****(@@B** @* @@@******@@J*****(@@**(@@*@@@B******@B******(@J** *B(@@@J******@*******(B***B(J @@@*******J*******(***(J *@@@B******************* *B(@@@J*******************@@J @@@********************@@*@@@B*********************B(@@@J******************** J @@@********************@B*@@@B*******************(@*(@@@J********************** @@@:*********************+@@@D@@@@@@@@@@@@@@@@@@@@@@A@@@'))</body><body package="SpiderSolitaire">spades_7	"Tools.UIMaskEditor new openOnClass: self andSelector: #spades_7"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 2 bitsPerPixel: 2 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'P@@@@@@@@@@@@@@@@@@@@@@D@@@:*********************+@@@B**********************(@@@J********************** @@@*@@J*******************@@@B(@@*******************(@@@J *B******************* @@@** ********************@@@B**B*******************(@@@J* ******************** @@@**B****J*******(*******@@@B*(J*** J*******@******(@@@J*B***(@J****** @****** @@@*(J***@@J*****(@@******@@@B* *** @@J*****@@@*****(@@@J*B**(@@@J**** @@@***** @@@*****@@@@J***(@@@@*****@@@B****(@@@@**** @@@B****(@@@J****@@@@@***(@@@@B**** @@@**J*(@@@@B*** @@@@J****@@@B* J* @@@@J***@@@@@****(@@@J(@J*@@"@@***(@BH@B**** @@@*@@J*@JJ@J***(@((@*****@@@B @@J** J*******@******(@@@J@@@**(@J****** @****** @@@(@@B*******************@@@B(H *******************(@@@J*@********(*********** @@@*(B********@***********@@@B********** @**********(@@@J*********(@@********** @@@**********@@@**********@@@B********* @@@*********(@@@J********(@@@@********* @@@********* @@@B*********@@@B********(@@@@B********(@@@J******** @@@@J******** @@@*********@@@@@*********@@@B********(@BH@B********(@@@J********(@((@********* @@@***********@***********@@@B******(*** @***"******(@@@J******@*******(B****** @@@****** @*******@B******@@@B*****(@@****** @B*****(@@@J*****@@@*****(@@B***** @@@***** @@@*****@@@B*****@@@B****(@@@@**** @@@B****(@@@J**** @@@B****@@@@J**** @@@****(@@@@B*** @@@@J****@@@B**** @@@@J***@@@@@****(@@@J****@@@@@***(@@@@B**** @@@****(@BH@B*** @H @J****@@@B****(@((@**** B" B****(@@@J******@*******(B****** @@@****** @*******@B******@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B**********************(@@@J********************** @@@******************** J*@@@B********************@*(@@@J*******************BHJ @@@******************* @@J@@@B******@B******(@J**@@@(@@@J******@*******(B**(@@B @@@*****@JJ@J***(@((@*(@@*@@@B**** @H @J***@@"@@*(@J(@@@J****@@@@@***(@@@@B*(B* @@@****(@@@@B*** @@@@J*(**@@@B**** @@@@J***@@@@@****(@@@J**** @@@B****@@@@J**** @@@*****@@@@J***(@@@@*****@@@B*****@@@B****(@@@J**B*(@@@J*****@@@*****(@@B**(J* @@@******@@J*****(@@*** **@@@B******@B******(@J***B*(@@@J******@*******(B*** ** @@@*******J*******(****B**@@@B*******************(J*(@@@J*******************B** @@@*******************(J**@@@B*******************B(J(@@@J******************(@@* @@@******************* @B*@@@B**********************(@@@J********************** @@@:*********************+@@@D@@@@@@@@@@@@@@@@@@@@@@A@@@'))</body><body package="SpiderSolitaire">spades_8	"Tools.UIMaskEditor new openOnClass: self andSelector: #spades_8"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 2 bitsPerPixel: 2 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'P@@@@@@@@@@@@@@@@@@@@@@D@@@:*********************+@@@B**********************(@@@J********************** @@@* @********************@@@B(@@*******************(@@@J *B******************* @@@*B(J*******************@@@B(J *******************(@@@J(@J******************* @@@*@@J***J*******(*******@@@B(J *** J*******@******(@@@J *B**(@J****** @****** @@@*B(J**@@J*****(@@******@@@B(@@** @@J*****@@@*****(@@@J(@J*(@@@J**** @@@***** @@@*****@@@@J***(@@@@*****@@@B****(@@@@**** @@@B****(@@@J****@@@@@***(@@@@B**** @@@**J*(@@@@B*** @@@@J****@@@B* J* @@@@J***@@@@@****(@@@J(@J*@@"@@***(@BH@B**** @@@*@@J*@JJ@J***(@((@*****@@@B @@J** J*******@******(@@@J@@@**(@J****** @****** @@@(@@B*******************@@@B(H *******************(@@@J*@******************** @@@*(B********************@@@B**********************(@@@J********************** @@@*******J*******(*******@@@B****** J*******@******(@@@J*****(@J****** @****** @@@******@@J*****(@@******@@@B***** @@J*****@@@*****(@@@J****(@@@J**** @@@***** @@@*****@@@@J***(@@@@*****@@@B****(@@@@**** @@@B****(@@@J****@@@@@***(@@@@B**** @@@****(@@@@B*** @@@@J****@@@B**** @@@@J***@@@@@****(@@@J****@@"@@***(@BH@B**** @@@*****@JJ@J***(@((@*****@@@B****** J*******@******(@@@J*****(@J****** @****** @@@***********************@@@B**********************(@@@J********************** @@@***********************@@@B******@B******(@J*****(@@@J******@*******(B****** @@@*****@JJ@J***(@((@*****@@@B**** @H @J***@@"@@****(@@@J****@@@@@***(@@@@B**** @@@****(@@@@B*** @@@@J****@@@B**** @@@@J***@@@@@****(@@@J**** @@@B****@@@@J**** @@@*****@@@@J***(@@@@*****@@@B*****@@@B****(@@@J****(@@@J*****@@@*****(@@B***** @@@******@@J*****(@@******@@@B******@B******(@J*****(@@@J******@*******(B****** @@@*******J*******(*******@@@B**********************(@@@J********************** @@@******************** J*@@@B********************@*(@@@J*******************BHJ @@@******************* @@J@@@B******@B******(@J**@@@(@@@J******@*******(B**(@@B @@@*****@JJ@J***(@((@*(@@*@@@B**** @H @J***@@"@@*(@J(@@@J****@@@@@***(@@@@B*(B* @@@****(@@@@B*** @@@@J*(**@@@B**** @@@@J***@@@@@****(@@@J**** @@@B****@@@@J**** @@@*****@@@@J***(@@@@*****@@@B*****@@@B****(@@@J*(@J(@@@J*****@@@*****(@@B**@@J @@@******@@J*****(@@**(J *@@@B******@B******(@J** *B(@@@J******@*******(B***B(J @@@*******J*******(***(@@*@@@B*******************(@J(@@@J*******************B(J @@@*******************(J *@@@B******************* *B(@@@J*******************@@J @@@********************@B*@@@B**********************(@@@J********************** @@@:*********************+@@@D@@@@@@@@@@@@@@@@@@@@@@A@@@'))</body><body package="SpiderSolitaire">spades_9	"Tools.UIMaskEditor new openOnClass: self andSelector: #spades_9"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 2 bitsPerPixel: 2 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'P@@@@@@@@@@@@@@@@@@@@@@D@@@:*********************+@@@B**********************(@@@J********************** @@@* @********************@@@B(@@*******************(@@@J *B******************* @@@*B(J*******************@@@B(J *******************(@@@J *B******************* @@@*@@J***J*******(*******@@@B*@@*** J*******@******(@@@J**B**(@J****** @****** @@@** J**@@J*****(@@******@@@B*@B** @@J*****@@@*****(@@@J(@**(@@@J**** @@@***** @@@*****@@@@J***(@@@@*****@@@B****(@@@@**** @@@B****(@@@J****@@@@@***(@@@@B**** @@@**J*(@@@@B*** @@@@J****@@@B* J* @@@@J***@@@@@****(@@@J(@J*@@"@@***(@BH@B**** @@@*@@J*@JJ@J***(@((@*****@@@B @@J** J*******@******(@@@J@@@**(@J****** @****** @@@(@@B*******************@@@B(H *******************(@@@J*@******************** @@@*(B********************@@@B**********************(@@@J******"********J****** @@@******(B******* J******@@@B******@B******(@J*****(@@@J***** @B******@@J***** @@@*****(@@B***** @@J*****@@@B*****@@@B****(@@@J****(@@@J**** @@@B****@@@@J**** @@@*****@@@@J***(@@@@*****@@@B**** @@@@J***@@@@@****(@@@J****@@@@@*(*(@@@@B**** @@@****(@@@@B*@* @@@@J****@@@B**** @H @J @*@@"@@****(@@@J**** B" B(@@*@JJ@J**** @@@******(B**@@@** J******@@@B******@B* @@@*(@J*****(@@@J********(@@@@********* @@@********* @@@B*********@@@B********(@@@@B********(@@@J******** @@@@J******** @@@*********@@@@@*********@@@B********(@BH@B********(@@@J********(@((@********* @@@****** @***@***@B******@@@B****** J** @***@******(@@@J**** B" B****@JJ@J**** @@@****(@BH@B*** @H @J****@@@B**** @@@@J***@@@@@****(@@@J****@@@@@***(@@@@B**** @@@****(@@@@B*** @@@@J****@@@B****(@@@@**** @@@B****(@@@J**** @@@B****@@@@J**** @@@***** @@@*****@@@B*****@@@B***** @@J*****@@@*****(@@@J***** @B******@@J***** @@@****** @*******@B******@@@B****** J*******@******(@@@J******"********J****** @@@******************** J*@@@B********************@*(@@@J*******************BHJ @@@******************* @@J@@@B******@B******(@J**@@@(@@@J******@*******(B**(@@B @@@*****@JJ@J***(@((@*(@@*@@@B**** @H @J***@@"@@*(@J(@@@J****@@@@@***(@@@@B*(B* @@@****(@@@@B*** @@@@J*(**@@@B**** @@@@J***@@@@@****(@@@J**** @@@B****@@@@J**** @@@*****@@@@J***(@@@@*****@@@B*****@@@B****(@@@J**@J(@@@J*****@@@*****(@@B** @* @@@******@@J*****(@@**(B**@@@B******@B******(@J** **(@@@J******@*******(B***@@* @@@*******J*******(***(@@*@@@B******************* *B(@@@J*******************B(J @@@*******************(J *@@@B******************* *B(@@@J*******************@@J @@@********************@B*@@@B**********************(@@@J********************** @@@:*********************+@@@D@@@@@@@@@@@@@@@@@@@@@@A@@@'))</body><body package="SpiderSolitaire">spades_ace	"Tools.UIMaskEditor new openOnClass: self andSelector: #spades_ace"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 2 bitsPerPixel: 2 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedStringbody><body package="SpiderSolitaire">spades_jack	"Tools.UIMaskEditor new openOnClass: self andSelector: #spades_jack"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 3 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 8191)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedStringbody><body package="SpiderSolitaire">spades_king	"Tools.UIMaskEditor new openOnClass: self andSelector: #spades_king"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 3 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedStringbody><body package="SpiderSolitaire">spades_queen	"Tools.UIMaskEditor new openOnClass: self andSelector: #spades_queen"	&lt;resource: #image&gt;	^(Image extent: 71@96 depth: 3 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 4111 0)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedStringbody></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>Object</name><environment>Core</environment><super></super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Kernel-Objects</category><attributes><package>Kernel-Objects</package></attributes></class><class><name>SelectController</name><environment>UI</environment><super>UI.Controller</super><private>false</private><indexed-type>none</indexed-type><inst-vars>keyboardHook dispatcher </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>UIBasics-Controllers</category><attributes><package>UIBasics-Controllers</package></attributes></class><class><name>Model</name><environment>UI</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>dependents </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Kernel-Objects</category><attributes><package>Kernel-Objects</package></attributes></class><class><name>View</name><environment>UI</environment><super>Graphics.DependentPart</super><private>false</private><indexed-type>none</indexed-type><inst-vars>controller </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Interface-Framework</category><attributes><package>Interface-Framework</package></attributes></class><class><name>ApplicationModel</name><environment>UI</environment><super>UI.Model</super><private>false</private><indexed-type>none</indexed-type><inst-vars>builder uiSession eventHandlers </inst-vars><class-inst-vars>savedWindowInformation </class-inst-vars><imports></imports><category>UIBuilder-Framework</category><attributes><package>UIBuilder-Framework</package></attributes></class></st-source>