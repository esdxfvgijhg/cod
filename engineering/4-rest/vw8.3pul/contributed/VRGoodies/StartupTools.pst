<?xml version="1.0"?><st-source><!-- Name: StartupToolsComment: This package adds some tools for managing image startup.  The parcel loader will auto-load parcels from a config file.  To have actions take place, subclass Startup, and create a class side #startup method.  This method will be invoked on image startupDevelopmentPrerequisites: #(#(#any 'ImageConfig' ''))PackageName: StartupToolsParcel: #('StartupTools')ParcelName: StartupToolsPrerequisiteParcels: #(#('ImageConfig' ''))Version: (7.29,jamesr)Date: 10:28:13 AM November 19, 2015 --><time-stamp>From VisualWorksÂ®, 8.1 of July 17, 2015 on November 19, 2015 at 10:28:13 AM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>StartupProgress</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>canBeClosed logo textHolder </inst-vars><class-inst-vars>logo appSettingsHolder </class-inst-vars><imports></imports><category>UIApplications-New</category><attributes><package>StartupTools</package></attributes></class><class><name>Startup</name><environment>Smalltalk</environment><super>UI.Model</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>StartupTools</category><attributes><package>StartupTools</package></attributes></class><comment><class-id>Startup</class-id><body>This is a plain vanilla place-holder for system startup code.  Developers should subclass this class and add a class side #startup method.  All relevant system startup code should be placed there.Instance Variables:</body></comment><class><name>StartupParcelLoader</name><environment>Smalltalk</environment><super>Startup</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>StartupTools</category><attributes><package>StartupTools</package></attributes></class><comment><class-id>StartupParcelLoader</class-id><body>This class will look for a config file named 'parcels.ini' based on the setting of the VWCONFIG environment variable (defaults to ./config directory, if it exists).  It will read the list of (comma delimited) parcels there, and load them (from that directory, NOT from the parcel path).  i.e., the file should look like this:parcel1,parcel2,parcel3...No spaces, do not add the .pcl extension.Instance Variables:</body></comment><methods><class-id>StartupProgress</class-id> <category>interface opening</category><body package="StartupTools">interfaceSpecFor: aSymbol 	| spec extent |	spec := super interfaceSpecFor: aSymbol.	extent := logo extent.	spec window bounds extent: extent.	spec window max: extent.	^spec</body><body package="StartupTools">logoView	^logo</body><body package="StartupTools">openInterface: aSymbol 	^[super openInterface: aSymbol] on: GetWindowManagerUsagePolicy		do: [:ex | ex resume: MakeNewWindowManagerUsagePolicy new]</body><body package="StartupTools">postOpenWith: bldr	super postOpenWith: bldr. 	builder window windowManager activeControllerProcess priority: 51.</body></methods><methods><class-id>StartupProgress</class-id> <category>accessing</category><body package="StartupTools">canBeClosed	^canBeClosed</body><body package="StartupTools">canBeClosed: anObject	canBeClosed := anObject</body></methods><methods><class-id>StartupProgress</class-id> <category>interface closing</category><body package="StartupTools">requestForWindowClose	^self canBeClosed</body></methods><methods><class-id>StartupProgress</class-id> <category>initialize-release</category><body package="StartupTools">initialize	self canBeClosed: false.	logo := self class btfLogo.</body></methods><methods><class-id>StartupProgress</class-id> <category>aspects</category><body package="StartupTools">textHolder	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^textHolder isNil		ifTrue:			[textHolder := String new asValue]		ifFalse:			[textHolder]</body></methods><methods><class-id>StartupProgress</class-id> <category>api</category><body package="StartupTools">showString: aString 	| w |	(w := builder window) isNil ifTrue: [^self].		[self textHolder value: aString asText.	"makes sure logo overlap is repainted too:"	(self wrapperAt: #InputField1) 		ifNotNil: [:wr | wr invalidateRectangle: wr bounds]] 			uiEventNowFor: w</body></methods><methods><class-id>StartupProgress class</class-id> <category>api</category><body package="StartupTools">close	| win |	win := self singleInstance.	win isNil ifTrue: [^self].	(win model)		canBeClosed: true;		closeRequest</body><body package="StartupTools">example	"self example"	StartupProgress open.	StartupProgress show: 'foo'		while: 			[self busyMs: 500.			(1 to: 5) do: 					[:n | 					StartupProgress show: 'frobble ' , n printString while: [self busyMs: 500].					self busyMs: 300]].	self busyMs: 5000.	StartupProgress close</body><body package="StartupTools">open	^self raiseSingleInstance ifNil: [super open]</body><body package="StartupTools">show: aString while: aBlock 	| res |	self showString: aString , ' ...'.	res := aBlock value.	self showString: aString , ' done.'.	^res</body><body package="StartupTools">showString: aString	| win |	win := self singleInstance.	win isNil ifTrue:[^nil].	win model showString: aString</body></methods><methods><class-id>StartupProgress class</class-id> <category>resources</category><body package="StartupTools">btfLogo	"read from the file system, or default to old one"	| imageFile dir |	dir := 'images' asFilename.	imageFile := dir construct: (self appSettingsHolder logo).	^ imageFile exists		ifTrue: [ CachedImage on:  ( ImageReader fromFile: imageFile ) image ]		ifFalse: [ self oldBtfLogo ]</body></methods><methods><class-id>StartupProgress class</class-id> <category>private</category><body package="StartupTools">busyMs: anInteger 	| when |	when := anInteger * 1000 + Time microsecondClock.	[Time microsecondClock &lt; when] whileTrue</body><body package="StartupTools">singleInstance	Screen default 		allScheduledWindowsDo: [:each | (each model isKindOf: self) ifTrue: [^each]].	^nil</body></methods><methods><class-id>StartupProgress class</class-id> <category>accessing</category><body package="StartupTools">appSettingsHolder	^appSettingsHolder</body><body package="StartupTools">appSettingsHolder: anObject	appSettingsHolder := anObject</body><body package="StartupTools">logo	^logo</body><body package="StartupTools">logo: anObject	logo := anObject</body></methods><methods><class-id>Startup class</class-id> <category>system startup</category><body package="StartupTools">startup	"sends the #startup message to all subclasses"	self allSubclasses do: [:each | each startup]</body></methods><methods><class-id>StartupParcelLoader</class-id> <category>initialize-release</category><body package="StartupTools">from: aFile	| parcelList |	parcelList := (VRFileReader read: aFile into: Array) modelCollection first.	parcelList isEmpty		ifTrue: [^false].	^self loadParcelsFrom: parcelList</body></methods><methods><class-id>StartupParcelLoader</class-id> <category>private</category><body package="StartupTools">actuallyLoadParcelFile: parcelFile 		[[Parcel loadParcelFrom: parcelFile] on: Parcel parcelAlreadyLoadedSignal, CodeStorageError		do: [:ex | ex resume: true]] 			on: DuplicateBindingsError			do: [:ex | ex resume]</body><body package="StartupTools">parcelNameFrom: properties	| assocOrNil |	assocOrNil := properties detect: [:each | each key = #parcel] ifNone: [nil].	^assocOrNil isNil		ifTrue: ['']		ifFalse: [assocOrNil value]</body><body package="StartupTools">propertiesFrom: aFilename 	| properties propertyItems commentItem |	properties := [CodeReader new readInfoFromFileNamed: aFilename] 				on: OsError, CodeReader fileFormatSignal				do: [:ex | ex return: Dictionary new].	propertyItems := SortedCollection sortBlock: [:a :b | a key &lt;= b key].	properties 		keysAndValuesDo: [:key :value | propertyItems add: key -&gt; value].	propertyItems := propertyItems asOrderedCollection.	commentItem := propertyItems detect: [:some | some key = 'comment']				ifNone: [].	commentItem notNil 		ifTrue: 			[propertyItems remove: commentItem.			propertyItems addFirst: commentItem].	^propertyItems</body><body package="StartupTools">timestampFrom: properties	| assocOrNil |	assocOrNil := properties detect: [:each | each key = #timestamp] ifNone: [nil].	^assocOrNil isNil		ifTrue: [Timestamp now]		ifFalse: [assocOrNil value]</body></methods><methods><class-id>StartupParcelLoader</class-id> <category>testing</category><body package="StartupTools">shouldLoad: parcelFilename	| name pcl loadedTS toLoadTS props |	props := self propertiesFrom: parcelFilename.	name := self parcelNameFrom: props.	pcl := Parcel parcelNamed: name.	pcl ifNil: [^true].	loadedTS := pcl properties at: #timestamp.	toLoadTS := self timestampFrom: props.	^toLoadTS &gt; loadedTS</body></methods><methods><class-id>StartupParcelLoader</class-id> <category>parcel-loading</category><body package="StartupTools">loadAllParcelsFrom: aDir	"load all my starting parcels from the specified dir"	self loadAllParcelsFrom: aDir sendUpdatesTo: Transcript usingMessage: #show:</body><body package="StartupTools">loadAllParcelsFrom: aDir sendUpdatesTo: anObject usingMessage: aMessage	"load all my starting parcels from the specified dir"	| aList |	aDir asFilename exists ifFalse: [^false].	Parcel searchPathModel value addFirst: (PortableFilename named: aDir).	aList := aDir asFilename filesMatching: '*.pcl'.	^[aList do: [:each |		| loadFromFile  |		loadFromFile := each asFilename.		(loadFromFile exists and: [self shouldLoad: loadFromFile])			ifTrue: [anObject notNil						ifTrue: [anObject perform: aMessage with: 'Loading: ', each, '....'].					self actuallyLoadParcelFile: loadFromFile]].	true]	on: Error	do: [:ex | false]</body><body package="StartupTools">loadParcelsFrom: aList	self loadParcelsFrom: aList sendUpdatesTo: Transcript usingMessage: #show:</body><body package="StartupTools">loadParcelsFrom: aList sendUpdatesTo: anObject usingMessage: aMessage	| parcelDir list |	parcelDir := CEnvironment getenv: 'PARCELDIR'.	parcelDir isEmpty		ifTrue: [parcelDir := 'config'].	parcelDir asFilename exists		ifFalse: [parcelDir := 'app'].	parcelDir asFilename exists ifFalse: [^false].	list := List new.	list add: (PortableFilename named: parcelDir).	Parcel searchPathModel value: list.	^[aList do: [:each |		| loadFromFile pfile |		pfile := each, '.pcl'.		loadFromFile := parcelDir asFilename construct: pfile.		(loadFromFile exists and: [self shouldLoad: loadFromFile])			ifTrue: [anObject notNil						ifTrue: [anObject perform: aMessage with: 'Loading: ', each, '....'].					Parcel loadParcelFrom: loadFromFile]].	true]	on: Error	do: [:ex | false]</body></methods><methods><class-id>StartupParcelLoader class</class-id> <category>system startup</category><body package="StartupTools">startup	"uncomment in order to enable parcel loading from $(VWCONFIG)/parcels.ini 	at system startup"	^self loadStartingParcels</body><body package="StartupTools">writeFileFor: collection	"creates a load file"	| stream aFile |	aFile := self getDefaultFilename.	aFile asFilename exists		ifTrue: [^self].	stream := aFile asFilename writeStream.	collection do: [:each |		stream nextPutAll: each.		each = collection last			ifFalse: [stream nextPut: $,]].	stream close</body></methods><methods><class-id>StartupParcelLoader class</class-id> <category>api</category><body package="StartupTools">loadAllParcelsFrom: aDir	^self  loadAllParcelsFrom: aDir sendUpdatesTo: Transcript usingMessage: #show:</body><body package="StartupTools">loadAllParcelsFrom: aDir sendUpdatesTo: anObject usingMessage: aMessage	^self new loadAllParcelsFrom: aDir  sendUpdatesTo: anObject usingMessage: aMessage</body><body package="StartupTools">loadStartingParcels	| configFile |	configFile := DictionaryFileReader getConfigFileFromBase: 'parcels.ini'.	configFile asFilename exists		ifFalse: [^false].	^self new from: configFile</body></methods><methods><class-id>StartupParcelLoader class</class-id> <category>private</category><body package="StartupTools">getDefaultFilename	| dir |	dir := CEnvironment getenv: 'VWCONFIG'.	dir isEmpty		ifTrue: [dir := 'config'.				dir asFilename exists					ifFalse: [dir  := 'app']].	^dir asFilename construct: 'parcels.ini'</body></methods><methods><class-id>Store.PundleAccess</class-id> <category>overrides</category><body package="StartupTools">overriddenClass: aClass	"we so don't care"</body><body package="StartupTools">overriddenNameSpace: aValue 	"have to add this too.  Grr"</body><body package="StartupTools">overriddenSelector: selector class: aClass	"we so don't care"</body><body package="StartupTools">overriddenStatic: key in: aNameSpace	"we so don't care"</body></methods><methods><class-id>StartupProgress class</class-id> <category>resources</category><body package="StartupTools">oldBtfLogo	"UIMaskEditor new openOnClass: self andSelector: #oldBtfLogo"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 267@133 depth: 6 bitsPerPixel: 8 palette: (Graphics.MappedPalette withColors: ((Core.Array new: 62) at: 1 put: Graphics.ColorValue black; at: 2 put: (Graphics.ColorValue scaledRed: 8191 scaledGreen: 5139 scaledBlue: 4111); at: 3 put: (Graphics.ColorValue scaledRed: 4111 scaledGreen: 4111 scaledBlue: 2055); at: 4 put: (Graphics.ColorValue scaledRed: 6167 scaledGreen: 4111 scaledBlue: 0); at: 5 put: (Graphics.ColorValue scaledRed: 5139 scaledGreen: 5139 scaledBlue: 0); at: 6 put: (Graphics.ColorValue scaledRed: 5139 scaledGreen: 3083 scaledBlue: 2055); at: 7 put: (Graphics.ColorValue scaledRed: 8191 scaledGreen: 4111 scaledBlue: 2055); at: 8 put: (Graphics.ColorValue scaledRed: 2055 scaledGreen: 3083 scaledBlue: 2055); at: 9 put: (Graphics.ColorValue scaledRed: 3083 scaledGreen: 4111 scaledBlue: 0); at: 10 put: (Graphics.ColorValue scaledRed: 3083 scaledGreen: 2055 scaledBlue: 2055); at: 11 put: (Graphics.ColorValue scaledRed: 4111 scaledGreen: 3083 scaledBlue: 0); at: 12 put: (Graphics.ColorValue scaledRed: 5139 scaledGreen: 2055 scaledBlue: 0); at: 13 put: (Graphics.ColorValue scaledRed: 2055 scaledGreen: 2055 scaledBlue: 0); at: 14 put: (Graphics.ColorValue scaledRed: 3083 scaledGreen: 1027 scaledBlue: 0); at: 15 put: (Graphics.ColorValue scaledRed: 4111 scaledGreen: 0 scaledBlue: 0); at: 16 put: (Graphics.ColorValue scaledRed: 1027 scaledGreen: 3083 scaledBlue: 0); at: 17 put: (Graphics.ColorValue scaledRed: 5139 scaledGreen: 5139 scaledBlue: 4111); at: 18 put: (Graphics.ColorValue scaledRed: 6167 scaledGreen: 4111 scaledBlue: 4111); at: 19 put: (Graphics.ColorValue scaledRed: 6167 scaledGreen: 6167 scaledBlue: 2055); at: 20 put: (Graphics.ColorValue scaledRed: 0 scaledGreen: 1027 scaledBlue: 0); at: 21 put: (Graphics.ColorValue scaledRed: 1027 scaledGreen: 0 scaledBlue: 0); at: 22 put: (Graphics.ColorValue scaledRed: 8191 scaledGreen: 6167 scaledBlue: 4111); at: 23 put: (Graphics.ColorValue scaledRed: 6167 scaledGreen: 8191 scaledBlue: 4111); at: 24 put: (Graphics.ColorValue scaledRed: 8191 scaledGreen: 6167 scaledBlue: 8191); at: 25 put: (Graphics.ColorValue scaledRed: 6167 scaledGreen: 8191 scaledBlue: 8191); at: 26 put: (Graphics.ColorValue scaledRed: 4111 scaledGreen: 5139 scaledBlue: 2055); at: 27 put: (Graphics.ColorValue scaledRed: 5139 scaledGreen: 4111 scaledBlue: 2055); at: 28 put: (Graphics.ColorValue scaledRed: 6167 scaledGreen: 5139 scaledBlue: 0); at: 29 put: (Graphics.ColorValue scaledRed: 6167 scaledGreen: 3083 scaledBlue: 2055); at: 30 put: (Graphics.ColorValue scaledRed: 3083 scaledGreen: 3083 scaledBlue: 2055); at: 31 put: (Graphics.ColorValue scaledRed: 4111 scaledGreen: 4111 scaledBlue: 0); at: 32 put: (Graphics.ColorValue scaledRed: 5139 scaledGreen: 3083 scaledBlue: 0); at: 33 put: (Graphics.ColorValue scaledRed: 8191 scaledGreen: 4111 scaledBlue: 0); at: 34 put: Graphics.ColorValue cyan; at: 35 put: (Graphics.ColorValue scaledRed: 2055 scaledGreen: 3083 scaledBlue: 0); at: 36 put: (Graphics.ColorValue scaledRed: 3083 scaledGreen: 2055 scaledBlue: 0); at: 37 put: (Graphics.ColorValue scaledRed: 6167 scaledGreen: 5139 scaledBlue: 4111); at: 38 put: (Graphics.ColorValue scaledRed: 5139 scaledGreen: 6167 scaledBlue: 4111); at: 39 put: (Graphics.ColorValue scaledRed: 1027 scaledGreen: 1027 scaledBlue: 0); at: 40 put: (Graphics.ColorValue scaledRed: 0 scaledGreen: 2055 scaledBlue: 0); at: 41 put: (Graphics.ColorValue scaledRed: 2055 scaledGreen: 0 scaledBlue: 0); at: 42 put: (Graphics.ColorValue scaledRed: 5139 scaledGreen: 5139 scaledBlue: 2055); at: 43 put: (Graphics.ColorValue scaledRed: 4111 scaledGreen: 4111 scaledBlue: 4111); at: 44 put: (Graphics.ColorValue scaledRed: 6167 scaledGreen: 4111 scaledBlue: 2055); at: 45 put: (Graphics.ColorValue scaledRed: 8191 scaledGreen: 6167 scaledBlue: 2055); at: 46 put: (Graphics.ColorValue scaledRed: 8191 scaledGreen: 8191 scaledBlue: 4111); at: 47 put: (Graphics.ColorValue scaledRed: 3083 scaledGreen: 4111 scaledBlue: 2055); at: 48 put: (Graphics.ColorValue scaledRed: 5139 scaledGreen: 4111 scaledBlue: 0); at: 49 put: (Graphics.ColorValue scaledRed: 4111 scaledGreen: 3083 scaledBlue: 2055); at: 50 put: (Graphics.ColorValue scaledRed: 6167 scaledGreen: 3083 scaledBlue: 0); at: 51 put: Graphics.ColorValue white; at: 52 put: (Graphics.ColorValue scaledRed: 5139 scaledGreen: 2055 scaledBlue: 2055); at: 53 put: (Graphics.ColorValue scaledRed: 2055 scaledGreen: 2055 scaledBlue: 2055); at: 54 put: (Graphics.ColorValue scaledRed: 3083 scaledGreen: 3083 scaledBlue: 0); at: 55 put: (Graphics.ColorValue scaledRed: 4111 scaledGreen: 2055 scaledBlue: 0); at: 56 put: (Graphics.ColorValue scaledRed: 6167 scaledGreen: 6167 scaledBlue: 4111); at: 57 put: (Graphics.ColorValue scaledRed: 1027 scaledGreen: 2055 scaledBlue: 0); at: 58 put: (Graphics.ColorValue scaledRed: 2055 scaledGreen: 1027 scaledBlue: 0); at: 59 put: (Graphics.ColorValue scaledRed: 6167 scaledGreen: 6167 scaledBlue: 8191); at: 60 put: (Graphics.ColorValue scaledRed: 3083 scaledGreen: 0 scaledBlue: 0); at: 61 put: (Graphics.ColorValue scaledRed: 6167 scaledGreen: 5139 scaledBlue: 2055); at: 62 put: (Graphics.ColorValue scaledRed: 5139 scaledGreen: 4111 scaledBlue: 4111); yourself)) usingBits: (ByteArray fromPackedStringamplt;!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!DQ@]@"L5GP05G"L)DB$/M2X8HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HP@!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!JR&lt;^G!45K2$BMQ8ZHBD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!F#T]MP05C@HHI!8^G#T&amp;I"H!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD@HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HQ8JMRL#MQ(^MQ8^G!8BB"&lt;!HRD!HRD!HRD!HRD!HRD!HRD9@@09B#0!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HS@8MRL#C@0LNC &amp;@BX&amp;D00!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!@BD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD5CBLBG H#C@(/MRLJG (JG (CHRD!HRD!HRD!HRD!HP@@@@@@@BX@@@@&amp;B"D!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HP(MCBX&amp;@@@@@BX&amp;@AL@@@@@I!LS@BX@@BX@@BX@D3 !HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HP@!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!MST]CBX9H2&lt;BH005GSTJG"L#H3TLHRD!HRD!HRD!HQL@@@@@@@@@@@@@@@@TCBD!HRD!HRD!HRL9I1PT@@@@D0@TI @@@@@@I @&amp;I"XSI"X&amp;@@@&amp;I @T@@@@@@@L@@@SC@@LI"XLNBL!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD@HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRL&amp;CCT#G 0#H3TJM"LMH00#MRLMNRLLM"D!HRD!HRD@@@@@@@@@@@@@E@@@@@@@@@@@I"X@@@0@@@@T@@@@@@@@@AP@@@@@I @&amp;@BX9I!LTI"X@I"X&amp;@@@@D0@@I @@I @&amp;I!PLI"XLCC$LCBD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HP@!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!@BD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD#NRLJH00LCRL#MSTJB"LLH3TJMST5F!8LCRD!HRD!@@@@E@@&amp;EBX&amp;@@@@@@@@@BX&amp;@@@L@@@@@BX@@@@T@@@@@BX@@@@S@@@@I @@I"X&amp;I"X&amp;I"X&amp;@BX@@AP@@@@@C@09@@@TI"X&amp;C@0SI"X&amp;EBX5HRD!HRD!HRD!HRD!HRD!HRD!HRD!HP@@@BD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HP@!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!LBL"MP09NRLJMRL#H3T#MS@#B (^B (JMRLJI#$#B3T9@@@&amp;NRXL@@@@@@@@@@@@@AP@I"X@@@@T@BXL@BX&amp;I!P&amp;I 0@@@@TI 0TD2X&amp;@BXLCAL&amp;I"X9I @@@@@&amp;GRXLCC 9I#$&amp;C@0LNQPLH2X#I"X&amp;I#X!HRD!HRD!HRD!HRD!HRD!HP@@HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD@HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HSTLH2LLMP(5H2XLC@0#H3@JB!8ZB#T#CCT9E@@@@@@T@@@@@BX@I"X@@C$@@@@&amp;C@@T@@@@@@@SI!P@C@@LCBXLI 0@@@@@I"X&amp;I 08I @&amp;I!P&amp;I"X8CBX@@BX&amp;E@0@NBXLNRX&amp;CCT9CBL]JQ8TEAP9NST9I 0&amp;B L!HRD!HRD!HRD!HP@9HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!@BD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD5H2LLB#0ZH2X9H2L5G!8JL@(BJPHJGRL#NQPT@@@@NRX@CBX&amp;@@@T@@@9E@@@I @@@BX&amp;@APL@AP@I 0&amp;NRX@I"XT@AL@I 0#H2H9C@0&amp;MRX&amp;N@0&amp;C@0&amp;H"L9D2X9I"X&amp;I# 9N@05I"L&amp;OA8^CC$&amp;CBX#NSTTH3T#MP(/HRD!HRD!HP@@HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HP@!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!CBLLCCT"I @9CBL5NP(JB!8BG"$$F!(0H3$9NP0@@BL@NST@I"X9@BXT@@@&amp;C@0&amp;H0@@E@@@I"X"I"X8NRLL@BXLCBX5C@0BCC 5CC #H009I 05MP05H009CCT#C@0LC@0&amp;CC$LMST]MPHZK1(LI!P9CBXTC@(#MP(5B (^B#D!HS0@HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD@HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HP09NRX&amp;H3T#H009NST#B (JF!8$IA@ZB"LLMP(JCBX&amp;CBL&amp;I 0LH3$#MRXSI#T#B@0#CBL&amp;I"X#CBX9I 09B"XLMST&amp;MP0#G#TLMP0&amp;NCT5A00I@!8JMP(Z@!(^G!8ZF (JMPH]C@05MP(BJPH^L@0&amp;I"X#NS@0NST#CA(&lt;OB$/OB$J@0X!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!@BD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD"I 0#B!85B (JH2L5MP(0K2&lt;ZIA@$DC@5CBL5B (#H3TZB 0LMRL5MPHLH00JH0H5MP0#CBL&amp;MSTLMQ45@#T5H3T^MST#NS ICA4#F (0G"&lt;5F!85MP(5B!(5F"$JB#0^G HZJSTBB"$^JR$/G (0H009CBLJG"&lt;^F"L7I@0JG",RD!T2G"D!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HP@!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!H"L5H00&amp;I#$&amp;N@0LC@0JB!(^F"$$M3\PJS4BF!8ZL@(BB!(JB!80LBL5B $5MP(5CCT5GP(LGS@5H2LL@ (LH0H5MSTJ@#TBF!(BIC0)JR$ZOB&lt;Z@!(PMP()@#0RJPH)JR$)@"$^JS0RJR$)O@HZMR&lt;/B!8ZK18^G"&lt;)M1@9F#0)OATUL (!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD@HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HSTSC@09NRL9NS$&amp;CCT#H3T5B!8PIC\7M3\&lt;JRP)OB$/J2&lt;BB!89LBL#B#@#LCT^LA8ZF#0ZF!(ZLA(B@!(Z@!(^@!(ZJQ(ZB!H7OC0&lt;JR$)F#0)OA($JQ()JS\)D!H&lt;AC0ROC0)F#0UEQT&lt;IBP)G 0^F!8JF!8/B"$&lt;F#\&lt;OC\UF"PRERL!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!@BD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD5CBL#MST#H2L#CBL#MRL#MST^JRP7M3\,OA,&lt;IC0)K2$ZF!(5B (#@ (JF!8ZK0(ZK30)JS0ZJR$)JRP&lt;JQ@POB$$IAH$F"$&lt;D#0&lt;OB$7JS0ROC07OC0$M2P&lt;M2$$M2$DD#07OC0UKR4-G#\7M3T9H2L#H3T/B!()OC0UKR4UKR4UES\!HRDNHRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HP@!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!MS$LH00JMP09@@@9CBL5MP(BG#0&lt;OC07M3\$KAH&lt;OC07OC0)J30ZJ30/F"$&lt;JS0DJR$&lt;OAT&lt;D#0&lt;D#\RES07JS\UERPROC\&lt;M3\&lt;IAT&lt;M30$M2P&lt;OAH&lt;OC0RM30,D!T&lt;OAHRD#\7KQT-KP0)M1TZCC@0L@(^F!()D#\UKSH2L!T,ES\FC#XJN!,!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD@HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!MP0&amp;C@0LCCT5H3$@NP$5MST5G!(&lt;AC07M1T7D#\ROB07OAH&lt;OC0&lt;F30&lt;OB&lt;&lt;K2$CF"&lt;&lt;D#0&lt;M3\7M3\7M1T7D"PRES\$M1H7EQT7M1H7OC\&lt;D!TUM30RIAH7OAT&lt;OC0RM1HRD!TREQTUKQX)G"$RKQ@JJQ(&lt;M307IC\-L"42L#H-L!T2L#HWL"&lt;/HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!@BD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HSTLI#$LCBL5MP09NP09NST#H3T^F!(+OBP&lt;IAH&lt;OA,&lt;OAH&lt;OC0&lt;OC0&lt;OC0RD!,&lt;OC0&lt;OC0ROC0UM1H7EQT7D#\7M1T&lt;ES\7EQT7M1T7M1T7M30UES0REQH7M3\&lt;OC\&lt;OC0&lt;M2PRM3\UKSH7N#T&lt;JQHUM3\UER42L"42L#H2L#H2L P2E0P,L#00@@@@@BD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HP@!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD#CBX&amp;NBL#CC$#CC &amp;NS$5B (JMR&lt;)K1(&lt;J30&lt;F",KF"&lt;ZF#0&lt;OA,&lt;F30ROAHDOC0/OC07M3\7M1HUM3\UM1\7IC\-EQ\UES\7M1T7M3\7M3\)ES\7OC\7M1H7M307OC0UD#07M1H7ESH2M3H5@ H)ESH2L"42L#H2L#H2L!T7E3H$L!X7@2D!HRD@@@@@@BD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD@HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!M#T&amp;NS$#H2L5H2L5H2L5H2L#MST5B!8JK3X!HRD!E#0ZK30/F30&lt;OC0&lt;OC0&lt;OC0RD#0ROC\7M24WEQT7EQTUM3\-E1\UEQT7ES\UEQT7E1TUM3\UD#\/M3\$OC\RM1T7E1H7ES\RER42L"$2L 0^JS0-L#H2L!T$M3\7E3H2L#HHHRD!B @!HRD!HRD9@BD@@BD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!@BD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRDLCBL#NS$&amp;H0(0H3$LB"L#MRLMNQ4!HRD!HRD!K18/K1(ZJS0/F#0$J30&lt;D#\&lt;ES\7ES\7M3\7M1T7EQTUM247M1T7EQTUE3\7M3HWE3H7M1HUD#\&lt;IC\7M3\7N#\7M1TUM1\-L#H2L#\BJS\:B H)G!H2L#H2L#HU@RD!HS@@@BD!HRD@@BD!HRD!HP@!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HP@!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!MRX&ampamp;NCTLNBX&amp;M@0!HRD!HRD!HRD!HRD!HP@!HP@!HRD!HRD!HRD@HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD@HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRDZIA($MRLLNP0#GQ8!HRD!HRD!HRD!HRD!HRD=GS L@ H^O@H)@!@!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRPBMQL&amp;CBX&ampamp;CCT8HRD!HRD!HRD!HRD!I"D!HRD&amp;HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD@HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRDP@ 09NP0#@ 05F"D!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!M1@B@ 0GCB(OHRD!HRD!HRD!HRD@@BD!HRD&amp;HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!@BD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!M1@BH#@LNRX#G"D!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!HRD!M2TPM1@/HRD!HRD!HRD!HRD9HRD!HRD&ampa'))</body></methods><methods><class-id>StartupProgress class</class-id> <category>interface specs</category><body package="StartupTools">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: #(#{Kernel.UserMessage} 								#key: #bfStartupWindowLabel 								#defaultString: 'Startup Progress' )			#min: #(#{Core.Point} 0 0 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 640 512 931 844 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ArbitraryComponentSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 0 0 0 1 0 1 ) 					#name: #ViewHolder1 					#flags: 0 					#component: #logoView ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 -21 1 0 1 0 1 ) 					#name: #InputField1 					#flags: 0 					#model: #textHolder 					#isReadOnly: true 					#type: #text ) ) ) )</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>Model</name><environment>UI</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>dependents </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Kernel-Objects</category><attributes><package>Kernel-Objects</package></attributes></class><class><name>ApplicationModel</name><environment>UI</environment><super>UI.Model</super><private>false</private><indexed-type>none</indexed-type><inst-vars>builder uiSession eventHandlers </inst-vars><class-inst-vars>savedWindowInformation </class-inst-vars><imports></imports><category>UIBuilder-Framework</category><attributes><package>UIBuilder-Framework</package></attributes></class><class><name>PundleAccess</name><environment>Store</environment><super>UI.Model</super><private>false</private><indexed-type>none</indexed-type><inst-vars>packages bundles modelDictionary currentPackage nullPackage containedItemsCache </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>PackageCategories</category><attributes><package>PackageCategories</package></attributes></class></st-source>