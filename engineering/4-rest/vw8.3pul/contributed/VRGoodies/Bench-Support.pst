<?xml version="1.0"?><st-source><!-- Name: Bench-SupportNotice: Copyright © 2002 Cincom Systems, Inc.  All Rights Reserved.Comment: This package contains the supporting classes for the benchmark suite, as well as the GUI reporting tools for that suiteDevelopmentPrerequisites: #(#(#any 'VRUIPainter' ''))PackageName: Bench-SupportParcel: #('Bench-Support')ParcelName: Bench-SupportPrerequisiteParcels: #(#('VRUIPainter' ''))Version: 7Date: 10:24:27 AM November 19, 2015 --><time-stamp>From VisualWorks®, 8.1 of July 17, 2015 on November 19, 2015 at 10:24:27 AM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>Dataset4UI</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>dsvList selectedRow </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Bench-Support</category><attributes><package>Bench-Support</package></attributes></class><comment><class-id>Dataset4UI</class-id><body>Dataset4Example demonstrates adding a graphic as a column label. Expands on Dataset3Example.Instance Variables:	dsvList - List of rows	selectedRow - Employee instance of the selected row</body></comment><class><name>BenchLoggerForm</name><environment>Smalltalk</environment><super>UI.VRDetailForm</super><private>false</private><indexed-type>none</indexed-type><inst-vars>testResult testName </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Bench-Support</category><attributes><package>Bench-Support</package></attributes></class><comment><class-id>BenchLoggerForm</class-id><body>This is the GUI that shows benchmark resultsInstance Variables: testName		&lt;String&gt;  name of the testtestResult		&lt;Number&gt; Milliseconds to run</body></comment><class><name>Instrument4</name><environment>Smalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>value </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Bench-Support</category><attributes><package>Bench-Support</package></attributes></class><class><name>BenchLogger</name><environment>Smalltalk</environment><super>Core.ExtendedModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>testName testResult </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Bench-Support</category><attributes><package>Bench-Support</package></attributes></class><comment><class-id>BenchLogger</class-id><body>This class logs benchmarks.  The benchmark suite is the old STIC benchmarks found at http://www.stic.org and ported to VW 5i.  Look at the class side for example runsInstance Variables:	testName	&lt;String&gt;	 Name of test	testResult	&lt;Number&gt;	Milliseconds to run</body></comment><class><name>Dataset3UI</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>dsvList selectedRow </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Bench-Support</category><attributes><package>Bench-Support</package></attributes></class><class><name>Dataset2UI</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>dsvList selectedRow </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Bench-Support</category><attributes><package>Bench-Support</package></attributes></class><comment><class-id>Dataset2UI</class-id><body>Dataset2Example demonstrates the use of a Dataset widget, expanding on Dataset1Example by adding the ability to add rows. Instance Variables:	dsvList - List of rows	selectedRow - Employee instance of the selected row</body></comment><class><name>BenchLoggerTableForm</name><environment>Smalltalk</environment><super>UI.VRTableForm</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Bench-Support</category><attributes><package>Bench-Support</package></attributes></class><comment><class-id>BenchLoggerTableForm</class-id><body>Tabular view of benchmarksInstance Variables:</body></comment><class><name>Emp</name><environment>Smalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>empno ename job mgr hiredate sal comm deptno </inst-vars><class-inst-vars>id </class-inst-vars><imports></imports><category>Bench-Support</category><attributes><package>Bench-Support</package></attributes></class><class><name>Instrument1</name><environment>Smalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>value </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Bench-Support</category><attributes><package>Bench-Support</package></attributes></class><class><name>Dataset1UI</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>dsvList selectedRow </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Bench-Support</category><attributes><package>Bench-Support</package></attributes></class><comment><class-id>Dataset1UI</class-id><body>Dataset1Example demonstrates the use of a Dataset widget. This is a very simple example with a single row only, to which you can enter values to its columns.Instance Variables:	dsvList - List of rows	selectedRow - Employee instance of the selected row</body></comment><class><name>UINavTester</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Bench-Support</category><attributes><package>Bench-Support</package></attributes></class><class><name>Instrument5</name><environment>Smalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>value </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Bench-Support</category><attributes><package>Bench-Support</package></attributes></class><class><name>SimpleProxy</name><environment>Smalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Bench-Support</category><attributes><package>Bench-Support</package></attributes></class><class><name>Instrument3</name><environment>Smalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>value </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Bench-Support</category><attributes><package>Bench-Support</package></attributes></class><class><name>Employee</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>name empNo address citizen </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Bench-Support</category><attributes><package>Bench-Support</package></attributes></class><comment><class-id>Employee</class-id><body>Employee is a simple domain model class used by ComboConversionExample and Dataset1Example through Dataset4Example. Instance Variables:	name	&lt;ClassOfVariable&gt;	description of variable's function	empNo	&lt;ClassOfVariable&gt;	description of variable's function	address	&lt;ClassOfVariable&gt;	description of variable's function	citizen	&lt;ClassOfVariable&gt;	description of variable's function</body></comment><class><name>Instrument2</name><environment>Smalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>value </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Bench-Support</category><attributes><package>Bench-Support</package></attributes></class><methods><class-id>Dataset4UI</class-id> <category>aspects</category><body package="Bench-Support">dsvList	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^dsvList isNil		ifTrue:			[dsvList :=  SelectionInList new.			dsvList selectionIndexHolder compute:				[:v |				self selectedRow value: dsvList selection].			dsvList]		ifFalse:			[dsvList]</body><body package="Bench-Support">selectedRow	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^selectedRow isNil		ifTrue:			[selectedRow := nil asValue]		ifFalse:			[selectedRow]</body></methods><methods><class-id>Dataset4UI</class-id> <category>initialize-release</category><body package="Bench-Support">initialize		| aList anEmp |	aList := List new.	"The aspect for the dataset should be a list of Employee instances. Create an employee to put in the list."	anEmp := Employee new initialize.	anEmp 		name: 'Tami Hayes'; 		empNo: '341-2'; 		citizen: true.	aList add: anEmp.	"Create an employee to put in the list."	anEmp := Employee new initialize.	anEmp 		name: 'Leo Mazon'; 		empNo: '786-9'; 		citizen: false.	aList add: anEmp.	"Set the list for the dataset aspect. This list appears when you start."	self dsvList list: aList.	super initialize.</body></methods><methods><class-id>Dataset4UI class</class-id> <category>resources</category><body package="Bench-Support">number	^('EmployeeNumber' asText emphasizeAllWith: (Array with: #bold with: #color-&gt;ColorValue red)) asComposedText</body></methods><methods><class-id>BenchLoggerForm</class-id> <category>initialize-release</category><body package="Bench-Support">initialize	"UIDefiner defined this method.	Do NOT modify this method; place custom code in &lt;initializeApplication&gt;"	super initialize.	self model: BenchLogger new asValue.	self initializeAspects.	self initializeApplication.</body><body package="Bench-Support">initializeApplication	"UIDefiner defined this method.	UIDefiner will not recreate this method, so all custom initialization code should be placed here."</body><body package="Bench-Support">initializeAspects	"Preset all aspects.  UIDefiner will overwrite this method"		testName:= ((AspectAdaptor subjectChannel: self model			sendsUpdates: true)	forAspect: #testName).		testResult:= ((AspectAdaptor subjectChannel: self model			sendsUpdates: true)	forAspect: #testResult).</body></methods><methods><class-id>BenchLoggerForm</class-id> <category>accessing</category><body package="Bench-Support">model	^model</body><body package="Bench-Support">model: aValue	model := aValue</body><body package="Bench-Support">testName	^testName</body><body package="Bench-Support">testResult	^testResult</body></methods><methods><class-id>BenchLoggerForm class</class-id> <category>accessing</category><body package="Bench-Support">uiDomainModelName	"UIDefiner defined this method.	This method is used internally by UIDefiner"	^#BenchLogger</body></methods><methods><class-id>Instrument4</class-id> <category>accessing</category><body package="Bench-Support">value	^value</body><body package="Bench-Support">value: aValue	value := aValue</body></methods><methods><class-id>Instrument4</class-id> <category>initialize-release</category><body package="Bench-Support">initialize	self value: 4</body></methods><methods><class-id>Instrument4 class</class-id> <category>instance creation</category><body package="Bench-Support">new	^super new initialize</body></methods><methods><class-id>BenchLogger</class-id> <category>printing</category><body package="Bench-Support">printOn: aStream	aStream nextPutAll: self testName.	aStream nextPutAll: ' -- '.	aStream nextPutAll: self testResult printString</body><body package="Bench-Support">printOntoStream: aStream forRecord: count	aStream nextPutAll: self testName.	aStream nextPut: $,.	aStream nextPutAll: self testResult printString.	aStream cr</body></methods><methods><class-id>BenchLogger</class-id> <category>accessing</category><body package="Bench-Support">testName	^testName</body><body package="Bench-Support">testName: aValue	testName := aValue.	self changed: #testName</body><body package="Bench-Support">testResult	^testResult</body><body package="Bench-Support">testResult: aValue	testResult := aValue.	self changed: #testResult</body></methods><methods><class-id>BenchLogger class</class-id> <category>reporting</category><body package="Bench-Support">typeDef	^#(#String #Float)</body></methods><methods><class-id>Dataset3UI</class-id> <category>aspects</category><body package="Bench-Support">dsvList	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^dsvList isNil		ifTrue:			[dsvList :=  SelectionInList new.			dsvList selectionIndexHolder compute:				[:v |				self selectedRow value: dsvList selection].			dsvList]		ifFalse:			[dsvList]</body><body package="Bench-Support">selectedRow	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^selectedRow isNil		ifTrue:			[selectedRow := nil asValue]		ifFalse:			[selectedRow]</body></methods><methods><class-id>Dataset3UI</class-id> <category>initialize-release</category><body package="Bench-Support">initialize		| aList anEmp |	aList := List new.	"The aspect for the dataset should be a list of Employee instances. Create an employee to put in the list."	anEmp := Employee new initialize.	anEmp 		name: 'Tami Hayes'; 		empNo: '341-2'; 		citizen: true.	aList add: anEmp.	"Create an employee to put in the list."	anEmp := Employee new initialize.	anEmp 		name: 'Leo Mazon'; 		empNo: '786-9'; 		citizen: false.	aList add: anEmp.	"Set the list for the dataset aspect. This list appears when you start."	self dsvList list: aList.	super initialize.</body></methods><methods><class-id>Dataset2UI</class-id> <category>actions</category><body package="Bench-Support">addRow	(dsvList list) add: Employee new</body></methods><methods><class-id>Dataset2UI</class-id> <category>aspects</category><body package="Bench-Support">dsvList	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^dsvList isNil		ifTrue:			[dsvList :=  SelectionInList new.			dsvList selectionIndexHolder compute:				[:v |				self selectedRow value: dsvList selection].			dsvList]		ifFalse:			[dsvList]</body><body package="Bench-Support">selectedRow	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^selectedRow isNil		ifTrue:			[selectedRow := nil asValue]		ifFalse:			[selectedRow]</body></methods><methods><class-id>Dataset2UI</class-id> <category>initialize-release</category><body package="Bench-Support">initialize			| aList |	aList := List new.	aList add: Employee new initialize.	self dsvList list: aList</body></methods><methods><class-id>BenchLoggerTableForm</class-id> <category>table specs</category><body package="Bench-Support">tableSpec	"Table Definition defined by VRFormGenerator V2.0"	^#(#('Test Name' 'Milliseconds To Run') #(#testName #testResult) #(250 300))</body></methods><methods><class-id>BenchLoggerTableForm class</class-id> <category>#instance creation</category><body package="Bench-Support">with: aList	"instantiates the table with the collection aList.  Must still be opened"	| inst |	inst := self new.	inst initializeTable: aList.	^inst</body></methods><methods><class-id>Emp</class-id> <category>accessing</category><body package="Bench-Support">comm	^comm</body><body package="Bench-Support">comm: aValue	comm := aValue</body><body package="Bench-Support">deptno	^deptno</body><body package="Bench-Support">deptno: aValue	deptno := aValue</body><body package="Bench-Support">empno	^empno</body><body package="Bench-Support">empno: aValue	empno := aValue</body><body package="Bench-Support">ename	^ename</body><body package="Bench-Support">ename: aValue	ename := aValue</body><body package="Bench-Support">hiredate	^hiredate</body><body package="Bench-Support">hiredate: aValue	hiredate := aValue</body><body package="Bench-Support">job	^job</body><body package="Bench-Support">job: aValue	job := aValue</body><body package="Bench-Support">mgr	^mgr</body><body package="Bench-Support">mgr: aValue	mgr := aValue</body><body package="Bench-Support">sal	^sal</body><body package="Bench-Support">sal: aValue	sal := aValue</body></methods><methods><class-id>Emp class</class-id> <category>instance creation</category><body package="Bench-Support">example	^self new		empno: self id;		ename: 'FRED';		job: 'SALESMAN';		mgr: 7902;		hiredate: Date today;		sal: 1000;		comm: 100;		deptno: 30</body></methods><methods><class-id>Emp class</class-id> <category>accessing</category><body package="Bench-Support">id	id isNil		ifTrue: [id := 1000]		ifFalse: [id := id + 1].	^id</body><body package="Bench-Support">id: aValue	id := aValue</body></methods><methods><class-id>Instrument1</class-id> <category>accessing</category><body package="Bench-Support">value	^value</body><body package="Bench-Support">value: aValue	value := aValue</body></methods><methods><class-id>Instrument1</class-id> <category>initialize-release</category><body package="Bench-Support">initialize	self value: 1</body></methods><methods><class-id>Instrument1 class</class-id> <category>instance creation</category><body package="Bench-Support">new	^super new initialize</body></methods><methods><class-id>Dataset1UI</class-id> <category>aspects</category><body package="Bench-Support">dsvList	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^dsvList isNil		ifTrue:			[dsvList :=  SelectionInList new.			dsvList selectionIndexHolder compute:				[:v |				self selectedRow value: dsvList selection].			dsvList]		ifFalse:			[dsvList]</body><body package="Bench-Support">selectedRow	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^selectedRow isNil		ifTrue:			[selectedRow := nil asValue]		ifFalse:			[selectedRow]</body></methods><methods><class-id>Dataset1UI</class-id> <category>initialize-release</category><body package="Bench-Support">initialize			| aList |	aList := List new.	aList add: Employee new initialize.	self dsvList list: aList</body></methods><methods><class-id>UINavTester</class-id> <category>actions</category><body package="Bench-Support">four	"This stub method was generated by UIDefiner"	| bldr |	bldr := Dataset4UI open.	self closeRequest.	bldr source closeRequest</body><body package="Bench-Support">one	"This stub method was generated by UIDefiner"	| bldr |	bldr := Dataset1UI open.	self closeRequest.	bldr source closeRequest</body><body package="Bench-Support">three	"This stub method was generated by UIDefiner"	| bldr |	bldr := Dataset3UI open.	self closeRequest.	bldr source closeRequest</body><body package="Bench-Support">two	"This stub method was generated by UIDefiner"	| bldr |	bldr := Dataset2UI open.	self closeRequest.	bldr source closeRequest</body></methods><methods><class-id>Instrument5</class-id> <category>accessing</category><body package="Bench-Support">value	^value</body><body package="Bench-Support">value: aValue	value := aValue</body></methods><methods><class-id>Instrument5</class-id> <category>initialize-release</category><body package="Bench-Support">initialize	self value: 5</body></methods><methods><class-id>Instrument5 class</class-id> <category>instance creation</category><body package="Bench-Support">new	^super new initialize</body></methods><methods><class-id>SimpleProxy</class-id> <category>api</category><body package="Bench-Support">acceptString: aString	^self</body></methods><methods><class-id>SimpleProxy</class-id> <category>proxying</category><body package="Bench-Support">doesNotUnderstand: aMessage	| msg |	msg := (aMessage selector asString, ':') asSymbol.	self perform: msg with: 'Test'</body></methods><methods><class-id>Instrument3</class-id> <category>accessing</category><body package="Bench-Support">value	^value</body><body package="Bench-Support">value: aValue	value := aValue</body></methods><methods><class-id>Instrument3</class-id> <category>initialize-release</category><body package="Bench-Support">initialize	self value: 3</body></methods><methods><class-id>Instrument3 class</class-id> <category>instance creation</category><body package="Bench-Support">new	^super new initialize</body></methods><methods><class-id>Employee</class-id> <category>accessing</category><body package="Bench-Support">address	^address</body><body package="Bench-Support">address: aValue	address := aValue</body><body package="Bench-Support">citizen	^citizen</body><body package="Bench-Support">citizen: aValue	citizen := aValue</body><body package="Bench-Support">empNo	^empNo</body><body package="Bench-Support">empNo:aValue	empNo := aValue</body><body package="Bench-Support">name	^name</body><body package="Bench-Support">name:aValue	name := aValue</body></methods><methods><class-id>Employee</class-id> <category>intialize</category><body package="Bench-Support">initialize	self citizen: false</body></methods><methods><class-id>Employee class</class-id> <category>instance creation</category><body package="Bench-Support">example	^self new		name: 'Fred Flintstone'; 		empNo: 100;		address: '1001 Rocky Way';		citizen: true</body></methods><methods><class-id>Instrument2</class-id> <category>initialize-release</category><body package="Bench-Support">initialize	self value: 2</body></methods><methods><class-id>Instrument2</class-id> <category>accessing</category><body package="Bench-Support">value	^value</body><body package="Bench-Support">value: aValue	value := aValue</body></methods><methods><class-id>Instrument2 class</class-id> <category>instance creation</category><body package="Bench-Support">new	^super new initialize</body></methods><methods><class-id>Dataset4UI class</class-id> <category>interface specs</category><body package="Bench-Support">windowSpec	"UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#FullSpec 		#window: 		#(#WindowSpec 			#label: 'Dataset4Example' 			#bounds: #(#Rectangle 399 297 735 531 ) ) 		#component: 		#(#SpecCollection 			#collection: #(				#(#DataSetSpec 					#layout: #(#Rectangle 11 18 314 196 ) 					#model: #dsvList 					#columns: #(						#(#DataSetColumnSpec 							#model: #'selectedRow name' 							#label: 'Name' 							#labelIsImage: false 							#width: 80 							#rendererType: #Text 							#editorType: #InputField 							#noScroll: false ) 						#(#DataSetColumnSpec 							#model: #'selectedRow empNo' 							#label: 'number' 							#labelIsImage: true 							#width: 114 							#rendererType: #Text 							#editorType: #InputField 							#noScroll: false ) 						#(#DataSetColumnSpec 							#model: #'selectedRow citizen' 							#label: 'U.S. Citizen' 							#labelIsImage: false 							#width: 80 							#rendererType: #CheckBox 							#editorType: #CheckBox 							#noScroll: false ) ) ) ) ) )</body></methods><methods><class-id>BenchLoggerForm class</class-id> <category>interface specs</category><body package="Bench-Support">windowSpec	"UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#FullSpec 		#window: 		#(#WindowSpec 			#label: ' ' 			#min: #(#Point 40 20 ) 			#bounds: #(#Rectangle 255 160 673 440 ) 			#isEventDriven: true ) 		#component: 		#(#SpecCollection 			#collection: #(				#(#CompositeSpecCollection 					#collection: #(						#(#LabelSpec 							#layout: #(#Point 0 3 ) 							#name: #testNameLabel 							#label: 'Test Name' ) 						#(#InputFieldSpec 							#layout: #(#Rectangle 97 0 394 27 ) 							#name: #testName 							#model: #testName 							#type: #string ) 						#(#LabelSpec 							#layout: #(#Point 0 43 ) 							#name: #testResultLabel 							#label: 'Test Result' ) 						#(#InputFieldSpec 							#layout: #(#Rectangle 97 40 394 67 ) 							#name: #testResult 							#model: #testResult 							#type: #number 							#formatString: '0.00' ) ) 					#compositeSpec: 					#(#CompositeSpec 						#layout: #(#LayoutFrame 0 0.0119617 0 0.025 0 0.954545 0 0.264286 ) ) ) ) ) )</body></methods><methods><class-id>Dataset3UI class</class-id> <category>interface specs</category><body package="Bench-Support">windowSpec	"UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#FullSpec 		#window: 		#(#WindowSpec 			#label: 'Dataset3Example' 			#bounds: #(#Rectangle 393 291 733 530 ) ) 		#component: 		#(#SpecCollection 			#collection: #(				#(#DataSetSpec 					#layout: #(#Rectangle 11 8 328 194 ) 					#model: #dsvList 					#columns: #(						#(#DataSetColumnSpec 							#labelIsImage: false 							#width: 30 							#rendererType: #rowSelector 							#editorType: #rowSelector 							#noScroll: false ) 						#(#DataSetColumnSpec 							#model: #'selectedRow name' 							#label: 'Name' 							#labelIsImage: false 							#width: 94 							#editorType: #InputField 							#noScroll: false ) 						#(#DataSetColumnSpec 							#model: #'selectedRow empNo' 							#label: 'Employee Number' 							#labelIsImage: false 							#width: 115 							#editorType: #InputField 							#noScroll: false ) 						#(#DataSetColumnSpec 							#model: #'selectedRow citizen' 							#label: 'U.S. Citizen' 							#labelIsImage: false 							#width: 80 							#rendererType: #CheckBox 							#editorType: #CheckBox 							#noScroll: false ) ) ) ) ) )</body></methods><methods><class-id>Dataset2UI class</class-id> <category>interface specs</category><body package="Bench-Support">windowSpec	"UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#FullSpec 		#window: 		#(#WindowSpec 			#label: 'Dataset2Example' 			#bounds: #(#Rectangle 393 291 733 530 ) ) 		#component: 		#(#SpecCollection 			#collection: #(				#(#DataSetSpec 					#layout: #(#Rectangle 11 8 328 194 ) 					#model: #dsvList 					#columns: #(						#(#DataSetColumnSpec 							#labelIsImage: false 							#width: 30 							#rendererType: #rowSelector 							#editorType: #rowSelector 							#noScroll: false ) 						#(#DataSetColumnSpec 							#model: #'selectedRow name' 							#label: 'Name' 							#labelIsImage: false 							#width: 94 							#editorType: #InputField 							#noScroll: false ) 						#(#DataSetColumnSpec 							#model: #'selectedRow empNo' 							#label: 'Employee Number' 							#labelIsImage: false 							#width: 115 							#editorType: #InputField 							#noScroll: false ) 						#(#DataSetColumnSpec 							#model: #'selectedRow citizen' 							#label: 'U.S. Citizen' 							#labelIsImage: false 							#width: 80 							#rendererType: #CheckBox 							#editorType: #CheckBox 							#noScroll: false ) ) ) 				#(#ActionButtonSpec 					#layout: #(#Rectangle 101 207 186 230 ) 					#model: #addRow 					#label: 'Add Row' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>BenchLoggerTableForm class</class-id> <category>interface specs</category><body package="Bench-Support">windowSpec	"UIPainter new openOnClass: BenchLoggerTableForm andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#FullSpec 		#window: 		#(#WindowSpec 			#label: 'Table View' 			#bounds: #(#Rectangle 119 114 681 486 ) 			#isEventDriven: true ) 		#component: 		#(#SpecCollection 			#collection: #(				#(#SubCanvasSpec 					#layout: #(#LayoutFrame 0 0.00533808 0 0.00268817 0 0.998221 0 0.981183 ) 					#name: #webTable 					#flags: 0 					#majorKey: #VRTableViewer 					#minorKey: #windowSpec 					#clientKey: #webTable ) 				#(#ActionButtonSpec 					#layout: #(#LayoutFrame 0 0.00355872 0 0.913978 0 0.133452 0 0.997312 ) 					#name: #edit 					#model: #edit 					#label: '&amp;Edit' 					#defaultable: true ) 				#(#ActionButtonSpec 					#layout: #(#LayoutFrame 0 0.259786 0 0.913978 0 0.38968 0 0.997312 ) 					#name: #add 					#model: #add 					#label: '&amp;Add' 					#defaultable: true ) 				#(#ActionButtonSpec 					#layout: #(#LayoutFrame 0 0.3879 0 0.913978 0 0.517794 0 0.997312 ) 					#name: #remove 					#model: #remove 					#label: '&amp;Remove' 					#defaultable: true ) 				#(#ActionButtonSpec 					#layout: #(#LayoutFrame 0 0.131673 0 0.913978 0 0.261566 0 0.997312 ) 					#name: #editAll 					#model: #editAll 					#label: 'E&amp;dit All' 					#defaultable: true ) 				#(#ActionButtonSpec 					#layout: #(#LayoutFrame 0 0.868327 0 0.913978 0 0.998221 0 0.997312 ) 					#name: #exit 					#model: #closeRequest 					#label: 'E&amp;xit' 					#defaultable: true ) 				#(#ActionButtonSpec 					#layout: #(#LayoutFrame 0 0.516014 0 0.913978 0 0.645907 0 0.997312 ) 					#name: #save 					#model: #save 					#label: '&amp;Save' 					#defaultable: true ) 				#(#ActionButtonSpec 					#layout: #(#LayoutFrame 0 0.644128 0 0.913978 0 0.774021 0 0.997312 ) 					#name: #print 					#model: #print 					#label: '&amp;Print' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>Dataset1UI class</class-id> <category>interface specs</category><body package="Bench-Support">windowSpec	"UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#FullSpec 		#window: 		#(#WindowSpec 			#label: 'Dataset1Example' 			#bounds: #(#Rectangle 393 298 733 530 ) ) 		#component: 		#(#SpecCollection 			#collection: #(				#(#DataSetSpec 					#layout: #(#Rectangle 11 10 328 196 ) 					#model: #dsvList 					#columns: #(						#(#DataSetColumnSpec 							#model: #'selectedRow name' 							#label: 'Name' 							#labelIsImage: false 							#width: 94 							#editorType: #InputField 							#noScroll: false ) 						#(#DataSetColumnSpec 							#model: #'selectedRow empNo' 							#label: 'Employee Number' 							#labelIsImage: false 							#width: 115 							#editorType: #InputField 							#noScroll: false ) 						#(#DataSetColumnSpec 							#model: #'selectedRow citizen' 							#label: 'U.S. Citizen' 							#labelIsImage: false 							#width: 80 							#rendererType: #CheckBox 							#editorType: #CheckBox 							#noScroll: false ) ) ) ) ) )</body></methods><methods><class-id>UINavTester class</class-id> <category>interface specs</category><body package="Bench-Support">windowSpec	"UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Test' 			#bounds: #(#{Graphics.Rectangle} 512 384 805 644 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 7 10 88 33 ) 					#name: #ActionButton1 					#model: #one 					#label: 'One' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 7 43 88 66 ) 					#name: #ActionButton2 					#model: #two 					#label: 'Two' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 7 81 88 104 ) 					#name: #ActionButton3 					#model: #three 					#label: 'Three' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 7 116 88 139 ) 					#name: #ActionButton4 					#model: #four 					#label: 'Four' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 7 147 88 170 ) 					#name: #ActionButton5 					#model: #five 					#label: 'Five' 					#defaultable: true ) ) ) )</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>Object</name><environment>Core</environment><super></super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Kernel-Objects</category><attributes><package>Kernel-Objects</package></attributes></class><class><name>ApplicationModel</name><environment>UI</environment><super>UI.Model</super><private>false</private><indexed-type>none</indexed-type><inst-vars>builder uiSession eventHandlers </inst-vars><class-inst-vars>savedWindowInformation </class-inst-vars><imports></imports><category>UIBuilder-Framework</category><attributes><package>UIBuilder-Framework</package></attributes></class><class><name>ExtendedModel</name><environment>Core</environment><super>UI.Model</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Abstract-Models-Base</category><attributes><package>VRForms</package></attributes></class><class><name>VRTableForm</name><environment>UI</environment><super>UI.VRDBApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>webTable windowLabel domainFormClass printHeader printType tableSpec </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Form-Deployment</category><attributes><package>VRForms</package></attributes></class><class><name>VRDetailForm</name><environment>UI</environment><super>UI.VRDBApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>editMode parent owner windowLabel </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Form-Deployment</category><attributes><package>VRForms</package></attributes></class></st-source>