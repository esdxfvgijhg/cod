<?xml version="1.0"?><st-source><!-- Name: EncryptedSettingsComment: This package extends base Settings framework by adding optional encryption to saved xml settings files.Override SettingsDomain>>cipher in your subclass of SettingsDomain by returning any cipher complying with encrypt:/decrypt: protocol, for example any symmetric-key cipher from Security parcels provided with VisualWorks.The software is provided free of charge "as is", in hope that it will be useful, with ABSOLUTELY NO WARRANTY. The entire risk and all responsibility for the use of the software is with you.  Under no circumstances the author may be held responsible for loss of data, loss of profit, or any other damage resulting directly or indirectly from the use of the software, even if the damage is caused by defects in the software.DevelopmentPrerequisites: #(#(#any 'Protocols-Common' ''))PackageName: EncryptedSettingsParcel: #('EncryptedSettings')ParcelName: EncryptedSettingsPrerequisiteDescriptions: #(#(#name 'Protocols-Common' #componentType #package))PrerequisiteParcels: #(#('Protocols-Common' ''))Version: 8.2 - 1.5Date: 10:16:14 AM December 11, 2015 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.2 (test_72670) of September 25, 2015 on December 11, 2015 at 10:16:14 AM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><methods><class-id>Tools.SettingsDomain</class-id> <category>reading/writing</category><body package="EncryptedSettings">cipher	"Override this if you wish to encrypt your settings file"	^nil.</body><body package="EncryptedSettings">readFrom: aStream	"Read the values of settings from the stream, which should be a stream	open on the XML snapshot of setting values previously saved by the same	domain."	| rs reader |	rs := self cipher		ifNil: [aStream]		ifNotNil: [:cipher | (cipher decrypt: (ByteArray fromHexString: aStream contents)) asString readStream].	reader := SettingReader on: self.	reader readFrom: rs.	self domainRoot installSnapshots: reader snapshots.</body><body package="EncryptedSettings">writeTo: aStream	"Write the current value of the settings to the stream."	| ws |	ws := String new writeStream.	(SettingsWriter on: self) writeTo: ws.	aStream		nextPutAll:			(self cipher				ifNil: [ws contents]				ifNotNil: [:cipher | (cipher encrypt: ws contents asByteArray) asHexString]).</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>SettingsDomain</name><environment>Tools</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>cachedSettings cachedPages unappliedSnapshots </inst-vars><class-inst-vars>current </class-inst-vars><imports></imports><category>Tools-Settings</category><attributes><package>Tools-Settings</package></attributes></class></st-source>