<?xml version="1.0"?><st-source><!-- Name: HPSVM Squeak CompatibilityComment: This parcel adds some Squeak compatibility methods used by the plugin framework.DbIdentifier: bear73DbTrace: 50186HideSource: falsePackageName: HPSVM Squeak CompatibilityParcel: #('HPSVM Squeak Compatibility')ParcelName: HPSVM Squeak CompatibilityPrintStringCache: (1.2,bobw)SaveSource: trueVersion: 1.2Date: 8:23:15 AM September 3, 2010 --><time-stamp>From VisualWorksÂ®, Pre-Release 7.8 (sep10.1) of September 3, 2010 on September 3, 2010 at 8:23:15 AM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><methods><class-id>Core.Integer</class-id> <category>bit manipulation</category><body package="HPSVM Squeak Compatibility" selector="&lt;&lt;">&lt;&lt; aNumber	^self bitShift: aNumber</body></methods><methods><class-id>Core.Integer</class-id> <category>Squeak compatibility</category><body package="HPSVM Squeak Compatibility" selector="isPowerOfTwo">isPowerOfTwo	"Return true if the receiver is an integral power of two."	^ (self bitAnd: self-1) = 0</body></methods><methods><class-id>OS.Filename</class-id> <category>Squeak compatibility</category><body package="HPSVM Squeak Compatibility" selector="directoryExists:">directoryExists: aString	| fn |	^(fn := self construct: aString) exists and: [fn isDirectory]</body><body package="HPSVM Squeak Compatibility" selector="directoryNamed:">directoryNamed: aStringOrFilename 	(aStringOrFilename isString not	and: [aStringOrFilename isAbsolute 		   or: [aStringOrFilename tail ~= aStringOrFilename asString]]) 		ifTrue: [^aStringOrFilename].	^self construct: aStringOrFilename asString</body><body package="HPSVM Squeak Compatibility" selector="directoryNames">directoryNames	^(self directoryContents select: [:entry | (self construct: entry) isDirectory]) 		collect: [:entry | self construct: entry]</body><body package="HPSVM Squeak Compatibility" selector="fullNameFor:">fullNameFor: aString	^self construct: aString</body><body package="HPSVM Squeak Compatibility" selector="fullNamesOfAllFilesInSubtree">fullNamesOfAllFilesInSubtree	| directories matches |	matches := OrderedCollection new: 256.	directories := OrderedCollection with: self.	[directories notEmpty] whileTrue: 		[(directories removeFirst filenamesMatching: '*') do: 			[:fn |			fn isDirectory				ifTrue: [directories addLast: fn]				ifFalse: [matches addLast: fn asString]]].	^matches</body><body package="HPSVM Squeak Compatibility" selector="recursiveDelete">recursiveDelete	self isDirectory ifTrue:		[self directoryContents do: [:entry| (self construct: entry) recursiveDelete]].	self delete</body></methods><methods><class-id>Core.String</class-id> <category>Squeak compatibility</category><body package="HPSVM Squeak Compatibility" selector="displayProgressAt:from:to:during:">displayProgressAt: aPoint from: minVal to: maxVal during: workBlock 	"Display this string as a caption over a progress bar while workBlock is evaluated.EXAMPLE (Select next 6 lines and Do It)'Now here''s some Real Progress'	displayProgressAt: Sensor cursorPoint	from: 0 to: 10	during: [:bar |	1 to: 10 do: [:x | bar value: x.			(Delay forMilliseconds: 500) wait]].HOW IT WORKS (Try this in any other language :-)Since your code (the last 2 lines in the above example) is in a block,this method gets control to display its heading before, and clean up the screen after, its execution.The key, though, is that the block is supplied with an argument,named 'bar' in the example, which will update the bar image every it is sent the message value: x, where x is in the from:to: range."	Notice		showProgress: self 		complete: maxVal 		while:  [workBlock value: [:ignoredIndex| IncrementNotification raiseSignal]]		title: self"	^ProgressInitiationException 		display: self		at: aPoint 		from: minVal 		to: maxVal 		during: workBlock"</body></methods><methods><class-id>Core.SequenceableCollection class</class-id> <category>Squeak compatibility</category><body package="HPSVM Squeak Compatibility" selector="streamContents:">streamContents: blockWithArg	| stream |	stream := WriteStream on: (self new: 100).	blockWithArg value: stream.	^stream contents</body></methods><methods><class-id>Core.SequenceableCollection</class-id> <category>Squeak compatibility</category><body package="HPSVM Squeak Compatibility" selector="doWithIndex:">doWithIndex: aBlock  	"Evaluate aBlock with each of the receiver's elements as the argument and then theIndex as the second."	1 to: self size do: [:i | aBlock value: (self at: i) value: i]</body></methods><methods><class-id>Core.Collection</class-id> <category>Squeak compatibility</category><body package="HPSVM Squeak Compatibility" selector="copyWithoutAll:">copyWithoutAll: aCollection	"Answer a copy of the receiver that does not contain any elements 	 equal to those in aCollection."	^self reject: [:each | aCollection includes: each]</body><body package="HPSVM Squeak Compatibility" selector="intersection:">intersection: aCollection	"Answer the set theoretic intersection of two collections."	^self select: [:each | aCollection includes: each]</body><body package="HPSVM Squeak Compatibility" selector="select:thenCollect:">select: selectBlock thenCollect: collectBlock	"Utility method to improve readability."	^ (self select: selectBlock) collect: collectBlock</body></methods><methods><class-id>Core.Float</class-id> <category>Squeak compatibility</category><body package="HPSVM Squeak Compatibility" selector="isPowerOfTwo">isPowerOfTwo	"Return true if the receiver is an integral power of two.	Floats never return true here."	^false</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>Float</name><environment>Core</environment><super>Core.LimitedPrecisionReal</super><private>false</private><indexed-type>bytes</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Magnitude-Numbers</category><attributes><package>Magnitude-Numbers</package></attributes></class><class><name>Collection</name><environment>Core</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Collections-Abstract</category><attributes><package>Collections-Abstract</package></attributes></class><class><name>SequenceableCollection</name><environment>Core</environment><super>Core.Collection</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Collections-Abstract</category><attributes><package>Collections-Abstract</package></attributes></class><class><name>String</name><environment>Core</environment><super>Core.CharacterArray</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Collections-Text</category><attributes><package>Collections-Text</package></attributes></class><class><name>Integer</name><environment>Core</environment><super>Core.Number</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Magnitude-Numbers</category><attributes><package>Magnitude-Numbers</package></attributes></class><class><name>Filename</name><environment>OS</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>osName publicName logicalName </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>OS-Support</category><attributes><package>OS-Support</package></attributes></class></st-source>