<?xml version="1.0"?><st-source><!-- Name: Graphics-Images-FixedPalettesComment: This package extends FixedPalette to include an Alpha channel and also maps out the commonly hardware accelerated and used palettes for 8 bit, 16 bit, 24 bit and 32 bit. This makes converting images from format to format a lot easier, as picking your desired palette is now a matter of matching the palette to the right format you desire.The selectors are designated by Most-Significant-Bit to Least-Significant-Bit. For example, ARGB_8888 is ordered from MSB channel A (alpha) to the LSB channel B (blue). When traversing image data on *little endian* machines, the data is stored in memory from LSB to MSB, which means that the channel order in memory is from LSB (blue) to MSB (alpha).New palettes provided:8 bit 2/3/3:			RGB_332 BGR_23316 bit 4/4/4/4:		ABGR_4444 ARGB_4444 BGRA_4444 RGBA_444416 bit 5/5/5:			RGB_555 BGR_55516 bit 5/6/5:			RGB_565 BGR_56516 bit 5/5/5/1:		ABGR_1555 ARGB_1555 BGRA_5551 RGBA_555124 bit 8/8/8:			RGB_888 BGR_88832 bit 8/8/8/8:		RGBA_8888 BGRA_8888 ARGB_8888 ABGR_888832 bit 10/10/10/2:		RGBA_1010102 BGRA_1010102 ARGB_2101010 ABGR_2101010DbIdentifier: bear73DbTrace: 146915PackageName: Graphics-Images-FixedPalettesParcel: #('Graphics-Images-FixedPalettes')PrintStringCache: (5,mlucassmith)Version: 5Date: 8:39:15 AM September 18, 2009 --><time-stamp>From VisualWorksÂ®, Pre-Release 7.7 (sep09.3) of September 18, 2009 on September 18, 2009 at 8:39:15 AM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>FixedPalette</name><environment>Graphics</environment><super>Graphics.ColorPalette</super><private>false</private><indexed-type>none</indexed-type><inst-vars>redShift redMask greenShift greenMask blueShift blueMask alphaShift alphaMask </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Graphics-Palettes</category><attributes><package>Graphics-Images-FixedPalettes</package></attributes></class><comment><class-id>Graphics.FixedPalette</class-id><body>FixedPalette represents a color palette in which pixel values are broken into R, G, and B components, each of which directly specifies the scaled stimulus values.Instance Variables:	redShift	&lt;Integer&gt;  "position of red index within pixel value"	redMask	&lt;Integer&gt;  "maximum red index"	greenShift	&lt;Integer&gt;  "ditto for green"	greenMask	&lt;Integer&gt;  "ditto for green"	blueShift	&lt;Integer&gt;  "ditto for blue"	blueMask	&lt;Integer&gt;  "ditto for blue"Object Reference:A FixedPalette is a color palette in which ColorValues are not actually stored but are instead derived from the pixel values. This is because a FixedPalette is used on screens and printers that support millions of colors and therefore make it impractical to store each possible ColorValue. For situations in which it is practical to store all possible ColorValues, a MappedPalette is used. In a FixedPalette, each pixel value is treated as a binary number. The number's bits are divided into three groups, representing the red, green and blue intensities of the desired ColorValue. In an 8-bit color palette, for example, the leftmost 3 bits would typically be used to store the red intensity; with 24-bit color, the leftmost 8 bits would be used. Thus, a FixedPalette needs to know how to parse a pixel value into its three parts. This is accomplished via the creation message, #redShift:redMask:greenShift:greenMask:blueShift:blueMask:. For each color component, the shift value indicates the number of bits to the right of the component's first bit. The mask value indicates the highest value for the component, starting at zero -- if three bits are allotted to red, for example, eight levels of red intensity are possible, numbered 0 through 7. For example, the following statement creates a fixed palette for 8-bit pixel values in which the high three bits specify the red component, the next three bits are green and the low two bits are blue: 	FixedPalette 		redShift: 5 redMask: 7 		greenShift: 2 greenMask: 7 		blueShift: 0 blueMask: 3 </body></comment><methods><class-id>Graphics.FixedPalette</class-id> <category>initialize-release</category><body package="Graphics-Images-FixedPalettes" selector="redShift:redMask:greenShift:greenMask:blueShift:blueMask:alphaShift:alphaMask:">redShift: rs redMask: rm greenShift: gs greenMask: gm blueShift: bs blueMask: bm alphaShift: as alphaMask: am	redShift := rs.	redMask := rm.	greenShift := gs.	greenMask := gm.	blueShift := bs.	blueMask := bm.	alphaShift := as.	alphaMask := am</body></methods><methods><class-id>Graphics.FixedPalette</class-id> <category>accessing</category><body package="Graphics-Images-FixedPalettes" selector="depth">depth	alphaShift ifNil: [^super depth].	^((redMask bitShift: redShift) + (greenMask bitShift: greenShift) + (blueMask bitShift: blueShift) + (alphaMask bitShift: alphaShift)) highBit</body></methods><methods><class-id>Graphics.FixedPalette</class-id> <category>testing</category><body package="Graphics-Images-FixedPalettes" selector="hasAlpha">hasAlpha	^alphaShift notNil and: [alphaMask &gt; 0]</body></methods><methods><class-id>Graphics.FixedPalette</class-id> <category>comparing</category><body package="Graphics-Images-FixedPalettes" selector="=">= anObject	^self == anObject or: [self class = anObject class		and: [anObject equalsRedMask: redMask redShift: redShift						greenMask: greenMask greenShift: greenShift						blueMask: blueMask blueShift: blueShift						alphaMask: alphaMask alphaShift: alphaShift]]</body><body package="Graphics-Images-FixedPalettes" selector="hash">hash	^redMask hash + redShift hash +		greenMask hash + greenShift hash +		blueMask hash + blueShift hash +		alphaMask hash + alphaShift hash</body></methods><methods><class-id>Graphics.FixedPalette</class-id> <category>private</category><body package="Graphics-Images-FixedPalettes" selector="equalsRedMask:redShift:greenMask:greenShift:blueMask:blueShift:alphaMask:alphaShift:">equalsRedMask: rm redShift: rs greenMask: gm greenShift: gs blueMask: bm blueShift: bs alphaMask: am alphaShift: as	"Answer whether my mask and shift parameters are equal to the argument parameters."	^redMask = rm and: [redShift = rs and: [greenMask = gm and: [greenShift = gs		and: [blueMask = bm and: [blueShift = bs and: [alphaMask = am and: [alphaShift = as]]]]]]]</body></methods><methods><class-id>Graphics.FixedPalette class</class-id> <category>instance creation</category><body package="Graphics-Images-FixedPalettes" selector="ABGR_1555">ABGR_1555	^self redShift: 0 redMask: 31 greenShift: 5 greenMask: 31 blueShift: 10 blueMask: 31 alphaShift: 315 alphaMask: 1</body><body package="Graphics-Images-FixedPalettes" selector="ABGR_2101010">ABGR_2101010	^self redShift: 0 redMask: 1023 greenShift: 10 greenMask: 1023 blueShift: 20 blueMask: 1023 alphaShift: 30 alphaMask: 3</body><body package="Graphics-Images-FixedPalettes" selector="ABGR_4444">ABGR_4444	^self redShift: 0 redMask: 15 greenShift: 4 greenMask: 15 blueShift: 8 blueMask: 15 alphaShift: 12 alphaMask: 15</body><body package="Graphics-Images-FixedPalettes" selector="ABGR_8888">ABGR_8888	^self redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255 alphaShift: 24 alphaMask: 255</body><body package="Graphics-Images-FixedPalettes" selector="ARGB_1555">ARGB_1555	^self redShift: 10 redMask: 31 greenShift: 5 greenMask: 31 blueShift: 0 blueMask: 31 alphaShift: 15 alphaMask: 1</body><body package="Graphics-Images-FixedPalettes" selector="ARGB_2101010">ARGB_2101010	^self redShift: 20 redMask: 1023 greenShift: 10 greenMask: 1023 blueShift: 0 blueMask: 1023 alphaShift: 30 alphaMask: 3</body><body package="Graphics-Images-FixedPalettes" selector="ARGB_4444">ARGB_4444	^self redShift: 8 redMask: 15 greenShift: 4 greenMask: 15 blueShift: 0 blueMask: 15 alphaShift: 12 alphaMask: 15</body><body package="Graphics-Images-FixedPalettes" selector="ARGB_8888">ARGB_8888	^self redShift: 16 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 0 blueMask: 255 alphaShift: 24 alphaMask: 255</body><body package="Graphics-Images-FixedPalettes" selector="A_8">A_8	^self redShift: 0 redMask: 255 greenShift: 0 greenMask: 255 blueShift: 0 blueMask: 255</body><body package="Graphics-Images-FixedPalettes" selector="BGRA_1010102">BGRA_1010102	^self redShift: 2 redMask: 1023 greenShift: 12 greenMask: 1023 blueShift: 22 blueMask: 1023 alphaShift: 0 alphaMask: 3</body><body package="Graphics-Images-FixedPalettes" selector="BGRA_4444">BGRA_4444	^self redShift: 4 redMask: 15 greenShift: 8 greenMask: 15 blueShift: 12 blueMask: 15 alphaShift: 0 alphaMask: 15</body><body package="Graphics-Images-FixedPalettes" selector="BGRA_5551">BGRA_5551	^self redShift: 1 redMask: 31 greenShift: 6 greenMask: 31 blueShift: 11 blueMask: 31 alphaShift: 0 alphaMask: 1</body><body package="Graphics-Images-FixedPalettes" selector="BGRA_8888">BGRA_8888	^self redShift: 8 redMask: 255 greenShift: 16 greenMask: 255 blueShift: 24 blueMask: 255 alphaShift: 0 alphaMask: 255</body><body package="Graphics-Images-FixedPalettes" selector="BGR_233">BGR_233	^self redShift: 0 redMask: 7 greenShift: 3 greenMask: 7 blueShift: 6 blueMask: 3</body><body package="Graphics-Images-FixedPalettes" selector="BGR_555">BGR_555	^self redShift: 0 redMask: 31 greenShift: 5 greenMask: 31 blueShift: 10 blueMask: 31</body><body package="Graphics-Images-FixedPalettes" selector="BGR_565">BGR_565	^self redShift: 0 redMask: 31 greenShift: 5 greenMask: 63 blueShift: 11 blueMask: 31</body><body package="Graphics-Images-FixedPalettes" selector="BGR_888">BGR_888	^self redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255</body><body package="Graphics-Images-FixedPalettes" selector="RGBA_2101010">RGBA_2101010	^self redShift: 22 redMask: 1023 greenShift: 12 greenMask: 1023 blueShift: 2 blueMask: 1023 alphaShift: 0 alphaMask: 3</body><body package="Graphics-Images-FixedPalettes" selector="RGBA_4444">RGBA_4444	^self redShift: 12 redMask: 15 greenShift: 8 greenMask: 15 blueShift: 4 blueMask: 15 alphaShift: 0 alphaMask: 15</body><body package="Graphics-Images-FixedPalettes" selector="RGBA_5551">RGBA_5551	^self redShift: 11 redMask: 31 greenShift: 6 greenMask: 31 blueShift: 1 blueMask: 31 alphaShift: 0 alphaMask: 1</body><body package="Graphics-Images-FixedPalettes" selector="RGBA_8888">RGBA_8888	^self redShift: 24 redMask: 255 greenShift: 16 greenMask: 255 blueShift: 8 blueMask: 255 alphaShift: 0 alphaMask: 255</body><body package="Graphics-Images-FixedPalettes" selector="RGB_332">RGB_332	^self redShift: 5 redMask: 7 greenShift: 2 greenMask: 7 blueShift: 0 blueMask: 3</body><body package="Graphics-Images-FixedPalettes" selector="RGB_555">RGB_555	^self redShift: 10 redMask: 31 greenShift: 5 greenMask: 31 blueShift: 0 blueMask: 31</body><body package="Graphics-Images-FixedPalettes" selector="RGB_565">RGB_565	^self redShift: 11 redMask: 31 greenShift: 5 greenMask: 63 blueShift: 0 blueMask: 31</body><body package="Graphics-Images-FixedPalettes" selector="RGB_888">RGB_888	^self redShift: 16 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 0 blueMask: 255</body><body package="Graphics-Images-FixedPalettes" selector="redShift:redMask:greenShift:greenMask:blueShift:blueMask:alphaShift:alphaMask:">redShift: rs redMask: rm greenShift: gs greenMask: gm blueShift: bs blueMask: bm alphaShift: as alphaMask: am	^self new redShift: rs redMask: rm greenShift: gs greenMask: gm blueShift: bs blueMask: bm alphaShift: as alphaMask: am</body></methods><methods><class-id>Graphics.FixedPalette class</class-id> <category>constants</category><body package="Graphics-Images-FixedPalettes" selector="constantNames">constantNames	^#(	"8 bit grayscale"		A_8		"8 bit 2/3/3"			RGB_332 BGR_233		"16 bit 4/4/4/4"		ABGR_4444 ARGB_4444 BGRA_4444 RGBA_4444		"16 bit 5/5/5"			RGB_555 BGR_555		"16 bit 5/6/5"			RGB_565 BGR_565		"16 bit 5/5/5/1"		ABGR_1555 ARGB_1555 BGRA_5551 RGBA_5551		"24 bit 8/8/8"			RGB_888 BGR_888		"32 bit 8/8/8/8"		RGBA_8888 BGRA_8888 ARGB_8888 ABGR_8888		"32 bit 10/10/10/2"	RGBA_1010102 BGRA_1010102 ARGB_2101010 ABGR_2101010	)</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>ColorPalette</name><environment>Graphics</environment><super>Graphics.Palette</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Graphics-Palettes</category><attributes><package>Graphics-Palettes</package></attributes></class></st-source>