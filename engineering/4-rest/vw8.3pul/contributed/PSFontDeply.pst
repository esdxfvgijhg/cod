<?xml version="1.0"?><st-source><!-- Name: PSFontDeplyComment: Adds support to print additional PostScript fonts to a PostScript printer.DbIdentifier: bear73DbTrace: 53004HideSource: falsePackageName: PSFontDeplyParcel: #('PSFontDeply')ParcelName: PSFontDeplyPreReadBlock: [(PostScriptFontBody instVarNames includes:'fontSource')        ifFalse:[PostScriptFontBody addInstVarName:'fontSource'].   PostScriptFontBody asNameSpace at: #FontsWithheld put: Set new.true]PrintStringCache: (7.3,kgreek)SaveSource: trueVersion: 7.3Pre-Load Block: 	[ :pkg |  (PostScriptFontBody instVarNames includes:'fontSource')        ifFalse:[PostScriptFontBody addInstVarName:'fontSource'].   PostScriptFontBody asNameSpace at: #FontsWithheld put: Set new.]Post-Unload Block: 	[(PostScriptFontBody instVarNames includes:'fontSource')        ifTrue:[PostScriptFontBody removeInstVarName:'fontSource'].  PostScriptFontBody asNameSpace removeKey:#FontsWithheld ifAbsent:[].]Pre-Read Block: 	[(PostScriptFontBody instVarNames includes:'fontSource')        ifFalse:[PostScriptFontBody addInstVarName:'fontSource'].   PostScriptFontBody asNameSpace at: #FontsWithheld put: Set new.true]Date: 8:12:55 AM August 5, 2009 --><time-stamp>From VisualWorksÂ®, Pre-Release 7.7 (aug09.0) of August 5, 2009 on August 5, 2009 at 8:12:55 AM </time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><methods><class-id>Graphics.PostScriptFile</class-id> <category>closing</category><body package="PSFontDeply" selector="close">close        file closed ifTrue: [^self].        atStartOfPage ifFalse: [self newPage].        self useDSC ifTrue: [self storeTrailer].        self storeSoftFonts.        file close</body></methods><methods><class-id>Graphics.PostScriptFile</class-id> <category>private-page PS</category><body package="PSFontDeply" selector="storeSoftFonts">storeSoftFonts	"Include needed soft fonts in the postscript output"	"Detect if any soft fonts are used"	| fonts psBody |	fonts := documentFontsNeeded collect: [:name | PostScriptFontBody named: name].	fonts := fonts select: [:body | body fontSource notNil].	fonts isEmpty		ifFalse: 			["Make file read-write and add the soft font files needed for the document 			to the head of the file"			file close.			file := file name asFilename readWriteStream.			psBody := file contents.			file reset.			fonts do: [:body | 				 [file nextPutAll: body fontSource asFilename contentsOfEntireFile; cr]					on: OSErrorHolder nonexistentSignal					do:[:ex | 						"Font PFA file not found. First attempt to find file in this installation's 						fontmets directory"						| newPath |						(newPath := PostScriptFontBody findFontDirectory asFilename construct: body fontSource tail) exists							ifTrue: 								[body fontSource: newPath.								ex restart].						"Not found. Request from user"						(newPath := Dialog requestFileName: body name , ' font file not found.Please revise file path' default: body fontSource asString) isEmpty							ifFalse: 								[body fontSource: newPath asFilename.								ex restart]]].			file nextPutAll: psBody]</body></methods><methods><class-id>Graphics.PostScriptFontBody</class-id> <category>accessing</category><body package="PSFontDeply" selector="fontSource">fontSource        ^fontSource</body><body package="PSFontDeply" selector="fontSource:">fontSource: aFilename         fontSource := aFilename</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>PostScriptFile</name><environment>Graphics</environment><super>Graphics.GraphicsMedium</super><private>false</private><indexed-type>none</indexed-type><inst-vars>file printer size scale landscape copies lastPaint lastFont lastRegion lastClipping lastLineStyle lastScale documentFontsNeeded pageFontsNeeded documentBBox pageBBox page atStartOfPage atStartOfDocument doDSC doEPS languageLevel </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Graphics-Printing-PostScript</category><attributes><package>Graphics-Printing-PostScript</package></attributes></class><class><name>PostScriptFontBody</name><environment>Graphics</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>fullName family boldness italic serif fixedWidth setWidth widths simpleWidths defaultWidth encoder ascent descent underlinePosition underlineThickness fontSource </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Graphics-Printing-PostScript</category><attributes><package>Graphics-Printing-PostScript</package></attributes></class></st-source>