<?xml version="1.0"?><st-source><!-- Name: RefactoringBrowserInSubcanvasNotice: © Copyright 2013-2013 Cincom Systems, Inc.  All rights reserved.Comment: This package contains a subclass of RefactoringBrowser which allows the RB to be used in a sub canvas. DbIdentifier: bear73DbTrace: 404293DbUsername: nrossDbVersion: 7.10 - 5DevelopmentPrerequisites: #(#(#any 'Browser-BrowserUI' ''))PackageName: RefactoringBrowserInSubcanvasParcel: #('RefactoringBrowserInSubcanvas')ParcelName: RefactoringBrowserInSubcanvasPrerequisiteDescriptions: #(#(#name 'Browser-BrowserUI' #componentType #package))PrerequisiteParcels: #(#('Browser-BrowserUI' ''))PrintStringCache: (7.10 - 5,nross)Version: 7.10 - 5Date: 10:43:43 AM April 19, 2013 --><time-stamp>From VisualWorks®, Pre-Release 7.10 (apr13.3) of April 19, 2013 on April 19, 2013 at 10:43:43 AM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>RefactoringBrowserInSubcanvas</name><environment>Refactory.Browser</environment><super>Refactory.Browser.RefactoringBrowser</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>RefactoringBrowserInSubcanvas</category><attributes><package>RefactoringBrowserInSubcanvas</package></attributes></class><comment><class-id>Refactory.Browser.RefactoringBrowserInSubcanvas</class-id><body>RefactoringBrowser subclass that prevents the refactoring browser that is included in a window, to consume the whole window when the image is saved and loaded.</body></comment><class><name>BrowserNavigatorInSubcanvas</name><environment>Refactory.Browser</environment><super>Refactory.Browser.BrowserNavigator</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>RefactoringBrowserInSubcanvas</category><attributes><package>RefactoringBrowserInSubcanvas</package></attributes></class><comment><class-id>Refactory.Browser.BrowserNavigatorInSubcanvas</class-id><body>This navigator does not rename the window where it is used, and it also adds the edit menu to the given menubar if a method is selected.</body></comment><class><name>SelectorEnvironmentInSubcanvas</name><environment>Refactory.Browser</environment><super>Refactory.Browser.MethodDefinitionEnvironment</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>RefactoringBrowserInSubcanvas</category><attributes><package>RefactoringBrowserInSubcanvas</package></attributes></class><comment><class-id>Refactory.Browser.SelectorEnvironmentInSubcanvas</class-id><body>A subclass of MethodDefinitionEnvironment that should be used in subcanvases, because it sets the Navigator-class to BrowserNavigatorInSubcanvas.</body></comment><methods><class-id>Refactory.Browser.RefactoringBrowserInSubcanvas</class-id> <category>interface opening</category><body package="RefactoringBrowserInSubcanvas">reInstallInterface	"Do nothing being in SubCanvas"</body></methods><methods><class-id>Refactory.Browser.BrowserNavigatorInSubcanvas</class-id> <category>private</category><body package="RefactoringBrowserInSubcanvas">canAddEditMenu	"if there's a selection then enable the editmenu. in subclasses false may be returned to turn this feature off"	^self selector isNil not</body><body package="RefactoringBrowserInSubcanvas">getCurrentMenu	"returns the menu of the current window's model. change this method in subclasses"	^	[self builder window model ifNotNil: [:x | x menuFor: #menuBar] ifNil: [nil]] 			on: self messageNotUnderstoodSignal			do: [:ex | ex return: nil]</body><body package="RefactoringBrowserInSubcanvas">positionForEditMenuInMenuitems: menuItems	"set the position of the edit-menu to the position of the first menuitem, so it will be put right after it"	| position |	(menuItems isEmpty or: [menuItems first position isNil]) 		ifTrue: 			["10.01 is the defaultposition of the first menuItem in a menubar, if the position is not set"			position := 10.01]		ifFalse: [position := menuItems first position].	^position</body></methods><methods><class-id>Refactory.Browser.BrowserNavigatorInSubcanvas</class-id> <category>changing</category><body package="RefactoringBrowserInSubcanvas">changed	"we changed, tell this our superclass and add or remove the edit menu to a maybe given menuBar"	| menu position |	super changed.	self builder ifNil: [^self].	menu := self getCurrentMenu.	menu ifNil: [^self].	self canAddEditMenu		ifTrue: 			["if our selector is not nil, add the editmenu"			position := self positionForEditMenuInMenuitems: menu menuItems.			menu addItem: (self dispatcher browser menuBar menuItemAt: 2) atPosition: position].	self builder window menuBar ifNotNil: [:mb | mb menuChannel: menu]</body><body package="RefactoringBrowserInSubcanvas">updateWindowLabel	"Do nothing when in subcanvas"</body></methods><methods><class-id>Refactory.Browser.SelectorEnvironmentInSubcanvas</class-id> <category>accessing</category><body package="RefactoringBrowserInSubcanvas">navigatorClass	^BrowserNavigatorInSubcanvas</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>BrowserNavigator</name><environment>Refactory.Browser</environment><super>Refactory.Browser.AbstractBrowserNavigator</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Browser-Navigator</category><attributes><package>Browser-BrowserUI</package></attributes></class><class><name>RefactoringBrowser</name><environment>Refactory.Browser</environment><super>Refactory.Browser.AbstractRefactoringBrowser</super><private>false</private><indexed-type>none</indexed-type><inst-vars>policyClass </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Browser-RB UI</category><attributes><package>Browser-BrowserUI</package></attributes></class><class><name>MethodDefinitionEnvironment</name><environment>Refactory.Browser</environment><super>Refactory.Browser.SelectorEnvironment</super><private>false</private><indexed-type>none</indexed-type><inst-vars>definitions </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Browser-Environments</category><attributes><package>Browser-Environments</package></attributes></class></st-source>