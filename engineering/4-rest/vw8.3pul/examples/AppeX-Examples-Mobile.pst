<?xml version="1.0"?><st-source><!-- Name: AppeX-Examples-MobileNotice: Copyright 1999-2017 Cincom Systems, Inc.  All rights reserved.Comment: The package holds examples for mobile web application development. Usage	For instructions on how to start the AppeX server see the AppeX-Examples-Server package comments. 	After starting the server,  open the JQueryMobileCalculator and JQueryMobileTime applicationsDbIdentifier: bear73DbTrace: 502798DbUsername: vdegenDbVersion: 8.3 - 3DevelopmentPrerequisites: #(#(#any 'AppeX-Examples-Server' ''))PackageName: AppeX-Examples-MobileParcel: #('AppeX-Examples-Mobile')PrerequisiteDescriptions: #(#(#name 'AppeX-Examples-Server' #componentType #package))PrerequisiteParcels: #(#('AppeX-Examples-Server' ''))PrintStringCache: (8.3 - 3,vdegen)Version: 8.3 - 3Date: 3:30:55 PM June 30, 2017 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.3 (jun17.5) of June 30, 2017 on June 30, 2017 at 3:30:55 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>JQueryMobileTime</name><environment>AppeX</environment><super>AppeX.Application</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars>timer </class-inst-vars><imports></imports><category></category><attributes><package>AppeX-Examples-Mobile</package></attributes></class><comment><class-id>AppeX.JQueryMobileTime</class-id><body>JQueryMobileTime is an example application using jQuery and jQuery mobile to generate a mobile device friendly content.Class Instance Variables:	timer &lt;Timer&gt;</body></comment><class><name>JQueryMobileCalculator</name><environment>AppeX</environment><super>AppeX.Application</super><private>false</private><indexed-type>none</indexed-type><inst-vars>equalsPressed accumulator displayText operator buttonActions operatorSet </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>AppeX-Examples-Mobile</package></attributes></class><comment><class-id>AppeX.JQueryMobileCalculator</class-id><body>JQueryMobileCalculator is an example application using jQuery and jQuery mobile to generate a mobile device friendly content.Instance Variables:	equalsPressed &lt;Boolean&gt;	accumulator &lt;number&gt;	displayText &lt;String&gt;	operator &lt;Symbol&gt;	buttonActions &lt;Dictionary&gt;	operatorSet &lt;Boolean&gt;</body></comment><class><name>JQueryMobileTimeClient</name><environment>AppeX</environment><super>AppeX.ApplicationClient</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>examples</category><attributes><package>AppeX-Examples-Mobile</package></attributes></class><comment><class-id>AppeX.JQueryMobileTimeClient</class-id><body>JQueryMobileTimeClient contains the client side Javascript code for the JQueryMobileTime example.</body></comment><class><name>JQueryMobileCalculatorClient</name><environment>AppeX</environment><super>AppeX.ApplicationClient</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>examples</category><attributes><package>AppeX-Examples-Mobile</package></attributes></class><comment><class-id>AppeX.JQueryMobileCalculatorClient</class-id><body>JQueryMobileCalculatorClient contains the client side Javascript code for the JQueryMobileCalculator example.</body></comment><methods><class-id>AppeX.JQueryMobileTime class</class-id> <category>services</category><body package="AppeX-Examples-Mobile">ensureTimer	timer ifNil: [ timer := Timer every: 1 seconds do: [ self announceTime ]].	^ 'OK'</body></methods><methods><class-id>AppeX.JQueryMobileTime class</class-id> <category>events</category><body package="AppeX-Examples-Mobile">announceTime	self announceServerEvent: (ServerEvent eventName: #ServerTime data: self currentServerTime)</body><body package="AppeX-Examples-Mobile">stopTimer	timer ifNotNil: [ timer stop ].	timer := nil</body></methods><methods><class-id>AppeX.JQueryMobileTime class</class-id> <category>accessing</category><body package="AppeX-Examples-Mobile">applicationClientClass	^JQueryMobileTimeClient</body><body package="AppeX-Examples-Mobile">timer	^ timer</body></methods><methods><class-id>AppeX.JQueryMobileTime class</class-id> <category>session management</category><body package="AppeX-Examples-Mobile">sessionReleased: aSession	super sessionReleased: aSession.	self sessionCache isEmpty ifTrue: [ self stopTimer ]</body></methods><methods><class-id>AppeX.JQueryMobileCalculator</class-id> <category>private</category><body package="AppeX-Examples-Mobile">calculate	| currentNumber |	(operator isNil or: [ accumulator isNil]) ifTrue: [ ^ displayText ].	currentNumber := displayText asNumber.	operator = $+ ifTrue: [ accumulator := accumulator + currentNumber ].	operator = $- ifTrue: [ accumulator := accumulator - currentNumber ].	operator = $* ifTrue: [ accumulator := accumulator * currentNumber ].	operator = $/ ifTrue: [		currentNumber = 0 ifTrue: [			| sign |			sign := accumulator positive ifTrue: [ '+' ] ifFalse: [ '-' ].			accumulator := 0.			displayText := '0'.			^ sign, 'Infinity' ].		accumulator := accumulator / currentNumber asFloat ].	^ displayText := accumulator printString</body><body package="AppeX-Examples-Mobile">clearDisplay	accumulator := nil.	equalsPressed := operatorSet := false.	operator := nil.	^ displayText := '0'</body><body package="AppeX-Examples-Mobile">clearError	" if the displayText is valid, remove the right most character from it "	displayText size &gt; 0 ifTrue: [		displayText := displayText allButLast: 1.		displayText size isZero ifTrue: [ displayText := '0' ] ].	^ displayText</body><body package="AppeX-Examples-Mobile">enterDigit: aCharacter	| currentlyDisplayed |	equalsPressed ifTrue: [ self clearDisplay ].	currentlyDisplayed := displayText.	" keep the max digits to a reasonable number "	currentlyDisplayed size &gt;= 20 ifTrue: [ ^ displayText ].	(operatorSet or: [ currentlyDisplayed = '0']) ifTrue: [		displayText := ''.		operatorSet := false ].	"/ already pressed a decimal point "	(aCharacter = $. and: [ currentlyDisplayed includes: $. ]) ifTrue: [ ^ displayText ].	^ displayText := displayText, (String with: aCharacter)</body><body package="AppeX-Examples-Mobile">setOperator: aCharacter	| text |	aCharacter = $= ifTrue: [		equalsPressed := true.		^ self calculate ].	equalsPressed ifFalse: [ text := self calculate ].	equalsPressed := false.	operator := aCharacter.	operatorSet := true.	accumulator := displayText asNumber.	^ text ifNil: [ displayText ]</body></methods><methods><class-id>AppeX.JQueryMobileCalculator</class-id> <category>initialize-release</category><body package="AppeX-Examples-Mobile">initialize	super initialize.	self clearDisplay.	self initializeButtonActions.</body><body package="AppeX-Examples-Mobile">initializeButtonActions	buttonActions := Dictionary new.	#( #key0 #key1 #key2 #key3 #key4 #key5 #key6 #key7 #key8 #key9 #keyDecimalPoint ) do: [ :each |		buttonActions at: each put: [ :character | self enterDigit: character ] ].	#( #keyAdd #keySubtract #keyMultiply #keyDivide #keyEquals) do: [ :each |		buttonActions at: each put: [ :character | self setOperator: character ] ].	buttonActions		at: #keyC put: [ :character | self clearDisplay ];		at: #keyCe put: [ :character | self clearError ].</body></methods><methods><class-id>AppeX.JQueryMobileCalculator class</class-id> <category>accessing</category><body package="AppeX-Examples-Mobile">applicationClientClass	^JQueryMobileCalculatorClient</body></methods><methods><class-id>AppeX.JQueryMobileTime</class-id> <category>services</category><body package="AppeX-Examples-Mobile">ensureTimer"	Technically, only the class method performs any useful behavior,	but AppeX dictates that we have to have at least one action method	on the instance side in order for session management to be initialized."	&lt;plainText: 'ensureTimer'&gt;	^ self class ensureTimer</body></methods><methods><class-id>AppeX.JQueryMobileTime class</class-id> <category>services</category><body package="AppeX-Examples-Mobile">currentServerTime	&lt;plainText: 'currentServerTime'&gt;	^Timestamp now printString</body></methods><methods><class-id>AppeX.JQueryMobileTime class</class-id> <category>html</category><body package="AppeX-Examples-Mobile">bodyDivHome	&lt;body: 50&gt;	^ '	&lt;div id="home" data-role="page" data-url="/" tabindex="0"&gt;&lt;/div&gt;'</body><body package="AppeX-Examples-Mobile">bodyJQMobileScript	&lt;body: 200&gt;	^JQueryMobileMinLib</body><body package="AppeX-Examples-Mobile">headJQMobileCss	&lt;head: 50&gt;	^JQueryMobileMinCSS</body><body package="AppeX-Examples-Mobile">headJQueryJs	&lt;head: 200&gt;	^JQueryLib</body><body package="AppeX-Examples-Mobile">htmlTitle	&lt;htmlToken: #title&gt;	^'Mobile Time'</body></methods><methods><class-id>AppeX.JQueryMobileTime class</class-id> <category>configuration</category><body package="AppeX-Examples-Mobile">serverConfiguration	&lt;server: 'AppeXExamples' path: '/jq-mobile/time'&gt;</body></methods><methods><class-id>AppeX.JQueryMobileCalculator</class-id> <category>services</category><body package="AppeX-Examples-Mobile">handleButtonClick	&lt;plainText: 'handleButtonClick'&gt;	| arguments id buttonCharacter |	arguments := self currentRequestArguments.	id := (arguments at: #id) asSymbol.	buttonCharacter := (arguments at: #key) first.	^ (buttonActions at: id ifAbsent: [ ^ displayText ]) value: buttonCharacter.</body></methods><methods><class-id>AppeX.JQueryMobileCalculator class</class-id> <category>html</category><body package="AppeX-Examples-Mobile">bodyDivCalculator	&lt;body: 50&gt;	^ '&lt;div id="calculator" data-role="page" data-theme="a"&gt;		&lt;header data-role="header"&gt;			&lt;h1&gt;Calculator&lt;/h1&gt;		&lt;/header&gt;		&lt;section data-role="content" &gt;			&lt;input type="text"  id="displayControl" style="text-align: right;" value="0" /&gt;			&lt;div class="ui-grid-a"&gt;				&lt;div class="ui-block-a"&gt;&lt;button data-theme="b" id="keyC"&gt;C&lt;/button&gt;&lt;/div&gt;				&lt;div class="ui-block-b"&gt;&lt;button data-theme="b" id="keyCe"&gt;CE&lt;/button&gt;&lt;/div&gt;			&lt;/div&gt;			&lt;div class="ui-grid-c"&gt;				&lt;div class="ui-block-a"&gt;&lt;button data-theme="b" id="key7"&gt;7&lt;/button&gt;&lt;/div&gt;				&lt;div class="ui-block-b"&gt;&lt;button data-theme="b" id="key8"&gt;8&lt;/button&gt;&lt;/div&gt;				&lt;div class="ui-block-c"&gt;&lt;button data-theme="b" id="key9"&gt;9&lt;/button&gt;&lt;/div&gt;				&lt;div class="ui-block-d"&gt;&lt;button data-theme="e" id="keyDivide" &gt;/&lt;/button&gt;&lt;/div&gt;				&lt;div class="ui-block-a"&gt;&lt;button data-theme="b" id="key4"&gt;4&lt;/button&gt;&lt;/div&gt;				&lt;div class="ui-block-b"&gt;&lt;button data-theme="b" id="key5" &gt;5&lt;/button&gt;&lt;/div&gt;				&lt;div class="ui-block-c"&gt;&lt;button data-theme="b" id="key6"&gt;6&lt;/button&gt;&lt;/div&gt;				&lt;div class="ui-block-d"&gt;&lt;button data-theme="e" id="keyMultiply" &gt;*&lt;/button&gt;&lt;/div&gt;				&lt;div class="ui-block-a"&gt;&lt;button data-theme="b" id="key1"&gt;1&lt;/button&gt;&lt;/div&gt;				&lt;div class="ui-block-b"&gt;&lt;button data-theme="b" id="key2"&gt;2&lt;/button&gt;&lt;/div&gt;				&lt;div class="ui-block-c"&gt;&lt;button data-theme="b" id="key3"&gt;3&lt;/button&gt;&lt;/div&gt;				&lt;div class="ui-block-d"&gt;&lt;button data-theme="e" id="keySubtract" &gt;-&lt;/button&gt;&lt;/div&gt;				&lt;div class="ui-block-a"&gt;&lt;button data-theme="e" id="keyDecimalPoint"&gt;.&lt;/button&gt;&lt;/div&gt;				&lt;div class="ui-block-b"&gt;&lt;button data-theme="b" id="key0"&gt;0&lt;/button&gt;&lt;/div&gt;				&lt;div class="ui-block-c"&gt;&lt;button data-theme="e" id="keyEquals" &gt;=&lt;/button&gt;&lt;/div&gt;				&lt;div class="ui-block-d"&gt;&lt;button data-theme="e" id="keyAdd" &gt;+&lt;/button&gt;&lt;/div&gt;			&lt;/div&gt;		&lt;/section&gt;	&lt;/div&gt;'</body><body package="AppeX-Examples-Mobile">bodyJQMobileScript	&lt;body: 200&gt;	^JQueryMobileMinLib</body><body package="AppeX-Examples-Mobile">cacheManifest	&lt;appCache: 'manifest.appcache'&gt;	^ 'CACHE MANIFEST# The following lines describe the cache manifest for the Mobile Calculator# LAST UPDATE: 2014-05-08v01 - change this if you need the browser to update the cache.# Cache the style:defaultStyle.css#Cache jQuery files:https://code.jquery.com/mobile/1.3.0/jquery.mobile-1.3.0.min.csshttps://code.jquery.com/jquery-1.8.2.min.jshttps://code.jquery.com/mobile/1.3.0/jquery.mobile-1.3.0.min.js# Cache AppeX core and the application code itself:AppeX.CoreCode.jsAppeX.JQueryMobileCalculatorClient.js# All other resources should be downloaded from the web when available.NETWORK:*'</body><body package="AppeX-Examples-Mobile">headJQMobileMetaCss	&lt;head: 50&gt;	^'	&lt;!-- Tags for mobile content --&gt;	&lt;meta name="apple-mobile-web-app-capable" content="yes"/&gt;',	JQueryMobileMinCSS</body><body package="AppeX-Examples-Mobile">headJQueryJs	&lt;head: 200&gt;	^JQueryLib</body><body package="AppeX-Examples-Mobile">htmlTitle	&lt;htmlToken: #title&gt;	^'Mobile Calculator'</body></methods><methods><class-id>AppeX.JQueryMobileCalculator class</class-id> <category>configuration</category><body package="AppeX-Examples-Mobile">serverConfiguration	&lt;server: 'AppeXExamples' path: '/jq-mobile/calculator'&gt;</body></methods><methods><class-id>AppeX.JQueryMobileTimeClient</class-id> <category>javascript</category><body package="AppeX-Examples-Mobile">buildContent(jqHome) {	var self = this;	jqHome.append(function() {		var content = $("&lt;div&gt;");		content.attr("data-role", "content");		content.append(function() {			var row = $("&lt;div&gt;");			row.addClass("ui-grid-solo");			row.append(function() {				var local = $("&lt;div class=\"ui-block-a\"&gt;");				local.append("&lt;label for=\"localTime\"&gt;Local time:&lt;/label&gt;");				local.append("&lt;input id=\"localTime\" placeholder=\"Local time\"&gt;&lt;/input&gt;");				return local;			});			return row;		});		content.append(function() {			var row = $("&lt;div class=\"ui-grid-solo\"&gt;");			row.append(function() {				var server = $("&lt;div class=\"ui-block-a\"&gt;");				server.append("&lt;label for=\"serverTime\"&gt;Server time:&lt;/label&gt;");				server.append("&lt;input id=\"serverTime\" placeholder=\"Server time\"&gt;&lt;/input&gt;");				return server;			});			return row;		});		content.append(function() {			var buttonRow = $("&lt;div class=\"ui-grid-a\"&gt;");			buttonRow.append(function() {				var div = $("&lt;div class=\"ui-block-a\"&gt;");				div.append("&lt;button id=\"submitButton\" type=\"submit\" data-theme=\"b\" data-icon=\"refresh\"&gt;Get time&lt;/button&gt;");				return div;			});			buttonRow.append(function() {				var div = $("&lt;div class=\"ui-block-b\"&gt;");				div.append("&lt;button id=\"runButton\" data-icon=\"gear\"&gt;Run&lt;/button&gt;");				return div;			});			return buttonRow;		});		content.append(function() {			var buttonRow = $("&lt;div class=\"ui-grid-solo\"&gt;");			buttonRow.append(function() {				var div = $("&lt;div class=\"ui-block-a\"&gt;");				div.append("&lt;button id=\"clearButton\" data-icon=\"delete\"&gt;Clear&lt;/button&gt;");				return div;			});			return buttonRow;		});		return content;	});	$("#submitButton").click(function() {		$("#localTime").attr("value", (new Date()).toLocaleString());		var response = self.asyncMessageToServer("currentServerTime");		response.onError(function (error) {			self.handleServerTime(error.statusText);			$t.debug('Current time Error: ' + error.statusText + ': ' + error.response);		});		response.onSuccess(function (serverTime) {			self.handleServerTime(serverTime);		});			});	$("#runButton").click(function() {		self.handleRunButtonClick();	});	$("#clearButton").click(function() {		self.cancelInterestInEvent("ServerTime");		self.running = false;		$("#localTime").attr("value", "");		$("#serverTime").attr("value", "");	});}</body><body package="AppeX-Examples-Mobile">buildFooter(jqHome) {	jqHome.append(function() {		var date = new Date();		var text = "Â© " + date.getFullYear() + " Cincom Systems";		return "&lt;div data-role=\"footer\" style=\"text-align: center\"&gt;" + text + "&lt;/div&gt;"	});}</body><body package="AppeX-Examples-Mobile">buildHeader(jqHome) {	jqHome.append(function (){		return "&lt;div data-role=\"header\"&gt;&lt;h1&gt;Mobile Time&lt;/h1&gt;&lt;/div&gt;";	});}</body><body package="AppeX-Examples-Mobile">buildHtml() {	var page = $("#home");	this.buildHeader(page);	this.buildContent(page);	this.buildFooter(page);	//apply mobile class styling to the newly created page elements	page.closest(":jqmData(role='page')").trigger('pagecreate');	return this;}</body></methods><methods><class-id>AppeX.JQueryMobileTimeClient</class-id> <category>callbacks</category><body package="AppeX-Examples-Mobile">ensureTimer() {	//return a ServerResponse 	return this.asyncMessageToServer("ensureTimer");}</body><body package="AppeX-Examples-Mobile">handleRunButtonClick() {	if (this.running) return;	var self = this,		response;	response = this.ensureTimer()		.onSuccess(function (data) {			self.registerInterestInServerTime();			self.running = true;		})		.onError(function (error) {			$("#home")				.append( $("&lt;label class = 'error'&gt;")					.text('Error: ' + error.statusText + ': ' + error.response)				)					});	}</body><body package="AppeX-Examples-Mobile">handleServerTime(serverTime) {	$("#serverTime").attr("value", serverTime);}</body></methods><methods><class-id>AppeX.JQueryMobileTimeClient</class-id> <category>javascript - events</category><body package="AppeX-Examples-Mobile">registerInterestInServerTime() {	var self = this;	this.onServerEvent(		'ServerTime',		function(data) {			self.handleServerTime(data);		}	);}</body></methods><methods><class-id>AppeX.JQueryMobileCalculatorClient</class-id> <category>javascript</category><body package="AppeX-Examples-Mobile">buildHtml() {	var self = this;	$("button").click(function(event){		event.preventDefault();		self.handleButtonClick(this, event);	});}</body><body package="AppeX-Examples-Mobile">handleButtonClick(button, event) {		var self = this,		response;	response = this.asyncMessageToServer("handleButtonClick", {"id": button.id , "key": $(button).text() });	response.onSuccess(		function(object) {			self.setValue(object);		}	);	return false;}</body><body package="AppeX-Examples-Mobile">initialize() {	this.display = $("#displayControl")[0];}</body><body package="AppeX-Examples-Mobile">setValue(value) {	this.display.value = value;}</body></methods><methods><class-id>AppeX.JQueryMobileCalculatorClient</class-id> <category>javascript - operations</category><body package="AppeX-Examples-Mobile">add(x, y) {	return x + y;}</body><body package="AppeX-Examples-Mobile">divide(x, y) {	if (y == 0) {		alert("Can not divide by 0");		return 0;	}	return x / y;}</body><body package="AppeX-Examples-Mobile">multiply(x, y) {	return x * y;}</body><body package="AppeX-Examples-Mobile">subtract(x, y) {	return x - y;}</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>Application</name><environment>AppeX</environment><super>SiouX.HttpResponder</super><private>false</private><indexed-type>none</indexed-type><inst-vars>clientSubscriptions session eventStream </inst-vars><class-inst-vars>settings requestActions subscriptionRegistry codeComposer combinedJavascriptLibrary </class-inst-vars><imports>			private Tools.Pragma			private Xtreams.*			private SiouX.*			private Protocols.*			</imports><category></category><attributes><package>AppeX-Server</package></attributes></class><class><name>ApplicationClient</name><environment>AppeX</environment><super>AppeX.JavascriptObject</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars>javascriptLibrary </class-inst-vars><imports></imports><category>bootstrap</category><attributes><package>AppeX-Client</package></attributes></class></st-source>