<?xml version="1.0"?><st-source><!-- Name: FieldValidation2-ExampleNotice: Copyright 2001-2014 Cincom Systems, Inc.  All rights reserved.Comment: This parcel/package contains FieldValidation2Example, which demonstrates completing a valid field entry based on initial characters entered.DbIdentifier: bear73DbTrace: 427966DbUsername: smichaelDbVersion: 8.0 - 1PackageName: FieldValidation2-ExampleParcel: #('FieldValidation2-Example')ParcelName: FieldValidation2-ExamplePrintStringCache: (8.0 - 1,smichael)Version: 8.0 - 1Date: 5:06:45 PM May 26, 2017 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.3 (may17.4) of May 26, 2017 on May 26, 2017 at 5:06:45 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>FieldValidation2Example</name><environment>Examples</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>productCode validCodes </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Examples-Help</category><attributes><package>FieldValidation2-Example</package></attributes></class><comment><class-id>Examples.FieldValidation2Example</class-id><body>FieldValidation2Example demonstrates completing a valid field entry based on initial characters entered.</body></comment><methods><class-id>Examples.FieldValidation2Example</class-id> <category>change messages</category><body package="FieldValidation2-Example">codeChanged	"The code entry was changed -- if the (partial) entry	uniquely identifies a valid product code, fill in the rest	of the code for the user."	| entry qualifiedCodes holder |	holder := self productCode.	entry := holder value.	entry := entry, '*'.	qualifiedCodes := OrderedCollection new.	self validCodes do: [ :code |		(entry match: code)			ifTrue: [qualifiedCodes add: code]].	qualifiedCodes size == 1		ifTrue: [			holder retractInterestsFor: self.			holder value: qualifiedCodes first.			holder onChangeSend: #codeChanged to: self].</body></methods><methods><class-id>Examples.FieldValidation2Example</class-id> <category>intialize-release</category><body package="FieldValidation2-Example">initialize	validCodes := Set new.	validCodes		add: 'SPARC10';		add: 'APPLEMAC';		add: 'HP700';		add: 'IBMPC'.</body></methods><methods><class-id>Examples.FieldValidation2Example</class-id> <category>interface opening</category><body package="FieldValidation2-Example">postBuildWith: aBuilder	"Ask the field's controller to accept continuously -- that is, to	return the entry to the model after each keystroke."	| ctrlr |	self productCode onChangeSend: #codeChanged to: self.	ctrlr := (aBuilder componentAt: #codeField) widget controller.	ctrlr continuousAccept: true.</body></methods><methods><class-id>Examples.FieldValidation2Example</class-id> <category>aspects</category><body package="FieldValidation2-Example">productCode	"This method was generated by UIDefiner. The initialization 	provided 	below may have been preempted by an initialize method."	^productCode isNil		ifTrue: [productCode := String new asValue]		ifFalse: [productCode]</body><body package="FieldValidation2-Example">validCodes	^validCodes</body></methods><methods><class-id>Examples.FieldValidation2Example class</class-id> <category>interface specs</category><body package="FieldValidation2-Example">windowSpec	"UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#FullSpec 		#window: 		#(#WindowSpec 			#label: 'FieldValidation2Example' 			#min: #(#Point 196 106 ) 			#max: #(#Point 196 106 ) 			#bounds: #(#Rectangle 505 480 701 586 ) ) 		#component: 		#(#SpecCollection 			#collection: #(				#(#InputFieldSpec 					#layout: #(#Rectangle 45 16 144 42 ) 					#name: #codeField 					#model: #productCode ) 				#(#LabelSpec 					#layout: #(#Point 19 48 ) 					#label: 'Valid partial entry' ) 				#(#LabelSpec 					#layout: #(#Point 8 67 ) 					#label: 'is completed for you' ) 				#(#LabelSpec 					#layout: #(#Point 24 84 ) 					#label: '(Try S, A, H or I)' ) ) ) )</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>ApplicationModel</name><environment>UI</environment><super>UI.Model</super><private>false</private><indexed-type>none</indexed-type><inst-vars>builder uiSession eventHandlers </inst-vars><class-inst-vars>savedWindowInformation </class-inst-vars><imports></imports><category>UIBuilder-Framework</category><attributes><package>UIBuilder-Framework</package></attributes></class></st-source>