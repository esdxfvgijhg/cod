<?xml version="1.0"?><st-source><!-- Name: Subcanvas2-ExampleNotice: Copyright 2001-2014 Cincom Systems, Inc.  All rights reserved.Comment: This parcel/package contains Subcanvas2Example, which demonstrates using subcanvas to reuse an interface or an entire application.DbIdentifier: bear73DbTrace: 427957DbUsername: smichaelDbVersion: 8.0 - 1DevelopmentPrerequisites: #(#(#any 'List2-Example' ''))PackageName: Subcanvas2-ExamplePackageName:: Subcanvas2-ExampleParcel: #('Subcanvas2-Example')ParcelName: Subcanvas2-ExamplePrerequisiteParcels: #(#('List2-Example' ''))PrintStringCache: (8.0 - 1,smichael)Version: 8.0 - 1Date: 5:06:44 PM May 26, 2017 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.3 (may17.4) of May 26, 2017 on May 26, 2017 at 5:06:44 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>Subcanvas2Example</name><environment>Examples</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>selectionInList classNames </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Examples-Help</category><attributes><package>Subcanvas2-Example</package></attributes></class><comment><class-id>Examples.Subcanvas2Example</class-id><body>Subcanvas2Example demonstrates using subcanvas to reuse an interface or an entire application.</body></comment><methods><class-id>Examples.Subcanvas2Example</class-id> <category>actions</category><body package="Subcanvas2-Example">add	"When reusing just the interface, the #add action must be 	implemented locally."	| entry newList |	"Prompt for the name to add."	entry := Dialog request: 'Add name'.	"If the entry is blank, exit."	entry isEmpty		ifTrue: [^nil].	"Update the list."	newList := SortedCollection withAll: self selectionInList list.	newList add: entry.	self selectionInList list: newList.	"Highlight the newly added entry."	self selectionInList selection: entry.</body><body package="Subcanvas2-Example">delete	"When reusing just the interface, the #delete action	must be implemented locally."	| deletedElement newList continue |	deletedElement := self selectionInList selection.	"If nothing is selected, warn the user and exit."	deletedElement isNil 		ifTrue: [^Dialog warn: 'Please select the entry to be deleted.'].	"Confirm intent to delete."	continue := Dialog confirm: 'Really delete this entry?'.	continue ifFalse: [^nil].	"If intent confirmed, update the list."	newList := SortedCollection withAll: self selectionInList list.	newList remove: deletedElement.	self selectionInList list: newList.</body></methods><methods><class-id>Examples.Subcanvas2Example</class-id> <category>aspects</category><body package="Subcanvas2-Example">classNames	^classNames</body><body package="Subcanvas2-Example">selectionInList	^selectionInList</body></methods><methods><class-id>Examples.Subcanvas2Example</class-id> <category>initialize-release</category><body package="Subcanvas2-Example">initialize	"Reusing List2Example's interface only -- initialize the list holder."	selectionInList := SelectionInList with: Core classNames.	"Reusing List2Example application -- initialize the application instance."	classNames := List2Example new.	classNames list: Core classNames.</body></methods><methods><class-id>Examples.Subcanvas2Example class</class-id> <category>interface specs</category><body package="Subcanvas2-Example">windowSpec	"UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Subcanvas2Example' 			#min: #(#{Core.Point} 50 50 ) 			#bounds: #(#{Graphics.Rectangle} 800 600 1180 917 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.SubCanvasSpec} 					#layout: #(#{Graphics.LayoutFrame} 20 0 100 0 -20 0.5 0 1 ) 					#flags: 0 					#majorKey: #{Examples.List2Example} 					#minorKey: #listSpec ) 				#(#{UI.SubCanvasSpec} 					#layout: #(#{Graphics.LayoutFrame} 20 0.5 100 0 -20 1 0 1 ) 					#flags: 0 					#majorKey: #{Examples.List2Example} 					#minorKey: #listSpec 					#clientKey: #classNames ) 				#(#{UI.LabelSpec} 					#layout: #(#{UI.AlignmentOrigin} 0 0.25 10 0 0.5 0 ) 					#label: 'Interface Reuse' ) 				#(#{UI.LabelSpec} 					#layout: #(#{UI.AlignmentOrigin} 0 0.75 10 0 0.5 0 ) 					#label: 'Application Reuse' ) 				#(#{UI.LabelSpec} 					#layout: #(#{UI.AlignmentOrigin} 0 0.25 36 0 0.5 0 ) 					#label: 'Local application supplies' 					#style: #small ) 				#(#{UI.LabelSpec} 					#layout: #(#{UI.AlignmentOrigin} 0 0.25 50 0 0.5 0 ) 					#label: 'list holder and actions' 					#style: #small ) 				#(#{UI.LabelSpec} 					#layout: #(#{UI.AlignmentOrigin} 0 0.75 36 0 0.5 0 ) 					#label: 'Local application supplies' 					#style: #small ) 				#(#{UI.LabelSpec} 					#layout: #(#{UI.AlignmentOrigin} 0 0.75 50 0 0.5 0 ) 					#label: 'instance of List2Example' 					#style: #small ) 				#(#{UI.DividerSpec} 					#layout: #(#{Graphics.LayoutFrame} -50 0.25 33 0 50 0.25 37 0 ) ) 				#(#{UI.DividerSpec} 					#layout: #(#{Graphics.LayoutFrame} -50 0.75 33 0 50 0.75 37 0 ) ) 				#(#{UI.RegionSpec} 					#layout: #(#{Graphics.LayoutFrame} -2 0.5 5 0 2 0.5 -5 1 ) 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#ColorValue #gray ) ) 					#lineWidth: 2 ) 				#(#{UI.LabelSpec} 					#layout: #(#{UI.AlignmentOrigin} 0 0.75 64 0 0.5 0 ) 					#label: '(which supplies list holder' 					#style: #small ) 				#(#{UI.LabelSpec} 					#layout: #(#{UI.AlignmentOrigin} 0 0.75 78 0 0.5 0 ) 					#label: 'and actions)' 					#style: #small ) ) ) )</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>ApplicationModel</name><environment>UI</environment><super>UI.Model</super><private>false</private><indexed-type>none</indexed-type><inst-vars>builder uiSession eventHandlers </inst-vars><class-inst-vars>savedWindowInformation </class-inst-vars><imports></imports><category>UIBuilder-Framework</category><attributes><package>UIBuilder-Framework</package></attributes></class></st-source>