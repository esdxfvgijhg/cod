<?xml version="1.0"?><st-source><!-- Name: MenuModify-ExampleNotice: Copyright 2001-2014 Cincom Systems, Inc.  All rights reserved.Comment: This parcel/package contains MenuModifyExample, which demonstrates how to modify a menu while the application is running.DbIdentifier: bear73DbTrace: 427944DbUsername: smichaelDbVersion: 8.0 - 1PackageName: MenuModify-ExampleParcel: #('MenuModify-Example')ParcelName: MenuModify-ExamplePrintStringCache: (8.0 - 1,smichael)Version: 8.0 - 1Date: 5:06:44 PM May 26, 2017 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.3 (may17.4) of May 26, 2017 on May 26, 2017 at 5:06:44 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>MenuModifyExample</name><environment>Examples</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>jobTitle benefit </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Examples-Help</category><attributes><package>MenuModify-Example</package></attributes></class><comment><class-id>Examples.MenuModifyExample</class-id><body>MenuModifyExample demonstrates a technique for modifying a menu while the application is running.</body></comment><methods><class-id>Examples.MenuModifyExample</class-id> <category>actions</category><body package="MenuModify-Example">addTitle	"Prompt for a new job title and add it to the list."	| newTitle jMenu |	newTitle := Dialog request: 'New title?'.	newTitle isEmpty ifTrue: [^self].	jMenu := self builder menuAt: #jobTitlesMenu.	jMenu addItemLabel: newTitle value: newTitle asSymbol.	self jobTitle value: newTitle asSymbol.</body><body package="MenuModify-Example">deleteTitle	"Prompt for a title and remove it from the list."	| jMenu removableTitles title item |	jMenu := self builder menuAt: #jobTitlesMenu.	"Don't permit the president to be overthrown."	removableTitles := jMenu labels 		reject: [ :nextTitle | nextTitle = 'President'].	title := Dialog		choose: 'Delete Title'		fromList: removableTitles		values: removableTitles		lines: 8		cancel: [^nil]		for: ScheduledControllers activeController view.	item := jMenu menuItemLabeled: title.	jMenu removeItem: item.	"If the deleted title is showing, pick the first title."	self jobTitle value == title asSymbol		ifTrue: [self jobTitle value: #President].</body></methods><methods><class-id>Examples.MenuModifyExample</class-id> <category>change messages</category><body package="MenuModify-Example">adjustBenefitList	"Hide benefit items that are not available to the currently	selected job title."	| bMenu item |	bMenu := self builder menuAt: #benefitsMenu.	item := bMenu menuItemLabeled: 'Golden Parachute'.	"Only the President gets the Golden Parachute."	self jobTitle value == #President		ifTrue: [bMenu unhideItem: item]		ifFalse: [bMenu hideItem: item].</body></methods><methods><class-id>Examples.MenuModifyExample</class-id> <category>aspects</category><body package="MenuModify-Example">benefit	^benefit</body><body package="MenuModify-Example">jobTitle	^jobTitle</body></methods><methods><class-id>Examples.MenuModifyExample</class-id> <category>initialize-release</category><body package="MenuModify-Example">initialize	| jMenu bMenu |	jMenu := self class jobTitlesMenu.	jobTitle := (jMenu valueForMenuItem: (jMenu menuItemAt: 1)) asValue.	jobTitle onChangeSend: #adjustBenefitList to: self.		bMenu := self class benefitsMenu.	benefit := (bMenu valueForMenuItem: (bMenu menuItemAt: 1)) asValue.</body></methods><methods><class-id>Examples.MenuModifyExample class</class-id> <category>resources</category><body package="MenuModify-Example">benefitsMenu	| mb menu |	mb := MenuBuilder new.	mb add: 'Health Insurance' -&gt; #health;		add: 'Retirement Fund' -&gt; #retirement;		add: 'Life Insurance' -&gt; #life;		add: 'Stock Options' -&gt; #stock;		add: 'Golden Parachute' -&gt; #parachute.	menu := mb menu.	menu backgroundColor: ColorValue chartreuse.	(menu menuItemLabeled: 'Golden Parachute') color: ColorValue red.	^menu</body><body package="MenuModify-Example">jobTitlesMenu	"UIMenuEditor new openOnClass: self andSelector: #jobTitlesMenu"	&lt;resource: #menu&gt;	^#(#Menu #(		#(#MenuItem #label: 'President' ) 		#(#MenuItem #label: 'Vice President' ) 		#(#MenuItem #label: 'Manager' ) 		#(#MenuItem #label: 'Programmer' ) ) #(4 ) 		#(#President #'Vice President' #Manager #Programmer ) ) decodeAsLiteralArray</body></methods><methods><class-id>Examples.MenuModifyExample class</class-id> <category>interface specs</category><body package="MenuModify-Example">windowSpec	"UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#FullSpec 		#window: 		#(#WindowSpec 			#label: 'MenuModifyExample' 			#min: #(#Point 318 157 ) 			#max: #(#Point 318 157 ) 			#bounds: #(#Rectangle 664 227 982 384 ) ) 		#component: 		#(#SpecCollection 			#collection: #(				#(#MenuButtonSpec 					#layout: #(#Rectangle 97 19 277 52 ) 					#model: #jobTitle 					#menu: #jobTitlesMenu ) 				#(#LabelSpec 					#layout: #(#Point 12 23 ) 					#label: 'Job Title' ) 				#(#LabelSpec 					#layout: #(#Point 12 112 ) 					#label: 'Benefit' ) 				#(#MenuButtonSpec 					#layout: #(#Rectangle 97 108 277 141 ) 					#model: #benefit 					#menu: #benefitsMenu ) 				#(#ActionButtonSpec 					#layout: #(#Point 91 56 ) 					#model: #addTitle 					#label: 'Add Title' 					#defaultable: true ) 				#(#ActionButtonSpec 					#layout: #(#Point 189 56 ) 					#model: #deleteTitle 					#label: 'Delete Title' 					#defaultable: true ) ) ) )</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>ApplicationModel</name><environment>UI</environment><super>UI.Model</super><private>false</private><indexed-type>none</indexed-type><inst-vars>builder uiSession eventHandlers </inst-vars><class-inst-vars>savedWindowInformation </class-inst-vars><imports></imports><category>UIBuilder-Framework</category><attributes><package>UIBuilder-Framework</package></attributes></class></st-source>