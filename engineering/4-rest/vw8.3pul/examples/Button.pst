<?xml version="1.0"?><st-source><!-- Name: Button-ExampleNotice: Copyright 2001-2014 Cincom Systems, Inc.  All rights reserved.Comment: This parcel/package contains the ButtonExample class, which demonstrates the use of action buttons, radio buttons, and checkboxes.DbIdentifier: bear73DbTrace: 427916DbUsername: smichaelDbVersion: 8.0 - 1PackageName: Button-ExampleParcel: #('Button-Example')ParcelName: Button-ExamplePrintStringCache: (8.0 - 1,smichael)Version: 8.0 - 1Date: 5:06:41 PM May 26, 2017 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.3 (may17.4) of May 26, 2017 on May 26, 2017 at 5:06:41 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>ButtonExample</name><environment>Examples</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>outputMode showMinutes showHours showSeconds </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Examples-Help</category><attributes><package>Button-Example</package></attributes></class><comment><class-id>Examples.ButtonExample</class-id><body>This example class demonstrates the use of action buttons, radio buttons and check boxes.</body></comment><methods><class-id>Examples.ButtonExample</class-id> <category>initialize-release</category><body package="Button-Example">initialize	super initialize.	outputMode := #dialog asValue.	showHours := true asValue.	showMinutes := true asValue.	showSeconds := true asValue.</body></methods><methods><class-id>Examples.ButtonExample</class-id> <category>aspects</category><body package="Button-Example">outputMode	^outputMode</body><body package="Button-Example">showHours	^showHours</body><body package="Button-Example">showMinutes	^showMinutes</body><body package="Button-Example">showSeconds	^showSeconds</body></methods><methods><class-id>Examples.ButtonExample</class-id> <category>actions</category><body package="Button-Example">tellTime	 | t tString |	t := Time now.	tString := String new.	"Assemble the time string based on the check boxes."	self showHours value		ifTrue: [tString := tString, t hours printString].	self showMinutes value		ifTrue: [tString := tString, ':', t minutes printString, ':']		ifFalse: [tString := tString, '::'].	self showSeconds value		ifTrue: [tString := tString, t seconds printString].	"Send the time string to the output channel set by the radio buttons."	self outputMode value == #transcript		ifTrue: [Transcript show: tString; cr]		ifFalse: [Dialog warn: tString]</body></methods><methods><class-id>Examples.ButtonExample class</class-id> <category>resources</category><body package="Button-Example">hourglass	^Cursor wait asOpaqueImage</body></methods><methods><class-id>Examples.ButtonExample class</class-id> <category>interface specs</category><body package="Button-Example">windowSpec	"UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#FullSpec 		#window: 		#(#WindowSpec 			#label: 'ButtonExample' 			#min: #(#Point 50 50 ) 			#bounds: #(#Rectangle 496 458 698 575 ) ) 		#component: 		#(#SpecCollection 			#collection: #(				#(#ActionButtonSpec 					#layout: #(#Rectangle 8 12 192 35 ) 					#model: #tellTime 					#label: 'Tell time' 					#style: #large 					#isDefault: false ) 				#(#RadioButtonSpec 					#layout: #(#Point 7 66 ) 					#model: #outputMode 					#label: 'Transcript' 					#style: #small 					#select: #transcript ) 				#(#RadioButtonSpec 					#layout: #(#Point 7 46 ) 					#model: #outputMode 					#label: 'Dialog' 					#style: #small 					#select: #dialog ) 				#(#CheckBoxSpec 					#layout: #(#LayoutOrigin 119 0 46 0 ) 					#model: #showHours 					#label: 'Hours' 					#style: #small ) 				#(#CheckBoxSpec 					#layout: #(#LayoutOrigin 119 0 67 0 ) 					#model: #showMinutes 					#label: 'Minutes' 					#style: #small ) 				#(#CheckBoxSpec 					#layout: #(#LayoutOrigin 119 0 88 0 ) 					#model: #showSeconds 					#label: 'Seconds' 					#style: #small ) ) ) )</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>ApplicationModel</name><environment>UI</environment><super>UI.Model</super><private>false</private><indexed-type>none</indexed-type><inst-vars>builder uiSession eventHandlers </inst-vars><class-inst-vars>savedWindowInformation </class-inst-vars><imports></imports><category>UIBuilder-Framework</category><attributes><package>UIBuilder-Framework</package></attributes></class></st-source>