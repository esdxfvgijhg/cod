<?xml version="1.0"?><st-source><!-- Name: Finalization-EphemeronNotice: Copyright 2009-2014 Cincom Systems, Inc.  All rights reserved.Comment: This class provides a simple finalization example using an Ephemeron and EphemeronDictionary.  ResourceUser opens a resource and provides for releasing the resource.  To perform finalization, ResourceUser registers its resource as an Ephemeron with PropertyManager, which holds it in an EphemeronDictionary.  Finalization actions are defined in PropertyManager.To exercise this example, evaluate in a workspace:	a := ResourceUser new.	a registerResource: (Ephemeron key: a resource value: 1).	a dropResource.DbIdentifier: bear73DbTrace: 427993DbUsername: smichaelDbVersion: 1.2PackageName: Finalization-EphemeronParcel: #('Finalization-Ephemeron')ParcelName: Finalization-EphemeronPrintStringCache: (1.2,smichael)Version: 1.2Date: 5:06:43 PM May 26, 2017 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.3 (may17.4) of May 26, 2017 on May 26, 2017 at 5:06:43 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>ResourceUser</name><environment>Smalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>finalizer resource </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Finalization-Ephemeron</package></attributes></class><comment><class-id>ResourceUser</class-id><body>ResourceUser registers a resource with PropertyManager for finalization.Instance Variables	finalizer	&lt;PropertyManager&gt;	holds the resouce for finalization.	resource	a resource needing finalization.</body></comment><class><name>PropertyManager</name><environment>Smalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>propertyDictionary </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Finalization-Ephemeron</package></attributes></class><comment><class-id>PropertyManager</class-id><body>PropertyManager holds an EphemeronDictionary for performing finalization actions on its elements.Instance Variables	propertyDictionary	&lt;EphemeronDictionary&gt;	holds elements to finalize.</body></comment><methods><class-id>ResourceUser</class-id> <category>accessing</category><body package="Finalization-Ephemeron">finalizer	^finalizer</body><body package="Finalization-Ephemeron">resource	^resource</body></methods><methods><class-id>ResourceUser</class-id> <category>initialize-release</category><body package="Finalization-Ephemeron">dropResource	resource close.	resource := nil</body><body package="Finalization-Ephemeron">initialize	finalizer := PropertyManager new.	resource := 'test.txt' asFilename writeStream.</body></methods><methods><class-id>ResourceUser</class-id> <category>resource registration</category><body package="Finalization-Ephemeron">registerResource	self registerResource:  (Ephemeron key: self resource value: 1 )</body><body package="Finalization-Ephemeron">registerResource: anEphemeron	self finalizer propertyDictionary add:  anEphemeron</body></methods><methods><class-id>ResourceUser class</class-id> <category>example</category><body package="Finalization-Ephemeron">example	"self example"	| app |	app := self new.	app registerResource.	app dropResource</body></methods><methods><class-id>ResourceUser class</class-id> <category>instance creation</category><body package="Finalization-Ephemeron">new	^super new initialize</body></methods><methods><class-id>PropertyManager</class-id> <category>accessing</category><body package="Finalization-Ephemeron">propertyDictionary	^propertyDictionary</body></methods><methods><class-id>PropertyManager</class-id> <category>finalization</category><body package="Finalization-Ephemeron">mournKeyOf: anEphemeron	anEphemeron key close.	self propertyDictionary removeKey: anEphemeron key ifAbsent: [].	Transcript cr; show: 'All clean'</body></methods><methods><class-id>PropertyManager</class-id> <category>initialize-release</category><body package="Finalization-Ephemeron">initialize	propertyDictionary := EphemeronDictionary new.	propertyDictionary manager: self</body></methods><methods><class-id>PropertyManager class</class-id> <category>instance creation</category><body package="Finalization-Ephemeron">new	^super new initialize.</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>Object</name><environment>Core</environment><super></super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Kernel-Objects</category><attributes><package>Kernel-Objects</package></attributes></class></st-source>