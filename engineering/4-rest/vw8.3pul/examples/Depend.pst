<?xml version="1.0"?><st-source><!-- Name: Dependency-ExampleNotice: Copyright 2001-2014 Cincom Systems, Inc.  All rights reserved.Comment: This parcel/package contains the DependencyExample class, which demonstrates creating a dependency between a list widget and a field widget.DbIdentifier: bear73DbTrace: 427920DbUsername: smichaelDbVersion: 8.0 - 1PackageName: Dependency-ExampleParcel: #('Dependency-Example')ParcelName: Dependency-ExamplePrintStringCache: (8.0 - 1,smichael)Version: 8.0 - 1Date: 5:06:42 PM May 26, 2017 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.3 (may17.4) of May 26, 2017 on May 26, 2017 at 5:06:42 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>DependencyExample</name><environment>Examples</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>colorNames fieldIsDependent selectedColor </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Examples-Help</category><attributes><package>Dependency-Example</package></attributes></class><comment><class-id>Examples.DependencyExample</class-id><body>This example class demonstrates a technique for linking two widgets, in this case a list and a field.</body></comment><methods><class-id>Examples.DependencyExample</class-id> <category>change messages</category><body package="Dependency-Example">changedDependency	"Turn on or off the dependency link between the list and	the input field, depending on the value of the check box."	| valueModel |	valueModel := self colorNames selectionIndexHolder.	self fieldIsDependent value		ifTrue: [valueModel onChangeSend: #changedSelection to: self]		ifFalse: [valueModel retractInterestsFor: self].</body><body package="Dependency-Example">changedSelection	"In the input field, echo the color name that is selected in the list. 	This message is only sent when the dependency is turned on."	self selectedColor value: self colorNames selection.</body></methods><methods><class-id>Examples.DependencyExample</class-id> <category>aspects</category><body package="Dependency-Example">colorNames	^colorNames</body><body package="Dependency-Example">fieldIsDependent	^fieldIsDependent</body><body package="Dependency-Example">selectedColor	^selectedColor</body></methods><methods><class-id>Examples.DependencyExample</class-id> <category>initialize-release</category><body package="Dependency-Example">initialize	colorNames := SelectionInList with: ColorValue constantNames.	selectedColor := String new asValue.	fieldIsDependent := false asValue.	"Arrange for the application model to take action when the	check box is turned on or off."	fieldIsDependent onChangeSend: #changedDependency to: self.</body></methods><methods><class-id>Examples.DependencyExample class</class-id> <category>interface specs</category><body package="Dependency-Example">windowSpec	"UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#FullSpec 		#window: 		#(#WindowSpec 			#label: 'DependencyExample' 			#min: #(#Point 40 20 ) 			#bounds: #(#Rectangle 267 359 451 698 ) ) 		#component: 		#(#SpecCollection 			#collection: #(				#(#CheckBoxSpec 					#layout: #(#AlignmentOrigin 0 0.5 25 0 0.5 0 ) 					#model: #fieldIsDependent 					#label: 'Make field dependent' ) 				#(#SequenceViewSpec 					#layout: #(#LayoutFrame 10 0 60 0 -10 1 -50 1 ) 					#name: #colorNames 					#model: #colorNames ) 				#(#InputFieldSpec 					#layout: #(#LayoutFrame 10 0 -40 1 -10 1 -10 1 ) 					#model: #selectedColor ) ) ) )</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>ApplicationModel</name><environment>UI</environment><super>UI.Model</super><private>false</private><indexed-type>none</indexed-type><inst-vars>builder uiSession eventHandlers </inst-vars><class-inst-vars>savedWindowInformation </class-inst-vars><imports></imports><category>UIBuilder-Framework</category><attributes><package>UIBuilder-Framework</package></attributes></class></st-source>