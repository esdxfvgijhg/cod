<?xml version="1.0"?><st-source><!-- Name: Subcanvas3-ExampleNotice: Copyright 2001-2014 Cincom Systems, Inc.  All rights reserved.Comment: This parcel/package contains Subcanvas3Example, which demonstrates substituting different interfaces in a subcanvas while the application is running.DbIdentifier: bear73DbTrace: 427958DbUsername: smichaelDbVersion: 8.0 - 1DevelopmentPrerequisites: #(#(#any 'Editor2-Example' '') #(#any 'List2-Example' ''))PackageName: Subcanvas3-ExampleParcel: #('Subcanvas3-Example')ParcelName: Subcanvas3-ExamplePrerequisiteParcels: #(#('Editor2-Example' '') #('List2-Example' ''))PrintStringCache: (8.0 - 1,smichael)Version: 8.0 - 1Date: 5:06:45 PM May 26, 2017 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.3 (may17.4) of May 26, 2017 on May 26, 2017 at 5:06:45 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>Subcanvas3Example</name><environment>Examples</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>classNames displayAspect listApplication </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Examples-Help</category><attributes><package>Subcanvas3-Example</package></attributes></class><comment><class-id>Examples.Subcanvas3Example</class-id><body>Subcanvas3Example demonstrates substituting different interfaces in a subcanvas while the application is running.</body></comment><methods><class-id>Examples.Subcanvas3Example</class-id> <category>change messages</category><body package="Subcanvas3-Example">changedAspect	| aspectOfClass |	aspectOfClass := self displayAspect value.	"If no class is selected, blank the subcanvas."	self classNames selection isNil		ifTrue: [self showNothing]		"A class is selected -- display its hierarchy, comment or methods."		ifFalse: [			aspectOfClass == #hierarchy				ifTrue: [self showHierarchy].			aspectOfClass == #comment				ifTrue: [self showComment].			aspectOfClass == #methods				ifTrue: [self showMethods]].</body><body package="Subcanvas3-Example">showComment	| selectedClass subcanvas spec application |	selectedClass := Smalltalk at: self classNames selection.	"Create the subapplication and initialize it."	application := Editor2Example new.	application text value: selectedClass comment.	"Get the spec object for the embedded canvas."	spec := Editor2Example interfaceSpecFor: #windowSpec.	"Get the subcanvas and install the editing application."	subcanvas := (self builder componentAt: #subcanvas) widget.	subcanvas client: application spec: spec.</body><body package="Subcanvas3-Example">showHierarchy	| selectedClass subcanvas spec application |	selectedClass := Smalltalk at: self classNames selection.	"Create the subapplication and initialize it."	application := Editor2Example new.	application text value: selectedClass printHierarchy.	"Get the spec object for the embedded canvas."	spec := Editor2Example interfaceSpecFor: #windowSpec.	"Get the subcanvas and install the editing application."	subcanvas := (self builder componentAt: #subcanvas) widget.	subcanvas client: application spec: spec.</body><body package="Subcanvas3-Example">showMethods	| selectedClass subcanvas spec |	selectedClass := Smalltalk at: self classNames selection.	spec := List2Example interfaceSpecFor: #listSpec.	"Install the method names as the collection in the list application."	self listApplication list: selectedClass selectors asSortedCollection.	"Set the subbuilder to nil to discard the old builder. This is only 	necessary when the application uses the builder later to access widgets."	listApplication builder: nil.	"Get the subcanvas and install the list application."	subcanvas := (self builder componentAt: #subcanvas) widget.	subcanvas client: listApplication spec: spec.	"Disable the embedded buttons (just to show that we can)."	(listApplication builder componentAt: #addButton) disable.	(listApplication builder componentAt: #deleteButton) disable.</body><body package="Subcanvas3-Example">showNothing	| subcanvas |	subcanvas := (self builder componentAt: #subcanvas) widget.	subcanvas client: nil.</body></methods><methods><class-id>Examples.Subcanvas3Example</class-id> <category>aspects</category><body package="Subcanvas3-Example">classNames	^classNames</body><body package="Subcanvas3-Example">displayAspect	^displayAspect</body><body package="Subcanvas3-Example">embeddedApplication	^nil asValue</body><body package="Subcanvas3-Example">listApplication	^listApplication</body></methods><methods><class-id>Examples.Subcanvas3Example</class-id> <category>initialize-release</category><body package="Subcanvas3-Example">initialize	classNames := SelectionInList with: Core classNames.	classNames selectionIndexHolder onChangeSend: #changedAspect to: self.	displayAspect := #hierarchy asValue.	displayAspect onChangeSend: #changedAspect to: self.	listApplication := List2Example new.</body></methods><methods><class-id>Examples.Subcanvas3Example class</class-id> <category>interface specs</category><body package="Subcanvas3-Example">windowSpec	"UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#FullSpec 		#window: 		#(#WindowSpec 			#label: 'Subcanvas3Example' 			#min: #(#Point 50 50 ) 			#bounds: #(#Rectangle 752 275 1220 591 ) ) 		#component: 		#(#SpecCollection 			#collection: #(				#(#SubCanvasSpec 					#layout: #(#LayoutFrame 1 0.333333 30 0 -1 1 -1 1 ) 					#name: #subcanvas 					#flags: 0 					#clientKey: #embeddedApplication ) 				#(#SequenceViewSpec 					#layout: #(#LayoutFrame 1 0 30 0 0 0.333333 -1 1 ) 					#model: #classNames ) 				#(#LabelSpec 					#layout: #(#AlignmentOrigin 0 0.166667 5 0 0.5 0 ) 					#label: 'Classes' ) 				#(#RadioButtonSpec 					#layout: #(#LayoutOrigin 95 0.333333 8 0 ) 					#model: #displayAspect 					#label: 'Class comment' 					#style: #small 					#select: #comment ) 				#(#RadioButtonSpec 					#layout: #(#LayoutOrigin 223 0.333333 8 0 ) 					#model: #displayAspect 					#label: 'Methods' 					#style: #small 					#select: #methods ) 				#(#RadioButtonSpec 					#layout: #(#LayoutOrigin 4 0.333333 8 0 ) 					#model: #displayAspect 					#label: 'Hierarchy' 					#style: #small 					#select: #hierarchy ) ) ) )</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>ApplicationModel</name><environment>UI</environment><super>UI.Model</super><private>false</private><indexed-type>none</indexed-type><inst-vars>builder uiSession eventHandlers </inst-vars><class-inst-vars>savedWindowInformation </class-inst-vars><imports></imports><category>UIBuilder-Framework</category><attributes><package>UIBuilder-Framework</package></attributes></class></st-source>