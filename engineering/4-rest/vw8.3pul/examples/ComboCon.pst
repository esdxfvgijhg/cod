<?xml version="1.0"?><st-source><!-- Name: ComboConversion-ExampleNotice: Copyright 2001-2014 Cincom Systems, Inc.  All rights reserved.Comment: This parcel/package contains the ComboConversionExample, which uses a ComboBox widget to present and allow the user to select from a list of Employees.DbIdentifier: bear73DbTrace: 427924DbUsername: smichaelDbVersion: 8.0 - 1DevelopmentPrerequisites: #(#(#any 'Employee-Example' ''))PackageName: ComboConversion-ExampleParcel: #('ComboConversion-Example')ParcelName: ComboConversion-ExamplePrerequisiteParcels: #(#('Employee-Example' ''))PrintStringCache: (8.0 - 1,smichael)Version: 8.0 - 1Date: 5:06:42 PM May 26, 2017 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.3 (may17.4) of May 26, 2017 on May 26, 2017 at 5:06:42 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>ComboConversionExample</name><environment>Examples</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>employeeChoices employee </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Examples-Help</category><attributes><package>ComboConversion-Example</package></attributes></class><comment><class-id>Examples.ComboConversionExample</class-id><body>ComboConversionExample class demonstrates the use of a ComboBox widget to display a list of Employee objects.  Browse the converting methods for examples of converting between a name that is displayable in the list and the domain object it identifies.</body></comment><methods><class-id>Examples.ComboConversionExample</class-id> <category>aspects</category><body package="ComboConversion-Example">employee	^employee</body><body package="ComboConversion-Example">employeeChoices	^employeeChoices</body></methods><methods><class-id>Examples.ComboConversionExample</class-id> <category>converting</category><body package="ComboConversion-Example">employeeToString: anEmployee 	"Return a String corresponding to the given Employee. This String is the 	Employee's name, which will appear in the combo box's pull-down list and 	field."	^anEmployee name</body><body package="ComboConversion-Example">stringToEmployee: aString 	"Return an Employee corresponding to the given String. If the String 	corresponds to the name of an Employee on the choices list, return that 	Employee. Otherwise, create a new Employee and add it to the list."	| theEmp |	theEmp := self employeeChoices value detect: [:each | each name = aString]				ifNone: [nil].	theEmp isNil		ifTrue: 			[theEmp := Employee new name: aString.			self employeeChoices value addLast: theEmp].	^theEmp</body></methods><methods><class-id>Examples.ComboConversionExample</class-id> <category>initialize-release</category><body package="ComboConversion-Example">initialize	"Initialize the combo box with a new, empty Employee. Then provide a List of 	choices containing several Employee instances. Put this List in a value holder."	| aList anEmp |	employee := Employee new initialize asValue.	aList := List new.	anEmp := Employee new initialize.	anEmp name: 'Tami Hayes'; empNo: '341-2'; citizen: true.	aList add: anEmp.	anEmp := Employee new initialize.	anEmp name: 'Leo Mazon'; empNo: '786-9'; citizen: false.	aList add: anEmp.	employeeChoices := aList asValue</body></methods><methods><class-id>Examples.ComboConversionExample class</class-id> <category>interface specs</category><body package="ComboConversion-Example">windowSpec	"UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#FullSpec 		#window: 		#(#WindowSpec 			#label: 'ComboConversionExample' 			#min: #(#Point 40 20 ) 			#bounds: #(#Rectangle 626 260 853 350 ) ) 		#component: 		#(#SpecCollection 			#collection: #(				#(#ComboBoxSpec 					#layout: #(#LayoutFrame 0 0.171806 0 0.466667 0 0.832599 0 0.744444 ) 					#model: #employee 					#style: #default 					#isReadOnly: false 					#type: #object 					#comboList: #employeeChoices 					#readSelector: 					#stringToEmployee: 					#printSelector: 					#employeeToString: ) 				#(#LabelSpec 					#layout: #(#Point 38 13 ) 					#label: 'Select an employee:' ) ) ) )</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>ApplicationModel</name><environment>UI</environment><super>UI.Model</super><private>false</private><indexed-type>none</indexed-type><inst-vars>builder uiSession eventHandlers </inst-vars><class-inst-vars>savedWindowInformation </class-inst-vars><imports></imports><category>UIBuilder-Framework</category><attributes><package>UIBuilder-Framework</package></attributes></class></st-source>