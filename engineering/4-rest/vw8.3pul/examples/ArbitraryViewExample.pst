<?xml version="1.0"?><st-source><!-- Name: ArbitraryViewExampleNotice: Copyright 2002-2016 Cincom Systems, Inc.  All rights reserved.Comment: This parcel/package contains ArbitraryViewExample which demonstrates adding a graphic as a column label.DbIdentifier: bear73DbTrace: 492750DbUsername: smichaelDbVersion: 8.2 - 1PackageName: ArbitraryViewExampleParcel: #('ArbitraryViewExample')PrintStringCache: (8.2 - 1,smichael)Version: 8.2 - 1Date: 5:06:46 PM May 26, 2017 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.3 (may17.4) of May 26, 2017 on May 26, 2017 at 5:06:46 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>ArbitraryViewExample</name><environment>Examples</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>dsvList selectedRow </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Examples-Help</category><attributes><package>ArbitraryViewExample</package></attributes></class><comment><class-id>Examples.ArbitraryViewExample</class-id><body>ArbitraryViewExample demonstrates adding a graphic as a column label. Expands on Dataset3Example.Instance Variables:	dsvList - List of rows	selectedRow - Employee instance of the selected row</body></comment><methods><class-id>Examples.ArbitraryViewExample</class-id> <category>aspects</category><body package="ArbitraryViewExample">columnOneSpec	^(ArbitraryViewSpec new)		source: #source:;		flags: 0</body><body package="ArbitraryViewExample">dsvList	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^dsvList isNil		ifTrue:			[dsvList :=  SelectionInList new.			dsvList selectionIndexHolder compute:				[:v |				self selectedRow value: dsvList selection].			dsvList]		ifFalse:			[dsvList]</body><body package="ArbitraryViewExample">selectedRow	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^selectedRow isNil		ifTrue:			[selectedRow := nil asValue]		ifFalse:			[selectedRow]</body><body package="ArbitraryViewExample">source: aValue	^(ExtendedLabelAndIcon with: aValue) networkDrive</body></methods><methods><class-id>Examples.ArbitraryViewExample</class-id> <category>initialize-release</category><body package="ArbitraryViewExample">initialize		| aList anEmp |	aList := List new.	"The aspect for the dataset should be a list of Employee instances. Create an employee to put in the list."	anEmp := Employee new initialize.	anEmp 		name: 'Tami Hayes'; 		empNo: '341-2'; 		citizen: true.	aList add: anEmp.	"Create an employee to put in the list."	anEmp := Employee new initialize.	anEmp 		name: 'Leo Mazon'; 		empNo: '786-9'; 		citizen: false.	aList add: anEmp.	"Set the list for the dataset aspect. This list appears when you start."	self dsvList list: aList.	super initialize.</body></methods><methods><class-id>Examples.ArbitraryViewExample</class-id> <category>interface opening</category><body package="ArbitraryViewExample">postBuildWith: aBuilder	| descriptors |	descriptors := (aBuilder componentAt:#Dataset1) widget columnDescriptors.	descriptors first rendererSpec: self columnOneSpec.</body></methods><methods><class-id>Examples.ArbitraryViewExample class</class-id> <category>resources</category><body package="ArbitraryViewExample">number	^('EmployeeNumber' asText emphasizeAllWith: (Array with: #bold with: #color-&gt;ColorValue red)) asComposedText</body></methods><methods><class-id>Examples.ArbitraryViewExample class</class-id> <category>interface specs</category><body package="ArbitraryViewExample">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Dataset with arbitrary view' 			#bounds: #(#{Graphics.Rectangle} 800 600 1136 834 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.DataSetSpec} 					#properties: #(#{UI.PropertyListDictionary} #showHorizontalLines true #allowColumnResizing true #showVerticalLines true #allowColumnReordering false #allowSorting false ) 					#layout: #(#{Graphics.Rectangle} 11 18 314 196 ) 					#name: #Dataset1 					#model: #dsvList 					#columns: #(						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true ) 							#model: #'selectedRow name' 							#label: 'Name' 							#labelIsImage: false 							#width: 80 							#rendererType: #Text 							#editorType: #InputField 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true ) 							#model: #'selectedRow empNo' 							#label: 'number' 							#labelIsImage: true 							#width: 114 							#rendererType: #Text 							#editorType: #InputField 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true ) 							#model: #'selectedRow citizen' 							#label: 'U.S. Citizen' 							#labelIsImage: false 							#width: 80 							#rendererType: #CheckBox 							#editorType: #CheckBox 							#noScroll: false ) ) ) ) ) )</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>ApplicationModel</name><environment>UI</environment><super>UI.Model</super><private>false</private><indexed-type>none</indexed-type><inst-vars>builder uiSession eventHandlers </inst-vars><class-inst-vars>savedWindowInformation </class-inst-vars><imports></imports><category>UIBuilder-Framework</category><attributes><package>UIBuilder-Framework</package></attributes></class></st-source>