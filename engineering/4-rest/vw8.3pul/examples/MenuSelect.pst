<?xml version="1.0"?><st-source><!-- Name: MenuSelect-ExampleNotice: Copyright 2002-2014 Cincom Systems, Inc.  All rights reserved.Comment: MenuSelectExample demonstrates one-of-n selection by a menuDbIdentifier: bear73DbTrace: 427969DbUsername: smichaelDbVersion: 1.3PackageName: MenuSelect-ExampleParcel: #('MenuSelect-Example')ParcelName: MenuSelect-ExamplePrintStringCache: (1.3,smichael)Version: 1.3Date: 5:06:46 PM May 26, 2017 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.3 (may17.4) of May 26, 2017 on May 26, 2017 at 5:06:46 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>MenuSelectExample</name><environment>Examples</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>career </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Examples-Help</category><attributes><package>MenuSelect-Example</package></attributes></class><comment><class-id>Examples.MenuSelectExample</class-id><body>MenuSelectExample demonstrates one-of-n selection by a menuInstance Variables:	career	&lt;ValueModel&gt;	model for career chosen</body></comment><methods><class-id>Examples.MenuSelectExample</class-id> <category>actions</category><body package="MenuSelect-Example">beAccountant	self career value: #accountant</body><body package="MenuSelect-Example">beDoctor	self career value: #doctor</body><body package="MenuSelect-Example">beEngineer	self career value: #engineer</body><body package="MenuSelect-Example">beFarmer	self career value: #farmer</body><body package="MenuSelect-Example">bePoliceman	self career value: #policeman</body></methods><methods><class-id>Examples.MenuSelectExample</class-id> <category>aspects</category><body package="MenuSelect-Example">career	^career isNil		ifTrue:			[career := nil asValue]		ifFalse:			[career]</body></methods><methods><class-id>Examples.MenuSelectExample class</class-id> <category>resources</category><body package="MenuSelect-Example">menuBar	"Tools.MenuEditor new openOnClass: self andSelector: #menuBar"	&lt;resource: #menu&gt;	^#(#{UI.Menu} #(			#(#{UI.MenuItem} 				#rawLabel: 'Careers' 				#submenu: #(#{UI.Menu} #(						#(#{UI.MenuItem} 							#rawLabel: 'Farmer' 							#nameKey: #farmer 							#value: #beFarmer 							#indicationSelector: #career ) 						#(#{UI.MenuItem} 							#rawLabel: 'Policeman' 							#nameKey: #policeman 							#value: #bePoliceman 							#indicationSelector: #career ) 						#(#{UI.MenuItem} 							#rawLabel: 'Doctor' 							#nameKey: #doctor 							#value: #beDoctor 							#indicationSelector: #career ) 						#(#{UI.MenuItem} 							#rawLabel: 'Accountant' 							#nameKey: #accountant 							#value: #beAccountant 							#indicationSelector: #career ) 						#(#{UI.MenuItem} 							#rawLabel: 'Engineer' 							#nameKey: #engineer 							#value: #beEngineer 							#indicationSelector: #career ) ) #(5 ) nil ) ) ) #(1 ) nil ) decodeAsLiteralArray</body></methods><methods><class-id>Examples.MenuSelectExample class</class-id> <category>interface specs</category><body package="MenuSelect-Example">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Menu select example' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 1600 1200 ) 			#bounds: #(#{Graphics.Rectangle} 800 600 1024 781 ) 			#flags: 4 			#menu: #menuBar ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.RadioButtonSpec} 					#layout: #(#{Core.Point} 12 17 ) 					#name: #RadioButton1 					#model: #career 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #beFarmer ) 					#label: 'Farmer' 					#select: #farmer ) 				#(#{UI.RadioButtonSpec} 					#layout: #(#{Core.Point} 12 43 ) 					#name: #RadioButton2 					#model: #career 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #bePoliceman ) 					#label: 'Policeman' 					#select: #policeman ) 				#(#{UI.RadioButtonSpec} 					#layout: #(#{Core.Point} 12 69 ) 					#name: #RadioButton3 					#model: #career 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #beDoctor ) 					#label: 'Doctor' 					#select: #doctor ) 				#(#{UI.RadioButtonSpec} 					#layout: #(#{Core.Point} 12 95 ) 					#name: #RadioButton4 					#model: #career 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #beAccountant ) 					#label: 'Accountant' 					#select: #accountant ) 				#(#{UI.RadioButtonSpec} 					#layout: #(#{Core.Point} 12 121 ) 					#name: #RadioButton5 					#model: #career 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #beEngineer ) 					#label: 'Engineer' 					#select: #engineer ) ) ) )</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>ApplicationModel</name><environment>UI</environment><super>UI.Model</super><private>false</private><indexed-type>none</indexed-type><inst-vars>builder uiSession eventHandlers </inst-vars><class-inst-vars>savedWindowInformation </class-inst-vars><imports></imports><category>UIBuilder-Framework</category><attributes><package>UIBuilder-Framework</package></attributes></class></st-source>