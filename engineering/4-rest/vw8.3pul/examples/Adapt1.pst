<?xml version="1.0"?><st-source><!-- Name: Adapt1-ExampleNotice: Copyright 2001-2014 Cincom Systems, Inc.  All rights reserved.Comment: This parcel/package contains Adaptor1Example class, an example of using simple ValueModels and dependencies with its domain model Customer1Example.DbIdentifier: bear73DbTrace: 427910DbUsername: smichaelDbVersion: 8.0 - 1DevelopmentPrerequisites: #(#(#any 'Cust1-Example' ''))PackageName: Adapt1-ExampleParcel: #('Adapt1-Example')ParcelName: Adapt1-ExamplePrerequisiteParcels: #(#('Cust1-Example' ''))PrintStringCache: (8.0 - 1,smichael)Version: 8.0 - 1Date: 5:06:41 PM May 26, 2017 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.3 (may17.4) of May 26, 2017 on May 26, 2017 at 5:06:41 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>Adaptor1Example</name><environment>Examples</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>customers accountID address name phoneNumber </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Examples-Help</category><attributes><package>Adapt1-Example</package></attributes></class><comment><class-id>Examples.Adaptor1Example</class-id><body>Adaptor1Example class demonstrates the use of a value holder and the use of onChangeSend: to coordinate changes with a domain model, Customer1Example. Browse the initialize-release methods for configuring dependencies, and the change messages methods for updating the domain model. Instance Variables:	accountID	&lt;ValueHolder on: Integer&gt;	customer accountID	address	&lt;ValueHolder on: String&gt;	customer address	customers	&lt;SelectionInList&gt;	list model for customer information	name	&lt;ValueHolder on: String&gt;	customer name	phoneNumber	&lt;ValueHolder on: String&gt;	customer phoneNumber</body></comment><methods><class-id>Examples.Adaptor1Example</class-id> <category>aspects</category><body package="Adapt1-Example">accountID	^accountID</body><body package="Adapt1-Example">address	^address</body><body package="Adapt1-Example">customers	^customers</body><body package="Adapt1-Example">name	^name</body><body package="Adapt1-Example">phoneNumber	^phoneNumber</body></methods><methods><class-id>Examples.Adaptor1Example</class-id> <category>change messages</category><body package="Adapt1-Example">changedAddress	| chosenCustomer |	chosenCustomer := self customers selection.	chosenCustomer isNil		ifFalse: [			chosenCustomer address: self address value].</body><body package="Adapt1-Example">changedCustomer	| chosenCustomer |	chosenCustomer := self customers selection.	chosenCustomer isNil		ifTrue: [			self accountID value: 0.			self name value: ''.			self address value: ''.			self phoneNumber value: '']		ifFalse: [			self accountID value: chosenCustomer accountID.			self name value: chosenCustomer name.			self address value: chosenCustomer address.			self phoneNumber value: chosenCustomer phoneNumber].	#( #accountID #name #address #phoneNumber)		do: [ :componentName |			(self builder componentAt: componentName)				isEnabled: chosenCustomer notNil].</body><body package="Adapt1-Example">changedID	| chosenCustomer |	chosenCustomer := self customers selection.	chosenCustomer isNil		ifFalse: [			chosenCustomer accountID: self accountID value].	self redisplayList.</body><body package="Adapt1-Example">changedName	| chosenCustomer |	chosenCustomer := self customers selection.	chosenCustomer isNil		ifFalse: [			chosenCustomer name: self name value].	self redisplayList.</body><body package="Adapt1-Example">changedPhone	| chosenCustomer |	chosenCustomer := self customers selection.	chosenCustomer isNil		ifFalse: [			chosenCustomer phoneNumber: self phoneNumber value].</body></methods><methods><class-id>Examples.Adaptor1Example</class-id> <category>initialize-release</category><body package="Adapt1-Example">initialize	customers := SelectionInList new.	customers selectionIndexHolder onChangeSend: #changedCustomer to: self.	self initializeID.	self initializeName.	self initializeAddress.	self initializePhone.</body><body package="Adapt1-Example">initializeAddress	address := ValueHolder newString.	address onChangeSend: #changedAddress to: self.</body><body package="Adapt1-Example">initializeID	accountID := 0 asValue.	accountID onChangeSend: #changedID to: self.</body><body package="Adapt1-Example">initializeName	name := ValueHolder newString.	name onChangeSend: #changedName to: self.</body><body package="Adapt1-Example">initializePhone	phoneNumber := ValueHolder newString.	phoneNumber onChangeSend: #changedPhone to: self.</body></methods><methods><class-id>Examples.Adaptor1Example</class-id> <category>private</category><body package="Adapt1-Example">redisplayList	(self builder componentAt: #customers) widget invalidate.</body></methods><methods><class-id>Examples.Adaptor1Example</class-id> <category>actions</category><body package="Adapt1-Example">add	| list selectionInList |	selectionInList := self customers.	list := selectionInList list.	"Add new customer."	list add: Customer1Example new.	"Highlight new customer."	selectionInList selectionIndex: list size.</body></methods><methods><class-id>Examples.Adaptor1Example class</class-id> <category>interface specs</category><body package="Adapt1-Example">windowSpec	"UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#FullSpec 		#window: 		#(#WindowSpec 			#label: 'Adaptor1Example' 			#min: #(#Point 506 188 ) 			#max: #(#Point 506 188 ) 			#bounds: #(#Rectangle 668 652 1174 840 ) ) 		#component: 		#(#SpecCollection 			#collection: #(				#(#LabelSpec 					#layout: #(#Point 177 19 ) 					#label: 'Customer ID' ) 				#(#LabelSpec 					#layout: #(#Point 177 56 ) 					#label: 'Name' ) 				#(#LabelSpec 					#layout: #(#Point 177 93 ) 					#label: 'Address' ) 				#(#LabelSpec 					#layout: #(#Point 177 129 ) 					#label: 'Phone' ) 				#(#LabelSpec 					#layout: #(#Point 278 165 ) 					#label: '(These fields use ValueHolders)' 					#style: #small ) 				#(#ActionButtonSpec 					#layout: #(#AlignmentOrigin 0 0.166667 4 0 0.5 0 ) 					#model: #add 					#label: 'Add customer' ) 				#(#SequenceViewSpec 					#layout: #(#LayoutFrame 10 0 40 0 0 0.333333 -10 1 ) 					#name: #customers 					#flags: 15 					#model: #customers ) 				#(#InputFieldSpec 					#layout: #(#Rectangle 286 22 333 44 ) 					#name: #accountID 					#flags: 40 					#model: #accountID 					#type: #number ) 				#(#InputFieldSpec 					#layout: #(#Rectangle 286 57 483 81 ) 					#name: #name 					#flags: 40 					#model: #name ) 				#(#InputFieldSpec 					#layout: #(#Rectangle 286 94 483 118 ) 					#name: #address 					#flags: 40 					#model: #address ) 				#(#InputFieldSpec 					#layout: #(#Rectangle 286 130 483 154 ) 					#name: #phoneNumber 					#flags: 40 					#model: #phoneNumber ) ) ) )</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>ApplicationModel</name><environment>UI</environment><super>UI.Model</super><private>false</private><indexed-type>none</indexed-type><inst-vars>builder uiSession eventHandlers </inst-vars><class-inst-vars>savedWindowInformation </class-inst-vars><imports></imports><category>UIBuilder-Framework</category><attributes><package>UIBuilder-Framework</package></attributes></class></st-source>