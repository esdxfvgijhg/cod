<?xml version="1.0"?><st-source><!-- Name: WSSecurityTypesNotice: Copyright 2011-2014 Cincom Systems, Inc.  All rights reserved.Comment: The package includes classes that are created from XML Schema complex types:  http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd   http://docs.oasis-open.org/wss/oasis-wsswssecurity-secext-1.1.xsdDbIdentifier: bear73DbTrace: 493911DbUsername: tkoganDbVersion: 8.3 - 0DevelopmentPrerequisites: #(#(#any 'XMLObjectMarshalers' ''))PackageName: WSSecurityTypesParcel: #('WSSecurityTypes')PrerequisiteDescriptions: #(#(#name 'XMLObjectMarshalers' #componentType #package))PrerequisiteParcels: #(#('XMLObjectMarshalers' ''))PrintStringCache: (8.3 - 0,tkogan)Version: 8.3 - 0Date: 2:31:40 PM April 28, 2017 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.3 (apr17.3) of April 28, 2017 on April 28, 2017 at 2:31:40 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><name-space><name>WSSecurity</name><environment>Smalltalk</environment><private>false</private><imports>			private Smalltalk.*			</imports><category>Web Services</category><attributes><package>WSSecurityTypes</package></attributes></name-space><class><name>EmbeddedType</name><environment>WSSecurity</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>choiceValue valueType anyAttribute </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Web Services</category><attributes><package>WSSecurityTypes</package></attributes></class><class><name>ReferenceType</name><environment>WSSecurity</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>uRI valueType anyAttribute </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Web Services</category><attributes><package>WSSecurityTypes</package></attributes></class><class><name>UsernameTokenType</name><environment>WSSecurity</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>username any id anyAttribute </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Web Services</category><attributes><package>WSSecurityTypes</package></attributes></class><class><name>AttributedString</name><environment>WSSecurity</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>value id anyAttribute </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Web Services</category><attributes><package>WSSecurityTypes</package></attributes></class><class><name>TransformationParametersType</name><environment>WSSecurity</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>any anyAttribute </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Web Services</category><attributes><package>WSSecurityTypes</package></attributes></class><class><name>EncodedString</name><environment>WSSecurity</environment><super>WSSecurity.AttributedString</super><private>false</private><indexed-type>none</indexed-type><inst-vars>encodingType </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Web Services</category><attributes><package>WSSecurityTypes</package></attributes></class><class><name>SecurityTokenReferenceType</name><environment>WSSecurity</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>choiceValue id usage anyAttribute </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Web Services</category><attributes><package>WSSecurityTypes</package></attributes></class><class><name>SecurityHeaderType</name><environment>WSSecurity</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>any anyAttribute </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Web Services</category><attributes><package>WSSecurityTypes</package></attributes></class><class><name>PasswordString</name><environment>WSSecurity</environment><super>WSSecurity.AttributedString</super><private>false</private><indexed-type>none</indexed-type><inst-vars>type </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Web Services</category><attributes><package>WSSecurityTypes</package></attributes></class><class><name>KeyIdentifierType</name><environment>WSSecurity</environment><super>WSSecurity.EncodedString</super><private>false</private><indexed-type>none</indexed-type><inst-vars>valueType </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Web Services</category><attributes><package>WSSecurityTypes</package></attributes></class><class><name>BinarySecurityTokenType</name><environment>WSSecurity</environment><super>WSSecurity.EncodedString</super><private>false</private><indexed-type>none</indexed-type><inst-vars>valueType </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Web Services</category><attributes><package>WSSecurityTypes</package></attributes></class><methods><class-id>WSSecurity.EmbeddedType</class-id> <category>accessing</category><body package="WSSecurityTypes">anyAttributes	^anyAttribute</body><body package="WSSecurityTypes">anyAttributes: anObject	anyAttribute := anObject</body><body package="WSSecurityTypes">choiceValue	^choiceValue</body><body package="WSSecurityTypes">choiceValue: aCollectionOfAssociations	choiceValue := aCollectionOfAssociations</body><body package="WSSecurityTypes">valueType	^valueType</body><body package="WSSecurityTypes">valueType: aURI	valueType := aURI</body></methods><methods><class-id>WSSecurity.ReferenceType</class-id> <category>accessing</category><body package="WSSecurityTypes">anyAttributes	^anyAttribute</body><body package="WSSecurityTypes">anyAttributes: anObject	anyAttribute := anObject</body><body package="WSSecurityTypes">uRI	^uRI</body><body package="WSSecurityTypes">uRI: aURI	uRI := aURI</body><body package="WSSecurityTypes">valueType	^valueType</body><body package="WSSecurityTypes">valueType: aURI	valueType := aURI</body></methods><methods><class-id>WSSecurity.UsernameTokenType</class-id> <category>accessing</category><body package="WSSecurityTypes">any	^any</body><body package="WSSecurityTypes">any: anObject	any := anObject</body><body package="WSSecurityTypes">anyAttributes	^anyAttribute</body><body package="WSSecurityTypes">anyAttributes: anObject	anyAttribute := anObject</body><body package="WSSecurityTypes">id	^id</body><body package="WSSecurityTypes">id: aString	id := aString</body><body package="WSSecurityTypes">username	^username</body><body package="WSSecurityTypes">username: aAttributedString	username := aAttributedString</body></methods><methods><class-id>WSSecurity.AttributedString</class-id> <category>accessing</category><body package="WSSecurityTypes">anyAttributes	^anyAttribute</body><body package="WSSecurityTypes">anyAttributes: anObject	anyAttribute := anObject</body><body package="WSSecurityTypes">id	^id</body><body package="WSSecurityTypes">id: aString	id := aString</body><body package="WSSecurityTypes">value	^value</body><body package="WSSecurityTypes">value: aString	value := aString</body></methods><methods><class-id>WSSecurity.TransformationParametersType</class-id> <category>accessing</category><body package="WSSecurityTypes">any	^any</body><body package="WSSecurityTypes">any: anObject	any := anObject</body><body package="WSSecurityTypes">anyAttributes	^anyAttribute</body><body package="WSSecurityTypes">anyAttributes: anObject	anyAttribute := anObject</body></methods><methods><class-id>WSSecurity.EncodedString</class-id> <category>accessing</category><body package="WSSecurityTypes">encodingType	^encodingType</body><body package="WSSecurityTypes">encodingType: aURI	encodingType := aURI</body></methods><methods><class-id>WSSecurity.SecurityTokenReferenceType</class-id> <category>accessing</category><body package="WSSecurityTypes">anyAttributes	^anyAttribute</body><body package="WSSecurityTypes">anyAttributes: anObject	anyAttribute := anObject</body><body package="WSSecurityTypes">choiceValue	^choiceValue</body><body package="WSSecurityTypes">choiceValue: aCollectionOfAssociations	choiceValue := aCollectionOfAssociations</body><body package="WSSecurityTypes">id	^id</body><body package="WSSecurityTypes">id: aString	id := aString</body><body package="WSSecurityTypes">usage	^usage</body><body package="WSSecurityTypes">usage: aURI	usage := aURI</body></methods><methods><class-id>WSSecurity.SecurityHeaderType</class-id> <category>accessing</category><body package="WSSecurityTypes">any	^any</body><body package="WSSecurityTypes">any: anObject	any := anObject</body><body package="WSSecurityTypes">anyAttributes	^anyAttribute</body><body package="WSSecurityTypes">anyAttributes: anObject	anyAttribute := anObject</body></methods><methods><class-id>WSSecurity.PasswordString</class-id> <category>accessing</category><body package="WSSecurityTypes">type	^type</body><body package="WSSecurityTypes">type: aURI	type := aURI</body></methods><methods><class-id>WSSecurity.KeyIdentifierType</class-id> <category>accessing</category><body package="WSSecurityTypes">valueType	^valueType</body><body package="WSSecurityTypes">valueType: aURI	valueType := aURI</body></methods><methods><class-id>WSSecurity.BinarySecurityTokenType</class-id> <category>accessing</category><body package="WSSecurityTypes">valueType	^valueType</body><body package="WSSecurityTypes">valueType: aURI	valueType := aURI</body></methods><methods><class-id>WebServices.XMLObjectBinding class</class-id> <category>accessing bindings</category><body package="WSSecurityTypes">wsSecurity11Binding	^self 		bindingAtNamespace: 'http://docs.oasis-open.org/wss/oasis-wsswssecurity-secext-1.1.xsd' 		ifAbsent: [XMLObjectBinding loadFrom: self wsSecurity11Specification readStream]</body></methods><methods><class-id>WebServices.XMLObjectBinding class</class-id> <category>specifications</category><body package="WSSecurityTypes">wsSecurity11Specification" XMLObjectBinding loadBindings: self wsSecurity11Specification readStream"^'&lt;schemaBindings&gt;	&lt;xmlToSmalltalkBinding targetNamespace="http://docs.oasis-open.org/wss/oasis-wsswssecurity-secext-1.1.xsd"defaultClassNamespace="WSSecurity" elementFormDefault="qualified"xmlns="urn:visualworks:VWSchemaBinding"xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#"xmlns:soap11="http://schemas.xmlsoap.org/soap/envelope/"xmlns:soap12="http://www.w3.org/2003/05/soap-envelope"xmlns:tns="http://docs.oasis-open.org/wss/oasis-wsswssecurity-secext-1.1.xsd"&gt;  &lt;import namespace="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"/&gt;  &lt;import namespace="http://www.w3.org/2001/04/xmlenc#"/&gt;  &lt;import namespace="http://schemas.xmlsoap.org/soap/envelope/"/&gt;  &lt;import namespace="http://www.w3.org/2003/05/soap-envelope"/&gt;	&lt;attribute name="TokenType" aspect="tokenType" ref="xsd:string"/&gt;	&lt;element name="SignatureConfirmation" minOccurs="0" aspect="signatureConfirmation" ref="tns:SignatureConfirmation"/&gt;	&lt;struct name="SignatureConfirmation"&gt;		&lt;implicitAttribute ref="wsu:Id"/&gt;		&lt;attribute name="Value" aspect="value" ref="xsd:base64Binary" use="required"/&gt;	&lt;/struct&gt;  &lt;element name="EncryptedHeader" type="tns:EncryptedHeaderType" /&gt;  &lt;struct name="EncryptedHeaderType" &gt;	&lt;sequence&gt;	  &lt;implicit ref="xenc:EncryptedData" /&gt;	&lt;/sequence&gt;	&lt;implicitAttribute ref="wsu:Id" /&gt;	&lt;implicitAttribute ref="soap11:mustUnderstand"/&gt;	&lt;implicitAttribute ref="soap11:actor"/&gt;	&lt;implicitAttribute ref="soap12:mustUnderstand"/&gt;	&lt;implicitAttribute ref="soap12:role"/&gt;	&lt;implicitAttribute ref="soap12:relay"/&gt;  &lt;/struct&gt;  &lt;element name="Salt" ref="xsd:base64Binary" /&gt;  &lt;element name="Iteration" ref="xsd:unsignedInt" /&gt;  &lt;attribute name="TokenType" ref="xsd:anyURI" /&gt;	&lt;/xmlToSmalltalkBinding&gt;&lt;/schemaBindings&gt;'</body></methods><methods><class-id>WebServices.XMLObjectBinding class</class-id> <category>accessing bindings</category><body package="WSSecurityTypes">wsSecurityBinding	^self 		bindingAtNamespace: self wsSecurityNS 		ifAbsent: [XMLObjectBinding loadFrom: self wsSecuritySpecification readStream]</body><body package="WSSecurityTypes">wsSecurityNS	^'http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'</body></methods><methods><class-id>WebServices.XMLObjectBinding class</class-id> <category>specifications</category><body package="WSSecurityTypes">wsSecuritySpecification"   XMLObjectBinding loadFrom: self wsSecuritySpecification readStream. " " http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd "	^'&lt;schemaBindings&gt;	&lt;xmlToSmalltalkBinding attributeFormDefault="unqualified" blockDefault="#all" defaultClassNamespace="WSSecurity" elementFormDefault="qualified" targetNamespace="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" version="0.2" xmlns="urn:visualworks:VWSchemaBinding" xmlns:tns="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;		&lt;bindingImport namespace="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"&gt;&lt;/bindingImport&gt;		&lt;bindingImport namespace="http://www.w3.org/XML/1998/namespace"&gt;&lt;/bindingImport&gt;		&lt;bindingImport namespace="http://www.w3.org/2000/09/xmldsig#"&gt;&lt;/bindingImport&gt;		&lt;list itemType="xsd:anyURI" name="tUsage"&gt;&lt;/list&gt;		&lt;attribute aspect="usage" name="Usage" ref="tns:tUsage"&gt;&lt;/attribute&gt;		&lt;element aspect="usernameToken" name="UsernameToken" ref="tns:UsernameTokenType"&gt;&lt;/element&gt;		&lt;element aspect="binarySecurityToken" name="BinarySecurityToken" ref="tns:BinarySecurityTokenType"&gt;&lt;/element&gt;		&lt;element aspect="reference" name="Reference" ref="tns:ReferenceType"&gt;&lt;/element&gt;		&lt;element aspect="embedded" name="Embedded" ref="tns:EmbeddedType"&gt;&lt;/element&gt;		&lt;element aspect="keyIdentifier" name="KeyIdentifier" ref="tns:KeyIdentifierType"&gt;&lt;/element&gt;		&lt;element aspect="securityTokenReference" name="SecurityTokenReference" ref="tns:SecurityTokenReferenceType"&gt;&lt;/element&gt;		&lt;element aspect="security" name="Security" ref="tns:SecurityHeaderType"&gt;&lt;/element&gt;		&lt;element aspect="transformationParameters" name="TransformationParameters" ref="tns:TransformationParametersType"&gt;&lt;/element&gt;		&lt;element aspect="password" name="Password" ref="tns:PasswordString"&gt;&lt;/element&gt;		&lt;element aspect="nonce" name="Nonce" ref="tns:EncodedString"&gt;&lt;/element&gt;		&lt;simple baseType="xsd:QName" name="FaultcodeEnum"&gt;			&lt;enumeration value="tns:UnsupportedSecurityToken"&gt;&lt;/enumeration&gt;			&lt;enumeration value="tns:UnsupportedAlgorithm"&gt;&lt;/enumeration&gt;			&lt;enumeration value="tns:InvalidSecurity"&gt;&lt;/enumeration&gt;			&lt;enumeration value="tns:InvalidSecurityToken"&gt;&lt;/enumeration&gt;			&lt;enumeration value="tns:FailedAuthentication"&gt;&lt;/enumeration&gt;			&lt;enumeration value="tns:FailedCheck"&gt;&lt;/enumeration&gt;			&lt;enumeration value="tns:SecurityTokenUnavailable"&gt;&lt;/enumeration&gt;		&lt;/simple&gt;		&lt;object name="AttributedString" smalltalkClass="AttributedString"&gt;			&lt;text name="value" ref="xsd:string"&gt;&lt;/text&gt;			&lt;implicitAttribute aspect="id" ref="wsu:Id"&gt;&lt;/implicitAttribute&gt;			&lt;anyAttribute aspect="anyAttributes" namespace="##other" processContents="lax"&gt;&lt;/anyAttribute&gt;		&lt;/object&gt;		&lt;object baseType="tns:AttributedString" constraint="extension" name="PasswordString" smalltalkClass="PasswordString"&gt;			&lt;attribute aspect="type" name="Type" ref="xsd:anyURI"&gt;&lt;/attribute&gt;		&lt;/object&gt;		&lt;object baseType="tns:AttributedString" constraint="extension" name="EncodedString" smalltalkClass="EncodedString"&gt;			&lt;attribute aspect="encodingType" name="EncodingType" ref="xsd:anyURI"&gt;&lt;/attribute&gt;		&lt;/object&gt;		&lt;object name="UsernameTokenType" smalltalkClass="UsernameTokenType"&gt;			&lt;sequence&gt;				&lt;element aspect="username" name="Username" ref="tns:AttributedString"&gt;&lt;/element&gt;				&lt;any maxOccurs="unbounded" minOccurs="0" name="any" processContents="lax"&gt;&lt;/any&gt;			&lt;/sequence&gt;			&lt;implicitAttribute aspect="id" ref="wsu:Id"&gt;&lt;/implicitAttribute&gt;			&lt;anyAttribute aspect="anyAttributes" namespace="##other" processContents="lax"&gt;&lt;/anyAttribute&gt;		&lt;/object&gt;		&lt;object baseType="tns:EncodedString" constraint="extension" name="BinarySecurityTokenType" smalltalkClass="BinarySecurityTokenType"&gt;			&lt;attribute aspect="valueType" name="ValueType" ref="xsd:anyURI"&gt;&lt;/attribute&gt;		&lt;/object&gt;		&lt;object baseType="tns:EncodedString" constraint="extension" name="KeyIdentifierType" smalltalkClass="KeyIdentifierType"&gt;			&lt;attribute aspect="valueType" name="ValueType" ref="xsd:anyURI"&gt;&lt;/attribute&gt;		&lt;/object&gt;		&lt;object name="ReferenceType" smalltalkClass="ReferenceType"&gt;			&lt;attribute aspect="uRI" name="URI" ref="xsd:anyURI"&gt;&lt;/attribute&gt;			&lt;attribute aspect="valueType" name="ValueType" ref="xsd:anyURI"&gt;&lt;/attribute&gt;			&lt;anyAttribute aspect="anyAttributes" namespace="##other" processContents="lax"&gt;&lt;/anyAttribute&gt;		&lt;/object&gt;		&lt;object name="EmbeddedType" smalltalkClass="EmbeddedType"&gt;			&lt;choice maxOccurs="unbounded" minOccurs="0" name="choiceValue"&gt;				&lt;any name="any" processContents="lax"&gt;&lt;/any&gt;			&lt;/choice&gt;			&lt;attribute aspect="valueType" name="ValueType" ref="xsd:anyURI"&gt;&lt;/attribute&gt;			&lt;anyAttribute aspect="anyAttributes" namespace="##other" processContents="lax"&gt;&lt;/anyAttribute&gt;		&lt;/object&gt;		&lt;object name="SecurityTokenReferenceType" smalltalkClass="SecurityTokenReferenceType"&gt;			&lt;choice maxOccurs="unbounded" minOccurs="0" name="choiceValue"&gt;				&lt;any name="any" processContents="lax"&gt;&lt;/any&gt;			&lt;/choice&gt;			&lt;implicitAttribute aspect="id" ref="wsu:Id"&gt;&lt;/implicitAttribute&gt;			&lt;implicitAttribute aspect="usage" ref="tns:Usage"&gt;&lt;/implicitAttribute&gt;			&lt;anyAttribute aspect="anyAttributes" namespace="##other" processContents="lax"&gt;&lt;/anyAttribute&gt;		&lt;/object&gt;		&lt;object name="SecurityHeaderType" smalltalkClass="SecurityHeaderType"&gt;			&lt;sequence&gt;				&lt;any maxOccurs="unbounded" minOccurs="0" name="any" processContents="lax"&gt;					&lt;xsd:annotation&gt;						&lt;xsd:documentation&gt;The use of "any" is to allow extensibility and different forms of security data.&lt;/xsd:documentation&gt;					&lt;/xsd:annotation&gt;				&lt;/any&gt;			&lt;/sequence&gt;			&lt;anyAttribute aspect="anyAttributes" namespace="##other" processContents="lax"&gt;&lt;/anyAttribute&gt;		&lt;/object&gt;		&lt;object name="TransformationParametersType" smalltalkClass="TransformationParametersType"&gt;			&lt;sequence&gt;				&lt;any maxOccurs="unbounded" minOccurs="0" name="any" processContents="lax"&gt;					&lt;xsd:annotation&gt;						&lt;xsd:documentation&gt;The use of "any" is to allow extensibility from any namespace.&lt;/xsd:documentation&gt;					&lt;/xsd:annotation&gt;				&lt;/any&gt;			&lt;/sequence&gt;			&lt;anyAttribute aspect="anyAttributes" namespace="##other" processContents="lax"&gt;&lt;/anyAttribute&gt;		&lt;/object&gt;	&lt;/xmlToSmalltalkBinding&gt;&lt;/schemaBindings&gt;'</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>Object</name><environment>Core</environment><super></super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Kernel-Objects</category><attributes><package>Kernel-Objects</package></attributes></class></st-source>