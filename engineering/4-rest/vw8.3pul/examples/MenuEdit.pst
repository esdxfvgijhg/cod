<?xml version="1.0"?><st-source><!-- Name: MenuEditor-ExampleNotice: Copyright 2001-2014 Cincom Systems, Inc.  All rights reserved.Comment: This parcel/package contains MenuEditorExample, which demonstrates a menu created using the MenuEditor.DbIdentifier: bear73DbTrace: 427945DbUsername: smichaelDbVersion: 8.0 - 1PackageName: MenuEditor-ExampleParcel: #('MenuEditor-Example')ParcelName: MenuEditor-ExamplePrintStringCache: (8.0 - 1,smichael)Version: 8.0 - 1Date: 5:06:44 PM May 26, 2017 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.3 (may17.4) of May 26, 2017 on May 26, 2017 at 5:06:44 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>MenuEditorExample</name><environment>Examples</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>color sampleText sampleList sampleTable </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Examples-Help</category><attributes><package>MenuEditor-Example</package></attributes></class><comment><class-id>Examples.MenuEditorExample</class-id><body>MenuEditorExample demonstrates a menu created using the MenuEditor. Browse the resource methods for the menu specification, and examine the canvas to see where it is invoked.</body></comment><methods><class-id>Examples.MenuEditorExample</class-id> <category>actions</category><body package="MenuEditor-Example">applyColor	| c |	c := ColorValue perform: self color value.	self backgroundColor: c.</body><body package="MenuEditor-Example">backgroundColor: aColor	"For each sample widget, change the background color layer."	| wrapper lookPref |	self sampleWidgets do: [ :widgetID |		wrapper := (self builder componentAt: widgetID).		lookPref := wrapper lookPreferences backgroundColor: aColor.		wrapper lookPreferences: lookPref].</body><body package="MenuEditor-Example">disableDarkColors	| menu submenu darkColors |	darkColors := #(#black #red #blue #magenta).	menu := self builder menuAt: #colorMenu.	menu menuItems do: [ :menuItem |		(darkColors includes: menuItem nameKey) ifTrue: [menuItem disable]].	submenu := (menu atNameKey: #colors) submenu.	submenu menuItems do: [ :menuItem |		(darkColors includes: menuItem nameKey) ifTrue: [menuItem disable]].</body><body package="MenuEditor-Example">enableDarkColors	| menu submenu darkColors |	darkColors := #(#black #red #blue #magenta).	menu := self builder menuAt: #colorMenu.	menu menuItems do: [ :menuItem |		(darkColors includes: menuItem nameKey) ifTrue: [menuItem enable]].	submenu := (menu atNameKey: #colors) submenu.	submenu menuItems do: [ :menuItem |		(darkColors includes: menuItem nameKey) ifTrue: [menuItem enable]].</body></methods><methods><class-id>Examples.MenuEditorExample</class-id> <category>aspects</category><body package="MenuEditor-Example">color	^color</body><body package="MenuEditor-Example">sampleList	^sampleList</body><body package="MenuEditor-Example">sampleTable	^sampleTable</body><body package="MenuEditor-Example">sampleText	^sampleText</body></methods><methods><class-id>Examples.MenuEditorExample</class-id> <category>initialize-release</category><body package="MenuEditor-Example">initialize	| tableList |	color := #white asValue.	"Sample data"	sampleList := SelectionInList with: ColorValue constantNames.	tableList := TwoDList		on: #( 'Red' 'Cyan' 'Green' 'Magenta' 'Blue' 'Yellow' )		columns: 2		rows: 3.	sampleTable := TableInterface new		selectionInTable: (SelectionInTable with: tableList).	sampleText := ColorValue comment asValue.</body></methods><methods><class-id>Examples.MenuEditorExample</class-id> <category>private</category><body package="MenuEditor-Example">sampleWidgets	^#(		#actionButton		#checkBox		#radioButton		#menuButton		#inputField		#slider		#label		#divider		#box		#region		#list		#table		#textEditor )</body></methods><methods><class-id>Examples.MenuEditorExample class</class-id> <category>resources</category><body package="MenuEditor-Example">colorMenu	"MenuEditor new openOnClass: self andSelector: #colorMenu"	&lt;resource: #menu&gt;	^#(#Menu #(			#(#MenuItem 				#rawLabel: 'white' 				#nameKey: #white 				#value: #white ) 			#(#MenuItem 				#rawLabel: 'black' 				#nameKey: #black 				#value: #black ) 			#(#MenuItem 				#rawLabel: 'colors' 				#nameKey: #colors 				#submenu: #(#Menu #(						#(#MenuItem 							#rawLabel: 'red' 							#nameKey: #red 							#value: #red ) 						#(#MenuItem 							#rawLabel: 'green' 							#nameKey: #green 							#value: #green ) 						#(#MenuItem 							#rawLabel: 'blue' 							#nameKey: #blue 							#value: #blue ) 						#(#MenuItem 							#rawLabel: 'cyan' 							#nameKey: #cyan 							#value: #cyan ) 						#(#MenuItem 							#rawLabel: 'magenta' 							#nameKey: #magenta 							#value: #magenta ) 						#(#MenuItem 							#rawLabel: 'yellow' 							#nameKey: #yellow 							#value: #yellow ) ) #(6 ) nil ) ) ) #(2 1 ) nil ) decodeAsLiteralArray</body></methods><methods><class-id>Examples.MenuEditorExample class</class-id> <category>interface specs</category><body package="MenuEditor-Example">windowSpec	"UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#FullSpec 		#window: 		#(#WindowSpec 			#label: 'MenuEditorExample' 			#min: #(#Point 40 20 ) 			#bounds: #(#Rectangle 636 362 995 842 ) ) 		#component: 		#(#SpecCollection 			#collection: #(				#(#LabelSpec 					#layout: #(#Point 9 15 ) 					#label: 'Color:' ) 				#(#MenuButtonSpec 					#layout: #(#Rectangle 66 18 166 43 ) 					#model: #color 					#menu: #colorMenu ) 				#(#ActionButtonSpec 					#layout: #(#Rectangle 66 49 166 80 ) 					#model: #applyColor 					#label: 'Apply' 					#isDefault: true 					#defaultable: true ) 				#(#DividerSpec 					#layout: #(#Rectangle 16 97 334 101 ) ) 				#(#ActionButtonSpec 					#layout: #(#Point 173 9 ) 					#model: #disableDarkColors 					#label: 'Disable Dark Colors' 					#defaultable: true ) 				#(#ActionButtonSpec 					#layout: #(#Point 173 50 ) 					#model: #enableDarkColors 					#label: 'Enable Dark Colors' 					#defaultable: true ) 				#(#CompositeSpecCollection 					#collection: #(						#(#CheckBoxSpec 							#layout: #(#Point 7 37 ) 							#name: #checkBox 							#label: 'Check Box' ) 						#(#RadioButtonSpec 							#layout: #(#Point 7 60 ) 							#name: #radioButton 							#label: 'Radio Button' ) 						#(#MenuButtonSpec 							#layout: #(#Rectangle 7 96 107 121 ) 							#name: #menuButton 							#label: 'Choice1' ) 						#(#InputFieldSpec 							#layout: #(#Rectangle 7 126 107 147 ) 							#name: #inputField ) 						#(#SliderSpec 							#layout: #(#Rectangle 7 155 87 179 ) 							#name: #slider 							#orientation: #horizontal ) 						#(#LabelSpec 							#layout: #(#Point 5 192 ) 							#name: #label 							#label: 'Label' ) 						#(#DividerSpec 							#layout: #(#Rectangle 6 225 106 229 ) 							#name: #divider ) 						#(#GroupBoxSpec 							#layout: #(#Rectangle 5 229 56 287 ) 							#name: #box 							#label: 'Box' ) 						#(#RegionSpec 							#layout: #(#Rectangle 0 292 74 342 ) 							#name: #region 							#lineWidth: 4 							#regionType: #ellipse ) 						#(#SequenceViewSpec 							#layout: #(#Rectangle 186 1 286 101 ) 							#name: #list 							#model: #sampleList ) 						#(#TableViewSpec 							#layout: #(#Rectangle 186 119 286 219 ) 							#name: #table 							#model: #sampleTable 							#showHGrid: true 							#showVGrid: true ) 						#(#TextEditorSpec 							#layout: #(#Rectangle 186 238 286 338 ) 							#name: #textEditor 							#model: #sampleText ) 						#(#ActionButtonSpec 							#layout: #(#Point 7 0 ) 							#name: #actionButton 							#label: 'Action' 							#defaultable: true ) ) 					#compositeSpec: 					#(#CompositeSpec 						#layout: #(#Rectangle 29 116 315 458 ) ) ) ) ) )</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>ApplicationModel</name><environment>UI</environment><super>UI.Model</super><private>false</private><indexed-type>none</indexed-type><inst-vars>builder uiSession eventHandlers </inst-vars><class-inst-vars>savedWindowInformation </class-inst-vars><imports></imports><category>UIBuilder-Framework</category><attributes><package>UIBuilder-Framework</package></attributes></class></st-source>