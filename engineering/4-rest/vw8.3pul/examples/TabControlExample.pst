<?xml version="1.0"?><st-source><!-- Name: TabControlExampleNotice: Copyright 2001-2014 Cincom Systems, Inc.  All rights reserved.Comment: TabControlExample provides a simple example for the tab control widget.  After loading see the class side method, #example1 for an example.DbIdentifier: bear73DbTrace: 427974DbUsername: smichaelDbVersion: 8.0 - 1PackageName: TabControl-ExamplePackageName:: TabControl-ExampleParcel: #('TabControl-Example')ParcelName: TabControlExamplePrintStringCache: (8.0 - 1,smichael)Version: 8.0 - 1Date: 5:06:45 PM May 26, 2017 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.3 (may17.4) of May 26, 2017 on May 26, 2017 at 5:06:45 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>TabControlExample</name><environment>Examples</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>tabs </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Examples</category><attributes><package>TabControl-Example</package></attributes></class><comment><class-id>Examples.TabControlExample</class-id><body>This class provides a simple example for the tab control widget.Instance Variables:	tabs	&lt;SelectionInList&gt;	tab array</body></comment><methods><class-id>Examples.TabControlExample</class-id> <category>private</category><body package="TabControl-Example">labelArray	"Private - The list of tab names (and/or icons). See also #specArray."	^Array		with: 'Appearance'		with: self class colorsImage -&gt; 'Colors'		with: self class printerImage -&gt; ''</body><body package="TabControl-Example">specArray	"Private - The list of associated sub canvaes. See also #labelArray."	^#(#appearanceSpec #fontsSpec #colorsSpec)</body></methods><methods><class-id>Examples.TabControlExample</class-id> <category>interface opening</category><body package="TabControl-Example">postOpenWith: aBuilder	super postOpenWith: aBuilder.	self tabsChanged</body></methods><methods><class-id>Examples.TabControlExample</class-id> <category>aspects</category><body package="TabControl-Example">tabs	tabs isNil		ifTrue:			[(tabs := SelectionInList with: self labelArray) selectionIndex: 1.			tabs selectionIndexHolder onChangeSend: #tabsChanged to: self].	^tabs</body></methods><methods><class-id>Examples.TabControlExample</class-id> <category>changing</category><body package="TabControl-Example">tabsChanged	"Every time, a tab is changed, a new sub canvas gets installed."	| index |	index := self tabs selectionIndex.	(self builder componentAt: #tabbing) widget client: self spec: (self specArray at: index)</body></methods><methods><class-id>Examples.TabControlExample class</class-id> <category>examples</category><body package="TabControl-Example">example1	"self example1"	^self open</body></methods><methods><class-id>Examples.TabControlExample class</class-id> <category>interface specs</category><body package="TabControl-Example">appearanceSpec	"UIPainter new openOnClass: self andSelector: #appearanceSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Unlabeled Canvas' 			#bounds: #(#{Graphics.Rectangle} 646 415 954 785 ) 			#isEventDriven: true ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 23 23 ) 					#label: 'This is the first page' ) ) ) )</body><body package="TabControl-Example">colorsSpec	"UIPainter new openOnClass: self andSelector: #colorsSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Unlabeled Canvas' 			#bounds: #(#{Graphics.Rectangle} 646 415 954 785 ) 			#isEventDriven: true ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.LabelSpec} 					#layout: #(#{UI.AlignmentOrigin} 0 0.5 0 0.5 0.5 0.5 ) 					#label: 'This is the third page' ) ) ) )</body><body package="TabControl-Example">fontsSpec	"UIPainter new openOnClass: self andSelector: #fontsSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Unlabeled Canvas' 			#bounds: #(#{Graphics.Rectangle} 646 415 954 785 ) 			#isEventDriven: true ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.LabelSpec} 					#layout: #(#{UI.AlignmentOrigin} -23 1 -23 1 1 1 ) 					#label: 'This is the second page' ) ) ) )</body><body package="TabControl-Example">windowSpec	"UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: ' TabControl Example' 			#bounds: #(#{Graphics.Rectangle} 646 457 954 743 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.TabControlSpec} 					#layout: #(#{Graphics.LayoutFrame} 6 0 6 0 -6 1 -40 1 ) 					#name: #tabbing 					#model: #tabs 					#labels: #() ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} -172 1 -31 1 -92 1 -6 1 ) 					#model: #closeRequest 					#label: 'OK' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} -86 1 -31 1 -6 1 -6 1 ) 					#model: #closeRequest 					#label: 'Cancel' ) ) ) )</body></methods><methods><class-id>Examples.TabControlExample class</class-id> <category>resources</category><body package="TabControl-Example">colorsImage	"UIMaskEditor new openOnClass: self andSelector: #colorsImage"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 10@10 depth: 3 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: ((Core.Array new: 5) at: 1 put: Graphics.ColorValue blue; at: 2 put: Graphics.ColorValue magenta; at: 3 put: Graphics.ColorValue white; at: 4 put: (Graphics.ColorValue scaledRed: 3693 scaledGreen: 3693 scaledBlue: 3693); at: 5 put: (Graphics.ColorValue scaledRed: 0 scaledGreen: 4240 scaledBlue: 0); yourself)) usingBits: #[51 51 51 51 51 0 0 0 50 35 68 50 35 0 0 0 50 35 68 50 35 0 0 0 51 51 51 51 51 0 0 0 49 19 34 50 35 0 0 0 49 19 34 50 35 0 0 0 51 51 51 51 51 0 0 0 50 35 0 50 35 0 0 0 50 35 0 50 35 0 0 0 51 51 51 51 51 0 0 0])</body><body package="TabControl-Example">printerImage	"UIMaskEditor new openOnClass: self andSelector: #printerImage"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 16@16 depth: 3 bitsPerPixel: 4 palette: (MappedPalette withColors: ((Array new: 7) at: 1 put: ColorValue black; at: 2 put: (ColorValue scaledRed: 5548 scaledGreen: 5548 scaledBlue: 5548); at: 3 put: (ColorValue scaledRed: 6077 scaledGreen: 6077 scaledBlue: 6077); at: 4 put: ColorValue white; at: 5 put: ColorValue green; at: 6 put: ColorValue red; at: 7 put: (ColorValue scaledRed: 4227 scaledGreen: 4227 scaledBlue: 4227); yourself)) usingBits: #[34 34 34 34 38 102 34 34 34 34 34 34 99 51 102 34 34 34 34 38 51 51 51 0 34 34 38 99 51 51 48 34 34 38 99 99 51 51 2 34 38 99 17 22 99 48 32 2 99 17 68 17 22 96 38 96 99 51 17 85 17 22 102 96 99 17 51 17 22 102 102 96 99 17 17 54 102 102 102 96 102 17 17 22 102 102 96 2 38 102 17 22 102 96 6 2 32 17 102 22 96 6 96 2 34 0 17 96 6 96 2 34 34 34 0 22 96 2 34 34 34 34 34 34 34 34 34 34])</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>ApplicationModel</name><environment>UI</environment><super>UI.Model</super><private>false</private><indexed-type>none</indexed-type><inst-vars>builder uiSession eventHandlers </inst-vars><class-inst-vars>savedWindowInformation </class-inst-vars><imports></imports><category>UIBuilder-Framework</category><attributes><package>UIBuilder-Framework</package></attributes></class></st-source>