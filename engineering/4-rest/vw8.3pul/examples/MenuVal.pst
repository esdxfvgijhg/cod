<?xml version="1.0"?><st-source><!-- Name: MenuValue-ExampleNotice: Copyright 2001-2014 Cincom Systems, Inc.  All rights reserved.Comment: This parcel/package contains MenuValueExample, which demonstrates how to implement a menu of values (as opposed to a menu of commands) in each of the three types of menu: menu bar, menu button and pop-up menu.DbIdentifier: bear73DbTrace: 427947DbUsername: smichaelDbVersion: 8.0 - 1PackageName: MenuValue-ExampleParcel: #('MenuValue-Example')ParcelName: MenuValue-ExamplePrintStringCache: (8.0 - 1,smichael)Version: 8.0 - 1Date: 5:06:44 PM May 26, 2017 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.3 (may17.4) of May 26, 2017 on May 26, 2017 at 5:06:44 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>MenuValueExample</name><environment>Examples</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>letter </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Examples-Help</category><attributes><package>MenuValue-Example</package></attributes></class><comment><class-id>Examples.MenuValueExample</class-id><body>MenuValueExample demonstrates how to implement a menu of values (as opposed to a menu of commands) in each of the three types of menu: menu bar, menu button and pop-up menu.</body></comment><methods><class-id>Examples.MenuValueExample</class-id> <category>initialize-release</category><body package="MenuValue-Example">initialize	letter := self class firstNotice asValue.	letter onChangeSend: #setCheckMark to: self.</body></methods><methods><class-id>Examples.MenuValueExample</class-id> <category>aspects</category><body package="MenuValue-Example">letter	^letter</body></methods><methods><class-id>Examples.MenuValueExample</class-id> <category>interface opening</category><body package="MenuValue-Example">postBuildWith: aBuilder	self setCheckMark</body></methods><methods><class-id>Examples.MenuValueExample</class-id> <category>menu messages</category><body package="MenuValue-Example">print	self letter value asComposedText hardcopy</body></methods><methods><class-id>Examples.MenuValueExample</class-id> <category>change messages</category><body package="MenuValue-Example">setCheckMark	"In the pop-up menu, set the check box to indicate the currently	displayed template."	| menu item |	menu := self builder menuAt: #templatesMenuForPopUp.	item := menu menuItemAt: 1.	self letter value = self class firstNotice		ifTrue: [item beOn]		ifFalse: [item beOff].	item := menu menuItemAt: 2.	self letter value = self class secondNotice		ifTrue: [item beOn]		ifFalse: [item beOff].	item := menu menuItemAt: 3.	self letter value = self class finalNotice		ifTrue: [item beOn]		ifFalse: [item beOff].</body></methods><methods><class-id>Examples.MenuValueExample</class-id> <category>resources</category><body package="MenuValue-Example">templatesMenuForMenuBar	| mb menu submenu |	mb := MenuBuilder new.	mb		beginSubMenuLabeled: 'Templates';		add: ' ' -&gt; [self letter value: self class firstNotice];		add: ' ' -&gt; [self letter value: self class secondNotice];		add: ' ' -&gt; [self letter value: self class finalNotice];		endSubMenu.	"Add graphic labels."	menu := mb menu.	submenu := (menu menuItemLabeled: 'Templates') submenu.	(submenu menuItemAt: 1) 		labelImage: (self class oneImage).	(submenu menuItemAt: 2) 		labelImage: (self class twoImage).	(submenu menuItemAt: 3) 		labelImage: (self class threeImage).	"Set the background color."	submenu backgroundColor: ColorValue chartreuse.	^menu</body><body package="MenuValue-Example">templatesMenuForMenuButton	| mb |	mb := MenuBuilder new.	mb		add: 'First Notice' -&gt; self class firstNotice;		add: 'Second Notice' -&gt; self class secondNotice;		add: 'Final Notice' -&gt; self class finalNotice.	^mb menu</body><body package="MenuValue-Example">templatesMenuForPopUp	| mb |	mb := MenuBuilder new.	mb		add: 'First Notice' -&gt; [self letter value: self class firstNotice];		add: 'Second Notice' -&gt; [self letter value: self class secondNotice];		add: 'Final Notice' -&gt; [self letter value: self class finalNotice].	^mb menu</body></methods><methods><class-id>Examples.MenuValueExample class</class-id> <category>templates</category><body package="MenuValue-Example">finalNotice	"Answer a template to be used as the basis for a 	final-notice letter to a customer with an overdue balance."	^'', Date today printString, ' -- FINAL NOTICEDEAR &lt;name&gt;,THIS IS YOUR FINAL NOTICE.  WE MUST HEAR FROM YOU BY 5:00 PM ON &lt;final date&gt;.  AFTER THAT, WE WILL BE FORCED TO TURN YOUR ACCOUNT OVER TO A COLLECTION AGENCY. ALISTAIR ZENGWATCONTROLLER'.</body><body package="MenuValue-Example">firstNotice	"Answer a template to be used as the basis for a 	first-notice letter to a customer with an overdue balance."	^'', Date today printString, 'Dear &lt;name&gt;,Your account shows a past due balance, as shown on the accompanying statement.  We would appreciate your attention to this matter at your earliest convenience.Thank you for letting us serve you.Sincerely,Alistair ZengwatController'.</body><body package="MenuValue-Example">secondNotice	"Answer a template to be used as the basis for a 	second-notice letter to a customer with an overdue balance."	^'', Date today printString, 'Dear &lt;name&gt;,Your account shows a past due balance, as shown on the accompanying statement.  This is your second notice regarding this matter.  Won''t you please take a moment to help us clear this up.  If you have a question about the enclosed statement, please give me a call at 314-1592.Thank you for letting us serve you.Sincerely,Alistair ZengwatController'.</body></methods><methods><class-id>Examples.MenuValueExample class</class-id> <category>resources</category><body package="MenuValue-Example">oneImage	"UIMaskEditor new openOnClass: self andSelector: #oneImage"	&lt;resource: #image&gt;	^Image 		extent: 11@15 		depth: 1 		palette: CoveragePalette monoMaskPalette 		bits: #[255 224 0 0 241 224 0 0 224 224 0 0 196 96 0 0 			156 32 0 0 132 32 0 0 132 32 0 0 132 32 0 0 			132 32 0 0 132 32 0 0 159 32 0 0 192 96 0 0 			224 224 0 0 241 224 0 0 255 224 0 0 ] pad: 32</body><body package="MenuValue-Example">threeImage	"UIMaskEditor new openOnClass: self andSelector: #threeImage"	&lt;resource: #image&gt;	^Image 		extent: 11@15 		depth: 1 		palette: CoveragePalette monoMaskPalette 		bits: #[255 224 0 0 241 224 0 0 224 224 0 0 192 96 0 0 			142 32 0 0 145 32 0 0 129 32 0 0 134 32 0 0 			129 32 0 0 129 32 0 0 145 32 0 0 206 96 0 0 			224 224 0 0 241 224 0 0 255 224 0 0 ] pad: 32</body><body package="MenuValue-Example">twoImage	"UIMaskEditor new openOnClass: self andSelector: #twoImage"	&lt;resource: #image&gt;	^Image 		extent: 11@15 		depth: 1 		palette: CoveragePalette monoMaskPalette 		bits: #[255 224 0 0 241 224 0 0 224 224 0 0 192 96 0 0 			142 32 0 0 145 32 0 0 129 32 0 0 130 32 0 0 			140 32 0 0 144 32 0 0 159 32 0 0 192 96 0 0 			224 224 0 0 241 224 0 0 255 224 0 0 ] pad: 32</body></methods><methods><class-id>Examples.MenuValueExample class</class-id> <category>interface specs</category><body package="MenuValue-Example">windowSpec	"UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#FullSpec 		#window: 		#(#WindowSpec 			#label: 'MenuValueExample' 			#min: #(#Point 347 249 ) 			#bounds: #(#Rectangle 259 175 737 569 ) 			#flags: 4 			#menu: #templatesMenuForMenuBar ) 		#component: 		#(#SpecCollection 			#collection: #(				#(#TextEditorSpec 					#layout: #(#LayoutFrame 1 0 45 0 -1 1 -60 1 ) 					#name: #textEditor 					#model: #letter 					#menu: #templatesMenuForPopUp ) 				#(#MenuButtonSpec 					#layout: #(#Rectangle 10 15 150 40 ) 					#model: #letter 					#menu: #templatesMenuForMenuButton ) 				#(#LabelSpec 					#layout: #(#AlignmentOrigin 0 0.5 -50 1 0.5 0 ) 					#label: 'Use the menu bar, menu button or pop-up menu to insert' ) 				#(#LabelSpec 					#layout: #(#AlignmentOrigin 0 0.5 -30 1 0.5 0 ) 					#label: 'a value (a new template) in the text editor.' ) 				#(#ActionButtonSpec 					#layout: #(#LayoutFrame -70 1 15 0 -10 1 40 0 ) 					#model: #print 					#label: 'Print' 					#defaultable: true ) ) ) )</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>ApplicationModel</name><environment>UI</environment><super>UI.Model</super><private>false</private><indexed-type>none</indexed-type><inst-vars>builder uiSession eventHandlers </inst-vars><class-inst-vars>savedWindowInformation </class-inst-vars><imports></imports><category>UIBuilder-Framework</category><attributes><package>UIBuilder-Framework</package></attributes></class></st-source>