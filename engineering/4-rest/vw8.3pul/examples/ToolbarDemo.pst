<?xml version="1.0"?><st-source><!-- Name: ToolbarDemo-ExamplesNotice: Copyright 2001-2014 Cincom Systems, Inc.  All rights reserved.Comment: This parcel/package contains ToolbarDemo, which demonstrates adding a toolbar to a window.DbIdentifier: bear73DbTrace: 427962DbUsername: smichaelDbVersion: 8.0 - 1PackageName: ToolbarDemo-ExamplesParcel: #('ToolbarDemo-Examples')ParcelName: ToolbarDemo-ExamplesPrintStringCache: (8.0 - 1,smichael)Version: 8.0 - 1Date: 5:06:45 PM May 26, 2017 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.3 (may17.4) of May 26, 2017 on May 26, 2017 at 5:06:45 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>ToolbarDemo</name><environment>Examples</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>text </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>UIApplications-New</category><attributes><package>ToolbarDemo-Examples</package></attributes></class><comment><class-id>Examples.ToolbarDemo</class-id><body>ToolbarDemo demonstrates adding a toolbar to a window, by specifying a menu in the Tool Bar field of the window's properties.</body></comment><methods><class-id>Examples.ToolbarDemo</class-id> <category>actions</category><body package="ToolbarDemo-Examples">smalltalkRun	(self builder componentAt: #text) widget controller printIt</body></methods><methods><class-id>Examples.ToolbarDemo</class-id> <category>aspects</category><body package="ToolbarDemo-Examples">text	text isNil ifTrue: [text := '"Select the expression below and press the ''Run'' button"3+4' asValue].	^text</body></methods><methods><class-id>Examples.ToolbarDemo class</class-id> <category>resources</category><body package="ToolbarDemo-Examples">menuBar	"MenuEditor new openOnClass: self andSelector: #menuBar"	&lt;resource: #menu&gt;	^#(#Menu #(			#(#MenuItem 				#rawLabel: '&amp;Smalltalk' 				#submenu: #(#Menu #(						#(#MenuItem 							#rawLabel: '&amp;Run' 							#value: #smalltalkRun ) 						#(#MenuItem 							#rawLabel: 'E&amp;xit' 							#value: #closeRequest ) ) #(1 1 ) nil ) ) ) #(1 ) nil ) decodeAsLiteralArray</body><body package="ToolbarDemo-Examples">runIcon	"UIMaskEditor new openOnClass: self andSelector: #runIcon"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 16@16 depth: 1 bitsPerPixel: 1 palette: MonoMappedPalette blackWhite usingBits: #[254 63 0 0 252 31 0 0 252 31 0 0 252 63 0 0 254 127 0 0 224 31 0 0 240 3 0 0 248 99 0 0 252 127 0 0 238 127 0 0 196 15 0 0 128 15 0 0 216 207 0 0 253 207 0 0 255 195 0 0 255 195 0 0])</body><body package="ToolbarDemo-Examples">toolBar	"MenuEditor new openOnClass: self andSelector: #toolBar"	&lt;resource: #menu&gt;	^#(#{UI.Menu} #(			#(#{UI.MenuItem} 				#rawLabel: '&amp;Run' 				#value: #smalltalkRun 				#labelImage: #(#{UI.ResourceRetriever} #{Examples.ToolbarDemo} #runIcon ) ) ) #(1 ) nil ) decodeAsLiteralArray</body></methods><methods><class-id>Examples.ToolbarDemo class</class-id> <category>interface specs</category><body package="ToolbarDemo-Examples">windowSpec	"UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Unlabeled Canvas' 			#bounds: #(#{Graphics.Rectangle} 787 215 987 415 ) 			#flags: 4 			#menu: #menuBar 			#toolBar: #toolBar 			#isEventDriven: true ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 0 0 0 1 0 1 ) 					#name: #text 					#model: #text ) ) ) )</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>ApplicationModel</name><environment>UI</environment><super>UI.Model</super><private>false</private><indexed-type>none</indexed-type><inst-vars>builder uiSession eventHandlers </inst-vars><class-inst-vars>savedWindowInformation </class-inst-vars><imports></imports><category>UIBuilder-Framework</category><attributes><package>UIBuilder-Framework</package></attributes></class></st-source>