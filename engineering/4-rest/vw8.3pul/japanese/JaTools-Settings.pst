<?xml version="1.0"?><st-source><!-- Name: JaTools-SettingsNotice: Copyright 1999-2013 Cincom Systems, Inc.  All rights reserved.Comment: Set a font setting viewDbIdentifier: bear73DbTrace: 400892DbUsername: nrossDbVersion: 7.3.1 1.2HideSource: falsePackageName: JaTools-SettingsParcel: #('JaTools-Settings')ParcelName: JaTools-SettingsPrintStringCache: (7.3.1 1.2,nross)SaveSource: trueVersion: 7.3.1 1.2Post-Load Block: 	[:package | 	UISettings addPreferenceSection: #addFontSectionTo:development:runtime:.]Post-Unload Block: 	[UISettings removePreferenceSection: #addFontSectionTo:development:runtime:.]Date: 7:26:44 AM April 3, 2013 --><time-stamp>From VisualWorksÂ®, Pre-Release 7.10 (mar13.5) of April 3, 2013 on April 3, 2013 at 7:26:44 AM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>SimpleListEditorC</name><environment>UI</environment><super>UI.SimpleListEditor</super><private>false</private><indexed-type>none</indexed-type><inst-vars>choices </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>UIBasics-Support</category><attributes><package>JaTools-Settings</package></attributes></class><class><name>SequenceCSettingPage</name><environment>Tools</environment><super>Tools.SequenceSettingPage</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Tools-Settings-UI</category><attributes><package>JaTools-Settings</package></attributes></class><class><name>FontNameSetting</name><environment>Tools</environment><super>Tools.FilenameSetting</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Tools-Settings</category><attributes><package>JaTools-Settings</package></attributes></class><methods><class-id>UI.SimpleListEditorC</class-id> <category>accessing</category><body package="JaTools-Settings">choices	^choices</body><body package="JaTools-Settings">choices: anObject	choices := anObject</body></methods><methods><class-id>Tools.SequenceCSettingPage</class-id> <category>private</category><body package="JaTools-Settings">accept	listHolder value: (acceptBlock value: workHolder value).	postAcceptBlock notNil ifTrue: [postAcceptBlock value].	hasChanges := false.	self reset</body></methods><methods><class-id>Tools.SequenceCSettingPage</class-id> <category>accessing</category><body package="JaTools-Settings">editor	^(UI.SimpleListEditorC new)		listHolder: workHolder;		validationBlock: validationBlock;		changedBlock: [hasChanges := true. self tickle];		choices: UI.UISettings new fontFamilyList asValue</body></methods><methods><class-id>Tools.FontNameSetting</class-id> <category>user interface</category><body package="JaTools-Settings">acceptBlockForStringRepresentation	^[:fontsName | | ca |		ca := TextAttributes defaultNoCopy characterAttributes.		(ca defaultQueryFor: Screen default defaultFontPolicy) family: fontsName asArray.		ca invalidateQueryCache.		VariableSizeTextAttributes flushGridding.		TextAttributes resetViews.		InputManager setDefault.		fontsName copy]</body></methods><methods><class-id>Tools.FontNameSetting</class-id> <category>accessing</category><body package="JaTools-Settings">isValueValid: anObject 	^true</body><body package="JaTools-Settings">toXML: anObject	self validate: anObject.	^Element		tag: self xmlTag		elements: (Array with: (XML.Text text: anObject asString))</body></methods><methods><class-id>Tools.FontNameSetting</class-id> <category>parameters</category><body package="JaTools-Settings">xmlTag	^'fontname'</body></methods><methods><class-id>UI.UISettings class</class-id> <category>user preferences</category><body package="JaTools-Settings">addFontSectionTo: aDictionary development: devSpecs runtime: runtimeSpecs	"Add the font's set of preferences and settings slices to the arguments."	| family list |	family := (TextAttributes defaultNoCopy characterAttributes				defaultQueryFor: Screen default defaultFontPolicy) family.	family isNil		ifTrue: [list := List new]		ifFalse: [family isString				ifTrue: [list := List with: family]				ifFalse: [list := family asList]].	aDictionary		at: #fontFamily put: list asValue.		"at: #fontFamilyEditing put: list copy asValue.;		at: #fontFamilyAccept put: [self fontFamilyAccept].;		at: #fontFamilyReset put: [self fontFamilyReset]."	"devSpecs add: 'Font' -&gt; #(#fontFamilySpec #fontFamilyHelp).	runtimeSpecs add: 'Font' -&gt; #(#fontFamilySpec #fontFamilyHelp)."	(self preferenceModelFor: #textSize)		compute:			[:v |			| fm lst |			fm := ((TextAttributes styleNamed: v) characterAttributes						defaultQueryFor: Screen default defaultFontPolicy) family.			fm isNil				ifTrue: [lst := List new]				ifFalse: [fm isString						ifTrue: [lst := List with: fm]						ifFalse: [lst := fm asList]].			(self preferenceModelFor: #fontFamily) value: lst.	"		(self preferenceModelFor: #fontFamilyEditing) value: lst copy"]</body></methods><methods><class-id>UI.UISettings</class-id> <category>private</category><body package="JaTools-Settings">fontFamilyList	| families encodings familyList |	families := Set new.	encodings := Locale current preferredEncodings.	encodings isNil ifTrue: [encodings := #(nil)].	encodings		do: [:encoding | | aFont |			aFont := FontDescription new encoding: encoding.			(Screen default defaultFontPolicy searchForFont: aFont)				do: [:each | each value specifiesFamily							ifTrue: [families add: each value family]]].	familyList := families asList.	familyList sort.	^familyList</body></methods><methods><class-id>UI.SimpleListEditorC class</class-id> <category>interface specs</category><body package="JaTools-Settings">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Unlabeled Canvas' 			#bounds: #(#{Graphics.Rectangle} 512 384 766 587 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ComboBoxSpec} 					#layout: #(#{Graphics.LayoutFrame} 2 0 -70 1 -2 1 -40 1 ) 					#model: #currentName 					#isReadOnly: false 					#comboList: #choices ) 				#(#{UI.SequenceViewSpec} 					#properties: 					#(#{UI.PropertyListDictionary} #dragOkSelector 						#wantToDrag: #dragEnterSelector 						#dragEnter: #dragOverSelector 						#dragOver: #dragStartSelector 						#doDrag: #dropSelector 						#drop: #dragExitSelector 						#dragLeave: ) 					#layout: #(#{Graphics.LayoutFrame} 2 0 2 0 -2 1 -75 1 ) 					#name: #list 					#model: #list 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 2 0 -35 1 -2 0.333333 0 1 ) 					#name: #add 					#model: #addName 					#label: 					#(#{Kernel.UserMessage} 						#key: #Add 						#defaultString: 'Add' 						#catalogID: #labels ) 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 2 0.333333 -35 1 -2 0.666667 0 1 ) 					#name: #delete 					#model: #deleteName 					#label: 					#(#{Kernel.UserMessage} 						#key: #Delete 						#defaultString: 'Delete' 						#catalogID: #labels ) 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 2 0.666667 -35 1 -2 1 0 1 ) 					#name: #change 					#model: #changeName 					#label: 					#(#{Kernel.UserMessage} 						#key: #Change 						#defaultString: 'Change' 						#catalogID: #labels ) 					#defaultable: true ) ) ) )</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>UISettings</name><environment>UI</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>list disturbed subBuilder </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Interface-Support</category><attributes><package>Interface-Support</package></attributes></class><class><name>SimpleListEditor</name><environment>UI</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>list currentName validationBlock changedBlock </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>UIBasics-Support</category><attributes><package>UIBasics-Support</package></attributes></class><class><name>FilenameSetting</name><environment>Tools</environment><super>Tools.SettingType</super><private>false</private><indexed-type>none</indexed-type><inst-vars>mustExist </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Tools-Settings</category><attributes><package>Tools-Settings</package></attributes></class><class><name>SequenceSettingPage</name><environment>Tools</environment><super>Tools.SettingsManagerPage</super><private>false</private><indexed-type>none</indexed-type><inst-vars>listHolder workHolder helpText displayBlock acceptBlock postAcceptBlock isChangeOnly validationBlock hasChanges </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Tools-Settings-UI</category><attributes><package>Tools-Settings</package></attributes></class></st-source>