<?xml version="1.0"?><st-source><!-- Name: JaCTLibEXDINotice: Copyright 1999-2013 Cincom Systems, Inc.  All rights reserved.Comment: This parcel supports the localization of the CTLibEXDI (Sybase) for Japanese.DbIdentifier: bear73DbTrace: 403641DbUsername: dwallenDbVersion: 7.3.1 1.2DevelopmentPrerequisites: #(#(#parcel 'CTLibEXDI' '') #(#parcel 'JapaneseLocale' ''))HideSource: falsePackageName: JaCTLibEXDIParcel: #('JaCTLibEXDI')ParcelName: JaCTLibEXDIPrerequisiteParcels: #(#('CTLibEXDI' '') #('JapaneseLocale' ''))PrintStringCache: (7.3.1 1.2,dwallen)SaveSource: trueVersion: 7.3.1 1.2Date: 10:44:35 AM April 19, 2013 --><time-stamp>From VisualWorksÂ®, Pre-Release 7.10 (apr13.3) of April 19, 2013 on April 19, 2013 at 10:44:35 AM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><methods><class-id>Database.CTLibInterface</class-id> <category>accessing</category><body package="JaCTLibEXDI">flushEncodingCache	encoding := nil</body><body package="JaCTLibEXDI">getEncoding	^CTLibConnection serverEncoding</body></methods><methods><class-id>Database.CTLibBuffer</class-id> <category>private-data conversion</category><body package="JaCTLibEXDI">at: index putString: aString	"Put aString into the buffer."	| str bytes |	str := aString asByteArrayEncoding: self encoding.	(bytes := str size) &gt; elementSize ifTrue:		[ self class connectionClass unableToBindSignal raise ].	bufferPointer copyAt: ((index-1) * elementSize) from: str size: bytes startingAt: 1.	lengthsPointer at: (index-1) put: bytes.	^aString</body><body package="JaCTLibEXDI">getStringAt: index	"Answer a String populated from the buffer"	| bytes byteArray |	bytes := lengthsPointer at: (index-1).	byteArray := ByteArray new: bytes.	bufferPointer copyAt: ((index-1) * elementSize) to: byteArray size: bytes startingAt: 1.	^byteArray asStringEncoding: self encoding</body></methods><methods><class-id>Database.CTLibConnection class</class-id> <category>accessing</category><body package="JaCTLibEXDI">serverEncoding: encoding	"Set what is believed to be the server's encoding."	ServerEncoding := encoding.	xif isNil ifFalse: [xif flushEncodingCache].</body></methods><methods><class-id>Core.Symbol</class-id> <category>private-ctlib</category><body package="JaCTLibEXDI">printOnForCTLib: aStream	"Format a respresentation of the receiver acceptable for input to CTLib."	| x |	aStream nextPut: $'.	1 to: self size do:		[:i |		aStream nextPut: (x := self at: i).		x == $' ifTrue: [aStream nextPut: x]].	"embedded quotes get doubled"	aStream nextPut: $'</body></methods><methods><class-id>UI.UISettings class</class-id> <category>resources</category><body package="JaCTLibEXDI">availableEncodingList	^#(#HP15_JP #HP_Roman8 #ISO8859_1 #JapaneseEUC #MS_CP_932 #ShiftJIS)</body></methods><methods><class-id>Tools.VisualWorksSettings class</class-id> <category>settings-database</category><body package="JaCTLibEXDI">sybase1Encoding	&lt;setting: #(sybase sybaseEncoding)&gt;	^((EnumerationSetting choices: #(#default #HP15_JP #HP_Roman8 #ISO8859_1 #JapaneseEUC #MS_CP_932 #ShiftJIS)		labels: #('Default' 'HP15_JP' 'HP_Roman8' 'ISO8859_1' 'JapaneseEUC' 'MS_CP_932' 'ShiftJIS')) 			onUISetting: #sybaseEncoding)		label: #Encoding &lt;&lt; #sybaseDB &gt;&gt; 'Encoding';		default: #default;		helpText: #SybaseHelpText &lt;&lt; #sybaseDB 					&gt;&gt; 'This setting is only needed for Sybase client library 4.x, which is used on Windows and HP. For other operating systems, set this to ''Default''.'</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>CTLibInterface</name><environment>Database</environment><super>External.ExternalInterface</super><private>false</private><indexed-type>none</indexed-type><inst-vars>encoding </inst-vars><class-inst-vars>getSelectorMap fSqlTypeToConversionMap fetchBufferSize putSelectorMap fSqlTypeFromConversionMap libraryLoaded fSqlTypeToServerTypeConversionMap </class-inst-vars><imports>			private Database.CTLibInterfaceDictionary.*			</imports><category>Database-External-Libraries</category><attributes><includeFiles></includeFiles><includeDirectories></includeDirectories><libraryFiles></libraryFiles><libraryDirectories></libraryDirectories><beVirtual>true</beVirtual><optimizationLevel>full</optimizationLevel><package>CTLibEXDI</package></attributes></class><class><name>Symbol</name><environment>Core</environment><super>Core.String</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Collections-Text</category><attributes><package>Collections-Text</package></attributes></class><class><name>CTLibBuffer</name><environment>Database</environment><super>Database.ExternalDatabaseBuffer</super><private>false</private><indexed-type>none</indexed-type><inst-vars>indicatorsPointer lengthsPointer dataFmtPointer getSelector putSelector </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Database-CTLib</category><attributes><package>CTLibEXDI</package></attributes></class></st-source>