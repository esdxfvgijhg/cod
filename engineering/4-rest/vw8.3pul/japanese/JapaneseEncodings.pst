<?xml version="1.0"?><st-source><!-- Name: JapaneseEncodingsNotice: Copyright 1999-2013 Cincom Systems, Inc.  All rights reserved.Comment: This package contains support for various Japanes encodings (EUC, JIS, ShiftJIS, HP15, etc).DbIdentifier: bear73DbTrace: 400835DbUsername: nrossDbVersion: 7.10 - 1PackageName: JapaneseEncodingsParcel: #('JapaneseEncodings')ParcelName: JapaneseEncodingsPrintStringCache: (7.10 - 1,nross)Version: 7.10 - 1Post-Load Block: 	[:package |CharacterEncoder installJapan.StreamEncoder flushEncoderDirectory.LocaleEncodingComponent initialize]Post-Unload Block: 	[CharacterEncoder.Encoders := nil.CharacterEncoder initialize.StreamEncoder flushEncoderDirectory.LocaleEncodingComponent initialize]Date: 7:26:49 AM April 3, 2013 --><time-stamp>From VisualWorksÂ®, Pre-Release 7.10 (mar13.5) of April 3, 2013 on April 3, 2013 at 7:26:49 AM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>ShiftJISStreamEncoder</name><environment>Core</environment><super>Core.StreamEncoder</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Localization-Japan</category><attributes><package>JapaneseEncodings</package></attributes></class><class><name>HP15StreamEncoder</name><environment>Core</environment><super>Core.ShiftJISStreamEncoder</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Localization-Japan</category><attributes><package>JapaneseEncodings</package></attributes></class><class><name>JISStreamEncoder</name><environment>Core</environment><super>Core.StreamEncoder</super><private>false</private><indexed-type>none</indexed-type><inst-vars>rstate wstate </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Localization-Japan</category><attributes><package>JapaneseEncodings</package></attributes></class><comment><class-id>Core.JISStreamEncoder</class-id><body>This provides read and write for ISO2022-JP type encoded stream.  This stream accepts the following escape sequences and change the internal state for reading.	ESC ( B		Ascii	ESC ( J		JIS X 0201 Roman	ESC ( I		JIS X 0201 Katakana	ESC ( H		Bogus JIS X 201 Roman	ESC $ B		JIS X 0208-1983	ESC $ @		JIS X 0208-1978 (not fully supported)	ESC $ ( D		JIS X 0212	ESC &amp; @ ESC $ B					JIS X 0208-1990 (not fully suypported)But for writing, this stream encoder generates only ESC ( B, ESC ( J, ESC ( I, ESC $ ( D and ESC $ B. JIS X 0201 Katakana characters are written as 7-bit characters whose code range is 16r21 to 16r5F--if values in the range 16rA1 to 16rDF are desired, a subclass should be created.Instance Variables:	rstate		&lt;Symbol&gt;	State for reading.	wstate		&lt;Symbol&gt;	State for writing.Class Variables:	EncodeASCII		&lt;CharacterEncoder&gt; Encodes ASCII	EncodeJIS201	&lt;CharacterEncoder&gt; Encodes half-width katakana and JIS Roman	EncodeJIS208	&lt;CharacterEncoder&gt; Encodes full-width characters	EncodeJIS212	&lt;CharacterEncoder&gt; Encodes more full-width characters</body></comment><class><name>MSCP932StreamEncoder</name><environment>Core</environment><super>Core.ShiftJISStreamEncoder</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Localization-Japan</category><attributes><package>JapaneseEncodings</package></attributes></class><class><name>JapaneseEUCStreamEncoder</name><environment>Core</environment><super>Core.StreamEncoder</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Localization-Japan</category><attributes><package>JapaneseEncodings</package></attributes></class><comment><class-id>Core.JapaneseEUCStreamEncoder</class-id><body>This provides reading and writing support for (Japanese) EUC type encoded streams.Class Variables:	EncodeJIS201		&lt;CharacterEncoder&gt; Mapping table for half-width characters.	EncodeJIS208		&lt;CharacterEncoder&gt; Mapping table for full-width characters (JIS X 0208).	EncodeJIS212		&lt;CharacterEncoder&gt; Mapping table for full-width characters (JIS X 0212).</body></comment><class><name>ShiftJISCharacterEncoder</name><environment>Core</environment><super>Core.CharacterEncoder</super><private>false</private><indexed-type>none</indexed-type><inst-vars>mapUnprintableCharacters </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Localization-Japan</category><attributes><package>JapaneseEncodings</package></attributes></class><comment><class-id>Core.ShiftJISCharacterEncoder</class-id><body>This class maps between Unicode characters and ShiftJIS code points.  It's used both for ShiftJIS streaming support, and for mapping strings onto ShiftJIS fonts.Instance Variables:	mapUnprintableCharacters	&lt;Boolean&gt; whether unprintable characters such as those in the range 0-31 should be mapped by the receiver.Class Variables:	Encoder201		&lt;CharacterEncoder&gt; maps characters in the JIS 201 encoding	Encoder208		&lt;CharacterEncoder&gt; maps characters in the JIS 208 encoding</body></comment><shared-variable><name>EncodeJIS208</name><environment>Core.JapaneseEUCStreamEncoder</environment><private>false</private><constant>false</constant><category>As yet unclassified</category><attributes><package>JapaneseEncodings</package></attributes></shared-variable><shared-variable><name>EncodeJIS201</name><environment>Core.JapaneseEUCStreamEncoder</environment><private>false</private><constant>false</constant><category>As yet unclassified</category><attributes><package>JapaneseEncodings</package></attributes></shared-variable><shared-variable><name>EncodeJIS212</name><environment>Core.JapaneseEUCStreamEncoder</environment><private>false</private><constant>false</constant><category>As yet unclassified</category><attributes><package>JapaneseEncodings</package></attributes></shared-variable><shared-variable><name>EncodeJIS212</name><environment>Core.JISStreamEncoder</environment><private>false</private><constant>false</constant><category>As yet unclassified</category><attributes><package>JapaneseEncodings</package></attributes></shared-variable><shared-variable><name>EncodeJIS201</name><environment>Core.JISStreamEncoder</environment><private>false</private><constant>false</constant><category>As yet unclassified</category><attributes><package>JapaneseEncodings</package></attributes></shared-variable><shared-variable><name>EncodeJIS208</name><environment>Core.JISStreamEncoder</environment><private>false</private><constant>false</constant><category>As yet unclassified</category><attributes><package>JapaneseEncodings</package></attributes></shared-variable><shared-variable><name>EncodeASCII</name><environment>Core.JISStreamEncoder</environment><private>false</private><constant>false</constant><category>As yet unclassified</category><attributes><package>JapaneseEncodings</package></attributes></shared-variable><shared-variable><name>Encoder201</name><environment>Core.ShiftJISCharacterEncoder</environment><private>false</private><constant>false</constant><category>As yet unclassified</category><attributes><package>JapaneseEncodings</package></attributes></shared-variable><shared-variable><name>Encoder208</name><environment>Core.ShiftJISCharacterEncoder</environment><private>false</private><constant>false</constant><category>As yet unclassified</category><attributes><package>JapaneseEncodings</package></attributes></shared-variable><methods><class-id>Core.ShiftJISStreamEncoder</class-id> <category>querying</category><body package="JapaneseEncodings">characterSize: ch	"Return the size in bytes of &lt;ch&gt; under this encoding."	| sjis |	sjis := encoder encode: ch.	sjis &lt; 16r100		ifTrue: [^1].	sjis &lt; 65535		ifTrue: [^2].	^self unknownCharacterSize</body></methods><methods><class-id>Core.ShiftJISStreamEncoder</class-id> <category>accessing</category><body package="JapaneseEncodings">nextFrom: aStream	"Decode the next byte(s) in the Shift-JIS encoded stream,	 and answer the character.	 range of Shift-JIS is:		1st byte    	16r81 - 16r9F or 16rE0 - 16rFC		2nd byte	16r40 - 16r7E or 16r80 - 16rFC	 range of half-width Katakana is:		16rA1 - 16rDF"	| c1 c2 |	c1 := aStream next.	c1 == nil		ifTrue: [^nil].	(c1 &lt;= 16r7F or: [16rA1 &lt;= c1 and: [c1 &lt;= 16rDF]])		ifTrue: [^encoder decode: c1].	c2 := aStream next.	c2 == nil		ifTrue: [^nil].	(c1 ~= 16r80 and: [c1 ~= 16rA0 and: [c1 &lt;= 16rFC and: [16r40 &lt;= c2 and: [c2 &lt;= 16rFC and: [c2 ~= 16r7F]]]]])		ifTrue: [^encoder decode: (c1 bitShift: 8) + c2].	^Character illegalCode asCharacter</body><body package="JapaneseEncodings">nextPut: aCharacter on: aStream	"Encode aCharacter and write it to Shift-JIS stream."	| sjis |	sjis := encoder encode: aCharacter.	sjis &lt; 16r100		ifTrue: [aStream nextPut: sjis.			    ^aCharacter].	sjis &lt; 65535		ifTrue: [aStream nextPut: (sjis bitShift: -8);					  nextPut: (sjis bitAnd: 16rFF).			    ^aCharacter].	^self noEncodingFor: aCharacter in: aStream</body><body package="JapaneseEncodings">readFrom: aStream	"Decode the next byte(s) in the Shift-JIS encoded stream,	 and answer the character.	 range of Shift-JIS is:		1st byte    	16r81 - 16r9F or 16rE0 - 16rFC		2nd byte	16r40 - 16r7E or 16r80 - 16rFC	 range of half-width Katakana is:		16rA1 - 16rDF"	| c1 c2 |	c1 := aStream next.	c1 == nil		ifTrue: [^nil].	(c1 &lt;= 16r7F or: [16rA1 &lt;= c1 and: [c1 &lt;= 16rDF]])		ifTrue: [skipRecord advance: 1. ^encoder decode: c1].	c2 := aStream next.	c2 == nil		ifTrue: [skipRecord advance: 1. ^nil].	skipRecord advance: 2.	(c1 ~= 16r80 and: [c1 ~= 16rA0 and: [c1 &lt;= 16rFC and: [16r40 &lt;= c2 and: [c2 &lt;= 16rFC and: [c2 ~= 16r7F]]]]])		ifTrue: [^encoder decode: (c1 bitShift: 8) + c2].	^Character illegalCode asCharacter</body><body package="JapaneseEncodings">write: aCharacter on: aStream	"Encode aCharacter and write it to Shift-JIS stream."	| sjis |	sjis := encoder encode: aCharacter.	sjis &lt; 16r100		ifTrue: [aStream nextPut: sjis.			skipRecord advance: 1.			^aCharacter].	sjis &lt; 65535		ifTrue: [aStream nextPut: (sjis bitShift: -8);					  nextPut: (sjis bitAnd: 16rFF).			skipRecord advance: 2.			^aCharacter].	^self noEncodingFor: aCharacter in: aStream</body></methods><methods><class-id>Core.ShiftJISStreamEncoder class</class-id> <category>private</category><body package="JapaneseEncodings">defaultCharacterEncoder	^CharacterEncoder encoderNamed: #ShiftJIS</body></methods><methods><class-id>Core.ShiftJISStreamEncoder class</class-id> <category>accessing</category><body package="JapaneseEncodings">streamEncodingType	^#ShiftJIS</body></methods><methods><class-id>Core.HP15StreamEncoder class</class-id> <category>accessing</category><body package="JapaneseEncodings">streamEncodingType	^#HP15_JP</body></methods><methods><class-id>Core.JISStreamEncoder</class-id> <category>querying</category><body package="JapaneseEncodings">characterSize: ch	"Return the size in bytes of &lt;ch&gt; under this encoding."	| jis |	jis := EncodeJIS201 encode: ch.	jis &lt;= 16rFF		ifTrue:			[^1].	jis := EncodeJIS208 encode: ch.	jis &lt; 65535		ifTrue:			[^2].	jis := EncodeJIS212 encode: ch.	jis &lt; 65535		ifTrue:			[^2].	jis := EncodeASCII encode: ch.	jis &lt;= 16rFF		ifTrue:			[^1].	^self unknownCharacterSize</body></methods><methods><class-id>Core.JISStreamEncoder</class-id> <category>accessing</category><body package="JapaneseEncodings">nextFrom: aStream	"Decode the next byte(s) in the JIS encoded stream and answer the character.	 The array passed to #readEscapeSequenceWith: is a kind of tree and each	 two elements of the Array is a node of the tree.	    1 &lt;SmallInteger | Character&gt;	Character code	    2 &lt;Array | Symbol&gt;	Next tree node, for non-leaves, or final value for leaves"	| c1 |	[(c1 := aStream next) == 27] whileTrue:		[(self readEscapeSequence: #(							$(  #(								$B #ascii								$J #jisRoman								$I #jisKatakana									"&lt;esc&gt;(H is supported because other									applications incorrectly generate it.									The standard says to use &lt;esc&gt;(J."								$H #jisRoman)							$$  #(								$B #jisx0208  "JIS 0208, 1983"								$@ #jisx0208  "JIS 0208, 1978, should be unique."								$(  #( $D #jisx0212 ))							$&amp;  #( $@  #(								27  #( $$  #( $B #jisx0208  "JIS 0208, 1990"))))							)				from: aStream) ifFalse: [^Character esc]].	c1 == nil		ifTrue: [^nil].	"ASCII, Roman mode or Control-Character of ASCII"	(rstate == #ascii or: [c1 &lt;= 16r20 or: [c1 == 16r7F]])		ifTrue: [c1 &gt;= 16r80				ifTrue: [^EncodeJIS201 decode: c1]				ifFalse: [^EncodeASCII decode: c1]].	rstate == #jisRoman		ifTrue: [^EncodeJIS201 decode: c1].	"JIS X 0208 Kanji"	rstate == #jisx0208		ifTrue: [ | c2 |			c2 := aStream next.			c2 == nil				ifTrue: [^nil].		"could not complete JIS kanji because of unexpected EOF"			(c1 &lt; 16r21 or: [16r7E &lt; c1 or: [c2 &lt; 16r21 or: [16r7E &lt; c2]]])				ifTrue: [^Character illegalCode asCharacter].	"out of JIS kanji code range"			^EncodeJIS208 decode: (c1 bitShift: 8) + c2].	"JIS X 0212 Kanji"	rstate == #jisx0212		ifTrue: [ | c2 |			c2 := aStream next.			c2 == nil				ifTrue: [^nil].		"could not complete JIS kanji because of unexpected EOF"			(c1 &lt; 16r21 or: [16r7E &lt; c1 or: [c2 &lt; 16r21 or: [16r7E &lt; c2]]])				ifTrue: [^Character illegalCode asCharacter].	"out of JIS kanji code range"			^EncodeJIS212 decode: (c1 bitShift: 8) + c2].	"JIS X 0201 Katakana"	(rstate == #jisKatakana and: [16r21 &lt;= c1 and: [c1 &lt;= 16r5F]])		ifTrue: [^EncodeJIS201 decode: c1 + 16r80].	^Character illegalCode asCharacter</body><body package="JapaneseEncodings">nextPut: aCharacter on: aStream	"Encode aCharacter and write it to JIS encoded stream."	| jis |	jis := EncodeJIS201 encode: aCharacter.	jis &lt;= 16rFF		ifTrue:			[jis &lt;= 16r7F				ifTrue:					[self toJRoman: aStream.					aStream nextPut: jis]				ifFalse:					[self toKatakana: aStream.					aStream nextPut: jis-16r80].			^aCharacter].	jis := EncodeJIS208 encode: aCharacter.	jis &lt; 65535		ifTrue:			[self toKanji: aStream.			aStream nextPut: (jis bitShift: -8);				nextPut: (jis bitAnd: 16rFF).			^aCharacter].	jis := EncodeJIS212 encode: aCharacter.	jis &lt; 65535		ifTrue:			[self toKanji2: aStream.			aStream nextPut: (jis bitShift: -8);				nextPut: (jis bitAnd: 16rFF).			^aCharacter].	jis := EncodeASCII encode: aCharacter.	jis &lt;= 16rFF		ifTrue:			[self toAscii: aStream.			aStream nextPut: jis.			^aCharacter].	^self noEncodingFor: aCharacter in: aStream</body><body package="JapaneseEncodings">prepareToClose: aStream	"If there are some conventions about the state of the file	at closing, prepare those conventions."	^aStream isWritable		ifTrue: [self toJRoman: aStream]</body><body package="JapaneseEncodings">readFrom: aStream	"Decode the next byte(s) in the JIS encoded stream and answer the character.	 The array passed to #readEscapeSequenceWith: is a kind of tree and each	 two elements of the Array is a node of the tree.	    1 &lt;SmallInteger | Character&gt;	Character code	    2 &lt;Array | Symbol&gt;	Next tree node, for non-leaves, or final value for leaves"	| c1 |	(skipRecord at: 1) == nil		ifTrue: [skipRecord at: 1 put: rstate; at: 2 put: wstate].	[(c1 := aStream next) == 27] whileTrue:		[(self readEscapeSequence: #(							$(  #(								$B #ascii								$J #jisRoman								$I #jisKatakana									"&lt;esc&gt;(H is supported because other									applications incorrectly generate it.									The standard says to use &lt;esc&gt;(J."								$H #jisRoman)							$$  #(								$B #jisx0208  "JIS 0208, 1983"								$@ #jisx0208  "JIS 0208, 1978, should be unique."								$(  #( $D #jisx0212 ))							$&amp;  #( $@  #(								27  #( $$  #( $B #jisx0208  "JIS 0208, 1990"))))							)				from: aStream) ifFalse: [skipRecord advance: 1. ^Character esc]].	c1 == nil		ifTrue: [^nil].	"ASCII, Roman mode or Control-Character of ASCII"	(rstate == #ascii or: [c1 &lt;= 16r20 or: [c1 == 16r7F]])		ifTrue:			[skipRecord advance: 1.			c1 &gt;= 16r80				ifTrue: [^EncodeJIS201 decode: c1]				ifFalse: [^EncodeASCII decode: c1]].	rstate == #jisRoman		ifTrue:			[skipRecord advance: 1.			^EncodeJIS201 decode: c1].	"JIS X 0208 Kanji"	rstate == #jisx0208		ifTrue: [ | c2 |			c2 := aStream next.			c2 == nil				ifTrue: [skipRecord advance: 1. ^nil].		"could not complete JIS kanji because of unexpected EOF"			skipRecord advance: 2.			(c1 &lt; 16r21 or: [16r7E &lt; c1 or: [c2 &lt; 16r21 or: [16r7E &lt; c2]]])				ifTrue: [^Character illegalCode asCharacter].	"out of JIS kanji code range"			^EncodeJIS208 decode: (c1 bitShift: 8) + c2].	"JIS X 0212 Kanji"	rstate == #jisx0212		ifTrue: [ | c2 |			c2 := aStream next.			c2 == nil				ifTrue: [skipRecord advance: 1. ^nil].		"could not complete JIS kanji because of unexpected EOF"			skipRecord advance: 2.			(c1 &lt; 16r21 or: [16r7E &lt; c1 or: [c2 &lt; 16r21 or: [16r7E &lt; c2]]])				ifTrue: [^Character illegalCode asCharacter].	"out of JIS kanji code range"			^EncodeJIS212 decode: (c1 bitShift: 8) + c2].	skipRecord advance: 1.	"JIS X 0201 Katakana"	(rstate == #jisKatakana and: [16r21 &lt;= c1 and: [c1 &lt;= 16r5F]])		ifTrue: [^EncodeJIS201 decode: c1 + 16r80].	^Character illegalCode asCharacter</body><body package="JapaneseEncodings">readMode	"If this is a modal encoder (e.g. JIS), return what mode we're in for reading. The meaning of the returned object is undefined, but it can be useful to know if the mode has changed"	^rstate.</body><body package="JapaneseEncodings">reset	"Reset the state machine to initial (JIS Roman) mode."	rstate := #jisRoman.	wstate := #jisRoman.</body><body package="JapaneseEncodings">skipBack: aStream by: aPositionRecord	aStream skip: aPositionRecord value negated.	"restore any other state needed from the record."	(aPositionRecord at: 1) == nil		ifFalse:			[rstate := aPositionRecord at: 1.			wstate := aPositionRecord at: 2].</body><body package="JapaneseEncodings">write: aCharacter on: aStream	"Encode aCharacter and write it to JIS encoded stream."	| jis |	(skipRecord at: 1) == nil		ifTrue: [skipRecord at: 1 put: rstate; at: 2 put: wstate].	jis := EncodeJIS201 encode: aCharacter.	jis &lt;= 16rFF		ifTrue:			[jis &lt;= 16r7F				ifTrue:					[self toJRoman: aStream.					aStream nextPut: jis]				ifFalse:					[self toKatakana: aStream.					aStream nextPut: jis-16r80].			skipRecord advance: 1.			^aCharacter].	jis := EncodeJIS208 encode: aCharacter.	jis &lt; 65535		ifTrue:			[self toKanji: aStream.			aStream nextPut: (jis bitShift: -8);				nextPut: (jis bitAnd: 16rFF).			skipRecord advance: 2.			^aCharacter].	jis := EncodeJIS212 encode: aCharacter.	jis &lt; 65535		ifTrue:			[self toKanji2: aStream.			aStream nextPut: (jis bitShift: -8);				nextPut: (jis bitAnd: 16rFF).			skipRecord advance: 2.			^aCharacter].	jis := EncodeASCII encode: aCharacter.	jis &lt;= 16rFF		ifTrue:			[self toAscii: aStream.			aStream nextPut: jis.			skipRecord advance: 1.			^aCharacter].	^self noEncodingFor: aCharacter in: aStream</body></methods><methods><class-id>Core.JISStreamEncoder</class-id> <category>private</category><body package="JapaneseEncodings">readEscapeSequence: table from: aStream	"Try to recognize an ESCape sequence according to table.	 Answer true if a legal escape sequence is recognized.	 Otherwise answer false if unexpected EOF or illegal character is encountered."	| count choices i |	choices := table.	count := 0.	[choices isSymbol] whileFalse:		[| ch |		ch := aStream next.		ch == nil			ifTrue:				[aStream skip: count.				^false].		count := count - 1.		i := choices indexOf: (Character value: ch).		i = 0			ifTrue:				[aStream skip: count.				^false].		choices := choices at: i+1].	rstate := choices.	skipRecord advance: 1 - count.    "count is negative, so we need to negate it, plus 1 for the ESC"	^true</body><body package="JapaneseEncodings">toAscii: aStream	"Transit to ASCII state."	wstate == #ascii		ifTrue: [^self].	aStream isWritable ifTrue: [aStream nextPutAll: #[ 27 40 66 ]. skipRecord advance: 3].	wstate := #ascii</body><body package="JapaneseEncodings">toJRoman: aStream	"Transit to JIS Roman state."	wstate == #jisRoman		ifTrue: [^self].	aStream isWritable ifTrue: [aStream nextPutAll: #[ 27 40 74 ]. skipRecord advance: 3].	wstate := #jisRoman</body><body package="JapaneseEncodings">toKanji2: aStream	"Transit to JIS X 0212-1990 Kanji state."	wstate == #jisx0212		ifTrue: [^self].	aStream nextPutAll: #[ 27 36 40 68 ].	skipRecord advance: 4.	wstate := #jisx0212</body><body package="JapaneseEncodings">toKanji: aStream	"Transit to JIS X 0208-1983 Kanji state."	wstate == #jisx0208		ifTrue: [^self].	aStream nextPutAll: #[ 27 36 66 ].	skipRecord advance: 3.	wstate := #jisx0208</body><body package="JapaneseEncodings">toKatakana: aStream	"Transit to half-width katakana state."	wstate == #jisKatakana		ifTrue: [^self].	aStream isWritable ifTrue: [aStream nextPutAll: #[ 27 40 73 ]. skipRecord advance: 3].	wstate := #jisKatakana</body></methods><methods><class-id>Core.JISStreamEncoder</class-id> <category>initialize-release</category><body package="JapaneseEncodings">skipRecord: aRecord	skipRecord := aRecord.	aRecord minimumSize: 2.</body></methods><methods><class-id>Core.JISStreamEncoder class</class-id> <category>private</category><body package="JapaneseEncodings">defaultCharacterEncoder	^nil</body></methods><methods><class-id>Core.JISStreamEncoder class</class-id> <category>initialize</category><body package="JapaneseEncodings">initialize	"JISStreamEncoder initialize"	CharacterEncoder encoderNamed: #'jisx0208.1983-0'		ifAbsent: [CharacterEncoder installJapan].	EncodeJIS201 := CharacterEncoder encoderNamed: #'jisx0201.1976-0'.	EncodeJIS208 := CharacterEncoder encoderNamed: #'jisx0208.1983-0'.	EncodeJIS212 := CharacterEncoder encoderNamed: #'jisx0212.1990-0'.	EncodeASCII := ByteCharacterEncoder new.	0 to: 127 do: [:i | EncodeASCII encode: i asCharacter as: i].</body></methods><methods><class-id>Core.JISStreamEncoder class</class-id> <category>accessing</category><body package="JapaneseEncodings">alternateNames	"Answer the symbol of this encoding."	^#( #'iso-2022-jp')</body><body package="JapaneseEncodings">streamEncodingType	^#JIS</body></methods><methods><class-id>Core.MSCP932StreamEncoder class</class-id> <category>private</category><body package="JapaneseEncodings">defaultCharacterEncoder	^CharacterEncoder encoderNamed: #ms_cp_932</body></methods><methods><class-id>Core.MSCP932StreamEncoder class</class-id> <category>accessing</category><body package="JapaneseEncodings">alternateNames	"Answer the symbol of this encoding."	^#( #'shift_jis' #MS_CP_932 )</body><body package="JapaneseEncodings">streamEncodingType	^#'Windows-932'</body></methods><methods><class-id>Core.JapaneseEUCStreamEncoder</class-id> <category>querying</category><body package="JapaneseEncodings">characterSize: ch	"Return the size in bytes of &lt;ch&gt; under this encoding."	| euc |	euc := EncodeJIS201 encode: ch.	euc &lt;= 16rFF		ifTrue:			[^euc &lt;= 16r7F				ifTrue: [1]				ifFalse: [2]].	euc := EncodeJIS208 encode: ch.	euc &lt; 65535		ifTrue: [^2].	euc := EncodeJIS212 encode: ch.	euc &lt; 65535		ifTrue: [^3].	^self unknownCharacterSize</body></methods><methods><class-id>Core.JapaneseEUCStreamEncoder</class-id> <category>accessing</category><body package="JapaneseEncodings">nextFrom: aStream	"Decode the next byte(s) in the Japanese EUC encoded stream,	 and answer the character."	| c1 c2 c3 |	c1 := aStream next.	c1 == nil		ifTrue: [^nil].	c1 &lt;= 16r7F		ifTrue: [^EncodeJIS201 decode: c1].	c2 := aStream next.	c2 == nil		ifTrue: [^nil].	"JIS X 0208 Kanji "	(16rA1 &lt;= c1 and: [c1 &lt;= 16rFE and: [16rA1 &lt;= c2 and: [c2 &lt;= 16rFE]]])		ifTrue: [^EncodeJIS208 decode: (c1 bitShift: 8) + c2 - 16r8080].	"JIS X 0201 Katakana"	(c1 == 16r8E and: [16rA1 &lt;= c2 and: [c2 &lt;= 16rDF]])		ifTrue: [^EncodeJIS201 decode: c2].	"JIS X 0212 Kanji"	c1 == 16r8F		ifTrue:			[c3 := aStream next.			(c3 notNil and: [16rA1 &lt;= c2 and: [c2 &lt;= 16rFE					and: [16rA1 &lt;= c3 and: [c3 &lt;= 16rFE]]]])				ifTrue: [^EncodeJIS212 decode: (c2 bitShift: 8) + c3 - 16r8080]].	^Character illegalCode asCharacter</body><body package="JapaneseEncodings">nextPut: aCharacter on: aStream	"Encode aCharacter and write it to Japanese EUC stream."	| euc |	euc := EncodeJIS201 encode: aCharacter.	euc &lt;= 16rFF		ifTrue:			[euc &lt;= 16r7F				ifTrue: [aStream nextPut: euc]				ifFalse:					[aStream nextPut: 16r8E; nextPut: euc].			^aCharacter].	euc := EncodeJIS208 encode: aCharacter.	euc &lt; 65535		ifTrue: [aStream nextPut: (euc bitShift: -8) + 16r80;					   nextPut: (euc bitAnd: 16rFF) + 16r80.			    ^aCharacter].	euc := EncodeJIS212 encode: aCharacter.	euc &lt; 65535		ifTrue: [aStream nextPut: 16r8F;						nextPut: (euc bitShift: -8) + 16r80;					   nextPut: (euc bitAnd: 16rFF) + 16r80.			    ^aCharacter].	^self noEncodingFor: aCharacter in: aStream</body><body package="JapaneseEncodings">readFrom: aStream	"Decode the next byte(s) in the Japanese EUC encoded stream,	 and answer the character."	| c1 c2 c3 |	c1 := aStream next.	c1 == nil		ifTrue: [^nil].	c1 &lt;= 16r7F		ifTrue: [skipRecord advance: 1. ^EncodeJIS201 decode: c1].	c2 := aStream next.	c2 == nil		ifTrue: [skipRecord advance: 1. ^nil].	skipRecord advance: 2.	"JIS X 0208 Kanji "	(16rA1 &lt;= c1 and: [c1 &lt;= 16rFE and: [16rA1 &lt;= c2 and: [c2 &lt;= 16rFE]]])		ifTrue: [^EncodeJIS208 decode: (c1 bitShift: 8) + c2 - 16r8080].	"JIS X 0201 Katakana"	(c1 == 16r8E and: [16rA1 &lt;= c2 and: [c2 &lt;= 16rDF]])		ifTrue: [^EncodeJIS201 decode: c2].	"JIS X 0212 Kanji"	c1 == 16r8F		ifTrue:			[c3 := aStream next.			c3 == nil ifFalse: [skipRecord advance: 1].			(c3 notNil and: [16rA1 &lt;= c2 and: [c2 &lt;= 16rFE					and: [16rA1 &lt;= c3 and: [c3 &lt;= 16rFE]]]])				ifTrue: [^EncodeJIS212 decode: (c2 bitShift: 8) + c3 - 16r8080]].	^Character illegalCode asCharacter</body><body package="JapaneseEncodings">write: aCharacter on: aStream	"Encode aCharacter and write it to Japanese EUC stream."	| euc |	euc := EncodeJIS201 encode: aCharacter.	euc &lt;= 16rFF		ifTrue:			[euc &lt;= 16r7F				ifTrue: [aStream nextPut: euc. skipRecord advance: 1]				ifFalse:					[aStream nextPut: 16r8E; nextPut: euc. skipRecord advance: 2].			^aCharacter].	euc := EncodeJIS208 encode: aCharacter.	euc &lt; 65535		ifTrue:			[aStream nextPut: (euc bitShift: -8) + 16r80;				nextPut: (euc bitAnd: 16rFF) + 16r80.			skipRecord advance: 2.		    ^aCharacter].	euc := EncodeJIS212 encode: aCharacter.	euc &lt; 65535		ifTrue:			[aStream nextPut: 16r8F;				nextPut: (euc bitShift: -8) + 16r80;				nextPut: (euc bitAnd: 16rFF) + 16r80.			skipRecord advance: 3.			^aCharacter].	^self noEncodingFor: aCharacter in: aStream</body></methods><methods><class-id>Core.JapaneseEUCStreamEncoder class</class-id> <category>private</category><body package="JapaneseEncodings">defaultCharacterEncoder	^nil</body></methods><methods><class-id>Core.JapaneseEUCStreamEncoder class</class-id> <category>initialize</category><body package="JapaneseEncodings">initialize	"JapaneseEUCStreamEncoder initialize"	CharacterEncoder encoderNamed: #'jisx0208.1983-0'		ifAbsent: [CharacterEncoder installJapan].	EncodeJIS201 := CharacterEncoder encoderNamed: #'jisx0201.1976-0'.	EncodeJIS208 := CharacterEncoder encoderNamed: #'jisx0208.1983-0'.	EncodeJIS212 := CharacterEncoder encoderNamed: #'jisx0212.1990-0'.</body></methods><methods><class-id>Core.JapaneseEUCStreamEncoder class</class-id> <category>accessing</category><body package="JapaneseEncodings">alternateNames	"Answer the symbol of this encoding."	^#( #JapaneseEUC #eucJP )</body><body package="JapaneseEncodings">streamEncodingType	^#'EUC-JP'</body></methods><methods><class-id>Core.ShiftJISCharacterEncoder</class-id> <category>accessing</category><body package="JapaneseEncodings">decode: charCode	"Decode a Shift-JIS character code to Unicode Character."	| c1 c2 adjust rowOffset cellOffset |	"ASCII and JIS X 0201 Katakana"	charCode &lt;= 255		ifTrue: [^(mapUnprintableCharacters or: [charCode &gt;= 32 and: [charCode ~= 127]])			ifTrue: [Encoder201 decode: charCode]			ifFalse: [IllegalCharacterValue asCharacter]].	"Shift-JIS JIS X 0208 Kanji to Shift-JIS (MS code)"	c1 := charCode bitShift: -8.	c2 := charCode bitAnd: 16rFF.	adjust := c2 &lt; 159		ifTrue: [1]		ifFalse: [0].	rowOffset := c1 &lt; 160		ifTrue: [112]		ifFalse: [176].	cellOffset := adjust == 0		ifTrue: [126]		ifFalse: [c2 &gt; 127 ifTrue: [32] ifFalse: [31]].	^Encoder208 decode: (((((c1 - rowOffset) bitShift: 1) - adjust) bitShift: 8) bitOr: (c2 - cellOffset))</body><body package="JapaneseEncodings">encode: aCharacter	"Encode an Unicode character to character code (SmallInteger)	 in Shift-JIS."	| jis c1 c2 rowOffset cellOffset |	jis := Encoder201 encode: aCharacter.	jis &lt;= 255		ifTrue: [^(mapUnprintableCharacters or: [jis &gt;= 32 and: [jis ~= 127]])			ifTrue: [jis]			ifFalse: [IllegalCharacterValue]].	jis := Encoder208 encode: aCharacter.	jis = 65535 ifTrue: [^jis].	"convert JIS X 0208 to Shift-JIS(MS Kanji)"	c1 := jis bitShift: -8.	c2 := jis bitAnd: 16rFF.	rowOffset := c1 &lt; 95		ifTrue: [112]		ifFalse: [176].	cellOffset := (c1 bitAnd: 1) == 0		ifTrue: [126]		ifFalse: [ c2 &gt; 95 ifTrue: [32] ifFalse: [31]].	^((((c1 + 1) bitShift: -1) + rowOffset) bitShift: 8) bitOr: (c2 + cellOffset)</body><body package="JapaneseEncodings">mapUnprintableCharacters: aBoolean	mapUnprintableCharacters := aBoolean</body></methods><methods><class-id>Core.ShiftJISCharacterEncoder</class-id> <category>initialize</category><body package="JapaneseEncodings">initialize	super initialize.	mapUnprintableCharacters := true</body></methods><methods><class-id>Core.ShiftJISCharacterEncoder class</class-id> <category>testing</category><body package="JapaneseEncodings">selfTestConst: encoder	"Test Shift-JIS Known Character."	^(16r41 == (encoder encode: $A)) &amp;						"ASCII"	 (16rA1 == (encoder encode: 16rFF61 asCharacter)) &amp;		"JISX0201 Katakana"	 (16r88EA == (encoder encode: 16r4E00 asCharacter)) &amp;	"JISX0208 Kanji"	 (16rEA9E == (encoder encode: 16r9FA0 asCharacter)) &amp;	 (16r8140 == (encoder encode: 16r3000 asCharacter)) &amp;	 ((encoder decode: 16r007E) == $~) &amp;						"ASCII"	 ((encoder decode: 16r00DF) == 16rFF9F asCharacter) &amp;	"JISX0201 Katakana"	 ((encoder decode: 16rEA9E) == 16r9FA0 asCharacter)	"JISX0208 Kanji"</body><body package="JapaneseEncodings">selfTestJISX0208: encoder	"Test Shift-JIS encoder/decoder for JIS X 0208 area."	| uc |	16r81 to: 16rFC do: [ :c |		16r40 to: 16rFC do: [ :r |			((16rA0 &lt;= c) &amp; (c &lt;= 16rDF)) | (r == 16r7F) ifFalse: [				uc := encoder decode: c * 256 + r.				uc ~~ Character illegalCode asCharacter ifTrue: [					(c * 256 + r) == (encoder encode: uc)						ifFalse: [^false]]]]].	^true</body></methods><methods><class-id>Core.ShiftJISCharacterEncoder class</class-id> <category>class initialization</category><body package="JapaneseEncodings">initialize	| encoder |	CharacterEncoder encoderNamed: #'jisx0208.1983-0'		ifAbsent: [CharacterEncoder installJapan].	Encoder201 := CharacterEncoder encoderNamed: #'jisx0201.1976-0'.	Encoder208 := CharacterEncoder encoderNamed: #'jisx0208.1983-0'.	encoder := self new name: #ShiftJIS.	"OS2 support discontinued"	#(unix  win32)		do: [ :platform |			CharacterEncoder				installEncoder: encoder				named: encoder name				platform: platform].	CharacterEncoder		installEncoder: encoder		named: #macJapanese		platform: #unix.	CharacterEncoder		installEncoder: encoder		named: #kanji		platform: #win32</body></methods><methods><class-id>Core.LocaleEncodingComponent class</class-id> <category>installation</category><body package="JapaneseEncodings">install_EUC_JP_Encoding	| enc |	enc := self new.	enc		name: #'EUC-JP';		compoundTextEncodeOrder: #(#ascii #iso1);		cutPasteEncoding: #CompoundText;		defaultStreamEncoder: (StreamEncoder lookupEncoderDirectory: #'EUC-JP');		ignoreSerifEncodings: #('jisx0208.1983-0' 'jisx0212.1990-0' 'jisx0201.1976-0');		needsInputMethod: true;		preferredEncodings: #('iso8859-1' 'jisx0208.1983-0' 'jisx0212.1990-0' 'jisx0201.1976-0');		preferredFontFamily: #('*gothic*' '*mincho*');		preferredPixelSize: nil.	self addEncoding: enc platform: #unix.</body><body package="JapaneseEncodings">install_WINDOWS_932_Encoding	| enc |	enc := self new.	enc		name: #'Windows-932';		compoundTextEncodeOrder: #(#ascii #iso1);		cutPasteEncoding: #UTF16;		defaultStreamEncoder: (StreamEncoder lookupEncoderDirectory: #'Windows-932');		ignoreSerifEncodings: #();		needsInputMethod: true;		preferredEncodings: nil;		preferredFontFamily: #();		preferredPixelSize: nil.	self addEncoding: enc platform: #win32.</body></methods><methods><class-id>Graphics.LargeCharacterEncoder</class-id> <category>private</category><body package="JapaneseEncodings">unify: character as: code	| unicode a |	character asInteger = IllegalCharacterValue ifTrue: [^self].	unicode := character asInteger.	a := decoder at: (code bitShift: -8) + 1.	a == nil		ifTrue: [decoder					at: (code bitShift: -8) + 1					put: (a := WordArray new: 256 withAll: IllegalCharacterValue)].	a at: (code bitAnd: 255)+1 put: unicode.</body></methods><methods><class-id>Core.CharacterEncoder class</class-id> <category>private-instance creation</category><body package="JapaneseEncodings">createJIS0201	"CharacterEncoder createJIS0201"	| new |	new := ByteCharacterEncoder new.	16r0 to: 16r7F do:		[:i |		new encode: i asCharacter as: i].	16rA1 to: 16rDF do:		[:i |		new encode: (i - 16rA0 + 16rFF60) asCharacter as: i].	new encodeVariant: 16rA5 asCharacter as: 16r5C.	new encodeVariant: 16r203E asCharacter as: 16r7E.	new name: #'jisx0201.1976-0'.	^new</body><body package="JapaneseEncodings">createJIS0208	"CharacterEncoder createJIS0208"	| literal new jis unicode |	literal := self jis0208Literal.	new := LargeCharacterEncoder new.	1 to: literal size do:		[:i | | sub |		sub := literal at: i.		sub == nil			ifFalse:				[sub size = 94 ifFalse: [self error: 'Invalid initialization table'].				1 to: 94 do:					[:k |					jis := i-1 * 256 + (k+32).					unicode := sub at: k.					new encode: unicode asCharacter as: jis]]].	new name: #'jisx0208.1983-0'.	^new</body><body package="JapaneseEncodings">createJIS0212	"CharacterEncoder createJIS0212"	| new |	new := LargeCharacterEncoder new.	new name: #'jisx0212.1990-0'.	self encode: new from: 16r3021 to: 16r307E withAll: 			#(      16r4E02 16r4E04 16r4E05 16r4E0C 16r4E12 16r4E1F 16r4E23			16r4E24 16r4E28 16r4E2B 16r4E2E 16r4E2F 16r4E30 16r4E35 16r4E40			16r4E41 16r4E44 16r4E47 16r4E51 16r4E5A 16r4E5C 16r4E63 16r4E68			16r4E69 16r4E74 16r4E75 16r4E79 16r4E7F 16r4E8D 16r4E96 16r4E97			16r4E9D 16r4EAF 16r4EB9 16r4EC3 16r4ED0 16r4EDA 16r4EDB 16r4EE0			16r4EE1 16r4EE2 16r4EE8 16r4EEF 16r4EF1 16r4EF3 16r4EF5 16r4EFD			16r4EFE 16r4EFF 16r4F00 16r4F02 16r4F03 16r4F08 16r4F0B 16r4F0C			16r4F12 16r4F15 16r4F16 16r4F17 16r4F19 16r4F2E 16r4F31 16r4F60			16r4F33 16r4F35 16r4F37 16r4F39 16r4F3B 16r4F3E 16r4F40 16r4F42			16r4F48 16r4F49 16r4F4B 16r4F4C 16r4F52 16r4F54 16r4F56 16r4F58			16r4F5F 16r4F63 16r4F6A 16r4F6C 16r4F6E 16r4F71 16r4F77 16r4F78			16r4F79 16r4F7A 16r4F7D 16r4F7E 16r4F81 16r4F82 16r4F84 ).	self encode: new from: 16r3121 to: 16r317E withAll: 			#(      16r4F85 16r4F89 16r4F8A 16r4F8C 16r4F8E 16r4F90 16r4F92			16r4F93 16r4F94 16r4F97 16r4F99 16r4F9A 16r4F9E 16r4F9F 16r4FB2			16r4FB7 16r4FB9 16r4FBB 16r4FBC 16r4FBD 16r4FBE 16r4FC0 16r4FC1			16r4FC5 16r4FC6 16r4FC8 16r4FC9 16r4FCB 16r4FCC 16r4FCD 16r4FCF			16r4FD2 16r4FDC 16r4FE0 16r4FE2 16r4FF0 16r4FF2 16r4FFC 16r4FFD			16r4FFF 16r5000 16r5001 16r5004 16r5007 16r500A 16r500C 16r500E			16r5010 16r5013 16r5017 16r5018 16r501B 16r501C 16r501D 16r501E			16r5022 16r5027 16r502E 16r5030 16r5032 16r5033 16r5035 16r5040			16r5041 16r5042 16r5045 16r5046 16r504A 16r504C 16r504E 16r5051			16r5052 16r5053 16r5057 16r5059 16r505F 16r5060 16r5062 16r5063			16r5066 16r5067 16r506A 16r506D 16r5070 16r5071 16r503B 16r5081			16r5083 16r5084 16r5086 16r508A 16r508E 16r508F 16r5090 ).	self encode: new from: 16r3221 to: 16r327E withAll: 			#(      16r5092 16r5093 16r5094 16r5096 16r509B 16r509C 16r509E			16r509F 16r50A0 16r50A1 16r50A2 16r50AA 16r50AF 16r50B0 16r50B9			16r50BA 16r50BD 16r50C0 16r50C3 16r50C4 16r50C7 16r50CC 16r50CE			16r50D0 16r50D3 16r50D4 16r50D8 16r50DC 16r50DD 16r50DF 16r50E2			16r50E4 16r50E6 16r50E8 16r50E9 16r50EF 16r50F1 16r50F6 16r50FA			16r50FE 16r5103 16r5106 16r5107 16r5108 16r510B 16r510C 16r510D			16r510E 16r50F2 16r5110 16r5117 16r5119 16r511B 16r511C 16r511D			16r511E 16r5123 16r5127 16r5128 16r512C 16r512D 16r512F 16r5131			16r5133 16r5134 16r5135 16r5138 16r5139 16r5142 16r514A 16r514F			16r5153 16r5155 16r5157 16r5158 16r515F 16r5164 16r5166 16r517E			16r5183 16r5184 16r518B 16r518E 16r5198 16r519D 16r51A1 16r51A3			16r51AD 16r51B8 16r51BA 16r51BC 16r51BE 16r51BF 16r51C2 ).	self encode: new from: 16r3321 to: 16r337E withAll: 			#(      16r51C8 16r51CF 16r51D1 16r51D2 16r51D3 16r51D5 16r51D8			16r51DE 16r51E2 16r51E5 16r51EE 16r51F2 16r51F3 16r51F4 16r51F7			16r5201 16r5202 16r5205 16r5212 16r5213 16r5215 16r5216 16r5218			16r5222 16r5228 16r5231 16r5232 16r5235 16r523C 16r5245 16r5249			16r5255 16r5257 16r5258 16r525A 16r525C 16r525F 16r5260 16r5261			16r5266 16r526E 16r5277 16r5278 16r5279 16r5280 16r5282 16r5285			16r528A 16r528C 16r5293 16r5295 16r5296 16r5297 16r5298 16r529A			16r529C 16r52A4 16r52A5 16r52A6 16r52A7 16r52AF 16r52B0 16r52B6			16r52B7 16r52B8 16r52BA 16r52BB 16r52BD 16r52C0 16r52C4 16r52C6			16r52C8 16r52CC 16r52CF 16r52D1 16r52D4 16r52D6 16r52DB 16r52DC			16r52E1 16r52E5 16r52E8 16r52E9 16r52EA 16r52EC 16r52F0 16r52F1			16r52F4 16r52F6 16r52F7 16r5300 16r5303 16r530A 16r530B ).	self encode: new from: 16r3421 to: 16r347E withAll: 			#(      16r530C 16r5311 16r5313 16r5318 16r531B 16r531C 16r531E			16r531F 16r5325 16r5327 16r5328 16r5329 16r532B 16r532C 16r532D			16r5330 16r5332 16r5335 16r533C 16r533D 16r533E 16r5342 16r534C			16r534B 16r5359 16r535B 16r5361 16r5363 16r5365 16r536C 16r536D			16r5372 16r5379 16r537E 16r5383 16r5387 16r5388 16r538E 16r5393			16r5394 16r5399 16r539D 16r53A1 16r53A4 16r53AA 16r53AB 16r53AF			16r53B2 16r53B4 16r53B5 16r53B7 16r53B8 16r53BA 16r53BD 16r53C0			16r53C5 16r53CF 16r53D2 16r53D3 16r53D5 16r53DA 16r53DD 16r53DE			16r53E0 16r53E6 16r53E7 16r53F5 16r5402 16r5413 16r541A 16r5421			16r5427 16r5428 16r542A 16r542F 16r5431 16r5434 16r5435 16r5443			16r5444 16r5447 16r544D 16r544F 16r545E 16r5462 16r5464 16r5466			16r5467 16r5469 16r546B 16r546D 16r546E 16r5474 16r547F ).	self encode: new from: 16r3521 to: 16r357E withAll: 			#(      16r5481 16r5483 16r5485 16r5488 16r5489 16r548D 16r5491			16r5495 16r5496 16r549C 16r549F 16r54A1 16r54A6 16r54A7 16r54A9			16r54AA 16r54AD 16r54AE 16r54B1 16r54B7 16r54B9 16r54BA 16r54BB			16r54BF 16r54C6 16r54CA 16r54CD 16r54CE 16r54E0 16r54EA 16r54EC			16r54EF 16r54F6 16r54FC 16r54FE 16r54FF 16r5500 16r5501 16r5505			16r5508 16r5509 16r550C 16r550D 16r550E 16r5515 16r552A 16r552B			16r5532 16r5535 16r5536 16r553B 16r553C 16r553D 16r5541 16r5547			16r5549 16r554A 16r554D 16r5550 16r5551 16r5558 16r555A 16r555B			16r555E 16r5560 16r5561 16r5564 16r5566 16r557F 16r5581 16r5582			16r5586 16r5588 16r558E 16r558F 16r5591 16r5592 16r5593 16r5594			16r5597 16r55A3 16r55A4 16r55AD 16r55B2 16r55BF 16r55C1 16r55C3			16r55C6 16r55C9 16r55CB 16r55CC 16r55CE 16r55D1 16r55D2 ).	self encode: new from: 16r3621 to: 16r367E withAll: 			#(      16r55D3 16r55D7 16r55D8 16r55DB 16r55DE 16r55E2 16r55E9			16r55F6 16r55FF 16r5605 16r5608 16r560A 16r560D 16r560E 16r560F			16r5610 16r5611 16r5612 16r5619 16r562C 16r5630 16r5633 16r5635			16r5637 16r5639 16r563B 16r563C 16r563D 16r563F 16r5640 16r5641			16r5643 16r5644 16r5646 16r5649 16r564B 16r564D 16r564F 16r5654			16r565E 16r5660 16r5661 16r5662 16r5663 16r5666 16r5669 16r566D			16r566F 16r5671 16r5672 16r5675 16r5684 16r5685 16r5688 16r568B			16r568C 16r5695 16r5699 16r569A 16r569D 16r569E 16r569F 16r56A6			16r56A7 16r56A8 16r56A9 16r56AB 16r56AC 16r56AD 16r56B1 16r56B3			16r56B7 16r56BE 16r56C5 16r56C9 16r56CA 16r56CB 16r56CF 16r56D0			16r56CC 16r56CD 16r56D9 16r56DC 16r56DD 16r56DF 16r56E1 16r56E4			16r56E5 16r56E6 16r56E7 16r56E8 16r56F1 16r56EB 16r56ED ).	self encode: new from: 16r3721 to: 16r377E withAll: 			#(      16r56F6 16r56F7 16r5701 16r5702 16r5707 16r570A 16r570C			16r5711 16r5715 16r571A 16r571B 16r571D 16r5720 16r5722 16r5723			16r5724 16r5725 16r5729 16r572A 16r572C 16r572E 16r572F 16r5733			16r5734 16r573D 16r573E 16r573F 16r5745 16r5746 16r574C 16r574D			16r5752 16r5762 16r5765 16r5767 16r5768 16r576B 16r576D 16r576E			16r576F 16r5770 16r5771 16r5773 16r5774 16r5775 16r5777 16r5779			16r577A 16r577B 16r577C 16r577E 16r5781 16r5783 16r578C 16r5794			16r5797 16r5799 16r579A 16r579C 16r579D 16r579E 16r579F 16r57A1			16r5795 16r57A7 16r57A8 16r57A9 16r57AC 16r57B8 16r57BD 16r57C7			16r57C8 16r57CC 16r57CF 16r57D5 16r57DD 16r57DE 16r57E4 16r57E6			16r57E7 16r57E9 16r57ED 16r57F0 16r57F5 16r57F6 16r57F8 16r57FD			16r57FE 16r57FF 16r5803 16r5804 16r5808 16r5809 16r57E1 ).	self encode: new from: 16r3821 to: 16r387E withAll: 			#(      16r580C 16r580D 16r581B 16r581E 16r581F 16r5820 16r5826			16r5827 16r582D 16r5832 16r5839 16r583F 16r5849 16r584C 16r584D			16r584F 16r5850 16r5855 16r585F 16r5861 16r5864 16r5867 16r5868			16r5878 16r587C 16r587F 16r5880 16r5881 16r5887 16r5888 16r5889			16r588A 16r588C 16r588D 16r588F 16r5890 16r5894 16r5896 16r589D			16r58A0 16r58A1 16r58A2 16r58A6 16r58A9 16r58B1 16r58B2 16r58C4			16r58BC 16r58C2 16r58C8 16r58CD 16r58CE 16r58D0 16r58D2 16r58D4			16r58D6 16r58DA 16r58DD 16r58E1 16r58E2 16r58E9 16r58F3 16r5905			16r5906 16r590B 16r590C 16r5912 16r5913 16r5914 16r8641 16r591D			16r5921 16r5923 16r5924 16r5928 16r592F 16r5930 16r5933 16r5935			16r5936 16r593F 16r5943 16r5946 16r5952 16r5953 16r5959 16r595B			16r595D 16r595E 16r595F 16r5961 16r5963 16r596B 16r596D ).	self encode: new from: 16r3921 to: 16r397E withAll: 			#(      16r596F 16r5972 16r5975 16r5976 16r5979 16r597B 16r597C			16r598B 16r598C 16r598E 16r5992 16r5995 16r5997 16r599F 16r59A4			16r59A7 16r59AD 16r59AE 16r59AF 16r59B0 16r59B3 16r59B7 16r59BA			16r59BC 16r59C1 16r59C3 16r59C4 16r59C8 16r59CA 16r59CD 16r59D2			16r59DD 16r59DE 16r59DF 16r59E3 16r59E4 16r59E7 16r59EE 16r59EF			16r59F1 16r59F2 16r59F4 16r59F7 16r5A00 16r5A04 16r5A0C 16r5A0D			16r5A0E 16r5A12 16r5A13 16r5A1E 16r5A23 16r5A24 16r5A27 16r5A28			16r5A2A 16r5A2D 16r5A30 16r5A44 16r5A45 16r5A47 16r5A48 16r5A4C			16r5A50 16r5A55 16r5A5E 16r5A63 16r5A65 16r5A67 16r5A6D 16r5A77			16r5A7A 16r5A7B 16r5A7E 16r5A8B 16r5A90 16r5A93 16r5A96 16r5A99			16r5A9C 16r5A9E 16r5A9F 16r5AA0 16r5AA2 16r5AA7 16r5AAC 16r5AB1			16r5AB2 16r5AB3 16r5AB5 16r5AB8 16r5ABA 16r5ABB 16r5ABF ).	self encode: new from: 16r3A21 to: 16r3A7E withAll: 			#(      16r5AC4 16r5AC6 16r5AC8 16r5ACF 16r5ADA 16r5ADC 16r5AE0			16r5AE5 16r5AEA 16r5AEE 16r5AF5 16r5AF6 16r5AFD 16r5B00 16r5B01			16r5B08 16r5B17 16r5B34 16r5B19 16r5B1B 16r5B1D 16r5B21 16r5B25			16r5B2D 16r5B38 16r5B41 16r5B4B 16r5B4C 16r5B52 16r5B56 16r5B5E			16r5B68 16r5B6E 16r5B6F 16r5B7C 16r5B7D 16r5B7E 16r5B7F 16r5B81			16r5B84 16r5B86 16r5B8A 16r5B8E 16r5B90 16r5B91 16r5B93 16r5B94			16r5B96 16r5BA8 16r5BA9 16r5BAC 16r5BAD 16r5BAF 16r5BB1 16r5BB2			16r5BB7 16r5BBA 16r5BBC 16r5BC0 16r5BC1 16r5BCD 16r5BCF 16r5BD6			16r5BD7 16r5BD8 16r5BD9 16r5BDA 16r5BE0 16r5BEF 16r5BF1 16r5BF4			16r5BFD 16r5C0C 16r5C17 16r5C1E 16r5C1F 16r5C23 16r5C26 16r5C29			16r5C2B 16r5C2C 16r5C2E 16r5C30 16r5C32 16r5C35 16r5C36 16r5C59			16r5C5A 16r5C5C 16r5C62 16r5C63 16r5C67 16r5C68 16r5C69 ).	self encode: new from: 16r3B21 to: 16r3B7E withAll: 			#(      16r5C6D 16r5C70 16r5C74 16r5C75 16r5C7A 16r5C7B 16r5C7C			16r5C7D 16r5C87 16r5C88 16r5C8A 16r5C8F 16r5C92 16r5C9D 16r5C9F			16r5CA0 16r5CA2 16r5CA3 16r5CA6 16r5CAA 16r5CB2 16r5CB4 16r5CB5			16r5CBA 16r5CC9 16r5CCB 16r5CD2 16r5CDD 16r5CD7 16r5CEE 16r5CF1			16r5CF2 16r5CF4 16r5D01 16r5D06 16r5D0D 16r5D12 16r5D2B 16r5D23			16r5D24 16r5D26 16r5D27 16r5D31 16r5D34 16r5D39 16r5D3D 16r5D3F			16r5D42 16r5D43 16r5D46 16r5D48 16r5D55 16r5D51 16r5D59 16r5D4A			16r5D5F 16r5D60 16r5D61 16r5D62 16r5D64 16r5D6A 16r5D6D 16r5D70			16r5D79 16r5D7A 16r5D7E 16r5D7F 16r5D81 16r5D83 16r5D88 16r5D8A			16r5D92 16r5D93 16r5D94 16r5D95 16r5D99 16r5D9B 16r5D9F 16r5DA0			16r5DA7 16r5DAB 16r5DB0 16r5DB4 16r5DB8 16r5DB9 16r5DC3 16r5DC7			16r5DCB 16r5DD0 16r5DCE 16r5DD8 16r5DD9 16r5DE0 16r5DE4 ).	self encode: new from: 16r3C21 to: 16r3C7E withAll: 			#(      16r5DE9 16r5DF8 16r5DF9 16r5E00 16r5E07 16r5E0D 16r5E12			16r5E14 16r5E15 16r5E18 16r5E1F 16r5E20 16r5E2E 16r5E28 16r5E32			16r5E35 16r5E3E 16r5E4B 16r5E50 16r5E49 16r5E51 16r5E56 16r5E58			16r5E5B 16r5E5C 16r5E5E 16r5E68 16r5E6A 16r5E6B 16r5E6C 16r5E6D			16r5E6E 16r5E70 16r5E80 16r5E8B 16r5E8E 16r5EA2 16r5EA4 16r5EA5			16r5EA8 16r5EAA 16r5EAC 16r5EB1 16r5EB3 16r5EBD 16r5EBE 16r5EBF			16r5EC6 16r5ECC 16r5ECB 16r5ECE 16r5ED1 16r5ED2 16r5ED4 16r5ED5			16r5EDC 16r5EDE 16r5EE5 16r5EEB 16r5F02 16r5F06 16r5F07 16r5F08			16r5F0E 16r5F19 16r5F1C 16r5F1D 16r5F21 16r5F22 16r5F23 16r5F24			16r5F28 16r5F2B 16r5F2C 16r5F2E 16r5F30 16r5F34 16r5F36 16r5F3B			16r5F3D 16r5F3F 16r5F40 16r5F44 16r5F45 16r5F47 16r5F4D 16r5F50			16r5F54 16r5F58 16r5F5B 16r5F60 16r5F63 16r5F64 16r5F67 ).	self encode: new from: 16r3D21 to: 16r3D7E withAll: 			#(      16r5F6F 16r5F72 16r5F74 16r5F75 16r5F78 16r5F7A 16r5F7D			16r5F7E 16r5F89 16r5F8D 16r5F8F 16r5F96 16r5F9C 16r5F9D 16r5FA2			16r5FA7 16r5FAB 16r5FA4 16r5FAC 16r5FAF 16r5FB0 16r5FB1 16r5FB8			16r5FC4 16r5FC7 16r5FC8 16r5FC9 16r5FCB 16r5FD0 16r5FD1 16r5FD2			16r5FD3 16r5FD4 16r5FDE 16r5FE1 16r5FE2 16r5FE8 16r5FE9 16r5FEA			16r5FEC 16r5FED 16r5FEE 16r5FEF 16r5FF2 16r5FF3 16r5FF6 16r5FFA			16r5FFC 16r6007 16r600A 16r600D 16r6013 16r6014 16r6017 16r6018			16r601A 16r601F 16r6024 16r602D 16r6033 16r6035 16r6040 16r6047			16r6048 16r6049 16r604C 16r6051 16r6054 16r6056 16r6057 16r605D			16r6061 16r6067 16r6071 16r607E 16r607F 16r6082 16r6086 16r6088			16r608A 16r608E 16r6091 16r6093 16r6095 16r6098 16r609D 16r609E			16r60A2 16r60A4 16r60A5 16r60A8 16r60B0 16r60B1 16r60B7 ).	self encode: new from: 16r3E21 to: 16r3E7E withAll: 			#(      16r60BB 16r60BE 16r60C2 16r60C4 16r60C8 16r60C9 16r60CA			16r60CB 16r60CE 16r60CF 16r60D4 16r60D5 16r60D9 16r60DB 16r60DD			16r60DE 16r60E2 16r60E5 16r60F2 16r60F5 16r60F8 16r60FC 16r60FD			16r6102 16r6107 16r610A 16r610C 16r6110 16r6111 16r6112 16r6113			16r6114 16r6116 16r6117 16r6119 16r611C 16r611E 16r6122 16r612A			16r612B 16r6130 16r6131 16r6135 16r6136 16r6137 16r6139 16r6141			16r6145 16r6146 16r6149 16r615E 16r6160 16r616C 16r6172 16r6178			16r617B 16r617C 16r617F 16r6180 16r6181 16r6183 16r6184 16r618B			16r618D 16r6192 16r6193 16r6197 16r6198 16r619C 16r619D 16r619F			16r61A0 16r61A5 16r61A8 16r61AA 16r61AD 16r61B8 16r61B9 16r61BC			16r61C0 16r61C1 16r61C2 16r61CE 16r61CF 16r61D5 16r61DC 16r61DD			16r61DE 16r61DF 16r61E1 16r61E2 16r61E7 16r61E9 16r61E5 ).	self encode: new from: 16r3F21 to: 16r3F7E withAll: 			#(      16r61EC 16r61ED 16r61EF 16r6201 16r6203 16r6204 16r6207			16r6213 16r6215 16r621C 16r6220 16r6222 16r6223 16r6227 16r6229			16r622B 16r6239 16r623D 16r6242 16r6243 16r6244 16r6246 16r624C			16r6250 16r6251 16r6252 16r6254 16r6256 16r625A 16r625C 16r6264			16r626D 16r626F 16r6273 16r627A 16r627D 16r628D 16r628E 16r628F			16r6290 16r62A6 16r62A8 16r62B3 16r62B6 16r62B7 16r62BA 16r62BE			16r62BF 16r62C4 16r62CE 16r62D5 16r62D6 16r62DA 16r62EA 16r62F2			16r62F4 16r62FC 16r62FD 16r6303 16r6304 16r630A 16r630B 16r630D			16r6310 16r6313 16r6316 16r6318 16r6329 16r632A 16r632D 16r6335			16r6336 16r6339 16r633C 16r6341 16r6342 16r6343 16r6344 16r6346			16r634A 16r634B 16r634E 16r6352 16r6353 16r6354 16r6358 16r635B			16r6365 16r6366 16r636C 16r636D 16r6371 16r6374 16r6375 ).	self encode: new from: 16r4021 to: 16r407E withAll: 			#(      16r6378 16r637C 16r637D 16r637F 16r6382 16r6384 16r6387			16r638A 16r6390 16r6394 16r6395 16r6399 16r639A 16r639E 16r63A4			16r63A6 16r63AD 16r63AE 16r63AF 16r63BD 16r63C1 16r63C5 16r63C8			16r63CE 16r63D1 16r63D3 16r63D4 16r63D5 16r63DC 16r63E0 16r63E5			16r63EA 16r63EC 16r63F2 16r63F3 16r63F5 16r63F8 16r63F9 16r6409			16r640A 16r6410 16r6412 16r6414 16r6418 16r641E 16r6420 16r6422			16r6424 16r6425 16r6429 16r642A 16r642F 16r6430 16r6435 16r643D			16r643F 16r644B 16r644F 16r6451 16r6452 16r6453 16r6454 16r645A			16r645B 16r645C 16r645D 16r645F 16r6460 16r6461 16r6463 16r646D			16r6473 16r6474 16r647B 16r647D 16r6485 16r6487 16r648F 16r6490			16r6491 16r6498 16r6499 16r649B 16r649D 16r649F 16r64A1 16r64A3			16r64A6 16r64A8 16r64AC 16r64B3 16r64BD 16r64BE 16r64BF ).	self encode: new from: 16r4121 to: 16r417E withAll: 			#(      16r64C4 16r64C9 16r64CA 16r64CB 16r64CC 16r64CE 16r64D0			16r64D1 16r64D5 16r64D7 16r64E4 16r64E5 16r64E9 16r64EA 16r64ED			16r64F0 16r64F5 16r64F7 16r64FB 16r64FF 16r6501 16r6504 16r6508			16r6509 16r650A 16r650F 16r6513 16r6514 16r6516 16r6519 16r651B			16r651E 16r651F 16r6522 16r6526 16r6529 16r652E 16r6531 16r653A			16r653C 16r653D 16r6543 16r6547 16r6549 16r6550 16r6552 16r6554			16r655F 16r6560 16r6567 16r656B 16r657A 16r657D 16r6581 16r6585			16r658A 16r6592 16r6595 16r6598 16r659D 16r65A0 16r65A3 16r65A6			16r65AE 16r65B2 16r65B3 16r65B4 16r65BF 16r65C2 16r65C8 16r65C9			16r65CE 16r65D0 16r65D4 16r65D6 16r65D8 16r65DF 16r65F0 16r65F2			16r65F4 16r65F5 16r65F9 16r65FE 16r65FF 16r6600 16r6604 16r6608			16r6609 16r660D 16r6611 16r6612 16r6615 16r6616 16r661D ).	self encode: new from: 16r4221 to: 16r427E withAll: 			#(      16r661E 16r6621 16r6622 16r6623 16r6624 16r6626 16r6629			16r662A 16r662B 16r662C 16r662E 16r6630 16r6631 16r6633 16r6639			16r6637 16r6640 16r6645 16r6646 16r664A 16r664C 16r6651 16r664E			16r6657 16r6658 16r6659 16r665B 16r665C 16r6660 16r6661 16r66FB			16r666A 16r666B 16r666C 16r667E 16r6673 16r6675 16r667F 16r6677			16r6678 16r6679 16r667B 16r6680 16r667C 16r668B 16r668C 16r668D			16r6690 16r6692 16r6699 16r669A 16r669B 16r669C 16r669F 16r66A0			16r66A4 16r66AD 16r66B1 16r66B2 16r66B5 16r66BB 16r66BF 16r66C0			16r66C2 16r66C3 16r66C8 16r66CC 16r66CE 16r66CF 16r66D4 16r66DB			16r66DF 16r66E8 16r66EB 16r66EC 16r66EE 16r66FA 16r6705 16r6707			16r670E 16r6713 16r6719 16r671C 16r6720 16r6722 16r6733 16r673E			16r6745 16r6747 16r6748 16r674C 16r6754 16r6755 16r675D ).	self encode: new from: 16r4321 to: 16r437E withAll: 			#(      16r6766 16r676C 16r676E 16r6774 16r6776 16r677B 16r6781			16r6784 16r678E 16r678F 16r6791 16r6793 16r6796 16r6798 16r6799			16r679B 16r67B0 16r67B1 16r67B2 16r67B5 16r67BB 16r67BC 16r67BD			16r67F9 16r67C0 16r67C2 16r67C3 16r67C5 16r67C8 16r67C9 16r67D2			16r67D7 16r67D9 16r67DC 16r67E1 16r67E6 16r67F0 16r67F2 16r67F6			16r67F7 16r6852 16r6814 16r6819 16r681D 16r681F 16r6828 16r6827			16r682C 16r682D 16r682F 16r6830 16r6831 16r6833 16r683B 16r683F			16r6844 16r6845 16r684A 16r684C 16r6855 16r6857 16r6858 16r685B			16r686B 16r686E 16r686F 16r6870 16r6871 16r6872 16r6875 16r6879			16r687A 16r687B 16r687C 16r6882 16r6884 16r6886 16r6888 16r6896			16r6898 16r689A 16r689C 16r68A1 16r68A3 16r68A5 16r68A9 16r68AA			16r68AE 16r68B2 16r68BB 16r68C5 16r68C8 16r68CC 16r68CF ).	self encode: new from: 16r4421 to: 16r447E withAll: 			#(      16r68D0 16r68D1 16r68D3 16r68D6 16r68D9 16r68DC 16r68DD			16r68E5 16r68E8 16r68EA 16r68EB 16r68EC 16r68ED 16r68F0 16r68F1			16r68F5 16r68F6 16r68FB 16r68FC 16r68FD 16r6906 16r6909 16r690A			16r6910 16r6911 16r6913 16r6916 16r6917 16r6931 16r6933 16r6935			16r6938 16r693B 16r6942 16r6945 16r6949 16r694E 16r6957 16r695B			16r6963 16r6964 16r6965 16r6966 16r6968 16r6969 16r696C 16r6970			16r6971 16r6972 16r697A 16r697B 16r697F 16r6980 16r698D 16r6992			16r6996 16r6998 16r69A1 16r69A5 16r69A6 16r69A8 16r69AB 16r69AD			16r69AF 16r69B7 16r69B8 16r69BA 16r69BC 16r69C5 16r69C8 16r69D1			16r69D6 16r69D7 16r69E2 16r69E5 16r69EE 16r69EF 16r69F1 16r69F3			16r69F5 16r69FE 16r6A00 16r6A01 16r6A03 16r6A0F 16r6A11 16r6A15			16r6A1A 16r6A1D 16r6A20 16r6A24 16r6A28 16r6A30 16r6A32 ).	self encode: new from: 16r4521 to: 16r457E withAll: 			#(      16r6A34 16r6A37 16r6A3B 16r6A3E 16r6A3F 16r6A45 16r6A46			16r6A49 16r6A4A 16r6A4E 16r6A50 16r6A51 16r6A52 16r6A55 16r6A56			16r6A5B 16r6A64 16r6A67 16r6A6A 16r6A71 16r6A73 16r6A7E 16r6A81			16r6A83 16r6A86 16r6A87 16r6A89 16r6A8B 16r6A91 16r6A9B 16r6A9D			16r6A9E 16r6A9F 16r6AA5 16r6AAB 16r6AAF 16r6AB0 16r6AB1 16r6AB4			16r6ABD 16r6ABE 16r6ABF 16r6AC6 16r6AC9 16r6AC8 16r6ACC 16r6AD0			16r6AD4 16r6AD5 16r6AD6 16r6ADC 16r6ADD 16r6AE4 16r6AE7 16r6AEC			16r6AF0 16r6AF1 16r6AF2 16r6AFC 16r6AFD 16r6B02 16r6B03 16r6B06			16r6B07 16r6B09 16r6B0F 16r6B10 16r6B11 16r6B17 16r6B1B 16r6B1E			16r6B24 16r6B28 16r6B2B 16r6B2C 16r6B2F 16r6B35 16r6B36 16r6B3B			16r6B3F 16r6B46 16r6B4A 16r6B4D 16r6B52 16r6B56 16r6B58 16r6B5D			16r6B60 16r6B67 16r6B6B 16r6B6E 16r6B70 16r6B75 16r6B7D ).	self encode: new from: 16r4621 to: 16r467E withAll: 			#(      16r6B7E 16r6B82 16r6B85 16r6B97 16r6B9B 16r6B9F 16r6BA0			16r6BA2 16r6BA3 16r6BA8 16r6BA9 16r6BAC 16r6BAD 16r6BAE 16r6BB0			16r6BB8 16r6BB9 16r6BBD 16r6BBE 16r6BC3 16r6BC4 16r6BC9 16r6BCC			16r6BD6 16r6BDA 16r6BE1 16r6BE3 16r6BE6 16r6BE7 16r6BEE 16r6BF1			16r6BF7 16r6BF9 16r6BFF 16r6C02 16r6C04 16r6C05 16r6C09 16r6C0D			16r6C0E 16r6C10 16r6C12 16r6C19 16r6C1F 16r6C26 16r6C27 16r6C28			16r6C2C 16r6C2E 16r6C33 16r6C35 16r6C36 16r6C3A 16r6C3B 16r6C3F			16r6C4A 16r6C4B 16r6C4D 16r6C4F 16r6C52 16r6C54 16r6C59 16r6C5B			16r6C5C 16r6C6B 16r6C6D 16r6C6F 16r6C74 16r6C76 16r6C78 16r6C79			16r6C7B 16r6C85 16r6C86 16r6C87 16r6C89 16r6C94 16r6C95 16r6C97			16r6C98 16r6C9C 16r6C9F 16r6CB0 16r6CB2 16r6CB4 16r6CC2 16r6CC6			16r6CCD 16r6CCF 16r6CD0 16r6CD1 16r6CD2 16r6CD4 16r6CD6 ).	self encode: new from: 16r4721 to: 16r477E withAll: 			#(      16r6CDA 16r6CDC 16r6CE0 16r6CE7 16r6CE9 16r6CEB 16r6CEC			16r6CEE 16r6CF2 16r6CF4 16r6D04 16r6D07 16r6D0A 16r6D0E 16r6D0F			16r6D11 16r6D13 16r6D1A 16r6D26 16r6D27 16r6D28 16r6C67 16r6D2E			16r6D2F 16r6D31 16r6D39 16r6D3C 16r6D3F 16r6D57 16r6D5E 16r6D5F			16r6D61 16r6D65 16r6D67 16r6D6F 16r6D70 16r6D7C 16r6D82 16r6D87			16r6D91 16r6D92 16r6D94 16r6D96 16r6D97 16r6D98 16r6DAA 16r6DAC			16r6DB4 16r6DB7 16r6DB9 16r6DBD 16r6DBF 16r6DC4 16r6DC8 16r6DCA			16r6DCE 16r6DCF 16r6DD6 16r6DDB 16r6DDD 16r6DDF 16r6DE0 16r6DE2			16r6DE5 16r6DE9 16r6DEF 16r6DF0 16r6DF4 16r6DF6 16r6DFC 16r6E00			16r6E04 16r6E1E 16r6E22 16r6E27 16r6E32 16r6E36 16r6E39 16r6E3B			16r6E3C 16r6E44 16r6E45 16r6E48 16r6E49 16r6E4B 16r6E4F 16r6E51			16r6E52 16r6E53 16r6E54 16r6E57 16r6E5C 16r6E5D 16r6E5E ).	self encode: new from: 16r4821 to: 16r487E withAll: 			#(      16r6E62 16r6E63 16r6E68 16r6E73 16r6E7B 16r6E7D 16r6E8D			16r6E93 16r6E99 16r6EA0 16r6EA7 16r6EAD 16r6EAE 16r6EB1 16r6EB3			16r6EBB 16r6EBF 16r6EC0 16r6EC1 16r6EC3 16r6EC7 16r6EC8 16r6ECA			16r6ECD 16r6ECE 16r6ECF 16r6EEB 16r6EED 16r6EEE 16r6EF9 16r6EFB			16r6EFD 16r6F04 16r6F08 16r6F0A 16r6F0C 16r6F0D 16r6F16 16r6F18			16r6F1A 16r6F1B 16r6F26 16r6F29 16r6F2A 16r6F2F 16r6F30 16r6F33			16r6F36 16r6F3B 16r6F3C 16r6F2D 16r6F4F 16r6F51 16r6F52 16r6F53			16r6F57 16r6F59 16r6F5A 16r6F5D 16r6F5E 16r6F61 16r6F62 16r6F68			16r6F6C 16r6F7D 16r6F7E 16r6F83 16r6F87 16r6F88 16r6F8B 16r6F8C			16r6F8D 16r6F90 16r6F92 16r6F93 16r6F94 16r6F96 16r6F9A 16r6F9F			16r6FA0 16r6FA5 16r6FA6 16r6FA7 16r6FA8 16r6FAE 16r6FAF 16r6FB0			16r6FB5 16r6FB6 16r6FBC 16r6FC5 16r6FC7 16r6FC8 16r6FCA ).	self encode: new from: 16r4921 to: 16r497E withAll: 			#(      16r6FDA 16r6FDE 16r6FE8 16r6FE9 16r6FF0 16r6FF5 16r6FF9			16r6FFC 16r6FFD 16r7000 16r7005 16r7006 16r7007 16r700D 16r7017			16r7020 16r7023 16r702F 16r7034 16r7037 16r7039 16r703C 16r7043			16r7044 16r7048 16r7049 16r704A 16r704B 16r7054 16r7055 16r705D			16r705E 16r704E 16r7064 16r7065 16r706C 16r706E 16r7075 16r7076			16r707E 16r7081 16r7085 16r7086 16r7094 16r7095 16r7096 16r7097			16r7098 16r709B 16r70A4 16r70AB 16r70B0 16r70B1 16r70B4 16r70B7			16r70CA 16r70D1 16r70D3 16r70D4 16r70D5 16r70D6 16r70D8 16r70DC			16r70E4 16r70FA 16r7103 16r7104 16r7105 16r7106 16r7107 16r710B			16r710C 16r710F 16r711E 16r7120 16r712B 16r712D 16r712F 16r7130			16r7131 16r7138 16r7141 16r7145 16r7146 16r7147 16r714A 16r714B			16r7150 16r7152 16r7157 16r715A 16r715C 16r715E 16r7160 ).	self encode: new from: 16r4A21 to: 16r4A7E withAll: 			#(      16r7168 16r7179 16r7180 16r7185 16r7187 16r718C 16r7192			16r719A 16r719B 16r71A0 16r71A2 16r71AF 16r71B0 16r71B2 16r71B3			16r71BA 16r71BF 16r71C0 16r71C1 16r71C4 16r71CB 16r71CC 16r71D3			16r71D6 16r71D9 16r71DA 16r71DC 16r71F8 16r71FE 16r7200 16r7207			16r7208 16r7209 16r7213 16r7217 16r721A 16r721D 16r721F 16r7224			16r722B 16r722F 16r7234 16r7238 16r7239 16r7241 16r7242 16r7243			16r7245 16r724E 16r724F 16r7250 16r7253 16r7255 16r7256 16r725A			16r725C 16r725E 16r7260 16r7263 16r7268 16r726B 16r726E 16r726F			16r7271 16r7277 16r7278 16r727B 16r727C 16r727F 16r7284 16r7289			16r728D 16r728E 16r7293 16r729B 16r72A8 16r72AD 16r72AE 16r72B1			16r72B4 16r72BE 16r72C1 16r72C7 16r72C9 16r72CC 16r72D5 16r72D6			16r72D8 16r72DF 16r72E5 16r72F3 16r72F4 16r72FA 16r72FB ).	self encode: new from: 16r4B21 to: 16r4B7E withAll: 			#(      16r72FE 16r7302 16r7304 16r7305 16r7307 16r730B 16r730D			16r7312 16r7313 16r7318 16r7319 16r731E 16r7322 16r7324 16r7327			16r7328 16r732C 16r7331 16r7332 16r7335 16r733A 16r733B 16r733D			16r7343 16r734D 16r7350 16r7352 16r7356 16r7358 16r735D 16r735E			16r735F 16r7360 16r7366 16r7367 16r7369 16r736B 16r736C 16r736E			16r736F 16r7371 16r7377 16r7379 16r737C 16r7380 16r7381 16r7383			16r7385 16r7386 16r738E 16r7390 16r7393 16r7395 16r7397 16r7398			16r739C 16r739E 16r739F 16r73A0 16r73A2 16r73A5 16r73A6 16r73AA			16r73AB 16r73AD 16r73B5 16r73B7 16r73B9 16r73BC 16r73BD 16r73BF			16r73C5 16r73C6 16r73C9 16r73CB 16r73CC 16r73CF 16r73D2 16r73D3			16r73D6 16r73D9 16r73DD 16r73E1 16r73E3 16r73E6 16r73E7 16r73E9			16r73F4 16r73F5 16r73F7 16r73F9 16r73FA 16r73FB 16r73FD ).	self encode: new from: 16r4C21 to: 16r4C7E withAll: 			#(      16r73FF 16r7400 16r7401 16r7404 16r7407 16r740A 16r7411			16r741A 16r741B 16r7424 16r7426 16r7428 16r7429 16r742A 16r742B			16r742C 16r742D 16r742E 16r742F 16r7430 16r7431 16r7439 16r7440			16r7443 16r7444 16r7446 16r7447 16r744B 16r744D 16r7451 16r7452			16r7457 16r745D 16r7462 16r7466 16r7467 16r7468 16r746B 16r746D			16r746E 16r7471 16r7472 16r7480 16r7481 16r7485 16r7486 16r7487			16r7489 16r748F 16r7490 16r7491 16r7492 16r7498 16r7499 16r749A			16r749C 16r749F 16r74A0 16r74A1 16r74A3 16r74A6 16r74A8 16r74A9			16r74AA 16r74AB 16r74AE 16r74AF 16r74B1 16r74B2 16r74B5 16r74B9			16r74BB 16r74BF 16r74C8 16r74C9 16r74CC 16r74D0 16r74D3 16r74D8			16r74DA 16r74DB 16r74DE 16r74DF 16r74E4 16r74E8 16r74EA 16r74EB			16r74EF 16r74F4 16r74FA 16r74FB 16r74FC 16r74FF 16r7506 ).	self encode: new from: 16r4D21 to: 16r4D7E withAll: 			#(      16r7512 16r7516 16r7517 16r7520 16r7521 16r7524 16r7527			16r7529 16r752A 16r752F 16r7536 16r7539 16r753D 16r753E 16r753F			16r7540 16r7543 16r7547 16r7548 16r754E 16r7550 16r7552 16r7557			16r755E 16r755F 16r7561 16r756F 16r7571 16r7579 16r757A 16r757B			16r757C 16r757D 16r757E 16r7581 16r7585 16r7590 16r7592 16r7593			16r7595 16r7599 16r759C 16r75A2 16r75A4 16r75B4 16r75BA 16r75BF			16r75C0 16r75C1 16r75C4 16r75C6 16r75CC 16r75CE 16r75CF 16r75D7			16r75DC 16r75DF 16r75E0 16r75E1 16r75E4 16r75E7 16r75EC 16r75EE			16r75EF 16r75F1 16r75F9 16r7600 16r7602 16r7603 16r7604 16r7607			16r7608 16r760A 16r760C 16r760F 16r7612 16r7613 16r7615 16r7616			16r7619 16r761B 16r761C 16r761D 16r761E 16r7623 16r7625 16r7626			16r7629 16r762D 16r7632 16r7633 16r7635 16r7638 16r7639 ).	self encode: new from: 16r4E21 to: 16r4E7E withAll: 			#(      16r763A 16r763C 16r764A 16r7640 16r7641 16r7643 16r7644			16r7645 16r7649 16r764B 16r7655 16r7659 16r765F 16r7664 16r7665			16r766D 16r766E 16r766F 16r7671 16r7674 16r7681 16r7685 16r768C			16r768D 16r7695 16r769B 16r769C 16r769D 16r769F 16r76A0 16r76A2			16r76A3 16r76A4 16r76A5 16r76A6 16r76A7 16r76A8 16r76AA 16r76AD			16r76BD 16r76C1 16r76C5 16r76C9 16r76CB 16r76CC 16r76CE 16r76D4			16r76D9 16r76E0 16r76E6 16r76E8 16r76EC 16r76F0 16r76F1 16r76F6			16r76F9 16r76FC 16r7700 16r7706 16r770A 16r770E 16r7712 16r7714			16r7715 16r7717 16r7719 16r771A 16r771C 16r7722 16r7728 16r772D			16r772E 16r772F 16r7734 16r7735 16r7736 16r7739 16r773D 16r773E			16r7742 16r7745 16r7746 16r774A 16r774D 16r774E 16r774F 16r7752			16r7756 16r7757 16r775C 16r775E 16r775F 16r7760 16r7762 ).	self encode: new from: 16r4F21 to: 16r4F7E withAll: 			#(      16r7764 16r7767 16r776A 16r776C 16r7770 16r7772 16r7773			16r7774 16r777A 16r777D 16r7780 16r7784 16r778C 16r778D 16r7794			16r7795 16r7796 16r779A 16r779F 16r77A2 16r77A7 16r77AA 16r77AE			16r77AF 16r77B1 16r77B5 16r77BE 16r77C3 16r77C9 16r77D1 16r77D2			16r77D5 16r77D9 16r77DE 16r77DF 16r77E0 16r77E4 16r77E6 16r77EA			16r77EC 16r77F0 16r77F1 16r77F4 16r77F8 16r77FB 16r7805 16r7806			16r7809 16r780D 16r780E 16r7811 16r781D 16r7821 16r7822 16r7823			16r782D 16r782E 16r7830 16r7835 16r7837 16r7843 16r7844 16r7847			16r7848 16r784C 16r784E 16r7852 16r785C 16r785E 16r7860 16r7861			16r7863 16r7864 16r7868 16r786A 16r786E 16r787A 16r787E 16r788A			16r788F 16r7894 16r7898 16r78A1 16r789D 16r789E 16r789F 16r78A4			16r78A8 16r78AC 16r78AD 16r78B0 16r78B1 16r78B2 16r78B3 ).	self encode: new from: 16r5021 to: 16r507E withAll: 			#(      16r78BB 16r78BD 16r78BF 16r78C7 16r78C8 16r78C9 16r78CC			16r78CE 16r78D2 16r78D3 16r78D5 16r78D6 16r78E4 16r78DB 16r78DF			16r78E0 16r78E1 16r78E6 16r78EA 16r78F2 16r78F3 16r7900 16r78F6			16r78F7 16r78FA 16r78FB 16r78FF 16r7906 16r790C 16r7910 16r791A			16r791C 16r791E 16r791F 16r7920 16r7925 16r7927 16r7929 16r792D			16r7931 16r7934 16r7935 16r793B 16r793D 16r793F 16r7944 16r7945			16r7946 16r794A 16r794B 16r794F 16r7951 16r7954 16r7958 16r795B			16r795C 16r7967 16r7969 16r796B 16r7972 16r7979 16r797B 16r797C			16r797E 16r798B 16r798C 16r7991 16r7993 16r7994 16r7995 16r7996			16r7998 16r799B 16r799C 16r79A1 16r79A8 16r79A9 16r79AB 16r79AF			16r79B1 16r79B4 16r79B8 16r79BB 16r79C2 16r79C4 16r79C7 16r79C8			16r79CA 16r79CF 16r79D4 16r79D6 16r79DA 16r79DD 16r79DE ).	self encode: new from: 16r5121 to: 16r517E withAll: 			#(      16r79E0 16r79E2 16r79E5 16r79EA 16r79EB 16r79ED 16r79F1			16r79F8 16r79FC 16r7A02 16r7A03 16r7A07 16r7A09 16r7A0A 16r7A0C			16r7A11 16r7A15 16r7A1B 16r7A1E 16r7A21 16r7A27 16r7A2B 16r7A2D			16r7A2F 16r7A30 16r7A34 16r7A35 16r7A38 16r7A39 16r7A3A 16r7A44			16r7A45 16r7A47 16r7A48 16r7A4C 16r7A55 16r7A56 16r7A59 16r7A5C			16r7A5D 16r7A5F 16r7A60 16r7A65 16r7A67 16r7A6A 16r7A6D 16r7A75			16r7A78 16r7A7E 16r7A80 16r7A82 16r7A85 16r7A86 16r7A8A 16r7A8B			16r7A90 16r7A91 16r7A94 16r7A9E 16r7AA0 16r7AA3 16r7AAC 16r7AB3			16r7AB5 16r7AB9 16r7ABB 16r7ABC 16r7AC6 16r7AC9 16r7ACC 16r7ACE			16r7AD1 16r7ADB 16r7AE8 16r7AE9 16r7AEB 16r7AEC 16r7AF1 16r7AF4			16r7AFB 16r7AFD 16r7AFE 16r7B07 16r7B14 16r7B1F 16r7B23 16r7B27			16r7B29 16r7B2A 16r7B2B 16r7B2D 16r7B2E 16r7B2F 16r7B30 ).	self encode: new from: 16r5221 to: 16r527E withAll: 			#(      16r7B31 16r7B34 16r7B3D 16r7B3F 16r7B40 16r7B41 16r7B47			16r7B4E 16r7B55 16r7B60 16r7B64 16r7B66 16r7B69 16r7B6A 16r7B6D			16r7B6F 16r7B72 16r7B73 16r7B77 16r7B84 16r7B89 16r7B8E 16r7B90			16r7B91 16r7B96 16r7B9B 16r7B9E 16r7BA0 16r7BA5 16r7BAC 16r7BAF			16r7BB0 16r7BB2 16r7BB5 16r7BB6 16r7BBA 16r7BBB 16r7BBC 16r7BBD			16r7BC2 16r7BC5 16r7BC8 16r7BCA 16r7BD4 16r7BD6 16r7BD7 16r7BD9			16r7BDA 16r7BDB 16r7BE8 16r7BEA 16r7BF2 16r7BF4 16r7BF5 16r7BF8			16r7BF9 16r7BFA 16r7BFC 16r7BFE 16r7C01 16r7C02 16r7C03 16r7C04			16r7C06 16r7C09 16r7C0B 16r7C0C 16r7C0E 16r7C0F 16r7C19 16r7C1B			16r7C20 16r7C25 16r7C26 16r7C28 16r7C2C 16r7C31 16r7C33 16r7C34			16r7C36 16r7C39 16r7C3A 16r7C46 16r7C4A 16r7C55 16r7C51 16r7C52			16r7C53 16r7C59 16r7C5A 16r7C5B 16r7C5C 16r7C5D 16r7C5E ).	self encode: new from: 16r5321 to: 16r537E withAll: 			#(      16r7C61 16r7C63 16r7C67 16r7C69 16r7C6D 16r7C6E 16r7C70			16r7C72 16r7C79 16r7C7C 16r7C7D 16r7C86 16r7C87 16r7C8F 16r7C94			16r7C9E 16r7CA0 16r7CA6 16r7CB0 16r7CB6 16r7CB7 16r7CBA 16r7CBB			16r7CBC 16r7CBF 16r7CC4 16r7CC7 16r7CC8 16r7CC9 16r7CCD 16r7CCF			16r7CD3 16r7CD4 16r7CD5 16r7CD7 16r7CD9 16r7CDA 16r7CDD 16r7CE6			16r7CE9 16r7CEB 16r7CF5 16r7D03 16r7D07 16r7D08 16r7D09 16r7D0F			16r7D11 16r7D12 16r7D13 16r7D16 16r7D1D 16r7D1E 16r7D23 16r7D26			16r7D2A 16r7D2D 16r7D31 16r7D3C 16r7D3D 16r7D3E 16r7D40 16r7D41			16r7D47 16r7D48 16r7D4D 16r7D51 16r7D53 16r7D57 16r7D59 16r7D5A			16r7D5C 16r7D5D 16r7D65 16r7D67 16r7D6A 16r7D70 16r7D78 16r7D7A			16r7D7B 16r7D7F 16r7D81 16r7D82 16r7D83 16r7D85 16r7D86 16r7D88			16r7D8B 16r7D8C 16r7D8D 16r7D91 16r7D96 16r7D97 16r7D9D ).	self encode: new from: 16r5421 to: 16r547E withAll: 			#(      16r7D9E 16r7DA6 16r7DA7 16r7DAA 16r7DB3 16r7DB6 16r7DB7			16r7DB9 16r7DC2 16r7DC3 16r7DC4 16r7DC5 16r7DC6 16r7DCC 16r7DCD			16r7DCE 16r7DD7 16r7DD9 16r7E00 16r7DE2 16r7DE5 16r7DE6 16r7DEA			16r7DEB 16r7DED 16r7DF1 16r7DF5 16r7DF6 16r7DF9 16r7DFA 16r7E08			16r7E10 16r7E11 16r7E15 16r7E17 16r7E1C 16r7E1D 16r7E20 16r7E27			16r7E28 16r7E2C 16r7E2D 16r7E2F 16r7E33 16r7E36 16r7E3F 16r7E44			16r7E45 16r7E47 16r7E4E 16r7E50 16r7E52 16r7E58 16r7E5F 16r7E61			16r7E62 16r7E65 16r7E6B 16r7E6E 16r7E6F 16r7E73 16r7E78 16r7E7E			16r7E81 16r7E86 16r7E87 16r7E8A 16r7E8D 16r7E91 16r7E95 16r7E98			16r7E9A 16r7E9D 16r7E9E 16r7F3C 16r7F3B 16r7F3D 16r7F3E 16r7F3F			16r7F43 16r7F44 16r7F47 16r7F4F 16r7F52 16r7F53 16r7F5B 16r7F5C			16r7F5D 16r7F61 16r7F63 16r7F64 16r7F65 16r7F66 16r7F6D ).	self encode: new from: 16r5521 to: 16r557E withAll: 			#(      16r7F71 16r7F7D 16r7F7E 16r7F7F 16r7F80 16r7F8B 16r7F8D			16r7F8F 16r7F90 16r7F91 16r7F96 16r7F97 16r7F9C 16r7FA1 16r7FA2			16r7FA6 16r7FAA 16r7FAD 16r7FB4 16r7FBC 16r7FBF 16r7FC0 16r7FC3			16r7FC8 16r7FCE 16r7FCF 16r7FDB 16r7FDF 16r7FE3 16r7FE5 16r7FE8			16r7FEC 16r7FEE 16r7FEF 16r7FF2 16r7FFA 16r7FFD 16r7FFE 16r7FFF			16r8007 16r8008 16r800A 16r800D 16r800E 16r800F 16r8011 16r8013			16r8014 16r8016 16r801D 16r801E 16r801F 16r8020 16r8024 16r8026			16r802C 16r802E 16r8030 16r8034 16r8035 16r8037 16r8039 16r803A			16r803C 16r803E 16r8040 16r8044 16r8060 16r8064 16r8066 16r806D			16r8071 16r8075 16r8081 16r8088 16r808E 16r809C 16r809E 16r80A6			16r80A7 16r80AB 16r80B8 16r80B9 16r80C8 16r80CD 16r80CF 16r80D2			16r80D4 16r80D5 16r80D7 16r80D8 16r80E0 16r80ED 16r80EE ).	self encode: new from: 16r5621 to: 16r567E withAll: 			#(      16r80F0 16r80F2 16r80F3 16r80F6 16r80F9 16r80FA 16r80FE			16r8103 16r810B 16r8116 16r8117 16r8118 16r811C 16r811E 16r8120			16r8124 16r8127 16r812C 16r8130 16r8135 16r813A 16r813C 16r8145			16r8147 16r814A 16r814C 16r8152 16r8157 16r8160 16r8161 16r8167			16r8168 16r8169 16r816D 16r816F 16r8177 16r8181 16r8190 16r8184			16r8185 16r8186 16r818B 16r818E 16r8196 16r8198 16r819B 16r819E			16r81A2 16r81AE 16r81B2 16r81B4 16r81BB 16r81CB 16r81C3 16r81C5			16r81CA 16r81CE 16r81CF 16r81D5 16r81D7 16r81DB 16r81DD 16r81DE			16r81E1 16r81E4 16r81EB 16r81EC 16r81F0 16r81F1 16r81F2 16r81F5			16r81F6 16r81F8 16r81F9 16r81FD 16r81FF 16r8200 16r8203 16r820F			16r8213 16r8214 16r8219 16r821A 16r821D 16r8221 16r8222 16r8228			16r8232 16r8234 16r823A 16r8243 16r8244 16r8245 16r8246 ).	self encode: new from: 16r5721 to: 16r577E withAll: 			#(      16r824B 16r824E 16r824F 16r8251 16r8256 16r825C 16r8260			16r8263 16r8267 16r826D 16r8274 16r827B 16r827D 16r827F 16r8280			16r8281 16r8283 16r8284 16r8287 16r8289 16r828A 16r828E 16r8291			16r8294 16r8296 16r8298 16r829A 16r829B 16r82A0 16r82A1 16r82A3			16r82A4 16r82A7 16r82A8 16r82A9 16r82AA 16r82AE 16r82B0 16r82B2			16r82B4 16r82B7 16r82BA 16r82BC 16r82BE 16r82BF 16r82C6 16r82D0			16r82D5 16r82DA 16r82E0 16r82E2 16r82E4 16r82E8 16r82EA 16r82ED			16r82EF 16r82F6 16r82F7 16r82FD 16r82FE 16r8300 16r8301 16r8307			16r8308 16r830A 16r830B 16r8354 16r831B 16r831D 16r831E 16r831F			16r8321 16r8322 16r832C 16r832D 16r832E 16r8330 16r8333 16r8337			16r833A 16r833C 16r833D 16r8342 16r8343 16r8344 16r8347 16r834D			16r834E 16r8351 16r8355 16r8356 16r8357 16r8370 16r8378 ).	self encode: new from: 16r5821 to: 16r587E withAll: 			#(      16r837D 16r837F 16r8380 16r8382 16r8384 16r8386 16r838D			16r8392 16r8394 16r8395 16r8398 16r8399 16r839B 16r839C 16r839D			16r83A6 16r83A7 16r83A9 16r83AC 16r83BE 16r83BF 16r83C0 16r83C7			16r83C9 16r83CF 16r83D0 16r83D1 16r83D4 16r83DD 16r8353 16r83E8			16r83EA 16r83F6 16r83F8 16r83F9 16r83FC 16r8401 16r8406 16r840A			16r840F 16r8411 16r8415 16r8419 16r83AD 16r842F 16r8439 16r8445			16r8447 16r8448 16r844A 16r844D 16r844F 16r8451 16r8452 16r8456			16r8458 16r8459 16r845A 16r845C 16r8460 16r8464 16r8465 16r8467			16r846A 16r8470 16r8473 16r8474 16r8476 16r8478 16r847C 16r847D			16r8481 16r8485 16r8492 16r8493 16r8495 16r849E 16r84A6 16r84A8			16r84A9 16r84AA 16r84AF 16r84B1 16r84B4 16r84BA 16r84BD 16r84BE			16r84C0 16r84C2 16r84C7 16r84C8 16r84CC 16r84CF 16r84D3 ).	self encode: new from: 16r5921 to: 16r597E withAll: 			#(      16r84DC 16r84E7 16r84EA 16r84EF 16r84F0 16r84F1 16r84F2			16r84F7 16r8532 16r84FA 16r84FB 16r84FD 16r8502 16r8503 16r8507			16r850C 16r850E 16r8510 16r851C 16r851E 16r8522 16r8523 16r8524			16r8525 16r8527 16r852A 16r852B 16r852F 16r8533 16r8534 16r8536			16r853F 16r8546 16r854F 16r8550 16r8551 16r8552 16r8553 16r8556			16r8559 16r855C 16r855D 16r855E 16r855F 16r8560 16r8561 16r8562			16r8564 16r856B 16r856F 16r8579 16r857A 16r857B 16r857D 16r857F			16r8581 16r8585 16r8586 16r8589 16r858B 16r858C 16r858F 16r8593			16r8598 16r859D 16r859F 16r85A0 16r85A2 16r85A5 16r85A7 16r85B4			16r85B6 16r85B7 16r85B8 16r85BC 16r85BD 16r85BE 16r85BF 16r85C2			16r85C7 16r85CA 16r85CB 16r85CE 16r85AD 16r85D8 16r85DA 16r85DF			16r85E0 16r85E6 16r85E8 16r85ED 16r85F3 16r85F6 16r85FC ).	self encode: new from: 16r5A21 to: 16r5A7E withAll: 			#(      16r85FF 16r8600 16r8604 16r8605 16r860D 16r860E 16r8610			16r8611 16r8612 16r8618 16r8619 16r861B 16r861E 16r8621 16r8627			16r8629 16r8636 16r8638 16r863A 16r863C 16r863D 16r8640 16r8642			16r8646 16r8652 16r8653 16r8656 16r8657 16r8658 16r8659 16r865D			16r8660 16r8661 16r8662 16r8663 16r8664 16r8669 16r866C 16r866F			16r8675 16r8676 16r8677 16r867A 16r868D 16r8691 16r8696 16r8698			16r869A 16r869C 16r86A1 16r86A6 16r86A7 16r86A8 16r86AD 16r86B1			16r86B3 16r86B4 16r86B5 16r86B7 16r86B8 16r86B9 16r86BF 16r86C0			16r86C1 16r86C3 16r86C5 16r86D1 16r86D2 16r86D5 16r86D7 16r86DA			16r86DC 16r86E0 16r86E3 16r86E5 16r86E7 16r8688 16r86FA 16r86FC			16r86FD 16r8704 16r8705 16r8707 16r870B 16r870E 16r870F 16r8710			16r8713 16r8714 16r8719 16r871E 16r871F 16r8721 16r8723 ).	self encode: new from: 16r5B21 to: 16r5B7E withAll: 			#(      16r8728 16r872E 16r872F 16r8731 16r8732 16r8739 16r873A			16r873C 16r873D 16r873E 16r8740 16r8743 16r8745 16r874D 16r8758			16r875D 16r8761 16r8764 16r8765 16r876F 16r8771 16r8772 16r877B			16r8783 16r8784 16r8785 16r8786 16r8787 16r8788 16r8789 16r878B			16r878C 16r8790 16r8793 16r8795 16r8797 16r8798 16r8799 16r879E			16r87A0 16r87A3 16r87A7 16r87AC 16r87AD 16r87AE 16r87B1 16r87B5			16r87BE 16r87BF 16r87C1 16r87C8 16r87C9 16r87CA 16r87CE 16r87D5			16r87D6 16r87D9 16r87DA 16r87DC 16r87DF 16r87E2 16r87E3 16r87E4			16r87EA 16r87EB 16r87ED 16r87F1 16r87F3 16r87F8 16r87FA 16r87FF			16r8801 16r8803 16r8806 16r8809 16r880A 16r880B 16r8810 16r8819			16r8812 16r8813 16r8814 16r8818 16r881A 16r881B 16r881C 16r881E			16r881F 16r8828 16r882D 16r882E 16r8830 16r8832 16r8835 ).	self encode: new from: 16r5C21 to: 16r5C7E withAll: 			#(      16r883A 16r883C 16r8841 16r8843 16r8845 16r8848 16r8849			16r884A 16r884B 16r884E 16r8851 16r8855 16r8856 16r8858 16r885A			16r885C 16r885F 16r8860 16r8864 16r8869 16r8871 16r8879 16r887B			16r8880 16r8898 16r889A 16r889B 16r889C 16r889F 16r88A0 16r88A8			16r88AA 16r88BA 16r88BD 16r88BE 16r88C0 16r88CA 16r88CB 16r88CC			16r88CD 16r88CE 16r88D1 16r88D2 16r88D3 16r88DB 16r88DE 16r88E7			16r88EF 16r88F0 16r88F1 16r88F5 16r88F7 16r8901 16r8906 16r890D			16r890E 16r890F 16r8915 16r8916 16r8918 16r8919 16r891A 16r891C			16r8920 16r8926 16r8927 16r8928 16r8930 16r8931 16r8932 16r8935			16r8939 16r893A 16r893E 16r8940 16r8942 16r8945 16r8946 16r8949			16r894F 16r8952 16r8957 16r895A 16r895B 16r895C 16r8961 16r8962			16r8963 16r896B 16r896E 16r8970 16r8973 16r8975 16r897A ).	self encode: new from: 16r5D21 to: 16r5D7E withAll: 			#(      16r897B 16r897C 16r897D 16r8989 16r898D 16r8990 16r8994			16r8995 16r899B 16r899C 16r899F 16r89A0 16r89A5 16r89B0 16r89B4			16r89B5 16r89B6 16r89B7 16r89BC 16r89D4 16r89D5 16r89D6 16r89D7			16r89D8 16r89E5 16r89E9 16r89EB 16r89ED 16r89F1 16r89F3 16r89F6			16r89F9 16r89FD 16r89FF 16r8A04 16r8A05 16r8A07 16r8A0F 16r8A11			16r8A12 16r8A14 16r8A15 16r8A1E 16r8A20 16r8A22 16r8A24 16r8A26			16r8A2B 16r8A2C 16r8A2F 16r8A35 16r8A37 16r8A3D 16r8A3E 16r8A40			16r8A43 16r8A45 16r8A47 16r8A49 16r8A4D 16r8A4E 16r8A53 16r8A56			16r8A57 16r8A58 16r8A5C 16r8A5D 16r8A61 16r8A65 16r8A67 16r8A75			16r8A76 16r8A77 16r8A79 16r8A7A 16r8A7B 16r8A7E 16r8A7F 16r8A80			16r8A83 16r8A86 16r8A8B 16r8A8F 16r8A90 16r8A92 16r8A96 16r8A97			16r8A99 16r8A9F 16r8AA7 16r8AA9 16r8AAE 16r8AAF 16r8AB3 ).	self encode: new from: 16r5E21 to: 16r5E7E withAll: 			#(      16r8AB6 16r8AB7 16r8ABB 16r8ABE 16r8AC3 16r8AC6 16r8AC8			16r8AC9 16r8ACA 16r8AD1 16r8AD3 16r8AD4 16r8AD5 16r8AD7 16r8ADD			16r8ADF 16r8AEC 16r8AF0 16r8AF4 16r8AF5 16r8AF6 16r8AFC 16r8AFF			16r8B05 16r8B06 16r8B0B 16r8B11 16r8B1C 16r8B1E 16r8B1F 16r8B0A			16r8B2D 16r8B30 16r8B37 16r8B3C 16r8B42 16r8B43 16r8B44 16r8B45			16r8B46 16r8B48 16r8B52 16r8B53 16r8B54 16r8B59 16r8B4D 16r8B5E			16r8B63 16r8B6D 16r8B76 16r8B78 16r8B79 16r8B7C 16r8B7E 16r8B81			16r8B84 16r8B85 16r8B8B 16r8B8D 16r8B8F 16r8B94 16r8B95 16r8B9C			16r8B9E 16r8B9F 16r8C38 16r8C39 16r8C3D 16r8C3E 16r8C45 16r8C47			16r8C49 16r8C4B 16r8C4F 16r8C51 16r8C53 16r8C54 16r8C57 16r8C58			16r8C5B 16r8C5D 16r8C59 16r8C63 16r8C64 16r8C66 16r8C68 16r8C69			16r8C6D 16r8C73 16r8C75 16r8C76 16r8C7B 16r8C7E 16r8C86 ).	self encode: new from: 16r5F21 to: 16r5F7E withAll: 			#(      16r8C87 16r8C8B 16r8C90 16r8C92 16r8C93 16r8C99 16r8C9B			16r8C9C 16r8CA4 16r8CB9 16r8CBA 16r8CC5 16r8CC6 16r8CC9 16r8CCB			16r8CCF 16r8CD6 16r8CD5 16r8CD9 16r8CDD 16r8CE1 16r8CE8 16r8CEC			16r8CEF 16r8CF0 16r8CF2 16r8CF5 16r8CF7 16r8CF8 16r8CFE 16r8CFF			16r8D01 16r8D03 16r8D09 16r8D12 16r8D17 16r8D1B 16r8D65 16r8D69			16r8D6C 16r8D6E 16r8D7F 16r8D82 16r8D84 16r8D88 16r8D8D 16r8D90			16r8D91 16r8D95 16r8D9E 16r8D9F 16r8DA0 16r8DA6 16r8DAB 16r8DAC			16r8DAF 16r8DB2 16r8DB5 16r8DB7 16r8DB9 16r8DBB 16r8DC0 16r8DC5			16r8DC6 16r8DC7 16r8DC8 16r8DCA 16r8DCE 16r8DD1 16r8DD4 16r8DD5			16r8DD7 16r8DD9 16r8DE4 16r8DE5 16r8DE7 16r8DEC 16r8DF0 16r8DBC			16r8DF1 16r8DF2 16r8DF4 16r8DFD 16r8E01 16r8E04 16r8E05 16r8E06			16r8E0B 16r8E11 16r8E14 16r8E16 16r8E20 16r8E21 16r8E22 ).	self encode: new from: 16r6021 to: 16r607E withAll: 			#(      16r8E23 16r8E26 16r8E27 16r8E31 16r8E33 16r8E36 16r8E37			16r8E38 16r8E39 16r8E3D 16r8E40 16r8E41 16r8E4B 16r8E4D 16r8E4E			16r8E4F 16r8E54 16r8E5B 16r8E5C 16r8E5D 16r8E5E 16r8E61 16r8E62			16r8E69 16r8E6C 16r8E6D 16r8E6F 16r8E70 16r8E71 16r8E79 16r8E7A			16r8E7B 16r8E82 16r8E83 16r8E89 16r8E90 16r8E92 16r8E95 16r8E9A			16r8E9B 16r8E9D 16r8E9E 16r8EA2 16r8EA7 16r8EA9 16r8EAD 16r8EAE			16r8EB3 16r8EB5 16r8EBA 16r8EBB 16r8EC0 16r8EC1 16r8EC3 16r8EC4			16r8EC7 16r8ECF 16r8ED1 16r8ED4 16r8EDC 16r8EE8 16r8EEE 16r8EF0			16r8EF1 16r8EF7 16r8EF9 16r8EFA 16r8EED 16r8F00 16r8F02 16r8F07			16r8F08 16r8F0F 16r8F10 16r8F16 16r8F17 16r8F18 16r8F1E 16r8F20			16r8F21 16r8F23 16r8F25 16r8F27 16r8F28 16r8F2C 16r8F2D 16r8F2E			16r8F34 16r8F35 16r8F36 16r8F37 16r8F3A 16r8F40 16r8F41 ).	self encode: new from: 16r6121 to: 16r617E withAll: 			#(      16r8F43 16r8F47 16r8F4F 16r8F51 16r8F52 16r8F53 16r8F54			16r8F55 16r8F58 16r8F5D 16r8F5E 16r8F65 16r8F9D 16r8FA0 16r8FA1			16r8FA4 16r8FA5 16r8FA6 16r8FB5 16r8FB6 16r8FB8 16r8FBE 16r8FC0			16r8FC1 16r8FC6 16r8FCA 16r8FCB 16r8FCD 16r8FD0 16r8FD2 16r8FD3			16r8FD5 16r8FE0 16r8FE3 16r8FE4 16r8FE8 16r8FEE 16r8FF1 16r8FF5			16r8FF6 16r8FFB 16r8FFE 16r9002 16r9004 16r9008 16r900C 16r9018			16r901B 16r9028 16r9029 16r902F 16r902A 16r902C 16r902D 16r9033			16r9034 16r9037 16r903F 16r9043 16r9044 16r904C 16r905B 16r905D			16r9062 16r9066 16r9067 16r906C 16r9070 16r9074 16r9079 16r9085			16r9088 16r908B 16r908C 16r908E 16r9090 16r9095 16r9097 16r9098			16r9099 16r909B 16r90A0 16r90A1 16r90A2 16r90A5 16r90B0 16r90B2			16r90B3 16r90B4 16r90B6 16r90BD 16r90CC 16r90BE 16r90C3 ).	self encode: new from: 16r6221 to: 16r627E withAll: 			#(      16r90C4 16r90C5 16r90C7 16r90C8 16r90D5 16r90D7 16r90D8			16r90D9 16r90DC 16r90DD 16r90DF 16r90E5 16r90D2 16r90F6 16r90EB			16r90EF 16r90F0 16r90F4 16r90FE 16r90FF 16r9100 16r9104 16r9105			16r9106 16r9108 16r910D 16r9110 16r9114 16r9116 16r9117 16r9118			16r911A 16r911C 16r911E 16r9120 16r9125 16r9122 16r9123 16r9127			16r9129 16r912E 16r912F 16r9131 16r9134 16r9136 16r9137 16r9139			16r913A 16r913C 16r913D 16r9143 16r9147 16r9148 16r914F 16r9153			16r9157 16r9159 16r915A 16r915B 16r9161 16r9164 16r9167 16r916D			16r9174 16r9179 16r917A 16r917B 16r9181 16r9183 16r9185 16r9186			16r918A 16r918E 16r9191 16r9193 16r9194 16r9195 16r9198 16r919E			16r91A1 16r91A6 16r91A8 16r91AC 16r91AD 16r91AE 16r91B0 16r91B1			16r91B2 16r91B3 16r91B6 16r91BB 16r91BC 16r91BD 16r91BF ).	self encode: new from: 16r6321 to: 16r637E withAll: 			#(      16r91C2 16r91C3 16r91C5 16r91D3 16r91D4 16r91D7 16r91D9			16r91DA 16r91DE 16r91E4 16r91E5 16r91E9 16r91EA 16r91EC 16r91ED			16r91EE 16r91EF 16r91F0 16r91F1 16r91F7 16r91F9 16r91FB 16r91FD			16r9200 16r9201 16r9204 16r9205 16r9206 16r9207 16r9209 16r920A			16r920C 16r9210 16r9212 16r9213 16r9216 16r9218 16r921C 16r921D			16r9223 16r9224 16r9225 16r9226 16r9228 16r922E 16r922F 16r9230			16r9233 16r9235 16r9236 16r9238 16r9239 16r923A 16r923C 16r923E			16r9240 16r9242 16r9243 16r9246 16r9247 16r924A 16r924D 16r924E			16r924F 16r9251 16r9258 16r9259 16r925C 16r925D 16r9260 16r9261			16r9265 16r9267 16r9268 16r9269 16r926E 16r926F 16r9270 16r9275			16r9276 16r9277 16r9278 16r9279 16r927B 16r927C 16r927D 16r927F			16r9288 16r9289 16r928A 16r928D 16r928E 16r9292 16r9297 ).	self encode: new from: 16r6421 to: 16r647E withAll: 			#(      16r9299 16r929F 16r92A0 16r92A4 16r92A5 16r92A7 16r92A8			16r92AB 16r92AF 16r92B2 16r92B6 16r92B8 16r92BA 16r92BB 16r92BC			16r92BD 16r92BF 16r92C0 16r92C1 16r92C2 16r92C3 16r92C5 16r92C6			16r92C7 16r92C8 16r92CB 16r92CC 16r92CD 16r92CE 16r92D0 16r92D3			16r92D5 16r92D7 16r92D8 16r92D9 16r92DC 16r92DD 16r92DF 16r92E0			16r92E1 16r92E3 16r92E5 16r92E7 16r92E8 16r92EC 16r92EE 16r92F0			16r92F9 16r92FB 16r92FF 16r9300 16r9302 16r9308 16r930D 16r9311			16r9314 16r9315 16r931C 16r931D 16r931E 16r931F 16r9321 16r9324			16r9325 16r9327 16r9329 16r932A 16r9333 16r9334 16r9336 16r9337			16r9347 16r9348 16r9349 16r9350 16r9351 16r9352 16r9355 16r9357			16r9358 16r935A 16r935E 16r9364 16r9365 16r9367 16r9369 16r936A			16r936D 16r936F 16r9370 16r9371 16r9373 16r9374 16r9376 ).	self encode: new from: 16r6521 to: 16r657E withAll: 			#(      16r937A 16r937D 16r937F 16r9380 16r9381 16r9382 16r9388			16r938A 16r938B 16r938D 16r938F 16r9392 16r9395 16r9398 16r939B			16r939E 16r93A1 16r93A3 16r93A4 16r93A6 16r93A8 16r93AB 16r93B4			16r93B5 16r93B6 16r93BA 16r93A9 16r93C1 16r93C4 16r93C5 16r93C6			16r93C7 16r93C9 16r93CA 16r93CB 16r93CC 16r93CD 16r93D3 16r93D9			16r93DC 16r93DE 16r93DF 16r93E2 16r93E6 16r93E7 16r93F9 16r93F7			16r93F8 16r93FA 16r93FB 16r93FD 16r9401 16r9402 16r9404 16r9408			16r9409 16r940D 16r940E 16r940F 16r9415 16r9416 16r9417 16r941F			16r942E 16r942F 16r9431 16r9432 16r9433 16r9434 16r943B 16r943F			16r943D 16r9443 16r9445 16r9448 16r944A 16r944C 16r9455 16r9459			16r945C 16r945F 16r9461 16r9463 16r9468 16r946B 16r946D 16r946E			16r946F 16r9471 16r9472 16r9484 16r9483 16r9578 16r9579 ).	self encode: new from: 16r6621 to: 16r667E withAll: 			#(      16r957E 16r9584 16r9588 16r958C 16r958D 16r958E 16r959D			16r959E 16r959F 16r95A1 16r95A6 16r95A9 16r95AB 16r95AC 16r95B4			16r95B6 16r95BA 16r95BD 16r95BF 16r95C6 16r95C8 16r95C9 16r95CB			16r95D0 16r95D1 16r95D2 16r95D3 16r95D9 16r95DA 16r95DD 16r95DE			16r95DF 16r95E0 16r95E4 16r95E6 16r961D 16r961E 16r9622 16r9624			16r9625 16r9626 16r962C 16r9631 16r9633 16r9637 16r9638 16r9639			16r963A 16r963C 16r963D 16r9641 16r9652 16r9654 16r9656 16r9657			16r9658 16r9661 16r966E 16r9674 16r967B 16r967C 16r967E 16r967F			16r9681 16r9682 16r9683 16r9684 16r9689 16r9691 16r9696 16r969A			16r969D 16r969F 16r96A4 16r96A5 16r96A6 16r96A9 16r96AE 16r96AF			16r96B3 16r96BA 16r96CA 16r96D2 16r5DB2 16r96D8 16r96DA 16r96DD			16r96DE 16r96DF 16r96E9 16r96EF 16r96F1 16r96FA 16r9702 ).	self encode: new from: 16r6721 to: 16r677E withAll: 			#(      16r9703 16r9705 16r9709 16r971A 16r971B 16r971D 16r9721			16r9722 16r9723 16r9728 16r9731 16r9733 16r9741 16r9743 16r974A			16r974E 16r974F 16r9755 16r9757 16r9758 16r975A 16r975B 16r9763			16r9767 16r976A 16r976E 16r9773 16r9776 16r9777 16r9778 16r977B			16r977D 16r977F 16r9780 16r9789 16r9795 16r9796 16r9797 16r9799			16r979A 16r979E 16r979F 16r97A2 16r97AC 16r97AE 16r97B1 16r97B2			16r97B5 16r97B6 16r97B8 16r97B9 16r97BA 16r97BC 16r97BE 16r97BF			16r97C1 16r97C4 16r97C5 16r97C7 16r97C9 16r97CA 16r97CC 16r97CD			16r97CE 16r97D0 16r97D1 16r97D4 16r97D7 16r97D8 16r97D9 16r97DD			16r97DE 16r97E0 16r97DB 16r97E1 16r97E4 16r97EF 16r97F1 16r97F4			16r97F7 16r97F8 16r97FA 16r9807 16r980A 16r9819 16r980D 16r980E			16r9814 16r9816 16r981C 16r981E 16r9820 16r9823 16r9826 ).	self encode: new from: 16r6821 to: 16r687E withAll: 			#(      16r982B 16r982E 16r982F 16r9830 16r9832 16r9833 16r9835			16r9825 16r983E 16r9844 16r9847 16r984A 16r9851 16r9852 16r9853			16r9856 16r9857 16r9859 16r985A 16r9862 16r9863 16r9865 16r9866			16r986A 16r986C 16r98AB 16r98AD 16r98AE 16r98B0 16r98B4 16r98B7			16r98B8 16r98BA 16r98BB 16r98BF 16r98C2 16r98C5 16r98C8 16r98CC			16r98E1 16r98E3 16r98E5 16r98E6 16r98E7 16r98EA 16r98F3 16r98F6			16r9902 16r9907 16r9908 16r9911 16r9915 16r9916 16r9917 16r991A			16r991B 16r991C 16r991F 16r9922 16r9926 16r9927 16r992B 16r9931			16r9932 16r9933 16r9934 16r9935 16r9939 16r993A 16r993B 16r993C			16r9940 16r9941 16r9946 16r9947 16r9948 16r994D 16r994E 16r9954			16r9958 16r9959 16r995B 16r995C 16r995E 16r995F 16r9960 16r999B			16r999D 16r999F 16r99A6 16r99B0 16r99B1 16r99B2 16r99B5 ).	self encode: new from: 16r6921 to: 16r697E withAll: 			#(      16r99B9 16r99BA 16r99BD 16r99BF 16r99C3 16r99C9 16r99D3			16r99D4 16r99D9 16r99DA 16r99DC 16r99DE 16r99E7 16r99EA 16r99EB			16r99EC 16r99F0 16r99F4 16r99F5 16r99F9 16r99FD 16r99FE 16r9A02			16r9A03 16r9A04 16r9A0B 16r9A0C 16r9A10 16r9A11 16r9A16 16r9A1E			16r9A20 16r9A22 16r9A23 16r9A24 16r9A27 16r9A2D 16r9A2E 16r9A33			16r9A35 16r9A36 16r9A38 16r9A47 16r9A41 16r9A44 16r9A4A 16r9A4B			16r9A4C 16r9A4E 16r9A51 16r9A54 16r9A56 16r9A5D 16r9AAA 16r9AAC			16r9AAE 16r9AAF 16r9AB2 16r9AB4 16r9AB5 16r9AB6 16r9AB9 16r9ABB			16r9ABE 16r9ABF 16r9AC1 16r9AC3 16r9AC6 16r9AC8 16r9ACE 16r9AD0			16r9AD2 16r9AD5 16r9AD6 16r9AD7 16r9ADB 16r9ADC 16r9AE0 16r9AE4			16r9AE5 16r9AE7 16r9AE9 16r9AEC 16r9AF2 16r9AF3 16r9AF5 16r9AF9			16r9AFA 16r9AFD 16r9AFF 16r9B00 16r9B01 16r9B02 16r9B03 ).	self encode: new from: 16r6A21 to: 16r6A7E withAll: 			#(      16r9B04 16r9B05 16r9B08 16r9B09 16r9B0B 16r9B0C 16r9B0D			16r9B0E 16r9B10 16r9B12 16r9B16 16r9B19 16r9B1B 16r9B1C 16r9B20			16r9B26 16r9B2B 16r9B2D 16r9B33 16r9B34 16r9B35 16r9B37 16r9B39			16r9B3A 16r9B3D 16r9B48 16r9B4B 16r9B4C 16r9B55 16r9B56 16r9B57			16r9B5B 16r9B5E 16r9B61 16r9B63 16r9B65 16r9B66 16r9B68 16r9B6A			16r9B6B 16r9B6C 16r9B6D 16r9B6E 16r9B73 16r9B75 16r9B77 16r9B78			16r9B79 16r9B7F 16r9B80 16r9B84 16r9B85 16r9B86 16r9B87 16r9B89			16r9B8A 16r9B8B 16r9B8D 16r9B8F 16r9B90 16r9B94 16r9B9A 16r9B9D			16r9B9E 16r9BA6 16r9BA7 16r9BA9 16r9BAC 16r9BB0 16r9BB1 16r9BB2			16r9BB7 16r9BB8 16r9BBB 16r9BBC 16r9BBE 16r9BBF 16r9BC1 16r9BC7			16r9BC8 16r9BCE 16r9BD0 16r9BD7 16r9BD8 16r9BDD 16r9BDF 16r9BE5			16r9BE7 16r9BEA 16r9BEB 16r9BEF 16r9BF3 16r9BF7 16r9BF8 ).	self encode: new from: 16r6B21 to: 16r6B7E withAll: 			#(      16r9BF9 16r9BFA 16r9BFD 16r9BFF 16r9C00 16r9C02 16r9C0B			16r9C0F 16r9C11 16r9C16 16r9C18 16r9C19 16r9C1A 16r9C1C 16r9C1E			16r9C22 16r9C23 16r9C26 16r9C27 16r9C28 16r9C29 16r9C2A 16r9C31			16r9C35 16r9C36 16r9C37 16r9C3D 16r9C41 16r9C43 16r9C44 16r9C45			16r9C49 16r9C4A 16r9C4E 16r9C4F 16r9C50 16r9C53 16r9C54 16r9C56			16r9C58 16r9C5B 16r9C5D 16r9C5E 16r9C5F 16r9C63 16r9C69 16r9C6A			16r9C5C 16r9C6B 16r9C68 16r9C6E 16r9C70 16r9C72 16r9C75 16r9C77			16r9C7B 16r9CE6 16r9CF2 16r9CF7 16r9CF9 16r9D0B 16r9D02 16r9D11			16r9D17 16r9D18 16r9D1C 16r9D1D 16r9D1E 16r9D2F 16r9D30 16r9D32			16r9D33 16r9D34 16r9D3A 16r9D3C 16r9D45 16r9D3D 16r9D42 16r9D43			16r9D47 16r9D4A 16r9D53 16r9D54 16r9D5F 16r9D63 16r9D62 16r9D65			16r9D69 16r9D6A 16r9D6B 16r9D70 16r9D76 16r9D77 16r9D7B ).	self encode: new from: 16r6C21 to: 16r6C7E withAll: 			#(      16r9D7C 16r9D7E 16r9D83 16r9D84 16r9D86 16r9D8A 16r9D8D			16r9D8E 16r9D92 16r9D93 16r9D95 16r9D96 16r9D97 16r9D98 16r9DA1			16r9DAA 16r9DAC 16r9DAE 16r9DB1 16r9DB5 16r9DB9 16r9DBC 16r9DBF			16r9DC3 16r9DC7 16r9DC9 16r9DCA 16r9DD4 16r9DD5 16r9DD6 16r9DD7			16r9DDA 16r9DDE 16r9DDF 16r9DE0 16r9DE5 16r9DE7 16r9DE9 16r9DEB			16r9DEE 16r9DF0 16r9DF3 16r9DF4 16r9DFE 16r9E0A 16r9E02 16r9E07			16r9E0E 16r9E10 16r9E11 16r9E12 16r9E15 16r9E16 16r9E19 16r9E1C			16r9E1D 16r9E7A 16r9E7B 16r9E7C 16r9E80 16r9E82 16r9E83 16r9E84			16r9E85 16r9E87 16r9E8E 16r9E8F 16r9E96 16r9E98 16r9E9B 16r9E9E			16r9EA4 16r9EA8 16r9EAC 16r9EAE 16r9EAF 16r9EB0 16r9EB3 16r9EB4			16r9EB5 16r9EC6 16r9EC8 16r9ECB 16r9ED5 16r9EDF 16r9EE4 16r9EE7			16r9EEC 16r9EED 16r9EEE 16r9EF0 16r9EF1 16r9EF2 16r9EF5 ).	self encode: new from: 16r6D21 to: 16r6D63 withAll: 			#(      16r9EF8 16r9EFF 16r9F02 16r9F03 16r9F09 16r9F0F 16r9F10			16r9F11 16r9F12 16r9F14 16r9F16 16r9F17 16r9F19 16r9F1A 16r9F1B			16r9F1F 16r9F22 16r9F26 16r9F2A 16r9F2B 16r9F2F 16r9F31 16r9F32			16r9F34 16r9F37 16r9F39 16r9F3A 16r9F3C 16r9F3D 16r9F3F 16r9F41			16r9F43 16r9F44 16r9F45 16r9F46 16r9F47 16r9F53 16r9F55 16r9F56			16r9F57 16r9F58 16r9F5A 16r9F5D 16r9F5E 16r9F68 16r9F69 16r9F6D			16r9F6E 16r9F6F 16r9F70 16r9F71 16r9F73 16r9F75 16r9F7A 16r9F7D			16r9F8F 16r9F90 16r9F91 16r9F92 16r9F94 16r9F96 16r9F97 16r9F9E			16r9FA1 16r9FA2 16r9FA3 16r9FA5 ).	^new</body><body package="JapaneseEncodings">createMSCP932	| literal new |	literal := self mscp932.	new := LargeCharacterEncoder new.	literal do:		[:array | | start stop sub |		start := array at: 1.		stop := array at: 2.		sub := array at: 3.		start to: stop do:			[:sjis | | char |			char := (sub at: sjis - start + 1) asCharacter.			(new encode: char) = IllegalCharacterValue				ifTrue: [new encode: char as: sjis]				ifFalse: [new unify: char as: sjis]]].	new name: #'ms_cp_932'.	^new</body><body package="JapaneseEncodings">encode: new from: start to: stop withAll: codes	start to: stop do:		[:i |		new encode: (Character value: (codes at: i+1-start)) as: i]</body></methods><methods><class-id>Core.CharacterEncoder class</class-id> <category>class initialization</category><body package="JapaneseEncodings">installJapan	"CharacterEncoder installJapan."	| jis201Encoder jis208Encoder jis212Encoder mscp932Encoder |	jis201Encoder := self createJIS0201.	jis208Encoder := self createJIS0208.	jis212Encoder := self createJIS0212.	mscp932Encoder := self createMSCP932.	(Encoders at: #unix)		at: #'jisx0201.1976-0' put: jis201Encoder;		at: #'jisx0208.1983-0' put: jis208Encoder;		at: #'jisx0212.1990-0' put: jis212Encoder;		at: #ms_cp_932 put: mscp932Encoder.	"Old mac support - removed"	"	(Encoders at: #mac)		at: #'jisx0201.1976-0' put: jis201Encoder;		at: #'jisx0208.1983-0' put: jis208Encoder;		at: #'jisx0212.1990-0' put: jis212Encoder;		at: #ms_cp_932 put: mscp932Encoder.	"	(Encoders at: #win32)		at: #'jisx0201.1976-0' put: jis201Encoder;		at: #'jisx0208.1983-0' put: jis208Encoder;		at: #'jisx0212.1990-0' put: jis212Encoder;		at: #ms_cp_932 put: mscp932Encoder.	"OS2 support discontinued."	"	(Encoders at: #os2)		at: #'jisx0201.1976-0' put: jis201Encoder;		at: #'jisx0208.1983-0' put: jis208Encoder;		at: #'jisx0212.1990-0' put: jis212Encoder;		at: #ms_cp_932 put: mscp932Encoder.	"</body></methods><methods><class-id>Core.CharacterEncoder class</class-id> <category>private-instance creation</category><body package="JapaneseEncodings">jis0208Literal	^#(nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil	#(12288 12289 12290 65292 65294 12539 65306 65307 65311 65281 12443 12444 180 65344 168 65342 65507 65343 12541 12542 12445 12446 12291 20189 12293 12294 12295 12540 8213 8208 65295 65340 12316 8214 65372 8230 8229 8216 8217 8220 8221 65288 65289 12308 12309 65339 65341 65371 65373 12296 12297 12298 12299 12300 12301 12302 12303 12304 12305 65291 8722 177 215 247 65309 8800 65308 65310 8806 8807 8734 8756 9794 9792 176 8242 8243 8451 65509 65284 162 163 65285 65283 65286 65290 65312 167 9734 9733 9675 9679 9678 9671 )	#(9670 9633 9632 9651 9650 9661 9660 8251 12306 8594 8592 8593 8595 12307 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 8712 8715 8838 8839 8834 8835 8746 8745 65535 65535 65535 65535 65535 65535 65535 65535 8743 8744 172 8658 8660 8704 8707 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 8736 8869 8978 8706 8711 8801 8786 8810 8811 8730 8765 8733 8757 8747 8748 65535 65535 65535 65535 65535 65535 65535 8491 8240 9839 9837 9834 8224 8225 182 65535 65535 65535 65535 9711 )	#(65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65296 65297 65298 65299 65300 65301 65302 65303 65304 65305 65535 65535 65535 65535 65535 65535 65535 65313 65314 65315 65316 65317 65318 65319 65320 65321 65322 65323 65324 65325 65326 65327 65328 65329 65330 65331 65332 65333 65334 65335 65336 65337 65338 65535 65535 65535 65535 65535 65535 65345 65346 65347 65348 65349 65350 65351 65352 65353 65354 65355 65356 65357 65358 65359 65360 65361 65362 65363 65364 65365 65366 65367 65368 65369 65370 65535 65535 65535 65535 )	#(12353 12354 12355 12356 12357 12358 12359 12360 12361 12362 12363 12364 12365 12366 12367 12368 12369 12370 12371 12372 12373 12374 12375 12376 12377 12378 12379 12380 12381 12382 12383 12384 12385 12386 12387 12388 12389 12390 12391 12392 12393 12394 12395 12396 12397 12398 12399 12400 12401 12402 12403 12404 12405 12406 12407 12408 12409 12410 12411 12412 12413 12414 12415 12416 12417 12418 12419 12420 12421 12422 12423 12424 12425 12426 12427 12428 12429 12430 12431 12432 12433 12434 12435 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 )	#(12449 12450 12451 12452 12453 12454 12455 12456 12457 12458 12459 12460 12461 12462 12463 12464 12465 12466 12467 12468 12469 12470 12471 12472 12473 12474 12475 12476 12477 12478 12479 12480 12481 12482 12483 12484 12485 12486 12487 12488 12489 12490 12491 12492 12493 12494 12495 12496 12497 12498 12499 12500 12501 12502 12503 12504 12505 12506 12507 12508 12509 12510 12511 12512 12513 12514 12515 12516 12517 12518 12519 12520 12521 12522 12523 12524 12525 12526 12527 12528 12529 12530 12531 12532 12533 12534 65535 65535 65535 65535 65535 65535 65535 65535 )	#(913 914 915 916 917 918 919 920 921 922 923 924 925 926 927 928 929 931 932 933 934 935 936 937 65535 65535 65535 65535 65535 65535 65535 65535 945 946 947 948 949 950 951 952 953 954 955 956 957 958 959 960 961 963 964 965 966 967 968 969 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 )	#(1040 1041 1042 1043 1044 1045 1025 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 1072 1073 1074 1075 1076 1077 1105 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 )	#(9472 9474 9484 9488 9496 9492 9500 9516 9508 9524 9532 9473 9475 9487 9491 9499 9495 9507 9523 9515 9531 9547 9504 9519 9512 9527 9535 9501 9520 9509 9528 9538 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 )	nil nil nil nil nil nil nil	#(20124 21782 23043 38463 21696 24859 25384 23030 36898 33909 33564 31312 24746 25569 28197 26093 33894 33446 39925 26771 22311 26017 25201 23451 22992 34427 39156 32098 32190 39822 25110 31903 34999 23433 24245 25353 26263 26696 38343 38797 26447 20197 20234 20301 20381 20553 22258 22839 22996 23041 23561 24799 24847 24944 26131 26885 28858 30031 30064 31227 32173 32239 32963 33806 34915 35586 36949 36986 21307 20117 20133 22495 32946 37057 30959 19968 22769 28322 36920 31282 33576 33419 39983 20801 21360 21693 21729 22240 23035 24341 39154 28139 32996 34093 )	#(38498 38512 38560 38907 21515 21491 23431 28879 32701 36802 38632 21359 40284 31418 19985 30867 33276 28198 22040 21764 27421 34074 39995 23013 21417 28006 29916 38287 22082 20113 36939 38642 33615 39180 21473 21942 23344 24433 26144 26355 26628 27704 27891 27945 29787 30408 31310 38964 33521 34907 35424 37613 28082 30123 30410 39365 24742 35585 36234 38322 27022 21421 20870 22290 22576 22852 23476 24310 24616 25513 25588 27839 28436 28814 28948 29017 29141 29503 32257 33398 33489 34199 36960 37467 40219 22633 26044 27738 29989 20985 22830 22885 24448 24540 )	#(25276 26106 27178 27431 27572 29579 32705 35158 40236 40206 40644 23713 27798 33659 20740 23627 25014 33222 26742 29281 20057 20474 21368 24681 28201 31311 38899 19979 21270 20206 20309 20285 20385 20339 21152 21487 22025 22799 23233 23478 23521 31185 26247 26524 26550 27468 27827 28779 29634 31117 31166 31292 31623 33457 33499 33540 33655 33775 33747 34662 35506 22057 36008 36838 36942 38686 34442 20420 23784 25105 29273 30011 33253 33469 34558 36032 38597 39187 39381 20171 20250 35299 22238 22602 22730 24315 24555 24618 24724 24674 25040 25106 25296 25913 )	#(39745 26214 26800 28023 28784 30028 30342 32117 33445 34809 38283 38542 35997 20977 21182 22806 21683 23475 23830 24936 27010 28079 30861 33995 34903 35442 37799 39608 28012 39336 34521 22435 26623 34510 37390 21123 22151 21508 24275 25313 25785 26684 26680 27579 29554 30906 31339 35226 35282 36203 36611 37101 38307 38548 38761 23398 23731 27005 38989 38990 25499 31520 27179 27263 26806 39949 28511 21106 21917 24688 25324 27963 28167 28369 33883 35088 36676 19988 39993 21494 26907 27194 38788 26666 20828 31427 33970 37340 37772 22107 40232 26658 33541 33841 )	#(31909 21000 33477 29926 20094 20355 20896 23506 21002 21208 21223 24059 21914 22570 23014 23436 23448 23515 24178 24185 24739 24863 24931 25022 25563 25954 26577 26707 26874 27454 27475 27735 28450 28567 28485 29872 29976 30435 30475 31487 31649 31777 32233 32566 32752 32925 33382 33694 35251 35532 36011 36996 37969 38291 38289 38306 38501 38867 39208 33304 20024 21547 23736 24012 29609 30284 30524 23721 32747 36107 38593 38929 38996 39000 20225 20238 21361 21916 22120 22522 22855 23305 23492 23696 24076 24190 24524 25582 26426 26071 26082 26399 26827 26820 )	#(27231 24112 27589 27671 27773 30079 31048 23395 31232 32000 24509 35215 35352 36020 36215 36556 36637 39138 39438 39740 20096 20605 20736 22931 23452 25135 25216 25836 27450 29344 30097 31047 32681 34811 35516 35696 25516 33738 38816 21513 21507 21931 26708 27224 35440 30759 26485 40653 21364 23458 33050 34384 36870 19992 20037 20167 20241 21450 21560 23470 24339 24613 25937 26429 27714 27762 27875 28792 29699 31350 31406 31496 32026 31998 32102 26087 29275 21435 23621 24040 25298 25312 25369 28192 34394 35377 36317 37624 28417 31142 39770 20136 20139 20140 )	#(20379 20384 20689 20807 31478 20849 20982 21332 21281 21375 21483 21932 22659 23777 24375 24394 24623 24656 24685 25375 25945 27211 27841 29378 29421 30703 33016 33029 33288 34126 37111 37857 38911 39255 39514 20208 20957 23597 26241 26989 23616 26354 26997 29577 26704 31873 20677 21220 22343 24062 37670 26020 27427 27453 29748 31105 31165 31563 32202 33465 33740 34943 35167 35641 36817 37329 21535 37504 20061 20534 21477 21306 29399 29590 30697 33510 36527 39366 39368 39378 20855 24858 34398 21936 31354 20598 23507 36935 38533 20018 27355 37351 23633 23624 )	#(25496 31391 27795 38772 36705 31402 29066 38536 31874 26647 32368 26705 37740 21234 21531 34219 35347 32676 36557 37089 21350 34952 31041 20418 20670 21009 20804 21843 22317 29674 22411 22865 24418 24452 24693 24950 24935 25001 25522 25658 25964 26223 26690 28179 30054 31293 31995 32076 32153 32331 32619 33550 33610 34509 35336 35427 35686 36605 38938 40335 33464 36814 39912 21127 25119 25731 28608 38553 26689 20625 27424 27770 28500 31348 32080 34880 35363 26376 20214 20537 20518 20581 20860 21048 21091 21927 22287 22533 23244 24314 25010 25080 25331 25458 )	#(26908 27177 29309 29356 29486 30740 30831 32121 30476 32937 35211 35609 36066 36562 36963 37749 38522 38997 39443 40568 20803 21407 21427 24187 24358 28187 28304 29572 29694 32067 33335 35328 35578 38480 20046 20491 21476 21628 22266 22993 23396 24049 24235 24359 25144 25925 26543 28246 29392 31946 34996 32929 32993 33776 34382 35463 36328 37431 38599 39015 40723 20116 20114 20237 21320 21577 21566 23087 24460 24481 24735 26791 27278 29786 30849 35486 35492 35703 37264 20062 39881 20132 20348 20399 20505 20502 20809 20844 21151 21177 21246 21402 21475 21521 )	#(21518 21897 22353 22434 22909 23380 23389 23439 24037 24039 24055 24184 24195 24218 24247 24344 24658 24908 25239 25304 25511 25915 26114 26179 26356 26477 26657 26775 27083 27743 27946 28009 28207 28317 30002 30343 30828 31295 31968 32005 32024 32094 32177 32789 32771 32943 32945 33108 33167 33322 33618 34892 34913 35611 36002 36092 37066 37237 37489 30783 37628 38308 38477 38917 39321 39640 40251 21083 21163 21495 21512 22741 25335 28640 35946 36703 40633 20811 21051 21578 22269 31296 37239 40288 40658 29508 28425 33136 29969 24573 24794 39592 29403 36796 )	#(27492 38915 20170 22256 22372 22718 23130 24680 25031 26127 26118 26681 26801 28151 30165 32058 33390 39746 20123 20304 21449 21766 23919 24038 24046 26619 27801 29811 30722 35408 37782 35039 22352 24231 25387 20661 20652 20877 26368 21705 22622 22971 23472 24425 25165 25505 26685 27507 28168 28797 37319 29312 30741 30758 31085 25998 32048 33756 35009 36617 38555 21092 22312 26448 32618 36001 20916 22338 38442 22586 27018 32948 21682 23822 22524 30869 40442 20316 21066 21643 25662 26152 26388 26613 31364 31574 32034 37679 26716 39853 31545 21273 20874 21047 )	#(23519 25334 25774 25830 26413 27578 34217 38609 30352 39894 25420 37638 39851 30399 26194 19977 20632 21442 23665 24808 25746 25955 26719 29158 29642 29987 31639 32386 34453 35715 36059 37240 39184 26028 26283 27531 20181 20180 20282 20351 21050 21496 21490 21987 22235 22763 22987 22985 23039 23376 23629 24066 24107 24535 24605 25351 25903 23388 26031 26045 26088 26525 27490 27515 27663 29509 31049 31169 31992 32025 32043 32930 33026 33267 35222 35422 35433 35430 35468 35566 36039 36060 38604 39164 27503 20107 20284 20365 20816 23383 23546 24904 25345 26178 )	#(27425 28363 27835 29246 29885 30164 30913 31034 32780 32819 33258 33940 36766 27728 40575 24335 35672 40235 31482 36600 23437 38635 19971 21489 22519 22833 23241 23460 24713 28287 28422 30142 36074 23455 34048 31712 20594 26612 33437 23649 34122 32286 33294 20889 23556 25448 36198 26012 29038 31038 32023 32773 35613 36554 36974 34503 37034 20511 21242 23610 26451 28796 29237 37196 37320 37675 33509 23490 24369 24825 20027 21462 23432 25163 26417 27530 29417 29664 31278 33131 36259 37202 39318 20754 21463 21610 23551 25480 27193 32172 38656 22234 21454 21608 )	#(23447 23601 24030 20462 24833 25342 27954 31168 31179 32066 32333 32722 33261 33311 33936 34886 35186 35728 36468 36655 36913 37195 37228 38598 37276 20160 20303 20805 21313 24467 25102 26580 27713 28171 29539 32294 37325 37507 21460 22809 23487 28113 31069 32302 31899 22654 29087 20986 34899 36848 20426 23803 26149 30636 31459 33308 39423 20934 24490 26092 26991 27529 28147 28310 28516 30462 32020 24033 36981 37255 38918 20966 21021 25152 26257 26329 28186 24246 32210 32626 26360 34223 34295 35576 21161 21465 22899 24207 24464 24661 37604 38500 20663 20767 )	#(21213 21280 21319 21484 21736 21830 21809 22039 22888 22974 23100 23477 23558 23567 23569 23578 24196 24202 24288 24432 25215 25220 25307 25484 25463 26119 26124 26157 26230 26494 26786 27167 27189 27836 28040 28169 28248 28988 28966 29031 30151 30465 30813 30977 31077 31216 31456 31505 31911 32057 32918 33750 33931 34121 34909 35059 35359 35388 35412 35443 35937 36062 37284 37478 37758 37912 38556 38808 19978 19976 19998 20055 20887 21104 22478 22580 22732 23330 24120 24773 25854 26465 26454 27972 29366 30067 31331 33976 35698 37304 37664 22065 22516 39166 )	#(25325 26893 27542 29165 32340 32887 33394 35302 39135 34645 36785 23611 20280 20449 20405 21767 23072 23517 23529 24515 24910 25391 26032 26187 26862 27035 28024 28145 30003 30137 30495 31070 31206 32051 33251 33455 34218 35242 35386 36523 36763 36914 37341 38663 20154 20161 20995 22645 22764 23563 29978 23613 33102 35338 36805 38499 38765 31525 35535 38920 37218 22259 21416 36887 21561 22402 24101 25512 27700 28810 30561 31883 32736 34928 36930 37204 37648 37656 38543 29790 39620 23815 23913 25968 26530 36264 38619 25454 26441 26905 33733 38935 38592 35070 )	#(28548 25722 23544 19990 28716 30045 26159 20932 21046 21218 22995 24449 24615 25104 25919 25972 26143 26228 26866 26646 27491 28165 29298 29983 30427 31934 32854 22768 35069 35199 35488 35475 35531 36893 37266 38738 38745 25993 31246 33030 38587 24109 24796 25114 26021 26132 26512 30707 31309 31821 32318 33034 36012 36196 36321 36447 30889 20999 25305 25509 25666 25240 35373 31363 31680 35500 38634 32118 33292 34633 20185 20808 21315 21344 23459 23554 23574 24029 25126 25159 25776 26643 26676 27849 27973 27927 26579 28508 29006 29053 26059 31359 31661 32218 )	#(32330 32680 33146 33307 33337 34214 35438 36046 36341 36984 36983 37549 37521 38275 39854 21069 21892 28472 28982 20840 31109 32341 33203 31950 22092 22609 23720 25514 26366 26365 26970 29401 30095 30094 30990 31062 31199 31895 32032 32068 34311 35380 38459 36961 40736 20711 21109 21452 21474 20489 21930 22766 22863 29245 23435 23652 21277 24803 24819 25436 25475 25407 25531 25805 26089 26361 24035 27085 27133 28437 29157 20105 30185 30456 31379 31967 32207 32156 32865 33609 33624 33900 33980 34299 35013 36208 36865 36973 37783 38684 39442 20687 22679 24974 )	#(33235 34101 36104 36896 20419 20596 21063 21363 24687 25417 26463 28204 36275 36895 20439 23646 36042 26063 32154 21330 34966 20854 25539 23384 23403 23562 25613 26449 36956 20182 22810 22826 27760 35409 21822 22549 22949 24816 25171 26561 33333 26965 38464 39364 39464 20307 22534 23550 32784 23729 24111 24453 24608 24907 25140 26367 27888 28382 32974 33151 33492 34955 36024 36864 36910 38538 40667 39899 20195 21488 22823 31532 37261 38988 40441 28381 28711 21331 21828 23429 25176 25246 25299 27810 28655 29730 35351 37944 28609 35582 33592 20967 34552 21482 )	#(21481 20294 36948 36784 22890 33073 24061 31466 36799 26842 35895 29432 40008 27197 35504 20025 21336 22022 22374 25285 25506 26086 27470 28129 28251 28845 30701 31471 31658 32187 32829 32966 34507 35477 37723 22243 22727 24382 26029 26262 27264 27573 30007 35527 20516 30693 22320 24347 24677 26234 27744 30196 31258 32622 33268 34584 36933 39347 31689 30044 31481 31569 33988 36880 31209 31378 33590 23265 30528 20013 20210 23449 24544 25277 26172 26609 27880 34411 34935 35387 37198 37619 39376 27159 28710 29482 33511 33879 36015 19969 20806 20939 21899 23541 )	#(24086 24115 24193 24340 24373 24427 24500 25074 25361 26274 26397 28526 29266 30010 30522 32884 33081 33144 34678 35519 35548 36229 36339 37530 38263 38914 40165 21189 25431 30452 26389 27784 29645 36035 37806 38515 27941 22684 26894 27084 36861 37786 30171 36890 22618 26626 25524 27131 20291 28460 26584 36795 34086 32180 37716 26943 28528 22378 22775 23340 32044 29226 21514 37347 40372 20141 20302 20572 20597 21059 35998 21576 22564 23450 24093 24213 24237 24311 24351 24716 25269 25402 25552 26799 27712 30855 31118 31243 32224 33351 35330 35558 36420 36883 )	#(37048 37165 37336 40718 27877 25688 25826 25973 28404 30340 31515 36969 37841 28346 21746 24505 25764 36685 36845 37444 20856 22635 22825 23637 24215 28155 32399 29980 36028 36578 39003 28857 20253 27583 28593 30000 38651 20814 21520 22581 22615 22956 23648 24466 26007 26460 28193 30331 33759 36077 36884 37117 37709 30757 30778 21162 24230 22303 22900 24594 20498 20826 20908 20941 20992 21776 22612 22616 22871 23445 23798 23947 24764 25237 25645 26481 26691 26812 26847 30423 28120 28271 28059 28783 29128 24403 30168 31095 31561 31572 31570 31958 32113 21040 )	#(33891 34153 34276 35342 35588 35910 36367 36867 36879 37913 38518 38957 39472 38360 20685 21205 21516 22530 23566 24999 25758 27934 30643 31461 33012 33796 36947 37509 23776 40199 21311 24471 24499 28060 29305 30563 31167 31716 27602 29420 35501 26627 27233 20984 31361 26932 23626 40182 33515 23493 37193 28702 22136 23663 24775 25958 27788 35930 36929 38931 21585 26311 37389 22856 37027 20869 20045 20970 34201 35598 28760 25466 37707 26978 39348 32260 30071 21335 26976 36575 38627 27741 20108 23612 24336 36841 21250 36049 32905 34425 24319 26085 20083 20837 )	#(22914 23615 38894 20219 22922 24525 35469 28641 31152 31074 23527 33905 29483 29105 24180 24565 25467 25754 29123 31896 20035 24316 20043 22492 22178 24745 28611 32013 33021 33075 33215 36786 35223 34468 24052 25226 25773 35207 26487 27874 27966 29750 30772 23110 32629 33453 39340 20467 24259 25309 25490 25943 26479 30403 29260 32972 32954 36649 37197 20493 22521 23186 26757 26995 29028 29437 36023 22770 36064 38506 36889 34687 31204 30695 33833 20271 21093 21338 25293 26575 27850 30333 31636 31893 33334 34180 36843 26333 28448 29190 32283 33707 39361 40614 )	#(20989 31665 30834 31672 32903 31560 27368 24161 32908 30033 30048 20843 37474 28300 30330 37271 39658 20240 32624 25244 31567 38309 40169 22138 22617 34532 38588 20276 21028 21322 21453 21467 24070 25644 26001 26495 27710 27726 29256 29359 29677 30036 32321 33324 34281 36009 31684 37318 29033 38930 39151 25405 26217 30058 30436 30928 34115 34542 21290 21329 21542 22915 24199 24444 24754 25161 25209 25259 26000 27604 27852 30130 30382 30865 31192 32203 32631 32933 34987 35513 36027 36991 38750 39131 27147 31800 20633 23614 24494 26503 27608 29749 30473 32654 )	#(40763 26570 31255 21305 30091 39661 24422 33181 33777 32920 24380 24517 30050 31558 36924 26727 23019 23195 32016 30334 35628 20469 24426 27161 27703 28418 29922 31080 34920 35413 35961 24287 25551 30149 31186 33495 37672 37618 33948 34541 39981 21697 24428 25996 27996 28693 36007 36051 38971 25935 29942 19981 20184 22496 22827 23142 23500 20904 24067 24220 24598 25206 25975 26023 26222 28014 29238 31526 33104 33178 33433 35676 36000 36070 36212 38428 38468 20398 25771 27494 33310 33889 34154 37096 23553 26963 39080 33914 34135 20239 21103 24489 24133 26381 )	#(31119 33145 35079 35206 28149 24343 25173 27832 20175 29289 39826 20998 21563 22132 22707 24996 25198 28954 22894 31881 31966 32027 38640 25991 32862 19993 20341 20853 22592 24163 24179 24330 26564 20006 34109 38281 38491 31859 38913 20731 22721 30294 30887 21029 30629 34065 31622 20559 22793 29255 31687 32232 36794 36820 36941 20415 21193 23081 24321 38829 20445 33303 37610 22275 25429 27497 29995 35036 36628 31298 21215 22675 24917 25098 26286 27597 31807 33769 20515 20472 21253 21574 22577 22857 23453 23792 23791 23849 24214 25265 25447 25918 26041 26379 )	#(27861 27873 28921 30770 32299 32990 33459 33804 34028 34562 35090 35370 35914 37030 37586 39165 40179 40300 20047 20129 20621 21078 22346 22952 24125 24536 24537 25151 26292 26395 26576 26834 20882 32033 32938 33192 35584 35980 36031 37502 38450 21536 38956 21271 20693 21340 22696 25778 26420 29287 30566 31302 37350 21187 27809 27526 22528 24140 22868 26412 32763 20961 30406 25705 30952 39764 40635 22475 22969 26151 26522 27598 21737 27097 24149 33180 26517 39850 26622 40018 26717 20134 20451 21448 25273 26411 27819 36804 20397 32365 40639 19975 24930 28288 )	#(28459 34067 21619 26410 39749 24051 31637 23724 23494 34588 28234 34001 31252 33032 22937 31885 27665 30496 21209 22818 28961 29279 30683 38695 40289 26891 23167 23064 20901 21517 21629 26126 30431 36855 37528 40180 23018 29277 28357 20813 26825 32191 32236 38754 40634 25720 27169 33538 22916 23391 27611 29467 30450 32178 32791 33945 20786 26408 40665 30446 26466 21247 39173 23588 25147 31870 36016 21839 24758 32011 38272 21249 20063 20918 22812 29242 32822 37326 24357 30690 21380 24441 32004 34220 35379 36493 38742 26611 34222 37971 24841 24840 27833 30290 )	#(35565 36664 21807 20305 20778 21191 21451 23461 24189 24736 24962 25558 26377 26586 28263 28044 29494 29495 30001 31056 35029 35480 36938 37009 37109 38596 34701 22805 20104 20313 19982 35465 36671 38928 20653 24188 22934 23481 24248 25562 25594 25793 26332 26954 27096 27915 28342 29076 29992 31407 32650 32768 33865 33993 35201 35617 36362 36965 38525 39178 24958 25233 27442 27779 28020 32716 32764 28096 32645 34746 35064 26469 33713 38972 38647 27931 32097 33853 37226 20081 21365 23888 27396 28651 34253 34349 35239 21033 21519 23653 26446 26792 29702 29827 )	#(30178 35023 35041 37324 38626 38520 24459 29575 31435 33870 25504 30053 21129 27969 28316 29705 30041 30827 31890 38534 31452 40845 20406 24942 26053 34396 20102 20142 20698 20001 20940 23534 26009 26753 28092 29471 30274 30637 31260 31975 33391 35538 36988 37327 38517 38936 21147 32209 20523 21400 26519 28107 29136 29747 33256 36650 38563 40023 40607 29792 22593 28057 32047 39006 20196 20278 20363 20919 21169 23994 24604 29618 31036 33491 37428 38583 38646 38666 40599 40802 26278 27508 21015 21155 28872 35010 24265 24651 24976 28451 29001 31806 32244 32879 )	#(34030 36899 37676 21570 39791 27347 28809 36034 36335 38706 21172 23105 24266 24324 26391 27004 27028 28010 28431 29282 29436 31725 32769 32894 34635 37070 20845 40595 31108 32907 37682 35542 20525 21644 35441 27498 36036 33031 24785 26528 40434 20121 20120 39952 35435 34241 34152 26880 28286 30871 33109 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 )	#(24332 19984 19989 20010 20017 20022 20028 20031 20034 20054 20056 20098 20101 35947 20106 33298 24333 20110 20126 20127 20128 20130 20144 20147 20150 20174 20173 20164 20166 20162 20183 20190 20205 20191 20215 20233 20314 20272 20315 20317 20311 20295 20342 20360 20367 20376 20347 20329 20336 20369 20335 20358 20374 20760 20436 20447 20430 20440 20443 20433 20442 20432 20452 20453 20506 20520 20500 20522 20517 20485 20252 20470 20513 20521 20524 20478 20463 20497 20486 20547 20551 26371 20565 20560 20552 20570 20566 20588 20600 20608 20634 20613 20660 20658 )	#(20681 20682 20659 20674 20694 20702 20709 20717 20707 20718 20729 20725 20745 20737 20738 20758 20757 20756 20762 20769 20794 20791 20796 20795 20799 20800 20818 20812 20820 20834 31480 20841 20842 20846 20864 20866 22232 20876 20873 20879 20881 20883 20885 20886 20900 20902 20898 20905 20906 20907 20915 20913 20914 20912 20917 20925 20933 20937 20955 20960 34389 20969 20973 20976 20981 20990 20996 21003 21012 21006 21031 21034 21038 21043 21049 21071 21060 21067 21068 21086 21076 21098 21108 21097 21107 21119 21117 21133 21140 21138 21105 21128 21137 36776 )	#(36775 21164 21165 21180 21173 21185 21197 21207 21214 21219 21222 39149 21216 21235 21237 21240 21241 21254 21256 30008 21261 21264 21263 21269 21274 21283 21295 21297 21299 21304 21312 21318 21317 19991 21321 21325 20950 21342 21353 21358 22808 21371 21367 21378 21398 21408 21414 21413 21422 21424 21430 21443 31762 38617 21471 26364 29166 21486 21480 21485 21498 21505 21565 21568 21548 21549 21564 21550 21558 21545 21533 21582 21647 21621 21646 21599 21617 21623 21616 21650 21627 21632 21622 21636 21648 21638 21703 21666 21688 21669 21676 21700 21704 21672 )	#(21675 21698 21668 21694 21692 21720 21733 21734 21775 21780 21757 21742 21741 21754 21730 21817 21824 21859 21836 21806 21852 21829 21846 21847 21816 21811 21853 21913 21888 21679 21898 21919 21883 21886 21912 21918 21934 21884 21891 21929 21895 21928 21978 21957 21983 21956 21980 21988 21972 22036 22007 22038 22014 22013 22043 22009 22094 22096 29151 22068 22070 22066 22072 22123 22116 22063 22124 22122 22150 22144 22154 22176 22164 22159 22181 22190 22198 22196 22210 22204 22209 22211 22208 22216 22222 22225 22227 22231 22254 22265 22272 22271 22276 22281 )	#(22280 22283 22285 22291 22296 22294 21959 22300 22310 22327 22328 22350 22331 22336 22351 22377 22464 22408 22369 22399 22409 22419 22432 22451 22436 22442 22448 22467 22470 22484 22482 22483 22538 22486 22499 22539 22553 22557 22642 22561 22626 22603 22640 27584 22610 22589 22649 22661 22713 22687 22699 22714 22750 22715 22712 22702 22725 22739 22737 22743 22745 22744 22757 22748 22756 22751 22767 22778 22777 22779 22780 22781 22786 22794 22800 22811 26790 22821 22828 22829 22834 22840 22846 31442 22869 22864 22862 22874 22872 22882 22880 22887 22892 22889 )	#(22904 22913 22941 20318 20395 22947 22962 22982 23016 23004 22925 23001 23002 23077 23071 23057 23068 23049 23066 23104 23148 23113 23093 23094 23138 23146 23194 23228 23230 23243 23234 23229 23267 23255 23270 23273 23254 23290 23291 23308 23307 23318 23346 23248 23338 23350 23358 23363 23365 23360 23377 23381 23386 23387 23397 23401 23408 23411 23413 23416 25992 23418 23424 23427 23462 23480 23491 23495 23497 23508 23504 23524 23526 23522 23518 23525 23531 23536 23542 23539 23557 23559 23560 23565 23571 23584 23586 23592 23608 23609 23617 23622 23630 23635 )	#(23632 23631 23409 23660 23662 20066 23670 23673 23692 23697 23700 22939 23723 23739 23734 23740 23735 23749 23742 23751 23769 23785 23805 23802 23789 23948 23786 23819 23829 23831 23900 23839 23835 23825 23828 23842 23834 23833 23832 23884 23890 23886 23883 23916 23923 23926 23943 23940 23938 23970 23965 23980 23982 23997 23952 23991 23996 24009 24013 24019 24018 24022 24027 24043 24050 24053 24075 24090 24089 24081 24091 24118 24119 24132 24131 24128 24142 24151 24148 24159 24162 24164 24135 24181 24182 24186 40636 24191 24224 24257 24258 24264 24272 24271 )	#(24278 24291 24285 24282 24283 24290 24289 24296 24297 24300 24305 24307 24304 24308 24312 24318 24323 24329 24413 24412 24331 24337 24342 24361 24365 24376 24385 24392 24396 24398 24367 24401 24406 24407 24409 24417 24429 24435 24439 24451 24450 24447 24458 24456 24465 24455 24478 24473 24472 24480 24488 24493 24508 24534 24571 24548 24568 24561 24541 24755 24575 24609 24672 24601 24592 24617 24590 24625 24603 24597 24619 24614 24591 24634 24666 24641 24682 24695 24671 24650 24646 24653 24675 24643 24676 24642 24684 24683 24665 24705 24717 24807 24707 24730 )	#(24708 24731 24726 24727 24722 24743 24715 24801 24760 24800 24787 24756 24560 24765 24774 24757 24792 24909 24853 24838 24822 24823 24832 24820 24826 24835 24865 24827 24817 24845 24846 24903 24894 24872 24871 24906 24895 24892 24876 24884 24893 24898 24900 24947 24951 24920 24921 24922 24939 24948 24943 24933 24945 24927 24925 24915 24949 24985 24982 24967 25004 24980 24986 24970 24977 25003 25006 25036 25034 25033 25079 25032 25027 25030 25018 25035 32633 25037 25062 25059 25078 25082 25076 25087 25085 25084 25086 25088 25096 25097 25101 25100 25108 25115 )	#(25118 25121 25130 25134 25136 25138 25139 25153 25166 25182 25187 25179 25184 25192 25212 25218 25225 25214 25234 25235 25238 25300 25219 25236 25303 25297 25275 25295 25343 25286 25812 25288 25308 25292 25290 25282 25287 25243 25289 25356 25326 25329 25383 25346 25352 25327 25333 25424 25406 25421 25628 25423 25494 25486 25472 25515 25462 25507 25487 25481 25503 25525 25451 25449 25534 25577 25536 25542 25571 25545 25554 25590 25540 25622 25652 25606 25619 25638 25654 25885 25623 25640 25615 25703 25711 25718 25678 25898 25749 25747 25765 25769 25736 25788 )	#(25818 25810 25797 25799 25787 25816 25794 25841 25831 33289 25824 25825 25260 25827 25839 25900 25846 25844 25842 25850 25856 25853 25880 25884 25861 25892 25891 25899 25908 25909 25911 25910 25912 30027 25928 25942 25941 25933 25944 25950 25949 25970 25976 25986 25987 35722 26011 26015 26027 26039 26051 26054 26049 26052 26060 26066 26075 26073 26080 26081 26097 26482 26122 26115 26107 26483 26165 26166 26164 26140 26191 26180 26185 26177 26206 26205 26212 26215 26216 26207 26210 26224 26243 26248 26254 26249 26244 26264 26269 26305 26297 26313 26302 26300 )	#(26308 26296 26326 26330 26336 26175 26342 26345 26352 26357 26359 26383 26390 26398 26406 26407 38712 26414 26431 26422 26433 26424 26423 26438 26462 26464 26457 26467 26468 26505 26480 26537 26492 26474 26508 26507 26534 26529 26501 26551 26607 26548 26604 26547 26601 26552 26596 26590 26589 26594 26606 26553 26574 26566 26599 27292 26654 26694 26665 26688 26701 26674 26702 26803 26667 26713 26723 26743 26751 26783 26767 26797 26772 26781 26779 26755 27310 26809 26740 26805 26784 26810 26895 26765 26750 26881 26826 26888 26840 26914 26918 26849 26892 26829 )	#(26836 26855 26837 26934 26898 26884 26839 26851 26917 26873 26848 26863 26920 26922 26906 26915 26913 26822 27001 26999 26972 27000 26987 26964 27006 26990 26937 26996 26941 26969 26928 26977 26974 26973 27009 26986 27058 27054 27088 27071 27073 27091 27070 27086 23528 27082 27101 27067 27075 27047 27182 27025 27040 27036 27029 27060 27102 27112 27138 27163 27135 27402 27129 27122 27111 27141 27057 27166 27117 27156 27115 27146 27154 27329 27171 27155 27204 27148 27250 27190 27256 27207 27234 27225 27238 27208 27192 27170 27280 27277 27296 27268 27298 27299 )	#(27287 34327 27323 27331 27330 27320 27315 27308 27358 27345 27359 27306 27354 27370 27387 27397 34326 27386 27410 27414 39729 27423 27448 27447 30428 27449 39150 27463 27459 27465 27472 27481 27476 27483 27487 27489 27512 27513 27519 27520 27524 27523 27533 27544 27541 27550 27556 27562 27563 27567 27570 27569 27571 27575 27580 27590 27595 27603 27615 27628 27627 27635 27631 40638 27656 27667 27668 27675 27684 27683 27742 27733 27746 27754 27778 27789 27802 27777 27803 27774 27752 27763 27794 27792 27844 27889 27859 27837 27863 27845 27869 27822 27825 27838 )	#(27834 27867 27887 27865 27882 27935 34893 27958 27947 27965 27960 27929 27957 27955 27922 27916 28003 28051 28004 27994 28025 27993 28046 28053 28644 28037 28153 28181 28170 28085 28103 28134 28088 28102 28140 28126 28108 28136 28114 28101 28154 28121 28132 28117 28138 28142 28205 28270 28206 28185 28274 28255 28222 28195 28267 28203 28278 28237 28191 28227 28218 28238 28196 28415 28189 28216 28290 28330 28312 28361 28343 28371 28349 28335 28356 28338 28372 28373 28303 28325 28354 28319 28481 28433 28748 28396 28408 28414 28479 28402 28465 28399 28466 28364 )	#(28478 28435 28407 28550 28538 28536 28545 28544 28527 28507 28659 28525 28546 28540 28504 28558 28561 28610 28518 28595 28579 28577 28580 28601 28614 28586 28639 28629 28652 28628 28632 28657 28654 28635 28681 28683 28666 28689 28673 28687 28670 28699 28698 28532 28701 28696 28703 28720 28734 28722 28753 28771 28825 28818 28847 28913 28844 28856 28851 28846 28895 28875 28893 28889 28937 28925 28956 28953 29029 29013 29064 29030 29026 29004 29014 29036 29071 29179 29060 29077 29096 29100 29143 29113 29118 29138 29129 29140 29134 29152 29164 29159 29173 29180 )	#(29177 29183 29197 29200 29211 29224 29229 29228 29232 29234 29243 29244 29247 29248 29254 29259 29272 29300 29310 29314 29313 29319 29330 29334 29346 29351 29369 29362 29379 29382 29380 29390 29394 29410 29408 29409 29433 29431 20495 29463 29450 29468 29462 29469 29492 29487 29481 29477 29502 29518 29519 40664 29527 29546 29544 29552 29560 29557 29563 29562 29640 29619 29646 29627 29632 29669 29678 29662 29858 29701 29807 29733 29688 29746 29754 29781 29759 29791 29785 29761 29788 29801 29808 29795 29802 29814 29822 29835 29854 29863 29898 29903 29908 29681 )	#(29920 29923 29927 29929 29934 29938 29936 29937 29944 29943 29956 29955 29957 29964 29966 29965 29973 29971 29982 29990 29996 30012 30020 30029 30026 30025 30043 30022 30042 30057 30052 30055 30059 30061 30072 30070 30086 30087 30068 30090 30089 30082 30100 30106 30109 30117 30115 30146 30131 30147 30133 30141 30136 30140 30129 30157 30154 30162 30169 30179 30174 30206 30207 30204 30209 30192 30202 30194 30195 30219 30221 30217 30239 30247 30240 30241 30242 30244 30260 30256 30267 30279 30280 30278 30300 30296 30305 30306 30312 30313 30314 30311 30316 30320 )	#(30322 30326 30328 30332 30336 30339 30344 30347 30350 30358 30355 30361 30362 30384 30388 30392 30393 30394 30402 30413 30422 30418 30430 30433 30437 30439 30442 34351 30459 30472 30471 30468 30505 30500 30494 30501 30502 30491 30519 30520 30535 30554 30568 30571 30555 30565 30591 30590 30585 30606 30603 30609 30624 30622 30640 30646 30649 30655 30652 30653 30651 30663 30669 30679 30682 30684 30691 30702 30716 30732 30738 31014 30752 31018 30789 30862 30836 30854 30844 30874 30860 30883 30901 30890 30895 30929 30918 30923 30932 30910 30908 30917 30922 30956 )	#(30951 30938 30973 30964 30983 30994 30993 31001 31020 31019 31040 31072 31063 31071 31066 31061 31059 31098 31103 31114 31133 31143 40779 31146 31150 31155 31161 31162 31177 31189 31207 31212 31201 31203 31240 31245 31256 31257 31264 31263 31104 31281 31291 31294 31287 31299 31319 31305 31329 31330 31337 40861 31344 31353 31357 31368 31383 31381 31384 31382 31401 31432 31408 31414 31429 31428 31423 36995 31431 31434 31437 31439 31445 31443 31449 31450 31453 31457 31458 31462 31469 31472 31490 31503 31498 31494 31539 31512 31513 31518 31541 31528 31542 31568 )	#(31610 31492 31565 31499 31564 31557 31605 31589 31604 31591 31600 31601 31596 31598 31645 31640 31647 31629 31644 31642 31627 31634 31631 31581 31641 31691 31681 31692 31695 31668 31686 31709 31721 31761 31764 31718 31717 31840 31744 31751 31763 31731 31735 31767 31757 31734 31779 31783 31786 31775 31799 31787 31805 31820 31811 31828 31823 31808 31824 31832 31839 31844 31830 31845 31852 31861 31875 31888 31908 31917 31906 31915 31905 31912 31923 31922 31921 31918 31929 31933 31936 31941 31938 31960 31954 31964 31970 39739 31983 31986 31988 31990 31994 32006 )	#(32002 32028 32021 32010 32069 32075 32046 32050 32063 32053 32070 32115 32086 32078 32114 32104 32110 32079 32099 32147 32137 32091 32143 32125 32155 32186 32174 32163 32181 32199 32189 32171 32317 32162 32175 32220 32184 32159 32176 32216 32221 32228 32222 32251 32242 32225 32261 32266 32291 32289 32274 32305 32287 32265 32267 32290 32326 32358 32315 32309 32313 32323 32311 32306 32314 32359 32349 32342 32350 32345 32346 32377 32362 32361 32380 32379 32387 32213 32381 36782 32383 32392 32393 32396 32402 32400 32403 32404 32406 32398 32411 32412 32568 32570 )	#(32581 32588 32589 32590 32592 32593 32597 32596 32600 32607 32608 32616 32617 32615 32632 32642 32646 32643 32648 32647 32652 32660 32670 32669 32666 32675 32687 32690 32697 32686 32694 32696 35697 32709 32710 32714 32725 32724 32737 32742 32745 32755 32761 39132 32774 32772 32779 32786 32792 32793 32796 32801 32808 32831 32827 32842 32838 32850 32856 32858 32863 32866 32872 32883 32882 32880 32886 32889 32893 32895 32900 32902 32901 32923 32915 32922 32941 20880 32940 32987 32997 32985 32989 32964 32986 32982 33033 33007 33009 33051 33065 33059 33071 33099 )	#(38539 33094 33086 33107 33105 33020 33137 33134 33125 33126 33140 33155 33160 33162 33152 33154 33184 33173 33188 33187 33119 33171 33193 33200 33205 33214 33208 33213 33216 33218 33210 33225 33229 33233 33241 33240 33224 33242 33247 33248 33255 33274 33275 33278 33281 33282 33285 33287 33290 33293 33296 33302 33321 33323 33336 33331 33344 33369 33368 33373 33370 33375 33380 33378 33384 33386 33387 33326 33393 33399 33400 33406 33421 33426 33451 33439 33467 33452 33505 33507 33503 33490 33524 33523 33530 33683 33539 33531 33529 33502 33542 33500 33545 33497 )	#(33589 33588 33558 33586 33585 33600 33593 33616 33605 33583 33579 33559 33560 33669 33690 33706 33695 33698 33686 33571 33678 33671 33674 33660 33717 33651 33653 33696 33673 33704 33780 33811 33771 33742 33789 33795 33752 33803 33729 33783 33799 33760 33778 33805 33826 33824 33725 33848 34054 33787 33901 33834 33852 34138 33924 33911 33899 33965 33902 33922 33897 33862 33836 33903 33913 33845 33994 33890 33977 33983 33951 34009 33997 33979 34010 34000 33985 33990 34006 33953 34081 34047 34036 34071 34072 34092 34079 34069 34068 34044 34112 34147 34136 34120 )	#(34113 34306 34123 34133 34176 34212 34184 34193 34186 34216 34157 34196 34203 34282 34183 34204 34167 34174 34192 34249 34234 34255 34233 34256 34261 34269 34277 34268 34297 34314 34323 34315 34302 34298 34310 34338 34330 34352 34367 34381 20053 34388 34399 34407 34417 34451 34467 34473 34474 34443 34444 34486 34479 34500 34502 34480 34505 34851 34475 34516 34526 34537 34540 34527 34523 34543 34578 34566 34568 34560 34563 34555 34577 34569 34573 34553 34570 34612 34623 34615 34619 34597 34601 34586 34656 34655 34680 34636 34638 34676 34647 34664 34670 34649 )	#(34643 34659 34666 34821 34722 34719 34690 34735 34763 34749 34752 34768 38614 34731 34756 34739 34759 34758 34747 34799 34802 34784 34831 34829 34814 34806 34807 34830 34770 34833 34838 34837 34850 34849 34865 34870 34873 34855 34875 34884 34882 34898 34905 34910 34914 34923 34945 34942 34974 34933 34941 34997 34930 34946 34967 34962 34990 34969 34978 34957 34980 34992 35007 34993 35011 35012 35028 35032 35033 35037 35065 35074 35068 35060 35048 35058 35076 35084 35082 35091 35139 35102 35109 35114 35115 35137 35140 35131 35126 35128 35148 35101 35168 35166 )	#(35174 35172 35181 35178 35183 35188 35191 35198 35203 35208 35210 35219 35224 35233 35241 35238 35244 35247 35250 35258 35261 35263 35264 35290 35292 35293 35303 35316 35320 35331 35350 35344 35340 35355 35357 35365 35382 35393 35419 35410 35398 35400 35452 35437 35436 35426 35461 35458 35460 35496 35489 35473 35493 35494 35482 35491 35524 35533 35522 35546 35563 35571 35559 35556 35569 35604 35552 35554 35575 35550 35547 35596 35591 35610 35553 35606 35600 35607 35616 35635 38827 35622 35627 35646 35624 35649 35660 35663 35662 35657 35670 35675 35674 35691 )	#(35679 35692 35695 35700 35709 35712 35724 35726 35730 35731 35734 35737 35738 35898 35905 35903 35912 35916 35918 35920 35925 35938 35948 35960 35962 35970 35977 35973 35978 35981 35982 35988 35964 35992 25117 36013 36010 36029 36018 36019 36014 36022 36040 36033 36068 36067 36058 36093 36090 36091 36100 36101 36106 36103 36111 36109 36112 40782 36115 36045 36116 36118 36199 36205 36209 36211 36225 36249 36290 36286 36282 36303 36314 36310 36300 36315 36299 36330 36331 36319 36323 36348 36360 36361 36351 36381 36382 36368 36383 36418 36405 36400 36404 36426 )	#(36423 36425 36428 36432 36424 36441 36452 36448 36394 36451 36437 36470 36466 36476 36481 36487 36485 36484 36491 36490 36499 36497 36500 36505 36522 36513 36524 36528 36550 36529 36542 36549 36552 36555 36571 36579 36604 36603 36587 36606 36618 36613 36629 36626 36633 36627 36636 36639 36635 36620 36646 36659 36667 36665 36677 36674 36670 36684 36681 36678 36686 36695 36700 36706 36707 36708 36764 36767 36771 36781 36783 36791 36826 36837 36834 36842 36847 36999 36852 36869 36857 36858 36881 36885 36897 36877 36894 36886 36875 36903 36918 36917 36921 36856 )	#(36943 36944 36945 36946 36878 36937 36926 36950 36952 36958 36968 36975 36982 38568 36978 36994 36989 36993 36992 37002 37001 37007 37032 37039 37041 37045 37090 37092 25160 37083 37122 37138 37145 37170 37168 37194 37206 37208 37219 37221 37225 37235 37234 37259 37257 37250 37282 37291 37295 37290 37301 37300 37306 37312 37313 37321 37323 37328 37334 37343 37345 37339 37372 37365 37366 37406 37375 37396 37420 37397 37393 37470 37463 37445 37449 37476 37448 37525 37439 37451 37456 37532 37526 37523 37531 37466 37583 37561 37559 37609 37647 37626 37700 37678 )	#(37657 37666 37658 37667 37690 37685 37691 37724 37728 37756 37742 37718 37808 37804 37805 37780 37817 37846 37847 37864 37861 37848 37827 37853 37840 37832 37860 37914 37908 37907 37891 37895 37904 37942 37931 37941 37921 37946 37953 37970 37956 37979 37984 37986 37982 37994 37417 38000 38005 38007 38013 37978 38012 38014 38017 38015 38274 38279 38282 38292 38294 38296 38297 38304 38312 38311 38317 38332 38331 38329 38334 38346 28662 38339 38349 38348 38357 38356 38358 38364 38369 38373 38370 38433 38440 38446 38447 38466 38476 38479 38475 38519 38492 38494 )	#(38493 38495 38502 38514 38508 38541 38552 38549 38551 38570 38567 38577 38578 38576 38580 38582 38584 38585 38606 38603 38601 38605 35149 38620 38669 38613 38649 38660 38662 38664 38675 38670 38673 38671 38678 38681 38692 38698 38704 38713 38717 38718 38724 38726 38728 38722 38729 38748 38752 38756 38758 38760 21202 38763 38769 38777 38789 38780 38785 38778 38790 38795 38799 38800 38812 38824 38822 38819 38835 38836 38851 38854 38856 38859 38876 38893 40783 38898 31455 38902 38901 38927 38924 38968 38948 38945 38967 38973 38982 38991 38987 39019 39023 39024 )	#(39025 39028 39027 39082 39087 39089 39094 39108 39107 39110 39145 39147 39171 39177 39186 39188 39192 39201 39197 39198 39204 39200 39212 39214 39229 39230 39234 39241 39237 39248 39243 39249 39250 39244 39253 39319 39320 39333 39341 39342 39356 39391 39387 39389 39384 39377 39405 39406 39409 39410 39419 39416 39425 39439 39429 39394 39449 39467 39479 39493 39490 39488 39491 39486 39509 39501 39515 39511 39519 39522 39525 39524 39529 39531 39530 39597 39600 39612 39616 39631 39633 39635 39636 39646 39647 39650 39651 39654 39663 39659 39662 39668 39665 39671 )	#(39675 39686 39704 39706 39711 39714 39715 39717 39719 39720 39721 39722 39726 39727 39730 39748 39747 39759 39757 39758 39761 39768 39796 39827 39811 39825 39830 39831 39839 39840 39848 39860 39872 39882 39865 39878 39887 39889 39890 39907 39906 39908 39892 39905 39994 39922 39921 39920 39957 39956 39945 39955 39948 39942 39944 39954 39946 39940 39982 39963 39973 39972 39969 39984 40007 39986 40006 39998 40026 40032 40039 40054 40056 40167 40172 40176 40201 40200 40171 40195 40198 40234 40230 40367 40227 40223 40260 40213 40210 40257 40255 40254 40262 40264 )	#(40285 40286 40292 40273 40272 40281 40306 40329 40327 40363 40303 40314 40346 40356 40361 40370 40388 40385 40379 40376 40378 40390 40399 40386 40409 40403 40440 40422 40429 40431 40445 40474 40475 40478 40565 40569 40573 40577 40584 40587 40588 40594 40597 40593 40605 40613 40617 40632 40618 40621 38753 40652 40654 40655 40656 40660 40668 40670 40669 40672 40677 40680 40687 40692 40694 40695 40697 40699 40700 40701 40711 40712 30391 40725 40737 40748 40766 40778 40786 40788 40803 40799 40800 40801 40806 40807 40812 40810 40823 40818 40822 40853 40860 40864 )	#(22575 27079 36953 29796 20956 29081 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 65535 )	nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil	nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil	nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil	nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil	nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil	nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil )</body><body package="JapaneseEncodings">mscp932	"The mapping data for MS Codepage 932.	Some irregular mappings described below are included	for the compatibility reason.	Shift-JIS	Unicode(CP932)	Unicode(VisualWorks)	  8160			FF5E			301C	  8161			2225			2016	  817C			FF0D			2212	  8191			FFE0			00A2	  8192			FFE1			00A3	  81CA			FFE2			00AC	  EEF9			FFE2			00AC	  FA54			FFE2			00AC"	^#(	#(16r0 16r7F #(16r0 16r1 16r2 16r3 16r4 16r5 16r6 16r7 16r8 16r9 16rA 16rB 16rC 16rD 16rE 16rF 16r10 16r11 16r12 16r13 16r14 16r15 16r16 16r17 16r18 16r19 16r1A 16r1B 16r1C 16r1D 16r1E 16r1F 16r20 16r21 16r22 16r23 16r24 16r25 16r26 16r27 16r28 16r29 16r2A 16r2B 16r2C 16r2D 16r2E 16r2F 16r30 16r31 16r32 16r33 16r34 16r35 16r36 16r37 16r38 16r39 16r3A 16r3B 16r3C 16r3D 16r3E 16r3F 16r40 16r41 16r42 16r43 16r44 16r45 16r46 16r47 16r48 16r49 16r4A 16r4B 16r4C 16r4D 16r4E 16r4F 16r50 16r51 16r52 16r53 16r54 16r55 16r56 16r57 16r58 16r59 16r5A 16r5B 16r5C 16r5D 16r5E 16r5F 16r60 16r61 16r62 16r63 16r64 16r65 16r66 16r67 16r68 16r69 16r6A 16r6B 16r6C 16r6D 16r6E 16r6F 16r70 16r71 16r72 16r73 16r74 16r75 16r76 16r77 16r78 16r79 16r7A 16r7B 16r7C 16r7D 16r7E 16r7F))	#(16rA1 16rDF #(16rFF61 16rFF62 16rFF63 16rFF64 16rFF65 16rFF66 16rFF67 16rFF68 16rFF69 16rFF6A 16rFF6B 16rFF6C 16rFF6D 16rFF6E 16rFF6F 16rFF70 16rFF71 16rFF72 16rFF73 16rFF74 16rFF75 16rFF76 16rFF77 16rFF78 16rFF79 16rFF7A 16rFF7B 16rFF7C 16rFF7D 16rFF7E 16rFF7F 16rFF80 16rFF81 16rFF82 16rFF83 16rFF84 16rFF85 16rFF86 16rFF87 16rFF88 16rFF89 16rFF8A 16rFF8B 16rFF8C 16rFF8D 16rFF8E 16rFF8F 16rFF90 16rFF91 16rFF92 16rFF93 16rFF94 16rFF95 16rFF96 16rFF97 16rFF98 16rFF99 16rFF9A 16rFF9B 16rFF9C 16rFF9D 16rFF9E 16rFF9F))	#(16r8140 16r817E #(16r3000 16r3001 16r3002 16rFF0C 16rFF0E 16r30FB 16rFF1A 16rFF1B 16rFF1F 16rFF01 16r309B 16r309C 16rB4 16rFF40 16rA8 16rFF3E 16rFFE3 16rFF3F 16r30FD 16r30FE 16r309D 16r309E 16r3003 16r4EDD 16r3005 16r3006 16r3007 16r30FC 16r2015 16r2010 16rFF0F 16rFF3C 16r301C 16r2016 16rFF5C 16r2026 16r2025 16r2018 16r2019 16r201C 16r201D 16rFF08 16rFF09 16r3014 16r3015 16rFF3B 16rFF3D 16rFF5B 16rFF5D 16r3008 16r3009 16r300A 16r300B 16r300C 16r300D 16r300E 16r300F 16r3010 16r3011 16rFF0B 16r2212 16rB1 16rD7))	#(16r8180 16r81AC #(16rF7 16rFF1D 16r2260 16rFF1C 16rFF1E 16r2266 16r2267 16r221E 16r2234 16r2642 16r2640 16rB0 16r2032 16r2033 16r2103 16rFFE5 16rFF04 16rA2 16rA3 16rFF05 16rFF03 16rFF06 16rFF0A 16rFF20 16rA7 16r2606 16r2605 16r25CB 16r25CF 16r25CE 16r25C7 16r25C6 16r25A1 16r25A0 16r25B3 16r25B2 16r25BD 16r25BC 16r203B 16r3012 16r2192 16r2190 16r2191 16r2193 16r3013))	#(16r81B8 16r81BF #(16r2208 16r220B 16r2286 16r2287 16r2282 16r2283 16r222A 16r2229))	#(16r81C8 16r81CE #(16r2227 16r2228 16rAC 16r21D2 16r21D4 16r2200 16r2203))	#(16r81DA 16r81E8 #(16r2220 16r22A5 16r2312 16r2202 16r2207 16r2261 16r2252 16r226A 16r226B 16r221A 16r223D 16r221D 16r2235 16r222B 16r222C))	#(16r81F0 16r81F7 #(16r212B 16r2030 16r266F 16r266D 16r266A 16r2020 16r2021 16rB6))	#(16r81FC 16r81FC #(16r25EF))	#(16r824F 16r8258 #(16rFF10 16rFF11 16rFF12 16rFF13 16rFF14 16rFF15 16rFF16 16rFF17 16rFF18 16rFF19))	#(16r8260 16r8279 #(16rFF21 16rFF22 16rFF23 16rFF24 16rFF25 16rFF26 16rFF27 16rFF28 16rFF29 16rFF2A 16rFF2B 16rFF2C 16rFF2D 16rFF2E 16rFF2F 16rFF30 16rFF31 16rFF32 16rFF33 16rFF34 16rFF35 16rFF36 16rFF37 16rFF38 16rFF39 16rFF3A))	#(16r8281 16r829A #(16rFF41 16rFF42 16rFF43 16rFF44 16rFF45 16rFF46 16rFF47 16rFF48 16rFF49 16rFF4A 16rFF4B 16rFF4C 16rFF4D 16rFF4E 16rFF4F 16rFF50 16rFF51 16rFF52 16rFF53 16rFF54 16rFF55 16rFF56 16rFF57 16rFF58 16rFF59 16rFF5A))	#(16r829F 16r82F1 #(16r3041 16r3042 16r3043 16r3044 16r3045 16r3046 16r3047 16r3048 16r3049 16r304A 16r304B 16r304C 16r304D 16r304E 16r304F 16r3050 16r3051 16r3052 16r3053 16r3054 16r3055 16r3056 16r3057 16r3058 16r3059 16r305A 16r305B 16r305C 16r305D 16r305E 16r305F 16r3060 16r3061 16r3062 16r3063 16r3064 16r3065 16r3066 16r3067 16r3068 16r3069 16r306A 16r306B 16r306C 16r306D 16r306E 16r306F 16r3070 16r3071 16r3072 16r3073 16r3074 16r3075 16r3076 16r3077 16r3078 16r3079 16r307A 16r307B 16r307C 16r307D 16r307E 16r307F 16r3080 16r3081 16r3082 16r3083 16r3084 16r3085 16r3086 16r3087 16r3088 16r3089 16r308A 16r308B 16r308C 16r308D 16r308E 16r308F 16r3090 16r3091 16r3092 16r3093))	#(16r8340 16r837E #(16r30A1 16r30A2 16r30A3 16r30A4 16r30A5 16r30A6 16r30A7 16r30A8 16r30A9 16r30AA 16r30AB 16r30AC 16r30AD 16r30AE 16r30AF 16r30B0 16r30B1 16r30B2 16r30B3 16r30B4 16r30B5 16r30B6 16r30B7 16r30B8 16r30B9 16r30BA 16r30BB 16r30BC 16r30BD 16r30BE 16r30BF 16r30C0 16r30C1 16r30C2 16r30C3 16r30C4 16r30C5 16r30C6 16r30C7 16r30C8 16r30C9 16r30CA 16r30CB 16r30CC 16r30CD 16r30CE 16r30CF 16r30D0 16r30D1 16r30D2 16r30D3 16r30D4 16r30D5 16r30D6 16r30D7 16r30D8 16r30D9 16r30DA 16r30DB 16r30DC 16r30DD 16r30DE 16r30DF))	#(16r8380 16r8396 #(16r30E0 16r30E1 16r30E2 16r30E3 16r30E4 16r30E5 16r30E6 16r30E7 16r30E8 16r30E9 16r30EA 16r30EB 16r30EC 16r30ED 16r30EE 16r30EF 16r30F0 16r30F1 16r30F2 16r30F3 16r30F4 16r30F5 16r30F6))	#(16r839F 16r83B6 #(16r391 16r392 16r393 16r394 16r395 16r396 16r397 16r398 16r399 16r39A 16r39B 16r39C 16r39D 16r39E 16r39F 16r3A0 16r3A1 16r3A3 16r3A4 16r3A5 16r3A6 16r3A7 16r3A8 16r3A9))	#(16r83BF 16r83D6 #(16r3B1 16r3B2 16r3B3 16r3B4 16r3B5 16r3B6 16r3B7 16r3B8 16r3B9 16r3BA 16r3BB 16r3BC 16r3BD 16r3BE 16r3BF 16r3C0 16r3C1 16r3C3 16r3C4 16r3C5 16r3C6 16r3C7 16r3C8 16r3C9))	#(16r8440 16r8460 #(16r410 16r411 16r412 16r413 16r414 16r415 16r401 16r416 16r417 16r418 16r419 16r41A 16r41B 16r41C 16r41D 16r41E 16r41F 16r420 16r421 16r422 16r423 16r424 16r425 16r426 16r427 16r428 16r429 16r42A 16r42B 16r42C 16r42D 16r42E 16r42F))	#(16r8470 16r847E #(16r430 16r431 16r432 16r433 16r434 16r435 16r451 16r436 16r437 16r438 16r439 16r43A 16r43B 16r43C 16r43D))	#(16r8480 16r8491 #(16r43E 16r43F 16r440 16r441 16r442 16r443 16r444 16r445 16r446 16r447 16r448 16r449 16r44A 16r44B 16r44C 16r44D 16r44E 16r44F))	#(16r849F 16r84BE #(16r2500 16r2502 16r250C 16r2510 16r2518 16r2514 16r251C 16r252C 16r2524 16r2534 16r253C 16r2501 16r2503 16r250F 16r2513 16r251B 16r2517 16r2523 16r2533 16r252B 16r253B 16r254B 16r2520 16r252F 16r2528 16r2537 16r253F 16r251D 16r2530 16r2525 16r2538 16r2542))	#(16r889F 16r88FC #(16r4E9C 16r5516 16r5A03 16r963F 16r54C0 16r611B 16r6328 16r59F6 16r9022 16r8475 16r831C 16r7A50 16r60AA 16r63E1 16r6E25 16r65ED 16r8466 16r82A6 16r9BF5 16r6893 16r5727 16r65A1 16r6271 16r5B9B 16r59D0 16r867B 16r98F4 16r7D62 16r7DBE 16r9B8E 16r6216 16r7C9F 16r88B7 16r5B89 16r5EB5 16r6309 16r6697 16r6848 16r95C7 16r978D 16r674F 16r4EE5 16r4F0A 16r4F4D 16r4F9D 16r5049 16r56F2 16r5937 16r59D4 16r5A01 16r5C09 16r60DF 16r610F 16r6170 16r6613 16r6905 16r70BA 16r754F 16r7570 16r79FB 16r7DAD 16r7DEF 16r80C3 16r840E 16r8863 16r8B02 16r9055 16r907A 16r533B 16r4E95 16r4EA5 16r57DF 16r80B2 16r90C1 16r78EF 16r4E00 16r58F1 16r6EA2 16r9038 16r7A32 16r8328 16r828B 16r9C2F 16r5141 16r5370 16r54BD 16r54E1 16r56E0 16r59FB 16r5F15 16r98F2 16r6DEB 16r80E4 16r852D))	#(16r8940 16r897E #(16r9662 16r9670 16r96A0 16r97FB 16r540B 16r53F3 16r5B87 16r70CF 16r7FBD 16r8FC2 16r96E8 16r536F 16r9D5C 16r7ABA 16r4E11 16r7893 16r81FC 16r6E26 16r5618 16r5504 16r6B1D 16r851A 16r9C3B 16r59E5 16r53A9 16r6D66 16r74DC 16r958F 16r5642 16r4E91 16r904B 16r96F2 16r834F 16r990C 16r53E1 16r55B6 16r5B30 16r5F71 16r6620 16r66F3 16r6804 16r6C38 16r6CF3 16r6D29 16r745B 16r76C8 16r7A4E 16r9834 16r82F1 16r885B 16r8A60 16r92ED 16r6DB2 16r75AB 16r76CA 16r99C5 16r60A6 16r8B01 16r8D8A 16r95B2 16r698E 16r53AD 16r5186))	#(16r8980 16r89FC #(16r5712 16r5830 16r5944 16r5BB4 16r5EF6 16r6028 16r63A9 16r63F4 16r6CBF 16r6F14 16r708E 16r7114 16r7159 16r71D5 16r733F 16r7E01 16r8276 16r82D1 16r8597 16r9060 16r925B 16r9D1B 16r5869 16r65BC 16r6C5A 16r7525 16r51F9 16r592E 16r5965 16r5F80 16r5FDC 16r62BC 16r65FA 16r6A2A 16r6B27 16r6BB4 16r738B 16r7FC1 16r8956 16r9D2C 16r9D0E 16r9EC4 16r5CA1 16r6C96 16r837B 16r5104 16r5C4B 16r61B6 16r81C6 16r6876 16r7261 16r4E59 16r4FFA 16r5378 16r6069 16r6E29 16r7A4F 16r97F3 16r4E0B 16r5316 16r4EEE 16r4F55 16r4F3D 16r4FA1 16r4F73 16r52A0 16r53EF 16r5609 16r590F 16r5AC1 16r5BB6 16r5BE1 16r79D1 16r6687 16r679C 16r67B6 16r6B4C 16r6CB3 16r706B 16r73C2 16r798D 16r79BE 16r7A3C 16r7B87 16r82B1 16r82DB 16r8304 16r8377 16r83EF 16r83D3 16r8766 16r8AB2 16r5629 16r8CA8 16r8FE6 16r904E 16r971E 16r868A 16r4FC4 16r5CE8 16r6211 16r7259 16r753B 16r81E5 16r82BD 16r86FE 16r8CC0 16r96C5 16r9913 16r99D5 16r4ECB 16r4F1A 16r89E3 16r56DE 16r584A 16r58CA 16r5EFB 16r5FEB 16r602A 16r6094 16r6062 16r61D0 16r6212 16r62D0 16r6539))	#(16r8A40 16r8A7E #(16r9B41 16r6666 16r68B0 16r6D77 16r7070 16r754C 16r7686 16r7D75 16r82A5 16r87F9 16r958B 16r968E 16r8C9D 16r51F1 16r52BE 16r5916 16r54B3 16r5BB3 16r5D16 16r6168 16r6982 16r6DAF 16r788D 16r84CB 16r8857 16r8A72 16r93A7 16r9AB8 16r6D6C 16r99A8 16r86D9 16r57A3 16r67FF 16r86CE 16r920E 16r5283 16r5687 16r5404 16r5ED3 16r62E1 16r64B9 16r683C 16r6838 16r6BBB 16r7372 16r78BA 16r7A6B 16r899A 16r89D2 16r8D6B 16r8F03 16r90ED 16r95A3 16r9694 16r9769 16r5B66 16r5CB3 16r697D 16r984D 16r984E 16r639B 16r7B20 16r6A2B))	#(16r8A80 16r8AFC #(16r6A7F 16r68B6 16r9C0D 16r6F5F 16r5272 16r559D 16r6070 16r62EC 16r6D3B 16r6E07 16r6ED1 16r845B 16r8910 16r8F44 16r4E14 16r9C39 16r53F6 16r691B 16r6A3A 16r9784 16r682A 16r515C 16r7AC3 16r84B2 16r91DC 16r938C 16r565B 16r9D28 16r6822 16r8305 16r8431 16r7CA5 16r5208 16r82C5 16r74E6 16r4E7E 16r4F83 16r51A0 16r5BD2 16r520A 16r52D8 16r52E7 16r5DFB 16r559A 16r582A 16r59E6 16r5B8C 16r5B98 16r5BDB 16r5E72 16r5E79 16r60A3 16r611F 16r6163 16r61BE 16r63DB 16r6562 16r67D1 16r6853 16r68FA 16r6B3E 16r6B53 16r6C57 16r6F22 16r6F97 16r6F45 16r74B0 16r7518 16r76E3 16r770B 16r7AFF 16r7BA1 16r7C21 16r7DE9 16r7F36 16r7FF0 16r809D 16r8266 16r839E 16r89B3 16r8ACC 16r8CAB 16r9084 16r9451 16r9593 16r9591 16r95A2 16r9665 16r97D3 16r9928 16r8218 16r4E38 16r542B 16r5CB8 16r5DCC 16r73A9 16r764C 16r773C 16r5CA9 16r7FEB 16r8D0B 16r96C1 16r9811 16r9854 16r9858 16r4F01 16r4F0E 16r5371 16r559C 16r5668 16r57FA 16r5947 16r5B09 16r5BC4 16r5C90 16r5E0C 16r5E7E 16r5FCC 16r63EE 16r673A 16r65D7 16r65E2 16r671F 16r68CB 16r68C4))	#(16r8B40 16r8B7E #(16r6A5F 16r5E30 16r6BC5 16r6C17 16r6C7D 16r757F 16r7948 16r5B63 16r7A00 16r7D00 16r5FBD 16r898F 16r8A18 16r8CB4 16r8D77 16r8ECC 16r8F1D 16r98E2 16r9A0E 16r9B3C 16r4E80 16r507D 16r5100 16r5993 16r5B9C 16r622F 16r6280 16r64EC 16r6B3A 16r72A0 16r7591 16r7947 16r7FA9 16r87FB 16r8ABC 16r8B70 16r63AC 16r83CA 16r97A0 16r5409 16r5403 16r55AB 16r6854 16r6A58 16r8A70 16r7827 16r6775 16r9ECD 16r5374 16r5BA2 16r811A 16r8650 16r9006 16r4E18 16r4E45 16r4EC7 16r4F11 16r53CA 16r5438 16r5BAE 16r5F13 16r6025 16r6551))	#(16r8B80 16r8BFC #(16r673D 16r6C42 16r6C72 16r6CE3 16r7078 16r7403 16r7A76 16r7AAE 16r7B08 16r7D1A 16r7CFE 16r7D66 16r65E7 16r725B 16r53BB 16r5C45 16r5DE8 16r62D2 16r62E0 16r6319 16r6E20 16r865A 16r8A31 16r8DDD 16r92F8 16r6F01 16r79A6 16r9B5A 16r4EA8 16r4EAB 16r4EAC 16r4F9B 16r4FA0 16r50D1 16r5147 16r7AF6 16r5171 16r51F6 16r5354 16r5321 16r537F 16r53EB 16r55AC 16r5883 16r5CE1 16r5F37 16r5F4A 16r602F 16r6050 16r606D 16r631F 16r6559 16r6A4B 16r6CC1 16r72C2 16r72ED 16r77EF 16r80F8 16r8105 16r8208 16r854E 16r90F7 16r93E1 16r97FF 16r9957 16r9A5A 16r4EF0 16r51DD 16r5C2D 16r6681 16r696D 16r5C40 16r66F2 16r6975 16r7389 16r6850 16r7C81 16r50C5 16r52E4 16r5747 16r5DFE 16r9326 16r65A4 16r6B23 16r6B3D 16r7434 16r7981 16r79BD 16r7B4B 16r7DCA 16r82B9 16r83CC 16r887F 16r895F 16r8B39 16r8FD1 16r91D1 16r541F 16r9280 16r4E5D 16r5036 16r53E5 16r533A 16r72D7 16r7396 16r77E9 16r82E6 16r8EAF 16r99C6 16r99C8 16r99D2 16r5177 16r611A 16r865E 16r55B0 16r7A7A 16r5076 16r5BD3 16r9047 16r9685 16r4E32 16r6ADB 16r91E7 16r5C51 16r5C48))	#(16r8C40 16r8C7E #(16r6398 16r7A9F 16r6C93 16r9774 16r8F61 16r7AAA 16r718A 16r9688 16r7C82 16r6817 16r7E70 16r6851 16r936C 16r52F2 16r541B 16r85AB 16r8A13 16r7FA4 16r8ECD 16r90E1 16r5366 16r8888 16r7941 16r4FC2 16r50BE 16r5211 16r5144 16r5553 16r572D 16r73EA 16r578B 16r5951 16r5F62 16r5F84 16r6075 16r6176 16r6167 16r61A9 16r63B2 16r643A 16r656C 16r666F 16r6842 16r6E13 16r7566 16r7A3D 16r7CFB 16r7D4C 16r7D99 16r7E4B 16r7F6B 16r830E 16r834A 16r86CD 16r8A08 16r8A63 16r8B66 16r8EFD 16r981A 16r9D8F 16r82B8 16r8FCE 16r9BE8))	#(16r8C80 16r8CFC #(16r5287 16r621F 16r6483 16r6FC0 16r9699 16r6841 16r5091 16r6B20 16r6C7A 16r6F54 16r7A74 16r7D50 16r8840 16r8A23 16r6708 16r4EF6 16r5039 16r5026 16r5065 16r517C 16r5238 16r5263 16r55A7 16r570F 16r5805 16r5ACC 16r5EFA 16r61B2 16r61F8 16r62F3 16r6372 16r691C 16r6A29 16r727D 16r72AC 16r732E 16r7814 16r786F 16r7D79 16r770C 16r80A9 16r898B 16r8B19 16r8CE2 16r8ED2 16r9063 16r9375 16r967A 16r9855 16r9A13 16r9E78 16r5143 16r539F 16r53B3 16r5E7B 16r5F26 16r6E1B 16r6E90 16r7384 16r73FE 16r7D43 16r8237 16r8A00 16r8AFA 16r9650 16r4E4E 16r500B 16r53E4 16r547C 16r56FA 16r59D1 16r5B64 16r5DF1 16r5EAB 16r5F27 16r6238 16r6545 16r67AF 16r6E56 16r72D0 16r7CCA 16r88B4 16r80A1 16r80E1 16r83F0 16r864E 16r8A87 16r8DE8 16r9237 16r96C7 16r9867 16r9F13 16r4E94 16r4E92 16r4F0D 16r5348 16r5449 16r543E 16r5A2F 16r5F8C 16r5FA1 16r609F 16r68A7 16r6A8E 16r745A 16r7881 16r8A9E 16r8AA4 16r8B77 16r9190 16r4E5E 16r9BC9 16r4EA4 16r4F7C 16r4FAF 16r5019 16r5016 16r5149 16r516C 16r529F 16r52B9 16r52FE 16r539A 16r53E3 16r5411))	#(16r8D40 16r8D7E #(16r540E 16r5589 16r5751 16r57A2 16r597D 16r5B54 16r5B5D 16r5B8F 16r5DE5 16r5DE7 16r5DF7 16r5E78 16r5E83 16r5E9A 16r5EB7 16r5F18 16r6052 16r614C 16r6297 16r62D8 16r63A7 16r653B 16r6602 16r6643 16r66F4 16r676D 16r6821 16r6897 16r69CB 16r6C5F 16r6D2A 16r6D69 16r6E2F 16r6E9D 16r7532 16r7687 16r786C 16r7A3F 16r7CE0 16r7D05 16r7D18 16r7D5E 16r7DB1 16r8015 16r8003 16r80AF 16r80B1 16r8154 16r818F 16r822A 16r8352 16r884C 16r8861 16r8B1B 16r8CA2 16r8CFC 16r90CA 16r9175 16r9271 16r783F 16r92FC 16r95A4 16r964D))	#(16r8D80 16r8DFC #(16r9805 16r9999 16r9AD8 16r9D3B 16r525B 16r52AB 16r53F7 16r5408 16r58D5 16r62F7 16r6FE0 16r8C6A 16r8F5F 16r9EB9 16r514B 16r523B 16r544A 16r56FD 16r7A40 16r9177 16r9D60 16r9ED2 16r7344 16r6F09 16r8170 16r7511 16r5FFD 16r60DA 16r9AA8 16r72DB 16r8FBC 16r6B64 16r9803 16r4ECA 16r56F0 16r5764 16r58BE 16r5A5A 16r6068 16r61C7 16r660F 16r6606 16r6839 16r68B1 16r6DF7 16r75D5 16r7D3A 16r826E 16r9B42 16r4E9B 16r4F50 16r53C9 16r5506 16r5D6F 16r5DE6 16r5DEE 16r67FB 16r6C99 16r7473 16r7802 16r8A50 16r9396 16r88DF 16r5750 16r5EA7 16r632B 16r50B5 16r50AC 16r518D 16r6700 16r54C9 16r585E 16r59BB 16r5BB0 16r5F69 16r624D 16r63A1 16r683D 16r6B73 16r6E08 16r707D 16r91C7 16r7280 16r7815 16r7826 16r796D 16r658E 16r7D30 16r83DC 16r88C1 16r8F09 16r969B 16r5264 16r5728 16r6750 16r7F6A 16r8CA1 16r51B4 16r5742 16r962A 16r583A 16r698A 16r80B4 16r54B2 16r5D0E 16r57FC 16r7895 16r9DFA 16r4F5C 16r524A 16r548B 16r643E 16r6628 16r6714 16r67F5 16r7A84 16r7B56 16r7D22 16r932F 16r685C 16r9BAD 16r7B39 16r5319 16r518A 16r5237))	#(16r8E40 16r8E7E #(16r5BDF 16r62F6 16r64AE 16r64E6 16r672D 16r6BBA 16r85A9 16r96D1 16r7690 16r9BD6 16r634C 16r9306 16r9BAB 16r76BF 16r6652 16r4E09 16r5098 16r53C2 16r5C71 16r60E8 16r6492 16r6563 16r685F 16r71E6 16r73CA 16r7523 16r7B97 16r7E82 16r8695 16r8B83 16r8CDB 16r9178 16r9910 16r65AC 16r66AB 16r6B8B 16r4ED5 16r4ED4 16r4F3A 16r4F7F 16r523A 16r53F8 16r53F2 16r55E3 16r56DB 16r58EB 16r59CB 16r59C9 16r59FF 16r5B50 16r5C4D 16r5E02 16r5E2B 16r5FD7 16r601D 16r6307 16r652F 16r5B5C 16r65AF 16r65BD 16r65E8 16r679D 16r6B62))	#(16r8E80 16r8EFC #(16r6B7B 16r6C0F 16r7345 16r7949 16r79C1 16r7CF8 16r7D19 16r7D2B 16r80A2 16r8102 16r81F3 16r8996 16r8A5E 16r8A69 16r8A66 16r8A8C 16r8AEE 16r8CC7 16r8CDC 16r96CC 16r98FC 16r6B6F 16r4E8B 16r4F3C 16r4F8D 16r5150 16r5B57 16r5BFA 16r6148 16r6301 16r6642 16r6B21 16r6ECB 16r6CBB 16r723E 16r74BD 16r75D4 16r78C1 16r793A 16r800C 16r8033 16r81EA 16r8494 16r8F9E 16r6C50 16r9E7F 16r5F0F 16r8B58 16r9D2B 16r7AFA 16r8EF8 16r5B8D 16r96EB 16r4E03 16r53F1 16r57F7 16r5931 16r5AC9 16r5BA4 16r6089 16r6E7F 16r6F06 16r75BE 16r8CEA 16r5B9F 16r8500 16r7BE0 16r5072 16r67F4 16r829D 16r5C61 16r854A 16r7E1E 16r820E 16r5199 16r5C04 16r6368 16r8D66 16r659C 16r716E 16r793E 16r7D17 16r8005 16r8B1D 16r8ECA 16r906E 16r86C7 16r90AA 16r501F 16r52FA 16r5C3A 16r6753 16r707C 16r7235 16r914C 16r91C8 16r932B 16r82E5 16r5BC2 16r5F31 16r60F9 16r4E3B 16r53D6 16r5B88 16r624B 16r6731 16r6B8A 16r72E9 16r73E0 16r7A2E 16r816B 16r8DA3 16r9152 16r9996 16r5112 16r53D7 16r546A 16r5BFF 16r6388 16r6A39 16r7DAC 16r9700 16r56DA 16r53CE 16r5468))	#(16r8F40 16r8F7E #(16r5B97 16r5C31 16r5DDE 16r4FEE 16r6101 16r62FE 16r6D32 16r79C0 16r79CB 16r7D42 16r7E4D 16r7FD2 16r81ED 16r821F 16r8490 16r8846 16r8972 16r8B90 16r8E74 16r8F2F 16r9031 16r914B 16r916C 16r96C6 16r919C 16r4EC0 16r4F4F 16r5145 16r5341 16r5F93 16r620E 16r67D4 16r6C41 16r6E0B 16r7363 16r7E26 16r91CD 16r9283 16r53D4 16r5919 16r5BBF 16r6DD1 16r795D 16r7E2E 16r7C9B 16r587E 16r719F 16r51FA 16r8853 16r8FF0 16r4FCA 16r5CFB 16r6625 16r77AC 16r7AE3 16r821C 16r99FF 16r51C6 16r5FAA 16r65EC 16r696F 16r6B89 16r6DF3))	#(16r8F80 16r8FFC #(16r6E96 16r6F64 16r76FE 16r7D14 16r5DE1 16r9075 16r9187 16r9806 16r51E6 16r521D 16r6240 16r6691 16r66D9 16r6E1A 16r5EB6 16r7DD2 16r7F72 16r66F8 16r85AF 16r85F7 16r8AF8 16r52A9 16r53D9 16r5973 16r5E8F 16r5F90 16r6055 16r92E4 16r9664 16r50B7 16r511F 16r52DD 16r5320 16r5347 16r53EC 16r54E8 16r5546 16r5531 16r5617 16r5968 16r59BE 16r5A3C 16r5BB5 16r5C06 16r5C0F 16r5C11 16r5C1A 16r5E84 16r5E8A 16r5EE0 16r5F70 16r627F 16r6284 16r62DB 16r638C 16r6377 16r6607 16r660C 16r662D 16r6676 16r677E 16r68A2 16r6A1F 16r6A35 16r6CBC 16r6D88 16r6E09 16r6E58 16r713C 16r7126 16r7167 16r75C7 16r7701 16r785D 16r7901 16r7965 16r79F0 16r7AE0 16r7B11 16r7CA7 16r7D39 16r8096 16r83D6 16r848B 16r8549 16r885D 16r88F3 16r8A1F 16r8A3C 16r8A54 16r8A73 16r8C61 16r8CDE 16r91A4 16r9266 16r937E 16r9418 16r969C 16r9798 16r4E0A 16r4E08 16r4E1E 16r4E57 16r5197 16r5270 16r57CE 16r5834 16r58CC 16r5B22 16r5E38 16r60C5 16r64FE 16r6761 16r6756 16r6D44 16r72B6 16r7573 16r7A63 16r84B8 16r8B72 16r91B8 16r9320 16r5631 16r57F4 16r98FE))	#(16r9040 16r907E #(16r62ED 16r690D 16r6B96 16r71ED 16r7E54 16r8077 16r8272 16r89E6 16r98DF 16r8755 16r8FB1 16r5C3B 16r4F38 16r4FE1 16r4FB5 16r5507 16r5A20 16r5BDD 16r5BE9 16r5FC3 16r614E 16r632F 16r65B0 16r664B 16r68EE 16r699B 16r6D78 16r6DF1 16r7533 16r75B9 16r771F 16r795E 16r79E6 16r7D33 16r81E3 16r82AF 16r85AA 16r89AA 16r8A3A 16r8EAB 16r8F9B 16r9032 16r91DD 16r9707 16r4EBA 16r4EC1 16r5203 16r5875 16r58EC 16r5C0B 16r751A 16r5C3D 16r814E 16r8A0A 16r8FC5 16r9663 16r976D 16r7B25 16r8ACF 16r9808 16r9162 16r56F3 16r53A8))	#(16r9080 16r90FC #(16r9017 16r5439 16r5782 16r5E25 16r63A8 16r6C34 16r708A 16r7761 16r7C8B 16r7FE0 16r8870 16r9042 16r9154 16r9310 16r9318 16r968F 16r745E 16r9AC4 16r5D07 16r5D69 16r6570 16r67A2 16r8DA8 16r96DB 16r636E 16r6749 16r6919 16r83C5 16r9817 16r96C0 16r88FE 16r6F84 16r647A 16r5BF8 16r4E16 16r702C 16r755D 16r662F 16r51C4 16r5236 16r52E2 16r59D3 16r5F81 16r6027 16r6210 16r653F 16r6574 16r661F 16r6674 16r68F2 16r6816 16r6B63 16r6E05 16r7272 16r751F 16r76DB 16r7CBE 16r8056 16r58F0 16r88FD 16r897F 16r8AA0 16r8A93 16r8ACB 16r901D 16r9192 16r9752 16r9759 16r6589 16r7A0E 16r8106 16r96BB 16r5E2D 16r60DC 16r621A 16r65A5 16r6614 16r6790 16r77F3 16r7A4D 16r7C4D 16r7E3E 16r810A 16r8CAC 16r8D64 16r8DE1 16r8E5F 16r78A9 16r5207 16r62D9 16r63A5 16r6442 16r6298 16r8A2D 16r7A83 16r7BC0 16r8AAC 16r96EA 16r7D76 16r820C 16r8749 16r4ED9 16r5148 16r5343 16r5360 16r5BA3 16r5C02 16r5C16 16r5DDD 16r6226 16r6247 16r64B0 16r6813 16r6834 16r6CC9 16r6D45 16r6D17 16r67D3 16r6F5C 16r714E 16r717D 16r65CB 16r7A7F 16r7BAD 16r7DDA))	#(16r9140 16r917E #(16r7E4A 16r7FA8 16r817A 16r821B 16r8239 16r85A6 16r8A6E 16r8CCE 16r8DF5 16r9078 16r9077 16r92AD 16r9291 16r9583 16r9BAE 16r524D 16r5584 16r6F38 16r7136 16r5168 16r7985 16r7E55 16r81B3 16r7CCE 16r564C 16r5851 16r5CA8 16r63AA 16r66FE 16r66FD 16r695A 16r72D9 16r758F 16r758E 16r790E 16r7956 16r79DF 16r7C97 16r7D20 16r7D44 16r8607 16r8A34 16r963B 16r9061 16r9F20 16r50E7 16r5275 16r53CC 16r53E2 16r5009 16r55AA 16r58EE 16r594F 16r723D 16r5B8B 16r5C64 16r531D 16r60E3 16r60F3 16r635C 16r6383 16r633F 16r63BB))	#(16r9180 16r91FC #(16r64CD 16r65E9 16r66F9 16r5DE3 16r69CD 16r69FD 16r6F15 16r71E5 16r4E89 16r75E9 16r76F8 16r7A93 16r7CDF 16r7DCF 16r7D9C 16r8061 16r8349 16r8358 16r846C 16r84BC 16r85FB 16r88C5 16r8D70 16r9001 16r906D 16r9397 16r971C 16r9A12 16r50CF 16r5897 16r618E 16r81D3 16r8535 16r8D08 16r9020 16r4FC3 16r5074 16r5247 16r5373 16r606F 16r6349 16r675F 16r6E2C 16r8DB3 16r901F 16r4FD7 16r5C5E 16r8CCA 16r65CF 16r7D9A 16r5352 16r8896 16r5176 16r63C3 16r5B58 16r5B6B 16r5C0A 16r640D 16r6751 16r905C 16r4ED6 16r591A 16r592A 16r6C70 16r8A51 16r553E 16r5815 16r59A5 16r60F0 16r6253 16r67C1 16r8235 16r6955 16r9640 16r99C4 16r9A28 16r4F53 16r5806 16r5BFE 16r8010 16r5CB1 16r5E2F 16r5F85 16r6020 16r614B 16r6234 16r66FF 16r6CF0 16r6EDE 16r80CE 16r817F 16r82D4 16r888B 16r8CB8 16r9000 16r902E 16r968A 16r9EDB 16r9BDB 16r4EE3 16r53F0 16r5927 16r7B2C 16r918D 16r984C 16r9DF9 16r6EDD 16r7027 16r5353 16r5544 16r5B85 16r6258 16r629E 16r62D3 16r6CA2 16r6FEF 16r7422 16r8A17 16r9438 16r6FC1 16r8AFE 16r8338 16r51E7 16r86F8 16r53EA))	#(16r9240 16r927E #(16r53E9 16r4F46 16r9054 16r8FB0 16r596A 16r8131 16r5DFD 16r7AEA 16r8FBF 16r68DA 16r8C37 16r72F8 16r9C48 16r6A3D 16r8AB0 16r4E39 16r5358 16r5606 16r5766 16r62C5 16r63A2 16r65E6 16r6B4E 16r6DE1 16r6E5B 16r70AD 16r77ED 16r7AEF 16r7BAA 16r7DBB 16r803D 16r80C6 16r86CB 16r8A95 16r935B 16r56E3 16r58C7 16r5F3E 16r65AD 16r6696 16r6A80 16r6BB5 16r7537 16r8AC7 16r5024 16r77E5 16r5730 16r5F1B 16r6065 16r667A 16r6C60 16r75F4 16r7A1A 16r7F6E 16r81F4 16r8718 16r9045 16r99B3 16r7BC9 16r755C 16r7AF9 16r7B51 16r84C4))	#(16r9280 16r92FC #(16r9010 16r79E9 16r7A92 16r8336 16r5AE1 16r7740 16r4E2D 16r4EF2 16r5B99 16r5FE0 16r62BD 16r663C 16r67F1 16r6CE8 16r866B 16r8877 16r8A3B 16r914E 16r92F3 16r99D0 16r6A17 16r7026 16r732A 16r82E7 16r8457 16r8CAF 16r4E01 16r5146 16r51CB 16r558B 16r5BF5 16r5E16 16r5E33 16r5E81 16r5F14 16r5F35 16r5F6B 16r5FB4 16r61F2 16r6311 16r66A2 16r671D 16r6F6E 16r7252 16r753A 16r773A 16r8074 16r8139 16r8178 16r8776 16r8ABF 16r8ADC 16r8D85 16r8DF3 16r929A 16r9577 16r9802 16r9CE5 16r52C5 16r6357 16r76F4 16r6715 16r6C88 16r73CD 16r8CC3 16r93AE 16r9673 16r6D25 16r589C 16r690E 16r69CC 16r8FFD 16r939A 16r75DB 16r901A 16r585A 16r6802 16r63B4 16r69FB 16r4F43 16r6F2C 16r67D8 16r8FBB 16r8526 16r7DB4 16r9354 16r693F 16r6F70 16r576A 16r58F7 16r5B2C 16r7D2C 16r722A 16r540A 16r91E3 16r9DB4 16r4EAD 16r4F4E 16r505C 16r5075 16r5243 16r8C9E 16r5448 16r5824 16r5B9A 16r5E1D 16r5E95 16r5EAD 16r5EF7 16r5F1F 16r608C 16r62B5 16r633A 16r63D0 16r68AF 16r6C40 16r7887 16r798E 16r7A0B 16r7DE0 16r8247 16r8A02 16r8AE6 16r8E44 16r9013))	#(16r9340 16r937E #(16r90B8 16r912D 16r91D8 16r9F0E 16r6CE5 16r6458 16r64E2 16r6575 16r6EF4 16r7684 16r7B1B 16r9069 16r93D1 16r6EBA 16r54F2 16r5FB9 16r64A4 16r8F4D 16r8FED 16r9244 16r5178 16r586B 16r5929 16r5C55 16r5E97 16r6DFB 16r7E8F 16r751C 16r8CBC 16r8EE2 16r985B 16r70B9 16r4F1D 16r6BBF 16r6FB1 16r7530 16r96FB 16r514E 16r5410 16r5835 16r5857 16r59AC 16r5C60 16r5F92 16r6597 16r675C 16r6E21 16r767B 16r83DF 16r8CED 16r9014 16r90FD 16r934D 16r7825 16r783A 16r52AA 16r5EA6 16r571F 16r5974 16r6012 16r5012 16r515A 16r51AC))	#(16r9380 16r93FC #(16r51CD 16r5200 16r5510 16r5854 16r5858 16r5957 16r5B95 16r5CF6 16r5D8B 16r60BC 16r6295 16r642D 16r6771 16r6843 16r68BC 16r68DF 16r76D7 16r6DD8 16r6E6F 16r6D9B 16r706F 16r71C8 16r5F53 16r75D8 16r7977 16r7B49 16r7B54 16r7B52 16r7CD6 16r7D71 16r5230 16r8463 16r8569 16r85E4 16r8A0E 16r8B04 16r8C46 16r8E0F 16r9003 16r900F 16r9419 16r9676 16r982D 16r9A30 16r95D8 16r50CD 16r52D5 16r540C 16r5802 16r5C0E 16r61A7 16r649E 16r6D1E 16r77B3 16r7AE5 16r80F4 16r8404 16r9053 16r9285 16r5CE0 16r9D07 16r533F 16r5F97 16r5FB3 16r6D9C 16r7279 16r7763 16r79BF 16r7BE4 16r6BD2 16r72EC 16r8AAD 16r6803 16r6A61 16r51F8 16r7A81 16r6934 16r5C4A 16r9CF6 16r82EB 16r5BC5 16r9149 16r701E 16r5678 16r5C6F 16r60C7 16r6566 16r6C8C 16r8C5A 16r9041 16r9813 16r5451 16r66C7 16r920D 16r5948 16r90A3 16r5185 16r4E4D 16r51EA 16r8599 16r8B0E 16r7058 16r637A 16r934B 16r6962 16r99B4 16r7E04 16r7577 16r5357 16r6960 16r8EDF 16r96E3 16r6C5D 16r4E8C 16r5C3C 16r5F10 16r8FE9 16r5302 16r8CD1 16r8089 16r8679 16r5EFF 16r65E5 16r4E73 16r5165))	#(16r9440 16r947E #(16r5982 16r5C3F 16r97EE 16r4EFB 16r598A 16r5FCD 16r8A8D 16r6FE1 16r79B0 16r7962 16r5BE7 16r8471 16r732B 16r71B1 16r5E74 16r5FF5 16r637B 16r649A 16r71C3 16r7C98 16r4E43 16r5EFC 16r4E4B 16r57DC 16r56A2 16r60A9 16r6FC3 16r7D0D 16r80FD 16r8133 16r81BF 16r8FB2 16r8997 16r86A4 16r5DF4 16r628A 16r64AD 16r8987 16r6777 16r6CE2 16r6D3E 16r7436 16r7834 16r5A46 16r7F75 16r82AD 16r99AC 16r4FF3 16r5EC3 16r62DD 16r6392 16r6557 16r676F 16r76C3 16r724C 16r80CC 16r80BA 16r8F29 16r914D 16r500D 16r57F9 16r5A92 16r6885))	#(16r9480 16r94FC #(16r6973 16r7164 16r72FD 16r8CB7 16r58F2 16r8CE0 16r966A 16r9019 16r877F 16r79E4 16r77E7 16r8429 16r4F2F 16r5265 16r535A 16r62CD 16r67CF 16r6CCA 16r767D 16r7B94 16r7C95 16r8236 16r8584 16r8FEB 16r66DD 16r6F20 16r7206 16r7E1B 16r83AB 16r99C1 16r9EA6 16r51FD 16r7BB1 16r7872 16r7BB8 16r8087 16r7B48 16r6AE8 16r5E61 16r808C 16r7551 16r7560 16r516B 16r9262 16r6E8C 16r767A 16r9197 16r9AEA 16r4F10 16r7F70 16r629C 16r7B4F 16r95A5 16r9CE9 16r567A 16r5859 16r86E4 16r96BC 16r4F34 16r5224 16r534A 16r53CD 16r53DB 16r5E06 16r642C 16r6591 16r677F 16r6C3E 16r6C4E 16r7248 16r72AF 16r73ED 16r7554 16r7E41 16r822C 16r85E9 16r8CA9 16r7BC4 16r91C6 16r7169 16r9812 16r98EF 16r633D 16r6669 16r756A 16r76E4 16r78D0 16r8543 16r86EE 16r532A 16r5351 16r5426 16r5983 16r5E87 16r5F7C 16r60B2 16r6249 16r6279 16r62AB 16r6590 16r6BD4 16r6CCC 16r75B2 16r76AE 16r7891 16r79D8 16r7DCB 16r7F77 16r80A5 16r88AB 16r8AB9 16r8CBB 16r907F 16r975E 16r98DB 16r6A0B 16r7C38 16r5099 16r5C3E 16r5FAE 16r6787 16r6BD8 16r7435 16r7709 16r7F8E))	#(16r9540 16r957E #(16r9F3B 16r67CA 16r7A17 16r5339 16r758B 16r9AED 16r5F66 16r819D 16r83F1 16r8098 16r5F3C 16r5FC5 16r7562 16r7B46 16r903C 16r6867 16r59EB 16r5A9B 16r7D10 16r767E 16r8B2C 16r4FF5 16r5F6A 16r6A19 16r6C37 16r6F02 16r74E2 16r7968 16r8868 16r8A55 16r8C79 16r5EDF 16r63CF 16r75C5 16r79D2 16r82D7 16r9328 16r92F2 16r849C 16r86ED 16r9C2D 16r54C1 16r5F6C 16r658C 16r6D5C 16r7015 16r8CA7 16r8CD3 16r983B 16r654F 16r74F6 16r4E0D 16r4ED8 16r57E0 16r592B 16r5A66 16r5BCC 16r51A8 16r5E03 16r5E9C 16r6016 16r6276 16r6577))	#(16r9580 16r95FC #(16r65A7 16r666E 16r6D6E 16r7236 16r7B26 16r8150 16r819A 16r8299 16r8B5C 16r8CA0 16r8CE6 16r8D74 16r961C 16r9644 16r4FAE 16r64AB 16r6B66 16r821E 16r8461 16r856A 16r90E8 16r5C01 16r6953 16r98A8 16r847A 16r8557 16r4F0F 16r526F 16r5FA9 16r5E45 16r670D 16r798F 16r8179 16r8907 16r8986 16r6DF5 16r5F17 16r6255 16r6CB8 16r4ECF 16r7269 16r9B92 16r5206 16r543B 16r5674 16r58B3 16r61A4 16r626E 16r711A 16r596E 16r7C89 16r7CDE 16r7D1B 16r96F0 16r6587 16r805E 16r4E19 16r4F75 16r5175 16r5840 16r5E63 16r5E73 16r5F0A 16r67C4 16r4E26 16r853D 16r9589 16r965B 16r7C73 16r9801 16r50FB 16r58C1 16r7656 16r78A7 16r5225 16r77A5 16r8511 16r7B86 16r504F 16r5909 16r7247 16r7BC7 16r7DE8 16r8FBA 16r8FD4 16r904D 16r4FBF 16r52C9 16r5A29 16r5F01 16r97AD 16r4FDD 16r8217 16r92EA 16r5703 16r6355 16r6B69 16r752B 16r88DC 16r8F14 16r7A42 16r52DF 16r5893 16r6155 16r620A 16r66AE 16r6BCD 16r7C3F 16r83E9 16r5023 16r4FF8 16r5305 16r5446 16r5831 16r5949 16r5B9D 16r5CF0 16r5CEF 16r5D29 16r5E96 16r62B1 16r6367 16r653E 16r65B9 16r670B))	#(16r9640 16r967E #(16r6CD5 16r6CE1 16r70F9 16r7832 16r7E2B 16r80DE 16r82B3 16r840C 16r84EC 16r8702 16r8912 16r8A2A 16r8C4A 16r90A6 16r92D2 16r98FD 16r9CF3 16r9D6C 16r4E4F 16r4EA1 16r508D 16r5256 16r574A 16r59A8 16r5E3D 16r5FD8 16r5FD9 16r623F 16r66B4 16r671B 16r67D0 16r68D2 16r5192 16r7D21 16r80AA 16r81A8 16r8B00 16r8C8C 16r8CBF 16r927E 16r9632 16r5420 16r982C 16r5317 16r50D5 16r535C 16r58A8 16r64B2 16r6734 16r7267 16r7766 16r7A46 16r91E6 16r52C3 16r6CA1 16r6B86 16r5800 16r5E4C 16r5954 16r672C 16r7FFB 16r51E1 16r76C6))	#(16r9680 16r96FC #(16r6469 16r78E8 16r9B54 16r9EBB 16r57CB 16r59B9 16r6627 16r679A 16r6BCE 16r54E9 16r69D9 16r5E55 16r819C 16r6795 16r9BAA 16r67FE 16r9C52 16r685D 16r4EA6 16r4FE3 16r53C8 16r62B9 16r672B 16r6CAB 16r8FC4 16r4FAD 16r7E6D 16r9EBF 16r4E07 16r6162 16r6E80 16r6F2B 16r8513 16r5473 16r672A 16r9B45 16r5DF3 16r7B95 16r5CAC 16r5BC6 16r871C 16r6E4A 16r84D1 16r7A14 16r8108 16r5999 16r7C8D 16r6C11 16r7720 16r52D9 16r5922 16r7121 16r725F 16r77DB 16r9727 16r9D61 16r690B 16r5A7F 16r5A18 16r51A5 16r540D 16r547D 16r660E 16r76DF 16r8FF7 16r9298 16r9CF4 16r59EA 16r725D 16r6EC5 16r514D 16r68C9 16r7DBF 16r7DEC 16r9762 16r9EBA 16r6478 16r6A21 16r8302 16r5984 16r5B5F 16r6BDB 16r731B 16r76F2 16r7DB2 16r8017 16r8499 16r5132 16r6728 16r9ED9 16r76EE 16r6762 16r52FF 16r9905 16r5C24 16r623B 16r7C7E 16r8CB0 16r554F 16r60B6 16r7D0B 16r9580 16r5301 16r4E5F 16r51B6 16r591C 16r723A 16r8036 16r91CE 16r5F25 16r77E2 16r5384 16r5F79 16r7D04 16r85AC 16r8A33 16r8E8D 16r9756 16r67F3 16r85AE 16r9453 16r6109 16r6108 16r6CB9 16r7652))	#(16r9740 16r977E #(16r8AED 16r8F38 16r552F 16r4F51 16r512A 16r52C7 16r53CB 16r5BA5 16r5E7D 16r60A0 16r6182 16r63D6 16r6709 16r67DA 16r6E67 16r6D8C 16r7336 16r7337 16r7531 16r7950 16r88D5 16r8A98 16r904A 16r9091 16r90F5 16r96C4 16r878D 16r5915 16r4E88 16r4F59 16r4E0E 16r8A89 16r8F3F 16r9810 16r50AD 16r5E7C 16r5996 16r5BB9 16r5EB8 16r63DA 16r63FA 16r64C1 16r66DC 16r694A 16r69D8 16r6D0B 16r6EB6 16r7194 16r7528 16r7AAF 16r7F8A 16r8000 16r8449 16r84C9 16r8981 16r8B21 16r8E0A 16r9065 16r967D 16r990A 16r617E 16r6291 16r6B32))	#(16r9780 16r97FC #(16r6C83 16r6D74 16r7FCC 16r7FFC 16r6DC0 16r7F85 16r87BA 16r88F8 16r6765 16r83B1 16r983C 16r96F7 16r6D1B 16r7D61 16r843D 16r916A 16r4E71 16r5375 16r5D50 16r6B04 16r6FEB 16r85CD 16r862D 16r89A7 16r5229 16r540F 16r5C65 16r674E 16r68A8 16r7406 16r7483 16r75E2 16r88CF 16r88E1 16r91CC 16r96E2 16r9678 16r5F8B 16r7387 16r7ACB 16r844E 16r63A0 16r7565 16r5289 16r6D41 16r6E9C 16r7409 16r7559 16r786B 16r7C92 16r9686 16r7ADC 16r9F8D 16r4FB6 16r616E 16r65C5 16r865C 16r4E86 16r4EAE 16r50DA 16r4E21 16r51CC 16r5BEE 16r6599 16r6881 16r6DBC 16r731F 16r7642 16r77AD 16r7A1C 16r7CE7 16r826F 16r8AD2 16r907C 16r91CF 16r9675 16r9818 16r529B 16r7DD1 16r502B 16r5398 16r6797 16r6DCB 16r71D0 16r7433 16r81E8 16r8F2A 16r96A3 16r9C57 16r9E9F 16r7460 16r5841 16r6D99 16r7D2F 16r985E 16r4EE4 16r4F36 16r4F8B 16r51B7 16r52B1 16r5DBA 16r601C 16r73B2 16r793C 16r82D3 16r9234 16r96B7 16r96F6 16r970A 16r9E97 16r9F62 16r66A6 16r6B74 16r5217 16r52A3 16r70C8 16r88C2 16r5EC9 16r604B 16r6190 16r6F23 16r7149 16r7C3E 16r7DF4 16r806F))	#(16r9840 16r9872 #(16r84EE 16r9023 16r932C 16r5442 16r9B6F 16r6AD3 16r7089 16r8CC2 16r8DEF 16r9732 16r52B4 16r5A41 16r5ECA 16r5F04 16r6717 16r697C 16r6994 16r6D6A 16r6F0F 16r7262 16r72FC 16r7BED 16r8001 16r807E 16r874B 16r90CE 16r516D 16r9E93 16r7984 16r808B 16r9332 16r8AD6 16r502D 16r548C 16r8A71 16r6B6A 16r8CC4 16r8107 16r60D1 16r67A0 16r9DF2 16r4E99 16r4E98 16r9C10 16r8A6B 16r85C1 16r8568 16r6900 16r6E7E 16r7897 16r8155))	#(16r989F 16r98FC #(16r5F0C 16r4E10 16r4E15 16r4E2A 16r4E31 16r4E36 16r4E3C 16r4E3F 16r4E42 16r4E56 16r4E58 16r4E82 16r4E85 16r8C6B 16r4E8A 16r8212 16r5F0D 16r4E8E 16r4E9E 16r4E9F 16r4EA0 16r4EA2 16r4EB0 16r4EB3 16r4EB6 16r4ECE 16r4ECD 16r4EC4 16r4EC6 16r4EC2 16r4ED7 16r4EDE 16r4EED 16r4EDF 16r4EF7 16r4F09 16r4F5A 16r4F30 16r4F5B 16r4F5D 16r4F57 16r4F47 16r4F76 16r4F88 16r4F8F 16r4F98 16r4F7B 16r4F69 16r4F70 16r4F91 16r4F6F 16r4F86 16r4F96 16r5118 16r4FD4 16r4FDF 16r4FCE 16r4FD8 16r4FDB 16r4FD1 16r4FDA 16r4FD0 16r4FE4 16r4FE5 16r501A 16r5028 16r5014 16r502A 16r5025 16r5005 16r4F1C 16r4FF6 16r5021 16r5029 16r502C 16r4FFE 16r4FEF 16r5011 16r5006 16r5043 16r5047 16r6703 16r5055 16r5050 16r5048 16r505A 16r5056 16r506C 16r5078 16r5080 16r509A 16r5085 16r50B4 16r50B2))	#(16r9940 16r997E #(16r50C9 16r50CA 16r50B3 16r50C2 16r50D6 16r50DE 16r50E5 16r50ED 16r50E3 16r50EE 16r50F9 16r50F5 16r5109 16r5101 16r5102 16r5116 16r5115 16r5114 16r511A 16r5121 16r513A 16r5137 16r513C 16r513B 16r513F 16r5140 16r5152 16r514C 16r5154 16r5162 16r7AF8 16r5169 16r516A 16r516E 16r5180 16r5182 16r56D8 16r518C 16r5189 16r518F 16r5191 16r5193 16r5195 16r5196 16r51A4 16r51A6 16r51A2 16r51A9 16r51AA 16r51AB 16r51B3 16r51B1 16r51B2 16r51B0 16r51B5 16r51BD 16r51C5 16r51C9 16r51DB 16r51E0 16r8655 16r51E9 16r51ED))	#(16r9980 16r99FC #(16r51F0 16r51F5 16r51FE 16r5204 16r520B 16r5214 16r520E 16r5227 16r522A 16r522E 16r5233 16r5239 16r524F 16r5244 16r524B 16r524C 16r525E 16r5254 16r526A 16r5274 16r5269 16r5273 16r527F 16r527D 16r528D 16r5294 16r5292 16r5271 16r5288 16r5291 16r8FA8 16r8FA7 16r52AC 16r52AD 16r52BC 16r52B5 16r52C1 16r52CD 16r52D7 16r52DE 16r52E3 16r52E6 16r98ED 16r52E0 16r52F3 16r52F5 16r52F8 16r52F9 16r5306 16r5308 16r7538 16r530D 16r5310 16r530F 16r5315 16r531A 16r5323 16r532F 16r5331 16r5333 16r5338 16r5340 16r5346 16r5345 16r4E17 16r5349 16r534D 16r51D6 16r535E 16r5369 16r536E 16r5918 16r537B 16r5377 16r5382 16r5396 16r53A0 16r53A6 16r53A5 16r53AE 16r53B0 16r53B6 16r53C3 16r7C12 16r96D9 16r53DF 16r66FC 16r71EE 16r53EE 16r53E8 16r53ED 16r53FA 16r5401 16r543D 16r5440 16r542C 16r542D 16r543C 16r542E 16r5436 16r5429 16r541D 16r544E 16r548F 16r5475 16r548E 16r545F 16r5471 16r5477 16r5470 16r5492 16r547B 16r5480 16r5476 16r5484 16r5490 16r5486 16r54C7 16r54A2 16r54B8 16r54A5 16r54AC 16r54C4 16r54C8 16r54A8))	#(16r9A40 16r9A7E #(16r54AB 16r54C2 16r54A4 16r54BE 16r54BC 16r54D8 16r54E5 16r54E6 16r550F 16r5514 16r54FD 16r54EE 16r54ED 16r54FA 16r54E2 16r5539 16r5540 16r5563 16r554C 16r552E 16r555C 16r5545 16r5556 16r5557 16r5538 16r5533 16r555D 16r5599 16r5580 16r54AF 16r558A 16r559F 16r557B 16r557E 16r5598 16r559E 16r55AE 16r557C 16r5583 16r55A9 16r5587 16r55A8 16r55DA 16r55C5 16r55DF 16r55C4 16r55DC 16r55E4 16r55D4 16r5614 16r55F7 16r5616 16r55FE 16r55FD 16r561B 16r55F9 16r564E 16r5650 16r71DF 16r5634 16r5636 16r5632 16r5638))	#(16r9A80 16r9AFC #(16r566B 16r5664 16r562F 16r566C 16r566A 16r5686 16r5680 16r568A 16r56A0 16r5694 16r568F 16r56A5 16r56AE 16r56B6 16r56B4 16r56C2 16r56BC 16r56C1 16r56C3 16r56C0 16r56C8 16r56CE 16r56D1 16r56D3 16r56D7 16r56EE 16r56F9 16r5700 16r56FF 16r5704 16r5709 16r5708 16r570B 16r570D 16r5713 16r5718 16r5716 16r55C7 16r571C 16r5726 16r5737 16r5738 16r574E 16r573B 16r5740 16r574F 16r5769 16r57C0 16r5788 16r5761 16r577F 16r5789 16r5793 16r57A0 16r57B3 16r57A4 16r57AA 16r57B0 16r57C3 16r57C6 16r57D4 16r57D2 16r57D3 16r580A 16r57D6 16r57E3 16r580B 16r5819 16r581D 16r5872 16r5821 16r5862 16r584B 16r5870 16r6BC0 16r5852 16r583D 16r5879 16r5885 16r58B9 16r589F 16r58AB 16r58BA 16r58DE 16r58BB 16r58B8 16r58AE 16r58C5 16r58D3 16r58D1 16r58D7 16r58D9 16r58D8 16r58E5 16r58DC 16r58E4 16r58DF 16r58EF 16r58FA 16r58F9 16r58FB 16r58FC 16r58FD 16r5902 16r590A 16r5910 16r591B 16r68A6 16r5925 16r592C 16r592D 16r5932 16r5938 16r593E 16r7AD2 16r5955 16r5950 16r594E 16r595A 16r5958 16r5962 16r5960 16r5967 16r596C 16r5969))	#(16r9B40 16r9B7E #(16r5978 16r5981 16r599D 16r4F5E 16r4FAB 16r59A3 16r59B2 16r59C6 16r59E8 16r59DC 16r598D 16r59D9 16r59DA 16r5A25 16r5A1F 16r5A11 16r5A1C 16r5A09 16r5A1A 16r5A40 16r5A6C 16r5A49 16r5A35 16r5A36 16r5A62 16r5A6A 16r5A9A 16r5ABC 16r5ABE 16r5ACB 16r5AC2 16r5ABD 16r5AE3 16r5AD7 16r5AE6 16r5AE9 16r5AD6 16r5AFA 16r5AFB 16r5B0C 16r5B0B 16r5B16 16r5B32 16r5AD0 16r5B2A 16r5B36 16r5B3E 16r5B43 16r5B45 16r5B40 16r5B51 16r5B55 16r5B5A 16r5B5B 16r5B65 16r5B69 16r5B70 16r5B73 16r5B75 16r5B78 16r6588 16r5B7A 16r5B80))	#(16r9B80 16r9BFC #(16r5B83 16r5BA6 16r5BB8 16r5BC3 16r5BC7 16r5BC9 16r5BD4 16r5BD0 16r5BE4 16r5BE6 16r5BE2 16r5BDE 16r5BE5 16r5BEB 16r5BF0 16r5BF6 16r5BF3 16r5C05 16r5C07 16r5C08 16r5C0D 16r5C13 16r5C20 16r5C22 16r5C28 16r5C38 16r5C39 16r5C41 16r5C46 16r5C4E 16r5C53 16r5C50 16r5C4F 16r5B71 16r5C6C 16r5C6E 16r4E62 16r5C76 16r5C79 16r5C8C 16r5C91 16r5C94 16r599B 16r5CAB 16r5CBB 16r5CB6 16r5CBC 16r5CB7 16r5CC5 16r5CBE 16r5CC7 16r5CD9 16r5CE9 16r5CFD 16r5CFA 16r5CED 16r5D8C 16r5CEA 16r5D0B 16r5D15 16r5D17 16r5D5C 16r5D1F 16r5D1B 16r5D11 16r5D14 16r5D22 16r5D1A 16r5D19 16r5D18 16r5D4C 16r5D52 16r5D4E 16r5D4B 16r5D6C 16r5D73 16r5D76 16r5D87 16r5D84 16r5D82 16r5DA2 16r5D9D 16r5DAC 16r5DAE 16r5DBD 16r5D90 16r5DB7 16r5DBC 16r5DC9 16r5DCD 16r5DD3 16r5DD2 16r5DD6 16r5DDB 16r5DEB 16r5DF2 16r5DF5 16r5E0B 16r5E1A 16r5E19 16r5E11 16r5E1B 16r5E36 16r5E37 16r5E44 16r5E43 16r5E40 16r5E4E 16r5E57 16r5E54 16r5E5F 16r5E62 16r5E64 16r5E47 16r5E75 16r5E76 16r5E7A 16r9EBC 16r5E7F 16r5EA0 16r5EC1 16r5EC2 16r5EC8 16r5ED0 16r5ECF))	#(16r9C40 16r9C7E #(16r5ED6 16r5EE3 16r5EDD 16r5EDA 16r5EDB 16r5EE2 16r5EE1 16r5EE8 16r5EE9 16r5EEC 16r5EF1 16r5EF3 16r5EF0 16r5EF4 16r5EF8 16r5EFE 16r5F03 16r5F09 16r5F5D 16r5F5C 16r5F0B 16r5F11 16r5F16 16r5F29 16r5F2D 16r5F38 16r5F41 16r5F48 16r5F4C 16r5F4E 16r5F2F 16r5F51 16r5F56 16r5F57 16r5F59 16r5F61 16r5F6D 16r5F73 16r5F77 16r5F83 16r5F82 16r5F7F 16r5F8A 16r5F88 16r5F91 16r5F87 16r5F9E 16r5F99 16r5F98 16r5FA0 16r5FA8 16r5FAD 16r5FBC 16r5FD6 16r5FFB 16r5FE4 16r5FF8 16r5FF1 16r5FDD 16r60B3 16r5FFF 16r6021 16r6060))	#(16r9C80 16r9CFC #(16r6019 16r6010 16r6029 16r600E 16r6031 16r601B 16r6015 16r602B 16r6026 16r600F 16r603A 16r605A 16r6041 16r606A 16r6077 16r605F 16r604A 16r6046 16r604D 16r6063 16r6043 16r6064 16r6042 16r606C 16r606B 16r6059 16r6081 16r608D 16r60E7 16r6083 16r609A 16r6084 16r609B 16r6096 16r6097 16r6092 16r60A7 16r608B 16r60E1 16r60B8 16r60E0 16r60D3 16r60B4 16r5FF0 16r60BD 16r60C6 16r60B5 16r60D8 16r614D 16r6115 16r6106 16r60F6 16r60F7 16r6100 16r60F4 16r60FA 16r6103 16r6121 16r60FB 16r60F1 16r610D 16r610E 16r6147 16r613E 16r6128 16r6127 16r614A 16r613F 16r613C 16r612C 16r6134 16r613D 16r6142 16r6144 16r6173 16r6177 16r6158 16r6159 16r615A 16r616B 16r6174 16r616F 16r6165 16r6171 16r615F 16r615D 16r6153 16r6175 16r6199 16r6196 16r6187 16r61AC 16r6194 16r619A 16r618A 16r6191 16r61AB 16r61AE 16r61CC 16r61CA 16r61C9 16r61F7 16r61C8 16r61C3 16r61C6 16r61BA 16r61CB 16r7F79 16r61CD 16r61E6 16r61E3 16r61F6 16r61FA 16r61F4 16r61FF 16r61FD 16r61FC 16r61FE 16r6200 16r6208 16r6209 16r620D 16r620C 16r6214 16r621B))	#(16r9D40 16r9D7E #(16r621E 16r6221 16r622A 16r622E 16r6230 16r6232 16r6233 16r6241 16r624E 16r625E 16r6263 16r625B 16r6260 16r6268 16r627C 16r6282 16r6289 16r627E 16r6292 16r6293 16r6296 16r62D4 16r6283 16r6294 16r62D7 16r62D1 16r62BB 16r62CF 16r62FF 16r62C6 16r64D4 16r62C8 16r62DC 16r62CC 16r62CA 16r62C2 16r62C7 16r629B 16r62C9 16r630C 16r62EE 16r62F1 16r6327 16r6302 16r6308 16r62EF 16r62F5 16r6350 16r633E 16r634D 16r641C 16r634F 16r6396 16r638E 16r6380 16r63AB 16r6376 16r63A3 16r638F 16r6389 16r639F 16r63B5 16r636B))	#(16r9D80 16r9DFC #(16r6369 16r63BE 16r63E9 16r63C0 16r63C6 16r63E3 16r63C9 16r63D2 16r63F6 16r63C4 16r6416 16r6434 16r6406 16r6413 16r6426 16r6436 16r651D 16r6417 16r6428 16r640F 16r6467 16r646F 16r6476 16r644E 16r652A 16r6495 16r6493 16r64A5 16r64A9 16r6488 16r64BC 16r64DA 16r64D2 16r64C5 16r64C7 16r64BB 16r64D8 16r64C2 16r64F1 16r64E7 16r8209 16r64E0 16r64E1 16r62AC 16r64E3 16r64EF 16r652C 16r64F6 16r64F4 16r64F2 16r64FA 16r6500 16r64FD 16r6518 16r651C 16r6505 16r6524 16r6523 16r652B 16r6534 16r6535 16r6537 16r6536 16r6538 16r754B 16r6548 16r6556 16r6555 16r654D 16r6558 16r655E 16r655D 16r6572 16r6578 16r6582 16r6583 16r8B8A 16r659B 16r659F 16r65AB 16r65B7 16r65C3 16r65C6 16r65C1 16r65C4 16r65CC 16r65D2 16r65DB 16r65D9 16r65E0 16r65E1 16r65F1 16r6772 16r660A 16r6603 16r65FB 16r6773 16r6635 16r6636 16r6634 16r661C 16r664F 16r6644 16r6649 16r6641 16r665E 16r665D 16r6664 16r6667 16r6668 16r665F 16r6662 16r6670 16r6683 16r6688 16r668E 16r6689 16r6684 16r6698 16r669D 16r66C1 16r66B9 16r66C9 16r66BE 16r66BC))	#(16r9E40 16r9E7E #(16r66C4 16r66B8 16r66D6 16r66DA 16r66E0 16r663F 16r66E6 16r66E9 16r66F0 16r66F5 16r66F7 16r670F 16r6716 16r671E 16r6726 16r6727 16r9738 16r672E 16r673F 16r6736 16r6741 16r6738 16r6737 16r6746 16r675E 16r6760 16r6759 16r6763 16r6764 16r6789 16r6770 16r67A9 16r677C 16r676A 16r678C 16r678B 16r67A6 16r67A1 16r6785 16r67B7 16r67EF 16r67B4 16r67EC 16r67B3 16r67E9 16r67B8 16r67E4 16r67DE 16r67DD 16r67E2 16r67EE 16r67B9 16r67CE 16r67C6 16r67E7 16r6A9C 16r681E 16r6846 16r6829 16r6840 16r684D 16r6832 16r684E))	#(16r9E80 16r9EFC #(16r68B3 16r682B 16r6859 16r6863 16r6877 16r687F 16r689F 16r688F 16r68AD 16r6894 16r689D 16r689B 16r6883 16r6AAE 16r68B9 16r6874 16r68B5 16r68A0 16r68BA 16r690F 16r688D 16r687E 16r6901 16r68CA 16r6908 16r68D8 16r6922 16r6926 16r68E1 16r690C 16r68CD 16r68D4 16r68E7 16r68D5 16r6936 16r6912 16r6904 16r68D7 16r68E3 16r6925 16r68F9 16r68E0 16r68EF 16r6928 16r692A 16r691A 16r6923 16r6921 16r68C6 16r6979 16r6977 16r695C 16r6978 16r696B 16r6954 16r697E 16r696E 16r6939 16r6974 16r693D 16r6959 16r6930 16r6961 16r695E 16r695D 16r6981 16r696A 16r69B2 16r69AE 16r69D0 16r69BF 16r69C1 16r69D3 16r69BE 16r69CE 16r5BE8 16r69CA 16r69DD 16r69BB 16r69C3 16r69A7 16r6A2E 16r6991 16r69A0 16r699C 16r6995 16r69B4 16r69DE 16r69E8 16r6A02 16r6A1B 16r69FF 16r6B0A 16r69F9 16r69F2 16r69E7 16r6A05 16r69B1 16r6A1E 16r69ED 16r6A14 16r69EB 16r6A0A 16r6A12 16r6AC1 16r6A23 16r6A13 16r6A44 16r6A0C 16r6A72 16r6A36 16r6A78 16r6A47 16r6A62 16r6A59 16r6A66 16r6A48 16r6A38 16r6A22 16r6A90 16r6A8D 16r6AA0 16r6A84 16r6AA2 16r6AA3))	#(16r9F40 16r9F7E #(16r6A97 16r8617 16r6ABB 16r6AC3 16r6AC2 16r6AB8 16r6AB3 16r6AAC 16r6ADE 16r6AD1 16r6ADF 16r6AAA 16r6ADA 16r6AEA 16r6AFB 16r6B05 16r8616 16r6AFA 16r6B12 16r6B16 16r9B31 16r6B1F 16r6B38 16r6B37 16r76DC 16r6B39 16r98EE 16r6B47 16r6B43 16r6B49 16r6B50 16r6B59 16r6B54 16r6B5B 16r6B5F 16r6B61 16r6B78 16r6B79 16r6B7F 16r6B80 16r6B84 16r6B83 16r6B8D 16r6B98 16r6B95 16r6B9E 16r6BA4 16r6BAA 16r6BAB 16r6BAF 16r6BB2 16r6BB1 16r6BB3 16r6BB7 16r6BBC 16r6BC6 16r6BCB 16r6BD3 16r6BDF 16r6BEC 16r6BEB 16r6BF3 16r6BEF))	#(16r9F80 16r9FFC #(16r9EBE 16r6C08 16r6C13 16r6C14 16r6C1B 16r6C24 16r6C23 16r6C5E 16r6C55 16r6C62 16r6C6A 16r6C82 16r6C8D 16r6C9A 16r6C81 16r6C9B 16r6C7E 16r6C68 16r6C73 16r6C92 16r6C90 16r6CC4 16r6CF1 16r6CD3 16r6CBD 16r6CD7 16r6CC5 16r6CDD 16r6CAE 16r6CB1 16r6CBE 16r6CBA 16r6CDB 16r6CEF 16r6CD9 16r6CEA 16r6D1F 16r884D 16r6D36 16r6D2B 16r6D3D 16r6D38 16r6D19 16r6D35 16r6D33 16r6D12 16r6D0C 16r6D63 16r6D93 16r6D64 16r6D5A 16r6D79 16r6D59 16r6D8E 16r6D95 16r6FE4 16r6D85 16r6DF9 16r6E15 16r6E0A 16r6DB5 16r6DC7 16r6DE6 16r6DB8 16r6DC6 16r6DEC 16r6DDE 16r6DCC 16r6DE8 16r6DD2 16r6DC5 16r6DFA 16r6DD9 16r6DE4 16r6DD5 16r6DEA 16r6DEE 16r6E2D 16r6E6E 16r6E2E 16r6E19 16r6E72 16r6E5F 16r6E3E 16r6E23 16r6E6B 16r6E2B 16r6E76 16r6E4D 16r6E1F 16r6E43 16r6E3A 16r6E4E 16r6E24 16r6EFF 16r6E1D 16r6E38 16r6E82 16r6EAA 16r6E98 16r6EC9 16r6EB7 16r6ED3 16r6EBD 16r6EAF 16r6EC4 16r6EB2 16r6ED4 16r6ED5 16r6E8F 16r6EA5 16r6EC2 16r6E9F 16r6F41 16r6F11 16r704C 16r6EEC 16r6EF8 16r6EFE 16r6F3F 16r6EF2 16r6F31 16r6EEF 16r6F32 16r6ECC))	#(16rE040 16rE07E #(16r6F3E 16r6F13 16r6EF7 16r6F86 16r6F7A 16r6F78 16r6F81 16r6F80 16r6F6F 16r6F5B 16r6FF3 16r6F6D 16r6F82 16r6F7C 16r6F58 16r6F8E 16r6F91 16r6FC2 16r6F66 16r6FB3 16r6FA3 16r6FA1 16r6FA4 16r6FB9 16r6FC6 16r6FAA 16r6FDF 16r6FD5 16r6FEC 16r6FD4 16r6FD8 16r6FF1 16r6FEE 16r6FDB 16r7009 16r700B 16r6FFA 16r7011 16r7001 16r700F 16r6FFE 16r701B 16r701A 16r6F74 16r701D 16r7018 16r701F 16r7030 16r703E 16r7032 16r7051 16r7063 16r7099 16r7092 16r70AF 16r70F1 16r70AC 16r70B8 16r70B3 16r70AE 16r70DF 16r70CB 16r70DD))	#(16rE080 16rE0FC #(16r70D9 16r7109 16r70FD 16r711C 16r7119 16r7165 16r7155 16r7188 16r7166 16r7162 16r714C 16r7156 16r716C 16r718F 16r71FB 16r7184 16r7195 16r71A8 16r71AC 16r71D7 16r71B9 16r71BE 16r71D2 16r71C9 16r71D4 16r71CE 16r71E0 16r71EC 16r71E7 16r71F5 16r71FC 16r71F9 16r71FF 16r720D 16r7210 16r721B 16r7228 16r722D 16r722C 16r7230 16r7232 16r723B 16r723C 16r723F 16r7240 16r7246 16r724B 16r7258 16r7274 16r727E 16r7282 16r7281 16r7287 16r7292 16r7296 16r72A2 16r72A7 16r72B9 16r72B2 16r72C3 16r72C6 16r72C4 16r72CE 16r72D2 16r72E2 16r72E0 16r72E1 16r72F9 16r72F7 16r500F 16r7317 16r730A 16r731C 16r7316 16r731D 16r7334 16r732F 16r7329 16r7325 16r733E 16r734E 16r734F 16r9ED8 16r7357 16r736A 16r7368 16r7370 16r7378 16r7375 16r737B 16r737A 16r73C8 16r73B3 16r73CE 16r73BB 16r73C0 16r73E5 16r73EE 16r73DE 16r74A2 16r7405 16r746F 16r7425 16r73F8 16r7432 16r743A 16r7455 16r743F 16r745F 16r7459 16r7441 16r745C 16r7469 16r7470 16r7463 16r746A 16r7476 16r747E 16r748B 16r749E 16r74A7 16r74CA 16r74CF 16r74D4 16r73F1))	#(16rE140 16rE17E #(16r74E0 16r74E3 16r74E7 16r74E9 16r74EE 16r74F2 16r74F0 16r74F1 16r74F8 16r74F7 16r7504 16r7503 16r7505 16r750C 16r750E 16r750D 16r7515 16r7513 16r751E 16r7526 16r752C 16r753C 16r7544 16r754D 16r754A 16r7549 16r755B 16r7546 16r755A 16r7569 16r7564 16r7567 16r756B 16r756D 16r7578 16r7576 16r7586 16r7587 16r7574 16r758A 16r7589 16r7582 16r7594 16r759A 16r759D 16r75A5 16r75A3 16r75C2 16r75B3 16r75C3 16r75B5 16r75BD 16r75B8 16r75BC 16r75B1 16r75CD 16r75CA 16r75D2 16r75D9 16r75E3 16r75DE 16r75FE 16r75FF))	#(16rE180 16rE1FC #(16r75FC 16r7601 16r75F0 16r75FA 16r75F2 16r75F3 16r760B 16r760D 16r7609 16r761F 16r7627 16r7620 16r7621 16r7622 16r7624 16r7634 16r7630 16r763B 16r7647 16r7648 16r7646 16r765C 16r7658 16r7661 16r7662 16r7668 16r7669 16r766A 16r7667 16r766C 16r7670 16r7672 16r7676 16r7678 16r767C 16r7680 16r7683 16r7688 16r768B 16r768E 16r7696 16r7693 16r7699 16r769A 16r76B0 16r76B4 16r76B8 16r76B9 16r76BA 16r76C2 16r76CD 16r76D6 16r76D2 16r76DE 16r76E1 16r76E5 16r76E7 16r76EA 16r862F 16r76FB 16r7708 16r7707 16r7704 16r7729 16r7724 16r771E 16r7725 16r7726 16r771B 16r7737 16r7738 16r7747 16r775A 16r7768 16r776B 16r775B 16r7765 16r777F 16r777E 16r7779 16r778E 16r778B 16r7791 16r77A0 16r779E 16r77B0 16r77B6 16r77B9 16r77BF 16r77BC 16r77BD 16r77BB 16r77C7 16r77CD 16r77D7 16r77DA 16r77DC 16r77E3 16r77EE 16r77FC 16r780C 16r7812 16r7926 16r7820 16r792A 16r7845 16r788E 16r7874 16r7886 16r787C 16r789A 16r788C 16r78A3 16r78B5 16r78AA 16r78AF 16r78D1 16r78C6 16r78CB 16r78D4 16r78BE 16r78BC 16r78C5 16r78CA 16r78EC))	#(16rE240 16rE27E #(16r78E7 16r78DA 16r78FD 16r78F4 16r7907 16r7912 16r7911 16r7919 16r792C 16r792B 16r7940 16r7960 16r7957 16r795F 16r795A 16r7955 16r7953 16r797A 16r797F 16r798A 16r799D 16r79A7 16r9F4B 16r79AA 16r79AE 16r79B3 16r79B9 16r79BA 16r79C9 16r79D5 16r79E7 16r79EC 16r79E1 16r79E3 16r7A08 16r7A0D 16r7A18 16r7A19 16r7A20 16r7A1F 16r7980 16r7A31 16r7A3B 16r7A3E 16r7A37 16r7A43 16r7A57 16r7A49 16r7A61 16r7A62 16r7A69 16r9F9D 16r7A70 16r7A79 16r7A7D 16r7A88 16r7A97 16r7A95 16r7A98 16r7A96 16r7AA9 16r7AC8 16r7AB0))	#(16rE280 16rE2FC #(16r7AB6 16r7AC5 16r7AC4 16r7ABF 16r9083 16r7AC7 16r7ACA 16r7ACD 16r7ACF 16r7AD5 16r7AD3 16r7AD9 16r7ADA 16r7ADD 16r7AE1 16r7AE2 16r7AE6 16r7AED 16r7AF0 16r7B02 16r7B0F 16r7B0A 16r7B06 16r7B33 16r7B18 16r7B19 16r7B1E 16r7B35 16r7B28 16r7B36 16r7B50 16r7B7A 16r7B04 16r7B4D 16r7B0B 16r7B4C 16r7B45 16r7B75 16r7B65 16r7B74 16r7B67 16r7B70 16r7B71 16r7B6C 16r7B6E 16r7B9D 16r7B98 16r7B9F 16r7B8D 16r7B9C 16r7B9A 16r7B8B 16r7B92 16r7B8F 16r7B5D 16r7B99 16r7BCB 16r7BC1 16r7BCC 16r7BCF 16r7BB4 16r7BC6 16r7BDD 16r7BE9 16r7C11 16r7C14 16r7BE6 16r7BE5 16r7C60 16r7C00 16r7C07 16r7C13 16r7BF3 16r7BF7 16r7C17 16r7C0D 16r7BF6 16r7C23 16r7C27 16r7C2A 16r7C1F 16r7C37 16r7C2B 16r7C3D 16r7C4C 16r7C43 16r7C54 16r7C4F 16r7C40 16r7C50 16r7C58 16r7C5F 16r7C64 16r7C56 16r7C65 16r7C6C 16r7C75 16r7C83 16r7C90 16r7CA4 16r7CAD 16r7CA2 16r7CAB 16r7CA1 16r7CA8 16r7CB3 16r7CB2 16r7CB1 16r7CAE 16r7CB9 16r7CBD 16r7CC0 16r7CC5 16r7CC2 16r7CD8 16r7CD2 16r7CDC 16r7CE2 16r9B3B 16r7CEF 16r7CF2 16r7CF4 16r7CF6 16r7CFA 16r7D06))	#(16rE340 16rE37E #(16r7D02 16r7D1C 16r7D15 16r7D0A 16r7D45 16r7D4B 16r7D2E 16r7D32 16r7D3F 16r7D35 16r7D46 16r7D73 16r7D56 16r7D4E 16r7D72 16r7D68 16r7D6E 16r7D4F 16r7D63 16r7D93 16r7D89 16r7D5B 16r7D8F 16r7D7D 16r7D9B 16r7DBA 16r7DAE 16r7DA3 16r7DB5 16r7DC7 16r7DBD 16r7DAB 16r7E3D 16r7DA2 16r7DAF 16r7DDC 16r7DB8 16r7D9F 16r7DB0 16r7DD8 16r7DDD 16r7DE4 16r7DDE 16r7DFB 16r7DF2 16r7DE1 16r7E05 16r7E0A 16r7E23 16r7E21 16r7E12 16r7E31 16r7E1F 16r7E09 16r7E0B 16r7E22 16r7E46 16r7E66 16r7E3B 16r7E35 16r7E39 16r7E43 16r7E37))	#(16rE380 16rE3FC #(16r7E32 16r7E3A 16r7E67 16r7E5D 16r7E56 16r7E5E 16r7E59 16r7E5A 16r7E79 16r7E6A 16r7E69 16r7E7C 16r7E7B 16r7E83 16r7DD5 16r7E7D 16r8FAE 16r7E7F 16r7E88 16r7E89 16r7E8C 16r7E92 16r7E90 16r7E93 16r7E94 16r7E96 16r7E8E 16r7E9B 16r7E9C 16r7F38 16r7F3A 16r7F45 16r7F4C 16r7F4D 16r7F4E 16r7F50 16r7F51 16r7F55 16r7F54 16r7F58 16r7F5F 16r7F60 16r7F68 16r7F69 16r7F67 16r7F78 16r7F82 16r7F86 16r7F83 16r7F88 16r7F87 16r7F8C 16r7F94 16r7F9E 16r7F9D 16r7F9A 16r7FA3 16r7FAF 16r7FB2 16r7FB9 16r7FAE 16r7FB6 16r7FB8 16r8B71 16r7FC5 16r7FC6 16r7FCA 16r7FD5 16r7FD4 16r7FE1 16r7FE6 16r7FE9 16r7FF3 16r7FF9 16r98DC 16r8006 16r8004 16r800B 16r8012 16r8018 16r8019 16r801C 16r8021 16r8028 16r803F 16r803B 16r804A 16r8046 16r8052 16r8058 16r805A 16r805F 16r8062 16r8068 16r8073 16r8072 16r8070 16r8076 16r8079 16r807D 16r807F 16r8084 16r8086 16r8085 16r809B 16r8093 16r809A 16r80AD 16r5190 16r80AC 16r80DB 16r80E5 16r80D9 16r80DD 16r80C4 16r80DA 16r80D6 16r8109 16r80EF 16r80F1 16r811B 16r8129 16r8123 16r812F 16r814B))	#(16rE440 16rE47E #(16r968B 16r8146 16r813E 16r8153 16r8151 16r80FC 16r8171 16r816E 16r8165 16r8166 16r8174 16r8183 16r8188 16r818A 16r8180 16r8182 16r81A0 16r8195 16r81A4 16r81A3 16r815F 16r8193 16r81A9 16r81B0 16r81B5 16r81BE 16r81B8 16r81BD 16r81C0 16r81C2 16r81BA 16r81C9 16r81CD 16r81D1 16r81D9 16r81D8 16r81C8 16r81DA 16r81DF 16r81E0 16r81E7 16r81FA 16r81FB 16r81FE 16r8201 16r8202 16r8205 16r8207 16r820A 16r820D 16r8210 16r8216 16r8229 16r822B 16r8238 16r8233 16r8240 16r8259 16r8258 16r825D 16r825A 16r825F 16r8264))	#(16rE480 16rE4FC #(16r8262 16r8268 16r826A 16r826B 16r822E 16r8271 16r8277 16r8278 16r827E 16r828D 16r8292 16r82AB 16r829F 16r82BB 16r82AC 16r82E1 16r82E3 16r82DF 16r82D2 16r82F4 16r82F3 16r82FA 16r8393 16r8303 16r82FB 16r82F9 16r82DE 16r8306 16r82DC 16r8309 16r82D9 16r8335 16r8334 16r8316 16r8332 16r8331 16r8340 16r8339 16r8350 16r8345 16r832F 16r832B 16r8317 16r8318 16r8385 16r839A 16r83AA 16r839F 16r83A2 16r8396 16r8323 16r838E 16r8387 16r838A 16r837C 16r83B5 16r8373 16r8375 16r83A0 16r8389 16r83A8 16r83F4 16r8413 16r83EB 16r83CE 16r83FD 16r8403 16r83D8 16r840B 16r83C1 16r83F7 16r8407 16r83E0 16r83F2 16r840D 16r8422 16r8420 16r83BD 16r8438 16r8506 16r83FB 16r846D 16r842A 16r843C 16r855A 16r8484 16r8477 16r846B 16r84AD 16r846E 16r8482 16r8469 16r8446 16r842C 16r846F 16r8479 16r8435 16r84CA 16r8462 16r84B9 16r84BF 16r849F 16r84D9 16r84CD 16r84BB 16r84DA 16r84D0 16r84C1 16r84C6 16r84D6 16r84A1 16r8521 16r84FF 16r84F4 16r8517 16r8518 16r852C 16r851F 16r8515 16r8514 16r84FC 16r8540 16r8563 16r8558 16r8548))	#(16rE540 16rE57E #(16r8541 16r8602 16r854B 16r8555 16r8580 16r85A4 16r8588 16r8591 16r858A 16r85A8 16r856D 16r8594 16r859B 16r85EA 16r8587 16r859C 16r8577 16r857E 16r8590 16r85C9 16r85BA 16r85CF 16r85B9 16r85D0 16r85D5 16r85DD 16r85E5 16r85DC 16r85F9 16r860A 16r8613 16r860B 16r85FE 16r85FA 16r8606 16r8622 16r861A 16r8630 16r863F 16r864D 16r4E55 16r8654 16r865F 16r8667 16r8671 16r8693 16r86A3 16r86A9 16r86AA 16r868B 16r868C 16r86B6 16r86AF 16r86C4 16r86C6 16r86B0 16r86C9 16r8823 16r86AB 16r86D4 16r86DE 16r86E9 16r86EC))	#(16rE580 16rE5FC #(16r86DF 16r86DB 16r86EF 16r8712 16r8706 16r8708 16r8700 16r8703 16r86FB 16r8711 16r8709 16r870D 16r86F9 16r870A 16r8734 16r873F 16r8737 16r873B 16r8725 16r8729 16r871A 16r8760 16r875F 16r8778 16r874C 16r874E 16r8774 16r8757 16r8768 16r876E 16r8759 16r8753 16r8763 16r876A 16r8805 16r87A2 16r879F 16r8782 16r87AF 16r87CB 16r87BD 16r87C0 16r87D0 16r96D6 16r87AB 16r87C4 16r87B3 16r87C7 16r87C6 16r87BB 16r87EF 16r87F2 16r87E0 16r880F 16r880D 16r87FE 16r87F6 16r87F7 16r880E 16r87D2 16r8811 16r8816 16r8815 16r8822 16r8821 16r8831 16r8836 16r8839 16r8827 16r883B 16r8844 16r8842 16r8852 16r8859 16r885E 16r8862 16r886B 16r8881 16r887E 16r889E 16r8875 16r887D 16r88B5 16r8872 16r8882 16r8897 16r8892 16r88AE 16r8899 16r88A2 16r888D 16r88A4 16r88B0 16r88BF 16r88B1 16r88C3 16r88C4 16r88D4 16r88D8 16r88D9 16r88DD 16r88F9 16r8902 16r88FC 16r88F4 16r88E8 16r88F2 16r8904 16r890C 16r890A 16r8913 16r8943 16r891E 16r8925 16r892A 16r892B 16r8941 16r8944 16r893B 16r8936 16r8938 16r894C 16r891D 16r8960 16r895E))	#(16rE640 16rE67E #(16r8966 16r8964 16r896D 16r896A 16r896F 16r8974 16r8977 16r897E 16r8983 16r8988 16r898A 16r8993 16r8998 16r89A1 16r89A9 16r89A6 16r89AC 16r89AF 16r89B2 16r89BA 16r89BD 16r89BF 16r89C0 16r89DA 16r89DC 16r89DD 16r89E7 16r89F4 16r89F8 16r8A03 16r8A16 16r8A10 16r8A0C 16r8A1B 16r8A1D 16r8A25 16r8A36 16r8A41 16r8A5B 16r8A52 16r8A46 16r8A48 16r8A7C 16r8A6D 16r8A6C 16r8A62 16r8A85 16r8A82 16r8A84 16r8AA8 16r8AA1 16r8A91 16r8AA5 16r8AA6 16r8A9A 16r8AA3 16r8AC4 16r8ACD 16r8AC2 16r8ADA 16r8AEB 16r8AF3 16r8AE7))	#(16rE680 16rE6FC #(16r8AE4 16r8AF1 16r8B14 16r8AE0 16r8AE2 16r8AF7 16r8ADE 16r8ADB 16r8B0C 16r8B07 16r8B1A 16r8AE1 16r8B16 16r8B10 16r8B17 16r8B20 16r8B33 16r97AB 16r8B26 16r8B2B 16r8B3E 16r8B28 16r8B41 16r8B4C 16r8B4F 16r8B4E 16r8B49 16r8B56 16r8B5B 16r8B5A 16r8B6B 16r8B5F 16r8B6C 16r8B6F 16r8B74 16r8B7D 16r8B80 16r8B8C 16r8B8E 16r8B92 16r8B93 16r8B96 16r8B99 16r8B9A 16r8C3A 16r8C41 16r8C3F 16r8C48 16r8C4C 16r8C4E 16r8C50 16r8C55 16r8C62 16r8C6C 16r8C78 16r8C7A 16r8C82 16r8C89 16r8C85 16r8C8A 16r8C8D 16r8C8E 16r8C94 16r8C7C 16r8C98 16r621D 16r8CAD 16r8CAA 16r8CBD 16r8CB2 16r8CB3 16r8CAE 16r8CB6 16r8CC8 16r8CC1 16r8CE4 16r8CE3 16r8CDA 16r8CFD 16r8CFA 16r8CFB 16r8D04 16r8D05 16r8D0A 16r8D07 16r8D0F 16r8D0D 16r8D10 16r9F4E 16r8D13 16r8CCD 16r8D14 16r8D16 16r8D67 16r8D6D 16r8D71 16r8D73 16r8D81 16r8D99 16r8DC2 16r8DBE 16r8DBA 16r8DCF 16r8DDA 16r8DD6 16r8DCC 16r8DDB 16r8DCB 16r8DEA 16r8DEB 16r8DDF 16r8DE3 16r8DFC 16r8E08 16r8E09 16r8DFF 16r8E1D 16r8E1E 16r8E10 16r8E1F 16r8E42 16r8E35 16r8E30 16r8E34 16r8E4A))	#(16rE740 16rE77E #(16r8E47 16r8E49 16r8E4C 16r8E50 16r8E48 16r8E59 16r8E64 16r8E60 16r8E2A 16r8E63 16r8E55 16r8E76 16r8E72 16r8E7C 16r8E81 16r8E87 16r8E85 16r8E84 16r8E8B 16r8E8A 16r8E93 16r8E91 16r8E94 16r8E99 16r8EAA 16r8EA1 16r8EAC 16r8EB0 16r8EC6 16r8EB1 16r8EBE 16r8EC5 16r8EC8 16r8ECB 16r8EDB 16r8EE3 16r8EFC 16r8EFB 16r8EEB 16r8EFE 16r8F0A 16r8F05 16r8F15 16r8F12 16r8F19 16r8F13 16r8F1C 16r8F1F 16r8F1B 16r8F0C 16r8F26 16r8F33 16r8F3B 16r8F39 16r8F45 16r8F42 16r8F3E 16r8F4C 16r8F49 16r8F46 16r8F4E 16r8F57 16r8F5C))	#(16rE780 16rE7FC #(16r8F62 16r8F63 16r8F64 16r8F9C 16r8F9F 16r8FA3 16r8FAD 16r8FAF 16r8FB7 16r8FDA 16r8FE5 16r8FE2 16r8FEA 16r8FEF 16r9087 16r8FF4 16r9005 16r8FF9 16r8FFA 16r9011 16r9015 16r9021 16r900D 16r901E 16r9016 16r900B 16r9027 16r9036 16r9035 16r9039 16r8FF8 16r904F 16r9050 16r9051 16r9052 16r900E 16r9049 16r903E 16r9056 16r9058 16r905E 16r9068 16r906F 16r9076 16r96A8 16r9072 16r9082 16r907D 16r9081 16r9080 16r908A 16r9089 16r908F 16r90A8 16r90AF 16r90B1 16r90B5 16r90E2 16r90E4 16r6248 16r90DB 16r9102 16r9112 16r9119 16r9132 16r9130 16r914A 16r9156 16r9158 16r9163 16r9165 16r9169 16r9173 16r9172 16r918B 16r9189 16r9182 16r91A2 16r91AB 16r91AF 16r91AA 16r91B5 16r91B4 16r91BA 16r91C0 16r91C1 16r91C9 16r91CB 16r91D0 16r91D6 16r91DF 16r91E1 16r91DB 16r91FC 16r91F5 16r91F6 16r921E 16r91FF 16r9214 16r922C 16r9215 16r9211 16r925E 16r9257 16r9245 16r9249 16r9264 16r9248 16r9295 16r923F 16r924B 16r9250 16r929C 16r9296 16r9293 16r929B 16r925A 16r92CF 16r92B9 16r92B7 16r92E9 16r930F 16r92FA 16r9344 16r932E))	#(16rE840 16rE87E #(16r9319 16r9322 16r931A 16r9323 16r933A 16r9335 16r933B 16r935C 16r9360 16r937C 16r936E 16r9356 16r93B0 16r93AC 16r93AD 16r9394 16r93B9 16r93D6 16r93D7 16r93E8 16r93E5 16r93D8 16r93C3 16r93DD 16r93D0 16r93C8 16r93E4 16r941A 16r9414 16r9413 16r9403 16r9407 16r9410 16r9436 16r942B 16r9435 16r9421 16r943A 16r9441 16r9452 16r9444 16r945B 16r9460 16r9462 16r945E 16r946A 16r9229 16r9470 16r9475 16r9477 16r947D 16r945A 16r947C 16r947E 16r9481 16r947F 16r9582 16r9587 16r958A 16r9594 16r9596 16r9598 16r9599))	#(16rE880 16rE8FC #(16r95A0 16r95A8 16r95A7 16r95AD 16r95BC 16r95BB 16r95B9 16r95BE 16r95CA 16r6FF6 16r95C3 16r95CD 16r95CC 16r95D5 16r95D4 16r95D6 16r95DC 16r95E1 16r95E5 16r95E2 16r9621 16r9628 16r962E 16r962F 16r9642 16r964C 16r964F 16r964B 16r9677 16r965C 16r965E 16r965D 16r965F 16r9666 16r9672 16r966C 16r968D 16r9698 16r9695 16r9697 16r96AA 16r96A7 16r96B1 16r96B2 16r96B0 16r96B4 16r96B6 16r96B8 16r96B9 16r96CE 16r96CB 16r96C9 16r96CD 16r894D 16r96DC 16r970D 16r96D5 16r96F9 16r9704 16r9706 16r9708 16r9713 16r970E 16r9711 16r970F 16r9716 16r9719 16r9724 16r972A 16r9730 16r9739 16r973D 16r973E 16r9744 16r9746 16r9748 16r9742 16r9749 16r975C 16r9760 16r9764 16r9766 16r9768 16r52D2 16r976B 16r9771 16r9779 16r9785 16r977C 16r9781 16r977A 16r9786 16r978B 16r978F 16r9790 16r979C 16r97A8 16r97A6 16r97A3 16r97B3 16r97B4 16r97C3 16r97C6 16r97C8 16r97CB 16r97DC 16r97ED 16r9F4F 16r97F2 16r7ADF 16r97F6 16r97F5 16r980F 16r980C 16r9838 16r9824 16r9821 16r9837 16r983D 16r9846 16r984F 16r984B 16r986B 16r986F 16r9870))	#(16rE940 16rE97E #(16r9871 16r9874 16r9873 16r98AA 16r98AF 16r98B1 16r98B6 16r98C4 16r98C3 16r98C6 16r98E9 16r98EB 16r9903 16r9909 16r9912 16r9914 16r9918 16r9921 16r991D 16r991E 16r9924 16r9920 16r992C 16r992E 16r993D 16r993E 16r9942 16r9949 16r9945 16r9950 16r994B 16r9951 16r9952 16r994C 16r9955 16r9997 16r9998 16r99A5 16r99AD 16r99AE 16r99BC 16r99DF 16r99DB 16r99DD 16r99D8 16r99D1 16r99ED 16r99EE 16r99F1 16r99F2 16r99FB 16r99F8 16r9A01 16r9A0F 16r9A05 16r99E2 16r9A19 16r9A2B 16r9A37 16r9A45 16r9A42 16r9A40 16r9A43))	#(16rE980 16rE9FC #(16r9A3E 16r9A55 16r9A4D 16r9A5B 16r9A57 16r9A5F 16r9A62 16r9A65 16r9A64 16r9A69 16r9A6B 16r9A6A 16r9AAD 16r9AB0 16r9ABC 16r9AC0 16r9ACF 16r9AD1 16r9AD3 16r9AD4 16r9ADE 16r9ADF 16r9AE2 16r9AE3 16r9AE6 16r9AEF 16r9AEB 16r9AEE 16r9AF4 16r9AF1 16r9AF7 16r9AFB 16r9B06 16r9B18 16r9B1A 16r9B1F 16r9B22 16r9B23 16r9B25 16r9B27 16r9B28 16r9B29 16r9B2A 16r9B2E 16r9B2F 16r9B32 16r9B44 16r9B43 16r9B4F 16r9B4D 16r9B4E 16r9B51 16r9B58 16r9B74 16r9B93 16r9B83 16r9B91 16r9B96 16r9B97 16r9B9F 16r9BA0 16r9BA8 16r9BB4 16r9BC0 16r9BCA 16r9BB9 16r9BC6 16r9BCF 16r9BD1 16r9BD2 16r9BE3 16r9BE2 16r9BE4 16r9BD4 16r9BE1 16r9C3A 16r9BF2 16r9BF1 16r9BF0 16r9C15 16r9C14 16r9C09 16r9C13 16r9C0C 16r9C06 16r9C08 16r9C12 16r9C0A 16r9C04 16r9C2E 16r9C1B 16r9C25 16r9C24 16r9C21 16r9C30 16r9C47 16r9C32 16r9C46 16r9C3E 16r9C5A 16r9C60 16r9C67 16r9C76 16r9C78 16r9CE7 16r9CEC 16r9CF0 16r9D09 16r9D08 16r9CEB 16r9D03 16r9D06 16r9D2A 16r9D26 16r9DAF 16r9D23 16r9D1F 16r9D44 16r9D15 16r9D12 16r9D41 16r9D3F 16r9D3E 16r9D46 16r9D48))	#(16rEA40 16rEA7E #(16r9D5D 16r9D5E 16r9D64 16r9D51 16r9D50 16r9D59 16r9D72 16r9D89 16r9D87 16r9DAB 16r9D6F 16r9D7A 16r9D9A 16r9DA4 16r9DA9 16r9DB2 16r9DC4 16r9DC1 16r9DBB 16r9DB8 16r9DBA 16r9DC6 16r9DCF 16r9DC2 16r9DD9 16r9DD3 16r9DF8 16r9DE6 16r9DED 16r9DEF 16r9DFD 16r9E1A 16r9E1B 16r9E1E 16r9E75 16r9E79 16r9E7D 16r9E81 16r9E88 16r9E8B 16r9E8C 16r9E92 16r9E95 16r9E91 16r9E9D 16r9EA5 16r9EA9 16r9EB8 16r9EAA 16r9EAD 16r9761 16r9ECC 16r9ECE 16r9ECF 16r9ED0 16r9ED4 16r9EDC 16r9EDE 16r9EDD 16r9EE0 16r9EE5 16r9EE8 16r9EEF))	#(16rEA80 16rEAA4 #(16r9EF4 16r9EF6 16r9EF7 16r9EF9 16r9EFB 16r9EFC 16r9EFD 16r9F07 16r9F08 16r76B7 16r9F15 16r9F21 16r9F2C 16r9F3E 16r9F4A 16r9F52 16r9F54 16r9F63 16r9F5F 16r9F60 16r9F61 16r9F66 16r9F67 16r9F6C 16r9F6A 16r9F77 16r9F72 16r9F76 16r9F95 16r9F9C 16r9FA0 16r582F 16r69C7 16r9059 16r7464 16r51DC 16r7199))	"Extensions vs generic Shift-JIS"	#(16r8740 16r875D #(16r2460 16r2461 16r2462 16r2463 16r2464 16r2465 16r2466 16r2467 16r2468 16r2469 16r246A 16r246B 16r246C 16r246D 16r246E 16r246F 16r2470 16r2471 16r2472 16r2473 16r2160 16r2161 16r2162 16r2163 16r2164 16r2165 16r2166 16r2167 16r2168 16r2169))	#(16r875F 16r8775 #(16r3349 16r3314 16r3322 16r334D 16r3318 16r3327 16r3303 16r3336 16r3351 16r3357 16r330D 16r3326 16r3323 16r332B 16r334A 16r333B 16r339C 16r339D 16r339E 16r338E 16r338F 16r33C4 16r33A1))	#(16r877E 16r877E #(16r337B))	#(16r8780 16r879C #(16r301D 16r301F 16r2116 16r33CD 16r2121 16r32A4 16r32A5 16r32A6 16r32A7 16r32A8 16r3231 16r3232 16r3239 16r337E 16r337D 16r337C 16r2252 16r2261 16r222B 16r222E 16r2211 16r221A 16r22A5 16r2220 16r221F 16r22BF 16r2235 16r2229 16r222A))	#(16rFA40 16rFA7E #(16r2170 16r2171 16r2172 16r2173 16r2174 16r2175 16r2176 16r2177 16r2178 16r2179 16r2160 16r2161 16r2162 16r2163 16r2164 16r2165 16r2166 16r2167 16r2168 16r2169 16rAC 16rFFE4 16rFF07 16rFF02 16r3231 16r2116 16r2121 16r2235 16r7E8A 16r891C 16r9348 16r9288 16r84DC 16r4FC9 16r70BB 16r6631 16r68C8 16r92F9 16r66FB 16r5F45 16r4E28 16r4EE1 16r4EFC 16r4F00 16r4F03 16r4F39 16r4F56 16r4F92 16r4F8A 16r4F9A 16r4F94 16r4FCD 16r5040 16r5022 16r4FFF 16r501E 16r5046 16r5070 16r5042 16r5094 16r50F4 16r50D8 16r514A))	#(16rFA80 16rFAFC #(16r5164 16r519D 16r51BE 16r51EC 16r5215 16r529C 16r52A6 16r52C0 16r52DB 16r5300 16r5307 16r5324 16r5372 16r5393 16r53B2 16r53DD 16rFA0E 16r549C 16r548A 16r54A9 16r54FF 16r5586 16r5759 16r5765 16r57AC 16r57C8 16r57C7 16rFA0F 16rFA10 16r589E 16r58B2 16r590B 16r5953 16r595B 16r595D 16r5963 16r59A4 16r59BA 16r5B56 16r5BC0 16r752F 16r5BD8 16r5BEC 16r5C1E 16r5CA6 16r5CBA 16r5CF5 16r5D27 16r5D53 16rFA11 16r5D42 16r5D6D 16r5DB8 16r5DB9 16r5DD0 16r5F21 16r5F34 16r5F67 16r5FB7 16r5FDE 16r605D 16r6085 16r608A 16r60DE 16r60D5 16r6120 16r60F2 16r6111 16r6137 16r6130 16r6198 16r6213 16r62A6 16r63F5 16r6460 16r649D 16r64CE 16r654E 16r6600 16r6615 16r663B 16r6609 16r662E 16r661E 16r6624 16r6665 16r6657 16r6659 16rFA12 16r6673 16r6699 16r66A0 16r66B2 16r66BF 16r66FA 16r670E 16rF929 16r6766 16r67BB 16r6852 16r67C0 16r6801 16r6844 16r68CF 16rFA13 16r6968 16rFA14 16r6998 16r69E2 16r6A30 16r6A6B 16r6A46 16r6A73 16r6A7E 16r6AE2 16r6AE4 16r6BD6 16r6C3F 16r6C5C 16r6C86 16r6C6F 16r6CDA 16r6D04 16r6D87 16r6D6F))	#(16rFB40 16rFB7E #(16r6D96 16r6DAC 16r6DCF 16r6DF8 16r6DF2 16r6DFC 16r6E39 16r6E5C 16r6E27 16r6E3C 16r6EBF 16r6F88 16r6FB5 16r6FF5 16r7005 16r7007 16r7028 16r7085 16r70AB 16r710F 16r7104 16r715C 16r7146 16r7147 16rFA15 16r71C1 16r71FE 16r72B1 16r72BE 16r7324 16rFA16 16r7377 16r73BD 16r73C9 16r73D6 16r73E3 16r73D2 16r7407 16r73F5 16r7426 16r742A 16r7429 16r742E 16r7462 16r7489 16r749F 16r7501 16r756F 16r7682 16r769C 16r769E 16r769B 16r76A6 16rFA17 16r7746 16r52AF 16r7821 16r784E 16r7864 16r787A 16r7930 16rFA18 16rFA19))	#(16rFB80 16rFBFC #(16rFA1A 16r7994 16rFA1B 16r799B 16r7AD1 16r7AE7 16rFA1C 16r7AEB 16r7B9E 16rFA1D 16r7D48 16r7D5C 16r7DB7 16r7DA0 16r7DD6 16r7E52 16r7F47 16r7FA1 16rFA1E 16r8301 16r8362 16r837F 16r83C7 16r83F6 16r8448 16r84B4 16r8553 16r8559 16r856B 16rFA1F 16r85B0 16rFA20 16rFA21 16r8807 16r88F5 16r8A12 16r8A37 16r8A79 16r8AA7 16r8ABE 16r8ADF 16rFA22 16r8AF6 16r8B53 16r8B7F 16r8CF0 16r8CF4 16r8D12 16r8D76 16rFA23 16r8ECF 16rFA24 16rFA25 16r9067 16r90DE 16rFA26 16r9115 16r9127 16r91DA 16r91D7 16r91DE 16r91ED 16r91EE 16r91E4 16r91E5 16r9206 16r9210 16r920A 16r923A 16r9240 16r923C 16r924E 16r9259 16r9251 16r9239 16r9267 16r92A7 16r9277 16r9278 16r92E7 16r92D7 16r92D9 16r92D0 16rFA27 16r92D5 16r92E0 16r92D3 16r9325 16r9321 16r92FB 16rFA28 16r931E 16r92FF 16r931D 16r9302 16r9370 16r9357 16r93A4 16r93C6 16r93DE 16r93F8 16r9431 16r9445 16r9448 16r9592 16rF9DC 16rFA29 16r969D 16r96AF 16r9733 16r973B 16r9743 16r974D 16r974F 16r9751 16r9755 16r9857 16r9865 16rFA2A 16rFA2B 16r9927 16rFA2C 16r999E 16r9A4E 16r9AD9))	#(16rFC40 16rFC4B #(16r9ADC 16r9B75 16r9B72 16r9B8F 16r9BB1 16r9BBB 16r9C00 16r9D70 16r9D6B 16rFA2D 16r9E19 16r9ED1))	#(16rED40 16rED7E #(16r7E8A 16r891C 16r9348 16r9288 16r84DC 16r4FC9 16r70BB 16r6631 16r68C8 16r92F9 16r66FB 16r5F45 16r4E28 16r4EE1 16r4EFC 16r4F00 16r4F03 16r4F39 16r4F56 16r4F92 16r4F8A 16r4F9A 16r4F94 16r4FCD 16r5040 16r5022 16r4FFF 16r501E 16r5046 16r5070 16r5042 16r5094 16r50F4 16r50D8 16r514A 16r5164 16r519D 16r51BE 16r51EC 16r5215 16r529C 16r52A6 16r52C0 16r52DB 16r5300 16r5307 16r5324 16r5372 16r5393 16r53B2 16r53DD 16rFA0E 16r549C 16r548A 16r54A9 16r54FF 16r5586 16r5759 16r5765 16r57AC 16r57C8 16r57C7 16rFA0F))	#(16rED80 16rEDFC #(16rFA10 16r589E 16r58B2 16r590B 16r5953 16r595B 16r595D 16r5963 16r59A4 16r59BA 16r5B56 16r5BC0 16r752F 16r5BD8 16r5BEC 16r5C1E 16r5CA6 16r5CBA 16r5CF5 16r5D27 16r5D53 16rFA11 16r5D42 16r5D6D 16r5DB8 16r5DB9 16r5DD0 16r5F21 16r5F34 16r5F67 16r5FB7 16r5FDE 16r605D 16r6085 16r608A 16r60DE 16r60D5 16r6120 16r60F2 16r6111 16r6137 16r6130 16r6198 16r6213 16r62A6 16r63F5 16r6460 16r649D 16r64CE 16r654E 16r6600 16r6615 16r663B 16r6609 16r662E 16r661E 16r6624 16r6665 16r6657 16r6659 16rFA12 16r6673 16r6699 16r66A0 16r66B2 16r66BF 16r66FA 16r670E 16rF929 16r6766 16r67BB 16r6852 16r67C0 16r6801 16r6844 16r68CF 16rFA13 16r6968 16rFA14 16r6998 16r69E2 16r6A30 16r6A6B 16r6A46 16r6A73 16r6A7E 16r6AE2 16r6AE4 16r6BD6 16r6C3F 16r6C5C 16r6C86 16r6C6F 16r6CDA 16r6D04 16r6D87 16r6D6F 16r6D96 16r6DAC 16r6DCF 16r6DF8 16r6DF2 16r6DFC 16r6E39 16r6E5C 16r6E27 16r6E3C 16r6EBF 16r6F88 16r6FB5 16r6FF5 16r7005 16r7007 16r7028 16r7085 16r70AB 16r710F 16r7104 16r715C 16r7146 16r7147 16rFA15 16r71C1 16r71FE 16r72B1))	#(16rEE40 16rEE7E #(16r72BE 16r7324 16rFA16 16r7377 16r73BD 16r73C9 16r73D6 16r73E3 16r73D2 16r7407 16r73F5 16r7426 16r742A 16r7429 16r742E 16r7462 16r7489 16r749F 16r7501 16r756F 16r7682 16r769C 16r769E 16r769B 16r76A6 16rFA17 16r7746 16r52AF 16r7821 16r784E 16r7864 16r787A 16r7930 16rFA18 16rFA19 16rFA1A 16r7994 16rFA1B 16r799B 16r7AD1 16r7AE7 16rFA1C 16r7AEB 16r7B9E 16rFA1D 16r7D48 16r7D5C 16r7DB7 16r7DA0 16r7DD6 16r7E52 16r7F47 16r7FA1 16rFA1E 16r8301 16r8362 16r837F 16r83C7 16r83F6 16r8448 16r84B4 16r8553 16r8559))	#(16rEE80 16rEEEC #(16r856B 16rFA1F 16r85B0 16rFA20 16rFA21 16r8807 16r88F5 16r8A12 16r8A37 16r8A79 16r8AA7 16r8ABE 16r8ADF 16rFA22 16r8AF6 16r8B53 16r8B7F 16r8CF0 16r8CF4 16r8D12 16r8D76 16rFA23 16r8ECF 16rFA24 16rFA25 16r9067 16r90DE 16rFA26 16r9115 16r9127 16r91DA 16r91D7 16r91DE 16r91ED 16r91EE 16r91E4 16r91E5 16r9206 16r9210 16r920A 16r923A 16r9240 16r923C 16r924E 16r9259 16r9251 16r9239 16r9267 16r92A7 16r9277 16r9278 16r92E7 16r92D7 16r92D9 16r92D0 16rFA27 16r92D5 16r92E0 16r92D3 16r9325 16r9321 16r92FB 16rFA28 16r931E 16r92FF 16r931D 16r9302 16r9370 16r9357 16r93A4 16r93C6 16r93DE 16r93F8 16r9431 16r9445 16r9448 16r9592 16rF9DC 16rFA29 16r969D 16r96AF 16r9733 16r973B 16r9743 16r974D 16r974F 16r9751 16r9755 16r9857 16r9865 16rFA2A 16rFA2B 16r9927 16rFA2C 16r999E 16r9A4E 16r9AD9 16r9ADC 16r9B75 16r9B72 16r9B8F 16r9BB1 16r9BBB 16r9C00 16r9D70 16r9D6B 16rFA2D 16r9E19 16r9ED1))	#(16rEEEF 16rEEFC #(16r2170 16r2171 16r2172 16r2173 16r2174 16r2175 16r2176 16r2177 16r2178 16r2179 16rAC 16rFFE4 16rFF07 16rFF02)))</body></methods><methods><class-id>Core.CharacterEncoder class</class-id> <category>class initialization</category><body package="JapaneseEncodings">unInstallJapan	"CharacterEncoder unInstallJapan."	Encoders := nil.	self initialize.</body></methods><initialize><class-id>Core.JISStreamEncoder</class-id></initialize><initialize><class-id>Core.JapaneseEUCStreamEncoder</class-id></initialize><initialize><class-id>Core.ShiftJISCharacterEncoder</class-id></initialize><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>CharacterEncoder</name><environment>Core</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>name alternateNames </inst-vars><class-inst-vars></class-inst-vars><imports>			Core.CharacterEncoderPool.*			</imports><category>Collections-Streams</category><attributes><package>Collections-Streams</package></attributes></class><class><name>LargeCharacterEncoder</name><environment>Graphics</environment><super>Core.CharacterEncoder</super><private>false</private><indexed-type>none</indexed-type><inst-vars>encoder decoder </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Graphics-Fonts</category><attributes><package>Graphics-Fonts</package></attributes></class><class><name>StreamEncoder</name><environment>Core</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>encoder errorPolicy skipRecord </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Collections-Streams</category><attributes><package>Collections-Streams</package></attributes></class></st-source>