<?xml version="1.0"?><st-source><!-- Name: MQ-XIFNotice: Copyright 1999-2016 Cincom Systems, Inc.  All rights reserved.Comment: This package contains the MQ library c interfacesDbIdentifier: bear73DbTrace: 492103DbUsername: hguhlDbVersion: 8.1 - 1DevelopmentPrerequisites: #(#(#any 'MQ-Namespace' '') #(#any 'DLLCC' '') #(#any 'MQ-DLLCCFixes' ''))PackageName: MQ-XIFParcel: #('MQ-XIF')ParcelName: MQ-XIFPrerequisiteParcels: #(#('MQ-Namespace' '') #('DLLCC' '') #('MQ-DLLCCFixes' ''))PrintStringCache: (8.1 - 1,hguhl)Version: 8.1 - 1Date: 12:48:26 PM June 24, 2016 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.2 (jun16.4) of June 24, 2016 on June 24, 2016 at 12:48:26 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>AbstractMQInterface</name><environment>MQ</environment><super>External.ExternalInterface</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars>errorDict </class-inst-vars><imports>			private MQ.AbstractMQInterfaceDictionary.*			</imports><category>MQ-ExternalInterface</category><attributes><includeFiles><item>cmqc.h</item></includeFiles><includeDirectories></includeDirectories><libraryFiles></libraryFiles><libraryDirectories></libraryDirectories><beVirtual>false</beVirtual><optimizationLevel>full</optimizationLevel><package>MQ-XIF</package></attributes></class><comment><class-id>MQ.AbstractMQInterface</class-id><body>AbstractMQInterface is the abstract superclass to all concrete platform dependent MQ-Interface classes.It defines classInstVar errorDict, which is populated by each subclass when initializing itself.The class shared DefaultSizes holds on to some sizes used during initialization of MQ communication structs.You can use	AbstractMQInterface setMaxMessageSize: 16000000to set the maximum available message size available in send and receive activities. This setting has to occurrprior to any connect to a queue manager, in order to have any effect.However, keep in mind that the value must not exceed the message size configured in the queue manager!Subclasses must implement the following messages:	private-accessing		copyToHeapSelector		gcCopyToHeapSelector		gcMallocSelector		mallocSelector</body></comment><class><name>MQInterface</name><environment>MQ</environment><super>MQ.AbstractMQInterface</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports>			private MQ.MQInterfaceDictionary.*			</imports><category>MQ-ExternalInterface</category><attributes><includeFiles><item>cmqc.h</item></includeFiles><includeDirectories><item>[win32*]$(INCLUDE)</item> <item>[hp*hp-ux]/opt/mqm/inc</item> <item>[86_linux]/opt/mqm/inc</item></includeDirectories><libraryFiles><item>[win32*]mqm.dll</item> <item>[hp*hp-ux]libmqm.sl</item> <item>[86_linux]libmqm.so</item></libraryFiles><libraryDirectories><item>[win32*]</item> <item>[hp*hp-ux]/opt/mqm/lib</item> <item>[86_linux]/opt/mqm/lib</item></libraryDirectories><beVirtual>true</beVirtual><optimizationLevel>full</optimizationLevel><package>MQ-XIF</package></attributes></class><comment><class-id>MQ.MQInterface</class-id><body>MQInterface interfaces to the MQ server library 'libmqm.so'. Its defines/types/procedures are generated from 'cmqc.h'.It provides additional services for allocating the following parameter structs:	MQGMO, MQMD, MQOD, MQPMO</body></comment><class><name>MQTHAPIInterface</name><environment>MQ</environment><super>MQ.AbstractMQInterface</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports>			private MQ.MQTHAPIInterfaceDictionary.*			</imports><category>MQ-ExternalInterface</category><attributes><includeFiles><item>cmqc.h</item></includeFiles><includeDirectories><item>[win32*]$(INCLUDE)</item> <item>[hp*hp-ux]/opt/mqm/inc</item> <item>[86_linux]/opt/mqm/inc</item></includeDirectories><libraryFiles><item>[win32*]$mqm.dll</item> <item>[hp*hp-ux]libmqm_r.sl</item> <item>[86_linux]libmqm_r.so</item></libraryFiles><libraryDirectories><item>[win32*]</item> <item>[hp*hp-ux]/opt/mqm/lib</item> <item>[86_linux]/opt/mqm/lib</item></libraryDirectories><beVirtual>true</beVirtual><optimizationLevel>full</optimizationLevel><package>MQ-XIF</package></attributes></class><comment><class-id>MQ.MQTHAPIInterface</class-id><body>MQTHAPIInterface interfaces to the thread save MQ server library 'libmqm_r.so'. Its defines/types/procedures are generated from 'cmqc.h'.All procedures are _threaded, except:	MQCONN(), MQCONNX(), MQOPEN(), MQDISC(), MQCLOSE()It provides additional services for allocating the following parameter structs:	MQGMO, MQMD, MQOD, MQPMO</body></comment><class><name>MQTHAPIClientInterface</name><environment>MQ</environment><super>MQ.MQTHAPIInterface</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports>			private MQ.MQTHAPIClientInterfaceDictionary.*			</imports><category>MQ-ExternalInterface</category><attributes><includeFiles><item>cmqxc.h</item></includeFiles><includeDirectories><item>[win32*]$(INCLUDE)</item> <item>[hp*hp-ux]/opt/mqm/inc</item> <item>[86_linux]/opt/mqm/inc</item></includeDirectories><libraryFiles><item>[win32*]mqic32.dll</item> <item>[hp*hp-ux]libmqic_r.sl</item> <item>[86_linux]libmqic_r.so</item></libraryFiles><libraryDirectories><item>[win32*]</item> <item>[hp*hp-ux]/opt/mqm/lib</item> <item>[86_linux]/opt/mqm/lib</item></libraryDirectories><beVirtual>false</beVirtual><optimizationLevel>full</optimizationLevel><package>MQ-XIF</package></attributes></class><comment><class-id>MQ.MQTHAPIClientInterface</class-id><body>MQTHAPIClientInterface interfaces to the thread save MQ client library 'libmqic_r.so'. Its defines/types/procedures are generated from 'cmqxc.h', most of the superclasses defines/types/procedures are simply inherited.All procedures are _threaded.It provides additional services for allocating the following parameter structs:	MQCD, MQCNO</body></comment><class><name>MQClientInterface</name><environment>MQ</environment><super>MQ.MQInterface</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports>			private MQ.MQClientInterfaceDictionary.*			</imports><category>MQ-ExternalInterface</category><attributes><includeFiles><item>cmqxc.h</item></includeFiles><includeDirectories><item>[win32*]$(INCLUDE)</item> <item>[hp*hp-ux]/opt/mqm/inc</item> <item>[86_linux]/opt/mqm/inc</item></includeDirectories><libraryFiles><item>[win32*]mqic32.dll</item> <item>[hp*hp-ux]libmqic.sl</item> <item>[86_linux]libmqic.so</item></libraryFiles><libraryDirectories><item>[win32*]</item> <item>[hp*hp-ux]/opt/mqm/lib</item> <item>[86_linux]/opt/mqm/lib</item></libraryDirectories><beVirtual>false</beVirtual><optimizationLevel>full</optimizationLevel><package>MQ-XIF</package></attributes></class><comment><class-id>MQ.MQClientInterface</class-id><body>MQClientInterface interfaces to the MQ client library 'libmqic.so'. Its defines/types/procedures are generated from 'cmqxc.h', most of the superclasses defines/types/procedures are simply inherited.It provides additional services for allocating the following parameter structs:	MQCD, MQCNO</body></comment><shared-variable><name>DefaultStructs</name><environment>MQ.AbstractMQInterface</environment><private>false</private><constant>false</constant><category>struct defaults</category><initializer>Dictionary new</initializer><attributes><package>MQ-XIF</package></attributes></shared-variable><shared-variable><name>DefaultSizes</name><environment>MQ.AbstractMQInterface</environment><private>false</private><constant>false</constant><category>defaults</category><initializer>Dictionary new</initializer><attributes><package>MQ-XIF</package></attributes></shared-variable><shared-variable><name>MQTHAPIInterfaceDictionary</name><environment>MQ</environment><private>false</private><constant>false</constant><category>external dictionaries</category><attributes><package>MQ-XIF</package></attributes></shared-variable><shared-variable><name>AbstractMQInterfaceDictionary</name><environment>MQ</environment><private>false</private><constant>false</constant><category>external dictionaries</category><attributes><package>MQ-XIF</package></attributes></shared-variable><shared-variable><name>MQInterfaceDictionary</name><environment>MQ</environment><private>false</private><constant>false</constant><category>external dictionaries</category><attributes><package>MQ-XIF</package></attributes></shared-variable><shared-variable><name>MQTHAPIClientInterfaceDictionary</name><environment>MQ</environment><private>false</private><constant>false</constant><category>external dictionaries</category><attributes><package>MQ-XIF</package></attributes></shared-variable><shared-variable><name>MQClientInterfaceDictionary</name><environment>MQ</environment><private>false</private><constant>false</constant><category>external dictionaries</category><attributes><package>MQ-XIF</package></attributes></shared-variable><methods><class-id>MQ.AbstractMQInterface</class-id> <category>private-accessing</category><body package="MQ-XIF">copyToHeapSelector	^self subclassResponsibility</body><body package="MQ-XIF">errorDict	^self class errorDict</body><body package="MQ-XIF">gcCopyToHeapSelector	^self subclassResponsibility</body><body package="MQ-XIF">gcMallocSelector	^self subclassResponsibility</body><body package="MQ-XIF">initializeStruct: aStructInstance withDefaults: aDefaultsString 	"aStructInstance is a normal ST instance of a C-Struct, not yet copied to the heap.	aDefaultsString is a String made up from a C #define statement holding a sequence of C literals seperated by ','.	This String is NOT returned directly by the ExternalInterface 'define' method, but has to be constructed by hand using copy and paste.	The following cases for C literals are handled:		- number literals		- NULL		- other constant values referenced through a #define		- sub-structs with single values		- everything else is left out, and is initialized with zeros in all its slots.	Example: Consider a struct definition:		struct  { char [4] name ; 			int age; 			char * description; 			float bmi; 			TESTStruct options} TStruct;	e.g. the following defaults String		'{} , 1 , NULL, TEST_ID, { TESTStrcuct_DEFAULT }'	would lead to a struct like this:		name ''		age 1		description nil		bmi 0.24		options &lt;value of TESTStruct_DEFAULT define&gt;	"	| coll src |	src := (Compiler evaluate: '#(' , aDefaultsString , ')') readStream.	coll := OrderedCollection new: src size.	[src atEnd] whileFalse: [coll add: (src upTo: #,)].	1 to: coll size		do: 			[:i | 			| item memberName value |			item := coll at: i.			memberName := aStructInstance type memberNameAt: (i - 1) * 5 + 1.			item first == #'{' 				ifTrue: 					[(item := item at: 2) == #'}' 						ifFalse: 							[value := self resolveValueFrom: item.							value isNil 								ifFalse: 									[value isSequenceable 										ifTrue:  											[| mem |											value := value asByteArray.											mem := aStructInstance memberAt: memberName.											1 to: value size do: [:in | mem at: in - 1 put: (value at: in)].											aStructInstance memberAt: memberName put: mem]										ifFalse: [aStructInstance memberAt: memberName put: value]]]]				ifFalse: 					[item := item first.					value := (item isMemberOf: Array)						ifTrue: ["Assume arithmetic expression, otherwise take only the first one"								item size = 3 								ifTrue:[(self resolveValueFrom: (item at: 1))													perform: (item at: 2) 													with: (self resolveValueFrom: (item at: 3))]								ifFalse: [self resolveValueFrom: (item first)]]						ifFalse: [self resolveValueFrom: item].					aStructInstance memberAt: memberName put: value]].	^aStructInstance</body><body package="MQ-XIF">mallocSelector	^self subclassResponsibility</body><body package="MQ-XIF">resolveValueFrom: item 	^item isSymbol 		ifTrue: [item == #NULL ifTrue: [nil] ifFalse: [self perform: item]]		ifFalse: [(item isMemberOf: Array) ifTrue: [item first] ifFalse: [item]]</body></methods><methods><class-id>MQ.AbstractMQInterface</class-id> <category>private-allocation</category><body package="MQ-XIF">allocMQCDWithClientConnectDefaults	"The defaults Array was copied from MQCD_CLIENT_CONN_DEFAULT."	"self new allocMQCDWithClientConnectDefaults"	| cdStruct |	cdStruct := DefaultStructs at: #MQCD ifAbsentPut: [self createMQCD].	^cdStruct gcCopyToHeap</body><body package="MQ-XIF">allocMQCNOParameters	"Allocate a pointer on structure MQCNO. Make sure it is byte aligned.	Initialize it right away with MQCNO_DEFAULT parameters."	"self new allocMQCNONewParameters"	| cnoStruct |	cnoStruct := DefaultStructs at: #MQCNO ifAbsentPut: [self createCNO].	^cnoStruct gcCopyToHeap</body><body package="MQ-XIF">allocMQGMOParameters	"Allocate a pointer on structure MQGMO. Make sure it is byte aligned"	| cmoStruct |	cmoStruct := DefaultStructs at: #MQGMO ifAbsentPut: [self createGMO].	^cmoStruct gcCopyToHeap</body><body package="MQ-XIF">allocMQMDParameters	"Allocate a pointer on structure MQMD. Make sure it is byte aligned"	| mdStruct |	mdStruct := DefaultStructs at: #MQMD ifAbsentPut: [self createMD].	^mdStruct gcCopyToHeap</body><body package="MQ-XIF">allocMQODParameters	"Allocate a pointer on structure MQOD. Make sure it is byte aligned"	| odStruct |	odStruct := DefaultStructs at: #MQOD ifAbsentPut: [self createOD].	^odStruct gcCopyToHeap</body><body package="MQ-XIF">allocMQPMOParameters	"Allocate a pointer on structure MQPMO. Make sure it is byte aligned"	| pmoStruct |	pmoStruct := DefaultStructs at: #MQPMO ifAbsentPut: [self createPMO].	^pmoStruct gcCopyToHeap</body></methods><methods><class-id>MQ.AbstractMQInterface</class-id> <category>private-struct create</category><body package="MQ-XIF">MQCD	"This struct is created by one of my concrete subclasses"	self subclassResponsibility</body><body package="MQ-XIF">MQCNO	"This struct is created by one of my concrete subclasses"	self subclassResponsibility</body><body package="MQ-XIF">MQGMO	"This struct is created by one of my concrete subclasses"	self subclassResponsibility</body><body package="MQ-XIF">MQMD	"This struct is created by one of my concrete subclasses"	self subclassResponsibility</body><body package="MQ-XIF">MQOD	"This struct is created by one of my concrete subclasses"	self subclassResponsibility</body><body package="MQ-XIF">MQPMO	"This struct is created by one of my concrete subclasses"	self subclassResponsibility</body><body package="MQ-XIF">createCNO	"We don't use the predefined MQCNO_DEFAULT, instead we have an adjusted configuration:	1. MQCNO_STRUC_ID_ARRAY is replaced with MQCNO_STRUC_ID	2. MQCNO_NONE is replaced with MQCNO_HANDLE_SHARE_NO_BLOCK "	| typeDef p defaults |	typeDef := self MQCNO.	typeDef type alignment: CStructureLayout defaultLayout alignment.	p := typeDef new.	defaults := '{&lt;1s&gt;},&lt;2s&gt;,&lt;3s&gt;,0,NULL,{&lt;4s&gt;},NULL,0'		expandMacrosWith: #MQCNO_STRUC_ID		with: #MQCNO_VERSION_1		with: #MQCNO_HANDLE_SHARE_NO_BLOCK		with: #MQCT_NONE_ARRAY.	self initializeStruct: p withDefaults: defaults.	^p</body><body package="MQ-XIF">createGMO	"The defaults String was copied over from the respective MQ*DEFAULT #define"	| p defaults |	p := self MQGMO.	p type alignment: CStructureLayout defaultLayout alignment."Replaced MQGMO_STRUC_ID_ARRAY with MQGMO_STRUC_ID"	defaults := '{MQGMO_STRUC_ID},MQGMO_VERSION_1,MQGMO_NO_WAIT,0,0,0,{""},(MQMO_MATCH_MSG_ID+MQMO_MATCH_CORREL_ID),MQGS_NOT_IN_GROUP,MQSS_NOT_A_SEGMENT,MQSEG_INHIBITED,32,{MQMTOK_NONE_ARRAY},MQRL_UNDEFINED'.	p := p new.	self initializeStruct: p withDefaults: defaults.	^p</body><body package="MQ-XIF">createMD	"The defaults String was copied over from the respective MQ*DEFAULT #define"	| p defaults |	p := self MQMD.	p type alignment: CStructureLayout defaultLayout alignment.	"defaults as specified in MQMD_DEFAULT.	Modification: - MQMD_STRUC_ID_ARRAY replaced with MQMD_STRUC_ID"	defaults := '{MQMD_STRUC_ID},MQMD_VERSION_1,MQRO_NONE,MQMT_DATAGRAM,MQEI_UNLIMITED,MQFB_NONE,MQENC_NATIVE,MQCCSI_Q_MGR,{MQFMT_NONE_ARRAY},MQPRI_PRIORITY_AS_Q_DEF,MQPER_PERSISTENCE_AS_Q_DEF,{MQMI_NONE_ARRAY},{MQCI_NONE_ARRAY},0,{""},{""},{""},{MQACT_NONE_ARRAY},{""},MQAT_NO_CONTEXT,{""},{""},{""},{""},{MQGI_NONE_ARRAY},1,0,MQMF_NONE,MQOL_UNDEFINED'.	p := p new.	self initializeStruct: p withDefaults: defaults.	^p</body><body package="MQ-XIF">createMQCD	"The original MQCD struct is normaly configured for message sizes of up to 4MByte.	This parameter can be configured to a larger value using class method 'setMaxMessageSize:'.	However, keep in mind that it must not exceed the message size configured in the queue manager!"	| p |	p := self getBasicMQCD.	p memberAt: #MaxMsgLength put: self class maxMessageLength.	^p</body><body package="MQ-XIF">createOD	"The defaults String was copied over from the respective MQ*DEFAULT #define"	| p defaults |	p := self MQOD.	p type alignment: CStructureLayout defaultLayout alignment.	"Replaced MQOD_STRUC_ID_ARRAY with MQOD_STRUC_ID"	defaults := '{MQOD_STRUC_ID},MQOD_VERSION_1,MQOT_Q,{""},{""},{"AMQ.*"},{""},0,0,0,0,0,0,NULL,NULL,{MQSID_NONE_ARRAY},{""},{""}'.	p := p new.	self initializeStruct: p withDefaults: defaults.	^p</body><body package="MQ-XIF">createPMO	"The defaults String was copied over from the respective MQ*DEFAULT #define"	| p defaults |	p := self MQPMO.	p type alignment: CStructureLayout defaultLayout alignment.	"Replaced MQPMO_STRUC_ID_ARRAY with MQPMO_STRUC_ID"	defaults := '{MQPMO_STRUC_ID},MQPMO_VERSION_1,MQPMO_NONE,(-1),0,0,0,0,{""},{""},0,MQPMRF_NONE,0,0,NULL,NULL'.	p := p new.	self initializeStruct: p withDefaults: defaults.	^p</body><body package="MQ-XIF">getBasicMQCD	"Create a new Smalltalk instance of an MQCD struct (not on heap!)	and fill it up with defaults as defined in the .h file.	The defaults String was copied over from the respective MQ*DEFAULT #define."	| p defaults typeDef |	typeDef := self MQCD.	typeDef type alignment: CStructureLayout defaultLayout alignment.	p := typeDef new.	defaults := '{""},MQCD_CURRENT_VERSION,MQCHT_CLNTCONN,MQXPT_TCP,{""},{""},{""},{""},{""},{""},{""},50,6000,10,60,999999999,1200,{""},{""},{""},{""},999999999,4194304,MQPA_DEFAULT,MQCDC_NO_SENDER_CONVERSION,{""},{""},{""},{""},{""},{""},{""},MQMCAT_PROCESS,{""},{""},{""},{""},{""},10,1000,1,0,MQNPMS_FAST,MQCD_CURRENT_LENGTH,MQ_EXIT_NAME_LENGTH,MQ_EXIT_DATA_LENGTH,0,0,0,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,NULL,NULL,{MQSID_NONE_ARRAY},{MQSID_NONE_ARRAY},{""},NULL,0,MQSCA_REQUIRED,(-1),{""},0'.	self initializeStruct: p withDefaults: defaults.	^p</body></methods><methods><class-id>MQ.AbstractMQInterface</class-id> <category>allocation</category><body package="MQ-XIF">alloc64KAligned: aSymbol 	"Perform the allocation method &lt;aSymbol&gt;. 	Make sure the allocated memory does not span a multiple of 64K.	Return: CCompositePointer "	| sixtyFourK gcProtected |	sixtyFourK := 64 * 1024.	gcProtected := nil.		[| heapPtr structSize startAddr |	heapPtr := self perform: aSymbol.	structSize := heapPtr type referentType sizeof.	startAddr := heapPtr referentAddress.	startAddr \\ sixtyFourK + structSize &lt;= sixtyFourK ifTrue: [^heapPtr].	"prevent allocated memory from being freed and reused in next allocation"	gcProtected isNil ifTrue: [gcProtected := OrderedCollection new].	gcProtected add: heapPtr] 			repeat</body><body package="MQ-XIF">alloc64KAlignedGetMessageOptions	"Allocate a pointer on structure MQGMO. Make sure it does not span a multiple of 64K."	^self alloc64KAligned: #allocMQGMOParameters</body><body package="MQ-XIF">alloc64KAlignedMQCDWithClientConnectDefaults	"Allocate a pointer on structure MQCD. Make sure it does not span a multiple of 64K."	^self alloc64KAligned: #allocMQCDWithClientConnectDefaults</body><body package="MQ-XIF">alloc64KAlignedMQCNONewParameters	"Allocate a pointer on structure MQCNO. Make sure it does not span a multiple of 64K.	Return: CCompositePointer to: (struct tagMQCNO * )"	^self alloc64KAligned: #allocMQCNOParameters</body><body package="MQ-XIF">alloc64KAlignedMessageDescriptor	"Allocate a pointer on structure MQMD. Make sure it does not span a multiple of 64K."	^self alloc64KAligned: #allocMQMDParameters</body><body package="MQ-XIF">alloc64KAlignedObjectDescriptor	"Allocate a pointer on structure MQOD. Make sure it does not span a multiple of 64K."	^self alloc64KAligned: #allocMQODParameters</body><body package="MQ-XIF">alloc64KAlignedPutMessageOptions	"Allocate a pointer on structure MQGMO. Make sure it does not span a multiple of 64K."	^self alloc64KAligned: #allocMQPMOParameters</body></methods><methods><class-id>MQ.AbstractMQInterface class</class-id> <category>configuration file</category><body package="MQ-XIF">configFileReceiver	^self</body></methods><methods><class-id>MQ.AbstractMQInterface class</class-id> <category>errors</category><body package="MQ-XIF">errorDict	errorDict isNil ifTrue: [errorDict := self getErrorDict].	^errorDict</body><body package="MQ-XIF">getErrorDict	"This is an auto-generated method"	^(Dictionary new) add: 0 -&gt; #MQRC_NONE; add: 2001 -&gt; #MQRC_ALIAS_BASE_Q_TYPE_ERROR; add: 2002 -&gt; #MQRC_ALREADY_CONNECTED; add: 2003 -&gt; #MQRC_BACKED_OUT; add: 2004 -&gt; #MQRC_BUFFER_ERROR; add: 2005 -&gt; #MQRC_BUFFER_LENGTH_ERROR; add: 2006 -&gt; #MQRC_CHAR_ATTR_LENGTH_ERROR; add: 2007 -&gt; #MQRC_CHAR_ATTRS_ERROR; add: 2008 -&gt; #MQRC_CHAR_ATTRS_TOO_SHORT; add: 2009 -&gt; #MQRC_CONNECTION_BROKEN; add: 2010 -&gt; #MQRC_DATA_LENGTH_ERROR; add: 2011 -&gt; #MQRC_DYNAMIC_Q_NAME_ERROR; add: 2012 -&gt; #MQRC_ENVIRONMENT_ERROR; add: 2013 -&gt; #MQRC_EXPIRY_ERROR; add: 2014 -&gt; #MQRC_FEEDBACK_ERROR; add: 2016 -&gt; #MQRC_GET_INHIBITED; add: 2017 -&gt; #MQRC_HANDLE_NOT_AVAILABLE; add: 2018 -&gt; #MQRC_HCONN_ERROR; add: 2019 -&gt; #MQRC_HOBJ_ERROR; add: 2020 -&gt; #MQRC_INHIBIT_VALUE_ERROR; add: 2021 -&gt; #MQRC_INT_ATTR_COUNT_ERROR; add: 2022 -&gt; #MQRC_INT_ATTR_COUNT_TOO_SMALL; add: 2023 -&gt; #MQRC_INT_ATTRS_ARRAY_ERROR; add: 2024 -&gt; #MQRC_SYNCPOINT_LIMIT_REACHED; add: 2025 -&gt; #MQRC_MAX_CONNS_LIMIT_REACHED; add: 2026 -&gt; #MQRC_MD_ERROR; add: 2027 -&gt; #MQRC_MISSING_REPLY_TO_Q; add: 2029 -&gt; #MQRC_MSG_TYPE_ERROR; add: 2030 -&gt; #MQRC_MSG_TOO_BIG_FOR_Q; add: 2031 -&gt; #MQRC_MSG_TOO_BIG_FOR_Q_MGR; add: 2033 -&gt; #MQRC_NO_MSG_AVAILABLE; add: 2034 -&gt; #MQRC_NO_MSG_UNDER_CURSOR; add: 2035 -&gt; #MQRC_NOT_AUTHORIZED; add: 2036 -&gt; #MQRC_NOT_OPEN_FOR_BROWSE; add: 2037 -&gt; #MQRC_NOT_OPEN_FOR_INPUT; add: 2038 -&gt; #MQRC_NOT_OPEN_FOR_INQUIRE; add: 2039 -&gt; #MQRC_NOT_OPEN_FOR_OUTPUT; add: 2040 -&gt; #MQRC_NOT_OPEN_FOR_SET; add: 2041 -&gt; #MQRC_OBJECT_CHANGED; add: 2042 -&gt; #MQRC_OBJECT_IN_USE; add: 2043 -&gt; #MQRC_OBJECT_TYPE_ERROR; add: 2044 -&gt; #MQRC_OD_ERROR; add: 2045 -&gt; #MQRC_OPTION_NOT_VALID_FOR_TYPE; add: 2046 -&gt; #MQRC_OPTIONS_ERROR; add: 2047 -&gt; #MQRC_PERSISTENCE_ERROR; add: 2048 -&gt; #MQRC_PERSISTENT_NOT_ALLOWED; add: 2049 -&gt; #MQRC_PRIORITY_EXCEEDS_MAXIMUM; add: 2050 -&gt; #MQRC_PRIORITY_ERROR; add: 2051 -&gt; #MQRC_PUT_INHIBITED; add: 2052 -&gt; #MQRC_Q_DELETED; add: 2053 -&gt; #MQRC_Q_FULL; add: 2055 -&gt; #MQRC_Q_NOT_EMPTY; add: 2056 -&gt; #MQRC_Q_SPACE_NOT_AVAILABLE; add: 2057 -&gt; #MQRC_Q_TYPE_ERROR; add: 2058 -&gt; #MQRC_Q_MGR_NAME_ERROR; add: 2059 -&gt; #MQRC_Q_MGR_NOT_AVAILABLE; add: 2061 -&gt; #MQRC_REPORT_OPTIONS_ERROR; add: 2062 -&gt; #MQRC_SECOND_MARK_NOT_ALLOWED; add: 2063 -&gt; #MQRC_SECURITY_ERROR; add: 2065 -&gt; #MQRC_SELECTOR_COUNT_ERROR; add: 2066 -&gt; #MQRC_SELECTOR_LIMIT_EXCEEDED; add: 2067 -&gt; #MQRC_SELECTOR_ERROR; add: 2068 -&gt; #MQRC_SELECTOR_NOT_FOR_TYPE; add: 2069 -&gt; #MQRC_SIGNAL_OUTSTANDING; add: 2070 -&gt; #MQRC_SIGNAL_REQUEST_ACCEPTED; add: 2071 -&gt; #MQRC_STORAGE_NOT_AVAILABLE; add: 2072 -&gt; #MQRC_SYNCPOINT_NOT_AVAILABLE; add: 2075 -&gt; #MQRC_TRIGGER_CONTROL_ERROR; add: 2076 -&gt; #MQRC_TRIGGER_DEPTH_ERROR; add: 2077 -&gt; #MQRC_TRIGGER_MSG_PRIORITY_ERR; add: 2078 -&gt; #MQRC_TRIGGER_TYPE_ERROR; add: 2079 -&gt; #MQRC_TRUNCATED_MSG_ACCEPTED; add: 2080 -&gt; #MQRC_TRUNCATED_MSG_FAILED; add: 2082 -&gt; #MQRC_UNKNOWN_ALIAS_BASE_Q; add: 2085 -&gt; #MQRC_UNKNOWN_OBJECT_NAME; add: 2086 -&gt; #MQRC_UNKNOWN_OBJECT_Q_MGR; add: 2087 -&gt; #MQRC_UNKNOWN_REMOTE_Q_MGR; add: 2090 -&gt; #MQRC_WAIT_INTERVAL_ERROR; add: 2091 -&gt; #MQRC_XMIT_Q_TYPE_ERROR; add: 2092 -&gt; #MQRC_XMIT_Q_USAGE_ERROR; add: 2093 -&gt; #MQRC_NOT_OPEN_FOR_PASS_ALL; add: 2094 -&gt; #MQRC_NOT_OPEN_FOR_PASS_IDENT; add: 2095 -&gt; #MQRC_NOT_OPEN_FOR_SET_ALL; add: 2096 -&gt; #MQRC_NOT_OPEN_FOR_SET_IDENT; add: 2097 -&gt; #MQRC_CONTEXT_HANDLE_ERROR; add: 2098 -&gt; #MQRC_CONTEXT_NOT_AVAILABLE; add: 2099 -&gt; #MQRC_SIGNAL1_ERROR; add: 2100 -&gt; #MQRC_OBJECT_ALREADY_EXISTS; add: 2101 -&gt; #MQRC_OBJECT_DAMAGED; add: 2102 -&gt; #MQRC_RESOURCE_PROBLEM; add: 2103 -&gt; #MQRC_ANOTHER_Q_MGR_CONNECTED; add: 2104 -&gt; #MQRC_UNKNOWN_REPORT_OPTION; add: 2105 -&gt; #MQRC_STORAGE_CLASS_ERROR; add: 2106 -&gt; #MQRC_COD_NOT_VALID_FOR_XCF_Q; add: 2107 -&gt; #MQRC_XWAIT_CANCELED; add: 2108 -&gt; #MQRC_XWAIT_ERROR; add: 2109 -&gt; #MQRC_SUPPRESSED_BY_EXIT; add: 2110 -&gt; #MQRC_FORMAT_ERROR; add: 2111 -&gt; #MQRC_SOURCE_CCSID_ERROR; add: 2112 -&gt; #MQRC_SOURCE_INTEGER_ENC_ERROR; add: 2113 -&gt; #MQRC_SOURCE_DECIMAL_ENC_ERROR; add: 2114 -&gt; #MQRC_SOURCE_FLOAT_ENC_ERROR; add: 2115 -&gt; #MQRC_TARGET_CCSID_ERROR; add: 2116 -&gt; #MQRC_TARGET_INTEGER_ENC_ERROR; add: 2117 -&gt; #MQRC_TARGET_DECIMAL_ENC_ERROR; add: 2118 -&gt; #MQRC_TARGET_FLOAT_ENC_ERROR; add: 2119 -&gt; #MQRC_NOT_CONVERTED; add: 2120 -&gt; #MQRC_CONVERTED_MSG_TOO_BIG; add: 2125 -&gt; #MQRC_BRIDGE_STARTED; add: 2126 -&gt; #MQRC_BRIDGE_STOPPED; add: 2127 -&gt; #MQRC_ADAPTER_STORAGE_SHORTAGE; add: 2129 -&gt; #MQRC_ADAPTER_CONN_LOAD_ERROR; add: 2130 -&gt; #MQRC_ADAPTER_SERV_LOAD_ERROR; add: 2131 -&gt; #MQRC_ADAPTER_DEFS_ERROR; add: 2132 -&gt; #MQRC_ADAPTER_DEFS_LOAD_ERROR; add: 2133 -&gt; #MQRC_ADAPTER_CONV_LOAD_ERROR; add: 2138 -&gt; #MQRC_ADAPTER_DISC_LOAD_ERROR; add: 2140 -&gt; #MQRC_CICS_WAIT_FAILED; add: 2143 -&gt; #MQRC_SOURCE_LENGTH_ERROR; add: 2144 -&gt; #MQRC_TARGET_LENGTH_ERROR; add: 2145 -&gt; #MQRC_SOURCE_BUFFER_ERROR; add: 2146 -&gt; #MQRC_TARGET_BUFFER_ERROR; add: 2150 -&gt; #MQRC_DBCS_ERROR; add: 2151 -&gt; #MQRC_TRUNCATED; add: 2157 -&gt; #MQRC_ASID_MISMATCH; add: 2160 -&gt; #MQRC_CONN_ID_IN_USE; add: 2161 -&gt; #MQRC_Q_MGR_QUIESCING; add: 2162 -&gt; #MQRC_Q_MGR_STOPPING; add: 2163 -&gt; #MQRC_DUPLICATE_RECOV_COORD; add: 2173 -&gt; #MQRC_PMO_ERROR; add: 2182 -&gt; #MQRC_API_EXIT_NOT_FOUND; add: 2183 -&gt; #MQRC_API_EXIT_LOAD_ERROR; add: 2184 -&gt; #MQRC_REMOTE_Q_NAME_ERROR; add: 2186 -&gt; #MQRC_GMO_ERROR; add: 2192 -&gt; #MQRC_PAGESET_FULL; add: 2193 -&gt; #MQRC_PAGESET_ERROR; add: 2194 -&gt; #MQRC_NAME_NOT_VALID_FOR_TYPE; add: 2195 -&gt; #MQRC_UNEXPECTED_ERROR; add: 2196 -&gt; #MQRC_UNKNOWN_XMIT_Q; add: 2197 -&gt; #MQRC_UNKNOWN_DEF_XMIT_Q; add: 2198 -&gt; #MQRC_DEF_XMIT_Q_TYPE_ERROR; add: 2199 -&gt; #MQRC_DEF_XMIT_Q_USAGE_ERROR; add: 2201 -&gt; #MQRC_NAME_IN_USE; add: 2202 -&gt; #MQRC_CONNECTION_QUIESCING; add: 2203 -&gt; #MQRC_CONNECTION_STOPPING; add: 2204 -&gt; #MQRC_ADAPTER_NOT_AVAILABLE; add: 2206 -&gt; #MQRC_MSG_ID_ERROR; add: 2207 -&gt; #MQRC_CORREL_ID_ERROR; add: 2208 -&gt; #MQRC_FILE_SYSTEM_ERROR; add: 2209 -&gt; #MQRC_NO_MSG_LOCKED; add: 2216 -&gt; #MQRC_FILE_NOT_AUDITED; add: 2217 -&gt; #MQRC_CONNECTION_NOT_AUTHORIZED; add: 2218 -&gt; #MQRC_MSG_TOO_BIG_FOR_CHANNEL; add: 2219 -&gt; #MQRC_CALL_IN_PROGRESS; add: 2222 -&gt; #MQRC_Q_MGR_ACTIVE; add: 2223 -&gt; #MQRC_Q_MGR_NOT_ACTIVE; add: 2224 -&gt; #MQRC_Q_DEPTH_HIGH; add: 2225 -&gt; #MQRC_Q_DEPTH_LOW; add: 2226 -&gt; #MQRC_Q_SERVICE_INTERVAL_HIGH; add: 2227 -&gt; #MQRC_Q_SERVICE_INTERVAL_OK; add: 2280 -&gt; #MQRC_HCONFIG_ERROR; add: 2281 -&gt; #MQRC_FUNCTION_ERROR; add: 2282 -&gt; #MQRC_CHANNEL_STARTED; add: 2283 -&gt; #MQRC_CHANNEL_STOPPED; add: 2284 -&gt; #MQRC_CHANNEL_CONV_ERROR; add: 2285 -&gt; #MQRC_SERVICE_NOT_AVAILABLE; add: 2286 -&gt; #MQRC_INITIALIZATION_FAILED; add: 2287 -&gt; #MQRC_TERMINATION_FAILED; add: 2288 -&gt; #MQRC_UNKNOWN_Q_NAME; add: 2289 -&gt; #MQRC_SERVICE_ERROR; add: 2290 -&gt; #MQRC_Q_ALREADY_EXISTS; add: 2291 -&gt; #MQRC_USER_ID_NOT_AVAILABLE; add: 2292 -&gt; #MQRC_UNKNOWN_ENTITY; add: 2293 -&gt; #MQRC_UNKNOWN_AUTH_ENTITY; add: 2294 -&gt; #MQRC_UNKNOWN_REF_OBJECT; add: 2295 -&gt; #MQRC_CHANNEL_ACTIVATED; add: 2296 -&gt; #MQRC_CHANNEL_NOT_ACTIVATED; yourself</body></methods><methods><class-id>MQ.AbstractMQInterface class</class-id> <category>class initialization</category><body package="MQ-XIF">flushDefaultStructs	DefaultStructs := Dictionary new.</body><body package="MQ-XIF">installOn: platformArray 	"The receiver is being installed on a new platform."	self flushDefaultStructs.	DefaultSizes := Dictionary new.	self errorDict</body></methods><methods><class-id>MQ.AbstractMQInterface class</class-id> <category>accessing defaults</category><body package="MQ-XIF">maxMessageLength	"Return the value for the maximum message size of a channel.	This value is used in an MQCD struct when creating a new client connection.	The default set here is 4MBytes, which is taken from the C header files.	Use 'setMaxMessageSize:' prior to create a connection to MQ	in order to use own prefered value."	^DefaultSizes at: #MaxMsgLength ifAbsentPut: [1024 * 1024 * 4]</body><body package="MQ-XIF">setMaxMessageLength: anInteger	"Set the value for the maximum message size of a channel.	This value is used in an MQCD struct when creating a new client connection.	This message has to be used prior to create a connection to MQ,	 in order to use own prefered value."	DefaultSizes at: #MaxMsgLength put: anInteger.	self flushDefaultStructs</body></methods><methods><class-id>MQ.AbstractMQInterface class</class-id> <category>private</category><body package="MQ-XIF">libraryFilesSearchSignals	"Answer a SignalCollection used to handle exceptions raised when scanning for library	 files. The signals answered by this method will result in those signals being ignored by	 the library search machinery. Clients should not answer signals they wish to receive."		^ExternalLibraryHolder libraryNotFoundSignal		, ExternalLibrary libraryNotLoadedSignal</body></methods><methods><class-id>MQ.MQInterface</class-id> <category>defines</category><body package="MQ-XIF">MQACTT_CICS_LUOW_ID	&lt;C: #define MQACTT_CICS_LUOW_ID 1	&gt;</body><body package="MQ-XIF">MQACTT_DOS_DEFAULT	&lt;C: #define MQACTT_DOS_DEFAULT 5	&gt;</body><body package="MQ-XIF">MQACTT_NT_SECURITY_ID	&lt;C: #define MQACTT_NT_SECURITY_ID 11	&gt;</body><body package="MQ-XIF">MQACTT_OS2_DEFAULT	&lt;C: #define MQACTT_OS2_DEFAULT 4	&gt;</body><body package="MQ-XIF">MQACTT_OS400_ACCOUNT_TOKEN	&lt;C: #define MQACTT_OS400_ACCOUNT_TOKEN 8	&gt;</body><body package="MQ-XIF">MQACTT_UNIX_NUMERIC_ID	&lt;C: #define MQACTT_UNIX_NUMERIC_ID 6	&gt;</body><body package="MQ-XIF">MQACTT_UNKNOWN	&lt;C: #define MQACTT_UNKNOWN 0	&gt;</body><body package="MQ-XIF">MQACTT_USER	&lt;C: #define MQACTT_USER 25	&gt;</body><body package="MQ-XIF">MQACTT_WINDOWS_DEFAULT	&lt;C: #define MQACTT_WINDOWS_DEFAULT 9	&gt;</body><body package="MQ-XIF">MQACT_NONE	&lt;C: #define MQACT_NONE "                                "	&gt;</body><body package="MQ-XIF">MQACT_NONE_ARRAY	&lt;C: #define MQACT_NONE_ARRAY 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	&gt;</body><body package="MQ-XIF">MQAIR_CURRENT_VERSION	&lt;C: #define MQAIR_CURRENT_VERSION 1	&gt;</body><body package="MQ-XIF">MQAIR_DEFAULT	&lt;C: #define MQAIR_DEFAULT {MQAIR_STRUC_ID_ARRAY},MQAIR_VERSION_1,MQAIT_CRL_LDAP,{""},NULL,0,0,{""}	&gt;</body><body package="MQ-XIF">MQAIR_STRUC_ID	&lt;C: #define MQAIR_STRUC_ID "AIR "	&gt;</body><body package="MQ-XIF">MQAIR_STRUC_ID_ARRAY	&lt;C: #define MQAIR_STRUC_ID_ARRAY 65,73,82,32	&gt;</body><body package="MQ-XIF">MQAIR_VERSION_1	&lt;C: #define MQAIR_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQAIT_CRL_LDAP	&lt;C: #define MQAIT_CRL_LDAP 1	&gt;</body><body package="MQ-XIF">MQAT_AIX	&lt;C: #define MQAT_AIX 6	&gt;</body><body package="MQ-XIF">MQAT_BROKER	&lt;C: #define MQAT_BROKER 26	&gt;</body><body package="MQ-XIF">MQAT_CHANNEL_INITIATOR	&lt;C: #define MQAT_CHANNEL_INITIATOR 30	&gt;</body><body package="MQ-XIF">MQAT_CICS	&lt;C: #define MQAT_CICS 1	&gt;</body><body package="MQ-XIF">MQAT_CICS_BRIDGE	&lt;C: #define MQAT_CICS_BRIDGE 21	&gt;</body><body package="MQ-XIF">MQAT_CICS_VSE	&lt;C: #define MQAT_CICS_VSE 10	&gt;</body><body package="MQ-XIF">MQAT_DEFAULT	&lt;C: #define MQAT_DEFAULT 6	&gt;</body><body package="MQ-XIF">MQAT_DOS	&lt;C: #define MQAT_DOS 5	&gt;</body><body package="MQ-XIF">MQAT_DQM	&lt;C: #define MQAT_DQM 29	&gt;</body><body package="MQ-XIF">MQAT_GUARDIAN	&lt;C: #define MQAT_GUARDIAN 13	&gt;</body><body package="MQ-XIF">MQAT_IMS	&lt;C: #define MQAT_IMS 3	&gt;</body><body package="MQ-XIF">MQAT_IMS_BRIDGE	&lt;C: #define MQAT_IMS_BRIDGE 19	&gt;</body><body package="MQ-XIF">MQAT_JAVA	&lt;C: #define MQAT_JAVA 28	&gt;</body><body package="MQ-XIF">MQAT_MVS	&lt;C: #define MQAT_MVS 2	&gt;</body><body package="MQ-XIF">MQAT_NOTES_AGENT	&lt;C: #define MQAT_NOTES_AGENT 22	&gt;</body><body package="MQ-XIF">MQAT_NO_CONTEXT	&lt;C: #define MQAT_NO_CONTEXT 0	&gt;</body><body package="MQ-XIF">MQAT_NSK	&lt;C: #define MQAT_NSK 13	&gt;</body><body package="MQ-XIF">MQAT_OS2	&lt;C: #define MQAT_OS2 4	&gt;</body><body package="MQ-XIF">MQAT_OS390	&lt;C: #define MQAT_OS390 2	&gt;</body><body package="MQ-XIF">MQAT_OS400	&lt;C: #define MQAT_OS400 8	&gt;</body><body package="MQ-XIF">MQAT_QMGR	&lt;C: #define MQAT_QMGR 7	&gt;</body><body package="MQ-XIF">MQAT_UNIX	&lt;C: #define MQAT_UNIX 6	&gt;</body><body package="MQ-XIF">MQAT_UNKNOWN	&lt;C: #define MQAT_UNKNOWN (-1)	&gt;</body><body package="MQ-XIF">MQAT_USER	&lt;C: #define MQAT_USER 25	&gt;</body><body package="MQ-XIF">MQAT_USER_FIRST	&lt;C: #define MQAT_USER_FIRST 65536	&gt;</body><body package="MQ-XIF">MQAT_USER_LAST	&lt;C: #define MQAT_USER_LAST 999999999	&gt;</body><body package="MQ-XIF">MQAT_VMS	&lt;C: #define MQAT_VMS 12	&gt;</body><body package="MQ-XIF">MQAT_VOS	&lt;C: #define MQAT_VOS 14	&gt;</body><body package="MQ-XIF">MQAT_WINDOWS	&lt;C: #define MQAT_WINDOWS 9	&gt;</body><body package="MQ-XIF">MQAT_WINDOWS_NT	&lt;C: #define MQAT_WINDOWS_NT 11	&gt;</body><body package="MQ-XIF">MQAT_XCF	&lt;C: #define MQAT_XCF 20	&gt;</body><body package="MQ-XIF">MQAT_ZOS	&lt;C: #define MQAT_ZOS 2	&gt;</body><body package="MQ-XIF">MQBND_BIND_NOT_FIXED	&lt;C: #define MQBND_BIND_NOT_FIXED 1	&gt;</body><body package="MQ-XIF">MQBND_BIND_ON_OPEN	&lt;C: #define MQBND_BIND_ON_OPEN 0	&gt;</body><body package="MQ-XIF">MQBO_CURRENT_VERSION	&lt;C: #define MQBO_CURRENT_VERSION 1	&gt;</body><body package="MQ-XIF">MQBO_DEFAULT	&lt;C: #define MQBO_DEFAULT {MQBO_STRUC_ID_ARRAY},MQBO_VERSION_1,MQBO_NONE	&gt;</body><body package="MQ-XIF">MQBO_NONE	&lt;C: #define MQBO_NONE 0x00000000	&gt;</body><body package="MQ-XIF">MQBO_STRUC_ID	&lt;C: #define MQBO_STRUC_ID "BO  "	&gt;</body><body package="MQ-XIF">MQBO_STRUC_ID_ARRAY	&lt;C: #define MQBO_STRUC_ID_ARRAY 66,79,32,32	&gt;</body><body package="MQ-XIF">MQBO_VERSION_1	&lt;C: #define MQBO_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQCADSD_MSGFORMAT	&lt;C: #define MQCADSD_MSGFORMAT 0x00000100	&gt;</body><body package="MQ-XIF">MQCADSD_NONE	&lt;C: #define MQCADSD_NONE 0x00000000	&gt;</body><body package="MQ-XIF">MQCADSD_RECV	&lt;C: #define MQCADSD_RECV 0x00000010	&gt;</body><body package="MQ-XIF">MQCADSD_SEND	&lt;C: #define MQCADSD_SEND 0x00000001	&gt;</body><body package="MQ-XIF">MQCA_ALTERATION_DATE	&lt;C: #define MQCA_ALTERATION_DATE 2027	&gt;</body><body package="MQ-XIF">MQCA_ALTERATION_TIME	&lt;C: #define MQCA_ALTERATION_TIME 2028	&gt;</body><body package="MQ-XIF">MQCA_APPL_ID	&lt;C: #define MQCA_APPL_ID 2001	&gt;</body><body package="MQ-XIF">MQCA_AUTH_INFO_CONN_NAME	&lt;C: #define MQCA_AUTH_INFO_CONN_NAME 2053	&gt;</body><body package="MQ-XIF">MQCA_AUTH_INFO_DESC	&lt;C: #define MQCA_AUTH_INFO_DESC 2046	&gt;</body><body package="MQ-XIF">MQCA_AUTH_INFO_NAME	&lt;C: #define MQCA_AUTH_INFO_NAME 2045	&gt;</body><body package="MQ-XIF">MQCA_BACKOUT_REQ_Q_NAME	&lt;C: #define MQCA_BACKOUT_REQ_Q_NAME 2019	&gt;</body><body package="MQ-XIF">MQCA_BASE_Q_NAME	&lt;C: #define MQCA_BASE_Q_NAME 2002	&gt;</body><body package="MQ-XIF">MQCA_CF_STRUC_DESC	&lt;C: #define MQCA_CF_STRUC_DESC 2052	&gt;</body><body package="MQ-XIF">MQCA_CF_STRUC_NAME	&lt;C: #define MQCA_CF_STRUC_NAME 2039	&gt;</body><body package="MQ-XIF">MQCA_CHANNEL_AUTO_DEF_EXIT	&lt;C: #define MQCA_CHANNEL_AUTO_DEF_EXIT 2026	&gt;</body><body package="MQ-XIF">MQCA_CLUSTER_DATE	&lt;C: #define MQCA_CLUSTER_DATE 2037	&gt;</body><body package="MQ-XIF">MQCA_CLUSTER_NAME	&lt;C: #define MQCA_CLUSTER_NAME 2029	&gt;</body><body package="MQ-XIF">MQCA_CLUSTER_NAMELIST	&lt;C: #define MQCA_CLUSTER_NAMELIST 2030	&gt;</body><body package="MQ-XIF">MQCA_CLUSTER_Q_MGR_NAME	&lt;C: #define MQCA_CLUSTER_Q_MGR_NAME 2031	&gt;</body><body package="MQ-XIF">MQCA_CLUSTER_TIME	&lt;C: #define MQCA_CLUSTER_TIME 2038	&gt;</body><body package="MQ-XIF">MQCA_CLUSTER_WORKLOAD_DATA	&lt;C: #define MQCA_CLUSTER_WORKLOAD_DATA 2034	&gt;</body><body package="MQ-XIF">MQCA_CLUSTER_WORKLOAD_EXIT	&lt;C: #define MQCA_CLUSTER_WORKLOAD_EXIT 2033	&gt;</body><body package="MQ-XIF">MQCA_COMMAND_INPUT_Q_NAME	&lt;C: #define MQCA_COMMAND_INPUT_Q_NAME 2003	&gt;</body><body package="MQ-XIF">MQCA_CREATION_DATE	&lt;C: #define MQCA_CREATION_DATE 2004	&gt;</body><body package="MQ-XIF">MQCA_CREATION_TIME	&lt;C: #define MQCA_CREATION_TIME 2005	&gt;</body><body package="MQ-XIF">MQCA_DEAD_LETTER_Q_NAME	&lt;C: #define MQCA_DEAD_LETTER_Q_NAME 2006	&gt;</body><body package="MQ-XIF">MQCA_DEF_XMIT_Q_NAME	&lt;C: #define MQCA_DEF_XMIT_Q_NAME 2025	&gt;</body><body package="MQ-XIF">MQCA_ENV_DATA	&lt;C: #define MQCA_ENV_DATA 2007	&gt;</body><body package="MQ-XIF">MQCA_FIRST	&lt;C: #define MQCA_FIRST 2001	&gt;</body><body package="MQ-XIF">MQCA_IGQ_USER_ID	&lt;C: #define MQCA_IGQ_USER_ID 2041	&gt;</body><body package="MQ-XIF">MQCA_INITIATION_Q_NAME	&lt;C: #define MQCA_INITIATION_Q_NAME 2008	&gt;</body><body package="MQ-XIF">MQCA_LAST	&lt;C: #define MQCA_LAST 4000	&gt;</body><body package="MQ-XIF">MQCA_LAST_USED	&lt;C: #define MQCA_LAST_USED 2053	&gt;</body><body package="MQ-XIF">MQCA_LDAP_PASSWORD	&lt;C: #define MQCA_LDAP_PASSWORD 2048	&gt;</body><body package="MQ-XIF">MQCA_LDAP_USER_NAME	&lt;C: #define MQCA_LDAP_USER_NAME 2047	&gt;</body><body package="MQ-XIF">MQCA_NAMELIST_DESC	&lt;C: #define MQCA_NAMELIST_DESC 2009	&gt;</body><body package="MQ-XIF">MQCA_NAMELIST_NAME	&lt;C: #define MQCA_NAMELIST_NAME 2010	&gt;</body><body package="MQ-XIF">MQCA_NAMES	&lt;C: #define MQCA_NAMES 2020	&gt;</body><body package="MQ-XIF">MQCA_PROCESS_DESC	&lt;C: #define MQCA_PROCESS_DESC 2011	&gt;</body><body package="MQ-XIF">MQCA_PROCESS_NAME	&lt;C: #define MQCA_PROCESS_NAME 2012	&gt;</body><body package="MQ-XIF">MQCA_QSG_NAME	&lt;C: #define MQCA_QSG_NAME 2040	&gt;</body><body package="MQ-XIF">MQCA_Q_DESC	&lt;C: #define MQCA_Q_DESC 2013	&gt;</body><body package="MQ-XIF">MQCA_Q_MGR_DESC	&lt;C: #define MQCA_Q_MGR_DESC 2014	&gt;</body><body package="MQ-XIF">MQCA_Q_MGR_IDENTIFIER	&lt;C: #define MQCA_Q_MGR_IDENTIFIER 2032	&gt;</body><body package="MQ-XIF">MQCA_Q_MGR_NAME	&lt;C: #define MQCA_Q_MGR_NAME 2015	&gt;</body><body package="MQ-XIF">MQCA_Q_NAME	&lt;C: #define MQCA_Q_NAME 2016	&gt;</body><body package="MQ-XIF">MQCA_REMOTE_Q_MGR_NAME	&lt;C: #define MQCA_REMOTE_Q_MGR_NAME 2017	&gt;</body><body package="MQ-XIF">MQCA_REMOTE_Q_NAME	&lt;C: #define MQCA_REMOTE_Q_NAME 2018	&gt;</body><body package="MQ-XIF">MQCA_REPOSITORY_NAME	&lt;C: #define MQCA_REPOSITORY_NAME 2035	&gt;</body><body package="MQ-XIF">MQCA_REPOSITORY_NAMELIST	&lt;C: #define MQCA_REPOSITORY_NAMELIST 2036	&gt;</body><body package="MQ-XIF">MQCA_SSL_CRL_NAMELIST	&lt;C: #define MQCA_SSL_CRL_NAMELIST 2050	&gt;</body><body package="MQ-XIF">MQCA_SSL_CRYPTO_HARDWARE	&lt;C: #define MQCA_SSL_CRYPTO_HARDWARE 2051	&gt;</body><body package="MQ-XIF">MQCA_SSL_KEY_REPOSITORY	&lt;C: #define MQCA_SSL_KEY_REPOSITORY 2049	&gt;</body><body package="MQ-XIF">MQCA_STORAGE_CLASS	&lt;C: #define MQCA_STORAGE_CLASS 2022	&gt;</body><body package="MQ-XIF">MQCA_STORAGE_CLASS_DESC	&lt;C: #define MQCA_STORAGE_CLASS_DESC 2042	&gt;</body><body package="MQ-XIF">MQCA_TRIGGER_DATA	&lt;C: #define MQCA_TRIGGER_DATA 2023	&gt;</body><body package="MQ-XIF">MQCA_USER_DATA	&lt;C: #define MQCA_USER_DATA 2021	&gt;</body><body package="MQ-XIF">MQCA_USER_LIST	&lt;C: #define MQCA_USER_LIST 4000	&gt;</body><body package="MQ-XIF">MQCA_XCF_GROUP_NAME	&lt;C: #define MQCA_XCF_GROUP_NAME 2043	&gt;</body><body package="MQ-XIF">MQCA_XCF_MEMBER_NAME	&lt;C: #define MQCA_XCF_MEMBER_NAME 2044	&gt;</body><body package="MQ-XIF">MQCA_XMIT_Q_NAME	&lt;C: #define MQCA_XMIT_Q_NAME 2024	&gt;</body><body package="MQ-XIF">MQCCSI_DEFAULT	&lt;C: #define MQCCSI_DEFAULT 0	&gt;</body><body package="MQ-XIF">MQCCSI_EMBEDDED	&lt;C: #define MQCCSI_EMBEDDED (-1)	&gt;</body><body package="MQ-XIF">MQCCSI_INHERIT	&lt;C: #define MQCCSI_INHERIT (-2)	&gt;</body><body package="MQ-XIF">MQCCSI_Q_MGR	&lt;C: #define MQCCSI_Q_MGR 0	&gt;</body><body package="MQ-XIF">MQCCSI_UNDEFINED	&lt;C: #define MQCCSI_UNDEFINED 0	&gt;</body><body package="MQ-XIF">MQCCT_NO	&lt;C: #define MQCCT_NO 0x00000000	&gt;</body><body package="MQ-XIF">MQCCT_YES	&lt;C: #define MQCCT_YES 0x00000001	&gt;</body><body package="MQ-XIF">MQCC_FAILED	&lt;C: #define MQCC_FAILED 2	&gt;</body><body package="MQ-XIF">MQCC_OK	&lt;C: #define MQCC_OK 0	&gt;</body><body package="MQ-XIF">MQCC_UNKNOWN	&lt;C: #define MQCC_UNKNOWN (-1)	&gt;</body><body package="MQ-XIF">MQCC_WARNING	&lt;C: #define MQCC_WARNING 1	&gt;</body><body package="MQ-XIF">MQCFAC_NONE	&lt;C: #define MQCFAC_NONE "        "	&gt;</body><body package="MQ-XIF">MQCFAC_NONE_ARRAY	&lt;C: #define MQCFAC_NONE_ARRAY 0,0,0,0,0,0,0,0	&gt;</body><body package="MQ-XIF">MQCFUNC_MQCONN	&lt;C: #define MQCFUNC_MQCONN "CONN"	&gt;</body><body package="MQ-XIF">MQCFUNC_MQCONN_ARRAY	&lt;C: #define MQCFUNC_MQCONN_ARRAY 67,79,78,78	&gt;</body><body package="MQ-XIF">MQCFUNC_MQGET	&lt;C: #define MQCFUNC_MQGET "GET "	&gt;</body><body package="MQ-XIF">MQCFUNC_MQGET_ARRAY	&lt;C: #define MQCFUNC_MQGET_ARRAY 71,69,84,32	&gt;</body><body package="MQ-XIF">MQCFUNC_MQINQ	&lt;C: #define MQCFUNC_MQINQ "INQ "	&gt;</body><body package="MQ-XIF">MQCFUNC_MQINQ_ARRAY	&lt;C: #define MQCFUNC_MQINQ_ARRAY 73,78,81,32	&gt;</body><body package="MQ-XIF">MQCFUNC_MQOPEN	&lt;C: #define MQCFUNC_MQOPEN "OPEN"	&gt;</body><body package="MQ-XIF">MQCFUNC_MQOPEN_ARRAY	&lt;C: #define MQCFUNC_MQOPEN_ARRAY 79,80,69,78	&gt;</body><body package="MQ-XIF">MQCFUNC_MQPUT	&lt;C: #define MQCFUNC_MQPUT "PUT "	&gt;</body><body package="MQ-XIF">MQCFUNC_MQPUT1	&lt;C: #define MQCFUNC_MQPUT1 "PUT1"	&gt;</body><body package="MQ-XIF">MQCFUNC_MQPUT1_ARRAY	&lt;C: #define MQCFUNC_MQPUT1_ARRAY 80,85,84,49	&gt;</body><body package="MQ-XIF">MQCFUNC_MQPUT_ARRAY	&lt;C: #define MQCFUNC_MQPUT_ARRAY 80,85,84,32	&gt;</body><body package="MQ-XIF">MQCFUNC_NONE	&lt;C: #define MQCFUNC_NONE "    "	&gt;</body><body package="MQ-XIF">MQCFUNC_NONE_ARRAY	&lt;C: #define MQCFUNC_NONE_ARRAY 32,32,32,32	&gt;</body><body package="MQ-XIF">MQCGWI_DEFAULT	&lt;C: #define MQCGWI_DEFAULT (-2)	&gt;</body><body package="MQ-XIF">MQCHAD_DISABLED	&lt;C: #define MQCHAD_DISABLED 0	&gt;</body><body package="MQ-XIF">MQCHAD_ENABLED	&lt;C: #define MQCHAD_ENABLED 1	&gt;</body><body package="MQ-XIF">MQCIH_CURRENT_LENGTH	&lt;C: #define MQCIH_CURRENT_LENGTH 180	&gt;</body><body package="MQ-XIF">MQCIH_CURRENT_VERSION	&lt;C: #define MQCIH_CURRENT_VERSION 2	&gt;</body><body package="MQ-XIF">MQCIH_DEFAULT	&lt;C: #define MQCIH_DEFAULT {MQCIH_STRUC_ID_ARRAY},MQCIH_VERSION_2,MQCIH_LENGTH_2,0,0,{MQFMT_NONE_ARRAY},MQCIH_NONE,MQCRC_OK,MQCC_OK,MQRC_NONE,MQCUOWC_ONLY,MQCGWI_DEFAULT,MQCLT_PROGRAM,MQCODL_AS_INPUT,0,MQCADSD_NONE,MQCCT_NO,MQCTES_NOSYNC,{MQCFAC_NONE_ARRAY},{MQCFUNC_NONE_ARRAY},{32,32,32,32},{32,32,32,32,32,32,32,32},{32,32,32,32,32,32,32,32},{MQFMT_NONE_ARRAY},{32,32,32,32},{32,32,32,32},{32,32,32,32},{32,32,32,32},{32,32,32,32},{MQCSC_NONE_ARRAY},{32,32,32,32},{32,32,32,32},{32,32,32,32,32,32,32,32},{32,32,32,32,32,32,32,32},0,0,0,0	&gt;</body><body package="MQ-XIF">MQCIH_LENGTH_1	&lt;C: #define MQCIH_LENGTH_1 164	&gt;</body><body package="MQ-XIF">MQCIH_LENGTH_2	&lt;C: #define MQCIH_LENGTH_2 180	&gt;</body><body package="MQ-XIF">MQCIH_NONE	&lt;C: #define MQCIH_NONE 0x00000000	&gt;</body><body package="MQ-XIF">MQCIH_STRUC_ID	&lt;C: #define MQCIH_STRUC_ID "CIH "	&gt;</body><body package="MQ-XIF">MQCIH_STRUC_ID_ARRAY	&lt;C: #define MQCIH_STRUC_ID_ARRAY 67,73,72,32	&gt;</body><body package="MQ-XIF">MQCIH_VERSION_1	&lt;C: #define MQCIH_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQCIH_VERSION_2	&lt;C: #define MQCIH_VERSION_2 2	&gt;</body><body package="MQ-XIF">MQCI_NEW_SESSION	&lt;C: #define MQCI_NEW_SESSION "AMQ!NEW_SESSION_CORRELID"	&gt;</body><body package="MQ-XIF">MQCI_NEW_SESSION_ARRAY	&lt;C: #define MQCI_NEW_SESSION_ARRAY 65,77,81,33,78,69,87,95,83,69,83,83,73,79,78,95,67,79,82,82,69,76,73,68	&gt;</body><body package="MQ-XIF">MQCI_NONE	&lt;C: #define MQCI_NONE "                        "	&gt;</body><body package="MQ-XIF">MQCI_NONE_ARRAY	&lt;C: #define MQCI_NONE_ARRAY 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	&gt;</body><body package="MQ-XIF">MQCLT_PROGRAM	&lt;C: #define MQCLT_PROGRAM 1	&gt;</body><body package="MQ-XIF">MQCLT_TRANSACTION	&lt;C: #define MQCLT_TRANSACTION 2	&gt;</body><body package="MQ-XIF">MQCMDL_LEVEL_1	&lt;C: #define MQCMDL_LEVEL_1 100	&gt;</body><body package="MQ-XIF">MQCMDL_LEVEL_101	&lt;C: #define MQCMDL_LEVEL_101 101	&gt;</body><body package="MQ-XIF">MQCMDL_LEVEL_110	&lt;C: #define MQCMDL_LEVEL_110 110	&gt;</body><body package="MQ-XIF">MQCMDL_LEVEL_114	&lt;C: #define MQCMDL_LEVEL_114 114	&gt;</body><body package="MQ-XIF">MQCMDL_LEVEL_120	&lt;C: #define MQCMDL_LEVEL_120 120	&gt;</body><body package="MQ-XIF">MQCMDL_LEVEL_200	&lt;C: #define MQCMDL_LEVEL_200 200	&gt;</body><body package="MQ-XIF">MQCMDL_LEVEL_201	&lt;C: #define MQCMDL_LEVEL_201 201	&gt;</body><body package="MQ-XIF">MQCMDL_LEVEL_210	&lt;C: #define MQCMDL_LEVEL_210 210	&gt;</body><body package="MQ-XIF">MQCMDL_LEVEL_220	&lt;C: #define MQCMDL_LEVEL_220 220	&gt;</body><body package="MQ-XIF">MQCMDL_LEVEL_221	&lt;C: #define MQCMDL_LEVEL_221 221	&gt;</body><body package="MQ-XIF">MQCMDL_LEVEL_320	&lt;C: #define MQCMDL_LEVEL_320 320	&gt;</body><body package="MQ-XIF">MQCMDL_LEVEL_420	&lt;C: #define MQCMDL_LEVEL_420 420	&gt;</body><body package="MQ-XIF">MQCMDL_LEVEL_500	&lt;C: #define MQCMDL_LEVEL_500 500	&gt;</body><body package="MQ-XIF">MQCMDL_LEVEL_510	&lt;C: #define MQCMDL_LEVEL_510 510	&gt;</body><body package="MQ-XIF">MQCMDL_LEVEL_520	&lt;C: #define MQCMDL_LEVEL_520 520	&gt;</body><body package="MQ-XIF">MQCMDL_LEVEL_530	&lt;C: #define MQCMDL_LEVEL_530 530	&gt;</body><body package="MQ-XIF">MQCNO_CURRENT_VERSION	&lt;C: #define MQCNO_CURRENT_VERSION 4	&gt;</body><body package="MQ-XIF">MQCNO_DEFAULT	&lt;C: #define MQCNO_DEFAULT {MQCNO_STRUC_ID_ARRAY},MQCNO_VERSION_1,MQCNO_NONE,0,NULL,{MQCT_NONE_ARRAY},NULL,0	&gt;</body><body package="MQ-XIF">MQCNO_FASTPATH_BINDING	&lt;C: #define MQCNO_FASTPATH_BINDING 0x00000001	&gt;</body><body package="MQ-XIF">MQCNO_HANDLE_SHARE_BLOCK	&lt;C: #define MQCNO_HANDLE_SHARE_BLOCK 0x00000040	&gt;</body><body package="MQ-XIF">MQCNO_HANDLE_SHARE_NONE	&lt;C: #define MQCNO_HANDLE_SHARE_NONE 0x00000020	&gt;</body><body package="MQ-XIF">MQCNO_HANDLE_SHARE_NO_BLOCK	&lt;C: #define MQCNO_HANDLE_SHARE_NO_BLOCK 0x00000080	&gt;</body><body package="MQ-XIF">MQCNO_NONE	&lt;C: #define MQCNO_NONE 0x00000000	&gt;</body><body package="MQ-XIF">MQCNO_STANDARD_BINDING	&lt;C: #define MQCNO_STANDARD_BINDING 0x00000000	&gt;</body><body package="MQ-XIF">MQCNO_STRUC_ID	&lt;C: #define MQCNO_STRUC_ID "CNO "	&gt;</body><body package="MQ-XIF">MQCNO_STRUC_ID_ARRAY	&lt;C: #define MQCNO_STRUC_ID_ARRAY 67,78,79,32	&gt;</body><body package="MQ-XIF">MQCNO_VERSION_1	&lt;C: #define MQCNO_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQCNO_VERSION_2	&lt;C: #define MQCNO_VERSION_2 2	&gt;</body><body package="MQ-XIF">MQCNO_VERSION_3	&lt;C: #define MQCNO_VERSION_3 3	&gt;</body><body package="MQ-XIF">MQCNO_VERSION_4	&lt;C: #define MQCNO_VERSION_4 4	&gt;</body><body package="MQ-XIF">MQCODL_AS_INPUT	&lt;C: #define MQCODL_AS_INPUT (-1)	&gt;</body><body package="MQ-XIF">MQCO_DELETE	&lt;C: #define MQCO_DELETE 0x00000001	&gt;</body><body package="MQ-XIF">MQCO_DELETE_PURGE	&lt;C: #define MQCO_DELETE_PURGE 0x00000002	&gt;</body><body package="MQ-XIF">MQCO_NONE	&lt;C: #define MQCO_NONE 0x00000000	&gt;</body><body package="MQ-XIF">MQCQT_ALIAS_Q	&lt;C: #define MQCQT_ALIAS_Q 2	&gt;</body><body package="MQ-XIF">MQCQT_LOCAL_Q	&lt;C: #define MQCQT_LOCAL_Q 1	&gt;</body><body package="MQ-XIF">MQCQT_Q_MGR_ALIAS	&lt;C: #define MQCQT_Q_MGR_ALIAS 4	&gt;</body><body package="MQ-XIF">MQCQT_REMOTE_Q	&lt;C: #define MQCQT_REMOTE_Q 3	&gt;</body><body package="MQ-XIF">MQCRC_APPLICATION_ABEND	&lt;C: #define MQCRC_APPLICATION_ABEND 5	&gt;</body><body package="MQ-XIF">MQCRC_BRIDGE_ABEND	&lt;C: #define MQCRC_BRIDGE_ABEND 4	&gt;</body><body package="MQ-XIF">MQCRC_BRIDGE_ERROR	&lt;C: #define MQCRC_BRIDGE_ERROR 3	&gt;</body><body package="MQ-XIF">MQCRC_BRIDGE_TIMEOUT	&lt;C: #define MQCRC_BRIDGE_TIMEOUT 8	&gt;</body><body package="MQ-XIF">MQCRC_CICS_EXEC_ERROR	&lt;C: #define MQCRC_CICS_EXEC_ERROR 1	&gt;</body><body package="MQ-XIF">MQCRC_MQ_API_ERROR	&lt;C: #define MQCRC_MQ_API_ERROR 2	&gt;</body><body package="MQ-XIF">MQCRC_OK	&lt;C: #define MQCRC_OK 0	&gt;</body><body package="MQ-XIF">MQCRC_PROGRAM_NOT_AVAILABLE	&lt;C: #define MQCRC_PROGRAM_NOT_AVAILABLE 7	&gt;</body><body package="MQ-XIF">MQCRC_SECURITY_ERROR	&lt;C: #define MQCRC_SECURITY_ERROR 6	&gt;</body><body package="MQ-XIF">MQCRC_TRANSID_NOT_AVAILABLE	&lt;C: #define MQCRC_TRANSID_NOT_AVAILABLE 9	&gt;</body><body package="MQ-XIF">MQCSC_NONE	&lt;C: #define MQCSC_NONE "    "	&gt;</body><body package="MQ-XIF">MQCSC_NONE_ARRAY	&lt;C: #define MQCSC_NONE_ARRAY 32,32,32,32	&gt;</body><body package="MQ-XIF">MQCSC_START	&lt;C: #define MQCSC_START "S   "	&gt;</body><body package="MQ-XIF">MQCSC_STARTDATA	&lt;C: #define MQCSC_STARTDATA "SD  "	&gt;</body><body package="MQ-XIF">MQCSC_STARTDATA_ARRAY	&lt;C: #define MQCSC_STARTDATA_ARRAY 83,68,32,32	&gt;</body><body package="MQ-XIF">MQCSC_START_ARRAY	&lt;C: #define MQCSC_START_ARRAY 83,32,32,32	&gt;</body><body package="MQ-XIF">MQCSC_TERMINPUT	&lt;C: #define MQCSC_TERMINPUT "TD  "	&gt;</body><body package="MQ-XIF">MQCSC_TERMINPUT_ARRAY	&lt;C: #define MQCSC_TERMINPUT_ARRAY 84,68,32,32	&gt;</body><body package="MQ-XIF">MQCTES_BACKOUT	&lt;C: #define MQCTES_BACKOUT 0x00001100	&gt;</body><body package="MQ-XIF">MQCTES_COMMIT	&lt;C: #define MQCTES_COMMIT 0x00000100	&gt;</body><body package="MQ-XIF">MQCTES_ENDTASK	&lt;C: #define MQCTES_ENDTASK 0x00010000	&gt;</body><body package="MQ-XIF">MQCTES_NOSYNC	&lt;C: #define MQCTES_NOSYNC 0x00000000	&gt;</body><body package="MQ-XIF">MQCT_NONE	&lt;C: #define MQCT_NONE "                                                                                                                                "	&gt;</body><body package="MQ-XIF">MQCT_NONE_ARRAY	&lt;C: #define MQCT_NONE_ARRAY 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	&gt;</body><body package="MQ-XIF">MQCUOWC_BACKOUT	&lt;C: #define MQCUOWC_BACKOUT 0x00001100	&gt;</body><body package="MQ-XIF">MQCUOWC_COMMIT	&lt;C: #define MQCUOWC_COMMIT 0x00000100	&gt;</body><body package="MQ-XIF">MQCUOWC_CONTINUE	&lt;C: #define MQCUOWC_CONTINUE 0x00010000	&gt;</body><body package="MQ-XIF">MQCUOWC_FIRST	&lt;C: #define MQCUOWC_FIRST 0x00000011	&gt;</body><body package="MQ-XIF">MQCUOWC_LAST	&lt;C: #define MQCUOWC_LAST 0x00000110	&gt;</body><body package="MQ-XIF">MQCUOWC_MIDDLE	&lt;C: #define MQCUOWC_MIDDLE 0x00000010	&gt;</body><body package="MQ-XIF">MQCUOWC_ONLY	&lt;C: #define MQCUOWC_ONLY 0x00000111	&gt;</body><body package="MQ-XIF">MQC_INCLUDED	&lt;C: #define MQC_INCLUDED 	&gt;</body><body package="MQ-XIF">MQDHF_NEW_MSG_IDS	&lt;C: #define MQDHF_NEW_MSG_IDS 0x00000001	&gt;</body><body package="MQ-XIF">MQDHF_NONE	&lt;C: #define MQDHF_NONE 0x00000000	&gt;</body><body package="MQ-XIF">MQDH_CURRENT_VERSION	&lt;C: #define MQDH_CURRENT_VERSION 1	&gt;</body><body package="MQ-XIF">MQDH_DEFAULT	&lt;C: #define MQDH_DEFAULT {MQDH_STRUC_ID_ARRAY},MQDH_VERSION_1,0,0,MQCCSI_UNDEFINED,{MQFMT_NONE_ARRAY},MQDHF_NONE,MQPMRF_NONE,0,0,0	&gt;</body><body package="MQ-XIF">MQDH_STRUC_ID	&lt;C: #define MQDH_STRUC_ID "DH  "	&gt;</body><body package="MQ-XIF">MQDH_STRUC_ID_ARRAY	&lt;C: #define MQDH_STRUC_ID_ARRAY 68,72,32,32	&gt;</body><body package="MQ-XIF">MQDH_VERSION_1	&lt;C: #define MQDH_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQDLH_CURRENT_VERSION	&lt;C: #define MQDLH_CURRENT_VERSION 1	&gt;</body><body package="MQ-XIF">MQDLH_DEFAULT	&lt;C: #define MQDLH_DEFAULT {MQDLH_STRUC_ID_ARRAY},MQDLH_VERSION_1,MQRC_NONE,{""},{""},0,MQCCSI_UNDEFINED,{MQFMT_NONE_ARRAY},0,{""},{""},{""}	&gt;</body><body package="MQ-XIF">MQDLH_STRUC_ID	&lt;C: #define MQDLH_STRUC_ID "DLH "	&gt;</body><body package="MQ-XIF">MQDLH_STRUC_ID_ARRAY	&lt;C: #define MQDLH_STRUC_ID_ARRAY 68,76,72,32	&gt;</body><body package="MQ-XIF">MQDLH_VERSION_1	&lt;C: #define MQDLH_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQDL_NOT_SUPPORTED	&lt;C: #define MQDL_NOT_SUPPORTED 0	&gt;</body><body package="MQ-XIF">MQDL_SUPPORTED	&lt;C: #define MQDL_SUPPORTED 1	&gt;</body><body package="MQ-XIF">MQEC_CONNECTION_QUIESCING	&lt;C: #define MQEC_CONNECTION_QUIESCING 6	&gt;</body><body package="MQ-XIF">MQEC_MSG_ARRIVED	&lt;C: #define MQEC_MSG_ARRIVED 2	&gt;</body><body package="MQ-XIF">MQEC_Q_MGR_QUIESCING	&lt;C: #define MQEC_Q_MGR_QUIESCING 5	&gt;</body><body package="MQ-XIF">MQEC_WAIT_CANCELED	&lt;C: #define MQEC_WAIT_CANCELED 4	&gt;</body><body package="MQ-XIF">MQEC_WAIT_INTERVAL_EXPIRED	&lt;C: #define MQEC_WAIT_INTERVAL_EXPIRED 3	&gt;</body><body package="MQ-XIF">MQEI_UNLIMITED	&lt;C: #define MQEI_UNLIMITED (-1)	&gt;</body><body package="MQ-XIF">MQENC_DECIMAL_MASK	&lt;C: #define MQENC_DECIMAL_MASK 0x000000F0	&gt;</body><body package="MQ-XIF">MQENC_DECIMAL_NORMAL	&lt;C: #define MQENC_DECIMAL_NORMAL 0x00000010	&gt;</body><body package="MQ-XIF">MQENC_DECIMAL_REVERSED	&lt;C: #define MQENC_DECIMAL_REVERSED 0x00000020	&gt;</body><body package="MQ-XIF">MQENC_DECIMAL_UNDEFINED	&lt;C: #define MQENC_DECIMAL_UNDEFINED 0x00000000	&gt;</body><body package="MQ-XIF">MQENC_FLOAT_IEEE_NORMAL	&lt;C: #define MQENC_FLOAT_IEEE_NORMAL 0x00000100	&gt;</body><body package="MQ-XIF">MQENC_FLOAT_IEEE_REVERSED	&lt;C: #define MQENC_FLOAT_IEEE_REVERSED 0x00000200	&gt;</body><body package="MQ-XIF">MQENC_FLOAT_MASK	&lt;C: #define MQENC_FLOAT_MASK 0x00000F00	&gt;</body><body package="MQ-XIF">MQENC_FLOAT_S390	&lt;C: #define MQENC_FLOAT_S390 0x00000300	&gt;</body><body package="MQ-XIF">MQENC_FLOAT_UNDEFINED	&lt;C: #define MQENC_FLOAT_UNDEFINED 0x00000000	&gt;</body><body package="MQ-XIF">MQENC_INTEGER_MASK	&lt;C: #define MQENC_INTEGER_MASK 0x0000000F	&gt;</body><body package="MQ-XIF">MQENC_INTEGER_NORMAL	&lt;C: #define MQENC_INTEGER_NORMAL 0x00000001	&gt;</body><body package="MQ-XIF">MQENC_INTEGER_REVERSED	&lt;C: #define MQENC_INTEGER_REVERSED 0x00000002	&gt;</body><body package="MQ-XIF">MQENC_INTEGER_UNDEFINED	&lt;C: #define MQENC_INTEGER_UNDEFINED 0x00000000	&gt;</body><body package="MQ-XIF">MQENC_NATIVE	&lt;C: #define MQENC_NATIVE 0x00000222	&gt;</body><body package="MQ-XIF">MQENC_RESERVED_MASK	&lt;C: #define MQENC_RESERVED_MASK 4294963200	&gt;</body><body package="MQ-XIF">MQENTRY	&lt;C: #define MQENTRY 	&gt;</body><body package="MQ-XIF">MQEXPI_OFF	&lt;C: #define MQEXPI_OFF 0	&gt;</body><body package="MQ-XIF">MQFB_APPL_CANNOT_BE_STARTED	&lt;C: #define MQFB_APPL_CANNOT_BE_STARTED 265	&gt;</body><body package="MQ-XIF">MQFB_APPL_FIRST	&lt;C: #define MQFB_APPL_FIRST 65536	&gt;</body><body package="MQ-XIF">MQFB_APPL_LAST	&lt;C: #define MQFB_APPL_LAST 999999999	&gt;</body><body package="MQ-XIF">MQFB_APPL_TYPE_ERROR	&lt;C: #define MQFB_APPL_TYPE_ERROR 267	&gt;</body><body package="MQ-XIF">MQFB_BIND_OPEN_CLUSRCVR_DEL	&lt;C: #define MQFB_BIND_OPEN_CLUSRCVR_DEL 281	&gt;</body><body package="MQ-XIF">MQFB_BUFFER_OVERFLOW	&lt;C: #define MQFB_BUFFER_OVERFLOW 294	&gt;</body><body package="MQ-XIF">MQFB_CHANNEL_COMPLETED	&lt;C: #define MQFB_CHANNEL_COMPLETED 262	&gt;</body><body package="MQ-XIF">MQFB_CHANNEL_FAIL	&lt;C: #define MQFB_CHANNEL_FAIL 264	&gt;</body><body package="MQ-XIF">MQFB_CHANNEL_FAIL_RETRY	&lt;C: #define MQFB_CHANNEL_FAIL_RETRY 263	&gt;</body><body package="MQ-XIF">MQFB_CICS_APPL_ABENDED	&lt;C: #define MQFB_CICS_APPL_ABENDED 411	&gt;</body><body package="MQ-XIF">MQFB_CICS_APPL_NOT_STARTED	&lt;C: #define MQFB_CICS_APPL_NOT_STARTED 410	&gt;</body><body package="MQ-XIF">MQFB_CICS_BRIDGE_FAILURE	&lt;C: #define MQFB_CICS_BRIDGE_FAILURE 403	&gt;</body><body package="MQ-XIF">MQFB_CICS_CCSID_ERROR	&lt;C: #define MQFB_CICS_CCSID_ERROR 405	&gt;</body><body package="MQ-XIF">MQFB_CICS_CIH_ERROR	&lt;C: #define MQFB_CICS_CIH_ERROR 407	&gt;</body><body package="MQ-XIF">MQFB_CICS_COMMAREA_ERROR	&lt;C: #define MQFB_CICS_COMMAREA_ERROR 409	&gt;</body><body package="MQ-XIF">MQFB_CICS_CORREL_ID_ERROR	&lt;C: #define MQFB_CICS_CORREL_ID_ERROR 404	&gt;</body><body package="MQ-XIF">MQFB_CICS_DLQ_ERROR	&lt;C: #define MQFB_CICS_DLQ_ERROR 412	&gt;</body><body package="MQ-XIF">MQFB_CICS_ENCODING_ERROR	&lt;C: #define MQFB_CICS_ENCODING_ERROR 406	&gt;</body><body package="MQ-XIF">MQFB_CICS_INTERNAL_ERROR	&lt;C: #define MQFB_CICS_INTERNAL_ERROR 401	&gt;</body><body package="MQ-XIF">MQFB_CICS_NOT_AUTHORIZED	&lt;C: #define MQFB_CICS_NOT_AUTHORIZED 402	&gt;</body><body package="MQ-XIF">MQFB_CICS_UOW_BACKED_OUT	&lt;C: #define MQFB_CICS_UOW_BACKED_OUT 413	&gt;</body><body package="MQ-XIF">MQFB_CICS_UOW_ERROR	&lt;C: #define MQFB_CICS_UOW_ERROR 408	&gt;</body><body package="MQ-XIF">MQFB_COA	&lt;C: #define MQFB_COA 259	&gt;</body><body package="MQ-XIF">MQFB_COD	&lt;C: #define MQFB_COD 260	&gt;</body><body package="MQ-XIF">MQFB_DATA_LENGTH_NEGATIVE	&lt;C: #define MQFB_DATA_LENGTH_NEGATIVE 292	&gt;</body><body package="MQ-XIF">MQFB_DATA_LENGTH_TOO_BIG	&lt;C: #define MQFB_DATA_LENGTH_TOO_BIG 293	&gt;</body><body package="MQ-XIF">MQFB_DATA_LENGTH_ZERO	&lt;C: #define MQFB_DATA_LENGTH_ZERO 291	&gt;</body><body package="MQ-XIF">MQFB_EXPIRATION	&lt;C: #define MQFB_EXPIRATION 258	&gt;</body><body package="MQ-XIF">MQFB_IIH_ERROR	&lt;C: #define MQFB_IIH_ERROR 296	&gt;</body><body package="MQ-XIF">MQFB_IMS_ERROR	&lt;C: #define MQFB_IMS_ERROR 300	&gt;</body><body package="MQ-XIF">MQFB_IMS_FIRST	&lt;C: #define MQFB_IMS_FIRST 301	&gt;</body><body package="MQ-XIF">MQFB_IMS_LAST	&lt;C: #define MQFB_IMS_LAST 399	&gt;</body><body package="MQ-XIF">MQFB_LENGTH_OFF_BY_ONE	&lt;C: #define MQFB_LENGTH_OFF_BY_ONE 295	&gt;</body><body package="MQ-XIF">MQFB_NAN	&lt;C: #define MQFB_NAN 276	&gt;</body><body package="MQ-XIF">MQFB_NONE	&lt;C: #define MQFB_NONE 0	&gt;</body><body package="MQ-XIF">MQFB_NOT_AUTHORIZED_FOR_IMS	&lt;C: #define MQFB_NOT_AUTHORIZED_FOR_IMS 298	&gt;</body><body package="MQ-XIF">MQFB_NOT_A_REPOSITORY_MSG	&lt;C: #define MQFB_NOT_A_REPOSITORY_MSG 280	&gt;</body><body package="MQ-XIF">MQFB_PAN	&lt;C: #define MQFB_PAN 275	&gt;</body><body package="MQ-XIF">MQFB_QUIT	&lt;C: #define MQFB_QUIT 256	&gt;</body><body package="MQ-XIF">MQFB_STOPPED_BY_CHAD_EXIT	&lt;C: #define MQFB_STOPPED_BY_CHAD_EXIT 277	&gt;</body><body package="MQ-XIF">MQFB_STOPPED_BY_MSG_EXIT	&lt;C: #define MQFB_STOPPED_BY_MSG_EXIT 268	&gt;</body><body package="MQ-XIF">MQFB_STOPPED_BY_PUBSUB_EXIT	&lt;C: #define MQFB_STOPPED_BY_PUBSUB_EXIT 279	&gt;</body><body package="MQ-XIF">MQFB_SYSTEM_FIRST	&lt;C: #define MQFB_SYSTEM_FIRST 1	&gt;</body><body package="MQ-XIF">MQFB_SYSTEM_LAST	&lt;C: #define MQFB_SYSTEM_LAST 65535	&gt;</body><body package="MQ-XIF">MQFB_TM_ERROR	&lt;C: #define MQFB_TM_ERROR 266	&gt;</body><body package="MQ-XIF">MQFB_XMIT_Q_MSG_ERROR	&lt;C: #define MQFB_XMIT_Q_MSG_ERROR 271	&gt;</body><body package="MQ-XIF">MQFMT_ADMIN	&lt;C: #define MQFMT_ADMIN "MQADMIN "	&gt;</body><body package="MQ-XIF">MQFMT_ADMIN_ARRAY	&lt;C: #define MQFMT_ADMIN_ARRAY 77,81,65,68,77,73,78,32	&gt;</body><body package="MQ-XIF">MQFMT_CHANNEL_COMPLETED	&lt;C: #define MQFMT_CHANNEL_COMPLETED "MQCHCOM "	&gt;</body><body package="MQ-XIF">MQFMT_CHANNEL_COMPLETED_ARRAY	&lt;C: #define MQFMT_CHANNEL_COMPLETED_ARRAY 77,81,67,72,67,79,77,32	&gt;</body><body package="MQ-XIF">MQFMT_CICS	&lt;C: #define MQFMT_CICS "MQCICS  "	&gt;</body><body package="MQ-XIF">MQFMT_CICS_ARRAY	&lt;C: #define MQFMT_CICS_ARRAY 77,81,67,73,67,83,32,32	&gt;</body><body package="MQ-XIF">MQFMT_COMMAND_1	&lt;C: #define MQFMT_COMMAND_1 "MQCMD1  "	&gt;</body><body package="MQ-XIF">MQFMT_COMMAND_1_ARRAY	&lt;C: #define MQFMT_COMMAND_1_ARRAY 77,81,67,77,68,49,32,32	&gt;</body><body package="MQ-XIF">MQFMT_COMMAND_2	&lt;C: #define MQFMT_COMMAND_2 "MQCMD2  "	&gt;</body><body package="MQ-XIF">MQFMT_COMMAND_2_ARRAY	&lt;C: #define MQFMT_COMMAND_2_ARRAY 77,81,67,77,68,50,32,32	&gt;</body><body package="MQ-XIF">MQFMT_DEAD_LETTER_HEADER	&lt;C: #define MQFMT_DEAD_LETTER_HEADER "MQDEAD  "	&gt;</body><body package="MQ-XIF">MQFMT_DEAD_LETTER_HEADER_ARRAY	&lt;C: #define MQFMT_DEAD_LETTER_HEADER_ARRAY 77,81,68,69,65,68,32,32	&gt;</body><body package="MQ-XIF">MQFMT_DIST_HEADER	&lt;C: #define MQFMT_DIST_HEADER "MQHDIST "	&gt;</body><body package="MQ-XIF">MQFMT_DIST_HEADER_ARRAY	&lt;C: #define MQFMT_DIST_HEADER_ARRAY 77,81,72,68,73,83,84,32	&gt;</body><body package="MQ-XIF">MQFMT_EVENT	&lt;C: #define MQFMT_EVENT "MQEVENT "	&gt;</body><body package="MQ-XIF">MQFMT_EVENT_ARRAY	&lt;C: #define MQFMT_EVENT_ARRAY 77,81,69,86,69,78,84,32	&gt;</body><body package="MQ-XIF">MQFMT_IMS	&lt;C: #define MQFMT_IMS "MQIMS   "	&gt;</body><body package="MQ-XIF">MQFMT_IMS_ARRAY	&lt;C: #define MQFMT_IMS_ARRAY 77,81,73,77,83,32,32,32	&gt;</body><body package="MQ-XIF">MQFMT_IMS_VAR_STRING	&lt;C: #define MQFMT_IMS_VAR_STRING "MQIMSVS "	&gt;</body><body package="MQ-XIF">MQFMT_IMS_VAR_STRING_ARRAY	&lt;C: #define MQFMT_IMS_VAR_STRING_ARRAY 77,81,73,77,83,86,83,32	&gt;</body><body package="MQ-XIF">MQFMT_MD_EXTENSION	&lt;C: #define MQFMT_MD_EXTENSION "MQHMDE  "	&gt;</body><body package="MQ-XIF">MQFMT_MD_EXTENSION_ARRAY	&lt;C: #define MQFMT_MD_EXTENSION_ARRAY 77,81,72,77,68,69,32,32	&gt;</body><body package="MQ-XIF">MQFMT_NONE	&lt;C: #define MQFMT_NONE "        "	&gt;</body><body package="MQ-XIF">MQFMT_NONE_ARRAY	&lt;C: #define MQFMT_NONE_ARRAY 32,32,32,32,32,32,32,32	&gt;</body><body package="MQ-XIF">MQFMT_PCF	&lt;C: #define MQFMT_PCF "MQPCF   "	&gt;</body><body package="MQ-XIF">MQFMT_PCF_ARRAY	&lt;C: #define MQFMT_PCF_ARRAY 77,81,80,67,70,32,32,32	&gt;</body><body package="MQ-XIF">MQFMT_REF_MSG_HEADER	&lt;C: #define MQFMT_REF_MSG_HEADER "MQHREF  "	&gt;</body><body package="MQ-XIF">MQFMT_REF_MSG_HEADER_ARRAY	&lt;C: #define MQFMT_REF_MSG_HEADER_ARRAY 77,81,72,82,69,70,32,32	&gt;</body><body package="MQ-XIF">MQFMT_RF_HEADER	&lt;C: #define MQFMT_RF_HEADER "MQHRF   "	&gt;</body><body package="MQ-XIF">MQFMT_RF_HEADER_2	&lt;C: #define MQFMT_RF_HEADER_2 "MQHRF2  "	&gt;</body><body package="MQ-XIF">MQFMT_RF_HEADER_2_ARRAY	&lt;C: #define MQFMT_RF_HEADER_2_ARRAY 77,81,72,82,70,50,32,32	&gt;</body><body package="MQ-XIF">MQFMT_RF_HEADER_ARRAY	&lt;C: #define MQFMT_RF_HEADER_ARRAY 77,81,72,82,70,32,32,32	&gt;</body><body package="MQ-XIF">MQFMT_STRING	&lt;C: #define MQFMT_STRING "MQSTR   "	&gt;</body><body package="MQ-XIF">MQFMT_STRING_ARRAY	&lt;C: #define MQFMT_STRING_ARRAY 77,81,83,84,82,32,32,32	&gt;</body><body package="MQ-XIF">MQFMT_TRIGGER	&lt;C: #define MQFMT_TRIGGER "MQTRIG  "	&gt;</body><body package="MQ-XIF">MQFMT_TRIGGER_ARRAY	&lt;C: #define MQFMT_TRIGGER_ARRAY 77,81,84,82,73,71,32,32	&gt;</body><body package="MQ-XIF">MQFMT_WORK_INFO_HEADER	&lt;C: #define MQFMT_WORK_INFO_HEADER "MQHWIH  "	&gt;</body><body package="MQ-XIF">MQFMT_WORK_INFO_HEADER_ARRAY	&lt;C: #define MQFMT_WORK_INFO_HEADER_ARRAY 77,81,72,87,73,72,32,32	&gt;</body><body package="MQ-XIF">MQFMT_XMIT_Q_HEADER	&lt;C: #define MQFMT_XMIT_Q_HEADER "MQXMIT  "	&gt;</body><body package="MQ-XIF">MQFMT_XMIT_Q_HEADER_ARRAY	&lt;C: #define MQFMT_XMIT_Q_HEADER_ARRAY 77,81,88,77,73,84,32,32	&gt;</body><body package="MQ-XIF">MQGI_NONE	&lt;C: #define MQGI_NONE "                        "	&gt;</body><body package="MQ-XIF">MQGI_NONE_ARRAY	&lt;C: #define MQGI_NONE_ARRAY 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	&gt;</body><body package="MQ-XIF">MQGMO_ACCEPT_TRUNCATED_MSG	&lt;C: #define MQGMO_ACCEPT_TRUNCATED_MSG 0x00000040	&gt;</body><body package="MQ-XIF">MQGMO_ALL_MSGS_AVAILABLE	&lt;C: #define MQGMO_ALL_MSGS_AVAILABLE 0x00020000	&gt;</body><body package="MQ-XIF">MQGMO_ALL_SEGMENTS_AVAILABLE	&lt;C: #define MQGMO_ALL_SEGMENTS_AVAILABLE 0x00040000	&gt;</body><body package="MQ-XIF">MQGMO_BROWSE_FIRST	&lt;C: #define MQGMO_BROWSE_FIRST 0x00000010	&gt;</body><body package="MQ-XIF">MQGMO_BROWSE_MSG_UNDER_CURSOR	&lt;C: #define MQGMO_BROWSE_MSG_UNDER_CURSOR 0x00000800	&gt;</body><body package="MQ-XIF">MQGMO_BROWSE_NEXT	&lt;C: #define MQGMO_BROWSE_NEXT 0x00000020	&gt;</body><body package="MQ-XIF">MQGMO_COMPLETE_MSG	&lt;C: #define MQGMO_COMPLETE_MSG 0x00010000	&gt;</body><body package="MQ-XIF">MQGMO_CONVERT	&lt;C: #define MQGMO_CONVERT 0x00004000	&gt;</body><body package="MQ-XIF">MQGMO_CURRENT_VERSION	&lt;C: #define MQGMO_CURRENT_VERSION 3	&gt;</body><body package="MQ-XIF">MQGMO_DEFAULT	&lt;C: #define MQGMO_DEFAULT {MQGMO_STRUC_ID_ARRAY},MQGMO_VERSION_1,MQGMO_NO_WAIT,0,0,0,{""},(MQMO_MATCH_MSG_ID+MQMO_MATCH_CORREL_ID),MQGS_NOT_IN_GROUP,MQSS_NOT_A_SEGMENT,MQSEG_INHIBITED,32,{MQMTOK_NONE_ARRAY},MQRL_UNDEFINED	&gt;</body><body package="MQ-XIF">MQGMO_FAIL_IF_QUIESCING	&lt;C: #define MQGMO_FAIL_IF_QUIESCING 0x00002000	&gt;</body><body package="MQ-XIF">MQGMO_LOCK	&lt;C: #define MQGMO_LOCK 0x00000200	&gt;</body><body package="MQ-XIF">MQGMO_LOGICAL_ORDER	&lt;C: #define MQGMO_LOGICAL_ORDER 0x00008000	&gt;</body><body package="MQ-XIF">MQGMO_MARK_SKIP_BACKOUT	&lt;C: #define MQGMO_MARK_SKIP_BACKOUT 0x00000080	&gt;</body><body package="MQ-XIF">MQGMO_MSG_UNDER_CURSOR	&lt;C: #define MQGMO_MSG_UNDER_CURSOR 0x00000100	&gt;</body><body package="MQ-XIF">MQGMO_NONE	&lt;C: #define MQGMO_NONE 0x00000000	&gt;</body><body package="MQ-XIF">MQGMO_NO_SYNCPOINT	&lt;C: #define MQGMO_NO_SYNCPOINT 0x00000004	&gt;</body><body package="MQ-XIF">MQGMO_NO_WAIT	&lt;C: #define MQGMO_NO_WAIT 0x00000000	&gt;</body><body package="MQ-XIF">MQGMO_SET_SIGNAL	&lt;C: #define MQGMO_SET_SIGNAL 0x00000008	&gt;</body><body package="MQ-XIF">MQGMO_STRUC_ID	&lt;C: #define MQGMO_STRUC_ID "GMO "	&gt;</body><body package="MQ-XIF">MQGMO_STRUC_ID_ARRAY	&lt;C: #define MQGMO_STRUC_ID_ARRAY 71,77,79,32	&gt;</body><body package="MQ-XIF">MQGMO_SYNCPOINT	&lt;C: #define MQGMO_SYNCPOINT 0x00000002	&gt;</body><body package="MQ-XIF">MQGMO_SYNCPOINT_IF_PERSISTENT	&lt;C: #define MQGMO_SYNCPOINT_IF_PERSISTENT 0x00001000	&gt;</body><body package="MQ-XIF">MQGMO_UNLOCK	&lt;C: #define MQGMO_UNLOCK 0x00000400	&gt;</body><body package="MQ-XIF">MQGMO_VERSION_1	&lt;C: #define MQGMO_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQGMO_VERSION_2	&lt;C: #define MQGMO_VERSION_2 2	&gt;</body><body package="MQ-XIF">MQGMO_VERSION_3	&lt;C: #define MQGMO_VERSION_3 3	&gt;</body><body package="MQ-XIF">MQGMO_WAIT	&lt;C: #define MQGMO_WAIT 0x00000001	&gt;</body><body package="MQ-XIF">MQGS_LAST_MSG_IN_GROUP	&lt;C: #define MQGS_LAST_MSG_IN_GROUP 76	&gt;</body><body package="MQ-XIF">MQGS_MSG_IN_GROUP	&lt;C: #define MQGS_MSG_IN_GROUP 71	&gt;</body><body package="MQ-XIF">MQGS_NOT_IN_GROUP	&lt;C: #define MQGS_NOT_IN_GROUP 32	&gt;</body><body package="MQ-XIF">MQHC_DEF_HCONN	&lt;C: #define MQHC_DEF_HCONN 0	&gt;</body><body package="MQ-XIF">MQHC_UNUSABLE_HCONN	&lt;C: #define MQHC_UNUSABLE_HCONN (-1)	&gt;</body><body package="MQ-XIF">MQHO_NONE	&lt;C: #define MQHO_NONE 0	&gt;</body><body package="MQ-XIF">MQHO_UNUSABLE_HOBJ	&lt;C: #define MQHO_UNUSABLE_HOBJ (-1)	&gt;</body><body package="MQ-XIF">MQIAUT_NONE	&lt;C: #define MQIAUT_NONE "        "	&gt;</body><body package="MQ-XIF">MQIAUT_NONE_ARRAY	&lt;C: #define MQIAUT_NONE_ARRAY 32,32,32,32,32,32,32,32	&gt;</body><body package="MQ-XIF">MQIAV_NOT_APPLICABLE	&lt;C: #define MQIAV_NOT_APPLICABLE (-1)	&gt;</body><body package="MQ-XIF">MQIAV_UNDEFINED	&lt;C: #define MQIAV_UNDEFINED (-2)	&gt;</body><body package="MQ-XIF">MQIA_APPL_TYPE	&lt;C: #define MQIA_APPL_TYPE 1	&gt;</body><body package="MQ-XIF">MQIA_ARCHIVE	&lt;C: #define MQIA_ARCHIVE 60	&gt;</body><body package="MQ-XIF">MQIA_AUTHORITY_EVENT	&lt;C: #define MQIA_AUTHORITY_EVENT 47	&gt;</body><body package="MQ-XIF">MQIA_AUTH_INFO_TYPE	&lt;C: #define MQIA_AUTH_INFO_TYPE 66	&gt;</body><body package="MQ-XIF">MQIA_BACKOUT_THRESHOLD	&lt;C: #define MQIA_BACKOUT_THRESHOLD 22	&gt;</body><body package="MQ-XIF">MQIA_CF_LEVEL	&lt;C: #define MQIA_CF_LEVEL 70	&gt;</body><body package="MQ-XIF">MQIA_CF_RECOVER	&lt;C: #define MQIA_CF_RECOVER 71	&gt;</body><body package="MQ-XIF">MQIA_CHANNEL_AUTO_DEF	&lt;C: #define MQIA_CHANNEL_AUTO_DEF 55	&gt;</body><body package="MQ-XIF">MQIA_CHANNEL_AUTO_DEF_EVENT	&lt;C: #define MQIA_CHANNEL_AUTO_DEF_EVENT 56	&gt;</body><body package="MQ-XIF">MQIA_CLUSTER_Q_TYPE	&lt;C: #define MQIA_CLUSTER_Q_TYPE 59	&gt;</body><body package="MQ-XIF">MQIA_CLUSTER_WORKLOAD_LENGTH	&lt;C: #define MQIA_CLUSTER_WORKLOAD_LENGTH 58	&gt;</body><body package="MQ-XIF">MQIA_CODED_CHAR_SET_ID	&lt;C: #define MQIA_CODED_CHAR_SET_ID 2	&gt;</body><body package="MQ-XIF">MQIA_COMMAND_LEVEL	&lt;C: #define MQIA_COMMAND_LEVEL 31	&gt;</body><body package="MQ-XIF">MQIA_CONFIGURATION_EVENT	&lt;C: #define MQIA_CONFIGURATION_EVENT 51	&gt;</body><body package="MQ-XIF">MQIA_CURRENT_Q_DEPTH	&lt;C: #define MQIA_CURRENT_Q_DEPTH 3	&gt;</body><body package="MQ-XIF">MQIA_DEFINITION_TYPE	&lt;C: #define MQIA_DEFINITION_TYPE 7	&gt;</body><body package="MQ-XIF">MQIA_DEF_BIND	&lt;C: #define MQIA_DEF_BIND 61	&gt;</body><body package="MQ-XIF">MQIA_DEF_INPUT_OPEN_OPTION	&lt;C: #define MQIA_DEF_INPUT_OPEN_OPTION 4	&gt;</body><body package="MQ-XIF">MQIA_DEF_PERSISTENCE	&lt;C: #define MQIA_DEF_PERSISTENCE 5	&gt;</body><body package="MQ-XIF">MQIA_DEF_PRIORITY	&lt;C: #define MQIA_DEF_PRIORITY 6	&gt;</body><body package="MQ-XIF">MQIA_DIST_LISTS	&lt;C: #define MQIA_DIST_LISTS 34	&gt;</body><body package="MQ-XIF">MQIA_EXPIRY_INTERVAL	&lt;C: #define MQIA_EXPIRY_INTERVAL 39	&gt;</body><body package="MQ-XIF">MQIA_FIRST	&lt;C: #define MQIA_FIRST 1	&gt;</body><body package="MQ-XIF">MQIA_HARDEN_GET_BACKOUT	&lt;C: #define MQIA_HARDEN_GET_BACKOUT 8	&gt;</body><body package="MQ-XIF">MQIA_HIGH_Q_DEPTH	&lt;C: #define MQIA_HIGH_Q_DEPTH 36	&gt;</body><body package="MQ-XIF">MQIA_IGQ_PUT_AUTHORITY	&lt;C: #define MQIA_IGQ_PUT_AUTHORITY 65	&gt;</body><body package="MQ-XIF">MQIA_INDEX_TYPE	&lt;C: #define MQIA_INDEX_TYPE 57	&gt;</body><body package="MQ-XIF">MQIA_INHIBIT_EVENT	&lt;C: #define MQIA_INHIBIT_EVENT 48	&gt;</body><body package="MQ-XIF">MQIA_INHIBIT_GET	&lt;C: #define MQIA_INHIBIT_GET 9	&gt;</body><body package="MQ-XIF">MQIA_INHIBIT_PUT	&lt;C: #define MQIA_INHIBIT_PUT 10	&gt;</body><body package="MQ-XIF">MQIA_INTRA_GROUP_QUEUING	&lt;C: #define MQIA_INTRA_GROUP_QUEUING 64	&gt;</body><body package="MQ-XIF">MQIA_LAST	&lt;C: #define MQIA_LAST 2000	&gt;</body><body package="MQ-XIF">MQIA_LAST_USED	&lt;C: #define MQIA_LAST_USED 66	&gt;</body><body package="MQ-XIF">MQIA_LOCAL_EVENT	&lt;C: #define MQIA_LOCAL_EVENT 49	&gt;</body><body package="MQ-XIF">MQIA_MAX_HANDLES	&lt;C: #define MQIA_MAX_HANDLES 11	&gt;</body><body package="MQ-XIF">MQIA_MAX_MSG_LENGTH	&lt;C: #define MQIA_MAX_MSG_LENGTH 13	&gt;</body><body package="MQ-XIF">MQIA_MAX_PRIORITY	&lt;C: #define MQIA_MAX_PRIORITY 14	&gt;</body><body package="MQ-XIF">MQIA_MAX_Q_DEPTH	&lt;C: #define MQIA_MAX_Q_DEPTH 15	&gt;</body><body package="MQ-XIF">MQIA_MAX_UNCOMMITTED_MSGS	&lt;C: #define MQIA_MAX_UNCOMMITTED_MSGS 33	&gt;</body><body package="MQ-XIF">MQIA_MSG_DELIVERY_SEQUENCE	&lt;C: #define MQIA_MSG_DELIVERY_SEQUENCE 16	&gt;</body><body package="MQ-XIF">MQIA_MSG_DEQ_COUNT	&lt;C: #define MQIA_MSG_DEQ_COUNT 38	&gt;</body><body package="MQ-XIF">MQIA_MSG_ENQ_COUNT	&lt;C: #define MQIA_MSG_ENQ_COUNT 37	&gt;</body><body package="MQ-XIF">MQIA_NAMELIST_TYPE	&lt;C: #define MQIA_NAMELIST_TYPE 72	&gt;</body><body package="MQ-XIF">MQIA_NAME_COUNT	&lt;C: #define MQIA_NAME_COUNT 19	&gt;</body><body package="MQ-XIF">MQIA_OPEN_INPUT_COUNT	&lt;C: #define MQIA_OPEN_INPUT_COUNT 17	&gt;</body><body package="MQ-XIF">MQIA_OPEN_OUTPUT_COUNT	&lt;C: #define MQIA_OPEN_OUTPUT_COUNT 18	&gt;</body><body package="MQ-XIF">MQIA_PAGESET_ID	&lt;C: #define MQIA_PAGESET_ID 62	&gt;</body><body package="MQ-XIF">MQIA_PERFORMANCE_EVENT	&lt;C: #define MQIA_PERFORMANCE_EVENT 53	&gt;</body><body package="MQ-XIF">MQIA_PLATFORM	&lt;C: #define MQIA_PLATFORM 32	&gt;</body><body package="MQ-XIF">MQIA_QSG_DISP	&lt;C: #define MQIA_QSG_DISP 63	&gt;</body><body package="MQ-XIF">MQIA_Q_DEPTH_HIGH_EVENT	&lt;C: #define MQIA_Q_DEPTH_HIGH_EVENT 43	&gt;</body><body package="MQ-XIF">MQIA_Q_DEPTH_HIGH_LIMIT	&lt;C: #define MQIA_Q_DEPTH_HIGH_LIMIT 40	&gt;</body><body package="MQ-XIF">MQIA_Q_DEPTH_LOW_EVENT	&lt;C: #define MQIA_Q_DEPTH_LOW_EVENT 44	&gt;</body><body package="MQ-XIF">MQIA_Q_DEPTH_LOW_LIMIT	&lt;C: #define MQIA_Q_DEPTH_LOW_LIMIT 41	&gt;</body><body package="MQ-XIF">MQIA_Q_DEPTH_MAX_EVENT	&lt;C: #define MQIA_Q_DEPTH_MAX_EVENT 42	&gt;</body><body package="MQ-XIF">MQIA_Q_SERVICE_INTERVAL	&lt;C: #define MQIA_Q_SERVICE_INTERVAL 54	&gt;</body><body package="MQ-XIF">MQIA_Q_SERVICE_INTERVAL_EVENT	&lt;C: #define MQIA_Q_SERVICE_INTERVAL_EVENT 46	&gt;</body><body package="MQ-XIF">MQIA_Q_TYPE	&lt;C: #define MQIA_Q_TYPE 20	&gt;</body><body package="MQ-XIF">MQIA_REMOTE_EVENT	&lt;C: #define MQIA_REMOTE_EVENT 50	&gt;</body><body package="MQ-XIF">MQIA_RETENTION_INTERVAL	&lt;C: #define MQIA_RETENTION_INTERVAL 21	&gt;</body><body package="MQ-XIF">MQIA_SCOPE	&lt;C: #define MQIA_SCOPE 45	&gt;</body><body package="MQ-XIF">MQIA_SHAREABILITY	&lt;C: #define MQIA_SHAREABILITY 23	&gt;</body><body package="MQ-XIF">MQIA_SSL_TASKS	&lt;C: #define MQIA_SSL_TASKS 69	&gt;</body><body package="MQ-XIF">MQIA_START_STOP_EVENT	&lt;C: #define MQIA_START_STOP_EVENT 52	&gt;</body><body package="MQ-XIF">MQIA_SYNCPOINT	&lt;C: #define MQIA_SYNCPOINT 30	&gt;</body><body package="MQ-XIF">MQIA_TIME_SINCE_RESET	&lt;C: #define MQIA_TIME_SINCE_RESET 35	&gt;</body><body package="MQ-XIF">MQIA_TRIGGER_CONTROL	&lt;C: #define MQIA_TRIGGER_CONTROL 24	&gt;</body><body package="MQ-XIF">MQIA_TRIGGER_DEPTH	&lt;C: #define MQIA_TRIGGER_DEPTH 29	&gt;</body><body package="MQ-XIF">MQIA_TRIGGER_INTERVAL	&lt;C: #define MQIA_TRIGGER_INTERVAL 25	&gt;</body><body package="MQ-XIF">MQIA_TRIGGER_MSG_PRIORITY	&lt;C: #define MQIA_TRIGGER_MSG_PRIORITY 26	&gt;</body><body package="MQ-XIF">MQIA_TRIGGER_TYPE	&lt;C: #define MQIA_TRIGGER_TYPE 28	&gt;</body><body package="MQ-XIF">MQIA_USAGE	&lt;C: #define MQIA_USAGE 12	&gt;</body><body package="MQ-XIF">MQIA_USER_LIST	&lt;C: #define MQIA_USER_LIST 2000	&gt;</body><body package="MQ-XIF">MQICM_COMMIT_THEN_SEND	&lt;C: #define MQICM_COMMIT_THEN_SEND 48	&gt;</body><body package="MQ-XIF">MQICM_SEND_THEN_COMMIT	&lt;C: #define MQICM_SEND_THEN_COMMIT 49	&gt;</body><body package="MQ-XIF">MQIGQPA_ALTERNATE_OR_IGQ	&lt;C: #define MQIGQPA_ALTERNATE_OR_IGQ 4	&gt;</body><body package="MQ-XIF">MQIGQPA_CONTEXT	&lt;C: #define MQIGQPA_CONTEXT 2	&gt;</body><body package="MQ-XIF">MQIGQPA_DEFAULT	&lt;C: #define MQIGQPA_DEFAULT 1	&gt;</body><body package="MQ-XIF">MQIGQPA_ONLY_IGQ	&lt;C: #define MQIGQPA_ONLY_IGQ 3	&gt;</body><body package="MQ-XIF">MQIGQ_DISABLED	&lt;C: #define MQIGQ_DISABLED 0	&gt;</body><body package="MQ-XIF">MQIGQ_ENABLED	&lt;C: #define MQIGQ_ENABLED 1	&gt;</body><body package="MQ-XIF">MQIIH_CURRENT_VERSION	&lt;C: #define MQIIH_CURRENT_VERSION 1	&gt;</body><body package="MQ-XIF">MQIIH_DEFAULT	&lt;C: #define MQIIH_DEFAULT {MQIIH_STRUC_ID_ARRAY},MQIIH_VERSION_1,MQIIH_LENGTH_1,0,0,{MQFMT_NONE_ARRAY},MQIIH_NONE,{32,32,32,32,32,32,32,32},{32,32,32,32,32,32,32,32},{MQFMT_NONE_ARRAY},{MQIAUT_NONE_ARRAY},{MQITII_NONE_ARRAY},MQITS_NOT_IN_CONVERSATION,MQICM_COMMIT_THEN_SEND,MQISS_CHECK,32	&gt;</body><body package="MQ-XIF">MQIIH_LENGTH_1	&lt;C: #define MQIIH_LENGTH_1 84	&gt;</body><body package="MQ-XIF">MQIIH_NONE	&lt;C: #define MQIIH_NONE 0x00000000	&gt;</body><body package="MQ-XIF">MQIIH_STRUC_ID	&lt;C: #define MQIIH_STRUC_ID "IIH "	&gt;</body><body package="MQ-XIF">MQIIH_STRUC_ID_ARRAY	&lt;C: #define MQIIH_STRUC_ID_ARRAY 73,73,72,32	&gt;</body><body package="MQ-XIF">MQIIH_VERSION_1	&lt;C: #define MQIIH_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQISS_CHECK	&lt;C: #define MQISS_CHECK 67	&gt;</body><body package="MQ-XIF">MQISS_FULL	&lt;C: #define MQISS_FULL 70	&gt;</body><body package="MQ-XIF">MQITII_NONE	&lt;C: #define MQITII_NONE "                "	&gt;</body><body package="MQ-XIF">MQITII_NONE_ARRAY	&lt;C: #define MQITII_NONE_ARRAY 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	&gt;</body><body package="MQ-XIF">MQITS_ARCHITECTED	&lt;C: #define MQITS_ARCHITECTED 65	&gt;</body><body package="MQ-XIF">MQITS_IN_CONVERSATION	&lt;C: #define MQITS_IN_CONVERSATION 67	&gt;</body><body package="MQ-XIF">MQITS_NOT_IN_CONVERSATION	&lt;C: #define MQITS_NOT_IN_CONVERSATION 32	&gt;</body><body package="MQ-XIF">MQIT_CORREL_ID	&lt;C: #define MQIT_CORREL_ID 2	&gt;</body><body package="MQ-XIF">MQIT_GROUP_ID	&lt;C: #define MQIT_GROUP_ID 5	&gt;</body><body package="MQ-XIF">MQIT_MSG_ID	&lt;C: #define MQIT_MSG_ID 1	&gt;</body><body package="MQ-XIF">MQIT_MSG_TOKEN	&lt;C: #define MQIT_MSG_TOKEN 4	&gt;</body><body package="MQ-XIF">MQIT_NONE	&lt;C: #define MQIT_NONE 0	&gt;</body><body package="MQ-XIF">MQMD1_DEFAULT	&lt;C: #define MQMD1_DEFAULT {MQMD_STRUC_ID_ARRAY},MQMD_VERSION_1,MQRO_NONE,MQMT_DATAGRAM,MQEI_UNLIMITED,MQFB_NONE,MQENC_NATIVE,MQCCSI_Q_MGR,{MQFMT_NONE_ARRAY},MQPRI_PRIORITY_AS_Q_DEF,MQPER_PERSISTENCE_AS_Q_DEF,{MQMI_NONE_ARRAY},{MQCI_NONE_ARRAY},0,{""},{""},{""},{MQACT_NONE_ARRAY},{""},MQAT_NO_CONTEXT,{""},{""},{""},{""}	&gt;</body><body package="MQ-XIF">MQMDEF_NONE	&lt;C: #define MQMDEF_NONE 0x00000000	&gt;</body><body package="MQ-XIF">MQMDE_CURRENT_VERSION	&lt;C: #define MQMDE_CURRENT_VERSION 2	&gt;</body><body package="MQ-XIF">MQMDE_DEFAULT	&lt;C: #define MQMDE_DEFAULT {MQMDE_STRUC_ID_ARRAY},MQMDE_VERSION_2,MQMDE_LENGTH_2,MQENC_NATIVE,MQCCSI_UNDEFINED,{MQFMT_NONE_ARRAY},MQMDEF_NONE,{MQGI_NONE_ARRAY},1,0,MQMF_NONE,MQOL_UNDEFINED	&gt;</body><body package="MQ-XIF">MQMDE_LENGTH_2	&lt;C: #define MQMDE_LENGTH_2 72	&gt;</body><body package="MQ-XIF">MQMDE_STRUC_ID	&lt;C: #define MQMDE_STRUC_ID "MDE "	&gt;</body><body package="MQ-XIF">MQMDE_STRUC_ID_ARRAY	&lt;C: #define MQMDE_STRUC_ID_ARRAY 77,68,69,32	&gt;</body><body package="MQ-XIF">MQMDE_VERSION_2	&lt;C: #define MQMDE_VERSION_2 2	&gt;</body><body package="MQ-XIF">MQMDS_FIFO	&lt;C: #define MQMDS_FIFO 1	&gt;</body><body package="MQ-XIF">MQMDS_PRIORITY	&lt;C: #define MQMDS_PRIORITY 0	&gt;</body><body package="MQ-XIF">MQMD_CURRENT_VERSION	&lt;C: #define MQMD_CURRENT_VERSION 2	&gt;</body><body package="MQ-XIF">MQMD_DEFAULT	&lt;C: #define MQMD_DEFAULT {MQMD_STRUC_ID_ARRAY},MQMD_VERSION_1,MQRO_NONE,MQMT_DATAGRAM,MQEI_UNLIMITED,MQFB_NONE,MQENC_NATIVE,MQCCSI_Q_MGR,{MQFMT_NONE_ARRAY},MQPRI_PRIORITY_AS_Q_DEF,MQPER_PERSISTENCE_AS_Q_DEF,{MQMI_NONE_ARRAY},{MQCI_NONE_ARRAY},0,{""},{""},{""},{MQACT_NONE_ARRAY},{""},MQAT_NO_CONTEXT,{""},{""},{""},{""},{MQGI_NONE_ARRAY},1,0,MQMF_NONE,MQOL_UNDEFINED	&gt;</body><body package="MQ-XIF">MQMD_STRUC_ID	&lt;C: #define MQMD_STRUC_ID "MD  "	&gt;</body><body package="MQ-XIF">MQMD_STRUC_ID_ARRAY	&lt;C: #define MQMD_STRUC_ID_ARRAY 77,68,32,32	&gt;</body><body package="MQ-XIF">MQMD_VERSION_1	&lt;C: #define MQMD_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQMD_VERSION_2	&lt;C: #define MQMD_VERSION_2 2	&gt;</body><body package="MQ-XIF">MQMF_ACCEPT_UNSUP_IF_XMIT_MASK	&lt;C: #define MQMF_ACCEPT_UNSUP_IF_XMIT_MASK 0x000FF000	&gt;</body><body package="MQ-XIF">MQMF_ACCEPT_UNSUP_MASK	&lt;C: #define MQMF_ACCEPT_UNSUP_MASK 4293918720	&gt;</body><body package="MQ-XIF">MQMF_LAST_MSG_IN_GROUP	&lt;C: #define MQMF_LAST_MSG_IN_GROUP 0x00000010	&gt;</body><body package="MQ-XIF">MQMF_LAST_SEGMENT	&lt;C: #define MQMF_LAST_SEGMENT 0x00000004	&gt;</body><body package="MQ-XIF">MQMF_MSG_IN_GROUP	&lt;C: #define MQMF_MSG_IN_GROUP 0x00000008	&gt;</body><body package="MQ-XIF">MQMF_NONE	&lt;C: #define MQMF_NONE 0x00000000	&gt;</body><body package="MQ-XIF">MQMF_REJECT_UNSUP_MASK	&lt;C: #define MQMF_REJECT_UNSUP_MASK 0x00000FFF	&gt;</body><body package="MQ-XIF">MQMF_SEGMENT	&lt;C: #define MQMF_SEGMENT 0x00000002	&gt;</body><body package="MQ-XIF">MQMF_SEGMENTATION_ALLOWED	&lt;C: #define MQMF_SEGMENTATION_ALLOWED 0x00000001	&gt;</body><body package="MQ-XIF">MQMF_SEGMENTATION_INHIBITED	&lt;C: #define MQMF_SEGMENTATION_INHIBITED 0x00000000	&gt;</body><body package="MQ-XIF">MQMI_NONE	&lt;C: #define MQMI_NONE "                        "	&gt;</body><body package="MQ-XIF">MQMI_NONE_ARRAY	&lt;C: #define MQMI_NONE_ARRAY 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	&gt;</body><body package="MQ-XIF">MQMO_MATCH_CORREL_ID	&lt;C: #define MQMO_MATCH_CORREL_ID 0x00000002	&gt;</body><body package="MQ-XIF">MQMO_MATCH_GROUP_ID	&lt;C: #define MQMO_MATCH_GROUP_ID 0x00000004	&gt;</body><body package="MQ-XIF">MQMO_MATCH_MSG_ID	&lt;C: #define MQMO_MATCH_MSG_ID 0x00000001	&gt;</body><body package="MQ-XIF">MQMO_MATCH_MSG_SEQ_NUMBER	&lt;C: #define MQMO_MATCH_MSG_SEQ_NUMBER 0x00000008	&gt;</body><body package="MQ-XIF">MQMO_MATCH_MSG_TOKEN	&lt;C: #define MQMO_MATCH_MSG_TOKEN 0x00000020	&gt;</body><body package="MQ-XIF">MQMO_MATCH_OFFSET	&lt;C: #define MQMO_MATCH_OFFSET 0x00000010	&gt;</body><body package="MQ-XIF">MQMO_NONE	&lt;C: #define MQMO_NONE 0x00000000	&gt;</body><body package="MQ-XIF">MQMTOK_NONE	&lt;C: #define MQMTOK_NONE "                "	&gt;</body><body package="MQ-XIF">MQMTOK_NONE_ARRAY	&lt;C: #define MQMTOK_NONE_ARRAY 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	&gt;</body><body package="MQ-XIF">MQMT_APPL_FIRST	&lt;C: #define MQMT_APPL_FIRST 65536	&gt;</body><body package="MQ-XIF">MQMT_APPL_LAST	&lt;C: #define MQMT_APPL_LAST 999999999	&gt;</body><body package="MQ-XIF">MQMT_DATAGRAM	&lt;C: #define MQMT_DATAGRAM 8	&gt;</body><body package="MQ-XIF">MQMT_MQE_FIELDS	&lt;C: #define MQMT_MQE_FIELDS 113	&gt;</body><body package="MQ-XIF">MQMT_MQE_FIELDS_FROM_MQE	&lt;C: #define MQMT_MQE_FIELDS_FROM_MQE 112	&gt;</body><body package="MQ-XIF">MQMT_REPLY	&lt;C: #define MQMT_REPLY 2	&gt;</body><body package="MQ-XIF">MQMT_REPORT	&lt;C: #define MQMT_REPORT 4	&gt;</body><body package="MQ-XIF">MQMT_REQUEST	&lt;C: #define MQMT_REQUEST 1	&gt;</body><body package="MQ-XIF">MQMT_SYSTEM_FIRST	&lt;C: #define MQMT_SYSTEM_FIRST 1	&gt;</body><body package="MQ-XIF">MQMT_SYSTEM_LAST	&lt;C: #define MQMT_SYSTEM_LAST 65535	&gt;</body><body package="MQ-XIF">MQNC_MAX_NAMELIST_NAME_COUNT	&lt;C: #define MQNC_MAX_NAMELIST_NAME_COUNT 256	&gt;</body><body package="MQ-XIF">MQNT_ALL	&lt;C: #define MQNT_ALL 1001	&gt;</body><body package="MQ-XIF">MQNT_AUTH_INFO	&lt;C: #define MQNT_AUTH_INFO 4	&gt;</body><body package="MQ-XIF">MQNT_CLUSTER	&lt;C: #define MQNT_CLUSTER 2	&gt;</body><body package="MQ-XIF">MQNT_NONE	&lt;C: #define MQNT_NONE 0	&gt;</body><body package="MQ-XIF">MQNT_Q	&lt;C: #define MQNT_Q 1	&gt;</body><body package="MQ-XIF">MQNVS_APPL_TYPE	&lt;C: #define MQNVS_APPL_TYPE "OPT_APP_GRP "	&gt;</body><body package="MQ-XIF">MQNVS_MSG_TYPE	&lt;C: #define MQNVS_MSG_TYPE "OPT_MSG_TYPE "	&gt;</body><body package="MQ-XIF">MQOD_CURRENT_LENGTH	&lt;C: #define MQOD_CURRENT_LENGTH 336	&gt;</body><body package="MQ-XIF">MQOD_CURRENT_VERSION	&lt;C: #define MQOD_CURRENT_VERSION 3	&gt;</body><body package="MQ-XIF">MQOD_DEFAULT	&lt;C: #define MQOD_DEFAULT {MQOD_STRUC_ID_ARRAY},MQOD_VERSION_1,MQOT_Q,{""},{""},{"AMQ.*"},{""},0,0,0,0,0,0,NULL,NULL,{MQSID_NONE_ARRAY},{""},{""}	&gt;</body><body package="MQ-XIF">MQOD_STRUC_ID	&lt;C: #define MQOD_STRUC_ID "OD  "	&gt;</body><body package="MQ-XIF">MQOD_STRUC_ID_ARRAY	&lt;C: #define MQOD_STRUC_ID_ARRAY 79,68,32,32	&gt;</body><body package="MQ-XIF">MQOD_VERSION_1	&lt;C: #define MQOD_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQOD_VERSION_2	&lt;C: #define MQOD_VERSION_2 2	&gt;</body><body package="MQ-XIF">MQOD_VERSION_3	&lt;C: #define MQOD_VERSION_3 3	&gt;</body><body package="MQ-XIF">MQOII_NONE	&lt;C: #define MQOII_NONE "                        "	&gt;</body><body package="MQ-XIF">MQOII_NONE_ARRAY	&lt;C: #define MQOII_NONE_ARRAY 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	&gt;</body><body package="MQ-XIF">MQOL_UNDEFINED	&lt;C: #define MQOL_UNDEFINED (-1)	&gt;</body><body package="MQ-XIF">MQOO_ALTERNATE_USER_AUTHORITY	&lt;C: #define MQOO_ALTERNATE_USER_AUTHORITY 0x00001000	&gt;</body><body package="MQ-XIF">MQOO_BIND_AS_Q_DEF	&lt;C: #define MQOO_BIND_AS_Q_DEF 0x00000000	&gt;</body><body package="MQ-XIF">MQOO_BIND_NOT_FIXED	&lt;C: #define MQOO_BIND_NOT_FIXED 0x00008000	&gt;</body><body package="MQ-XIF">MQOO_BIND_ON_OPEN	&lt;C: #define MQOO_BIND_ON_OPEN 0x00004000	&gt;</body><body package="MQ-XIF">MQOO_BROWSE	&lt;C: #define MQOO_BROWSE 0x00000008	&gt;</body><body package="MQ-XIF">MQOO_FAIL_IF_QUIESCING	&lt;C: #define MQOO_FAIL_IF_QUIESCING 0x00002000	&gt;</body><body package="MQ-XIF">MQOO_INPUT_AS_Q_DEF	&lt;C: #define MQOO_INPUT_AS_Q_DEF 0x00000001	&gt;</body><body package="MQ-XIF">MQOO_INPUT_EXCLUSIVE	&lt;C: #define MQOO_INPUT_EXCLUSIVE 0x00000004	&gt;</body><body package="MQ-XIF">MQOO_INPUT_SHARED	&lt;C: #define MQOO_INPUT_SHARED 0x00000002	&gt;</body><body package="MQ-XIF">MQOO_INQUIRE	&lt;C: #define MQOO_INQUIRE 0x00000020	&gt;</body><body package="MQ-XIF">MQOO_OUTPUT	&lt;C: #define MQOO_OUTPUT 0x00000010	&gt;</body><body package="MQ-XIF">MQOO_PASS_ALL_CONTEXT	&lt;C: #define MQOO_PASS_ALL_CONTEXT 0x00000200	&gt;</body><body package="MQ-XIF">MQOO_PASS_IDENTITY_CONTEXT	&lt;C: #define MQOO_PASS_IDENTITY_CONTEXT 0x00000100	&gt;</body><body package="MQ-XIF">MQOO_RESOLVE_NAMES	&lt;C: #define MQOO_RESOLVE_NAMES 0x00010000	&gt;</body><body package="MQ-XIF">MQOO_SAVE_ALL_CONTEXT	&lt;C: #define MQOO_SAVE_ALL_CONTEXT 0x00000080	&gt;</body><body package="MQ-XIF">MQOO_SET	&lt;C: #define MQOO_SET 0x00000040	&gt;</body><body package="MQ-XIF">MQOO_SET_ALL_CONTEXT	&lt;C: #define MQOO_SET_ALL_CONTEXT 0x00000800	&gt;</body><body package="MQ-XIF">MQOO_SET_IDENTITY_CONTEXT	&lt;C: #define MQOO_SET_IDENTITY_CONTEXT 0x00000400	&gt;</body><body package="MQ-XIF">MQOR_DEFAULT	&lt;C: #define MQOR_DEFAULT {""},{""}	&gt;</body><body package="MQ-XIF">MQOT_ALIAS_Q	&lt;C: #define MQOT_ALIAS_Q 1002	&gt;</body><body package="MQ-XIF">MQOT_ALL	&lt;C: #define MQOT_ALL 1001	&gt;</body><body package="MQ-XIF">MQOT_AUTH_INFO	&lt;C: #define MQOT_AUTH_INFO 7	&gt;</body><body package="MQ-XIF">MQOT_CF_STRUC	&lt;C: #define MQOT_CF_STRUC 10	&gt;</body><body package="MQ-XIF">MQOT_CHANNEL	&lt;C: #define MQOT_CHANNEL 6	&gt;</body><body package="MQ-XIF">MQOT_CLNTCONN_CHANNEL	&lt;C: #define MQOT_CLNTCONN_CHANNEL 1014	&gt;</body><body package="MQ-XIF">MQOT_CURRENT_CHANNEL	&lt;C: #define MQOT_CURRENT_CHANNEL 1011	&gt;</body><body package="MQ-XIF">MQOT_LOCAL_Q	&lt;C: #define MQOT_LOCAL_Q 1004	&gt;</body><body package="MQ-XIF">MQOT_MODEL_Q	&lt;C: #define MQOT_MODEL_Q 1003	&gt;</body><body package="MQ-XIF">MQOT_NAMELIST	&lt;C: #define MQOT_NAMELIST 2	&gt;</body><body package="MQ-XIF">MQOT_PROCESS	&lt;C: #define MQOT_PROCESS 3	&gt;</body><body package="MQ-XIF">MQOT_Q	&lt;C: #define MQOT_Q 1	&gt;</body><body package="MQ-XIF">MQOT_Q_MGR	&lt;C: #define MQOT_Q_MGR 5	&gt;</body><body package="MQ-XIF">MQOT_RECEIVER_CHANNEL	&lt;C: #define MQOT_RECEIVER_CHANNEL 1010	&gt;</body><body package="MQ-XIF">MQOT_REMOTE_Q	&lt;C: #define MQOT_REMOTE_Q 1005	&gt;</body><body package="MQ-XIF">MQOT_REQUESTER_CHANNEL	&lt;C: #define MQOT_REQUESTER_CHANNEL 1009	&gt;</body><body package="MQ-XIF">MQOT_RESERVED_1	&lt;C: #define MQOT_RESERVED_1 999	&gt;</body><body package="MQ-XIF">MQOT_SAVED_CHANNEL	&lt;C: #define MQOT_SAVED_CHANNEL 1012	&gt;</body><body package="MQ-XIF">MQOT_SENDER_CHANNEL	&lt;C: #define MQOT_SENDER_CHANNEL 1007	&gt;</body><body package="MQ-XIF">MQOT_SERVER_CHANNEL	&lt;C: #define MQOT_SERVER_CHANNEL 1008	&gt;</body><body package="MQ-XIF">MQOT_STORAGE_CLASS	&lt;C: #define MQOT_STORAGE_CLASS 4	&gt;</body><body package="MQ-XIF">MQOT_SVRCONN_CHANNEL	&lt;C: #define MQOT_SVRCONN_CHANNEL 1013	&gt;</body><body package="MQ-XIF">MQPER_NOT_PERSISTENT	&lt;C: #define MQPER_NOT_PERSISTENT 0	&gt;</body><body package="MQ-XIF">MQPER_PERSISTENCE_AS_Q_DEF	&lt;C: #define MQPER_PERSISTENCE_AS_Q_DEF 2	&gt;</body><body package="MQ-XIF">MQPER_PERSISTENT	&lt;C: #define MQPER_PERSISTENT 1	&gt;</body><body package="MQ-XIF">MQPL_AIX	&lt;C: #define MQPL_AIX 3	&gt;</body><body package="MQ-XIF">MQPL_MVS	&lt;C: #define MQPL_MVS 1	&gt;</body><body package="MQ-XIF">MQPL_NSK	&lt;C: #define MQPL_NSK 13	&gt;</body><body package="MQ-XIF">MQPL_OS2	&lt;C: #define MQPL_OS2 2	&gt;</body><body package="MQ-XIF">MQPL_OS390	&lt;C: #define MQPL_OS390 1	&gt;</body><body package="MQ-XIF">MQPL_OS400	&lt;C: #define MQPL_OS400 4	&gt;</body><body package="MQ-XIF">MQPL_UNIX	&lt;C: #define MQPL_UNIX 3	&gt;</body><body package="MQ-XIF">MQPL_VMS	&lt;C: #define MQPL_VMS 12	&gt;</body><body package="MQ-XIF">MQPL_WINDOWS	&lt;C: #define MQPL_WINDOWS 5	&gt;</body><body package="MQ-XIF">MQPL_WINDOWS_NT	&lt;C: #define MQPL_WINDOWS_NT 11	&gt;</body><body package="MQ-XIF">MQPL_ZOS	&lt;C: #define MQPL_ZOS 1	&gt;</body><body package="MQ-XIF">MQPMO_ALTERNATE_USER_AUTHORITY	&lt;C: #define MQPMO_ALTERNATE_USER_AUTHORITY 0x00001000	&gt;</body><body package="MQ-XIF">MQPMO_CURRENT_LENGTH	&lt;C: #define MQPMO_CURRENT_LENGTH 152	&gt;</body><body package="MQ-XIF">MQPMO_CURRENT_VERSION	&lt;C: #define MQPMO_CURRENT_VERSION 2	&gt;</body><body package="MQ-XIF">MQPMO_DEFAULT	&lt;C: #define MQPMO_DEFAULT {MQPMO_STRUC_ID_ARRAY},MQPMO_VERSION_1,MQPMO_NONE,(-1),0,0,0,0,{""},{""},0,MQPMRF_NONE,0,0,NULL,NULL	&gt;</body><body package="MQ-XIF">MQPMO_DEFAULT_CONTEXT	&lt;C: #define MQPMO_DEFAULT_CONTEXT 0x00000020	&gt;</body><body package="MQ-XIF">MQPMO_FAIL_IF_QUIESCING	&lt;C: #define MQPMO_FAIL_IF_QUIESCING 0x00002000	&gt;</body><body package="MQ-XIF">MQPMO_LOGICAL_ORDER	&lt;C: #define MQPMO_LOGICAL_ORDER 0x00008000	&gt;</body><body package="MQ-XIF">MQPMO_NEW_CORREL_ID	&lt;C: #define MQPMO_NEW_CORREL_ID 0x00000080	&gt;</body><body package="MQ-XIF">MQPMO_NEW_MSG_ID	&lt;C: #define MQPMO_NEW_MSG_ID 0x00000040	&gt;</body><body package="MQ-XIF">MQPMO_NONE	&lt;C: #define MQPMO_NONE 0x00000000	&gt;</body><body package="MQ-XIF">MQPMO_NO_CONTEXT	&lt;C: #define MQPMO_NO_CONTEXT 0x00004000	&gt;</body><body package="MQ-XIF">MQPMO_NO_SYNCPOINT	&lt;C: #define MQPMO_NO_SYNCPOINT 0x00000004	&gt;</body><body package="MQ-XIF">MQPMO_PASS_ALL_CONTEXT	&lt;C: #define MQPMO_PASS_ALL_CONTEXT 0x00000200	&gt;</body><body package="MQ-XIF">MQPMO_PASS_IDENTITY_CONTEXT	&lt;C: #define MQPMO_PASS_IDENTITY_CONTEXT 0x00000100	&gt;</body><body package="MQ-XIF">MQPMO_SET_ALL_CONTEXT	&lt;C: #define MQPMO_SET_ALL_CONTEXT 0x00000800	&gt;</body><body package="MQ-XIF">MQPMO_SET_IDENTITY_CONTEXT	&lt;C: #define MQPMO_SET_IDENTITY_CONTEXT 0x00000400	&gt;</body><body package="MQ-XIF">MQPMO_STRUC_ID	&lt;C: #define MQPMO_STRUC_ID "PMO "	&gt;</body><body package="MQ-XIF">MQPMO_STRUC_ID_ARRAY	&lt;C: #define MQPMO_STRUC_ID_ARRAY 80,77,79,32	&gt;</body><body package="MQ-XIF">MQPMO_SYNCPOINT	&lt;C: #define MQPMO_SYNCPOINT 0x00000002	&gt;</body><body package="MQ-XIF">MQPMO_VERSION_1	&lt;C: #define MQPMO_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQPMO_VERSION_2	&lt;C: #define MQPMO_VERSION_2 2	&gt;</body><body package="MQ-XIF">MQPMRF_ACCOUNTING_TOKEN	&lt;C: #define MQPMRF_ACCOUNTING_TOKEN 0x00000010	&gt;</body><body package="MQ-XIF">MQPMRF_CORREL_ID	&lt;C: #define MQPMRF_CORREL_ID 0x00000002	&gt;</body><body package="MQ-XIF">MQPMRF_FEEDBACK	&lt;C: #define MQPMRF_FEEDBACK 0x00000008	&gt;</body><body package="MQ-XIF">MQPMRF_GROUP_ID	&lt;C: #define MQPMRF_GROUP_ID 0x00000004	&gt;</body><body package="MQ-XIF">MQPMRF_MSG_ID	&lt;C: #define MQPMRF_MSG_ID 0x00000001	&gt;</body><body package="MQ-XIF">MQPMRF_NONE	&lt;C: #define MQPMRF_NONE 0x00000000	&gt;</body><body package="MQ-XIF">MQPOINTER	&lt;C: #define MQPOINTER *	&gt;</body><body package="MQ-XIF">MQPRI_PRIORITY_AS_Q_DEF	&lt;C: #define MQPRI_PRIORITY_AS_Q_DEF (-1)	&gt;</body><body package="MQ-XIF">MQQA_BACKOUT_HARDENED	&lt;C: #define MQQA_BACKOUT_HARDENED 1	&gt;</body><body package="MQ-XIF">MQQA_BACKOUT_NOT_HARDENED	&lt;C: #define MQQA_BACKOUT_NOT_HARDENED 0	&gt;</body><body package="MQ-XIF">MQQA_GET_ALLOWED	&lt;C: #define MQQA_GET_ALLOWED 0	&gt;</body><body package="MQ-XIF">MQQA_GET_INHIBITED	&lt;C: #define MQQA_GET_INHIBITED 1	&gt;</body><body package="MQ-XIF">MQQA_NOT_SHAREABLE	&lt;C: #define MQQA_NOT_SHAREABLE 0	&gt;</body><body package="MQ-XIF">MQQA_PUT_ALLOWED	&lt;C: #define MQQA_PUT_ALLOWED 0	&gt;</body><body package="MQ-XIF">MQQA_PUT_INHIBITED	&lt;C: #define MQQA_PUT_INHIBITED 1	&gt;</body><body package="MQ-XIF">MQQA_SHAREABLE	&lt;C: #define MQQA_SHAREABLE 1	&gt;</body><body package="MQ-XIF">MQQDT_PERMANENT_DYNAMIC	&lt;C: #define MQQDT_PERMANENT_DYNAMIC 2	&gt;</body><body package="MQ-XIF">MQQDT_PREDEFINED	&lt;C: #define MQQDT_PREDEFINED 1	&gt;</body><body package="MQ-XIF">MQQDT_SHARED_DYNAMIC	&lt;C: #define MQQDT_SHARED_DYNAMIC 4	&gt;</body><body package="MQ-XIF">MQQDT_TEMPORARY_DYNAMIC	&lt;C: #define MQQDT_TEMPORARY_DYNAMIC 3	&gt;</body><body package="MQ-XIF">MQQSGD_COPY	&lt;C: #define MQQSGD_COPY 1	&gt;</body><body package="MQ-XIF">MQQSGD_GROUP	&lt;C: #define MQQSGD_GROUP 3	&gt;</body><body package="MQ-XIF">MQQSGD_Q_MGR	&lt;C: #define MQQSGD_Q_MGR 0	&gt;</body><body package="MQ-XIF">MQQSGD_SHARED	&lt;C: #define MQQSGD_SHARED 2	&gt;</body><body package="MQ-XIF">MQQT_ALIAS	&lt;C: #define MQQT_ALIAS 3	&gt;</body><body package="MQ-XIF">MQQT_ALL	&lt;C: #define MQQT_ALL 1001	&gt;</body><body package="MQ-XIF">MQQT_CLUSTER	&lt;C: #define MQQT_CLUSTER 7	&gt;</body><body package="MQ-XIF">MQQT_LOCAL	&lt;C: #define MQQT_LOCAL 1	&gt;</body><body package="MQ-XIF">MQQT_MODEL	&lt;C: #define MQQT_MODEL 2	&gt;</body><body package="MQ-XIF">MQQT_REMOTE	&lt;C: #define MQQT_REMOTE 6	&gt;</body><body package="MQ-XIF">MQRC_ADAPTER_CONN_LOAD_ERROR	&lt;C: #define MQRC_ADAPTER_CONN_LOAD_ERROR 2129	&gt;</body><body package="MQ-XIF">MQRC_ADAPTER_CONV_LOAD_ERROR	&lt;C: #define MQRC_ADAPTER_CONV_LOAD_ERROR 2133	&gt;</body><body package="MQ-XIF">MQRC_ADAPTER_DEFS_ERROR	&lt;C: #define MQRC_ADAPTER_DEFS_ERROR 2131	&gt;</body><body package="MQ-XIF">MQRC_ADAPTER_DEFS_LOAD_ERROR	&lt;C: #define MQRC_ADAPTER_DEFS_LOAD_ERROR 2132	&gt;</body><body package="MQ-XIF">MQRC_ADAPTER_DISC_LOAD_ERROR	&lt;C: #define MQRC_ADAPTER_DISC_LOAD_ERROR 2138	&gt;</body><body package="MQ-XIF">MQRC_ADAPTER_NOT_AVAILABLE	&lt;C: #define MQRC_ADAPTER_NOT_AVAILABLE 2204	&gt;</body><body package="MQ-XIF">MQRC_ADAPTER_SERV_LOAD_ERROR	&lt;C: #define MQRC_ADAPTER_SERV_LOAD_ERROR 2130	&gt;</body><body package="MQ-XIF">MQRC_ADAPTER_STORAGE_SHORTAGE	&lt;C: #define MQRC_ADAPTER_STORAGE_SHORTAGE 2127	&gt;</body><body package="MQ-XIF">MQRC_AIR_ERROR	&lt;C: #define MQRC_AIR_ERROR 2385	&gt;</body><body package="MQ-XIF">MQRC_ALIAS_BASE_Q_TYPE_ERROR	&lt;C: #define MQRC_ALIAS_BASE_Q_TYPE_ERROR 2001	&gt;</body><body package="MQ-XIF">MQRC_ALREADY_CONNECTED	&lt;C: #define MQRC_ALREADY_CONNECTED 2002	&gt;</body><body package="MQ-XIF">MQRC_ANOTHER_Q_MGR_CONNECTED	&lt;C: #define MQRC_ANOTHER_Q_MGR_CONNECTED 2103	&gt;</body><body package="MQ-XIF">MQRC_API_EXIT_ERROR	&lt;C: #define MQRC_API_EXIT_ERROR 2374	&gt;</body><body package="MQ-XIF">MQRC_API_EXIT_INIT_ERROR	&lt;C: #define MQRC_API_EXIT_INIT_ERROR 2375	&gt;</body><body package="MQ-XIF">MQRC_API_EXIT_LOAD_ERROR	&lt;C: #define MQRC_API_EXIT_LOAD_ERROR 2183	&gt;</body><body package="MQ-XIF">MQRC_API_EXIT_NOT_FOUND	&lt;C: #define MQRC_API_EXIT_NOT_FOUND 2182	&gt;</body><body package="MQ-XIF">MQRC_API_EXIT_TERM_ERROR	&lt;C: #define MQRC_API_EXIT_TERM_ERROR 2376	&gt;</body><body package="MQ-XIF">MQRC_APPL_FIRST	&lt;C: #define MQRC_APPL_FIRST 900	&gt;</body><body package="MQ-XIF">MQRC_APPL_LAST	&lt;C: #define MQRC_APPL_LAST 999	&gt;</body><body package="MQ-XIF">MQRC_ASID_MISMATCH	&lt;C: #define MQRC_ASID_MISMATCH 2157	&gt;</body><body package="MQ-XIF">MQRC_ATTRIBUTE_LOCKED	&lt;C: #define MQRC_ATTRIBUTE_LOCKED 6104	&gt;</body><body package="MQ-XIF">MQRC_AUTH_INFO_CONN_NAME_ERROR	&lt;C: #define MQRC_AUTH_INFO_CONN_NAME_ERROR 2387	&gt;</body><body package="MQ-XIF">MQRC_AUTH_INFO_REC_COUNT_ERROR	&lt;C: #define MQRC_AUTH_INFO_REC_COUNT_ERROR 2383	&gt;</body><body package="MQ-XIF">MQRC_AUTH_INFO_REC_ERROR	&lt;C: #define MQRC_AUTH_INFO_REC_ERROR 2384	&gt;</body><body package="MQ-XIF">MQRC_AUTH_INFO_TYPE_ERROR	&lt;C: #define MQRC_AUTH_INFO_TYPE_ERROR 2386	&gt;</body><body package="MQ-XIF">MQRC_BACKED_OUT	&lt;C: #define MQRC_BACKED_OUT 2003	&gt;</body><body package="MQ-XIF">MQRC_BACKOUT_THRESHOLD_REACHED	&lt;C: #define MQRC_BACKOUT_THRESHOLD_REACHED 2362	&gt;</body><body package="MQ-XIF">MQRC_BAG_CONVERSION_ERROR	&lt;C: #define MQRC_BAG_CONVERSION_ERROR 2303	&gt;</body><body package="MQ-XIF">MQRC_BAG_WRONG_TYPE	&lt;C: #define MQRC_BAG_WRONG_TYPE 2326	&gt;</body><body package="MQ-XIF">MQRC_BINARY_DATA_LENGTH_ERROR	&lt;C: #define MQRC_BINARY_DATA_LENGTH_ERROR 6111	&gt;</body><body package="MQ-XIF">MQRC_BO_ERROR	&lt;C: #define MQRC_BO_ERROR 2134	&gt;</body><body package="MQ-XIF">MQRC_BRIDGE_STARTED	&lt;C: #define MQRC_BRIDGE_STARTED 2125	&gt;</body><body package="MQ-XIF">MQRC_BRIDGE_STOPPED	&lt;C: #define MQRC_BRIDGE_STOPPED 2126	&gt;</body><body package="MQ-XIF">MQRC_BUFFER_ERROR	&lt;C: #define MQRC_BUFFER_ERROR 2004	&gt;</body><body package="MQ-XIF">MQRC_BUFFER_LENGTH_ERROR	&lt;C: #define MQRC_BUFFER_LENGTH_ERROR 2005	&gt;</body><body package="MQ-XIF">MQRC_BUFFER_NOT_AUTOMATIC	&lt;C: #define MQRC_BUFFER_NOT_AUTOMATIC 6112	&gt;</body><body package="MQ-XIF">MQRC_CALL_IN_PROGRESS	&lt;C: #define MQRC_CALL_IN_PROGRESS 2219	&gt;</body><body package="MQ-XIF">MQRC_CD_ERROR	&lt;C: #define MQRC_CD_ERROR 2277	&gt;</body><body package="MQ-XIF">MQRC_CFH_ERROR	&lt;C: #define MQRC_CFH_ERROR 2235	&gt;</body><body package="MQ-XIF">MQRC_CFIL_ERROR	&lt;C: #define MQRC_CFIL_ERROR 2236	&gt;</body><body package="MQ-XIF">MQRC_CFIN_ERROR	&lt;C: #define MQRC_CFIN_ERROR 2237	&gt;</body><body package="MQ-XIF">MQRC_CFSL_ERROR	&lt;C: #define MQRC_CFSL_ERROR 2238	&gt;</body><body package="MQ-XIF">MQRC_CFST_ERROR	&lt;C: #define MQRC_CFST_ERROR 2239	&gt;</body><body package="MQ-XIF">MQRC_CF_NOT_AVAILABLE	&lt;C: #define MQRC_CF_NOT_AVAILABLE 2345	&gt;</body><body package="MQ-XIF">MQRC_CF_STRUC_AUTH_FAILED	&lt;C: #define MQRC_CF_STRUC_AUTH_FAILED 2348	&gt;</body><body package="MQ-XIF">MQRC_CF_STRUC_ERROR	&lt;C: #define MQRC_CF_STRUC_ERROR 2349	&gt;</body><body package="MQ-XIF">MQRC_CF_STRUC_FAILED	&lt;C: #define MQRC_CF_STRUC_FAILED 2373	&gt;</body><body package="MQ-XIF">MQRC_CF_STRUC_IN_USE	&lt;C: #define MQRC_CF_STRUC_IN_USE 2346	&gt;</body><body package="MQ-XIF">MQRC_CF_STRUC_LIST_HDR_IN_USE	&lt;C: #define MQRC_CF_STRUC_LIST_HDR_IN_USE 2347	&gt;</body><body package="MQ-XIF">MQRC_CHANNEL_ACTIVATED	&lt;C: #define MQRC_CHANNEL_ACTIVATED 2295	&gt;</body><body package="MQ-XIF">MQRC_CHANNEL_AUTO_DEF_ERROR	&lt;C: #define MQRC_CHANNEL_AUTO_DEF_ERROR 2234	&gt;</body><body package="MQ-XIF">MQRC_CHANNEL_AUTO_DEF_OK	&lt;C: #define MQRC_CHANNEL_AUTO_DEF_OK 2233	&gt;</body><body package="MQ-XIF">MQRC_CHANNEL_CONV_ERROR	&lt;C: #define MQRC_CHANNEL_CONV_ERROR 2284	&gt;</body><body package="MQ-XIF">MQRC_CHANNEL_NOT_ACTIVATED	&lt;C: #define MQRC_CHANNEL_NOT_ACTIVATED 2296	&gt;</body><body package="MQ-XIF">MQRC_CHANNEL_SSL_ERROR	&lt;C: #define MQRC_CHANNEL_SSL_ERROR 2371	&gt;</body><body package="MQ-XIF">MQRC_CHANNEL_STARTED	&lt;C: #define MQRC_CHANNEL_STARTED 2282	&gt;</body><body package="MQ-XIF">MQRC_CHANNEL_STOPPED	&lt;C: #define MQRC_CHANNEL_STOPPED 2283	&gt;</body><body package="MQ-XIF">MQRC_CHANNEL_STOPPED_BY_USER	&lt;C: #define MQRC_CHANNEL_STOPPED_BY_USER 2279	&gt;</body><body package="MQ-XIF">MQRC_CHAR_ATTRS_ERROR	&lt;C: #define MQRC_CHAR_ATTRS_ERROR 2007	&gt;</body><body package="MQ-XIF">MQRC_CHAR_ATTRS_TOO_SHORT	&lt;C: #define MQRC_CHAR_ATTRS_TOO_SHORT 2008	&gt;</body><body package="MQ-XIF">MQRC_CHAR_ATTR_LENGTH_ERROR	&lt;C: #define MQRC_CHAR_ATTR_LENGTH_ERROR 2006	&gt;</body><body package="MQ-XIF">MQRC_CHAR_CONVERSION_ERROR	&lt;C: #define MQRC_CHAR_CONVERSION_ERROR 2340	&gt;</body><body package="MQ-XIF">MQRC_CICS_BRIDGE_RESTRICTION	&lt;C: #define MQRC_CICS_BRIDGE_RESTRICTION 2187	&gt;</body><body package="MQ-XIF">MQRC_CICS_WAIT_FAILED	&lt;C: #define MQRC_CICS_WAIT_FAILED 2140	&gt;</body><body package="MQ-XIF">MQRC_CLIENT_CONN_ERROR	&lt;C: #define MQRC_CLIENT_CONN_ERROR 2278	&gt;</body><body package="MQ-XIF">MQRC_CLUSTER_EXIT_ERROR	&lt;C: #define MQRC_CLUSTER_EXIT_ERROR 2266	&gt;</body><body package="MQ-XIF">MQRC_CLUSTER_EXIT_LOAD_ERROR	&lt;C: #define MQRC_CLUSTER_EXIT_LOAD_ERROR 2267	&gt;</body><body package="MQ-XIF">MQRC_CLUSTER_PUT_INHIBITED	&lt;C: #define MQRC_CLUSTER_PUT_INHIBITED 2268	&gt;</body><body package="MQ-XIF">MQRC_CLUSTER_RESOLUTION_ERROR	&lt;C: #define MQRC_CLUSTER_RESOLUTION_ERROR 2189	&gt;</body><body package="MQ-XIF">MQRC_CLUSTER_RESOURCE_ERROR	&lt;C: #define MQRC_CLUSTER_RESOURCE_ERROR 2269	&gt;</body><body package="MQ-XIF">MQRC_CMD_SERVER_NOT_AVAILABLE	&lt;C: #define MQRC_CMD_SERVER_NOT_AVAILABLE 2322	&gt;</body><body package="MQ-XIF">MQRC_CNO_ERROR	&lt;C: #define MQRC_CNO_ERROR 2139	&gt;</body><body package="MQ-XIF">MQRC_CODED_CHAR_SET_ID_ERROR	&lt;C: #define MQRC_CODED_CHAR_SET_ID_ERROR 2330	&gt;</body><body package="MQ-XIF">MQRC_COD_NOT_VALID_FOR_XCF_Q	&lt;C: #define MQRC_COD_NOT_VALID_FOR_XCF_Q 2106	&gt;</body><body package="MQ-XIF">MQRC_COMMAND_TYPE_ERROR	&lt;C: #define MQRC_COMMAND_TYPE_ERROR 2300	&gt;</body><body package="MQ-XIF">MQRC_CONFIG_CHANGE_OBJECT	&lt;C: #define MQRC_CONFIG_CHANGE_OBJECT 2368	&gt;</body><body package="MQ-XIF">MQRC_CONFIG_CREATE_OBJECT	&lt;C: #define MQRC_CONFIG_CREATE_OBJECT 2367	&gt;</body><body package="MQ-XIF">MQRC_CONFIG_DELETE_OBJECT	&lt;C: #define MQRC_CONFIG_DELETE_OBJECT 2369	&gt;</body><body package="MQ-XIF">MQRC_CONFIG_REFRESH_OBJECT	&lt;C: #define MQRC_CONFIG_REFRESH_OBJECT 2370	&gt;</body><body package="MQ-XIF">MQRC_CONNECTION_BROKEN	&lt;C: #define MQRC_CONNECTION_BROKEN 2009	&gt;</body><body package="MQ-XIF">MQRC_CONNECTION_ERROR	&lt;C: #define MQRC_CONNECTION_ERROR 2273	&gt;</body><body package="MQ-XIF">MQRC_CONNECTION_NOT_AUTHORIZED	&lt;C: #define MQRC_CONNECTION_NOT_AUTHORIZED 2217	&gt;</body><body package="MQ-XIF">MQRC_CONNECTION_QUIESCING	&lt;C: #define MQRC_CONNECTION_QUIESCING 2202	&gt;</body><body package="MQ-XIF">MQRC_CONNECTION_STOPPING	&lt;C: #define MQRC_CONNECTION_STOPPING 2203	&gt;</body><body package="MQ-XIF">MQRC_CONN_ID_IN_USE	&lt;C: #define MQRC_CONN_ID_IN_USE 2160	&gt;</body><body package="MQ-XIF">MQRC_CONN_TAG_IN_USE	&lt;C: #define MQRC_CONN_TAG_IN_USE 2271	&gt;</body><body package="MQ-XIF">MQRC_CONN_TAG_NOT_RELEASED	&lt;C: #define MQRC_CONN_TAG_NOT_RELEASED 2344	&gt;</body><body package="MQ-XIF">MQRC_CONN_TAG_NOT_USABLE	&lt;C: #define MQRC_CONN_TAG_NOT_USABLE 2350	&gt;</body><body package="MQ-XIF">MQRC_CONTEXT_HANDLE_ERROR	&lt;C: #define MQRC_CONTEXT_HANDLE_ERROR 2097	&gt;</body><body package="MQ-XIF">MQRC_CONTEXT_NOT_AVAILABLE	&lt;C: #define MQRC_CONTEXT_NOT_AVAILABLE 2098	&gt;</body><body package="MQ-XIF">MQRC_CONTEXT_OBJECT_NOT_VALID	&lt;C: #define MQRC_CONTEXT_OBJECT_NOT_VALID 6121	&gt;</body><body package="MQ-XIF">MQRC_CONTEXT_OPEN_ERROR	&lt;C: #define MQRC_CONTEXT_OPEN_ERROR 6122	&gt;</body><body package="MQ-XIF">MQRC_CONVERTED_MSG_TOO_BIG	&lt;C: #define MQRC_CONVERTED_MSG_TOO_BIG 2120	&gt;</body><body package="MQ-XIF">MQRC_CONVERTED_STRING_TOO_BIG	&lt;C: #define MQRC_CONVERTED_STRING_TOO_BIG 2190	&gt;</body><body package="MQ-XIF">MQRC_CORREL_ID_ERROR	&lt;C: #define MQRC_CORREL_ID_ERROR 2207	&gt;</body><body package="MQ-XIF">MQRC_CRYPTO_HARDWARE_ERROR	&lt;C: #define MQRC_CRYPTO_HARDWARE_ERROR 2382	&gt;</body><body package="MQ-XIF">MQRC_CURRENT_RECORD_ERROR	&lt;C: #define MQRC_CURRENT_RECORD_ERROR 2357	&gt;</body><body package="MQ-XIF">MQRC_CURSOR_NOT_VALID	&lt;C: #define MQRC_CURSOR_NOT_VALID 6105	&gt;</body><body package="MQ-XIF">MQRC_DATA_LENGTH_ERROR	&lt;C: #define MQRC_DATA_LENGTH_ERROR 2010	&gt;</body><body package="MQ-XIF">MQRC_DATA_TRUNCATED	&lt;C: #define MQRC_DATA_TRUNCATED 6115	&gt;</body><body package="MQ-XIF">MQRC_DB2_NOT_AVAILABLE	&lt;C: #define MQRC_DB2_NOT_AVAILABLE 2342	&gt;</body><body package="MQ-XIF">MQRC_DBCS_ERROR	&lt;C: #define MQRC_DBCS_ERROR 2150	&gt;</body><body package="MQ-XIF">MQRC_DEF_XMIT_Q_TYPE_ERROR	&lt;C: #define MQRC_DEF_XMIT_Q_TYPE_ERROR 2198	&gt;</body><body package="MQ-XIF">MQRC_DEF_XMIT_Q_USAGE_ERROR	&lt;C: #define MQRC_DEF_XMIT_Q_USAGE_ERROR 2199	&gt;</body><body package="MQ-XIF">MQRC_DEST_ENV_ERROR	&lt;C: #define MQRC_DEST_ENV_ERROR 2263	&gt;</body><body package="MQ-XIF">MQRC_DEST_NAME_ERROR	&lt;C: #define MQRC_DEST_NAME_ERROR 2264	&gt;</body><body package="MQ-XIF">MQRC_DH_ERROR	&lt;C: #define MQRC_DH_ERROR 2135	&gt;</body><body package="MQ-XIF">MQRC_DISTRIBUTION_LIST_EMPTY	&lt;C: #define MQRC_DISTRIBUTION_LIST_EMPTY 6126	&gt;</body><body package="MQ-XIF">MQRC_DLH_ERROR	&lt;C: #define MQRC_DLH_ERROR 2141	&gt;</body><body package="MQ-XIF">MQRC_DUPLICATE_RECOV_COORD	&lt;C: #define MQRC_DUPLICATE_RECOV_COORD 2163	&gt;</body><body package="MQ-XIF">MQRC_DYNAMIC_Q_NAME_ERROR	&lt;C: #define MQRC_DYNAMIC_Q_NAME_ERROR 2011	&gt;</body><body package="MQ-XIF">MQRC_ENCODING_ERROR	&lt;C: #define MQRC_ENCODING_ERROR 6106	&gt;</body><body package="MQ-XIF">MQRC_ENCODING_NOT_SUPPORTED	&lt;C: #define MQRC_ENCODING_NOT_SUPPORTED 2308	&gt;</body><body package="MQ-XIF">MQRC_ENVIRONMENT_ERROR	&lt;C: #define MQRC_ENVIRONMENT_ERROR 2012	&gt;</body><body package="MQ-XIF">MQRC_EXIT_REASON_ERROR	&lt;C: #define MQRC_EXIT_REASON_ERROR 2377	&gt;</body><body package="MQ-XIF">MQRC_EXPIRY_ERROR	&lt;C: #define MQRC_EXPIRY_ERROR 2013	&gt;</body><body package="MQ-XIF">MQRC_FEEDBACK_ERROR	&lt;C: #define MQRC_FEEDBACK_ERROR 2014	&gt;</body><body package="MQ-XIF">MQRC_FILE_NOT_AUDITED	&lt;C: #define MQRC_FILE_NOT_AUDITED 2216	&gt;</body><body package="MQ-XIF">MQRC_FILE_SYSTEM_ERROR	&lt;C: #define MQRC_FILE_SYSTEM_ERROR 2208	&gt;</body><body package="MQ-XIF">MQRC_FORMAT_ERROR	&lt;C: #define MQRC_FORMAT_ERROR 2110	&gt;</body><body package="MQ-XIF">MQRC_FORMAT_NOT_SUPPORTED	&lt;C: #define MQRC_FORMAT_NOT_SUPPORTED 2317	&gt;</body><body package="MQ-XIF">MQRC_FUNCTION_ERROR	&lt;C: #define MQRC_FUNCTION_ERROR 2281	&gt;</body><body package="MQ-XIF">MQRC_FUNCTION_NOT_SUPPORTED	&lt;C: #define MQRC_FUNCTION_NOT_SUPPORTED 2298	&gt;</body><body package="MQ-XIF">MQRC_GET_INHIBITED	&lt;C: #define MQRC_GET_INHIBITED 2016	&gt;</body><body package="MQ-XIF">MQRC_GLOBAL_UOW_CONFLICT	&lt;C: #define MQRC_GLOBAL_UOW_CONFLICT 2351	&gt;</body><body package="MQ-XIF">MQRC_GMO_ERROR	&lt;C: #define MQRC_GMO_ERROR 2186	&gt;</body><body package="MQ-XIF">MQRC_GROUP_ID_ERROR	&lt;C: #define MQRC_GROUP_ID_ERROR 2258	&gt;</body><body package="MQ-XIF">MQRC_HANDLE_IN_USE_FOR_UOW	&lt;C: #define MQRC_HANDLE_IN_USE_FOR_UOW 2353	&gt;</body><body package="MQ-XIF">MQRC_HANDLE_NOT_AVAILABLE	&lt;C: #define MQRC_HANDLE_NOT_AVAILABLE 2017	&gt;</body><body package="MQ-XIF">MQRC_HBAG_ERROR	&lt;C: #define MQRC_HBAG_ERROR 2320	&gt;</body><body package="MQ-XIF">MQRC_HCONFIG_ERROR	&lt;C: #define MQRC_HCONFIG_ERROR 2280	&gt;</body><body package="MQ-XIF">MQRC_HCONN_ERROR	&lt;C: #define MQRC_HCONN_ERROR 2018	&gt;</body><body package="MQ-XIF">MQRC_HEADER_ERROR	&lt;C: #define MQRC_HEADER_ERROR 2142	&gt;</body><body package="MQ-XIF">MQRC_HOBJ_ERROR	&lt;C: #define MQRC_HOBJ_ERROR 2019	&gt;</body><body package="MQ-XIF">MQRC_IIH_ERROR	&lt;C: #define MQRC_IIH_ERROR 2148	&gt;</body><body package="MQ-XIF">MQRC_INCOMPLETE_GROUP	&lt;C: #define MQRC_INCOMPLETE_GROUP 2241	&gt;</body><body package="MQ-XIF">MQRC_INCOMPLETE_MSG	&lt;C: #define MQRC_INCOMPLETE_MSG 2242	&gt;</body><body package="MQ-XIF">MQRC_INCONSISTENT_BROWSE	&lt;C: #define MQRC_INCONSISTENT_BROWSE 2259	&gt;</body><body package="MQ-XIF">MQRC_INCONSISTENT_CCSIDS	&lt;C: #define MQRC_INCONSISTENT_CCSIDS 2243	&gt;</body><body package="MQ-XIF">MQRC_INCONSISTENT_ENCODINGS	&lt;C: #define MQRC_INCONSISTENT_ENCODINGS 2244	&gt;</body><body package="MQ-XIF">MQRC_INCONSISTENT_FORMAT	&lt;C: #define MQRC_INCONSISTENT_FORMAT 6119	&gt;</body><body package="MQ-XIF">MQRC_INCONSISTENT_ITEM_TYPE	&lt;C: #define MQRC_INCONSISTENT_ITEM_TYPE 2313	&gt;</body><body package="MQ-XIF">MQRC_INCONSISTENT_OBJECT_STATE	&lt;C: #define MQRC_INCONSISTENT_OBJECT_STATE 6120	&gt;</body><body package="MQ-XIF">MQRC_INCONSISTENT_OPEN_OPTIONS	&lt;C: #define MQRC_INCONSISTENT_OPEN_OPTIONS 6127	&gt;</body><body package="MQ-XIF">MQRC_INCONSISTENT_PERSISTENCE	&lt;C: #define MQRC_INCONSISTENT_PERSISTENCE 2185	&gt;</body><body package="MQ-XIF">MQRC_INCONSISTENT_UOW	&lt;C: #define MQRC_INCONSISTENT_UOW 2245	&gt;</body><body package="MQ-XIF">MQRC_INDEX_ERROR	&lt;C: #define MQRC_INDEX_ERROR 2314	&gt;</body><body package="MQ-XIF">MQRC_INDEX_NOT_PRESENT	&lt;C: #define MQRC_INDEX_NOT_PRESENT 2306	&gt;</body><body package="MQ-XIF">MQRC_INHIBIT_VALUE_ERROR	&lt;C: #define MQRC_INHIBIT_VALUE_ERROR 2020	&gt;</body><body package="MQ-XIF">MQRC_INITIALIZATION_FAILED	&lt;C: #define MQRC_INITIALIZATION_FAILED 2286	&gt;</body><body package="MQ-XIF">MQRC_INQUIRY_COMMAND_ERROR	&lt;C: #define MQRC_INQUIRY_COMMAND_ERROR 2324	&gt;</body><body package="MQ-XIF">MQRC_INSUFFICIENT_BUFFER	&lt;C: #define MQRC_INSUFFICIENT_BUFFER 6113	&gt;</body><body package="MQ-XIF">MQRC_INSUFFICIENT_DATA	&lt;C: #define MQRC_INSUFFICIENT_DATA 6114	&gt;</body><body package="MQ-XIF">MQRC_INT_ATTRS_ARRAY_ERROR	&lt;C: #define MQRC_INT_ATTRS_ARRAY_ERROR 2023	&gt;</body><body package="MQ-XIF">MQRC_INT_ATTR_COUNT_ERROR	&lt;C: #define MQRC_INT_ATTR_COUNT_ERROR 2021	&gt;</body><body package="MQ-XIF">MQRC_INT_ATTR_COUNT_TOO_SMALL	&lt;C: #define MQRC_INT_ATTR_COUNT_TOO_SMALL 2022	&gt;</body><body package="MQ-XIF">MQRC_INVALID_MSG_UNDER_CURSOR	&lt;C: #define MQRC_INVALID_MSG_UNDER_CURSOR 2246	&gt;</body><body package="MQ-XIF">MQRC_ITEM_COUNT_ERROR	&lt;C: #define MQRC_ITEM_COUNT_ERROR 2316	&gt;</body><body package="MQ-XIF">MQRC_ITEM_TYPE_ERROR	&lt;C: #define MQRC_ITEM_TYPE_ERROR 2327	&gt;</body><body package="MQ-XIF">MQRC_ITEM_VALUE_ERROR	&lt;C: #define MQRC_ITEM_VALUE_ERROR 2319	&gt;</body><body package="MQ-XIF">MQRC_JMS_FORMAT_ERROR	&lt;C: #define MQRC_JMS_FORMAT_ERROR 2364	&gt;</body><body package="MQ-XIF">MQRC_JSSE_ERROR	&lt;C: #define MQRC_JSSE_ERROR 2397	&gt;</body><body package="MQ-XIF">MQRC_KEY_REPOSITORY_ERROR	&lt;C: #define MQRC_KEY_REPOSITORY_ERROR 2381	&gt;</body><body package="MQ-XIF">MQRC_LDAP_PASSWORD_ERROR	&lt;C: #define MQRC_LDAP_PASSWORD_ERROR 2390	&gt;</body><body package="MQ-XIF">MQRC_LDAP_USER_NAME_ERROR	&lt;C: #define MQRC_LDAP_USER_NAME_ERROR 2388	&gt;</body><body package="MQ-XIF">MQRC_LDAP_USER_NAME_LENGTH_ERR	&lt;C: #define MQRC_LDAP_USER_NAME_LENGTH_ERR 2389	&gt;</body><body package="MQ-XIF">MQRC_LOCAL_UOW_CONFLICT	&lt;C: #define MQRC_LOCAL_UOW_CONFLICT 2352	&gt;</body><body package="MQ-XIF">MQRC_MATCH_OPTIONS_ERROR	&lt;C: #define MQRC_MATCH_OPTIONS_ERROR 2247	&gt;</body><body package="MQ-XIF">MQRC_MAX_CONNS_LIMIT_REACHED	&lt;C: #define MQRC_MAX_CONNS_LIMIT_REACHED 2025	&gt;</body><body package="MQ-XIF">MQRC_MDE_ERROR	&lt;C: #define MQRC_MDE_ERROR 2248	&gt;</body><body package="MQ-XIF">MQRC_MD_ERROR	&lt;C: #define MQRC_MD_ERROR 2026	&gt;</body><body package="MQ-XIF">MQRC_MISSING_REPLY_TO_Q	&lt;C: #define MQRC_MISSING_REPLY_TO_Q 2027	&gt;</body><body package="MQ-XIF">MQRC_MISSING_WIH	&lt;C: #define MQRC_MISSING_WIH 2332	&gt;</body><body package="MQ-XIF">MQRC_MSG_FLAGS_ERROR	&lt;C: #define MQRC_MSG_FLAGS_ERROR 2249	&gt;</body><body package="MQ-XIF">MQRC_MSG_ID_ERROR	&lt;C: #define MQRC_MSG_ID_ERROR 2206	&gt;</body><body package="MQ-XIF">MQRC_MSG_NOT_MATCHED	&lt;C: #define MQRC_MSG_NOT_MATCHED 2363	&gt;</body><body package="MQ-XIF">MQRC_MSG_SEQ_NUMBER_ERROR	&lt;C: #define MQRC_MSG_SEQ_NUMBER_ERROR 2250	&gt;</body><body package="MQ-XIF">MQRC_MSG_TOKEN_ERROR	&lt;C: #define MQRC_MSG_TOKEN_ERROR 2331	&gt;</body><body package="MQ-XIF">MQRC_MSG_TOO_BIG_FOR_CHANNEL	&lt;C: #define MQRC_MSG_TOO_BIG_FOR_CHANNEL 2218	&gt;</body><body package="MQ-XIF">MQRC_MSG_TOO_BIG_FOR_Q	&lt;C: #define MQRC_MSG_TOO_BIG_FOR_Q 2030	&gt;</body><body package="MQ-XIF">MQRC_MSG_TOO_BIG_FOR_Q_MGR	&lt;C: #define MQRC_MSG_TOO_BIG_FOR_Q_MGR 2031	&gt;</body><body package="MQ-XIF">MQRC_MSG_TYPE_ERROR	&lt;C: #define MQRC_MSG_TYPE_ERROR 2029	&gt;</body><body package="MQ-XIF">MQRC_MULTIPLE_INSTANCE_ERROR	&lt;C: #define MQRC_MULTIPLE_INSTANCE_ERROR 2301	&gt;</body><body package="MQ-XIF">MQRC_MULTIPLE_REASONS	&lt;C: #define MQRC_MULTIPLE_REASONS 2136	&gt;</body><body package="MQ-XIF">MQRC_NAME_IN_USE	&lt;C: #define MQRC_NAME_IN_USE 2201	&gt;</body><body package="MQ-XIF">MQRC_NAME_NOT_VALID_FOR_TYPE	&lt;C: #define MQRC_NAME_NOT_VALID_FOR_TYPE 2194	&gt;</body><body package="MQ-XIF">MQRC_NEGATIVE_LENGTH	&lt;C: #define MQRC_NEGATIVE_LENGTH 6117	&gt;</body><body package="MQ-XIF">MQRC_NEGATIVE_OFFSET	&lt;C: #define MQRC_NEGATIVE_OFFSET 6118	&gt;</body><body package="MQ-XIF">MQRC_NESTED_BAG_NOT_SUPPORTED	&lt;C: #define MQRC_NESTED_BAG_NOT_SUPPORTED 2325	&gt;</body><body package="MQ-XIF">MQRC_NEXT_OFFSET_ERROR	&lt;C: #define MQRC_NEXT_OFFSET_ERROR 2358	&gt;</body><body package="MQ-XIF">MQRC_NEXT_RECORD_ERROR	&lt;C: #define MQRC_NEXT_RECORD_ERROR 2361	&gt;</body><body package="MQ-XIF">MQRC_NONE	&lt;C: #define MQRC_NONE 0	&gt;</body><body package="MQ-XIF">MQRC_NOT_AUTHORIZED	&lt;C: #define MQRC_NOT_AUTHORIZED 2035	&gt;</body><body package="MQ-XIF">MQRC_NOT_CONNECTED	&lt;C: #define MQRC_NOT_CONNECTED 6124	&gt;</body><body package="MQ-XIF">MQRC_NOT_CONVERTED	&lt;C: #define MQRC_NOT_CONVERTED 2119	&gt;</body><body package="MQ-XIF">MQRC_NOT_OPEN	&lt;C: #define MQRC_NOT_OPEN 6125	&gt;</body><body package="MQ-XIF">MQRC_NOT_OPEN_FOR_BROWSE	&lt;C: #define MQRC_NOT_OPEN_FOR_BROWSE 2036	&gt;</body><body package="MQ-XIF">MQRC_NOT_OPEN_FOR_INPUT	&lt;C: #define MQRC_NOT_OPEN_FOR_INPUT 2037	&gt;</body><body package="MQ-XIF">MQRC_NOT_OPEN_FOR_INQUIRE	&lt;C: #define MQRC_NOT_OPEN_FOR_INQUIRE 2038	&gt;</body><body package="MQ-XIF">MQRC_NOT_OPEN_FOR_OUTPUT	&lt;C: #define MQRC_NOT_OPEN_FOR_OUTPUT 2039	&gt;</body><body package="MQ-XIF">MQRC_NOT_OPEN_FOR_PASS_ALL	&lt;C: #define MQRC_NOT_OPEN_FOR_PASS_ALL 2093	&gt;</body><body package="MQ-XIF">MQRC_NOT_OPEN_FOR_PASS_IDENT	&lt;C: #define MQRC_NOT_OPEN_FOR_PASS_IDENT 2094	&gt;</body><body package="MQ-XIF">MQRC_NOT_OPEN_FOR_SET	&lt;C: #define MQRC_NOT_OPEN_FOR_SET 2040	&gt;</body><body package="MQ-XIF">MQRC_NOT_OPEN_FOR_SET_ALL	&lt;C: #define MQRC_NOT_OPEN_FOR_SET_ALL 2095	&gt;</body><body package="MQ-XIF">MQRC_NOT_OPEN_FOR_SET_IDENT	&lt;C: #define MQRC_NOT_OPEN_FOR_SET_IDENT 2096	&gt;</body><body package="MQ-XIF">MQRC_NO_BUFFER	&lt;C: #define MQRC_NO_BUFFER 6110	&gt;</body><body package="MQ-XIF">MQRC_NO_CONNECTION_REFERENCE	&lt;C: #define MQRC_NO_CONNECTION_REFERENCE 6109	&gt;</body><body package="MQ-XIF">MQRC_NO_DATA_AVAILABLE	&lt;C: #define MQRC_NO_DATA_AVAILABLE 2379	&gt;</body><body package="MQ-XIF">MQRC_NO_DESTINATIONS_AVAILABLE	&lt;C: #define MQRC_NO_DESTINATIONS_AVAILABLE 2270	&gt;</body><body package="MQ-XIF">MQRC_NO_EXTERNAL_PARTICIPANTS	&lt;C: #define MQRC_NO_EXTERNAL_PARTICIPANTS 2121	&gt;</body><body package="MQ-XIF">MQRC_NO_MSG_AVAILABLE	&lt;C: #define MQRC_NO_MSG_AVAILABLE 2033	&gt;</body><body package="MQ-XIF">MQRC_NO_MSG_LOCKED	&lt;C: #define MQRC_NO_MSG_LOCKED 2209	&gt;</body><body package="MQ-XIF">MQRC_NO_MSG_UNDER_CURSOR	&lt;C: #define MQRC_NO_MSG_UNDER_CURSOR 2034	&gt;</body><body package="MQ-XIF">MQRC_NO_RECORD_AVAILABLE	&lt;C: #define MQRC_NO_RECORD_AVAILABLE 2359	&gt;</body><body package="MQ-XIF">MQRC_NULL_POINTER	&lt;C: #define MQRC_NULL_POINTER 6108	&gt;</body><body package="MQ-XIF">MQRC_OBJECT_ALREADY_EXISTS	&lt;C: #define MQRC_OBJECT_ALREADY_EXISTS 2100	&gt;</body><body package="MQ-XIF">MQRC_OBJECT_CHANGED	&lt;C: #define MQRC_OBJECT_CHANGED 2041	&gt;</body><body package="MQ-XIF">MQRC_OBJECT_DAMAGED	&lt;C: #define MQRC_OBJECT_DAMAGED 2101	&gt;</body><body package="MQ-XIF">MQRC_OBJECT_IN_USE	&lt;C: #define MQRC_OBJECT_IN_USE 2042	&gt;</body><body package="MQ-XIF">MQRC_OBJECT_LEVEL_INCOMPATIBLE	&lt;C: #define MQRC_OBJECT_LEVEL_INCOMPATIBLE 2360	&gt;</body><body package="MQ-XIF">MQRC_OBJECT_NAME_ERROR	&lt;C: #define MQRC_OBJECT_NAME_ERROR 2152	&gt;</body><body package="MQ-XIF">MQRC_OBJECT_NOT_UNIQUE	&lt;C: #define MQRC_OBJECT_NOT_UNIQUE 2343	&gt;</body><body package="MQ-XIF">MQRC_OBJECT_Q_MGR_NAME_ERROR	&lt;C: #define MQRC_OBJECT_Q_MGR_NAME_ERROR 2153	&gt;</body><body package="MQ-XIF">MQRC_OBJECT_RECORDS_ERROR	&lt;C: #define MQRC_OBJECT_RECORDS_ERROR 2155	&gt;</body><body package="MQ-XIF">MQRC_OBJECT_TYPE_ERROR	&lt;C: #define MQRC_OBJECT_TYPE_ERROR 2043	&gt;</body><body package="MQ-XIF">MQRC_OD_ERROR	&lt;C: #define MQRC_OD_ERROR 2044	&gt;</body><body package="MQ-XIF">MQRC_OFFSET_ERROR	&lt;C: #define MQRC_OFFSET_ERROR 2251	&gt;</body><body package="MQ-XIF">MQRC_OPEN_FAILED	&lt;C: #define MQRC_OPEN_FAILED 2137	&gt;</body><body package="MQ-XIF">MQRC_OPTIONS_ERROR	&lt;C: #define MQRC_OPTIONS_ERROR 2046	&gt;</body><body package="MQ-XIF">MQRC_OPTION_ENVIRONMENT_ERROR	&lt;C: #define MQRC_OPTION_ENVIRONMENT_ERROR 2274	&gt;</body><body package="MQ-XIF">MQRC_OPTION_NOT_VALID_FOR_TYPE	&lt;C: #define MQRC_OPTION_NOT_VALID_FOR_TYPE 2045	&gt;</body><body package="MQ-XIF">MQRC_ORIGINAL_LENGTH_ERROR	&lt;C: #define MQRC_ORIGINAL_LENGTH_ERROR 2252	&gt;</body><body package="MQ-XIF">MQRC_OUTCOME_MIXED	&lt;C: #define MQRC_OUTCOME_MIXED 2123	&gt;</body><body package="MQ-XIF">MQRC_OUTCOME_PENDING	&lt;C: #define MQRC_OUTCOME_PENDING 2124	&gt;</body><body package="MQ-XIF">MQRC_OUT_SELECTOR_ERROR	&lt;C: #define MQRC_OUT_SELECTOR_ERROR 2310	&gt;</body><body package="MQ-XIF">MQRC_PAGESET_ERROR	&lt;C: #define MQRC_PAGESET_ERROR 2193	&gt;</body><body package="MQ-XIF">MQRC_PAGESET_FULL	&lt;C: #define MQRC_PAGESET_FULL 2192	&gt;</body><body package="MQ-XIF">MQRC_PARAMETER_MISSING	&lt;C: #define MQRC_PARAMETER_MISSING 2321	&gt;</body><body package="MQ-XIF">MQRC_PARTIALLY_CONVERTED	&lt;C: #define MQRC_PARTIALLY_CONVERTED 2272	&gt;</body><body package="MQ-XIF">MQRC_PARTICIPANT_NOT_AVAILABLE	&lt;C: #define MQRC_PARTICIPANT_NOT_AVAILABLE 2122	&gt;</body><body package="MQ-XIF">MQRC_PCF_ERROR	&lt;C: #define MQRC_PCF_ERROR 2149	&gt;</body><body package="MQ-XIF">MQRC_PERSISTENCE_ERROR	&lt;C: #define MQRC_PERSISTENCE_ERROR 2047	&gt;</body><body package="MQ-XIF">MQRC_PERSISTENT_NOT_ALLOWED	&lt;C: #define MQRC_PERSISTENT_NOT_ALLOWED 2048	&gt;</body><body package="MQ-XIF">MQRC_PMO_ERROR	&lt;C: #define MQRC_PMO_ERROR 2173	&gt;</body><body package="MQ-XIF">MQRC_PMO_RECORD_FLAGS_ERROR	&lt;C: #define MQRC_PMO_RECORD_FLAGS_ERROR 2158	&gt;</body><body package="MQ-XIF">MQRC_PRIORITY_ERROR	&lt;C: #define MQRC_PRIORITY_ERROR 2050	&gt;</body><body package="MQ-XIF">MQRC_PRIORITY_EXCEEDS_MAXIMUM	&lt;C: #define MQRC_PRIORITY_EXCEEDS_MAXIMUM 2049	&gt;</body><body package="MQ-XIF">MQRC_PUT_INHIBITED	&lt;C: #define MQRC_PUT_INHIBITED 2051	&gt;</body><body package="MQ-XIF">MQRC_PUT_MSG_RECORDS_ERROR	&lt;C: #define MQRC_PUT_MSG_RECORDS_ERROR 2159	&gt;</body><body package="MQ-XIF">MQRC_Q_ALREADY_EXISTS	&lt;C: #define MQRC_Q_ALREADY_EXISTS 2290	&gt;</body><body package="MQ-XIF">MQRC_Q_DELETED	&lt;C: #define MQRC_Q_DELETED 2052	&gt;</body><body package="MQ-XIF">MQRC_Q_DEPTH_HIGH	&lt;C: #define MQRC_Q_DEPTH_HIGH 2224	&gt;</body><body package="MQ-XIF">MQRC_Q_DEPTH_LOW	&lt;C: #define MQRC_Q_DEPTH_LOW 2225	&gt;</body><body package="MQ-XIF">MQRC_Q_FULL	&lt;C: #define MQRC_Q_FULL 2053	&gt;</body><body package="MQ-XIF">MQRC_Q_INDEX_TYPE_ERROR	&lt;C: #define MQRC_Q_INDEX_TYPE_ERROR 2394	&gt;</body><body package="MQ-XIF">MQRC_Q_MGR_ACTIVE	&lt;C: #define MQRC_Q_MGR_ACTIVE 2222	&gt;</body><body package="MQ-XIF">MQRC_Q_MGR_NAME_ERROR	&lt;C: #define MQRC_Q_MGR_NAME_ERROR 2058	&gt;</body><body package="MQ-XIF">MQRC_Q_MGR_NOT_ACTIVE	&lt;C: #define MQRC_Q_MGR_NOT_ACTIVE 2223	&gt;</body><body package="MQ-XIF">MQRC_Q_MGR_NOT_AVAILABLE	&lt;C: #define MQRC_Q_MGR_NOT_AVAILABLE 2059	&gt;</body><body package="MQ-XIF">MQRC_Q_MGR_QUIESCING	&lt;C: #define MQRC_Q_MGR_QUIESCING 2161	&gt;</body><body package="MQ-XIF">MQRC_Q_MGR_STOPPING	&lt;C: #define MQRC_Q_MGR_STOPPING 2162	&gt;</body><body package="MQ-XIF">MQRC_Q_NOT_EMPTY	&lt;C: #define MQRC_Q_NOT_EMPTY 2055	&gt;</body><body package="MQ-XIF">MQRC_Q_SERVICE_INTERVAL_HIGH	&lt;C: #define MQRC_Q_SERVICE_INTERVAL_HIGH 2226	&gt;</body><body package="MQ-XIF">MQRC_Q_SERVICE_INTERVAL_OK	&lt;C: #define MQRC_Q_SERVICE_INTERVAL_OK 2227	&gt;</body><body package="MQ-XIF">MQRC_Q_SPACE_NOT_AVAILABLE	&lt;C: #define MQRC_Q_SPACE_NOT_AVAILABLE 2056	&gt;</body><body package="MQ-XIF">MQRC_Q_TYPE_ERROR	&lt;C: #define MQRC_Q_TYPE_ERROR 2057	&gt;</body><body package="MQ-XIF">MQRC_RECS_PRESENT_ERROR	&lt;C: #define MQRC_RECS_PRESENT_ERROR 2154	&gt;</body><body package="MQ-XIF">MQRC_REFERENCE_ERROR	&lt;C: #define MQRC_REFERENCE_ERROR 6129	&gt;</body><body package="MQ-XIF">MQRC_REMOTE_Q_NAME_ERROR	&lt;C: #define MQRC_REMOTE_Q_NAME_ERROR 2184	&gt;</body><body package="MQ-XIF">MQRC_REOPEN_EXCL_INPUT_ERROR	&lt;C: #define MQRC_REOPEN_EXCL_INPUT_ERROR 6100	&gt;</body><body package="MQ-XIF">MQRC_REOPEN_INQUIRE_ERROR	&lt;C: #define MQRC_REOPEN_INQUIRE_ERROR 6101	&gt;</body><body package="MQ-XIF">MQRC_REOPEN_SAVED_CONTEXT_ERR	&lt;C: #define MQRC_REOPEN_SAVED_CONTEXT_ERR 6102	&gt;</body><body package="MQ-XIF">MQRC_REOPEN_TEMPORARY_Q_ERROR	&lt;C: #define MQRC_REOPEN_TEMPORARY_Q_ERROR 6103	&gt;</body><body package="MQ-XIF">MQRC_REPORT_OPTIONS_ERROR	&lt;C: #define MQRC_REPORT_OPTIONS_ERROR 2061	&gt;</body><body package="MQ-XIF">MQRC_RESERVED_VALUE_ERROR	&lt;C: #define MQRC_RESERVED_VALUE_ERROR 2378	&gt;</body><body package="MQ-XIF">MQRC_RESOURCE_PROBLEM	&lt;C: #define MQRC_RESOURCE_PROBLEM 2102	&gt;</body><body package="MQ-XIF">MQRC_RESPONSE_RECORDS_ERROR	&lt;C: #define MQRC_RESPONSE_RECORDS_ERROR 2156	&gt;</body><body package="MQ-XIF">MQRC_RFH_COMMAND_ERROR	&lt;C: #define MQRC_RFH_COMMAND_ERROR 2336	&gt;</body><body package="MQ-XIF">MQRC_RFH_DUPLICATE_PARM	&lt;C: #define MQRC_RFH_DUPLICATE_PARM 2338	&gt;</body><body package="MQ-XIF">MQRC_RFH_ERROR	&lt;C: #define MQRC_RFH_ERROR 2334	&gt;</body><body package="MQ-XIF">MQRC_RFH_PARM_ERROR	&lt;C: #define MQRC_RFH_PARM_ERROR 2337	&gt;</body><body package="MQ-XIF">MQRC_RFH_PARM_MISSING	&lt;C: #define MQRC_RFH_PARM_MISSING 2339	&gt;</body><body package="MQ-XIF">MQRC_RFH_STRING_ERROR	&lt;C: #define MQRC_RFH_STRING_ERROR 2335	&gt;</body><body package="MQ-XIF">MQRC_RMH_ERROR	&lt;C: #define MQRC_RMH_ERROR 2220	&gt;</body><body package="MQ-XIF">MQRC_SCO_ERROR	&lt;C: #define MQRC_SCO_ERROR 2380	&gt;</body><body package="MQ-XIF">MQRC_SECOND_MARK_NOT_ALLOWED	&lt;C: #define MQRC_SECOND_MARK_NOT_ALLOWED 2062	&gt;</body><body package="MQ-XIF">MQRC_SECURITY_ERROR	&lt;C: #define MQRC_SECURITY_ERROR 2063	&gt;</body><body package="MQ-XIF">MQRC_SEGMENTS_NOT_SUPPORTED	&lt;C: #define MQRC_SEGMENTS_NOT_SUPPORTED 2365	&gt;</body><body package="MQ-XIF">MQRC_SEGMENT_LENGTH_ZERO	&lt;C: #define MQRC_SEGMENT_LENGTH_ZERO 2253	&gt;</body><body package="MQ-XIF">MQRC_SELECTOR_COUNT_ERROR	&lt;C: #define MQRC_SELECTOR_COUNT_ERROR 2065	&gt;</body><body package="MQ-XIF">MQRC_SELECTOR_ERROR	&lt;C: #define MQRC_SELECTOR_ERROR 2067	&gt;</body><body package="MQ-XIF">MQRC_SELECTOR_LIMIT_EXCEEDED	&lt;C: #define MQRC_SELECTOR_LIMIT_EXCEEDED 2066	&gt;</body><body package="MQ-XIF">MQRC_SELECTOR_NOT_FOR_TYPE	&lt;C: #define MQRC_SELECTOR_NOT_FOR_TYPE 2068	&gt;</body><body package="MQ-XIF">MQRC_SELECTOR_NOT_PRESENT	&lt;C: #define MQRC_SELECTOR_NOT_PRESENT 2309	&gt;</body><body package="MQ-XIF">MQRC_SELECTOR_NOT_SUPPORTED	&lt;C: #define MQRC_SELECTOR_NOT_SUPPORTED 2318	&gt;</body><body package="MQ-XIF">MQRC_SELECTOR_NOT_UNIQUE	&lt;C: #define MQRC_SELECTOR_NOT_UNIQUE 2305	&gt;</body><body package="MQ-XIF">MQRC_SELECTOR_OUT_OF_RANGE	&lt;C: #define MQRC_SELECTOR_OUT_OF_RANGE 2304	&gt;</body><body package="MQ-XIF">MQRC_SELECTOR_TYPE_ERROR	&lt;C: #define MQRC_SELECTOR_TYPE_ERROR 2299	&gt;</body><body package="MQ-XIF">MQRC_SELECTOR_WRONG_TYPE	&lt;C: #define MQRC_SELECTOR_WRONG_TYPE 2312	&gt;</body><body package="MQ-XIF">MQRC_SERVICE_ERROR	&lt;C: #define MQRC_SERVICE_ERROR 2289	&gt;</body><body package="MQ-XIF">MQRC_SERVICE_NOT_AVAILABLE	&lt;C: #define MQRC_SERVICE_NOT_AVAILABLE 2285	&gt;</body><body package="MQ-XIF">MQRC_SIGNAL1_ERROR	&lt;C: #define MQRC_SIGNAL1_ERROR 2099	&gt;</body><body package="MQ-XIF">MQRC_SIGNAL_OUTSTANDING	&lt;C: #define MQRC_SIGNAL_OUTSTANDING 2069	&gt;</body><body package="MQ-XIF">MQRC_SIGNAL_REQUEST_ACCEPTED	&lt;C: #define MQRC_SIGNAL_REQUEST_ACCEPTED 2070	&gt;</body><body package="MQ-XIF">MQRC_SOURCE_BUFFER_ERROR	&lt;C: #define MQRC_SOURCE_BUFFER_ERROR 2145	&gt;</body><body package="MQ-XIF">MQRC_SOURCE_CCSID_ERROR	&lt;C: #define MQRC_SOURCE_CCSID_ERROR 2111	&gt;</body><body package="MQ-XIF">MQRC_SOURCE_DECIMAL_ENC_ERROR	&lt;C: #define MQRC_SOURCE_DECIMAL_ENC_ERROR 2113	&gt;</body><body package="MQ-XIF">MQRC_SOURCE_FLOAT_ENC_ERROR	&lt;C: #define MQRC_SOURCE_FLOAT_ENC_ERROR 2114	&gt;</body><body package="MQ-XIF">MQRC_SOURCE_INTEGER_ENC_ERROR	&lt;C: #define MQRC_SOURCE_INTEGER_ENC_ERROR 2112	&gt;</body><body package="MQ-XIF">MQRC_SOURCE_LENGTH_ERROR	&lt;C: #define MQRC_SOURCE_LENGTH_ERROR 2143	&gt;</body><body package="MQ-XIF">MQRC_SRC_ENV_ERROR	&lt;C: #define MQRC_SRC_ENV_ERROR 2261	&gt;</body><body package="MQ-XIF">MQRC_SRC_NAME_ERROR	&lt;C: #define MQRC_SRC_NAME_ERROR 2262	&gt;</body><body package="MQ-XIF">MQRC_SSL_ALREADY_INITIALIZED	&lt;C: #define MQRC_SSL_ALREADY_INITIALIZED 2391	&gt;</body><body package="MQ-XIF">MQRC_SSL_CERTIFICATE_REVOKED	&lt;C: #define MQRC_SSL_CERTIFICATE_REVOKED 2401	&gt;</body><body package="MQ-XIF">MQRC_SSL_CERT_STORE_ERROR	&lt;C: #define MQRC_SSL_CERT_STORE_ERROR 2402	&gt;</body><body package="MQ-XIF">MQRC_SSL_CONFIG_ERROR	&lt;C: #define MQRC_SSL_CONFIG_ERROR 2392	&gt;</body><body package="MQ-XIF">MQRC_SSL_INITIALIZATION_ERROR	&lt;C: #define MQRC_SSL_INITIALIZATION_ERROR 2393	&gt;</body><body package="MQ-XIF">MQRC_SSL_NOT_ALLOWED	&lt;C: #define MQRC_SSL_NOT_ALLOWED 2396	&gt;</body><body package="MQ-XIF">MQRC_SSL_PEER_NAME_ERROR	&lt;C: #define MQRC_SSL_PEER_NAME_ERROR 2399	&gt;</body><body package="MQ-XIF">MQRC_SSL_PEER_NAME_MISMATCH	&lt;C: #define MQRC_SSL_PEER_NAME_MISMATCH 2398	&gt;</body><body package="MQ-XIF">MQRC_STOPPED_BY_CLUSTER_EXIT	&lt;C: #define MQRC_STOPPED_BY_CLUSTER_EXIT 2188	&gt;</body><body package="MQ-XIF">MQRC_STORAGE_CLASS_ERROR	&lt;C: #define MQRC_STORAGE_CLASS_ERROR 2105	&gt;</body><body package="MQ-XIF">MQRC_STORAGE_MEDIUM_FULL	&lt;C: #define MQRC_STORAGE_MEDIUM_FULL 2192	&gt;</body><body package="MQ-XIF">MQRC_STORAGE_NOT_AVAILABLE	&lt;C: #define MQRC_STORAGE_NOT_AVAILABLE 2071	&gt;</body><body package="MQ-XIF">MQRC_STRING_ERROR	&lt;C: #define MQRC_STRING_ERROR 2307	&gt;</body><body package="MQ-XIF">MQRC_STRING_LENGTH_ERROR	&lt;C: #define MQRC_STRING_LENGTH_ERROR 2323	&gt;</body><body package="MQ-XIF">MQRC_STRING_TRUNCATED	&lt;C: #define MQRC_STRING_TRUNCATED 2311	&gt;</body><body package="MQ-XIF">MQRC_STRUC_ID_ERROR	&lt;C: #define MQRC_STRUC_ID_ERROR 6107	&gt;</body><body package="MQ-XIF">MQRC_STRUC_LENGTH_ERROR	&lt;C: #define MQRC_STRUC_LENGTH_ERROR 6123	&gt;</body><body package="MQ-XIF">MQRC_SUPPRESSED_BY_EXIT	&lt;C: #define MQRC_SUPPRESSED_BY_EXIT 2109	&gt;</body><body package="MQ-XIF">MQRC_SYNCPOINT_LIMIT_REACHED	&lt;C: #define MQRC_SYNCPOINT_LIMIT_REACHED 2024	&gt;</body><body package="MQ-XIF">MQRC_SYNCPOINT_NOT_AVAILABLE	&lt;C: #define MQRC_SYNCPOINT_NOT_AVAILABLE 2072	&gt;</body><body package="MQ-XIF">MQRC_SYSTEM_BAG_NOT_ALTERABLE	&lt;C: #define MQRC_SYSTEM_BAG_NOT_ALTERABLE 2315	&gt;</body><body package="MQ-XIF">MQRC_SYSTEM_BAG_NOT_DELETABLE	&lt;C: #define MQRC_SYSTEM_BAG_NOT_DELETABLE 2328	&gt;</body><body package="MQ-XIF">MQRC_SYSTEM_ITEM_NOT_ALTERABLE	&lt;C: #define MQRC_SYSTEM_ITEM_NOT_ALTERABLE 2302	&gt;</body><body package="MQ-XIF">MQRC_SYSTEM_ITEM_NOT_DELETABLE	&lt;C: #define MQRC_SYSTEM_ITEM_NOT_DELETABLE 2329	&gt;</body><body package="MQ-XIF">MQRC_TARGET_BUFFER_ERROR	&lt;C: #define MQRC_TARGET_BUFFER_ERROR 2146	&gt;</body><body package="MQ-XIF">MQRC_TARGET_CCSID_ERROR	&lt;C: #define MQRC_TARGET_CCSID_ERROR 2115	&gt;</body><body package="MQ-XIF">MQRC_TARGET_DECIMAL_ENC_ERROR	&lt;C: #define MQRC_TARGET_DECIMAL_ENC_ERROR 2117	&gt;</body><body package="MQ-XIF">MQRC_TARGET_FLOAT_ENC_ERROR	&lt;C: #define MQRC_TARGET_FLOAT_ENC_ERROR 2118	&gt;</body><body package="MQ-XIF">MQRC_TARGET_INTEGER_ENC_ERROR	&lt;C: #define MQRC_TARGET_INTEGER_ENC_ERROR 2116	&gt;</body><body package="MQ-XIF">MQRC_TARGET_LENGTH_ERROR	&lt;C: #define MQRC_TARGET_LENGTH_ERROR 2144	&gt;</body><body package="MQ-XIF">MQRC_TERMINATION_FAILED	&lt;C: #define MQRC_TERMINATION_FAILED 2287	&gt;</body><body package="MQ-XIF">MQRC_TMC_ERROR	&lt;C: #define MQRC_TMC_ERROR 2191	&gt;</body><body package="MQ-XIF">MQRC_TM_ERROR	&lt;C: #define MQRC_TM_ERROR 2265	&gt;</body><body package="MQ-XIF">MQRC_TRIGGER_CONTROL_ERROR	&lt;C: #define MQRC_TRIGGER_CONTROL_ERROR 2075	&gt;</body><body package="MQ-XIF">MQRC_TRIGGER_DEPTH_ERROR	&lt;C: #define MQRC_TRIGGER_DEPTH_ERROR 2076	&gt;</body><body package="MQ-XIF">MQRC_TRIGGER_MSG_PRIORITY_ERR	&lt;C: #define MQRC_TRIGGER_MSG_PRIORITY_ERR 2077	&gt;</body><body package="MQ-XIF">MQRC_TRIGGER_TYPE_ERROR	&lt;C: #define MQRC_TRIGGER_TYPE_ERROR 2078	&gt;</body><body package="MQ-XIF">MQRC_TRUNCATED	&lt;C: #define MQRC_TRUNCATED 2120	&gt;</body><body package="MQ-XIF">MQRC_TRUNCATED_MSG_ACCEPTED	&lt;C: #define MQRC_TRUNCATED_MSG_ACCEPTED 2079	&gt;</body><body package="MQ-XIF">MQRC_TRUNCATED_MSG_FAILED	&lt;C: #define MQRC_TRUNCATED_MSG_FAILED 2080	&gt;</body><body package="MQ-XIF">MQRC_UCS2_CONVERSION_ERROR	&lt;C: #define MQRC_UCS2_CONVERSION_ERROR 2341	&gt;</body><body package="MQ-XIF">MQRC_UNEXPECTED_ERROR	&lt;C: #define MQRC_UNEXPECTED_ERROR 2195	&gt;</body><body package="MQ-XIF">MQRC_UNIT_OF_WORK_NOT_STARTED	&lt;C: #define MQRC_UNIT_OF_WORK_NOT_STARTED 2232	&gt;</body><body package="MQ-XIF">MQRC_UNKNOWN_ALIAS_BASE_Q	&lt;C: #define MQRC_UNKNOWN_ALIAS_BASE_Q 2082	&gt;</body><body package="MQ-XIF">MQRC_UNKNOWN_AUTH_ENTITY	&lt;C: #define MQRC_UNKNOWN_AUTH_ENTITY 2293	&gt;</body><body package="MQ-XIF">MQRC_UNKNOWN_DEF_XMIT_Q	&lt;C: #define MQRC_UNKNOWN_DEF_XMIT_Q 2197	&gt;</body><body package="MQ-XIF">MQRC_UNKNOWN_ENTITY	&lt;C: #define MQRC_UNKNOWN_ENTITY 2292	&gt;</body><body package="MQ-XIF">MQRC_UNKNOWN_OBJECT_NAME	&lt;C: #define MQRC_UNKNOWN_OBJECT_NAME 2085	&gt;</body><body package="MQ-XIF">MQRC_UNKNOWN_OBJECT_Q_MGR	&lt;C: #define MQRC_UNKNOWN_OBJECT_Q_MGR 2086	&gt;</body><body package="MQ-XIF">MQRC_UNKNOWN_Q_NAME	&lt;C: #define MQRC_UNKNOWN_Q_NAME 2288	&gt;</body><body package="MQ-XIF">MQRC_UNKNOWN_REF_OBJECT	&lt;C: #define MQRC_UNKNOWN_REF_OBJECT 2294	&gt;</body><body package="MQ-XIF">MQRC_UNKNOWN_REMOTE_Q_MGR	&lt;C: #define MQRC_UNKNOWN_REMOTE_Q_MGR 2087	&gt;</body><body package="MQ-XIF">MQRC_UNKNOWN_REPORT_OPTION	&lt;C: #define MQRC_UNKNOWN_REPORT_OPTION 2104	&gt;</body><body package="MQ-XIF">MQRC_UNKNOWN_XMIT_Q	&lt;C: #define MQRC_UNKNOWN_XMIT_Q 2196	&gt;</body><body package="MQ-XIF">MQRC_UNSUPPORTED_CIPHER_SUITE	&lt;C: #define MQRC_UNSUPPORTED_CIPHER_SUITE 2400	&gt;</body><body package="MQ-XIF">MQRC_UOW_CANCELED	&lt;C: #define MQRC_UOW_CANCELED 2297	&gt;</body><body package="MQ-XIF">MQRC_UOW_ENLISTMENT_ERROR	&lt;C: #define MQRC_UOW_ENLISTMENT_ERROR 2354	&gt;</body><body package="MQ-XIF">MQRC_UOW_IN_PROGRESS	&lt;C: #define MQRC_UOW_IN_PROGRESS 2128	&gt;</body><body package="MQ-XIF">MQRC_UOW_MIX_NOT_SUPPORTED	&lt;C: #define MQRC_UOW_MIX_NOT_SUPPORTED 2355	&gt;</body><body package="MQ-XIF">MQRC_UOW_NOT_AVAILABLE	&lt;C: #define MQRC_UOW_NOT_AVAILABLE 2255	&gt;</body><body package="MQ-XIF">MQRC_USER_ID_NOT_AVAILABLE	&lt;C: #define MQRC_USER_ID_NOT_AVAILABLE 2291	&gt;</body><body package="MQ-XIF">MQRC_WAIT_INTERVAL_ERROR	&lt;C: #define MQRC_WAIT_INTERVAL_ERROR 2090	&gt;</body><body package="MQ-XIF">MQRC_WIH_ERROR	&lt;C: #define MQRC_WIH_ERROR 2333	&gt;</body><body package="MQ-XIF">MQRC_WRONG_CF_LEVEL	&lt;C: #define MQRC_WRONG_CF_LEVEL 2366	&gt;</body><body package="MQ-XIF">MQRC_WRONG_GMO_VERSION	&lt;C: #define MQRC_WRONG_GMO_VERSION 2256	&gt;</body><body package="MQ-XIF">MQRC_WRONG_MD_VERSION	&lt;C: #define MQRC_WRONG_MD_VERSION 2257	&gt;</body><body package="MQ-XIF">MQRC_WRONG_VERSION	&lt;C: #define MQRC_WRONG_VERSION 6128	&gt;</body><body package="MQ-XIF">MQRC_WXP_ERROR	&lt;C: #define MQRC_WXP_ERROR 2356	&gt;</body><body package="MQ-XIF">MQRC_XMIT_Q_TYPE_ERROR	&lt;C: #define MQRC_XMIT_Q_TYPE_ERROR 2091	&gt;</body><body package="MQ-XIF">MQRC_XMIT_Q_USAGE_ERROR	&lt;C: #define MQRC_XMIT_Q_USAGE_ERROR 2092	&gt;</body><body package="MQ-XIF">MQRC_XQH_ERROR	&lt;C: #define MQRC_XQH_ERROR 2260	&gt;</body><body package="MQ-XIF">MQRC_XWAIT_CANCELED	&lt;C: #define MQRC_XWAIT_CANCELED 2107	&gt;</body><body package="MQ-XIF">MQRC_XWAIT_ERROR	&lt;C: #define MQRC_XWAIT_ERROR 2108	&gt;</body><body package="MQ-XIF">MQRC_ZERO_LENGTH	&lt;C: #define MQRC_ZERO_LENGTH 6116	&gt;</body><body package="MQ-XIF">MQRFH2_DEFAULT	&lt;C: #define MQRFH2_DEFAULT {MQRFH_STRUC_ID_ARRAY},MQRFH_VERSION_2,MQRFH_STRUC_LENGTH_FIXED_2,MQENC_NATIVE,MQCCSI_INHERIT,{MQFMT_NONE_ARRAY},MQRFH_NONE,1208	&gt;</body><body package="MQ-XIF">MQRFH_DEFAULT	&lt;C: #define MQRFH_DEFAULT {MQRFH_STRUC_ID_ARRAY},MQRFH_VERSION_1,MQRFH_STRUC_LENGTH_FIXED,MQENC_NATIVE,MQCCSI_UNDEFINED,{MQFMT_NONE_ARRAY},MQRFH_NONE	&gt;</body><body package="MQ-XIF">MQRFH_NONE	&lt;C: #define MQRFH_NONE 0x00000000	&gt;</body><body package="MQ-XIF">MQRFH_STRUC_ID	&lt;C: #define MQRFH_STRUC_ID "RFH "	&gt;</body><body package="MQ-XIF">MQRFH_STRUC_ID_ARRAY	&lt;C: #define MQRFH_STRUC_ID_ARRAY 82,70,72,32	&gt;</body><body package="MQ-XIF">MQRFH_STRUC_LENGTH_FIXED	&lt;C: #define MQRFH_STRUC_LENGTH_FIXED 32	&gt;</body><body package="MQ-XIF">MQRFH_STRUC_LENGTH_FIXED_2	&lt;C: #define MQRFH_STRUC_LENGTH_FIXED_2 36	&gt;</body><body package="MQ-XIF">MQRFH_VERSION_1	&lt;C: #define MQRFH_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQRFH_VERSION_2	&lt;C: #define MQRFH_VERSION_2 2	&gt;</body><body package="MQ-XIF">MQRL_UNDEFINED	&lt;C: #define MQRL_UNDEFINED (-1)	&gt;</body><body package="MQ-XIF">MQRMHF_LAST	&lt;C: #define MQRMHF_LAST 0x00000001	&gt;</body><body package="MQ-XIF">MQRMHF_NOT_LAST	&lt;C: #define MQRMHF_NOT_LAST 0x00000000	&gt;</body><body package="MQ-XIF">MQRMH_CURRENT_VERSION	&lt;C: #define MQRMH_CURRENT_VERSION 1	&gt;</body><body package="MQ-XIF">MQRMH_DEFAULT	&lt;C: #define MQRMH_DEFAULT {MQRMH_STRUC_ID_ARRAY},MQRMH_VERSION_1,0,MQENC_NATIVE,MQCCSI_UNDEFINED,{MQFMT_NONE_ARRAY},MQRMHF_NOT_LAST,{32,32,32,32,32,32,32,32},{MQOII_NONE_ARRAY},0,0,0,0,0,0,0,0,0,0,0	&gt;</body><body package="MQ-XIF">MQRMH_STRUC_ID	&lt;C: #define MQRMH_STRUC_ID "RMH "	&gt;</body><body package="MQ-XIF">MQRMH_STRUC_ID_ARRAY	&lt;C: #define MQRMH_STRUC_ID_ARRAY 82,77,72,32	&gt;</body><body package="MQ-XIF">MQRMH_VERSION_1	&lt;C: #define MQRMH_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQRO_ACCEPT_UNSUP_IF_XMIT_MASK	&lt;C: #define MQRO_ACCEPT_UNSUP_IF_XMIT_MASK 0x0003FF00	&gt;</body><body package="MQ-XIF">MQRO_ACCEPT_UNSUP_MASK	&lt;C: #define MQRO_ACCEPT_UNSUP_MASK 4024434943	&gt;</body><body package="MQ-XIF">MQRO_COA	&lt;C: #define MQRO_COA 0x00000100	&gt;</body><body package="MQ-XIF">MQRO_COA_WITH_DATA	&lt;C: #define MQRO_COA_WITH_DATA 0x00000300	&gt;</body><body package="MQ-XIF">MQRO_COA_WITH_FULL_DATA	&lt;C: #define MQRO_COA_WITH_FULL_DATA 0x00000700	&gt;</body><body package="MQ-XIF">MQRO_COD	&lt;C: #define MQRO_COD 0x00000800	&gt;</body><body package="MQ-XIF">MQRO_COD_WITH_DATA	&lt;C: #define MQRO_COD_WITH_DATA 0x00001800	&gt;</body><body package="MQ-XIF">MQRO_COD_WITH_FULL_DATA	&lt;C: #define MQRO_COD_WITH_FULL_DATA 0x00003800	&gt;</body><body package="MQ-XIF">MQRO_COPY_MSG_ID_TO_CORREL_ID	&lt;C: #define MQRO_COPY_MSG_ID_TO_CORREL_ID 0x00000000	&gt;</body><body package="MQ-XIF">MQRO_DEAD_LETTER_Q	&lt;C: #define MQRO_DEAD_LETTER_Q 0x00000000	&gt;</body><body package="MQ-XIF">MQRO_DISCARD_MSG	&lt;C: #define MQRO_DISCARD_MSG 134217728	&gt;</body><body package="MQ-XIF">MQRO_EXCEPTION	&lt;C: #define MQRO_EXCEPTION 16777216	&gt;</body><body package="MQ-XIF">MQRO_EXCEPTION_WITH_DATA	&lt;C: #define MQRO_EXCEPTION_WITH_DATA 50331648	&gt;</body><body package="MQ-XIF">MQRO_EXCEPTION_WITH_FULL_DATA	&lt;C: #define MQRO_EXCEPTION_WITH_FULL_DATA 117440512	&gt;</body><body package="MQ-XIF">MQRO_EXPIRATION	&lt;C: #define MQRO_EXPIRATION 0x00200000	&gt;</body><body package="MQ-XIF">MQRO_EXPIRATION_WITH_DATA	&lt;C: #define MQRO_EXPIRATION_WITH_DATA 0x00600000	&gt;</body><body package="MQ-XIF">MQRO_EXPIRATION_WITH_FULL_DATA	&lt;C: #define MQRO_EXPIRATION_WITH_FULL_DATA 0x00E00000	&gt;</body><body package="MQ-XIF">MQRO_NAN	&lt;C: #define MQRO_NAN 0x00000002	&gt;</body><body package="MQ-XIF">MQRO_NEW_MSG_ID	&lt;C: #define MQRO_NEW_MSG_ID 0x00000000	&gt;</body><body package="MQ-XIF">MQRO_NONE	&lt;C: #define MQRO_NONE 0x00000000	&gt;</body><body package="MQ-XIF">MQRO_PAN	&lt;C: #define MQRO_PAN 0x00000001	&gt;</body><body package="MQ-XIF">MQRO_PASS_CORREL_ID	&lt;C: #define MQRO_PASS_CORREL_ID 0x00000040	&gt;</body><body package="MQ-XIF">MQRO_PASS_MSG_ID	&lt;C: #define MQRO_PASS_MSG_ID 0x00000080	&gt;</body><body package="MQ-XIF">MQRO_REJECT_UNSUP_MASK	&lt;C: #define MQRO_REJECT_UNSUP_MASK 270270464	&gt;</body><body package="MQ-XIF">MQRR_DEFAULT	&lt;C: #define MQRR_DEFAULT MQCC_OK,MQRC_NONE	&gt;</body><body package="MQ-XIF">MQSCO_CURRENT_VERSION	&lt;C: #define MQSCO_CURRENT_VERSION 1	&gt;</body><body package="MQ-XIF">MQSCO_DEFAULT	&lt;C: #define MQSCO_DEFAULT {MQSCO_STRUC_ID_ARRAY},MQSCO_VERSION_1,{""},{""},0,0,NULL	&gt;</body><body package="MQ-XIF">MQSCO_STRUC_ID	&lt;C: #define MQSCO_STRUC_ID "SCO "	&gt;</body><body package="MQ-XIF">MQSCO_STRUC_ID_ARRAY	&lt;C: #define MQSCO_STRUC_ID_ARRAY 83,67,79,32	&gt;</body><body package="MQ-XIF">MQSCO_VERSION_1	&lt;C: #define MQSCO_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQSEG_ALLOWED	&lt;C: #define MQSEG_ALLOWED 65	&gt;</body><body package="MQ-XIF">MQSEG_INHIBITED	&lt;C: #define MQSEG_INHIBITED 32	&gt;</body><body package="MQ-XIF">MQSIDT_NONE	&lt;C: #define MQSIDT_NONE 0	&gt;</body><body package="MQ-XIF">MQSIDT_NT_SECURITY_ID	&lt;C: #define MQSIDT_NT_SECURITY_ID 1	&gt;</body><body package="MQ-XIF">MQSIDT_WAS_SECURITY_ID	&lt;C: #define MQSIDT_WAS_SECURITY_ID 2	&gt;</body><body package="MQ-XIF">MQSID_NONE	&lt;C: #define MQSID_NONE "                                        "	&gt;</body><body package="MQ-XIF">MQSID_NONE_ARRAY	&lt;C: #define MQSID_NONE_ARRAY 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	&gt;</body><body package="MQ-XIF">MQSP_AVAILABLE	&lt;C: #define MQSP_AVAILABLE 1	&gt;</body><body package="MQ-XIF">MQSP_NOT_AVAILABLE	&lt;C: #define MQSP_NOT_AVAILABLE 0	&gt;</body><body package="MQ-XIF">MQSS_LAST_SEGMENT	&lt;C: #define MQSS_LAST_SEGMENT 76	&gt;</body><body package="MQ-XIF">MQSS_NOT_A_SEGMENT	&lt;C: #define MQSS_NOT_A_SEGMENT 32	&gt;</body><body package="MQ-XIF">MQSS_SEGMENT	&lt;C: #define MQSS_SEGMENT 83	&gt;</body><body package="MQ-XIF">MQTC_OFF	&lt;C: #define MQTC_OFF 0	&gt;</body><body package="MQ-XIF">MQTC_ON	&lt;C: #define MQTC_ON 1	&gt;</body><body package="MQ-XIF">MQTMC2_DEFAULT	&lt;C: #define MQTMC2_DEFAULT {MQTMC_STRUC_ID_ARRAY},{MQTMC_VERSION_2_ARRAY},{""},{""},{""},{""},{""},{""},{""},{""}	&gt;</body><body package="MQ-XIF">MQTMC_CURRENT_VERSION	&lt;C: #define MQTMC_CURRENT_VERSION "   2"	&gt;</body><body package="MQ-XIF">MQTMC_CURRENT_VERSION_ARRAY	&lt;C: #define MQTMC_CURRENT_VERSION_ARRAY 32,32,32,50	&gt;</body><body package="MQ-XIF">MQTMC_STRUC_ID	&lt;C: #define MQTMC_STRUC_ID "TMC "	&gt;</body><body package="MQ-XIF">MQTMC_STRUC_ID_ARRAY	&lt;C: #define MQTMC_STRUC_ID_ARRAY 84,77,67,32	&gt;</body><body package="MQ-XIF">MQTMC_VERSION_1	&lt;C: #define MQTMC_VERSION_1 "   1"	&gt;</body><body package="MQ-XIF">MQTMC_VERSION_1_ARRAY	&lt;C: #define MQTMC_VERSION_1_ARRAY 32,32,32,49	&gt;</body><body package="MQ-XIF">MQTMC_VERSION_2	&lt;C: #define MQTMC_VERSION_2 "   2"	&gt;</body><body package="MQ-XIF">MQTMC_VERSION_2_ARRAY	&lt;C: #define MQTMC_VERSION_2_ARRAY 32,32,32,50	&gt;</body><body package="MQ-XIF">MQTM_CURRENT_VERSION	&lt;C: #define MQTM_CURRENT_VERSION 1	&gt;</body><body package="MQ-XIF">MQTM_DEFAULT	&lt;C: #define MQTM_DEFAULT {MQTM_STRUC_ID_ARRAY},MQTM_VERSION_1,{""},{""},{""},0,{""},{""},{""}	&gt;</body><body package="MQ-XIF">MQTM_STRUC_ID	&lt;C: #define MQTM_STRUC_ID "TM  "	&gt;</body><body package="MQ-XIF">MQTM_STRUC_ID_ARRAY	&lt;C: #define MQTM_STRUC_ID_ARRAY 84,77,32,32	&gt;</body><body package="MQ-XIF">MQTM_VERSION_1	&lt;C: #define MQTM_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQTT_DEPTH	&lt;C: #define MQTT_DEPTH 3	&gt;</body><body package="MQ-XIF">MQTT_EVERY	&lt;C: #define MQTT_EVERY 2	&gt;</body><body package="MQ-XIF">MQTT_FIRST	&lt;C: #define MQTT_FIRST 1	&gt;</body><body package="MQ-XIF">MQTT_NONE	&lt;C: #define MQTT_NONE 0	&gt;</body><body package="MQ-XIF">MQUS_NORMAL	&lt;C: #define MQUS_NORMAL 0	&gt;</body><body package="MQ-XIF">MQUS_TRANSMISSION	&lt;C: #define MQUS_TRANSMISSION 1	&gt;</body><body package="MQ-XIF">MQWIH_CURRENT_LENGTH	&lt;C: #define MQWIH_CURRENT_LENGTH 120	&gt;</body><body package="MQ-XIF">MQWIH_CURRENT_VERSION	&lt;C: #define MQWIH_CURRENT_VERSION 1	&gt;</body><body package="MQ-XIF">MQWIH_DEFAULT	&lt;C: #define MQWIH_DEFAULT {MQWIH_STRUC_ID_ARRAY},MQWIH_VERSION_1,MQWIH_LENGTH_1,0,MQCCSI_UNDEFINED,{MQFMT_NONE_ARRAY},MQWIH_NONE,{32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32},{32,32,32,32,32,32,32,32},{MQMTOK_NONE_ARRAY},{32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32}	&gt;</body><body package="MQ-XIF">MQWIH_LENGTH_1	&lt;C: #define MQWIH_LENGTH_1 120	&gt;</body><body package="MQ-XIF">MQWIH_NONE	&lt;C: #define MQWIH_NONE 0x00000000	&gt;</body><body package="MQ-XIF">MQWIH_STRUC_ID	&lt;C: #define MQWIH_STRUC_ID "WIH "	&gt;</body><body package="MQ-XIF">MQWIH_STRUC_ID_ARRAY	&lt;C: #define MQWIH_STRUC_ID_ARRAY 87,73,72,32	&gt;</body><body package="MQ-XIF">MQWIH_VERSION_1	&lt;C: #define MQWIH_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQWI_UNLIMITED	&lt;C: #define MQWI_UNLIMITED (-1)	&gt;</body><body package="MQ-XIF">MQXQH_CURRENT_VERSION	&lt;C: #define MQXQH_CURRENT_VERSION 1	&gt;</body><body package="MQ-XIF">MQXQH_DEFAULT	&lt;C: #define MQXQH_DEFAULT {MQXQH_STRUC_ID_ARRAY},MQXQH_VERSION_1,{""},{""},{MQMD1_DEFAULT}	&gt;</body><body package="MQ-XIF">MQXQH_STRUC_ID	&lt;C: #define MQXQH_STRUC_ID "XQH "	&gt;</body><body package="MQ-XIF">MQXQH_STRUC_ID_ARRAY	&lt;C: #define MQXQH_STRUC_ID_ARRAY 88,81,72,32	&gt;</body><body package="MQ-XIF">MQXQH_VERSION_1	&lt;C: #define MQXQH_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQ_ABEND_CODE_LENGTH	&lt;C: #define MQ_ABEND_CODE_LENGTH 4	&gt;</body><body package="MQ-XIF">MQ_ACCOUNTING_TOKEN_LENGTH	&lt;C: #define MQ_ACCOUNTING_TOKEN_LENGTH 32	&gt;</body><body package="MQ-XIF">MQ_APPL_IDENTITY_DATA_LENGTH	&lt;C: #define MQ_APPL_IDENTITY_DATA_LENGTH 32	&gt;</body><body package="MQ-XIF">MQ_APPL_NAME_LENGTH	&lt;C: #define MQ_APPL_NAME_LENGTH 28	&gt;</body><body package="MQ-XIF">MQ_APPL_ORIGIN_DATA_LENGTH	&lt;C: #define MQ_APPL_ORIGIN_DATA_LENGTH 4	&gt;</body><body package="MQ-XIF">MQ_APPL_TAG_LENGTH	&lt;C: #define MQ_APPL_TAG_LENGTH 28	&gt;</body><body package="MQ-XIF">MQ_ATTENTION_ID_LENGTH	&lt;C: #define MQ_ATTENTION_ID_LENGTH 4	&gt;</body><body package="MQ-XIF">MQ_AUTHENTICATOR_LENGTH	&lt;C: #define MQ_AUTHENTICATOR_LENGTH 8	&gt;</body><body package="MQ-XIF">MQ_AUTH_INFO_CONN_NAME_LENGTH	&lt;C: #define MQ_AUTH_INFO_CONN_NAME_LENGTH 264	&gt;</body><body package="MQ-XIF">MQ_AUTH_INFO_DESC_LENGTH	&lt;C: #define MQ_AUTH_INFO_DESC_LENGTH 64	&gt;</body><body package="MQ-XIF">MQ_AUTH_INFO_NAME_LENGTH	&lt;C: #define MQ_AUTH_INFO_NAME_LENGTH 48	&gt;</body><body package="MQ-XIF">MQ_BRIDGE_NAME_LENGTH	&lt;C: #define MQ_BRIDGE_NAME_LENGTH 24	&gt;</body><body package="MQ-XIF">MQ_CANCEL_CODE_LENGTH	&lt;C: #define MQ_CANCEL_CODE_LENGTH 4	&gt;</body><body package="MQ-XIF">MQ_CF_STRUC_DESC_LENGTH	&lt;C: #define MQ_CF_STRUC_DESC_LENGTH 64	&gt;</body><body package="MQ-XIF">MQ_CF_STRUC_NAME_LENGTH	&lt;C: #define MQ_CF_STRUC_NAME_LENGTH 12	&gt;</body><body package="MQ-XIF">MQ_CHANNEL_DATE_LENGTH	&lt;C: #define MQ_CHANNEL_DATE_LENGTH 12	&gt;</body><body package="MQ-XIF">MQ_CHANNEL_DESC_LENGTH	&lt;C: #define MQ_CHANNEL_DESC_LENGTH 64	&gt;</body><body package="MQ-XIF">MQ_CHANNEL_NAME_LENGTH	&lt;C: #define MQ_CHANNEL_NAME_LENGTH 20	&gt;</body><body package="MQ-XIF">MQ_CHANNEL_TIME_LENGTH	&lt;C: #define MQ_CHANNEL_TIME_LENGTH 8	&gt;</body><body package="MQ-XIF">MQ_CLUSTER_NAME_LENGTH	&lt;C: #define MQ_CLUSTER_NAME_LENGTH 48	&gt;</body><body package="MQ-XIF">MQ_CONN_NAME_LENGTH	&lt;C: #define MQ_CONN_NAME_LENGTH 264	&gt;</body><body package="MQ-XIF">MQ_CONN_TAG_LENGTH	&lt;C: #define MQ_CONN_TAG_LENGTH 128	&gt;</body><body package="MQ-XIF">MQ_CORREL_ID_LENGTH	&lt;C: #define MQ_CORREL_ID_LENGTH 24	&gt;</body><body package="MQ-XIF">MQ_CREATION_DATE_LENGTH	&lt;C: #define MQ_CREATION_DATE_LENGTH 12	&gt;</body><body package="MQ-XIF">MQ_CREATION_TIME_LENGTH	&lt;C: #define MQ_CREATION_TIME_LENGTH 8	&gt;</body><body package="MQ-XIF">MQ_DATE_LENGTH	&lt;C: #define MQ_DATE_LENGTH 12	&gt;</body><body package="MQ-XIF">MQ_DISTINGUISHED_NAME_LENGTH	&lt;C: #define MQ_DISTINGUISHED_NAME_LENGTH 1024	&gt;</body><body package="MQ-XIF">MQ_EXIT_DATA_LENGTH	&lt;C: #define MQ_EXIT_DATA_LENGTH 32	&gt;</body><body package="MQ-XIF">MQ_EXIT_NAME_LENGTH	&lt;C: #define MQ_EXIT_NAME_LENGTH 128	&gt;</body><body package="MQ-XIF">MQ_EXIT_PD_AREA_LENGTH	&lt;C: #define MQ_EXIT_PD_AREA_LENGTH 48	&gt;</body><body package="MQ-XIF">MQ_EXIT_USER_AREA_LENGTH	&lt;C: #define MQ_EXIT_USER_AREA_LENGTH 16	&gt;</body><body package="MQ-XIF">MQ_FACILITY_LENGTH	&lt;C: #define MQ_FACILITY_LENGTH 8	&gt;</body><body package="MQ-XIF">MQ_FACILITY_LIKE_LENGTH	&lt;C: #define MQ_FACILITY_LIKE_LENGTH 4	&gt;</body><body package="MQ-XIF">MQ_FORMAT_LENGTH	&lt;C: #define MQ_FORMAT_LENGTH 8	&gt;</body><body package="MQ-XIF">MQ_FUNCTION_LENGTH	&lt;C: #define MQ_FUNCTION_LENGTH 4	&gt;</body><body package="MQ-XIF">MQ_GROUP_ID_LENGTH	&lt;C: #define MQ_GROUP_ID_LENGTH 24	&gt;</body><body package="MQ-XIF">MQ_LDAP_PASSWORD_LENGTH	&lt;C: #define MQ_LDAP_PASSWORD_LENGTH 32	&gt;</body><body package="MQ-XIF">MQ_LOCAL_ADDRESS_LENGTH	&lt;C: #define MQ_LOCAL_ADDRESS_LENGTH 48	&gt;</body><body package="MQ-XIF">MQ_LTERM_OVERRIDE_LENGTH	&lt;C: #define MQ_LTERM_OVERRIDE_LENGTH 8	&gt;</body><body package="MQ-XIF">MQ_LUWID_LENGTH	&lt;C: #define MQ_LUWID_LENGTH 16	&gt;</body><body package="MQ-XIF">MQ_MAX_EXIT_NAME_LENGTH	&lt;C: #define MQ_MAX_EXIT_NAME_LENGTH 128	&gt;</body><body package="MQ-XIF">MQ_MAX_MCA_USER_ID_LENGTH	&lt;C: #define MQ_MAX_MCA_USER_ID_LENGTH 64	&gt;</body><body package="MQ-XIF">MQ_MAX_USER_ID_LENGTH	&lt;C: #define MQ_MAX_USER_ID_LENGTH 64	&gt;</body><body package="MQ-XIF">MQ_MCA_JOB_NAME_LENGTH	&lt;C: #define MQ_MCA_JOB_NAME_LENGTH 28	&gt;</body><body package="MQ-XIF">MQ_MCA_NAME_LENGTH	&lt;C: #define MQ_MCA_NAME_LENGTH 20	&gt;</body><body package="MQ-XIF">MQ_MCA_USER_ID_LENGTH	&lt;C: #define MQ_MCA_USER_ID_LENGTH 12	&gt;</body><body package="MQ-XIF">MQ_MFS_MAP_NAME_LENGTH	&lt;C: #define MQ_MFS_MAP_NAME_LENGTH 8	&gt;</body><body package="MQ-XIF">MQ_MODE_NAME_LENGTH	&lt;C: #define MQ_MODE_NAME_LENGTH 8	&gt;</body><body package="MQ-XIF">MQ_MSG_HEADER_LENGTH	&lt;C: #define MQ_MSG_HEADER_LENGTH 4000	&gt;</body><body package="MQ-XIF">MQ_MSG_ID_LENGTH	&lt;C: #define MQ_MSG_ID_LENGTH 24	&gt;</body><body package="MQ-XIF">MQ_MSG_TOKEN_LENGTH	&lt;C: #define MQ_MSG_TOKEN_LENGTH 16	&gt;</body><body package="MQ-XIF">MQ_NAMELIST_DESC_LENGTH	&lt;C: #define MQ_NAMELIST_DESC_LENGTH 64	&gt;</body><body package="MQ-XIF">MQ_NAMELIST_NAME_LENGTH	&lt;C: #define MQ_NAMELIST_NAME_LENGTH 48	&gt;</body><body package="MQ-XIF">MQ_OBJECT_INSTANCE_ID_LENGTH	&lt;C: #define MQ_OBJECT_INSTANCE_ID_LENGTH 24	&gt;</body><body package="MQ-XIF">MQ_OBJECT_NAME_LENGTH	&lt;C: #define MQ_OBJECT_NAME_LENGTH 48	&gt;</body><body package="MQ-XIF">MQ_PASSWORD_LENGTH	&lt;C: #define MQ_PASSWORD_LENGTH 12	&gt;</body><body package="MQ-XIF">MQ_PROCESS_APPL_ID_LENGTH	&lt;C: #define MQ_PROCESS_APPL_ID_LENGTH 256	&gt;</body><body package="MQ-XIF">MQ_PROCESS_DESC_LENGTH	&lt;C: #define MQ_PROCESS_DESC_LENGTH 64	&gt;</body><body package="MQ-XIF">MQ_PROCESS_ENV_DATA_LENGTH	&lt;C: #define MQ_PROCESS_ENV_DATA_LENGTH 128	&gt;</body><body package="MQ-XIF">MQ_PROCESS_NAME_LENGTH	&lt;C: #define MQ_PROCESS_NAME_LENGTH 48	&gt;</body><body package="MQ-XIF">MQ_PROCESS_USER_DATA_LENGTH	&lt;C: #define MQ_PROCESS_USER_DATA_LENGTH 128	&gt;</body><body package="MQ-XIF">MQ_PUT_APPL_NAME_LENGTH	&lt;C: #define MQ_PUT_APPL_NAME_LENGTH 28	&gt;</body><body package="MQ-XIF">MQ_PUT_DATE_LENGTH	&lt;C: #define MQ_PUT_DATE_LENGTH 8	&gt;</body><body package="MQ-XIF">MQ_PUT_TIME_LENGTH	&lt;C: #define MQ_PUT_TIME_LENGTH 8	&gt;</body><body package="MQ-XIF">MQ_QSG_NAME_LENGTH	&lt;C: #define MQ_QSG_NAME_LENGTH 4	&gt;</body><body package="MQ-XIF">MQ_Q_DESC_LENGTH	&lt;C: #define MQ_Q_DESC_LENGTH 64	&gt;</body><body package="MQ-XIF">MQ_Q_MGR_DESC_LENGTH	&lt;C: #define MQ_Q_MGR_DESC_LENGTH 64	&gt;</body><body package="MQ-XIF">MQ_Q_MGR_IDENTIFIER_LENGTH	&lt;C: #define MQ_Q_MGR_IDENTIFIER_LENGTH 48	&gt;</body><body package="MQ-XIF">MQ_Q_MGR_NAME_LENGTH	&lt;C: #define MQ_Q_MGR_NAME_LENGTH 48	&gt;</body><body package="MQ-XIF">MQ_Q_NAME_LENGTH	&lt;C: #define MQ_Q_NAME_LENGTH 48	&gt;</body><body package="MQ-XIF">MQ_REMOTE_SYS_ID_LENGTH	&lt;C: #define MQ_REMOTE_SYS_ID_LENGTH 4	&gt;</body><body package="MQ-XIF">MQ_SECURITY_ID_LENGTH	&lt;C: #define MQ_SECURITY_ID_LENGTH 40	&gt;</body><body package="MQ-XIF">MQ_SERVICE_NAME_LENGTH	&lt;C: #define MQ_SERVICE_NAME_LENGTH 32	&gt;</body><body package="MQ-XIF">MQ_SERVICE_STEP_LENGTH	&lt;C: #define MQ_SERVICE_STEP_LENGTH 8	&gt;</body><body package="MQ-XIF">MQ_SHORT_CONN_NAME_LENGTH	&lt;C: #define MQ_SHORT_CONN_NAME_LENGTH 20	&gt;</body><body package="MQ-XIF">MQ_SSL_CIPHER_SPEC_LENGTH	&lt;C: #define MQ_SSL_CIPHER_SPEC_LENGTH 32	&gt;</body><body package="MQ-XIF">MQ_SSL_CRYPTO_HARDWARE_LENGTH	&lt;C: #define MQ_SSL_CRYPTO_HARDWARE_LENGTH 256	&gt;</body><body package="MQ-XIF">MQ_SSL_HANDSHAKE_STAGE_LENGTH	&lt;C: #define MQ_SSL_HANDSHAKE_STAGE_LENGTH 32	&gt;</body><body package="MQ-XIF">MQ_SSL_KEY_REPOSITORY_LENGTH	&lt;C: #define MQ_SSL_KEY_REPOSITORY_LENGTH 256	&gt;</body><body package="MQ-XIF">MQ_SSL_PEER_NAME_LENGTH	&lt;C: #define MQ_SSL_PEER_NAME_LENGTH 1024	&gt;</body><body package="MQ-XIF">MQ_SSL_SHORT_PEER_NAME_LENGTH	&lt;C: #define MQ_SSL_SHORT_PEER_NAME_LENGTH 256	&gt;</body><body package="MQ-XIF">MQ_START_CODE_LENGTH	&lt;C: #define MQ_START_CODE_LENGTH 4	&gt;</body><body package="MQ-XIF">MQ_STORAGE_CLASS_DESC_LENGTH	&lt;C: #define MQ_STORAGE_CLASS_DESC_LENGTH 64	&gt;</body><body package="MQ-XIF">MQ_STORAGE_CLASS_LENGTH	&lt;C: #define MQ_STORAGE_CLASS_LENGTH 8	&gt;</body><body package="MQ-XIF">MQ_SUB_IDENTITY_LENGTH	&lt;C: #define MQ_SUB_IDENTITY_LENGTH 128	&gt;</body><body package="MQ-XIF">MQ_TIME_LENGTH	&lt;C: #define MQ_TIME_LENGTH 8	&gt;</body><body package="MQ-XIF">MQ_TOTAL_EXIT_DATA_LENGTH	&lt;C: #define MQ_TOTAL_EXIT_DATA_LENGTH 999	&gt;</body><body package="MQ-XIF">MQ_TOTAL_EXIT_NAME_LENGTH	&lt;C: #define MQ_TOTAL_EXIT_NAME_LENGTH 999	&gt;</body><body package="MQ-XIF">MQ_TP_NAME_LENGTH	&lt;C: #define MQ_TP_NAME_LENGTH 64	&gt;</body><body package="MQ-XIF">MQ_TRANSACTION_ID_LENGTH	&lt;C: #define MQ_TRANSACTION_ID_LENGTH 4	&gt;</body><body package="MQ-XIF">MQ_TRAN_INSTANCE_ID_LENGTH	&lt;C: #define MQ_TRAN_INSTANCE_ID_LENGTH 16	&gt;</body><body package="MQ-XIF">MQ_TRIGGER_DATA_LENGTH	&lt;C: #define MQ_TRIGGER_DATA_LENGTH 64	&gt;</body><body package="MQ-XIF">MQ_USER_ID_LENGTH	&lt;C: #define MQ_USER_ID_LENGTH 12	&gt;</body><body package="MQ-XIF">MQ_XCF_GROUP_NAME_LENGTH	&lt;C: #define MQ_XCF_GROUP_NAME_LENGTH 8	&gt;</body><body package="MQ-XIF">MQ_XCF_MEMBER_NAME_LENGTH	&lt;C: #define MQ_XCF_MEMBER_NAME_LENGTH 16	&gt;</body><body package="MQ-XIF">__DATE__	&lt;C: #define __DATE__ "November 27, 2003"	&gt;</body><body package="MQ-XIF">__FILE__	&lt;C: #define __FILE__ 	&gt;</body><body package="MQ-XIF">__LINE__	&lt;C: #define __LINE__ 0	&gt;</body><body package="MQ-XIF">__STDC__	&lt;C: #define __STDC__ 1	&gt;</body><body package="MQ-XIF">__TIME__	&lt;C: #define __TIME__ "3:50:54 pm"	&gt;</body></methods><methods><class-id>MQ.MQInterface</class-id> <category>types</category><body package="MQ-XIF">MQAIR	&lt;C: typedef struct tagMQAIR MQAIR&gt;</body><body package="MQ-XIF">MQBO	&lt;C: typedef struct tagMQBO MQBO&gt;</body><body package="MQ-XIF">MQBYTE	&lt;C: typedef unsigned char MQBYTE&gt;</body><body package="MQ-XIF">MQBYTE128	&lt;C: typedef MQBYTE MQBYTE128[128]&gt;</body><body package="MQ-XIF">MQBYTE16	&lt;C: typedef MQBYTE MQBYTE16[16]&gt;</body><body package="MQ-XIF">MQBYTE24	&lt;C: typedef MQBYTE MQBYTE24[24]&gt;</body><body package="MQ-XIF">MQBYTE32	&lt;C: typedef MQBYTE MQBYTE32[32]&gt;</body><body package="MQ-XIF">MQBYTE40	&lt;C: typedef MQBYTE MQBYTE40[40]&gt;</body><body package="MQ-XIF">MQBYTE48	&lt;C: typedef MQBYTE MQBYTE48[48]&gt;</body><body package="MQ-XIF">MQBYTE8	&lt;C: typedef MQBYTE MQBYTE8[8]&gt;</body><body package="MQ-XIF">MQCHAR	&lt;C: typedef char MQCHAR&gt;</body><body package="MQ-XIF">MQCHAR12	&lt;C: typedef MQCHAR MQCHAR12[12]&gt;</body><body package="MQ-XIF">MQCHAR128	&lt;C: typedef MQCHAR MQCHAR128[128]&gt;</body><body package="MQ-XIF">MQCHAR20	&lt;C: typedef MQCHAR MQCHAR20[20]&gt;</body><body package="MQ-XIF">MQCHAR256	&lt;C: typedef MQCHAR MQCHAR256[256]&gt;</body><body package="MQ-XIF">MQCHAR264	&lt;C: typedef MQCHAR MQCHAR264[264]&gt;</body><body package="MQ-XIF">MQCHAR28	&lt;C: typedef MQCHAR MQCHAR28[28]&gt;</body><body package="MQ-XIF">MQCHAR32	&lt;C: typedef MQCHAR MQCHAR32[32]&gt;</body><body package="MQ-XIF">MQCHAR4	&lt;C: typedef MQCHAR MQCHAR4[4]&gt;</body><body package="MQ-XIF">MQCHAR48	&lt;C: typedef MQCHAR MQCHAR48[48]&gt;</body><body package="MQ-XIF">MQCHAR64	&lt;C: typedef MQCHAR MQCHAR64[64]&gt;</body><body package="MQ-XIF">MQCHAR8	&lt;C: typedef MQCHAR MQCHAR8[8]&gt;</body><body package="MQ-XIF">MQCIH	&lt;C: typedef struct tagMQCIH MQCIH&gt;</body><body package="MQ-XIF">MQCNO	&lt;C: typedef struct tagMQCNO MQCNO&gt;</body><body package="MQ-XIF">MQDH	&lt;C: typedef struct tagMQDH MQDH&gt;</body><body package="MQ-XIF">MQDLH	&lt;C: typedef struct tagMQDLH MQDLH&gt;</body><body package="MQ-XIF">MQGMO	&lt;C: typedef struct tagMQGMO MQGMO&gt;</body><body package="MQ-XIF">MQHCONFIG	&lt;C: typedef void * MQHCONFIG&gt;</body><body package="MQ-XIF">MQHCONN	&lt;C: typedef MQLONG MQHCONN&gt;</body><body package="MQ-XIF">MQHOBJ	&lt;C: typedef MQLONG MQHOBJ&gt;</body><body package="MQ-XIF">MQIIH	&lt;C: typedef struct tagMQIIH MQIIH&gt;</body><body package="MQ-XIF">MQLONG	&lt;C: typedef long MQLONG&gt;</body><body package="MQ-XIF">MQMD	&lt;C: typedef struct tagMQMD MQMD&gt;</body><body package="MQ-XIF">MQMD1	&lt;C: typedef struct tagMQMD1 MQMD1&gt;</body><body package="MQ-XIF">MQMDE	&lt;C: typedef struct tagMQMDE MQMDE&gt;</body><body package="MQ-XIF">MQOD	&lt;C: typedef struct tagMQOD MQOD&gt;</body><body package="MQ-XIF">MQOR	&lt;C: typedef struct tagMQOR MQOR&gt;</body><body package="MQ-XIF">MQPID	&lt;C: typedef MQLONG MQPID&gt;</body><body package="MQ-XIF">MQPMO	&lt;C: typedef struct tagMQPMO MQPMO&gt;</body><body package="MQ-XIF">MQPTR	&lt;C: typedef void * MQPTR&gt;</body><body package="MQ-XIF">MQRFH	&lt;C: typedef struct tagMQRFH MQRFH&gt;</body><body package="MQ-XIF">MQRFH2	&lt;C: typedef struct tagMQRFH2 MQRFH2&gt;</body><body package="MQ-XIF">MQRMH	&lt;C: typedef struct tagMQRMH MQRMH&gt;</body><body package="MQ-XIF">MQRR	&lt;C: typedef struct tagMQRR MQRR&gt;</body><body package="MQ-XIF">MQSCO	&lt;C: typedef struct tagMQSCO MQSCO&gt;</body><body package="MQ-XIF">MQTID	&lt;C: typedef MQLONG MQTID&gt;</body><body package="MQ-XIF">MQTM	&lt;C: typedef struct tagMQTM MQTM&gt;</body><body package="MQ-XIF">MQTMC2	&lt;C: typedef struct tagMQTMC2 MQTMC2&gt;</body><body package="MQ-XIF">MQULONG	&lt;C: typedef unsigned long MQULONG&gt;</body><body package="MQ-XIF">MQWIH	&lt;C: typedef struct tagMQWIH MQWIH&gt;</body><body package="MQ-XIF">MQXQH	&lt;C: typedef struct tagMQXQH MQXQH&gt;</body><body package="MQ-XIF">PMQAIR	&lt;C: typedef MQAIR * PMQAIR&gt;</body><body package="MQ-XIF">PMQBO	&lt;C: typedef MQBO * PMQBO&gt;</body><body package="MQ-XIF">PMQBYTE	&lt;C: typedef MQBYTE * PMQBYTE&gt;</body><body package="MQ-XIF">PMQBYTE128	&lt;C: typedef MQBYTE128 * PMQBYTE128&gt;</body><body package="MQ-XIF">PMQBYTE16	&lt;C: typedef MQBYTE16 * PMQBYTE16&gt;</body><body package="MQ-XIF">PMQBYTE24	&lt;C: typedef MQBYTE24 * PMQBYTE24&gt;</body><body package="MQ-XIF">PMQBYTE32	&lt;C: typedef MQBYTE32 * PMQBYTE32&gt;</body><body package="MQ-XIF">PMQBYTE40	&lt;C: typedef MQBYTE40 * PMQBYTE40&gt;</body><body package="MQ-XIF">PMQBYTE48	&lt;C: typedef MQBYTE48 * PMQBYTE48&gt;</body><body package="MQ-XIF">PMQBYTE8	&lt;C: typedef MQBYTE8 * PMQBYTE8&gt;</body><body package="MQ-XIF">PMQCHAR	&lt;C: typedef MQCHAR * PMQCHAR&gt;</body><body package="MQ-XIF">PMQCHAR12	&lt;C: typedef MQCHAR12 * PMQCHAR12&gt;</body><body package="MQ-XIF">PMQCHAR128	&lt;C: typedef MQCHAR128 * PMQCHAR128&gt;</body><body package="MQ-XIF">PMQCHAR20	&lt;C: typedef MQCHAR20 * PMQCHAR20&gt;</body><body package="MQ-XIF">PMQCHAR256	&lt;C: typedef MQCHAR256 * PMQCHAR256&gt;</body><body package="MQ-XIF">PMQCHAR264	&lt;C: typedef MQCHAR264 * PMQCHAR264&gt;</body><body package="MQ-XIF">PMQCHAR28	&lt;C: typedef MQCHAR28 * PMQCHAR28&gt;</body><body package="MQ-XIF">PMQCHAR32	&lt;C: typedef MQCHAR32 * PMQCHAR32&gt;</body><body package="MQ-XIF">PMQCHAR4	&lt;C: typedef MQCHAR4 * PMQCHAR4&gt;</body><body package="MQ-XIF">PMQCHAR48	&lt;C: typedef MQCHAR48 * PMQCHAR48&gt;</body><body package="MQ-XIF">PMQCHAR64	&lt;C: typedef MQCHAR64 * PMQCHAR64&gt;</body><body package="MQ-XIF">PMQCHAR8	&lt;C: typedef MQCHAR8 * PMQCHAR8&gt;</body><body package="MQ-XIF">PMQCIH	&lt;C: typedef MQCIH * PMQCIH&gt;</body><body package="MQ-XIF">PMQCNO	&lt;C: typedef MQCNO * PMQCNO&gt;</body><body package="MQ-XIF">PMQDH	&lt;C: typedef MQDH * PMQDH&gt;</body><body package="MQ-XIF">PMQDLH	&lt;C: typedef MQDLH * PMQDLH&gt;</body><body package="MQ-XIF">PMQFUNC	&lt;C: typedef void * PMQFUNC&gt;</body><body package="MQ-XIF">PMQGMO	&lt;C: typedef MQGMO * PMQGMO&gt;</body><body package="MQ-XIF">PMQHCONFIG	&lt;C: typedef MQHCONFIG * PMQHCONFIG&gt;</body><body package="MQ-XIF">PMQHCONN	&lt;C: typedef MQHCONN * PMQHCONN&gt;</body><body package="MQ-XIF">PMQHOBJ	&lt;C: typedef MQHOBJ * PMQHOBJ&gt;</body><body package="MQ-XIF">PMQIIH	&lt;C: typedef MQIIH * PMQIIH&gt;</body><body package="MQ-XIF">PMQLONG	&lt;C: typedef MQLONG * PMQLONG&gt;</body><body package="MQ-XIF">PMQMD	&lt;C: typedef MQMD * PMQMD&gt;</body><body package="MQ-XIF">PMQMD1	&lt;C: typedef MQMD1 * PMQMD1&gt;</body><body package="MQ-XIF">PMQMDE	&lt;C: typedef MQMDE * PMQMDE&gt;</body><body package="MQ-XIF">PMQOD	&lt;C: typedef MQOD * PMQOD&gt;</body><body package="MQ-XIF">PMQOR	&lt;C: typedef MQOR * PMQOR&gt;</body><body package="MQ-XIF">PMQPID	&lt;C: typedef MQPID * PMQPID&gt;</body><body package="MQ-XIF">PMQPMO	&lt;C: typedef MQPMO * PMQPMO&gt;</body><body package="MQ-XIF">PMQPTR	&lt;C: typedef MQPTR * PMQPTR&gt;</body><body package="MQ-XIF">PMQRFH	&lt;C: typedef MQRFH * PMQRFH&gt;</body><body package="MQ-XIF">PMQRFH2	&lt;C: typedef MQRFH2 * PMQRFH2&gt;</body><body package="MQ-XIF">PMQRMH	&lt;C: typedef MQRMH * PMQRMH&gt;</body><body package="MQ-XIF">PMQRR	&lt;C: typedef MQRR * PMQRR&gt;</body><body package="MQ-XIF">PMQSCO	&lt;C: typedef MQSCO * PMQSCO&gt;</body><body package="MQ-XIF">PMQTID	&lt;C: typedef MQTID * PMQTID&gt;</body><body package="MQ-XIF">PMQTM	&lt;C: typedef MQTM * PMQTM&gt;</body><body package="MQ-XIF">PMQTMC2	&lt;C: typedef MQTMC2 * PMQTMC2&gt;</body><body package="MQ-XIF">PMQULONG	&lt;C: typedef MQULONG * PMQULONG&gt;</body><body package="MQ-XIF">PMQVOID	&lt;C: typedef void * PMQVOID&gt;</body><body package="MQ-XIF">PMQWIH	&lt;C: typedef MQWIH * PMQWIH&gt;</body><body package="MQ-XIF">PMQXQH	&lt;C: typedef MQXQH * PMQXQH&gt;</body><body package="MQ-XIF">PPMQBO	&lt;C: typedef PMQBO * PPMQBO&gt;</body><body package="MQ-XIF">PPMQBYTE	&lt;C: typedef PMQBYTE * PPMQBYTE&gt;</body><body package="MQ-XIF">PPMQCHAR	&lt;C: typedef PMQCHAR * PPMQCHAR&gt;</body><body package="MQ-XIF">PPMQCNO	&lt;C: typedef PMQCNO * PPMQCNO&gt;</body><body package="MQ-XIF">PPMQGMO	&lt;C: typedef PMQGMO * PPMQGMO&gt;</body><body package="MQ-XIF">PPMQHCONN	&lt;C: typedef PMQHCONN * PPMQHCONN&gt;</body><body package="MQ-XIF">PPMQHOBJ	&lt;C: typedef PMQHOBJ * PPMQHOBJ&gt;</body><body package="MQ-XIF">PPMQLONG	&lt;C: typedef PMQLONG * PPMQLONG&gt;</body><body package="MQ-XIF">PPMQMD	&lt;C: typedef PMQMD * PPMQMD&gt;</body><body package="MQ-XIF">PPMQOD	&lt;C: typedef PMQOD * PPMQOD&gt;</body><body package="MQ-XIF">PPMQPMO	&lt;C: typedef PMQPMO * PPMQPMO&gt;</body><body package="MQ-XIF">PPMQULONG	&lt;C: typedef PMQULONG * PPMQULONG&gt;</body><body package="MQ-XIF">PPMQVOID	&lt;C: typedef PMQVOID * PPMQVOID&gt;</body></methods><methods><class-id>MQ.MQInterface</class-id> <category>structs</category><body package="MQ-XIF">tagMQAIR	&lt;C: struct tagMQAIR {			MQCHAR4 StrucId;			MQLONG Version, AuthInfoType;			MQCHAR264 AuthInfoConnName;			PMQCHAR LDAPUserNamePtr;			MQLONG LDAPUserNameOffset, LDAPUserNameLength;			MQCHAR32 LDAPPassword;		}&gt;</body><body package="MQ-XIF">tagMQBO	&lt;C: struct tagMQBO {			MQCHAR4 StrucId;			MQLONG Version, Options;		}&gt;</body><body package="MQ-XIF">tagMQCIH	&lt;C: struct tagMQCIH {			MQCHAR4 StrucId;			MQLONG Version, StrucLength, Encoding, CodedCharSetId;			MQCHAR8 Format;			MQLONG Flags, ReturnCode, CompCode, Reason, UOWControl, GetWaitInterval, LinkType, OutputDataLength, FacilityKeepTime, ADSDescriptor, ConversationalTask, TaskEndStatus;			MQBYTE8 Facility;			MQCHAR4 Function, AbendCode;			MQCHAR8 Authenticator, Reserved1, ReplyToFormat;			MQCHAR4 RemoteSysId, RemoteTransId, TransactionId, FacilityLike, AttentionId, StartCode, CancelCode, NextTransactionId;			MQCHAR8 Reserved2, Reserved3;			MQLONG CursorPosition, ErrorOffset, InputItem, Reserved4;		}&gt;</body><body package="MQ-XIF">tagMQCNO	&lt;C: struct tagMQCNO {			MQCHAR4 StrucId;			MQLONG Version, Options, ClientConnOffset;			MQPTR ClientConnPtr;			MQBYTE128 ConnTag;			PMQSCO SSLConfigPtr;			MQLONG SSLConfigOffset;		}&gt;</body><body package="MQ-XIF">tagMQDH	&lt;C: struct tagMQDH {			MQCHAR4 StrucId;			MQLONG Version, StrucLength, Encoding, CodedCharSetId;			MQCHAR8 Format;			MQLONG Flags, PutMsgRecFields, RecsPresent, ObjectRecOffset, PutMsgRecOffset;		}&gt;</body><body package="MQ-XIF">tagMQDLH	&lt;C: struct tagMQDLH {			MQCHAR4 StrucId;			MQLONG Version, Reason;			MQCHAR48 DestQName, DestQMgrName;			MQLONG Encoding, CodedCharSetId;			MQCHAR8 Format;			MQLONG PutApplType;			MQCHAR28 PutApplName;			MQCHAR8 PutDate, PutTime;		}&gt;</body><body package="MQ-XIF">tagMQGMO	&lt;C: struct tagMQGMO {			MQCHAR4 StrucId;			MQLONG Version, Options, WaitInterval, Signal1, Signal2;			MQCHAR48 ResolvedQName;			MQLONG MatchOptions;			MQCHAR GroupStatus, SegmentStatus, Segmentation, Reserved1;			MQBYTE16 MsgToken;			MQLONG ReturnedLength;		}&gt;</body><body package="MQ-XIF">tagMQIIH	&lt;C: struct tagMQIIH {			MQCHAR4 StrucId;			MQLONG Version, StrucLength, Encoding, CodedCharSetId;			MQCHAR8 Format;			MQLONG Flags;			MQCHAR8 LTermOverride, MFSMapName, ReplyToFormat, Authenticator;			MQBYTE16 TranInstanceId;			MQCHAR TranState, CommitMode, SecurityScope, Reserved;		}&gt;</body><body package="MQ-XIF">tagMQMD	&lt;C: struct tagMQMD {			MQCHAR4 StrucId;			MQLONG Version, Report, MsgType, Expiry, Feedback, Encoding, CodedCharSetId;			MQCHAR8 Format;			MQLONG Priority, Persistence;			MQBYTE24 MsgId, CorrelId;			MQLONG BackoutCount;			MQCHAR48 ReplyToQ, ReplyToQMgr;			MQCHAR12 UserIdentifier;			MQBYTE32 AccountingToken;			MQCHAR32 ApplIdentityData;			MQLONG PutApplType;			MQCHAR28 PutApplName;			MQCHAR8 PutDate, PutTime;			MQCHAR4 ApplOriginData;			MQBYTE24 GroupId;			MQLONG MsgSeqNumber, Offset, MsgFlags, OriginalLength;		}&gt;</body><body package="MQ-XIF">tagMQMD1	&lt;C: struct tagMQMD1 {			MQCHAR4 StrucId;			MQLONG Version, Report, MsgType, Expiry, Feedback, Encoding, CodedCharSetId;			MQCHAR8 Format;			MQLONG Priority, Persistence;			MQBYTE24 MsgId, CorrelId;			MQLONG BackoutCount;			MQCHAR48 ReplyToQ, ReplyToQMgr;			MQCHAR12 UserIdentifier;			MQBYTE32 AccountingToken;			MQCHAR32 ApplIdentityData;			MQLONG PutApplType;			MQCHAR28 PutApplName;			MQCHAR8 PutDate, PutTime;			MQCHAR4 ApplOriginData;		}&gt;</body><body package="MQ-XIF">tagMQMDE	&lt;C: struct tagMQMDE {			MQCHAR4 StrucId;			MQLONG Version, StrucLength, Encoding, CodedCharSetId;			MQCHAR8 Format;			MQLONG Flags;			MQBYTE24 GroupId;			MQLONG MsgSeqNumber, Offset, MsgFlags, OriginalLength;		}&gt;</body><body package="MQ-XIF">tagMQOD	&lt;C: struct tagMQOD {			MQCHAR4 StrucId;			MQLONG Version, ObjectType;			MQCHAR48 ObjectName, ObjectQMgrName, DynamicQName;			MQCHAR12 AlternateUserId;			MQLONG RecsPresent, KnownDestCount, UnknownDestCount, InvalidDestCount, ObjectRecOffset, ResponseRecOffset;			MQPTR ObjectRecPtr, ResponseRecPtr;			MQBYTE40 AlternateSecurityId;			MQCHAR48 ResolvedQName, ResolvedQMgrName;		}&gt;</body><body package="MQ-XIF">tagMQOR	&lt;C: struct tagMQOR {			MQCHAR48 ObjectName, ObjectQMgrName;		}&gt;</body><body package="MQ-XIF">tagMQPMO	&lt;C: struct tagMQPMO {			MQCHAR4 StrucId;			MQLONG Version, Options, Timeout;			MQHOBJ Context;			MQLONG KnownDestCount, UnknownDestCount, InvalidDestCount;			MQCHAR48 ResolvedQName, ResolvedQMgrName;			MQLONG RecsPresent, PutMsgRecFields, PutMsgRecOffset, ResponseRecOffset;			MQPTR PutMsgRecPtr, ResponseRecPtr;		}&gt;</body><body package="MQ-XIF">tagMQRFH	&lt;C: struct tagMQRFH {			MQCHAR4 StrucId;			MQLONG Version, StrucLength, Encoding, CodedCharSetId;			MQCHAR8 Format;			MQLONG Flags;		}&gt;</body><body package="MQ-XIF">tagMQRFH2	&lt;C: struct tagMQRFH2 {			MQCHAR4 StrucId;			MQLONG Version, StrucLength, Encoding, CodedCharSetId;			MQCHAR8 Format;			MQLONG Flags, NameValueCCSID;		}&gt;</body><body package="MQ-XIF">tagMQRMH	&lt;C: struct tagMQRMH {			MQCHAR4 StrucId;			MQLONG Version, StrucLength, Encoding, CodedCharSetId;			MQCHAR8 Format;			MQLONG Flags;			MQCHAR8 ObjectType;			MQBYTE24 ObjectInstanceId;			MQLONG SrcEnvLength, SrcEnvOffset, SrcNameLength, SrcNameOffset, DestEnvLength, DestEnvOffset, DestNameLength, DestNameOffset, DataLogicalLength, DataLogicalOffset, DataLogicalOffset2;		}&gt;</body><body package="MQ-XIF">tagMQRR	&lt;C: struct tagMQRR {			MQLONG CompCode, Reason;		}&gt;</body><body package="MQ-XIF">tagMQSCO	&lt;C: struct tagMQSCO {			MQCHAR4 StrucId;			MQLONG Version;			MQCHAR256 KeyRepository, CryptoHardware;			MQLONG AuthInfoRecCount, AuthInfoRecOffset;			PMQAIR AuthInfoRecPtr;		}&gt;</body><body package="MQ-XIF">tagMQTM	&lt;C: struct tagMQTM {			MQCHAR4 StrucId;			MQLONG Version;			MQCHAR48 QName, ProcessName;			MQCHAR64 TriggerData;			MQLONG ApplType;			MQCHAR256 ApplId;			MQCHAR128 EnvData, UserData;		}&gt;</body><body package="MQ-XIF">tagMQTMC2	&lt;C: struct tagMQTMC2 {			MQCHAR4 StrucId, Version;			MQCHAR48 QName, ProcessName;			MQCHAR64 TriggerData;			MQCHAR4 ApplType;			MQCHAR256 ApplId;			MQCHAR128 EnvData, UserData;			MQCHAR48 QMgrName;		}&gt;</body><body package="MQ-XIF">tagMQWIH	&lt;C: struct tagMQWIH {			MQCHAR4 StrucId;			MQLONG Version, StrucLength, Encoding, CodedCharSetId;			MQCHAR8 Format;			MQLONG Flags;			MQCHAR32 ServiceName;			MQCHAR8 ServiceStep;			MQBYTE16 MsgToken;			MQCHAR32 Reserved;		}&gt;</body><body package="MQ-XIF">tagMQXQH	&lt;C: struct tagMQXQH {			MQCHAR4 StrucId;			MQLONG Version;			MQCHAR48 RemoteQName, RemoteQMgrName;			MQMD1 MsgDesc;		}&gt;</body></methods><methods><class-id>MQ.MQInterface</class-id> <category>private-accessing</category><body package="MQ-XIF">copyToHeapSelector	^#copyToHeap</body><body package="MQ-XIF">gcCopyToHeapSelector	^#gcCopyToHeap</body><body package="MQ-XIF">gcMallocSelector	^#gcMalloc:</body><body package="MQ-XIF">mallocSelector	^#malloc:</body></methods><methods><class-id>MQ.MQTHAPIInterface</class-id> <category>defines</category><body package="MQ-XIF">MQACTT_CICS_LUOW_ID	&lt;C: #define MQACTT_CICS_LUOW_ID 1	&gt;</body><body package="MQ-XIF">MQACTT_DOS_DEFAULT	&lt;C: #define MQACTT_DOS_DEFAULT 5	&gt;</body><body package="MQ-XIF">MQACTT_NT_SECURITY_ID	&lt;C: #define MQACTT_NT_SECURITY_ID 11	&gt;</body><body package="MQ-XIF">MQACTT_OS2_DEFAULT	&lt;C: #define MQACTT_OS2_DEFAULT 4	&gt;</body><body package="MQ-XIF">MQACTT_OS400_ACCOUNT_TOKEN	&lt;C: #define MQACTT_OS400_ACCOUNT_TOKEN 8	&gt;</body><body package="MQ-XIF">MQACTT_UNIX_NUMERIC_ID	&lt;C: #define MQACTT_UNIX_NUMERIC_ID 6	&gt;</body><body package="MQ-XIF">MQACTT_UNKNOWN	&lt;C: #define MQACTT_UNKNOWN 0	&gt;</body><body package="MQ-XIF">MQACTT_USER	&lt;C: #define MQACTT_USER 25	&gt;</body><body package="MQ-XIF">MQACTT_WINDOWS_DEFAULT	&lt;C: #define MQACTT_WINDOWS_DEFAULT 9	&gt;</body><body package="MQ-XIF">MQACT_NONE	&lt;C: #define MQACT_NONE "                                "	&gt;</body><body package="MQ-XIF">MQACT_NONE_ARRAY	&lt;C: #define MQACT_NONE_ARRAY 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	&gt;</body><body package="MQ-XIF">MQAIR_CURRENT_VERSION	&lt;C: #define MQAIR_CURRENT_VERSION 1	&gt;</body><body package="MQ-XIF">MQAIR_DEFAULT	&lt;C: #define MQAIR_DEFAULT {MQAIR_STRUC_ID_ARRAY},MQAIR_VERSION_1,MQAIT_CRL_LDAP,{""},NULL,0,0,{""}	&gt;</body><body package="MQ-XIF">MQAIR_STRUC_ID	&lt;C: #define MQAIR_STRUC_ID "AIR "	&gt;</body><body package="MQ-XIF">MQAIR_STRUC_ID_ARRAY	&lt;C: #define MQAIR_STRUC_ID_ARRAY 65,73,82,32	&gt;</body><body package="MQ-XIF">MQAIR_VERSION_1	&lt;C: #define MQAIR_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQAIT_CRL_LDAP	&lt;C: #define MQAIT_CRL_LDAP 1	&gt;</body><body package="MQ-XIF">MQAT_AIX	&lt;C: #define MQAT_AIX 6	&gt;</body><body package="MQ-XIF">MQAT_BROKER	&lt;C: #define MQAT_BROKER 26	&gt;</body><body package="MQ-XIF">MQAT_CHANNEL_INITIATOR	&lt;C: #define MQAT_CHANNEL_INITIATOR 30	&gt;</body><body package="MQ-XIF">MQAT_CICS	&lt;C: #define MQAT_CICS 1	&gt;</body><body package="MQ-XIF">MQAT_CICS_BRIDGE	&lt;C: #define MQAT_CICS_BRIDGE 21	&gt;</body><body package="MQ-XIF">MQAT_CICS_VSE	&lt;C: #define MQAT_CICS_VSE 10	&gt;</body><body package="MQ-XIF">MQAT_DEFAULT	&lt;C: #define MQAT_DEFAULT 6	&gt;</body><body package="MQ-XIF">MQAT_DOS	&lt;C: #define MQAT_DOS 5	&gt;</body><body package="MQ-XIF">MQAT_DQM	&lt;C: #define MQAT_DQM 29	&gt;</body><body package="MQ-XIF">MQAT_GUARDIAN	&lt;C: #define MQAT_GUARDIAN 13	&gt;</body><body package="MQ-XIF">MQAT_IMS	&lt;C: #define MQAT_IMS 3	&gt;</body><body package="MQ-XIF">MQAT_IMS_BRIDGE	&lt;C: #define MQAT_IMS_BRIDGE 19	&gt;</body><body package="MQ-XIF">MQAT_JAVA	&lt;C: #define MQAT_JAVA 28	&gt;</body><body package="MQ-XIF">MQAT_MVS	&lt;C: #define MQAT_MVS 2	&gt;</body><body package="MQ-XIF">MQAT_NOTES_AGENT	&lt;C: #define MQAT_NOTES_AGENT 22	&gt;</body><body package="MQ-XIF">MQAT_NO_CONTEXT	&lt;C: #define MQAT_NO_CONTEXT 0	&gt;</body><body package="MQ-XIF">MQAT_NSK	&lt;C: #define MQAT_NSK 13	&gt;</body><body package="MQ-XIF">MQAT_OS2	&lt;C: #define MQAT_OS2 4	&gt;</body><body package="MQ-XIF">MQAT_OS390	&lt;C: #define MQAT_OS390 2	&gt;</body><body package="MQ-XIF">MQAT_OS400	&lt;C: #define MQAT_OS400 8	&gt;</body><body package="MQ-XIF">MQAT_QMGR	&lt;C: #define MQAT_QMGR 7	&gt;</body><body package="MQ-XIF">MQAT_UNIX	&lt;C: #define MQAT_UNIX 6	&gt;</body><body package="MQ-XIF">MQAT_UNKNOWN	&lt;C: #define MQAT_UNKNOWN (-1)	&gt;</body><body package="MQ-XIF">MQAT_USER	&lt;C: #define MQAT_USER 25	&gt;</body><body package="MQ-XIF">MQAT_USER_FIRST	&lt;C: #define MQAT_USER_FIRST 65536	&gt;</body><body package="MQ-XIF">MQAT_USER_LAST	&lt;C: #define MQAT_USER_LAST 999999999	&gt;</body><body package="MQ-XIF">MQAT_VMS	&lt;C: #define MQAT_VMS 12	&gt;</body><body package="MQ-XIF">MQAT_VOS	&lt;C: #define MQAT_VOS 14	&gt;</body><body package="MQ-XIF">MQAT_WINDOWS	&lt;C: #define MQAT_WINDOWS 9	&gt;</body><body package="MQ-XIF">MQAT_WINDOWS_NT	&lt;C: #define MQAT_WINDOWS_NT 11	&gt;</body><body package="MQ-XIF">MQAT_XCF	&lt;C: #define MQAT_XCF 20	&gt;</body><body package="MQ-XIF">MQAT_ZOS	&lt;C: #define MQAT_ZOS 2	&gt;</body><body package="MQ-XIF">MQBND_BIND_NOT_FIXED	&lt;C: #define MQBND_BIND_NOT_FIXED 1	&gt;</body><body package="MQ-XIF">MQBND_BIND_ON_OPEN	&lt;C: #define MQBND_BIND_ON_OPEN 0	&gt;</body><body package="MQ-XIF">MQBO_CURRENT_VERSION	&lt;C: #define MQBO_CURRENT_VERSION 1	&gt;</body><body package="MQ-XIF">MQBO_DEFAULT	&lt;C: #define MQBO_DEFAULT {MQBO_STRUC_ID_ARRAY},MQBO_VERSION_1,MQBO_NONE	&gt;</body><body package="MQ-XIF">MQBO_NONE	&lt;C: #define MQBO_NONE 0x00000000	&gt;</body><body package="MQ-XIF">MQBO_STRUC_ID	&lt;C: #define MQBO_STRUC_ID "BO  "	&gt;</body><body package="MQ-XIF">MQBO_STRUC_ID_ARRAY	&lt;C: #define MQBO_STRUC_ID_ARRAY 66,79,32,32	&gt;</body><body package="MQ-XIF">MQBO_VERSION_1	&lt;C: #define MQBO_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQCADSD_MSGFORMAT	&lt;C: #define MQCADSD_MSGFORMAT 0x00000100	&gt;</body><body package="MQ-XIF">MQCADSD_NONE	&lt;C: #define MQCADSD_NONE 0x00000000	&gt;</body><body package="MQ-XIF">MQCADSD_RECV	&lt;C: #define MQCADSD_RECV 0x00000010	&gt;</body><body package="MQ-XIF">MQCADSD_SEND	&lt;C: #define MQCADSD_SEND 0x00000001	&gt;</body><body package="MQ-XIF">MQCA_ALTERATION_DATE	&lt;C: #define MQCA_ALTERATION_DATE 2027	&gt;</body><body package="MQ-XIF">MQCA_ALTERATION_TIME	&lt;C: #define MQCA_ALTERATION_TIME 2028	&gt;</body><body package="MQ-XIF">MQCA_APPL_ID	&lt;C: #define MQCA_APPL_ID 2001	&gt;</body><body package="MQ-XIF">MQCA_AUTH_INFO_CONN_NAME	&lt;C: #define MQCA_AUTH_INFO_CONN_NAME 2053	&gt;</body><body package="MQ-XIF">MQCA_AUTH_INFO_DESC	&lt;C: #define MQCA_AUTH_INFO_DESC 2046	&gt;</body><body package="MQ-XIF">MQCA_AUTH_INFO_NAME	&lt;C: #define MQCA_AUTH_INFO_NAME 2045	&gt;</body><body package="MQ-XIF">MQCA_BACKOUT_REQ_Q_NAME	&lt;C: #define MQCA_BACKOUT_REQ_Q_NAME 2019	&gt;</body><body package="MQ-XIF">MQCA_BASE_Q_NAME	&lt;C: #define MQCA_BASE_Q_NAME 2002	&gt;</body><body package="MQ-XIF">MQCA_CF_STRUC_DESC	&lt;C: #define MQCA_CF_STRUC_DESC 2052	&gt;</body><body package="MQ-XIF">MQCA_CF_STRUC_NAME	&lt;C: #define MQCA_CF_STRUC_NAME 2039	&gt;</body><body package="MQ-XIF">MQCA_CHANNEL_AUTO_DEF_EXIT	&lt;C: #define MQCA_CHANNEL_AUTO_DEF_EXIT 2026	&gt;</body><body package="MQ-XIF">MQCA_CLUSTER_DATE	&lt;C: #define MQCA_CLUSTER_DATE 2037	&gt;</body><body package="MQ-XIF">MQCA_CLUSTER_NAME	&lt;C: #define MQCA_CLUSTER_NAME 2029	&gt;</body><body package="MQ-XIF">MQCA_CLUSTER_NAMELIST	&lt;C: #define MQCA_CLUSTER_NAMELIST 2030	&gt;</body><body package="MQ-XIF">MQCA_CLUSTER_Q_MGR_NAME	&lt;C: #define MQCA_CLUSTER_Q_MGR_NAME 2031	&gt;</body><body package="MQ-XIF">MQCA_CLUSTER_TIME	&lt;C: #define MQCA_CLUSTER_TIME 2038	&gt;</body><body package="MQ-XIF">MQCA_CLUSTER_WORKLOAD_DATA	&lt;C: #define MQCA_CLUSTER_WORKLOAD_DATA 2034	&gt;</body><body package="MQ-XIF">MQCA_CLUSTER_WORKLOAD_EXIT	&lt;C: #define MQCA_CLUSTER_WORKLOAD_EXIT 2033	&gt;</body><body package="MQ-XIF">MQCA_COMMAND_INPUT_Q_NAME	&lt;C: #define MQCA_COMMAND_INPUT_Q_NAME 2003	&gt;</body><body package="MQ-XIF">MQCA_CREATION_DATE	&lt;C: #define MQCA_CREATION_DATE 2004	&gt;</body><body package="MQ-XIF">MQCA_CREATION_TIME	&lt;C: #define MQCA_CREATION_TIME 2005	&gt;</body><body package="MQ-XIF">MQCA_DEAD_LETTER_Q_NAME	&lt;C: #define MQCA_DEAD_LETTER_Q_NAME 2006	&gt;</body><body package="MQ-XIF">MQCA_DEF_XMIT_Q_NAME	&lt;C: #define MQCA_DEF_XMIT_Q_NAME 2025	&gt;</body><body package="MQ-XIF">MQCA_ENV_DATA	&lt;C: #define MQCA_ENV_DATA 2007	&gt;</body><body package="MQ-XIF">MQCA_FIRST	&lt;C: #define MQCA_FIRST 2001	&gt;</body><body package="MQ-XIF">MQCA_IGQ_USER_ID	&lt;C: #define MQCA_IGQ_USER_ID 2041	&gt;</body><body package="MQ-XIF">MQCA_INITIATION_Q_NAME	&lt;C: #define MQCA_INITIATION_Q_NAME 2008	&gt;</body><body package="MQ-XIF">MQCA_LAST	&lt;C: #define MQCA_LAST 4000	&gt;</body><body package="MQ-XIF">MQCA_LAST_USED	&lt;C: #define MQCA_LAST_USED 2053	&gt;</body><body package="MQ-XIF">MQCA_LDAP_PASSWORD	&lt;C: #define MQCA_LDAP_PASSWORD 2048	&gt;</body><body package="MQ-XIF">MQCA_LDAP_USER_NAME	&lt;C: #define MQCA_LDAP_USER_NAME 2047	&gt;</body><body package="MQ-XIF">MQCA_NAMELIST_DESC	&lt;C: #define MQCA_NAMELIST_DESC 2009	&gt;</body><body package="MQ-XIF">MQCA_NAMELIST_NAME	&lt;C: #define MQCA_NAMELIST_NAME 2010	&gt;</body><body package="MQ-XIF">MQCA_NAMES	&lt;C: #define MQCA_NAMES 2020	&gt;</body><body package="MQ-XIF">MQCA_PROCESS_DESC	&lt;C: #define MQCA_PROCESS_DESC 2011	&gt;</body><body package="MQ-XIF">MQCA_PROCESS_NAME	&lt;C: #define MQCA_PROCESS_NAME 2012	&gt;</body><body package="MQ-XIF">MQCA_QSG_NAME	&lt;C: #define MQCA_QSG_NAME 2040	&gt;</body><body package="MQ-XIF">MQCA_Q_DESC	&lt;C: #define MQCA_Q_DESC 2013	&gt;</body><body package="MQ-XIF">MQCA_Q_MGR_DESC	&lt;C: #define MQCA_Q_MGR_DESC 2014	&gt;</body><body package="MQ-XIF">MQCA_Q_MGR_IDENTIFIER	&lt;C: #define MQCA_Q_MGR_IDENTIFIER 2032	&gt;</body><body package="MQ-XIF">MQCA_Q_MGR_NAME	&lt;C: #define MQCA_Q_MGR_NAME 2015	&gt;</body><body package="MQ-XIF">MQCA_Q_NAME	&lt;C: #define MQCA_Q_NAME 2016	&gt;</body><body package="MQ-XIF">MQCA_REMOTE_Q_MGR_NAME	&lt;C: #define MQCA_REMOTE_Q_MGR_NAME 2017	&gt;</body><body package="MQ-XIF">MQCA_REMOTE_Q_NAME	&lt;C: #define MQCA_REMOTE_Q_NAME 2018	&gt;</body><body package="MQ-XIF">MQCA_REPOSITORY_NAME	&lt;C: #define MQCA_REPOSITORY_NAME 2035	&gt;</body><body package="MQ-XIF">MQCA_REPOSITORY_NAMELIST	&lt;C: #define MQCA_REPOSITORY_NAMELIST 2036	&gt;</body><body package="MQ-XIF">MQCA_SSL_CRL_NAMELIST	&lt;C: #define MQCA_SSL_CRL_NAMELIST 2050	&gt;</body><body package="MQ-XIF">MQCA_SSL_CRYPTO_HARDWARE	&lt;C: #define MQCA_SSL_CRYPTO_HARDWARE 2051	&gt;</body><body package="MQ-XIF">MQCA_SSL_KEY_REPOSITORY	&lt;C: #define MQCA_SSL_KEY_REPOSITORY 2049	&gt;</body><body package="MQ-XIF">MQCA_STORAGE_CLASS	&lt;C: #define MQCA_STORAGE_CLASS 2022	&gt;</body><body package="MQ-XIF">MQCA_STORAGE_CLASS_DESC	&lt;C: #define MQCA_STORAGE_CLASS_DESC 2042	&gt;</body><body package="MQ-XIF">MQCA_TRIGGER_DATA	&lt;C: #define MQCA_TRIGGER_DATA 2023	&gt;</body><body package="MQ-XIF">MQCA_USER_DATA	&lt;C: #define MQCA_USER_DATA 2021	&gt;</body><body package="MQ-XIF">MQCA_USER_LIST	&lt;C: #define MQCA_USER_LIST 4000	&gt;</body><body package="MQ-XIF">MQCA_XCF_GROUP_NAME	&lt;C: #define MQCA_XCF_GROUP_NAME 2043	&gt;</body><body package="MQ-XIF">MQCA_XCF_MEMBER_NAME	&lt;C: #define MQCA_XCF_MEMBER_NAME 2044	&gt;</body><body package="MQ-XIF">MQCA_XMIT_Q_NAME	&lt;C: #define MQCA_XMIT_Q_NAME 2024	&gt;</body><body package="MQ-XIF">MQCCSI_DEFAULT	&lt;C: #define MQCCSI_DEFAULT 0	&gt;</body><body package="MQ-XIF">MQCCSI_EMBEDDED	&lt;C: #define MQCCSI_EMBEDDED (-1)	&gt;</body><body package="MQ-XIF">MQCCSI_INHERIT	&lt;C: #define MQCCSI_INHERIT (-2)	&gt;</body><body package="MQ-XIF">MQCCSI_Q_MGR	&lt;C: #define MQCCSI_Q_MGR 0	&gt;</body><body package="MQ-XIF">MQCCSI_UNDEFINED	&lt;C: #define MQCCSI_UNDEFINED 0	&gt;</body><body package="MQ-XIF">MQCCT_NO	&lt;C: #define MQCCT_NO 0x00000000	&gt;</body><body package="MQ-XIF">MQCCT_YES	&lt;C: #define MQCCT_YES 0x00000001	&gt;</body><body package="MQ-XIF">MQCC_FAILED	&lt;C: #define MQCC_FAILED 2	&gt;</body><body package="MQ-XIF">MQCC_OK	&lt;C: #define MQCC_OK 0	&gt;</body><body package="MQ-XIF">MQCC_UNKNOWN	&lt;C: #define MQCC_UNKNOWN (-1)	&gt;</body><body package="MQ-XIF">MQCC_WARNING	&lt;C: #define MQCC_WARNING 1	&gt;</body><body package="MQ-XIF">MQCFAC_NONE	&lt;C: #define MQCFAC_NONE "        "	&gt;</body><body package="MQ-XIF">MQCFAC_NONE_ARRAY	&lt;C: #define MQCFAC_NONE_ARRAY 0,0,0,0,0,0,0,0	&gt;</body><body package="MQ-XIF">MQCFUNC_MQCONN	&lt;C: #define MQCFUNC_MQCONN "CONN"	&gt;</body><body package="MQ-XIF">MQCFUNC_MQCONN_ARRAY	&lt;C: #define MQCFUNC_MQCONN_ARRAY 67,79,78,78	&gt;</body><body package="MQ-XIF">MQCFUNC_MQGET	&lt;C: #define MQCFUNC_MQGET "GET "	&gt;</body><body package="MQ-XIF">MQCFUNC_MQGET_ARRAY	&lt;C: #define MQCFUNC_MQGET_ARRAY 71,69,84,32	&gt;</body><body package="MQ-XIF">MQCFUNC_MQINQ	&lt;C: #define MQCFUNC_MQINQ "INQ "	&gt;</body><body package="MQ-XIF">MQCFUNC_MQINQ_ARRAY	&lt;C: #define MQCFUNC_MQINQ_ARRAY 73,78,81,32	&gt;</body><body package="MQ-XIF">MQCFUNC_MQOPEN	&lt;C: #define MQCFUNC_MQOPEN "OPEN"	&gt;</body><body package="MQ-XIF">MQCFUNC_MQOPEN_ARRAY	&lt;C: #define MQCFUNC_MQOPEN_ARRAY 79,80,69,78	&gt;</body><body package="MQ-XIF">MQCFUNC_MQPUT	&lt;C: #define MQCFUNC_MQPUT "PUT "	&gt;</body><body package="MQ-XIF">MQCFUNC_MQPUT1	&lt;C: #define MQCFUNC_MQPUT1 "PUT1"	&gt;</body><body package="MQ-XIF">MQCFUNC_MQPUT1_ARRAY	&lt;C: #define MQCFUNC_MQPUT1_ARRAY 80,85,84,49	&gt;</body><body package="MQ-XIF">MQCFUNC_MQPUT_ARRAY	&lt;C: #define MQCFUNC_MQPUT_ARRAY 80,85,84,32	&gt;</body><body package="MQ-XIF">MQCFUNC_NONE	&lt;C: #define MQCFUNC_NONE "    "	&gt;</body><body package="MQ-XIF">MQCFUNC_NONE_ARRAY	&lt;C: #define MQCFUNC_NONE_ARRAY 32,32,32,32	&gt;</body><body package="MQ-XIF">MQCGWI_DEFAULT	&lt;C: #define MQCGWI_DEFAULT (-2)	&gt;</body><body package="MQ-XIF">MQCHAD_DISABLED	&lt;C: #define MQCHAD_DISABLED 0	&gt;</body><body package="MQ-XIF">MQCHAD_ENABLED	&lt;C: #define MQCHAD_ENABLED 1	&gt;</body><body package="MQ-XIF">MQCIH_CURRENT_LENGTH	&lt;C: #define MQCIH_CURRENT_LENGTH 180	&gt;</body><body package="MQ-XIF">MQCIH_CURRENT_VERSION	&lt;C: #define MQCIH_CURRENT_VERSION 2	&gt;</body><body package="MQ-XIF">MQCIH_DEFAULT	&lt;C: #define MQCIH_DEFAULT {MQCIH_STRUC_ID_ARRAY},MQCIH_VERSION_2,MQCIH_LENGTH_2,0,0,{MQFMT_NONE_ARRAY},MQCIH_NONE,MQCRC_OK,MQCC_OK,MQRC_NONE,MQCUOWC_ONLY,MQCGWI_DEFAULT,MQCLT_PROGRAM,MQCODL_AS_INPUT,0,MQCADSD_NONE,MQCCT_NO,MQCTES_NOSYNC,{MQCFAC_NONE_ARRAY},{MQCFUNC_NONE_ARRAY},{32,32,32,32},{32,32,32,32,32,32,32,32},{32,32,32,32,32,32,32,32},{MQFMT_NONE_ARRAY},{32,32,32,32},{32,32,32,32},{32,32,32,32},{32,32,32,32},{32,32,32,32},{MQCSC_NONE_ARRAY},{32,32,32,32},{32,32,32,32},{32,32,32,32,32,32,32,32},{32,32,32,32,32,32,32,32},0,0,0,0	&gt;</body><body package="MQ-XIF">MQCIH_LENGTH_1	&lt;C: #define MQCIH_LENGTH_1 164	&gt;</body><body package="MQ-XIF">MQCIH_LENGTH_2	&lt;C: #define MQCIH_LENGTH_2 180	&gt;</body><body package="MQ-XIF">MQCIH_NONE	&lt;C: #define MQCIH_NONE 0x00000000	&gt;</body><body package="MQ-XIF">MQCIH_STRUC_ID	&lt;C: #define MQCIH_STRUC_ID "CIH "	&gt;</body><body package="MQ-XIF">MQCIH_STRUC_ID_ARRAY	&lt;C: #define MQCIH_STRUC_ID_ARRAY 67,73,72,32	&gt;</body><body package="MQ-XIF">MQCIH_VERSION_1	&lt;C: #define MQCIH_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQCIH_VERSION_2	&lt;C: #define MQCIH_VERSION_2 2	&gt;</body><body package="MQ-XIF">MQCI_NEW_SESSION	&lt;C: #define MQCI_NEW_SESSION "AMQ!NEW_SESSION_CORRELID"	&gt;</body><body package="MQ-XIF">MQCI_NEW_SESSION_ARRAY	&lt;C: #define MQCI_NEW_SESSION_ARRAY 65,77,81,33,78,69,87,95,83,69,83,83,73,79,78,95,67,79,82,82,69,76,73,68	&gt;</body><body package="MQ-XIF">MQCI_NONE	&lt;C: #define MQCI_NONE "                        "	&gt;</body><body package="MQ-XIF">MQCI_NONE_ARRAY	&lt;C: #define MQCI_NONE_ARRAY 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	&gt;</body><body package="MQ-XIF">MQCLT_PROGRAM	&lt;C: #define MQCLT_PROGRAM 1	&gt;</body><body package="MQ-XIF">MQCLT_TRANSACTION	&lt;C: #define MQCLT_TRANSACTION 2	&gt;</body><body package="MQ-XIF">MQCMDL_LEVEL_1	&lt;C: #define MQCMDL_LEVEL_1 100	&gt;</body><body package="MQ-XIF">MQCMDL_LEVEL_101	&lt;C: #define MQCMDL_LEVEL_101 101	&gt;</body><body package="MQ-XIF">MQCMDL_LEVEL_110	&lt;C: #define MQCMDL_LEVEL_110 110	&gt;</body><body package="MQ-XIF">MQCMDL_LEVEL_114	&lt;C: #define MQCMDL_LEVEL_114 114	&gt;</body><body package="MQ-XIF">MQCMDL_LEVEL_120	&lt;C: #define MQCMDL_LEVEL_120 120	&gt;</body><body package="MQ-XIF">MQCMDL_LEVEL_200	&lt;C: #define MQCMDL_LEVEL_200 200	&gt;</body><body package="MQ-XIF">MQCMDL_LEVEL_201	&lt;C: #define MQCMDL_LEVEL_201 201	&gt;</body><body package="MQ-XIF">MQCMDL_LEVEL_210	&lt;C: #define MQCMDL_LEVEL_210 210	&gt;</body><body package="MQ-XIF">MQCMDL_LEVEL_220	&lt;C: #define MQCMDL_LEVEL_220 220	&gt;</body><body package="MQ-XIF">MQCMDL_LEVEL_221	&lt;C: #define MQCMDL_LEVEL_221 221	&gt;</body><body package="MQ-XIF">MQCMDL_LEVEL_320	&lt;C: #define MQCMDL_LEVEL_320 320	&gt;</body><body package="MQ-XIF">MQCMDL_LEVEL_420	&lt;C: #define MQCMDL_LEVEL_420 420	&gt;</body><body package="MQ-XIF">MQCMDL_LEVEL_500	&lt;C: #define MQCMDL_LEVEL_500 500	&gt;</body><body package="MQ-XIF">MQCMDL_LEVEL_510	&lt;C: #define MQCMDL_LEVEL_510 510	&gt;</body><body package="MQ-XIF">MQCMDL_LEVEL_520	&lt;C: #define MQCMDL_LEVEL_520 520	&gt;</body><body package="MQ-XIF">MQCMDL_LEVEL_530	&lt;C: #define MQCMDL_LEVEL_530 530	&gt;</body><body package="MQ-XIF">MQCNO_CURRENT_VERSION	&lt;C: #define MQCNO_CURRENT_VERSION 4	&gt;</body><body package="MQ-XIF">MQCNO_DEFAULT	&lt;C: #define MQCNO_DEFAULT {MQCNO_STRUC_ID_ARRAY},MQCNO_VERSION_1,MQCNO_NONE,0,NULL,{MQCT_NONE_ARRAY},NULL,0	&gt;</body><body package="MQ-XIF">MQCNO_FASTPATH_BINDING	&lt;C: #define MQCNO_FASTPATH_BINDING 0x00000001	&gt;</body><body package="MQ-XIF">MQCNO_HANDLE_SHARE_BLOCK	&lt;C: #define MQCNO_HANDLE_SHARE_BLOCK 0x00000040	&gt;</body><body package="MQ-XIF">MQCNO_HANDLE_SHARE_NONE	&lt;C: #define MQCNO_HANDLE_SHARE_NONE 0x00000020	&gt;</body><body package="MQ-XIF">MQCNO_HANDLE_SHARE_NO_BLOCK	&lt;C: #define MQCNO_HANDLE_SHARE_NO_BLOCK 0x00000080	&gt;</body><body package="MQ-XIF">MQCNO_NONE	&lt;C: #define MQCNO_NONE 0x00000000	&gt;</body><body package="MQ-XIF">MQCNO_STANDARD_BINDING	&lt;C: #define MQCNO_STANDARD_BINDING 0x00000000	&gt;</body><body package="MQ-XIF">MQCNO_STRUC_ID	&lt;C: #define MQCNO_STRUC_ID "CNO "	&gt;</body><body package="MQ-XIF">MQCNO_STRUC_ID_ARRAY	&lt;C: #define MQCNO_STRUC_ID_ARRAY 67,78,79,32	&gt;</body><body package="MQ-XIF">MQCNO_VERSION_1	&lt;C: #define MQCNO_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQCNO_VERSION_2	&lt;C: #define MQCNO_VERSION_2 2	&gt;</body><body package="MQ-XIF">MQCNO_VERSION_3	&lt;C: #define MQCNO_VERSION_3 3	&gt;</body><body package="MQ-XIF">MQCNO_VERSION_4	&lt;C: #define MQCNO_VERSION_4 4	&gt;</body><body package="MQ-XIF">MQCODL_AS_INPUT	&lt;C: #define MQCODL_AS_INPUT (-1)	&gt;</body><body package="MQ-XIF">MQCO_DELETE	&lt;C: #define MQCO_DELETE 0x00000001	&gt;</body><body package="MQ-XIF">MQCO_DELETE_PURGE	&lt;C: #define MQCO_DELETE_PURGE 0x00000002	&gt;</body><body package="MQ-XIF">MQCO_NONE	&lt;C: #define MQCO_NONE 0x00000000	&gt;</body><body package="MQ-XIF">MQCQT_ALIAS_Q	&lt;C: #define MQCQT_ALIAS_Q 2	&gt;</body><body package="MQ-XIF">MQCQT_LOCAL_Q	&lt;C: #define MQCQT_LOCAL_Q 1	&gt;</body><body package="MQ-XIF">MQCQT_Q_MGR_ALIAS	&lt;C: #define MQCQT_Q_MGR_ALIAS 4	&gt;</body><body package="MQ-XIF">MQCQT_REMOTE_Q	&lt;C: #define MQCQT_REMOTE_Q 3	&gt;</body><body package="MQ-XIF">MQCRC_APPLICATION_ABEND	&lt;C: #define MQCRC_APPLICATION_ABEND 5	&gt;</body><body package="MQ-XIF">MQCRC_BRIDGE_ABEND	&lt;C: #define MQCRC_BRIDGE_ABEND 4	&gt;</body><body package="MQ-XIF">MQCRC_BRIDGE_ERROR	&lt;C: #define MQCRC_BRIDGE_ERROR 3	&gt;</body><body package="MQ-XIF">MQCRC_BRIDGE_TIMEOUT	&lt;C: #define MQCRC_BRIDGE_TIMEOUT 8	&gt;</body><body package="MQ-XIF">MQCRC_CICS_EXEC_ERROR	&lt;C: #define MQCRC_CICS_EXEC_ERROR 1	&gt;</body><body package="MQ-XIF">MQCRC_MQ_API_ERROR	&lt;C: #define MQCRC_MQ_API_ERROR 2	&gt;</body><body package="MQ-XIF">MQCRC_OK	&lt;C: #define MQCRC_OK 0	&gt;</body><body package="MQ-XIF">MQCRC_PROGRAM_NOT_AVAILABLE	&lt;C: #define MQCRC_PROGRAM_NOT_AVAILABLE 7	&gt;</body><body package="MQ-XIF">MQCRC_SECURITY_ERROR	&lt;C: #define MQCRC_SECURITY_ERROR 6	&gt;</body><body package="MQ-XIF">MQCRC_TRANSID_NOT_AVAILABLE	&lt;C: #define MQCRC_TRANSID_NOT_AVAILABLE 9	&gt;</body><body package="MQ-XIF">MQCSC_NONE	&lt;C: #define MQCSC_NONE "    "	&gt;</body><body package="MQ-XIF">MQCSC_NONE_ARRAY	&lt;C: #define MQCSC_NONE_ARRAY 32,32,32,32	&gt;</body><body package="MQ-XIF">MQCSC_START	&lt;C: #define MQCSC_START "S   "	&gt;</body><body package="MQ-XIF">MQCSC_STARTDATA	&lt;C: #define MQCSC_STARTDATA "SD  "	&gt;</body><body package="MQ-XIF">MQCSC_STARTDATA_ARRAY	&lt;C: #define MQCSC_STARTDATA_ARRAY 83,68,32,32	&gt;</body><body package="MQ-XIF">MQCSC_START_ARRAY	&lt;C: #define MQCSC_START_ARRAY 83,32,32,32	&gt;</body><body package="MQ-XIF">MQCSC_TERMINPUT	&lt;C: #define MQCSC_TERMINPUT "TD  "	&gt;</body><body package="MQ-XIF">MQCSC_TERMINPUT_ARRAY	&lt;C: #define MQCSC_TERMINPUT_ARRAY 84,68,32,32	&gt;</body><body package="MQ-XIF">MQCTES_BACKOUT	&lt;C: #define MQCTES_BACKOUT 0x00001100	&gt;</body><body package="MQ-XIF">MQCTES_COMMIT	&lt;C: #define MQCTES_COMMIT 0x00000100	&gt;</body><body package="MQ-XIF">MQCTES_ENDTASK	&lt;C: #define MQCTES_ENDTASK 0x00010000	&gt;</body><body package="MQ-XIF">MQCTES_NOSYNC	&lt;C: #define MQCTES_NOSYNC 0x00000000	&gt;</body><body package="MQ-XIF">MQCT_NONE	&lt;C: #define MQCT_NONE "                                                                                                                                "	&gt;</body><body package="MQ-XIF">MQCT_NONE_ARRAY	&lt;C: #define MQCT_NONE_ARRAY 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	&gt;</body><body package="MQ-XIF">MQCUOWC_BACKOUT	&lt;C: #define MQCUOWC_BACKOUT 0x00001100	&gt;</body><body package="MQ-XIF">MQCUOWC_COMMIT	&lt;C: #define MQCUOWC_COMMIT 0x00000100	&gt;</body><body package="MQ-XIF">MQCUOWC_CONTINUE	&lt;C: #define MQCUOWC_CONTINUE 0x00010000	&gt;</body><body package="MQ-XIF">MQCUOWC_FIRST	&lt;C: #define MQCUOWC_FIRST 0x00000011	&gt;</body><body package="MQ-XIF">MQCUOWC_LAST	&lt;C: #define MQCUOWC_LAST 0x00000110	&gt;</body><body package="MQ-XIF">MQCUOWC_MIDDLE	&lt;C: #define MQCUOWC_MIDDLE 0x00000010	&gt;</body><body package="MQ-XIF">MQCUOWC_ONLY	&lt;C: #define MQCUOWC_ONLY 0x00000111	&gt;</body><body package="MQ-XIF">MQC_INCLUDED	&lt;C: #define MQC_INCLUDED 	&gt;</body><body package="MQ-XIF">MQDHF_NEW_MSG_IDS	&lt;C: #define MQDHF_NEW_MSG_IDS 0x00000001	&gt;</body><body package="MQ-XIF">MQDHF_NONE	&lt;C: #define MQDHF_NONE 0x00000000	&gt;</body><body package="MQ-XIF">MQDH_CURRENT_VERSION	&lt;C: #define MQDH_CURRENT_VERSION 1	&gt;</body><body package="MQ-XIF">MQDH_DEFAULT	&lt;C: #define MQDH_DEFAULT {MQDH_STRUC_ID_ARRAY},MQDH_VERSION_1,0,0,MQCCSI_UNDEFINED,{MQFMT_NONE_ARRAY},MQDHF_NONE,MQPMRF_NONE,0,0,0	&gt;</body><body package="MQ-XIF">MQDH_STRUC_ID	&lt;C: #define MQDH_STRUC_ID "DH  "	&gt;</body><body package="MQ-XIF">MQDH_STRUC_ID_ARRAY	&lt;C: #define MQDH_STRUC_ID_ARRAY 68,72,32,32	&gt;</body><body package="MQ-XIF">MQDH_VERSION_1	&lt;C: #define MQDH_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQDLH_CURRENT_VERSION	&lt;C: #define MQDLH_CURRENT_VERSION 1	&gt;</body><body package="MQ-XIF">MQDLH_DEFAULT	&lt;C: #define MQDLH_DEFAULT {MQDLH_STRUC_ID_ARRAY},MQDLH_VERSION_1,MQRC_NONE,{""},{""},0,MQCCSI_UNDEFINED,{MQFMT_NONE_ARRAY},0,{""},{""},{""}	&gt;</body><body package="MQ-XIF">MQDLH_STRUC_ID	&lt;C: #define MQDLH_STRUC_ID "DLH "	&gt;</body><body package="MQ-XIF">MQDLH_STRUC_ID_ARRAY	&lt;C: #define MQDLH_STRUC_ID_ARRAY 68,76,72,32	&gt;</body><body package="MQ-XIF">MQDLH_VERSION_1	&lt;C: #define MQDLH_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQDL_NOT_SUPPORTED	&lt;C: #define MQDL_NOT_SUPPORTED 0	&gt;</body><body package="MQ-XIF">MQDL_SUPPORTED	&lt;C: #define MQDL_SUPPORTED 1	&gt;</body><body package="MQ-XIF">MQEC_CONNECTION_QUIESCING	&lt;C: #define MQEC_CONNECTION_QUIESCING 6	&gt;</body><body package="MQ-XIF">MQEC_MSG_ARRIVED	&lt;C: #define MQEC_MSG_ARRIVED 2	&gt;</body><body package="MQ-XIF">MQEC_Q_MGR_QUIESCING	&lt;C: #define MQEC_Q_MGR_QUIESCING 5	&gt;</body><body package="MQ-XIF">MQEC_WAIT_CANCELED	&lt;C: #define MQEC_WAIT_CANCELED 4	&gt;</body><body package="MQ-XIF">MQEC_WAIT_INTERVAL_EXPIRED	&lt;C: #define MQEC_WAIT_INTERVAL_EXPIRED 3	&gt;</body><body package="MQ-XIF">MQEI_UNLIMITED	&lt;C: #define MQEI_UNLIMITED (-1)	&gt;</body><body package="MQ-XIF">MQENC_DECIMAL_MASK	&lt;C: #define MQENC_DECIMAL_MASK 0x000000F0	&gt;</body><body package="MQ-XIF">MQENC_DECIMAL_NORMAL	&lt;C: #define MQENC_DECIMAL_NORMAL 0x00000010	&gt;</body><body package="MQ-XIF">MQENC_DECIMAL_REVERSED	&lt;C: #define MQENC_DECIMAL_REVERSED 0x00000020	&gt;</body><body package="MQ-XIF">MQENC_DECIMAL_UNDEFINED	&lt;C: #define MQENC_DECIMAL_UNDEFINED 0x00000000	&gt;</body><body package="MQ-XIF">MQENC_FLOAT_IEEE_NORMAL	&lt;C: #define MQENC_FLOAT_IEEE_NORMAL 0x00000100	&gt;</body><body package="MQ-XIF">MQENC_FLOAT_IEEE_REVERSED	&lt;C: #define MQENC_FLOAT_IEEE_REVERSED 0x00000200	&gt;</body><body package="MQ-XIF">MQENC_FLOAT_MASK	&lt;C: #define MQENC_FLOAT_MASK 0x00000F00	&gt;</body><body package="MQ-XIF">MQENC_FLOAT_S390	&lt;C: #define MQENC_FLOAT_S390 0x00000300	&gt;</body><body package="MQ-XIF">MQENC_FLOAT_UNDEFINED	&lt;C: #define MQENC_FLOAT_UNDEFINED 0x00000000	&gt;</body><body package="MQ-XIF">MQENC_INTEGER_MASK	&lt;C: #define MQENC_INTEGER_MASK 0x0000000F	&gt;</body><body package="MQ-XIF">MQENC_INTEGER_NORMAL	&lt;C: #define MQENC_INTEGER_NORMAL 0x00000001	&gt;</body><body package="MQ-XIF">MQENC_INTEGER_REVERSED	&lt;C: #define MQENC_INTEGER_REVERSED 0x00000002	&gt;</body><body package="MQ-XIF">MQENC_INTEGER_UNDEFINED	&lt;C: #define MQENC_INTEGER_UNDEFINED 0x00000000	&gt;</body><body package="MQ-XIF">MQENC_NATIVE	&lt;C: #define MQENC_NATIVE 0x00000222	&gt;</body><body package="MQ-XIF">MQENC_RESERVED_MASK	&lt;C: #define MQENC_RESERVED_MASK 4294963200	&gt;</body><body package="MQ-XIF">MQENTRY	&lt;C: #define MQENTRY 	&gt;</body><body package="MQ-XIF">MQEXPI_OFF	&lt;C: #define MQEXPI_OFF 0	&gt;</body><body package="MQ-XIF">MQFB_APPL_CANNOT_BE_STARTED	&lt;C: #define MQFB_APPL_CANNOT_BE_STARTED 265	&gt;</body><body package="MQ-XIF">MQFB_APPL_FIRST	&lt;C: #define MQFB_APPL_FIRST 65536	&gt;</body><body package="MQ-XIF">MQFB_APPL_LAST	&lt;C: #define MQFB_APPL_LAST 999999999	&gt;</body><body package="MQ-XIF">MQFB_APPL_TYPE_ERROR	&lt;C: #define MQFB_APPL_TYPE_ERROR 267	&gt;</body><body package="MQ-XIF">MQFB_BIND_OPEN_CLUSRCVR_DEL	&lt;C: #define MQFB_BIND_OPEN_CLUSRCVR_DEL 281	&gt;</body><body package="MQ-XIF">MQFB_BUFFER_OVERFLOW	&lt;C: #define MQFB_BUFFER_OVERFLOW 294	&gt;</body><body package="MQ-XIF">MQFB_CHANNEL_COMPLETED	&lt;C: #define MQFB_CHANNEL_COMPLETED 262	&gt;</body><body package="MQ-XIF">MQFB_CHANNEL_FAIL	&lt;C: #define MQFB_CHANNEL_FAIL 264	&gt;</body><body package="MQ-XIF">MQFB_CHANNEL_FAIL_RETRY	&lt;C: #define MQFB_CHANNEL_FAIL_RETRY 263	&gt;</body><body package="MQ-XIF">MQFB_CICS_APPL_ABENDED	&lt;C: #define MQFB_CICS_APPL_ABENDED 411	&gt;</body><body package="MQ-XIF">MQFB_CICS_APPL_NOT_STARTED	&lt;C: #define MQFB_CICS_APPL_NOT_STARTED 410	&gt;</body><body package="MQ-XIF">MQFB_CICS_BRIDGE_FAILURE	&lt;C: #define MQFB_CICS_BRIDGE_FAILURE 403	&gt;</body><body package="MQ-XIF">MQFB_CICS_CCSID_ERROR	&lt;C: #define MQFB_CICS_CCSID_ERROR 405	&gt;</body><body package="MQ-XIF">MQFB_CICS_CIH_ERROR	&lt;C: #define MQFB_CICS_CIH_ERROR 407	&gt;</body><body package="MQ-XIF">MQFB_CICS_COMMAREA_ERROR	&lt;C: #define MQFB_CICS_COMMAREA_ERROR 409	&gt;</body><body package="MQ-XIF">MQFB_CICS_CORREL_ID_ERROR	&lt;C: #define MQFB_CICS_CORREL_ID_ERROR 404	&gt;</body><body package="MQ-XIF">MQFB_CICS_DLQ_ERROR	&lt;C: #define MQFB_CICS_DLQ_ERROR 412	&gt;</body><body package="MQ-XIF">MQFB_CICS_ENCODING_ERROR	&lt;C: #define MQFB_CICS_ENCODING_ERROR 406	&gt;</body><body package="MQ-XIF">MQFB_CICS_INTERNAL_ERROR	&lt;C: #define MQFB_CICS_INTERNAL_ERROR 401	&gt;</body><body package="MQ-XIF">MQFB_CICS_NOT_AUTHORIZED	&lt;C: #define MQFB_CICS_NOT_AUTHORIZED 402	&gt;</body><body package="MQ-XIF">MQFB_CICS_UOW_BACKED_OUT	&lt;C: #define MQFB_CICS_UOW_BACKED_OUT 413	&gt;</body><body package="MQ-XIF">MQFB_CICS_UOW_ERROR	&lt;C: #define MQFB_CICS_UOW_ERROR 408	&gt;</body><body package="MQ-XIF">MQFB_COA	&lt;C: #define MQFB_COA 259	&gt;</body><body package="MQ-XIF">MQFB_COD	&lt;C: #define MQFB_COD 260	&gt;</body><body package="MQ-XIF">MQFB_DATA_LENGTH_NEGATIVE	&lt;C: #define MQFB_DATA_LENGTH_NEGATIVE 292	&gt;</body><body package="MQ-XIF">MQFB_DATA_LENGTH_TOO_BIG	&lt;C: #define MQFB_DATA_LENGTH_TOO_BIG 293	&gt;</body><body package="MQ-XIF">MQFB_DATA_LENGTH_ZERO	&lt;C: #define MQFB_DATA_LENGTH_ZERO 291	&gt;</body><body package="MQ-XIF">MQFB_EXPIRATION	&lt;C: #define MQFB_EXPIRATION 258	&gt;</body><body package="MQ-XIF">MQFB_IIH_ERROR	&lt;C: #define MQFB_IIH_ERROR 296	&gt;</body><body package="MQ-XIF">MQFB_IMS_ERROR	&lt;C: #define MQFB_IMS_ERROR 300	&gt;</body><body package="MQ-XIF">MQFB_IMS_FIRST	&lt;C: #define MQFB_IMS_FIRST 301	&gt;</body><body package="MQ-XIF">MQFB_IMS_LAST	&lt;C: #define MQFB_IMS_LAST 399	&gt;</body><body package="MQ-XIF">MQFB_LENGTH_OFF_BY_ONE	&lt;C: #define MQFB_LENGTH_OFF_BY_ONE 295	&gt;</body><body package="MQ-XIF">MQFB_NAN	&lt;C: #define MQFB_NAN 276	&gt;</body><body package="MQ-XIF">MQFB_NONE	&lt;C: #define MQFB_NONE 0	&gt;</body><body package="MQ-XIF">MQFB_NOT_AUTHORIZED_FOR_IMS	&lt;C: #define MQFB_NOT_AUTHORIZED_FOR_IMS 298	&gt;</body><body package="MQ-XIF">MQFB_NOT_A_REPOSITORY_MSG	&lt;C: #define MQFB_NOT_A_REPOSITORY_MSG 280	&gt;</body><body package="MQ-XIF">MQFB_PAN	&lt;C: #define MQFB_PAN 275	&gt;</body><body package="MQ-XIF">MQFB_QUIT	&lt;C: #define MQFB_QUIT 256	&gt;</body><body package="MQ-XIF">MQFB_STOPPED_BY_CHAD_EXIT	&lt;C: #define MQFB_STOPPED_BY_CHAD_EXIT 277	&gt;</body><body package="MQ-XIF">MQFB_STOPPED_BY_MSG_EXIT	&lt;C: #define MQFB_STOPPED_BY_MSG_EXIT 268	&gt;</body><body package="MQ-XIF">MQFB_STOPPED_BY_PUBSUB_EXIT	&lt;C: #define MQFB_STOPPED_BY_PUBSUB_EXIT 279	&gt;</body><body package="MQ-XIF">MQFB_SYSTEM_FIRST	&lt;C: #define MQFB_SYSTEM_FIRST 1	&gt;</body><body package="MQ-XIF">MQFB_SYSTEM_LAST	&lt;C: #define MQFB_SYSTEM_LAST 65535	&gt;</body><body package="MQ-XIF">MQFB_TM_ERROR	&lt;C: #define MQFB_TM_ERROR 266	&gt;</body><body package="MQ-XIF">MQFB_XMIT_Q_MSG_ERROR	&lt;C: #define MQFB_XMIT_Q_MSG_ERROR 271	&gt;</body><body package="MQ-XIF">MQFMT_ADMIN	&lt;C: #define MQFMT_ADMIN "MQADMIN "	&gt;</body><body package="MQ-XIF">MQFMT_ADMIN_ARRAY	&lt;C: #define MQFMT_ADMIN_ARRAY 77,81,65,68,77,73,78,32	&gt;</body><body package="MQ-XIF">MQFMT_CHANNEL_COMPLETED	&lt;C: #define MQFMT_CHANNEL_COMPLETED "MQCHCOM "	&gt;</body><body package="MQ-XIF">MQFMT_CHANNEL_COMPLETED_ARRAY	&lt;C: #define MQFMT_CHANNEL_COMPLETED_ARRAY 77,81,67,72,67,79,77,32	&gt;</body><body package="MQ-XIF">MQFMT_CICS	&lt;C: #define MQFMT_CICS "MQCICS  "	&gt;</body><body package="MQ-XIF">MQFMT_CICS_ARRAY	&lt;C: #define MQFMT_CICS_ARRAY 77,81,67,73,67,83,32,32	&gt;</body><body package="MQ-XIF">MQFMT_COMMAND_1	&lt;C: #define MQFMT_COMMAND_1 "MQCMD1  "	&gt;</body><body package="MQ-XIF">MQFMT_COMMAND_1_ARRAY	&lt;C: #define MQFMT_COMMAND_1_ARRAY 77,81,67,77,68,49,32,32	&gt;</body><body package="MQ-XIF">MQFMT_COMMAND_2	&lt;C: #define MQFMT_COMMAND_2 "MQCMD2  "	&gt;</body><body package="MQ-XIF">MQFMT_COMMAND_2_ARRAY	&lt;C: #define MQFMT_COMMAND_2_ARRAY 77,81,67,77,68,50,32,32	&gt;</body><body package="MQ-XIF">MQFMT_DEAD_LETTER_HEADER	&lt;C: #define MQFMT_DEAD_LETTER_HEADER "MQDEAD  "	&gt;</body><body package="MQ-XIF">MQFMT_DEAD_LETTER_HEADER_ARRAY	&lt;C: #define MQFMT_DEAD_LETTER_HEADER_ARRAY 77,81,68,69,65,68,32,32	&gt;</body><body package="MQ-XIF">MQFMT_DIST_HEADER	&lt;C: #define MQFMT_DIST_HEADER "MQHDIST "	&gt;</body><body package="MQ-XIF">MQFMT_DIST_HEADER_ARRAY	&lt;C: #define MQFMT_DIST_HEADER_ARRAY 77,81,72,68,73,83,84,32	&gt;</body><body package="MQ-XIF">MQFMT_EVENT	&lt;C: #define MQFMT_EVENT "MQEVENT "	&gt;</body><body package="MQ-XIF">MQFMT_EVENT_ARRAY	&lt;C: #define MQFMT_EVENT_ARRAY 77,81,69,86,69,78,84,32	&gt;</body><body package="MQ-XIF">MQFMT_IMS	&lt;C: #define MQFMT_IMS "MQIMS   "	&gt;</body><body package="MQ-XIF">MQFMT_IMS_ARRAY	&lt;C: #define MQFMT_IMS_ARRAY 77,81,73,77,83,32,32,32	&gt;</body><body package="MQ-XIF">MQFMT_IMS_VAR_STRING	&lt;C: #define MQFMT_IMS_VAR_STRING "MQIMSVS "	&gt;</body><body package="MQ-XIF">MQFMT_IMS_VAR_STRING_ARRAY	&lt;C: #define MQFMT_IMS_VAR_STRING_ARRAY 77,81,73,77,83,86,83,32	&gt;</body><body package="MQ-XIF">MQFMT_MD_EXTENSION	&lt;C: #define MQFMT_MD_EXTENSION "MQHMDE  "	&gt;</body><body package="MQ-XIF">MQFMT_MD_EXTENSION_ARRAY	&lt;C: #define MQFMT_MD_EXTENSION_ARRAY 77,81,72,77,68,69,32,32	&gt;</body><body package="MQ-XIF">MQFMT_NONE	&lt;C: #define MQFMT_NONE "        "	&gt;</body><body package="MQ-XIF">MQFMT_NONE_ARRAY	&lt;C: #define MQFMT_NONE_ARRAY 32,32,32,32,32,32,32,32	&gt;</body><body package="MQ-XIF">MQFMT_PCF	&lt;C: #define MQFMT_PCF "MQPCF   "	&gt;</body><body package="MQ-XIF">MQFMT_PCF_ARRAY	&lt;C: #define MQFMT_PCF_ARRAY 77,81,80,67,70,32,32,32	&gt;</body><body package="MQ-XIF">MQFMT_REF_MSG_HEADER	&lt;C: #define MQFMT_REF_MSG_HEADER "MQHREF  "	&gt;</body><body package="MQ-XIF">MQFMT_REF_MSG_HEADER_ARRAY	&lt;C: #define MQFMT_REF_MSG_HEADER_ARRAY 77,81,72,82,69,70,32,32	&gt;</body><body package="MQ-XIF">MQFMT_RF_HEADER	&lt;C: #define MQFMT_RF_HEADER "MQHRF   "	&gt;</body><body package="MQ-XIF">MQFMT_RF_HEADER_2	&lt;C: #define MQFMT_RF_HEADER_2 "MQHRF2  "	&gt;</body><body package="MQ-XIF">MQFMT_RF_HEADER_2_ARRAY	&lt;C: #define MQFMT_RF_HEADER_2_ARRAY 77,81,72,82,70,50,32,32	&gt;</body><body package="MQ-XIF">MQFMT_RF_HEADER_ARRAY	&lt;C: #define MQFMT_RF_HEADER_ARRAY 77,81,72,82,70,32,32,32	&gt;</body><body package="MQ-XIF">MQFMT_STRING	&lt;C: #define MQFMT_STRING "MQSTR   "	&gt;</body><body package="MQ-XIF">MQFMT_STRING_ARRAY	&lt;C: #define MQFMT_STRING_ARRAY 77,81,83,84,82,32,32,32	&gt;</body><body package="MQ-XIF">MQFMT_TRIGGER	&lt;C: #define MQFMT_TRIGGER "MQTRIG  "	&gt;</body><body package="MQ-XIF">MQFMT_TRIGGER_ARRAY	&lt;C: #define MQFMT_TRIGGER_ARRAY 77,81,84,82,73,71,32,32	&gt;</body><body package="MQ-XIF">MQFMT_WORK_INFO_HEADER	&lt;C: #define MQFMT_WORK_INFO_HEADER "MQHWIH  "	&gt;</body><body package="MQ-XIF">MQFMT_WORK_INFO_HEADER_ARRAY	&lt;C: #define MQFMT_WORK_INFO_HEADER_ARRAY 77,81,72,87,73,72,32,32	&gt;</body><body package="MQ-XIF">MQFMT_XMIT_Q_HEADER	&lt;C: #define MQFMT_XMIT_Q_HEADER "MQXMIT  "	&gt;</body><body package="MQ-XIF">MQFMT_XMIT_Q_HEADER_ARRAY	&lt;C: #define MQFMT_XMIT_Q_HEADER_ARRAY 77,81,88,77,73,84,32,32	&gt;</body><body package="MQ-XIF">MQGI_NONE	&lt;C: #define MQGI_NONE "                        "	&gt;</body><body package="MQ-XIF">MQGI_NONE_ARRAY	&lt;C: #define MQGI_NONE_ARRAY 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	&gt;</body><body package="MQ-XIF">MQGMO_ACCEPT_TRUNCATED_MSG	&lt;C: #define MQGMO_ACCEPT_TRUNCATED_MSG 0x00000040	&gt;</body><body package="MQ-XIF">MQGMO_ALL_MSGS_AVAILABLE	&lt;C: #define MQGMO_ALL_MSGS_AVAILABLE 0x00020000	&gt;</body><body package="MQ-XIF">MQGMO_ALL_SEGMENTS_AVAILABLE	&lt;C: #define MQGMO_ALL_SEGMENTS_AVAILABLE 0x00040000	&gt;</body><body package="MQ-XIF">MQGMO_BROWSE_FIRST	&lt;C: #define MQGMO_BROWSE_FIRST 0x00000010	&gt;</body><body package="MQ-XIF">MQGMO_BROWSE_MSG_UNDER_CURSOR	&lt;C: #define MQGMO_BROWSE_MSG_UNDER_CURSOR 0x00000800	&gt;</body><body package="MQ-XIF">MQGMO_BROWSE_NEXT	&lt;C: #define MQGMO_BROWSE_NEXT 0x00000020	&gt;</body><body package="MQ-XIF">MQGMO_COMPLETE_MSG	&lt;C: #define MQGMO_COMPLETE_MSG 0x00010000	&gt;</body><body package="MQ-XIF">MQGMO_CONVERT	&lt;C: #define MQGMO_CONVERT 0x00004000	&gt;</body><body package="MQ-XIF">MQGMO_CURRENT_VERSION	&lt;C: #define MQGMO_CURRENT_VERSION 3	&gt;</body><body package="MQ-XIF">MQGMO_DEFAULT	&lt;C: #define MQGMO_DEFAULT {MQGMO_STRUC_ID_ARRAY},MQGMO_VERSION_1,MQGMO_NO_WAIT,0,0,0,{""},(MQMO_MATCH_MSG_ID+MQMO_MATCH_CORREL_ID),MQGS_NOT_IN_GROUP,MQSS_NOT_A_SEGMENT,MQSEG_INHIBITED,32,{MQMTOK_NONE_ARRAY},MQRL_UNDEFINED	&gt;</body><body package="MQ-XIF">MQGMO_FAIL_IF_QUIESCING	&lt;C: #define MQGMO_FAIL_IF_QUIESCING 0x00002000	&gt;</body><body package="MQ-XIF">MQGMO_LOCK	&lt;C: #define MQGMO_LOCK 0x00000200	&gt;</body><body package="MQ-XIF">MQGMO_LOGICAL_ORDER	&lt;C: #define MQGMO_LOGICAL_ORDER 0x00008000	&gt;</body><body package="MQ-XIF">MQGMO_MARK_SKIP_BACKOUT	&lt;C: #define MQGMO_MARK_SKIP_BACKOUT 0x00000080	&gt;</body><body package="MQ-XIF">MQGMO_MSG_UNDER_CURSOR	&lt;C: #define MQGMO_MSG_UNDER_CURSOR 0x00000100	&gt;</body><body package="MQ-XIF">MQGMO_NONE	&lt;C: #define MQGMO_NONE 0x00000000	&gt;</body><body package="MQ-XIF">MQGMO_NO_SYNCPOINT	&lt;C: #define MQGMO_NO_SYNCPOINT 0x00000004	&gt;</body><body package="MQ-XIF">MQGMO_NO_WAIT	&lt;C: #define MQGMO_NO_WAIT 0x00000000	&gt;</body><body package="MQ-XIF">MQGMO_SET_SIGNAL	&lt;C: #define MQGMO_SET_SIGNAL 0x00000008	&gt;</body><body package="MQ-XIF">MQGMO_STRUC_ID	&lt;C: #define MQGMO_STRUC_ID "GMO "	&gt;</body><body package="MQ-XIF">MQGMO_STRUC_ID_ARRAY	&lt;C: #define MQGMO_STRUC_ID_ARRAY 71,77,79,32	&gt;</body><body package="MQ-XIF">MQGMO_SYNCPOINT	&lt;C: #define MQGMO_SYNCPOINT 0x00000002	&gt;</body><body package="MQ-XIF">MQGMO_SYNCPOINT_IF_PERSISTENT	&lt;C: #define MQGMO_SYNCPOINT_IF_PERSISTENT 0x00001000	&gt;</body><body package="MQ-XIF">MQGMO_UNLOCK	&lt;C: #define MQGMO_UNLOCK 0x00000400	&gt;</body><body package="MQ-XIF">MQGMO_VERSION_1	&lt;C: #define MQGMO_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQGMO_VERSION_2	&lt;C: #define MQGMO_VERSION_2 2	&gt;</body><body package="MQ-XIF">MQGMO_VERSION_3	&lt;C: #define MQGMO_VERSION_3 3	&gt;</body><body package="MQ-XIF">MQGMO_WAIT	&lt;C: #define MQGMO_WAIT 0x00000001	&gt;</body><body package="MQ-XIF">MQGS_LAST_MSG_IN_GROUP	&lt;C: #define MQGS_LAST_MSG_IN_GROUP 76	&gt;</body><body package="MQ-XIF">MQGS_MSG_IN_GROUP	&lt;C: #define MQGS_MSG_IN_GROUP 71	&gt;</body><body package="MQ-XIF">MQGS_NOT_IN_GROUP	&lt;C: #define MQGS_NOT_IN_GROUP 32	&gt;</body><body package="MQ-XIF">MQHC_DEF_HCONN	&lt;C: #define MQHC_DEF_HCONN 0	&gt;</body><body package="MQ-XIF">MQHC_UNUSABLE_HCONN	&lt;C: #define MQHC_UNUSABLE_HCONN (-1)	&gt;</body><body package="MQ-XIF">MQHO_NONE	&lt;C: #define MQHO_NONE 0	&gt;</body><body package="MQ-XIF">MQHO_UNUSABLE_HOBJ	&lt;C: #define MQHO_UNUSABLE_HOBJ (-1)	&gt;</body><body package="MQ-XIF">MQIAUT_NONE	&lt;C: #define MQIAUT_NONE "        "	&gt;</body><body package="MQ-XIF">MQIAUT_NONE_ARRAY	&lt;C: #define MQIAUT_NONE_ARRAY 32,32,32,32,32,32,32,32	&gt;</body><body package="MQ-XIF">MQIAV_NOT_APPLICABLE	&lt;C: #define MQIAV_NOT_APPLICABLE (-1)	&gt;</body><body package="MQ-XIF">MQIAV_UNDEFINED	&lt;C: #define MQIAV_UNDEFINED (-2)	&gt;</body><body package="MQ-XIF">MQIA_APPL_TYPE	&lt;C: #define MQIA_APPL_TYPE 1	&gt;</body><body package="MQ-XIF">MQIA_ARCHIVE	&lt;C: #define MQIA_ARCHIVE 60	&gt;</body><body package="MQ-XIF">MQIA_AUTHORITY_EVENT	&lt;C: #define MQIA_AUTHORITY_EVENT 47	&gt;</body><body package="MQ-XIF">MQIA_AUTH_INFO_TYPE	&lt;C: #define MQIA_AUTH_INFO_TYPE 66	&gt;</body><body package="MQ-XIF">MQIA_BACKOUT_THRESHOLD	&lt;C: #define MQIA_BACKOUT_THRESHOLD 22	&gt;</body><body package="MQ-XIF">MQIA_CF_LEVEL	&lt;C: #define MQIA_CF_LEVEL 70	&gt;</body><body package="MQ-XIF">MQIA_CF_RECOVER	&lt;C: #define MQIA_CF_RECOVER 71	&gt;</body><body package="MQ-XIF">MQIA_CHANNEL_AUTO_DEF	&lt;C: #define MQIA_CHANNEL_AUTO_DEF 55	&gt;</body><body package="MQ-XIF">MQIA_CHANNEL_AUTO_DEF_EVENT	&lt;C: #define MQIA_CHANNEL_AUTO_DEF_EVENT 56	&gt;</body><body package="MQ-XIF">MQIA_CLUSTER_Q_TYPE	&lt;C: #define MQIA_CLUSTER_Q_TYPE 59	&gt;</body><body package="MQ-XIF">MQIA_CLUSTER_WORKLOAD_LENGTH	&lt;C: #define MQIA_CLUSTER_WORKLOAD_LENGTH 58	&gt;</body><body package="MQ-XIF">MQIA_CODED_CHAR_SET_ID	&lt;C: #define MQIA_CODED_CHAR_SET_ID 2	&gt;</body><body package="MQ-XIF">MQIA_COMMAND_LEVEL	&lt;C: #define MQIA_COMMAND_LEVEL 31	&gt;</body><body package="MQ-XIF">MQIA_CONFIGURATION_EVENT	&lt;C: #define MQIA_CONFIGURATION_EVENT 51	&gt;</body><body package="MQ-XIF">MQIA_CURRENT_Q_DEPTH	&lt;C: #define MQIA_CURRENT_Q_DEPTH 3	&gt;</body><body package="MQ-XIF">MQIA_DEFINITION_TYPE	&lt;C: #define MQIA_DEFINITION_TYPE 7	&gt;</body><body package="MQ-XIF">MQIA_DEF_BIND	&lt;C: #define MQIA_DEF_BIND 61	&gt;</body><body package="MQ-XIF">MQIA_DEF_INPUT_OPEN_OPTION	&lt;C: #define MQIA_DEF_INPUT_OPEN_OPTION 4	&gt;</body><body package="MQ-XIF">MQIA_DEF_PERSISTENCE	&lt;C: #define MQIA_DEF_PERSISTENCE 5	&gt;</body><body package="MQ-XIF">MQIA_DEF_PRIORITY	&lt;C: #define MQIA_DEF_PRIORITY 6	&gt;</body><body package="MQ-XIF">MQIA_DIST_LISTS	&lt;C: #define MQIA_DIST_LISTS 34	&gt;</body><body package="MQ-XIF">MQIA_EXPIRY_INTERVAL	&lt;C: #define MQIA_EXPIRY_INTERVAL 39	&gt;</body><body package="MQ-XIF">MQIA_FIRST	&lt;C: #define MQIA_FIRST 1	&gt;</body><body package="MQ-XIF">MQIA_HARDEN_GET_BACKOUT	&lt;C: #define MQIA_HARDEN_GET_BACKOUT 8	&gt;</body><body package="MQ-XIF">MQIA_HIGH_Q_DEPTH	&lt;C: #define MQIA_HIGH_Q_DEPTH 36	&gt;</body><body package="MQ-XIF">MQIA_IGQ_PUT_AUTHORITY	&lt;C: #define MQIA_IGQ_PUT_AUTHORITY 65	&gt;</body><body package="MQ-XIF">MQIA_INDEX_TYPE	&lt;C: #define MQIA_INDEX_TYPE 57	&gt;</body><body package="MQ-XIF">MQIA_INHIBIT_EVENT	&lt;C: #define MQIA_INHIBIT_EVENT 48	&gt;</body><body package="MQ-XIF">MQIA_INHIBIT_GET	&lt;C: #define MQIA_INHIBIT_GET 9	&gt;</body><body package="MQ-XIF">MQIA_INHIBIT_PUT	&lt;C: #define MQIA_INHIBIT_PUT 10	&gt;</body><body package="MQ-XIF">MQIA_INTRA_GROUP_QUEUING	&lt;C: #define MQIA_INTRA_GROUP_QUEUING 64	&gt;</body><body package="MQ-XIF">MQIA_LAST	&lt;C: #define MQIA_LAST 2000	&gt;</body><body package="MQ-XIF">MQIA_LAST_USED	&lt;C: #define MQIA_LAST_USED 66	&gt;</body><body package="MQ-XIF">MQIA_LOCAL_EVENT	&lt;C: #define MQIA_LOCAL_EVENT 49	&gt;</body><body package="MQ-XIF">MQIA_MAX_HANDLES	&lt;C: #define MQIA_MAX_HANDLES 11	&gt;</body><body package="MQ-XIF">MQIA_MAX_MSG_LENGTH	&lt;C: #define MQIA_MAX_MSG_LENGTH 13	&gt;</body><body package="MQ-XIF">MQIA_MAX_PRIORITY	&lt;C: #define MQIA_MAX_PRIORITY 14	&gt;</body><body package="MQ-XIF">MQIA_MAX_Q_DEPTH	&lt;C: #define MQIA_MAX_Q_DEPTH 15	&gt;</body><body package="MQ-XIF">MQIA_MAX_UNCOMMITTED_MSGS	&lt;C: #define MQIA_MAX_UNCOMMITTED_MSGS 33	&gt;</body><body package="MQ-XIF">MQIA_MSG_DELIVERY_SEQUENCE	&lt;C: #define MQIA_MSG_DELIVERY_SEQUENCE 16	&gt;</body><body package="MQ-XIF">MQIA_MSG_DEQ_COUNT	&lt;C: #define MQIA_MSG_DEQ_COUNT 38	&gt;</body><body package="MQ-XIF">MQIA_MSG_ENQ_COUNT	&lt;C: #define MQIA_MSG_ENQ_COUNT 37	&gt;</body><body package="MQ-XIF">MQIA_NAMELIST_TYPE	&lt;C: #define MQIA_NAMELIST_TYPE 72	&gt;</body><body package="MQ-XIF">MQIA_NAME_COUNT	&lt;C: #define MQIA_NAME_COUNT 19	&gt;</body><body package="MQ-XIF">MQIA_OPEN_INPUT_COUNT	&lt;C: #define MQIA_OPEN_INPUT_COUNT 17	&gt;</body><body package="MQ-XIF">MQIA_OPEN_OUTPUT_COUNT	&lt;C: #define MQIA_OPEN_OUTPUT_COUNT 18	&gt;</body><body package="MQ-XIF">MQIA_PAGESET_ID	&lt;C: #define MQIA_PAGESET_ID 62	&gt;</body><body package="MQ-XIF">MQIA_PERFORMANCE_EVENT	&lt;C: #define MQIA_PERFORMANCE_EVENT 53	&gt;</body><body package="MQ-XIF">MQIA_PLATFORM	&lt;C: #define MQIA_PLATFORM 32	&gt;</body><body package="MQ-XIF">MQIA_QSG_DISP	&lt;C: #define MQIA_QSG_DISP 63	&gt;</body><body package="MQ-XIF">MQIA_Q_DEPTH_HIGH_EVENT	&lt;C: #define MQIA_Q_DEPTH_HIGH_EVENT 43	&gt;</body><body package="MQ-XIF">MQIA_Q_DEPTH_HIGH_LIMIT	&lt;C: #define MQIA_Q_DEPTH_HIGH_LIMIT 40	&gt;</body><body package="MQ-XIF">MQIA_Q_DEPTH_LOW_EVENT	&lt;C: #define MQIA_Q_DEPTH_LOW_EVENT 44	&gt;</body><body package="MQ-XIF">MQIA_Q_DEPTH_LOW_LIMIT	&lt;C: #define MQIA_Q_DEPTH_LOW_LIMIT 41	&gt;</body><body package="MQ-XIF">MQIA_Q_DEPTH_MAX_EVENT	&lt;C: #define MQIA_Q_DEPTH_MAX_EVENT 42	&gt;</body><body package="MQ-XIF">MQIA_Q_SERVICE_INTERVAL	&lt;C: #define MQIA_Q_SERVICE_INTERVAL 54	&gt;</body><body package="MQ-XIF">MQIA_Q_SERVICE_INTERVAL_EVENT	&lt;C: #define MQIA_Q_SERVICE_INTERVAL_EVENT 46	&gt;</body><body package="MQ-XIF">MQIA_Q_TYPE	&lt;C: #define MQIA_Q_TYPE 20	&gt;</body><body package="MQ-XIF">MQIA_REMOTE_EVENT	&lt;C: #define MQIA_REMOTE_EVENT 50	&gt;</body><body package="MQ-XIF">MQIA_RETENTION_INTERVAL	&lt;C: #define MQIA_RETENTION_INTERVAL 21	&gt;</body><body package="MQ-XIF">MQIA_SCOPE	&lt;C: #define MQIA_SCOPE 45	&gt;</body><body package="MQ-XIF">MQIA_SHAREABILITY	&lt;C: #define MQIA_SHAREABILITY 23	&gt;</body><body package="MQ-XIF">MQIA_SSL_TASKS	&lt;C: #define MQIA_SSL_TASKS 69	&gt;</body><body package="MQ-XIF">MQIA_START_STOP_EVENT	&lt;C: #define MQIA_START_STOP_EVENT 52	&gt;</body><body package="MQ-XIF">MQIA_SYNCPOINT	&lt;C: #define MQIA_SYNCPOINT 30	&gt;</body><body package="MQ-XIF">MQIA_TIME_SINCE_RESET	&lt;C: #define MQIA_TIME_SINCE_RESET 35	&gt;</body><body package="MQ-XIF">MQIA_TRIGGER_CONTROL	&lt;C: #define MQIA_TRIGGER_CONTROL 24	&gt;</body><body package="MQ-XIF">MQIA_TRIGGER_DEPTH	&lt;C: #define MQIA_TRIGGER_DEPTH 29	&gt;</body><body package="MQ-XIF">MQIA_TRIGGER_INTERVAL	&lt;C: #define MQIA_TRIGGER_INTERVAL 25	&gt;</body><body package="MQ-XIF">MQIA_TRIGGER_MSG_PRIORITY	&lt;C: #define MQIA_TRIGGER_MSG_PRIORITY 26	&gt;</body><body package="MQ-XIF">MQIA_TRIGGER_TYPE	&lt;C: #define MQIA_TRIGGER_TYPE 28	&gt;</body><body package="MQ-XIF">MQIA_USAGE	&lt;C: #define MQIA_USAGE 12	&gt;</body><body package="MQ-XIF">MQIA_USER_LIST	&lt;C: #define MQIA_USER_LIST 2000	&gt;</body><body package="MQ-XIF">MQICM_COMMIT_THEN_SEND	&lt;C: #define MQICM_COMMIT_THEN_SEND 48	&gt;</body><body package="MQ-XIF">MQICM_SEND_THEN_COMMIT	&lt;C: #define MQICM_SEND_THEN_COMMIT 49	&gt;</body><body package="MQ-XIF">MQIGQPA_ALTERNATE_OR_IGQ	&lt;C: #define MQIGQPA_ALTERNATE_OR_IGQ 4	&gt;</body><body package="MQ-XIF">MQIGQPA_CONTEXT	&lt;C: #define MQIGQPA_CONTEXT 2	&gt;</body><body package="MQ-XIF">MQIGQPA_DEFAULT	&lt;C: #define MQIGQPA_DEFAULT 1	&gt;</body><body package="MQ-XIF">MQIGQPA_ONLY_IGQ	&lt;C: #define MQIGQPA_ONLY_IGQ 3	&gt;</body><body package="MQ-XIF">MQIGQ_DISABLED	&lt;C: #define MQIGQ_DISABLED 0	&gt;</body><body package="MQ-XIF">MQIGQ_ENABLED	&lt;C: #define MQIGQ_ENABLED 1	&gt;</body><body package="MQ-XIF">MQIIH_CURRENT_VERSION	&lt;C: #define MQIIH_CURRENT_VERSION 1	&gt;</body><body package="MQ-XIF">MQIIH_DEFAULT	&lt;C: #define MQIIH_DEFAULT {MQIIH_STRUC_ID_ARRAY},MQIIH_VERSION_1,MQIIH_LENGTH_1,0,0,{MQFMT_NONE_ARRAY},MQIIH_NONE,{32,32,32,32,32,32,32,32},{32,32,32,32,32,32,32,32},{MQFMT_NONE_ARRAY},{MQIAUT_NONE_ARRAY},{MQITII_NONE_ARRAY},MQITS_NOT_IN_CONVERSATION,MQICM_COMMIT_THEN_SEND,MQISS_CHECK,32	&gt;</body><body package="MQ-XIF">MQIIH_LENGTH_1	&lt;C: #define MQIIH_LENGTH_1 84	&gt;</body><body package="MQ-XIF">MQIIH_NONE	&lt;C: #define MQIIH_NONE 0x00000000	&gt;</body><body package="MQ-XIF">MQIIH_STRUC_ID	&lt;C: #define MQIIH_STRUC_ID "IIH "	&gt;</body><body package="MQ-XIF">MQIIH_STRUC_ID_ARRAY	&lt;C: #define MQIIH_STRUC_ID_ARRAY 73,73,72,32	&gt;</body><body package="MQ-XIF">MQIIH_VERSION_1	&lt;C: #define MQIIH_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQISS_CHECK	&lt;C: #define MQISS_CHECK 67	&gt;</body><body package="MQ-XIF">MQISS_FULL	&lt;C: #define MQISS_FULL 70	&gt;</body><body package="MQ-XIF">MQITII_NONE	&lt;C: #define MQITII_NONE "                "	&gt;</body><body package="MQ-XIF">MQITII_NONE_ARRAY	&lt;C: #define MQITII_NONE_ARRAY 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	&gt;</body><body package="MQ-XIF">MQITS_ARCHITECTED	&lt;C: #define MQITS_ARCHITECTED 65	&gt;</body><body package="MQ-XIF">MQITS_IN_CONVERSATION	&lt;C: #define MQITS_IN_CONVERSATION 67	&gt;</body><body package="MQ-XIF">MQITS_NOT_IN_CONVERSATION	&lt;C: #define MQITS_NOT_IN_CONVERSATION 32	&gt;</body><body package="MQ-XIF">MQIT_CORREL_ID	&lt;C: #define MQIT_CORREL_ID 2	&gt;</body><body package="MQ-XIF">MQIT_GROUP_ID	&lt;C: #define MQIT_GROUP_ID 5	&gt;</body><body package="MQ-XIF">MQIT_MSG_ID	&lt;C: #define MQIT_MSG_ID 1	&gt;</body><body package="MQ-XIF">MQIT_MSG_TOKEN	&lt;C: #define MQIT_MSG_TOKEN 4	&gt;</body><body package="MQ-XIF">MQIT_NONE	&lt;C: #define MQIT_NONE 0	&gt;</body><body package="MQ-XIF">MQMD1_DEFAULT	&lt;C: #define MQMD1_DEFAULT {MQMD_STRUC_ID_ARRAY},MQMD_VERSION_1,MQRO_NONE,MQMT_DATAGRAM,MQEI_UNLIMITED,MQFB_NONE,MQENC_NATIVE,MQCCSI_Q_MGR,{MQFMT_NONE_ARRAY},MQPRI_PRIORITY_AS_Q_DEF,MQPER_PERSISTENCE_AS_Q_DEF,{MQMI_NONE_ARRAY},{MQCI_NONE_ARRAY},0,{""},{""},{""},{MQACT_NONE_ARRAY},{""},MQAT_NO_CONTEXT,{""},{""},{""},{""}	&gt;</body><body package="MQ-XIF">MQMDEF_NONE	&lt;C: #define MQMDEF_NONE 0x00000000	&gt;</body><body package="MQ-XIF">MQMDE_CURRENT_VERSION	&lt;C: #define MQMDE_CURRENT_VERSION 2	&gt;</body><body package="MQ-XIF">MQMDE_DEFAULT	&lt;C: #define MQMDE_DEFAULT {MQMDE_STRUC_ID_ARRAY},MQMDE_VERSION_2,MQMDE_LENGTH_2,MQENC_NATIVE,MQCCSI_UNDEFINED,{MQFMT_NONE_ARRAY},MQMDEF_NONE,{MQGI_NONE_ARRAY},1,0,MQMF_NONE,MQOL_UNDEFINED	&gt;</body><body package="MQ-XIF">MQMDE_LENGTH_2	&lt;C: #define MQMDE_LENGTH_2 72	&gt;</body><body package="MQ-XIF">MQMDE_STRUC_ID	&lt;C: #define MQMDE_STRUC_ID "MDE "	&gt;</body><body package="MQ-XIF">MQMDE_STRUC_ID_ARRAY	&lt;C: #define MQMDE_STRUC_ID_ARRAY 77,68,69,32	&gt;</body><body package="MQ-XIF">MQMDE_VERSION_2	&lt;C: #define MQMDE_VERSION_2 2	&gt;</body><body package="MQ-XIF">MQMDS_FIFO	&lt;C: #define MQMDS_FIFO 1	&gt;</body><body package="MQ-XIF">MQMDS_PRIORITY	&lt;C: #define MQMDS_PRIORITY 0	&gt;</body><body package="MQ-XIF">MQMD_CURRENT_VERSION	&lt;C: #define MQMD_CURRENT_VERSION 2	&gt;</body><body package="MQ-XIF">MQMD_DEFAULT	&lt;C: #define MQMD_DEFAULT {MQMD_STRUC_ID_ARRAY},MQMD_VERSION_1,MQRO_NONE,MQMT_DATAGRAM,MQEI_UNLIMITED,MQFB_NONE,MQENC_NATIVE,MQCCSI_Q_MGR,{MQFMT_NONE_ARRAY},MQPRI_PRIORITY_AS_Q_DEF,MQPER_PERSISTENCE_AS_Q_DEF,{MQMI_NONE_ARRAY},{MQCI_NONE_ARRAY},0,{""},{""},{""},{MQACT_NONE_ARRAY},{""},MQAT_NO_CONTEXT,{""},{""},{""},{""},{MQGI_NONE_ARRAY},1,0,MQMF_NONE,MQOL_UNDEFINED	&gt;</body><body package="MQ-XIF">MQMD_STRUC_ID	&lt;C: #define MQMD_STRUC_ID "MD  "	&gt;</body><body package="MQ-XIF">MQMD_STRUC_ID_ARRAY	&lt;C: #define MQMD_STRUC_ID_ARRAY 77,68,32,32	&gt;</body><body package="MQ-XIF">MQMD_VERSION_1	&lt;C: #define MQMD_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQMD_VERSION_2	&lt;C: #define MQMD_VERSION_2 2	&gt;</body><body package="MQ-XIF">MQMF_ACCEPT_UNSUP_IF_XMIT_MASK	&lt;C: #define MQMF_ACCEPT_UNSUP_IF_XMIT_MASK 0x000FF000	&gt;</body><body package="MQ-XIF">MQMF_ACCEPT_UNSUP_MASK	&lt;C: #define MQMF_ACCEPT_UNSUP_MASK 4293918720	&gt;</body><body package="MQ-XIF">MQMF_LAST_MSG_IN_GROUP	&lt;C: #define MQMF_LAST_MSG_IN_GROUP 0x00000010	&gt;</body><body package="MQ-XIF">MQMF_LAST_SEGMENT	&lt;C: #define MQMF_LAST_SEGMENT 0x00000004	&gt;</body><body package="MQ-XIF">MQMF_MSG_IN_GROUP	&lt;C: #define MQMF_MSG_IN_GROUP 0x00000008	&gt;</body><body package="MQ-XIF">MQMF_NONE	&lt;C: #define MQMF_NONE 0x00000000	&gt;</body><body package="MQ-XIF">MQMF_REJECT_UNSUP_MASK	&lt;C: #define MQMF_REJECT_UNSUP_MASK 0x00000FFF	&gt;</body><body package="MQ-XIF">MQMF_SEGMENT	&lt;C: #define MQMF_SEGMENT 0x00000002	&gt;</body><body package="MQ-XIF">MQMF_SEGMENTATION_ALLOWED	&lt;C: #define MQMF_SEGMENTATION_ALLOWED 0x00000001	&gt;</body><body package="MQ-XIF">MQMF_SEGMENTATION_INHIBITED	&lt;C: #define MQMF_SEGMENTATION_INHIBITED 0x00000000	&gt;</body><body package="MQ-XIF">MQMI_NONE	&lt;C: #define MQMI_NONE "                        "	&gt;</body><body package="MQ-XIF">MQMI_NONE_ARRAY	&lt;C: #define MQMI_NONE_ARRAY 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	&gt;</body><body package="MQ-XIF">MQMO_MATCH_CORREL_ID	&lt;C: #define MQMO_MATCH_CORREL_ID 0x00000002	&gt;</body><body package="MQ-XIF">MQMO_MATCH_GROUP_ID	&lt;C: #define MQMO_MATCH_GROUP_ID 0x00000004	&gt;</body><body package="MQ-XIF">MQMO_MATCH_MSG_ID	&lt;C: #define MQMO_MATCH_MSG_ID 0x00000001	&gt;</body><body package="MQ-XIF">MQMO_MATCH_MSG_SEQ_NUMBER	&lt;C: #define MQMO_MATCH_MSG_SEQ_NUMBER 0x00000008	&gt;</body><body package="MQ-XIF">MQMO_MATCH_MSG_TOKEN	&lt;C: #define MQMO_MATCH_MSG_TOKEN 0x00000020	&gt;</body><body package="MQ-XIF">MQMO_MATCH_OFFSET	&lt;C: #define MQMO_MATCH_OFFSET 0x00000010	&gt;</body><body package="MQ-XIF">MQMO_NONE	&lt;C: #define MQMO_NONE 0x00000000	&gt;</body><body package="MQ-XIF">MQMTOK_NONE	&lt;C: #define MQMTOK_NONE "                "	&gt;</body><body package="MQ-XIF">MQMTOK_NONE_ARRAY	&lt;C: #define MQMTOK_NONE_ARRAY 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	&gt;</body><body package="MQ-XIF">MQMT_APPL_FIRST	&lt;C: #define MQMT_APPL_FIRST 65536	&gt;</body><body package="MQ-XIF">MQMT_APPL_LAST	&lt;C: #define MQMT_APPL_LAST 999999999	&gt;</body><body package="MQ-XIF">MQMT_DATAGRAM	&lt;C: #define MQMT_DATAGRAM 8	&gt;</body><body package="MQ-XIF">MQMT_MQE_FIELDS	&lt;C: #define MQMT_MQE_FIELDS 113	&gt;</body><body package="MQ-XIF">MQMT_MQE_FIELDS_FROM_MQE	&lt;C: #define MQMT_MQE_FIELDS_FROM_MQE 112	&gt;</body><body package="MQ-XIF">MQMT_REPLY	&lt;C: #define MQMT_REPLY 2	&gt;</body><body package="MQ-XIF">MQMT_REPORT	&lt;C: #define MQMT_REPORT 4	&gt;</body><body package="MQ-XIF">MQMT_REQUEST	&lt;C: #define MQMT_REQUEST 1	&gt;</body><body package="MQ-XIF">MQMT_SYSTEM_FIRST	&lt;C: #define MQMT_SYSTEM_FIRST 1	&gt;</body><body package="MQ-XIF">MQMT_SYSTEM_LAST	&lt;C: #define MQMT_SYSTEM_LAST 65535	&gt;</body><body package="MQ-XIF">MQNC_MAX_NAMELIST_NAME_COUNT	&lt;C: #define MQNC_MAX_NAMELIST_NAME_COUNT 256	&gt;</body><body package="MQ-XIF">MQNT_ALL	&lt;C: #define MQNT_ALL 1001	&gt;</body><body package="MQ-XIF">MQNT_AUTH_INFO	&lt;C: #define MQNT_AUTH_INFO 4	&gt;</body><body package="MQ-XIF">MQNT_CLUSTER	&lt;C: #define MQNT_CLUSTER 2	&gt;</body><body package="MQ-XIF">MQNT_NONE	&lt;C: #define MQNT_NONE 0	&gt;</body><body package="MQ-XIF">MQNT_Q	&lt;C: #define MQNT_Q 1	&gt;</body><body package="MQ-XIF">MQNVS_APPL_TYPE	&lt;C: #define MQNVS_APPL_TYPE "OPT_APP_GRP "	&gt;</body><body package="MQ-XIF">MQNVS_MSG_TYPE	&lt;C: #define MQNVS_MSG_TYPE "OPT_MSG_TYPE "	&gt;</body><body package="MQ-XIF">MQOD_CURRENT_LENGTH	&lt;C: #define MQOD_CURRENT_LENGTH 336	&gt;</body><body package="MQ-XIF">MQOD_CURRENT_VERSION	&lt;C: #define MQOD_CURRENT_VERSION 3	&gt;</body><body package="MQ-XIF">MQOD_DEFAULT	&lt;C: #define MQOD_DEFAULT {MQOD_STRUC_ID_ARRAY},MQOD_VERSION_1,MQOT_Q,{""},{""},{"AMQ.*"},{""},0,0,0,0,0,0,NULL,NULL,{MQSID_NONE_ARRAY},{""},{""}	&gt;</body><body package="MQ-XIF">MQOD_STRUC_ID	&lt;C: #define MQOD_STRUC_ID "OD  "	&gt;</body><body package="MQ-XIF">MQOD_STRUC_ID_ARRAY	&lt;C: #define MQOD_STRUC_ID_ARRAY 79,68,32,32	&gt;</body><body package="MQ-XIF">MQOD_VERSION_1	&lt;C: #define MQOD_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQOD_VERSION_2	&lt;C: #define MQOD_VERSION_2 2	&gt;</body><body package="MQ-XIF">MQOD_VERSION_3	&lt;C: #define MQOD_VERSION_3 3	&gt;</body><body package="MQ-XIF">MQOII_NONE	&lt;C: #define MQOII_NONE "                        "	&gt;</body><body package="MQ-XIF">MQOII_NONE_ARRAY	&lt;C: #define MQOII_NONE_ARRAY 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	&gt;</body><body package="MQ-XIF">MQOL_UNDEFINED	&lt;C: #define MQOL_UNDEFINED (-1)	&gt;</body><body package="MQ-XIF">MQOO_ALTERNATE_USER_AUTHORITY	&lt;C: #define MQOO_ALTERNATE_USER_AUTHORITY 0x00001000	&gt;</body><body package="MQ-XIF">MQOO_BIND_AS_Q_DEF	&lt;C: #define MQOO_BIND_AS_Q_DEF 0x00000000	&gt;</body><body package="MQ-XIF">MQOO_BIND_NOT_FIXED	&lt;C: #define MQOO_BIND_NOT_FIXED 0x00008000	&gt;</body><body package="MQ-XIF">MQOO_BIND_ON_OPEN	&lt;C: #define MQOO_BIND_ON_OPEN 0x00004000	&gt;</body><body package="MQ-XIF">MQOO_BROWSE	&lt;C: #define MQOO_BROWSE 0x00000008	&gt;</body><body package="MQ-XIF">MQOO_FAIL_IF_QUIESCING	&lt;C: #define MQOO_FAIL_IF_QUIESCING 0x00002000	&gt;</body><body package="MQ-XIF">MQOO_INPUT_AS_Q_DEF	&lt;C: #define MQOO_INPUT_AS_Q_DEF 0x00000001	&gt;</body><body package="MQ-XIF">MQOO_INPUT_EXCLUSIVE	&lt;C: #define MQOO_INPUT_EXCLUSIVE 0x00000004	&gt;</body><body package="MQ-XIF">MQOO_INPUT_SHARED	&lt;C: #define MQOO_INPUT_SHARED 0x00000002	&gt;</body><body package="MQ-XIF">MQOO_INQUIRE	&lt;C: #define MQOO_INQUIRE 0x00000020	&gt;</body><body package="MQ-XIF">MQOO_OUTPUT	&lt;C: #define MQOO_OUTPUT 0x00000010	&gt;</body><body package="MQ-XIF">MQOO_PASS_ALL_CONTEXT	&lt;C: #define MQOO_PASS_ALL_CONTEXT 0x00000200	&gt;</body><body package="MQ-XIF">MQOO_PASS_IDENTITY_CONTEXT	&lt;C: #define MQOO_PASS_IDENTITY_CONTEXT 0x00000100	&gt;</body><body package="MQ-XIF">MQOO_RESOLVE_NAMES	&lt;C: #define MQOO_RESOLVE_NAMES 0x00010000	&gt;</body><body package="MQ-XIF">MQOO_SAVE_ALL_CONTEXT	&lt;C: #define MQOO_SAVE_ALL_CONTEXT 0x00000080	&gt;</body><body package="MQ-XIF">MQOO_SET	&lt;C: #define MQOO_SET 0x00000040	&gt;</body><body package="MQ-XIF">MQOO_SET_ALL_CONTEXT	&lt;C: #define MQOO_SET_ALL_CONTEXT 0x00000800	&gt;</body><body package="MQ-XIF">MQOO_SET_IDENTITY_CONTEXT	&lt;C: #define MQOO_SET_IDENTITY_CONTEXT 0x00000400	&gt;</body><body package="MQ-XIF">MQOR_DEFAULT	&lt;C: #define MQOR_DEFAULT {""},{""}	&gt;</body><body package="MQ-XIF">MQOT_ALIAS_Q	&lt;C: #define MQOT_ALIAS_Q 1002	&gt;</body><body package="MQ-XIF">MQOT_ALL	&lt;C: #define MQOT_ALL 1001	&gt;</body><body package="MQ-XIF">MQOT_AUTH_INFO	&lt;C: #define MQOT_AUTH_INFO 7	&gt;</body><body package="MQ-XIF">MQOT_CF_STRUC	&lt;C: #define MQOT_CF_STRUC 10	&gt;</body><body package="MQ-XIF">MQOT_CHANNEL	&lt;C: #define MQOT_CHANNEL 6	&gt;</body><body package="MQ-XIF">MQOT_CLNTCONN_CHANNEL	&lt;C: #define MQOT_CLNTCONN_CHANNEL 1014	&gt;</body><body package="MQ-XIF">MQOT_CURRENT_CHANNEL	&lt;C: #define MQOT_CURRENT_CHANNEL 1011	&gt;</body><body package="MQ-XIF">MQOT_LOCAL_Q	&lt;C: #define MQOT_LOCAL_Q 1004	&gt;</body><body package="MQ-XIF">MQOT_MODEL_Q	&lt;C: #define MQOT_MODEL_Q 1003	&gt;</body><body package="MQ-XIF">MQOT_NAMELIST	&lt;C: #define MQOT_NAMELIST 2	&gt;</body><body package="MQ-XIF">MQOT_PROCESS	&lt;C: #define MQOT_PROCESS 3	&gt;</body><body package="MQ-XIF">MQOT_Q	&lt;C: #define MQOT_Q 1	&gt;</body><body package="MQ-XIF">MQOT_Q_MGR	&lt;C: #define MQOT_Q_MGR 5	&gt;</body><body package="MQ-XIF">MQOT_RECEIVER_CHANNEL	&lt;C: #define MQOT_RECEIVER_CHANNEL 1010	&gt;</body><body package="MQ-XIF">MQOT_REMOTE_Q	&lt;C: #define MQOT_REMOTE_Q 1005	&gt;</body><body package="MQ-XIF">MQOT_REQUESTER_CHANNEL	&lt;C: #define MQOT_REQUESTER_CHANNEL 1009	&gt;</body><body package="MQ-XIF">MQOT_RESERVED_1	&lt;C: #define MQOT_RESERVED_1 999	&gt;</body><body package="MQ-XIF">MQOT_SAVED_CHANNEL	&lt;C: #define MQOT_SAVED_CHANNEL 1012	&gt;</body><body package="MQ-XIF">MQOT_SENDER_CHANNEL	&lt;C: #define MQOT_SENDER_CHANNEL 1007	&gt;</body><body package="MQ-XIF">MQOT_SERVER_CHANNEL	&lt;C: #define MQOT_SERVER_CHANNEL 1008	&gt;</body><body package="MQ-XIF">MQOT_STORAGE_CLASS	&lt;C: #define MQOT_STORAGE_CLASS 4	&gt;</body><body package="MQ-XIF">MQOT_SVRCONN_CHANNEL	&lt;C: #define MQOT_SVRCONN_CHANNEL 1013	&gt;</body><body package="MQ-XIF">MQPER_NOT_PERSISTENT	&lt;C: #define MQPER_NOT_PERSISTENT 0	&gt;</body><body package="MQ-XIF">MQPER_PERSISTENCE_AS_Q_DEF	&lt;C: #define MQPER_PERSISTENCE_AS_Q_DEF 2	&gt;</body><body package="MQ-XIF">MQPER_PERSISTENT	&lt;C: #define MQPER_PERSISTENT 1	&gt;</body><body package="MQ-XIF">MQPL_AIX	&lt;C: #define MQPL_AIX 3	&gt;</body><body package="MQ-XIF">MQPL_MVS	&lt;C: #define MQPL_MVS 1	&gt;</body><body package="MQ-XIF">MQPL_NSK	&lt;C: #define MQPL_NSK 13	&gt;</body><body package="MQ-XIF">MQPL_OS2	&lt;C: #define MQPL_OS2 2	&gt;</body><body package="MQ-XIF">MQPL_OS390	&lt;C: #define MQPL_OS390 1	&gt;</body><body package="MQ-XIF">MQPL_OS400	&lt;C: #define MQPL_OS400 4	&gt;</body><body package="MQ-XIF">MQPL_UNIX	&lt;C: #define MQPL_UNIX 3	&gt;</body><body package="MQ-XIF">MQPL_VMS	&lt;C: #define MQPL_VMS 12	&gt;</body><body package="MQ-XIF">MQPL_WINDOWS	&lt;C: #define MQPL_WINDOWS 5	&gt;</body><body package="MQ-XIF">MQPL_WINDOWS_NT	&lt;C: #define MQPL_WINDOWS_NT 11	&gt;</body><body package="MQ-XIF">MQPL_ZOS	&lt;C: #define MQPL_ZOS 1	&gt;</body><body package="MQ-XIF">MQPMO_ALTERNATE_USER_AUTHORITY	&lt;C: #define MQPMO_ALTERNATE_USER_AUTHORITY 0x00001000	&gt;</body><body package="MQ-XIF">MQPMO_CURRENT_LENGTH	&lt;C: #define MQPMO_CURRENT_LENGTH 152	&gt;</body><body package="MQ-XIF">MQPMO_CURRENT_VERSION	&lt;C: #define MQPMO_CURRENT_VERSION 2	&gt;</body><body package="MQ-XIF">MQPMO_DEFAULT	&lt;C: #define MQPMO_DEFAULT {MQPMO_STRUC_ID_ARRAY},MQPMO_VERSION_1,MQPMO_NONE,(-1),0,0,0,0,{""},{""},0,MQPMRF_NONE,0,0,NULL,NULL	&gt;</body><body package="MQ-XIF">MQPMO_DEFAULT_CONTEXT	&lt;C: #define MQPMO_DEFAULT_CONTEXT 0x00000020	&gt;</body><body package="MQ-XIF">MQPMO_FAIL_IF_QUIESCING	&lt;C: #define MQPMO_FAIL_IF_QUIESCING 0x00002000	&gt;</body><body package="MQ-XIF">MQPMO_LOGICAL_ORDER	&lt;C: #define MQPMO_LOGICAL_ORDER 0x00008000	&gt;</body><body package="MQ-XIF">MQPMO_NEW_CORREL_ID	&lt;C: #define MQPMO_NEW_CORREL_ID 0x00000080	&gt;</body><body package="MQ-XIF">MQPMO_NEW_MSG_ID	&lt;C: #define MQPMO_NEW_MSG_ID 0x00000040	&gt;</body><body package="MQ-XIF">MQPMO_NONE	&lt;C: #define MQPMO_NONE 0x00000000	&gt;</body><body package="MQ-XIF">MQPMO_NO_CONTEXT	&lt;C: #define MQPMO_NO_CONTEXT 0x00004000	&gt;</body><body package="MQ-XIF">MQPMO_NO_SYNCPOINT	&lt;C: #define MQPMO_NO_SYNCPOINT 0x00000004	&gt;</body><body package="MQ-XIF">MQPMO_PASS_ALL_CONTEXT	&lt;C: #define MQPMO_PASS_ALL_CONTEXT 0x00000200	&gt;</body><body package="MQ-XIF">MQPMO_PASS_IDENTITY_CONTEXT	&lt;C: #define MQPMO_PASS_IDENTITY_CONTEXT 0x00000100	&gt;</body><body package="MQ-XIF">MQPMO_SET_ALL_CONTEXT	&lt;C: #define MQPMO_SET_ALL_CONTEXT 0x00000800	&gt;</body><body package="MQ-XIF">MQPMO_SET_IDENTITY_CONTEXT	&lt;C: #define MQPMO_SET_IDENTITY_CONTEXT 0x00000400	&gt;</body><body package="MQ-XIF">MQPMO_STRUC_ID	&lt;C: #define MQPMO_STRUC_ID "PMO "	&gt;</body><body package="MQ-XIF">MQPMO_STRUC_ID_ARRAY	&lt;C: #define MQPMO_STRUC_ID_ARRAY 80,77,79,32	&gt;</body><body package="MQ-XIF">MQPMO_SYNCPOINT	&lt;C: #define MQPMO_SYNCPOINT 0x00000002	&gt;</body><body package="MQ-XIF">MQPMO_VERSION_1	&lt;C: #define MQPMO_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQPMO_VERSION_2	&lt;C: #define MQPMO_VERSION_2 2	&gt;</body><body package="MQ-XIF">MQPMRF_ACCOUNTING_TOKEN	&lt;C: #define MQPMRF_ACCOUNTING_TOKEN 0x00000010	&gt;</body><body package="MQ-XIF">MQPMRF_CORREL_ID	&lt;C: #define MQPMRF_CORREL_ID 0x00000002	&gt;</body><body package="MQ-XIF">MQPMRF_FEEDBACK	&lt;C: #define MQPMRF_FEEDBACK 0x00000008	&gt;</body><body package="MQ-XIF">MQPMRF_GROUP_ID	&lt;C: #define MQPMRF_GROUP_ID 0x00000004	&gt;</body><body package="MQ-XIF">MQPMRF_MSG_ID	&lt;C: #define MQPMRF_MSG_ID 0x00000001	&gt;</body><body package="MQ-XIF">MQPMRF_NONE	&lt;C: #define MQPMRF_NONE 0x00000000	&gt;</body><body package="MQ-XIF">MQPOINTER	&lt;C: #define MQPOINTER *	&gt;</body><body package="MQ-XIF">MQPRI_PRIORITY_AS_Q_DEF	&lt;C: #define MQPRI_PRIORITY_AS_Q_DEF (-1)	&gt;</body><body package="MQ-XIF">MQQA_BACKOUT_HARDENED	&lt;C: #define MQQA_BACKOUT_HARDENED 1	&gt;</body><body package="MQ-XIF">MQQA_BACKOUT_NOT_HARDENED	&lt;C: #define MQQA_BACKOUT_NOT_HARDENED 0	&gt;</body><body package="MQ-XIF">MQQA_GET_ALLOWED	&lt;C: #define MQQA_GET_ALLOWED 0	&gt;</body><body package="MQ-XIF">MQQA_GET_INHIBITED	&lt;C: #define MQQA_GET_INHIBITED 1	&gt;</body><body package="MQ-XIF">MQQA_NOT_SHAREABLE	&lt;C: #define MQQA_NOT_SHAREABLE 0	&gt;</body><body package="MQ-XIF">MQQA_PUT_ALLOWED	&lt;C: #define MQQA_PUT_ALLOWED 0	&gt;</body><body package="MQ-XIF">MQQA_PUT_INHIBITED	&lt;C: #define MQQA_PUT_INHIBITED 1	&gt;</body><body package="MQ-XIF">MQQA_SHAREABLE	&lt;C: #define MQQA_SHAREABLE 1	&gt;</body><body package="MQ-XIF">MQQDT_PERMANENT_DYNAMIC	&lt;C: #define MQQDT_PERMANENT_DYNAMIC 2	&gt;</body><body package="MQ-XIF">MQQDT_PREDEFINED	&lt;C: #define MQQDT_PREDEFINED 1	&gt;</body><body package="MQ-XIF">MQQDT_SHARED_DYNAMIC	&lt;C: #define MQQDT_SHARED_DYNAMIC 4	&gt;</body><body package="MQ-XIF">MQQDT_TEMPORARY_DYNAMIC	&lt;C: #define MQQDT_TEMPORARY_DYNAMIC 3	&gt;</body><body package="MQ-XIF">MQQSGD_COPY	&lt;C: #define MQQSGD_COPY 1	&gt;</body><body package="MQ-XIF">MQQSGD_GROUP	&lt;C: #define MQQSGD_GROUP 3	&gt;</body><body package="MQ-XIF">MQQSGD_Q_MGR	&lt;C: #define MQQSGD_Q_MGR 0	&gt;</body><body package="MQ-XIF">MQQSGD_SHARED	&lt;C: #define MQQSGD_SHARED 2	&gt;</body><body package="MQ-XIF">MQQT_ALIAS	&lt;C: #define MQQT_ALIAS 3	&gt;</body><body package="MQ-XIF">MQQT_ALL	&lt;C: #define MQQT_ALL 1001	&gt;</body><body package="MQ-XIF">MQQT_CLUSTER	&lt;C: #define MQQT_CLUSTER 7	&gt;</body><body package="MQ-XIF">MQQT_LOCAL	&lt;C: #define MQQT_LOCAL 1	&gt;</body><body package="MQ-XIF">MQQT_MODEL	&lt;C: #define MQQT_MODEL 2	&gt;</body><body package="MQ-XIF">MQQT_REMOTE	&lt;C: #define MQQT_REMOTE 6	&gt;</body><body package="MQ-XIF">MQRC_ADAPTER_CONN_LOAD_ERROR	&lt;C: #define MQRC_ADAPTER_CONN_LOAD_ERROR 2129	&gt;</body><body package="MQ-XIF">MQRC_ADAPTER_CONV_LOAD_ERROR	&lt;C: #define MQRC_ADAPTER_CONV_LOAD_ERROR 2133	&gt;</body><body package="MQ-XIF">MQRC_ADAPTER_DEFS_ERROR	&lt;C: #define MQRC_ADAPTER_DEFS_ERROR 2131	&gt;</body><body package="MQ-XIF">MQRC_ADAPTER_DEFS_LOAD_ERROR	&lt;C: #define MQRC_ADAPTER_DEFS_LOAD_ERROR 2132	&gt;</body><body package="MQ-XIF">MQRC_ADAPTER_DISC_LOAD_ERROR	&lt;C: #define MQRC_ADAPTER_DISC_LOAD_ERROR 2138	&gt;</body><body package="MQ-XIF">MQRC_ADAPTER_NOT_AVAILABLE	&lt;C: #define MQRC_ADAPTER_NOT_AVAILABLE 2204	&gt;</body><body package="MQ-XIF">MQRC_ADAPTER_SERV_LOAD_ERROR	&lt;C: #define MQRC_ADAPTER_SERV_LOAD_ERROR 2130	&gt;</body><body package="MQ-XIF">MQRC_ADAPTER_STORAGE_SHORTAGE	&lt;C: #define MQRC_ADAPTER_STORAGE_SHORTAGE 2127	&gt;</body><body package="MQ-XIF">MQRC_AIR_ERROR	&lt;C: #define MQRC_AIR_ERROR 2385	&gt;</body><body package="MQ-XIF">MQRC_ALIAS_BASE_Q_TYPE_ERROR	&lt;C: #define MQRC_ALIAS_BASE_Q_TYPE_ERROR 2001	&gt;</body><body package="MQ-XIF">MQRC_ALREADY_CONNECTED	&lt;C: #define MQRC_ALREADY_CONNECTED 2002	&gt;</body><body package="MQ-XIF">MQRC_ANOTHER_Q_MGR_CONNECTED	&lt;C: #define MQRC_ANOTHER_Q_MGR_CONNECTED 2103	&gt;</body><body package="MQ-XIF">MQRC_API_EXIT_ERROR	&lt;C: #define MQRC_API_EXIT_ERROR 2374	&gt;</body><body package="MQ-XIF">MQRC_API_EXIT_INIT_ERROR	&lt;C: #define MQRC_API_EXIT_INIT_ERROR 2375	&gt;</body><body package="MQ-XIF">MQRC_API_EXIT_LOAD_ERROR	&lt;C: #define MQRC_API_EXIT_LOAD_ERROR 2183	&gt;</body><body package="MQ-XIF">MQRC_API_EXIT_NOT_FOUND	&lt;C: #define MQRC_API_EXIT_NOT_FOUND 2182	&gt;</body><body package="MQ-XIF">MQRC_API_EXIT_TERM_ERROR	&lt;C: #define MQRC_API_EXIT_TERM_ERROR 2376	&gt;</body><body package="MQ-XIF">MQRC_APPL_FIRST	&lt;C: #define MQRC_APPL_FIRST 900	&gt;</body><body package="MQ-XIF">MQRC_APPL_LAST	&lt;C: #define MQRC_APPL_LAST 999	&gt;</body><body package="MQ-XIF">MQRC_ASID_MISMATCH	&lt;C: #define MQRC_ASID_MISMATCH 2157	&gt;</body><body package="MQ-XIF">MQRC_ATTRIBUTE_LOCKED	&lt;C: #define MQRC_ATTRIBUTE_LOCKED 6104	&gt;</body><body package="MQ-XIF">MQRC_AUTH_INFO_CONN_NAME_ERROR	&lt;C: #define MQRC_AUTH_INFO_CONN_NAME_ERROR 2387	&gt;</body><body package="MQ-XIF">MQRC_AUTH_INFO_REC_COUNT_ERROR	&lt;C: #define MQRC_AUTH_INFO_REC_COUNT_ERROR 2383	&gt;</body><body package="MQ-XIF">MQRC_AUTH_INFO_REC_ERROR	&lt;C: #define MQRC_AUTH_INFO_REC_ERROR 2384	&gt;</body><body package="MQ-XIF">MQRC_AUTH_INFO_TYPE_ERROR	&lt;C: #define MQRC_AUTH_INFO_TYPE_ERROR 2386	&gt;</body><body package="MQ-XIF">MQRC_BACKED_OUT	&lt;C: #define MQRC_BACKED_OUT 2003	&gt;</body><body package="MQ-XIF">MQRC_BACKOUT_THRESHOLD_REACHED	&lt;C: #define MQRC_BACKOUT_THRESHOLD_REACHED 2362	&gt;</body><body package="MQ-XIF">MQRC_BAG_CONVERSION_ERROR	&lt;C: #define MQRC_BAG_CONVERSION_ERROR 2303	&gt;</body><body package="MQ-XIF">MQRC_BAG_WRONG_TYPE	&lt;C: #define MQRC_BAG_WRONG_TYPE 2326	&gt;</body><body package="MQ-XIF">MQRC_BINARY_DATA_LENGTH_ERROR	&lt;C: #define MQRC_BINARY_DATA_LENGTH_ERROR 6111	&gt;</body><body package="MQ-XIF">MQRC_BO_ERROR	&lt;C: #define MQRC_BO_ERROR 2134	&gt;</body><body package="MQ-XIF">MQRC_BRIDGE_STARTED	&lt;C: #define MQRC_BRIDGE_STARTED 2125	&gt;</body><body package="MQ-XIF">MQRC_BRIDGE_STOPPED	&lt;C: #define MQRC_BRIDGE_STOPPED 2126	&gt;</body><body package="MQ-XIF">MQRC_BUFFER_ERROR	&lt;C: #define MQRC_BUFFER_ERROR 2004	&gt;</body><body package="MQ-XIF">MQRC_BUFFER_LENGTH_ERROR	&lt;C: #define MQRC_BUFFER_LENGTH_ERROR 2005	&gt;</body><body package="MQ-XIF">MQRC_BUFFER_NOT_AUTOMATIC	&lt;C: #define MQRC_BUFFER_NOT_AUTOMATIC 6112	&gt;</body><body package="MQ-XIF">MQRC_CALL_IN_PROGRESS	&lt;C: #define MQRC_CALL_IN_PROGRESS 2219	&gt;</body><body package="MQ-XIF">MQRC_CD_ERROR	&lt;C: #define MQRC_CD_ERROR 2277	&gt;</body><body package="MQ-XIF">MQRC_CFH_ERROR	&lt;C: #define MQRC_CFH_ERROR 2235	&gt;</body><body package="MQ-XIF">MQRC_CFIL_ERROR	&lt;C: #define MQRC_CFIL_ERROR 2236	&gt;</body><body package="MQ-XIF">MQRC_CFIN_ERROR	&lt;C: #define MQRC_CFIN_ERROR 2237	&gt;</body><body package="MQ-XIF">MQRC_CFSL_ERROR	&lt;C: #define MQRC_CFSL_ERROR 2238	&gt;</body><body package="MQ-XIF">MQRC_CFST_ERROR	&lt;C: #define MQRC_CFST_ERROR 2239	&gt;</body><body package="MQ-XIF">MQRC_CF_NOT_AVAILABLE	&lt;C: #define MQRC_CF_NOT_AVAILABLE 2345	&gt;</body><body package="MQ-XIF">MQRC_CF_STRUC_AUTH_FAILED	&lt;C: #define MQRC_CF_STRUC_AUTH_FAILED 2348	&gt;</body><body package="MQ-XIF">MQRC_CF_STRUC_ERROR	&lt;C: #define MQRC_CF_STRUC_ERROR 2349	&gt;</body><body package="MQ-XIF">MQRC_CF_STRUC_FAILED	&lt;C: #define MQRC_CF_STRUC_FAILED 2373	&gt;</body><body package="MQ-XIF">MQRC_CF_STRUC_IN_USE	&lt;C: #define MQRC_CF_STRUC_IN_USE 2346	&gt;</body><body package="MQ-XIF">MQRC_CF_STRUC_LIST_HDR_IN_USE	&lt;C: #define MQRC_CF_STRUC_LIST_HDR_IN_USE 2347	&gt;</body><body package="MQ-XIF">MQRC_CHANNEL_ACTIVATED	&lt;C: #define MQRC_CHANNEL_ACTIVATED 2295	&gt;</body><body package="MQ-XIF">MQRC_CHANNEL_AUTO_DEF_ERROR	&lt;C: #define MQRC_CHANNEL_AUTO_DEF_ERROR 2234	&gt;</body><body package="MQ-XIF">MQRC_CHANNEL_AUTO_DEF_OK	&lt;C: #define MQRC_CHANNEL_AUTO_DEF_OK 2233	&gt;</body><body package="MQ-XIF">MQRC_CHANNEL_CONV_ERROR	&lt;C: #define MQRC_CHANNEL_CONV_ERROR 2284	&gt;</body><body package="MQ-XIF">MQRC_CHANNEL_NOT_ACTIVATED	&lt;C: #define MQRC_CHANNEL_NOT_ACTIVATED 2296	&gt;</body><body package="MQ-XIF">MQRC_CHANNEL_SSL_ERROR	&lt;C: #define MQRC_CHANNEL_SSL_ERROR 2371	&gt;</body><body package="MQ-XIF">MQRC_CHANNEL_STARTED	&lt;C: #define MQRC_CHANNEL_STARTED 2282	&gt;</body><body package="MQ-XIF">MQRC_CHANNEL_STOPPED	&lt;C: #define MQRC_CHANNEL_STOPPED 2283	&gt;</body><body package="MQ-XIF">MQRC_CHANNEL_STOPPED_BY_USER	&lt;C: #define MQRC_CHANNEL_STOPPED_BY_USER 2279	&gt;</body><body package="MQ-XIF">MQRC_CHAR_ATTRS_ERROR	&lt;C: #define MQRC_CHAR_ATTRS_ERROR 2007	&gt;</body><body package="MQ-XIF">MQRC_CHAR_ATTRS_TOO_SHORT	&lt;C: #define MQRC_CHAR_ATTRS_TOO_SHORT 2008	&gt;</body><body package="MQ-XIF">MQRC_CHAR_ATTR_LENGTH_ERROR	&lt;C: #define MQRC_CHAR_ATTR_LENGTH_ERROR 2006	&gt;</body><body package="MQ-XIF">MQRC_CHAR_CONVERSION_ERROR	&lt;C: #define MQRC_CHAR_CONVERSION_ERROR 2340	&gt;</body><body package="MQ-XIF">MQRC_CICS_BRIDGE_RESTRICTION	&lt;C: #define MQRC_CICS_BRIDGE_RESTRICTION 2187	&gt;</body><body package="MQ-XIF">MQRC_CICS_WAIT_FAILED	&lt;C: #define MQRC_CICS_WAIT_FAILED 2140	&gt;</body><body package="MQ-XIF">MQRC_CLIENT_CONN_ERROR	&lt;C: #define MQRC_CLIENT_CONN_ERROR 2278	&gt;</body><body package="MQ-XIF">MQRC_CLUSTER_EXIT_ERROR	&lt;C: #define MQRC_CLUSTER_EXIT_ERROR 2266	&gt;</body><body package="MQ-XIF">MQRC_CLUSTER_EXIT_LOAD_ERROR	&lt;C: #define MQRC_CLUSTER_EXIT_LOAD_ERROR 2267	&gt;</body><body package="MQ-XIF">MQRC_CLUSTER_PUT_INHIBITED	&lt;C: #define MQRC_CLUSTER_PUT_INHIBITED 2268	&gt;</body><body package="MQ-XIF">MQRC_CLUSTER_RESOLUTION_ERROR	&lt;C: #define MQRC_CLUSTER_RESOLUTION_ERROR 2189	&gt;</body><body package="MQ-XIF">MQRC_CLUSTER_RESOURCE_ERROR	&lt;C: #define MQRC_CLUSTER_RESOURCE_ERROR 2269	&gt;</body><body package="MQ-XIF">MQRC_CMD_SERVER_NOT_AVAILABLE	&lt;C: #define MQRC_CMD_SERVER_NOT_AVAILABLE 2322	&gt;</body><body package="MQ-XIF">MQRC_CNO_ERROR	&lt;C: #define MQRC_CNO_ERROR 2139	&gt;</body><body package="MQ-XIF">MQRC_CODED_CHAR_SET_ID_ERROR	&lt;C: #define MQRC_CODED_CHAR_SET_ID_ERROR 2330	&gt;</body><body package="MQ-XIF">MQRC_COD_NOT_VALID_FOR_XCF_Q	&lt;C: #define MQRC_COD_NOT_VALID_FOR_XCF_Q 2106	&gt;</body><body package="MQ-XIF">MQRC_COMMAND_TYPE_ERROR	&lt;C: #define MQRC_COMMAND_TYPE_ERROR 2300	&gt;</body><body package="MQ-XIF">MQRC_CONFIG_CHANGE_OBJECT	&lt;C: #define MQRC_CONFIG_CHANGE_OBJECT 2368	&gt;</body><body package="MQ-XIF">MQRC_CONFIG_CREATE_OBJECT	&lt;C: #define MQRC_CONFIG_CREATE_OBJECT 2367	&gt;</body><body package="MQ-XIF">MQRC_CONFIG_DELETE_OBJECT	&lt;C: #define MQRC_CONFIG_DELETE_OBJECT 2369	&gt;</body><body package="MQ-XIF">MQRC_CONFIG_REFRESH_OBJECT	&lt;C: #define MQRC_CONFIG_REFRESH_OBJECT 2370	&gt;</body><body package="MQ-XIF">MQRC_CONNECTION_BROKEN	&lt;C: #define MQRC_CONNECTION_BROKEN 2009	&gt;</body><body package="MQ-XIF">MQRC_CONNECTION_ERROR	&lt;C: #define MQRC_CONNECTION_ERROR 2273	&gt;</body><body package="MQ-XIF">MQRC_CONNECTION_NOT_AUTHORIZED	&lt;C: #define MQRC_CONNECTION_NOT_AUTHORIZED 2217	&gt;</body><body package="MQ-XIF">MQRC_CONNECTION_QUIESCING	&lt;C: #define MQRC_CONNECTION_QUIESCING 2202	&gt;</body><body package="MQ-XIF">MQRC_CONNECTION_STOPPING	&lt;C: #define MQRC_CONNECTION_STOPPING 2203	&gt;</body><body package="MQ-XIF">MQRC_CONN_ID_IN_USE	&lt;C: #define MQRC_CONN_ID_IN_USE 2160	&gt;</body><body package="MQ-XIF">MQRC_CONN_TAG_IN_USE	&lt;C: #define MQRC_CONN_TAG_IN_USE 2271	&gt;</body><body package="MQ-XIF">MQRC_CONN_TAG_NOT_RELEASED	&lt;C: #define MQRC_CONN_TAG_NOT_RELEASED 2344	&gt;</body><body package="MQ-XIF">MQRC_CONN_TAG_NOT_USABLE	&lt;C: #define MQRC_CONN_TAG_NOT_USABLE 2350	&gt;</body><body package="MQ-XIF">MQRC_CONTEXT_HANDLE_ERROR	&lt;C: #define MQRC_CONTEXT_HANDLE_ERROR 2097	&gt;</body><body package="MQ-XIF">MQRC_CONTEXT_NOT_AVAILABLE	&lt;C: #define MQRC_CONTEXT_NOT_AVAILABLE 2098	&gt;</body><body package="MQ-XIF">MQRC_CONTEXT_OBJECT_NOT_VALID	&lt;C: #define MQRC_CONTEXT_OBJECT_NOT_VALID 6121	&gt;</body><body package="MQ-XIF">MQRC_CONTEXT_OPEN_ERROR	&lt;C: #define MQRC_CONTEXT_OPEN_ERROR 6122	&gt;</body><body package="MQ-XIF">MQRC_CONVERTED_MSG_TOO_BIG	&lt;C: #define MQRC_CONVERTED_MSG_TOO_BIG 2120	&gt;</body><body package="MQ-XIF">MQRC_CONVERTED_STRING_TOO_BIG	&lt;C: #define MQRC_CONVERTED_STRING_TOO_BIG 2190	&gt;</body><body package="MQ-XIF">MQRC_CORREL_ID_ERROR	&lt;C: #define MQRC_CORREL_ID_ERROR 2207	&gt;</body><body package="MQ-XIF">MQRC_CRYPTO_HARDWARE_ERROR	&lt;C: #define MQRC_CRYPTO_HARDWARE_ERROR 2382	&gt;</body><body package="MQ-XIF">MQRC_CURRENT_RECORD_ERROR	&lt;C: #define MQRC_CURRENT_RECORD_ERROR 2357	&gt;</body><body package="MQ-XIF">MQRC_CURSOR_NOT_VALID	&lt;C: #define MQRC_CURSOR_NOT_VALID 6105	&gt;</body><body package="MQ-XIF">MQRC_DATA_LENGTH_ERROR	&lt;C: #define MQRC_DATA_LENGTH_ERROR 2010	&gt;</body><body package="MQ-XIF">MQRC_DATA_TRUNCATED	&lt;C: #define MQRC_DATA_TRUNCATED 6115	&gt;</body><body package="MQ-XIF">MQRC_DB2_NOT_AVAILABLE	&lt;C: #define MQRC_DB2_NOT_AVAILABLE 2342	&gt;</body><body package="MQ-XIF">MQRC_DBCS_ERROR	&lt;C: #define MQRC_DBCS_ERROR 2150	&gt;</body><body package="MQ-XIF">MQRC_DEF_XMIT_Q_TYPE_ERROR	&lt;C: #define MQRC_DEF_XMIT_Q_TYPE_ERROR 2198	&gt;</body><body package="MQ-XIF">MQRC_DEF_XMIT_Q_USAGE_ERROR	&lt;C: #define MQRC_DEF_XMIT_Q_USAGE_ERROR 2199	&gt;</body><body package="MQ-XIF">MQRC_DEST_ENV_ERROR	&lt;C: #define MQRC_DEST_ENV_ERROR 2263	&gt;</body><body package="MQ-XIF">MQRC_DEST_NAME_ERROR	&lt;C: #define MQRC_DEST_NAME_ERROR 2264	&gt;</body><body package="MQ-XIF">MQRC_DH_ERROR	&lt;C: #define MQRC_DH_ERROR 2135	&gt;</body><body package="MQ-XIF">MQRC_DISTRIBUTION_LIST_EMPTY	&lt;C: #define MQRC_DISTRIBUTION_LIST_EMPTY 6126	&gt;</body><body package="MQ-XIF">MQRC_DLH_ERROR	&lt;C: #define MQRC_DLH_ERROR 2141	&gt;</body><body package="MQ-XIF">MQRC_DUPLICATE_RECOV_COORD	&lt;C: #define MQRC_DUPLICATE_RECOV_COORD 2163	&gt;</body><body package="MQ-XIF">MQRC_DYNAMIC_Q_NAME_ERROR	&lt;C: #define MQRC_DYNAMIC_Q_NAME_ERROR 2011	&gt;</body><body package="MQ-XIF">MQRC_ENCODING_ERROR	&lt;C: #define MQRC_ENCODING_ERROR 6106	&gt;</body><body package="MQ-XIF">MQRC_ENCODING_NOT_SUPPORTED	&lt;C: #define MQRC_ENCODING_NOT_SUPPORTED 2308	&gt;</body><body package="MQ-XIF">MQRC_ENVIRONMENT_ERROR	&lt;C: #define MQRC_ENVIRONMENT_ERROR 2012	&gt;</body><body package="MQ-XIF">MQRC_EXIT_REASON_ERROR	&lt;C: #define MQRC_EXIT_REASON_ERROR 2377	&gt;</body><body package="MQ-XIF">MQRC_EXPIRY_ERROR	&lt;C: #define MQRC_EXPIRY_ERROR 2013	&gt;</body><body package="MQ-XIF">MQRC_FEEDBACK_ERROR	&lt;C: #define MQRC_FEEDBACK_ERROR 2014	&gt;</body><body package="MQ-XIF">MQRC_FILE_NOT_AUDITED	&lt;C: #define MQRC_FILE_NOT_AUDITED 2216	&gt;</body><body package="MQ-XIF">MQRC_FILE_SYSTEM_ERROR	&lt;C: #define MQRC_FILE_SYSTEM_ERROR 2208	&gt;</body><body package="MQ-XIF">MQRC_FORMAT_ERROR	&lt;C: #define MQRC_FORMAT_ERROR 2110	&gt;</body><body package="MQ-XIF">MQRC_FORMAT_NOT_SUPPORTED	&lt;C: #define MQRC_FORMAT_NOT_SUPPORTED 2317	&gt;</body><body package="MQ-XIF">MQRC_FUNCTION_ERROR	&lt;C: #define MQRC_FUNCTION_ERROR 2281	&gt;</body><body package="MQ-XIF">MQRC_FUNCTION_NOT_SUPPORTED	&lt;C: #define MQRC_FUNCTION_NOT_SUPPORTED 2298	&gt;</body><body package="MQ-XIF">MQRC_GET_INHIBITED	&lt;C: #define MQRC_GET_INHIBITED 2016	&gt;</body><body package="MQ-XIF">MQRC_GLOBAL_UOW_CONFLICT	&lt;C: #define MQRC_GLOBAL_UOW_CONFLICT 2351	&gt;</body><body package="MQ-XIF">MQRC_GMO_ERROR	&lt;C: #define MQRC_GMO_ERROR 2186	&gt;</body><body package="MQ-XIF">MQRC_GROUP_ID_ERROR	&lt;C: #define MQRC_GROUP_ID_ERROR 2258	&gt;</body><body package="MQ-XIF">MQRC_HANDLE_IN_USE_FOR_UOW	&lt;C: #define MQRC_HANDLE_IN_USE_FOR_UOW 2353	&gt;</body><body package="MQ-XIF">MQRC_HANDLE_NOT_AVAILABLE	&lt;C: #define MQRC_HANDLE_NOT_AVAILABLE 2017	&gt;</body><body package="MQ-XIF">MQRC_HBAG_ERROR	&lt;C: #define MQRC_HBAG_ERROR 2320	&gt;</body><body package="MQ-XIF">MQRC_HCONFIG_ERROR	&lt;C: #define MQRC_HCONFIG_ERROR 2280	&gt;</body><body package="MQ-XIF">MQRC_HCONN_ERROR	&lt;C: #define MQRC_HCONN_ERROR 2018	&gt;</body><body package="MQ-XIF">MQRC_HEADER_ERROR	&lt;C: #define MQRC_HEADER_ERROR 2142	&gt;</body><body package="MQ-XIF">MQRC_HOBJ_ERROR	&lt;C: #define MQRC_HOBJ_ERROR 2019	&gt;</body><body package="MQ-XIF">MQRC_IIH_ERROR	&lt;C: #define MQRC_IIH_ERROR 2148	&gt;</body><body package="MQ-XIF">MQRC_INCOMPLETE_GROUP	&lt;C: #define MQRC_INCOMPLETE_GROUP 2241	&gt;</body><body package="MQ-XIF">MQRC_INCOMPLETE_MSG	&lt;C: #define MQRC_INCOMPLETE_MSG 2242	&gt;</body><body package="MQ-XIF">MQRC_INCONSISTENT_BROWSE	&lt;C: #define MQRC_INCONSISTENT_BROWSE 2259	&gt;</body><body package="MQ-XIF">MQRC_INCONSISTENT_CCSIDS	&lt;C: #define MQRC_INCONSISTENT_CCSIDS 2243	&gt;</body><body package="MQ-XIF">MQRC_INCONSISTENT_ENCODINGS	&lt;C: #define MQRC_INCONSISTENT_ENCODINGS 2244	&gt;</body><body package="MQ-XIF">MQRC_INCONSISTENT_FORMAT	&lt;C: #define MQRC_INCONSISTENT_FORMAT 6119	&gt;</body><body package="MQ-XIF">MQRC_INCONSISTENT_ITEM_TYPE	&lt;C: #define MQRC_INCONSISTENT_ITEM_TYPE 2313	&gt;</body><body package="MQ-XIF">MQRC_INCONSISTENT_OBJECT_STATE	&lt;C: #define MQRC_INCONSISTENT_OBJECT_STATE 6120	&gt;</body><body package="MQ-XIF">MQRC_INCONSISTENT_OPEN_OPTIONS	&lt;C: #define MQRC_INCONSISTENT_OPEN_OPTIONS 6127	&gt;</body><body package="MQ-XIF">MQRC_INCONSISTENT_PERSISTENCE	&lt;C: #define MQRC_INCONSISTENT_PERSISTENCE 2185	&gt;</body><body package="MQ-XIF">MQRC_INCONSISTENT_UOW	&lt;C: #define MQRC_INCONSISTENT_UOW 2245	&gt;</body><body package="MQ-XIF">MQRC_INDEX_ERROR	&lt;C: #define MQRC_INDEX_ERROR 2314	&gt;</body><body package="MQ-XIF">MQRC_INDEX_NOT_PRESENT	&lt;C: #define MQRC_INDEX_NOT_PRESENT 2306	&gt;</body><body package="MQ-XIF">MQRC_INHIBIT_VALUE_ERROR	&lt;C: #define MQRC_INHIBIT_VALUE_ERROR 2020	&gt;</body><body package="MQ-XIF">MQRC_INITIALIZATION_FAILED	&lt;C: #define MQRC_INITIALIZATION_FAILED 2286	&gt;</body><body package="MQ-XIF">MQRC_INQUIRY_COMMAND_ERROR	&lt;C: #define MQRC_INQUIRY_COMMAND_ERROR 2324	&gt;</body><body package="MQ-XIF">MQRC_INSUFFICIENT_BUFFER	&lt;C: #define MQRC_INSUFFICIENT_BUFFER 6113	&gt;</body><body package="MQ-XIF">MQRC_INSUFFICIENT_DATA	&lt;C: #define MQRC_INSUFFICIENT_DATA 6114	&gt;</body><body package="MQ-XIF">MQRC_INT_ATTRS_ARRAY_ERROR	&lt;C: #define MQRC_INT_ATTRS_ARRAY_ERROR 2023	&gt;</body><body package="MQ-XIF">MQRC_INT_ATTR_COUNT_ERROR	&lt;C: #define MQRC_INT_ATTR_COUNT_ERROR 2021	&gt;</body><body package="MQ-XIF">MQRC_INT_ATTR_COUNT_TOO_SMALL	&lt;C: #define MQRC_INT_ATTR_COUNT_TOO_SMALL 2022	&gt;</body><body package="MQ-XIF">MQRC_INVALID_MSG_UNDER_CURSOR	&lt;C: #define MQRC_INVALID_MSG_UNDER_CURSOR 2246	&gt;</body><body package="MQ-XIF">MQRC_ITEM_COUNT_ERROR	&lt;C: #define MQRC_ITEM_COUNT_ERROR 2316	&gt;</body><body package="MQ-XIF">MQRC_ITEM_TYPE_ERROR	&lt;C: #define MQRC_ITEM_TYPE_ERROR 2327	&gt;</body><body package="MQ-XIF">MQRC_ITEM_VALUE_ERROR	&lt;C: #define MQRC_ITEM_VALUE_ERROR 2319	&gt;</body><body package="MQ-XIF">MQRC_JMS_FORMAT_ERROR	&lt;C: #define MQRC_JMS_FORMAT_ERROR 2364	&gt;</body><body package="MQ-XIF">MQRC_JSSE_ERROR	&lt;C: #define MQRC_JSSE_ERROR 2397	&gt;</body><body package="MQ-XIF">MQRC_KEY_REPOSITORY_ERROR	&lt;C: #define MQRC_KEY_REPOSITORY_ERROR 2381	&gt;</body><body package="MQ-XIF">MQRC_LDAP_PASSWORD_ERROR	&lt;C: #define MQRC_LDAP_PASSWORD_ERROR 2390	&gt;</body><body package="MQ-XIF">MQRC_LDAP_USER_NAME_ERROR	&lt;C: #define MQRC_LDAP_USER_NAME_ERROR 2388	&gt;</body><body package="MQ-XIF">MQRC_LDAP_USER_NAME_LENGTH_ERR	&lt;C: #define MQRC_LDAP_USER_NAME_LENGTH_ERR 2389	&gt;</body><body package="MQ-XIF">MQRC_LOCAL_UOW_CONFLICT	&lt;C: #define MQRC_LOCAL_UOW_CONFLICT 2352	&gt;</body><body package="MQ-XIF">MQRC_MATCH_OPTIONS_ERROR	&lt;C: #define MQRC_MATCH_OPTIONS_ERROR 2247	&gt;</body><body package="MQ-XIF">MQRC_MAX_CONNS_LIMIT_REACHED	&lt;C: #define MQRC_MAX_CONNS_LIMIT_REACHED 2025	&gt;</body><body package="MQ-XIF">MQRC_MDE_ERROR	&lt;C: #define MQRC_MDE_ERROR 2248	&gt;</body><body package="MQ-XIF">MQRC_MD_ERROR	&lt;C: #define MQRC_MD_ERROR 2026	&gt;</body><body package="MQ-XIF">MQRC_MISSING_REPLY_TO_Q	&lt;C: #define MQRC_MISSING_REPLY_TO_Q 2027	&gt;</body><body package="MQ-XIF">MQRC_MISSING_WIH	&lt;C: #define MQRC_MISSING_WIH 2332	&gt;</body><body package="MQ-XIF">MQRC_MSG_FLAGS_ERROR	&lt;C: #define MQRC_MSG_FLAGS_ERROR 2249	&gt;</body><body package="MQ-XIF">MQRC_MSG_ID_ERROR	&lt;C: #define MQRC_MSG_ID_ERROR 2206	&gt;</body><body package="MQ-XIF">MQRC_MSG_NOT_MATCHED	&lt;C: #define MQRC_MSG_NOT_MATCHED 2363	&gt;</body><body package="MQ-XIF">MQRC_MSG_SEQ_NUMBER_ERROR	&lt;C: #define MQRC_MSG_SEQ_NUMBER_ERROR 2250	&gt;</body><body package="MQ-XIF">MQRC_MSG_TOKEN_ERROR	&lt;C: #define MQRC_MSG_TOKEN_ERROR 2331	&gt;</body><body package="MQ-XIF">MQRC_MSG_TOO_BIG_FOR_CHANNEL	&lt;C: #define MQRC_MSG_TOO_BIG_FOR_CHANNEL 2218	&gt;</body><body package="MQ-XIF">MQRC_MSG_TOO_BIG_FOR_Q	&lt;C: #define MQRC_MSG_TOO_BIG_FOR_Q 2030	&gt;</body><body package="MQ-XIF">MQRC_MSG_TOO_BIG_FOR_Q_MGR	&lt;C: #define MQRC_MSG_TOO_BIG_FOR_Q_MGR 2031	&gt;</body><body package="MQ-XIF">MQRC_MSG_TYPE_ERROR	&lt;C: #define MQRC_MSG_TYPE_ERROR 2029	&gt;</body><body package="MQ-XIF">MQRC_MULTIPLE_INSTANCE_ERROR	&lt;C: #define MQRC_MULTIPLE_INSTANCE_ERROR 2301	&gt;</body><body package="MQ-XIF">MQRC_MULTIPLE_REASONS	&lt;C: #define MQRC_MULTIPLE_REASONS 2136	&gt;</body><body package="MQ-XIF">MQRC_NAME_IN_USE	&lt;C: #define MQRC_NAME_IN_USE 2201	&gt;</body><body package="MQ-XIF">MQRC_NAME_NOT_VALID_FOR_TYPE	&lt;C: #define MQRC_NAME_NOT_VALID_FOR_TYPE 2194	&gt;</body><body package="MQ-XIF">MQRC_NEGATIVE_LENGTH	&lt;C: #define MQRC_NEGATIVE_LENGTH 6117	&gt;</body><body package="MQ-XIF">MQRC_NEGATIVE_OFFSET	&lt;C: #define MQRC_NEGATIVE_OFFSET 6118	&gt;</body><body package="MQ-XIF">MQRC_NESTED_BAG_NOT_SUPPORTED	&lt;C: #define MQRC_NESTED_BAG_NOT_SUPPORTED 2325	&gt;</body><body package="MQ-XIF">MQRC_NEXT_OFFSET_ERROR	&lt;C: #define MQRC_NEXT_OFFSET_ERROR 2358	&gt;</body><body package="MQ-XIF">MQRC_NEXT_RECORD_ERROR	&lt;C: #define MQRC_NEXT_RECORD_ERROR 2361	&gt;</body><body package="MQ-XIF">MQRC_NONE	&lt;C: #define MQRC_NONE 0	&gt;</body><body package="MQ-XIF">MQRC_NOT_AUTHORIZED	&lt;C: #define MQRC_NOT_AUTHORIZED 2035	&gt;</body><body package="MQ-XIF">MQRC_NOT_CONNECTED	&lt;C: #define MQRC_NOT_CONNECTED 6124	&gt;</body><body package="MQ-XIF">MQRC_NOT_CONVERTED	&lt;C: #define MQRC_NOT_CONVERTED 2119	&gt;</body><body package="MQ-XIF">MQRC_NOT_OPEN	&lt;C: #define MQRC_NOT_OPEN 6125	&gt;</body><body package="MQ-XIF">MQRC_NOT_OPEN_FOR_BROWSE	&lt;C: #define MQRC_NOT_OPEN_FOR_BROWSE 2036	&gt;</body><body package="MQ-XIF">MQRC_NOT_OPEN_FOR_INPUT	&lt;C: #define MQRC_NOT_OPEN_FOR_INPUT 2037	&gt;</body><body package="MQ-XIF">MQRC_NOT_OPEN_FOR_INQUIRE	&lt;C: #define MQRC_NOT_OPEN_FOR_INQUIRE 2038	&gt;</body><body package="MQ-XIF">MQRC_NOT_OPEN_FOR_OUTPUT	&lt;C: #define MQRC_NOT_OPEN_FOR_OUTPUT 2039	&gt;</body><body package="MQ-XIF">MQRC_NOT_OPEN_FOR_PASS_ALL	&lt;C: #define MQRC_NOT_OPEN_FOR_PASS_ALL 2093	&gt;</body><body package="MQ-XIF">MQRC_NOT_OPEN_FOR_PASS_IDENT	&lt;C: #define MQRC_NOT_OPEN_FOR_PASS_IDENT 2094	&gt;</body><body package="MQ-XIF">MQRC_NOT_OPEN_FOR_SET	&lt;C: #define MQRC_NOT_OPEN_FOR_SET 2040	&gt;</body><body package="MQ-XIF">MQRC_NOT_OPEN_FOR_SET_ALL	&lt;C: #define MQRC_NOT_OPEN_FOR_SET_ALL 2095	&gt;</body><body package="MQ-XIF">MQRC_NOT_OPEN_FOR_SET_IDENT	&lt;C: #define MQRC_NOT_OPEN_FOR_SET_IDENT 2096	&gt;</body><body package="MQ-XIF">MQRC_NO_BUFFER	&lt;C: #define MQRC_NO_BUFFER 6110	&gt;</body><body package="MQ-XIF">MQRC_NO_CONNECTION_REFERENCE	&lt;C: #define MQRC_NO_CONNECTION_REFERENCE 6109	&gt;</body><body package="MQ-XIF">MQRC_NO_DATA_AVAILABLE	&lt;C: #define MQRC_NO_DATA_AVAILABLE 2379	&gt;</body><body package="MQ-XIF">MQRC_NO_DESTINATIONS_AVAILABLE	&lt;C: #define MQRC_NO_DESTINATIONS_AVAILABLE 2270	&gt;</body><body package="MQ-XIF">MQRC_NO_EXTERNAL_PARTICIPANTS	&lt;C: #define MQRC_NO_EXTERNAL_PARTICIPANTS 2121	&gt;</body><body package="MQ-XIF">MQRC_NO_MSG_AVAILABLE	&lt;C: #define MQRC_NO_MSG_AVAILABLE 2033	&gt;</body><body package="MQ-XIF">MQRC_NO_MSG_LOCKED	&lt;C: #define MQRC_NO_MSG_LOCKED 2209	&gt;</body><body package="MQ-XIF">MQRC_NO_MSG_UNDER_CURSOR	&lt;C: #define MQRC_NO_MSG_UNDER_CURSOR 2034	&gt;</body><body package="MQ-XIF">MQRC_NO_RECORD_AVAILABLE	&lt;C: #define MQRC_NO_RECORD_AVAILABLE 2359	&gt;</body><body package="MQ-XIF">MQRC_NULL_POINTER	&lt;C: #define MQRC_NULL_POINTER 6108	&gt;</body><body package="MQ-XIF">MQRC_OBJECT_ALREADY_EXISTS	&lt;C: #define MQRC_OBJECT_ALREADY_EXISTS 2100	&gt;</body><body package="MQ-XIF">MQRC_OBJECT_CHANGED	&lt;C: #define MQRC_OBJECT_CHANGED 2041	&gt;</body><body package="MQ-XIF">MQRC_OBJECT_DAMAGED	&lt;C: #define MQRC_OBJECT_DAMAGED 2101	&gt;</body><body package="MQ-XIF">MQRC_OBJECT_IN_USE	&lt;C: #define MQRC_OBJECT_IN_USE 2042	&gt;</body><body package="MQ-XIF">MQRC_OBJECT_LEVEL_INCOMPATIBLE	&lt;C: #define MQRC_OBJECT_LEVEL_INCOMPATIBLE 2360	&gt;</body><body package="MQ-XIF">MQRC_OBJECT_NAME_ERROR	&lt;C: #define MQRC_OBJECT_NAME_ERROR 2152	&gt;</body><body package="MQ-XIF">MQRC_OBJECT_NOT_UNIQUE	&lt;C: #define MQRC_OBJECT_NOT_UNIQUE 2343	&gt;</body><body package="MQ-XIF">MQRC_OBJECT_Q_MGR_NAME_ERROR	&lt;C: #define MQRC_OBJECT_Q_MGR_NAME_ERROR 2153	&gt;</body><body package="MQ-XIF">MQRC_OBJECT_RECORDS_ERROR	&lt;C: #define MQRC_OBJECT_RECORDS_ERROR 2155	&gt;</body><body package="MQ-XIF">MQRC_OBJECT_TYPE_ERROR	&lt;C: #define MQRC_OBJECT_TYPE_ERROR 2043	&gt;</body><body package="MQ-XIF">MQRC_OD_ERROR	&lt;C: #define MQRC_OD_ERROR 2044	&gt;</body><body package="MQ-XIF">MQRC_OFFSET_ERROR	&lt;C: #define MQRC_OFFSET_ERROR 2251	&gt;</body><body package="MQ-XIF">MQRC_OPEN_FAILED	&lt;C: #define MQRC_OPEN_FAILED 2137	&gt;</body><body package="MQ-XIF">MQRC_OPTIONS_ERROR	&lt;C: #define MQRC_OPTIONS_ERROR 2046	&gt;</body><body package="MQ-XIF">MQRC_OPTION_ENVIRONMENT_ERROR	&lt;C: #define MQRC_OPTION_ENVIRONMENT_ERROR 2274	&gt;</body><body package="MQ-XIF">MQRC_OPTION_NOT_VALID_FOR_TYPE	&lt;C: #define MQRC_OPTION_NOT_VALID_FOR_TYPE 2045	&gt;</body><body package="MQ-XIF">MQRC_ORIGINAL_LENGTH_ERROR	&lt;C: #define MQRC_ORIGINAL_LENGTH_ERROR 2252	&gt;</body><body package="MQ-XIF">MQRC_OUTCOME_MIXED	&lt;C: #define MQRC_OUTCOME_MIXED 2123	&gt;</body><body package="MQ-XIF">MQRC_OUTCOME_PENDING	&lt;C: #define MQRC_OUTCOME_PENDING 2124	&gt;</body><body package="MQ-XIF">MQRC_OUT_SELECTOR_ERROR	&lt;C: #define MQRC_OUT_SELECTOR_ERROR 2310	&gt;</body><body package="MQ-XIF">MQRC_PAGESET_ERROR	&lt;C: #define MQRC_PAGESET_ERROR 2193	&gt;</body><body package="MQ-XIF">MQRC_PAGESET_FULL	&lt;C: #define MQRC_PAGESET_FULL 2192	&gt;</body><body package="MQ-XIF">MQRC_PARAMETER_MISSING	&lt;C: #define MQRC_PARAMETER_MISSING 2321	&gt;</body><body package="MQ-XIF">MQRC_PARTIALLY_CONVERTED	&lt;C: #define MQRC_PARTIALLY_CONVERTED 2272	&gt;</body><body package="MQ-XIF">MQRC_PARTICIPANT_NOT_AVAILABLE	&lt;C: #define MQRC_PARTICIPANT_NOT_AVAILABLE 2122	&gt;</body><body package="MQ-XIF">MQRC_PCF_ERROR	&lt;C: #define MQRC_PCF_ERROR 2149	&gt;</body><body package="MQ-XIF">MQRC_PERSISTENCE_ERROR	&lt;C: #define MQRC_PERSISTENCE_ERROR 2047	&gt;</body><body package="MQ-XIF">MQRC_PERSISTENT_NOT_ALLOWED	&lt;C: #define MQRC_PERSISTENT_NOT_ALLOWED 2048	&gt;</body><body package="MQ-XIF">MQRC_PMO_ERROR	&lt;C: #define MQRC_PMO_ERROR 2173	&gt;</body><body package="MQ-XIF">MQRC_PMO_RECORD_FLAGS_ERROR	&lt;C: #define MQRC_PMO_RECORD_FLAGS_ERROR 2158	&gt;</body><body package="MQ-XIF">MQRC_PRIORITY_ERROR	&lt;C: #define MQRC_PRIORITY_ERROR 2050	&gt;</body><body package="MQ-XIF">MQRC_PRIORITY_EXCEEDS_MAXIMUM	&lt;C: #define MQRC_PRIORITY_EXCEEDS_MAXIMUM 2049	&gt;</body><body package="MQ-XIF">MQRC_PUT_INHIBITED	&lt;C: #define MQRC_PUT_INHIBITED 2051	&gt;</body><body package="MQ-XIF">MQRC_PUT_MSG_RECORDS_ERROR	&lt;C: #define MQRC_PUT_MSG_RECORDS_ERROR 2159	&gt;</body><body package="MQ-XIF">MQRC_Q_ALREADY_EXISTS	&lt;C: #define MQRC_Q_ALREADY_EXISTS 2290	&gt;</body><body package="MQ-XIF">MQRC_Q_DELETED	&lt;C: #define MQRC_Q_DELETED 2052	&gt;</body><body package="MQ-XIF">MQRC_Q_DEPTH_HIGH	&lt;C: #define MQRC_Q_DEPTH_HIGH 2224	&gt;</body><body package="MQ-XIF">MQRC_Q_DEPTH_LOW	&lt;C: #define MQRC_Q_DEPTH_LOW 2225	&gt;</body><body package="MQ-XIF">MQRC_Q_FULL	&lt;C: #define MQRC_Q_FULL 2053	&gt;</body><body package="MQ-XIF">MQRC_Q_INDEX_TYPE_ERROR	&lt;C: #define MQRC_Q_INDEX_TYPE_ERROR 2394	&gt;</body><body package="MQ-XIF">MQRC_Q_MGR_ACTIVE	&lt;C: #define MQRC_Q_MGR_ACTIVE 2222	&gt;</body><body package="MQ-XIF">MQRC_Q_MGR_NAME_ERROR	&lt;C: #define MQRC_Q_MGR_NAME_ERROR 2058	&gt;</body><body package="MQ-XIF">MQRC_Q_MGR_NOT_ACTIVE	&lt;C: #define MQRC_Q_MGR_NOT_ACTIVE 2223	&gt;</body><body package="MQ-XIF">MQRC_Q_MGR_NOT_AVAILABLE	&lt;C: #define MQRC_Q_MGR_NOT_AVAILABLE 2059	&gt;</body><body package="MQ-XIF">MQRC_Q_MGR_QUIESCING	&lt;C: #define MQRC_Q_MGR_QUIESCING 2161	&gt;</body><body package="MQ-XIF">MQRC_Q_MGR_STOPPING	&lt;C: #define MQRC_Q_MGR_STOPPING 2162	&gt;</body><body package="MQ-XIF">MQRC_Q_NOT_EMPTY	&lt;C: #define MQRC_Q_NOT_EMPTY 2055	&gt;</body><body package="MQ-XIF">MQRC_Q_SERVICE_INTERVAL_HIGH	&lt;C: #define MQRC_Q_SERVICE_INTERVAL_HIGH 2226	&gt;</body><body package="MQ-XIF">MQRC_Q_SERVICE_INTERVAL_OK	&lt;C: #define MQRC_Q_SERVICE_INTERVAL_OK 2227	&gt;</body><body package="MQ-XIF">MQRC_Q_SPACE_NOT_AVAILABLE	&lt;C: #define MQRC_Q_SPACE_NOT_AVAILABLE 2056	&gt;</body><body package="MQ-XIF">MQRC_Q_TYPE_ERROR	&lt;C: #define MQRC_Q_TYPE_ERROR 2057	&gt;</body><body package="MQ-XIF">MQRC_RECS_PRESENT_ERROR	&lt;C: #define MQRC_RECS_PRESENT_ERROR 2154	&gt;</body><body package="MQ-XIF">MQRC_REFERENCE_ERROR	&lt;C: #define MQRC_REFERENCE_ERROR 6129	&gt;</body><body package="MQ-XIF">MQRC_REMOTE_Q_NAME_ERROR	&lt;C: #define MQRC_REMOTE_Q_NAME_ERROR 2184	&gt;</body><body package="MQ-XIF">MQRC_REOPEN_EXCL_INPUT_ERROR	&lt;C: #define MQRC_REOPEN_EXCL_INPUT_ERROR 6100	&gt;</body><body package="MQ-XIF">MQRC_REOPEN_INQUIRE_ERROR	&lt;C: #define MQRC_REOPEN_INQUIRE_ERROR 6101	&gt;</body><body package="MQ-XIF">MQRC_REOPEN_SAVED_CONTEXT_ERR	&lt;C: #define MQRC_REOPEN_SAVED_CONTEXT_ERR 6102	&gt;</body><body package="MQ-XIF">MQRC_REOPEN_TEMPORARY_Q_ERROR	&lt;C: #define MQRC_REOPEN_TEMPORARY_Q_ERROR 6103	&gt;</body><body package="MQ-XIF">MQRC_REPORT_OPTIONS_ERROR	&lt;C: #define MQRC_REPORT_OPTIONS_ERROR 2061	&gt;</body><body package="MQ-XIF">MQRC_RESERVED_VALUE_ERROR	&lt;C: #define MQRC_RESERVED_VALUE_ERROR 2378	&gt;</body><body package="MQ-XIF">MQRC_RESOURCE_PROBLEM	&lt;C: #define MQRC_RESOURCE_PROBLEM 2102	&gt;</body><body package="MQ-XIF">MQRC_RESPONSE_RECORDS_ERROR	&lt;C: #define MQRC_RESPONSE_RECORDS_ERROR 2156	&gt;</body><body package="MQ-XIF">MQRC_RFH_COMMAND_ERROR	&lt;C: #define MQRC_RFH_COMMAND_ERROR 2336	&gt;</body><body package="MQ-XIF">MQRC_RFH_DUPLICATE_PARM	&lt;C: #define MQRC_RFH_DUPLICATE_PARM 2338	&gt;</body><body package="MQ-XIF">MQRC_RFH_ERROR	&lt;C: #define MQRC_RFH_ERROR 2334	&gt;</body><body package="MQ-XIF">MQRC_RFH_PARM_ERROR	&lt;C: #define MQRC_RFH_PARM_ERROR 2337	&gt;</body><body package="MQ-XIF">MQRC_RFH_PARM_MISSING	&lt;C: #define MQRC_RFH_PARM_MISSING 2339	&gt;</body><body package="MQ-XIF">MQRC_RFH_STRING_ERROR	&lt;C: #define MQRC_RFH_STRING_ERROR 2335	&gt;</body><body package="MQ-XIF">MQRC_RMH_ERROR	&lt;C: #define MQRC_RMH_ERROR 2220	&gt;</body><body package="MQ-XIF">MQRC_SCO_ERROR	&lt;C: #define MQRC_SCO_ERROR 2380	&gt;</body><body package="MQ-XIF">MQRC_SECOND_MARK_NOT_ALLOWED	&lt;C: #define MQRC_SECOND_MARK_NOT_ALLOWED 2062	&gt;</body><body package="MQ-XIF">MQRC_SECURITY_ERROR	&lt;C: #define MQRC_SECURITY_ERROR 2063	&gt;</body><body package="MQ-XIF">MQRC_SEGMENTS_NOT_SUPPORTED	&lt;C: #define MQRC_SEGMENTS_NOT_SUPPORTED 2365	&gt;</body><body package="MQ-XIF">MQRC_SEGMENT_LENGTH_ZERO	&lt;C: #define MQRC_SEGMENT_LENGTH_ZERO 2253	&gt;</body><body package="MQ-XIF">MQRC_SELECTOR_COUNT_ERROR	&lt;C: #define MQRC_SELECTOR_COUNT_ERROR 2065	&gt;</body><body package="MQ-XIF">MQRC_SELECTOR_ERROR	&lt;C: #define MQRC_SELECTOR_ERROR 2067	&gt;</body><body package="MQ-XIF">MQRC_SELECTOR_LIMIT_EXCEEDED	&lt;C: #define MQRC_SELECTOR_LIMIT_EXCEEDED 2066	&gt;</body><body package="MQ-XIF">MQRC_SELECTOR_NOT_FOR_TYPE	&lt;C: #define MQRC_SELECTOR_NOT_FOR_TYPE 2068	&gt;</body><body package="MQ-XIF">MQRC_SELECTOR_NOT_PRESENT	&lt;C: #define MQRC_SELECTOR_NOT_PRESENT 2309	&gt;</body><body package="MQ-XIF">MQRC_SELECTOR_NOT_SUPPORTED	&lt;C: #define MQRC_SELECTOR_NOT_SUPPORTED 2318	&gt;</body><body package="MQ-XIF">MQRC_SELECTOR_NOT_UNIQUE	&lt;C: #define MQRC_SELECTOR_NOT_UNIQUE 2305	&gt;</body><body package="MQ-XIF">MQRC_SELECTOR_OUT_OF_RANGE	&lt;C: #define MQRC_SELECTOR_OUT_OF_RANGE 2304	&gt;</body><body package="MQ-XIF">MQRC_SELECTOR_TYPE_ERROR	&lt;C: #define MQRC_SELECTOR_TYPE_ERROR 2299	&gt;</body><body package="MQ-XIF">MQRC_SELECTOR_WRONG_TYPE	&lt;C: #define MQRC_SELECTOR_WRONG_TYPE 2312	&gt;</body><body package="MQ-XIF">MQRC_SERVICE_ERROR	&lt;C: #define MQRC_SERVICE_ERROR 2289	&gt;</body><body package="MQ-XIF">MQRC_SERVICE_NOT_AVAILABLE	&lt;C: #define MQRC_SERVICE_NOT_AVAILABLE 2285	&gt;</body><body package="MQ-XIF">MQRC_SIGNAL1_ERROR	&lt;C: #define MQRC_SIGNAL1_ERROR 2099	&gt;</body><body package="MQ-XIF">MQRC_SIGNAL_OUTSTANDING	&lt;C: #define MQRC_SIGNAL_OUTSTANDING 2069	&gt;</body><body package="MQ-XIF">MQRC_SIGNAL_REQUEST_ACCEPTED	&lt;C: #define MQRC_SIGNAL_REQUEST_ACCEPTED 2070	&gt;</body><body package="MQ-XIF">MQRC_SOURCE_BUFFER_ERROR	&lt;C: #define MQRC_SOURCE_BUFFER_ERROR 2145	&gt;</body><body package="MQ-XIF">MQRC_SOURCE_CCSID_ERROR	&lt;C: #define MQRC_SOURCE_CCSID_ERROR 2111	&gt;</body><body package="MQ-XIF">MQRC_SOURCE_DECIMAL_ENC_ERROR	&lt;C: #define MQRC_SOURCE_DECIMAL_ENC_ERROR 2113	&gt;</body><body package="MQ-XIF">MQRC_SOURCE_FLOAT_ENC_ERROR	&lt;C: #define MQRC_SOURCE_FLOAT_ENC_ERROR 2114	&gt;</body><body package="MQ-XIF">MQRC_SOURCE_INTEGER_ENC_ERROR	&lt;C: #define MQRC_SOURCE_INTEGER_ENC_ERROR 2112	&gt;</body><body package="MQ-XIF">MQRC_SOURCE_LENGTH_ERROR	&lt;C: #define MQRC_SOURCE_LENGTH_ERROR 2143	&gt;</body><body package="MQ-XIF">MQRC_SRC_ENV_ERROR	&lt;C: #define MQRC_SRC_ENV_ERROR 2261	&gt;</body><body package="MQ-XIF">MQRC_SRC_NAME_ERROR	&lt;C: #define MQRC_SRC_NAME_ERROR 2262	&gt;</body><body package="MQ-XIF">MQRC_SSL_ALREADY_INITIALIZED	&lt;C: #define MQRC_SSL_ALREADY_INITIALIZED 2391	&gt;</body><body package="MQ-XIF">MQRC_SSL_CERTIFICATE_REVOKED	&lt;C: #define MQRC_SSL_CERTIFICATE_REVOKED 2401	&gt;</body><body package="MQ-XIF">MQRC_SSL_CERT_STORE_ERROR	&lt;C: #define MQRC_SSL_CERT_STORE_ERROR 2402	&gt;</body><body package="MQ-XIF">MQRC_SSL_CONFIG_ERROR	&lt;C: #define MQRC_SSL_CONFIG_ERROR 2392	&gt;</body><body package="MQ-XIF">MQRC_SSL_INITIALIZATION_ERROR	&lt;C: #define MQRC_SSL_INITIALIZATION_ERROR 2393	&gt;</body><body package="MQ-XIF">MQRC_SSL_NOT_ALLOWED	&lt;C: #define MQRC_SSL_NOT_ALLOWED 2396	&gt;</body><body package="MQ-XIF">MQRC_SSL_PEER_NAME_ERROR	&lt;C: #define MQRC_SSL_PEER_NAME_ERROR 2399	&gt;</body><body package="MQ-XIF">MQRC_SSL_PEER_NAME_MISMATCH	&lt;C: #define MQRC_SSL_PEER_NAME_MISMATCH 2398	&gt;</body><body package="MQ-XIF">MQRC_STOPPED_BY_CLUSTER_EXIT	&lt;C: #define MQRC_STOPPED_BY_CLUSTER_EXIT 2188	&gt;</body><body package="MQ-XIF">MQRC_STORAGE_CLASS_ERROR	&lt;C: #define MQRC_STORAGE_CLASS_ERROR 2105	&gt;</body><body package="MQ-XIF">MQRC_STORAGE_MEDIUM_FULL	&lt;C: #define MQRC_STORAGE_MEDIUM_FULL 2192	&gt;</body><body package="MQ-XIF">MQRC_STORAGE_NOT_AVAILABLE	&lt;C: #define MQRC_STORAGE_NOT_AVAILABLE 2071	&gt;</body><body package="MQ-XIF">MQRC_STRING_ERROR	&lt;C: #define MQRC_STRING_ERROR 2307	&gt;</body><body package="MQ-XIF">MQRC_STRING_LENGTH_ERROR	&lt;C: #define MQRC_STRING_LENGTH_ERROR 2323	&gt;</body><body package="MQ-XIF">MQRC_STRING_TRUNCATED	&lt;C: #define MQRC_STRING_TRUNCATED 2311	&gt;</body><body package="MQ-XIF">MQRC_STRUC_ID_ERROR	&lt;C: #define MQRC_STRUC_ID_ERROR 6107	&gt;</body><body package="MQ-XIF">MQRC_STRUC_LENGTH_ERROR	&lt;C: #define MQRC_STRUC_LENGTH_ERROR 6123	&gt;</body><body package="MQ-XIF">MQRC_SUPPRESSED_BY_EXIT	&lt;C: #define MQRC_SUPPRESSED_BY_EXIT 2109	&gt;</body><body package="MQ-XIF">MQRC_SYNCPOINT_LIMIT_REACHED	&lt;C: #define MQRC_SYNCPOINT_LIMIT_REACHED 2024	&gt;</body><body package="MQ-XIF">MQRC_SYNCPOINT_NOT_AVAILABLE	&lt;C: #define MQRC_SYNCPOINT_NOT_AVAILABLE 2072	&gt;</body><body package="MQ-XIF">MQRC_SYSTEM_BAG_NOT_ALTERABLE	&lt;C: #define MQRC_SYSTEM_BAG_NOT_ALTERABLE 2315	&gt;</body><body package="MQ-XIF">MQRC_SYSTEM_BAG_NOT_DELETABLE	&lt;C: #define MQRC_SYSTEM_BAG_NOT_DELETABLE 2328	&gt;</body><body package="MQ-XIF">MQRC_SYSTEM_ITEM_NOT_ALTERABLE	&lt;C: #define MQRC_SYSTEM_ITEM_NOT_ALTERABLE 2302	&gt;</body><body package="MQ-XIF">MQRC_SYSTEM_ITEM_NOT_DELETABLE	&lt;C: #define MQRC_SYSTEM_ITEM_NOT_DELETABLE 2329	&gt;</body><body package="MQ-XIF">MQRC_TARGET_BUFFER_ERROR	&lt;C: #define MQRC_TARGET_BUFFER_ERROR 2146	&gt;</body><body package="MQ-XIF">MQRC_TARGET_CCSID_ERROR	&lt;C: #define MQRC_TARGET_CCSID_ERROR 2115	&gt;</body><body package="MQ-XIF">MQRC_TARGET_DECIMAL_ENC_ERROR	&lt;C: #define MQRC_TARGET_DECIMAL_ENC_ERROR 2117	&gt;</body><body package="MQ-XIF">MQRC_TARGET_FLOAT_ENC_ERROR	&lt;C: #define MQRC_TARGET_FLOAT_ENC_ERROR 2118	&gt;</body><body package="MQ-XIF">MQRC_TARGET_INTEGER_ENC_ERROR	&lt;C: #define MQRC_TARGET_INTEGER_ENC_ERROR 2116	&gt;</body><body package="MQ-XIF">MQRC_TARGET_LENGTH_ERROR	&lt;C: #define MQRC_TARGET_LENGTH_ERROR 2144	&gt;</body><body package="MQ-XIF">MQRC_TERMINATION_FAILED	&lt;C: #define MQRC_TERMINATION_FAILED 2287	&gt;</body><body package="MQ-XIF">MQRC_TMC_ERROR	&lt;C: #define MQRC_TMC_ERROR 2191	&gt;</body><body package="MQ-XIF">MQRC_TM_ERROR	&lt;C: #define MQRC_TM_ERROR 2265	&gt;</body><body package="MQ-XIF">MQRC_TRIGGER_CONTROL_ERROR	&lt;C: #define MQRC_TRIGGER_CONTROL_ERROR 2075	&gt;</body><body package="MQ-XIF">MQRC_TRIGGER_DEPTH_ERROR	&lt;C: #define MQRC_TRIGGER_DEPTH_ERROR 2076	&gt;</body><body package="MQ-XIF">MQRC_TRIGGER_MSG_PRIORITY_ERR	&lt;C: #define MQRC_TRIGGER_MSG_PRIORITY_ERR 2077	&gt;</body><body package="MQ-XIF">MQRC_TRIGGER_TYPE_ERROR	&lt;C: #define MQRC_TRIGGER_TYPE_ERROR 2078	&gt;</body><body package="MQ-XIF">MQRC_TRUNCATED	&lt;C: #define MQRC_TRUNCATED 2120	&gt;</body><body package="MQ-XIF">MQRC_TRUNCATED_MSG_ACCEPTED	&lt;C: #define MQRC_TRUNCATED_MSG_ACCEPTED 2079	&gt;</body><body package="MQ-XIF">MQRC_TRUNCATED_MSG_FAILED	&lt;C: #define MQRC_TRUNCATED_MSG_FAILED 2080	&gt;</body><body package="MQ-XIF">MQRC_UCS2_CONVERSION_ERROR	&lt;C: #define MQRC_UCS2_CONVERSION_ERROR 2341	&gt;</body><body package="MQ-XIF">MQRC_UNEXPECTED_ERROR	&lt;C: #define MQRC_UNEXPECTED_ERROR 2195	&gt;</body><body package="MQ-XIF">MQRC_UNIT_OF_WORK_NOT_STARTED	&lt;C: #define MQRC_UNIT_OF_WORK_NOT_STARTED 2232	&gt;</body><body package="MQ-XIF">MQRC_UNKNOWN_ALIAS_BASE_Q	&lt;C: #define MQRC_UNKNOWN_ALIAS_BASE_Q 2082	&gt;</body><body package="MQ-XIF">MQRC_UNKNOWN_AUTH_ENTITY	&lt;C: #define MQRC_UNKNOWN_AUTH_ENTITY 2293	&gt;</body><body package="MQ-XIF">MQRC_UNKNOWN_DEF_XMIT_Q	&lt;C: #define MQRC_UNKNOWN_DEF_XMIT_Q 2197	&gt;</body><body package="MQ-XIF">MQRC_UNKNOWN_ENTITY	&lt;C: #define MQRC_UNKNOWN_ENTITY 2292	&gt;</body><body package="MQ-XIF">MQRC_UNKNOWN_OBJECT_NAME	&lt;C: #define MQRC_UNKNOWN_OBJECT_NAME 2085	&gt;</body><body package="MQ-XIF">MQRC_UNKNOWN_OBJECT_Q_MGR	&lt;C: #define MQRC_UNKNOWN_OBJECT_Q_MGR 2086	&gt;</body><body package="MQ-XIF">MQRC_UNKNOWN_Q_NAME	&lt;C: #define MQRC_UNKNOWN_Q_NAME 2288	&gt;</body><body package="MQ-XIF">MQRC_UNKNOWN_REF_OBJECT	&lt;C: #define MQRC_UNKNOWN_REF_OBJECT 2294	&gt;</body><body package="MQ-XIF">MQRC_UNKNOWN_REMOTE_Q_MGR	&lt;C: #define MQRC_UNKNOWN_REMOTE_Q_MGR 2087	&gt;</body><body package="MQ-XIF">MQRC_UNKNOWN_REPORT_OPTION	&lt;C: #define MQRC_UNKNOWN_REPORT_OPTION 2104	&gt;</body><body package="MQ-XIF">MQRC_UNKNOWN_XMIT_Q	&lt;C: #define MQRC_UNKNOWN_XMIT_Q 2196	&gt;</body><body package="MQ-XIF">MQRC_UNSUPPORTED_CIPHER_SUITE	&lt;C: #define MQRC_UNSUPPORTED_CIPHER_SUITE 2400	&gt;</body><body package="MQ-XIF">MQRC_UOW_CANCELED	&lt;C: #define MQRC_UOW_CANCELED 2297	&gt;</body><body package="MQ-XIF">MQRC_UOW_ENLISTMENT_ERROR	&lt;C: #define MQRC_UOW_ENLISTMENT_ERROR 2354	&gt;</body><body package="MQ-XIF">MQRC_UOW_IN_PROGRESS	&lt;C: #define MQRC_UOW_IN_PROGRESS 2128	&gt;</body><body package="MQ-XIF">MQRC_UOW_MIX_NOT_SUPPORTED	&lt;C: #define MQRC_UOW_MIX_NOT_SUPPORTED 2355	&gt;</body><body package="MQ-XIF">MQRC_UOW_NOT_AVAILABLE	&lt;C: #define MQRC_UOW_NOT_AVAILABLE 2255	&gt;</body><body package="MQ-XIF">MQRC_USER_ID_NOT_AVAILABLE	&lt;C: #define MQRC_USER_ID_NOT_AVAILABLE 2291	&gt;</body><body package="MQ-XIF">MQRC_WAIT_INTERVAL_ERROR	&lt;C: #define MQRC_WAIT_INTERVAL_ERROR 2090	&gt;</body><body package="MQ-XIF">MQRC_WIH_ERROR	&lt;C: #define MQRC_WIH_ERROR 2333	&gt;</body><body package="MQ-XIF">MQRC_WRONG_CF_LEVEL	&lt;C: #define MQRC_WRONG_CF_LEVEL 2366	&gt;</body><body package="MQ-XIF">MQRC_WRONG_GMO_VERSION	&lt;C: #define MQRC_WRONG_GMO_VERSION 2256	&gt;</body><body package="MQ-XIF">MQRC_WRONG_MD_VERSION	&lt;C: #define MQRC_WRONG_MD_VERSION 2257	&gt;</body><body package="MQ-XIF">MQRC_WRONG_VERSION	&lt;C: #define MQRC_WRONG_VERSION 6128	&gt;</body><body package="MQ-XIF">MQRC_WXP_ERROR	&lt;C: #define MQRC_WXP_ERROR 2356	&gt;</body><body package="MQ-XIF">MQRC_XMIT_Q_TYPE_ERROR	&lt;C: #define MQRC_XMIT_Q_TYPE_ERROR 2091	&gt;</body><body package="MQ-XIF">MQRC_XMIT_Q_USAGE_ERROR	&lt;C: #define MQRC_XMIT_Q_USAGE_ERROR 2092	&gt;</body><body package="MQ-XIF">MQRC_XQH_ERROR	&lt;C: #define MQRC_XQH_ERROR 2260	&gt;</body><body package="MQ-XIF">MQRC_XWAIT_CANCELED	&lt;C: #define MQRC_XWAIT_CANCELED 2107	&gt;</body><body package="MQ-XIF">MQRC_XWAIT_ERROR	&lt;C: #define MQRC_XWAIT_ERROR 2108	&gt;</body><body package="MQ-XIF">MQRC_ZERO_LENGTH	&lt;C: #define MQRC_ZERO_LENGTH 6116	&gt;</body><body package="MQ-XIF">MQRFH2_DEFAULT	&lt;C: #define MQRFH2_DEFAULT {MQRFH_STRUC_ID_ARRAY},MQRFH_VERSION_2,MQRFH_STRUC_LENGTH_FIXED_2,MQENC_NATIVE,MQCCSI_INHERIT,{MQFMT_NONE_ARRAY},MQRFH_NONE,1208	&gt;</body><body package="MQ-XIF">MQRFH_DEFAULT	&lt;C: #define MQRFH_DEFAULT {MQRFH_STRUC_ID_ARRAY},MQRFH_VERSION_1,MQRFH_STRUC_LENGTH_FIXED,MQENC_NATIVE,MQCCSI_UNDEFINED,{MQFMT_NONE_ARRAY},MQRFH_NONE	&gt;</body><body package="MQ-XIF">MQRFH_NONE	&lt;C: #define MQRFH_NONE 0x00000000	&gt;</body><body package="MQ-XIF">MQRFH_STRUC_ID	&lt;C: #define MQRFH_STRUC_ID "RFH "	&gt;</body><body package="MQ-XIF">MQRFH_STRUC_ID_ARRAY	&lt;C: #define MQRFH_STRUC_ID_ARRAY 82,70,72,32	&gt;</body><body package="MQ-XIF">MQRFH_STRUC_LENGTH_FIXED	&lt;C: #define MQRFH_STRUC_LENGTH_FIXED 32	&gt;</body><body package="MQ-XIF">MQRFH_STRUC_LENGTH_FIXED_2	&lt;C: #define MQRFH_STRUC_LENGTH_FIXED_2 36	&gt;</body><body package="MQ-XIF">MQRFH_VERSION_1	&lt;C: #define MQRFH_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQRFH_VERSION_2	&lt;C: #define MQRFH_VERSION_2 2	&gt;</body><body package="MQ-XIF">MQRL_UNDEFINED	&lt;C: #define MQRL_UNDEFINED (-1)	&gt;</body><body package="MQ-XIF">MQRMHF_LAST	&lt;C: #define MQRMHF_LAST 0x00000001	&gt;</body><body package="MQ-XIF">MQRMHF_NOT_LAST	&lt;C: #define MQRMHF_NOT_LAST 0x00000000	&gt;</body><body package="MQ-XIF">MQRMH_CURRENT_VERSION	&lt;C: #define MQRMH_CURRENT_VERSION 1	&gt;</body><body package="MQ-XIF">MQRMH_DEFAULT	&lt;C: #define MQRMH_DEFAULT {MQRMH_STRUC_ID_ARRAY},MQRMH_VERSION_1,0,MQENC_NATIVE,MQCCSI_UNDEFINED,{MQFMT_NONE_ARRAY},MQRMHF_NOT_LAST,{32,32,32,32,32,32,32,32},{MQOII_NONE_ARRAY},0,0,0,0,0,0,0,0,0,0,0	&gt;</body><body package="MQ-XIF">MQRMH_STRUC_ID	&lt;C: #define MQRMH_STRUC_ID "RMH "	&gt;</body><body package="MQ-XIF">MQRMH_STRUC_ID_ARRAY	&lt;C: #define MQRMH_STRUC_ID_ARRAY 82,77,72,32	&gt;</body><body package="MQ-XIF">MQRMH_VERSION_1	&lt;C: #define MQRMH_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQRO_ACCEPT_UNSUP_IF_XMIT_MASK	&lt;C: #define MQRO_ACCEPT_UNSUP_IF_XMIT_MASK 0x0003FF00	&gt;</body><body package="MQ-XIF">MQRO_ACCEPT_UNSUP_MASK	&lt;C: #define MQRO_ACCEPT_UNSUP_MASK 4024434943	&gt;</body><body package="MQ-XIF">MQRO_COA	&lt;C: #define MQRO_COA 0x00000100	&gt;</body><body package="MQ-XIF">MQRO_COA_WITH_DATA	&lt;C: #define MQRO_COA_WITH_DATA 0x00000300	&gt;</body><body package="MQ-XIF">MQRO_COA_WITH_FULL_DATA	&lt;C: #define MQRO_COA_WITH_FULL_DATA 0x00000700	&gt;</body><body package="MQ-XIF">MQRO_COD	&lt;C: #define MQRO_COD 0x00000800	&gt;</body><body package="MQ-XIF">MQRO_COD_WITH_DATA	&lt;C: #define MQRO_COD_WITH_DATA 0x00001800	&gt;</body><body package="MQ-XIF">MQRO_COD_WITH_FULL_DATA	&lt;C: #define MQRO_COD_WITH_FULL_DATA 0x00003800	&gt;</body><body package="MQ-XIF">MQRO_COPY_MSG_ID_TO_CORREL_ID	&lt;C: #define MQRO_COPY_MSG_ID_TO_CORREL_ID 0x00000000	&gt;</body><body package="MQ-XIF">MQRO_DEAD_LETTER_Q	&lt;C: #define MQRO_DEAD_LETTER_Q 0x00000000	&gt;</body><body package="MQ-XIF">MQRO_DISCARD_MSG	&lt;C: #define MQRO_DISCARD_MSG 134217728	&gt;</body><body package="MQ-XIF">MQRO_EXCEPTION	&lt;C: #define MQRO_EXCEPTION 16777216	&gt;</body><body package="MQ-XIF">MQRO_EXCEPTION_WITH_DATA	&lt;C: #define MQRO_EXCEPTION_WITH_DATA 50331648	&gt;</body><body package="MQ-XIF">MQRO_EXCEPTION_WITH_FULL_DATA	&lt;C: #define MQRO_EXCEPTION_WITH_FULL_DATA 117440512	&gt;</body><body package="MQ-XIF">MQRO_EXPIRATION	&lt;C: #define MQRO_EXPIRATION 0x00200000	&gt;</body><body package="MQ-XIF">MQRO_EXPIRATION_WITH_DATA	&lt;C: #define MQRO_EXPIRATION_WITH_DATA 0x00600000	&gt;</body><body package="MQ-XIF">MQRO_EXPIRATION_WITH_FULL_DATA	&lt;C: #define MQRO_EXPIRATION_WITH_FULL_DATA 0x00E00000	&gt;</body><body package="MQ-XIF">MQRO_NAN	&lt;C: #define MQRO_NAN 0x00000002	&gt;</body><body package="MQ-XIF">MQRO_NEW_MSG_ID	&lt;C: #define MQRO_NEW_MSG_ID 0x00000000	&gt;</body><body package="MQ-XIF">MQRO_NONE	&lt;C: #define MQRO_NONE 0x00000000	&gt;</body><body package="MQ-XIF">MQRO_PAN	&lt;C: #define MQRO_PAN 0x00000001	&gt;</body><body package="MQ-XIF">MQRO_PASS_CORREL_ID	&lt;C: #define MQRO_PASS_CORREL_ID 0x00000040	&gt;</body><body package="MQ-XIF">MQRO_PASS_MSG_ID	&lt;C: #define MQRO_PASS_MSG_ID 0x00000080	&gt;</body><body package="MQ-XIF">MQRO_REJECT_UNSUP_MASK	&lt;C: #define MQRO_REJECT_UNSUP_MASK 270270464	&gt;</body><body package="MQ-XIF">MQRR_DEFAULT	&lt;C: #define MQRR_DEFAULT MQCC_OK,MQRC_NONE	&gt;</body><body package="MQ-XIF">MQSCO_CURRENT_VERSION	&lt;C: #define MQSCO_CURRENT_VERSION 1	&gt;</body><body package="MQ-XIF">MQSCO_DEFAULT	&lt;C: #define MQSCO_DEFAULT {MQSCO_STRUC_ID_ARRAY},MQSCO_VERSION_1,{""},{""},0,0,NULL	&gt;</body><body package="MQ-XIF">MQSCO_STRUC_ID	&lt;C: #define MQSCO_STRUC_ID "SCO "	&gt;</body><body package="MQ-XIF">MQSCO_STRUC_ID_ARRAY	&lt;C: #define MQSCO_STRUC_ID_ARRAY 83,67,79,32	&gt;</body><body package="MQ-XIF">MQSCO_VERSION_1	&lt;C: #define MQSCO_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQSEG_ALLOWED	&lt;C: #define MQSEG_ALLOWED 65	&gt;</body><body package="MQ-XIF">MQSEG_INHIBITED	&lt;C: #define MQSEG_INHIBITED 32	&gt;</body><body package="MQ-XIF">MQSIDT_NONE	&lt;C: #define MQSIDT_NONE 0	&gt;</body><body package="MQ-XIF">MQSIDT_NT_SECURITY_ID	&lt;C: #define MQSIDT_NT_SECURITY_ID 1	&gt;</body><body package="MQ-XIF">MQSIDT_WAS_SECURITY_ID	&lt;C: #define MQSIDT_WAS_SECURITY_ID 2	&gt;</body><body package="MQ-XIF">MQSID_NONE	&lt;C: #define MQSID_NONE "                                        "	&gt;</body><body package="MQ-XIF">MQSID_NONE_ARRAY	&lt;C: #define MQSID_NONE_ARRAY 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	&gt;</body><body package="MQ-XIF">MQSP_AVAILABLE	&lt;C: #define MQSP_AVAILABLE 1	&gt;</body><body package="MQ-XIF">MQSP_NOT_AVAILABLE	&lt;C: #define MQSP_NOT_AVAILABLE 0	&gt;</body><body package="MQ-XIF">MQSS_LAST_SEGMENT	&lt;C: #define MQSS_LAST_SEGMENT 76	&gt;</body><body package="MQ-XIF">MQSS_NOT_A_SEGMENT	&lt;C: #define MQSS_NOT_A_SEGMENT 32	&gt;</body><body package="MQ-XIF">MQSS_SEGMENT	&lt;C: #define MQSS_SEGMENT 83	&gt;</body><body package="MQ-XIF">MQTC_OFF	&lt;C: #define MQTC_OFF 0	&gt;</body><body package="MQ-XIF">MQTC_ON	&lt;C: #define MQTC_ON 1	&gt;</body><body package="MQ-XIF">MQTMC2_DEFAULT	&lt;C: #define MQTMC2_DEFAULT {MQTMC_STRUC_ID_ARRAY},{MQTMC_VERSION_2_ARRAY},{""},{""},{""},{""},{""},{""},{""},{""}	&gt;</body><body package="MQ-XIF">MQTMC_CURRENT_VERSION	&lt;C: #define MQTMC_CURRENT_VERSION "   2"	&gt;</body><body package="MQ-XIF">MQTMC_CURRENT_VERSION_ARRAY	&lt;C: #define MQTMC_CURRENT_VERSION_ARRAY 32,32,32,50	&gt;</body><body package="MQ-XIF">MQTMC_STRUC_ID	&lt;C: #define MQTMC_STRUC_ID "TMC "	&gt;</body><body package="MQ-XIF">MQTMC_STRUC_ID_ARRAY	&lt;C: #define MQTMC_STRUC_ID_ARRAY 84,77,67,32	&gt;</body><body package="MQ-XIF">MQTMC_VERSION_1	&lt;C: #define MQTMC_VERSION_1 "   1"	&gt;</body><body package="MQ-XIF">MQTMC_VERSION_1_ARRAY	&lt;C: #define MQTMC_VERSION_1_ARRAY 32,32,32,49	&gt;</body><body package="MQ-XIF">MQTMC_VERSION_2	&lt;C: #define MQTMC_VERSION_2 "   2"	&gt;</body><body package="MQ-XIF">MQTMC_VERSION_2_ARRAY	&lt;C: #define MQTMC_VERSION_2_ARRAY 32,32,32,50	&gt;</body><body package="MQ-XIF">MQTM_CURRENT_VERSION	&lt;C: #define MQTM_CURRENT_VERSION 1	&gt;</body><body package="MQ-XIF">MQTM_DEFAULT	&lt;C: #define MQTM_DEFAULT {MQTM_STRUC_ID_ARRAY},MQTM_VERSION_1,{""},{""},{""},0,{""},{""},{""}	&gt;</body><body package="MQ-XIF">MQTM_STRUC_ID	&lt;C: #define MQTM_STRUC_ID "TM  "	&gt;</body><body package="MQ-XIF">MQTM_STRUC_ID_ARRAY	&lt;C: #define MQTM_STRUC_ID_ARRAY 84,77,32,32	&gt;</body><body package="MQ-XIF">MQTM_VERSION_1	&lt;C: #define MQTM_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQTT_DEPTH	&lt;C: #define MQTT_DEPTH 3	&gt;</body><body package="MQ-XIF">MQTT_EVERY	&lt;C: #define MQTT_EVERY 2	&gt;</body><body package="MQ-XIF">MQTT_FIRST	&lt;C: #define MQTT_FIRST 1	&gt;</body><body package="MQ-XIF">MQTT_NONE	&lt;C: #define MQTT_NONE 0	&gt;</body><body package="MQ-XIF">MQUS_NORMAL	&lt;C: #define MQUS_NORMAL 0	&gt;</body><body package="MQ-XIF">MQUS_TRANSMISSION	&lt;C: #define MQUS_TRANSMISSION 1	&gt;</body><body package="MQ-XIF">MQWIH_CURRENT_LENGTH	&lt;C: #define MQWIH_CURRENT_LENGTH 120	&gt;</body><body package="MQ-XIF">MQWIH_CURRENT_VERSION	&lt;C: #define MQWIH_CURRENT_VERSION 1	&gt;</body><body package="MQ-XIF">MQWIH_DEFAULT	&lt;C: #define MQWIH_DEFAULT {MQWIH_STRUC_ID_ARRAY},MQWIH_VERSION_1,MQWIH_LENGTH_1,0,MQCCSI_UNDEFINED,{MQFMT_NONE_ARRAY},MQWIH_NONE,{32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32},{32,32,32,32,32,32,32,32},{MQMTOK_NONE_ARRAY},{32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32}	&gt;</body><body package="MQ-XIF">MQWIH_LENGTH_1	&lt;C: #define MQWIH_LENGTH_1 120	&gt;</body><body package="MQ-XIF">MQWIH_NONE	&lt;C: #define MQWIH_NONE 0x00000000	&gt;</body><body package="MQ-XIF">MQWIH_STRUC_ID	&lt;C: #define MQWIH_STRUC_ID "WIH "	&gt;</body><body package="MQ-XIF">MQWIH_STRUC_ID_ARRAY	&lt;C: #define MQWIH_STRUC_ID_ARRAY 87,73,72,32	&gt;</body><body package="MQ-XIF">MQWIH_VERSION_1	&lt;C: #define MQWIH_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQWI_UNLIMITED	&lt;C: #define MQWI_UNLIMITED (-1)	&gt;</body><body package="MQ-XIF">MQXQH_CURRENT_VERSION	&lt;C: #define MQXQH_CURRENT_VERSION 1	&gt;</body><body package="MQ-XIF">MQXQH_DEFAULT	&lt;C: #define MQXQH_DEFAULT {MQXQH_STRUC_ID_ARRAY},MQXQH_VERSION_1,{""},{""},{MQMD1_DEFAULT}	&gt;</body><body package="MQ-XIF">MQXQH_STRUC_ID	&lt;C: #define MQXQH_STRUC_ID "XQH "	&gt;</body><body package="MQ-XIF">MQXQH_STRUC_ID_ARRAY	&lt;C: #define MQXQH_STRUC_ID_ARRAY 88,81,72,32	&gt;</body><body package="MQ-XIF">MQXQH_VERSION_1	&lt;C: #define MQXQH_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQ_ABEND_CODE_LENGTH	&lt;C: #define MQ_ABEND_CODE_LENGTH 4	&gt;</body><body package="MQ-XIF">MQ_ACCOUNTING_TOKEN_LENGTH	&lt;C: #define MQ_ACCOUNTING_TOKEN_LENGTH 32	&gt;</body><body package="MQ-XIF">MQ_APPL_IDENTITY_DATA_LENGTH	&lt;C: #define MQ_APPL_IDENTITY_DATA_LENGTH 32	&gt;</body><body package="MQ-XIF">MQ_APPL_NAME_LENGTH	&lt;C: #define MQ_APPL_NAME_LENGTH 28	&gt;</body><body package="MQ-XIF">MQ_APPL_ORIGIN_DATA_LENGTH	&lt;C: #define MQ_APPL_ORIGIN_DATA_LENGTH 4	&gt;</body><body package="MQ-XIF">MQ_APPL_TAG_LENGTH	&lt;C: #define MQ_APPL_TAG_LENGTH 28	&gt;</body><body package="MQ-XIF">MQ_ATTENTION_ID_LENGTH	&lt;C: #define MQ_ATTENTION_ID_LENGTH 4	&gt;</body><body package="MQ-XIF">MQ_AUTHENTICATOR_LENGTH	&lt;C: #define MQ_AUTHENTICATOR_LENGTH 8	&gt;</body><body package="MQ-XIF">MQ_AUTH_INFO_CONN_NAME_LENGTH	&lt;C: #define MQ_AUTH_INFO_CONN_NAME_LENGTH 264	&gt;</body><body package="MQ-XIF">MQ_AUTH_INFO_DESC_LENGTH	&lt;C: #define MQ_AUTH_INFO_DESC_LENGTH 64	&gt;</body><body package="MQ-XIF">MQ_AUTH_INFO_NAME_LENGTH	&lt;C: #define MQ_AUTH_INFO_NAME_LENGTH 48	&gt;</body><body package="MQ-XIF">MQ_BRIDGE_NAME_LENGTH	&lt;C: #define MQ_BRIDGE_NAME_LENGTH 24	&gt;</body><body package="MQ-XIF">MQ_CANCEL_CODE_LENGTH	&lt;C: #define MQ_CANCEL_CODE_LENGTH 4	&gt;</body><body package="MQ-XIF">MQ_CF_STRUC_DESC_LENGTH	&lt;C: #define MQ_CF_STRUC_DESC_LENGTH 64	&gt;</body><body package="MQ-XIF">MQ_CF_STRUC_NAME_LENGTH	&lt;C: #define MQ_CF_STRUC_NAME_LENGTH 12	&gt;</body><body package="MQ-XIF">MQ_CHANNEL_DATE_LENGTH	&lt;C: #define MQ_CHANNEL_DATE_LENGTH 12	&gt;</body><body package="MQ-XIF">MQ_CHANNEL_DESC_LENGTH	&lt;C: #define MQ_CHANNEL_DESC_LENGTH 64	&gt;</body><body package="MQ-XIF">MQ_CHANNEL_NAME_LENGTH	&lt;C: #define MQ_CHANNEL_NAME_LENGTH 20	&gt;</body><body package="MQ-XIF">MQ_CHANNEL_TIME_LENGTH	&lt;C: #define MQ_CHANNEL_TIME_LENGTH 8	&gt;</body><body package="MQ-XIF">MQ_CLUSTER_NAME_LENGTH	&lt;C: #define MQ_CLUSTER_NAME_LENGTH 48	&gt;</body><body package="MQ-XIF">MQ_CONN_NAME_LENGTH	&lt;C: #define MQ_CONN_NAME_LENGTH 264	&gt;</body><body package="MQ-XIF">MQ_CONN_TAG_LENGTH	&lt;C: #define MQ_CONN_TAG_LENGTH 128	&gt;</body><body package="MQ-XIF">MQ_CORREL_ID_LENGTH	&lt;C: #define MQ_CORREL_ID_LENGTH 24	&gt;</body><body package="MQ-XIF">MQ_CREATION_DATE_LENGTH	&lt;C: #define MQ_CREATION_DATE_LENGTH 12	&gt;</body><body package="MQ-XIF">MQ_CREATION_TIME_LENGTH	&lt;C: #define MQ_CREATION_TIME_LENGTH 8	&gt;</body><body package="MQ-XIF">MQ_DATE_LENGTH	&lt;C: #define MQ_DATE_LENGTH 12	&gt;</body><body package="MQ-XIF">MQ_DISTINGUISHED_NAME_LENGTH	&lt;C: #define MQ_DISTINGUISHED_NAME_LENGTH 1024	&gt;</body><body package="MQ-XIF">MQ_EXIT_DATA_LENGTH	&lt;C: #define MQ_EXIT_DATA_LENGTH 32	&gt;</body><body package="MQ-XIF">MQ_EXIT_NAME_LENGTH	&lt;C: #define MQ_EXIT_NAME_LENGTH 128	&gt;</body><body package="MQ-XIF">MQ_EXIT_PD_AREA_LENGTH	&lt;C: #define MQ_EXIT_PD_AREA_LENGTH 48	&gt;</body><body package="MQ-XIF">MQ_EXIT_USER_AREA_LENGTH	&lt;C: #define MQ_EXIT_USER_AREA_LENGTH 16	&gt;</body><body package="MQ-XIF">MQ_FACILITY_LENGTH	&lt;C: #define MQ_FACILITY_LENGTH 8	&gt;</body><body package="MQ-XIF">MQ_FACILITY_LIKE_LENGTH	&lt;C: #define MQ_FACILITY_LIKE_LENGTH 4	&gt;</body><body package="MQ-XIF">MQ_FORMAT_LENGTH	&lt;C: #define MQ_FORMAT_LENGTH 8	&gt;</body><body package="MQ-XIF">MQ_FUNCTION_LENGTH	&lt;C: #define MQ_FUNCTION_LENGTH 4	&gt;</body><body package="MQ-XIF">MQ_GROUP_ID_LENGTH	&lt;C: #define MQ_GROUP_ID_LENGTH 24	&gt;</body><body package="MQ-XIF">MQ_LDAP_PASSWORD_LENGTH	&lt;C: #define MQ_LDAP_PASSWORD_LENGTH 32	&gt;</body><body package="MQ-XIF">MQ_LOCAL_ADDRESS_LENGTH	&lt;C: #define MQ_LOCAL_ADDRESS_LENGTH 48	&gt;</body><body package="MQ-XIF">MQ_LTERM_OVERRIDE_LENGTH	&lt;C: #define MQ_LTERM_OVERRIDE_LENGTH 8	&gt;</body><body package="MQ-XIF">MQ_LUWID_LENGTH	&lt;C: #define MQ_LUWID_LENGTH 16	&gt;</body><body package="MQ-XIF">MQ_MAX_EXIT_NAME_LENGTH	&lt;C: #define MQ_MAX_EXIT_NAME_LENGTH 128	&gt;</body><body package="MQ-XIF">MQ_MAX_MCA_USER_ID_LENGTH	&lt;C: #define MQ_MAX_MCA_USER_ID_LENGTH 64	&gt;</body><body package="MQ-XIF">MQ_MAX_USER_ID_LENGTH	&lt;C: #define MQ_MAX_USER_ID_LENGTH 64	&gt;</body><body package="MQ-XIF">MQ_MCA_JOB_NAME_LENGTH	&lt;C: #define MQ_MCA_JOB_NAME_LENGTH 28	&gt;</body><body package="MQ-XIF">MQ_MCA_NAME_LENGTH	&lt;C: #define MQ_MCA_NAME_LENGTH 20	&gt;</body><body package="MQ-XIF">MQ_MCA_USER_ID_LENGTH	&lt;C: #define MQ_MCA_USER_ID_LENGTH 12	&gt;</body><body package="MQ-XIF">MQ_MFS_MAP_NAME_LENGTH	&lt;C: #define MQ_MFS_MAP_NAME_LENGTH 8	&gt;</body><body package="MQ-XIF">MQ_MODE_NAME_LENGTH	&lt;C: #define MQ_MODE_NAME_LENGTH 8	&gt;</body><body package="MQ-XIF">MQ_MSG_HEADER_LENGTH	&lt;C: #define MQ_MSG_HEADER_LENGTH 4000	&gt;</body><body package="MQ-XIF">MQ_MSG_ID_LENGTH	&lt;C: #define MQ_MSG_ID_LENGTH 24	&gt;</body><body package="MQ-XIF">MQ_MSG_TOKEN_LENGTH	&lt;C: #define MQ_MSG_TOKEN_LENGTH 16	&gt;</body><body package="MQ-XIF">MQ_NAMELIST_DESC_LENGTH	&lt;C: #define MQ_NAMELIST_DESC_LENGTH 64	&gt;</body><body package="MQ-XIF">MQ_NAMELIST_NAME_LENGTH	&lt;C: #define MQ_NAMELIST_NAME_LENGTH 48	&gt;</body><body package="MQ-XIF">MQ_OBJECT_INSTANCE_ID_LENGTH	&lt;C: #define MQ_OBJECT_INSTANCE_ID_LENGTH 24	&gt;</body><body package="MQ-XIF">MQ_OBJECT_NAME_LENGTH	&lt;C: #define MQ_OBJECT_NAME_LENGTH 48	&gt;</body><body package="MQ-XIF">MQ_PASSWORD_LENGTH	&lt;C: #define MQ_PASSWORD_LENGTH 12	&gt;</body><body package="MQ-XIF">MQ_PROCESS_APPL_ID_LENGTH	&lt;C: #define MQ_PROCESS_APPL_ID_LENGTH 256	&gt;</body><body package="MQ-XIF">MQ_PROCESS_DESC_LENGTH	&lt;C: #define MQ_PROCESS_DESC_LENGTH 64	&gt;</body><body package="MQ-XIF">MQ_PROCESS_ENV_DATA_LENGTH	&lt;C: #define MQ_PROCESS_ENV_DATA_LENGTH 128	&gt;</body><body package="MQ-XIF">MQ_PROCESS_NAME_LENGTH	&lt;C: #define MQ_PROCESS_NAME_LENGTH 48	&gt;</body><body package="MQ-XIF">MQ_PROCESS_USER_DATA_LENGTH	&lt;C: #define MQ_PROCESS_USER_DATA_LENGTH 128	&gt;</body><body package="MQ-XIF">MQ_PUT_APPL_NAME_LENGTH	&lt;C: #define MQ_PUT_APPL_NAME_LENGTH 28	&gt;</body><body package="MQ-XIF">MQ_PUT_DATE_LENGTH	&lt;C: #define MQ_PUT_DATE_LENGTH 8	&gt;</body><body package="MQ-XIF">MQ_PUT_TIME_LENGTH	&lt;C: #define MQ_PUT_TIME_LENGTH 8	&gt;</body><body package="MQ-XIF">MQ_QSG_NAME_LENGTH	&lt;C: #define MQ_QSG_NAME_LENGTH 4	&gt;</body><body package="MQ-XIF">MQ_Q_DESC_LENGTH	&lt;C: #define MQ_Q_DESC_LENGTH 64	&gt;</body><body package="MQ-XIF">MQ_Q_MGR_DESC_LENGTH	&lt;C: #define MQ_Q_MGR_DESC_LENGTH 64	&gt;</body><body package="MQ-XIF">MQ_Q_MGR_IDENTIFIER_LENGTH	&lt;C: #define MQ_Q_MGR_IDENTIFIER_LENGTH 48	&gt;</body><body package="MQ-XIF">MQ_Q_MGR_NAME_LENGTH	&lt;C: #define MQ_Q_MGR_NAME_LENGTH 48	&gt;</body><body package="MQ-XIF">MQ_Q_NAME_LENGTH	&lt;C: #define MQ_Q_NAME_LENGTH 48	&gt;</body><body package="MQ-XIF">MQ_REMOTE_SYS_ID_LENGTH	&lt;C: #define MQ_REMOTE_SYS_ID_LENGTH 4	&gt;</body><body package="MQ-XIF">MQ_SECURITY_ID_LENGTH	&lt;C: #define MQ_SECURITY_ID_LENGTH 40	&gt;</body><body package="MQ-XIF">MQ_SERVICE_NAME_LENGTH	&lt;C: #define MQ_SERVICE_NAME_LENGTH 32	&gt;</body><body package="MQ-XIF">MQ_SERVICE_STEP_LENGTH	&lt;C: #define MQ_SERVICE_STEP_LENGTH 8	&gt;</body><body package="MQ-XIF">MQ_SHORT_CONN_NAME_LENGTH	&lt;C: #define MQ_SHORT_CONN_NAME_LENGTH 20	&gt;</body><body package="MQ-XIF">MQ_SSL_CIPHER_SPEC_LENGTH	&lt;C: #define MQ_SSL_CIPHER_SPEC_LENGTH 32	&gt;</body><body package="MQ-XIF">MQ_SSL_CRYPTO_HARDWARE_LENGTH	&lt;C: #define MQ_SSL_CRYPTO_HARDWARE_LENGTH 256	&gt;</body><body package="MQ-XIF">MQ_SSL_HANDSHAKE_STAGE_LENGTH	&lt;C: #define MQ_SSL_HANDSHAKE_STAGE_LENGTH 32	&gt;</body><body package="MQ-XIF">MQ_SSL_KEY_REPOSITORY_LENGTH	&lt;C: #define MQ_SSL_KEY_REPOSITORY_LENGTH 256	&gt;</body><body package="MQ-XIF">MQ_SSL_PEER_NAME_LENGTH	&lt;C: #define MQ_SSL_PEER_NAME_LENGTH 1024	&gt;</body><body package="MQ-XIF">MQ_SSL_SHORT_PEER_NAME_LENGTH	&lt;C: #define MQ_SSL_SHORT_PEER_NAME_LENGTH 256	&gt;</body><body package="MQ-XIF">MQ_START_CODE_LENGTH	&lt;C: #define MQ_START_CODE_LENGTH 4	&gt;</body><body package="MQ-XIF">MQ_STORAGE_CLASS_DESC_LENGTH	&lt;C: #define MQ_STORAGE_CLASS_DESC_LENGTH 64	&gt;</body><body package="MQ-XIF">MQ_STORAGE_CLASS_LENGTH	&lt;C: #define MQ_STORAGE_CLASS_LENGTH 8	&gt;</body><body package="MQ-XIF">MQ_SUB_IDENTITY_LENGTH	&lt;C: #define MQ_SUB_IDENTITY_LENGTH 128	&gt;</body><body package="MQ-XIF">MQ_TIME_LENGTH	&lt;C: #define MQ_TIME_LENGTH 8	&gt;</body><body package="MQ-XIF">MQ_TOTAL_EXIT_DATA_LENGTH	&lt;C: #define MQ_TOTAL_EXIT_DATA_LENGTH 999	&gt;</body><body package="MQ-XIF">MQ_TOTAL_EXIT_NAME_LENGTH	&lt;C: #define MQ_TOTAL_EXIT_NAME_LENGTH 999	&gt;</body><body package="MQ-XIF">MQ_TP_NAME_LENGTH	&lt;C: #define MQ_TP_NAME_LENGTH 64	&gt;</body><body package="MQ-XIF">MQ_TRANSACTION_ID_LENGTH	&lt;C: #define MQ_TRANSACTION_ID_LENGTH 4	&gt;</body><body package="MQ-XIF">MQ_TRAN_INSTANCE_ID_LENGTH	&lt;C: #define MQ_TRAN_INSTANCE_ID_LENGTH 16	&gt;</body><body package="MQ-XIF">MQ_TRIGGER_DATA_LENGTH	&lt;C: #define MQ_TRIGGER_DATA_LENGTH 64	&gt;</body><body package="MQ-XIF">MQ_USER_ID_LENGTH	&lt;C: #define MQ_USER_ID_LENGTH 12	&gt;</body><body package="MQ-XIF">MQ_XCF_GROUP_NAME_LENGTH	&lt;C: #define MQ_XCF_GROUP_NAME_LENGTH 8	&gt;</body><body package="MQ-XIF">MQ_XCF_MEMBER_NAME_LENGTH	&lt;C: #define MQ_XCF_MEMBER_NAME_LENGTH 16	&gt;</body><body package="MQ-XIF">__DATE__	&lt;C: #define __DATE__ "November 27, 2003"	&gt;</body><body package="MQ-XIF">__FILE__	&lt;C: #define __FILE__ 	&gt;</body><body package="MQ-XIF">__LINE__	&lt;C: #define __LINE__ 0	&gt;</body><body package="MQ-XIF">__STDC__	&lt;C: #define __STDC__ 1	&gt;</body><body package="MQ-XIF">__TIME__	&lt;C: #define __TIME__ "3:50:54 pm"	&gt;</body></methods><methods><class-id>MQ.MQTHAPIInterface</class-id> <category>types</category><body package="MQ-XIF">MQAIR	&lt;C: typedef struct tagMQAIR MQAIR&gt;</body><body package="MQ-XIF">MQBO	&lt;C: typedef struct tagMQBO MQBO&gt;</body><body package="MQ-XIF">MQBYTE	&lt;C: typedef unsigned char MQBYTE&gt;</body><body package="MQ-XIF">MQBYTE128	&lt;C: typedef MQBYTE MQBYTE128[128]&gt;</body><body package="MQ-XIF">MQBYTE16	&lt;C: typedef MQBYTE MQBYTE16[16]&gt;</body><body package="MQ-XIF">MQBYTE24	&lt;C: typedef MQBYTE MQBYTE24[24]&gt;</body><body package="MQ-XIF">MQBYTE32	&lt;C: typedef MQBYTE MQBYTE32[32]&gt;</body><body package="MQ-XIF">MQBYTE40	&lt;C: typedef MQBYTE MQBYTE40[40]&gt;</body><body package="MQ-XIF">MQBYTE48	&lt;C: typedef MQBYTE MQBYTE48[48]&gt;</body><body package="MQ-XIF">MQBYTE8	&lt;C: typedef MQBYTE MQBYTE8[8]&gt;</body><body package="MQ-XIF">MQCHAR	&lt;C: typedef char MQCHAR&gt;</body><body package="MQ-XIF">MQCHAR12	&lt;C: typedef MQCHAR MQCHAR12[12]&gt;</body><body package="MQ-XIF">MQCHAR128	&lt;C: typedef MQCHAR MQCHAR128[128]&gt;</body><body package="MQ-XIF">MQCHAR20	&lt;C: typedef MQCHAR MQCHAR20[20]&gt;</body><body package="MQ-XIF">MQCHAR256	&lt;C: typedef MQCHAR MQCHAR256[256]&gt;</body><body package="MQ-XIF">MQCHAR264	&lt;C: typedef MQCHAR MQCHAR264[264]&gt;</body><body package="MQ-XIF">MQCHAR28	&lt;C: typedef MQCHAR MQCHAR28[28]&gt;</body><body package="MQ-XIF">MQCHAR32	&lt;C: typedef MQCHAR MQCHAR32[32]&gt;</body><body package="MQ-XIF">MQCHAR4	&lt;C: typedef MQCHAR MQCHAR4[4]&gt;</body><body package="MQ-XIF">MQCHAR48	&lt;C: typedef MQCHAR MQCHAR48[48]&gt;</body><body package="MQ-XIF">MQCHAR64	&lt;C: typedef MQCHAR MQCHAR64[64]&gt;</body><body package="MQ-XIF">MQCHAR8	&lt;C: typedef MQCHAR MQCHAR8[8]&gt;</body><body package="MQ-XIF">MQCIH	&lt;C: typedef struct tagMQCIH MQCIH&gt;</body><body package="MQ-XIF">MQCNO	&lt;C: typedef struct tagMQCNO MQCNO&gt;</body><body package="MQ-XIF">MQDH	&lt;C: typedef struct tagMQDH MQDH&gt;</body><body package="MQ-XIF">MQDLH	&lt;C: typedef struct tagMQDLH MQDLH&gt;</body><body package="MQ-XIF">MQGMO	&lt;C: typedef struct tagMQGMO MQGMO&gt;</body><body package="MQ-XIF">MQHCONFIG	&lt;C: typedef void * MQHCONFIG&gt;</body><body package="MQ-XIF">MQHCONN	&lt;C: typedef MQLONG MQHCONN&gt;</body><body package="MQ-XIF">MQHOBJ	&lt;C: typedef MQLONG MQHOBJ&gt;</body><body package="MQ-XIF">MQIIH	&lt;C: typedef struct tagMQIIH MQIIH&gt;</body><body package="MQ-XIF">MQLONG	&lt;C: typedef long MQLONG&gt;</body><body package="MQ-XIF">MQMD	&lt;C: typedef struct tagMQMD MQMD&gt;</body><body package="MQ-XIF">MQMD1	&lt;C: typedef struct tagMQMD1 MQMD1&gt;</body><body package="MQ-XIF">MQMDE	&lt;C: typedef struct tagMQMDE MQMDE&gt;</body><body package="MQ-XIF">MQOD	&lt;C: typedef struct tagMQOD MQOD&gt;</body><body package="MQ-XIF">MQOR	&lt;C: typedef struct tagMQOR MQOR&gt;</body><body package="MQ-XIF">MQPID	&lt;C: typedef MQLONG MQPID&gt;</body><body package="MQ-XIF">MQPMO	&lt;C: typedef struct tagMQPMO MQPMO&gt;</body><body package="MQ-XIF">MQPTR	&lt;C: typedef void * MQPTR&gt;</body><body package="MQ-XIF">MQRFH	&lt;C: typedef struct tagMQRFH MQRFH&gt;</body><body package="MQ-XIF">MQRFH2	&lt;C: typedef struct tagMQRFH2 MQRFH2&gt;</body><body package="MQ-XIF">MQRMH	&lt;C: typedef struct tagMQRMH MQRMH&gt;</body><body package="MQ-XIF">MQRR	&lt;C: typedef struct tagMQRR MQRR&gt;</body><body package="MQ-XIF">MQSCO	&lt;C: typedef struct tagMQSCO MQSCO&gt;</body><body package="MQ-XIF">MQTID	&lt;C: typedef MQLONG MQTID&gt;</body><body package="MQ-XIF">MQTM	&lt;C: typedef struct tagMQTM MQTM&gt;</body><body package="MQ-XIF">MQTMC2	&lt;C: typedef struct tagMQTMC2 MQTMC2&gt;</body><body package="MQ-XIF">MQULONG	&lt;C: typedef unsigned long MQULONG&gt;</body><body package="MQ-XIF">MQWIH	&lt;C: typedef struct tagMQWIH MQWIH&gt;</body><body package="MQ-XIF">MQXQH	&lt;C: typedef struct tagMQXQH MQXQH&gt;</body><body package="MQ-XIF">PMQAIR	&lt;C: typedef MQAIR * PMQAIR&gt;</body><body package="MQ-XIF">PMQBO	&lt;C: typedef MQBO * PMQBO&gt;</body><body package="MQ-XIF">PMQBYTE	&lt;C: typedef MQBYTE * PMQBYTE&gt;</body><body package="MQ-XIF">PMQBYTE128	&lt;C: typedef MQBYTE128 * PMQBYTE128&gt;</body><body package="MQ-XIF">PMQBYTE16	&lt;C: typedef MQBYTE16 * PMQBYTE16&gt;</body><body package="MQ-XIF">PMQBYTE24	&lt;C: typedef MQBYTE24 * PMQBYTE24&gt;</body><body package="MQ-XIF">PMQBYTE32	&lt;C: typedef MQBYTE32 * PMQBYTE32&gt;</body><body package="MQ-XIF">PMQBYTE40	&lt;C: typedef MQBYTE40 * PMQBYTE40&gt;</body><body package="MQ-XIF">PMQBYTE48	&lt;C: typedef MQBYTE48 * PMQBYTE48&gt;</body><body package="MQ-XIF">PMQBYTE8	&lt;C: typedef MQBYTE8 * PMQBYTE8&gt;</body><body package="MQ-XIF">PMQCHAR	&lt;C: typedef MQCHAR * PMQCHAR&gt;</body><body package="MQ-XIF">PMQCHAR12	&lt;C: typedef MQCHAR12 * PMQCHAR12&gt;</body><body package="MQ-XIF">PMQCHAR128	&lt;C: typedef MQCHAR128 * PMQCHAR128&gt;</body><body package="MQ-XIF">PMQCHAR20	&lt;C: typedef MQCHAR20 * PMQCHAR20&gt;</body><body package="MQ-XIF">PMQCHAR256	&lt;C: typedef MQCHAR256 * PMQCHAR256&gt;</body><body package="MQ-XIF">PMQCHAR264	&lt;C: typedef MQCHAR264 * PMQCHAR264&gt;</body><body package="MQ-XIF">PMQCHAR28	&lt;C: typedef MQCHAR28 * PMQCHAR28&gt;</body><body package="MQ-XIF">PMQCHAR32	&lt;C: typedef MQCHAR32 * PMQCHAR32&gt;</body><body package="MQ-XIF">PMQCHAR4	&lt;C: typedef MQCHAR4 * PMQCHAR4&gt;</body><body package="MQ-XIF">PMQCHAR48	&lt;C: typedef MQCHAR48 * PMQCHAR48&gt;</body><body package="MQ-XIF">PMQCHAR64	&lt;C: typedef MQCHAR64 * PMQCHAR64&gt;</body><body package="MQ-XIF">PMQCHAR8	&lt;C: typedef MQCHAR8 * PMQCHAR8&gt;</body><body package="MQ-XIF">PMQCIH	&lt;C: typedef MQCIH * PMQCIH&gt;</body><body package="MQ-XIF">PMQCNO	&lt;C: typedef MQCNO * PMQCNO&gt;</body><body package="MQ-XIF">PMQDH	&lt;C: typedef MQDH * PMQDH&gt;</body><body package="MQ-XIF">PMQDLH	&lt;C: typedef MQDLH * PMQDLH&gt;</body><body package="MQ-XIF">PMQFUNC	&lt;C: typedef void * PMQFUNC&gt;</body><body package="MQ-XIF">PMQGMO	&lt;C: typedef MQGMO * PMQGMO&gt;</body><body package="MQ-XIF">PMQHCONFIG	&lt;C: typedef MQHCONFIG * PMQHCONFIG&gt;</body><body package="MQ-XIF">PMQHCONN	&lt;C: typedef MQHCONN * PMQHCONN&gt;</body><body package="MQ-XIF">PMQHOBJ	&lt;C: typedef MQHOBJ * PMQHOBJ&gt;</body><body package="MQ-XIF">PMQIIH	&lt;C: typedef MQIIH * PMQIIH&gt;</body><body package="MQ-XIF">PMQLONG	&lt;C: typedef MQLONG * PMQLONG&gt;</body><body package="MQ-XIF">PMQMD	&lt;C: typedef MQMD * PMQMD&gt;</body><body package="MQ-XIF">PMQMD1	&lt;C: typedef MQMD1 * PMQMD1&gt;</body><body package="MQ-XIF">PMQMDE	&lt;C: typedef MQMDE * PMQMDE&gt;</body><body package="MQ-XIF">PMQOD	&lt;C: typedef MQOD * PMQOD&gt;</body><body package="MQ-XIF">PMQOR	&lt;C: typedef MQOR * PMQOR&gt;</body><body package="MQ-XIF">PMQPID	&lt;C: typedef MQPID * PMQPID&gt;</body><body package="MQ-XIF">PMQPMO	&lt;C: typedef MQPMO * PMQPMO&gt;</body><body package="MQ-XIF">PMQPTR	&lt;C: typedef MQPTR * PMQPTR&gt;</body><body package="MQ-XIF">PMQRFH	&lt;C: typedef MQRFH * PMQRFH&gt;</body><body package="MQ-XIF">PMQRFH2	&lt;C: typedef MQRFH2 * PMQRFH2&gt;</body><body package="MQ-XIF">PMQRMH	&lt;C: typedef MQRMH * PMQRMH&gt;</body><body package="MQ-XIF">PMQRR	&lt;C: typedef MQRR * PMQRR&gt;</body><body package="MQ-XIF">PMQSCO	&lt;C: typedef MQSCO * PMQSCO&gt;</body><body package="MQ-XIF">PMQTID	&lt;C: typedef MQTID * PMQTID&gt;</body><body package="MQ-XIF">PMQTM	&lt;C: typedef MQTM * PMQTM&gt;</body><body package="MQ-XIF">PMQTMC2	&lt;C: typedef MQTMC2 * PMQTMC2&gt;</body><body package="MQ-XIF">PMQULONG	&lt;C: typedef MQULONG * PMQULONG&gt;</body><body package="MQ-XIF">PMQVOID	&lt;C: typedef void * PMQVOID&gt;</body><body package="MQ-XIF">PMQWIH	&lt;C: typedef MQWIH * PMQWIH&gt;</body><body package="MQ-XIF">PMQXQH	&lt;C: typedef MQXQH * PMQXQH&gt;</body><body package="MQ-XIF">PPMQBO	&lt;C: typedef PMQBO * PPMQBO&gt;</body><body package="MQ-XIF">PPMQBYTE	&lt;C: typedef PMQBYTE * PPMQBYTE&gt;</body><body package="MQ-XIF">PPMQCHAR	&lt;C: typedef PMQCHAR * PPMQCHAR&gt;</body><body package="MQ-XIF">PPMQCNO	&lt;C: typedef PMQCNO * PPMQCNO&gt;</body><body package="MQ-XIF">PPMQGMO	&lt;C: typedef PMQGMO * PPMQGMO&gt;</body><body package="MQ-XIF">PPMQHCONN	&lt;C: typedef PMQHCONN * PPMQHCONN&gt;</body><body package="MQ-XIF">PPMQHOBJ	&lt;C: typedef PMQHOBJ * PPMQHOBJ&gt;</body><body package="MQ-XIF">PPMQLONG	&lt;C: typedef PMQLONG * PPMQLONG&gt;</body><body package="MQ-XIF">PPMQMD	&lt;C: typedef PMQMD * PPMQMD&gt;</body><body package="MQ-XIF">PPMQOD	&lt;C: typedef PMQOD * PPMQOD&gt;</body><body package="MQ-XIF">PPMQPMO	&lt;C: typedef PMQPMO * PPMQPMO&gt;</body><body package="MQ-XIF">PPMQULONG	&lt;C: typedef PMQULONG * PPMQULONG&gt;</body><body package="MQ-XIF">PPMQVOID	&lt;C: typedef PMQVOID * PPMQVOID&gt;</body></methods><methods><class-id>MQ.MQTHAPIInterface</class-id> <category>structs</category><body package="MQ-XIF">tagMQAIR	&lt;C: struct tagMQAIR {			MQCHAR4 StrucId;			MQLONG Version, AuthInfoType;			MQCHAR264 AuthInfoConnName;			PMQCHAR LDAPUserNamePtr;			MQLONG LDAPUserNameOffset, LDAPUserNameLength;			MQCHAR32 LDAPPassword;		}&gt;</body><body package="MQ-XIF">tagMQBO	&lt;C: struct tagMQBO {			MQCHAR4 StrucId;			MQLONG Version, Options;		}&gt;</body><body package="MQ-XIF">tagMQCIH	&lt;C: struct tagMQCIH {			MQCHAR4 StrucId;			MQLONG Version, StrucLength, Encoding, CodedCharSetId;			MQCHAR8 Format;			MQLONG Flags, ReturnCode, CompCode, Reason, UOWControl, GetWaitInterval, LinkType, OutputDataLength, FacilityKeepTime, ADSDescriptor, ConversationalTask, TaskEndStatus;			MQBYTE8 Facility;			MQCHAR4 Function, AbendCode;			MQCHAR8 Authenticator, Reserved1, ReplyToFormat;			MQCHAR4 RemoteSysId, RemoteTransId, TransactionId, FacilityLike, AttentionId, StartCode, CancelCode, NextTransactionId;			MQCHAR8 Reserved2, Reserved3;			MQLONG CursorPosition, ErrorOffset, InputItem, Reserved4;		}&gt;</body><body package="MQ-XIF">tagMQCNO	&lt;C: struct tagMQCNO {			MQCHAR4 StrucId;			MQLONG Version, Options, ClientConnOffset;			MQPTR ClientConnPtr;			MQBYTE128 ConnTag;			PMQSCO SSLConfigPtr;			MQLONG SSLConfigOffset;		}&gt;</body><body package="MQ-XIF">tagMQDH	&lt;C: struct tagMQDH {			MQCHAR4 StrucId;			MQLONG Version, StrucLength, Encoding, CodedCharSetId;			MQCHAR8 Format;			MQLONG Flags, PutMsgRecFields, RecsPresent, ObjectRecOffset, PutMsgRecOffset;		}&gt;</body><body package="MQ-XIF">tagMQDLH	&lt;C: struct tagMQDLH {			MQCHAR4 StrucId;			MQLONG Version, Reason;			MQCHAR48 DestQName, DestQMgrName;			MQLONG Encoding, CodedCharSetId;			MQCHAR8 Format;			MQLONG PutApplType;			MQCHAR28 PutApplName;			MQCHAR8 PutDate, PutTime;		}&gt;</body><body package="MQ-XIF">tagMQGMO	&lt;C: struct tagMQGMO {			MQCHAR4 StrucId;			MQLONG Version, Options, WaitInterval, Signal1, Signal2;			MQCHAR48 ResolvedQName;			MQLONG MatchOptions;			MQCHAR GroupStatus, SegmentStatus, Segmentation, Reserved1;			MQBYTE16 MsgToken;			MQLONG ReturnedLength;		}&gt;</body><body package="MQ-XIF">tagMQIIH	&lt;C: struct tagMQIIH {			MQCHAR4 StrucId;			MQLONG Version, StrucLength, Encoding, CodedCharSetId;			MQCHAR8 Format;			MQLONG Flags;			MQCHAR8 LTermOverride, MFSMapName, ReplyToFormat, Authenticator;			MQBYTE16 TranInstanceId;			MQCHAR TranState, CommitMode, SecurityScope, Reserved;		}&gt;</body><body package="MQ-XIF">tagMQMD	&lt;C: struct tagMQMD {			MQCHAR4 StrucId;			MQLONG Version, Report, MsgType, Expiry, Feedback, Encoding, CodedCharSetId;			MQCHAR8 Format;			MQLONG Priority, Persistence;			MQBYTE24 MsgId, CorrelId;			MQLONG BackoutCount;			MQCHAR48 ReplyToQ, ReplyToQMgr;			MQCHAR12 UserIdentifier;			MQBYTE32 AccountingToken;			MQCHAR32 ApplIdentityData;			MQLONG PutApplType;			MQCHAR28 PutApplName;			MQCHAR8 PutDate, PutTime;			MQCHAR4 ApplOriginData;			MQBYTE24 GroupId;			MQLONG MsgSeqNumber, Offset, MsgFlags, OriginalLength;		}&gt;</body><body package="MQ-XIF">tagMQMD1	&lt;C: struct tagMQMD1 {			MQCHAR4 StrucId;			MQLONG Version, Report, MsgType, Expiry, Feedback, Encoding, CodedCharSetId;			MQCHAR8 Format;			MQLONG Priority, Persistence;			MQBYTE24 MsgId, CorrelId;			MQLONG BackoutCount;			MQCHAR48 ReplyToQ, ReplyToQMgr;			MQCHAR12 UserIdentifier;			MQBYTE32 AccountingToken;			MQCHAR32 ApplIdentityData;			MQLONG PutApplType;			MQCHAR28 PutApplName;			MQCHAR8 PutDate, PutTime;			MQCHAR4 ApplOriginData;		}&gt;</body><body package="MQ-XIF">tagMQMDE	&lt;C: struct tagMQMDE {			MQCHAR4 StrucId;			MQLONG Version, StrucLength, Encoding, CodedCharSetId;			MQCHAR8 Format;			MQLONG Flags;			MQBYTE24 GroupId;			MQLONG MsgSeqNumber, Offset, MsgFlags, OriginalLength;		}&gt;</body><body package="MQ-XIF">tagMQOD	&lt;C: struct tagMQOD { 			MQCHAR4 StrucId;			MQLONG Version, ObjectType;			MQCHAR48 ObjectName, ObjectQMgrName, DynamicQName;			MQCHAR12 AlternateUserId;			MQLONG RecsPresent, KnownDestCount, UnknownDestCount, InvalidDestCount, ObjectRecOffset, ResponseRecOffset;			MQPTR ObjectRecPtr, ResponseRecPtr;			MQBYTE40 AlternateSecurityId;			MQCHAR48 ResolvedQName, ResolvedQMgrName;		}&gt;</body><body package="MQ-XIF">tagMQOR	&lt;C: struct tagMQOR {			MQCHAR48 ObjectName, ObjectQMgrName;		}&gt;</body><body package="MQ-XIF">tagMQPMO	&lt;C: struct tagMQPMO {			MQCHAR4 StrucId;			MQLONG Version, Options, Timeout;			MQHOBJ Context;			MQLONG KnownDestCount, UnknownDestCount, InvalidDestCount;			MQCHAR48 ResolvedQName, ResolvedQMgrName;			MQLONG RecsPresent, PutMsgRecFields, PutMsgRecOffset, ResponseRecOffset;			MQPTR PutMsgRecPtr, ResponseRecPtr;		}&gt;</body><body package="MQ-XIF">tagMQRFH	&lt;C: struct tagMQRFH {			MQCHAR4 StrucId;			MQLONG Version, StrucLength, Encoding, CodedCharSetId;			MQCHAR8 Format;			MQLONG Flags;		}&gt;</body><body package="MQ-XIF">tagMQRFH2	&lt;C: struct tagMQRFH2 {			MQCHAR4 StrucId;			MQLONG Version, StrucLength, Encoding, CodedCharSetId;			MQCHAR8 Format;			MQLONG Flags, NameValueCCSID;		}&gt;</body><body package="MQ-XIF">tagMQRMH	&lt;C: struct tagMQRMH {			MQCHAR4 StrucId;			MQLONG Version, StrucLength, Encoding, CodedCharSetId;			MQCHAR8 Format;			MQLONG Flags;			MQCHAR8 ObjectType;			MQBYTE24 ObjectInstanceId;			MQLONG SrcEnvLength, SrcEnvOffset, SrcNameLength, SrcNameOffset, DestEnvLength, DestEnvOffset, DestNameLength, DestNameOffset, DataLogicalLength, DataLogicalOffset, DataLogicalOffset2;		}&gt;</body><body package="MQ-XIF">tagMQRR	&lt;C: struct tagMQRR {			MQLONG CompCode, Reason;		}&gt;</body><body package="MQ-XIF">tagMQSCO	&lt;C: struct tagMQSCO {			MQCHAR4 StrucId;			MQLONG Version;			MQCHAR256 KeyRepository, CryptoHardware;			MQLONG AuthInfoRecCount, AuthInfoRecOffset;			PMQAIR AuthInfoRecPtr;		}&gt;</body><body package="MQ-XIF">tagMQTM	&lt;C: struct tagMQTM {			MQCHAR4 StrucId;			MQLONG Version;			MQCHAR48 QName, ProcessName;			MQCHAR64 TriggerData;			MQLONG ApplType;			MQCHAR256 ApplId;			MQCHAR128 EnvData, UserData;		}&gt;</body><body package="MQ-XIF">tagMQTMC2	&lt;C: struct tagMQTMC2 {			MQCHAR4 StrucId, Version;			MQCHAR48 QName, ProcessName;			MQCHAR64 TriggerData;			MQCHAR4 ApplType;			MQCHAR256 ApplId;			MQCHAR128 EnvData, UserData;			MQCHAR48 QMgrName;		}&gt;</body><body package="MQ-XIF">tagMQWIH	&lt;C: struct tagMQWIH {			MQCHAR4 StrucId;			MQLONG Version, StrucLength, Encoding, CodedCharSetId;			MQCHAR8 Format;			MQLONG Flags;			MQCHAR32 ServiceName;			MQCHAR8 ServiceStep;			MQBYTE16 MsgToken;			MQCHAR32 Reserved;		}&gt;</body><body package="MQ-XIF">tagMQXQH	&lt;C: struct tagMQXQH {			MQCHAR4 StrucId;			MQLONG Version;			MQCHAR48 RemoteQName, RemoteQMgrName;			MQMD1 MsgDesc;		}&gt;</body></methods><methods><class-id>MQ.MQTHAPIInterface</class-id> <category>private-accessing</category><body package="MQ-XIF">copyToHeapSelector	^#copyToHeap</body><body package="MQ-XIF">gcCopyToHeapSelector	^#gcCopyToHeap</body><body package="MQ-XIF">gcMallocSelector	^#gcMalloc:</body><body package="MQ-XIF">mallocSelector	^#malloc:</body></methods><methods><class-id>MQ.MQTHAPIClientInterface</class-id> <category>defines</category><body package="MQ-XIF">MQACH_CURRENT_LENGTH	&lt;C: #define MQACH_CURRENT_LENGTH 68	&gt;</body><body package="MQ-XIF">MQACH_CURRENT_VERSION	&lt;C: #define MQACH_CURRENT_VERSION 1	&gt;</body><body package="MQ-XIF">MQACH_DEFAULT	&lt;C: #define MQACH_DEFAULT {MQACH_STRUC_ID_ARRAY},MQACH_CURRENT_VERSION,MQACH_CURRENT_LENGTH,0,{""},NULL	&gt;</body><body package="MQ-XIF">MQACH_LENGTH_1	&lt;C: #define MQACH_LENGTH_1 68	&gt;</body><body package="MQ-XIF">MQACH_STRUC_ID	&lt;C: #define MQACH_STRUC_ID "ACH "	&gt;</body><body package="MQ-XIF">MQACH_STRUC_ID_ARRAY	&lt;C: #define MQACH_STRUC_ID_ARRAY 65,67,72,32	&gt;</body><body package="MQ-XIF">MQACH_VERSION_1	&lt;C: #define MQACH_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQAXC_CURRENT_VERSION	&lt;C: #define MQAXC_CURRENT_VERSION 1	&gt;</body><body package="MQ-XIF">MQAXC_DEFAULT	&lt;C: #define MQAXC_DEFAULT {MQAXC_STRUC_ID_ARRAY},MQAXC_CURRENT_VERSION,MQXE_OTHER,{""},{MQSID_NONE_ARRAY},{""},0,0,NULL,NULL,{""},MQAT_DEFAULT,0,0	&gt;</body><body package="MQ-XIF">MQAXC_STRUC_ID	&lt;C: #define MQAXC_STRUC_ID "AXC "	&gt;</body><body package="MQ-XIF">MQAXC_STRUC_ID_ARRAY	&lt;C: #define MQAXC_STRUC_ID_ARRAY 65,88,67,32	&gt;</body><body package="MQ-XIF">MQAXC_VERSION_1	&lt;C: #define MQAXC_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQAXP_CURRENT_VERSION	&lt;C: #define MQAXP_CURRENT_VERSION 1	&gt;</body><body package="MQ-XIF">MQAXP_DEFAULT	&lt;C: #define MQAXP_DEFAULT {MQAXP_STRUC_ID_ARRAY},MQAXP_CURRENT_VERSION,MQXT_API_EXIT,0,MQXCC_OK,MQXR2_DEFAULT_CONTINUATION,MQFB_NONE,MQXACT_EXTERNAL,{MQXUA_NONE_ARRAY},{""},{""},{MQXPDA_NONE_ARRAY},{""},NULL,NULL,0	&gt;</body><body package="MQ-XIF">MQAXP_STRUC_ID	&lt;C: #define MQAXP_STRUC_ID "AXP "	&gt;</body><body package="MQ-XIF">MQAXP_STRUC_ID_ARRAY	&lt;C: #define MQAXP_STRUC_ID_ARRAY 65,88,80,32	&gt;</body><body package="MQ-XIF">MQAXP_VERSION_1	&lt;C: #define MQAXP_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQCDC_NO_SENDER_CONVERSION	&lt;C: #define MQCDC_NO_SENDER_CONVERSION 0	&gt;</body><body package="MQ-XIF">MQCDC_SENDER_CONVERSION	&lt;C: #define MQCDC_SENDER_CONVERSION 1	&gt;</body><body package="MQ-XIF">MQCD_CLIENT_CONN_DEFAULT	&lt;C: #define MQCD_CLIENT_CONN_DEFAULT {""},MQCD_CURRENT_VERSION,MQCHT_CLNTCONN,MQXPT_TCP,{""},{""},{""},{""},{""},{""},{""},50,6000,10,60,999999999,1200,{""},{""},{""},{""},999999999,4194304,MQPA_DEFAULT,MQCDC_NO_SENDER_CONVERSION,{""},{""},{""},{""},{""},{""},{""},MQMCAT_PROCESS,{""},{""},{""},{""},{""},10,1000,1,0,MQNPMS_FAST,MQCD_CURRENT_LENGTH,MQ_EXIT_NAME_LENGTH,MQ_EXIT_DATA_LENGTH,0,0,0,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,NULL,NULL,{MQSID_NONE_ARRAY},{MQSID_NONE_ARRAY},{""},NULL,0,MQSCA_REQUIRED,(-1),{""},0	&gt;</body><body package="MQ-XIF">MQCD_CURRENT_LENGTH	&lt;C: #define MQCD_CURRENT_LENGTH 1748	&gt;</body><body package="MQ-XIF">MQCD_CURRENT_VERSION	&lt;C: #define MQCD_CURRENT_VERSION 7	&gt;</body><body package="MQ-XIF">MQCD_DEFAULT	&lt;C: #define MQCD_DEFAULT {""},MQCD_CURRENT_VERSION,MQCHT_SENDER,MQXPT_LU62,{""},{""},{""},{""},{""},{""},{""},50,6000,10,60,999999999,1200,{""},{""},{""},{""},999999999,4194304,MQPA_DEFAULT,MQCDC_NO_SENDER_CONVERSION,{""},{""},{""},{""},{""},{""},{""},MQMCAT_PROCESS,{""},{""},{""},{""},{""},10,1000,300,0,MQNPMS_FAST,MQCD_CURRENT_LENGTH,MQ_EXIT_NAME_LENGTH,MQ_EXIT_DATA_LENGTH,0,0,0,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,NULL,NULL,{MQSID_NONE_ARRAY},{MQSID_NONE_ARRAY},{""},NULL,0,MQSCA_REQUIRED,MQKAI_AUTO,{""},0	&gt;</body><body package="MQ-XIF">MQCD_LENGTH_4	&lt;C: #define MQCD_LENGTH_4 1540	&gt;</body><body package="MQ-XIF">MQCD_LENGTH_5	&lt;C: #define MQCD_LENGTH_5 1552	&gt;</body><body package="MQ-XIF">MQCD_LENGTH_6	&lt;C: #define MQCD_LENGTH_6 1648	&gt;</body><body package="MQ-XIF">MQCD_LENGTH_7	&lt;C: #define MQCD_LENGTH_7 1748	&gt;</body><body package="MQ-XIF">MQCD_VERSION_1	&lt;C: #define MQCD_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQCD_VERSION_2	&lt;C: #define MQCD_VERSION_2 2	&gt;</body><body package="MQ-XIF">MQCD_VERSION_3	&lt;C: #define MQCD_VERSION_3 3	&gt;</body><body package="MQ-XIF">MQCD_VERSION_4	&lt;C: #define MQCD_VERSION_4 4	&gt;</body><body package="MQ-XIF">MQCD_VERSION_5	&lt;C: #define MQCD_VERSION_5 5	&gt;</body><body package="MQ-XIF">MQCD_VERSION_6	&lt;C: #define MQCD_VERSION_6 6	&gt;</body><body package="MQ-XIF">MQCD_VERSION_7	&lt;C: #define MQCD_VERSION_7 7	&gt;</body><body package="MQ-XIF">MQCF_DIST_LISTS	&lt;C: #define MQCF_DIST_LISTS 0x00000001	&gt;</body><body package="MQ-XIF">MQCF_NONE	&lt;C: #define MQCF_NONE 0x00000000	&gt;</body><body package="MQ-XIF">MQCHANNELAUTODEFEXIT	&lt;C: #define MQCHANNELAUTODEFEXIT MQ_CHANNEL_AUTO_DEF_EXIT	&gt;</body><body package="MQ-XIF">MQCHANNELEXIT	&lt;C: #define MQCHANNELEXIT MQ_CHANNEL_EXIT	&gt;</body><body package="MQ-XIF">MQCHT_ALL	&lt;C: #define MQCHT_ALL 5	&gt;</body><body package="MQ-XIF">MQCHT_CLNTCONN	&lt;C: #define MQCHT_CLNTCONN 6	&gt;</body><body package="MQ-XIF">MQCHT_CLUSRCVR	&lt;C: #define MQCHT_CLUSRCVR 8	&gt;</body><body package="MQ-XIF">MQCHT_CLUSSDR	&lt;C: #define MQCHT_CLUSSDR 9	&gt;</body><body package="MQ-XIF">MQCHT_RECEIVER	&lt;C: #define MQCHT_RECEIVER 3	&gt;</body><body package="MQ-XIF">MQCHT_REQUESTER	&lt;C: #define MQCHT_REQUESTER 4	&gt;</body><body package="MQ-XIF">MQCHT_SENDER	&lt;C: #define MQCHT_SENDER 1	&gt;</body><body package="MQ-XIF">MQCHT_SERVER	&lt;C: #define MQCHT_SERVER 2	&gt;</body><body package="MQ-XIF">MQCHT_SVRCONN	&lt;C: #define MQCHT_SVRCONN 7	&gt;</body><body package="MQ-XIF">MQCLCT_DYNAMIC	&lt;C: #define MQCLCT_DYNAMIC 1	&gt;</body><body package="MQ-XIF">MQCLCT_STATIC	&lt;C: #define MQCLCT_STATIC 0	&gt;</body><body package="MQ-XIF">MQCXP_CURRENT_VERSION	&lt;C: #define MQCXP_CURRENT_VERSION 5	&gt;</body><body package="MQ-XIF">MQCXP_DEFAULT	&lt;C: #define MQCXP_DEFAULT {MQCXP_STRUC_ID_ARRAY},MQCXP_CURRENT_VERSION,0,0,MQXCC_OK,MQXR2_PUT_WITH_DEF_ACTION,0,0,{MQXUA_NONE_ARRAY},{""},0,0,0,0,{""},0,MQCF_NONE,1,0	&gt;</body><body package="MQ-XIF">MQCXP_STRUC_ID	&lt;C: #define MQCXP_STRUC_ID "CXP "	&gt;</body><body package="MQ-XIF">MQCXP_STRUC_ID_ARRAY	&lt;C: #define MQCXP_STRUC_ID_ARRAY 67,88,80,32	&gt;</body><body package="MQ-XIF">MQCXP_VERSION_1	&lt;C: #define MQCXP_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQCXP_VERSION_2	&lt;C: #define MQCXP_VERSION_2 2	&gt;</body><body package="MQ-XIF">MQCXP_VERSION_3	&lt;C: #define MQCXP_VERSION_3 3	&gt;</body><body package="MQ-XIF">MQCXP_VERSION_4	&lt;C: #define MQCXP_VERSION_4 4	&gt;</body><body package="MQ-XIF">MQCXP_VERSION_5	&lt;C: #define MQCXP_VERSION_5 5	&gt;</body><body package="MQ-XIF">MQDATACONVEXIT	&lt;C: #define MQDATACONVEXIT MQ_DATA_CONV_EXIT	&gt;</body><body package="MQ-XIF">MQDCC_DEFAULT_CONVERSION	&lt;C: #define MQDCC_DEFAULT_CONVERSION 0x00000001	&gt;</body><body package="MQ-XIF">MQDCC_FILL_TARGET_BUFFER	&lt;C: #define MQDCC_FILL_TARGET_BUFFER 0x00000002	&gt;</body><body package="MQ-XIF">MQDCC_INT_DEFAULT_CONVERSION	&lt;C: #define MQDCC_INT_DEFAULT_CONVERSION 0x00000004	&gt;</body><body package="MQ-XIF">MQDCC_NONE	&lt;C: #define MQDCC_NONE 0x00000000	&gt;</body><body package="MQ-XIF">MQDCC_SOURCE_ENC_FACTOR	&lt;C: #define MQDCC_SOURCE_ENC_FACTOR 16	&gt;</body><body package="MQ-XIF">MQDCC_SOURCE_ENC_MASK	&lt;C: #define MQDCC_SOURCE_ENC_MASK 0x000000F0	&gt;</body><body package="MQ-XIF">MQDCC_SOURCE_ENC_NATIVE	&lt;C: #define MQDCC_SOURCE_ENC_NATIVE 0x00000010	&gt;</body><body package="MQ-XIF">MQDCC_SOURCE_ENC_NORMAL	&lt;C: #define MQDCC_SOURCE_ENC_NORMAL 0x00000010	&gt;</body><body package="MQ-XIF">MQDCC_SOURCE_ENC_REVERSED	&lt;C: #define MQDCC_SOURCE_ENC_REVERSED 0x00000020	&gt;</body><body package="MQ-XIF">MQDCC_SOURCE_ENC_UNDEFINED	&lt;C: #define MQDCC_SOURCE_ENC_UNDEFINED 0x00000000	&gt;</body><body package="MQ-XIF">MQDCC_TARGET_ENC_FACTOR	&lt;C: #define MQDCC_TARGET_ENC_FACTOR 256	&gt;</body><body package="MQ-XIF">MQDCC_TARGET_ENC_MASK	&lt;C: #define MQDCC_TARGET_ENC_MASK 0x00000F00	&gt;</body><body package="MQ-XIF">MQDCC_TARGET_ENC_NATIVE	&lt;C: #define MQDCC_TARGET_ENC_NATIVE 0x00000100	&gt;</body><body package="MQ-XIF">MQDCC_TARGET_ENC_NORMAL	&lt;C: #define MQDCC_TARGET_ENC_NORMAL 0x00000100	&gt;</body><body package="MQ-XIF">MQDCC_TARGET_ENC_REVERSED	&lt;C: #define MQDCC_TARGET_ENC_REVERSED 0x00000200	&gt;</body><body package="MQ-XIF">MQDCC_TARGET_ENC_UNDEFINED	&lt;C: #define MQDCC_TARGET_ENC_UNDEFINED 0x00000000	&gt;</body><body package="MQ-XIF">MQDT_APPL	&lt;C: #define MQDT_APPL 1	&gt;</body><body package="MQ-XIF">MQDT_BROKER	&lt;C: #define MQDT_BROKER 2	&gt;</body><body package="MQ-XIF">MQDXP_CURRENT_VERSION	&lt;C: #define MQDXP_CURRENT_VERSION 1	&gt;</body><body package="MQ-XIF">MQDXP_DEFAULT	&lt;C: #define MQDXP_DEFAULT {MQDXP_STRUC_ID_ARRAY},MQDXP_CURRENT_VERSION,0,0,0,0,0,MQCC_OK,MQRC_NONE,MQXDR_CONVERSION_FAILED,0	&gt;</body><body package="MQ-XIF">MQDXP_STRUC_ID	&lt;C: #define MQDXP_STRUC_ID "DXP "	&gt;</body><body package="MQ-XIF">MQDXP_STRUC_ID_ARRAY	&lt;C: #define MQDXP_STRUC_ID_ARRAY 68,88,80,32	&gt;</body><body package="MQ-XIF">MQDXP_VERSION_1	&lt;C: #define MQDXP_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQKAI_AUTO	&lt;C: #define MQKAI_AUTO (-1)	&gt;</body><body package="MQ-XIF">MQMCAT_PROCESS	&lt;C: #define MQMCAT_PROCESS 1	&gt;</body><body package="MQ-XIF">MQMCAT_THREAD	&lt;C: #define MQMCAT_THREAD 2	&gt;</body><body package="MQ-XIF">MQNPMS_FAST	&lt;C: #define MQNPMS_FAST 2	&gt;</body><body package="MQ-XIF">MQNPMS_NORMAL	&lt;C: #define MQNPMS_NORMAL 1	&gt;</body><body package="MQ-XIF">MQPA_ALTERNATE_OR_MCA	&lt;C: #define MQPA_ALTERNATE_OR_MCA 4	&gt;</body><body package="MQ-XIF">MQPA_CONTEXT	&lt;C: #define MQPA_CONTEXT 2	&gt;</body><body package="MQ-XIF">MQPA_DEFAULT	&lt;C: #define MQPA_DEFAULT 1	&gt;</body><body package="MQ-XIF">MQPA_ONLY_MCA	&lt;C: #define MQPA_ONLY_MCA 3	&gt;</body><body package="MQ-XIF">MQPXP_CURRENT_VERSION	&lt;C: #define MQPXP_CURRENT_VERSION 1	&gt;</body><body package="MQ-XIF">MQPXP_DEFAULT	&lt;C: #define MQPXP_DEFAULT {MQPXP_STRUC_ID_ARRAY},MQPXP_CURRENT_VERSION,MQXT_PUBSUB_ROUTING_EXIT,0,MQXCC_OK,0,MQFB_NONE,1,{MQXUA_NONE_ARRAY},{""},0,0,0,MQDT_APPL,NULL,NULL,NULL,{""},{""},{""},{""}	&gt;</body><body package="MQ-XIF">MQPXP_STRUC_ID	&lt;C: #define MQPXP_STRUC_ID "PXP "	&gt;</body><body package="MQ-XIF">MQPXP_STRUC_ID_ARRAY	&lt;C: #define MQPXP_STRUC_ID_ARRAY 80,88,80,32	&gt;</body><body package="MQ-XIF">MQPXP_VERSION_1	&lt;C: #define MQPXP_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQQF_LOCAL_Q	&lt;C: #define MQQF_LOCAL_Q 0x00000001	&gt;</body><body package="MQ-XIF">MQQMF_AVAILABLE	&lt;C: #define MQQMF_AVAILABLE 0x00000020	&gt;</body><body package="MQ-XIF">MQQMF_CLUSSDR_AUTO_DEFINED	&lt;C: #define MQQMF_CLUSSDR_AUTO_DEFINED 0x00000010	&gt;</body><body package="MQ-XIF">MQQMF_CLUSSDR_USER_DEFINED	&lt;C: #define MQQMF_CLUSSDR_USER_DEFINED 0x00000008	&gt;</body><body package="MQ-XIF">MQQMF_REPOSITORY_Q_MGR	&lt;C: #define MQQMF_REPOSITORY_Q_MGR 0x00000002	&gt;</body><body package="MQ-XIF">MQSCA_OPTIONAL	&lt;C: #define MQSCA_OPTIONAL 1	&gt;</body><body package="MQ-XIF">MQSCA_REQUIRED	&lt;C: #define MQSCA_REQUIRED 0	&gt;</body><body package="MQ-XIF">MQTRANSPORTEXIT	&lt;C: #define MQTRANSPORTEXIT MQ_TRANSPORT_EXIT	&gt;</body><body package="MQ-XIF">MQTXP_CURRENT_VERSION	&lt;C: #define MQTXP_CURRENT_VERSION 1	&gt;</body><body package="MQ-XIF">MQTXP_DEFAULT	&lt;C: #define MQTXP_DEFAULT {MQTXP_STRUC_ID_ARRAY},MQTXP_CURRENT_VERSION,0,0,{MQXUA_NONE_ARRAY},0,0,0,0,0,0,MQXCC_OK,MQFB_NONE	&gt;</body><body package="MQ-XIF">MQTXP_STRUC_ID	&lt;C: #define MQTXP_STRUC_ID "TXP "	&gt;</body><body package="MQ-XIF">MQTXP_STRUC_ID_ARRAY	&lt;C: #define MQTXP_STRUC_ID_ARRAY 84,88,80,32	&gt;</body><body package="MQ-XIF">MQTXP_VERSION_1	&lt;C: #define MQTXP_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQWCR_DEFAULT	&lt;C: #define MQWCR_DEFAULT {""},0,0	&gt;</body><body package="MQ-XIF">MQWDR_CURRENT_LENGTH	&lt;C: #define MQWDR_CURRENT_LENGTH 124	&gt;</body><body package="MQ-XIF">MQWDR_CURRENT_VERSION	&lt;C: #define MQWDR_CURRENT_VERSION 1	&gt;</body><body package="MQ-XIF">MQWDR_DEFAULT	&lt;C: #define MQWDR_DEFAULT {MQWDR_STRUC_ID_ARRAY},MQWDR_CURRENT_VERSION,MQWDR_CURRENT_LENGTH,0,{""},{""},0,0,0	&gt;</body><body package="MQ-XIF">MQWDR_LENGTH_1	&lt;C: #define MQWDR_LENGTH_1 124	&gt;</body><body package="MQ-XIF">MQWDR_STRUC_ID	&lt;C: #define MQWDR_STRUC_ID "WDR "	&gt;</body><body package="MQ-XIF">MQWDR_STRUC_ID_ARRAY	&lt;C: #define MQWDR_STRUC_ID_ARRAY 87,68,82,32	&gt;</body><body package="MQ-XIF">MQWDR_VERSION_1	&lt;C: #define MQWDR_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQWQR_CURRENT_LENGTH	&lt;C: #define MQWQR_CURRENT_LENGTH 200	&gt;</body><body package="MQ-XIF">MQWQR_CURRENT_VERSION	&lt;C: #define MQWQR_CURRENT_VERSION 1	&gt;</body><body package="MQ-XIF">MQWQR_DEFAULT	&lt;C: #define MQWQR_DEFAULT {MQWQR_STRUC_ID_ARRAY},MQWQR_CURRENT_VERSION,MQWQR_CURRENT_LENGTH,0,{""},{""},0,0,{""},0,0,0,0	&gt;</body><body package="MQ-XIF">MQWQR_LENGTH_1	&lt;C: #define MQWQR_LENGTH_1 200	&gt;</body><body package="MQ-XIF">MQWQR_STRUC_ID	&lt;C: #define MQWQR_STRUC_ID "WQR "	&gt;</body><body package="MQ-XIF">MQWQR_STRUC_ID_ARRAY	&lt;C: #define MQWQR_STRUC_ID_ARRAY 87,81,82,32	&gt;</body><body package="MQ-XIF">MQWQR_VERSION_1	&lt;C: #define MQWQR_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQWXP_CURRENT_VERSION	&lt;C: #define MQWXP_CURRENT_VERSION 2	&gt;</body><body package="MQ-XIF">MQWXP_DEFAULT	&lt;C: #define MQWXP_DEFAULT {MQWXP_STRUC_ID_ARRAY},MQWXP_CURRENT_VERSION,0,0,MQXCC_OK,0,0,0,{MQXUA_NONE_ARRAY},{""},NULL,NULL,0,0,{""},{""},0,0,NULL,NULL,NULL,MQCLCT_DYNAMIC	&gt;</body><body package="MQ-XIF">MQWXP_STRUC_ID	&lt;C: #define MQWXP_STRUC_ID "WXP "	&gt;</body><body package="MQ-XIF">MQWXP_STRUC_ID_ARRAY	&lt;C: #define MQWXP_STRUC_ID_ARRAY 87,88,80,32	&gt;</body><body package="MQ-XIF">MQWXP_VERSION_1	&lt;C: #define MQWXP_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQWXP_VERSION_2	&lt;C: #define MQWXP_VERSION_2 2	&gt;</body><body package="MQ-XIF">MQXACT_EXTERNAL	&lt;C: #define MQXACT_EXTERNAL 1	&gt;</body><body package="MQ-XIF">MQXACT_INTERNAL	&lt;C: #define MQXACT_INTERNAL 2	&gt;</body><body package="MQ-XIF">MQXCC_CLOSE_CHANNEL	&lt;C: #define MQXCC_CLOSE_CHANNEL (-6)	&gt;</body><body package="MQ-XIF">MQXCC_FAILED	&lt;C: #define MQXCC_FAILED (-8)	&gt;</body><body package="MQ-XIF">MQXCC_OK	&lt;C: #define MQXCC_OK 0	&gt;</body><body package="MQ-XIF">MQXCC_REQUEST_ACK	&lt;C: #define MQXCC_REQUEST_ACK (-7)	&gt;</body><body package="MQ-XIF">MQXCC_SEND_AND_REQUEST_SEC_MSG	&lt;C: #define MQXCC_SEND_AND_REQUEST_SEC_MSG (-3)	&gt;</body><body package="MQ-XIF">MQXCC_SEND_SEC_MSG	&lt;C: #define MQXCC_SEND_SEC_MSG (-4)	&gt;</body><body package="MQ-XIF">MQXCC_SKIP_FUNCTION	&lt;C: #define MQXCC_SKIP_FUNCTION (-2)	&gt;</body><body package="MQ-XIF">MQXCC_SUPPRESS_EXIT	&lt;C: #define MQXCC_SUPPRESS_EXIT (-5)	&gt;</body><body package="MQ-XIF">MQXCC_SUPPRESS_FUNCTION	&lt;C: #define MQXCC_SUPPRESS_FUNCTION (-1)	&gt;</body><body package="MQ-XIF">MQXC_INCLUDED	&lt;C: #define MQXC_INCLUDED 	&gt;</body><body package="MQ-XIF">MQXDR_CONVERSION_FAILED	&lt;C: #define MQXDR_CONVERSION_FAILED 1	&gt;</body><body package="MQ-XIF">MQXDR_OK	&lt;C: #define MQXDR_OK 0	&gt;</body><body package="MQ-XIF">MQXE_COMMAND_SERVER	&lt;C: #define MQXE_COMMAND_SERVER 3	&gt;</body><body package="MQ-XIF">MQXE_MCA	&lt;C: #define MQXE_MCA 1	&gt;</body><body package="MQ-XIF">MQXE_MCA_SVRCONN	&lt;C: #define MQXE_MCA_SVRCONN 2	&gt;</body><body package="MQ-XIF">MQXE_MQSC	&lt;C: #define MQXE_MQSC 4	&gt;</body><body package="MQ-XIF">MQXE_OTHER	&lt;C: #define MQXE_OTHER 0	&gt;</body><body package="MQ-XIF">MQXF_BACK	&lt;C: #define MQXF_BACK 16	&gt;</body><body package="MQ-XIF">MQXF_BEGIN	&lt;C: #define MQXF_BEGIN 14	&gt;</body><body package="MQ-XIF">MQXF_CLOSE	&lt;C: #define MQXF_CLOSE 7	&gt;</body><body package="MQ-XIF">MQXF_CMIT	&lt;C: #define MQXF_CMIT 15	&gt;</body><body package="MQ-XIF">MQXF_CONN	&lt;C: #define MQXF_CONN 3	&gt;</body><body package="MQ-XIF">MQXF_CONNX	&lt;C: #define MQXF_CONNX 4	&gt;</body><body package="MQ-XIF">MQXF_DATA_CONV_ON_GET	&lt;C: #define MQXF_DATA_CONV_ON_GET 11	&gt;</body><body package="MQ-XIF">MQXF_DISC	&lt;C: #define MQXF_DISC 5	&gt;</body><body package="MQ-XIF">MQXF_GET	&lt;C: #define MQXF_GET 10	&gt;</body><body package="MQ-XIF">MQXF_INIT	&lt;C: #define MQXF_INIT 1	&gt;</body><body package="MQ-XIF">MQXF_INQ	&lt;C: #define MQXF_INQ 12	&gt;</body><body package="MQ-XIF">MQXF_OPEN	&lt;C: #define MQXF_OPEN 6	&gt;</body><body package="MQ-XIF">MQXF_PUT	&lt;C: #define MQXF_PUT 9	&gt;</body><body package="MQ-XIF">MQXF_PUT1	&lt;C: #define MQXF_PUT1 8	&gt;</body><body package="MQ-XIF">MQXF_SET	&lt;C: #define MQXF_SET 13	&gt;</body><body package="MQ-XIF">MQXF_TERM	&lt;C: #define MQXF_TERM 2	&gt;</body><body package="MQ-XIF">MQXPDA_NONE	&lt;C: #define MQXPDA_NONE "                                                "	&gt;</body><body package="MQ-XIF">MQXPDA_NONE_ARRAY	&lt;C: #define MQXPDA_NONE_ARRAY 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	&gt;</body><body package="MQ-XIF">MQXPT_DECNET	&lt;C: #define MQXPT_DECNET 5	&gt;</body><body package="MQ-XIF">MQXPT_LOCAL	&lt;C: #define MQXPT_LOCAL 0	&gt;</body><body package="MQ-XIF">MQXPT_LU62	&lt;C: #define MQXPT_LU62 1	&gt;</body><body package="MQ-XIF">MQXPT_NETBIOS	&lt;C: #define MQXPT_NETBIOS 3	&gt;</body><body package="MQ-XIF">MQXPT_SPX	&lt;C: #define MQXPT_SPX 4	&gt;</body><body package="MQ-XIF">MQXPT_TCP	&lt;C: #define MQXPT_TCP 2	&gt;</body><body package="MQ-XIF">MQXPT_UDP	&lt;C: #define MQXPT_UDP 6	&gt;</body><body package="MQ-XIF">MQXR2_CONTINUE_CHAIN	&lt;C: #define MQXR2_CONTINUE_CHAIN 8	&gt;</body><body package="MQ-XIF">MQXR2_DEFAULT_CONTINUATION	&lt;C: #define MQXR2_DEFAULT_CONTINUATION 0	&gt;</body><body package="MQ-XIF">MQXR2_DYNAMIC_CACHE	&lt;C: #define MQXR2_DYNAMIC_CACHE 32	&gt;</body><body package="MQ-XIF">MQXR2_PUT_WITH_DEF_ACTION	&lt;C: #define MQXR2_PUT_WITH_DEF_ACTION 0	&gt;</body><body package="MQ-XIF">MQXR2_PUT_WITH_DEF_USERID	&lt;C: #define MQXR2_PUT_WITH_DEF_USERID 1	&gt;</body><body package="MQ-XIF">MQXR2_PUT_WITH_MSG_USERID	&lt;C: #define MQXR2_PUT_WITH_MSG_USERID 2	&gt;</body><body package="MQ-XIF">MQXR2_STATIC_CACHE	&lt;C: #define MQXR2_STATIC_CACHE 0	&gt;</body><body package="MQ-XIF">MQXR2_SUPPRESS_CHAIN	&lt;C: #define MQXR2_SUPPRESS_CHAIN 16	&gt;</body><body package="MQ-XIF">MQXR2_USE_AGENT_BUFFER	&lt;C: #define MQXR2_USE_AGENT_BUFFER 0	&gt;</body><body package="MQ-XIF">MQXR2_USE_EXIT_BUFFER	&lt;C: #define MQXR2_USE_EXIT_BUFFER 4	&gt;</body><body package="MQ-XIF">MQXR_ACK_RECEIVED	&lt;C: #define MQXR_ACK_RECEIVED 26	&gt;</body><body package="MQ-XIF">MQXR_AFTER	&lt;C: #define MQXR_AFTER 2	&gt;</body><body package="MQ-XIF">MQXR_AUTO_CLUSRCVR	&lt;C: #define MQXR_AUTO_CLUSRCVR 28	&gt;</body><body package="MQ-XIF">MQXR_AUTO_CLUSSDR	&lt;C: #define MQXR_AUTO_CLUSSDR 18	&gt;</body><body package="MQ-XIF">MQXR_AUTO_RECEIVER	&lt;C: #define MQXR_AUTO_RECEIVER 19	&gt;</body><body package="MQ-XIF">MQXR_AUTO_SVRCONN	&lt;C: #define MQXR_AUTO_SVRCONN 27	&gt;</body><body package="MQ-XIF">MQXR_BEFORE	&lt;C: #define MQXR_BEFORE 1	&gt;</body><body package="MQ-XIF">MQXR_CLWL_MOVE	&lt;C: #define MQXR_CLWL_MOVE 22	&gt;</body><body package="MQ-XIF">MQXR_CLWL_OPEN	&lt;C: #define MQXR_CLWL_OPEN 20	&gt;</body><body package="MQ-XIF">MQXR_CLWL_PUT	&lt;C: #define MQXR_CLWL_PUT 21	&gt;</body><body package="MQ-XIF">MQXR_CLWL_REPOS	&lt;C: #define MQXR_CLWL_REPOS 23	&gt;</body><body package="MQ-XIF">MQXR_CLWL_REPOS_MOVE	&lt;C: #define MQXR_CLWL_REPOS_MOVE 24	&gt;</body><body package="MQ-XIF">MQXR_CONNECTION	&lt;C: #define MQXR_CONNECTION 3	&gt;</body><body package="MQ-XIF">MQXR_END_BATCH	&lt;C: #define MQXR_END_BATCH 25	&gt;</body><body package="MQ-XIF">MQXR_INIT	&lt;C: #define MQXR_INIT 11	&gt;</body><body package="MQ-XIF">MQXR_INIT_SEC	&lt;C: #define MQXR_INIT_SEC 16	&gt;</body><body package="MQ-XIF">MQXR_MSG	&lt;C: #define MQXR_MSG 13	&gt;</body><body package="MQ-XIF">MQXR_RETRY	&lt;C: #define MQXR_RETRY 17	&gt;</body><body package="MQ-XIF">MQXR_SEC_MSG	&lt;C: #define MQXR_SEC_MSG 15	&gt;</body><body package="MQ-XIF">MQXR_TERM	&lt;C: #define MQXR_TERM 12	&gt;</body><body package="MQ-XIF">MQXR_XMIT	&lt;C: #define MQXR_XMIT 14	&gt;</body><body package="MQ-XIF">MQXT_API_EXIT	&lt;C: #define MQXT_API_EXIT 2	&gt;</body><body package="MQ-XIF">MQXT_CHANNEL_AUTO_DEF_EXIT	&lt;C: #define MQXT_CHANNEL_AUTO_DEF_EXIT 16	&gt;</body><body package="MQ-XIF">MQXT_CHANNEL_MSG_EXIT	&lt;C: #define MQXT_CHANNEL_MSG_EXIT 12	&gt;</body><body package="MQ-XIF">MQXT_CHANNEL_MSG_RETRY_EXIT	&lt;C: #define MQXT_CHANNEL_MSG_RETRY_EXIT 15	&gt;</body><body package="MQ-XIF">MQXT_CHANNEL_RCV_EXIT	&lt;C: #define MQXT_CHANNEL_RCV_EXIT 14	&gt;</body><body package="MQ-XIF">MQXT_CHANNEL_SEC_EXIT	&lt;C: #define MQXT_CHANNEL_SEC_EXIT 11	&gt;</body><body package="MQ-XIF">MQXT_CHANNEL_SEND_EXIT	&lt;C: #define MQXT_CHANNEL_SEND_EXIT 13	&gt;</body><body package="MQ-XIF">MQXT_CLUSTER_WORKLOAD_EXIT	&lt;C: #define MQXT_CLUSTER_WORKLOAD_EXIT 20	&gt;</body><body package="MQ-XIF">MQXT_PUBSUB_ROUTING_EXIT	&lt;C: #define MQXT_PUBSUB_ROUTING_EXIT 21	&gt;</body><body package="MQ-XIF">MQXUA_NONE	&lt;C: #define MQXUA_NONE "                "	&gt;</body><body package="MQ-XIF">MQXUA_NONE_ARRAY	&lt;C: #define MQXUA_NONE_ARRAY 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	&gt;</body><body package="MQ-XIF">__DATE__	&lt;C: #define __DATE__ "December 11, 2003"	&gt;</body><body package="MQ-XIF">__FILE__	&lt;C: #define __FILE__ 	&gt;</body><body package="MQ-XIF">__LINE__	&lt;C: #define __LINE__ 0	&gt;</body><body package="MQ-XIF">__STDC__	&lt;C: #define __STDC__ 1	&gt;</body><body package="MQ-XIF">__TIME__	&lt;C: #define __TIME__ "12:31:02 am"	&gt;</body></methods><methods><class-id>MQ.MQTHAPIClientInterface</class-id> <category>types</category><body package="MQ-XIF">MQACH	&lt;C: typedef struct tagMQACH MQACH&gt;</body><body package="MQ-XIF">MQAIR	&lt;C: typedef struct tagMQAIR MQAIR&gt;</body><body package="MQ-XIF">MQAXC	&lt;C: typedef struct tagMQAXC MQAXC&gt;</body><body package="MQ-XIF">MQAXP	&lt;C: typedef struct tagMQAXP MQAXP&gt;</body><body package="MQ-XIF">MQBO	&lt;C: typedef struct tagMQBO MQBO&gt;</body><body package="MQ-XIF">MQBYTE	&lt;C: typedef unsigned char MQBYTE&gt;</body><body package="MQ-XIF">MQBYTE128	&lt;C: typedef MQBYTE MQBYTE128[128]&gt;</body><body package="MQ-XIF">MQBYTE16	&lt;C: typedef MQBYTE MQBYTE16[16]&gt;</body><body package="MQ-XIF">MQBYTE24	&lt;C: typedef MQBYTE MQBYTE24[24]&gt;</body><body package="MQ-XIF">MQBYTE32	&lt;C: typedef MQBYTE MQBYTE32[32]&gt;</body><body package="MQ-XIF">MQBYTE40	&lt;C: typedef MQBYTE MQBYTE40[40]&gt;</body><body package="MQ-XIF">MQBYTE48	&lt;C: typedef MQBYTE MQBYTE48[48]&gt;</body><body package="MQ-XIF">MQCD	&lt;C: typedef struct tagMQCD MQCD&gt;</body><body package="MQ-XIF">MQCHAR	&lt;C: typedef char MQCHAR&gt;</body><body package="MQ-XIF">MQCHAR12	&lt;C: typedef MQCHAR MQCHAR12[12]&gt;</body><body package="MQ-XIF">MQCHAR256	&lt;C: typedef MQCHAR MQCHAR256[256]&gt;</body><body package="MQ-XIF">MQCHAR264	&lt;C: typedef MQCHAR MQCHAR264[264]&gt;</body><body package="MQ-XIF">MQCHAR28	&lt;C: typedef MQCHAR MQCHAR28[28]&gt;</body><body package="MQ-XIF">MQCHAR32	&lt;C: typedef MQCHAR MQCHAR32[32]&gt;</body><body package="MQ-XIF">MQCHAR4	&lt;C: typedef MQCHAR MQCHAR4[4]&gt;</body><body package="MQ-XIF">MQCHAR48	&lt;C: typedef MQCHAR MQCHAR48[48]&gt;</body><body package="MQ-XIF">MQCHAR64	&lt;C: typedef MQCHAR MQCHAR64[64]&gt;</body><body package="MQ-XIF">MQCHAR8	&lt;C: typedef MQCHAR MQCHAR8[8]&gt;</body><body package="MQ-XIF">MQCNO	&lt;C: typedef struct tagMQCNO MQCNO&gt;</body><body package="MQ-XIF">MQCXP	&lt;C: typedef struct tagMQCXP MQCXP&gt;</body><body package="MQ-XIF">MQDXP	&lt;C: typedef struct tagMQDXP MQDXP&gt;</body><body package="MQ-XIF">MQGMO	&lt;C: typedef struct tagMQGMO MQGMO&gt;</body><body package="MQ-XIF">MQHCONFIG	&lt;C: typedef void * MQHCONFIG&gt;</body><body package="MQ-XIF">MQHCONN	&lt;C: typedef MQLONG MQHCONN&gt;</body><body package="MQ-XIF">MQHOBJ	&lt;C: typedef MQLONG MQHOBJ&gt;</body><body package="MQ-XIF">MQLONG	&lt;C: typedef long MQLONG&gt;</body><body package="MQ-XIF">MQMD	&lt;C: typedef struct tagMQMD MQMD&gt;</body><body package="MQ-XIF">MQOD	&lt;C: typedef struct tagMQOD MQOD&gt;</body><body package="MQ-XIF">MQPID	&lt;C: typedef MQLONG MQPID&gt;</body><body package="MQ-XIF">MQPMO	&lt;C: typedef struct tagMQPMO MQPMO&gt;</body><body package="MQ-XIF">MQPTR	&lt;C: typedef void * MQPTR&gt;</body><body package="MQ-XIF">MQPXP	&lt;C: typedef struct tagMQPXP MQPXP&gt;</body><body package="MQ-XIF">MQSCO	&lt;C: typedef struct tagMQSCO MQSCO&gt;</body><body package="MQ-XIF">MQTID	&lt;C: typedef MQLONG MQTID&gt;</body><body package="MQ-XIF">MQTXP	&lt;C: typedef struct tagMQTXP MQTXP&gt;</body><body package="MQ-XIF">MQWCR	&lt;C: typedef struct tagMQWCR MQWCR&gt;</body><body package="MQ-XIF">MQWDR	&lt;C: typedef struct tagMQWDR MQWDR&gt;</body><body package="MQ-XIF">MQWQR	&lt;C: typedef struct tagMQWQR MQWQR&gt;</body><body package="MQ-XIF">MQWXP	&lt;C: typedef struct tagMQWXP MQWXP&gt;</body><body package="MQ-XIF">MQ_BACK_EXIT	&lt;C: typedef void MQ_BACK_EXIT(PMQAXP pExitParms, PMQAXC pExitContext, PMQHCONN pHconn, PMQLONG pCompCode, PMQLONG pReason)&gt;</body><body package="MQ-XIF">MQ_BEGIN_EXIT	&lt;C: typedef void MQ_BEGIN_EXIT(PMQAXP pExitParms, PMQAXC pExitContext, PMQHCONN pHconn, PPMQBO ppBeginOptions, PMQLONG pCompCode, PMQLONG pReason)&gt;</body><body package="MQ-XIF">MQ_CHANNEL_AUTO_DEF_EXIT	&lt;C: typedef void MQ_CHANNEL_AUTO_DEF_EXIT(PMQVOID pChannelExitParms, PMQVOID pChannelDefinition)&gt;</body><body package="MQ-XIF">MQ_CHANNEL_EXIT	&lt;C: typedef void MQ_CHANNEL_EXIT(PMQVOID pChannelExitParms, PMQVOID pChannelDefinition, PMQLONG pDataLength, PMQLONG pAgentBufferLength, PMQVOID pAgentBuffer, PMQLONG pExitBufferLength, PMQPTR pExitBufferAddr)&gt;</body><body package="MQ-XIF">MQ_CLOSE_EXIT	&lt;C: typedef void MQ_CLOSE_EXIT(PMQAXP pExitParms, PMQAXC pExitContext, PMQHCONN pHconn, PPMQHOBJ ppHobj, PMQLONG pOptions, PMQLONG pCompCode, PMQLONG pReason)&gt;</body><body package="MQ-XIF">MQ_CLUSTER_WORKLOAD_EXIT	&lt;C: typedef void MQ_CLUSTER_WORKLOAD_EXIT(PMQWXP pExitParms)&gt;</body><body package="MQ-XIF">MQ_CMIT_EXIT	&lt;C: typedef void MQ_CMIT_EXIT(PMQAXP pExitParms, PMQAXC pExitContext, PMQHCONN pHconn, PMQLONG pCompCode, PMQLONG pReason)&gt;</body><body package="MQ-XIF">MQ_CONNX_EXIT	&lt;C: typedef void MQ_CONNX_EXIT(PMQAXP pExitParms, PMQAXC pExitContext, PMQCHAR pQMgrName, PPMQCNO ppConnectOpts, PPMQHCONN ppHconn, PMQLONG pCompCode, PMQLONG pReason)&gt;</body><body package="MQ-XIF">MQ_DATA_CONV_EXIT	&lt;C: typedef void MQ_DATA_CONV_EXIT(PMQDXP pDataConvExitParms, PMQMD pMsgDesc, MQLONG InBufferLength, PMQVOID pInBuffer, MQLONG OutBufferLength, PMQVOID pOutBuffer)&gt;</body><body package="MQ-XIF">MQ_DISC_EXIT	&lt;C: typedef void MQ_DISC_EXIT(PMQAXP pExitParms, PMQAXC pExitContext, PPMQHCONN ppHconn, PMQLONG pCompCode, PMQLONG pReason)&gt;</body><body package="MQ-XIF">MQ_GET_EXIT	&lt;C: typedef void MQ_GET_EXIT(PMQAXP pExitParms, PMQAXC pExitContext, PMQHCONN pHconn, PMQHOBJ pHobj, PPMQMD ppMsgDesc, PPMQGMO ppGetMsgOpts, PMQLONG pBufferLength, PPMQVOID ppBuffer, PPMQLONG ppDataLength, PMQLONG pCompCode, PMQLONG pReason)&gt;</body><body package="MQ-XIF">MQ_INIT_EXIT	&lt;C: typedef void MQ_INIT_EXIT(PMQAXP pExitParms, PMQAXC pExitContext, PMQLONG pCompCode, PMQLONG pReason)&gt;</body><body package="MQ-XIF">MQ_INQ_EXIT	&lt;C: typedef void MQ_INQ_EXIT(PMQAXP pExitParms, PMQAXC pExitContext, PMQHCONN pHconn, PMQHOBJ pHobj, PMQLONG pSelectorCount, PPMQLONG ppSelectors, PMQLONG pIntAttrCount, PPMQLONG ppIntAttrs, PMQLONG pCharAttrLength, PPMQCHAR ppCharAttrs, PMQLONG pCompCode, PMQLONG pReason)&gt;</body><body package="MQ-XIF">MQ_OPEN_EXIT	&lt;C: typedef void MQ_OPEN_EXIT(PMQAXP pExitParms, PMQAXC pExitContext, PMQHCONN pHconn, PPMQOD ppObjDesc, PMQLONG pOptions, PPMQHOBJ ppHobj, PMQLONG pCompCode, PMQLONG pReason)&gt;</body><body package="MQ-XIF">MQ_PUBSUB_ROUTING_EXIT	&lt;C: typedef void MQ_PUBSUB_ROUTING_EXIT(PMQPXP pExitParms)&gt;</body><body package="MQ-XIF">MQ_PUT1_EXIT	&lt;C: typedef void MQ_PUT1_EXIT(PMQAXP pExitParms, PMQAXC pExitContext, PMQHCONN pHconn, PPMQOD ppObjDesc, PPMQMD ppMsgDesc, PPMQPMO ppPutMsgOpts, PMQLONG pBufferLength, PPMQVOID ppBuffer, PMQLONG pCompCode, PMQLONG pReason)&gt;</body><body package="MQ-XIF">MQ_PUT_EXIT	&lt;C: typedef void MQ_PUT_EXIT(PMQAXP pExitParms, PMQAXC pExitContext, PMQHCONN pHconn, PMQHOBJ pHobj, PPMQMD ppMsgDesc, PPMQPMO ppPutMsgOpts, PMQLONG pBufferLength, PPMQVOID ppBuffer, PMQLONG pCompCode, PMQLONG pReason)&gt;</body><body package="MQ-XIF">MQ_SET_EXIT	&lt;C: typedef void MQ_SET_EXIT(PMQAXP pExitParms, PMQAXC pExitContext, PMQHCONN pHconn, PMQHOBJ pHobj, PMQLONG pSelectorCount, PPMQLONG ppSelectors, PMQLONG pIntAttrCount, PPMQLONG ppIntAttrs, PMQLONG pCharAttrLength, PPMQCHAR ppCharAttrs, PMQLONG pCompCode, PMQLONG pReason)&gt;</body><body package="MQ-XIF">MQ_TERM_EXIT	&lt;C: typedef void MQ_TERM_EXIT(PMQAXP pExitParms, PMQAXC pExitContext, PMQLONG pCompCode, PMQLONG pReason)&gt;</body><body package="MQ-XIF">MQ_TRANSPORT_EXIT	&lt;C: typedef void MQ_TRANSPORT_EXIT(PMQVOID pExitParms, MQLONG DestAddressLength, PMQCHAR pDestAddress)&gt;</body><body package="MQ-XIF">PMQACH	&lt;C: typedef MQACH * PMQACH&gt;</body><body package="MQ-XIF">PMQAIR	&lt;C: typedef MQAIR * PMQAIR&gt;</body><body package="MQ-XIF">PMQAXC	&lt;C: typedef MQAXC * PMQAXC&gt;</body><body package="MQ-XIF">PMQAXP	&lt;C: typedef MQAXP * PMQAXP&gt;</body><body package="MQ-XIF">PMQBO	&lt;C: typedef MQBO * PMQBO&gt;</body><body package="MQ-XIF">PMQCD	&lt;C: typedef MQCD * PMQCD&gt;</body><body package="MQ-XIF">PMQCHAR	&lt;C: typedef MQCHAR * PMQCHAR&gt;</body><body package="MQ-XIF">PMQCNO	&lt;C: typedef MQCNO * PMQCNO&gt;</body><body package="MQ-XIF">PMQCXP	&lt;C: typedef MQCXP * PMQCXP&gt;</body><body package="MQ-XIF">PMQDXP	&lt;C: typedef MQDXP * PMQDXP&gt;</body><body package="MQ-XIF">PMQFUNC	&lt;C: typedef void * PMQFUNC&gt;</body><body package="MQ-XIF">PMQGMO	&lt;C: typedef MQGMO * PMQGMO&gt;</body><body package="MQ-XIF">PMQHCONN	&lt;C: typedef MQHCONN * PMQHCONN&gt;</body><body package="MQ-XIF">PMQHOBJ	&lt;C: typedef MQHOBJ * PMQHOBJ&gt;</body><body package="MQ-XIF">PMQLONG	&lt;C: typedef MQLONG * PMQLONG&gt;</body><body package="MQ-XIF">PMQMD	&lt;C: typedef MQMD * PMQMD&gt;</body><body package="MQ-XIF">PMQOD	&lt;C: typedef MQOD * PMQOD&gt;</body><body package="MQ-XIF">PMQPMO	&lt;C: typedef MQPMO * PMQPMO&gt;</body><body package="MQ-XIF">PMQPTR	&lt;C: typedef MQPTR * PMQPTR&gt;</body><body package="MQ-XIF">PMQPXP	&lt;C: typedef MQPXP * PMQPXP&gt;</body><body package="MQ-XIF">PMQSCO	&lt;C: typedef MQSCO * PMQSCO&gt;</body><body package="MQ-XIF">PMQTXP	&lt;C: typedef MQTXP * PMQTXP&gt;</body><body package="MQ-XIF">PMQVOID	&lt;C: typedef void * PMQVOID&gt;</body><body package="MQ-XIF">PMQWCR	&lt;C: typedef MQWCR * PMQWCR&gt;</body><body package="MQ-XIF">PMQWDR	&lt;C: typedef MQWDR * PMQWDR&gt;</body><body package="MQ-XIF">PMQWQR	&lt;C: typedef MQWQR * PMQWQR&gt;</body><body package="MQ-XIF">PMQWXP	&lt;C: typedef MQWXP * PMQWXP&gt;</body><body package="MQ-XIF">PPMQBO	&lt;C: typedef PMQBO * PPMQBO&gt;</body><body package="MQ-XIF">PPMQCHAR	&lt;C: typedef PMQCHAR * PPMQCHAR&gt;</body><body package="MQ-XIF">PPMQCNO	&lt;C: typedef PMQCNO * PPMQCNO&gt;</body><body package="MQ-XIF">PPMQGMO	&lt;C: typedef PMQGMO * PPMQGMO&gt;</body><body package="MQ-XIF">PPMQHCONN	&lt;C: typedef PMQHCONN * PPMQHCONN&gt;</body><body package="MQ-XIF">PPMQHOBJ	&lt;C: typedef PMQHOBJ * PPMQHOBJ&gt;</body><body package="MQ-XIF">PPMQLONG	&lt;C: typedef PMQLONG * PPMQLONG&gt;</body><body package="MQ-XIF">PPMQMD	&lt;C: typedef PMQMD * PPMQMD&gt;</body><body package="MQ-XIF">PPMQOD	&lt;C: typedef PMQOD * PPMQOD&gt;</body><body package="MQ-XIF">PPMQPMO	&lt;C: typedef PMQPMO * PPMQPMO&gt;</body><body package="MQ-XIF">PPMQVOID	&lt;C: typedef PMQVOID * PPMQVOID&gt;</body><body package="MQ-XIF">PPMQWDR	&lt;C: typedef PMQWDR * PPMQWDR&gt;</body><body package="MQ-XIF">PPMQWQR	&lt;C: typedef PMQWQR * PPMQWQR&gt;</body></methods><methods><class-id>MQ.MQTHAPIClientInterface</class-id> <category>structs</category><body package="MQ-XIF">tagMQACH	&lt;C: struct tagMQACH {			MQCHAR4 StrucId;			MQLONG Version, StrucLength, ChainAreaLength;			MQCHAR48 ExitInfoName;			PMQACH NextChainAreaPtr;		}&gt;</body><body package="MQ-XIF">tagMQAIR	&lt;C: struct tagMQAIR {			MQCHAR4 StrucId;			MQLONG Version, AuthInfoType;			MQCHAR264 AuthInfoConnName;			PMQCHAR LDAPUserNamePtr;			MQLONG LDAPUserNameOffset, LDAPUserNameLength;			MQCHAR32 LDAPPassword;		}&gt;</body><body package="MQ-XIF">tagMQAXC	&lt;C: struct tagMQAXC {			MQCHAR4 StrucId;			MQLONG Version, Environment;			MQCHAR12 UserId;			MQBYTE40 SecurityId;			MQCHAR264 ConnectionName;			MQLONG LongMCAUserIdLength, LongRemoteUserIdLength;			MQPTR LongMCAUserIdPtr, LongRemoteUserIdPtr;			MQCHAR28 ApplName;			MQLONG ApplType;			MQPID ProcessId;			MQTID ThreadId;		}&gt;</body><body package="MQ-XIF">tagMQAXP	&lt;C: struct tagMQAXP {			MQCHAR4 StrucId;			MQLONG Version, ExitId, ExitReason, ExitResponse, ExitResponse2, Feedback, APICallerType;			MQBYTE16 ExitUserArea;			MQCHAR32 ExitData;			MQCHAR48 ExitInfoName;			MQBYTE48 ExitPDArea;			MQCHAR48 QMgrName;			PMQACH ExitChainAreaPtr;			MQHCONFIG Hconfig;			MQLONG Function;		}&gt;</body><body package="MQ-XIF">tagMQBO	&lt;C: struct tagMQBO {			MQCHAR4 StrucId;			MQLONG Version, Options;		}&gt;</body><body package="MQ-XIF">tagMQCD	&lt;C: struct tagMQCD {			MQCHAR ChannelName[20];			MQLONG Version, ChannelType, TransportType;			MQCHAR Desc[64];			MQCHAR QMgrName[48];			MQCHAR XmitQName[48];			MQCHAR ShortConnectionName[20];			MQCHAR MCAName[20];			MQCHAR ModeName[8];			MQCHAR TpName[64];			MQLONG BatchSize, DiscInterval, ShortRetryCount, ShortRetryInterval, LongRetryCount, LongRetryInterval;			MQCHAR SecurityExit[128];			MQCHAR MsgExit[128];			MQCHAR SendExit[128];			MQCHAR ReceiveExit[128];			MQLONG SeqNumberWrap, MaxMsgLength, PutAuthority, DataConversion;			MQCHAR SecurityUserData[32];			MQCHAR MsgUserData[32];			MQCHAR SendUserData[32];			MQCHAR ReceiveUserData[32];			MQCHAR UserIdentifier[12];			MQCHAR Password[12];			MQCHAR MCAUserIdentifier[12];			MQLONG MCAType;			MQCHAR ConnectionName[264];			MQCHAR RemoteUserIdentifier[12];			MQCHAR RemotePassword[12];			MQCHAR MsgRetryExit[128];			MQCHAR MsgRetryUserData[32];			MQLONG MsgRetryCount, MsgRetryInterval, HeartbeatInterval, BatchInterval, NonPersistentMsgSpeed, StrucLength, ExitNameLength, ExitDataLength, MsgExitsDefined, SendExitsDefined, ReceiveExitsDefined;			MQPTR MsgExitPtr, MsgUserDataPtr, SendExitPtr, SendUserDataPtr, ReceiveExitPtr, ReceiveUserDataPtr, ClusterPtr;			MQLONG ClustersDefined, NetworkPriority, LongMCAUserIdLength, LongRemoteUserIdLength;			MQPTR LongMCAUserIdPtr, LongRemoteUserIdPtr;			MQBYTE40 MCASecurityId, RemoteSecurityId;			MQCHAR SSLCipherSpec[32];			MQPTR SSLPeerNamePtr;			MQLONG SSLPeerNameLength, SSLClientAuth, KeepAliveInterval;			MQCHAR LocalAddress[48];			MQLONG BatchHeartbeat;		}&gt;</body><body package="MQ-XIF">tagMQCNO	&lt;C: struct tagMQCNO {			MQCHAR4 StrucId;			MQLONG Version, Options, ClientConnOffset;			MQPTR ClientConnPtr;			MQBYTE128 ConnTag;			PMQSCO SSLConfigPtr;			MQLONG SSLConfigOffset;		}&gt;</body><body package="MQ-XIF">tagMQCXP	&lt;C: struct tagMQCXP {			MQCHAR4 StrucId;			MQLONG Version, ExitId, ExitReason, ExitResponse, ExitResponse2, Feedback, MaxSegmentLength;			MQBYTE16 ExitUserArea;			MQCHAR32 ExitData;			MQLONG MsgRetryCount, MsgRetryInterval, MsgRetryReason, HeaderLength;			MQCHAR48 PartnerName;			MQLONG FAPLevel, CapabilityFlags, ExitNumber, ExitSpace;		}&gt;</body><body package="MQ-XIF">tagMQDXP	&lt;C: struct tagMQDXP {			MQCHAR4 StrucId;			MQLONG Version, ExitOptions, AppOptions, Encoding, CodedCharSetId, DataLength, CompCode, Reason, ExitResponse;			MQHCONN Hconn;		}&gt;</body><body package="MQ-XIF">tagMQGMO	&lt;C: struct tagMQGMO {			MQCHAR4 StrucId;			MQLONG Version, Options, WaitInterval, Signal1, Signal2;			MQCHAR48 ResolvedQName;			MQLONG MatchOptions;			MQCHAR GroupStatus, SegmentStatus, Segmentation, Reserved1;			MQBYTE16 MsgToken;			MQLONG ReturnedLength;		}&gt;</body><body package="MQ-XIF">tagMQMD	&lt;C: struct tagMQMD {			MQCHAR4 StrucId;			MQLONG Version, Report, MsgType, Expiry, Feedback, Encoding, CodedCharSetId;			MQCHAR8 Format;			MQLONG Priority, Persistence;			MQBYTE24 MsgId, CorrelId;			MQLONG BackoutCount;			MQCHAR48 ReplyToQ, ReplyToQMgr;			MQCHAR12 UserIdentifier;			MQBYTE32 AccountingToken;			MQCHAR32 ApplIdentityData;			MQLONG PutApplType;			MQCHAR28 PutApplName;			MQCHAR8 PutDate, PutTime;			MQCHAR4 ApplOriginData;			MQBYTE24 GroupId;			MQLONG MsgSeqNumber, Offset, MsgFlags, OriginalLength;		}&gt;</body><body package="MQ-XIF">tagMQOD	&lt;C: struct tagMQOD {			MQCHAR4 StrucId;			MQLONG Version, ObjectType;			MQCHAR48 ObjectName, ObjectQMgrName, DynamicQName;			MQCHAR12 AlternateUserId;			MQLONG RecsPresent, KnownDestCount, UnknownDestCount, InvalidDestCount, ObjectRecOffset, ResponseRecOffset;			MQPTR ObjectRecPtr, ResponseRecPtr;			MQBYTE40 AlternateSecurityId;			MQCHAR48 ResolvedQName, ResolvedQMgrName;		}&gt;</body><body package="MQ-XIF">tagMQPMO	&lt;C: struct tagMQPMO {			MQCHAR4 StrucId;			MQLONG Version, Options, Timeout;			MQHOBJ Context;			MQLONG KnownDestCount, UnknownDestCount, InvalidDestCount;			MQCHAR48 ResolvedQName, ResolvedQMgrName;			MQLONG RecsPresent, PutMsgRecFields, PutMsgRecOffset, ResponseRecOffset;			MQPTR PutMsgRecPtr, ResponseRecPtr;		}&gt;</body><body package="MQ-XIF">tagMQPXP	&lt;C: struct tagMQPXP {			MQCHAR4 StrucId;			MQLONG Version, ExitId, ExitReason, ExitResponse, ExitResponse2, Feedback, ExitNumber;			MQBYTE16 ExitUserArea;			MQCHAR32 ExitData;			MQLONG HeaderLength, MsgInLength, MsgOutLength, DestinationType;			PMQMD MsgDescPtr;			PMQVOID MsgInPtr, MsgOutPtr;			MQCHAR48 StreamName, QMgrName, DestinationQName, DestinationQMgrName;		}&gt;</body><body package="MQ-XIF">tagMQSCO	&lt;C: struct tagMQSCO {			MQCHAR4 StrucId;			MQLONG Version;			MQCHAR256 KeyRepository, CryptoHardware;			MQLONG AuthInfoRecCount, AuthInfoRecOffset;			PMQAIR AuthInfoRecPtr;		}&gt;</body><body package="MQ-XIF">tagMQTXP	&lt;C: struct tagMQTXP {			MQCHAR4 StrucId;			MQLONG Version, Reserved, ExitReason;			MQBYTE16 ExitUserArea;			MQLONG TransportType, RetryCount, DataLength, SessionId, GroupId, DataId, ExitResponse, Feedback;		}&gt;</body><body package="MQ-XIF">tagMQWCR	&lt;C: struct tagMQWCR {			MQCHAR48 ClusterName;			MQLONG ClusterRecOffset, ClusterFlags;		}&gt;</body><body package="MQ-XIF">tagMQWDR	&lt;C: struct tagMQWDR {			MQCHAR4 StrucId;			MQLONG Version, StrucLength, QMgrFlags;			MQCHAR48 QMgrIdentifier, QMgrName;			MQLONG ClusterRecOffset, ChannelState, ChannelDefOffset;		}&gt;</body><body package="MQ-XIF">tagMQWQR	&lt;C: struct tagMQWQR {			MQCHAR4 StrucId;			MQLONG Version, StrucLength, QFlags;			MQCHAR48 QName, QMgrIdentifier;			MQLONG ClusterRecOffset, QType;			MQCHAR64 QDesc;			MQLONG DefBind, DefPersistence, DefPriority, InhibitPut;		}&gt;</body><body package="MQ-XIF">tagMQWXP	&lt;C: struct tagMQWXP {			MQCHAR4 StrucId;			MQLONG Version, ExitId, ExitReason, ExitResponse, ExitResponse2, Feedback, Reserved;			MQBYTE16 ExitUserArea;			MQCHAR32 ExitData;			PMQMD MsgDescPtr;			PMQVOID MsgBufferPtr;			MQLONG MsgBufferLength, MsgLength;			MQCHAR48 QName, QMgrName;			MQLONG DestinationCount, DestinationChosen;			PPMQWDR DestinationArrayPtr;			PPMQWQR QArrayPtr;			MQPTR CacheContext;			MQLONG CacheType;		}&gt;</body></methods><methods><class-id>MQ.MQTHAPIClientInterface class</class-id> <category>errors</category><body package="MQ-XIF">createReasonCodeDict	| dict src |	dict := Dictionary new: 100.	src := self reasonCodeSource.	1 to: src size by: 3 do: [ :index |		dict at: (src at: index + 2) put: (src at: index +1)].	^ dict</body><body package="MQ-XIF">getErrorDict	"CICSMQSLinuxTHAPIClientInterface initialize"	^ self createReasonCodeDict</body><body package="MQ-XIF">reasonCodeSource"/* Reason Codes */"^#( #define MQRC_NONE                      0 #define MQRC_APPL_FIRST                900 #define MQRC_APPL_LAST                 999 #define MQRC_ALIAS_BASE_Q_TYPE_ERROR   2001 #define MQRC_ALREADY_CONNECTED         2002 #define MQRC_BACKED_OUT                2003 #define MQRC_BUFFER_ERROR              2004 #define MQRC_BUFFER_LENGTH_ERROR       2005 #define MQRC_CHAR_ATTR_LENGTH_ERROR    2006 #define MQRC_CHAR_ATTRS_ERROR          2007 #define MQRC_CHAR_ATTRS_TOO_SHORT      2008 #define MQRC_CONNECTION_BROKEN         2009 #define MQRC_DATA_LENGTH_ERROR         2010 #define MQRC_DYNAMIC_Q_NAME_ERROR      2011 #define MQRC_ENVIRONMENT_ERROR         2012 #define MQRC_EXPIRY_ERROR              2013 #define MQRC_FEEDBACK_ERROR            2014 #define MQRC_GET_INHIBITED             2016 #define MQRC_HANDLE_NOT_AVAILABLE      2017 #define MQRC_HCONN_ERROR               2018 #define MQRC_HOBJ_ERROR                2019 #define MQRC_INHIBIT_VALUE_ERROR       2020 #define MQRC_INT_ATTR_COUNT_ERROR      2021 #define MQRC_INT_ATTR_COUNT_TOO_SMALL  2022 #define MQRC_INT_ATTRS_ARRAY_ERROR     2023 #define MQRC_SYNCPOINT_LIMIT_REACHED   2024 #define MQRC_MAX_CONNS_LIMIT_REACHED   2025 #define MQRC_MD_ERROR                  2026 #define MQRC_MISSING_REPLY_TO_Q        2027 #define MQRC_MSG_TYPE_ERROR            2029 #define MQRC_MSG_TOO_BIG_FOR_Q         2030 #define MQRC_MSG_TOO_BIG_FOR_Q_MGR     2031 #define MQRC_NO_MSG_AVAILABLE          2033 #define MQRC_NO_MSG_UNDER_CURSOR       2034 #define MQRC_NOT_AUTHORIZED            2035 #define MQRC_NOT_OPEN_FOR_BROWSE       2036 #define MQRC_NOT_OPEN_FOR_INPUT        2037 #define MQRC_NOT_OPEN_FOR_INQUIRE      2038 #define MQRC_NOT_OPEN_FOR_OUTPUT       2039 #define MQRC_NOT_OPEN_FOR_SET          2040 #define MQRC_OBJECT_CHANGED            2041 #define MQRC_OBJECT_IN_USE             2042 #define MQRC_OBJECT_TYPE_ERROR         2043 #define MQRC_OD_ERROR                  2044 #define MQRC_OPTION_NOT_VALID_FOR_TYPE 2045 #define MQRC_OPTIONS_ERROR             2046 #define MQRC_PERSISTENCE_ERROR         2047 #define MQRC_PERSISTENT_NOT_ALLOWED    2048 #define MQRC_PRIORITY_EXCEEDS_MAXIMUM  2049 #define MQRC_PRIORITY_ERROR            2050 #define MQRC_PUT_INHIBITED             2051 #define MQRC_Q_DELETED                 2052 #define MQRC_Q_FULL                    2053 #define MQRC_Q_NOT_EMPTY               2055 #define MQRC_Q_SPACE_NOT_AVAILABLE     2056 #define MQRC_Q_TYPE_ERROR              2057 #define MQRC_Q_MGR_NAME_ERROR          2058 #define MQRC_Q_MGR_NOT_AVAILABLE       2059 #define MQRC_REPORT_OPTIONS_ERROR      2061 #define MQRC_SECOND_MARK_NOT_ALLOWED   2062 #define MQRC_SECURITY_ERROR            2063 #define MQRC_SELECTOR_COUNT_ERROR      2065 #define MQRC_SELECTOR_LIMIT_EXCEEDED   2066 #define MQRC_SELECTOR_ERROR            2067 #define MQRC_SELECTOR_NOT_FOR_TYPE     2068 #define MQRC_SIGNAL_OUTSTANDING        2069 #define MQRC_SIGNAL_REQUEST_ACCEPTED   2070 #define MQRC_STORAGE_NOT_AVAILABLE     2071 #define MQRC_SYNCPOINT_NOT_AVAILABLE   2072 #define MQRC_TRIGGER_CONTROL_ERROR     2075 #define MQRC_TRIGGER_DEPTH_ERROR       2076 #define MQRC_TRIGGER_MSG_PRIORITY_ERR  2077 #define MQRC_TRIGGER_TYPE_ERROR        2078 #define MQRC_TRUNCATED_MSG_ACCEPTED    2079 #define MQRC_TRUNCATED_MSG_FAILED      2080 #define MQRC_UNKNOWN_ALIAS_BASE_Q      2082 #define MQRC_UNKNOWN_OBJECT_NAME       2085 #define MQRC_UNKNOWN_OBJECT_Q_MGR      2086 #define MQRC_UNKNOWN_REMOTE_Q_MGR      2087 #define MQRC_WAIT_INTERVAL_ERROR       2090 #define MQRC_XMIT_Q_TYPE_ERROR         2091 #define MQRC_XMIT_Q_USAGE_ERROR        2092 #define MQRC_NOT_OPEN_FOR_PASS_ALL     2093 #define MQRC_NOT_OPEN_FOR_PASS_IDENT   2094 #define MQRC_NOT_OPEN_FOR_SET_ALL      2095 #define MQRC_NOT_OPEN_FOR_SET_IDENT    2096 #define MQRC_CONTEXT_HANDLE_ERROR      2097 #define MQRC_CONTEXT_NOT_AVAILABLE     2098 #define MQRC_SIGNAL1_ERROR             2099 #define MQRC_OBJECT_ALREADY_EXISTS     2100 #define MQRC_OBJECT_DAMAGED            2101 #define MQRC_RESOURCE_PROBLEM          2102 #define MQRC_ANOTHER_Q_MGR_CONNECTED   2103 #define MQRC_UNKNOWN_REPORT_OPTION     2104 #define MQRC_STORAGE_CLASS_ERROR       2105 #define MQRC_COD_NOT_VALID_FOR_XCF_Q   2106 #define MQRC_XWAIT_CANCELED            2107 #define MQRC_XWAIT_ERROR               2108 #define MQRC_SUPPRESSED_BY_EXIT        2109 #define MQRC_FORMAT_ERROR              2110 #define MQRC_SOURCE_CCSID_ERROR        2111 #define MQRC_SOURCE_INTEGER_ENC_ERROR  2112 #define MQRC_SOURCE_DECIMAL_ENC_ERROR  2113 #define MQRC_SOURCE_FLOAT_ENC_ERROR    2114 #define MQRC_TARGET_CCSID_ERROR        2115 #define MQRC_TARGET_INTEGER_ENC_ERROR  2116 #define MQRC_TARGET_DECIMAL_ENC_ERROR  2117 #define MQRC_TARGET_FLOAT_ENC_ERROR    2118 #define MQRC_NOT_CONVERTED             2119 #define MQRC_CONVERTED_MSG_TOO_BIG     2120 #define MQRC_TRUNCATED                 2120 #define MQRC_NO_EXTERNAL_PARTICIPANTS  2121 #define MQRC_PARTICIPANT_NOT_AVAILABLE 2122 #define MQRC_OUTCOME_MIXED             2123 #define MQRC_OUTCOME_PENDING           2124 #define MQRC_BRIDGE_STARTED            2125 #define MQRC_BRIDGE_STOPPED            2126 #define MQRC_ADAPTER_STORAGE_SHORTAGE  2127 #define MQRC_UOW_IN_PROGRESS           2128 #define MQRC_ADAPTER_CONN_LOAD_ERROR   2129 #define MQRC_ADAPTER_SERV_LOAD_ERROR   2130 #define MQRC_ADAPTER_DEFS_ERROR        2131 #define MQRC_ADAPTER_DEFS_LOAD_ERROR   2132 #define MQRC_ADAPTER_CONV_LOAD_ERROR   2133 #define MQRC_BO_ERROR                  2134 #define MQRC_DH_ERROR                  2135 #define MQRC_MULTIPLE_REASONS          2136 #define MQRC_OPEN_FAILED               2137 #define MQRC_ADAPTER_DISC_LOAD_ERROR   2138 #define MQRC_CNO_ERROR                 2139 #define MQRC_CICS_WAIT_FAILED          2140 #define MQRC_DLH_ERROR                 2141 #define MQRC_HEADER_ERROR              2142 #define MQRC_SOURCE_LENGTH_ERROR       2143 #define MQRC_TARGET_LENGTH_ERROR       2144 #define MQRC_SOURCE_BUFFER_ERROR       2145 #define MQRC_TARGET_BUFFER_ERROR       2146 #define MQRC_IIH_ERROR                 2148 #define MQRC_PCF_ERROR                 2149 #define MQRC_DBCS_ERROR                2150 #define MQRC_OBJECT_NAME_ERROR         2152 #define MQRC_OBJECT_Q_MGR_NAME_ERROR   2153 #define MQRC_RECS_PRESENT_ERROR        2154 #define MQRC_OBJECT_RECORDS_ERROR      2155 #define MQRC_RESPONSE_RECORDS_ERROR    2156 #define MQRC_ASID_MISMATCH             2157 #define MQRC_PMO_RECORD_FLAGS_ERROR    2158 #define MQRC_PUT_MSG_RECORDS_ERROR     2159 #define MQRC_CONN_ID_IN_USE            2160 #define MQRC_Q_MGR_QUIESCING           2161 #define MQRC_Q_MGR_STOPPING            2162 #define MQRC_DUPLICATE_RECOV_COORD     2163 #define MQRC_PMO_ERROR                 2173 #define MQRC_API_EXIT_NOT_FOUND        2182 #define MQRC_API_EXIT_LOAD_ERROR       2183 #define MQRC_REMOTE_Q_NAME_ERROR       2184 #define MQRC_INCONSISTENT_PERSISTENCE  2185 #define MQRC_GMO_ERROR                 2186 #define MQRC_CICS_BRIDGE_RESTRICTION   2187 #define MQRC_STOPPED_BY_CLUSTER_EXIT   2188 #define MQRC_CLUSTER_RESOLUTION_ERROR  2189 #define MQRC_CONVERTED_STRING_TOO_BIG  2190 #define MQRC_TMC_ERROR                 2191 #define MQRC_PAGESET_FULL              2192 #define MQRC_STORAGE_MEDIUM_FULL       2192 #define MQRC_PAGESET_ERROR             2193 #define MQRC_NAME_NOT_VALID_FOR_TYPE   2194 #define MQRC_UNEXPECTED_ERROR          2195 #define MQRC_UNKNOWN_XMIT_Q            2196 #define MQRC_UNKNOWN_DEF_XMIT_Q        2197 #define MQRC_DEF_XMIT_Q_TYPE_ERROR     2198 #define MQRC_DEF_XMIT_Q_USAGE_ERROR    2199 #define MQRC_NAME_IN_USE               2201 #define MQRC_CONNECTION_QUIESCING      2202 #define MQRC_CONNECTION_STOPPING       2203 #define MQRC_ADAPTER_NOT_AVAILABLE     2204 #define MQRC_MSG_ID_ERROR              2206 #define MQRC_CORREL_ID_ERROR           2207 #define MQRC_FILE_SYSTEM_ERROR         2208 #define MQRC_NO_MSG_LOCKED             2209 #define MQRC_FILE_NOT_AUDITED          2216 #define MQRC_CONNECTION_NOT_AUTHORIZED 2217 #define MQRC_MSG_TOO_BIG_FOR_CHANNEL   2218 #define MQRC_CALL_IN_PROGRESS          2219 #define MQRC_RMH_ERROR                 2220 #define MQRC_Q_MGR_ACTIVE              2222 #define MQRC_Q_MGR_NOT_ACTIVE          2223 #define MQRC_Q_DEPTH_HIGH              2224 #define MQRC_Q_DEPTH_LOW               2225 #define MQRC_Q_SERVICE_INTERVAL_HIGH   2226 #define MQRC_Q_SERVICE_INTERVAL_OK     2227 #define MQRC_UNIT_OF_WORK_NOT_STARTED  2232 #define MQRC_CHANNEL_AUTO_DEF_OK       2233 #define MQRC_CHANNEL_AUTO_DEF_ERROR    2234 #define MQRC_CFH_ERROR                 2235 #define MQRC_CFIL_ERROR                2236 #define MQRC_CFIN_ERROR                2237 #define MQRC_CFSL_ERROR                2238 #define MQRC_CFST_ERROR                2239 #define MQRC_INCOMPLETE_GROUP          2241 #define MQRC_INCOMPLETE_MSG            2242 #define MQRC_INCONSISTENT_CCSIDS       2243 #define MQRC_INCONSISTENT_ENCODINGS    2244 #define MQRC_INCONSISTENT_UOW          2245 #define MQRC_INVALID_MSG_UNDER_CURSOR  2246 #define MQRC_MATCH_OPTIONS_ERROR       2247 #define MQRC_MDE_ERROR                 2248 #define MQRC_MSG_FLAGS_ERROR           2249 #define MQRC_MSG_SEQ_NUMBER_ERROR      2250 #define MQRC_OFFSET_ERROR              2251 #define MQRC_ORIGINAL_LENGTH_ERROR     2252 #define MQRC_SEGMENT_LENGTH_ZERO       2253 #define MQRC_UOW_NOT_AVAILABLE         2255 #define MQRC_WRONG_GMO_VERSION         2256 #define MQRC_WRONG_MD_VERSION          2257 #define MQRC_GROUP_ID_ERROR            2258 #define MQRC_INCONSISTENT_BROWSE       2259 #define MQRC_XQH_ERROR                 2260 #define MQRC_SRC_ENV_ERROR             2261 #define MQRC_SRC_NAME_ERROR            2262 #define MQRC_DEST_ENV_ERROR            2263 #define MQRC_DEST_NAME_ERROR           2264 #define MQRC_TM_ERROR                  2265 #define MQRC_CLUSTER_EXIT_ERROR        2266 #define MQRC_CLUSTER_EXIT_LOAD_ERROR   2267 #define MQRC_CLUSTER_PUT_INHIBITED     2268 #define MQRC_CLUSTER_RESOURCE_ERROR    2269 #define MQRC_NO_DESTINATIONS_AVAILABLE 2270 #define MQRC_CONN_TAG_IN_USE           2271 #define MQRC_PARTIALLY_CONVERTED       2272 #define MQRC_CONNECTION_ERROR          2273 #define MQRC_OPTION_ENVIRONMENT_ERROR  2274 #define MQRC_CD_ERROR                  2277 #define MQRC_CLIENT_CONN_ERROR         2278 #define MQRC_CHANNEL_STOPPED_BY_USER   2279 #define MQRC_HCONFIG_ERROR             2280 #define MQRC_FUNCTION_ERROR            2281 #define MQRC_CHANNEL_STARTED           2282 #define MQRC_CHANNEL_STOPPED           2283 #define MQRC_CHANNEL_CONV_ERROR        2284 #define MQRC_SERVICE_NOT_AVAILABLE     2285 #define MQRC_INITIALIZATION_FAILED     2286 #define MQRC_TERMINATION_FAILED        2287 #define MQRC_UNKNOWN_Q_NAME            2288 #define MQRC_SERVICE_ERROR             2289 #define MQRC_Q_ALREADY_EXISTS          2290 #define MQRC_USER_ID_NOT_AVAILABLE     2291 #define MQRC_UNKNOWN_ENTITY            2292 #define MQRC_UNKNOWN_AUTH_ENTITY       2293 #define MQRC_UNKNOWN_REF_OBJECT        2294 #define MQRC_CHANNEL_ACTIVATED         2295 #define MQRC_CHANNEL_NOT_ACTIVATED     2296 #define MQRC_UOW_CANCELED              2297 #define MQRC_FUNCTION_NOT_SUPPORTED    2298 #define MQRC_SELECTOR_TYPE_ERROR       2299 #define MQRC_COMMAND_TYPE_ERROR        2300 #define MQRC_MULTIPLE_INSTANCE_ERROR   2301 #define MQRC_SYSTEM_ITEM_NOT_ALTERABLE 2302 #define MQRC_BAG_CONVERSION_ERROR      2303 #define MQRC_SELECTOR_OUT_OF_RANGE     2304 #define MQRC_SELECTOR_NOT_UNIQUE       2305 #define MQRC_INDEX_NOT_PRESENT         2306 #define MQRC_STRING_ERROR              2307 #define MQRC_ENCODING_NOT_SUPPORTED    2308 #define MQRC_SELECTOR_NOT_PRESENT      2309 #define MQRC_OUT_SELECTOR_ERROR        2310 #define MQRC_STRING_TRUNCATED          2311 #define MQRC_SELECTOR_WRONG_TYPE       2312 #define MQRC_INCONSISTENT_ITEM_TYPE    2313 #define MQRC_INDEX_ERROR               2314 #define MQRC_SYSTEM_BAG_NOT_ALTERABLE  2315 #define MQRC_ITEM_COUNT_ERROR          2316 #define MQRC_FORMAT_NOT_SUPPORTED      2317 #define MQRC_SELECTOR_NOT_SUPPORTED    2318 #define MQRC_ITEM_VALUE_ERROR          2319 #define MQRC_HBAG_ERROR                2320 #define MQRC_PARAMETER_MISSING         2321 #define MQRC_CMD_SERVER_NOT_AVAILABLE  2322 #define MQRC_STRING_LENGTH_ERROR       2323 #define MQRC_INQUIRY_COMMAND_ERROR     2324 #define MQRC_NESTED_BAG_NOT_SUPPORTED  2325 #define MQRC_BAG_WRONG_TYPE            2326 #define MQRC_ITEM_TYPE_ERROR           2327 #define MQRC_SYSTEM_BAG_NOT_DELETABLE  2328 #define MQRC_SYSTEM_ITEM_NOT_DELETABLE 2329 #define MQRC_CODED_CHAR_SET_ID_ERROR   2330 #define MQRC_MSG_TOKEN_ERROR           2331 #define MQRC_MISSING_WIH               2332 #define MQRC_WIH_ERROR                 2333 #define MQRC_RFH_ERROR                 2334 #define MQRC_RFH_STRING_ERROR          2335 #define MQRC_RFH_COMMAND_ERROR         2336 #define MQRC_RFH_PARM_ERROR            2337 #define MQRC_RFH_DUPLICATE_PARM        2338 #define MQRC_RFH_PARM_MISSING          2339 #define MQRC_CHAR_CONVERSION_ERROR     2340 #define MQRC_UCS2_CONVERSION_ERROR     2341 #define MQRC_DB2_NOT_AVAILABLE         2342 #define MQRC_OBJECT_NOT_UNIQUE         2343 #define MQRC_CONN_TAG_NOT_RELEASED     2344 #define MQRC_CF_NOT_AVAILABLE          2345 #define MQRC_CF_STRUC_IN_USE           2346 #define MQRC_CF_STRUC_LIST_HDR_IN_USE  2347 #define MQRC_CF_STRUC_AUTH_FAILED      2348 #define MQRC_CF_STRUC_ERROR            2349 #define MQRC_CONN_TAG_NOT_USABLE       2350 #define MQRC_GLOBAL_UOW_CONFLICT       2351 #define MQRC_LOCAL_UOW_CONFLICT        2352 #define MQRC_HANDLE_IN_USE_FOR_UOW     2353 #define MQRC_UOW_ENLISTMENT_ERROR      2354 #define MQRC_UOW_MIX_NOT_SUPPORTED     2355 #define MQRC_WXP_ERROR                 2356 #define MQRC_CURRENT_RECORD_ERROR      2357 #define MQRC_NEXT_OFFSET_ERROR         2358 #define MQRC_NO_RECORD_AVAILABLE       2359 #define MQRC_OBJECT_LEVEL_INCOMPATIBLE 2360 #define MQRC_NEXT_RECORD_ERROR         2361 #define MQRC_BACKOUT_THRESHOLD_REACHED 2362 #define MQRC_MSG_NOT_MATCHED           2363 #define MQRC_JMS_FORMAT_ERROR          2364 #define MQRC_SEGMENTS_NOT_SUPPORTED    2365 #define MQRC_WRONG_CF_LEVEL            2366 #define MQRC_CONFIG_CREATE_OBJECT      2367 #define MQRC_CONFIG_CHANGE_OBJECT      2368 #define MQRC_CONFIG_DELETE_OBJECT      2369 #define MQRC_CONFIG_REFRESH_OBJECT     2370 #define MQRC_CHANNEL_SSL_ERROR         2371 #define MQRC_CF_STRUC_FAILED           2373 #define MQRC_API_EXIT_ERROR            2374 #define MQRC_API_EXIT_INIT_ERROR       2375 #define MQRC_API_EXIT_TERM_ERROR       2376 #define MQRC_EXIT_REASON_ERROR         2377 #define MQRC_RESERVED_VALUE_ERROR      2378 #define MQRC_NO_DATA_AVAILABLE         2379 #define MQRC_SCO_ERROR                 2380 #define MQRC_KEY_REPOSITORY_ERROR      2381 #define MQRC_CRYPTO_HARDWARE_ERROR     2382 #define MQRC_AUTH_INFO_REC_COUNT_ERROR 2383 #define MQRC_AUTH_INFO_REC_ERROR       2384 #define MQRC_AIR_ERROR                 2385 #define MQRC_AUTH_INFO_TYPE_ERROR      2386 #define MQRC_AUTH_INFO_CONN_NAME_ERROR 2387 #define MQRC_LDAP_USER_NAME_ERROR      2388 #define MQRC_LDAP_USER_NAME_LENGTH_ERR 2389 #define MQRC_LDAP_PASSWORD_ERROR       2390 #define MQRC_SSL_ALREADY_INITIALIZED   2391 #define MQRC_SSL_CONFIG_ERROR          2392 #define MQRC_SSL_INITIALIZATION_ERROR  2393 #define MQRC_Q_INDEX_TYPE_ERROR        2394 #define MQRC_SSL_NOT_ALLOWED           2396 #define MQRC_JSSE_ERROR                2397 #define MQRC_SSL_PEER_NAME_MISMATCH    2398 #define MQRC_SSL_PEER_NAME_ERROR       2399 #define MQRC_UNSUPPORTED_CIPHER_SUITE  2400 #define MQRC_SSL_CERTIFICATE_REVOKED   2401 #define MQRC_SSL_CERT_STORE_ERROR      2402 #define MQRC_REOPEN_EXCL_INPUT_ERROR   6100 #define MQRC_REOPEN_INQUIRE_ERROR      6101 #define MQRC_REOPEN_SAVED_CONTEXT_ERR  6102 #define MQRC_REOPEN_TEMPORARY_Q_ERROR  6103 #define MQRC_ATTRIBUTE_LOCKED          6104 #define MQRC_CURSOR_NOT_VALID          6105 #define MQRC_ENCODING_ERROR            6106 #define MQRC_STRUC_ID_ERROR            6107 #define MQRC_NULL_POINTER              6108 #define MQRC_NO_CONNECTION_REFERENCE   6109 #define MQRC_NO_BUFFER                 6110 #define MQRC_BINARY_DATA_LENGTH_ERROR  6111 #define MQRC_BUFFER_NOT_AUTOMATIC      6112 #define MQRC_INSUFFICIENT_BUFFER       6113 #define MQRC_INSUFFICIENT_DATA         6114 #define MQRC_DATA_TRUNCATED            6115 #define MQRC_ZERO_LENGTH               6116 #define MQRC_NEGATIVE_LENGTH           6117 #define MQRC_NEGATIVE_OFFSET           6118 #define MQRC_INCONSISTENT_FORMAT       6119 #define MQRC_INCONSISTENT_OBJECT_STATE 6120 #define MQRC_CONTEXT_OBJECT_NOT_VALID  6121 #define MQRC_CONTEXT_OPEN_ERROR        6122 #define MQRC_STRUC_LENGTH_ERROR        6123 #define MQRC_NOT_CONNECTED             6124 #define MQRC_NOT_OPEN                  6125 #define MQRC_DISTRIBUTION_LIST_EMPTY   6126 #define MQRC_INCONSISTENT_OPEN_OPTIONS 6127 #define MQRC_WRONG_VERSION             6128 #define MQRC_REFERENCE_ERROR           6129)</body></methods><methods><class-id>MQ.MQTHAPIClientInterface class</class-id> <category>class initialization</category><body package="MQ-XIF">initialize	"Initialize the errorDict classInstVar"	self errorDict</body></methods><methods><class-id>MQ.MQClientInterface</class-id> <category>defines</category><body package="MQ-XIF">MQACH_CURRENT_LENGTH	&lt;C: #define MQACH_CURRENT_LENGTH 68	&gt;</body><body package="MQ-XIF">MQACH_CURRENT_VERSION	&lt;C: #define MQACH_CURRENT_VERSION 1	&gt;</body><body package="MQ-XIF">MQACH_DEFAULT	&lt;C: #define MQACH_DEFAULT {MQACH_STRUC_ID_ARRAY},MQACH_CURRENT_VERSION,MQACH_CURRENT_LENGTH,0,{""},NULL	&gt;</body><body package="MQ-XIF">MQACH_LENGTH_1	&lt;C: #define MQACH_LENGTH_1 68	&gt;</body><body package="MQ-XIF">MQACH_STRUC_ID	&lt;C: #define MQACH_STRUC_ID "ACH "	&gt;</body><body package="MQ-XIF">MQACH_STRUC_ID_ARRAY	&lt;C: #define MQACH_STRUC_ID_ARRAY 65,67,72,32	&gt;</body><body package="MQ-XIF">MQACH_VERSION_1	&lt;C: #define MQACH_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQAXC_CURRENT_VERSION	&lt;C: #define MQAXC_CURRENT_VERSION 1	&gt;</body><body package="MQ-XIF">MQAXC_DEFAULT	&lt;C: #define MQAXC_DEFAULT {MQAXC_STRUC_ID_ARRAY},MQAXC_CURRENT_VERSION,MQXE_OTHER,{""},{MQSID_NONE_ARRAY},{""},0,0,NULL,NULL,{""},MQAT_DEFAULT,0,0	&gt;</body><body package="MQ-XIF">MQAXC_STRUC_ID	&lt;C: #define MQAXC_STRUC_ID "AXC "	&gt;</body><body package="MQ-XIF">MQAXC_STRUC_ID_ARRAY	&lt;C: #define MQAXC_STRUC_ID_ARRAY 65,88,67,32	&gt;</body><body package="MQ-XIF">MQAXC_VERSION_1	&lt;C: #define MQAXC_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQAXP_CURRENT_VERSION	&lt;C: #define MQAXP_CURRENT_VERSION 1	&gt;</body><body package="MQ-XIF">MQAXP_DEFAULT	&lt;C: #define MQAXP_DEFAULT {MQAXP_STRUC_ID_ARRAY},MQAXP_CURRENT_VERSION,MQXT_API_EXIT,0,MQXCC_OK,MQXR2_DEFAULT_CONTINUATION,MQFB_NONE,MQXACT_EXTERNAL,{MQXUA_NONE_ARRAY},{""},{""},{MQXPDA_NONE_ARRAY},{""},NULL,NULL,0	&gt;</body><body package="MQ-XIF">MQAXP_STRUC_ID	&lt;C: #define MQAXP_STRUC_ID "AXP "	&gt;</body><body package="MQ-XIF">MQAXP_STRUC_ID_ARRAY	&lt;C: #define MQAXP_STRUC_ID_ARRAY 65,88,80,32	&gt;</body><body package="MQ-XIF">MQAXP_VERSION_1	&lt;C: #define MQAXP_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQCDC_NO_SENDER_CONVERSION	&lt;C: #define MQCDC_NO_SENDER_CONVERSION 0	&gt;</body><body package="MQ-XIF">MQCDC_SENDER_CONVERSION	&lt;C: #define MQCDC_SENDER_CONVERSION 1	&gt;</body><body package="MQ-XIF">MQCD_CLIENT_CONN_DEFAULT	&lt;C: #define MQCD_CLIENT_CONN_DEFAULT {""},MQCD_CURRENT_VERSION,MQCHT_CLNTCONN,MQXPT_TCP,{""},{""},{""},{""},{""},{""},{""},50,6000,10,60,999999999,1200,{""},{""},{""},{""},999999999,4194304,MQPA_DEFAULT,MQCDC_NO_SENDER_CONVERSION,{""},{""},{""},{""},{""},{""},{""},MQMCAT_PROCESS,{""},{""},{""},{""},{""},10,1000,1,0,MQNPMS_FAST,MQCD_CURRENT_LENGTH,MQ_EXIT_NAME_LENGTH,MQ_EXIT_DATA_LENGTH,0,0,0,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,NULL,NULL,{MQSID_NONE_ARRAY},{MQSID_NONE_ARRAY},{""},NULL,0,MQSCA_REQUIRED,(-1),{""},0	&gt;</body><body package="MQ-XIF">MQCD_CURRENT_LENGTH	&lt;C: #define MQCD_CURRENT_LENGTH 1748	&gt;</body><body package="MQ-XIF">MQCD_CURRENT_VERSION	&lt;C: #define MQCD_CURRENT_VERSION 7 	&gt;</body><body package="MQ-XIF">MQCD_DEFAULT	&lt;C: #define MQCD_DEFAULT {""},MQCD_CURRENT_VERSION,MQCHT_SENDER,MQXPT_LU62,{""},{""},{""},{""},{""},{""},{""},50,6000,10,60,999999999,1200,{""},{""},{""},{""},999999999,4194304,MQPA_DEFAULT,MQCDC_NO_SENDER_CONVERSION,{""},{""},{""},{""},{""},{""},{""},MQMCAT_PROCESS,{""},{""},{""},{""},{""},10,1000,300,0,MQNPMS_FAST,MQCD_CURRENT_LENGTH,MQ_EXIT_NAME_LENGTH,MQ_EXIT_DATA_LENGTH,0,0,0,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,NULL,NULL,{MQSID_NONE_ARRAY},{MQSID_NONE_ARRAY},{""},NULL,0,MQSCA_REQUIRED,MQKAI_AUTO,{""},0	&gt;</body><body package="MQ-XIF">MQCD_LENGTH_4	&lt;C: #define MQCD_LENGTH_4 1540	&gt;</body><body package="MQ-XIF">MQCD_LENGTH_5	&lt;C: #define MQCD_LENGTH_5 1552	&gt;</body><body package="MQ-XIF">MQCD_LENGTH_6	&lt;C: #define MQCD_LENGTH_6 1648	&gt;</body><body package="MQ-XIF">MQCD_LENGTH_7	&lt;C: #define MQCD_LENGTH_7 1748	&gt;</body><body package="MQ-XIF">MQCD_VERSION_1	&lt;C: #define MQCD_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQCD_VERSION_2	&lt;C: #define MQCD_VERSION_2 2	&gt;</body><body package="MQ-XIF">MQCD_VERSION_3	&lt;C: #define MQCD_VERSION_3 3	&gt;</body><body package="MQ-XIF">MQCD_VERSION_4	&lt;C: #define MQCD_VERSION_4 4	&gt;</body><body package="MQ-XIF">MQCD_VERSION_5	&lt;C: #define MQCD_VERSION_5 5	&gt;</body><body package="MQ-XIF">MQCD_VERSION_6	&lt;C: #define MQCD_VERSION_6 6	&gt;</body><body package="MQ-XIF">MQCD_VERSION_7	&lt;C: #define MQCD_VERSION_7 7	&gt;</body><body package="MQ-XIF">MQCF_DIST_LISTS	&lt;C: #define MQCF_DIST_LISTS 0x00000001	&gt;</body><body package="MQ-XIF">MQCF_NONE	&lt;C: #define MQCF_NONE 0x00000000	&gt;</body><body package="MQ-XIF">MQCHANNELAUTODEFEXIT	&lt;C: #define MQCHANNELAUTODEFEXIT MQ_CHANNEL_AUTO_DEF_EXIT	&gt;</body><body package="MQ-XIF">MQCHANNELEXIT	&lt;C: #define MQCHANNELEXIT MQ_CHANNEL_EXIT	&gt;</body><body package="MQ-XIF">MQCHT_ALL	&lt;C: #define MQCHT_ALL 5	&gt;</body><body package="MQ-XIF">MQCHT_CLNTCONN	&lt;C: #define MQCHT_CLNTCONN 6	&gt;</body><body package="MQ-XIF">MQCHT_CLUSRCVR	&lt;C: #define MQCHT_CLUSRCVR 8	&gt;</body><body package="MQ-XIF">MQCHT_CLUSSDR	&lt;C: #define MQCHT_CLUSSDR 9	&gt;</body><body package="MQ-XIF">MQCHT_RECEIVER	&lt;C: #define MQCHT_RECEIVER 3	&gt;</body><body package="MQ-XIF">MQCHT_REQUESTER	&lt;C: #define MQCHT_REQUESTER 4	&gt;</body><body package="MQ-XIF">MQCHT_SENDER	&lt;C: #define MQCHT_SENDER 1	&gt;</body><body package="MQ-XIF">MQCHT_SERVER	&lt;C: #define MQCHT_SERVER 2	&gt;</body><body package="MQ-XIF">MQCHT_SVRCONN	&lt;C: #define MQCHT_SVRCONN 7	&gt;</body><body package="MQ-XIF">MQCLCT_DYNAMIC	&lt;C: #define MQCLCT_DYNAMIC 1	&gt;</body><body package="MQ-XIF">MQCLCT_STATIC	&lt;C: #define MQCLCT_STATIC 0	&gt;</body><body package="MQ-XIF">MQCXP_CURRENT_VERSION	&lt;C: #define MQCXP_CURRENT_VERSION 5	&gt;</body><body package="MQ-XIF">MQCXP_DEFAULT	&lt;C: #define MQCXP_DEFAULT {MQCXP_STRUC_ID_ARRAY},MQCXP_CURRENT_VERSION,0,0,MQXCC_OK,MQXR2_PUT_WITH_DEF_ACTION,0,0,{MQXUA_NONE_ARRAY},{""},0,0,0,0,{""},0,MQCF_NONE,1,0	&gt;</body><body package="MQ-XIF">MQCXP_STRUC_ID	&lt;C: #define MQCXP_STRUC_ID "CXP "	&gt;</body><body package="MQ-XIF">MQCXP_STRUC_ID_ARRAY	&lt;C: #define MQCXP_STRUC_ID_ARRAY 67,88,80,32	&gt;</body><body package="MQ-XIF">MQCXP_VERSION_1	&lt;C: #define MQCXP_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQCXP_VERSION_2	&lt;C: #define MQCXP_VERSION_2 2	&gt;</body><body package="MQ-XIF">MQCXP_VERSION_3	&lt;C: #define MQCXP_VERSION_3 3	&gt;</body><body package="MQ-XIF">MQCXP_VERSION_4	&lt;C: #define MQCXP_VERSION_4 4	&gt;</body><body package="MQ-XIF">MQCXP_VERSION_5	&lt;C: #define MQCXP_VERSION_5 5	&gt;</body><body package="MQ-XIF">MQDATACONVEXIT	&lt;C: #define MQDATACONVEXIT MQ_DATA_CONV_EXIT	&gt;</body><body package="MQ-XIF">MQDCC_DEFAULT_CONVERSION	&lt;C: #define MQDCC_DEFAULT_CONVERSION 0x00000001	&gt;</body><body package="MQ-XIF">MQDCC_FILL_TARGET_BUFFER	&lt;C: #define MQDCC_FILL_TARGET_BUFFER 0x00000002	&gt;</body><body package="MQ-XIF">MQDCC_INT_DEFAULT_CONVERSION	&lt;C: #define MQDCC_INT_DEFAULT_CONVERSION 0x00000004	&gt;</body><body package="MQ-XIF">MQDCC_NONE	&lt;C: #define MQDCC_NONE 0x00000000	&gt;</body><body package="MQ-XIF">MQDCC_SOURCE_ENC_FACTOR	&lt;C: #define MQDCC_SOURCE_ENC_FACTOR 16	&gt;</body><body package="MQ-XIF">MQDCC_SOURCE_ENC_MASK	&lt;C: #define MQDCC_SOURCE_ENC_MASK 0x000000F0	&gt;</body><body package="MQ-XIF">MQDCC_SOURCE_ENC_NATIVE	&lt;C: #define MQDCC_SOURCE_ENC_NATIVE 0x00000010	&gt;</body><body package="MQ-XIF">MQDCC_SOURCE_ENC_NORMAL	&lt;C: #define MQDCC_SOURCE_ENC_NORMAL 0x00000010	&gt;</body><body package="MQ-XIF">MQDCC_SOURCE_ENC_REVERSED	&lt;C: #define MQDCC_SOURCE_ENC_REVERSED 0x00000020	&gt;</body><body package="MQ-XIF">MQDCC_SOURCE_ENC_UNDEFINED	&lt;C: #define MQDCC_SOURCE_ENC_UNDEFINED 0x00000000	&gt;</body><body package="MQ-XIF">MQDCC_TARGET_ENC_FACTOR	&lt;C: #define MQDCC_TARGET_ENC_FACTOR 256	&gt;</body><body package="MQ-XIF">MQDCC_TARGET_ENC_MASK	&lt;C: #define MQDCC_TARGET_ENC_MASK 0x00000F00	&gt;</body><body package="MQ-XIF">MQDCC_TARGET_ENC_NATIVE	&lt;C: #define MQDCC_TARGET_ENC_NATIVE 0x00000100	&gt;</body><body package="MQ-XIF">MQDCC_TARGET_ENC_NORMAL	&lt;C: #define MQDCC_TARGET_ENC_NORMAL 0x00000100	&gt;</body><body package="MQ-XIF">MQDCC_TARGET_ENC_REVERSED	&lt;C: #define MQDCC_TARGET_ENC_REVERSED 0x00000200	&gt;</body><body package="MQ-XIF">MQDCC_TARGET_ENC_UNDEFINED	&lt;C: #define MQDCC_TARGET_ENC_UNDEFINED 0x00000000	&gt;</body><body package="MQ-XIF">MQDT_APPL	&lt;C: #define MQDT_APPL 1	&gt;</body><body package="MQ-XIF">MQDT_BROKER	&lt;C: #define MQDT_BROKER 2	&gt;</body><body package="MQ-XIF">MQDXP_CURRENT_VERSION	&lt;C: #define MQDXP_CURRENT_VERSION 1	&gt;</body><body package="MQ-XIF">MQDXP_DEFAULT	&lt;C: #define MQDXP_DEFAULT {MQDXP_STRUC_ID_ARRAY},MQDXP_CURRENT_VERSION,0,0,0,0,0,MQCC_OK,MQRC_NONE,MQXDR_CONVERSION_FAILED,0	&gt;</body><body package="MQ-XIF">MQDXP_STRUC_ID	&lt;C: #define MQDXP_STRUC_ID "DXP "	&gt;</body><body package="MQ-XIF">MQDXP_STRUC_ID_ARRAY	&lt;C: #define MQDXP_STRUC_ID_ARRAY 68,88,80,32	&gt;</body><body package="MQ-XIF">MQDXP_VERSION_1	&lt;C: #define MQDXP_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQKAI_AUTO	&lt;C: #define MQKAI_AUTO (-1)	&gt;</body><body package="MQ-XIF">MQMCAT_PROCESS	&lt;C: #define MQMCAT_PROCESS 1	&gt;</body><body package="MQ-XIF">MQMCAT_THREAD	&lt;C: #define MQMCAT_THREAD 2	&gt;</body><body package="MQ-XIF">MQNPMS_FAST	&lt;C: #define MQNPMS_FAST 2	&gt;</body><body package="MQ-XIF">MQNPMS_NORMAL	&lt;C: #define MQNPMS_NORMAL 1	&gt;</body><body package="MQ-XIF">MQPA_ALTERNATE_OR_MCA	&lt;C: #define MQPA_ALTERNATE_OR_MCA 4	&gt;</body><body package="MQ-XIF">MQPA_CONTEXT	&lt;C: #define MQPA_CONTEXT 2	&gt;</body><body package="MQ-XIF">MQPA_DEFAULT	&lt;C: #define MQPA_DEFAULT 1	&gt;</body><body package="MQ-XIF">MQPA_ONLY_MCA	&lt;C: #define MQPA_ONLY_MCA 3	&gt;</body><body package="MQ-XIF">MQPXP_CURRENT_VERSION	&lt;C: #define MQPXP_CURRENT_VERSION 1	&gt;</body><body package="MQ-XIF">MQPXP_DEFAULT	&lt;C: #define MQPXP_DEFAULT {MQPXP_STRUC_ID_ARRAY},MQPXP_CURRENT_VERSION,MQXT_PUBSUB_ROUTING_EXIT,0,MQXCC_OK,0,MQFB_NONE,1,{MQXUA_NONE_ARRAY},{""},0,0,0,MQDT_APPL,NULL,NULL,NULL,{""},{""},{""},{""}	&gt;</body><body package="MQ-XIF">MQPXP_STRUC_ID	&lt;C: #define MQPXP_STRUC_ID "PXP "	&gt;</body><body package="MQ-XIF">MQPXP_STRUC_ID_ARRAY	&lt;C: #define MQPXP_STRUC_ID_ARRAY 80,88,80,32	&gt;</body><body package="MQ-XIF">MQPXP_VERSION_1	&lt;C: #define MQPXP_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQQF_LOCAL_Q	&lt;C: #define MQQF_LOCAL_Q 0x00000001	&gt;</body><body package="MQ-XIF">MQQMF_AVAILABLE	&lt;C: #define MQQMF_AVAILABLE 0x00000020	&gt;</body><body package="MQ-XIF">MQQMF_CLUSSDR_AUTO_DEFINED	&lt;C: #define MQQMF_CLUSSDR_AUTO_DEFINED 0x00000010	&gt;</body><body package="MQ-XIF">MQQMF_CLUSSDR_USER_DEFINED	&lt;C: #define MQQMF_CLUSSDR_USER_DEFINED 0x00000008	&gt;</body><body package="MQ-XIF">MQQMF_REPOSITORY_Q_MGR	&lt;C: #define MQQMF_REPOSITORY_Q_MGR 0x00000002	&gt;</body><body package="MQ-XIF">MQSCA_OPTIONAL	&lt;C: #define MQSCA_OPTIONAL 1	&gt;</body><body package="MQ-XIF">MQSCA_REQUIRED	&lt;C: #define MQSCA_REQUIRED 0	&gt;</body><body package="MQ-XIF">MQTRANSPORTEXIT	&lt;C: #define MQTRANSPORTEXIT MQ_TRANSPORT_EXIT	&gt;</body><body package="MQ-XIF">MQTXP_CURRENT_VERSION	&lt;C: #define MQTXP_CURRENT_VERSION 1	&gt;</body><body package="MQ-XIF">MQTXP_DEFAULT	&lt;C: #define MQTXP_DEFAULT {MQTXP_STRUC_ID_ARRAY},MQTXP_CURRENT_VERSION,0,0,{MQXUA_NONE_ARRAY},0,0,0,0,0,0,MQXCC_OK,MQFB_NONE	&gt;</body><body package="MQ-XIF">MQTXP_STRUC_ID	&lt;C: #define MQTXP_STRUC_ID "TXP "	&gt;</body><body package="MQ-XIF">MQTXP_STRUC_ID_ARRAY	&lt;C: #define MQTXP_STRUC_ID_ARRAY 84,88,80,32	&gt;</body><body package="MQ-XIF">MQTXP_VERSION_1	&lt;C: #define MQTXP_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQWCR_DEFAULT	&lt;C: #define MQWCR_DEFAULT {""},0,0	&gt;</body><body package="MQ-XIF">MQWDR_CURRENT_LENGTH	&lt;C: #define MQWDR_CURRENT_LENGTH 124	&gt;</body><body package="MQ-XIF">MQWDR_CURRENT_VERSION	&lt;C: #define MQWDR_CURRENT_VERSION 1	&gt;</body><body package="MQ-XIF">MQWDR_DEFAULT	&lt;C: #define MQWDR_DEFAULT {MQWDR_STRUC_ID_ARRAY},MQWDR_CURRENT_VERSION,MQWDR_CURRENT_LENGTH,0,{""},{""},0,0,0	&gt;</body><body package="MQ-XIF">MQWDR_LENGTH_1	&lt;C: #define MQWDR_LENGTH_1 124	&gt;</body><body package="MQ-XIF">MQWDR_STRUC_ID	&lt;C: #define MQWDR_STRUC_ID "WDR "	&gt;</body><body package="MQ-XIF">MQWDR_STRUC_ID_ARRAY	&lt;C: #define MQWDR_STRUC_ID_ARRAY 87,68,82,32	&gt;</body><body package="MQ-XIF">MQWDR_VERSION_1	&lt;C: #define MQWDR_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQWQR_CURRENT_LENGTH	&lt;C: #define MQWQR_CURRENT_LENGTH 200	&gt;</body><body package="MQ-XIF">MQWQR_CURRENT_VERSION	&lt;C: #define MQWQR_CURRENT_VERSION 1	&gt;</body><body package="MQ-XIF">MQWQR_DEFAULT	&lt;C: #define MQWQR_DEFAULT {MQWQR_STRUC_ID_ARRAY},MQWQR_CURRENT_VERSION,MQWQR_CURRENT_LENGTH,0,{""},{""},0,0,{""},0,0,0,0	&gt;</body><body package="MQ-XIF">MQWQR_LENGTH_1	&lt;C: #define MQWQR_LENGTH_1 200	&gt;</body><body package="MQ-XIF">MQWQR_STRUC_ID	&lt;C: #define MQWQR_STRUC_ID "WQR "	&gt;</body><body package="MQ-XIF">MQWQR_STRUC_ID_ARRAY	&lt;C: #define MQWQR_STRUC_ID_ARRAY 87,81,82,32	&gt;</body><body package="MQ-XIF">MQWQR_VERSION_1	&lt;C: #define MQWQR_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQWXP_CURRENT_VERSION	&lt;C: #define MQWXP_CURRENT_VERSION 2	&gt;</body><body package="MQ-XIF">MQWXP_DEFAULT	&lt;C: #define MQWXP_DEFAULT {MQWXP_STRUC_ID_ARRAY},MQWXP_CURRENT_VERSION,0,0,MQXCC_OK,0,0,0,{MQXUA_NONE_ARRAY},{""},NULL,NULL,0,0,{""},{""},0,0,NULL,NULL,NULL,MQCLCT_DYNAMIC	&gt;</body><body package="MQ-XIF">MQWXP_STRUC_ID	&lt;C: #define MQWXP_STRUC_ID "WXP "	&gt;</body><body package="MQ-XIF">MQWXP_STRUC_ID_ARRAY	&lt;C: #define MQWXP_STRUC_ID_ARRAY 87,88,80,32	&gt;</body><body package="MQ-XIF">MQWXP_VERSION_1	&lt;C: #define MQWXP_VERSION_1 1	&gt;</body><body package="MQ-XIF">MQWXP_VERSION_2	&lt;C: #define MQWXP_VERSION_2 2	&gt;</body><body package="MQ-XIF">MQXACT_EXTERNAL	&lt;C: #define MQXACT_EXTERNAL 1	&gt;</body><body package="MQ-XIF">MQXACT_INTERNAL	&lt;C: #define MQXACT_INTERNAL 2	&gt;</body><body package="MQ-XIF">MQXCC_CLOSE_CHANNEL	&lt;C: #define MQXCC_CLOSE_CHANNEL (-6)	&gt;</body><body package="MQ-XIF">MQXCC_FAILED	&lt;C: #define MQXCC_FAILED (-8)	&gt;</body><body package="MQ-XIF">MQXCC_OK	&lt;C: #define MQXCC_OK 0	&gt;</body><body package="MQ-XIF">MQXCC_REQUEST_ACK	&lt;C: #define MQXCC_REQUEST_ACK (-7)	&gt;</body><body package="MQ-XIF">MQXCC_SEND_AND_REQUEST_SEC_MSG	&lt;C: #define MQXCC_SEND_AND_REQUEST_SEC_MSG (-3)	&gt;</body><body package="MQ-XIF">MQXCC_SEND_SEC_MSG	&lt;C: #define MQXCC_SEND_SEC_MSG (-4)	&gt;</body><body package="MQ-XIF">MQXCC_SKIP_FUNCTION	&lt;C: #define MQXCC_SKIP_FUNCTION (-2)	&gt;</body><body package="MQ-XIF">MQXCC_SUPPRESS_EXIT	&lt;C: #define MQXCC_SUPPRESS_EXIT (-5)	&gt;</body><body package="MQ-XIF">MQXCC_SUPPRESS_FUNCTION	&lt;C: #define MQXCC_SUPPRESS_FUNCTION (-1)	&gt;</body><body package="MQ-XIF">MQXC_INCLUDED	&lt;C: #define MQXC_INCLUDED 	&gt;</body><body package="MQ-XIF">MQXDR_CONVERSION_FAILED	&lt;C: #define MQXDR_CONVERSION_FAILED 1	&gt;</body><body package="MQ-XIF">MQXDR_OK	&lt;C: #define MQXDR_OK 0	&gt;</body><body package="MQ-XIF">MQXE_COMMAND_SERVER	&lt;C: #define MQXE_COMMAND_SERVER 3	&gt;</body><body package="MQ-XIF">MQXE_MCA	&lt;C: #define MQXE_MCA 1	&gt;</body><body package="MQ-XIF">MQXE_MCA_SVRCONN	&lt;C: #define MQXE_MCA_SVRCONN 2	&gt;</body><body package="MQ-XIF">MQXE_MQSC	&lt;C: #define MQXE_MQSC 4	&gt;</body><body package="MQ-XIF">MQXE_OTHER	&lt;C: #define MQXE_OTHER 0	&gt;</body><body package="MQ-XIF">MQXF_BACK	&lt;C: #define MQXF_BACK 16	&gt;</body><body package="MQ-XIF">MQXF_BEGIN	&lt;C: #define MQXF_BEGIN 14	&gt;</body><body package="MQ-XIF">MQXF_CLOSE	&lt;C: #define MQXF_CLOSE 7	&gt;</body><body package="MQ-XIF">MQXF_CMIT	&lt;C: #define MQXF_CMIT 15	&gt;</body><body package="MQ-XIF">MQXF_CONN	&lt;C: #define MQXF_CONN 3	&gt;</body><body package="MQ-XIF">MQXF_CONNX	&lt;C: #define MQXF_CONNX 4	&gt;</body><body package="MQ-XIF">MQXF_DATA_CONV_ON_GET	&lt;C: #define MQXF_DATA_CONV_ON_GET 11	&gt;</body><body package="MQ-XIF">MQXF_DISC	&lt;C: #define MQXF_DISC 5	&gt;</body><body package="MQ-XIF">MQXF_GET	&lt;C: #define MQXF_GET 10	&gt;</body><body package="MQ-XIF">MQXF_INIT	&lt;C: #define MQXF_INIT 1	&gt;</body><body package="MQ-XIF">MQXF_INQ	&lt;C: #define MQXF_INQ 12	&gt;</body><body package="MQ-XIF">MQXF_OPEN	&lt;C: #define MQXF_OPEN 6	&gt;</body><body package="MQ-XIF">MQXF_PUT	&lt;C: #define MQXF_PUT 9	&gt;</body><body package="MQ-XIF">MQXF_PUT1	&lt;C: #define MQXF_PUT1 8	&gt;</body><body package="MQ-XIF">MQXF_SET	&lt;C: #define MQXF_SET 13	&gt;</body><body package="MQ-XIF">MQXF_TERM	&lt;C: #define MQXF_TERM 2	&gt;</body><body package="MQ-XIF">MQXPDA_NONE	&lt;C: #define MQXPDA_NONE "                                                "	&gt;</body><body package="MQ-XIF">MQXPDA_NONE_ARRAY	&lt;C: #define MQXPDA_NONE_ARRAY 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	&gt;</body><body package="MQ-XIF">MQXPT_DECNET	&lt;C: #define MQXPT_DECNET 5	&gt;</body><body package="MQ-XIF">MQXPT_LOCAL	&lt;C: #define MQXPT_LOCAL 0	&gt;</body><body package="MQ-XIF">MQXPT_LU62	&lt;C: #define MQXPT_LU62 1	&gt;</body><body package="MQ-XIF">MQXPT_NETBIOS	&lt;C: #define MQXPT_NETBIOS 3	&gt;</body><body package="MQ-XIF">MQXPT_SPX	&lt;C: #define MQXPT_SPX 4	&gt;</body><body package="MQ-XIF">MQXPT_TCP	&lt;C: #define MQXPT_TCP 2	&gt;</body><body package="MQ-XIF">MQXPT_UDP	&lt;C: #define MQXPT_UDP 6	&gt;</body><body package="MQ-XIF">MQXR2_CONTINUE_CHAIN	&lt;C: #define MQXR2_CONTINUE_CHAIN 8	&gt;</body><body package="MQ-XIF">MQXR2_DEFAULT_CONTINUATION	&lt;C: #define MQXR2_DEFAULT_CONTINUATION 0	&gt;</body><body package="MQ-XIF">MQXR2_DYNAMIC_CACHE	&lt;C: #define MQXR2_DYNAMIC_CACHE 32	&gt;</body><body package="MQ-XIF">MQXR2_PUT_WITH_DEF_ACTION	&lt;C: #define MQXR2_PUT_WITH_DEF_ACTION 0	&gt;</body><body package="MQ-XIF">MQXR2_PUT_WITH_DEF_USERID	&lt;C: #define MQXR2_PUT_WITH_DEF_USERID 1	&gt;</body><body package="MQ-XIF">MQXR2_PUT_WITH_MSG_USERID	&lt;C: #define MQXR2_PUT_WITH_MSG_USERID 2	&gt;</body><body package="MQ-XIF">MQXR2_STATIC_CACHE	&lt;C: #define MQXR2_STATIC_CACHE 0	&gt;</body><body package="MQ-XIF">MQXR2_SUPPRESS_CHAIN	&lt;C: #define MQXR2_SUPPRESS_CHAIN 16	&gt;</body><body package="MQ-XIF">MQXR2_USE_AGENT_BUFFER	&lt;C: #define MQXR2_USE_AGENT_BUFFER 0	&gt;</body><body package="MQ-XIF">MQXR2_USE_EXIT_BUFFER	&lt;C: #define MQXR2_USE_EXIT_BUFFER 4	&gt;</body><body package="MQ-XIF">MQXR_ACK_RECEIVED	&lt;C: #define MQXR_ACK_RECEIVED 26	&gt;</body><body package="MQ-XIF">MQXR_AFTER	&lt;C: #define MQXR_AFTER 2	&gt;</body><body package="MQ-XIF">MQXR_AUTO_CLUSRCVR	&lt;C: #define MQXR_AUTO_CLUSRCVR 28	&gt;</body><body package="MQ-XIF">MQXR_AUTO_CLUSSDR	&lt;C: #define MQXR_AUTO_CLUSSDR 18	&gt;</body><body package="MQ-XIF">MQXR_AUTO_RECEIVER	&lt;C: #define MQXR_AUTO_RECEIVER 19	&gt;</body><body package="MQ-XIF">MQXR_AUTO_SVRCONN	&lt;C: #define MQXR_AUTO_SVRCONN 27	&gt;</body><body package="MQ-XIF">MQXR_BEFORE	&lt;C: #define MQXR_BEFORE 1	&gt;</body><body package="MQ-XIF">MQXR_CLWL_MOVE	&lt;C: #define MQXR_CLWL_MOVE 22	&gt;</body><body package="MQ-XIF">MQXR_CLWL_OPEN	&lt;C: #define MQXR_CLWL_OPEN 20	&gt;</body><body package="MQ-XIF">MQXR_CLWL_PUT	&lt;C: #define MQXR_CLWL_PUT 21	&gt;</body><body package="MQ-XIF">MQXR_CLWL_REPOS	&lt;C: #define MQXR_CLWL_REPOS 23	&gt;</body><body package="MQ-XIF">MQXR_CLWL_REPOS_MOVE	&lt;C: #define MQXR_CLWL_REPOS_MOVE 24	&gt;</body><body package="MQ-XIF">MQXR_CONNECTION	&lt;C: #define MQXR_CONNECTION 3	&gt;</body><body package="MQ-XIF">MQXR_END_BATCH	&lt;C: #define MQXR_END_BATCH 25	&gt;</body><body package="MQ-XIF">MQXR_INIT	&lt;C: #define MQXR_INIT 11	&gt;</body><body package="MQ-XIF">MQXR_INIT_SEC	&lt;C: #define MQXR_INIT_SEC 16	&gt;</body><body package="MQ-XIF">MQXR_MSG	&lt;C: #define MQXR_MSG 13	&gt;</body><body package="MQ-XIF">MQXR_RETRY	&lt;C: #define MQXR_RETRY 17	&gt;</body><body package="MQ-XIF">MQXR_SEC_MSG	&lt;C: #define MQXR_SEC_MSG 15	&gt;</body><body package="MQ-XIF">MQXR_TERM	&lt;C: #define MQXR_TERM 12	&gt;</body><body package="MQ-XIF">MQXR_XMIT	&lt;C: #define MQXR_XMIT 14	&gt;</body><body package="MQ-XIF">MQXT_API_EXIT	&lt;C: #define MQXT_API_EXIT 2	&gt;</body><body package="MQ-XIF">MQXT_CHANNEL_AUTO_DEF_EXIT	&lt;C: #define MQXT_CHANNEL_AUTO_DEF_EXIT 16	&gt;</body><body package="MQ-XIF">MQXT_CHANNEL_MSG_EXIT	&lt;C: #define MQXT_CHANNEL_MSG_EXIT 12	&gt;</body><body package="MQ-XIF">MQXT_CHANNEL_MSG_RETRY_EXIT	&lt;C: #define MQXT_CHANNEL_MSG_RETRY_EXIT 15	&gt;</body><body package="MQ-XIF">MQXT_CHANNEL_RCV_EXIT	&lt;C: #define MQXT_CHANNEL_RCV_EXIT 14	&gt;</body><body package="MQ-XIF">MQXT_CHANNEL_SEC_EXIT	&lt;C: #define MQXT_CHANNEL_SEC_EXIT 11	&gt;</body><body package="MQ-XIF">MQXT_CHANNEL_SEND_EXIT	&lt;C: #define MQXT_CHANNEL_SEND_EXIT 13	&gt;</body><body package="MQ-XIF">MQXT_CLUSTER_WORKLOAD_EXIT	&lt;C: #define MQXT_CLUSTER_WORKLOAD_EXIT 20	&gt;</body><body package="MQ-XIF">MQXT_PUBSUB_ROUTING_EXIT	&lt;C: #define MQXT_PUBSUB_ROUTING_EXIT 21	&gt;</body><body package="MQ-XIF">MQXUA_NONE	&lt;C: #define MQXUA_NONE "                "	&gt;</body><body package="MQ-XIF">MQXUA_NONE_ARRAY	&lt;C: #define MQXUA_NONE_ARRAY 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	&gt;</body><body package="MQ-XIF">__DATE__	&lt;C: #define __DATE__ "December 11, 2003"	&gt;</body><body package="MQ-XIF">__FILE__	&lt;C: #define __FILE__ 	&gt;</body><body package="MQ-XIF">__LINE__	&lt;C: #define __LINE__ 0	&gt;</body><body package="MQ-XIF">__STDC__	&lt;C: #define __STDC__ 1	&gt;</body><body package="MQ-XIF">__TIME__	&lt;C: #define __TIME__ "12:31:02 am"	&gt;</body></methods><methods><class-id>MQ.MQClientInterface</class-id> <category>types</category><body package="MQ-XIF">MQACH	&lt;C: typedef struct tagMQACH MQACH&gt;</body><body package="MQ-XIF">MQAIR	&lt;C: typedef struct tagMQAIR MQAIR&gt;</body><body package="MQ-XIF">MQAXC	&lt;C: typedef struct tagMQAXC MQAXC&gt;</body><body package="MQ-XIF">MQAXP	&lt;C: typedef struct tagMQAXP MQAXP&gt;</body><body package="MQ-XIF">MQBO	&lt;C: typedef struct tagMQBO MQBO&gt;</body><body package="MQ-XIF">MQBYTE	&lt;C: typedef unsigned char MQBYTE&gt;</body><body package="MQ-XIF">MQBYTE128	&lt;C: typedef MQBYTE MQBYTE128[128]&gt;</body><body package="MQ-XIF">MQBYTE16	&lt;C: typedef MQBYTE MQBYTE16[16]&gt;</body><body package="MQ-XIF">MQBYTE24	&lt;C: typedef MQBYTE MQBYTE24[24]&gt;</body><body package="MQ-XIF">MQBYTE32	&lt;C: typedef MQBYTE MQBYTE32[32]&gt;</body><body package="MQ-XIF">MQBYTE40	&lt;C: typedef MQBYTE MQBYTE40[40]&gt;</body><body package="MQ-XIF">MQBYTE48	&lt;C: typedef MQBYTE MQBYTE48[48] &gt;</body><body package="MQ-XIF">MQCD	&lt;C: typedef struct tagMQCD MQCD &gt;</body><body package="MQ-XIF">MQCHAR	&lt;C: typedef char MQCHAR&gt;</body><body package="MQ-XIF">MQCHAR12	&lt;C: typedef MQCHAR MQCHAR12[12]&gt;</body><body package="MQ-XIF">MQCHAR256	&lt;C: typedef MQCHAR MQCHAR256[256]&gt;</body><body package="MQ-XIF">MQCHAR264	&lt;C: typedef MQCHAR MQCHAR264[264]&gt;</body><body package="MQ-XIF">MQCHAR28	&lt;C: typedef MQCHAR MQCHAR28[28]&gt;</body><body package="MQ-XIF">MQCHAR32	&lt;C: typedef MQCHAR MQCHAR32[32]&gt;</body><body package="MQ-XIF">MQCHAR4	&lt;C: typedef MQCHAR MQCHAR4[4]&gt;</body><body package="MQ-XIF">MQCHAR48	&lt;C: typedef MQCHAR MQCHAR48[48]&gt;</body><body package="MQ-XIF">MQCHAR64	&lt;C: typedef MQCHAR MQCHAR64[64]&gt;</body><body package="MQ-XIF">MQCHAR8	&lt;C: typedef MQCHAR MQCHAR8[8]&gt;</body><body package="MQ-XIF">MQCNO	&lt;C: typedef struct tagMQCNO MQCNO&gt;</body><body package="MQ-XIF">MQCXP	&lt;C: typedef struct tagMQCXP MQCXP&gt;</body><body package="MQ-XIF">MQDXP	&lt;C: typedef struct tagMQDXP MQDXP&gt;</body><body package="MQ-XIF">MQGMO	&lt;C: typedef struct tagMQGMO MQGMO&gt;</body><body package="MQ-XIF">MQHCONFIG	&lt;C: typedef void * MQHCONFIG&gt;</body><body package="MQ-XIF">MQHCONN	&lt;C: typedef MQLONG MQHCONN &gt;</body><body package="MQ-XIF">MQHOBJ	&lt;C: typedef MQLONG MQHOBJ&gt;</body><body package="MQ-XIF">MQLONG	&lt;C: typedef long MQLONG &gt;</body><body package="MQ-XIF">MQMD	&lt;C: typedef struct tagMQMD MQMD&gt;</body><body package="MQ-XIF">MQOD	&lt;C: typedef struct tagMQOD MQOD&gt;</body><body package="MQ-XIF">MQPID	&lt;C: typedef MQLONG MQPID&gt;</body><body package="MQ-XIF">MQPMO	&lt;C: typedef struct tagMQPMO MQPMO&gt;</body><body package="MQ-XIF">MQPTR	&lt;C: typedef void * MQPTR&gt;</body><body package="MQ-XIF">MQPXP	&lt;C: typedef struct tagMQPXP MQPXP&gt;</body><body package="MQ-XIF">MQSCO	&lt;C: typedef struct tagMQSCO MQSCO&gt;</body><body package="MQ-XIF">MQTID	&lt;C: typedef MQLONG MQTID&gt;</body><body package="MQ-XIF">MQTXP	&lt;C: typedef struct tagMQTXP MQTXP&gt;</body><body package="MQ-XIF">MQWCR	&lt;C: typedef struct tagMQWCR MQWCR&gt;</body><body package="MQ-XIF">MQWDR	&lt;C: typedef struct tagMQWDR MQWDR&gt;</body><body package="MQ-XIF">MQWQR	&lt;C: typedef struct tagMQWQR MQWQR&gt;</body><body package="MQ-XIF">MQWXP	&lt;C: typedef struct tagMQWXP MQWXP&gt;</body><body package="MQ-XIF">MQ_BACK_EXIT	&lt;C: typedef void MQ_BACK_EXIT(PMQAXP pExitParms, PMQAXC pExitContext, PMQHCONN pHconn, PMQLONG pCompCode, PMQLONG pReason)&gt;</body><body package="MQ-XIF">MQ_BEGIN_EXIT	&lt;C: typedef void MQ_BEGIN_EXIT(PMQAXP pExitParms, PMQAXC pExitContext, PMQHCONN pHconn, PPMQBO ppBeginOptions, PMQLONG pCompCode, PMQLONG pReason)&gt;</body><body package="MQ-XIF">MQ_CHANNEL_AUTO_DEF_EXIT	&lt;C: typedef void MQ_CHANNEL_AUTO_DEF_EXIT(PMQVOID pChannelExitParms, PMQVOID pChannelDefinition)&gt;</body><body package="MQ-XIF">MQ_CHANNEL_EXIT	&lt;C: typedef void MQ_CHANNEL_EXIT(PMQVOID pChannelExitParms, PMQVOID pChannelDefinition, PMQLONG pDataLength, PMQLONG pAgentBufferLength, PMQVOID pAgentBuffer, PMQLONG pExitBufferLength, PMQPTR pExitBufferAddr)&gt;</body><body package="MQ-XIF">MQ_CLOSE_EXIT	&lt;C: typedef void MQ_CLOSE_EXIT(PMQAXP pExitParms, PMQAXC pExitContext, PMQHCONN pHconn, PPMQHOBJ ppHobj, PMQLONG pOptions, PMQLONG pCompCode, PMQLONG pReason)&gt;</body><body package="MQ-XIF">MQ_CLUSTER_WORKLOAD_EXIT	&lt;C: typedef void MQ_CLUSTER_WORKLOAD_EXIT(PMQWXP pExitParms)&gt;</body><body package="MQ-XIF">MQ_CMIT_EXIT	&lt;C: typedef void MQ_CMIT_EXIT(PMQAXP pExitParms, PMQAXC pExitContext, PMQHCONN pHconn, PMQLONG pCompCode, PMQLONG pReason)&gt;</body><body package="MQ-XIF">MQ_CONNX_EXIT	&lt;C: typedef void MQ_CONNX_EXIT(PMQAXP pExitParms, PMQAXC pExitContext, PMQCHAR pQMgrName, PPMQCNO ppConnectOpts, PPMQHCONN ppHconn, PMQLONG pCompCode, PMQLONG pReason)&gt;</body><body package="MQ-XIF">MQ_DATA_CONV_EXIT	&lt;C: typedef void MQ_DATA_CONV_EXIT(PMQDXP pDataConvExitParms, PMQMD pMsgDesc, MQLONG InBufferLength, PMQVOID pInBuffer, MQLONG OutBufferLength, PMQVOID pOutBuffer)&gt;</body><body package="MQ-XIF">MQ_DISC_EXIT	&lt;C: typedef void MQ_DISC_EXIT(PMQAXP pExitParms, PMQAXC pExitContext, PPMQHCONN ppHconn, PMQLONG pCompCode, PMQLONG pReason)&gt;</body><body package="MQ-XIF">MQ_GET_EXIT	&lt;C: typedef void MQ_GET_EXIT(PMQAXP pExitParms, PMQAXC pExitContext, PMQHCONN pHconn, PMQHOBJ pHobj, PPMQMD ppMsgDesc, PPMQGMO ppGetMsgOpts, PMQLONG pBufferLength, PPMQVOID ppBuffer, PPMQLONG ppDataLength, PMQLONG pCompCode, PMQLONG pReason)&gt;</body><body package="MQ-XIF">MQ_INIT_EXIT	&lt;C: typedef void MQ_INIT_EXIT(PMQAXP pExitParms, PMQAXC pExitContext, PMQLONG pCompCode, PMQLONG pReason)&gt;</body><body package="MQ-XIF">MQ_INQ_EXIT	&lt;C: typedef void MQ_INQ_EXIT(PMQAXP pExitParms, PMQAXC pExitContext, PMQHCONN pHconn, PMQHOBJ pHobj, PMQLONG pSelectorCount, PPMQLONG ppSelectors, PMQLONG pIntAttrCount, PPMQLONG ppIntAttrs, PMQLONG pCharAttrLength, PPMQCHAR ppCharAttrs, PMQLONG pCompCode, PMQLONG pReason)&gt;</body><body package="MQ-XIF">MQ_OPEN_EXIT	&lt;C: typedef void MQ_OPEN_EXIT(PMQAXP pExitParms, PMQAXC pExitContext, PMQHCONN pHconn, PPMQOD ppObjDesc, PMQLONG pOptions, PPMQHOBJ ppHobj, PMQLONG pCompCode, PMQLONG pReason)&gt;</body><body package="MQ-XIF">MQ_PUBSUB_ROUTING_EXIT	&lt;C: typedef void MQ_PUBSUB_ROUTING_EXIT(PMQPXP pExitParms)&gt;</body><body package="MQ-XIF">MQ_PUT1_EXIT	&lt;C: typedef void MQ_PUT1_EXIT(PMQAXP pExitParms, PMQAXC pExitContext, PMQHCONN pHconn, PPMQOD ppObjDesc, PPMQMD ppMsgDesc, PPMQPMO ppPutMsgOpts, PMQLONG pBufferLength, PPMQVOID ppBuffer, PMQLONG pCompCode, PMQLONG pReason)&gt;</body><body package="MQ-XIF">MQ_PUT_EXIT	&lt;C: typedef void MQ_PUT_EXIT(PMQAXP pExitParms, PMQAXC pExitContext, PMQHCONN pHconn, PMQHOBJ pHobj, PPMQMD ppMsgDesc, PPMQPMO ppPutMsgOpts, PMQLONG pBufferLength, PPMQVOID ppBuffer, PMQLONG pCompCode, PMQLONG pReason)&gt;</body><body package="MQ-XIF">MQ_SET_EXIT	&lt;C: typedef void MQ_SET_EXIT(PMQAXP pExitParms, PMQAXC pExitContext, PMQHCONN pHconn, PMQHOBJ pHobj, PMQLONG pSelectorCount, PPMQLONG ppSelectors, PMQLONG pIntAttrCount, PPMQLONG ppIntAttrs, PMQLONG pCharAttrLength, PPMQCHAR ppCharAttrs, PMQLONG pCompCode, PMQLONG pReason)&gt;</body><body package="MQ-XIF">MQ_TERM_EXIT	&lt;C: typedef void MQ_TERM_EXIT(PMQAXP pExitParms, PMQAXC pExitContext, PMQLONG pCompCode, PMQLONG pReason)&gt;</body><body package="MQ-XIF">MQ_TRANSPORT_EXIT	&lt;C: typedef void MQ_TRANSPORT_EXIT(PMQVOID pExitParms, MQLONG DestAddressLength, PMQCHAR pDestAddress)&gt;</body><body package="MQ-XIF">PMQACH	&lt;C: typedef MQACH * PMQACH&gt;</body><body package="MQ-XIF">PMQAIR	&lt;C: typedef MQAIR * PMQAIR&gt;</body><body package="MQ-XIF">PMQAXC	&lt;C: typedef MQAXC * PMQAXC&gt;</body><body package="MQ-XIF">PMQAXP	&lt;C: typedef MQAXP * PMQAXP&gt;</body><body package="MQ-XIF">PMQBO	&lt;C: typedef MQBO * PMQBO&gt;</body><body package="MQ-XIF">PMQCD	&lt;C: typedef MQCD * PMQCD&gt;</body><body package="MQ-XIF">PMQCHAR	&lt;C: typedef MQCHAR * PMQCHAR&gt;</body><body package="MQ-XIF">PMQCNO	&lt;C: typedef MQCNO * PMQCNO&gt;</body><body package="MQ-XIF">PMQCXP	&lt;C: typedef MQCXP * PMQCXP&gt;</body><body package="MQ-XIF">PMQDXP	&lt;C: typedef MQDXP * PMQDXP&gt;</body><body package="MQ-XIF">PMQFUNC	&lt;C: typedef void * PMQFUNC&gt;</body><body package="MQ-XIF">PMQGMO	&lt;C: typedef MQGMO * PMQGMO&gt;</body><body package="MQ-XIF">PMQHCONN	&lt;C: typedef MQHCONN * PMQHCONN&gt;</body><body package="MQ-XIF">PMQHOBJ	&lt;C: typedef MQHOBJ * PMQHOBJ&gt;</body><body package="MQ-XIF">PMQLONG	&lt;C: typedef MQLONG * PMQLONG&gt;</body><body package="MQ-XIF">PMQMD	&lt;C: typedef MQMD * PMQMD&gt;</body><body package="MQ-XIF">PMQOD	&lt;C: typedef MQOD * PMQOD&gt;</body><body package="MQ-XIF">PMQPMO	&lt;C: typedef MQPMO * PMQPMO&gt;</body><body package="MQ-XIF">PMQPTR	&lt;C: typedef MQPTR * PMQPTR&gt;</body><body package="MQ-XIF">PMQPXP	&lt;C: typedef MQPXP * PMQPXP&gt;</body><body package="MQ-XIF">PMQSCO	&lt;C: typedef MQSCO * PMQSCO&gt;</body><body package="MQ-XIF">PMQTXP	&lt;C: typedef MQTXP * PMQTXP&gt;</body><body package="MQ-XIF">PMQVOID	&lt;C: typedef void * PMQVOID&gt;</body><body package="MQ-XIF">PMQWCR	&lt;C: typedef MQWCR * PMQWCR&gt;</body><body package="MQ-XIF">PMQWDR	&lt;C: typedef MQWDR * PMQWDR&gt;</body><body package="MQ-XIF">PMQWQR	&lt;C: typedef MQWQR * PMQWQR&gt;</body><body package="MQ-XIF">PMQWXP	&lt;C: typedef MQWXP * PMQWXP&gt;</body><body package="MQ-XIF">PPMQBO	&lt;C: typedef PMQBO * PPMQBO&gt;</body><body package="MQ-XIF">PPMQCHAR	&lt;C: typedef PMQCHAR * PPMQCHAR&gt;</body><body package="MQ-XIF">PPMQCNO	&lt;C: typedef PMQCNO * PPMQCNO&gt;</body><body package="MQ-XIF">PPMQGMO	&lt;C: typedef PMQGMO * PPMQGMO&gt;</body><body package="MQ-XIF">PPMQHCONN	&lt;C: typedef PMQHCONN * PPMQHCONN&gt;</body><body package="MQ-XIF">PPMQHOBJ	&lt;C: typedef PMQHOBJ * PPMQHOBJ&gt;</body><body package="MQ-XIF">PPMQLONG	&lt;C: typedef PMQLONG * PPMQLONG&gt;</body><body package="MQ-XIF">PPMQMD	&lt;C: typedef PMQMD * PPMQMD&gt;</body><body package="MQ-XIF">PPMQOD	&lt;C: typedef PMQOD * PPMQOD&gt;</body><body package="MQ-XIF">PPMQPMO	&lt;C: typedef PMQPMO * PPMQPMO&gt;</body><body package="MQ-XIF">PPMQVOID	&lt;C: typedef PMQVOID * PPMQVOID&gt;</body><body package="MQ-XIF">PPMQWDR	&lt;C: typedef PMQWDR * PPMQWDR&gt;</body><body package="MQ-XIF">PPMQWQR	&lt;C: typedef PMQWQR * PPMQWQR&gt;</body></methods><methods><class-id>MQ.MQClientInterface</class-id> <category>structs</category><body package="MQ-XIF">tagMQACH	&lt;C: struct tagMQACH {			MQCHAR4 StrucId;			MQLONG Version, StrucLength, ChainAreaLength;			MQCHAR48 ExitInfoName;			PMQACH NextChainAreaPtr;		}&gt;</body><body package="MQ-XIF">tagMQAIR	&lt;C: struct tagMQAIR {			MQCHAR4 StrucId;			MQLONG Version, AuthInfoType;			MQCHAR264 AuthInfoConnName;			PMQCHAR LDAPUserNamePtr;			MQLONG LDAPUserNameOffset, LDAPUserNameLength;			MQCHAR32 LDAPPassword;		}&gt;</body><body package="MQ-XIF">tagMQAXC	&lt;C: struct tagMQAXC {			MQCHAR4 StrucId;			MQLONG Version, Environment;			MQCHAR12 UserId;			MQBYTE40 SecurityId;			MQCHAR264 ConnectionName;			MQLONG LongMCAUserIdLength, LongRemoteUserIdLength;			MQPTR LongMCAUserIdPtr, LongRemoteUserIdPtr;			MQCHAR28 ApplName;			MQLONG ApplType;			MQPID ProcessId;			MQTID ThreadId;		}&gt;</body><body package="MQ-XIF">tagMQAXP	&lt;C: struct tagMQAXP {			MQCHAR4 StrucId;			MQLONG Version, ExitId, ExitReason, ExitResponse, ExitResponse2, Feedback, APICallerType;			MQBYTE16 ExitUserArea;			MQCHAR32 ExitData;			MQCHAR48 ExitInfoName;			MQBYTE48 ExitPDArea;			MQCHAR48 QMgrName;			PMQACH ExitChainAreaPtr;			MQHCONFIG Hconfig;			MQLONG Function;		}&gt;</body><body package="MQ-XIF">tagMQBO	&lt;C: struct tagMQBO {			MQCHAR4 StrucId;			MQLONG Version, Options;		}&gt;</body><body package="MQ-XIF">tagMQCD	&lt;C: struct tagMQCD { 			MQCHAR ChannelName[20];			MQLONG Version, ChannelType, TransportType;			MQCHAR Desc[64];			MQCHAR QMgrName[48];			MQCHAR XmitQName[48];			MQCHAR ShortConnectionName[20];			MQCHAR MCAName[20];			MQCHAR ModeName[8];			MQCHAR TpName[64];			MQLONG BatchSize, DiscInterval, ShortRetryCount, ShortRetryInterval, LongRetryCount, LongRetryInterval;			MQCHAR SecurityExit[128];			MQCHAR MsgExit[128];			MQCHAR SendExit[128];			MQCHAR ReceiveExit[128];			MQLONG SeqNumberWrap, MaxMsgLength, PutAuthority, DataConversion;			MQCHAR SecurityUserData[32];			MQCHAR MsgUserData[32];			MQCHAR SendUserData[32];			MQCHAR ReceiveUserData[32];			MQCHAR UserIdentifier[12];			MQCHAR Password[12];			MQCHAR MCAUserIdentifier[12];			MQLONG MCAType;			MQCHAR ConnectionName[264];			MQCHAR RemoteUserIdentifier[12];			MQCHAR RemotePassword[12];			MQCHAR MsgRetryExit[128];			MQCHAR MsgRetryUserData[32];			MQLONG MsgRetryCount, MsgRetryInterval, HeartbeatInterval, BatchInterval, NonPersistentMsgSpeed, StrucLength, ExitNameLength, ExitDataLength, MsgExitsDefined, SendExitsDefined, ReceiveExitsDefined;			MQPTR MsgExitPtr, MsgUserDataPtr, SendExitPtr, SendUserDataPtr, ReceiveExitPtr, ReceiveUserDataPtr, ClusterPtr;			MQLONG ClustersDefined, NetworkPriority, LongMCAUserIdLength, LongRemoteUserIdLength;			MQPTR LongMCAUserIdPtr, LongRemoteUserIdPtr;			MQBYTE40 MCASecurityId, RemoteSecurityId;			MQCHAR SSLCipherSpec[32];			MQPTR SSLPeerNamePtr;			MQLONG SSLPeerNameLength, SSLClientAuth, KeepAliveInterval;			MQCHAR LocalAddress[48];			MQLONG BatchHeartbeat;		}&gt;</body><body package="MQ-XIF">tagMQCNO	&lt;C: struct tagMQCNO {			MQCHAR4 StrucId;			MQLONG Version, Options, ClientConnOffset;			MQPTR ClientConnPtr;			MQBYTE128 ConnTag;			PMQSCO SSLConfigPtr;			MQLONG SSLConfigOffset;		}&gt;</body><body package="MQ-XIF">tagMQCXP	&lt;C: struct tagMQCXP {			MQCHAR4 StrucId;			MQLONG Version, ExitId, ExitReason, ExitResponse, ExitResponse2, Feedback, MaxSegmentLength;			MQBYTE16 ExitUserArea;			MQCHAR32 ExitData;			MQLONG MsgRetryCount, MsgRetryInterval, MsgRetryReason, HeaderLength;			MQCHAR48 PartnerName;			MQLONG FAPLevel, CapabilityFlags, ExitNumber, ExitSpace;		}&gt;</body><body package="MQ-XIF">tagMQDXP	&lt;C: struct tagMQDXP {			MQCHAR4 StrucId;			MQLONG Version, ExitOptions, AppOptions, Encoding, CodedCharSetId, DataLength, CompCode, Reason, ExitResponse;			MQHCONN Hconn;		}&gt;</body><body package="MQ-XIF">tagMQGMO	&lt;C: struct tagMQGMO {			MQCHAR4 StrucId;			MQLONG Version, Options, WaitInterval, Signal1, Signal2;			MQCHAR48 ResolvedQName;			MQLONG MatchOptions;			MQCHAR GroupStatus, SegmentStatus, Segmentation, Reserved1;			MQBYTE16 MsgToken;			MQLONG ReturnedLength;		}&gt;</body><body package="MQ-XIF">tagMQMD	&lt;C: struct tagMQMD {			MQCHAR4 StrucId;			MQLONG Version, Report, MsgType, Expiry, Feedback, Encoding, CodedCharSetId;			MQCHAR8 Format;			MQLONG Priority, Persistence;			MQBYTE24 MsgId, CorrelId;			MQLONG BackoutCount;			MQCHAR48 ReplyToQ, ReplyToQMgr;			MQCHAR12 UserIdentifier;			MQBYTE32 AccountingToken;			MQCHAR32 ApplIdentityData;			MQLONG PutApplType;			MQCHAR28 PutApplName;			MQCHAR8 PutDate, PutTime;			MQCHAR4 ApplOriginData;			MQBYTE24 GroupId;			MQLONG MsgSeqNumber, Offset, MsgFlags, OriginalLength;		}&gt;</body><body package="MQ-XIF">tagMQOD	&lt;C: struct tagMQOD {			MQCHAR4 StrucId;			MQLONG Version, ObjectType;			MQCHAR48 ObjectName, ObjectQMgrName, DynamicQName;			MQCHAR12 AlternateUserId;			MQLONG RecsPresent, KnownDestCount, UnknownDestCount, InvalidDestCount, ObjectRecOffset, ResponseRecOffset;			MQPTR ObjectRecPtr, ResponseRecPtr;			MQBYTE40 AlternateSecurityId;			MQCHAR48 ResolvedQName, ResolvedQMgrName;		}&gt;</body><body package="MQ-XIF">tagMQPMO	&lt;C: struct tagMQPMO {			MQCHAR4 StrucId;			MQLONG Version, Options, Timeout;			MQHOBJ Context;			MQLONG KnownDestCount, UnknownDestCount, InvalidDestCount;			MQCHAR48 ResolvedQName, ResolvedQMgrName;			MQLONG RecsPresent, PutMsgRecFields, PutMsgRecOffset, ResponseRecOffset;			MQPTR PutMsgRecPtr, ResponseRecPtr;		}&gt;</body><body package="MQ-XIF">tagMQPXP	&lt;C: struct tagMQPXP {			MQCHAR4 StrucId;			MQLONG Version, ExitId, ExitReason, ExitResponse, ExitResponse2, Feedback, ExitNumber;			MQBYTE16 ExitUserArea;			MQCHAR32 ExitData;			MQLONG HeaderLength, MsgInLength, MsgOutLength, DestinationType;			PMQMD MsgDescPtr;			PMQVOID MsgInPtr, MsgOutPtr;			MQCHAR48 StreamName, QMgrName, DestinationQName, DestinationQMgrName;		}&gt;</body><body package="MQ-XIF">tagMQSCO	&lt;C: struct tagMQSCO {			MQCHAR4 StrucId;			MQLONG Version;			MQCHAR256 KeyRepository, CryptoHardware;			MQLONG AuthInfoRecCount, AuthInfoRecOffset;			PMQAIR AuthInfoRecPtr;		}&gt;</body><body package="MQ-XIF">tagMQTXP	&lt;C: struct tagMQTXP {			MQCHAR4 StrucId;			MQLONG Version, Reserved, ExitReason;			MQBYTE16 ExitUserArea;			MQLONG TransportType, RetryCount, DataLength, SessionId, GroupId, DataId, ExitResponse, Feedback;		}&gt;</body><body package="MQ-XIF">tagMQWCR	&lt;C: struct tagMQWCR {			MQCHAR48 ClusterName;			MQLONG ClusterRecOffset, ClusterFlags;		}&gt;</body><body package="MQ-XIF">tagMQWDR	&lt;C: struct tagMQWDR {			MQCHAR4 StrucId;			MQLONG Version, StrucLength, QMgrFlags;			MQCHAR48 QMgrIdentifier, QMgrName;			MQLONG ClusterRecOffset, ChannelState, ChannelDefOffset;		}&gt;</body><body package="MQ-XIF">tagMQWQR	&lt;C: struct tagMQWQR {			MQCHAR4 StrucId;			MQLONG Version, StrucLength, QFlags;			MQCHAR48 QName, QMgrIdentifier;			MQLONG ClusterRecOffset, QType;			MQCHAR64 QDesc;			MQLONG DefBind, DefPersistence, DefPriority, InhibitPut;		}&gt;</body><body package="MQ-XIF">tagMQWXP	&lt;C: struct tagMQWXP {			MQCHAR4 StrucId;			MQLONG Version, ExitId, ExitReason, ExitResponse, ExitResponse2, Feedback, Reserved;			MQBYTE16 ExitUserArea;			MQCHAR32 ExitData;			PMQMD MsgDescPtr;			PMQVOID MsgBufferPtr;			MQLONG MsgBufferLength, MsgLength;			MQCHAR48 QName, QMgrName;			MQLONG DestinationCount, DestinationChosen;			PPMQWDR DestinationArrayPtr;			PPMQWQR QArrayPtr;			MQPTR CacheContext;			MQLONG CacheType;		}&gt;</body></methods><methods><class-id>MQ.MQClientInterface class</class-id> <category>errors</category><body package="MQ-XIF">createReasonCodeDict	| dict src |	dict := Dictionary new: 100.	src := self reasonCodeSource.	1 to: src size by: 3 do: [ :index |		dict at: (src at: index + 2) put: (src at: index +1)].	^ dict</body><body package="MQ-XIF">getErrorDict	"CICSMQSLinuxClientInterface initialize"	^ self createReasonCodeDict</body><body package="MQ-XIF">reasonCodeSource"/* Reason Codes */"^#( #define MQRC_NONE                      0 #define MQRC_APPL_FIRST                900 #define MQRC_APPL_LAST                 999 #define MQRC_ALIAS_BASE_Q_TYPE_ERROR   2001 #define MQRC_ALREADY_CONNECTED         2002 #define MQRC_BACKED_OUT                2003 #define MQRC_BUFFER_ERROR              2004 #define MQRC_BUFFER_LENGTH_ERROR       2005 #define MQRC_CHAR_ATTR_LENGTH_ERROR    2006 #define MQRC_CHAR_ATTRS_ERROR          2007 #define MQRC_CHAR_ATTRS_TOO_SHORT      2008 #define MQRC_CONNECTION_BROKEN         2009 #define MQRC_DATA_LENGTH_ERROR         2010 #define MQRC_DYNAMIC_Q_NAME_ERROR      2011 #define MQRC_ENVIRONMENT_ERROR         2012 #define MQRC_EXPIRY_ERROR              2013 #define MQRC_FEEDBACK_ERROR            2014 #define MQRC_GET_INHIBITED             2016 #define MQRC_HANDLE_NOT_AVAILABLE      2017 #define MQRC_HCONN_ERROR               2018 #define MQRC_HOBJ_ERROR                2019 #define MQRC_INHIBIT_VALUE_ERROR       2020 #define MQRC_INT_ATTR_COUNT_ERROR      2021 #define MQRC_INT_ATTR_COUNT_TOO_SMALL  2022 #define MQRC_INT_ATTRS_ARRAY_ERROR     2023 #define MQRC_SYNCPOINT_LIMIT_REACHED   2024 #define MQRC_MAX_CONNS_LIMIT_REACHED   2025 #define MQRC_MD_ERROR                  2026 #define MQRC_MISSING_REPLY_TO_Q        2027 #define MQRC_MSG_TYPE_ERROR            2029 #define MQRC_MSG_TOO_BIG_FOR_Q         2030 #define MQRC_MSG_TOO_BIG_FOR_Q_MGR     2031 #define MQRC_NO_MSG_AVAILABLE          2033 #define MQRC_NO_MSG_UNDER_CURSOR       2034 #define MQRC_NOT_AUTHORIZED            2035 #define MQRC_NOT_OPEN_FOR_BROWSE       2036 #define MQRC_NOT_OPEN_FOR_INPUT        2037 #define MQRC_NOT_OPEN_FOR_INQUIRE      2038 #define MQRC_NOT_OPEN_FOR_OUTPUT       2039 #define MQRC_NOT_OPEN_FOR_SET          2040 #define MQRC_OBJECT_CHANGED            2041 #define MQRC_OBJECT_IN_USE             2042 #define MQRC_OBJECT_TYPE_ERROR         2043 #define MQRC_OD_ERROR                  2044 #define MQRC_OPTION_NOT_VALID_FOR_TYPE 2045 #define MQRC_OPTIONS_ERROR             2046 #define MQRC_PERSISTENCE_ERROR         2047 #define MQRC_PERSISTENT_NOT_ALLOWED    2048 #define MQRC_PRIORITY_EXCEEDS_MAXIMUM  2049 #define MQRC_PRIORITY_ERROR            2050 #define MQRC_PUT_INHIBITED             2051 #define MQRC_Q_DELETED                 2052 #define MQRC_Q_FULL                    2053 #define MQRC_Q_NOT_EMPTY               2055 #define MQRC_Q_SPACE_NOT_AVAILABLE     2056 #define MQRC_Q_TYPE_ERROR              2057 #define MQRC_Q_MGR_NAME_ERROR          2058 #define MQRC_Q_MGR_NOT_AVAILABLE       2059 #define MQRC_REPORT_OPTIONS_ERROR      2061 #define MQRC_SECOND_MARK_NOT_ALLOWED   2062 #define MQRC_SECURITY_ERROR            2063 #define MQRC_SELECTOR_COUNT_ERROR      2065 #define MQRC_SELECTOR_LIMIT_EXCEEDED   2066 #define MQRC_SELECTOR_ERROR            2067 #define MQRC_SELECTOR_NOT_FOR_TYPE     2068 #define MQRC_SIGNAL_OUTSTANDING        2069 #define MQRC_SIGNAL_REQUEST_ACCEPTED   2070 #define MQRC_STORAGE_NOT_AVAILABLE     2071 #define MQRC_SYNCPOINT_NOT_AVAILABLE   2072 #define MQRC_TRIGGER_CONTROL_ERROR     2075 #define MQRC_TRIGGER_DEPTH_ERROR       2076 #define MQRC_TRIGGER_MSG_PRIORITY_ERR  2077 #define MQRC_TRIGGER_TYPE_ERROR        2078 #define MQRC_TRUNCATED_MSG_ACCEPTED    2079 #define MQRC_TRUNCATED_MSG_FAILED      2080 #define MQRC_UNKNOWN_ALIAS_BASE_Q      2082 #define MQRC_UNKNOWN_OBJECT_NAME       2085 #define MQRC_UNKNOWN_OBJECT_Q_MGR      2086 #define MQRC_UNKNOWN_REMOTE_Q_MGR      2087 #define MQRC_WAIT_INTERVAL_ERROR       2090 #define MQRC_XMIT_Q_TYPE_ERROR         2091 #define MQRC_XMIT_Q_USAGE_ERROR        2092 #define MQRC_NOT_OPEN_FOR_PASS_ALL     2093 #define MQRC_NOT_OPEN_FOR_PASS_IDENT   2094 #define MQRC_NOT_OPEN_FOR_SET_ALL      2095 #define MQRC_NOT_OPEN_FOR_SET_IDENT    2096 #define MQRC_CONTEXT_HANDLE_ERROR      2097 #define MQRC_CONTEXT_NOT_AVAILABLE     2098 #define MQRC_SIGNAL1_ERROR             2099 #define MQRC_OBJECT_ALREADY_EXISTS     2100 #define MQRC_OBJECT_DAMAGED            2101 #define MQRC_RESOURCE_PROBLEM          2102 #define MQRC_ANOTHER_Q_MGR_CONNECTED   2103 #define MQRC_UNKNOWN_REPORT_OPTION     2104 #define MQRC_STORAGE_CLASS_ERROR       2105 #define MQRC_COD_NOT_VALID_FOR_XCF_Q   2106 #define MQRC_XWAIT_CANCELED            2107 #define MQRC_XWAIT_ERROR               2108 #define MQRC_SUPPRESSED_BY_EXIT        2109 #define MQRC_FORMAT_ERROR              2110 #define MQRC_SOURCE_CCSID_ERROR        2111 #define MQRC_SOURCE_INTEGER_ENC_ERROR  2112 #define MQRC_SOURCE_DECIMAL_ENC_ERROR  2113 #define MQRC_SOURCE_FLOAT_ENC_ERROR    2114 #define MQRC_TARGET_CCSID_ERROR        2115 #define MQRC_TARGET_INTEGER_ENC_ERROR  2116 #define MQRC_TARGET_DECIMAL_ENC_ERROR  2117 #define MQRC_TARGET_FLOAT_ENC_ERROR    2118 #define MQRC_NOT_CONVERTED             2119 #define MQRC_CONVERTED_MSG_TOO_BIG     2120 #define MQRC_TRUNCATED                 2120 #define MQRC_NO_EXTERNAL_PARTICIPANTS  2121 #define MQRC_PARTICIPANT_NOT_AVAILABLE 2122 #define MQRC_OUTCOME_MIXED             2123 #define MQRC_OUTCOME_PENDING           2124 #define MQRC_BRIDGE_STARTED            2125 #define MQRC_BRIDGE_STOPPED            2126 #define MQRC_ADAPTER_STORAGE_SHORTAGE  2127 #define MQRC_UOW_IN_PROGRESS           2128 #define MQRC_ADAPTER_CONN_LOAD_ERROR   2129 #define MQRC_ADAPTER_SERV_LOAD_ERROR   2130 #define MQRC_ADAPTER_DEFS_ERROR        2131 #define MQRC_ADAPTER_DEFS_LOAD_ERROR   2132 #define MQRC_ADAPTER_CONV_LOAD_ERROR   2133 #define MQRC_BO_ERROR                  2134 #define MQRC_DH_ERROR                  2135 #define MQRC_MULTIPLE_REASONS          2136 #define MQRC_OPEN_FAILED               2137 #define MQRC_ADAPTER_DISC_LOAD_ERROR   2138 #define MQRC_CNO_ERROR                 2139 #define MQRC_CICS_WAIT_FAILED          2140 #define MQRC_DLH_ERROR                 2141 #define MQRC_HEADER_ERROR              2142 #define MQRC_SOURCE_LENGTH_ERROR       2143 #define MQRC_TARGET_LENGTH_ERROR       2144 #define MQRC_SOURCE_BUFFER_ERROR       2145 #define MQRC_TARGET_BUFFER_ERROR       2146 #define MQRC_IIH_ERROR                 2148 #define MQRC_PCF_ERROR                 2149 #define MQRC_DBCS_ERROR                2150 #define MQRC_OBJECT_NAME_ERROR         2152 #define MQRC_OBJECT_Q_MGR_NAME_ERROR   2153 #define MQRC_RECS_PRESENT_ERROR        2154 #define MQRC_OBJECT_RECORDS_ERROR      2155 #define MQRC_RESPONSE_RECORDS_ERROR    2156 #define MQRC_ASID_MISMATCH             2157 #define MQRC_PMO_RECORD_FLAGS_ERROR    2158 #define MQRC_PUT_MSG_RECORDS_ERROR     2159 #define MQRC_CONN_ID_IN_USE            2160 #define MQRC_Q_MGR_QUIESCING           2161 #define MQRC_Q_MGR_STOPPING            2162 #define MQRC_DUPLICATE_RECOV_COORD     2163 #define MQRC_PMO_ERROR                 2173 #define MQRC_API_EXIT_NOT_FOUND        2182 #define MQRC_API_EXIT_LOAD_ERROR       2183 #define MQRC_REMOTE_Q_NAME_ERROR       2184 #define MQRC_INCONSISTENT_PERSISTENCE  2185 #define MQRC_GMO_ERROR                 2186 #define MQRC_CICS_BRIDGE_RESTRICTION   2187 #define MQRC_STOPPED_BY_CLUSTER_EXIT   2188 #define MQRC_CLUSTER_RESOLUTION_ERROR  2189 #define MQRC_CONVERTED_STRING_TOO_BIG  2190 #define MQRC_TMC_ERROR                 2191 #define MQRC_PAGESET_FULL              2192 #define MQRC_STORAGE_MEDIUM_FULL       2192 #define MQRC_PAGESET_ERROR             2193 #define MQRC_NAME_NOT_VALID_FOR_TYPE   2194 #define MQRC_UNEXPECTED_ERROR          2195 #define MQRC_UNKNOWN_XMIT_Q            2196 #define MQRC_UNKNOWN_DEF_XMIT_Q        2197 #define MQRC_DEF_XMIT_Q_TYPE_ERROR     2198 #define MQRC_DEF_XMIT_Q_USAGE_ERROR    2199 #define MQRC_NAME_IN_USE               2201 #define MQRC_CONNECTION_QUIESCING      2202 #define MQRC_CONNECTION_STOPPING       2203 #define MQRC_ADAPTER_NOT_AVAILABLE     2204 #define MQRC_MSG_ID_ERROR              2206 #define MQRC_CORREL_ID_ERROR           2207 #define MQRC_FILE_SYSTEM_ERROR         2208 #define MQRC_NO_MSG_LOCKED             2209 #define MQRC_FILE_NOT_AUDITED          2216 #define MQRC_CONNECTION_NOT_AUTHORIZED 2217 #define MQRC_MSG_TOO_BIG_FOR_CHANNEL   2218 #define MQRC_CALL_IN_PROGRESS          2219 #define MQRC_RMH_ERROR                 2220 #define MQRC_Q_MGR_ACTIVE              2222 #define MQRC_Q_MGR_NOT_ACTIVE          2223 #define MQRC_Q_DEPTH_HIGH              2224 #define MQRC_Q_DEPTH_LOW               2225 #define MQRC_Q_SERVICE_INTERVAL_HIGH   2226 #define MQRC_Q_SERVICE_INTERVAL_OK     2227 #define MQRC_UNIT_OF_WORK_NOT_STARTED  2232 #define MQRC_CHANNEL_AUTO_DEF_OK       2233 #define MQRC_CHANNEL_AUTO_DEF_ERROR    2234 #define MQRC_CFH_ERROR                 2235 #define MQRC_CFIL_ERROR                2236 #define MQRC_CFIN_ERROR                2237 #define MQRC_CFSL_ERROR                2238 #define MQRC_CFST_ERROR                2239 #define MQRC_INCOMPLETE_GROUP          2241 #define MQRC_INCOMPLETE_MSG            2242 #define MQRC_INCONSISTENT_CCSIDS       2243 #define MQRC_INCONSISTENT_ENCODINGS    2244 #define MQRC_INCONSISTENT_UOW          2245 #define MQRC_INVALID_MSG_UNDER_CURSOR  2246 #define MQRC_MATCH_OPTIONS_ERROR       2247 #define MQRC_MDE_ERROR                 2248 #define MQRC_MSG_FLAGS_ERROR           2249 #define MQRC_MSG_SEQ_NUMBER_ERROR      2250 #define MQRC_OFFSET_ERROR              2251 #define MQRC_ORIGINAL_LENGTH_ERROR     2252 #define MQRC_SEGMENT_LENGTH_ZERO       2253 #define MQRC_UOW_NOT_AVAILABLE         2255 #define MQRC_WRONG_GMO_VERSION         2256 #define MQRC_WRONG_MD_VERSION          2257 #define MQRC_GROUP_ID_ERROR            2258 #define MQRC_INCONSISTENT_BROWSE       2259 #define MQRC_XQH_ERROR                 2260 #define MQRC_SRC_ENV_ERROR             2261 #define MQRC_SRC_NAME_ERROR            2262 #define MQRC_DEST_ENV_ERROR            2263 #define MQRC_DEST_NAME_ERROR           2264 #define MQRC_TM_ERROR                  2265 #define MQRC_CLUSTER_EXIT_ERROR        2266 #define MQRC_CLUSTER_EXIT_LOAD_ERROR   2267 #define MQRC_CLUSTER_PUT_INHIBITED     2268 #define MQRC_CLUSTER_RESOURCE_ERROR    2269 #define MQRC_NO_DESTINATIONS_AVAILABLE 2270 #define MQRC_CONN_TAG_IN_USE           2271 #define MQRC_PARTIALLY_CONVERTED       2272 #define MQRC_CONNECTION_ERROR          2273 #define MQRC_OPTION_ENVIRONMENT_ERROR  2274 #define MQRC_CD_ERROR                  2277 #define MQRC_CLIENT_CONN_ERROR         2278 #define MQRC_CHANNEL_STOPPED_BY_USER   2279 #define MQRC_HCONFIG_ERROR             2280 #define MQRC_FUNCTION_ERROR            2281 #define MQRC_CHANNEL_STARTED           2282 #define MQRC_CHANNEL_STOPPED           2283 #define MQRC_CHANNEL_CONV_ERROR        2284 #define MQRC_SERVICE_NOT_AVAILABLE     2285 #define MQRC_INITIALIZATION_FAILED     2286 #define MQRC_TERMINATION_FAILED        2287 #define MQRC_UNKNOWN_Q_NAME            2288 #define MQRC_SERVICE_ERROR             2289 #define MQRC_Q_ALREADY_EXISTS          2290 #define MQRC_USER_ID_NOT_AVAILABLE     2291 #define MQRC_UNKNOWN_ENTITY            2292 #define MQRC_UNKNOWN_AUTH_ENTITY       2293 #define MQRC_UNKNOWN_REF_OBJECT        2294 #define MQRC_CHANNEL_ACTIVATED         2295 #define MQRC_CHANNEL_NOT_ACTIVATED     2296 #define MQRC_UOW_CANCELED              2297 #define MQRC_FUNCTION_NOT_SUPPORTED    2298 #define MQRC_SELECTOR_TYPE_ERROR       2299 #define MQRC_COMMAND_TYPE_ERROR        2300 #define MQRC_MULTIPLE_INSTANCE_ERROR   2301 #define MQRC_SYSTEM_ITEM_NOT_ALTERABLE 2302 #define MQRC_BAG_CONVERSION_ERROR      2303 #define MQRC_SELECTOR_OUT_OF_RANGE     2304 #define MQRC_SELECTOR_NOT_UNIQUE       2305 #define MQRC_INDEX_NOT_PRESENT         2306 #define MQRC_STRING_ERROR              2307 #define MQRC_ENCODING_NOT_SUPPORTED    2308 #define MQRC_SELECTOR_NOT_PRESENT      2309 #define MQRC_OUT_SELECTOR_ERROR        2310 #define MQRC_STRING_TRUNCATED          2311 #define MQRC_SELECTOR_WRONG_TYPE       2312 #define MQRC_INCONSISTENT_ITEM_TYPE    2313 #define MQRC_INDEX_ERROR               2314 #define MQRC_SYSTEM_BAG_NOT_ALTERABLE  2315 #define MQRC_ITEM_COUNT_ERROR          2316 #define MQRC_FORMAT_NOT_SUPPORTED      2317 #define MQRC_SELECTOR_NOT_SUPPORTED    2318 #define MQRC_ITEM_VALUE_ERROR          2319 #define MQRC_HBAG_ERROR                2320 #define MQRC_PARAMETER_MISSING         2321 #define MQRC_CMD_SERVER_NOT_AVAILABLE  2322 #define MQRC_STRING_LENGTH_ERROR       2323 #define MQRC_INQUIRY_COMMAND_ERROR     2324 #define MQRC_NESTED_BAG_NOT_SUPPORTED  2325 #define MQRC_BAG_WRONG_TYPE            2326 #define MQRC_ITEM_TYPE_ERROR           2327 #define MQRC_SYSTEM_BAG_NOT_DELETABLE  2328 #define MQRC_SYSTEM_ITEM_NOT_DELETABLE 2329 #define MQRC_CODED_CHAR_SET_ID_ERROR   2330 #define MQRC_MSG_TOKEN_ERROR           2331 #define MQRC_MISSING_WIH               2332 #define MQRC_WIH_ERROR                 2333 #define MQRC_RFH_ERROR                 2334 #define MQRC_RFH_STRING_ERROR          2335 #define MQRC_RFH_COMMAND_ERROR         2336 #define MQRC_RFH_PARM_ERROR            2337 #define MQRC_RFH_DUPLICATE_PARM        2338 #define MQRC_RFH_PARM_MISSING          2339 #define MQRC_CHAR_CONVERSION_ERROR     2340 #define MQRC_UCS2_CONVERSION_ERROR     2341 #define MQRC_DB2_NOT_AVAILABLE         2342 #define MQRC_OBJECT_NOT_UNIQUE         2343 #define MQRC_CONN_TAG_NOT_RELEASED     2344 #define MQRC_CF_NOT_AVAILABLE          2345 #define MQRC_CF_STRUC_IN_USE           2346 #define MQRC_CF_STRUC_LIST_HDR_IN_USE  2347 #define MQRC_CF_STRUC_AUTH_FAILED      2348 #define MQRC_CF_STRUC_ERROR            2349 #define MQRC_CONN_TAG_NOT_USABLE       2350 #define MQRC_GLOBAL_UOW_CONFLICT       2351 #define MQRC_LOCAL_UOW_CONFLICT        2352 #define MQRC_HANDLE_IN_USE_FOR_UOW     2353 #define MQRC_UOW_ENLISTMENT_ERROR      2354 #define MQRC_UOW_MIX_NOT_SUPPORTED     2355 #define MQRC_WXP_ERROR                 2356 #define MQRC_CURRENT_RECORD_ERROR      2357 #define MQRC_NEXT_OFFSET_ERROR         2358 #define MQRC_NO_RECORD_AVAILABLE       2359 #define MQRC_OBJECT_LEVEL_INCOMPATIBLE 2360 #define MQRC_NEXT_RECORD_ERROR         2361 #define MQRC_BACKOUT_THRESHOLD_REACHED 2362 #define MQRC_MSG_NOT_MATCHED           2363 #define MQRC_JMS_FORMAT_ERROR          2364 #define MQRC_SEGMENTS_NOT_SUPPORTED    2365 #define MQRC_WRONG_CF_LEVEL            2366 #define MQRC_CONFIG_CREATE_OBJECT      2367 #define MQRC_CONFIG_CHANGE_OBJECT      2368 #define MQRC_CONFIG_DELETE_OBJECT      2369 #define MQRC_CONFIG_REFRESH_OBJECT     2370 #define MQRC_CHANNEL_SSL_ERROR         2371 #define MQRC_CF_STRUC_FAILED           2373 #define MQRC_API_EXIT_ERROR            2374 #define MQRC_API_EXIT_INIT_ERROR       2375 #define MQRC_API_EXIT_TERM_ERROR       2376 #define MQRC_EXIT_REASON_ERROR         2377 #define MQRC_RESERVED_VALUE_ERROR      2378 #define MQRC_NO_DATA_AVAILABLE         2379 #define MQRC_SCO_ERROR                 2380 #define MQRC_KEY_REPOSITORY_ERROR      2381 #define MQRC_CRYPTO_HARDWARE_ERROR     2382 #define MQRC_AUTH_INFO_REC_COUNT_ERROR 2383 #define MQRC_AUTH_INFO_REC_ERROR       2384 #define MQRC_AIR_ERROR                 2385 #define MQRC_AUTH_INFO_TYPE_ERROR      2386 #define MQRC_AUTH_INFO_CONN_NAME_ERROR 2387 #define MQRC_LDAP_USER_NAME_ERROR      2388 #define MQRC_LDAP_USER_NAME_LENGTH_ERR 2389 #define MQRC_LDAP_PASSWORD_ERROR       2390 #define MQRC_SSL_ALREADY_INITIALIZED   2391 #define MQRC_SSL_CONFIG_ERROR          2392 #define MQRC_SSL_INITIALIZATION_ERROR  2393 #define MQRC_Q_INDEX_TYPE_ERROR        2394 #define MQRC_SSL_NOT_ALLOWED           2396 #define MQRC_JSSE_ERROR                2397 #define MQRC_SSL_PEER_NAME_MISMATCH    2398 #define MQRC_SSL_PEER_NAME_ERROR       2399 #define MQRC_UNSUPPORTED_CIPHER_SUITE  2400 #define MQRC_SSL_CERTIFICATE_REVOKED   2401 #define MQRC_SSL_CERT_STORE_ERROR      2402 #define MQRC_REOPEN_EXCL_INPUT_ERROR   6100 #define MQRC_REOPEN_INQUIRE_ERROR      6101 #define MQRC_REOPEN_SAVED_CONTEXT_ERR  6102 #define MQRC_REOPEN_TEMPORARY_Q_ERROR  6103 #define MQRC_ATTRIBUTE_LOCKED          6104 #define MQRC_CURSOR_NOT_VALID          6105 #define MQRC_ENCODING_ERROR            6106 #define MQRC_STRUC_ID_ERROR            6107 #define MQRC_NULL_POINTER              6108 #define MQRC_NO_CONNECTION_REFERENCE   6109 #define MQRC_NO_BUFFER                 6110 #define MQRC_BINARY_DATA_LENGTH_ERROR  6111 #define MQRC_BUFFER_NOT_AUTOMATIC      6112 #define MQRC_INSUFFICIENT_BUFFER       6113 #define MQRC_INSUFFICIENT_DATA         6114 #define MQRC_DATA_TRUNCATED            6115 #define MQRC_ZERO_LENGTH               6116 #define MQRC_NEGATIVE_LENGTH           6117 #define MQRC_NEGATIVE_OFFSET           6118 #define MQRC_INCONSISTENT_FORMAT       6119 #define MQRC_INCONSISTENT_OBJECT_STATE 6120 #define MQRC_CONTEXT_OBJECT_NOT_VALID  6121 #define MQRC_CONTEXT_OPEN_ERROR        6122 #define MQRC_STRUC_LENGTH_ERROR        6123 #define MQRC_NOT_CONNECTED             6124 #define MQRC_NOT_OPEN                  6125 #define MQRC_DISTRIBUTION_LIST_EMPTY   6126 #define MQRC_INCONSISTENT_OPEN_OPTIONS 6127 #define MQRC_WRONG_VERSION             6128 #define MQRC_REFERENCE_ERROR           6129)</body></methods><methods><class-id>MQ.MQClientInterface class</class-id> <category>class initialization</category><body package="MQ-XIF">initialize	"Initialize the errorDict classInstVar"	self errorDict</body></methods><methods><class-id>MQ.MQInterface</class-id> <category>procedures</category><body package="MQ-XIF">MQBACK: Hconn with: pCompCode with: pReason	&lt;C: void MQBACK(MQHCONN Hconn, PMQLONG pCompCode, PMQLONG pReason)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MQ-XIF">MQBEGIN: Hconn with: pBeginOptions with: pCompCode with: pReason	&lt;C: void MQBEGIN(MQHCONN Hconn, PMQVOID pBeginOptions, PMQLONG pCompCode, PMQLONG pReason)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MQ-XIF">MQCLOSE: Hconn with: pHobj with: Options with: pCompCode with: pReason	&lt;C: void MQCLOSE(MQHCONN Hconn, PMQHOBJ pHobj, MQLONG Options, PMQLONG pCompCode, PMQLONG pReason)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MQ-XIF">MQCMIT: Hconn with: pCompCode with: pReason	&lt;C: void MQCMIT(MQHCONN Hconn, PMQLONG pCompCode, PMQLONG pReason)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MQ-XIF">MQCONN: pQMgrName with: pHconn with: pCompCode with: pReason	&lt;C: void MQCONN(PMQCHAR pQMgrName, PMQHCONN pHconn, PMQLONG pCompCode, PMQLONG pReason)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MQ-XIF">MQDISC: pHconn with: pCompCode with: pReason	&lt;C: void MQDISC(PMQHCONN pHconn, PMQLONG pCompCode, PMQLONG pReason)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MQ-XIF">MQGET: Hconn with: Hobj with: pMsgDesc with: pGetMsgOpts with: BufferLength with: pBuffer with: pDataLength with: pCompCode with: pReason	&lt;C: void MQGET(MQHCONN Hconn, MQHOBJ Hobj, PMQVOID pMsgDesc, PMQVOID pGetMsgOpts, MQLONG BufferLength, PMQVOID pBuffer, PMQLONG pDataLength, PMQLONG pCompCode, PMQLONG pReason)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MQ-XIF">MQINQ: Hconn with: Hobj with: SelectorCount with: pSelectors with: IntAttrCount with: pIntAttrs with: CharAttrLength with: pCharAttrs with: pCompCode with: pReason	&lt;C: void MQINQ(MQHCONN Hconn, MQHOBJ Hobj, MQLONG SelectorCount, PMQLONG pSelectors, MQLONG IntAttrCount, PMQLONG pIntAttrs, MQLONG CharAttrLength, PMQCHAR pCharAttrs, PMQLONG pCompCode, PMQLONG pReason)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MQ-XIF">MQOPEN: Hconn with: pObjDesc with: Options with: pHobj with: pCompCode with: pReason	&lt;C: void MQOPEN(MQHCONN Hconn, PMQVOID pObjDesc, MQLONG Options, PMQHOBJ pHobj, PMQLONG pCompCode, PMQLONG pReason)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MQ-XIF">MQPUT1: Hconn with: pObjDesc with: pMsgDesc with: pPutMsgOpts with: BufferLength with: pBuffer with: pCompCode with: pReason	&lt;C: void MQPUT1(MQHCONN Hconn, PMQVOID pObjDesc, PMQVOID pMsgDesc, PMQVOID pPutMsgOpts, MQLONG BufferLength, PMQVOID pBuffer, PMQLONG pCompCode, PMQLONG pReason)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MQ-XIF">MQPUT: Hconn with: Hobj with: pMsgDesc with: pPutMsgOpts with: BufferLength with: pBuffer with: pCompCode with: pReason	&lt;C: void MQPUT(MQHCONN Hconn, MQHOBJ Hobj, PMQVOID pMsgDesc, PMQVOID pPutMsgOpts, MQLONG BufferLength, PMQVOID pBuffer, PMQLONG pCompCode, PMQLONG pReason)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MQ-XIF">MQSET: Hconn with: Hobj with: SelectorCount with: pSelectors with: IntAttrCount with: pIntAttrs with: CharAttrLength with: pCharAttrs with: pCompCode with: pReason	&lt;C: void MQSET(MQHCONN Hconn, MQHOBJ Hobj, MQLONG SelectorCount, PMQLONG pSelectors, MQLONG IntAttrCount, PMQLONG pIntAttrs, MQLONG CharAttrLength, PMQCHAR pCharAttrs, PMQLONG pCompCode, PMQLONG pReason)&gt;	^self externalAccessFailedWith: _errorCode</body></methods><methods><class-id>MQ.MQTHAPIInterface</class-id> <category>procedures</category><body package="MQ-XIF">MQBACK: Hconn with: pCompCode with: pReason	&lt;C: void _threaded MQBACK(MQHCONN Hconn, PMQLONG pCompCode, PMQLONG pReason)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MQ-XIF">MQBEGIN: Hconn with: pBeginOptions with: pCompCode with: pReason	&lt;C: void _threaded MQBEGIN(MQHCONN Hconn, PMQVOID pBeginOptions, PMQLONG pCompCode, PMQLONG pReason)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MQ-XIF">MQCLOSE: Hconn with: pHobj with: Options with: pCompCode with: pReason	&lt;C: void _threaded MQCLOSE(MQHCONN Hconn, PMQHOBJ pHobj, MQLONG Options, PMQLONG pCompCode, PMQLONG pReason)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MQ-XIF">MQCMIT: Hconn with: pCompCode with: pReason	&lt;C: void _threaded MQCMIT(MQHCONN Hconn, PMQLONG pCompCode, PMQLONG pReason)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MQ-XIF">MQCONN: pQMgrName with: pHconn with: pCompCode with: pReason	&lt;C: void _threaded MQCONN(PMQCHAR pQMgrName, PMQHCONN pHconn, PMQLONG pCompCode, PMQLONG pReason)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MQ-XIF">MQCONNX: pQMgrName with: pConnectOpts with: pHconn with: pCompCode with: pReason	&lt;C: void _threaded MQCONNX(PMQCHAR pQMgrName, PMQCNO pConnectOpts, PMQHCONN pHconn, PMQLONG pCompCode, PMQLONG pReason)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MQ-XIF">MQDISC: pHconn with: pCompCode with: pReason	&lt;C: void _threaded MQDISC(PMQHCONN pHconn, PMQLONG pCompCode, PMQLONG pReason)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MQ-XIF">MQGET: Hconn with: Hobj with: pMsgDesc with: pGetMsgOpts with: BufferLength with: pBuffer with: pDataLength with: pCompCode with: pReason	&lt;C: void _threaded MQGET(MQHCONN Hconn, MQHOBJ Hobj, PMQVOID pMsgDesc, PMQVOID pGetMsgOpts, MQLONG BufferLength, PMQVOID pBuffer, PMQLONG pDataLength, PMQLONG pCompCode, PMQLONG pReason)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MQ-XIF">MQINQ: Hconn with: Hobj with: SelectorCount with: pSelectors with: IntAttrCount with: pIntAttrs with: CharAttrLength with: pCharAttrs with: pCompCode with: pReason	&lt;C: void _threaded MQINQ(MQHCONN Hconn, MQHOBJ Hobj, MQLONG SelectorCount, PMQLONG pSelectors, MQLONG IntAttrCount, PMQLONG pIntAttrs, MQLONG CharAttrLength, PMQCHAR pCharAttrs, PMQLONG pCompCode, PMQLONG pReason)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MQ-XIF">MQOPEN: Hconn with: pObjDesc with: Options with: pHobj with: pCompCode with: pReason	&lt;C: void _threaded MQOPEN(MQHCONN Hconn, PMQVOID pObjDesc, MQLONG Options, PMQHOBJ pHobj, PMQLONG pCompCode, PMQLONG pReason)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MQ-XIF">MQPUT1: Hconn with: pObjDesc with: pMsgDesc with: pPutMsgOpts with: BufferLength with: pBuffer with: pCompCode with: pReason	&lt;C: void _threaded MQPUT1(MQHCONN Hconn, PMQVOID pObjDesc, PMQVOID pMsgDesc, PMQVOID pPutMsgOpts, MQLONG BufferLength, PMQVOID pBuffer, PMQLONG pCompCode, PMQLONG pReason)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MQ-XIF">MQPUT: Hconn with: Hobj with: pMsgDesc with: pPutMsgOpts with: BufferLength with: pBuffer with: pCompCode with: pReason	&lt;C: void _threaded MQPUT(MQHCONN Hconn, MQHOBJ Hobj, PMQVOID pMsgDesc, PMQVOID pPutMsgOpts, MQLONG BufferLength, PMQVOID pBuffer, PMQLONG pCompCode, PMQLONG pReason)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MQ-XIF">MQSET: Hconn with: Hobj with: SelectorCount with: pSelectors with: IntAttrCount with: pIntAttrs with: CharAttrLength with: pCharAttrs with: pCompCode with: pReason	&lt;C: void _threaded MQSET(MQHCONN Hconn, MQHOBJ Hobj, MQLONG SelectorCount, PMQLONG pSelectors, MQLONG IntAttrCount, PMQLONG pIntAttrs, MQLONG CharAttrLength, PMQCHAR pCharAttrs, PMQLONG pCompCode, PMQLONG pReason)&gt;	^self externalAccessFailedWith: _errorCode</body></methods><methods><class-id>MQ.MQTHAPIClientInterface</class-id> <category>procedures</category><body package="MQ-XIF">MQXCLWLN: pExitParms with: CurrentRecord with: NextOffset with: pNextRecord with: pCompCode with: pReason	&lt;C: void _threaded MQXCLWLN(PMQWXP pExitParms, MQPTR CurrentRecord, MQLONG NextOffset, PMQPTR pNextRecord, PMQLONG pCompCode, PMQLONG pReason)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MQ-XIF">MQXCNVC: Hconn with: Options with: SourceCCSID with: SourceLength with: pSourceBuffer with: TargetCCSID with: TargetLength with: pTargetBuffer with: pDataLength with: pCompCode with: pReason	&lt;C: void _threaded MQXCNVC(MQHCONN Hconn, MQLONG Options, MQLONG SourceCCSID, MQLONG SourceLength, PMQCHAR pSourceBuffer, MQLONG TargetCCSID, MQLONG TargetLength, PMQCHAR pTargetBuffer, PMQLONG pDataLength, PMQLONG pCompCode, PMQLONG pReason)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MQ-XIF">MQXEP: Hconfig with: ExitReason with: Function with: EntryPoint with: Reserved with: pCompCode with: pReason	&lt;C: void _threaded MQXEP(MQHCONFIG Hconfig, MQLONG ExitReason, MQLONG Function, PMQFUNC EntryPoint, MQPTR Reserved, PMQLONG pCompCode, PMQLONG pReason)&gt;	^self externalAccessFailedWith: _errorCode</body></methods><methods><class-id>MQ.MQClientInterface</class-id> <category>procedures</category><body package="MQ-XIF">MQCONNX: pQMgrName with: pConnectOpts with: pHconn with: pCompCode with: pReason	&lt;C: void MQCONNX(PMQCHAR pQMgrName, PMQCNO pConnectOpts, PMQHCONN pHconn, PMQLONG pCompCode, PMQLONG pReason)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MQ-XIF">MQXCLWLN: pExitParms with: CurrentRecord with: NextOffset with: pNextRecord with: pCompCode with: pReason	&lt;C: void MQXCLWLN(PMQWXP pExitParms, MQPTR CurrentRecord, MQLONG NextOffset, PMQPTR pNextRecord, PMQLONG pCompCode, PMQLONG pReason)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MQ-XIF">MQXCNVC: Hconn with: Options with: SourceCCSID with: SourceLength with: pSourceBuffer with: TargetCCSID with: TargetLength with: pTargetBuffer with: pDataLength with: pCompCode with: pReason	&lt;C: void MQXCNVC(MQHCONN Hconn, MQLONG Options, MQLONG SourceCCSID, MQLONG SourceLength, PMQCHAR pSourceBuffer, MQLONG TargetCCSID, MQLONG TargetLength, PMQCHAR pTargetBuffer, PMQLONG pDataLength, PMQLONG pCompCode, PMQLONG pReason)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MQ-XIF">MQXEP: Hconfig with: ExitReason with: Function with: EntryPoint with: Reserved with: pCompCode with: pReason	&lt;C: void MQXEP(MQHCONFIG Hconfig, MQLONG ExitReason, MQLONG Function, PMQFUNC EntryPoint, MQPTR Reserved, PMQLONG pCompCode, PMQLONG pReason)&gt;	^self externalAccessFailedWith: _errorCode</body></methods><initialize><class-id>MQ.MQTHAPIClientInterface</class-id></initialize><initialize><class-id>MQ.MQClientInterface</class-id></initialize><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>ExternalInterface</name><environment>External</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars>includeFiles includeDirectories libraryFiles libraryDirectories virtual optimizationLevel </class-inst-vars><imports>			private Kernel.OpcodePool.*			</imports><category>External-Interface</category><attributes><package>External-Interface</package></attributes></class></st-source>