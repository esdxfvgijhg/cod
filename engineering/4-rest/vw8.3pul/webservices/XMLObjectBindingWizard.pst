<?xml version="1.0"?><st-source><!-- Name: XMLObjectBindingWizardNotice: Copyright 1999-2015 Cincom Systems, Inc.  All rights reserved.Comment: Contains a XML to Object Binding Tool that helps to describe instance variable types and create XML schema and XML to object binding specificationDbIdentifier: bear73DbTrace: 493903DbUsername: tkoganDbVersion: 8.3 - 0DevelopmentPrerequisites: #(#(#any 'HTTP' '') #(#any 'WizardSupport' '') #(#any 'XMLObjectBindingTool' ''))PackageName: XMLObjectBindingWizardParcel: #('XMLObjectBindingWizard')ParcelName: XMLObjectBindingWizardPrerequisiteDescriptions: #(#(#name 'HTTP') #(#name 'WizardSupport') #(#name 'XMLObjectBindingTool'))PrerequisiteParcels: #(#('HTTP' '') #('WizardSupport' '') #('XMLObjectBindingTool' ''))PrintStringCache: (8.3 - 0,tkogan)Version: 8.3 - 0Date: 2:31:38 PM April 28, 2017 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.3 (apr17.3) of April 28, 2017 on April 28, 2017 at 2:31:38 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>X2OIcons</name><environment>WebServices</environment><super>AlphaBlendedIcons</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>XMLObjectBindingWizard</package></attributes></class><comment><class-id>WebServices.X2OIcons</class-id><body>Holds X2O icons to display complex X2O types</body></comment><class><name>SetTypeMarshalerDialog</name><environment>WebServices</environment><super>UI.SimpleDialog</super><private>false</private><indexed-type>none</indexed-type><inst-vars>parent itemType </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Web Services-Tools</category><attributes><package>XMLObjectBindingWizard</package></attributes></class><comment><class-id>WebServices.SetTypeMarshalerDialog</class-id><body>SetCtmTypeDialog is super class for type dialogs Instance Variables:	parent	&lt;WSSubcanvas&gt;	parent window	itemType	&lt;Object&gt;	the type</body></comment><class><name>StructDialog</name><environment>WebServices</environment><super>WebServices.SetTypeMarshalerDialog</super><private>false</private><indexed-type>none</indexed-type><inst-vars>types nameAspect tableAspect </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Web Services-Tools</category><attributes><package>XMLObjectBindingWizard</package></attributes></class><comment><class-id>WebServices.StructDialog</class-id><body>StructDialog allows to specify struct typeInstance Variables:	types	&lt;(Collection of: Symbols )&gt;	 #simple and #complex	nameAspect	&lt;ValueModel&gt;	holds the struct item name	tableAspect	&lt;TableInterface&gt;	table</body></comment><class><name>ChoiceDialog</name><environment>WebServices</environment><super>WebServices.StructDialog</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Web Services-Tools</category><attributes><package>XMLObjectBindingWizard</package></attributes></class><comment><class-id>WebServices.ChoiceDialog</class-id><body>ChoiceDialog helps to enter types and names for XML choice type</body></comment><class><name>DataSetRow</name><environment>WebServices</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>name displayString clean typeArray relationMarshaler typeMarshaler </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Web Services-Tools</category><attributes><package>XMLObjectBindingWizard</package></attributes></class><comment><class-id>WebServices.DataSetRow</class-id><body>DataSetRow holds operation parameter/type description Instance Variables	name	&lt;Symbol&gt; the type name	displayString	&lt;String&gt;  the item type 	clean	&lt;Boolean&gt; defines whether or not the type has being changed	typeArray	&lt;String&gt; the type array as the  is described in a pragma	relationMarshaler	&lt;XMLTypeMarshaler&gt; 	typeMarshaler	&lt;XMLTYpeMarshaler&gt; </body></comment><class><name>DataTypeRow</name><environment>WebServices</environment><super>WebServices.DataSetRow</super><private>false</private><indexed-type>none</indexed-type><inst-vars>aspect required relation unbounded model </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Web Services-Tools</category><attributes><package>XMLObjectBindingWizard</package></attributes></class><comment><class-id>WebServices.DataTypeRow</class-id><body>DataTypeRow holds operation parameter/type description Instance Variables	aspect	&lt;Symbol&gt; the type aspect	required	&lt;Boolean&gt; defines whether or not the type is required. Sets minOccurs to 1 if it's required	relation	&lt;XMLTypeMarshaler&gt; marshaler	unbounded	&lt;Boolean&gt; defines if the maxOccurs attribute should be set	model	&lt;XMLToolModel&gt; </body></comment><class><name>CreateSpecification</name><environment>WebServices</environment><super>WebServices.WSSubcanvas</super><private>false</private><indexed-type>none</indexed-type><inst-vars>destinationType methodName postURLAspect generateCBAspect classNameAspect fileNameAspect classToSaveMethod specificationAspect </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Web Services-Tools</category><attributes><package>XMLObjectBindingWizard</package></attributes></class><comment><class-id>WebServices.CreateSpecification</class-id><body>The class is the superclass for create specifications dialogsSubclasses must implement the following messages:	aspects		defaultMethodNameInstance Variables	classNameAspect	&lt;ValueModel&gt;	description of classNameAspect	classToSaveMethod	&lt;String&gt;	the class name to save the specification	destinationType	&lt;ValueModel&gt;	where to save the spec	fileNameAspect	&lt;ValueModel&gt;	file name to save the spec	generateCBAspect	&lt;ValueModel&gt;	if the check box is checked the spec will be saved when "Next" pressed	methodName	&lt;ValueModel&gt;	method name	postURLAspect	&lt;ValueHolder&gt;	url 	specificationAspect	&lt;ValueModel&gt;	the spec text</body></comment><class><name>CreateX2O</name><environment>WebServices</environment><super>WebServices.CreateSpecification</super><private>false</private><indexed-type>none</indexed-type><inst-vars>hasChanges </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Web Services-Tools</category><attributes><package>XMLObjectBindingWizard</package></attributes></class><comment><class-id>WebServices.CreateX2O</class-id><body>The class will create XML to object binding specification,  allow to change the specification and load the bindingInstance Variables	hasChanges	&lt;Boolean&gt; defines if the spec has been modified</body></comment><class><name>TypeView</name><environment>WebServices</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>icon </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Web Services-Tools</category><attributes><package>XMLObjectBindingWizard</package></attributes></class><comment><class-id>WebServices.TypeView</class-id><body>TypeView is abstract class for a type and operation views.Subclasses must implement the following messages:	view		labelInstance Variables	icon	&lt;OpaqueImage&gt; an iconShared Variables	ExceptionTypeIcon	&lt;OpaqueImage&gt; 	PartialyResolvedTypeIcon	&lt;OpaqueImage&gt; 	ResolvedTypeIcon	&lt;OpaqueImage&gt; 	UnresolvedTypeIcon	&lt;OpaqueImage&gt; </body></comment><class><name>X2OBindingSetting</name><environment>WebServices</environment><super>WebServices.WSDialog</super><private>false</private><indexed-type>none</indexed-type><inst-vars>nameAspect classNamespaceAspect attributeFormDefaultAspect elementFormDefaultAspect classNamespaceList defaultQualifierAspect </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Web Services-Tools</category><attributes><package>XMLObjectBindingWizard</package></attributes></class><comment><class-id>WebServices.X2OBindingSetting</class-id><body>X2OBindingSetting allows to specify a Wsdl schema settings Instance Variables:	allowDerivedTypesAspect	&lt;ValueModel&gt;	 allowDerivedTypesAspect	attributeFormDefaultAspect	&lt;ValueModel&gt;	 attributeFormDefaultAspect	classNamespaceAspect	&lt;ValueModel&gt;	 classNamespaceAspect	classNamespaceList	&lt;Collection of: ValueModel&gt;	available classNamespaces	defaultQualifierAspect	&lt;ValueModel&gt;	 defaultQualifierAspect	elementFormDefaultAspect	&lt;ValueModel&gt;	 elementFormDefaultAspect	nameAspect	&lt;ValueModel&gt;	 nameAspect</body></comment><class><name>TypeSubcanvas</name><environment>WebServices</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>simpleTypes complexTypeAspect simpleTypeAspect typeAspect complexTypeClass parent simpleTypeMarshaler simpleTypesMarshalers </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Web Services-Tools</category><attributes><package>XMLObjectBindingWizard</package></attributes></class><comment><class-id>WebServices.TypeSubcanvas</class-id><body>Helps to select simple or complex types in CollectionDialog or StructDialogInstance Variables	simpleTypes	&lt;ValueHolder&gt; holds list of simple types	complexTypeAspect	&lt;ValueModel&gt; holds the complexType	simpleTypeAspect	&lt;ValueModel&gt; holds simple type as String, Integer and so on	typeAspect	&lt;ValueModel&gt; holds selected type	complexTypeClass	&lt;Class&gt; a class that will be used as a complex type	parent	&lt;Dialog&gt; CollectionDialog or StructDialog</body></comment><class><name>TestX2OBinding</name><environment>WebServices</environment><super>WebServices.WSSubcanvas</super><private>false</private><indexed-type>none</indexed-type><inst-vars>workspaceAspect </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Web Services-Tools</category><attributes><package>XMLObjectBindingWizard</package></attributes></class><comment><class-id>WebServices.TestX2OBinding</class-id><body>TestX2OBinding creates workspace script to test marshaling/unmarshaling Smalltalk object to XML and visa versaInstance Variables:	workspaceAspect	&lt;WorkspacePage&gt;	description of workspaceAspect</body></comment><class><name>BrowseTypes</name><environment>WebServices</environment><super>WebServices.WSSubcanvas</super><private>false</private><indexed-type>none</indexed-type><inst-vars>typeViewsAspect selectedTypeView </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Web Services-Tools</category><attributes><package>XMLObjectBindingWizard</package></attributes></class><comment><class-id>WebServices.BrowseTypes</class-id><body>BrowseUnresolved displays unresolved/resolved types for operation and type description. Instance Variables	typeViewsAspect	&lt;SelectionInList&gt; holds type view list	selectedTypeView	&lt;TypeView&gt; selected type view</body></comment><class><name>BrowseObjectMarshalers</name><environment>WebServices</environment><super>WebServices.BrowseTypes</super><private>false</private><indexed-type>none</indexed-type><inst-vars>targetNamespaceAspect </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Web Services-Tools</category><attributes><package>XMLObjectBindingWizard</package></attributes></class><comment><class-id>WebServices.BrowseObjectMarshalers</class-id><body>BrowseTypes helps to describe types that will be used in Web services operation parameters.Instance Variables	targetNamespaceAspect &lt;String&gt; the XML schema targetNamespace attribute value</body></comment><class><name>CollectionDialog</name><environment>WebServices</environment><super>WebServices.SetTypeMarshalerDialog</super><private>false</private><indexed-type>none</indexed-type><inst-vars>maxOccursAspect minOccursAspect </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Web Services-Tools</category><attributes><package>XMLObjectBindingWizard</package></attributes></class><comment><class-id>WebServices.CollectionDialog</class-id><body>The dialog allows to create collection type marshalerInstance Variables	maxOccursAspect	&lt;String&gt; maxOccurs attribute	minOccursAspect	&lt;String&gt; minOccurs attribute</body></comment><class><name>XMLToolModel</name><environment>WebServices</environment><super>UI.Model</super><private>false</private><indexed-type>none</indexed-type><inst-vars>typeViews builder </inst-vars><class-inst-vars>sortDatatypeBlock </class-inst-vars><imports></imports><category>Web Services-Tools</category><attributes><package>XMLObjectBindingWizard</package></attributes></class><comment><class-id>WebServices.XMLToolModel</class-id><body>XMLToolModel represents a XML to object binding wizard model.Instance Variables	typeViews	&lt;OrderedCollection of: TypeView&gt; list of type views	builder &lt;XMLObjectBindingBuilder&gt;Class Instance Variables	sortDatatypeBlock &lt;BlockClosure&gt; the block sorts xml datatypes as they appear in assigning xml types to class instance variables. Reset the block implemetation if you want the datatype order other than alphabetic</body></comment><class><name>X2OClassSearchModule</name><environment>WebServices</environment><super>Tools.IncrementalSearchModule</super><private>false</private><indexed-type>none</indexed-type><inst-vars>includeSuperclasses </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>XMLObjectBindingWizard</package></attributes></class><comment><class-id>WebServices.X2OClassSearchModule</class-id><body>Web services extension to IncrementalSearchModule. Instance Variables	includeSuperclasses	&lt;ValueHolder&gt;	if the option is checked the superclasses will be included when a class is selected</body></comment><class><name>BindingTool</name><environment>WebServices</environment><super>WebServices.WSWizard</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Web Services-Tools</category><attributes><package>XMLObjectBindingWizard</package></attributes></class><comment><class-id>WebServices.BindingTool</class-id><body>BindingWizard will allow you to assign types to Smalltalk class instance variables and create XML to Object Binding specification from the type description.</body></comment><class><name>TypeMarshalerView</name><environment>WebServices</environment><super>WebServices.TypeView</super><private>false</private><indexed-type>none</indexed-type><inst-vars>type model </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>WSDLToolUI</category><attributes><package>XMLObjectBindingWizard</package></attributes></class><comment><class-id>WebServices.TypeMarshalerView</class-id><body>TypeView defines the type view for BrowseTypes interfaceInstance Variables	model	&lt;XMLToolModel&gt;	 model	type    &lt;XMLTypeMarshaler&gt; marshaler</body></comment><class><name>SetTypesMenu</name><environment>WebServices</environment><super>WebServices.WSSubcanvas</super><private>false</private><indexed-type>none</indexed-type><inst-vars>simpleTypes proxy typesMenu callback selectedRow datasetAspect tableItemView </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Web Services-Tools</category><attributes><package>XMLObjectBindingWizard</package></attributes></class><comment><class-id>WebServices.SetTypesMenu</class-id><body>SetTypesMenu is super class for setting operation parametrs types  and class typesInstance Variables:	callback	&lt;aBlock&gt;	is used to update unresolved list in the model	datasetAspect	&lt;SelectionInList&gt;	dataset displays type description	proxy	&lt;TypePragmas&gt;	type or interface pragma	selectedRow	&lt;ValueModel&gt;	holds selected dataset row	simpleTypes	&lt;Collection of: Symbol&gt;	list of simple types	tableItemView	&lt;TypeView&gt;	tableItemView	typesMenu	&lt;Menu&gt;	menu for setting types</body></comment><class><name>SetClassTypes</name><environment>WebServices</environment><super>WebServices.SetTypesMenu</super><private>false</private><indexed-type>none</indexed-type><inst-vars>classNameAspect includeSuperclass </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Web Services-Tools</category><attributes><package>XMLObjectBindingWizard</package></attributes></class><comment><class-id>WebServices.SetClassTypes</class-id><body>SetClassTypes allows to specify class types. Instance Variables	classNameAspect	&lt;ValueHolder&gt; holds the class name	includeSuperclass	&lt;Boolean&gt; defines if superclass types should be includes</body></comment><class><name>SelectX2OBinding</name><environment>WebServices</environment><super>WebServices.WSSubcanvas</super><private>false</private><indexed-type>none</indexed-type><inst-vars>bindingListAspect selectionMenu </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Web Services-Tools</category><attributes><package>XMLObjectBindingWizard</package></attributes></class><comment><class-id>WebServices.SelectX2OBinding</class-id><body>The dialog helps to select an existing XML Object Binding, create a new on or remove a binding from the registryInstance Variables	bindingListAspect	&lt;SelectionInList&gt;	list of registered XML Object Bindings  	selectionMenu	&lt;Menu&gt;	allows to remove a binding</body></comment><class><name>CreateXMLSchema</name><environment>WebServices</environment><super>WebServices.CreateX2O</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Web Services-Tools</category><attributes><package>XMLObjectBindingWizard</package></attributes></class><comment><class-id>WebServices.CreateXMLSchema</class-id><body>CreateXMLTypes will create XML schema types element</body></comment><class><name>WSLabelAndValue</name><environment>WebServices</environment><super>Core.LookupKey</super><private>false</private><indexed-type>none</indexed-type><inst-vars>value </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Collections-Support</category><attributes><package>XMLObjectBindingWizard</package></attributes></class><comment><class-id>WebServices.WSLabelAndValue</class-id><body>Holds an instance of XMLObjectBindingInstance Variables	value	&lt;XMLObjectBinding&gt; </body></comment><class><name>BindingToolTabs</name><environment>WebServices</environment><super>WebServices.WSSubcanvas</super><private>false</private><indexed-type>none</indexed-type><inst-vars>tabs client </inst-vars><class-inst-vars>clients </class-inst-vars><imports></imports><category>Web Services-Tools</category><attributes><package>XMLObjectBindingWizard</package></attributes></class><comment><class-id>WebServices.BindingToolTabs</class-id><body>Holds X2O bindinding tool tabsInstance Variables	tabs	&lt;SelectionInList&gt; 	client	&lt;WSSubcanvas&gt; one of BrowseObjectMarshalers / CreateX2O / CreateXMLSchema / TestX2OBinding	Class Instance Variables	clients &lt;OrderedCollection&gt; list of tab clients</body></comment><shared-variable><name>ResolvedTypeIcon</name><environment>WebServices.TypeView</environment><private>false</private><constant>false</constant><category>defaults</category><initializer></initializer><attributes><package>XMLObjectBindingWizard</package></attributes></shared-variable><shared-variable><name>ExceptionTypeIcon</name><environment>WebServices.TypeView</environment><private>false</private><constant>false</constant><category>defaults</category><initializer></initializer><attributes><package>XMLObjectBindingWizard</package></attributes></shared-variable><shared-variable><name>PartialyResolvedTypeIcon</name><environment>WebServices.TypeView</environment><private>false</private><constant>false</constant><category>defaults</category><initializer>nil</initializer><attributes><package>XMLObjectBindingWizard</package></attributes></shared-variable><shared-variable><name>UnresolvedTypeIcon</name><environment>WebServices.TypeView</environment><private>false</private><constant>false</constant><category>defaults</category><initializer></initializer><attributes><package>XMLObjectBindingWizard</package></attributes></shared-variable><methods><class-id>WebServices.SetTypeMarshalerDialog</class-id> <category>accessing</category><body package="XMLObjectBindingWizard">complexTypeClass	^self itemType complexTypeClass</body><body package="XMLObjectBindingWizard">complexTypeValue	^self itemType complexTypeValue</body><body package="XMLObjectBindingWizard">itemType	^itemType		ifNil: [itemType := TypeSubcanvas new.			itemType parent: self parent.			itemType onChangeSend: #nameChanged to: self.			itemType]		ifNotNil: [itemType]</body><body package="XMLObjectBindingWizard">parent	^parent</body><body package="XMLObjectBindingWizard">parent: anObject	parent := anObject</body><body package="XMLObjectBindingWizard">simpleTypeValue	^self itemType simpleTypeValue</body><body package="XMLObjectBindingWizard">typeValue	^self itemType typeValue</body></methods><methods><class-id>WebServices.SetTypeMarshalerDialog</class-id> <category>actions</category><body package="XMLObjectBindingWizard">helpText	self class displayHelpText</body></methods><methods><class-id>WebServices.SetTypeMarshalerDialog class</class-id> <category>accessing</category><body package="XMLObjectBindingWizard">helpText	^'Not provided'</body><body package="XMLObjectBindingWizard">messageCatalogID	^#webservices</body></methods><methods><class-id>WebServices.SetTypeMarshalerDialog class</class-id> <category>instance creation</category><body package="XMLObjectBindingWizard">openWith: parent	^self openOn: 			(self new 				parent: parent;				yourself )</body></methods><methods><class-id>WebServices.SetTypeMarshalerDialog class</class-id> <category>actions</category><body package="XMLObjectBindingWizard">displayHelpText	(SimpleHelp helpString: self helpText) open</body></methods><methods><class-id>WebServices.StructDialog</class-id> <category>actions</category><body package="XMLObjectBindingWizard">acceptTypes	self parent setStructTypeFrom:  self prepareTypes.	self  accept value: true</body><body package="XMLObjectBindingWizard">addType	| row |	(types detect: [ :tx |  tx first = self nameAspect value ] ifNone: [ nil]) notNil		ifTrue: [ ^Dialog warn: 'There is already item with the name: ', self nameAspect value ].	row := Array new: 4.	row at: 1 put: self nameAspect value.	self typeValue = #simple		ifTrue: 			[self simpleTypeValue 				ifNil: [ ^nil ]				ifNotNil: [ :simpleTypeMarshaler | 							row at: 2 put: simpleTypeMarshaler typeDescription.							row at: 3 put: simpleTypeMarshaler ]]		ifFalse: 				[self complexTypeValue isEmpty ifTrue: [ ^nil ].			row at: 2 put: self complexTypeValue asSymbol.			row at: 3 put: self complexTypeClass.].	self tableAspect table addRow: row.	self nameAspect value: ''.	(self builder componentAt: #acceptButton) widget isEnabled: types notEmpty.</body><body package="XMLObjectBindingWizard">helpText	"This stub method was generated by UIDefiner"	^self</body><body package="XMLObjectBindingWizard">nameChanged	(self builder componentAt: #addTypeButton) widget		isEnabled: (self nameAspect value notEmpty						and: [ self simpleTypeValue notNil								or: [ self complexTypeValue notEmpty]]).</body><body package="XMLObjectBindingWizard">prepareTypes	| structTypes  marshaler |	structTypes := OrderedCollection new.	types do: [ :type |		marshaler := (( type at: 3 ) isKindOf: SimpleObjectMarshaler) 			ifTrue: [ type at: 3 ]			ifFalse: [ self parent acceptComplexType: ( type at: 3 )  ].		structTypes add: ( Array with: type first with: marshaler ) ].	^structTypes asArray</body><body package="XMLObjectBindingWizard">removeType	self tableAspect table removeAtRowIndex: self tableAspect selectionIndex y.	self tableAspect updateLayout</body><body package="XMLObjectBindingWizard">selectionChanged	(self builder componentAt: #removeTypeButton) widget 		isEnabled: (self tableAspect selectionIndex x ~= 0 ).	(self builder componentAt: #acceptButton) widget isEnabled: types notEmpty.</body></methods><methods><class-id>WebServices.StructDialog</class-id> <category>interface opening</category><body package="XMLObjectBindingWizard">postBuildWith: aBuilder	super postBuildWith: aBuilder.	self nameChanged.	self selectionChanged.</body></methods><methods><class-id>WebServices.StructDialog</class-id> <category>initialize-release</category><body package="XMLObjectBindingWizard">initialize	| colAdaptors |	super initialize.	types := OrderedCollection new.	self setTableHeader.	colAdaptors := RowAdaptor adaptForIndexes: (1 to: 2).	self tableAspect selectionInTable		table: (TableAdaptor 					on: types					adaptors: colAdaptors).	self nameAspect onChangeSend: #nameChanged to: self.	self tableAspect selectionInTable selectionIndexHolder onChangeSend: #selectionChanged to: self.</body><body package="XMLObjectBindingWizard">setTableHeader	self tableAspect columnWidths: #( 150 450 );		columnLabelsArray: 			(List 				with: (#Name &lt;&lt; #webservices &gt;&gt; 'Name') asString				with: (#Type &lt;&lt; #webservices &gt;&gt; 'Type') asString).	self tableAspect		columnLabelsFormats: #left;		elementFormats: #leftWrapped;		rowHeights: 1.</body></methods><methods><class-id>WebServices.StructDialog</class-id> <category>aspects</category><body package="XMLObjectBindingWizard">nameAspect	^nameAspect isNil		ifTrue:			[nameAspect := String new asValue]		ifFalse:			[nameAspect]</body><body package="XMLObjectBindingWizard">tableAspect	^tableAspect isNil		ifTrue:			[tableAspect := TableInterface new selectionInTable: SelectionInTable new]		ifFalse:			[tableAspect]</body></methods><methods><class-id>WebServices.StructDialog class</class-id> <category>accessing</category><body package="XMLObjectBindingWizard">helpText	^'Generates XML elementsXML Schema:&lt;types&gt; &lt;schema&gt;   &lt;complexType name="LDHolding"&gt;     &lt;sequence&gt;	  &lt;element name="acquisitionCost" minOccurs="1" maxOccurs="1" type="decimal"/&gt;	  &lt;element name="acquisitionDate" minOccurs="1" maxOccurs="1" type="date"/&gt;	  &lt;element name="acquisitionNumber" minOccurs="1" maxOccurs="1" type="positiveInteger"/&gt;    &lt;/sequence&gt;  &lt;/complexType&gt; &lt;/schema&gt;&lt;/types&gt;XML to object binding:&lt;schemaBindings&gt; &lt;xmlToSmalltalkBinding ...&gt;  &lt;struct name="LDHolding" smalltalkClass="WebServices.Struct"&gt;      &lt;element name="acquisitionCost" minOccurs="1" maxOccurs="1" type="decimal"/&gt;      &lt;element name="acquisitionDate" minOccurs="1" maxOccurs="1" type="date"/&gt;      &lt;element name="acquisitionNumber" minOccurs="1" maxOccurs="1" type="positiveInteger"/&gt;  &lt;/struct&gt; &lt;/xmlToSmalltalkBinding&gt;&lt;/schemaBindings&gt;'</body></methods><methods><class-id>WebServices.ChoiceDialog</class-id> <category>interface opening</category><body package="XMLObjectBindingWizard">postBuildWith: aBuilder	super postBuildWith: aBuilder.	aBuilder window newLabel: 'Choice type'</body></methods><methods><class-id>WebServices.ChoiceDialog</class-id> <category>actions</category><body package="XMLObjectBindingWizard">acceptTypes	self parent setChoiceTypeFrom: self prepareTypes.	self  accept value: true</body></methods><methods><class-id>WebServices.ChoiceDialog class</class-id> <category>accessing</category><body package="XMLObjectBindingWizard">helpText	^'Generates XML elements'</body></methods><methods><class-id>WebServices.DataSetRow</class-id> <category>printing</category><body package="XMLObjectBindingWizard">displayString	^displayString</body><body package="XMLObjectBindingWizard">printOn: aStream	super printOn: aStream.	displayString ifNotNil: [ aStream nextPutAll: ' ', displayString ]</body></methods><methods><class-id>WebServices.DataSetRow</class-id> <category>accessing</category><body package="XMLObjectBindingWizard">clean	^clean</body><body package="XMLObjectBindingWizard">clean: aBoolean	clean := aBoolean</body><body package="XMLObjectBindingWizard">displayString: anObject	displayString := anObject.	self setDirty</body><body package="XMLObjectBindingWizard">name	^name</body><body package="XMLObjectBindingWizard">name: anObject	name := anObject.	self setDirty</body><body package="XMLObjectBindingWizard">relationMarshaler	^relationMarshaler</body><body package="XMLObjectBindingWizard">relationMarshaler: anObject	relationMarshaler := anObject.</body><body package="XMLObjectBindingWizard">typeArray	^typeArray</body><body package="XMLObjectBindingWizard">typeArray: anObject	typeArray := anObject</body><body package="XMLObjectBindingWizard">typeMarshaler	^typeMarshaler</body><body package="XMLObjectBindingWizard">typeMarshaler: aComplexTypeMarshaler	typeMarshaler := aComplexTypeMarshaler</body></methods><methods><class-id>WebServices.DataSetRow</class-id> <category>initialize-release</category><body package="XMLObjectBindingWizard">initialize	clean := true</body></methods><methods><class-id>WebServices.DataSetRow</class-id> <category>testing</category><body package="XMLObjectBindingWizard">dirty	^self clean not</body><body package="XMLObjectBindingWizard">isDirty	^self clean not</body></methods><methods><class-id>WebServices.DataSetRow</class-id> <category>private</category><body package="XMLObjectBindingWizard">setDirty	self clean: false</body></methods><methods><class-id>WebServices.DataSetRow class</class-id> <category>instance creation</category><body package="XMLObjectBindingWizard">new	^super new initialize</body></methods><methods><class-id>WebServices.DataTypeRow</class-id> <category>accessing</category><body package="XMLObjectBindingWizard">aspect	^aspect</body><body package="XMLObjectBindingWizard">aspect: anObject	aspect := anObject.	self setDirty.</body><body package="XMLObjectBindingWizard">model	^model</body><body package="XMLObjectBindingWizard">model: anObject	model := anObject</body><body package="XMLObjectBindingWizard">relation	^relation</body><body package="XMLObjectBindingWizard">relation: aString	relation := aString asSymbol.	relation = #attribute		ifTrue: [unbounded := false.			((self typeArray isString and: [self model model supportedSimpleTypes includes: self typeArray])				or: [ self typeArray isTypeMarshaler and: [  self typeArray isSimpleType]])				ifFalse: [ typeArray := nil.						displayString := '' ].			self model datasetChanged.			].	self setDirty.</body><body package="XMLObjectBindingWizard">required	^required</body><body package="XMLObjectBindingWizard">required: aBoolean	required := aBoolean.	self setDirty.</body><body package="XMLObjectBindingWizard">unbounded	^unbounded</body><body package="XMLObjectBindingWizard">unbounded: aBoolean	relation = #attribute ifTrue: [^unbounded := false].	unbounded := aBoolean.	self setDirty.</body></methods><methods><class-id>WebServices.CreateSpecification</class-id> <category>actions</category><body package="XMLObjectBindingWizard">browseFile	| fName |	(fName := Dialog requestFileName: #PleaseTypeAFileName &lt;&lt; #webservices &gt;&gt; 'Please type a file name: ' default: self defaultFileExtension) notEmpty 		ifTrue: 			[ self fileNameAspect value: fName.			self fileChanged ]</body><body package="XMLObjectBindingWizard">destinationChanged	self 		enableMethodGroup;		enableFileGroup;		enablePostGroup.</body><body package="XMLObjectBindingWizard">enableFileGroup	| aBoolean |	aBoolean := (self destinationType value = #File).	#( #fileNameAspect #browseFileButton)		do: [ :each | (self widgetAt: each) isEnabled: aBoolean].	self fileChanged</body><body package="XMLObjectBindingWizard">enableGenerate: aBoolean</body><body package="XMLObjectBindingWizard">enableMethodGroup	| aBoolean |	aBoolean := (self destinationType value = #Method).	#( #methodName  #inLabel #selectClassButton #classNameAspect )		do: [ :each | (self widgetAt: each ) isEnabled: aBoolean].	self methodChanged.</body><body package="XMLObjectBindingWizard">enablePostGroup	(self widgetAt: #postURLAspect) isEnabled: (self destinationType value = #Post).	self postUrlChanged</body><body package="XMLObjectBindingWizard">fileChanged"	self parent ifNotNil: [ self parent enableNext: self fileNameAspect value notEmpty]."</body><body package="XMLObjectBindingWizard">generateCBChanged	| aBoolean |	aBoolean := self generateCBAspect value.	#( #method  #file #post ) do: [ :each | (self widgetAt: each ) isEnabled: aBoolean].	aBoolean		ifTrue: [self destinationType value: #Method ]		ifFalse: 			[ self destinationType value: #xxx.			self parent notNil ifTrue: [self parent enableNext: true] ].</body><body package="XMLObjectBindingWizard">methodChanged"	| aBoolean |	aBoolean := (self methodName value notEmpty and: [ self classNameAspect value notEmpty ]).	self parent ifNotNil: [ self parent enableNext: aBoolean ]."</body><body package="XMLObjectBindingWizard">postUrlChanged"	self parent ifNotNil: [ self parent enableNext: self postURLAspect value notEmpty]."</body><body package="XMLObjectBindingWizard">saveSpecification: aBinding	|  dom  |	dom := (XMLParser on: aBinding readStream)				validate: false;				scanDocument.  	^self generateCBAspect  value		ifTrue: [self perform: ('generateTo', self destinationType value,':' ) asSymbol with: dom ]		ifFalse: [ true]</body><body package="XMLObjectBindingWizard">selectClass	(classToSaveMethod := IncrementalSearchDialog selectClass) notNil		ifTrue: [self classNameAspect value: classToSaveMethod name asString ].	self methodChanged</body></methods><methods><class-id>WebServices.CreateSpecification</class-id> <category>aspects</category><body package="XMLObjectBindingWizard">classNameAspect	^classNameAspect isNil		ifTrue: [classNameAspect := String new asValue]		ifFalse: 	[classNameAspect]</body><body package="XMLObjectBindingWizard">defaultMethodName	^self subclassResponsibility</body><body package="XMLObjectBindingWizard">destinationType	destinationType isNil ifTrue: [^destinationType := #method asValue].	^destinationType</body><body package="XMLObjectBindingWizard">fileNameAspect	^fileNameAspect isNil		ifTrue: [fileNameAspect := self defaultFileExtension asValue]		ifFalse: [fileNameAspect]</body><body package="XMLObjectBindingWizard">generateCBAspect	^generateCBAspect</body><body package="XMLObjectBindingWizard">methodName	methodName isNil ifTrue: [^methodName := self defaultMethodName asValue].	^methodName</body><body package="XMLObjectBindingWizard">postURLAspect	^postURLAspect ifNil: [postURLAspect := String new asValue].</body><body package="XMLObjectBindingWizard">specificationAspect	^specificationAspect</body></methods><methods><class-id>WebServices.CreateSpecification</class-id> <category>private</category><body package="XMLObjectBindingWizard">generateToFile: doc	self model saveDocument: doc intoFile: self fileNameAspect value.	^true</body><body package="XMLObjectBindingWizard">generateToMethod: doc	classToSaveMethod ifNil: [^true].	XML.Document		saveDocument: doc 		intoMethod: self methodName value 		class: classToSaveMethod		withComment: nil.	^true</body><body package="XMLObjectBindingWizard">generateToPost: doc	self model postDocument: doc url: (self postURLAspect value asURI). 	^true</body></methods><methods><class-id>WebServices.CreateSpecification</class-id> <category>initialize-release</category><body package="XMLObjectBindingWizard">initializeAspects	self initializeDestinationAspects. 	self initializeSpecificationAspect.</body><body package="XMLObjectBindingWizard">initializeDestinationAspects	destinationType := #Method asValue.	generateCBAspect := false asValue.	self destinationType onChangeSend: #destinationChanged to: self.	self generateCBAspect onChangeSend: #generateCBChanged to: self.</body><body package="XMLObjectBindingWizard">initializeSpecificationAspect</body></methods><methods><class-id>WebServices.CreateSpecification</class-id> <category>interface opening</category><body package="XMLObjectBindingWizard">postBuildWith: aBuilder	super postBuildWith: aBuilder.	#(fileNameAspect postURLAspect) do:		[:each | (self controllerAt: each) continuousAccept: true].	self generateCBChanged.</body></methods><methods><class-id>WebServices.CreateSpecification</class-id> <category>accessing</category><body package="XMLObjectBindingWizard">defaultFileExtension	^'*.xml'</body><body package="XMLObjectBindingWizard">wsdlBuilder	^nil</body></methods><methods><class-id>WebServices.CreateX2O</class-id> <category>interface opening</category><body package="XMLObjectBindingWizard">postBuildWith: aBuilder	(self widgetAt: #specificationAspect)		ifNotNil: [ :wrapper | wrapper when: #losingFocus send: #widgetLoosingFocus to: self.]</body></methods><methods><class-id>WebServices.CreateX2O</class-id> <category>aspects</category><body package="XMLObjectBindingWizard">defaultMethodName	^'x2oBinding'</body></methods><methods><class-id>WebServices.CreateX2O</class-id> <category>actions</category><body package="XMLObjectBindingWizard">closeRequestFromParent	| result |	hasChanges ifTrue:[		result := Dialog			choose: 'The XML To Object Binding Specification has been changed. Do you want to accept these changes?'			labels: (Array with: 'Yes' with: 'Cancel' )			values: #(#yes  #no)			default: #yes.		result = #no ifTrue: [ ^false]].	self safelyExecute: [ self loadBinding: self specificationAspect value string].	^true</body><body package="XMLObjectBindingWizard">exitingClient	self closeRequestFromParent</body><body package="XMLObjectBindingWizard">generateCBChanged</body><body package="XMLObjectBindingWizard">loadBinding: aBindingSpec	self model validateBinding: aBindingSpec onUnresolvedReferences: [ :exDescription | Dialog warn: exDescription. ^false ].	^true</body><body package="XMLObjectBindingWizard">saveSpec	self saveSpecification: self specificationAspect value string</body><body package="XMLObjectBindingWizard">saveSpecification: aBinding	|  dom  |	dom := (XMLParser on: aBinding readStream)				validate: false;				scanDocument.  	^self perform: ('generateTo', self destinationType value,':' ) asSymbol with: dom</body><body package="XMLObjectBindingWizard">widgetLoosingFocus	hasChanges ifFalse:[^nil].	(Dialog		choose: 'The XML To Object Binding Specification has been changed. Do you want to accept these changes?'		labels: (Array with: 'Yes' with: 'Cancel' )		values: #(#yes  #no)		default: #yes)  = #no 			ifTrue: [	specificationAspect value: self model createBindingElement. ]			ifFalse: [ self safelyExecute: [ self loadBinding: self specificationAspect value string]].	hasChanges := false.</body><body package="XMLObjectBindingWizard">x2oSpecChanged			hasChanges := true</body></methods><methods><class-id>WebServices.CreateX2O</class-id> <category>initialize-release</category><body package="XMLObjectBindingWizard">initializeDestinationAspects	destinationType := #Method asValue.	self destinationType onChangeSend: #destinationChanged to: self.</body><body package="XMLObjectBindingWizard">initializeSpecificationAspect 	specificationAspect := self model createBindingElement asValue.	specificationAspect onChangeSend: #x2oSpecChanged to: self.	hasChanges := false</body></methods><methods><class-id>WebServices.CreateX2O class</class-id> <category>accessing</category><body package="XMLObjectBindingWizard">exitingClient</body><body package="XMLObjectBindingWizard">header	^#ReviewAndChangeXMLToObjectBindingSpec &lt;&lt; #webservices &gt;&gt; 'Review and Change XML Object Binding Specification'</body><body package="XMLObjectBindingWizard">helpText	^#ReviewUpdateX2OHelp &lt;&lt; #webservices &gt;&gt;'In this dialog you can review and change the XML To Object Binding Specification. If you confirm to accept the changes the new XML To Object binding object will be built, verified and registered from the updated specification. Destination section:Method - saves the schema to a class method with the specified name in the selected class.File out - saves the schema to an external text filePOST - posts the schema on the Http server using specified url'</body></methods><methods><class-id>WebServices.TypeView</class-id> <category>accessing</category><body package="XMLObjectBindingWizard">exceptionTypeIcon	^self class exceptionTypeIcon</body><body package="XMLObjectBindingWizard">resolvedTypeIcon	^self class resolvedTypeIcon</body><body package="XMLObjectBindingWizard">unresolvedTypeIcon	^self class unresolvedTypeIcon</body></methods><methods><class-id>WebServices.TypeView</class-id> <category>view</category><body package="XMLObjectBindingWizard">label	^self subclassResponsibility</body><body package="XMLObjectBindingWizard">labelAndIconWith: anIndex inView: aView	^BoundingWrapper on: 				((LabelAndIcon 					with: self label					attributes: aView textStyle) 					icon: icon )</body></methods><methods><class-id>WebServices.TypeView class</class-id> <category>accessing</category><body package="XMLObjectBindingWizard">exceptionTypeIcon	ExceptionTypeIcon isNil		ifTrue: [ ExceptionTypeIcon := X2OIcons visualFor: #lightning ].	^ExceptionTypeIcon</body><body package="XMLObjectBindingWizard">partialyResolvedTypeIcon	PartialyResolvedTypeIcon ifNil: [ PartialyResolvedTypeIcon := X2OIcons visualFor: #partialMapped ].	^PartialyResolvedTypeIcon</body><body package="XMLObjectBindingWizard">partialyResolvedTypeIcon: anIcon	PartialyResolvedTypeIcon := anIcon</body><body package="XMLObjectBindingWizard">resolvedTypeIcon	ResolvedTypeIcon ifNil: [ ResolvedTypeIcon := X2OIcons visualFor: #allMapped].	^ResolvedTypeIcon</body><body package="XMLObjectBindingWizard">resolvedTypeIcon: anIcon	ResolvedTypeIcon := anIcon</body><body package="XMLObjectBindingWizard">unresolvedTypeIcon	UnresolvedTypeIcon ifNil: [ UnresolvedTypeIcon := X2OIcons visualFor: #notMapped ].	^UnresolvedTypeIcon</body><body package="XMLObjectBindingWizard">unresolvedTypeIcon: anIcon	UnresolvedTypeIcon := anIcon</body></methods><methods><class-id>WebServices.X2OBindingSetting</class-id> <category>aspects</category><body package="XMLObjectBindingWizard">attributeFormDefaultAspect	^attributeFormDefaultAspect</body><body package="XMLObjectBindingWizard">classNamespaceAspect	^classNamespaceAspect</body><body package="XMLObjectBindingWizard">defaultQualifierAspect	^defaultQualifierAspect</body><body package="XMLObjectBindingWizard">elementFormDefaultAspect	^elementFormDefaultAspect</body><body package="XMLObjectBindingWizard">nameAspect	^nameAspect</body></methods><methods><class-id>WebServices.X2OBindingSetting</class-id> <category>actions</category><body package="XMLObjectBindingWizard">acceptTypes	self model schemaName: self nameAspect value.	self model elementFormDefault: self elementFormDefaultAspect value.	self model attributeFormDefault: self attributeFormDefaultAspect value.	self model classNamespace: self classNamespaceAspect value.	^self accept value: true</body><body package="XMLObjectBindingWizard">selectClassNamespace	(IncrementalSearchDialog selectNamespace: 'Select Namespace')		ifNotNil: [:choice | self classNamespaceAspect value: choice name asString ]</body></methods><methods><class-id>WebServices.X2OBindingSetting</class-id> <category>initialize-release</category><body package="XMLObjectBindingWizard">initializeAspects	nameAspect := self model schemaName asValue.	elementFormDefaultAspect := self model elementFormDefault asSymbol asValue.	attributeFormDefaultAspect := self model attributeFormDefault asSymbol asValue.	classNamespaceAspect := self model classNamespace asValue.</body></methods><methods><class-id>WebServices.X2OBindingSetting class</class-id> <category>accessing</category><body package="XMLObjectBindingWizard">helpText	^ #X2OBindingSettingstHelpText &lt;&lt; #webservices &gt;&gt; 'Name:  XML to Object Binding name or XML schema nameDefault Element Form: The global XML schema attribute that indicates whether or not locally declared elements must be set to "qualified" or "unqualified."Default Attribute Form: The global XML schema attribute that indicates whether or not locally declared attributes must be set to "qualified" or "unqualified."Default class namespace: The Smalltalk namespace where binding smalltalkClass attributes will be resolved '</body></methods><methods><class-id>WebServices.TypeSubcanvas</class-id> <category>accessing</category><body package="XMLObjectBindingWizard">complexTypeClass	^complexTypeClass</body><body package="XMLObjectBindingWizard">complexTypeValue	^self complexTypeAspect value</body><body package="XMLObjectBindingWizard">parent	^parent</body><body package="XMLObjectBindingWizard">parent: anObject	parent := anObject</body><body package="XMLObjectBindingWizard">simpleTypeValue	simpleTypeAspect value isEmpty ifTrue: [ ^nil ].	^self simpleTypesMarshalers at: simpleTypeAspect value</body><body package="XMLObjectBindingWizard">simpleTypes	^simpleTypes</body><body package="XMLObjectBindingWizard">simpleTypesMarshalers	^simpleTypesMarshalers</body><body package="XMLObjectBindingWizard">typeValue	^self typeAspect value</body></methods><methods><class-id>WebServices.TypeSubcanvas</class-id> <category>actions</category><body package="XMLObjectBindingWizard">getComplexType	self parent getComplexTypeDialog ifNotNil: 			[ :clx | 			complexTypeClass := clx. 			self complexTypeAspect value: clx fullName.			self valueChanged].</body><body package="XMLObjectBindingWizard">valueChanged	self changed: #value</body></methods><methods><class-id>WebServices.TypeSubcanvas</class-id> <category>interests</category><body package="XMLObjectBindingWizard">onChangeSend: aSymbol to: anObject 	"Arrange for anObject to receive a message named aSymbol when 	I signal that my attribute #value has changed."	self		expressInterestIn: #value		for: anObject		sendBack: aSymbol</body><body package="XMLObjectBindingWizard">retractInterestsFor: anObject 	"Undo a send of onChangeSend:to:."	self retractInterestIn: #value for: anObject</body></methods><methods><class-id>WebServices.TypeSubcanvas</class-id> <category>interface opening</category><body package="XMLObjectBindingWizard">enableWidgets	(self builder componentAt: #selectComplexTypeButton) widget isEnabled: (self typeAspect value = #complex).	self typeAspect value = #complex		ifTrue: [ self simpleTypeAspect value: '' ]		ifFalse: [ self complexTypeAspect value: '' ].	(self builder componentAt: #simpleTypeComboBox) widget isEnabled: (self typeAspect value = #simple).</body><body package="XMLObjectBindingWizard">postBuildWith: aBuilder	super postBuildWith: aBuilder.	self enableWidgets</body></methods><methods><class-id>WebServices.TypeSubcanvas</class-id> <category>aspects</category><body package="XMLObjectBindingWizard">complexTypeAspect	^complexTypeAspect</body><body package="XMLObjectBindingWizard">simpleTypeAspect	^simpleTypeAspect</body><body package="XMLObjectBindingWizard">typeAspect	^typeAspect</body></methods><methods><class-id>WebServices.TypeSubcanvas</class-id> <category>initialize-release</category><body package="XMLObjectBindingWizard">initialize	super initialize.	simpleTypeAspect := String new asValue.	complexTypeAspect := String new asValue.	typeAspect := #simple asValue.	simpleTypesMarshalers := Struct new.	XMLToolModel xmlDatatypeMarshalers do: [ :each |		simpleTypesMarshalers at: each typeDescription put: each].	simpleTypes := simpleTypesMarshalers keys asOrderedCollection asValue.	self typeAspect onChangeSend: #enableWidgets to: self.	self typeAspect onChangeSend: #valueChanged to: self.	self simpleTypeAspect onChangeSend: #valueChanged to: self.</body></methods><methods><class-id>WebServices.TestX2OBinding</class-id> <category>aspects</category><body package="XMLObjectBindingWizard">workspaceAspect	^workspaceAspect</body></methods><methods><class-id>WebServices.TestX2OBinding</class-id> <category>initialize-release</category><body package="XMLObjectBindingWizard">initializeAspects	self setWorkspaceAspect: self model createScript.</body><body package="XMLObjectBindingWizard">setWorkspaceAspect: aString	workspaceAspect := Workbook with: aString labeled: 'Test XML to Object Binding'</body></methods><methods><class-id>WebServices.TestX2OBinding</class-id> <category>actions</category><body package="XMLObjectBindingWizard">exitingClient</body></methods><methods><class-id>WebServices.TestX2OBinding</class-id> <category>interface opening</category><body package="XMLObjectBindingWizard">postBuildWith: aBuilder	"This is a clone of Workbook&gt;&gt;postOpenWith:, which is not called when it is an embedded subcanvas."	super postBuildWith: aBuilder.	self workspaceAspect pageHolder selection: self workspaceAspect pageHolder list first.</body></methods><methods><class-id>WebServices.TestX2OBinding class</class-id> <category>accessing</category><body package="XMLObjectBindingWizard">exitingClient</body><body package="XMLObjectBindingWizard">header	^#TestingX2OBinding &lt;&lt; #webservices &gt;&gt; 'Testing XML To Object Binding'</body><body package="XMLObjectBindingWizard">helpText	^#TestX2OHelp &lt;&lt; #webservices &gt;&gt;'This page helps you to test the XML to Object Binding. The script marshals Smalltalk objects to XML document and unmarshals XML documents in to Smalltalk objects.'</body></methods><methods><class-id>WebServices.BrowseTypes</class-id> <category>accessing</category><body package="XMLObjectBindingWizard">selectedTypeView	^selectedTypeView</body><body package="XMLObjectBindingWizard">selectedTypeView: aString	selectedTypeView := aString.</body><body package="XMLObjectBindingWizard">typeViews</body></methods><methods><class-id>WebServices.BrowseTypes</class-id> <category>interface opening</category><body package="XMLObjectBindingWizard">disableAddDescriptionButton	(self widgetAt: #addDescriptionButton) isEnabled:  false.</body><body package="XMLObjectBindingWizard">labelAtIndex: anIndex inView: aView 	^(self typeViewsAspect list at: anIndex)		labelAndIconWith: anIndex inView: aView</body><body package="XMLObjectBindingWizard">postBuildWith: aBuilder 	"Replace controller with one with more sanity."	| cwidget |	super  postBuildWith: aBuilder. 	cwidget := self widgetAt: #typeViewsAspect.	cwidget visualBlock: [ :view :index | self labelAtIndex: index inView: view ].	cwidget selectedVisualBlock: [ :view :index | self reverseLabel: (self labelAtIndex: index inView: view) ].	self disableAddDescriptionButton.</body><body package="XMLObjectBindingWizard">reverseLabel: aLabel 	"Build the wrappers needed to reverse the label to show it selected."	| rw |	rw := ReversingWrapper on: aLabel.	rw reverse setValue: true.	^BoundedWrapper on: rw</body></methods><methods><class-id>WebServices.BrowseTypes</class-id> <category>aspects</category><body package="XMLObjectBindingWizard">typeViewsAspect	^typeViewsAspect</body></methods><methods><class-id>WebServices.BrowseTypes</class-id> <category>private</category><body package="XMLObjectBindingWizard">selectionChanged	(self widgetAt: #addDescriptionButton) isEnabled:  self selectedTypeView notNil</body><body package="XMLObjectBindingWizard">updateTypeViewAspect	| selectIndex |	selectIndex := self typeViewsAspect selectionIndex.	self typeViewsAspect listHolder changed:#value.	self typeViewsAspect selectionIndex: selectIndex.</body></methods><methods><class-id>WebServices.BrowseTypes</class-id> <category>initialize-release</category><body package="XMLObjectBindingWizard">initializeAspects	super initializeAspects.	self initializeTypeViews</body><body package="XMLObjectBindingWizard">initializeTypeViews	^self subclassResponsibility</body></methods><methods><class-id>WebServices.BrowseObjectMarshalers</class-id> <category>accessing</category><body package="XMLObjectBindingWizard">typeViews	^self model typeViews</body></methods><methods><class-id>WebServices.BrowseObjectMarshalers</class-id> <category>initialize-release</category><body package="XMLObjectBindingWizard">initializeAspects	super initializeAspects.	targetNamespaceAspect := self model binding targetNamespace asValue.	self model initializeTypeViews.	targetNamespaceAspect value: self model schemaTargetNamespace.	self targetNamespaceAspect compute: [:aValue | self model updateSchemaTargetNamespace: aValue].</body><body package="XMLObjectBindingWizard">initializeTypeViews	typeViewsAspect := MultiSelectionInList new.	typeViewsAspect listHolder: ((AspectAdaptor subject: self sendsUpdates: true) forAspect: #typeViews).	typeViewsAspect selectionIndexHolder compute: [self perform: #selectedTypeView: with: typeViewsAspect selections].</body></methods><methods><class-id>WebServices.BrowseObjectMarshalers</class-id> <category>actions</category><body package="XMLObjectBindingWizard">addClass	| cl dialog module |	module := X2OClassSearchModule forClassSelection: 'Find:'.	module includeSuperclasses value: self model includeSuper.	dialog := IncrementalSearchDialog new module: module; requireSelection: true.	^(cl := dialog select) notNil		ifTrue: 			[self model includeSuper: module includeSuperclasses value.			self addClass: cl.			self selectionChanged ]</body><body package="XMLObjectBindingWizard">addDescription	(SetClassTypes 			model: self model  			typeView: self selectedTypeView first			callback: [ self typeViewsAspect listHolder changed: #value. self selectionChanged ] ) open.</body><body package="XMLObjectBindingWizard">allFromPackage	| registry dialog thePundle module |	(registry := #{Store.Registry} valueOrDo: [nil]) isNil ifTrue: [^nil].	dialog := IncrementalSearchDialog 		forSelectionFrom: registry allPundlesSorted		filterBlock: [:entry :pundle | entry, '*' match: pundle name].	dialog		windowLabel: #FindPackage &lt;&lt; #browser &gt;&gt; 'Find Package';		firstLabel: #FilterC &lt;&lt; #browser &gt;&gt; 'Filter:';		secondLabel: #Packages &lt;&lt; #browser &gt;&gt; 'Packages';		objectToStringBlock: [:pundle | pundle name];		iconSelector: #toolListIcon.	module := X2OClassSearchModule forPackageSelection: 'Find:'.	module includeSuperclasses value: self model includeSuper. 	dialog module: module.	thePundle := dialog select.	thePundle isNil ifTrue: [^nil].	self model includeSuper: module includeSuperclasses value.	thePundle allDefinedClasses do: [ :cl | self addClass: cl].	self selectionChanged.</body><body package="XMLObjectBindingWizard">dropClasses	self model dropClasses: (self selectedTypeView collect: [ :view | view type]). 	self typeViewsAspect listHolder changed: #value. 	self selectionChanged.</body><body package="XMLObjectBindingWizard">exitingClient</body><body package="XMLObjectBindingWizard">inspectBinding	^self  model binding inspect</body><body package="XMLObjectBindingWizard">openSettings	(X2OBindingSetting model: self model) open.</body><body package="XMLObjectBindingWizard">registerX2O	^self safelyExecute: [self model completeBinding ]</body></methods><methods><class-id>WebServices.BrowseObjectMarshalers</class-id> <category>private</category><body package="XMLObjectBindingWizard">addClass: aClass	self setDefaultClassNamespaceFor: aClass.	self model buildObjectMarshaler: aClass.	self typeViewsAspect listHolder changed:#value</body><body package="XMLObjectBindingWizard">canAddSuperclass	| sname |	^(self selectedTypeView size = 1		and: [self selectedTypeView first type baseType isNil			and: [ (sname := self selectedTypeView first smClass superclass name) ~= #Object				and: [sname ~= #Model					and: [sname ~= #ApplicationModel]]]])</body><body package="XMLObjectBindingWizard">enableNext</body><body package="XMLObjectBindingWizard">selectionChanged	(self widgetAt: #addDescriptionButton) isEnabled:  (self selectedTypeView size = 1).	(self widgetAt: #dropClassButton) isEnabled: (self selectedTypeView notNil and: [ self selectedTypeView notEmpty]).	(self widgetAt: #registerX2O) isEnabled: self typeViews notEmpty.</body><body package="XMLObjectBindingWizard">setDefaultClassNamespaceFor: aClass	| candidateScopes dialog |	(self model binding marshalers isEmpty 		and: [self model classNamespace isNil 			and: [aClass environment  ~= Smalltalk]])		ifTrue: [ 	candidateScopes := (OrderedCollection withAll: Root withAllNameSpaces) sorted: [:a :b | a toolListDisplayString &lt; b toolListDisplayString].				dialog := IncrementalSearchDialog forSelectionWithSearch: [:entry | candidateScopes ].				dialog					secondLabel: #NamespacesC &lt;&lt; #labels &gt;&gt; 'Namespaces:';					windowLabel: 'Select default class namespace';					iconSelector: #toolListIcon;					displayStringSelector: #toolListDisplayString;					objectToStringBlock: [:namespace | namespace name ].				dialog module entryObject: aClass environment.				dialog select ifNotNil: [ :ns | self model classNamespace: ns fullName]].	self model classNamespace ifNil: [self model classNamespace: aClass environment fullName]</body></methods><methods><class-id>WebServices.BrowseObjectMarshalers</class-id> <category>interface opening</category><body package="XMLObjectBindingWizard">postBuildWith: aBuilder 	super  postBuildWith: aBuilder. 	self selectionChanged.</body></methods><methods><class-id>WebServices.BrowseObjectMarshalers</class-id> <category>aspects</category><body package="XMLObjectBindingWizard">targetNamespaceAspect	^targetNamespaceAspect</body></methods><methods><class-id>WebServices.BrowseObjectMarshalers class</class-id> <category>instance creation</category><body package="XMLObjectBindingWizard">describeTypesInClass: aClass	^self new		setModel: (XMLToolModel describeTypesInClass: aClass);		open;		yourself</body><body package="XMLObjectBindingWizard">describeTypesInClasses: aCollOfClasses inNamespace: aString	^self new		setModel: (XMLToolModel describeTypesInClasses: aCollOfClasses inNamespace: aString );		open;		yourself</body></methods><methods><class-id>WebServices.BrowseObjectMarshalers class</class-id> <category>accessing</category><body package="XMLObjectBindingWizard">exitingClient</body><body package="XMLObjectBindingWizard">header	^#DescribeComplexTypes &lt;&lt; #webservices &gt;&gt; 'Describe complex types'</body><body package="XMLObjectBindingWizard">helpText	^#BrowseObjectMarshalersHelp &lt;&lt; #webservices &gt;&gt;'The classes in the list represent complex data types used in XML Schema and XML To Object Binding specifications. This page allows you to add or update attribute type descriptions for the complex types.An empty circle symbol means that the class has unresolved types or this class doesn''t have attributes. A half empty circle symbol means that the class has partially resolved types.Buttons:Description - Opens a dialog for adding XML type descriptions. Add super class - Adds a superclass of the selected complex type, including the superclass as a complex type in the XML schema description. The selected complex type will have an extension element with the  superclass as its base attribute.Drop super class - Excludes the superclass of the selected type.	Add class - Adds a class to the XML schema complex types.Add all from - Adds all classes from the specified package to the XML shema complex typesDrop classes - Removes selected classes from the XML schema complex types.Settings - Allows XML to Object Binding and XML schema attributes to be set'</body></methods><methods><class-id>WebServices.CollectionDialog</class-id> <category>interface opening</category><body package="XMLObjectBindingWizard">postBuildWith: aBuilder	super postBuildWith: aBuilder.	self nameChanged.</body></methods><methods><class-id>WebServices.CollectionDialog</class-id> <category>aspects</category><body package="XMLObjectBindingWizard">maxOccursAspect	^maxOccursAspect isNil		ifTrue: [maxOccursAspect := 'unbounded' asValue]		ifFalse: 	[maxOccursAspect]</body><body package="XMLObjectBindingWizard">minOccursAspect	^minOccursAspect isNil		ifTrue: [minOccursAspect := 0 asValue]		ifFalse: 	[minOccursAspect]</body></methods><methods><class-id>WebServices.CollectionDialog</class-id> <category>actions</category><body package="XMLObjectBindingWizard">acceptTypes	| marshaler type |	marshaler := self typeValue = #simple		ifTrue: [self simpleTypeValue.]		ifFalse: 	[self parent acceptComplexType: self complexTypeClass].	type :=marshaler name type. 	self parent		setTypeInSelection: (Array 							with: #Collection  							with: marshaler							with: self minOccursAspect value printString   							with: self maxOccursAspect value )		displayString: 'CollectionOf', type first asSymbol asUppercase, (type copyFrom: 2 to: type size).	self  accept value: true</body><body package="XMLObjectBindingWizard">nameChanged	(self builder componentAt: #acceptButton) widget		isEnabled: (self simpleTypeValue notNil								or: [ self complexTypeValue notEmpty] ).</body></methods><methods><class-id>WebServices.CollectionDialog class</class-id> <category>accessing</category><body package="XMLObjectBindingWizard">helpText	^'Generates XML elementsXML Schema:&lt;types&gt; &lt;schema&gt;	&lt;complexType name="CollectionOfLDDataAuthorialName"&gt;		&lt;sequence&gt;		&lt;element name="LDDataAuthorialName" minOccurs="1" maxOccurs="unbounded" type="ns:LDDataAuthorialName"/&gt;		&lt;/sequence&gt;	&lt;/complexType&gt; &lt;/schema&gt;&lt;/types&gt;XML to object binding:&lt;schemaBindings&gt; &lt;xmlToSmalltalkBinding ...&gt;	&lt;sequence_of name="CollectionOfLDDataAuthorialName" aspect="collectionOfLDDataAuthorialName"&gt;		&lt;implicit name="LDDataAuthorialName" aspect="lDDataAuthorialName" ref="ns:LDDataAuthorialName"/&gt;	&lt;/sequence_of&gt; &lt;/xmlToSmalltalkBinding&gt;&lt;/schemaBindings&gt;'</body></methods><methods><class-id>WebServices.XMLToolModel</class-id> <category>generate schema</category><body package="XMLObjectBindingWizard">postDocument: doc url: anURL	| stream |	stream := String new writeStream.	doc  wsPrintOn:  stream depth: 0.	HttpClient new		post: anURL contents: stream contents</body><body package="XMLObjectBindingWizard">saveDocument: doc intoFile: fname 	XML.Document saveDocument: doc intoFile: fname.</body><body package="XMLObjectBindingWizard">saveDocument: doc intoMethod: methodName class: aClass 	XML.Document			saveDocument: doc			intoMethod: methodName 			class: aClass			withComment: nil.</body></methods><methods><class-id>WebServices.XMLToolModel</class-id> <category>testing</category><body package="XMLObjectBindingWizard">canHaveEmptyTypes	^false</body></methods><methods><class-id>WebServices.XMLToolModel</class-id> <category>private</category><body package="XMLObjectBindingWizard">buildXMLDo: aBlock	| aStream |	aStream := String new writeStream.	aBlock value: aStream.	^aStream contents</body><body package="XMLObjectBindingWizard">setUpdated</body></methods><methods><class-id>WebServices.XMLToolModel</class-id> <category>creating marshalers</category><body package="XMLObjectBindingWizard">attributeMarshalerFrom: aSelectedRow	| attributes |	attributes := self nameAspectAttributesFrom: aSelectedRow. 	aSelectedRow required ifTrue: [	attributes add: ( Attribute name: 'use' value: 'required' )].	aSelectedRow typeArray isTypeMarshaler		ifTrue: [ builder addMarshalerFor: 'attribute' attributes: attributes simpleMarshaler: aSelectedRow typeArray]		ifFalse: [attributes addAll:  (builder xmlTypeFor: aSelectedRow typeArray).				builder createBindingFor: 'attribute' attributes: attributes].	^aSelectedRow typeMarshaler attributeMarshalers last.</body><body package="XMLObjectBindingWizard">buildObjectMarshaler: aClass	| marshaler |	builder pushCurrent: builder binding.	marshaler := builder buildObjectMarshalerFor: aClass.	self initializeTypeViews.	self setUpdated.	^marshaler</body><body package="XMLObjectBindingWizard">cardinalityFrom: aSelectedRow	| attributes  |	attributes := OrderedCollection new.	aSelectedRow required ifFalse: [	attributes add: ( Attribute name: 'minOccurs' value: '0' ).].	aSelectedRow unbounded ifTrue: [attributes add: ( Attribute name: 'maxOccurs' value: 'unbounded' )].	^attributes</body><body package="XMLObjectBindingWizard">choiceMarshalerFrom: aSelectedRow	^self elementMarshalerFrom: aSelectedRow</body><body package="XMLObjectBindingWizard">elementMarshalerFrom: aSelectedRow	| attributes type arguments |	attributes := self nameAspectAttributesFrom: aSelectedRow.	attributes addAll: (self cardinalityFrom: aSelectedRow).	(aSelectedRow typeArray isMemberOf: Array)		ifTrue: [type := aSelectedRow typeArray first asSymbol.				arguments := aSelectedRow typeArray copyFrom: 2 to: aSelectedRow typeArray size ]		ifFalse: [type := #Element.				arguments := aSelectedRow typeArray].	builder 		perform: ('addMarshalerFor', type, ':type:') asSymbol 		with: attributes 		with:  arguments.	^aSelectedRow typeMarshaler elementMarshalers last.</body><body package="XMLObjectBindingWizard">nameAspectAttributesFrom: aSelectedRow	| attributes |	attributes := OrderedCollection with: ( Attribute name: 'name' value:  aSelectedRow name asString).	 (aSelectedRow name isNil 		or: [ aSelectedRow name asString ~= aSelectedRow aspect asString]) 		ifTrue: [ attributes add: ( Attribute name: 'aspect' value: aSelectedRow aspect asString )].	^attributes</body><body package="XMLObjectBindingWizard">removeSelectedRelation:  aSelectedRow	| aTypeMarshaler |	(aTypeMarshaler := aSelectedRow relationMarshaler) ifNil: [^nil].	self binding 		nodesDo: [ :each | 			each ifNotNil: [  				( each isTypeMarshaler  and: [each isObjectTypeMarshaler ]) ifTrue: [					(each relations detect: [ :rel | rel path = aTypeMarshaler path ] ifNone: [nil]) 						ifNotNil: [ :relx | each removeMarshaler: relx]]]]		withRegistry: (IdentitySet new: 64).</body><body package="XMLObjectBindingWizard">updateSelectedRelationFrom: aSelectedRow	| oldMarshaler newMarshaler |	oldMarshaler := aSelectedRow relationMarshaler.	aSelectedRow aspect ifNil: [aSelectedRow aspect: aSelectedRow name asSymbol ].	builder pushCurrent: builder binding.	builder pushCurrent: aSelectedRow typeMarshaler.	newMarshaler := self  		perform: (aSelectedRow relation, 'MarshalerFrom:') asSymbol 		with: aSelectedRow. 	builder popCurrent.	builder popCurrent.	aSelectedRow typeMarshaler replaceMarshaler: oldMarshaler with: newMarshaler.	"Make sure that there are setter and getter for the aspect. If not create them"	BindingClassBuilder createAccessors: aSelectedRow typeMarshaler smalltalkClass from: newMarshaler.</body></methods><methods><class-id>WebServices.XMLToolModel</class-id> <category>generate binding</category><body package="XMLObjectBindingWizard">createBindingElement	^self buildXMLDo: [ :stream | self binding printSmalltalkBindingOn: stream ].</body><body package="XMLObjectBindingWizard">createScript	| stream binding   |	binding := WebServices.XMLObjectBinding bindingAtNamespace: self schemaTargetNamespace.	binding ifNil: [ ^(#ThereIsNoRegisteredXMLObjectbinding &lt;&lt; #webservices &gt;&gt;'There is no registered XMLObjectBinding at: &lt;1s&gt; ') expandMacrosWith: self schemaTargetNamespace ].	stream := String new writeStream.	stream 		nextPutAll: 'schemaNS := ', self schemaTargetNamespace printString,' .';		cr;		nextPutAll: 'binding := WebServices.XMLObjectBinding bindingAtNamespace: schemaNS.'.	binding marshalers do: [ :aTypeMarshaler | self printScriptOn: stream for: aTypeMarshaler ].	^stream contents</body><body package="XMLObjectBindingWizard">createXMLTypesElement	^self buildXMLDo: [ :stream | self binding printXMLSchemaOn: stream ].</body><body package="XMLObjectBindingWizard">printScriptOn: aStream for: aTypeMarshaler	| typeMarshaler |	typeMarshaler := aTypeMarshaler typeMarshaler.	typeMarshaler isObjectType ifFalse: [ ^nil].	aStream cr;cr.	aStream nextPutAll: 'object := '.	typeMarshaler printArgsOn: aStream indentation: 0.	aStream 		nextPut: $.;cr;		nextPutAll: 'xml := binding marshal: object.';cr;		nextPutAll: 'unmarshaledObject := binding unmarshal: xml.'</body><body package="XMLObjectBindingWizard">validateBinding: aBindingSpec onUnresolvedReferences: aBlock	| driver oldBinding |	^[	driver := XMLObjectDriver new.		[(XMLParser on: aBindingSpec readStream)			validate: false;			saxDriver: driver;			scanDocument 		] ifCurtailed: [ (oldBinding := driver builder oldBinding) ifNotNil:[XMLObjectBinding register: oldBinding]].		builder := driver builder.		self initializeTypeViews.		true	] 	on: UnresolvedReferenceSignal		do: [ :ex |  aBlock value: ex description.			ex return: false]</body></methods><methods><class-id>WebServices.XMLToolModel</class-id> <category>settings</category><body package="XMLObjectBindingWizard">attributeFormDefault	^self binding attributeFormDefault</body><body package="XMLObjectBindingWizard">attributeFormDefault: aString	 self binding attributeFormDefault: aString asSymbol.	self setUpdated</body><body package="XMLObjectBindingWizard">classNamespace	^self binding defaultClassNamespace</body><body package="XMLObjectBindingWizard">classNamespace: aString	self binding defaultClassNamespace: aString.	self setUpdated.</body><body package="XMLObjectBindingWizard">elementFormDefault	^self binding elementFormDefault</body><body package="XMLObjectBindingWizard">elementFormDefault: aString	self binding elementFormDefault: aString.	self setUpdated.</body><body package="XMLObjectBindingWizard">schemaName	^self binding name 		ifNil: [String new]		ifNotNil: [self binding name type ]</body><body package="XMLObjectBindingWizard">schemaName: aString	self binding name: (NodeTag  qualifier: '' ns: self binding targetNamespace type: aString).	self setUpdated.</body><body package="XMLObjectBindingWizard">schemaTargetNamespace	^builder ifNotNil: [ self binding targetNamespace]</body><body package="XMLObjectBindingWizard">schemaTargetNamespace: aString	builder namespaceMap at: 'tns'  put:  aString.	builder defaultNamespace: aString.	self binding targetNamespace: aString.	self setUpdated.</body><body package="XMLObjectBindingWizard">updateSchemaTargetNamespace: aString" update all binding marshalers with the new targetNamespace" 	self schemaTargetNamespace: aString.	self binding 		nodesDo: [ :each |   			each isTypeMarshaler ifTrue: [				each tag resetNamespaceTo: aString.				each name ifNotNil: [ : nm | nm resetNamespaceTo: aString ]]]		withRegistry: (IdentitySet new: 64)</body></methods><methods><class-id>WebServices.XMLToolModel</class-id> <category>type view</category><body package="XMLObjectBindingWizard">addSuper: aTypeMarshaler	| baseType |	baseType := (self binding marshalers detect: [ :each | each smalltalkClass = aTypeMarshaler smalltalkClass superclass ] ifNone: [nil])		ifNotNil: [ :base |  base  ]		ifNil: [ self buildObjectMarshaler: aTypeMarshaler smalltalkClass superclass.].	aTypeMarshaler addBaseType: baseType.	self binding finish.	self initializeTypeViews.	self setUpdated.</body><body package="XMLObjectBindingWizard">dropClasses: collTypeMarshaler	collTypeMarshaler do: [ :aTypeMarshaler | self removeType: aTypeMarshaler ].	self initializeTypeViews.	self setUpdated.</body><body package="XMLObjectBindingWizard">dropSuperFrom: aTypeMarshaler	aTypeMarshaler removeBaseType.	self initializeTypeViews.	self setUpdated.</body><body package="XMLObjectBindingWizard">includeSuper: aBoolean	builder addSuperClassType: aBoolean</body><body package="XMLObjectBindingWizard">initializeTypeViews	| objectMarshalers |	objectMarshalers := Set new. 	builder linkClassReferences.	self binding 		nodesDo: [ :each | each ifNotNil: [ 			(each isTypeMarshaler				and: [ each isComplexTypeMarshaler 					and: [each aspectImplementation isObject]]) 			ifTrue: [objectMarshalers add: each ]]]		withRegistry: (IdentitySet new: 64).		typeViews := SortedCollection new.	typeViews sortBlock: [:x :y | x smClass name &lt;= y smClass name ].	objectMarshalers do: [ :marshaler | 		typeViews 			detect: [ :tv | tv smClass = marshaler smalltalkClass ] 			ifNone: [  typeViews add: (self typeViewFor: marshaler ) ]].</body><body package="XMLObjectBindingWizard">removeType: aTypeMarshaler		self binding 		nodesDo: [ :each | 			each ifNotNil: [  				( each isTypeMarshaler and: [each isObjectTypeMarshaler ]) ifTrue: [					each baseType = aTypeMarshaler ifTrue: [each removeBaseType ].					(each relations detect: [ :rel | rel typeMarshaler = aTypeMarshaler ] ifNone: [nil]) 						ifNotNil: [ :relx |	each relations remove: relx]]]]		withRegistry: (IdentitySet new: 64).	self binding marshalers remove: aTypeMarshaler ifAbsent: [nil].	self binding finish.</body><body package="XMLObjectBindingWizard">typeViewFor: aTypeMarshaler	^TypeMarshalerView new		type: aTypeMarshaler;		model: self;		yourself</body><body package="XMLObjectBindingWizard">typeViews	^typeViews</body></methods><methods><class-id>WebServices.XMLToolModel</class-id> <category>initialize-release</category><body package="XMLObjectBindingWizard">completeBinding	builder finish.</body><body package="XMLObjectBindingWizard">describeTypesInClasses: aCollOfClasses inNamespace: aString	builder  := BindingBuilder new.	builder	buildFromClasses: aCollOfClasses 		classNamespace: aString 		targetNamespace: XMLObjectBinding defaultTargetNamespace.</body><body package="XMLObjectBindingWizard">initialize	super initialize.	self initializeBuilder: nil</body><body package="XMLObjectBindingWizard">initializeBuilder: aBinding	builder := BindingBuilder new.	builder addSuperClassType: true.	builder namespaceMap at: 'xsd'  put:  XMLBuildingPolicy defaultUriXsd.	builder namespaceMap at: '' put: XMLBuildingPolicy uriVWBinding.	builder binding: aBinding.	aBinding ifNotNil: [self initializeTypeViews ]</body><body package="XMLObjectBindingWizard">initializeFrom: aCollOfClasses	self describeTypesInClasses: aCollOfClasses inNamespace: aCollOfClasses first environment fullName</body></methods><methods><class-id>WebServices.XMLToolModel</class-id> <category>accessing</category><body package="XMLObjectBindingWizard">binding		^builder binding</body><body package="XMLObjectBindingWizard">binding: anXMLObjectBinding		builder binding: anXMLObjectBinding</body><body package="XMLObjectBindingWizard">bindingListToUpdate	^XMLObjectBinding userBindings collect: [ :binding | binding targetNamespace ]</body><body package="XMLObjectBindingWizard">includeSuper	^builder addSuperClassType</body><body package="XMLObjectBindingWizard">newBinding	| namespaces defaultNamespace |	namespaces := self bindingListToUpdate.	defaultNamespace := XMLObjectBinding defaultTargetNamespace.	[ namespaces includes: defaultNamespace ]		whileTrue: [ defaultNamespace := defaultNamespace, '_' ].	^XMLObjectBinding new 			targetNamespace: defaultNamespace;			yourself</body><body package="XMLObjectBindingWizard">supportedSimpleTypes	^XMLObjectBinding simpleTypes collect: [ :cl | cl name]</body></methods><methods><class-id>WebServices.XMLToolModel class</class-id> <category>instance creation</category><body package="XMLObjectBindingWizard">describeTypesInClass: aClass	^self 		describeTypesInClasses: (OrderedCollection with: aClass) 		inNamespace: aClass environment name asString</body><body package="XMLObjectBindingWizard">describeTypesInClasses: aCollOfClasses inNamespace: aString	^self new		describeTypesInClasses: aCollOfClasses inNamespace: aString;		yourself</body></methods><methods><class-id>WebServices.XMLToolModel class</class-id> <category>accessing</category><body package="XMLObjectBindingWizard">sortDatatypeBlock	^sortDatatypeBlock ifNil: [ sortDatatypeBlock := [ :marshalers | marshalers sorted: [ :a :b | a name type &lt; b name type]]]</body><body package="XMLObjectBindingWizard">sortDatatypeBlock: aBlock	sortDatatypeBlock := aBlock</body></methods><methods><class-id>WebServices.XMLToolModel class</class-id> <category>defaults</category><body package="XMLObjectBindingWizard">xmlDatatypeMarshalers	" (self xmlDatatypeMarshalers )"	| rejected |	rejected := #( 'schema' 'XMLNode' 'uriReference' 'uri-reference' 'base64' 'QNames' ).	^self sortDatatypeBlock 		value: (XMLObjectBinding xsdBinding marshalers reject: [ :each | rejected includes: each name type])</body></methods><methods><class-id>WebServices.X2OClassSearchModule</class-id> <category>aspects</category><body package="XMLObjectBindingWizard">includeSuperclasses	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^includeSuperclasses isNil		ifTrue:			[includeSuperclasses := false asValue]		ifFalse:			[includeSuperclasses]</body></methods><methods><class-id>WebServices.BindingTool</class-id> <category>actions</category><body package="XMLObjectBindingWizard">cancel	| result |	( self model schemaTargetNamespace notNil and: [(WebServices.XMLObjectBinding bindingAtNamespace: self model schemaTargetNamespace) isNil]) ifTrue: [		result := Dialog			choose: (#BindingDescriptionNotRegisteredYet &lt;&lt;#webservices&gt;&gt;'The binding description is not registered yet. Do you want to register X2O binding?' )			labels: (Array with: 'Yes' with: 'No' with: 'Cancel')			values: #(#yes #no #cancel)			default: #yes.		result = #yes ifTrue: [self model completeBinding].		result = #cancel ifTrue: [^nil].		].	^self closeRequest</body><body package="XMLObjectBindingWizard">helpText	client displayHelpText</body><body package="XMLObjectBindingWizard">initialize	super initialize.	client := SelectX2OBinding model: model parent: self.</body><body package="XMLObjectBindingWizard">next	client ifNotNil: [ client closeRequestFromParent ifFalse: [ ^nil]].	client := BindingToolTabs model: model parent: self.	(self widgetAt: #subCanvas) client: client.	self subcanvasName value: client header.	(self widgetAt: #next) isVisible: false.</body><body package="XMLObjectBindingWizard">postOpenWith: aBuilder	(self widgetAt: #subCanvas) client: client.	self subcanvasName value: client header.</body></methods><methods><class-id>WebServices.BindingTool</class-id> <category>accessing</category><body package="XMLObjectBindingWizard">defaultModelClass	^XMLToolModel</body></methods><methods><class-id>WebServices.BindingTool class</class-id> <category>accessing</category><body package="XMLObjectBindingWizard">wizardHeader	^#X2OTool &lt;&lt; #webservices &gt;&gt; 'X2O Tool'</body></methods><methods><class-id>WebServices.TypeMarshalerView</class-id> <category>printing</category><body package="XMLObjectBindingWizard">printOn: aStream	aStream nextPutAll: self class name, ': ', self type smalltalkClassName.</body></methods><methods><class-id>WebServices.TypeMarshalerView</class-id> <category>accessing</category><body package="XMLObjectBindingWizard">model: anXMLTypeModel	model := anXMLTypeModel</body><body package="XMLObjectBindingWizard">smClass	^type smalltalkClass</body><body package="XMLObjectBindingWizard">smClass: aClass	type smalltalkClass: aClass</body><body package="XMLObjectBindingWizard">type	^type</body><body package="XMLObjectBindingWizard">type: aTypeMarshaler	type := aTypeMarshaler</body><body package="XMLObjectBindingWizard">typeResolution: aTypeMarshaler	^aTypeMarshaler smalltalkClass instVarNames size = aTypeMarshaler x2oRelations size		ifTrue: [#resolved]		ifFalse: [aTypeMarshaler smalltalkClass instVarNames size &gt; 0					ifTrue: [aTypeMarshaler relations isEmpty								ifTrue: [#unresolved]								ifFalse: [#partialy]]]</body><body package="XMLObjectBindingWizard">value	^type</body></methods><methods><class-id>WebServices.TypeMarshalerView</class-id> <category>view</category><body package="XMLObjectBindingWizard">label	| str resolution |	icon := (self smClass inheritsFrom:  Error )		ifTrue: [ self exceptionTypeIcon]		ifFalse: 			[ (resolution := self typeResolution: type) = #resolved				ifTrue: [self resolvedTypeIcon ]				ifFalse: [resolution = #unresolved 							ifTrue: [self unresolvedTypeIcon]							ifFalse: [self class partialyResolvedTypeIcon ]]].	^(self type baseType		ifNotNil: [ :base | str := (#Including1 &lt;&lt; #webservices &gt;&gt; 'including ') asString.				self smClass name, ' (', str,  base smalltalkClassName, ')' ]  		ifNil: [ self smClass name ]) asText</body></methods><methods><class-id>WebServices.SetTypesMenu</class-id> <category>actions</category><body package="XMLObjectBindingWizard">datasetChanged	self datasetAspect listHolder changed: #value.</body><body package="XMLObjectBindingWizard">selectClassDialog	^IncrementalSearchDialog selectClass</body><body package="XMLObjectBindingWizard">setChoiceType	ChoiceDialog openWith: self</body><body package="XMLObjectBindingWizard">setChoiceTypeFrom: aCollection	|  string struct |	struct := Struct new.	aCollection do: [ :coll | struct at: coll first put: coll last typeDescription ].	string := struct printString.	string := 'Choice', (string copyFrom: (string indexOf: $:) to: string size).	self 		setTypeInSelection:  #(#Choice), aCollection		displayString: string</body><body package="XMLObjectBindingWizard">setComplexType	self setComplexTypeDo: 		[ :cl | self setTypeInSelection: cl asSymbol.]</body><body package="XMLObjectBindingWizard">setComplexTypeDo: aBlock	IncrementalSearchDialog selectClass ifNotNil: 			[ :clx | 			aBlock value: clx fullName.			self model buildObjectMarshaler:  clx ]</body><body package="XMLObjectBindingWizard">setStructType	StructDialog openWith: self</body><body package="XMLObjectBindingWizard">setStructTypeFrom: aCollectionOfColl	| struct |	struct := Struct new.	aCollectionOfColl do: [ :item | struct at: item first put: item last typeDescription].	self 		setTypeInSelection:  #(#Struct), aCollectionOfColl  		displayString: struct printString</body></methods><methods><class-id>WebServices.SetTypesMenu</class-id> <category>accessing</category><body package="XMLObjectBindingWizard">browseClass: aClass method: selectorSymbol	WSSubcanvas browseClass: aClass method: selectorSymbol</body><body package="XMLObjectBindingWizard">callback: aBlock	callback := aBlock</body><body package="XMLObjectBindingWizard">simpleTypes	simpleTypes ifNil: [simpleTypes := XMLToolModel xmlDatatypeMarshalers ].	^simpleTypes</body></methods><methods><class-id>WebServices.SetTypesMenu</class-id> <category>aspects</category><body package="XMLObjectBindingWizard">datasetAspect	^datasetAspect isNil		ifTrue:			[datasetAspect :=  SelectionInListSortAware new.			datasetAspect selectionIndexHolder compute:				[:v | self selectedRow value: datasetAspect selection].			datasetAspect]		ifFalse:			[datasetAspect]</body><body package="XMLObjectBindingWizard">selectedRow	^selectedRow isNil		ifTrue: [selectedRow := nil asValue]		ifFalse: [selectedRow]</body><body package="XMLObjectBindingWizard">typesMenu	^typesMenu</body></methods><methods><class-id>WebServices.SetTypesMenu</class-id> <category>private</category><body package="XMLObjectBindingWizard">acceptComplexType: aClass	^self model buildObjectMarshaler:  aClass</body><body package="XMLObjectBindingWizard">addComplex: aTypeString</body><body package="XMLObjectBindingWizard">selectComplexType	self selectClassDialog ifNotNil: 			[ :clx | self model buildObjectMarshaler:  clx. ^clx fullName ].	^nil</body><body package="XMLObjectBindingWizard">setSimpleMarshalerInSelection: aSimpleMarshaler	self setTypeInSelection: aSimpleMarshaler displayString: aSimpleMarshaler typeDescription.</body><body package="XMLObjectBindingWizard">setTypeInSelection: typeString	self setTypeInSelection: typeString displayString: typeString</body><body package="XMLObjectBindingWizard">setTypeInSelection: typeStringOrArray displayString: displayString	self selectedRow value displayString: displayString.	self selectedRow value typeArray: typeStringOrArray.	self selectedRow value clean: false.	self datasetChanged</body></methods><methods><class-id>WebServices.SetTypesMenu</class-id> <category>initialize-release</category><body package="XMLObjectBindingWizard">addAdditionalMenu	self class additionalTypeMenu ifNotNil: [ :m | m menuItems do: [ :item | typesMenu addItem: item]].	typesMenu addLine.	self class additionalMenu menuItems do: [ :item | typesMenu addItem: item].</body><body package="XMLObjectBindingWizard">initializeAspects	| st menu |	typesMenu := self class typeMenu.	st := typesMenu menuItemWithValue: #setSimpleType.	menu := Menu new.	self simpleTypes do: [ :each |		menu			addItemLabel: each typeDescription			value: [ self setSimpleMarshalerInSelection: each ]].	st submenu: menu.	self addAdditionalMenu.</body><body package="XMLObjectBindingWizard">initializeDataset</body></methods><methods><class-id>WebServices.SetTypesMenu</class-id> <category>defaults</category><body package="XMLObjectBindingWizard">defaultType	^self class defaultType</body></methods><methods><class-id>WebServices.SetTypesMenu class</class-id> <category>default</category><body package="XMLObjectBindingWizard">defaultType	^BindingClassBuilder defaultType</body></methods><methods><class-id>WebServices.SetTypesMenu class</class-id> <category>resources</category><body package="XMLObjectBindingWizard">additionalMenu</body><body package="XMLObjectBindingWizard">additionalTypeMenu	^nil</body></methods><methods><class-id>WebServices.SetClassTypes</class-id> <category>private</category><body package="XMLObjectBindingWizard">setSimpleMarshalerInSelection: aSimpleMarshaler	(self selectedRow isNil or: [self selectedRow value isNil ]) ifTrue: [^nil].	super setSimpleMarshalerInSelection: aSimpleMarshaler.</body><body package="XMLObjectBindingWizard">setTypeInSelection: typeStringOrArray displayString: displayString	(self selectedRow isNil or: [self selectedRow value isNil ]) ifTrue: [^nil].	typeStringOrArray isSequenceable		ifTrue: [ self selectedRow value relation: (typeStringOrArray first = #Choice 					ifTrue: [#choice]					ifFalse: [#element])]		ifFalse: [self selectedRow value relation = #choice ifTrue: [self selectedRow value relation: #element]].	super setTypeInSelection: typeStringOrArray displayString: displayString.</body><body package="XMLObjectBindingWizard">transplantDataSetController	"A few hoops need to be jumped in order for the replacement controller to function.	Note that the keyboard processor does not need to be notified of the controller change	since it holds onto the view rather than the controller."	| view oldController newController |	view := self widgetAt: #datasetAspect.	oldController := view controller.	newController := DataSetController new.	newController		menuHolder: oldController menuHolder;		performer: oldController performer;		keyboardProcessor: oldController keyboardProcessor.	view controller: newController</body><body package="XMLObjectBindingWizard">typeColumnIndex	^4</body><body package="XMLObjectBindingWizard">updateSelectedRelationFrom: aSelectedRow 	aSelectedRow typeArray ifNil: [^nil]. 	self model updateSelectedRelationFrom: aSelectedRow.</body></methods><methods><class-id>WebServices.SetClassTypes</class-id> <category>accessing</category><body package="XMLObjectBindingWizard">smClass	^tableItemView smClass</body><body package="XMLObjectBindingWizard">tagList	^#(#element #attribute ) asValue</body><body package="XMLObjectBindingWizard">type	^tableItemView type</body></methods><methods><class-id>WebServices.SetClassTypes</class-id> <category>initialize-release</category><body package="XMLObjectBindingWizard">initializeAspects	self includeSuperclass onChangeSend: #includeSuperChanged to: self.	super initializeAspects.	self initializeDataset.</body><body package="XMLObjectBindingWizard">initializeDataset	| coll |	coll := self type relations isEmpty		ifTrue: [ self initializeFromInstVars ]		ifFalse: [ self initializeFromRelations ].	self datasetAspect list: coll.	self datasetAspect selectionIndexHolder onChangeSend: #selectionChanged to: self.</body><body package="XMLObjectBindingWizard">initializeFromInstVars	^self initializeFromInstVarsFrom: self smClass instVarNames.</body><body package="XMLObjectBindingWizard">initializeFromInstVarsFrom: aCollection	| coll row |	coll := OrderedCollection new.	aCollection do: 			[:nm | 			row := DataTypeRow new.				row 				model: self;				typeMarshaler: tableItemView type;				name: nm asSymbol.			" type"  			self defaultType				ifNil: [row displayString: '' ]				ifNotNil: [row typeArray: self defaultType.						row displayString: self defaultType displayString ].			" Default #element relation "			row relation: #element.			"cardinality"			row 				required: true;				unbounded: false.						"aspect as inst var name. Set it only if there are getter and setter: #mySelerctor and #mySelector:"			((tableItemView type smalltalkClass includesSelector: nm asSymbol)				and: [tableItemView type smalltalkClass includesSelector: (nm, ':') asSymbol ])				ifTrue: [	row aspect: nm].			row clean: true.			coll add: row ].	^coll</body><body package="XMLObjectBindingWizard">initializeFromRelations	| coll row instVars aspect |	coll := OrderedCollection new. 	instVars := self smClass instVarNames asOrderedCollection.	self type aspectRelations do: [ :relation |  		" supported only AttributeMarshaler,  ElementMarshaler, and TextMarshaler "		relation bindingTagType ifNotNil: [			row := DataTypeRow new.				row 				model: self;				typeMarshaler: tableItemView type;				relationMarshaler: relation.			" attribute name / type " 			row				name: (relation path ifNotNil: [relation path type]);				typeArray: relation bindingTypeArray;				displayString: (relation typeMarshaler ifNotNil: [ :m | m typeDescription] ifNil: ['']).			"cardinality"			row					required: relation isMandatory;				unbounded: relation relation isManyRelation.			" XML element,  attribute,  text,  choice  "			row relation: relation bindingTagType.			"set aspect" 			aspect := relation relation name asString.			row aspect: aspect.			(instVars includes: aspect ) ifTrue: [ instVars remove: aspect ]. 			"not table info"				coll add: row.			row clean: true ]]. 	instVars notEmpty ifTrue: [ coll addAll: ( self initializeFromInstVarsFrom: instVars )].	^coll</body><body package="XMLObjectBindingWizard">model: aWsdlBuilderModel typeView: aTypeView callback: aBlock	callback := aBlock.	tableItemView := aTypeView. 	self setModel: aWsdlBuilderModel.</body><body package="XMLObjectBindingWizard">postBuildWith: aBuilder	| supercl |	super postBuildWith: aBuilder.	supercl := self smClass superclass.	( self widgetAt: #includeSuperclass ) isVisible: (BindingBuilder excludedSupersHolder value includes: supercl name) not.	self transplantDataSetController</body></methods><methods><class-id>WebServices.SetClassTypes</class-id> <category>actions</category><body package="XMLObjectBindingWizard">acceptType	self datasetAspect list do: [ :row | row isDirty ifTrue: [ self updateSelectedRelationFrom: row ]].	callback notNil ifTrue: [ callback value ].	self closeRequest</body><body package="XMLObjectBindingWizard">canSetComplexType	^self selectedRow value notNil 		and: [ self selectedRow value relation ~= #attribute ]</body><body package="XMLObjectBindingWizard">getComplexTypeDialog	^self selectClassDialog</body><body package="XMLObjectBindingWizard">includeSuperChanged	| supercl |	self includeSuperclass value		ifTrue: [ supercl := self smClass superclass.				(supercl ~= Object and: [supercl ~= Model and: [supercl ~= ApplicationModel]])				ifTrue: [ self model addSuper: self type ]]		ifFalse: [ self model  dropSuperFrom: self type ]</body><body package="XMLObjectBindingWizard">removeSelectedMapping	self selectedRow value ifNil: [^nil].	self model removeSelectedRelation: self selectedRow value.	self selectedRow value displayString: ''.	self selectedRow value typeArray: nil.	self selectedRow value relationMarshaler: nil.	self selectedRow value clean: true.	self datasetChanged</body><body package="XMLObjectBindingWizard">selectionChanged</body><body package="XMLObjectBindingWizard">setChoiceType	self canSetComplexType ifFalse: [^nil].	super setChoiceType</body><body package="XMLObjectBindingWizard">setComplexType	self canSetComplexType ifFalse: [^nil].	super setComplexType</body><body package="XMLObjectBindingWizard">setStructType	self canSetComplexType ifFalse: [^nil].	super setStructType</body></methods><methods><class-id>WebServices.SetClassTypes</class-id> <category>aspects</category><body package="XMLObjectBindingWizard">classNameAspect	^classNameAspect ifNil:[classNameAspect := self smClass fullName asValue]</body><body package="XMLObjectBindingWizard">includeSuperclass	^includeSuperclass isNil		ifTrue: [includeSuperclass := (self type baseType notNil) asValue]		ifFalse: [includeSuperclass]</body></methods><methods><class-id>WebServices.SetClassTypes class</class-id> <category>accessing</category><body package="XMLObjectBindingWizard">helpText	^'This page allows you to create or update a setter accessor with a pragma that describes the attribute types.XMLAttribute column - specifies the attribute name for the XML element.Tag column - specifies the inst variable mapping to XML element &lt;element name="xxx"/&gt;. Type - specifies the XML attribute type.  Required column - checked for #true, unchecked for #false, specifying if this XML attribute is optional or required. If optional, then the  XML attribute minOccurs will be 0. Aspect column - specifies the aspect attribute in the XML to object binding. The aspect value determines the set accessor name that will store the type description in the attribute pragma, unless there is already a method with such name.Right click menu actions:Simple, Complex, Collection, Soap Array, Struct, or Choice - adds type description to the attribute.Accept selection - saves pragma description for the selected attribute.Browse method - opens a method browser on the method.'</body></methods><methods><class-id>WebServices.SetClassTypes class</class-id> <category>resources</category><body package="XMLObjectBindingWizard">addAdditionalMenu</body></methods><methods><class-id>WebServices.SetClassTypes class</class-id> <category>instance creation</category><body package="XMLObjectBindingWizard">model: aWsdlBuilderModel typeView: aClass callback: aBlock	^self new		model: aWsdlBuilderModel typeView: aClass callback: aBlock;		yourself</body></methods><methods><class-id>WebServices.SelectX2OBinding</class-id> <category>accessing</category><body package="XMLObjectBindingWizard">bindingListAspect	^bindingListAspect</body><body package="XMLObjectBindingWizard">newBinding	^self newBindingKey</body><body package="XMLObjectBindingWizard">newBindingKey	^'&lt;new binding&gt;'</body><body package="XMLObjectBindingWizard">selectionMenu	^selectionMenu</body><body package="XMLObjectBindingWizard">targetNamespaces	^self model bindingListToUpdate 		addFirst: self newBinding;		yourself</body></methods><methods><class-id>WebServices.SelectX2OBinding</class-id> <category>actions</category><body package="XMLObjectBindingWizard">acceptSelectedBinding	| binding | 	binding := bindingListAspect selection ~= self newBindingKey		ifTrue: [XMLObjectBinding bindingAtNamespace:  bindingListAspect selection]		ifFalse: [ self model newBinding].	self model initializeBuilder: binding.	^true</body><body package="XMLObjectBindingWizard">closeRequestFromParent	bindingListAspect selection ifNotNil: [^self acceptSelectedBinding].	^true</body><body package="XMLObjectBindingWizard">removeSelectedBinding	 bindingListAspect selection ~= self newBindingKey		ifTrue: [ XMLObjectBinding removeKey:  bindingListAspect selection ifAbsent: [].]</body><body package="XMLObjectBindingWizard">selectionIndexChange	^bindingListAspect selection 		ifNil: [self parent disableNext]		ifNotNil: [self parent enableNext ]</body></methods><methods><class-id>WebServices.SelectX2OBinding</class-id> <category>initialize-release</category><body package="XMLObjectBindingWizard">initializeAspects	super initializeAspects.	bindingListAspect := SelectionInList with: self targetNamespaces.	bindingListAspect selectionIndexHolder 		onChangeSend: #selectionIndexChange		to: self.	selectionMenu := Menu new.	selectionMenu		addItemLabel: 'Remove'		value: [ bindingListAspect selection notNil ifTrue: 					[ self removeSelectedBinding.					bindingListAspect listHolder value: self targetNamespaces. ]].</body></methods><methods><class-id>WebServices.SelectX2OBinding</class-id> <category>interface opening</category><body package="XMLObjectBindingWizard">postBuildWith: aBuilder	super postBuildWith: aBuilder.	bindingListAspect selection ifNil: [ self parent disableNext ].	bindingListAspect selectionIndex: 1.</body></methods><methods><class-id>WebServices.SelectX2OBinding class</class-id> <category>accessing</category><body package="XMLObjectBindingWizard">header	^#SelectXMLObjectBinding &lt;&lt; #webservices &gt;&gt; 'Select or create a new XML Object Binding'</body><body package="XMLObjectBindingWizard">helpText	^#SelectingX2OBindingHelp &lt;&lt; #webservices &gt;&gt;'Select to update or create a new XML To Object Binding '</body></methods><methods><class-id>WebServices.CreateXMLSchema</class-id> <category>interface opening</category><body package="XMLObjectBindingWizard">postBuildWith: aBuilder 	(self widgetAt: #specificationAspect) ifNotNil: [ :wrapper | wrapper  beReadOnly.]</body></methods><methods><class-id>WebServices.CreateXMLSchema</class-id> <category>aspects</category><body package="XMLObjectBindingWizard">defaultMethodName	^'xmlSchema'</body></methods><methods><class-id>WebServices.CreateXMLSchema</class-id> <category>initialize-release</category><body package="XMLObjectBindingWizard">initializeSpecificationAspect	hasChanges := false. 	specificationAspect := self model createXMLTypesElement asValue.</body></methods><methods><class-id>WebServices.CreateXMLSchema class</class-id> <category>accessing</category><body package="XMLObjectBindingWizard">header	^#XMLSchemaSpecification &lt;&lt; #webservices &gt;&gt; 'XML Schema Specification'</body><body package="XMLObjectBindingWizard">helpText	^#CreateXMLSchemaHelp &lt;&lt; #webservices &gt;&gt;'Create XML Schema specification Destination section:Method - saves the schema to a class method with the specified name in the selected class.File out - saves the schema to an external text filePOST - posts the schema on the Http server using specified url'</body></methods><methods><class-id>WebServices.WSLabelAndValue</class-id> <category>printing</category><body package="XMLObjectBindingWizard">displayString	"Allows a value to be quietly associated with the key that is 	displayed in a SequenceView."	^self key displayString</body></methods><methods><class-id>WebServices.WSLabelAndValue</class-id> <category>accessing</category><body package="XMLObjectBindingWizard">key: aKey value: anObject 	"Store the arguments as the variables of the receiver."	key := aKey.	value := anObject</body><body package="XMLObjectBindingWizard">value	"Answer the value of the receiver."	^value</body><body package="XMLObjectBindingWizard">value: anObject 	"Store the argument, anObject, as the value of the receiver."	value := anObject</body></methods><methods><class-id>WebServices.WSLabelAndValue class</class-id> <category>instance creation</category><body package="XMLObjectBindingWizard">key: newKey value: newValue	"Answer a new instance of the receiver with the arguments as the key and	value of the association."	^self new key: newKey value: newValue</body></methods><methods><class-id>WebServices.BindingToolTabs</class-id> <category>accessing</category><body package="XMLObjectBindingWizard">clients	^self class clients</body><body package="XMLObjectBindingWizard">header	^client header</body><body package="XMLObjectBindingWizard">labelArray	^self clients collect: [ :each | each first ]</body><body package="XMLObjectBindingWizard">specArray	^self clients collect: [ :each | each last ]</body></methods><methods><class-id>WebServices.BindingToolTabs</class-id> <category>interface opening</category><body package="XMLObjectBindingWizard">postBuildWith: aBuilder 	tabs selectionIndex: 1.</body></methods><methods><class-id>WebServices.BindingToolTabs</class-id> <category>actions</category><body package="XMLObjectBindingWizard">displayHelpText	client ifNotNil: [ (SimpleHelp helpString: client helpText) open]</body><body package="XMLObjectBindingWizard">exitingClient	client ifNotNil: [ client exitingClient ]</body><body package="XMLObjectBindingWizard">tabsChanged	| index  |	index := self tabs selectionIndex.	client := self specArray at: index.	self parent subcanvasName value: client header.	(self builder componentAt: #tabbing) widget 		client: (client model: model parent: self )		spec: #windowSpec</body></methods><methods><class-id>WebServices.BindingToolTabs</class-id> <category>initialize-release</category><body package="XMLObjectBindingWizard">initializeAspects	tabs := SelectionInList with: self labelArray.	tabs selectionIndexHolder onChangeSend: #tabsChanged to: self.</body></methods><methods><class-id>WebServices.BindingToolTabs</class-id> <category>aspects</category><body package="XMLObjectBindingWizard">tabs	^tabs</body></methods><methods><class-id>WebServices.BindingToolTabs class</class-id> <category>accessing</category><body package="XMLObjectBindingWizard">header	^''</body><body package="XMLObjectBindingWizard">helpText	^''</body></methods><methods><class-id>WebServices.BindingToolTabs class</class-id> <category>defaults</category><body package="XMLObjectBindingWizard">clients	^clients ifNil: [ clients := self defaultClients ]</body><body package="XMLObjectBindingWizard">clients: anOrderedCollection	clients := anOrderedCollection</body><body package="XMLObjectBindingWizard">defaultClients	^(OrderedCollection new: 4)		add: (Array with: X2OIcons allMapped-&gt; 'Types'  with: BrowseObjectMarshalers);		add:  (Array with: X2OIcons edit2 -&gt; 'X2O Spec' with: CreateX2O );		add: (Array with: X2OIcons xml -&gt; 'XML Spec' with: CreateXMLSchema);		add: (Array with: X2OIcons lab3 -&gt; 'Test Script' with: TestX2OBinding);		yourself</body></methods><methods><class-id>WebServices.AttributeGroupMarshaler</class-id> <category>tool</category><body package="XMLObjectBindingWizard">bindingTagType	^#attribute</body></methods><methods><class-id>WebServices.ComplexObjectMarshaler</class-id> <category>tool</category><body package="XMLObjectBindingWizard">removeBaseType	self x2oRelations do: [ :each |		each isText ifTrue: [textMarshaler := nil].		each isAttribute ifTrue: [self attributeMarshalers remove: each].		each isElement ifTrue: [self compositor marshalers remove: each]].	baseType := nil</body><body package="XMLObjectBindingWizard">removeMarshaler: aTypeMarshaler		(aTypeMarshaler isAttribute or: [aTypeMarshaler isAttributeGroup]) ifTrue: [		aTypeMarshaler isAnyAttributeMarshaler ifTrue: [ ^anyAttributeMarshaler := nil ].		^self attributeMarshalers remove: aTypeMarshaler  ifAbsent: []].	aTypeMarshaler isText ifTrue: [^textMarshaler :=  nil].	self elementMarshalers remove: aTypeMarshaler ifAbsent: []</body><body package="XMLObjectBindingWizard">replaceMarshaler: aTypeMarshaler with: newTypeMarshaler	| index |	(aTypeMarshaler isNil		or: [aTypeMarshaler isAnyAttributeMarshaler			or: [aTypeMarshaler isText]]) ifTrue: [^nil].	aTypeMarshaler isAttributeMarshaler ifTrue: [^self attributeMarshalers remove: aTypeMarshaler].	index := self elementMarshalers indexOf:  aTypeMarshaler.	self elementMarshalers remove: aTypeMarshaler.	newTypeMarshaler isAttributeMarshaler 		ifFalse: [ self elementMarshalers add: newTypeMarshaler beforeIndex: index. 				self elementMarshalers removeLast ]</body></methods><methods><class-id>WebServices.ChoiceMarshaler</class-id> <category>tool</category><body package="XMLObjectBindingWizard">bindingTagType	^#choice</body><body package="XMLObjectBindingWizard">typeDescription	| struct string |	struct := Struct new.	self marshalers do: [ :each  | struct at: each path type put: each typeDescription ].	string := struct printString.	^'Choice', (string copyFrom: (string indexOf: $:) to: string size).</body></methods><methods><class-id>WebServices.ModelGroupMarshaler</class-id> <category>tool</category><body package="XMLObjectBindingWizard">typeDescription	| string |	string := 'Group'.	self elementMarshalers do: [ :m | string := string, ' #', m path type, '-&gt;', m typeDescription printString].	^string</body></methods><methods><class-id>WebServices.UnionMarshaler</class-id> <category>tool</category><body package="XMLObjectBindingWizard">typeDescription	| string |	string := 'Union'.	marshalers do: [ :m | string := string, ' #', m path type, '-&gt;', m typeDescription printString].	^string</body></methods><methods><class-id>WebServices.ListMarshaler</class-id> <category>tool</category><body package="XMLObjectBindingWizard">typeDescription	^'List of: ', marshaler typeDescription printString.</body></methods><methods><class-id>WebServices.XMLMarshaler</class-id> <category>tool</category><body package="XMLObjectBindingWizard">typeName	| aType |	aType := self name type.	^aType first asSymbol asUppercase, (aType copyFrom: 2 to: aType size)</body></methods><methods><class-id>WebServices.XMLObjectBinding class</class-id> <category>accessing</category><body package="XMLObjectBindingWizard">userBindings	^(XMLObjectBinding registry values reject: [ :value | 		(XMLObjectBinding systemTargetNamespaces includes: value targetNamespace) 			or: [ value targetNamespace isEmpty				or: [(value marshalers anySatisfy: [ :m | m isComplexTypeMarshaler ]) not]] ])</body></methods><methods><class-id>WebServices.RelationMarshaler</class-id> <category>tool</category><body package="XMLObjectBindingWizard">bindingDetails	| string |	string := 'minOccurs=', (self isMandatory ifTrue: [ '1' ] ifFalse: ['0']).	string := string, (self relation isManyRelation ifTrue: [' maxOccurs=unbounded'] ifFalse: [' maxOccurs=1']).	^string</body><body package="XMLObjectBindingWizard">bindingTagType	^#element</body><body package="XMLObjectBindingWizard">bindingTypeArray	^self typeMarshaler ifNotNil: [ self typeMarshaler bindingTypeArray ]</body><body package="XMLObjectBindingWizard">typeDescription	^self typeMarshaler typeDescription</body></methods><methods><class-id>WebServices.StructMarshaler</class-id> <category>tool</category><body package="XMLObjectBindingWizard">typeDescription	| struct |	self compositor isChoiceMarshaler ifTrue: [^self compositor typeDescription ].	struct := Struct new.	self elementMarshalers do: [ :each  | struct at: each path type put: each typeDescription ].	^struct printString</body></methods><methods><class-id>WebServices.ModelAttributeGroupMarshaler</class-id> <category>tool</category><body package="XMLObjectBindingWizard">typeDescription	| string |	string := 'AttributeGroup'.	self attributeMarshalers do: [ :m | string := string, ' #', m path type, '-&gt;', m typeDescription ].	^string</body></methods><methods><class-id>WebServices.SimpleObjectMarshaler</class-id> <category>tool</category><body package="XMLObjectBindingWizard">typeDescription	^(self findDomainValue: 'name' in: self attributes) ifNotNil: [ :xml | 'xsd:', xml type ]</body></methods><methods><class-id>WebServices.XMLTypeMarshaler</class-id> <category>tool</category><body package="XMLObjectBindingWizard">bindingTypeArray</body><body package="XMLObjectBindingWizard">typeDescription	^''</body></methods><methods><class-id>WebServices.CollectionObjectMarshaler</class-id> <category>tool</category><body package="XMLObjectBindingWizard">typeDescription	^self name type</body></methods><methods><class-id>WebServices.ObjectMarshaler</class-id> <category>tool</category><body package="XMLObjectBindingWizard">typeDescription	^self smalltalkClass name</body></methods><methods><class-id>WebServices.AttributeMarshaler</class-id> <category>tool</category><body package="XMLObjectBindingWizard">bindingDetails	^self isMandatory ifTrue: [ 'required=true' ] ifFalse: ['required=false']</body><body package="XMLObjectBindingWizard">bindingTagType	^#attribute</body></methods><methods><class-id>WebServices.X2OIcons class</class-id> <category>png imports</category><body package="XMLObjectBindingWizard">allMapped	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'allMapped.png'&gt;	&lt;md5sum: #[63 52 29 176 29 3 198 208 90 209 254 10 196 173 123 226]&gt;	^[AlphaCompositedImage image: ((Image extent: 16@16 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???=@&gt;8,T0/2JD/K=#AO2?X0S0/2JD$C;"1P@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&gt;G&lt;(PQ=_.JD???#QO??84S??&gt;MD???#QO5&gt;8(S!?JDDPC???&lt;@????@O???0C???&lt;@????@O???0C???=@:8@P=_"HD/??#QO??84S??&gt;MD???#QO??84S??&gt;MD?W8"AI@:8@P@O???0C???&lt;@????@O???0C???&lt;@????0.%&gt;C/??#QO??H,R??&amp;ID/?8"AG?&gt;H Q??&amp;ID/?&lt;"1K??84S0.%&gt;C C???&lt;@????@O???0C???&lt;@????@O????K''_P;?&lt;8XP?&gt;:CC??+ @;?:W&lt;N?&gt;%?C/?+ @;?;(LO??NFDOK''_P8@????@O???0C???&lt;@????@O???0C????27W$L?&gt;!?C/?"^03?7W K?=)6B/?Z] +?7W K?&gt;I;CO?(_0;27W$L@O???0C???&lt;@????@O???0C???&lt;@????0-E1B??"^03?6''XJ?=I1BO?L[P_?3F4G?=I1BO?Z] +?8'',L0-E1B0C???&lt;@????@O???0C???&lt;@????@O???4B?Y@S55''PJ?=)6B/?R\P#?3F4G?&lt;1-A??R\P#?6''XJ=]Y4B$B?Y@P@????@O???0C???&lt;@????@O???0C???&lt;@????!;-$A/WT\ ''?7W K?=)6B/?Z] +?7W K=]Q2BX^;Y@X@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???=@+50@0+5$AOKGZ [216(F0+5$ADB/W@@@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0@a')))] once</body><body package="XMLObjectBindingWizard">checkmark	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'checkmark.png'&gt;	&lt;md5sum: #[168 151 20 76 194 148 110 44 235 23 246 234 33 61 187 253]&gt;	^[AlphaCompositedImage image: ((Image extent: 16@16 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@P3)$,#&lt;:YK@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@P3)$,3&lt;:YKCCN&amp;R0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@03)$,7&lt;:YKGCN&amp;R0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@03)$,;&lt;:YKJ?N&amp;R0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@A 3)$,?&lt;:YKM?N&amp;R0P3)$,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@A03)$,?&lt;:YKO?N&amp;R003)$,@@@@@@@@@@@@@@@@#&lt;:YKACN&amp;R0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B_3)$,?&lt;:YKO?N&amp;R103)$,@@@@@@@@@@@@@@@@@@@@@H?N&amp;R3O3)$,DL:YK@@@@@@@@@@@@@@@@ACN&amp;R2/3)$,?&lt;:YKO?N&amp;R2/3)$,@@@@@@@@@@@@@@@@@@@@@@@@@@@ 3)$,?&lt;:YKL?N&amp;R0P3)$,@@@@@ACN&amp;R3O3)$,?&lt;:YKO?N&amp;R3_3)$,DL:YK@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@J?N&amp;R3?3)$,3&lt;:YKDCN&amp;R3/3)$,?&lt;:YKO?N&amp;R3?3)$,LL:YK@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@A@3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$, L:YK@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@M?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,/&lt;:YK@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@A 3)$,?&lt;:YKO?N&amp;R3?3)$,;&lt;:YKACN&amp;R0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DL:YKN?N&amp;R3?3)$,?&lt;:YKDCN&amp;R0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BO3)$,?&lt;:YKHCN&amp;R0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HL:YKK?N&amp;R0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@a')))] once</body><body package="XMLObjectBindingWizard">checkmark2	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'checkmark2.png'&gt;	&lt;md5sum: #[19 75 50 223 196 87 140 142 245 25 170 5 36 158 126 17]&gt;	^[AlphaCompositedImage image: ((Image extent: 16@16 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@@@@@@@@@@@@@@@@@@@@@BCN&amp;R2@3)$,/&lt;:YKK?N&amp;R2?3)$,/&lt;:YKGCN&amp;R0P3)$,@@@@@@@@@@@@@@@@\O???0@@@@@@@@@@DL:YKH?N&amp;R3?3)$,?&lt;:YKO?Z,6G?8&lt;ZH?&gt;OF"O?Z,6G?3)$,;&lt;:YKHCN&amp;R0@@@@@''????6C???&lt;@@@@@DL:YKL?N&amp;R3?3)$,?&gt;B?^??9&lt;.W???????????????????????39&lt;/?#1(#?3)$,7&gt;_L%-?*4:T@@@@@@@@@@J?N&amp;R3?3)$,?&gt;7Y,O????????????????????????????????????????????[,5??W+ERO:]J!@@@@@DCN&amp;R3?3)$,?&gt;_L%/????????????????????????????????????????????39&lt;/?W+ES?9&lt;2V?&lt;:YKBCN&amp;R2_3)$,?=F_N_?&lt;&gt;_K???????????????????????????????????????39&lt;/?W+ES?5JYF???????T)$ZO3)$,;&lt;:YKO? /7/????????????????????????????????????????????W+ES?3)$,??C_/_??????8&lt;ZH/&lt;:YKO?N&amp;R3?9&lt;2V??????????????????????????????????????? /7/?3)$,?=*3X_????????????C_/^?N&amp;R3?3)$,?&gt;_L%/????????????????????????????????? /7/?3)$,?&lt;:YKO?39,+????????????07;7/3)$,;&gt;?]._?07;7??O''2??????????????????????? /7/?3)$,?&lt;:YKO?Z,6G?????????????????9&lt;2V/&lt;:YKJ?R(#??:-J#?=*3X_?N&amp;R3?6+M!?=69[/?#1(#?3)$,?&lt;:YKO?N&amp;R3?&gt;_K%?????????????????=R&amp;Q(?N&amp;R1@3)$,?&lt;:YKO?*4*O?&lt;M&gt;=?=F_N_?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?8K=;?????????????????&gt;7Y,O?N&amp;R0 3)$,@@@@@J?N&amp;R3?4Y&lt;9??[,5??&lt;&gt;_K?7[%.?&lt;:YKO?N&amp;R3?4Y&lt;9??''29_????????????[,5??Q''3&amp;@3)$,@@@@@@@@@@@P3)$,3&lt;:YKO?Q''3''?:-J#???????39,+?5JYF?&gt;_L%/???????????&gt;+R(??Q''3&amp;_3)$,@@@@@@@@@@@@@@@@@@@@@ACN&amp;R2O3)$,?&lt;:YKO?T)$[?8&lt;ZH??O&amp;2/?39,+?8&lt;ZH?=R&amp;Q/?N&amp;R2@3)$,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BCN&amp;R2@3)$,/&lt;:YKK?N&amp;R2?5*)O/&lt;:YKGCN&amp;R0 3)$,@@@@@@@@@@@@@@@@@@@@@@@a')))] once</body><body package="XMLObjectBindingWizard">edit	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'edit.png'&gt;	&lt;md5sum: #[29 196 174 161 85 137 28 96 26 158 96 230 240 204 30 193]&gt;	^[AlphaCompositedImage image: ((Image extent: 16@17 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: 'HL:YKHCN&amp;R2@3)$, L:YKHCN&amp;R2@3)$, L:YKHCN&amp;R3_&lt;^KC#?+4:@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@N?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&gt;_L%/?W+EQ =&gt;;\@@@@@@@@@@@@@@@@@@@@@@@@@@C?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?''3I[?3)$,?=^,UFC7;-0@@@@@@@@@@@@@@@@@@@@@?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?;]&amp;0?&lt;:YKO?N&amp;R3?5:1TXO_.7@@@@@@@@@@@@@@@@O?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&gt;B?^??-6[C?9&lt;2V?&gt;_L%.?29L]@&lt;&gt;[JPL:YK@@@@@C?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?Q''3''?&lt;&gt;[J??39&lt;/?W+ER/3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?Q''3''?&lt;&gt;[J?=^,UO? /7/?&gt;_K%/=*3X_?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?Q''3''?&lt;&gt;[J?=^,UO?N&amp;R3?3)$,?=69[-??????3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?Q''3''?&lt;&gt;[J?=^,UO?N&amp;R3?3)$,?=F_N^?5:=T0?????&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?Q''3''?&lt;&gt;[J?=^,UO?N&amp;R3?3)$,?&lt;:YKN?29L\0????@@@@@O?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?Q''3''?&lt;&gt;[J?=^,UO?N&amp;R3?3)$,?&lt;:YKO?-6[AP????@@@@@@@@@@C?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?Q''3''?&lt;&gt;[J?=^,UO?N&amp;R3?3)$,?&lt;:YKO?-6[BO;=69@@@@@@@@@@@@@@@@?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?;]&amp;0??''29_?Q''3''?3)$,?&lt;:YKO?-6[C?8K=; L:YK@@@@@@@@@@@@@@@@O?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,??O&amp;2/?''3I[?=.3W?=F_N_?-6[C?8K=;?&lt;:YKHCN&amp;R0@@@@@@@@@@@@@@@C?3)$,?&lt;:YKO?N&amp;R3?3)$,?=R&amp;Q/?-6[C?3)$,?&gt;7Y,O?&lt;&gt;_K?8K=;?&lt;:YKO?N&amp;R2@3)$,@@@@@@@@@@@@@@@@?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO? /7/?&gt;_K%??C_/_?-6[C?7[%.?&lt;:YKO?N&amp;R3?3)$,\L:YK@@@@@@@@@@@@@@@@K?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?5JYF?=R&amp;Q/?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,7&lt;:YKBCN&amp;R0@@@@@@@@@@@@@@@@b')))] once</body><body package="XMLObjectBindingWizard">edit2	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'edit2.png'&gt;	&lt;md5sum: #[222 79 11 43 226 55 97 50 3 165 217 20 104 62 89 131]&gt;	^[AlphaCompositedImage image: ((Image extent: 16@16 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AP????XMZ*S;?N&amp;R2_3)$,DL:YK@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BO??????39&lt;/?6;M_?4Y&lt;9?&lt;:YKK?N&amp;R0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B_?????&gt;7Y,O?Q''3''?&lt;M&gt;=??[,5??W+ES/3)$,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B_?????&gt;7Y,O?N&amp;R3?3)$,?&lt;:YKO?-6[C??O''2''=68Z0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B_?????&gt;7Y,O?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,??O&amp;2(????&lt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B_?????&gt;+R(??N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&gt;B?^9????&lt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B_?????&gt;B?^??N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&gt;B?^9????&lt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B_?????&gt;B?^??N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&gt;B?^9????&lt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B_?????&gt;B?^??N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&gt;B?^9????&lt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B_?????&gt;B?^??N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&gt;B?^9????&lt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B_?????&gt;B?^??N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&gt;B?^9????&lt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@A ??????39&lt;/?W+ES?3)$,?&lt;:YKO?N&amp;R3?3)$,?&gt;B?^9????&lt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HL:YKO?-6[C??O''2?=^,UO?N&amp;R3?3)$,?&gt;B?^9????&lt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FCN&amp;R3?3)$,?&gt;7Y,O?&lt;&gt;_K?5:1T?&gt;B?^9????&lt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B_3)$,?&lt;:YKO?N&amp;R3?;]&amp;0??39&lt;)????&lt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@''&lt;:YKH?N&amp;R1 3)$,HL:YKFC???&lt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@a')))] once</body><body package="XMLObjectBindingWizard">lab	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'lab.png'&gt;	&lt;md5sum: #[225 19 3 207 135 20 75 65 37 237 180 75 69 36 44 46]&gt;	^[AlphaCompositedImage image: ((Image extent: 16@19 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@@@@@@@@@@@@@@@@@@@@@HCN&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R2@3)$,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@A 3)$,7&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3_3)$,XL:YK@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HCN&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$, L:YK@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B@3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKHCN&amp;R0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ L:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R2@3)$,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HCN&amp;R3?3)$,PL:YKDCN&amp;R3?3)$, L:YK@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B@3)$,?&lt;:YKHCN&amp;R2@3)$,?&lt;:YKHCN&amp;R0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ L:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R2@3)$,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HCN&amp;R3?3)$,@@@@@@@@@@C?3)$, L:YK@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ACN&amp;R3/3)$,?&lt;:YKK?N&amp;R2?3)$,?&lt;:YKN?N&amp;R0P3)$,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BO3)$,?&lt;:YKO?N&amp;R2?3)$,/&lt;:YKO?N&amp;R3?3)$,#&lt;:YK@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@03)$,?&lt;:YKO?N&amp;R3?3)$,@@@@@@@@@@C?3)$,?&lt;:YKO?N&amp;R1@3)$,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@3&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,3&lt;:YK@@@@@@@@@@@@@@@@@@@@@@@@@@@\L:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R2@3)$, L:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R103)$,@@@@@@@@@@@@@@@@DL:YKN?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$, L:YKHCN&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,;&lt;:YKACN&amp;R0@@@@@@@@@@I?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R2/3)$,@@@@@DCN&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R0@@@@@@@@@@O?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKDCN&amp;R3_3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,/&lt;:YKK?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3_3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YK@@a')))] once</body><body package="XMLObjectBindingWizard">lab2	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'lab2.png'&gt;	&lt;md5sum: #[181 246 99 24 145 222 129 95 182 182 5 51 129 14 75 120]&gt;	^[AlphaCompositedImage image: ((Image extent: 16@19 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@O???0@@@@@@@@@@@@@@@HCN&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R2@3)$,@@@@@@@@@@@@@@@@@O???0C???&lt;@@@@@@@@@@@@@@@B@3)$,?&lt;:YKDCN&amp;R1@3)$,PL:YKDCN&amp;R3?3)$, L:YK@@@@@@@@@@@@@@@@@C???&lt;@????@@@@@@@@@@@@@@@@ L:YKO?N&amp;R2@3)$,@@@@@@@@@@B@3)$,?&lt;:YKHCN&amp;R0@@@@@@@@@@@@@@@@@????@O???0@@@@@@@@@@@@@@@HCN&amp;R3?3)$,?&lt;:YK@@@@@@@@@@@?&lt;:YKO?N&amp;R2@3)$,@@@@@@@@@@@@@@@@@O???0C???&lt;@@@@@@@@@@@@@@@@@@@@@ L:YKO?N&amp;R0@@@@@@@@@@O?N&amp;R2@3)$,@@@@@@@@@@@@@@@@@@@@@@C???&lt;@????@@@@@@@@@@@@@@@@@@@@@HCN&amp;R3?3)$,@@@@@@@@@@C?3)$, L:YK@@@@@@@@@@@@@@@@@@@@@@@????@O???0@@@@@@@@@@@@@@@@@@@@BO3)$,?&lt;:YK@@@@@@@@@@@?&lt;:YKHCN&amp;R0@@@@@@@@@@@@@@@@@@@@@@O???0C???&lt;@@@@@@@@@@ACN&amp;R2/3)$,?&lt;:YKO?N&amp;R0@@@@@@@@@@O?N&amp;R3?3)$,#&lt;:YKACN&amp;R0@@@@@@@@@@@C???&lt;@????@@@@@ACN&amp;R3O3)$,?&lt;:YKHCN&amp;R0P3)$,@@@@@@@@@@@P3)$, L:YKO?N&amp;R3O3)$,@@@@@@@@@@@@????@O???0@@@@B@3)$,?&lt;:YKFCN&amp;R0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@A 3)$,?&lt;:YKHCN&amp;R0@@@@@@O???0C???&lt;@@@@@;&lt;:YKI?N&amp;R103)$,?&lt;:YKN?N&amp;R3/3)$,?&lt;:YKO?N&amp;R3?3)$,XL:YKJ?N&amp;R3/3)$,@@@@@@C???&lt;@????PL:YKO?N&amp;R1@3)$,7&lt;:YKO?N&amp;R003)$,TL:YKO?N&amp;R3?3)$,?&lt;:YKM?N&amp;R1P3)$,?&lt;:YKDCN&amp;R0@????@O???4CN&amp;R3?3)$,@@@@@O?N&amp;R3?3)$,+&lt;:YKL?N&amp;R3?3)$,''&lt;:YKO?N&amp;R3?3)$,LL:YKO?N&amp;R1@3)$,@O???0C???=@3)$,?&lt;:YKBCN&amp;R3?3)$,?&lt;:YKM?N&amp;R3/3)$,/&lt;:YK@@@@@B?3)$,;&lt;:YKDCN&amp;R3?3)$,PL:YK@C???&lt;@????HL:YKO?N&amp;R103)$,''&lt;:YKO?N&amp;R003)$,TL:YKO?N&amp;R3O3)$,?&lt;:YKI?N&amp;R2@3)$,?&lt;:YKACN&amp;R0@????@O???0@@@@B?3)$,;&lt;:YKCCN&amp;R3_3)$,/&lt;:YKL?N&amp;R3?3)$,?&lt;:YKL?N&amp;R003)$,;&lt;:YKJ?N&amp;R0@@@@@@O???0C???&lt;@@@@@LL:YKO?N&amp;R3O3)$,LL:YKHCN&amp;R2?3)$,/&lt;:YKGCN&amp;R003)$,3&lt;:YKN?N&amp;R0 3)$,@@@@@@C???&lt;@????@@@@@@@@@@A 3)$,;&lt;:YKN?N&amp;R2_3)$,XL:YKFCN&amp;R2_3)$,?&lt;:YKN?N&amp;R003)$,@@@@@@@@@@@@????@O???0@@@@@@@@@@@@@@@BCN&amp;R2_3)$,;&lt;:YKO?N&amp;R3?3)$,;&lt;:YKI?N&amp;R0 3)$,@@@@@@@@@@@@@@@@@O???0@a')))] once</body><body package="XMLObjectBindingWizard">lab3	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'lab3.png'&gt;	&lt;md5sum: #[27 103 129 127 156 49 215 18 74 161 190 117 64 21 189 195]&gt;	^[AlphaCompositedImage image: ((Image extent: 16@19 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@O???0@@@@@@@@@@@@@@@DCN&amp;R3?4Y&lt;9?=*3X_?Z,6G?6+M!?=*3X_?Q''3%@3)$,@@@@@@@@@@@@@@@@@O???0C???&lt;@@@@@@@@@@@@@@@A@3)$,?=*3X_??????????????????????6+M!PL:YK@@@@@@@@@@@@@@@@@C???&lt;@????@@@@@@@@@@@@@@@@LL:YKL?N&amp;R3?6+M!????????????6+M!3&lt;:YKCCN&amp;R0@@@@@@@@@@@@@@@@@????@O???0@@@@@@@@@@@@@@@@@@@@A@3)$,?=*3X_???????????=*3XTCN&amp;R0@@@@@@@@@@@@@@@@@@@@@@O???0C???&lt;@@@@@@@@@@@@@@@@@@@@@PL:YKO?Z,6G????????????Z,6E@3)$,@@@@@@@@@@@@@@@@@@@@@@C???&lt;@????@@@@@@@@@@@@@@@@@@@@@DCN&amp;R3?6+M!????????????6+M!PL:YK@@@@@@@@@@@@@@@@@@@@@@@????@O???0@@@@@@@@@@@@@@@@@@@@A@3)$,?=*3X_???????????=*3XTCN&amp;R0@@@@@@@@@@@@@@@@@@@@@@O???0C???&lt;@@@@@@@@@@@@@@@@@@@@@''&lt;:YKO?-6[C????????????-6[B@3)$,@@@@@@@@@@@@@@@@@@@@@@C???&lt;@????@@@@@@@@@@@@@@@@DL:YKN?Q(C+?????????????????????;=F N!CN&amp;R0@@@@@@@@@@@@@@@@@????@O???0@@@@@@@@@@@@@@@HCN&amp;R3?9&lt;2V???????????????????????''3IY03)$,@@@@@@@@@@@@@@@@@O???0C???&lt;@@@@@@@@@@@@@@@C/3)$,??''29_??????????????????????&gt;_K%7&lt;:YK@@@@@@@@@@@@@@@@@C???&lt;@????@@@@@@@@@@A 3)$,?=*3X_?39,+?&lt;&gt;[J??O&amp;2/?39,+?&lt;&gt;[J??O&amp;2/?Z,6E 3)$,@@@@@@@@@@@@????@O???0@@@@@@@@@@7&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,3&lt;:YK@@@@@@@@@@@@O???0C???&lt;@@@@@TL:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R1@3)$,@@@@@@C???&lt;@????@@@@@K?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,/&lt;:YK@@@@@@@????@O???4CN&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R003)$,@O???0C???&gt;/3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,''&lt;:YK@C???&lt;@?????&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R0@????@O???=?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3O3)$,@O???0@a')))] once</body><body package="XMLObjectBindingWizard">lightning	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'lightning.png'&gt;	&lt;md5sum: #[67 221 65 131 107 138 253 207 165 157 166 191 126 122 32 123]&gt;	^[AlphaCompositedImage image: ((Image extent: 16@19 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@O???0C???&lt;@@@@@@@@@@@@@@@@03)$,/&lt;:YKK?N&amp;R2?3)$,/&lt;:YKGCN&amp;R0@@@@@@@@@@@@@@@@@????@O???0C???&lt;@????@@@@@@@@@@@@@@@@#&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R103)$,@@@@@@@@@@@@@@@@@O???0C???&lt;@????@O???0@@@@@@@@@@@@@@@M?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,LL:YK@@@@@@@@@@@@@@@@@C???&lt;@????@O???0C???&lt;@@@@@@@@@@CCN&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YK@@@@@@@@@@@@@@@@@@@@@@@????@O???0C???&lt;@????@@@@@@@@@@B_3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKK?N&amp;R0@@@@@@@@@@@@@@@@@@@@@@O???0C???&lt;@????@O???0@@@@@@@@@@;&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKN?N&amp;R2?3)$,+&lt;:YK@C???&lt;@????@O???0C???&lt;@@@@@TL:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKECN&amp;R0@????@O???0C???&lt;@????@@@@@I?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKH?N&amp;R0@@@@@@O???0C???&lt;@????@O???0@@@@C/3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKK?N&amp;R0@@@@@@@@@@@C???&lt;@????@O???0C???&lt;03)$,/&lt;:YKK?N&amp;R2?3)$,3&lt;:YKO?N&amp;R3?3)$,?&lt;:YKN?N&amp;R0P3)$,@@@@@@@@@@@@????@O???0C???&lt;@????@@@@@@@@@@@@@@@@@@@@@HCN&amp;R3?3)$,?&lt;:YKO?N&amp;R1@3)$,@@@@@@@@@@@@@@@@@O???0C???&lt;@????@O???0@@@@@@@@@@@@@@@@@@@@C_3)$,?&lt;:YKO?N&amp;R103)$,@@@@@@@@@@@@@@@@@@@@@@C???&lt;@????@O???0C???&lt;@@@@@@@@@@@@@@@@03)$,?&lt;:YKO?N&amp;R2/3)$,@@@@@@@@@@@@@@@@@@@@@@@@@@@@????@O???0C???&lt;@????@@@@@@@@@@@@@@@@''&lt;:YKO?N&amp;R3_3)$,DL:YK@@@@@@@@@@@@@@@@@@@@@@@@@@@@O???0C???&lt;@????@O???0@@@@@@@@@@@@@@@N?N&amp;R3?3)$,LL:YK@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@C???&lt;@????@O???0C???&lt;@@@@@@@@@@ECN&amp;R3?3)$,XL:YK@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@????@O???0C???&lt;@????@@@@@@@@@@B/3)$,''&lt;:YK@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O???0C???&lt;@????@O???0@@@@@P3)$,3&lt;:YKACN&amp;R0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@C???&lt;@????@O???0C???&lt;@@@@@PL:YKCCN&amp;R0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@????@O???0@a')))] once</body><body package="XMLObjectBindingWizard">lightning2	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'lightning2.png'&gt;	&lt;md5sum: #[199 62 233 72 174 62 0 83 179 205 217 191 107 115 21 180]&gt;	^[AlphaCompositedImage image: ((Image extent: 16@16 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: 'PL:YK@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BCN&amp;R2O3)$,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\L:YKI?N&amp;R0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B?3)$,''&lt;:YK@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HL:YKN?N&amp;R2_3)$,XL:YKH?N&amp;R0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@A 3)$,?&lt;:YKN?N&amp;R3?3)$,XL:YK@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@J?N&amp;R3?3)$,?&lt;:YKO?N&amp;R1@3)$,PL:YKCCN&amp;R0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@P3)$,;&lt;:YKO?N&amp;R3?3)$,;&lt;:YKK?N&amp;R2?3)$,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ECN&amp;R3_3)$,;&lt;:YKO?N&amp;R3?3)$,?&lt;:YKFCN&amp;R0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@TL:YKDCN&amp;R3?3)$,?&lt;:YKO?N&amp;R3/3)$,DL:YK@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XL:YKO?N&amp;R3?3)$,?&lt;:YKH?N&amp;R0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B_3)$,/&lt;:YKI?N&amp;R3?3)$,PL:YK@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CCN&amp;R0@@@@@''&lt;:YKL?N&amp;R0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B_3)$,\L:YK@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@J?N&amp;R0P3)$,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@P3)$,TL:YK@@a')))] once</body><body package="XMLObjectBindingWizard">notMapped	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'notMapped.png'&gt;	&lt;md5sum: #[20 89 250 234 66 193 195 42 145 68 66 203 96 185 18 25]&gt;	^[AlphaCompositedImage image: ((Image extent: 16@16 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???=@&gt;8,T-O.ID.+;"!O*&gt;8(S-O.ID$C;"1P@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???=?&lt;XTP8/FEDV+"!A&lt;32H\&lt;L&lt;"GOF+"!A?"&lt;XTQ_?FED@C???&lt;@????@O???0C???&lt;@????@O???0C???=@:8@P8.*@C2V, 5LW!XVEE8VE!Q^E!XTW!XVEIZ2CT&gt;K* @=@:8@P@O???0C???&lt;@????@O???0C???&lt;@????-NE:CV+T^14W!XVEE8VE!Q^E!XTW!XVEE8VE!Q^E!XU*5G,]-NE:CPC???&lt;@????@O???0C???&lt;@????@O???&gt;+Y]P,3.W4&lt;E8VE!Q^E!XTW!XVEE8VE!Q^E!XTW!XVEL;%=ON+Y]P,@????@O???0C???&lt;@????@O???0C????*37@JL;Q8OA^E!XTW!XVEE8VE!Q^E!XTW!XVEE8VE!SN4^C3*37@J@O???0C???&lt;@????@O???0C???&lt;@????-L!,BV*&gt;[1 W!XVEE8VE!Q^E!XTW!XVEE8VE!Q^E!XU*/&amp;&lt;X-L!,BPC???&lt;@????@O???0C???&lt;@????@O???4B?Y@S"/6XFIY=5T1^E!XTW!XVEE8VE!Q^E!XT%''7US8+=&amp;A$B?Y@P@????@O???0C???&lt;@????@O???0C???&lt;@????_;] ANJ7X@U*,FTVL:U.M3N%[#]*,FTV8+] AW&gt;7X@P@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???=@+50@-J9[@^*-W@G*+U0A-J9[@TB/W@@@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0@a')))] once</body><body package="XMLObjectBindingWizard">partialMapped	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'partialMapped.png'&gt;	&lt;md5sum: #[82 61 188 40 65 163 103 19 57 76 108 149 70 53 68 208]&gt;	^[AlphaCompositedImage image: ((Image extent: 16@16 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???=@&gt;8,T-O.ID.+;"!O2?X0S0/2JD$C;"1P@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???=?&lt;XTP8/FEDV+"!A&lt;32H\&lt;??&gt;MD???#QO5&gt;8(S!?JDDPC???&lt;@????@O???0C???&lt;@????@O???0C???=@:8@P8.*@C2V, 5LW!XVEE8VE!_??#QO??84S??&gt;MD?W8"AI@:8@P@O???0C???&lt;@????@O???0C???&lt;@????-NE:CV+T^14W!XVEE8VE!Q^E!XW?=X\Q??^HD_?:"!K??84S0.%&gt;C C???&lt;@????@O???0C???&lt;@????@O???&gt;+Y]P,3.W4&lt;E8VE!Q^E!XTW!XVE?&gt;A9CO?"^07?978N?&gt;:BC?K&amp;_P8@????@O???0C???&lt;@????@O???0C????*37@JL;Q8OA^E!XTW!XVEE8VE!_?J[@_?36&lt;H?=Y3B/?_^P326''\L@O???0C???&lt;@????@O???0C???&lt;@????-L!,BV*&gt;[1 W!XVEE8VE!Q^E!XW?-&amp;@C?;=%A_?J[@_?5''LJ0,90BPC???&lt;@????@O???0C???&lt;@????@O???4B?Y@S"/6XFIY=5T1^E!XTW!XVE?;Y @?&gt;?YPW?2&amp;0G=\9.BDB?Y@P@????@O???0C???&lt;@????@O???0C???&lt;@????_;] ANJ7X@U*,FTVL:U.M??J[@_?36&lt;H=\1-BH^;X X@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???=@+50@-J9[@^*-W@G206 E0+-#ADB/W@@@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0@a')))] once</body><body package="XMLObjectBindingWizard">tag	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'tag.png'&gt;	&lt;md5sum: #[15 118 190 142 107 44 155 2 134 71 117 77 73 120 249 250]&gt;	^[AlphaCompositedImage image: ((Image extent: 16@16 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@P3)$,PL:YKACN&amp;R0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@+&lt;:YKO?N&amp;R3O3)$,LL:YK@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ L:YKO?N&amp;R3?3)$,?&lt;:YKN?N&amp;R1 3)$,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@TL:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKH?N&amp;R0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LL:YKN?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,3&lt;:YKACN&amp;R0@@@@@@@@@@@@@@@@@@@@@DL:YKL?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R103)$,@@@@@@@@@@@@@@@@@@@@@J?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3O3)$,DL:YK@@@@@@@@@@@@@@@@HCN&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3/3)$,HL:YK@@@@@@@@@@@@@@@@ECN&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,PL:YK@@@@@@@@@@@@@@@@CCN&amp;R3/3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,\L:YK@@@@@@@@@@@@@@@@@@@@@B/3)$,?&lt;:YKO?N&amp;R3?&lt;&gt;[J???????*4*O?3)$,?&lt;:YKO?N&amp;R3?3)$,''&lt;:YK@@@@@@@@@@@@@@@@@@@@@@@@@@@ L:YKO?N&amp;R3?6+M!?????????????????=^,UO?N&amp;R3?3)$,3&lt;:YKACN&amp;R0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AP3)$,;=V''RO?#1(#?&gt;_K%??39&lt;/?Q''3''?3)$,;&lt;:YKCCN&amp;R0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@03)$,HL:YKHCN&amp;R3?3)$,?&gt;_L%/?T)$[?3)$,?&lt;:YKECN&amp;R0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BO3)$,3&lt;:YKM?N&amp;R2?3)$,HL:YKI?N&amp;R3?3)$,?&lt;:YKHCN&amp;R0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LL:YK@@@@@@@@@@@@@@@@@@@@@@@@@@@XL:YKGCN&amp;R0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@a')))] once</body><body package="XMLObjectBindingWizard">tag2	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'Tag2.png'&gt;	&lt;md5sum: #[49 234 205 216 142 144 249 18 75 210 169 85 155 255 126 16]&gt;	^[AlphaCompositedImage image: ((Image extent: 16@16 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B@3)$,/=Z*S4CN&amp;R0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@A@3)$,?&gt;7Y,O??????:-J# MR&amp;Q @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@P3)$,;=:;\/?????????????????9&lt;.WO7[!-LL:YK@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@+=^,T/?&lt;&gt;_K????????????????????????????''3IY03)$,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\L:YKO?39,+???????????????????????????????????????C_/WCN&amp;R0@@@@@@@@@@@@@@@@@@@@@LL:YKN?(397????????????????????????????????????????????*4*L03)$,@@@@@@@@@@@@@@@@@@@@@L?Y,U7????????????????????????????????????????????6;M^@3)$,@@@@@@@@@@@@@@@@@@@@@H?S)DO?&gt;_K%???????????????????????????????????????&lt;&gt;_J?6+M!@@@@@@@@@@@@@@@@@@@@@DCN&amp;R3?;]&amp;0???????????????????????????????????????????/9\&amp;NHL:YK@@@@@@@@@@@@@@@@ACN&amp;R3/7+-2????????????????????????????????????????????&lt;M&gt;=TL:YK@@@@@@@@@@@@@@@@@@@@@B_4:MA??39&lt;/??????:-J#?&gt;_L%/?6;M_??????????????????O''2''=N#PP@@@@@@@@@@@@@@@@@@@@@@@@@@+=^,T/??????9&lt;2V?&gt;B?^??-6[C?5JYF????????????????7=26ZACN&amp;R0@@@@@@@@@@@@@@@@@@@@@@@@@@DCN&amp;R3?;]&amp;0?=*3X_?-6[C??????=^,UO???????????&gt;+R(3CN&amp;R0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/=Z*S??-6[C?3)$,?=^,UO?].V;???????[,58CN&amp;R0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@03)$,/&lt;:YKL?N&amp;R3?4Y&lt;9?=69[/?39,+???????39&lt;+?Z,6D@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#&lt;:YKDCN&amp;R1 3)$,XL:YKGCN&amp;R2@3)$, L:YKI?N&amp;R0P3)$,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@a')))] once</body><body package="XMLObjectBindingWizard">tag3	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'tag3.png'&gt;	&lt;md5sum: #[218 26 25 185 123 41 74 179 114 149 217 232 31 153 39 8]&gt;	^[AlphaCompositedImage image: ((Image extent: 16@16 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '\L:YKO?N&amp;R2/3)$,DL:YK@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#&lt;:YKFCN&amp;R1 3)$,TL:YKM?N&amp;R2O3)$,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@FCN&amp;R3?3)$,?&gt;OF"O?W+ES?3)$,?&lt;:YKFCN&amp;R0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B@3)$,?&gt;7Y,O?&lt;&gt;_K?&lt;M&gt;=?&lt;:YKO?N&amp;R3?3)$,PL:YK@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@P3)$,3&lt;:YKO?Z,6G?&lt;&gt;[J?=^,UO?N&amp;R3?3)$,?&lt;:YKN?N&amp;R003)$,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@PL:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,7&lt;:YKACN&amp;R0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@CO3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3O3)$,DL:YK@@@@@@@@@@@@@@@@@@@@@@@@@@@DL:YKM?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKI?N&amp;R0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@03)$,;&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$, L:YK@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@DCN&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R1 3)$,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@XL:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKCCN&amp;R0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B_3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R2_3)$,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@J?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3O3)$,HL:YK@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@P3)$,3&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R2_3)$,DL:YK@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ACN&amp;R3/3)$,?&lt;:YKO?N&amp;R2@3)$,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@LL:YKK?N&amp;R1P3)$,@@@@@@@@@@@@@@@@@@@@@@@a')))] once</body><body package="XMLObjectBindingWizard">xml	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'xml.png'&gt;	&lt;md5sum: #[163 54 105 8 176 217 235 223 29 109 32 176 191 230 2 253]&gt;	^[AlphaCompositedImage image: ((Image extent: 16@16 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???3CN&amp;R1@3)$,PL:YKDCN&amp;R1@3)$,PL:YKDCN&amp;R1@3)$,PL:YKDCN&amp;R1@3)$,PL:YKDCN&amp;R1@3)$,PL:YKCCN&amp;R3?5:1T??O&amp;2/?39,+?&lt;&gt;[J??O&amp;2/?39,+?&lt;&gt;[J??O&amp;2/?39,+?&lt;&gt;[J??O&amp;2/?39,+?&lt;&gt;[J??O&amp;2/?39,+?5:1T?&gt;_L%/?*4*O?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?&lt;M&gt;=?&gt;_L%/?''3I[?9&lt;2V?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&gt;_L%/?''3I[?9&lt;2V?&gt;_L%/?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?''3I[?9&lt;2V?&gt;_L%/?''3I[?3)$,?&lt;:YKO?T)$[?6+M!?&lt;:YKO?N&amp;R3?7[%.?&gt;_L%/?].V;?5JYF?&lt;:YKO?N&amp;R3?9&lt;2V?&gt;_L%/?''3I[?9&lt;2V?=*3X_?39,+?&gt;_K%?=69[/?N&amp;R3?5:1T??39&lt;/?Z,6G?8&lt;ZH??39&lt;/?-6[C?5:1T?&gt;_L%/?''3I[?9&lt;2V?&gt;_L%/?&lt;&gt;_K??O''2?=*3X_?N&amp;R3?4Y&lt;9??39&lt;/? /7/?3)$,?&lt;:YKO?#1(#??O''2??C_/_?''3I[?9&lt;2V?&gt;_L%/?''3I[?3)$,?&gt;B?^??6;M_?9&lt;2V??O&amp;2/?-6[C?3)$,?&lt;:YKO?07;7?&lt;&gt;[J?=69[/?N&amp;R3?9&lt;2V?&gt;_L%/?''3I[?9&lt;2V?&lt;:YKO?N&amp;R3?3)$,?=F_N_?T)$[?3)$,?&lt;:YKO?N&amp;R3?4Y&lt;9?&lt;:YKO?N&amp;R3?3)$,?&gt;_L%/?''3I[?9&lt;2V?&gt;_L%/?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?''3I[?9&lt;2V?&gt;_L%/?''3I[?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?9&lt;2V?&gt;_L%/?#1(#??O''2?&gt;_L%/?''3I[?9&lt;2V?&gt;_L%/?''3I[?9&lt;2V?&gt;_L%/?''3I[?9&lt;2V?&gt;_L%/?''3I[?9&lt;2V??39&lt;/?#1("/3)$,/=:;\+?^.7J?7+-2/=:;\+?^.7J?7+-2/=:;\+?^.7J?7+-2/=:;\+?^.7J?7+-2/=:;\+?^.7J/3)$,@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0@a')))] once</body><body package="XMLObjectBindingWizard">xml2	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'xml2.png'&gt;	&lt;md5sum: #[190 29 12 244 171 45 150 89 136 106 230 89 130 231 63 20]&gt;	^[AlphaCompositedImage image: ((Image extent: 16@16 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@O???2CN&amp;R3/3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?''3IY 3)$,@@@@@@@@@@@@@@@@@O???0C???=@3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?9&lt;2V?&lt;:YKFCN&amp;R0@@@@@@@@@@@C???&lt;@????PL:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&gt;_L%/?N&amp;R3?3)$,XL:YK@@@@@@@????@O???4CN&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?#1(#?:-J#?&gt;_L%/?''3IX0;=69@O???0C???=@3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,PL:YK@C???&lt;@????PL:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKDCN&amp;R0@????@O???4CN&amp;R3?3)$,?&lt;:YKO? /7/?8K=;?&lt;:YKO?N&amp;R3?9&lt;2V?&gt;7Y,O?*4*O?8K=;?&lt;:YKO?N&amp;R1@3)$,@O???0C???=@3)$,?&gt;_L%/?&lt;&gt;_K?&lt;M&gt;=?=^,UO?N&amp;R3?8K=;??39&lt;/?W+ES?6+M!??O&amp;2/?9&lt;.W?8&lt;ZHPL:YK@C???&lt;@????PL:YKO?07;7??O''2?&gt;_L%/?T)$[?5:1T??39&lt;/?W+ES?3)$,?=R&amp;Q/?-6[C??O''2?&gt;_L%$CN&amp;R0@????@O???4CN&amp;R3?3)$,?=R&amp;Q/?*4*O?8&lt;ZH??C_/_? /7/?3)$,?&lt;:YKO?07;7?9&lt;2V?=R&amp;Q/?N&amp;R1@3)$,@O???0C???=@3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,PL:YK@C???&lt;@????PL:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKDCN&amp;R0@????@O???4CN&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R1@3)$,@O???0C???=@3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,PL:YK@C???&lt;@????PL:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKDCN&amp;R0@????@O???2CN&amp;R3_3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKO?N&amp;R3?3)$,?&lt;:YKM?N&amp;R0P3)$,@O???0@a')))] once</body></methods><methods><class-id>WebServices.StructDialog class</class-id> <category>interface specs</category><body package="XMLObjectBindingWizard">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#properties: #(#{UI.PropertyListDictionary} #sizeAutoSave true #positionAutoSave true #sizeType #lastSavedSize #openType #advanced #positionType #lastSavedPosition ) 			#label: 			#(#{Kernel.UserMessage} 				#key: #StructType 				#defaultString: 'Struct type' 				#catalogID: #webservices ) 			#min: #(#{Core.Point} 661 326 ) 			#max: #(#{Core.Point} 661 326 ) 			#bounds: #(#{Graphics.Rectangle} 619 258 1280 584 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0.741627 0 0.892256 0 0.956938 0 0.969697 ) 					#name: #cancelButton 					#model: #cancel 					#label: 					#(#{Kernel.UserMessage} 						#key: #Cancel 						#defaultString: 'Cancel' 						#catalogID: #webservices ) 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0.509569 0 0.892256 0 0.72488 0 0.969697 ) 					#name: #acceptButton 					#model: #acceptTypes 					#label: 					#(#{Kernel.UserMessage} 						#key: #Accept 						#defaultString: 'Accept' 						#catalogID: #webservices ) 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0.736842 0 0.104377 0 0.935407 0 0.185185 ) 					#name: #addTypeButton 					#model: #addType 					#label: 					#(#{Kernel.UserMessage} 						#key: #Add 						#defaultString: 'Add' 						#catalogID: #webservices ) 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0.0526316 0 0.023569 0 0.956938 0 0.454545 ) 					#name: #item 					#label: 					#(#{Kernel.UserMessage} 						#key: #Item 						#defaultString: 'Item' 						#catalogID: #webservices ) ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 0 0.086233 0 0.110429 ) 					#name: #name 					#label: 					#(#{Kernel.UserMessage} 						#key: #Name 						#defaultString: 'Name' 						#catalogID: #webservices ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0.287443 0 0.0981595 0 0.717095 0 0.187117 ) 					#name: #nameAspect 					#model: #nameAspect ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0.736842 0 0.20202 0 0.935407 0 0.282828 ) 					#name: #removeTypeButton 					#model: #removeType 					#label: 					#(#{Kernel.UserMessage} 						#key: #Remove 						#defaultString: 'Remove' 						#catalogID: #webservices ) 					#defaultable: true ) 				#(#{UI.SubCanvasSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0.069378 0 0.191919 0 0.741627 0 0.424242 ) 					#name: #itemType 					#flags: 0 					#majorKey: #{WebServices.TypeSubcanvas} 					#minorKey: #windowSpec 					#clientKey: #itemType ) 				#(#{UI.TableViewSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0.0478469 0 0.464646 602 0.0478469 134 0.464646 ) 					#name: #tableAspect 					#model: #tableAspect 					#style: #system 					#showHGrid: true 					#showVGrid: true 					#selectionStyle: #row ) ) ) )</body></methods><methods><class-id>WebServices.CreateX2O class</class-id> <category>interface specs</category><body package="XMLObjectBindingWizard">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 			#(#{Kernel.UserMessage} 				#key: #ValidateAndLoadXMLToObjectBinding 				#defaultString: 'Validate and Load XML To Object Binding' 				#catalogID: #webservices ) 			#min: #(#{Core.Point} 487 345 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 717 348 1204 693 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.LayoutFrame} 15 0 -157 1 -15 1 -40 1 ) 					#name: #Destination 					#label: 					#(#{Kernel.UserMessage} 						#key: #Destination 						#defaultString: 'Destination' 						#catalogID: #webservices ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} -234 1 -137 1 -115 1 -112 1 ) 					#name: #classNameAspect 					#model: #classNameAspect 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #methodChanged ) 					#isReadOnly: true ) 				#(#{UI.RadioButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 26 0 -76 1 -369 1 -48 1 ) 					#name: #post 					#model: #destinationType 					#label: 					#(#{Kernel.UserMessage} 						#key: #POST 						#defaultString: 'POST url' 						#catalogID: #webservices ) 					#select: #Post ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutFrame} -256 1 -137 1 -240 1 -113 1 ) 					#name: #inLabel 					#label: 					#(#{Kernel.UserMessage} 						#key: #in 						#defaultString: 'in' 						#catalogID: #webservices ) ) 				#(#{UI.RadioButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 26 0 -137 1 -386 1 -110 1 ) 					#name: #method 					#model: #destinationType 					#label: 					#(#{Kernel.UserMessage} 						#key: #Method 						#defaultString: 'Method' 						#catalogID: #webservices ) 					#select: #Method ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 115 0 -137 1 -266 1 -112 1 ) 					#name: #methodName 					#model: #methodName 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #methodChanged ) ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} -110 1 -137 1 -25 1 -113 1 ) 					#name: #selectClassButton 					#model: #selectClass 					#label: 					#(#{Kernel.UserMessage} 						#key: #SelectDots 						#defaultString: 'Select...' 						#catalogID: #webservices ) 					#defaultable: true ) 				#(#{UI.RadioButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 26 0 -102 1 -385 1 -83 1 ) 					#name: #file 					#model: #destinationType 					#label: 					#(#{Kernel.UserMessage} 						#key: #Fileout 						#defaultString: 'File out' 						#catalogID: #webservices ) 					#select: #File ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 115 0 -102 1 -114 1 -77 1 ) 					#name: #fileNameAspect 					#model: #fileNameAspect 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #fileChanged ) 					#isReadOnly: false ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} -110 1 -102 1 -25 1 -77 1 ) 					#name: #browseFileButton 					#model: #browseFile 					#label: 					#(#{Kernel.UserMessage} 						#key: #BrowseDots 						#defaultString: 'Browse...' 						#catalogID: #webservices ) 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 115 0 -75 1 -114 1 -50 1 ) 					#name: #postURLAspect 					#model: #postURLAspect 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #postUrlChanged ) ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.LayoutFrame} 15 0 5 0 -15 1 -160 1 ) 					#name: #specificationAspect 					#model: #specificationAspect 					#tabRequiresControl: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} -108 1 -35 1 -17 1 -10 1 ) 					#name: #generateCBAspect 					#model: #saveSpec 					#label: 					#(#{Kernel.UserMessage} 						#key: #Save 						#defaultString: 'Save' 						#catalogID: #webservices ) 					#defaultable: true ) ) ) )</body></methods><methods><class-id>WebServices.X2OBindingSetting class</class-id> <category>resources</category><body package="XMLObjectBindingWizard">formDefaultMenu	"Tools.MenuEditor new openOnClass: self andSelector: #formDefaultMenu"	&lt;resource: #menu&gt;	^#(#{UI.Menu} #(			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #qualified 					#defaultString: 'qualified' 					#catalogID: #webservices ) 				#nameKey: #qualified 				#value: #qualified ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #unqualified 					#defaultString: 'unqualified' 					#catalogID: #webservices ) 				#nameKey: #unqualified 				#value: #unqualified ) ) #(2 ) nil ) decodeAsLiteralArray</body></methods><methods><class-id>WebServices.X2OBindingSetting class</class-id> <category>interface specs</category><body package="XMLObjectBindingWizard">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 			#(#{Kernel.UserMessage} 				#key: #X2OBindingSettings 				#defaultString: 'XML to Object Binding Settings' 				#catalogID: #webservices ) 			#min: #(#{Core.Point} 410 290 ) 			#max: #(#{Core.Point} 410 290 ) 			#bounds: #(#{Graphics.Rectangle} 780 424 1190 714 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 19 40 ) 					#name: #Label1 					#label: 					#(#{Kernel.UserMessage} 						#key: #NameC 						#defaultString: 'Name:' 						#catalogID: #webservices ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 211 38 382 64 ) 					#name: #nameAspect 					#model: #nameAspect ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 19 70 ) 					#name: #Label2 					#label: 					#(#{Kernel.UserMessage} 						#key: #ElementFormDefaultC 						#defaultString: 'Default Element Form:' 						#catalogID: #webservices ) ) 				#(#{UI.MenuButtonSpec} 					#layout: #(#{Graphics.Rectangle} 211 70 382 96 ) 					#name: #elementFormDefault 					#model: #elementFormDefaultAspect 					#menu: #formDefaultMenu ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 19 100 ) 					#name: #Label3 					#label: 					#(#{Kernel.UserMessage} 						#key: #AttributeFormDefaultC 						#defaultString: 'Default Attribute Form:' 						#catalogID: #webservices ) ) 				#(#{UI.MenuButtonSpec} 					#layout: #(#{Graphics.Rectangle} 211 102 382 128 ) 					#name: #attributeFormDefault 					#model: #attributeFormDefaultAspect 					#menu: #formDefaultMenu ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 19 130 ) 					#name: #Label5 					#label: 					#(#{Kernel.UserMessage} 						#key: #DefaultClassNamespaceC 						#defaultString: 'Default class namespace:' 						#catalogID: #webservices ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 211 134 361 159 ) 					#name: #classNamespaceAspect 					#model: #classNamespaceAspect ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 363 134 384 159 ) 					#name: #ActionButton1 					#model: #selectClassNamespace 					#label: '...' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0.57561 0 0.87931 100 0.52439 24 0.882759 ) 					#name: #acceptButton 					#model: #acceptTypes 					#label: 					#(#{Kernel.UserMessage} 						#key: #Accept 						#defaultString: 'Accept' 						#catalogID: #webservices ) 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0.782927 0 0.87931 80 0.778049 26 0.875862 ) 					#name: #cancelButton 					#model: #cancel 					#label: 					#(#{Kernel.UserMessage} 						#key: #Cancel 						#defaultString: 'Cancel' 						#catalogID: #webservices ) 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 19 255 100 280 ) 					#name: #ActionButton2 					#model: #displayHelpText 					#label: 					#(#{Kernel.UserMessage} 						#key: #HelpDots 						#defaultString: 'Help...' 						#catalogID: #webservices ) 					#defaultable: true ) ) ) )</body></methods><methods><class-id>WebServices.TypeSubcanvas class</class-id> <category>interface specs</category><body package="XMLObjectBindingWizard">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 			#(#{Kernel.UserMessage} 				#key: #Type 				#defaultString: 'Type' 				#catalogID: #webservices ) 			#min: #(#{Core.Point} 287 68 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 849 511 1136 579 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.RadioButtonSpec} 					#layout: #(#{Graphics.LayoutOrigin} 0 0.0209059 0 0.169118 ) 					#name: #simpleTypeCB 					#model: #typeAspect 					#label: 					#(#{Kernel.UserMessage} 						#key: #SimpleType 						#defaultString: 'Simple Type' 						#catalogID: #webservices ) 					#select: #simple ) 				#(#{UI.RadioButtonSpec} 					#layout: #(#{Graphics.LayoutOrigin} 0 0.0174216 0 0.632353 ) 					#name: #complexTypeCB 					#model: #typeAspect 					#label: 					#(#{Kernel.UserMessage} 						#key: #ComplexType 						#defaultString: 'Complex Type' 						#catalogID: #webservices ) 					#select: #complex ) 				#(#{UI.ComboBoxSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0.456446 0 0.102941 0 0.97561 0 0.514706 ) 					#name: #simpleTypeComboBox 					#model: #simpleTypeAspect 					#comboList: #simpleTypes ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0.45993 0 0.573529 0 0.874564 0 0.970588 ) 					#name: #complexTypeAspect 					#model: #complexTypeAspect 					#isReadOnly: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0.881533 0 0.588235 0 0.979094 0 0.955882 ) 					#name: #selectComplexTypeButton 					#model: #getComplexType 					#label: '...' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>WebServices.TestX2OBinding class</class-id> <category>interface specs</category><body package="XMLObjectBindingWizard">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#properties: #(#{UI.PropertyListDictionary} #sizeAutoSave true #positionAutoSave true #sizeType #lastSavedSize #openType #advanced #positionType #lastSavedPosition ) 			#label: 			#(#{Kernel.UserMessage} 				#key: #TestingX2OBinding 				#defaultString: 'Testing XML To Object Binding' 				#catalogID: #webservices ) 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 1024 768 ) 			#bounds: #(#{Graphics.Rectangle} 813 610 1303 964 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.SubCanvasSpec} 					#layout: #(#{Graphics.LayoutFrame} 15 0 15 0 -15 1 -15 1 ) 					#name: #workspaceAspect 					#flags: 0 					#majorKey: #{Tools.Workbook} 					#minorKey: #windowSpec 					#clientKey: #workspaceAspect ) ) ) )</body></methods><methods><class-id>WebServices.BrowseObjectMarshalers class</class-id> <category>interface specs</category><body package="XMLObjectBindingWizard">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#properties: #(#{UI.PropertyListDictionary} #positionAutoSave true #sizeType #specifiedSize #openType #advanced #positionType #lastSavedPosition ) 			#label: 			#(#{Kernel.UserMessage} 				#key: #DescribeComplexTypes 				#defaultString: 'Describe complex types' 				#catalogID: #webservices ) 			#min: #(#{Core.Point} 499 337 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 936 562 1435 899 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.LayoutFrame} 12 0 50 0 -125 1 -4 1 ) 					#name: #typeViewsAspect 					#flags: 15 					#model: #typeViewsAspect 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #selectionChanged ) 					#multipleSelections: true 					#style: #system 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.Rectangle} 11 12 256 41 ) 					#name: #Label1 					#label: 					#(#{Kernel.UserMessage} 						#key: #XMLSchemaTargetNamespace 						#defaultString: 'XML Schema targetNamespace' 						#catalogID: #webservices ) ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} -115 1 50 0 -15 1 75 0 ) 					#name: #addDescriptionButton 					#model: #addDescription 					#label: 					#(#{Kernel.UserMessage} 						#key: #Description1 						#defaultString: 'Description...' 						#catalogID: #webservices ) 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} -115 1 90 0 -15 1 115 0 ) 					#name: #addClassButton 					#model: #addClass 					#label: 					#(#{Kernel.UserMessage} 						#key: #addClass 						#defaultString: 'Add class...' 						#catalogID: #webservices ) 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} -115 1 118 0 -15 1 143 0 ) 					#name: #allFromPackage 					#model: #allFromPackage 					#label: 					#(#{Kernel.UserMessage} 						#key: #addAllFrom 						#defaultString: 'Add all from...' 						#catalogID: #webservices ) 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} -115 1 160 0 -15 1 185 0 ) 					#name: #dropClassButton 					#model: #dropClasses 					#label: 					#(#{Kernel.UserMessage} 						#key: #dropClasses 						#defaultString: 'Drop classes' 						#catalogID: #webservices ) 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} -115 1 -29 1 -15 1 -4 1 ) 					#name: #x2oSettings 					#model: #openSettings 					#label: 					#(#{Kernel.UserMessage} 						#key: #SettingsDots 						#defaultString: 'Settings...' 						#catalogID: #webservices ) 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 262 0 10 0 -15 1 40 0 ) 					#name: #targetNamespaceAspect 					#model: #targetNamespaceAspect ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} -115 1 200 0 -15 1 225 0 ) 					#name: #registerX2O 					#model: #registerX2O 					#label: 					#(#{Kernel.UserMessage} 						#key: #RegisterX2O 						#defaultString: 'Register X2O' 						#catalogID: #webservices ) 					#defaultable: true ) ) ) )</body></methods><methods><class-id>WebServices.CollectionDialog class</class-id> <category>interface specs</category><body package="XMLObjectBindingWizard">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 			#(#{Kernel.UserMessage} 				#key: #CollectionType 				#defaultString: 'Collection type' 				#catalogID: #webservices ) 			#min: #(#{Core.Point} 548 207 ) 			#max: #(#{Core.Point} 548 207 ) 			#bounds: #(#{Graphics.Rectangle} 686 417 1234 624 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 0 0.060219 0 0.562802 ) 					#name: #MinOccurs 					#label: 					#(#{Kernel.UserMessage} 						#key: #MinOccurs 						#defaultString: 'minOccurs:' 						#catalogID: #webservices ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0.355839 0 0.545894 0 0.722628 0 0.681159 ) 					#name: #minOccursAspect 					#model: #minOccursAspect 					#type: #number ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 0 0.0620438 0 0.710145 ) 					#name: #MaxOccurs 					#label: 					#(#{Kernel.UserMessage} 						#key: #MaxOccurs 						#defaultString: 'maxOccurs' 						#catalogID: #webservices ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0.359489 0 0.702899 0 0.722628 0 0.81884 ) 					#name: #maxOccursAspect 					#model: #maxOccursAspect 					#type: #string ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0.722561 0 0.848485 0 0.966463 0 0.969697 ) 					#name: #cancelButton 					#model: #cancel 					#label: 					#(#{Kernel.UserMessage} 						#key: #Cancel 						#defaultString: 'Cancel' 						#catalogID: #webservices ) 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0.463415 0 0.848485 0 0.707317 0 0.969697 ) 					#name: #acceptButton 					#model: #acceptTypes 					#label: 					#(#{Kernel.UserMessage} 						#key: #Accept 						#defaultString: 'Accept' 						#catalogID: #webservices ) 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0.0445104 0 0.0275229 0 0.964392 0 0.495413 ) 					#name: #GroupBox1 					#label: 'Item type' ) 				#(#{UI.SubCanvasSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0.0712166 0 0.110092 0 0.928783 0 0.472477 ) 					#name: #itemType 					#flags: 0 					#majorKey: #{WebServices.TypeSubcanvas} 					#minorKey: #windowSpec 					#clientKey: #itemType ) ) ) )</body></methods><methods><class-id>WebServices.X2OClassSearchModule class</class-id> <category>interface specs</category><body package="XMLObjectBindingWizard">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 			#(#{Kernel.UserMessage} 				#key: #UnlabeledCanvas 				#defaultString: 'Unlabeled Canvas' 				#catalogID: #labels ) 			#bounds: #(#{Graphics.Rectangle} 500 350 700 550 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.SubCanvasSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 0 0 0 1 25 0 ) 					#name: #entryModule 					#flags: 0 					#clientKey: #entryModule ) 				#(#{UI.SubCanvasSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 25 0 0 1 -30 1 ) 					#name: #listModule 					#flags: 0 					#clientKey: #listModule ) 				#(#{UI.CheckBoxSpec} 					#layout: #(#{Graphics.LayoutOrigin} 7 0 -25 1 ) 					#name: #includeSuperclasses 					#model: #includeSuperclasses 					#label: 					#(#{Kernel.UserMessage} 						#key: #IncludeSuperclasses 						#defaultString: 'Include superclasses' 						#catalogID: #webservices ) ) ) ) )</body><body package="XMLObjectBindingWizard">windowSpecWithLabels	"Tools.UIPainter new openOnClass: self andSelector: #windowSpecWithLabels"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 			#(#{Kernel.UserMessage} 				#key: #UnlabeledCanvas 				#defaultString: 'Unlabeled Canvas' 				#catalogID: #labels ) 			#bounds: #(#{Graphics.Rectangle} 500 350 700 550 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.LabelSpec} 					#layout: #(#{UI.AlignmentOrigin} 0 0 25 0 0 1 ) 					#name: #firstLabel 					#label: 					#(#{Kernel.UserMessage} 						#key: #FindC 						#defaultString: 'Find:' 						#catalogID: #labels ) ) 				#(#{UI.SubCanvasSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 25 0 0 1 50 0 ) 					#name: #entryModule 					#flags: 0 					#clientKey: #entryModule ) 				#(#{UI.LabelSpec} 					#layout: #(#{UI.AlignmentOrigin} 0 0 75 0 0 1 ) 					#name: #secondLabel 					#label: 					#(#{Kernel.UserMessage} 						#key: #MatchesC 						#defaultString: 'Matches:' 						#catalogID: #labels ) ) 				#(#{UI.SubCanvasSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 75 0 0 1 -30 1 ) 					#name: #listModule 					#flags: 0 					#clientKey: #listModule ) 				#(#{UI.CheckBoxSpec} 					#layout: #(#{Graphics.LayoutOrigin} 7 0 -25 1 ) 					#name: #includeSuperclasses 					#model: #includeSuperclasses 					#label: 					#(#{Kernel.UserMessage} 						#key: #IncludeSuperclasses 						#defaultString: 'Include superclasses' 						#catalogID: #webservices ) ) ) ) )</body></methods><methods><class-id>WebServices.BindingTool class</class-id> <category>interface specs</category><body package="XMLObjectBindingWizard">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#properties: #(#{UI.PropertyListDictionary} #sizeAutoSave true #openType #advanced #sizeType #lastSavedSize #positionType #lastSavedPosition #labelFromApplication true #positionAutoSave true ) 			#label: #wizardHeader 			#min: #(#{Core.Point} 520 450 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 881 371 1400 802 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.DividerSpec} 					#layout: #(#{Graphics.LayoutFrame} 15 0 -45 1 -15 1 -43 1 ) 					#name: #Divider1 ) 				#(#{UI.SubCanvasSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 50 0 0 1 -50 1 ) 					#name: #subCanvas 					#flags: 0 					#clientKey: #embeddedApplication ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} -225 1 -35 1 -125 1 -10 1 ) 					#name: #next 					#model: #next 					#label: 					#(#{Kernel.UserMessage} 						#key: #Select 						#defaultString: 'Select' 						#catalogID: #webservices ) 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} -115 1 -35 1 -15 1 -10 1 ) 					#name: #cancel 					#model: #cancel 					#label: 					#(#{Kernel.UserMessage} 						#key: #Close 						#defaultString: 'Close' 						#catalogID: #webservices ) 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 10 0 -35 1 110 0 -10 1 ) 					#name: #helpText 					#model: #helpText 					#label: 					#(#{Kernel.UserMessage} 						#key: #HelpDots 						#defaultString: 'Help...' 						#catalogID: #webservices ) 					#defaultable: true ) 				#(#{UI.RegionSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 0 0 0 1 50 0 ) 					#name: #Region1 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #white ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) ) ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication true ) 					#layout: #(#{Graphics.LayoutFrame} -152 1 -2 0 2 1 50 0 ) 					#name: #Label2 					#label: #captionBarImage 					#hasCharacterOrientedLabel: false ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 15 15 ) 					#name: #subcanvasNameLabel 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 330 2855 8027 ) ) 					#label: 'LabelSetByProgram' ) 				#(#{UI.SubCanvasSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 51 0 -2 1 -47 1 ) 					#name: #subCanvas 					#flags: 0 ) ) ) )</body></methods><methods><class-id>WebServices.SetTypesMenu class</class-id> <category>resources</category><body package="XMLObjectBindingWizard">typeMenu	"Tools.MenuEditor new openOnClass: self andSelector: #typeMenu"	&lt;resource: #menu&gt;	^#(#{UI.Menu} #(			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #Simpletype 					#defaultString: 'Simple type' 					#catalogID: #webservices ) 				#nameKey: #schemaWithSimpleTypes 				#value: #setSimpleType ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #ComplextypeDots 					#defaultString: 'Complex type...' 					#catalogID: #webservices ) 				#nameKey: #complexType 				#value: #setComplexType ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #ChoiceType 					#defaultString: 'Choice type...' 					#catalogID: #webservices ) 				#nameKey: #choiceType 				#value: #setChoiceType ) 			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #StructTypeDotDotDot 					#defaultString: 'Struct type...' 					#catalogID: #webservices ) 				#nameKey: #setStructType 				#value: #setStructType ) ) #(4 ) nil ) decodeAsLiteralArray</body></methods><methods><class-id>WebServices.SetClassTypes class</class-id> <category>resources</category><body package="XMLObjectBindingWizard">additionalMenu	"Tools.MenuEditor new openOnClass: self andSelector: #additionalMenu"	&lt;resource: #menu&gt;	^#(#{UI.Menu} #(			#(#{UI.MenuItem} 				#rawLabel: 				#(#{Kernel.UserMessage} 					#key: #RemoveRelation 					#defaultString: 'Remove relation' 					#catalogID: #webservices ) 				#nameKey: #removeSelectedMapping 				#value: #removeSelectedMapping ) ) #(1 ) nil ) decodeAsLiteralArray</body></methods><methods><class-id>WebServices.SetClassTypes class</class-id> <category>interface specs</category><body package="XMLObjectBindingWizard">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#properties: #(#{UI.PropertyListDictionary} #sizeAutoSave true #positionAutoSave true #sizeType #lastSavedSize #openType #advanced #positionType #lastSavedPosition ) 			#label: 			#(#{Kernel.UserMessage} 				#key: #XMLToSmalltalkObjectBinding 				#defaultString: 'XML To Smalltalk Object Binding' 				#catalogID: #webservices ) 			#min: #(#{Core.Point} 730 329 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 936 562 1666 891 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 130 0 5 0 -20 1 30 0 ) 					#name: #classNameAspect 					#flags: 32 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) ) 					#model: #classNameAspect 					#tabable: false 					#isReadOnly: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} -215 1 -40 1 -115 1 -10 1 ) 					#name: #acceptButton 					#model: #acceptType 					#label: 					#(#{Kernel.UserMessage} 						#key: #Accept 						#defaultString: 'Accept' 						#catalogID: #webservices ) 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} -110 1 -40 1 -10 1 -10 1 ) 					#name: #cancelButton 					#model: #cancel 					#label: 					#(#{Kernel.UserMessage} 						#key: #Cancel 						#defaultString: 'Cancel' 						#catalogID: #webservices ) 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 15 0 -40 1 115 0 -10 1 ) 					#name: #displayHelpText 					#model: #displayHelpText 					#label: 'Help' 					#defaultable: true ) 				#(#{UI.DataSetSpec} 					#properties: #(#{UI.PropertyListDictionary} #showHorizontalLines true #allowColumnResizing true #showVerticalLines true #rowLabelsAsButtons false #allowColumnReordering false ) 					#layout: #(#{Graphics.LayoutFrame} 15 0 70 0 -15 1 -50 1 ) 					#name: #datasetAspect 					#isOpaque: true 					#model: #datasetAspect 					#menu: #typesMenu 					#columns: #(						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'selectedRow relation' 							#label: 							#(#{Kernel.UserMessage} 								#key: #Relation 								#defaultString: 'Relation' 								#catalogID: #webservices ) 							#labelIsImage: false 							#width: 65 							#rendererType: #Text 							#editorType: #ComboBox 							#choices: #tagList 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'selectedRow name' 							#label: 							#(#{Kernel.UserMessage} 								#key: #Name 								#defaultString: 'Name' 								#catalogID: #webservices ) 							#labelIsImage: false 							#width: 100 							#rendererType: #Text 							#editorType: #InputField 							#choices: #tagList 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'selectedRow displayString' 							#label: 							#(#{Kernel.UserMessage} 								#key: #Type 								#defaultString: 'Type' 								#catalogID: #webservices ) 							#labelIsImage: false 							#width: 240 							#rendererType: #Text 							#editorType: #None 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'selectedRow required' 							#label: 							#(#{Kernel.UserMessage} 								#key: #Required1 								#defaultString: 'Required' 								#catalogID: #webservices ) 							#labelIsImage: false 							#width: 70 							#rendererType: #CheckBox 							#editorType: #CheckBox 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'selectedRow unbounded' 							#label: 							#(#{Kernel.UserMessage} 								#key: #Collection1 								#defaultString: 'Collection' 								#catalogID: #webservices ) 							#labelIsImage: false 							#width: 80 							#rendererType: #CheckBox 							#editorType: #CheckBox 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'selectedRow aspect' 							#label: 							#(#{Kernel.UserMessage} 								#key: #Aspect 								#defaultString: 'Aspect' 								#catalogID: #webservices ) 							#labelIsImage: false 							#width: 100 							#editorType: #InputField 							#noScroll: false ) ) 					#verticalPolicy: #wrap 					#horizontalPolicy: #wrapNext 					#labelsAsButtons: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.Rectangle} 15 7 119 32 ) 					#name: #DescriptionFor 					#label: 					#(#{Kernel.UserMessage} 						#key: #DescriptionFor 						#defaultString: 'Description for:' 						#catalogID: #webservices ) ) 				#(#{UI.CheckBoxSpec} 					#layout: #(#{Graphics.Rectangle} 15 35 150 60 ) 					#name: #includeSuperclass 					#model: #includeSuperclass 					#label: 					#(#{Kernel.UserMessage} 						#key: #IncludeSuperclass 						#defaultString: 'Include superclass' 						#catalogID: #webservices ) ) ) ) )</body></methods><methods><class-id>WebServices.SelectX2OBinding class</class-id> <category>interface specs</category><body package="XMLObjectBindingWizard">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 			#(#{Kernel.UserMessage} 				#key: #SelectingXMLToObjectBinding1 				#defaultString: 'Selecting XML To Object Binding' 				#catalogID: #webservices ) 			#bounds: #(#{Graphics.Rectangle} 614 272 1306 769 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.LayoutFrame} 30 0 40 0 -30 1 -30 1 ) 					#name: #BindingListAspect 					#model: #bindingListAspect 					#menu: #selectionMenu 					#style: #system 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.LayoutFrame} 15 0 15 0 -15 1 -15 1 ) 					#name: #RegisteredX2OBindings 					#label: 					#(#{Kernel.UserMessage} 						#key: #RegisteredX2OBindings 						#defaultString: 'Registered X2O Bindings' 						#catalogID: #webservices ) ) ) ) )</body></methods><methods><class-id>WebServices.BindingToolTabs class</class-id> <category>accessing</category><body package="XMLObjectBindingWizard">colorsImage	"UIMaskEditor new openOnClass: self andSelector: #colorsImage"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 10@10 depth: 3 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: ((Core.Array new: 5) at: 1 put: Graphics.ColorValue blue; at: 2 put: Graphics.ColorValue magenta; at: 3 put: Graphics.ColorValue white; at: 4 put: (Graphics.ColorValue scaledRed: 3693 scaledGreen: 3693 scaledBlue: 3693); at: 5 put: (Graphics.ColorValue scaledRed: 0 scaledGreen: 4240 scaledBlue: 0); yourself)) usingBits: #[51 51 51 51 51 0 0 0 50 35 68 50 35 0 0 0 50 35 68 50 35 0 0 0 51 51 51 51 51 0 0 0 49 19 34 50 35 0 0 0 49 19 34 50 35 0 0 0 51 51 51 51 51 0 0 0 50 35 0 50 35 0 0 0 50 35 0 50 35 0 0 0 51 51 51 51 51 0 0 0])</body></methods><methods><class-id>WebServices.BindingToolTabs class</class-id> <category>interface specs</category><body package="XMLObjectBindingWizard">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#properties: #(#{UI.PropertyListDictionary} #positionAutoSave true #sizeType #specifiedSize #openType #advanced #positionType #lastSavedPosition ) 			#label: 			#(#{Kernel.UserMessage} 				#key: #BindingTool 				#defaultString: 'Binding Tool' 				#catalogID: #webservices ) 			#min: #(#{Core.Point} 499 337 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 619 258 1118 595 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.TabControlSpec} 					#layout: #(#{Graphics.LayoutFrame} 0 0 0 0 0 1 0 1 ) 					#name: #tabbing 					#model: #tabs 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#focusOutSelector: #exitingClient ) 					#labels: #() ) ) ) )</body></methods><methods><class-id>UI.CommandRegistry class</class-id> <category>commands - web</category><body package="XMLObjectBindingWizard">xmlObjectBindingWizardCommand	&lt;command: #x2oWizard&gt;	^Command		label: (#X2_OTool &lt;&lt; #menus &gt;&gt; 'X2&amp;O Tool' )		group: #web		bindings: #(			#isMacOSX #(F8)			#isMSWindows #(F8)			#isX11 #(F8)		)</body></methods><methods><class-id>Tools.VisualLauncher</class-id> <category>menus - web</category><body package="XMLObjectBindingWizard">menuItemXMLObjectBindingWizard	"Open the XML to object binding wizard"	&lt;vwPrivileged&gt;	&lt;menuItemForCommand: #x2oWizard		icon: #web		nameKey: nil		menu: #(#menuBar tools)		position: 40.00&gt;	WebServices.BindingTool open.</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>Object</name><environment>Core</environment><super></super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Kernel-Objects</category><attributes><package>Kernel-Objects</package></attributes></class><class><name>XMLMarshaler</name><environment>WebServices</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>tag name documentation params attributes </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>XML-To-Object</category><attributes><package>XMLObjectMarshalers</package></attributes></class><class><name>XMLTypeMarshaler</name><environment>WebServices</environment><super>WebServices.XMLMarshaler</super><private>false</private><indexed-type>none</indexed-type><inst-vars>xpath keyRefMarshaler qualified binding </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>XML-To-Object</category><attributes><package>XMLObjectMarshalers</package></attributes></class><class><name>SimpleObjectMarshaler</name><environment>WebServices</environment><super>WebServices.SimpleTypeMarshaler</super><private>false</private><indexed-type>none</indexed-type><inst-vars>conversionId serializationBlock deserializationBlock baseType smalltalkClass restrictions validate </inst-vars><class-inst-vars>validate </class-inst-vars><imports></imports><category>XML-To-Object</category><attributes><package>XMLObjectMarshalers</package></attributes></class><class><name>ChoiceMarshaler</name><environment>WebServices</environment><super>WebServices.SequentialMarshaler</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars>useStructAsChoiceValue </class-inst-vars><imports></imports><category>XML-To-Object</category><attributes><package>XMLObjectMarshalers</package></attributes></class><class><name>Model</name><environment>UI</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>dependents </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Kernel-Objects</category><attributes><package>Kernel-Objects</package></attributes></class><class><name>ApplicationModel</name><environment>UI</environment><super>UI.Model</super><private>false</private><indexed-type>none</indexed-type><inst-vars>builder uiSession eventHandlers </inst-vars><class-inst-vars>savedWindowInformation </class-inst-vars><imports></imports><category>UIBuilder-Framework</category><attributes><package>UIBuilder-Framework</package></attributes></class><class><name>WSSubcanvas</name><environment>WebServices</environment><super>Tools.SequenceableSubcanvas</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Web Services-Tools</category><attributes><package>WizardSupport</package></attributes></class><class><name>ObjectMarshaler</name><environment>WebServices</environment><super>WebServices.XMLTypeMarshaler</super><private>false</private><indexed-type>none</indexed-type><inst-vars>smalltalkClass </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>XML-To-Object</category><attributes><package>XMLObjectMarshalers</package></attributes></class><class><name>ComplexObjectMarshaler</name><environment>WebServices</environment><super>WebServices.ObjectMarshaler</super><private>false</private><indexed-type>none</indexed-type><inst-vars>keyMarshalers abstract anyAttributeMarshaler compositor textMarshaler attributeMarshalers baseType aspectImplementation </inst-vars><class-inst-vars>defaultCompositor </class-inst-vars><imports></imports><category>XML-To-Object</category><attributes><package>XMLObjectMarshalers</package></attributes></class><class><name>StructMarshaler</name><environment>WebServices</environment><super>WebServices.ComplexObjectMarshaler</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>XML-To-Object</category><attributes><package>XMLObjectMarshalers</package></attributes></class><class><name>RelationMarshaler</name><environment>WebServices</environment><super>WebServices.XMLTypeMarshaler</super><private>false</private><indexed-type>none</indexed-type><inst-vars>relation marshaler </inst-vars><class-inst-vars>defaultRefType </class-inst-vars><imports></imports><category>XML-To-Object</category><attributes><package>XMLObjectMarshalers</package></attributes></class><class><name>AttributeMarshaler</name><environment>WebServices</environment><super>WebServices.RelationMarshaler</super><private>false</private><indexed-type>none</indexed-type><inst-vars>fixed </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>XML-To-Object</category><attributes><package>XMLObjectMarshalers</package></attributes></class><class><name>VisualLauncher</name><environment>Tools</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>menuBar toolBar textCollector transcriptView statusBar </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Tools-Misc</category><attributes><package>Tools-Misc</package></attributes></class><class><name>SimpleDialog</name><environment>UI</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>close accept cancel preBuildBlock postBuildBlock postOpenBlock escapeIsCancel parentView useParentColors </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Interface-Dialogs</category><attributes><package>Interface-Dialogs</package></attributes></class><class><name>WSDialog</name><environment>WebServices</environment><super>UI.SimpleDialog</super><private>false</private><indexed-type>none</indexed-type><inst-vars>model </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Web Services-Tools</category><attributes><package>WizardSupport</package></attributes></class><class><name>UnionMarshaler</name><environment>WebServices</environment><super>WebServices.SimpleTypeMarshaler</super><private>false</private><indexed-type>none</indexed-type><inst-vars>marshalers memberTypeMarshalers </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>XML-To-Object</category><attributes><package>XMLObjectMarshalers</package></attributes></class><class><name>LookupKey</name><environment>Core</environment><super>Core.Magnitude</super><private>false</private><indexed-type>none</indexed-type><inst-vars>key </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Collections-Support</category><attributes><package>Collections-Support</package></attributes></class><class><name>WSWizard</name><environment>WebServices</environment><super>Tools.PageSequence</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Web Services-Tools</category><attributes><package>WizardSupport</package></attributes></class><class><name>ModelGroupMarshaler</name><environment>WebServices</environment><super>WebServices.ComplexObjectMarshaler</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>XML-To-Object</category><attributes><package>XMLObjectMarshalers</package></attributes></class><class><name>IncrementalSearchModule</name><environment>Tools</environment><super>Tools.CompositeToolModule</super><private>false</private><indexed-type>none</indexed-type><inst-vars>entryModule listModule firstLabelSource secondLabelSource showLabels searchDriver searchBlock objectToStringBlock guessDriver savedLabel useEagerSelection pasteSelected </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Tools-Modules</category><attributes><package>Tools-Modules</package></attributes></class><class><name>CollectionObjectMarshaler</name><environment>WebServices</environment><super>WebServices.ObjectMarshaler</super><private>false</private><indexed-type>none</indexed-type><inst-vars>elementMarshaler </inst-vars><class-inst-vars>defaultSmalltalkClass </class-inst-vars><imports></imports><category>XML-To-Object</category><attributes><package>XMLObjectMarshalers</package></attributes></class><class><name>AlphaBlendedIcons</name><environment>Smalltalk</environment><super>Core.Assets</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Tools-Resources</package></attributes></class><class><name>ModelAttributeGroupMarshaler</name><environment>WebServices</environment><super>WebServices.ModelGroupMarshaler</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>XML-To-Object</category><attributes><package>XMLObjectMarshalers</package></attributes></class><class><name>AttributeGroupMarshaler</name><environment>WebServices</environment><super>WebServices.RelationMarshaler</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>XML-To-Object</category><attributes><package>XMLObjectMarshalers</package></attributes></class><class><name>ListMarshaler</name><environment>WebServices</environment><super>WebServices.SimpleTypeMarshaler</super><private>false</private><indexed-type>none</indexed-type><inst-vars>marshaler </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>XML-To-Object</category><attributes><package>XMLObjectMarshalers</package></attributes></class></st-source>