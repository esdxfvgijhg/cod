<?xml version="1.0"?><st-source><!-- Name: WizardSupportNotice: Copyright 1999-2015 Cincom Systems, Inc.  All rights reserved.Comment: WizardSupport contains some generic classes that are used to create the Web Services Wizard UI. DbIdentifier: bear73DbTrace: 493894DbUsername: tkoganDbVersion: 8.3 - 0DevelopmentPrerequisites: #(#(#any 'WebServicesNamespace' '') #(#any 'Browser-BrowserUI' '') #(#any 'Tools-NavigationPages' ''))PackageName: WizardSupportParcel: #('WizardSupport')ParcelName: WizardSupportPrerequisiteDescriptions: #(#(#name 'WebServicesNamespace') #(#name 'Browser-BrowserUI') #(#name 'Tools-NavigationPages' #componentType #package))PrerequisiteParcels: #(#('WebServicesNamespace' '') #('Browser-BrowserUI' '') #('Tools-NavigationPages' ''))PrintStringCache: (8.3 - 0,tkogan)Version: 8.3 - 0Date: 2:31:37 PM April 28, 2017 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.3 (apr17.3) of April 28, 2017 on April 28, 2017 at 2:31:37 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>WSDialog</name><environment>WebServices</environment><super>UI.SimpleDialog</super><private>false</private><indexed-type>none</indexed-type><inst-vars>model </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Web Services-Tools</category><attributes><package>WizardSupport</package></attributes></class><comment><class-id>WebServices.WSDialog</class-id><body>WSDialog is abstract class for WS wizard dialogs.Instance Variables:	model	&lt;WsdlBuilderModel&gt;	dialog model</body></comment><class><name>WSWizard</name><environment>WebServices</environment><super>Tools.PageSequence</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Web Services-Tools</category><attributes><package>WizardSupport</package></attributes></class><comment><class-id>WebServices.WSWizard</class-id><body>WSWizard is an abstract subclass of the framework that supports navigating forth and back in a sequence of WSSubcanvas pages.  It inherits all its instvars but expects more specialised types within the ones shown below.Inherited Instance Variables with more specialized contents:	pages	&lt;(Array of: WSSubcanvas)&gt; the wizard pages	client	&lt;WSSubcanvas&gt; instance of currently displayed page</body></comment><class><name>WSSubcanvas</name><environment>WebServices</environment><super>Tools.SequenceableSubcanvas</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Web Services-Tools</category><attributes><package>WizardSupport</package></attributes></class><comment><class-id>WebServices.WSSubcanvas</class-id><body>WSSubcanvas is an abstract subcanvas for WS-specific work.  It inherits its instvars but expects more specialised types within them, as shown below.Inherited Instance Variables with more specialized contents:	model	&lt;WsdlBuilderModel&gt;	the subcanvas model	parent	&lt;WsdlWizard&gt;		the subcanvas parent</body></comment><methods><class-id>WebServices.WSDialog</class-id> <category>accessing</category><body package="WizardSupport">displayHelpText	self class displayHelpText</body><body package="WizardSupport">model	^model</body><body package="WizardSupport">model: anObject	model := anObject</body></methods><methods><class-id>WebServices.WSDialog</class-id> <category>initialize-release</category><body package="WizardSupport">initializeAspects</body><body package="WizardSupport">setModel: aWsdlBuilderModel	model := aWsdlBuilderModel.	self initializeAspects.</body></methods><methods><class-id>WebServices.WSDialog class</class-id> <category>accessing</category><body package="WizardSupport">displayHelpText	(SimpleHelp helpString: self helpText) open</body><body package="WizardSupport">helpText	^''</body><body package="WizardSupport">messageCatalogID	^#webservices</body></methods><methods><class-id>WebServices.WSDialog class</class-id> <category>instance creation</category><body package="WizardSupport">model: aWsdlBuilderModel	^self new		setModel: aWsdlBuilderModel;		yourself</body></methods><methods><class-id>WebServices.WSWizard class</class-id> <category>accessing</category><body package="WizardSupport">messageCatalogID	"This method was generated by UIDefiner."	^#webservices</body></methods><methods><class-id>WebServices.WSSubcanvas</class-id> <category>actions</category><body package="WizardSupport">browseClass: aClass method: selectorSymbol	self class browseClass: aClass method: selectorSymbol</body></methods><methods><class-id>WebServices.WSSubcanvas class</class-id> <category>actions</category><body package="WizardSupport">browseClass: aClass method: selectorSymbol	| m env arr |	arr := aClass findSelector: selectorSymbol asSymbol.	arr notNil		ifTrue: 			[ m := Refactory.Browser.RBMethodDefinition					class: arr first 					selector: selectorSymbol asSymbol.				env := Refactory.Browser.SelectorEnvironment onMethods:  ( Array with: m ).				Refactory.Browser.RefactoringBrowser openOnEnvironment: env ]</body></methods><methods><class-id>WebServices.WSSubcanvas class</class-id> <category>resource accessing</category><body package="WizardSupport">web	^ListIconLibrary visualFor: #web</body></methods><methods><class-id>WebServices.WSSubcanvas class</class-id> <category>accessing</category><body package="WizardSupport">messageCatalogID	^#webservices</body></methods><methods><class-id>WebServices.WSSubcanvas class</class-id> <category>class initialization</category><body package="WizardSupport">initialize	ApplicationModel 		visualAt: #web		put: self web</body></methods><initialize><class-id>WebServices.WSSubcanvas</class-id></initialize><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>SequenceableSubcanvas</name><environment>Tools</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>parent model </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Wizard-Tools</category><attributes><package>Tools-NavigationPages</package></attributes></class><class><name>PageSequence</name><environment>Tools</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>model pages pageIndex client subcanvasName modelClass </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Wizard-Tools</category><attributes><package>Tools-NavigationPages</package></attributes></class><class><name>SimpleDialog</name><environment>UI</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>close accept cancel preBuildBlock postBuildBlock postOpenBlock escapeIsCancel parentView useParentColors </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Interface-Dialogs</category><attributes><package>Interface-Dialogs</package></attributes></class></st-source>