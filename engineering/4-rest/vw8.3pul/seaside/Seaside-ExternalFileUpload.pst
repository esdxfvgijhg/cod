<?xml version="1.0"?><st-source><!-- Name: Seaside-ExternalFileUploadDbIdentifier: bear73DbTrace: 492634DbUsername: jkottDbVersion: 3.2.0 - JohanBrichau.85 1DevelopmentPrerequisites: #(#(#any 'Seaside-Namespace' '') #(#any 'Seaside-Examples' ''))Id: 5879fbb5-51f3-4585-895f-8aaa1b539aadNamespace: SeasidePackageName: Seaside-ExternalFileUploadParcel: #('Seaside-ExternalFileUpload')ParcelName: Seaside-ExternalFileUploadPrerequisiteDescriptions: #(#(#name 'Seaside-Namespace') #(#name 'Seaside-Examples' #componentType #package))PrerequisiteParcels: #(#('Seaside-Namespace' '') #('Seaside-Examples' ''))PrintStringCache: (3.2.0 - JohanBrichau.85 1,jkott)Url: http://smalltalkhub.com/mc/Seaside/Seaside32/main/Seaside-ExternalFileUpload-JohanBrichau.4.mczVersion: 3.2.0 - JohanBrichau.85 1Date: 12:33:47 PM September 9, 2016 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.3 (sep16.2) of September 9, 2016 on September 9, 2016 at 12:33:47 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>WAExternalFile</name><environment>Seaside</environment><super>Seaside.WAObject</super><private>false</private><indexed-type>none</indexed-type><inst-vars>contentType fileName filePath </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Seaside-ExternalFileUpload</category><attributes><package>Seaside-ExternalFileUpload</package></attributes></class><class><name>WAUploadExternalFileCallback</name><environment>Seaside</environment><super>Seaside.WAUploadCallback</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Seaside-ExternalFileUpload</category><attributes><package>Seaside-ExternalFileUpload</package></attributes></class><class><name>WAFileUploadExample</name><environment>Seaside</environment><super>Seaside.WAExampleComponent</super><private>false</private><indexed-type>none</indexed-type><inst-vars>file </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Seaside-ExternalFileUpload-Examples</category><attributes><package>Seaside-ExternalFileUpload</package></attributes></class><class><name>WAExternalFileUploadTag</name><environment>Seaside</environment><super>Seaside.WAFileUploadTag</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Seaside-ExternalFileUpload</category><attributes><package>Seaside-ExternalFileUpload</package></attributes></class><methods><class-id>Seaside.WAExternalFile</class-id> <category>accessing</category><body package="Seaside-ExternalFileUpload">contentType	^ contentType</body><body package="Seaside-ExternalFileUpload">contentType: aMimeTypeOrString	contentType := aMimeTypeOrString isNil		ifFalse: [ aMimeTypeOrString seasideMimeType ]</body><body package="Seaside-ExternalFileUpload">fileName	^ fileName</body><body package="Seaside-ExternalFileUpload">fileName: aString	fileName := aString</body><body package="Seaside-ExternalFileUpload">filePath: aString	filePath := aString</body><body package="Seaside-ExternalFileUpload">fullyQualifiedFilePath	^ filePath</body><body package="Seaside-ExternalFileUpload">rawContents	^ GRPlatform current contentsOfFile: filePath binary: true</body></methods><methods><class-id>Seaside.WAUploadExternalFileCallback</class-id> <category>converting</category><body package="Seaside-ExternalFileUpload">valueForField: anObject	| postFields filename filetype location |	postFields := self requestContext request postFields.	filename := postFields at: key,'.name' ifAbsent:[nil].	filetype := WAMimeType fromString:(postFields at: key,'.content_type' ifAbsent:[nil]).	location := postFields at: key,'.path' ifAbsent:[nil].	^ WAExternalFile new		fileName: filename;		contentType: filetype;		filePath: location</body></methods><methods><class-id>Seaside.WAFileUploadExample</class-id> <category>rendering</category><body package="Seaside-ExternalFileUpload">renderContentOn: html	html form		multipart;		with: [ 					html fileUpload 						callback: [ :f | file := f ].					html submitButton						text: 'Upload file directly' ].						html form		multipart;		fileUploadLocation: 'fileupload';		with: [ 					html externalFileUpload 						callback: [ :ef | file := ef ].					html submitButton						text: 'Upload file via front-end' ].						file		ifNotNil: [ 			html anchor				target: '_blank';				callback: [ 							self requestContext								respond: [ :response | 									response										contentType: file contentType;										document: file rawContents asString;										attachmentWithFileName: file fileName ] ];				with: 'Download ' , file fileName ]</body></methods><methods><class-id>Seaside.WAFileUploadExample</class-id> <category>hooks</category><body package="Seaside-ExternalFileUpload">states	^ Array with: self</body></methods><methods><class-id>Seaside.WAFileUploadExample class</class-id> <category>as yet unclassified</category><body package="Seaside-ExternalFileUpload">description	^ 'A very simple Seaside application'</body><body package="Seaside-ExternalFileUpload">handlerName	^ 'examples/testupload'</body><body package="Seaside-ExternalFileUpload">initialize	WAAdmin register: self asApplicationAt: self handlerName</body></methods><methods><class-id>Seaside.WAExternalFileUploadTag</class-id> <category>callbacks</category><body package="Seaside-ExternalFileUpload">callback: aBlock	"Only called if a file was selected."	self name: (self storeCallback: (WAUploadExternalFileCallback on: aBlock))</body></methods><methods><class-id>Seaside.WAHtmlCanvas</class-id> <category>*seaside-externalfileupload</category><body package="Seaside-ExternalFileUpload">externalFileUpload	^ self brush: WAExternalFileUploadTag new</body></methods><methods><class-id>Seaside.WABasicFormTag</class-id> <category>*seaside-externalfileupload</category><body package="Seaside-ExternalFileUpload">fileUploadLocation: aLocationString	self action: (canvas actionUrl copy addToPath: aLocationString)</body></methods><initialize><class-id>Seaside.WAFileUploadExample</class-id></initialize><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>WAObject</name><environment>Seaside</environment><super>Grease.GRObject</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Seaside-Core</category><attributes><package>Seaside-Core</package></attributes></class><class><name>WAHtmlCanvas</name><environment>Seaside</environment><super>Seaside.WATagCanvas</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Seaside-Canvas</category><attributes><package>Seaside-Canvas</package></attributes></class><class><name>WAUploadCallback</name><environment>Seaside</environment><super>Seaside.WAValueCallback</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Seaside-Core-Callbacks</category><attributes><package>Seaside-Core</package></attributes></class><class><name>WAExampleComponent</name><environment>Seaside</environment><super>Seaside.WAComponent</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Seaside-Examples-Misc</category><attributes><package>Seaside-Examples</package></attributes></class><class><name>WABasicFormTag</name><environment>Seaside</environment><super>Seaside.WATagBrush</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Seaside-Canvas-Tags</category><attributes><package>Seaside-Canvas</package></attributes></class><class><name>WAFileUploadTag</name><environment>Seaside</environment><super>Seaside.WAFormInputTag</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Seaside-Canvas-Tags</category><attributes><package>Seaside-Canvas</package></attributes></class></st-source>