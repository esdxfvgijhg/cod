<?xml version="1.0"?><st-source><!-- Name: Seaside-Tests-RESTDbIdentifier: bear73DbTrace: 494127DbUsername: jkottDbVersion: 3.2.0 - EstebanMaringolo.1 2DevelopmentPrerequisites: #(#(#any 'Seaside-Namespace' '') #(#any 'Seaside-Core' '') #(#any 'Seaside-REST-Core' '') #(#any 'SUnitToo' '') #(#any 'Grease-Tests-VisualWorks-Core' ''))Id: 2abdb0c8-6f23-4512-a37d-be94d64fcf2cNamespace: SeasidePackageName: Seaside-Tests-RESTParcel: #('Seaside-Tests-REST')ParcelName: Seaside-Tests-RESTPrerequisiteDescriptions: #(#(#name 'Seaside-Namespace') #(#name 'Seaside-Core' #componentType #package) #(#name 'Seaside-REST-Core' #componentType #package) #(#name 'SUnitToo' #componentType #package) #(#name 'Grease-Tests-VisualWorks-Core' #componentType #package))PrerequisiteParcels: #(#('Seaside-Namespace' '') #('Seaside-Core' '') #('Seaside-REST-Core' '') #('SUnitToo' '') #('Grease-Tests-VisualWorks-Core' ''))PrintStringCache: (3.2.0 - EstebanMaringolo.1 2,jkott)Url: http://smalltalkhub.com/mc/Seaside/Seaside32/main/Seaside-Tests-REST-EstebanMaringolo.1.mczVersion: 3.2.0 - EstebanMaringolo.1 2Date: 12:17:58 PM September 16, 2016 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.3 (sep16.3) of September 16, 2016 on September 16, 2016 at 12:17:58 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>WAVariableQueryTestRestfulHandler</name><environment>Seaside</environment><super>Seaside.WARestfulHandler</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Seaside-Tests-REST</category><attributes><package>Seaside-Tests-REST</package></attributes></class><comment><class-id>Seaside.WAVariableQueryTestRestfulHandler</class-id><body>I'm a RestfulHandler used in TestCases</body></comment><class><name>WAVariableQueryRouteTest</name><environment>Seaside</environment><super>SUnit.TestCase</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Seaside-Tests-REST</category><attributes><package>Seaside-Tests-REST</package></attributes></class><methods><class-id>Seaside.WAVariableQueryRouteTest</class-id> <category>as yet unclassified</category><body package="Seaside-Tests-REST">handleRequest: aWARequest	| handler context |	handler := WAVariableQueryTestRestfulHandler new yourself.	context := WARequestContext request: aWARequest response: WABufferedResponse new.	[ WACurrentRequestContext use: context during: [ handler handleFiltered: context ] ]		on: WAResponseNotification		do: [ :ex |  ].	^ context response</body></methods><methods><class-id>Seaside.WAVariableQueryTestRestfulHandler</class-id> <category>as yet unclassified</category><body package="Seaside-Tests-REST">fixedRouteWithVariableQuery	&lt;path: 'fixedRouteWithVariableQuery?from={from}&amp;to={to}&amp;limit={limit}'&gt;	&lt;variableQuery: true&gt;	| request |	request := self requestContext request.	self requestContext		respond: [ :response | 			request url queryFields				keysAndValuesDo: [ :key :value | 					response						nextPutAll: key;						nextPut: $=;						nextPutAll: value;						nextPut: $&amp; ] ]</body><body package="Seaside-Tests-REST">parameterRouteWithVariableQuery: pathParameter	&lt;path: 'parameterRouteWithVariableQuery/{pathParameter}'&gt;	&lt;variableQuery: true&gt;	| request |	request := self requestContext request.	self requestContext		respond: [ :response | 			request url queryFields				keysAndValuesDo: [ :key :value | 					response						nextPutAll: key;						nextPut: $=;						nextPutAll: value;						nextPut: $&amp; ] ]</body><body package="Seaside-Tests-REST">routeWithNoQuery	&lt;path: 'routeWithNoQuery'&gt;	&lt;variableQuery: true&gt;	self requestContext respond: [ :response |  ]</body></methods><methods><class-id>Seaside.WAVariableQueryRouteTest</class-id> <category>as yet unclassified</category><body package="Seaside-Tests-REST">testFixedRouteWithVariableQuery	&lt;SeasideOverride&gt;	KnownTestFailure seasideTestIgnore: self running: [	| handler request fields |	handler := WAVariableQueryTestRestfulHandler new.	request := WARequest method: 'GET' uri: 'fixedRouteWithVariableQuery?field1=foo&amp;field2=baz'.	fields := (WAUrl new parseQuery: (self handleRequest: request) contents) queryFields.	self assert: fields size equals: 2.	self assert: (fields at: 'field1') equals: 'foo'.	self assert: (fields at: 'field2') equals: 'baz'	]	because: 'This test could have never worked.'</body><body package="Seaside-Tests-REST">testParameterRouteWithVariableQuery	&lt;SeasideOverride&gt;	KnownTestFailure seasideTestIgnore: self running: [	| handler request fields |	handler := WAVariableQueryTestRestfulHandler new.	request := WARequest method: 'GET' uri: 'parameterRouteWithVariableQuery/pathParameter?field1=foo&amp;field2=baz'.	fields := (WAUrl new parseQuery: (self handleRequest: request) contents) queryFields.	self assert: fields size equals: 2.	self assert: (fields at: 'field1') equals: 'foo'.	self assert: (fields at: 'field2') equals: 'baz'	]	because: 'This test could have never worked.'</body><body package="Seaside-Tests-REST">testRouteWithNoQUery	&lt;SeasideOverride&gt;	KnownTestFailure seasideTestIgnore: self running: [	| handler request fields |	handler := WAVariableQueryTestRestfulHandler new.	request := WARequest method: 'GET' uri: 'routeWithNoQuery'.	fields := (WAUrl new parseQuery: (self handleRequest: request) contents) queryFields.	self assert: fields size equals: 0	]	because: 'This test could have never worked.'</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>TestCase</name><environment>SUnit</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>testSelector </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>SUnit</category><attributes><package>SUnitToo</package></attributes></class><class><name>WARestfulHandler</name><environment>Seaside</environment><super>Seaside.WARequestHandler</super><private>false</private><indexed-type>none</indexed-type><inst-vars>routes </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Seaside-REST-Core-Handler</category><attributes><package>Seaside-REST-Core</package></attributes></class></st-source>