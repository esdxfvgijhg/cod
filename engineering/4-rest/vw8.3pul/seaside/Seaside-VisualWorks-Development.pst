<?xml version="1.0"?><st-source><!-- Name: Seaside-VisualWorks-DevelopmentNotice: Copyright 1999-2014 Cincom Systems, Inc.  All rights reserved.Comment: VisualWorks support for the Seaside-Development package.DbIdentifier: bear73DbTrace: 492592DbUsername: jkottDbVersion: 3.2.0 - 1DevelopmentPrerequisites: #(#(#any 'Grease-VisualWorks-Core' '') #(#any 'Seaside-Namespace' '') #(#any 'Seaside-Core' '') #(#any 'Seaside-Canvas' '') #(#any 'Seaside-Development' ''))PackageName: Seaside-VisualWorks-DevelopmentParcel: #('Seaside-VisualWorks-Development')ParcelName: Seaside-VisualWorks-DevelopmentPrerequisiteDescriptions: #(#(#name 'Grease-VisualWorks-Core' #componentType #package) #(#name 'Seaside-Namespace' #componentType #package) #(#name 'Seaside-Core' #componentType #package) #(#name 'Seaside-Canvas' #componentType #package) #(#name 'Seaside-Development' #componentType #package))PrerequisiteParcels: #(#('Grease-VisualWorks-Core' '') #('Seaside-Namespace' '') #('Seaside-Core' '') #('Seaside-Canvas' '') #('Seaside-Development' ''))PrintStringCache: (3.2.0 - 1,jkott)Version: 3.2.0 - 1Post-Load Block: 	[:package |	Seaside.WAVisualWorksWalkback select.	Seaside.WAVisualWorksInspector select]Pre-Unload Block: 	[:package |	Seaside.WAVisualWorksWalkback unselect.	Seaside.WAVisualWorksInspector unselect]Date: 3:31:28 PM June 30, 2017 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.3 (jun17.5) of June 30, 2017 on June 30, 2017 at 3:31:28 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>WABrowserHaloPlugin</name><environment>Seaside</environment><super>Seaside.WAHaloPlugin</super><private>false</private><indexed-type>objects</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Seaside-VisualWorks-Development</package></attributes></class><comment><class-id>Seaside.WABrowserHaloPlugin</class-id><body>I open a browser on the component class.</body></comment><class><name>WAVisualWorksInspector</name><environment>Seaside</environment><super>Seaside.WAInspector</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Seaside-VisualWorks-Development</package></attributes></class><comment><class-id>Seaside.WAVisualWorksInspector</class-id><body>WAVisualWorksInspector is a VisualWorks-specific implementation of a Seaside inspector tool.</body></comment><class><name>WAVisualWorksWalkback</name><environment>Seaside</environment><super>Seaside.WAWalkback</super><private>false</private><indexed-type>none</indexed-type><inst-vars>context frames </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Seaside-VisualWorks-Development</package></attributes></class><comment><class-id>Seaside.WAVisualWorksWalkback</class-id><body>WAVisualWorksWalkback renders a stack trace for an exception.Instance Variables	context	&lt;Context&gt;	initialContext of the exception	frames	&lt;(Collection of: (Context))&gt;	frames of the stack</body></comment><methods><class-id>Seaside.WABrowserHaloPlugin</class-id> <category>accessing</category><body package="Seaside-VisualWorks-Development">label	^ 'Browser'</body><body package="Seaside-VisualWorks-Development">priority	^ 500</body><body package="Seaside-VisualWorks-Development">tooltip	^ 'Class Browser'</body></methods><methods><class-id>Seaside.WABrowserHaloPlugin</class-id> <category>actions</category><body package="Seaside-VisualWorks-Development">execute	SmalltalkWorkbench browseClass: self root class</body></methods><methods><class-id>Seaside.WAVisualWorksInspector</class-id> <category>private</category><body package="Seaside-VisualWorks-Development">fieldsFor: anObject	"Return a collection of Associations representing labels and values of instance	variables, etc. which should be displayed when inspecting anObject."	^ anObject inspectorFields</body></methods><methods><class-id>Seaside.WAVisualWorksInspector</class-id> <category>actions</category><body package="Seaside-VisualWorks-Development">doIt	| result |	result := super doIt.	selected ifNil: [ ^ result ].	^ selected isNumber		ifTrue: [ self object at: selected put: result ]		ifFalse: [ self object instVarNamed: selected put: result ]</body><body package="Seaside-VisualWorks-Development">evaluate	"  Evaluate the selected input in this context, with a receiver set to the selected object. "	^self object class evaluatorClass new		evaluate: input		in: nil		allowReceiver: true		receiver: self object		environment: self object class environment		notifying: nil		ifFail: [^nil]</body></methods><methods><class-id>Seaside.WAVisualWorksInspector class</class-id> <category>inspecting</category><body package="Seaside-VisualWorks-Development">openNativeInspectorOn: anObject	" Open the native VisualWork inspector on anObject. "	anObject inspect</body></methods><methods><class-id>Seaside.WAVisualWorksWalkback</class-id> <category>rendering</category><body package="Seaside-VisualWorks-Development">renderObject: anObject labelled: aString on: html	html definitionTerm:		[html anchor			callback: [(WAInspectorHaloPlugin on: anObject for: self) execute];			with: aString].	html definitionData: ([anObject printString] toolSafeIn: 10 milliseconds else: ['an ', anObject class name])</body><body package="Seaside-VisualWorks-Development">renderStackFrame: aContext on: html	html definitionList:		[self renderObject: aContext labelled: 'thisContext' on: html.		self renderObject: aContext receiver labelled: 'self' on: html.		aContext tempNames keysAndValuesDo: [:index :name |			self renderObject: (aContext tempAt: index) labelled: name on: html]]</body><body package="Seaside-VisualWorks-Development">renderStackOn: html	html heading level: 3; with: 'Stack Trace'.	html orderedList: [frames do: [:each | html listItem: [self renderStackFrame: each on: html]]]</body></methods><methods><class-id>Seaside.WAVisualWorksWalkback</class-id> <category>accessing</category><body package="Seaside-VisualWorks-Development">frameCount	^frames size</body></methods><methods><class-id>Seaside.WAVisualWorksWalkback</class-id> <category>initialization</category><body package="Seaside-VisualWorks-Development">initializeWithException: anException	self initialize.	exception := anException.	context := anException initialContext.	frames := OrderedCollection new.	[context isNil or: [context stack isNil]] whileFalse:		[frames add: context.		context := context sender]</body></methods><methods><class-id>Core.Dictionary</class-id> <category>*seaside2</category><body package="Seaside-VisualWorks-Development">inspectorFields	^ self</body></methods><methods><class-id>Seaside.WAPainter class</class-id> <category>accessing</category><body package="Seaside-VisualWorks-Development">toolListIcon	^ListIconLibrary visualFor: #seasideComponent</body></methods><methods><class-id>Core.Collection</class-id> <category>*seaside2</category><body package="Seaside-VisualWorks-Development">inspectorFields	| i |	i := 0.	^ self asArray collect: [ :each | i := i + 1. i -&gt; each ]</body></methods><methods><class-id>Seaside.WABrush class</class-id> <category>accessing</category><body package="Seaside-VisualWorks-Development">toolListIcon	^ListIconLibrary visualFor: #seasideTagBrush</body></methods><methods><class-id>Seaside.WAFileLibrary class</class-id> <category>accessing</category><body package="Seaside-VisualWorks-Development">toolListIcon	^ListIconLibrary visualFor: #seasideLibrary</body></methods><methods><class-id>Core.Object</class-id> <category>*seaside2</category><body package="Seaside-VisualWorks-Development">inspectorFields	| members |	members := Array new writeStream.	self class allInstVarNames keysAndValuesDo: [ :index :each  |		members nextPut: each -&gt; (self instVarAt: index) ].	self class isVariable ifTrue: [		1 to: self size do: [ :index |			members nextPut: index -&gt; (self at: index) ] ].	^ members contents</body></methods><methods><class-id>Tools.ListIconLibrary class</class-id> <category>resources</category><body package="Seaside-VisualWorks-Development">seasideComponent16x16	"Tools.UIMaskEditor new openOnClass: self andSelector: #webPage16x16"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 16@16 depth: 5 bitsPerPixel: 8 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(321 321 321)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4786 4786 4786)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4368 4368 4368)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4047 4047 4047)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8094 8094 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(867 867 867)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7837 7837 7837)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5396 5396 5396)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4657 4657 4657)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4978 4978 4978)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4497 4497 4497)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1316 1316 1316)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4240 4240 4240)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1638 1638 1638)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5203 5203 5203)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5524 5524 5524)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: '@0LC@0LC@0LC@0LC@0LC@0LC@1LSD1LSD1LC@0LC@0LC@0LS@0LC@0LSDPLC@0LC@0LCD0LC@0LCD0LQ@0LC@0LC@0(C@0LC@0(NC 8C@0LC@0LR@0LC@0LC@0LG@0LC@0LCC@LCC0&lt;OC0LC@PLC@0LC@0HF@0&lt;OC0&lt;CA @C@0LC@0LKBP$OC0&lt;O@0$@@0LC@0LCCPLCC0&lt;OC0LC@@LC@0LC@0PCB@LC@0LH@0@C@0LC@0LP@0 HB@ HB@L@@0LC@0LCAPLC@0LC@0LC@@LC@0LC@0T@@@@@@@@@@@@C@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0LC@0@a'))</body><body package="Seaside-VisualWorks-Development">seasideComponent16x16mask	"Tools.UIMaskEditor new openOnClass: self andSelector: #webPage16x16mask"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 16@16 depth: 1 bitsPerPixel: 1 palette: CoveragePalette monoMaskPalette usingBits: #[0 0 0 0 31 192 0 0 31 224 0 0 31 240 0 0 31 248 0 0 31 248 0 0 31 248 0 0 31 248 0 0 31 248 0 0 31 248 0 0 31 248 0 0 31 248 0 0 31 248 0 0 31 248 0 0 0 0 0 0 0 0 0 0])</body><body package="Seaside-VisualWorks-Development">seasideLibrary16x16	"Tools.UIMaskEditor new openOnClass: self andSelector: #seasideLibrary16x16"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 16@16 depth: 3 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4111 4111 4111)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5460 5460 5460)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8030 8062 8094)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 8191 0)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: #[85 85 85 85 80 17 16 85 85 85 85 85 2 18 0 85 85 85 80 0 33 32 16 85 85 85 2 0 0 1 32 85 85 80 37 2 34 2 16 85 85 0 0 1 17 1 64 85 85 5 85 5 69 5 80 85 85 1 17 4 84 4 16 85 85 5 101 1 17 1 32 85 85 6 86 2 34 2 16 85 85 1 17 2 34 1 32 85 85 5 85 2 34 2 16 85 85 5 85 2 34 1 5 85 85 2 85 1 33 0 85 85 85 80 0 80 0 5 85 85 85 85 85 85 85 85 85 85])</body><body package="Seaside-VisualWorks-Development">seasideLibrary16x16mask	"Tools.UIMaskEditor new openOnClass: self andSelector: #seasideLibrary16x16mask"	&lt;resource: #image&gt;	^(Image extent: 16@16 depth: 1 bitsPerPixel: 1 palette: CoveragePalette monoMaskPalette usingBits: #[0 124 0 0 0 252 0 0 7 252 0 0 15 252 0 0 31 252 0 0 63 252 0 0 63 252 0 0 63 252 0 0 63 252 0 0 63 252 0 0 63 252 0 0 63 252 0 0 63 248 0 0 63 240 0 0 29 224 0 0 0 0 0 0])</body><body package="Seaside-VisualWorks-Development">seasideStar16x16	"UIMaskEditor new openOnClass: self andSelector: #seasideStar16x16"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 16@16 depth: 6 bitsPerPixel: 8 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6746 7163 7773)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3437 3533 3630)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1253 1349 1478)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6007 6296 6617)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7516 7645 7838)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2024 2441 3212)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(932 996 1188)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7259 7516 7902)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6296 6778 7484)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6392 6713 7292)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6071 6167 5878)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6071 6071 5975)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3212 3148 2955)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4818 5236 5621)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5846 6360 7709)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6681 6553 6199)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7227 7195 7131)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6360 6970 7902)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6232 6328 6392)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7067 6039 3244)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4626 4722 4722)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7452 7581 7677)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8030 8063 8095)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8063 7902 7902)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4593 4465 3726)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6746 6553 5846)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7516 7645 8063)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6681 6424 5396)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2313 2473 2795)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7259 7581 8063)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6938 6906 6617)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6167 6617 7356)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5653 5461 4626)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5557 5910 5910)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6970 7227 7420)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4272 4272 4272)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5172 5621 6264)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4979 4947 4850)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5718 5653 5525)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6874 7003 6938)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6264 6264 6007)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3565 3887 4401)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6392 6874 7067)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5332 5332 5268)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7484 7484 7324)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6713 6199 4979)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7227 7452 7452)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6810 7292 8030)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3919 3887 3726)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2056 2184 2409)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7324 7324 7324)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6296 6617 6778)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5910 6392 7227)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3565 3598 3726)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7773 7902 8095)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6810 7067 7613)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7677 7773 7838)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6617 7003 7549)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4272 4722 5332)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6553 6842 7452)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1702 1767 1895)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3116 3212 3276)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'E!XVE!XVE"@(LQXVE!XVE!XVE!XVE!X F DVE!XVE!XVE!XVE!XYG"H2E!XVE!XVFA +E!XVF@PIA!XVE!XVE",DNP,1DA,ZMPHVE!XVE!X%EAT9M24VNBHAI"8.FQ8VE!HLD#0GE PWE"H*MS(IO!XVE!0PEQXVF  @LA&lt;MG@DVE!X(B!XDE!X-CSHB@Q@VE!XVD1(_I2H]GPXVE!XVE!XVD2(5MBD/LADBE!XVE!XVC28NIC4BEC\0AQXVE!XVE 0QJPX+E"L''M3,/E!XVE!X2A X/E!XVM#\CM!XVE!XVE!XVE!XVE!X%@34VE!XVE!XVE!XVE!XVB34#E!XVE @a'))</body><body package="Seaside-VisualWorks-Development">seasideStar16x16mask	"UIMaskEditor new openOnClass: self andSelector: #seasideStar16x16mask"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 16@16 depth: 1 bitsPerPixel: 1 palette: CoveragePalette monoMaskPalette usingBits: #[1 192 0 0 1 192 0 0 3 192 0 0 227 192 0 0 255 192 0 0 255 254 0 0 127 255 0 0 31 255 0 0 31 254 0 0 31 224 0 0 63 224 0 0 127 240 0 0 125 240 0 0 120 240 0 0 0 112 0 0 0 112 0 0])</body><body package="Seaside-VisualWorks-Development">seasideSun16x16	"UIMaskEditor new openOnClass: self andSelector: #seasideSun16x16"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 16@16 depth: 8 bitsPerPixel: 8 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7195 7163 7163)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2249 3212 5139)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6071 6071 6071)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2505 3501 5589)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7806 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 7806)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(321 1510 3822)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5364 6007 7195)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 6778 3598)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2184 3309 5461)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7163 7163 7227)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2345 3244 5043)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 642 3373)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6649 6778 6810)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 7741 5300)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3790 4369 5461)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 6585 3148)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 5942 482)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 6842 3887)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 6874 3855)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 6296 2120)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 6521 2891)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6199 6199 6199)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2216 3276 5493)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7420 7549 7934)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6489 6521 6585)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 7035 4369)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6842 6874 6874)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3501 4112 5364)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 5204)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6135 6071 6071)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 6649 3437)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 6585 3501)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 5782 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4465 5075 6424)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 3887)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 6392 2377)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3405 4240 6007)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 6521 3244)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7484 7420 7356)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2473 3405 5461)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7870 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6970 7003 6970)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 7870)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7356 7356 7227)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 5653 482)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1188 2216 4304)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7549 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 6456 2666)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 6585 3533)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 7806 2313)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6617 6778 6906)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7099 7099 7099)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 6585 3212)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6328 6328 6328)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1317 2377 4369)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 7227 4561)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7003 7003 6970)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2923 3726 5396)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 7581)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 6649 3501)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7549 7549 7549)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(5268 5878 6874)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 5910 610)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6007 6007 6007)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6103 6521 7388)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7934 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7998 8127 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 6521 2987)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6232 6199 6264)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(899 2184 4690)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 6456 2730)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7645 7838 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7934 7902 7838)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4369 5107 6585)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 6585 3276)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 7773 6392)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7067 7292 7998)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 6681 3180)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6681 6681 6681)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 6521 3019)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 6456 3084)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 6456 2762)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 6489 2730)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 5332)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2088 3276 5429)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6778 6810 6810)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 5878 707)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7998 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1895 3019 5236)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7356 7356 7356)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2505 3405 5236)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 7099 4465)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7741 8127 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 6489 2762)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3276 3983 5557)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 6456 2473)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7163 7163 7099)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6039 6039 6039)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 6585 3341)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 7806 6424)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8030)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2184 3052 4947)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 7549 6360)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 6842 3758)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7741 7741 7613)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 5782 514)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6585 6553 6649)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6392 6553 6842)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 7292 2987)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 6746 3533)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2762 3726 5364)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7035 7549 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7934 7902 7934)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 6456 2505)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(1831 2891 4818)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7003 7099 7356)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 7067)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8063 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8063)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(482 1574 3855)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2152 3116 4947)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7324 7613 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6938 6906 6970)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 5910 96)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 6521 2795)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2955 3983 5942)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6842 6874 6778)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(932 2056 4272)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7356 7934 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 7099)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6489 6649 7035)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8095)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(4882 5429 6553)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(6874 6746 6553)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7099 7099 6970)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7099 7035 7035)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(2634 3501 5107)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 6296 1060)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7356 7292 7195)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(3630 4497 6103)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: (ByteArray fromPackedString: 'P4MCB&amp;(-N(!2P4MCP4MCP4MCQ%,(_F0MRTMCP4MCP4MCP05"U66BAB)1J$MCP4MCP6NIF8P0]55)D%Q(P4MCP4LMX!&amp;B]1M3LW9HIFUCP4MCG",4AA)!TSX6SDU.P4MCP1:@S$M/T3YLSFP_VD5CP4LB G-DBAT6SD1$OV-6P4MCPS)5P4=_SFQ$L%I=P4MCP4XJ#DL9EA@_HB\.H4MCP4MJAVZF^@:KDT@!L4LOP4MCP8\\]B$, 15U 4L?WEYCP4MC"#!:\BH&lt;!TJM@PYGP4MCP4MK^R=''N6@K P0CVTMCP4MCP1 G_0%ZE2Y^P4MCP4MCP4MCP4MCP4MCP4MCP0@a'))</body><body package="Seaside-VisualWorks-Development">seasideSun16x16mask	"UIMaskEditor new openOnClass: self andSelector: #seasideSun16x16mask"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 16@16 depth: 1 bitsPerPixel: 1 palette: CoveragePalette monoMaskPalette usingBits: #[31 128 0 0 63 128 0 0 63 224 0 0 127 240 0 0 127 248 0 0 127 248 0 0 127 252 0 0 127 252 0 0 127 252 0 0 127 248 0 0 127 254 0 0 63 254 0 0 63 254 0 0 31 254 0 0 7 248 0 0 0 0 0 0])</body><body package="Seaside-VisualWorks-Development">seasideTagBrush16x16	"Tools.UIMaskEditor new openOnClass: self andSelector: #seasideTabBrush16x16"	&lt;resource: #image&gt;	^CachedImage on: (Image extent: 16@16 depth: 3 bitsPerPixel: 4 palette: (Graphics.MappedPalette withColors: (#(#(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(0 0 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7934 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7869 8191 8191)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(7934 7901 7837)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 0)) #(#{Graphics.ColorValue} #scaledRed:scaledGreen:scaledBlue: #(8191 8191 7805)) ) collect: [:each | (each at: 1) value perform: (each at: 2) withArguments: (each at: 3)])) usingBits: #[17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 49 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 1 17 17 16 17 17 17 16 17 21 81 17 1 17 17 1 17 85 85 17 16 17 17 1 17 85 85 17 16 17 17 16 17 21 81 17 1 17 20 97 1 17 17 16 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17])</body><body package="Seaside-VisualWorks-Development">seasideTagBrush16x16mask	"Tools.UIMaskEditor new openOnClass: self andSelector: #seasideTagBrush16x16mask"	&lt;resource: #image&gt;	^(Image extent: 16@16 depth: 1 bitsPerPixel: 1 palette: CoveragePalette monoMaskPalette usingBits: #[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 11 208 0 0 23 232 0 0 47 244 0 0 47 244 0 0 23 232 0 0 11 208 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>Object</name><environment>Core</environment><super></super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Kernel-Objects</category><attributes><package>Kernel-Objects</package></attributes></class><class><name>WAInspector</name><environment>Seaside</environment><super>Seaside.WATool</super><private>false</private><indexed-type>none</indexed-type><inst-vars>path selected input </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Seaside-Development-Core</category><attributes><package>Seaside-Development</package></attributes></class><class><name>Collection</name><environment>Core</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Collections-Abstract</category><attributes><package>Collections-Abstract</package></attributes></class><class><name>Dictionary</name><environment>Core</environment><super>Core.Set</super><private>false</private><indexed-type>objects</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Collections-Unordered</category><attributes><package>Collections-Unordered</package></attributes></class><class><name>WAHaloPlugin</name><environment>Seaside</environment><super>Seaside.WAPlugin</super><private>false</private><indexed-type>none</indexed-type><inst-vars>root </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Seaside-Development-Plugins</category><attributes><package>Seaside-Development</package></attributes></class><class><name>WAWalkback</name><environment>Seaside</environment><super>Seaside.WAComponent</super><private>false</private><indexed-type>none</indexed-type><inst-vars>exception limit </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Seaside-Development-Core</category><attributes><package>Seaside-Development</package></attributes></class></st-source>