<?xml version="1.0"?><st-source><!-- Name: RSS-Tests-CoreComment: Unit tests for the "RSS-Core" package.DbIdentifier: bear73DbTrace: 492666DbUsername: jkottDbVersion: 3.2.0 - lr.30 1DevelopmentPrerequisites: #(#(#any 'RSS-Namespace' '') #(#any 'RSS-Core' '') #(#any 'Seaside-Tests-Core' ''))Id: 6aad17b3-1886-490a-9808-f1823a10b935Namespace: RSSPackageName: RSS-Tests-CoreParcel: #('RSS-Tests-Core')ParcelName: RSS-Tests-CorePrerequisiteParcels: #(#('RSS-Namespace' '') #('RSS-Core' '') #('Seaside-Tests-Core' ''))PrintStringCache: (3.2.0 - lr.30 1,jkott)Url: http://smalltalkhub.com/mc/Seaside/Seaside32/main/RSS-Tests-Core-lr.30.mczVersion: 3.2.0 - lr.30 1Date: 12:17:56 PM September 16, 2016 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.3 (sep16.3) of September 16, 2016 on September 16, 2016 at 12:17:56 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>RRComponentTest</name><environment>RSS</environment><super>Seaside.WAContextTest</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>RSS-Tests-Core</category><attributes><package>RSS-Tests-Core</package></attributes></class><class><name>RRRenderTest</name><environment>RSS</environment><super>SUnit.TestCase</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>RSS-Tests-Core</category><attributes><package>RSS-Tests-Core</package></attributes></class><class><name>RRComponentRenderingTest</name><environment>RSS</environment><super>Seaside.WAContextTest</super><private>false</private><indexed-type>none</indexed-type><inst-vars>handler </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>RSS-Tests-Core</category><attributes><package>RSS-Tests-Core</package></attributes></class><class><name>RRRfc822DateTimeTest</name><environment>RSS</environment><super>SUnit.TestCase</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>RSS-Tests-Core</category><attributes><package>RSS-Tests-Core</package></attributes></class><class><name>RRTestComponent</name><environment>RSS</environment><super>RSS.RRComponent</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>RSS-Tests-Core</category><attributes><package>RSS-Tests-Core</package></attributes></class><methods><class-id>RSS.RRComponentTest</class-id> <category>tests</category><body package="RSS-Tests-Core">testCanBeRoot	self deny: RRComponent canBeRoot.	self assert: RRTestComponent canBeRoot</body></methods><methods><class-id>RSS.RRRenderTest</class-id> <category>private</category><body package="RSS-Tests-Core">render: aBlock	^ RRRssRenderCanvas builder render: aBlock</body><body package="RSS-Tests-Core">renderFull: aBlock	^ self renderFull: aBlock rootBlock: nil</body><body package="RSS-Tests-Core">renderFull: aBlock rootBlock: anObject	^ RRRssRenderCanvas builder		fullDocument: true;		rootBlock: anObject;		render: aBlock</body></methods><methods><class-id>RSS.RRRenderTest</class-id> <category>running</category><body package="RSS-Tests-Core">performTest	| context |	context := WARequestContext 		request: nil		response: nil		codec: GRNullCodec new.	WACurrentRequestContext 		use: context		during: [ super performTest ]</body></methods><methods><class-id>RSS.RRRenderTest</class-id> <category>tests</category><body package="RSS-Tests-Core">testEmail	| actual expected |	actual := self render: [ :rss |		rss author: (WAEmailAddress address: 'joesmith@example.com' username: 'Joe Smith') ].	expected := '&lt;author&gt;Joe Smith &amp;lt;joesmith@example.com&amp;gt;&lt;/author&gt;'.	self assert: actual = expected</body><body package="RSS-Tests-Core">testExample	| actualContent expectedContent |	actualContent := self render: [ :rss |		rss description: 'Das super geile Blog.'.		rss contentEncoded: '&lt;p&gt;Das super geile Blog.&lt;/p&gt;'.		rss generator: 'Pier 1.0.9-alpha'.		rss language english ].	expectedContent := '&lt;description&gt;Das super geile Blog.&lt;/description&gt;&lt;content:encoded&gt;&lt;![CDATA[&lt;p&gt;Das super geile Blog.&lt;/p&gt;]]&gt;&lt;/content:encoded&gt;&lt;generator&gt;Pier 1.0.9-alpha&lt;/generator&gt;&lt;language&gt;en&lt;/language&gt;'.	self assert: actualContent = expectedContent</body><body package="RSS-Tests-Core">testRenderExample	| actualContent expectedContent |	actualContent := self render: [ :rss |		rss description: 'Das super geile Blog.'.		rss renderContentEncoded: [ :html |			html paragraph:  'Das super geile Blog.' ].		rss generator: 'Pier 1.0.9-alpha'.		rss language english ].	expectedContent := '&lt;description&gt;Das super geile Blog.&lt;/description&gt;&lt;content:encoded&gt;&amp;lt;p&amp;gt;Das super geile Blog.&amp;lt;/p&amp;gt;&lt;/content:encoded&gt;&lt;generator&gt;Pier 1.0.9-alpha&lt;/generator&gt;&lt;language&gt;en&lt;/language&gt;'.	self assert: actualContent = expectedContent</body><body package="RSS-Tests-Core">testRenderExampleFull	| actualContent expectedContent |	actualContent := self		renderFull: [ :rss |			rss description: 'Das super geile Blog.'.			rss renderContentEncoded: [ :html |				html paragraph:  'Das super geile Blog.' ].			rss generator: 'Pier 1.0.9-alpha'.			rss language english ]		rootBlock: [ :root |			root stylesheet beCss; url: 'http://yourserver.com/path/rss.css' ].		expectedContent := '&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;?xml-stylesheet type="text/css" href="http://yourserver.com/path/rss.css"?&gt;&lt;rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/"&gt;&lt;channel&gt;&lt;description&gt;Das super geile Blog.&lt;/description&gt;&lt;content:encoded&gt;&amp;lt;p&amp;gt;Das super geile Blog.&amp;lt;/p&amp;gt;&lt;/content:encoded&gt;&lt;generator&gt;Pier 1.0.9-alpha&lt;/generator&gt;&lt;language&gt;en&lt;/language&gt;&lt;/channel&gt;&lt;/rss&gt;'.	self assert: actualContent = expectedContent</body><body package="RSS-Tests-Core">testWithLineBreaks	| actualContent expectedContent |	actualContent := self render: [ :rss |		rss withLineBreaks: 'das', GRPlatform current newline, 'super', GRPlatform current newline, 'geile', GRPlatform current newline, 'Blog' ].	expectedContent := 'das&amp;lt;br/&amp;gt;super&amp;lt;br/&amp;gt;geile&amp;lt;br/&amp;gt;Blog'.	self assert: actualContent = expectedContent</body></methods><methods><class-id>RSS.RRRenderTest class</class-id> <category>accessing</category><body package="RSS-Tests-Core">packageNamesUnderTest	^ #('RSS-Core')</body></methods><methods><class-id>RSS.RRComponentRenderingTest</class-id> <category>running</category><body package="RSS-Tests-Core">setUp	handler := RRRssHandler new		rootComponentClass: RRTestComponent;		yourself</body></methods><methods><class-id>RSS.RRComponentRenderingTest</class-id> <category>tests</category><body package="RSS-Tests-Core">testUpdateRoot	 | response |	[ handler handleFiltered: self requestContext ]		on: WAResponseNotification		do: [ :notification | "ignore" ].	response := self requestContext response.	self assert: response status = 200.	self assert: '&lt;?xml version="1.0" encoding="utf-8"?&gt;',		'&lt;?xml-stylesheet type="text/xsl" href="http://www.seaside.st/feed.xsl"?&gt;',		'&lt;rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/"&gt;',		'&lt;channel&gt;&lt;/channel&gt;&lt;/rss&gt;' = response contents</body></methods><methods><class-id>RSS.RRComponentRenderingTest</class-id> <category>configuration</category><body package="RSS-Tests-Core">createHandlers	^ Array with: handler</body></methods><methods><class-id>RSS.RRRfc822DateTimeTest</class-id> <category>private</category><body package="RSS-Tests-Core">render: anObject	^ RRRssRenderCanvas builder render: anObject</body></methods><methods><class-id>RSS.RRRfc822DateTimeTest</class-id> <category>tests</category><body package="RSS-Tests-Core">testNewDateAndTime	| date emailDate |	date := DateAndTime year: 2008 month: 8 day: 1 hour: 9 minute: 4 second: 4 offset: (Duration days: 0 hours: 2 minutes: 0 seconds: 0).	emailDate := RRRfc822DateTime newDateAndTime: date.	self assert: 'Fri, 01 Aug 2008 09:04:04 +0200' = (self render: emailDate)</body><body package="RSS-Tests-Core">testNewDateAndTimeTimezoneString	| date emailDate |	date := DateAndTime year: 2008 month: 8 day: 31 hour: 19 minute: 14 second: 24 offset: Duration zero.	emailDate := RRRfc822DateTime		newDateAndTime: date		offset: (Duration days: 0 hours: -2 minutes: 0 seconds: 0).	self assert: 'Sun, 31 Aug 2008 19:14:24 -0200' = (self render: emailDate)</body><body package="RSS-Tests-Core">testNewDateAndTimeUtc	| date emailDate |	date := DateAndTime year: 2008 month: 8 day: 31 hour: 19 minute: 14 second: 24 offset: (Duration days: 0 hours: 2 minutes: 0 seconds: 0).	emailDate := RRRfc822DateTime newUtc: date.	self assert: 'Sun, 31 Aug 2008 17:14:24 UT' = (self render: emailDate)</body><body package="RSS-Tests-Core">testOffsetString	| duration formatted |	duration := Duration days: 0 hours: 2 minutes: 3 seconds: 0.	formatted := RRRfc822DateTime offsetString: duration.	self assert: '+0203' = formatted.		duration := Duration days: 0 hours: -2 minutes: 0 seconds: 0.	formatted := RRRfc822DateTime offsetString: duration.	self assert: '-0200' = formatted.		duration := Duration days: 0 hours: 0 minutes: -3 seconds: 0.	formatted := RRRfc822DateTime offsetString: duration.	self assert: '-0003' = formatted.		"Test that 0 offset is positive and #offsetString: sends only ANSI messages."	duration:= Duration zero.	formatted := RRRfc822DateTime offsetString: duration.	self assert: '+0000' = formatted</body></methods><methods><class-id>RSS.RRTestComponent</class-id> <category>rendering</category><body package="RSS-Tests-Core">renderContentOn: rss	"do nothing"</body></methods><methods><class-id>RSS.RRTestComponent</class-id> <category>updating</category><body package="RSS-Tests-Core">updateRoot: anRssRoot	super updateRoot: anRssRoot.	anRssRoot stylesheet beXsl		url: 'http://www.seaside.st/feed.xsl'</body></methods><methods><class-id>Grease.GRPackage class</class-id> <category>*rss-tests-core</category><body package="RSS-Tests-Core">rssTestsCore	^ self new		name: 'RSS-Tests-Core';		description: 'Unit tests for the "RSS-Core" package.';		addDependency: 'RSS-Core';		addDependency: 'Seaside-Tests-Core';		url: #seasideUrl;		yourself</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>RRComponent</name><environment>RSS</environment><super>Seaside.WAPainter</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>RSS-Core</category><attributes><package>RSS-Core</package></attributes></class><class><name>TestCase</name><environment>SUnit</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>testSelector </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>SUnit</category><attributes><package>SUnitToo</package></attributes></class><class><name>WAContextTest</name><environment>Seaside</environment><super>SUnit.TestCase</super><private>false</private><indexed-type>none</indexed-type><inst-vars>requestContext </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Seaside-Tests-Core-RequestHandling</category><attributes><package>Seaside-Tests-Core</package></attributes></class></st-source>