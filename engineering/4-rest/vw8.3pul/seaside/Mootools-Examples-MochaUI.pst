<?xml version="1.0"?><st-source><!-- Name: Mootools-Examples-MochaUINotice: Copyright 1999-2014 Cincom Systems, Inc.  All rights reserved.Comment: A test environment for Mootools-MochaUI.DbIdentifier: bear73DbTrace: 492639DbUsername: jkottDbVersion: 3.2.0 - 1DevelopmentPrerequisites: #(#(#any 'Mootools-Namespace' '') #(#any 'Mootools-Core' '') #(#any 'Mootools-MochaUI' '') #(#any 'Seaside-Core' '') #(#any 'Seaside-Canvas' '') #(#any 'Seaside-Component' '') #(#any 'Seaside-Tools-Core' '') #(#any 'Seaside-Session' ''))ExplicitPrerequisites: #()IgnoredPrerequisites: #()PackageName: Mootools-Examples-MochaUIParcel: #('Mootools-Examples-MochaUI')PrerequisiteDescriptions: #(#(#name 'Mootools-Namespace' #componentType #package) #(#name 'Mootools-Core' #componentType #package) #(#name 'Mootools-MochaUI' #componentType #package) #(#name 'Seaside-Core' #componentType #package) #(#name 'Seaside-Canvas' #componentType #package) #(#name 'Seaside-Component' #componentType #package) #(#name 'Seaside-Tools-Core' #componentType #package) #(#name 'Seaside-Session' #componentType #package))PrerequisiteParcels: #(#('Mootools-Namespace' '') #('Mootools-Core' '') #('Mootools-MochaUI' '') #('Seaside-Core' '') #('Seaside-Canvas' '') #('Seaside-Component' '') #('Seaside-Tools-Core' '') #('Seaside-Session' ''))PrintStringCache: (3.2.0 - 1,jkott)Version: 3.2.0 - 1Date: 12:33:47 PM September 9, 2016 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.3 (sep16.2) of September 9, 2016 on September 9, 2016 at 12:33:47 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>MochaDemo</name><environment>Mootools</environment><super>Seaside.WAComponent</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Mootools-Examples-MochaUI</package></attributes></class><comment><class-id>Mootools.MochaDemo</class-id><body>MochaDemo is the main example of how to use MochaUI.</body></comment><class><name>MochaDemoVirtualDesktop</name><environment>Mootools</environment><super>Mootools.MochaDemo</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Mootools-Examples-MochaUI</package></attributes></class><comment><class-id>Mootools.MochaDemoVirtualDesktop</class-id><body>MochaDemoVirtualDesktop demonstrates a "virtual desktop" type application using MochaUI.</body></comment><class><name>MochaDemoLibrary</name><environment>Mootools</environment><super>Seaside.WAFileLibrary</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Mootools-Examples-MochaUI</package></attributes></class><comment><class-id>Mootools.MochaDemoLibrary</class-id><body>MochaDemoLibrary provides pages and scripts for the demos.</body></comment><class><name>MochaDemoNoToolbars</name><environment>Mootools</environment><super>Seaside.WAComponent</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Mootools-Examples-MochaUI</package></attributes></class><comment><class-id>Mootools.MochaDemoNoToolbars</class-id><body>MochaDemoNoToolbars demonstrates using MochaUI without its toolbars.</body></comment><class><name>MochaDemoFixedWidth</name><environment>Mootools</environment><super>Seaside.WAComponent</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Mootools-Examples-MochaUI</package></attributes></class><comment><class-id>Mootools.MochaDemoFixedWidth</class-id><body>MochaDemoFixedWidth demonstrates fixed-width page layout with windows.</body></comment><class><name>MochaDemoModalOnly</name><environment>Mootools</environment><super>Seaside.WAComponent</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Mootools-Examples-MochaUI</package></attributes></class><comment><class-id>Mootools.MochaDemoModalOnly</class-id><body>MochaDemoModalOnly demostrates modal windows.</body></comment><class><name>MochaDemoNoDesktop</name><environment>Mootools</environment><super>Seaside.WAComponent</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Mootools-Examples-MochaUI</package></attributes></class><comment><class-id>Mootools.MochaDemoNoDesktop</class-id><body>MochaDemoNoDesktop demonstates using MochaUI without its virtual desktop.</body></comment><methods><class-id>Mootools.MochaDemo</class-id> <category>rendering</category><body package="Mootools-Examples-MochaUI">renderContentOn: html	html div id: #desktop; with:		[self renderHeaderOn: html.		self renderDockOn: html.		self renderPageOn: html.		self renderFooterOn: html]</body><body package="Mootools-Examples-MochaUI">renderDockOn: html	html div id: #dockWrapper; with:		[html div id: #dock; with:			[html div id: #dockPlacement.			html div id: #dockAutoHide.			html div id: #dockSort; with: [html div id: #dockClear; class: 'clear']]]</body><body package="Mootools-Examples-MochaUI">renderFooterOn: html	html div id: #desktopFooterWrapper; with:		[html div id: #desktopFooter; with:			[html html: '&amp;copy;'.			html text: ' 2007-2008 '.			html anchor target: '_blank'; url: 'http://greghoustondesign.com/'; with: 'Greg Houston'.			html text: ' - MIT License']]</body><body package="Mootools-Examples-MochaUI">renderHeaderOn: html	html div id: #desktopHeader; with:		[self renderTitleOn: html.		self renderNavigationOn: html]</body><body package="Mootools-Examples-MochaUI">renderNavigationExamplesOn: html	html unorderedList with:		[html listItem with: [html anchor id: #ajaxpageLinkCheck; url: MochaDemoLibrary / #lipsumHtml; with: 'Ajax/XHR Demo'].		html listItem with: [html anchor id: #jsonLink; url: MochaDemoLibrary / #jsonwindowsdataJs; with: 'Json Demo'].		html listItem with: [html anchor id: #youtubeLinkCheck; url: MochaDemoLibrary / #youtubeHtml; with: 'IFrame: YouTube'].		html listItem with: [html anchor id: #slideshareLinkCheck; url: MochaDemoLibrary / #slideshareHtml; with: 'IFrame: Slideshare'].		html listItem with: [html anchor id: #accordiantestLinkCheck; url: MochaDemoLibrary / #accordiandemoHtml; with: 'Accordian'].		html listItem with: [html anchor id: #clockLinkCheck; url: MochaDemoLibrary / #coolclockHtml; with: 'Widget: Clock'].		html listItem with: [html anchor id: #parametricsLinkCheck; url: MochaDemoLibrary / #parametricsHtml; with: 'Window Parametrics'].		html listItem class: 'divider'; with:			[html anchor class: 'returnFalse arrow-right'; url: ''; with: 'Tests'.			html unorderedList with:				[html listItem with: [html anchor id: #windoweventsLinkCheck; url: MochaDemoLibrary / #eventsHtml; with: 'Window Events'].				html listItem with: [html anchor id: #containertestLinkCheck; url: MochaDemoLibrary / #lipsumHtml; with: 'Container Test'].				html listItem with: [html anchor id: #iframetestLinkCheck; url: MochaDemoLibrary / #iframetestHtml; with: 'IFrame Test'].				html listItem with: [html anchor id: #noCanvasLinkCheck; url: MochaDemoLibrary / #lipsumHtml; with: 'No Canvas Body']]].		html listItem class: 'dividier'; with:			[html anchor class: 'returnFalse arrow-right'; url: ''; with: 'Starters'.			html unorderedList with:				[html listItem with: [html anchor target: '_blank'; callback: [self call: MochaDemoVirtualDesktop new]; with: 'Virtual Desktop'].				html listItem with: [html anchor target: '_blank'; callback: [self call: MochaDemoFixedWidth new]; with: 'Fixed Width'].				html listItem with: [html anchor target: '_blank'; callback: [self call: MochaDemoNoToolbars new]; with: 'No Toolbars'].				html listItem with: [html anchor target: '_blank'; callback: [self call: MochaDemoNoDesktop new]; with: 'No Desktop'].				html listItem with: [html anchor target: '_blank'; callback: [self call: MochaDemoModalOnly new]; with: 'Modal Only']]]]</body><body package="Mootools-Examples-MochaUI">renderNavigationHelpOn: html	html unorderedList with:		[html listItem with: [html anchor id: #featuresLinkCheck; url: 'pages/features.html'; with: 'Features'].		html listItem class: 'divider'; with: [html anchor target: '_blank'; url: 'http://mochaui.com/docs/'; with: 'Documentation'].		html listItem class: 'divider'; with: [html anchor id: #aboutLink; url: 'pages/about.html'; with: 'About']]</body><body package="Mootools-Examples-MochaUI">renderNavigationOn: html	html div id: #desktopNavbar; with:		[html unorderedList with:			[html listItem with:				[html anchor class: 'returnFalse'; url: ''; with: 'Examples'.				self renderNavigationExamplesOn: html].			html listItem with:				[html anchor class: 'returnFalse'; url: ''; with: 'View'.				self renderNavigationViewOn: html].			html listItem with:				[html anchor class: 'returnFalse'; url: ''; with: 'Tools'.				self renderNavigationToolsOn: html].			html listItem with:				[html anchor class: 'returnFalse'; url: ''; with: 'Workspace'.				self renderNavigationWorkspaceOn: html].			html listItem with:				[html anchor class: 'returnFalse'; url: ''; with: 'Help'.				self renderNavigationHelpOn: html]].		html div class: 'toolbox divider2'; with: [html div id: #spinnerWrapper; with: [html div id: #spinner]].		html div class: 'toolbox divider2'; with:			[html image url: MochaLibrary / #cogGif; onClick: 'MochaUI.notification("Do Something")'; width: 16; height: 16; altText: ''.			html image url: MochaLibrary / #windowsGif; onClick: 'MochaUI.notification("Do Something")'; width: 16; height: 16; altText: ''.			html image url: MochaLibrary / #sheetGif; onClick: 'MochaUI.notification("Do Something")'; width: 16; height: 16; altText: '']]</body><body package="Mootools-Examples-MochaUI">renderNavigationToolsOn: html	html unorderedList with:		[html listItem with: [html anchor id: #builderLinkCheck; url: 'plugins/windowform/'; with: 'Window Builder']]</body><body package="Mootools-Examples-MochaUI">renderNavigationViewOn: html	html unorderedList with:		[html listItem with: [html anchor id: #cascadeLink; url: ''; with: 'Cascade Windows'].		html listItem with: [html anchor id: #tileLink; url: ''; with: 'Tile Windows'].		html listItem with: [html anchor id: #minimizeLink; url: ''; with: 'Minimize All Windows'].		html listItem with: [html anchor id: #closeLink; url: ''; with: 'Close All Windows']]</body><body package="Mootools-Examples-MochaUI">renderNavigationWorkspaceOn: html	html unorderedList with:		[html listItem with: [html anchor id: #saveWorkspaceLink; url: ''; with: 'Save Workspace'].		html listItem with: [html anchor id: #loadWorkspaceLink; url: ''; with: 'Load Workspace']]</body><body package="Mootools-Examples-MochaUI">renderPageOn: html	html div id: #pageWrapper; with: []</body><body package="Mootools-Examples-MochaUI">renderTitleOn: html	html div id: #desktopTitlebarWrapper; with:		[html div id: #desktopTitlebar; with:			[html heading level: 1; class: 'applicationTitle'; with: 'Mocha UI'.			html heading level: 2; class: 'tagline'; with:				[html text: 'A Web Applications '.				html span class: 'taglineEm'; with: 'User Interface library'].			html div id: #topNav; with:				[html unorderedList class: 'menu-right'; with:					[html listItem with:						[html text: 'Welcome '.						html anchor onClick: 'MochaUI.notification("Do Something"); return false;'; with: 'Demo User'.						html text: '.'].					html listItem with:						[html anchor onClick: 'MochaUI.notification("Do Something"); return false;'; with: 'Sign Out']]]]]</body></methods><methods><class-id>Mootools.MochaDemo</class-id> <category>updating</category><body package="Mootools-Examples-MochaUI">javascriptInitializationUrl	^MochaDemoLibrary / #mochaInitJs</body><body package="Mootools-Examples-MochaUI">updateRoot: anHtmlRoot	super updateRoot: anHtmlRoot.	anHtmlRoot script url: self javascriptInitializationUrl.	anHtmlRoot title: 'MochaUI - A Web Applications User Interface Library'</body></methods><methods><class-id>Mootools.MochaDemo class</class-id> <category>class initialization</category><body package="Mootools-Examples-MochaUI">initialize	(WAAdmin register: self asApplicationAt: 'examples/mootools/mocha-ui/demo')		addLibrary: MootoolsLibrary;		addLibrary: MochaLibrary</body></methods><methods><class-id>Mootools.MochaDemoVirtualDesktop</class-id> <category>updating</category><body package="Mootools-Examples-MochaUI">javascriptInitializationUrl	^MochaDemoLibrary / #demoVirtualDesktopInitJs</body></methods><methods><class-id>Mootools.MochaDemoVirtualDesktop</class-id> <category>hooks</category><body package="Mootools-Examples-MochaUI">style	^'#pageWrapper {	background: #5b93cc;}.desktopIcon {	margin: 15px 0 0 15px;}'</body></methods><methods><class-id>Mootools.MochaDemoVirtualDesktop</class-id> <category>rendering</category><body package="Mootools-Examples-MochaUI">renderPageOn: html	html div id: #pageWrapper; with:		[html div id: #page; with:			[html image class: 'desktopIcon'; url: MochaLibrary / #globePng; altText: 'Camera'; width: 48; height: 48; onLoad: 'fixPNG(this)'.			html break.			html image class: 'desktopIcon'; url: MochaLibrary / #globePng; altText: 'Camera'; width: 48; height: 48; onLoad: 'fixPNG(this)'.			html break.			html image class: 'desktopIcon'; url: MochaLibrary / #globePng; altText: 'Camera'; width: 48; height: 48; onLoad: 'fixPNG(this)'.			html break.			html image class: 'desktopIcon'; url: MochaLibrary / #globePng; altText: 'Camera'; width: 48; height: 48; onLoad: 'fixPNG(this)'.			html break.			html image class: 'desktopIcon'; url: MochaLibrary / #globePng; altText: 'Camera'; width: 48; height: 48; onLoad: 'fixPNG(this)'.			html break]]</body></methods><methods><class-id>Mootools.MochaDemoVirtualDesktop class</class-id> <category>class initialization</category><body package="Mootools-Examples-MochaUI">initialize	(WAAdmin register: self asApplicationAt: 'examples/mootools/mocha-ui/demo-virtual-desktop')		addLibrary: MootoolsLibrary;		addLibrary: MochaLibrary</body></methods><methods><class-id>Mootools.MochaDemoLibrary</class-id> <category>pages/</category><body package="Mootools-Examples-MochaUI">aboutHtml	^ '&lt;p&gt;0.9.5&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Author: &lt;/strong&gt; &lt;a href="http://greghoustondesign.com/"&gt;Greg Houston&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Contributors:&lt;/strong&gt;&lt;br /&gt;Scott F. Frederick&lt;br /&gt;Joel Lindau&lt;/p&gt;&lt;p&gt;&lt;strong&gt;License:&lt;/strong&gt; MIT License&lt;/p&gt;'</body><body package="Mootools-Examples-MochaUI">accordiandemoHtml	^ '&lt;div class="accordianWrapper"&gt;&lt;div class="mochaAccordion"&gt;	&lt;h3 class="accordianToggler topToggler"&gt;Lorem Ipsum&lt;/h3&gt;	&lt;div class="accordianElement"&gt;		&lt;div class="accordianContent"&gt;			&lt;h3&gt;Lorem Ipsum Dolor Sit Amet&lt;/h3&gt;			&lt;p&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean consequat dignissim pede. Aliquam erat volutpat. In ac nulla. Phasellus sapien.&lt;/p&gt;		&lt;/div&gt;	&lt;/div&gt;	&lt;h3 class="accordianToggler"&gt;Dolor Sit&lt;/h3&gt;	&lt;div class="accordianElement"&gt;		&lt;div class="accordianContent"&gt;			&lt;h3&gt;Lorem Ipsum Dolor Sit Amet&lt;/h3&gt;			&lt;p&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean consequat dignissim pede. Aliquam erat volutpat. In ac nulla. Phasellus sapien.&lt;/p&gt; 		&lt;/div&gt;	&lt;/div&gt;	&lt;h3 class="accordianToggler bottomToggler"&gt;Amet&lt;/h3&gt;	&lt;div class="accordianElement"&gt;		&lt;div class="accordianContent"&gt;			&lt;h3&gt;Lorem Ipsum Dolor Sit Amet&lt;/h3&gt;			&lt;p&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean consequat dignissim pede. Aliquam erat volutpat. In ac nulla. Phasellus sapien.&lt;/p&gt;		&lt;/div&gt;	&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;'</body><body package="Mootools-Examples-MochaUI">downloadHtml	^ '&lt;p&gt;Includes all the required assets plus examples.&lt;/p&gt;&lt;p&gt;&lt;a target="_blank" href="http://code.google.com/p/mocha-ui/downloads/list"&gt;Download MochaUI version 0.9.5&lt;/a&gt;&lt;/p&gt;'</body><body package="Mootools-Examples-MochaUI">eventsHtml	^ '&lt;p&gt;You can add functions to windows that fire on the following events:&lt;/p&gt;&lt;ul&gt;	&lt;li&gt;onBeforeBuild&lt;/li&gt;	&lt;li&gt;onContentLoaded&lt;/li&gt;	&lt;li&gt;onFocus&lt;/li&gt;	&lt;li&gt;onResize&lt;/li&gt;	&lt;li&gt;onMinimize&lt;/li&gt;	&lt;li&gt;onMaximize&lt;/li&gt;	&lt;li&gt;onClose&lt;/li&gt;	&lt;li&gt;onCloseComplete&lt;/li&gt;&lt;/ul&gt;'</body><body package="Mootools-Examples-MochaUI">featuresgeneralHtml	^ '&lt;ul&gt;	&lt;li&gt;Minimal HTML markup required.&lt;/li&gt;	&lt;li&gt;Tested in Firefox 3, Internet Explorer 6 &amp;amp; 7, Safari 3, and Opera 9.5.&lt;/li&gt;	&lt;li&gt;Validates as XHTML 1.0 Strict if you use no target attributes in your anchors and validates as XHTML 1.0 Transitional if you do.&lt;/li&gt;&lt;/ul&gt;'</body><body package="Mootools-Examples-MochaUI">featureslayoutHtml	^ '&lt;ul&gt;	&lt;li&gt;Horizontally and vertically fluid layout module with columns and panels.&lt;/li&gt;	&lt;li&gt;Optional toolbars.&lt;/li&gt;	&lt;li&gt;Columns and panels can be collapsed, expanded, and resized.&lt;/li&gt;	&lt;li&gt;Panels can be tabbed.&lt;/li&gt;	&lt;li&gt;Panel content can be loaded with innerHTML, XHR, or an iFrame.&lt;/li&gt;	&lt;li&gt;Toolboxes can be inserted in the toolbars.&lt;/li&gt;&lt;/ul&gt;'</body><body package="Mootools-Examples-MochaUI">featurestabsHtml	^ '&lt;div class="toolbarTabs"&gt;	&lt;!-- &lt;div style="float:right;padding-top:3px;"&gt;&lt;img src="images/icons/help.gif" width="16" height="16" alt="Help" /&gt;&lt;/div&gt; --&gt;	&lt;ul id="featuresTabs" class="tab-menu"&gt;		&lt;li id="featuresLayoutLink" class="selected"&gt;&lt;a&gt;Layout&lt;/a&gt;&lt;/li&gt;		&lt;li id="featuresWindowsLink"&gt;&lt;a&gt;Windows&lt;/a&gt;&lt;/li&gt;		&lt;li id="featuresGeneralLink"&gt;&lt;a&gt;General&lt;/a&gt;&lt;/li&gt;	&lt;/ul&gt;	&lt;div class="clear"&gt;&lt;/div&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;	MochaUI.initializeTabs(''featuresTabs'');	$(''featuresLayoutLink'').addEvent(''click'', function(e){		MochaUI.updateContent({			''element'':  $(''features''),			''url'':       "', (MochaDemoLibrary / #featureslayoutHtml) greaseString, '"		});	});	$(''featuresWindowsLink'').addEvent(''click'', function(e){		MochaUI.updateContent({			''element'':  $(''features''),			''url'':       "', (MochaDemoLibrary / #featureswindowsHtml) greaseString, '"		});	});	$(''featuresGeneralLink'').addEvent(''click'', function(e){		MochaUI.updateContent({			''element'':  $(''features''),			''url'':       "', (MochaDemoLibrary / #featuresgeneralHtml) greaseString, '"		});	});&lt;/script&gt;'</body><body package="Mootools-Examples-MochaUI">featureswindowsHtml	^ '&lt;ul&gt;	&lt;li&gt;The windows and their drop shadows are drawn with the canvas element.&lt;/li&gt;	&lt;li&gt;Windows can be focused, dragged, resized, collapsed/expanded, maximized/restored, minimized/restored and closed.&lt;/li&gt;	&lt;li&gt;Windows are resizable in 8 directions.&lt;/li&gt;		&lt;li&gt;Adjustable rounded corner radius.&lt;/li&gt;	&lt;li&gt;Adjustable shadow blur.&lt;/li&gt;	&lt;li&gt;Windows can have tabs and toolbars.&lt;/li&gt;	&lt;li&gt;Dynamically create new windows on demand and load their content with innerHTML, XHR, or an iFrame.&lt;/li&gt;	&lt;li&gt;The ability to create multiple new windows from a single Json data request.&lt;/li&gt;		&lt;li&gt;Create modal and notification dialog windows.&lt;/li&gt;	&lt;li&gt;Dynamically update window content.&lt;/li&gt;&lt;/ul&gt;'</body><body package="Mootools-Examples-MochaUI">fileviewHtml	^ '&lt;ul id="tree1" class="tree"&gt;	&lt;li class="folder f-open root"&gt;&lt;span&gt;Examples&lt;/span&gt;		&lt;ul&gt;			&lt;li id="todoLink" class="doc"&gt;&lt;span&gt;&lt;a&gt;Lorem Ipsum&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;			&lt;li id="youtube4Link" class="doc"&gt;&lt;span&gt;&lt;a&gt;Zero7 - Crosses&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;		&lt;/ul&gt;	&lt;/li&gt;&lt;/ul&gt;&lt;script type="text/javascript"&gt;	$(''todoLink'').addEvent(''click'', function(e){		MochaUI.updateContent({			''element'': $(''mainPanel''),			''loadMethod'': ''xhr'',			''url'': "', (MochaDemoLibrary / #lipsumHtml) greaseString, '",			''title'': ''Lorem Ipsum'',			''padding'': { top: 8, right: 8, bottom: 8, left: 8 }		});		$(''mainPanel'').setStyle(''background'',''#fff'');	});	$(''youtube4Link'').addEvent(''click'', function(e){		MochaUI.updateContent({			''element'': $(''mainPanel''),			''loadMethod'': ''iframe'',			''url'': "', (MochaDemoLibrary / #youtube4Html) greaseString, '",			''title'': ''Zero7 - Crosses'',			''padding'': { top: 0, right: 0, bottom: 0, left: 0 }		});		$(''mainPanel'').setStyle(''background'',''#000'');	});&lt;/script&gt;'</body><body package="Mootools-Examples-MochaUI">iframetestHtml	^ '&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;&lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr"&gt;&lt;head&gt;	&lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /&gt;	&lt;link type="stylesheet" href="', (MootoolsLibrary / #contentCss) greaseString, '" /&gt;	&lt;link type="stylesheet" href="', (MootoolsLibrary / #uiCss) greaseString, '" /&gt;	&lt;script type="text/javascript" src="', (MootoolsLibrary / #mootools123corencJs) greaseString, '"&gt;&lt;/script&gt;	&lt;script type="text/javascript" src="', (MootoolsLibrary / #mootools1231morencJs) greaseString, '"&gt;&lt;/script&gt;	&lt;/head&gt;&lt;body&gt;&lt;div style="padding: 10px;"&gt;	&lt;ul&gt;		&lt;li&gt;&lt;a href="#1" onclick="new parent.MochaUI.Window({x: 100, y: 100});"&gt;Open a new window in the parent document.&lt;/a&gt;&lt;/li&gt;		&lt;li&gt;&lt;a href="#2" onclick="parent.$(''iframetest_dockTabText'').highlight();"&gt;Highlight dock tab&lt;/a&gt;&lt;/li&gt;		&lt;li&gt;&lt;a href="#2" onclick="parent.MochaUI.reloadIframe(''iframetest_iframe'');"&gt;Reload&lt;/a&gt;&lt;/li&gt;		&lt;li&gt;&lt;a href="#2" onclick="parent.MochaUI.closeWindow(parent.$(''iframetest''));"&gt;Close this window&lt;/a&gt;&lt;/li&gt;	&lt;/ul&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;'</body><body package="Mootools-Examples-MochaUI">lipsumHtml	^ '&lt;p&gt;This content was loaded via an XMLHttpRequest.&lt;/p&gt;'</body><body package="Mootools-Examples-MochaUI">overviewHtml	^ '&lt;p&gt;MochaUI is a web applications user interface library built on the Mootools javascript framework.&lt;/p&gt;&lt;h3&gt;Uses&lt;/h3&gt;&lt;ul&gt;	&lt;li&gt;Web Applications&lt;/li&gt;	&lt;li&gt;Virtual Desktops&lt;/li&gt;	&lt;li&gt;Web Sites&lt;/li&gt;	&lt;li&gt;Widgets&lt;/li&gt;	&lt;li&gt;Standalone Dialog Windows, Modals, and Wizards&lt;/li&gt;&lt;/ul&gt;'</body><body package="Mootools-Examples-MochaUI">paneltabsHtml	^ '&lt;div class="toolbarTabs"&gt;	&lt;ul id="panelTabs" class="tab-menu"&gt;		&lt;li id="panelTabs1Link" class="selected"&gt;&lt;a&gt;Overview&lt;/a&gt;&lt;/li&gt;		&lt;li id="panelTabs2Link"&gt;&lt;a&gt;Download&lt;/a&gt;&lt;/li&gt;	&lt;/ul&gt;	&lt;div class="clear"&gt;&lt;/div&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;	MochaUI.initializeTabs(''panelTabs'');	$(''panelTabs1Link'').addEvent(''click'', function(e){		MochaUI.updateContent({			''element'':  $(''help-panel''),			''url'':       "', (MochaDemoLibrary / #overviewHtml) greaseString, '"		});	});	$(''panelTabs2Link'').addEvent(''click'', function(e){		MochaUI.updateContent({			''element'':  $(''help-panel''),			''url'':       "', (MochaDemoLibrary / #downloadHtml) greaseString, '"		});	});&lt;/script&gt;'</body><body package="Mootools-Examples-MochaUI">slideshareHtml	^ '&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;&lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr"&gt;&lt;head&gt;&lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /&gt;&lt;script type="text/javascript" src="', (MootoolsLibrary / #mootools123corencJs) greaseString, '"&gt;&lt;/script&gt;&lt;script type="text/javascript" src="', (MootoolsLibrary / #mootools1231morencJs) greaseString, '"&gt;&lt;/script&gt;	&lt;style type="text/css"&gt;	/* hide from ie on mac \*/	html {		height: 100%;		overflow: hidden;	}	#flashcontent {		height: 100%;	}	/* end hide */	body {		height: 100%;		margin: 0;		padding: 0;		background: #000;	}&lt;/style&gt;&lt;/head&gt;&lt;body&gt;	&lt;div id="flashcontent"&gt;		&lt;strong&gt;You need to upgrade your Flash Player&lt;/strong&gt;	&lt;/div&gt;	&lt;script type="text/javascript"&gt;		// &lt;![CDATA[		var obj = new Swiff(''http://static.slideshare.net/swf/ssplayer2.swf?doc=improving-interface-design-29757&amp;stripped_title=improving-interface-design'', {			container: $(''flashcontent''),			id: ''myFlash'',			width: ''100%'',			height: ''100%'',			params: {				''bgcolor'' : ''#fff'',				''wmode''   : ''transparent'',				''scale''   : ''noscale'',				''allowfullscreen'' : ''false'',				''allowscriptaccess'' : ''always''			}		});		// ]]&gt;	&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;'</body><body package="Mootools-Examples-MochaUI">tipsHtml	^ '&lt;ul&gt;	&lt;li&gt;Ctrl-Alt-Q toggles window visibility.&lt;/li&gt;	&lt;li&gt;F11 toggles full screen mode.&lt;/li&gt;&lt;/ul&gt;'</body><body package="Mootools-Examples-MochaUI">toolboxdemoHtml	^ '&lt;div class="toolbox"&gt;	&lt;img src="images/icons/page_green.gif" onclick="MochaUI.notification(''Do Something'');" width="16" height="16" alt="" /&gt;	&lt;img src="images/icons/page_red.gif" onclick="MochaUI.notification(''Do Something'');" width="16" height="16" alt="" /&gt;	&lt;img src="images/icons/page.gif" onclick="MochaUI.notification(''Do Something'');" idth="16" height="16" alt="" /&gt;&lt;/div&gt;&lt;div class="panel-footerContent"&gt;Footer Text&lt;/div&gt;'</body><body package="Mootools-Examples-MochaUI">youtube2Html	^ '&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;&lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr"&gt;&lt;head&gt;&lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /&gt;&lt;script type="text/javascript" src="', (MootoolsLibrary / #mootools123corencJs) greaseString, '"&gt;&lt;/script&gt;&lt;script type="text/javascript" src="', (MootoolsLibrary / #mootools1231morencJs) greaseString, '"&gt;&lt;/script&gt;	&lt;style type="text/css"&gt;	/* hide from ie on mac \*/	html {		height: 100%;		overflow: hidden;	}	#flashcontent {		height: 100%;	}	/* end hide */	body {		height: 100%;		margin: 0;		padding: 0;	}&lt;/style&gt;&lt;/head&gt;&lt;body&gt;	&lt;div id="flashcontent"&gt;		&lt;strong&gt;You need to upgrade your Flash Player&lt;/strong&gt;	&lt;/div&gt;	&lt;script type="text/javascript"&gt;		// &lt;![CDATA[		var obj = new Swiff(''http://www.youtube.com/v/qvdma6tCnjw&amp;hl=en'', {			container: $(''flashcontent''),			id: ''myFlash'',			width: ''100%'',			height: ''100%'',			params: {				''bgcolor'' : ''#fff'',				''wmode''   : ''transparent'',				''scale''   : ''noscale''			}		});		// ]]&gt;	&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;'</body><body package="Mootools-Examples-MochaUI">youtube3Html	^ '&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;&lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr"&gt;&lt;head&gt;&lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /&gt;&lt;script type="text/javascript" src="', (MootoolsLibrary / #mootools123corencJs) greaseString, '"&gt;&lt;/script&gt;&lt;script type="text/javascript" src="', (MootoolsLibrary / #mootools1231morencJs) greaseString, '"&gt;&lt;/script&gt;	&lt;style type="text/css"&gt;	/* hide from ie on mac \*/	html {		height: 100%;		overflow: hidden;	}	#flashcontent {		height: 100%;	}	/* end hide */	body {		height: 100%;		margin: 0;		padding: 0;	}&lt;/style&gt;&lt;/head&gt;&lt;body&gt;	&lt;div id="flashcontent"&gt;		&lt;strong&gt;You need to upgrade your Flash Player&lt;/strong&gt;	&lt;/div&gt;	&lt;script type="text/javascript"&gt;		// &lt;![CDATA[		var obj = new Swiff(''http://www.youtube.com/v/A2zKARkpDW4&amp;hl=en'', {			container: $(''flashcontent''),			id: ''myFlash'',			width: ''100%'',			height: ''100%'',			params: {				''bgcolor'' : ''#fff'',				''wmode''   : ''transparent'',				''scale''   : ''noscale''			}		});		// ]]&gt;	&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;'</body><body package="Mootools-Examples-MochaUI">youtube4Html	^ '&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;&lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr"&gt;&lt;head&gt;&lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /&gt;&lt;script type="text/javascript" src="', (MootoolsLibrary / #mootools123corencJs) greaseString, '"&gt;&lt;/script&gt;&lt;script type="text/javascript" src="', (MootoolsLibrary / #mootools1231morencJs) greaseString, '"&gt;&lt;/script&gt;	&lt;style type="text/css"&gt;	/* hide from ie on mac \*/	html {		height: 100%;		overflow: hidden;	}	#flashcontent {		height: 100%;	}	/* end hide */	body {		height: 100%;		margin: 0;		padding: 0;		background: #000;	}&lt;/style&gt;&lt;/head&gt;&lt;body&gt;	&lt;div id="flashcontent"&gt;		&lt;strong&gt;You need to upgrade your Flash Player&lt;/strong&gt;	&lt;/div&gt;	&lt;script type="text/javascript"&gt;		// &lt;![CDATA[		var obj = new Swiff(''http://www.youtube.com/v/7f6q2M6VKkY&amp;hl=en'', {			container: $(''flashcontent''),			id: ''myFlash'',	 		width: ''100%'',			height: ''100%'',			params: {				''bgcolor'' : ''#fff'',				''wmode''   : ''transparent'',				''scale''   : ''noscale''			}		});		// ]]&gt;	&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;'</body><body package="Mootools-Examples-MochaUI">youtubeHtml	^ '&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;&lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr"&gt;&lt;head&gt;&lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /&gt;&lt;script type="text/javascript" src="', (MootoolsLibrary / #mootools123corencJs) greaseString, '"&gt;&lt;/script&gt;&lt;script type="text/javascript" src="', (MootoolsLibrary / #mootools1231morencJs) greaseString, '"&gt;&lt;/script&gt;	&lt;style type="text/css"&gt;	/* hide from ie on mac \*/	html {		height: 100%;		overflow: hidden;	}	#flashcontent {		height: 100%;	}	/* end hide */	body {		height: 100%;		margin: 0;		padding: 0;	}&lt;/style&gt;&lt;/head&gt;&lt;body&gt;	&lt;div id="flashcontent"&gt;		&lt;strong&gt;You need to upgrade your Flash Player&lt;/strong&gt;	&lt;/div&gt;		&lt;script type="text/javascript"&gt;		// &lt;![CDATA[						 		var obj = new Swiff(''http://www.youtube.com/v/INn1C6ImJKg&amp;rel=1&amp;border=0'', {			container: $(''flashcontent''),			id: ''myFlash'',			width: ''100%'',			height: ''100%'',			params: {				''bgcolor'' : ''#fff'',				''wmode''   : ''transparent'',				''scale''   : ''noscale''			}		});				// ]]&gt;	&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;'</body><body package="Mootools-Examples-MochaUI">youtubetabsHtml	^ '&lt;div class="toolbarTabs"&gt;	&lt;ul id="youtubeTabs" class="tab-menu"&gt;		&lt;li id="youtube1Link" class="selected"&gt;&lt;a&gt;Zero 7&lt;/a&gt;&lt;/li&gt;		&lt;li id="youtube2Link"&gt;&lt;a&gt;Flaming Lips&lt;/a&gt;&lt;/li&gt;		&lt;li id="youtube3Link"&gt;&lt;a&gt;Boards of Canada&lt;/a&gt;&lt;/li&gt;	&lt;/ul&gt;	&lt;div class="clear"&gt;&lt;/div&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;	MochaUI.initializeTabs(''youtubeTabs'');		$(''youtube1Link'').addEvent(''click'', function(e){		MochaUI.updateContent({			''element'':  $(''youtube''),			''url'':       "', (MochaDemoLibrary / #youtubeHtml) greaseString, '"		});	});		$(''youtube2Link'').addEvent(''click'', function(e){		MochaUI.updateContent({			''element'':  $(''youtube''),			''url'':       "', (MochaDemoLibrary / #youtube2Html) greaseString, '"		});	});		$(''youtube3Link'').addEvent(''click'', function(e){		MochaUI.updateContent({			''element'':  $(''youtube''),			''url'':       "', (MochaDemoLibrary / #youtube3Html) greaseString, '"		});	});&lt;/script&gt;'</body></methods><methods><class-id>Mootools.MochaDemoLibrary</class-id> <category>plugins/</category><body package="Mootools-Examples-MochaUI">coolclockHtml	^'&lt;style type="text/css"&gt;#cl {        margin: 0 auto 0;        width: 150px;        height: 150px;        overflow: hidden;}&lt;/style&gt;&lt;div style="display:none;"&gt;IE Fix&lt;/div&gt;&lt;div class="clockWrapper" style="text-align:center;padding-top:5px;"&gt;        &lt;div class="clock"&gt;                &lt;canvas id="c1" class="CoolClock:mochaUI2:75"&gt;&lt;/canvas&gt;        &lt;/div&gt;&lt;/div&gt;'</body><body package="Mootools-Examples-MochaUI">parametricsHtml	^'&lt;div id="radiusSlider" class="slider"&gt;        &lt;div id="radiusUpdate" class="update"&gt;Corner Radius: &lt;span id="radiusUpdatevalue" class="updatevalue"&gt;0&lt;/span&gt;&lt;/div&gt;        &lt;div class="sliderWrapper"&gt;                &lt;div id="radiusSliderknob" class="sliderknob"&gt;&lt;/div&gt;                &lt;div id="radiusSliderarea" class="sliderarea"&gt;&lt;/div&gt;        &lt;/div&gt;        &lt;div class="clear"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="shadowSlider" class="slider" style="margin-bottom: 0px;"&gt;        &lt;div id="shadowUpdate" class="update"&gt;Shadow Blur: &lt;span id="shadowUpdatevalue" class="updatevalue"&gt;0&lt;/span&gt;&lt;/div&gt;        &lt;div class="sliderWrapper"&gt;                &lt;div id="shadowSliderknob" class="sliderknob"&gt;&lt;/div&gt;                &lt;div id="shadowSliderarea" class="sliderarea"&gt;&lt;/div&gt;        &lt;/div&gt;        &lt;div class="clear"&gt;&lt;/div&gt;&lt;/div&gt;'</body><body package="Mootools-Examples-MochaUI">windowformHtml	^'&lt;form id="newWindowForm" action="#" method="get"&gt;        &lt;div class="formLabel"&gt;Title:&lt;/div&gt;        &lt;div class="formField"&gt;&lt;input type="text" class="input" id="newWindowHeaderTitle" value="My Header Title" maxlength="38" /&gt;&lt;/div&gt;        &lt;div class="clear"&gt;&lt;/div&gt;        &lt;div class="formLabel"&gt;Load Method:&lt;/div&gt;        &lt;div class="formField"&gt;        &lt;input type="radio" name="loadMethod" id="htmlLoadMethod" value="html" checked="checked" /&gt;&lt;label for="htmlLoadMethod"&gt; Enter HTML&lt;/label&gt;&lt;br /&gt;        &lt;input type="radio" name="loadMethod" id="iframeLoadMethod" value="iframe" /&gt;&lt;label for="iframeLoadMethod"&gt; Load URL into iframe&lt;/label&gt;&lt;/div&gt;        &lt;div class="clear"&gt;&lt;/div&gt;        &lt;div class="formLabel"&gt;Content:&lt;/div&gt;        &lt;div class="formField"&gt;&lt;textarea id="newWindowContent"&gt;This is my window content.&lt;/textarea&gt;&lt;/div&gt;        &lt;div class="clear"&gt;&lt;/div&gt;        &lt;div class="formLabel"&gt;Content URL:&lt;/div&gt;        &lt;div class="formField"&gt;&lt;input type="text" class="input" id="newWindowContentURL" value="" maxlength="250" /&gt;&lt;div class="lite"&gt;Ex: http://www.google.com/&lt;/div&gt;&lt;/div&gt;        &lt;div class="clear"&gt;&lt;/div&gt;        &lt;div class="formLabel"&gt;Width:&lt;/div&gt;        &lt;div class="formField"&gt;&lt;input type="text" class="input number" id="newWindowWidth" value="300" maxlength="4" /&gt;&lt;/div&gt;        &lt;div class="clear"&gt;&lt;/div&gt;        &lt;div class="formLabel"&gt;Height:&lt;/div&gt;        &lt;div class="formField"&gt;&lt;input type="text" class="input number" id="newWindowHeight" value="125" maxlength="4" /&gt;&lt;/div&gt;        &lt;div class="clear"&gt;&lt;/div&gt;        &lt;div class="formLabel"&gt;x:&lt;/div&gt;        &lt;div class="formField"&gt;&lt;input type="text" class="input number" id="newWindowX" value="" maxlength="4" /&gt;&lt;/div&gt;        &lt;div class="clear"&gt;&lt;/div&gt;        &lt;div class="formLabel"&gt;y:&lt;/div&gt;        &lt;div class="formField"&gt;&lt;input type="text" class="input number" id="newWindowY" value="" maxlength="4" /&gt;&lt;/div&gt;        &lt;div class="clear"&gt;&lt;/div&gt;        &lt;div class="formLabel"&gt;Modal:&lt;/div&gt;        &lt;div class="formField"&gt;&lt;input type="checkbox" id="newWindowModal" value="true" /&gt;&lt;/div&gt;        &lt;div class="clear"&gt;&lt;/div&gt;               &lt;div class="formLabel"&gt;&lt;/div&gt;        &lt;div class="formField"&gt;&lt;input type="submit" class="submit" id="newWindowSubmit" value="Create New Window" /&gt;&lt;/div&gt;        &lt;div class="clear"&gt;&lt;/div&gt;&lt;/form&gt;'</body></methods><methods><class-id>Mootools.MochaDemoLibrary</class-id> <category>data/</category><body package="Mootools-Examples-MochaUI">jsonwindowsdataJs	^ '{"windows":[	{		"id": "json01",		"title":"Window Created with Json Data",		"content":"First window",		"maximizable": false,		"resizable": false,		"headerStartColor": [230, 160, 160],		"headerStoptColor": [237, 237, 237],		"x": 50,		"y": 115	},	{		"id": "json02",		"title":"Another Window Created with Json",		"content":"Second window",		"maximizable": false,		"resizable": false,		"headerStartColor": [230, 190, 160],		"headerStoptColor": [237, 237, 237],			"x": 110,		"y": 190	},	{		"id": "json03",		"title":"And Another ...",		"content":"Third",		"maximizable": false,		"resizable": false,		"headerStartColor": [160, 160, 230],		"headerStoptColor": [237, 237, 237],		"x": 170,		"y": 265	}]}'</body></methods><methods><class-id>Mootools.MochaDemoLibrary</class-id> <category>scripts/</category><body package="Mootools-Examples-MochaUI">demoVirtualDesktopInitJs	^'/* -----------------------------------------------------------------	In this file:		1. Define windows			var myWindow = function(){ 			new MochaUI.Window({				id: ''mywindow'',				title: ''My Window'',				loadMethod: ''xhr'',				contentURL: ''pages/lipsum.html'',				width: 340,				height: 150			});		}		2. Build windows on onDomReady			myWindow();		3. Add link events to build future windows			if ($(''myWindowLink'')){			$(''myWindowLink'').addEvent(''click'', function(e) {				new Event(e).stop();				jsonWindows();			});		}				Note: If your link is in the top menu, it opens only a single window, and you would		like a check mark next to it when it''s window is open, format the link name as follows:				window.id + LinkCheck, e.g., mywindowLinkCheck				Otherwise it is suggested you just use mywindowLink		Associated HTML for link event above:			&lt;a id="myWindowLink" href="pages/lipsum.html"&gt;My Window&lt;/a&gt;			Notes:		If you need to add link events to links within windows you are creating, do		it in the onContentLoaded function of the new window.   ----------------------------------------------------------------- */initializeWindows = function(){	// Examples	MochaUI.ajaxpageWindow = function(){ 		new MochaUI.Window({			id: ''ajaxpage'',			loadMethod: ''xhr'',			contentURL: "', (MochaDemoLibrary / #lipsumHtml) greaseString, '",			width: 340,			height: 150		});	}		if ($(''ajaxpageLinkCheck'')){ 		$(''ajaxpageLinkCheck'').addEvent(''click'', function(e){				new Event(e).stop();			MochaUI.ajaxpageWindow();		});	}			MochaUI.jsonWindows = function(){		var url = "', (MochaDemoLibrary / #jsonwindowsdataJs) greaseString, '";		var request = new Request.JSON({			url: url,			method: ''get'',			onComplete: function(properties) {				MochaUI.newWindowsFromJSON(properties.windows);			}		}).send();	}	if ($(''jsonLink'')){		$(''jsonLink'').addEvent(''click'', function(e) {			new Event(e).stop();			MochaUI.jsonWindows();		});	}	MochaUI.youtubeWindow = function(){		new MochaUI.Window({			id: ''youtube'',			title: ''YouTube in Iframe'',			loadMethod: ''iframe'',			contentURL: "', (MochaDemoLibrary / #youtubeHtml) greaseString, '",			width: 340,			height: 280,			resizeLimit:  {''x'': [330, 2500], ''y'': [250, 2000]},			toolbar: true,			toolbarURL: "', (MochaDemoLibrary / #youtubetabsHtml) greaseString, '",			contentBgColor: ''#000''		});	}		if ($(''youtubeLinkCheck'')) {		$(''youtubeLinkCheck'').addEvent(''click'', function(e){		new Event(e).stop();			MochaUI.youtubeWindow();		});	}		MochaUI.slideshareWindow = function(){		new MochaUI.Window({			id: ''slideshare'',			title: ''Slideshare in Iframe'',			loadMethod: ''iframe'',			contentURL: "', (MochaDemoLibrary / #slideshareHtml) greaseString, '",			width: 415,			height: 355,			resizeLimit:  {''x'': [330, 2500], ''y'': [250, 2000]},			contentBgColor: ''#000''					});	}	if ($(''slideshareLinkCheck'')) {		$(''slideshareLinkCheck'').addEvent(''click'', function(e){		new Event(e).stop();			MochaUI.slideshareWindow();		});	}		MochaUI.parametricsWindow = function(){			new MochaUI.Window({			id: ''parametrics'',			title: ''Window Parametrics'',			loadMethod: ''xhr'',			contentURL: "', (MochaDemoLibrary / #parametricsHtml) greaseString, '",			onContentLoaded: function(){				if ( !MochaUI.parametricsScript == true ){					new Request({						url: "', (MochaLibrary / #parametricsJs) greaseString, '",						method: ''get'',						onSuccess: function() {							MochaUI.addRadiusSlider.delay(10); // Delay is for IE6							MochaUI.addShadowSlider.delay(10); // Delay is for IE6							MochaUI.parametricsScript = true;						}.bind(this)					}).send();				}				else {					MochaUI.addRadiusSlider.delay(10); // Delay is for IE6					MochaUI.addShadowSlider.delay(10); // Delay is for IE6				}			},			width: 305,			height: 110,			x: 230,			y: 180,			padding: { top: 12, right: 12, bottom: 10, left: 12 },			resizable: false,			maximizable: false,			contentBgColor: ''#fff''		});	}	if ($(''parametricsLinkCheck'')){		$(''parametricsLinkCheck'').addEvent(''click'', function(e){			new Event(e).stop();			MochaUI.parametricsWindow();		});	}	MochaUI.clockWindow = function(){			new MochaUI.Window({			id: ''clock'',			title: ''Canvas Clock'',			addClass: ''transparent'',			loadMethod: ''xhr'',			contentURL: "', (MochaDemoLibrary / #coolclockHtml) greaseString, '?t=" + new Date().getTime(),			onContentLoaded: function(){				if ( !MochaUI.clockScript == true ){					new Request({						url: "', (MochaLibrary / #coolclockJs) greaseString, '?t=" + new Date().getTime(),						method: ''get'',						onSuccess: function() {							if (Browser.Engine.trident) {									myClockInit = function(){									CoolClock.findAndCreateClocks();								};								window.addEvent(''domready'', function(){									myClockInit.delay(10); // Delay is for IE								});								MochaUI.clockScript = true;							}							else {								CoolClock.findAndCreateClocks();							}						}.bind(this)					}).send();				}				else {					if (Browser.Engine.trident) {						myClockInit = function(){							CoolClock.findAndCreateClocks();						};						window.addEvent(''domready'', function(){							myClockInit.delay(10); // Delay is for IE						});						MochaUI.clockScript = true;					}					else {						CoolClock.findAndCreateClocks();					}				}			},			shape: ''gauge'',			headerHeight: 30,			width: 160,			height: 160,			x: 570,			y: 152,			padding: { top: 0, right: 0, bottom: 0, left: 0 },			bodyBgColor: [250,250,250]		});		}	if ($(''clockLinkCheck'')){		$(''clockLinkCheck'').addEvent(''click'', function(e){			new Event(e).stop();			MochaUI.clockWindow();		});	}	// Examples &gt; Tests	MochaUI.eventsWindow = function(){			new MochaUI.Window({			id: ''windowevents'',			title: ''Window Events'',			loadMethod: ''xhr'',			contentURL: "', (MochaDemoLibrary / #eventsHtml) greaseString, '",			onContentLoaded: function(windowEl){				MochaUI.notification(''Window content was loaded.'');			},			onCloseComplete: function(){				MochaUI.notification(''The window is closed.'');			},			onMinimize: function(windowEl){				MochaUI.notification(''Window was minimized.'');			},			onMaximize: function(windowEl){				MochaUI.notification(''Window was maximized.'');			},			onRestore: function(windowEl){				MochaUI.notification(''Window was restored.'');			},			onResize: function(windowEl){				MochaUI.notification(''Window was resized.'');			},			onFocus: function(windowEl){				MochaUI.notification(''Window was focused.'');			},			onBlur: function(windowEl){				MochaUI.notification(''Window lost focus.'');			},			width: 340,			height: 250		});	}		if ($(''windoweventsLinkCheck'')){		$(''windoweventsLinkCheck'').addEvent(''click'', function(e){			new Event(e).stop();			MochaUI.eventsWindow();		});	}	MochaUI.containertestWindow = function(){ 		new MochaUI.Window({			id: ''containertest'',			title: ''Container Test'',			loadMethod: ''xhr'',			contentURL: "', (MochaDemoLibrary / #lipsumHtml) greaseString, '",			container: ''pageWrapper'',			width: 340,			height: 150,			x: 100,			y: 100		});	}	if ($(''containertestLinkCheck'')){ 		$(''containertestLinkCheck'').addEvent(''click'', function(e){				new Event(e).stop();			MochaUI.containertestWindow();		});	}	MochaUI.iframetestWindow = function(){		new MochaUI.Window({			id: ''iframetest'',			title: ''Iframe Tests'',			loadMethod: ''iframe'',			contentURL: "', (MochaDemoLibrary / #iframetestHtml) greaseString, '"		});	}	if ($(''iframetestLinkCheck'')) {		$(''iframetestLinkCheck'').addEvent(''click'', function(e){		new Event(e).stop();			MochaUI.iframetestWindow();		});	}	MochaUI.accordiantestWindow = function(){		var id = ''accordiantest'';		new MochaUI.Window({			id: id,			title: ''Accordian'',			loadMethod: ''xhr'',			contentURL: "', (MochaDemoLibrary / #accordiandemoHtml) greaseString, '",			width: 300,			height: 200,			scrollbars: false,			resizable: false,			maximizable: false,			padding: { top: 0, right: 0, bottom: 0, left: 0 },			onContentLoaded: function(windowEl){				this.windowEl = windowEl;				var accordianDelay = function(){					new Accordion(''#'' + id + '' h3.accordianToggler'', "#" + id + '' div.accordianElement'', {					//	start: ''all-closed'',						opacity: false,						alwaysHide: true,						onActive: function(toggler, element){								toggler.addClass(''open'');						},						onBackground: function(toggler, element){								toggler.removeClass(''open'');						},													onStart: function(toggler, element){							this.windowEl.accordianResize = function(){								MochaUI.dynamicResize($(id));							}							this.windowEl.accordianTimer = this.windowEl.accordianResize.periodical(10);						}.bind(this),						onComplete: function(){							this.windowEl.accordianTimer = $clear(this.windowEl.accordianTimer);							MochaUI.dynamicResize($(id)) // once more for good measure						}.bind(this)					}, $(id));				}.bind(this)				accordianDelay.delay(10, this); // Delay is a fix for IE			}		});	}		if ($(''accordiantestLinkCheck'')){ 		$(''accordiantestLinkCheck'').addEvent(''click'', function(e){				new Event(e).stop();			MochaUI.accordiantestWindow();		});	}		MochaUI.noCanvasWindow = function(){		new MochaUI.Window({			id: ''nocanvas'',			title: ''No Canvas'',			loadMethod: ''xhr'',			contentURL: "', (MochaDemoLibrary / #lipsumHtml) greaseString, '",			addClass: ''no-canvas'',			width: 305,			height: 175,			shadowBlur: 0,			resizeLimit: {''x'': [275, 2500], ''y'': [125, 2000]},			useCanvas: false		});	}	if ($(''noCanvasLinkCheck'')){		$(''noCanvasLinkCheck'').addEvent(''click'', function(e){			new Event(e).stop();			MochaUI.noCanvasWindow();		});	}	// View	if ($(''sidebarLinkCheck'')){		$(''sidebarLinkCheck'').addEvent(''click'', function(e){			new Event(e).stop();			MochaUI.Desktop.sidebarToggle();		});	}	if ($(''cascadeLink'')){		$(''cascadeLink'').addEvent(''click'', function(e){			new Event(e).stop();			MochaUI.arrangeCascade();		});	}	if ($(''tileLink'')){		$(''tileLink'').addEvent(''click'', function(e){			new Event(e).stop();			MochaUI.arrangeTile();		});	}	if ($(''closeLink'')){		$(''closeLink'').addEvent(''click'', function(e){			new Event(e).stop();			MochaUI.closeAll();		});	}	if ($(''minimizeLink'')){		$(''minimizeLink'').addEvent(''click'', function(e){			new Event(e).stop();			MochaUI.minimizeAll();		});	}	// Tools	MochaUI.builderWindow = function(){			new MochaUI.Window({			id: ''builder'',			title: ''Window Builder'',			icon: "', (MochaLibrary / #pageGif) greaseString, '",			loadMethod: ''xhr'',			contentURL: "', (MochaDemoLibrary / #windowsformHtml) greaseString, '",			onContentLoaded: function(){				if ( !MochaUI.windowformScript == true ){					new Request({						url: "', (MochaLibrary / #windowsFromFormJs) greaseString, '",						method: ''get'',						onSuccess: function() {							$(''newWindowSubmit'').addEvent(''click'', function(e){								new Event(e).stop();								new MochaUI.WindowForm();							});							MochaUI.windowformScript = true;						}.bind(this)					}).send();				}			},			width: 370,			height: 410,			maximizable: false,			resizable: false,			scrollbars: false		});	}	if ($(''builderLinkCheck'')){		$(''builderLinkCheck'').addEvent(''click'', function(e){				new Event(e).stop();			MochaUI.builderWindow();		});	}		// Todo: Add menu check mark functionality for workspaces.	// Workspaces	if ($(''saveWorkspaceLink'')){		$(''saveWorkspaceLink'').addEvent(''click'', function(e){			new Event(e).stop();			MochaUI.saveWorkspace();		});	}		if ($(''loadWorkspaceLink'')){		$(''loadWorkspaceLink'').addEvent(''click'', function(e){			new Event(e).stop();			MochaUI.loadWorkspace();		});	}	// Help		MochaUI.featuresWindow = function(){		new MochaUI.Window({			id: ''features'',			title: ''Features'',			loadMethod: ''xhr'',			contentURL: "', (MochaDemoLibrary / #featureslayoutHtml) greaseString, '",			width: 305,			height: 175,			resizeLimit: {''x'': [275, 2500], ''y'': [125, 2000]},			toolbar: true,			toolbarURL: "', (MochaDemoLibrary / #featurestabsHtml) greaseString, '"		});	}	if ($(''featuresLinkCheck'')){		$(''featuresLinkCheck'').addEvent(''click'', function(e){			new Event(e).stop();			MochaUI.featuresWindow();		});	}	MochaUI.faqWindow = function(){			new MochaUI.Window({				id: ''faq'',				title: ''FAQ'',				loadMethod: ''xhr'',				contentURL: "', (MochaDemoLibrary / #faqHtml) greaseString, '",				width: 750,				height: 350			});	}	if ($(''faqLinkCheck'')){		$(''faqLinkCheck'').addEvent(''click'', function(e){				new Event(e).stop();			MochaUI.faqWindow();		});	}		MochaUI.docsWindow = function(){			new MochaUI.Window({				id: ''docs'',				title: ''Documentation'',				loadMethod: ''xhr'',				contentURL: "', (MochaDemoLibrary / #docsHtml) greaseString, '",				width: 750,				height: 350,				padding: [10,10,10,10,10]			});	}	if ($(''docsLinkCheck'')){		$(''docsLinkCheck'').addEvent(''click'', function(e){			new Event(e).stop();			MochaUI.docsWindow();		});	}		MochaUI.resourcesWindow = function(){			new MochaUI.Window({				id: ''resources'',				title: ''Resources'',				loadMethod: ''xhr'',				contentURL: "', (MochaDemoLibrary / #resourcesHtml) greaseString, '",				width: 300,				height: 275,				x: 20,				y: 90 			});	}	if ($(''resourcesLinkCheck'')){		$(''resourcesLinkCheck'').addEvent(''click'', function(e){			new Event(e).stop();			MochaUI.resourcesWindow();		});	}	MochaUI.helpWindow = function(){			new MochaUI.Window({				id: ''help'',				title: ''Support'',				loadMethod: ''xhr'',				contentURL: "', (MochaDemoLibrary / #supportHtml) greaseString, '",				width: 320,				height: 320,				x: 20,				y: 90 			});	}	if ($(''helpLinkCheck'')){		$(''helpLinkCheck'').addEvent(''click'', function(e){			new Event(e).stop();			MochaUI.helpWindow();		});	}		MochaUI.contributeWindow = function(){		new MochaUI.Window({			id: ''contribute'',			title: ''Contribute'',			loadMethod: ''xhr'',			contentURL: "', (MochaDemoLibrary / #contributeHtml) greaseString, '",			width: 320,			height: 320,			x: 20,			y: 90 		});	}	if ($(''contributeLinkCheck'')){		$(''contributeLinkCheck'').addEvent(''click'', function(e){			new Event(e).stop();			MochaUI.contributeWindow();		});	}	MochaUI.aboutWindow = function(){		new MochaUI.Window({			id: ''about'',			title: ''MochaUI'',			loadMethod: ''xhr'',			contentURL: "', (MochaDemoLibrary / #aboutHtml) greaseString, '",			type: ''modal2'',			width: 350,			height: 195,			contentBgColor: ''#e5e5e5 url(images/logo2.gif) left 3px no-repeat'',			padding: { top: 43, right: 12, bottom: 10, left: 12 },			scrollbars:  false		});	}	if ($(''aboutLink'')){		$(''aboutLink'').addEvent(''click'', function(e){				new Event(e).stop();			MochaUI.aboutWindow();		});	}	// Deactivate menu header links	$$(''a.returnFalse'').each(function(el){		el.addEvent(''click'', function(e){			new Event(e).stop();		});	});	// Build windows onDomReady	MochaUI.parametricsWindow();	if (!Browser.Engine.trident) {		MochaUI.clockWindow();	}	else {		MochaUI.clockWindow.delay(500);		}	}// Initialize MochaUI when the DOM is readywindow.addEvent(''domready'', function(){	MochaUI.Desktop = new MochaUI.Desktop();	MochaUI.Dock = new MochaUI.Dock({		dockPosition: ''bottom''	});	MochaUI.Modal = new MochaUI.Modal();		MochaUI.Desktop.desktop.setStyles({		''background'': ''#fff'',		''visibility'': ''visible''	});		initializeWindows();});// This is just for the demo. Running it onload gives pngFix time to replace the pngs in IE6.window.addEvent(''load'', function(){	$$(''.desktopIcon'').addEvent(''click'', function(){		MochaUI.notification(''Do Something'');	});});	// This runs when a person leaves your page.window.addEvent(''unload'', function(){	if (MochaUI) MochaUI.garbageCleanUp();});'</body><body package="Mootools-Examples-MochaUI">mochaInitJs	^'/* -----------------------------------------------------------------	In this file:	1. Define windows			var myWindow = function(){ 			new MochaUI.Window({				id: ''mywindow'',				title: ''My Window'',				loadMethod: ''xhr'',				contentURL: ''pages/lipsum.html'',				width: 340,				height: 150			});		}	2. Build windows on onDomReady			myWindow();		3. Add link events to build future windows			if ($(''myWindowLink'')){			$(''myWindowLink'').addEvent(''click'', function(e) {				new Event(e).stop();				jsonWindows();			});		}		Note: If your link is in the top menu, it opens only a single window, and you would		like a check mark next to it when it''s window is open, format the link name as follows:		window.id + LinkCheck, e.g., mywindowLinkCheck		Otherwise it is suggested you just use mywindowLink	Associated HTML for link event above:		&lt;a id="myWindowLink" href="pages/lipsum.html"&gt;My Window&lt;/a&gt;		Notes:		If you need to add link events to links within windows you are creating, do		it in the onContentLoaded function of the new window.   ----------------------------------------------------------------- */initializeWindows = function(){	// Examples	MochaUI.ajaxpageWindow = function(){		new MochaUI.Window({			id: ''ajaxpage'',			loadMethod: ''xhr'',			contentURL: "', (MochaDemoLibrary / #lipsumHtml) greaseString, '",			width: 340,			height: 150		});	}		if ($(''ajaxpageLinkCheck'')){ 		$(''ajaxpageLinkCheck'').addEvent(''click'', function(e){			new Event(e).stop();			MochaUI.ajaxpageWindow();		});	}			MochaUI.jsonWindows = function(){		var url = "', (MochaDemoLibrary / #jsonwindowsdataJs) greaseString, '";		var request = new Request.JSON({			url: url,			method: ''get'',			onComplete: function(properties) {				MochaUI.newWindowsFromJSON(properties.windows);			}		}).send();	}		if ($(''jsonLink'')){		$(''jsonLink'').addEvent(''click'', function(e) {			new Event(e).stop();			MochaUI.jsonWindows();		});	}	MochaUI.youtubeWindow = function(){		new MochaUI.Window({			id: ''youtube'',			title: ''YouTube in Iframe'',			loadMethod: ''iframe'',			contentURL: "', (MochaDemoLibrary / #youtubeHtml) greaseString, '",			width: 340,			height: 280,			resizeLimit: {''x'': [330, 2500], ''y'': [250, 2000]},			toolbar: true,			toolbarURL: "', (MochaDemoLibrary / #youtubetabsHtml) greaseString, '",			contentBgColor: ''#000''		});	}	if ($(''youtubeLinkCheck'')) {		$(''youtubeLinkCheck'').addEvent(''click'', function(e){		new Event(e).stop();			MochaUI.youtubeWindow();		});	}	MochaUI.slideshareWindow = function(){		new MochaUI.Window({			id: ''slideshare'',			title: ''Slideshare in Iframe'',			loadMethod: ''iframe'',			contentURL: "', (MochaDemoLibrary / #slideshareHtml) greaseString, '",			width: 415,			height: 355,			resizeLimit:  {''x'': [330, 2500], ''y'': [250, 2000]},			contentBgColor: ''#000''		});	}	if ($(''slideshareLinkCheck'')) {		$(''slideshareLinkCheck'').addEvent(''click'', function(e){		new Event(e).stop();			MochaUI.slideshareWindow();		});	}		MochaUI.parametricsWindow = function(){			new MochaUI.Window({			id: ''parametrics'',			title: ''Window Parametrics'',			loadMethod: ''xhr'',			contentURL: "', (MochaDemoLibrary / #parametricsHtml) greaseString, '",			onContentLoaded: function(){				if ( !MochaUI.parametricsScript == true ){					new Request({						url: "', (MochaLibrary / #parametricsJs) greaseString, '",						method: ''get'',						onSuccess: function() {							MochaUI.addRadiusSlider.delay(10); // Delay is for IE6							MochaUI.addShadowSlider.delay(10); // Delay is for IE6							MochaUI.parametricsScript = true;						}.bind(this)					}).send();				}				else {					MochaUI.addRadiusSlider.delay(10); // Delay is for IE6					MochaUI.addShadowSlider.delay(10); // Delay is for IE6				}			},			width: 305,			height: 110,			x: 570,			y: 160,			padding: { top: 12, right: 12, bottom: 10, left: 12 },			resizable: false,			maximizable: false,			contentBgColor: ''#fff''		});	}	if ($(''parametricsLinkCheck'')){		$(''parametricsLinkCheck'').addEvent(''click'', function(e){				new Event(e).stop();			MochaUI.parametricsWindow();		});	}		MochaUI.clockWindow = function(){		new MochaUI.Window({			id: ''clock'',			title: ''Canvas Clock'',			addClass: ''transparent'',			loadMethod: ''xhr'',			contentURL: "', (MochaDemoLibrary / #coolclockHtml) greaseString, '?t=" + new Date().getTime(),			onContentLoaded: function(){				if ( !MochaUI.clockScript == true ){					new Request({						url: "', (MochaLibrary / #coolclockJs) greaseString, '?t=" + new Date().getTime(),						method: ''get'',						onSuccess: function() {							if (Browser.Engine.trident) {								myClockInit = function(){									CoolClock.findAndCreateClocks();								};								window.addEvent(''domready'', function(){									myClockInit.delay(10); // Delay is for IE								});								MochaUI.clockScript = true;							}							else {								CoolClock.findAndCreateClocks();							}						}.bind(this)					}).send();				}				else {					if (Browser.Engine.trident) {						myClockInit = function(){							CoolClock.findAndCreateClocks();						};						window.addEvent(''domready'', function(){							myClockInit.delay(10); // Delay is for IE						});						MochaUI.clockScript = true;					}					else {						CoolClock.findAndCreateClocks();					}				}			},			shape: ''gauge'',			headerHeight: 30,			width: 160,			height: 160,			x: 570,			y: 140,			padding: { top: 0, right: 0, bottom: 0, left: 0 },			bodyBgColor: [250,250,250]		});		}	if ($(''clockLinkCheck'')){		$(''clockLinkCheck'').addEvent(''click'', function(e){				new Event(e).stop();			MochaUI.clockWindow();		});	}	// Examples &gt; Tests	MochaUI.eventsWindow = function(){		new MochaUI.Window({			id: ''windowevents'',			title: ''Window Events'',			loadMethod: ''xhr'',			contentURL: "', (MochaDemoLibrary / #eventsHtml) greaseString, '",			onContentLoaded: function(windowEl){				MochaUI.notification(''Window content was loaded.'');			},			onCloseComplete: function(){				MochaUI.notification(''The window is closed.'');			},			onMinimize: function(windowEl){				MochaUI.notification(''Window was minimized.'');			},			onMaximize: function(windowEl){				MochaUI.notification(''Window was maximized.'');			},			onRestore: function(windowEl){				MochaUI.notification(''Window was restored.'');			},			onResize: function(windowEl){				MochaUI.notification(''Window was resized.'');			},			onFocus: function(windowEl){				MochaUI.notification(''Window was focused.'');			},			onBlur: function(windowEl){				MochaUI.notification(''Window lost focus.'');			},			width: 340,			height: 250		});	}		if ($(''windoweventsLinkCheck'')){		$(''windoweventsLinkCheck'').addEvent(''click'', function(e){			new Event(e).stop();			MochaUI.eventsWindow();		});	}		MochaUI.containertestWindow = function(){ 		new MochaUI.Window({			id: ''containertest'',			title: ''Container Test'',			loadMethod: ''xhr'',			contentURL: "', (MochaDemoLibrary / #lipsumHtml) greaseString, '",			container: ''pageWrapper'',			width: 340,			height: 150,			x: 100,			y: 100		});	}	if ($(''containertestLinkCheck'')){ 		$(''containertestLinkCheck'').addEvent(''click'', function(e){			new Event(e).stop();			MochaUI.containertestWindow();		});	}		MochaUI.iframetestWindow = function(){		new MochaUI.Window({			id: ''iframetest'',			title: ''Iframe Tests'',			loadMethod: ''iframe'',			contentURL: "', (MochaDemoLibrary / #iframetestHtml) greaseString, '"		});	}	if ($(''iframetestLinkCheck'')) {		$(''iframetestLinkCheck'').addEvent(''click'', function(e){		new Event(e).stop();			MochaUI.iframetestWindow();		});	}	MochaUI.accordiantestWindow = function(){		var id = ''accordiantest'';		new MochaUI.Window({			id: id,			title: ''Accordian'',			loadMethod: ''xhr'',			contentURL: "', (MochaDemoLibrary / #accordiandemoHtml) greaseString, '",			width: 300,			height: 200,			scrollbars: false,			resizable: false,			maximizable: false,							padding: { top: 0, right: 0, bottom: 0, left: 0 },			onContentLoaded: function(windowEl){				this.windowEl = windowEl;				var accordianDelay = function(){					new Accordion(''#'' + id + '' h3.accordianToggler'', "#" + id + '' div.accordianElement'',{					//	start: ''all-closed'',						opacity: false,						alwaysHide: true,						onActive: function(toggler, element){								toggler.addClass(''open'');						},						onBackground: function(toggler, element){								toggler.removeClass(''open'');						},													onStart: function(toggler, element){							this.windowEl.accordianResize = function(){								MochaUI.dynamicResize($(id));							}							this.windowEl.accordianTimer = this.windowEl.accordianResize.periodical(10);						}.bind(this),						onComplete: function(){							this.windowEl.accordianTimer = $clear(this.windowEl.accordianTimer);							MochaUI.dynamicResize($(id)) // once more for good measure						}.bind(this)					}, $(id));				}.bind(this)				accordianDelay.delay(10, this); // Delay is a fix for IE			}		});	}		if ($(''accordiantestLinkCheck'')){ 		$(''accordiantestLinkCheck'').addEvent(''click'', function(e){				new Event(e).stop();			MochaUI.accordiantestWindow();		});	}	MochaUI.noCanvasWindow = function(){		new MochaUI.Window({			id: ''nocanvas'',			title: ''No Canvas'',			loadMethod: ''xhr'',			contentURL: "', (MochaDemoLibrary / #lipsumHtml) greaseString, '",			addClass: ''no-canvas'',			width: 305,			height: 175,			shadowBlur: 0,			resizeLimit: {''x'': [275, 2500], ''y'': [125, 2000]},			useCanvas: false		});	}	if ($(''noCanvasLinkCheck'')){		$(''noCanvasLinkCheck'').addEvent(''click'', function(e){				new Event(e).stop();			MochaUI.noCanvasWindow();		});	}	// View	if ($(''sidebarLinkCheck'')){		$(''sidebarLinkCheck'').addEvent(''click'', function(e){			new Event(e).stop();			MochaUI.Desktop.sidebarToggle();		});	}	if ($(''cascadeLink'')){		$(''cascadeLink'').addEvent(''click'', function(e){			new Event(e).stop();			MochaUI.arrangeCascade();		});	}	if ($(''tileLink'')){		$(''tileLink'').addEvent(''click'', function(e){			new Event(e).stop();			MochaUI.arrangeTile();		});	}	if ($(''closeLink'')){		$(''closeLink'').addEvent(''click'', function(e){			new Event(e).stop();			MochaUI.closeAll();		});	}	if ($(''minimizeLink'')){		$(''minimizeLink'').addEvent(''click'', function(e){			new Event(e).stop();			MochaUI.minimizeAll();		});	}		// Tools	MochaUI.builderWindow = function(){			new MochaUI.Window({			id: ''builder'',			title: ''Window Builder'',			icon: "', (MochaLibrary / #pageGif) greaseString, '",			loadMethod: ''xhr'',			contentURL: "', (MochaDemoLibrary / #windowformHtml) greaseString, '",			onContentLoaded: function(){				if ( !MochaUI.windowformScript == true ){					new Request({						url: "', (MochaLibrary / #windowFromFormJs) greaseString, '",						method: ''get'',						onSuccess: function() {							$(''newWindowSubmit'').addEvent(''click'', function(e){								new Event(e).stop();								new MochaUI.WindowForm();							});							MochaUI.windowformScript = true;						}.bind(this)					}).send();				}			},			width: 370,			height: 410,			maximizable: false,			resizable: false,			scrollbars: false		});	}	if ($(''builderLinkCheck'')){		$(''builderLinkCheck'').addEvent(''click'', function(e){			new Event(e).stop();			MochaUI.builderWindow();		});	}		// Todo: Add menu check mark functionality for workspaces.		// Workspaces		if ($(''saveWorkspaceLink'')){		$(''saveWorkspaceLink'').addEvent(''click'', function(e){			new Event(e).stop();			MochaUI.saveWorkspace();		});	}	if ($(''loadWorkspaceLink'')){		$(''loadWorkspaceLink'').addEvent(''click'', function(e){			new Event(e).stop();			MochaUI.loadWorkspace();		});	}	// Help		MochaUI.featuresWindow = function(){		new MochaUI.Window({			id: ''features'',			title: ''Features'',			loadMethod: ''xhr'',			contentURL: "', (MochaDemoLibrary / #featureslayoutHtml) greaseString, '",			width: 305,			height: 175,			resizeLimit: {''x'': [275, 2500], ''y'': [125, 2000]},			toolbar: true,			toolbarURL: "', (MochaDemoLibrary / #featurestabHtml) greaseString, '"		});	}	if ($(''featuresLinkCheck'')){		$(''featuresLinkCheck'').addEvent(''click'', function(e){			new Event(e).stop();			MochaUI.featuresWindow();		});	}	MochaUI.faqWindow = function(){			new MochaUI.Window({				id: ''faq'',				title: ''FAQ'',				loadMethod: ''xhr'',				contentURL: "', (MochaDemoLibrary / #faqHtml) greaseString, '",				width: 750,				height: 350			});	}	if ($(''faqLinkCheck'')){		$(''faqLinkCheck'').addEvent(''click'', function(e){			new Event(e).stop();			MochaUI.faqWindow();		});	}	MochaUI.docsWindow = function(){			new MochaUI.Window({				id: ''docs'',				title: ''Documentation'',				loadMethod: ''xhr'',				contentURL: "', (MochaDemoLibrary / #docsHtml) greaseString, '",				width: 750,				height: 350,				padding: [10,10,10,10,10]			});	}	if ($(''docsLinkCheck'')){		$(''docsLinkCheck'').addEvent(''click'', function(e){			new Event(e).stop();			MochaUI.docsWindow();		});	}	MochaUI.resourcesWindow = function(){			new MochaUI.Window({				id: ''resources'',				title: ''Resources'',				loadMethod: ''xhr'',				contentURL: "', (MochaDemoLibrary / #resourcesHtml) greaseString, '",				width: 300,				height: 275,				x: 20,				y: 90 			});	}	if ($(''resourcesLinkCheck'')){		$(''resourcesLinkCheck'').addEvent(''click'', function(e){			new Event(e).stop();			MochaUI.resourcesWindow();		});	}	MochaUI.helpWindow = function(){			new MochaUI.Window({				id: ''help'',				title: ''Support'',				loadMethod: ''xhr'',				contentURL: "', (MochaDemoLibrary / #supportHtml) greaseString, '",				width: 320,				height: 320,				x: 20,				y: 90 			});	}	if ($(''helpLinkCheck'')){		$(''helpLinkCheck'').addEvent(''click'', function(e){			new Event(e).stop();			MochaUI.helpWindow();		});	}		MochaUI.contributeWindow = function(){		new MochaUI.Window({			id: ''contribute'',			title: ''Contribute'',			loadMethod: ''xhr'',			contentURL: "', (MochaDemoLibrary / #contributeHtml) greaseString, '",			width: 320,			height: 320,			x: 20,			y: 90 		});	}	if ($(''contributeLinkCheck'')){		$(''contributeLinkCheck'').addEvent(''click'', function(e){				new Event(e).stop();			MochaUI.contributeWindow();		});	}	MochaUI.aboutWindow = function(){		new MochaUI.Window({			id: ''about'',			title: ''MochaUI'',			loadMethod: ''xhr'',			contentURL: ''pages/about.html'',			type: ''modal2'',			width: 350,			height: 195,			contentBgColor: ''#e5e5e5 url("', (MochaLibrary / #logo2Gif) greaseString, '") left 3px no-repeat'',			padding: { top: 43, right: 12, bottom: 10, left: 12 },			scrollbars:  false		});	}	if ($(''aboutLink'')){		$(''aboutLink'').addEvent(''click'', function(e){			new Event(e).stop();			MochaUI.aboutWindow();		});	}	// Deactivate menu header links	$$(''a.returnFalse'').each(function(el){		el.addEvent(''click'', function(e){			new Event(e).stop();		});	});		// Build windows onDomReady	MochaUI.parametricsWindow();	}// Initialize MochaUI when the DOM is readywindow.addEvent(''domready'', function(){	MochaUI.Desktop = new MochaUI.Desktop();	MochaUI.Dock = new MochaUI.Dock();	/* Create Columns	 	If you are not using panels then these columns are not required.	If you do use panels, the main column is required. The side columns are optional.	Create your columns from left to right. Then create your panels from top to bottom,	left to right. New Panels are inserted at the bottom of their column.	*/	 	new MochaUI.Column({		id: ''sideColumn1'',		placement: ''left'',		width: 200,		resizeLimit: [100, 300]	});	new MochaUI.Column({		id: ''mainColumn'',		placement: ''main'',			width: null,		resizeLimit: [100, 300]	});	new MochaUI.Column({		id: ''sideColumn2'',		placement: ''right'',			width: 220,				resizeLimit: [195, 300]	});	// Add panels to first side column	new MochaUI.Panel({		id: ''files-panel'',		title: ''File View'',		loadMethod: ''xhr'',		contentURL: "', (MochaDemoLibrary / #fileviewHtml) greaseString, '",		column: ''sideColumn1'',		onContentLoaded: function(){			if ( !MochaUI.treeScript == true ){				new Request({					url: "', (MochaLibrary / #treeJs) greaseString, '",					method: ''get'',					onSuccess: function() {						buildTree(''tree1'');						MochaUI.treeScript = true;					}.bind(this)				}).send();			}		}	});	new MochaUI.Panel({		id: ''panel2'',		title: ''Panel'',		loadMethod: ''xhr'',		contentURL: "', (MochaDemoLibrary / #lipsumHtml) greaseString, '",		column: ''sideColumn1'',		height: 300	});	new MochaUI.Panel({		id: ''panel3'',		title: ''Panel'',		loadMethod: ''xhr'',		contentURL: "', (MochaDemoLibrary / #lipsumHtml) greaseString, '",		column: ''sideColumn1'',		height: 140,		footer: true,		footerURL: "', (MochaDemoLibrary / #toolboxdemoHtml) greaseString, '"	});	// Add panels to main column		new MochaUI.Panel({		id: ''mainPanel'',		title: ''Lorem Ipsum'',		loadMethod: ''xhr'',		contentURL: "', (MochaDemoLibrary / #lipsumHtml) greaseString, '",		column: ''mainColumn'',		panelBackground: ''#fff''	});	new MochaUI.Panel({		id: ''panel1'',		title: ''Panel'',		loadMethod: ''xhr'',		contentURL: "', (MochaDemoLibrary / #lipsumHtml) greaseString, '",		column: ''mainColumn'',		height: 200	});	// Add panels to second side column		new MochaUI.Panel({		id: ''help-panel'',		loadMethod: ''xhr'',		contentURL: "', (MochaDemoLibrary / #overviewHtml) greaseString, '",		column: ''sideColumn2'',		tabsURL: "', (MochaDemoLibrary / #paneltabHtml) greaseString, '"	});	new MochaUI.Panel({		id: ''tips-panel'',		title: ''Tips'',		loadMethod: ''xhr'',		contentURL: "', (MochaDemoLibrary / #tipsHtml) greaseString, '",		column: ''sideColumn2'',		height: 140,		footer: true,		footerURL: "', (MochaDemoLibrary / #toolboxdemoHtml) greaseString, '"	});	MochaUI.Modal = new MochaUI.Modal();		MochaUI.Desktop.desktop.setStyles({		''background'': ''#fff'',		''visibility'': ''visible''	});	initializeWindows();});// This runs when a person leaves your page.window.addEvent(''unload'', function(){	if (MochaUI) MochaUI.garbageCleanUp();});'</body></methods><methods><class-id>Mootools.MochaDemoNoToolbars</class-id> <category>hooks</category><body package="Mootools-Examples-MochaUI">style	^'#desktop {        visibility: visible;}#pageWrapper {        overflow: auto;}       #page {        margin: 0 auto 0;        width: 800px;        background: #fff;}#header {	padding: 10px;	background: #fafafa;}#content {        padding: 10px;}#footer {        background: #f0f0f0;        padding: 10px 20px;}'</body></methods><methods><class-id>Mootools.MochaDemoNoToolbars</class-id> <category>rendering</category><body package="Mootools-Examples-MochaUI">renderContentOn: html	html div id: #desktop; with:		[self renderPageOn: html.		self renderWindowsOn: html]</body><body package="Mootools-Examples-MochaUI">renderPageOn: html	html div id: #pageWrapper; with:		[html div id: #page; with:			[html div id: #header; with: [html heading level: 1; with: 'My Site'].			html div id: #content; with:				[html heading level: 3; with: 'My Page Content'.				20 timesRepeat: [html paragraph with: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'].				html paragraph with: [html anchor id: #aboutLink; url: MochaDemoLibrary / #aboutHtml; with: 'Modal Test'].				20 timesRepeat: [html paragraph with: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.']].			html div id: #footer; with: 'Footer text']]</body><body package="Mootools-Examples-MochaUI">renderWindowsOn: html	html div class: 'mocha'; id: 'myWindow01'; style: 'width: 300px; height: 255px; top: 50px; left: 350px'; with:		[html heading level: 3; class: 'mochaTitle'; with: 'My Window 01'.		html paragraph with: 'My Window Content'].	html div class: 'mocha'; id: 'myWindow02'; style: 'width: 300px; height: 275px; top: 120px; left: 420px'; with:		[html heading level: 3; class: 'mochaTitle'; with: 'My Window 02'.		html paragraph with: 'My Window Content'].	html div class: 'mocha'; id: 'myWindow03'; style: 'width: 300px; height: 105px; top: 190px; left: 490px'; with:		[html heading level: 3; class: 'mochaTitle'; with: 'My Window 03'.		html paragraph with: 'My Window Content'].</body></methods><methods><class-id>Mootools.MochaDemoNoToolbars</class-id> <category>updating</category><body package="Mootools-Examples-MochaUI">updateRoot: anHtmlRoot	super updateRoot: anHtmlRoot.	anHtmlRoot title: 'Mootools MochaUI - Fixed Width and No Toolbars'.	anHtmlRoot script beJavascript; contents:'MochaUI.aboutWindow = function() {	new MochaUI.Window({		id: "about",		title: "MochaUI",		loadMethod: "xhr",		contentUrl: "', (MochaDemoLibrary / #aboutHtml) greaseString, '",		type: "modal2",		width: 350,		height: 195,		contentBgColor: ''#353535 url("', (MochaLibrary / #logo2Gif) greaseString, '") left 3px no-repeat'',		padding: { top: 43, right: 12, bottom: 10, left: 12 },		scrollbars: false	});}window.addEvent("domready", function() {	MochaUI.Desktop = new MochaUI.Desktop();	MochaUI.Modal = new MochaUI.Modal();	MochaUI.NewWindowsFromHTML = new MochaUI.NewWindowsFromHTML();	$("aboutLink").addEvent("click", function(e) {		new Event(e).stop();		MochaUI.aboutWindow();	});});'</body></methods><methods><class-id>Mootools.MochaDemoNoToolbars class</class-id> <category>class initialization</category><body package="Mootools-Examples-MochaUI">initialize	(WAAdmin register: self asApplicationAt: 'examples/mootools/mocha-ui/demo-no-toolbars')		addLibrary: MootoolsLibrary;		addLibrary: MochaLibrary</body></methods><methods><class-id>Mootools.MochaDemoFixedWidth</class-id> <category>rendering</category><body package="Mootools-Examples-MochaUI">renderContentOn: html	html div id: #desktop; with:		[self renderHeaderOn: html.		self renderDockOn: html.		self renderPageOn: html.		self renderWindowsOn: html]</body><body package="Mootools-Examples-MochaUI">renderDockOn: html	html div id: #dockWrapper; with:		[html div id: #dock; with:			[html div id: #dockPlacement.			html div id: #dockAutoHide.			html div id: #dockSort; with: [html div id: #dockClear; class: 'clear']]]</body><body package="Mootools-Examples-MochaUI">renderHeaderOn: html	html div id: #desktopHeader; with: [self renderTitleOn: html]</body><body package="Mootools-Examples-MochaUI">renderPageOn: html	html div id: #pageWrapper; with:		[html div id: #page; with:			[html div id: #content; with:				[html heading level: 3; with: 'My Page Content'.				20 timesRepeat: [html paragraph with: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'].				html paragraph with: [html anchor id: #aboutLink; url: MochaDemoLibrary / #aboutHtml; with: 'Modal Test'].				20 timesRepeat: [html paragraph with: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.']].			html div id: #footer; with: 'Footer text']]</body><body package="Mootools-Examples-MochaUI">renderTitleOn: html	html div id: #desktopTitlebarWrapper; with:		[html div id: #desktopTitlebar; with:			[html div id: #topNav; with:				[html unorderedList class: 'menu-right'; with:					[html listItem with:						[html text: 'Welcome '.						html anchor onClick: 'MochaUI.notification("Do Something"); return false;'; with: 'Demo User'.						html text: '.'].					html listItem with:						[html anchor onClick: 'MochaUI.notification("Do Something"); return false;'; with: 'Sign Out']]].			html heading level: 1; class: 'applicationTitle'; with: 'My Site'.			html heading level: 2; class: 'tagline'; with: 'My Tagline']]</body><body package="Mootools-Examples-MochaUI">renderWindowsOn: html	html div class: 'mocha'; id: 'myWindow01'; style: 'width: 300px; height: 255px; top: 50px; left: 350px'; with:		[html heading level: 3; class: 'mochaTitle'; with: 'My Window 01'.		html paragraph with: 'My Window Content'].	html div class: 'mocha'; id: 'myWindow02'; style: 'width: 300px; height: 275px; top: 120px; left: 420px'; with:		[html heading level: 3; class: 'mochaTitle'; with: 'My Window 02'.		html paragraph with: 'My Window Content'].	html div class: 'mocha'; id: 'myWindow03'; style: 'width: 300px; height: 105px; top: 190px; left: 490px'; with:		[html heading level: 3; class: 'mochaTitle'; with: 'My Window 03'.		html paragraph with: 'My Window Content'].</body></methods><methods><class-id>Mootools.MochaDemoFixedWidth</class-id> <category>hooks</category><body package="Mootools-Examples-MochaUI">style	^'#desktop {        visibility: visible;}#desktopTitlebarWrapper {        border: 0;}       #desktopTitlebar {        padding: 7px 8px 6px 8px;        height: 23px;        background: transparent;}#desktopTitlebar h1.applicationTitle {        display: inline;        margin: 0;        padding: 0 5px 0 0;        font-size: 20px;        line-height: 25px;        font-weight: bold;        color: #fff;}#desktopTitlebar h2.tagline {        display: inline;        font-size: 12px;        color: #fff;        font-weight: normal;        padding: 5px 0 0 0;}#desktopTitlebar h2.tagline .taglineEm {        color: #fff;        font-weight: bold;      }#pageWrapper {        overflow: auto;        background: #7c9dbf;        border: 0;      }       #page {        margin: 0 auto 0;        width: 800px;        background: #fff;}#content {        padding: 20px;}#footer {        background: #f0f0f0;        padding: 10px 20px;}#dockWrapper {        border-top: 1px solid #222;        border-bottom: 0;}#dockWrapper.top {        border-top: 0;        border-bottom: 1px solid #222;}'</body></methods><methods><class-id>Mootools.MochaDemoFixedWidth</class-id> <category>updating</category><body package="Mootools-Examples-MochaUI">updateRoot: anHtmlRoot	super updateRoot: anHtmlRoot.	anHtmlRoot title: 'Mootools MochaUI'.	anHtmlRoot script beJavascript; contents:'MochaUI.aboutWindow = function() {	new MochaUI.Window({		id: "about",		title: "MochaUI",		loadMethod: "xhr",		contentUrl: "', (MochaDemoLibrary / #aboutHtml) greaseString, '",		type: "modal2",		width: 350,		height: 195,		contentBgColor: ''#353535 url("', (MochaLibrary / #logo2Gif) greaseString, '") left 3px no-repeat'',		padding: { top: 43, right: 12, bottom: 10, left: 12 },		scrollbars: false	});}window.addEvent("domready", function() {	MochaUI.Desktop = new MochaUI.Desktop();	MochaUI.Dock = new MochaUI.Dock();	MochaUI.Modal = new MochaUI.Modal();	MochaUI.NewWindowsFromHTML = new MochaUI.NewWindowsFromHTML();	$("aboutLink").addEvent("click", function(e) {		new Event(e).stop();		MochaUI.aboutWindow();	});});'</body></methods><methods><class-id>Mootools.MochaDemoFixedWidth class</class-id> <category>class initialization</category><body package="Mootools-Examples-MochaUI">initialize	(WAAdmin register: self asApplicationAt: 'examples/mootools/mocha-ui/demo-fixed-width')		addLibrary: MootoolsLibrary;		addLibrary: MochaLibrary</body></methods><methods><class-id>Mootools.MochaDemoModalOnly</class-id> <category>updating</category><body package="Mootools-Examples-MochaUI">updateRoot: anHtmlRoot	super updateRoot: anHtmlRoot.	anHtmlRoot title: 'Mootools MochaUI'.	anHtmlRoot script beJavascript; contents:'window.addEvent("domready", function() {	if ($("modalDemoLink")) {		$("modalDemoLink").addEvent("click", function(e) {			new Event(e).stop();			new MochaUI.Window({				id: "modalDemo",				title: "A Modal Window",				content: "Your modal window content",				type: "modal",				width: 300,				height: 150			});		});	}	MochaUI.Modal = new MochaUI.Modal();});'</body></methods><methods><class-id>Mootools.MochaDemoModalOnly</class-id> <category>rendering</category><body package="Mootools-Examples-MochaUI">renderContentOn: html	html paragraph with: 'This is a modal demo without the MochaDesktop.'.	html paragraph with: 'Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Praesent eget orci. Nunc tortor lacus, volutpat et, placerat a, consectetuer eu, est. Vestibulum fringilla, libero vestibulum aliquet posuere, magna est ullamcorper leo, et dapibus pede tellus id est. Ut at eros. Donec posuere. Proin et mauris congue massa tempor fermentum. Vestibulum nec sem at lacus sollicitudin sodales. Etiam rutrum. Sed dapibus convallis nunc. In sollicitudin ipsum. Phasellus ut dolor. Nam mollis. Quisque ut ligula. Aliquam interdum eros vitae tortor. Vivamus sit amet sapien. Sed ante erat, tristique ac, posuere id, mollis et, leo. Fusce sollicitudin vulputate elit. Mauris fringilla pulvinar eros. Nunc ante libero, pellentesque id, laoreet a, aliquet gravida, quam. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.'.	html select with:		[html option value: 'test1'; with: 'Test1'.		html option value: 'test2'; with: 'Test2'.		html option value: 'test3'; with: 'Test3'.		html option value: 'test4'; with: 'Test4'].	html paragraph with: 'Fusce urna augue, ullamcorper eget, adipiscing a, commodo at, erat. Quisque arcu risus, ullamcorper sit amet, porttitor vitae, mollis eu, dolor. Donec eget orci. Aenean in risus. In vel lectus in massa dignissim scelerisque. Mauris in massa. Curabitur sapien. Nullam venenatis consequat eros. Aenean auctor quam. Suspendisse iaculis consectetuer mi. Praesent eu libero porttitor risus ornare vestibulum. Pellentesque luctus sapien tristique augue. Nam turpis metus, lobortis a, bibendum sit amet, tempor ut, neque. Nulla suscipit elit ac arcu. In hac habitasse platea dictumst. Vivamus velit mi, dignissim non, pellentesque sit amet, adipiscing in, purus. Praesent scelerisque vulputate metus. Vestibulum pede. Quisque enim. Mauris nec libero sagittis erat tempor imperdiet.'.	html paragraph with: [html anchor id: #modalDemoLink; url: ''; with: 'Demo Modal']</body></methods><methods><class-id>Mootools.MochaDemoModalOnly class</class-id> <category>class initialization</category><body package="Mootools-Examples-MochaUI">initialize	(WAAdmin register: self asApplicationAt: 'examples/mootools/mocha-ui/demo-modal-only')		addLibrary: MootoolsLibrary;		addLibrary: MochaLibrary</body></methods><methods><class-id>Mootools.MochaDemoNoDesktop</class-id> <category>rendering</category><body package="Mootools-Examples-MochaUI">renderContentOn: html	html div class: 'mocha'; id: 'myWindow01'; style: 'width: 300px; height: 255px; top: 50px; left: 350px'; with:		[html heading level: 3; class: 'mochaTitle'; with: 'My Window 01'.		html paragraph with: 'My Window Content'].	html div class: 'mocha'; id: 'myWindow02'; style: 'width: 300px; height: 275px; top: 120px; left: 420px'; with:		[html heading level: 3; class: 'mochaTitle'; with: 'My Window 02'.		html paragraph with: 'My Window Content'].	html div class: 'mocha'; id: 'myWindow03'; style: 'width: 300px; height: 105px; top: 190px; left: 490px'; with:		[html heading level: 3; class: 'mochaTitle'; with: 'My Window 03'.		html paragraph with: 'My Window Content'].</body></methods><methods><class-id>Mootools.MochaDemoNoDesktop</class-id> <category>updating</category><body package="Mootools-Examples-MochaUI">updateRoot: anHtmlRoot	super updateRoot: anHtmlRoot.	anHtmlRoot title: 'Mootools MochaUI'.	anHtmlRoot script beJavascript; contents:'window.addEvent("domready", function() {	MochaUI.NewWindowsFromHTML = new MochaUI.NewWindowsFromHTML();});'</body></methods><methods><class-id>Mootools.MochaDemoNoDesktop class</class-id> <category>class initialization</category><body package="Mootools-Examples-MochaUI">initialize	(WAAdmin register: self asApplicationAt: 'examples/mootools/mocha-ui/demo-no-desktop')		addLibrary: MootoolsLibrary;		addLibrary: MochaLibrary</body></methods><initialize><class-id>Mootools.MochaDemo</class-id></initialize><initialize><class-id>Mootools.MochaDemoVirtualDesktop</class-id></initialize><initialize><class-id>Mootools.MochaDemoNoToolbars</class-id></initialize><initialize><class-id>Mootools.MochaDemoFixedWidth</class-id></initialize><initialize><class-id>Mootools.MochaDemoModalOnly</class-id></initialize><initialize><class-id>Mootools.MochaDemoNoDesktop</class-id></initialize><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>WAFileLibrary</name><environment>Seaside</environment><super>Seaside.WAAbstractFileLibrary</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Seaside-Core-Libraries</category><attributes><package>Seaside-Core</package></attributes></class><class><name>WAComponent</name><environment>Seaside</environment><super>Seaside.WAPresenter</super><private>false</private><indexed-type>none</indexed-type><inst-vars>decoration </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Seaside-Component</category><attributes><package>Seaside-Component</package></attributes></class></st-source>