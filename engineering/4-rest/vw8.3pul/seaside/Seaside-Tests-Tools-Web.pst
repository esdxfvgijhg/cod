<?xml version="1.0"?><st-source><!-- Name: Seaside-Tests-Tools-WebComment: Unit tests for the package Seaside-Tools-Web.DbIdentifier: bear73DbTrace: 492656DbUsername: jkottDbVersion: 3.2.0 - pmm.26 1DevelopmentPrerequisites: #(#(#any 'Seaside-Namespace' '') #(#any 'Seaside-Tools-Web' '') #(#any 'Seaside-VisualWorks-Tools-Web' '') #(#any 'Seaside-Tests-Environment' ''))Id: e47dfba8-540a-4530-bc3f-1e5f4bf3ae8eNamespace: SeasidePackageName: Seaside-Tests-Tools-WebParcel: #('Seaside-Tests-Tools-Web')ParcelName: Seaside-Tests-Tools-WebPrerequisiteParcels: #(#('Seaside-Namespace' '') #('Seaside-Tools-Web' '') #('Seaside-VisualWorks-Tools-Web' '') #('Seaside-Tests-Environment' ''))PrintStringCache: (3.2.0 - pmm.26 1,jkott)Url: http://smalltalkhub.com/mc/Seaside/Seaside32/main/Seaside-Tests-Tools-Web-pmm.26.mczVersion: 3.2.0 - pmm.26 1Date: 12:17:56 PM September 16, 2016 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.3 (sep16.3) of September 16, 2016 on September 16, 2016 at 12:17:56 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>WACloneHandlerTest</name><environment>Seaside</environment><super>SUnit.TestCase</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Seaside-Tests-Tools-Web</category><attributes><package>Seaside-Tests-Tools-Web</package></attributes></class><class><name>WADispatcherComponentTest</name><environment>Seaside</environment><super>Seaside.WAContextTest</super><private>false</private><indexed-type>none</indexed-type><inst-vars>configApplication rootHandler childHandler normalApplication </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Seaside-Tests-Tools-Web</category><attributes><package>Seaside-Tests-Tools-Web</package></attributes></class><class><name>WAToolsWebDefaultHandlersTest</name><environment>Seaside</environment><super>Seaside.WAEnvironmentDefaultHandlersTest</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Seaside-Tests-Tools-Web</category><attributes><package>Seaside-Tests-Tools-Web</package></attributes></class><class><name>WAExpiringAttributeEditorTest</name><environment>Seaside</environment><super>SUnit.TestCase</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Seaside-Tests-Tools-Web</category><attributes><package>Seaside-Tests-Tools-Web</package></attributes></class><methods><class-id>Seaside.WACloneHandlerTest</class-id> <category>tests</category><body package="Seaside-Tests-Tools-Web">testCloneApplication	| app handler key clone |	app := WADispatcher new register: WARegistry new at: 'app'.	handler := WARequestHandler new.	key := app register: handler.		clone := app cloneHandler.		self assert: (app cache at: key ifAbsent: [ nil ]) = handler.	self assert: (clone cache at: key ifAbsent: [ nil ]) isNil</body></methods><methods><class-id>Seaside.WADispatcherComponentTest</class-id> <category>tests</category><body package="Seaside-Tests-Tools-Web">testNestedDispatcher	| configComponent |	configComponent := WAConfigurationBrowser on: rootHandler.	self requestContextWithUrl: '/config/child'.	self requestContext consumer next.	self requestContext session properties at: #presenter put: WAComponent new.	configComponent initialRequest: self requestContext request.	self assert: configComponent dispatcher == childHandler</body><body package="Seaside-Tests-Tools-Web">testUnregister	| url |	url := normalApplication url.	url path removeFirst.	self assert: (WAAdmin unregister: url pathStringUnencoded in: rootHandler) = normalApplication.	self assert: (WAAdmin unregister: url pathStringUnencoded in: rootHandler) isNil.		url := childHandler url.	url path removeFirst.	self assert: (WAAdmin unregister: url pathStringUnencoded in: rootHandler) = childHandler.	self assert: (WAAdmin unregister: url pathStringUnencoded in: rootHandler) isNil.		self assert: (WAAdmin unregister: '/not-existing' in: rootHandler) isNil</body></methods><methods><class-id>Seaside.WADispatcherComponentTest</class-id> <category>configuration</category><body package="Seaside-Tests-Tools-Web">createHandlers	^ Array with: rootHandler with: configApplication with: WASession new</body></methods><methods><class-id>Seaside.WADispatcherComponentTest</class-id> <category>running</category><body package="Seaside-Tests-Tools-Web">setUp	super setUp.	rootHandler := WADispatcher new.	rootHandler := rootHandler register: WADispatcher new at: 'seaside'.	childHandler := rootHandler register: WADispatcher new at: 'child'.	configApplication := WAAdmin register: WAConfigurationBrowser asApplicationAt: 'config' in: rootHandler.	normalApplication := WAAdmin register: WAApplication 		at: 'counter'		in: childHandler.	normalApplication configuration addParent: WARenderLoopConfiguration instance.	normalApplication rootClass: WAConfigurationBrowser</body></methods><methods><class-id>Seaside.WAToolsWebDefaultHandlersTest</class-id> <category>tests</category><body package="Seaside-Tests-Tools-Web">testDefaultConfig	| app |	app := self defaultDispatcher handlerAt: 'config'.	self assert: app class == WAApplication.	self assert: app isApplication.	self deny: app isDispatcher.	self deny: app parent isNil.	self assert: app name = 'config'.	self assert: app url pathStringUnencoded = '/config'</body></methods><methods><class-id>Seaside.WAExpiringAttributeEditorTest</class-id> <category>testing</category><body package="Seaside-Tests-Tools-Web">testAsUnsignedInteger	"Compatibility test to make sure the method is there."	self assert: '1' asUnsignedInteger = 1.	self assert: '-1' asUnsignedInteger = 1.	self assert: 'squeak' asUnsignedInteger isNil</body></methods><methods><class-id>Grease.GRPackage class</class-id> <category>*seaside-tests-tools-web</category><body package="Seaside-Tests-Tools-Web">seasideTestsToolsWeb	^ self new		name: 'Seaside-Tests-Tools-Web';		description: 'Unit tests for the package Seaside-Tools-Web.';		addDependency: 'Seaside-Tools-Web';		addDependency: 'Seaside-Tests-Environment';		url: #seasideUrl;		yourself</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>TestCase</name><environment>SUnit</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>testSelector </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>SUnit</category><attributes><package>SUnitToo</package></attributes></class><class><name>WAContextTest</name><environment>Seaside</environment><super>SUnit.TestCase</super><private>false</private><indexed-type>none</indexed-type><inst-vars>requestContext </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Seaside-Tests-Core-RequestHandling</category><attributes><package>Seaside-Tests-Core</package></attributes></class><class><name>WAEnvironmentDefaultHandlersTest</name><environment>Seaside</environment><super>SUnit.TestCase</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Seaside-Tests-Environment</category><attributes><package>Seaside-Tests-Environment</package></attributes></class></st-source>