<?xml version="1.0"?><st-source><!-- Name: JQuery-UIComment: jQuery-UI integration for Seaside. Expression through code.DbIdentifier: bear73DbTrace: 492614DbUsername: jkottDbVersion: 3.2.0 - JohanBrichau.94 1DevelopmentPrerequisites: #(#(#any 'JQuery-Namespace' '') #(#any 'JQuery-Core' ''))Id: ab8f8b66-f410-43d3-ba0b-616507cce68bNamespace: JQueryPackageName: JQuery-UIParcel: #('JQuery-UI')ParcelName: JQuery-UIPrerequisiteParcels: #(#('JQuery-Namespace' '') #('JQuery-Core' ''))PrintStringCache: (3.2.0 - JohanBrichau.94 1,jkott)Url: http://smalltalkhub.com/mc/Seaside/Seaside32/main/JQuery-UI-JohanBrichau.94.mczVersion: 3.2.0 - JohanBrichau.94 1Date: 3:31:30 PM June 30, 2017 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.3 (jun17.5) of June 30, 2017 on June 30, 2017 at 3:31:30 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>JQWidget</name><environment>JQuery</environment><super>JQuery.JQPlugin</super><private>false</private><indexed-type>none</indexed-type><inst-vars>action arguments </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Objects</category><attributes><package>JQuery-UI</package></attributes></class><class><name>JQDialog</name><environment>JQuery</environment><super>JQuery.JQWidget</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Widgets</category><attributes><package>JQuery-UI</package></attributes></class><comment><class-id>JQuery.JQDialog</class-id><body>Make the selected elements Dialog boxes.</body></comment><class><name>JQBaseTheme</name><environment>JQuery</environment><super>Seaside.WAFileLibrary</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Libraries</category><attributes><package>JQuery-UI</package></attributes></class><class><name>JQRedmondTheme</name><environment>JQuery</environment><super>JQuery.JQBaseTheme</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Libraries</category><attributes><package>JQuery-UI</package></attributes></class><class><name>JQFlickTheme</name><environment>JQuery</environment><super>JQuery.JQBaseTheme</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Libraries</category><attributes><package>JQuery-UI</package></attributes></class><class><name>JQSelectable</name><environment>JQuery</environment><super>JQuery.JQWidget</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Interaction</category><attributes><package>JQuery-UI</package></attributes></class><comment><class-id>JQuery.JQSelectable</class-id><body>Creates new selectable on the nodeset supplied by the query.</body></comment><class><name>JQDotLuvTheme</name><environment>JQuery</environment><super>JQuery.JQBaseTheme</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Libraries</category><attributes><package>JQuery-UI</package></attributes></class><class><name>JQUiGoogleLibrary</name><environment>JQuery</environment><super>Seaside.WAFileLibrary</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Libraries</category><attributes><package>JQuery-UI</package></attributes></class><class><name>JQUiLightnessTheme</name><environment>JQuery</environment><super>JQuery.JQBaseTheme</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Libraries</category><attributes><package>JQuery-UI</package></attributes></class><class><name>JQProgressbar</name><environment>JQuery</environment><super>JQuery.JQWidget</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Widgets</category><attributes><package>JQuery-UI</package></attributes></class><comment><class-id>JQuery.JQProgressbar</class-id><body>Make the selected elements progressbar.</body></comment><class><name>JQSouthStreetTheme</name><environment>JQuery</environment><super>JQuery.JQBaseTheme</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Libraries</category><attributes><package>JQuery-UI</package></attributes></class><class><name>JQDarkHiveTheme</name><environment>JQuery</environment><super>JQuery.JQBaseTheme</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Libraries</category><attributes><package>JQuery-UI</package></attributes></class><class><name>JQButton</name><environment>JQuery</environment><super>JQuery.JQWidget</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Widgets</category><attributes><package>JQuery-UI</package></attributes></class><comment><class-id>JQuery.JQButton</class-id><body>Button enhances standard form elements like button, input of type submit or reset or anchors to themable buttons with appropiate mouseover and active styles.In addition to basic push buttons, radio buttons and checkboxes (inputs of type radio and checkbox) can be converted to buttons: Their associated label is styled to appear as the button, while the underlying input is updated on click.Buttons can be grouped using the buttonSet method, which should be always applied for radio buttons.</body></comment><class><name>JQEffect</name><environment>JQuery</environment><super>JQuery.JQPlugin</super><private>false</private><indexed-type>none</indexed-type><inst-vars>method effect speed complete </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Objects</category><attributes><package>JQuery-UI</package></attributes></class><comment><class-id>JQuery.JQEffect</class-id><body>This is the core dependency of the effects of jQuery UI. This file is needed by all other effects and can also be used as stand-alone. Please note that ui.core.js is not a dependency for the effects to work.</body></comment><class><name>JQSmoothnessTheme</name><environment>JQuery</environment><super>JQuery.JQBaseTheme</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Libraries</category><attributes><package>JQuery-UI</package></attributes></class><class><name>JQAccordion</name><environment>JQuery</environment><super>JQuery.JQWidget</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Widgets</category><attributes><package>JQuery-UI</package></attributes></class><comment><class-id>JQuery.JQAccordion</class-id><body>An expandable/collapsible content pane. Applicable when content must be displayed within limited space.</body></comment><class><name>JQSwankyPurseTheme</name><environment>JQuery</environment><super>JQuery.JQBaseTheme</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Libraries</category><attributes><package>JQuery-UI</package></attributes></class><class><name>JQDatepicker</name><environment>JQuery</environment><super>JQuery.JQWidget</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Widgets</category><attributes><package>JQuery-UI</package></attributes></class><comment><class-id>JQuery.JQDatepicker</class-id><body>A highly configurable plugin that adds datepicker functionality to your pages. You can restrict the functionality in various ways, you can select date ranges, and you can provide the date in picker in a number of languages.</body></comment><class><name>JQEggplantTheme</name><environment>JQuery</environment><super>JQuery.JQBaseTheme</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Libraries</category><attributes><package>JQuery-UI</package></attributes></class><class><name>JQBlackTieTheme</name><environment>JQuery</environment><super>JQuery.JQBaseTheme</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Libraries</category><attributes><package>JQuery-UI</package></attributes></class><class><name>JQAutocomplete</name><environment>JQuery</environment><super>JQuery.JQWidget</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Widgets</category><attributes><package>JQuery-UI</package></attributes></class><comment><class-id>JQuery.JQAutocomplete</class-id><body>Autocomplete, added to an input field, enables users to quickly find and select from a pre-populated list of values as they type, leveraging searching and filtering.</body></comment><class><name>JQSlider</name><environment>JQuery</environment><super>JQuery.JQWidget</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Widgets</category><attributes><package>JQuery-UI</package></attributes></class><class><name>JQHotSneaksTheme</name><environment>JQuery</environment><super>JQuery.JQBaseTheme</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Libraries</category><attributes><package>JQuery-UI</package></attributes></class><class><name>JQVaderTheme</name><environment>JQuery</environment><super>JQuery.JQBaseTheme</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Libraries</category><attributes><package>JQuery-UI</package></attributes></class><class><name>JQLeFrogTheme</name><environment>JQuery</environment><super>JQuery.JQBaseTheme</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Libraries</category><attributes><package>JQuery-UI</package></attributes></class><class><name>JQDraggable</name><environment>JQuery</environment><super>JQuery.JQWidget</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Interaction</category><attributes><package>JQuery-UI</package></attributes></class><comment><class-id>JQuery.JQDraggable</class-id><body>Creates new draggables on the nodeset supplied by the query.</body></comment><class><name>JQTrontasticTheme</name><environment>JQuery</environment><super>JQuery.JQBaseTheme</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Libraries</category><attributes><package>JQuery-UI</package></attributes></class><class><name>JQPosition</name><environment>JQuery</environment><super>JQuery.JQWidget</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Utility</category><attributes><package>JQuery-UI</package></attributes></class><class><name>JQPepperGrinderTheme</name><environment>JQuery</environment><super>JQuery.JQBaseTheme</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Libraries</category><attributes><package>JQuery-UI</package></attributes></class><class><name>JQExciteBikeTheme</name><environment>JQuery</environment><super>JQuery.JQBaseTheme</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Libraries</category><attributes><package>JQuery-UI</package></attributes></class><class><name>JQSortable</name><environment>JQuery</environment><super>JQuery.JQWidget</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Interaction</category><attributes><package>JQuery-UI</package></attributes></class><comment><class-id>JQuery.JQSortable</class-id><body>Creates new sortable on the nodeset supplied by the query.</body></comment><class><name>JQResizable</name><environment>JQuery</environment><super>JQuery.JQWidget</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Interaction</category><attributes><package>JQuery-UI</package></attributes></class><comment><class-id>JQuery.JQResizable</class-id><body>Creates new resizables on the nodeset supplied by the query.</body></comment><class><name>JQMintChocTheme</name><environment>JQuery</environment><super>JQuery.JQBaseTheme</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Libraries</category><attributes><package>JQuery-UI</package></attributes></class><class><name>JQStartTheme</name><environment>JQuery</environment><super>JQuery.JQBaseTheme</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Libraries</category><attributes><package>JQuery-UI</package></attributes></class><class><name>JQHumanityTheme</name><environment>JQuery</environment><super>JQuery.JQBaseTheme</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Libraries</category><attributes><package>JQuery-UI</package></attributes></class><class><name>JQUiDevelopmentLibrary</name><environment>JQuery</environment><super>Seaside.WAFileLibrary</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Libraries</category><attributes><package>JQuery-UI</package></attributes></class><class><name>JQBlitzerTheme</name><environment>JQuery</environment><super>JQuery.JQBaseTheme</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Libraries</category><attributes><package>JQuery-UI</package></attributes></class><class><name>JQDroppable</name><environment>JQuery</environment><super>JQuery.JQWidget</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Interaction</category><attributes><package>JQuery-UI</package></attributes></class><comment><class-id>JQuery.JQDroppable</class-id><body>Creates new droppables on the nodeset supplied by the query.</body></comment><class><name>JQTabs</name><environment>JQuery</environment><super>JQuery.JQWidget</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Widgets</category><attributes><package>JQuery-UI</package></attributes></class><class><name>JQOvercastTheme</name><environment>JQuery</environment><super>JQuery.JQBaseTheme</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Libraries</category><attributes><package>JQuery-UI</package></attributes></class><class><name>JQUiDarknessTheme</name><environment>JQuery</environment><super>JQuery.JQBaseTheme</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Libraries</category><attributes><package>JQuery-UI</package></attributes></class><class><name>JQUiDeploymentLibrary</name><environment>JQuery</environment><super>Seaside.WAFileLibrary</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Libraries</category><attributes><package>JQuery-UI</package></attributes></class><class><name>JQCupertinoTheme</name><environment>JQuery</environment><super>JQuery.JQBaseTheme</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Libraries</category><attributes><package>JQuery-UI</package></attributes></class><class><name>JQSunnyTheme</name><environment>JQuery</environment><super>JQuery.JQBaseTheme</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-UI-Libraries</category><attributes><package>JQuery-UI</package></attributes></class><methods><class-id>JQuery.JQWidget</class-id> <category>private</category><body package="JQuery-UI">action: aString	self action: aString arguments: nil</body><body package="JQuery-UI">action: aString arguments: anArray	action := aString.	arguments := anArray</body></methods><methods><class-id>JQuery.JQWidget</class-id> <category>actions</category><body package="JQuery-UI">destroy	"Completely remove the functionality."		self action: 'destroy'</body><body package="JQuery-UI">disable	"Disable the functionality."		self action: 'disable'</body><body package="JQuery-UI">enable	"Enable the functionality."					self action: 'enable'</body><body package="JQuery-UI">option: aString	"Get an option aString."		self action: 'option' arguments: (Array with: aString)</body><body package="JQuery-UI">option: aString put: anObject	"Set an option aString to anObject."		self action: 'option' arguments: (Array with: aString with: anObject)</body></methods><methods><class-id>JQuery.JQWidget</class-id> <category>accessing</category><body package="JQuery-UI">arguments	| result |	result := OrderedCollection new.	action isNil		ifFalse: [ result addLast: action ].	arguments isNil		ifFalse: [ result addAll: arguments ].	(options isNil or: [ options isEmpty ])		ifFalse: [ result addLast: options ].	^ result</body></methods><methods><class-id>JQuery.JQWidget class</class-id> <category>private</category><body package="JQuery-UI">generate	"This code is used to generate the widget classes from the JQuery documentation. It is not necessary to port or call this method from any Smalltalk platform other than Pharo. The actual code of this method is commented to avoid problems on other platforms."	"| model base comment |	model := RBNamespace new.	base := 'http://docs.jquery.com/action/raw/'.	comment := [ :input |		(String with: (Character value: 34)) , ((((input copyWithRegex: '&lt;(li|br/?)&gt;' matchesReplacedWith: (String with: Character cr)) copyWithRegex: '&lt;[^&gt;]+&gt;' matchesReplacedWith: '') copyReplaceAll: (String with: (Character value: 34)) with: '''') copyReplaceAll: '''''' with: '''') , (String with: (Character value: 34)) ].	#(	'Draggable'		'UI/API/1.8/Draggable'		'Droppable'		'UI/API/1.8/Droppable'		'Resizable'		'UI/API/1.8/Resizable' 		'Selectable'		'UI/API/1.8/Selectable' 		'Sortable'		'UI/API/1.8/Sortable'				'Accordion'		'UI/API/1.8/Accordion'		'Autocomplete'	'UI/API/1.8/Autocomplete'		'Button'			'UI/API/1.8/Button'		'Datepicker'	'UI/API/1.8/Datepicker'		'Dialog'			'UI/API/1.8/Dialog'		'Progressbar'	'UI/API/1.7.2/Progressbar'		'Slider'			'UI/API/1.8/Slider'		'Tabs'			'UI/API/1.8/Tabs'				'Position'		'UI/Utility/Position') pairsDo: [ :id :url |		| stream string class matcher tokens argument dictionary removals selector source |		' fetch documentation '.		stream := HTTPSocket httpGet: base , url.		stream isString ifTrue: [ self error: stream ].		string := (stream contents			replaceAll: Character cr with: Character space)			replaceAll: Character lf with: Character space.		' prepare class '.		removals := Set new.		class := model classNamed: ('JQ' , id) asSymbol.		class isNil ifTrue: [ self error: 'Class not found JQ' , id ].		class selectors do: [ :rselector |			((class protocolsFor: rselector)				anySatisfy: [ :each | each endsWith: '-generated' ])					ifTrue: [ removals add: rselector ] ].		' generate options '.		matcher := '\{\{UIAPIPluginOption\|' asRegex.		matcher matchesIn: string do: [ :match |			tokens := string copyFrom: (matcher subEnd: 1) first + 1 to: string size.			tokens := (((tokens readStream upToAll: '}}')				copyReplaceAll: '|' with: ' |') findTokens: $|)				collect: [ :each | each withBlanksCondensed ].			argument := ((tokens at: 3)				copyReplaceAll: ',' with: 'Or')				select: [ :each | each isAlphaNumeric ].			argument := (argument first isVowel				ifTrue: [ 'an' ] ifFalse: [ 'a' ]) , argument.			selector := ((tokens at: 2) , ':') asSymbol.			source := selector , ' ' , argument , '	' , (comment value: (tokens at: 5)) , '	self optionAt: ' , (tokens at: 2) printString , ' put: ' , argument.			removals remove: selector ifAbsent: [ ].			(class sourceCodeFor: selector) = source				ifFalse: [ class compile: source classified: #'options-generated' ] ].					' generate utility options '.		matcher := '\{\{UIAPIUtilityOption\|' asRegex.		matcher matchesIn: string do: [ :match |			tokens := string copyFrom: (matcher subEnd: 1) first + 1 to: string size.			tokens := (((tokens readStream upToAll: '}}')				copyReplaceAll: '|' with: ' |') findTokens: $|)				collect: [ :each | each withBlanksCondensed ].			argument := ((tokens at: 2)				copyReplaceAll: ',' with: 'Or')				select: [ :each | each isAlphaNumeric ].			argument := (argument first isVowel				ifTrue: [ 'an' ] ifFalse: [ 'a' ]) , argument.			selector := ((tokens at: 1) , ':') asSymbol.			source := selector , ' ' , argument , '	' , (comment value: (tokens at: 4)) , '	self optionAt: ' , (tokens at: 1) printString , ' put: ' , argument.			removals remove: selector ifAbsent: [ ].			(class sourceCodeFor: selector) = source				ifFalse: [ class compile: source classified: #'options-generated' ] ].		' generate events '.		matcher := '\{\{(UIAPIPluginEvent|UIAPIPluginDatepickerEvent)\|' asRegex.		matcher matchesIn: string do: [ :match |			tokens := string copyFrom: (matcher subEnd: 1) first to: string size.			dictionary := Dictionary new.			((tokens readStream upToAll: '}}') findTokens: $|) do: [ :each |				dictionary					at: (each copyUpTo: $=) withBlanksCondensed asLowercase					put: (each copyAfter: $=) withBlanksCondensed ].			((dictionary includesKey: 'event') and: [ dictionary includesKey: 'description' ]) ifTrue: [				selector := ((((dictionary at: 'event') beginsWith: 'on')					ifTrue: [ dictionary at: 'event' ]					ifFalse: [ 'on' , (dictionary at: 'event') capitalized ]) , ':') asSymbol.				source := selector , ' anObject	' , (comment value: (dictionary at: 'description')) , '	self optionAt: ' , (dictionary at: 'event') printString , ' put: anObject asFunction'.				removals remove: selector ifAbsent: [ ].				(class sourceCodeFor: selector) = source					ifFalse: [ class compile: source classified: #'events-generated' ] ] ].					' generate methods '.		matcher := '\{\{UIAPIPluginMethod\|' asRegex.		matcher matchesIn: string do: [ :match |			tokens := string copyFrom: (matcher subEnd: 1) first to: string size.			Transcript show: class name; show: (tokens readStream upToAll: '}}'); cr; cr ].		' remove methods not present anymore '.		removals do: [ :rselector | class removeMethod: rselector ] ].	' open changes '.	model changes open"</body></methods><methods><class-id>JQuery.JQDialog</class-id> <category>callbacks</category><body package="JQuery-UI">html: aBlock	"Conveniance method that takes a block that is used to render the contents of the window when being opened."	self autoOpen: false.	self onOpen: (self owner copy load		html: aBlock)</body></methods><methods><class-id>JQuery.JQDialog</class-id> <category>accessing</category><body package="JQuery-UI">method	^ 'dialog'</body></methods><methods><class-id>JQuery.JQDialog</class-id> <category>actions</category><body package="JQuery-UI">close	"Closes the specified dialog boxes."		self action: 'close'</body><body package="JQuery-UI">isOpen	"Returns true if the dialog is currently open."		self action: 'isOpen'</body><body package="JQuery-UI">moveToTop	"Moves the speicifed dialog on top of the dialogs stack."		self action: 'moveToTop'</body><body package="JQuery-UI">open	"Opens the specified dialog boxes."		self action: 'open'</body></methods><methods><class-id>JQuery.JQDialog</class-id> <category>options-generated</category><body package="JQuery-UI">appendTo: aString	"Which element the dialog (and overlay, if modal) should be appended to."	self optionAt: 'appendTo' put: aString</body><body package="JQuery-UI">autoOpen: aBoolean	"When 'autoOpen' is 'true' the dialog will open automatically when 'dialog' is called. If 'false' it will stay hidden until '.dialog('open')' is called on it."	self optionAt: 'autoOpen' put: aBoolean</body><body package="JQuery-UI">buttons: aDictionary	"Specifies which buttons should be displayed on the dialog. The property key is the text of the button. The value is the callback function for when the button is clicked. The context of the callback is the dialog element; if you need access to the button, it is available as the target of the event object."	self optionAt: 'buttons' put: aDictionary</body><body package="JQuery-UI">closeOnEscape: aBoolean	"Specifies whether the dialog should close when it has focus and the user presses the esacpe (ESC) key."	self optionAt: 'closeOnEscape' put: aBoolean</body><body package="JQuery-UI">closeText: aString	"Specifies the text for the close button. Note that the close text is visibly hidden when using a standard theme."	self optionAt: 'closeText' put: aString</body><body package="JQuery-UI">dialogClass: aString	"The specified class name(s) will be added to the dialog, for additional theming."	self optionAt: 'dialogClass' put: aString</body><body package="JQuery-UI">draggable: aBoolean	"If set to true, the dialog will be draggable will be draggable by the titlebar."	self optionAt: 'draggable' put: aBoolean</body><body package="JQuery-UI">height: aNumber	"The height of the dialog, in pixels. Specifying 'auto' is also supported to make the dialog adjust based on its content."	self optionAt: 'height' put: aNumber</body><body package="JQuery-UI">hide: aStringOrObject	"The effect to be used when the dialog is closed."	self optionAt: 'hide' put: aStringOrObject</body><body package="JQuery-UI">maxHeight: aNumber	"The maximum height to which the dialog can be resized, in pixels."	self optionAt: 'maxHeight' put: aNumber</body><body package="JQuery-UI">maxWidth: aNumber	"The maximum width to which the dialog can be resized, in pixels."	self optionAt: 'maxWidth' put: aNumber</body><body package="JQuery-UI">minHeight: aNumber	"The minimum height to which the dialog can be resized, in pixels."	self optionAt: 'minHeight' put: aNumber</body><body package="JQuery-UI">minWidth: aNumber	"The minimum width to which the dialog can be resized, in pixels."	self optionAt: 'minWidth' put: aNumber</body><body package="JQuery-UI">modal: aBoolean	"If set to true, the dialog will have modal behavior; other items on the page will be disabled (i.e. cannot be interacted with). Modal dialogs create an overlay below the dialog but above other page elements."	self optionAt: 'modal' put: aBoolean</body><body package="JQuery-UI">position: aStringOrArray	"Specifies where the dialog should be displayed. See details at http://api.jqueryui.com/dialog/#option-position"	self optionAt: 'position' put: aStringOrArray</body><body package="JQuery-UI">resizable: aBoolean	"If set to true, the dialog will be resizeable."	self optionAt: 'resizable' put: aBoolean</body><body package="JQuery-UI">show: aStringOrObject	"The effect to be used when the dialog is opened."	self optionAt: 'show' put: aStringOrObject</body><body package="JQuery-UI">title: aString	"Specifies the title of the dialog. Any valid HTML may be set as the title. The title can also be specified by the title attribute on the dialog source element."	self optionAt: 'title' put: aString</body><body package="JQuery-UI">width: aNumber	"The width of the dialog, in pixels."	self optionAt: 'width' put: aNumber</body></methods><methods><class-id>JQuery.JQDialog</class-id> <category>events-generated</category><body package="JQuery-UI">onBeforeClose: anObject	"This event is triggered when a dialog attempts to close. If the beforeClose event handler (callback function) returns false, the close will be prevented."	self optionAt: 'beforeClose' put: anObject asFunction</body><body package="JQuery-UI">onClose: anObject	"This event is triggered when the dialog is closed."	self optionAt: 'close' put: anObject asFunction</body><body package="JQuery-UI">onDrag: anObject	"This event is triggered when the dialog is dragged."	self optionAt: 'drag' put: anObject asFunction</body><body package="JQuery-UI">onDragStart: anObject	"This event is triggered at the beginning of the dialog being dragged."	self optionAt: 'dragStart' put: anObject asFunction</body><body package="JQuery-UI">onDragStop: anObject	"This event is triggered after the dialog has been dragged."	self optionAt: 'dragStop' put: anObject asFunction</body><body package="JQuery-UI">onFocus: anObject	"This event is triggered when the dialog gains focus."	self optionAt: 'focus' put: anObject asFunction</body><body package="JQuery-UI">onOpen: anObject	"This event is triggered when dialog is opened."	self optionAt: 'open' put: anObject asFunction</body><body package="JQuery-UI">onResize: anObject	"This event is triggered when the dialog is resized. [http://www.jsfiddle.net/Jp7TM/18/ demo]"	self optionAt: 'resize' put: anObject asFunction</body><body package="JQuery-UI">onResizeStart: anObject	"This event is triggered at the beginning of the dialog being resized."	self optionAt: 'resizeStart' put: anObject asFunction</body><body package="JQuery-UI">onResizeStop: anObject	"This event is triggered after the dialog has been resized."	self optionAt: 'resizeStop' put: anObject asFunction</body></methods><methods><class-id>JQuery.JQDialog</class-id> <category>convenience</category><body package="JQuery-UI">addButton: aString do: anObject 	"Adds a new button with the label aString and the action anObject."	(self options 		at: 'buttons'		ifAbsentPut: [ GRSmallDictionary new ]) 		at: aString		put: anObject asFunction</body></methods><methods><class-id>JQuery.JQBaseTheme</class-id> <category>accessing</category><body package="JQuery-UI">themeName	^ 'base'</body></methods><methods><class-id>JQuery.JQBaseTheme</class-id> <category>updating</category><body package="JQuery-UI">updateRoot: anHtmlRoot	anHtmlRoot stylesheet		url: 'https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.18/themes/' , self themeName , '/jquery-ui.css'</body></methods><methods><class-id>JQuery.JQBaseTheme class</class-id> <category>private</category><body package="JQuery-UI">generate	"This code is used to generate the theme classes. It is not necessary to port or call this method from any Smalltalk platform other than Pharo. The actual code of this method is commented to avoid problems on other platforms."	"| model themes className |	model := (Smalltalk at: #RBNamespace) new.	themes := #('black-tie' 'blitzer' 'cupertino' 'dark-hive' 'dot-luv' 'eggplant' 'excite-bike' 'flick' 'hot-sneaks' 'humanity' 'le-frog' 'mint-choc' 'overcast' 'pepper-grinder' 'redmond' 'smoothness' 'south-street' 'start' 'sunny' 'swanky-purse' 'trontastic' 'ui-darkness' 'ui-lightness' 'vader').	(model classNamed: self name) subclasses		do: [ :each | model removeClass: each ].	themes do: [ :theme |		className := ((((theme findTokens: $-)			collect: [ :each | each asCapitalizedPhrase ])			inject: 'JQ' into: [ :a :b | a , b ]) , 'Theme')			asSymbol.		model defineClass: ('&lt;1s&gt; subclass: #&lt;2s&gt;			instanceVariableNames: ''''			classVariableNames: ''''			poolDictionaries: ''''			category: &lt;3p&gt;'				expandMacrosWith: self name				with: className				with: self category).		(model classNamed: className)			compile: 'themeName	^ ' , theme printString			classified: #accessing ].	model changes open"		self error: 'comment only'</body></methods><methods><class-id>JQuery.JQRedmondTheme</class-id> <category>accessing</category><body package="JQuery-UI">themeName	^ 'redmond'</body></methods><methods><class-id>JQuery.JQFlickTheme</class-id> <category>accessing</category><body package="JQuery-UI">themeName	^ 'flick'</body></methods><methods><class-id>JQuery.JQSelectable</class-id> <category>accessing</category><body package="JQuery-UI">method	^ 'selectable'</body></methods><methods><class-id>JQuery.JQSelectable</class-id> <category>actions</category><body package="JQuery-UI">refresh	"Refresh the position and size of each selectee element."		self action: 'refresh'</body></methods><methods><class-id>JQuery.JQSelectable</class-id> <category>options-generated</category><body package="JQuery-UI">autoRefresh: aBoolean	"This determines whether to refresh (recalculate) the position and size of each selectee at the beginning of each select operation. If you have many many items, you may want to set this to false and call the refresh method manually."	self optionAt: 'autoRefresh' put: aBoolean</body><body package="JQuery-UI">cancel: aSelector	"Prevents selecting if you start on elements matching the selector."	self optionAt: 'cancel' put: aSelector</body><body package="JQuery-UI">delay: anInteger	"Time in milliseconds to define when the selecting should start. It helps preventing unwanted selections when clicking on an element."	self optionAt: 'delay' put: anInteger</body><body package="JQuery-UI">distance: anInteger	"Tolerance, in pixels, for when selecting should start. If specified, selecting will not start until after mouse is dragged beyond distance."	self optionAt: 'distance' put: anInteger</body><body package="JQuery-UI">filter: aSelector	"The matching child elements will be made selectees (able to be selected)."	self optionAt: 'filter' put: aSelector</body><body package="JQuery-UI">tolerance: aString	"Possible values: 'touch', 'fit'.  ''fit'': draggable overlaps the droppable entirely ''touch'': draggable overlaps the droppable any amount "	self optionAt: 'tolerance' put: aString</body></methods><methods><class-id>JQuery.JQSelectable</class-id> <category>events-generated</category><body package="JQuery-UI">onSelected: anObject	"This event is triggered at the end of the select operation, on each element added to the selection."	self optionAt: 'selected' put: anObject asFunction</body><body package="JQuery-UI">onSelecting: anObject	"This event is triggered during the select operation, on each element added to the selection."	self optionAt: 'selecting' put: anObject asFunction</body><body package="JQuery-UI">onStart: anObject	"This event is triggered at the beginning of the select operation."	self optionAt: 'start' put: anObject asFunction</body><body package="JQuery-UI">onStop: anObject	"This event is triggered at the end of the select operation."	self optionAt: 'stop' put: anObject asFunction</body><body package="JQuery-UI">onUnselected: anObject	"This event is triggered at the end of the select operation, on each element removed from the selection."	self optionAt: 'unselected' put: anObject asFunction</body><body package="JQuery-UI">onUnselecting: anObject	"This event is triggered during the select operation, on each element removed from the selection."	self optionAt: 'unselecting' put: anObject asFunction</body></methods><methods><class-id>JQuery.JQDotLuvTheme</class-id> <category>accessing</category><body package="JQuery-UI">themeName	^ 'dot-luv'</body></methods><methods><class-id>JQuery.JQUiGoogleLibrary</class-id> <category>updating</category><body package="JQuery-UI">updateRoot: anHtmlRoot	super updateRoot: anHtmlRoot.	anHtmlRoot javascript		url: 'http://ajax.googleapis.com/ajax/libs/jqueryui/1.10.4/jquery-ui.min.js'</body></methods><methods><class-id>JQuery.JQUiLightnessTheme</class-id> <category>accessing</category><body package="JQuery-UI">themeName	^ 'ui-lightness'</body></methods><methods><class-id>JQuery.JQProgressbar</class-id> <category>accessing</category><body package="JQuery-UI">method	^ 'progressbar'</body></methods><methods><class-id>JQuery.JQProgressbar</class-id> <category>options-generated</category><body package="JQuery-UI">value: aNumber	"The value of the progressbar."	self optionAt: 'value' put: aNumber</body></methods><methods><class-id>JQuery.JQProgressbar</class-id> <category>events-generated</category><body package="JQuery-UI">onChange: anObject	"This event is triggered when the value of the progressbar changes."	self optionAt: 'change' put: anObject asFunction</body></methods><methods><class-id>JQuery.JQProgressbar</class-id> <category>actions</category><body package="JQuery-UI">getValue	"This method gets the current value of the progressbar."	self action: 'value'</body><body package="JQuery-UI">setValue: aNumber	"This method sets the current value of the progressbar."	self action: 'value' arguments: (Array with: aNumber)</body></methods><methods><class-id>JQuery.JQSouthStreetTheme</class-id> <category>accessing</category><body package="JQuery-UI">themeName	^ 'south-street'</body></methods><methods><class-id>JQuery.JQDarkHiveTheme</class-id> <category>accessing</category><body package="JQuery-UI">themeName	^ 'dark-hive'</body></methods><methods><class-id>JQuery.JQButton</class-id> <category>options-generated</category><body package="JQuery-UI">icons: anOptions	"Icons to display, with or without text (see text option). The primary icon is displayed by default on the left of the label text, the secondary by default is on the right. Value for the primary and secondary properties must be a classname (String), eg. 'ui-icon-gear'. For using only one icon: icons: {primary:'ui-icon-locked'}. For using two icons: icons: {primary:'ui-icon-gear',secondary:'ui-icon-triangle-1-s'}"	self optionAt: 'icons' put: anOptions</body><body package="JQuery-UI">label: aString	"Text to show on the button. When not specified (null), the element's html content is used, or its value attribute when it's an input element of type submit or reset; or the html content of the associated label element if its an input of type radio or checkbox"	self optionAt: 'label' put: aString</body><body package="JQuery-UI">text: aBoolean	"Whether to show any text - when set to false (display no text), icons (see icons option) must be enabled, otherwise it'll be ignored."	self optionAt: 'text' put: aBoolean</body></methods><methods><class-id>JQuery.JQButton</class-id> <category>options</category><body package="JQuery-UI">disabled: aBoolean	"Disables (true) or enables (false) the button. Can be set when initialising (first creating) the button."	self optionAt: 'disabled' put: aBoolean</body><body package="JQuery-UI">primaryIcon: aString	self icons at: 'primary' put: aString</body><body package="JQuery-UI">secondaryIcon: aString	self icons at: 'secondary' put: aString</body></methods><methods><class-id>JQuery.JQButton</class-id> <category>accessing</category><body package="JQuery-UI">icons	^ self options at: 'icons' ifAbsentPut: [ GRSmallDictionary new ]</body><body package="JQuery-UI">method	^ 'button'</body></methods><methods><class-id>JQuery.JQEffect</class-id> <category>options</category><body package="JQuery-UI">className: aString	"Transfer - Class name the transfer element will receive."	self optionAt: 'className' put: aString</body><body package="JQuery-UI">color: aColor	"Highlight - The highlight color."	self optionAt: 'color' put: aColor</body><body package="JQuery-UI">direction: aString	"Blind - vertical or horizontal."	"Clip - vertical or horizontal."	"Drop - left, right, up, down."	"Slide - left, right, up, down."	"Scale - both, vertical, horizontal."	"Bounce - left, right, up, down."	"Shake - left, right, up, down."	self optionAt: 'direction' put: aString</body><body package="JQuery-UI">distance: anInteger	"Bounce - The bounce distance."	"Shake - The bounce distance."	self optionAt: 'distance' put: anInteger</body><body package="JQuery-UI">easing: aString	self optionAt: 'easing' put: aString</body><body package="JQuery-UI">from	^ self options 		at: 'from'		ifAbsentPut: [ GRSmallDictionary new ]</body><body package="JQuery-UI">from: aDictionary	"Transfer - The element from width/height to."		self optionAt: 'from' put: aDictionary</body><body package="JQuery-UI">origin: anArray	"Scale - the vanishing point."	"Size - the vanishing point."	self optionAt: 'origin' put: anArray</body><body package="JQuery-UI">percent: anInteger	"Puff - The percentage to scale to."	"Scale - The percentage to scale to."	self optionAt: 'percent' put: anInteger</body><body package="JQuery-UI">pieces: aNumber	"Explode - Explodes or implodes the element into/from many pieces."	self optionAt: 'pieces' put: aNumber</body><body package="JQuery-UI">scale: aString	"Scale - Which areas of the element will be resized: 'both', 'box', 'content'."	"Size - Which areas of the element will be resized: 'both', 'box', 'content'."	self optionAt: 'scale' put: aString</body><body package="JQuery-UI">size: anInteger	"Fold - Size to fold."	self optionAt: 'size' put: anInteger</body><body package="JQuery-UI">times: anInteger	"Pulsate - Number of times to pulsate."	"Bounce - Number of times to bounce."	"Shake - Number of times to shake."	self optionAt: 'times' put: anInteger</body><body package="JQuery-UI">to	^ self options 		at: 'to'		ifAbsentPut: [ GRSmallDictionary new ]</body><body package="JQuery-UI">to: aDictionaryOrString	"Transfer - The element to transfer to."	self optionAt: 'to' put: aDictionaryOrString</body></methods><methods><class-id>JQuery.JQEffect</class-id> <category>convenience</category><body package="JQuery-UI">fromHeight: anInteger	self from at: 'height' put: anInteger</body><body package="JQuery-UI">fromWidth: anInteger	self from at: 'width' put: anInteger</body><body package="JQuery-UI">toHeight: anInteger	self to at: 'height' put: anInteger</body><body package="JQuery-UI">toWidth: anInteger	self to at: 'width' put: anInteger</body></methods><methods><class-id>JQuery.JQEffect</class-id> <category>initialization</category><body package="JQuery-UI">initialize	super initialize.	self effect; highlight; options</body></methods><methods><class-id>JQuery.JQEffect</class-id> <category>accessing-speed</category><body package="JQuery-UI">fast	self speed: 'fast'</body><body package="JQuery-UI">normal	self speed: 'normal'</body><body package="JQuery-UI">slow	self speed: 'slow'</body></methods><methods><class-id>JQuery.JQEffect</class-id> <category>effects-toggle</category><body package="JQuery-UI">blind	"Blinds the element away or shows it by blinding it in."		self effect: 'blind'</body><body package="JQuery-UI">clip	"Clips the element on or off, vertically or horizontally."		self effect: 'clip'</body><body package="JQuery-UI">drop	"Drops the element away or shows it by dropping it in."		self effect: 'drop'</body><body package="JQuery-UI">explode	"Explodes the element into multiple pieces."		self effect: 'explode'</body><body package="JQuery-UI">fade	"Fade the element in and out."		self effect: 'fade'</body><body package="JQuery-UI">fold	"Folds the element like a piece of paper."		self effect: 'fold'</body><body package="JQuery-UI">puff	"Scale and fade out animations create the puff effect."		self effect: 'puff'</body><body package="JQuery-UI">scale	"Shrink or grow an element by a percentage factor."		self effect: 'scale'</body><body package="JQuery-UI">slide	"Slides the element out of the viewport."		self effect: 'slide'</body></methods><methods><class-id>JQuery.JQEffect</class-id> <category>effects</category><body package="JQuery-UI">bounce	"Bounces the element vertically or horizontally n-times."		self effect: 'bounce'</body><body package="JQuery-UI">highlight	"Highlights the background with a defined color."		self effect: 'highlight'</body><body package="JQuery-UI">pulsate	"Pulsates the opacity of the element multiple times."		self effect: 'pulsate'</body><body package="JQuery-UI">shake	"Shakes the element vertically or horizontally n-times."		self effect: 'shake'</body><body package="JQuery-UI">size	"Resize an element to a specified width and height."		self effect: 'size'</body><body package="JQuery-UI">transfer	"Transfers the outline of an element to another."		self effect: 'transfer'</body></methods><methods><class-id>JQuery.JQEffect</class-id> <category>private</category><body package="JQuery-UI">arguments	| result |	result := OrderedCollection with: effect.	(options isEmpty and: [ speed isNil and: [ complete isNil ] ])		ifFalse: [ result addLast: options ].	(speed isNil and: [ complete isNil ])		ifFalse: [ result addLast: speed ].	(complete isNil)		ifFalse: [ result addLast: complete ].	^ result</body><body package="JQuery-UI">method	^ method</body></methods><methods><class-id>JQuery.JQEffect</class-id> <category>events</category><body package="JQuery-UI">onComplete: anObject	"A function to be executed whenever the animation completes, executes once for each element animated against."		complete := anObject asFunction</body></methods><methods><class-id>JQuery.JQEffect</class-id> <category>methods</category><body package="JQuery-UI">effect	"Uses a specific effect on an element."		self method: 'effect'</body><body package="JQuery-UI">hide	"Uses a specific effect on an element to hide the element if the first argument is an effect string."		self method: 'hide'</body><body package="JQuery-UI">show	"Uses a specific effect on an element to show the element if the first argument is a effect string."		self method: 'show'</body><body package="JQuery-UI">toggle	"Uses a specific effect on an element to toggle the element if the first argument is an effect string."		self method: 'toggle'</body></methods><methods><class-id>JQuery.JQEffect</class-id> <category>accessing</category><body package="JQuery-UI">effect: aString	"The effect to be used."		effect := aString</body><body package="JQuery-UI">method: aString	"The method to be used."	method := aString</body><body package="JQuery-UI">speed: aDuration	"A string representing one of the three predefined speeds (slow, normal, or fast) or the number of milliseconds to run the animation."		speed := aDuration</body></methods><methods><class-id>JQuery.JQSmoothnessTheme</class-id> <category>accessing</category><body package="JQuery-UI">themeName	^ 'smoothness'</body></methods><methods><class-id>JQuery.JQAccordion</class-id> <category>accessing</category><body package="JQuery-UI">method	^ 'accordion'</body></methods><methods><class-id>JQuery.JQAccordion</class-id> <category>options-generated</category><body package="JQuery-UI">active: aSelectorOrElementOrjQueryOrBooleanOrNumber	"Selector for the active element. Set to false to display none at start. Needs collapsible: true."	self optionAt: 'active' put: aSelectorOrElementOrjQueryOrBooleanOrNumber</body><body package="JQuery-UI">animate: aBooleanOrString	"Choose your favorite animation, or disable them (set to false). In addition to the default, 'bounceslide' and all defined easing methods are supported ('bounceslide' requires UI Effects Core)."	self optionAt: 'animate' put: aBooleanOrString</body><body package="JQuery-UI">collapsible: aBoolean	"Whether all the sections can be closed at once. Allows collapsing the active section by the triggering event (click is the default)."	self optionAt: 'collapsible' put: aBoolean</body><body package="JQuery-UI">disabled: aBoolean	"Disables the accordion if set to true."	self optionAt: 'disabled' put: aBoolean</body><body package="JQuery-UI">event: aString	"The event on which to trigger the accordion."	self optionAt: 'event' put: aString</body><body package="JQuery-UI">header: aSelectorOrjQuery	"Selector for the header element."	self optionAt: 'header' put: aSelectorOrjQuery</body><body package="JQuery-UI">heightStyle: aBoolean	"Controls the height of the accordion and each panel. Possible values: 'auto': All panels will be set to the height of the tallest panel. 'fill': Expand to the available height based on the accordion's parent height. 'content': Each panel will be only as tall as its content."	self optionAt: 'heightStyle' put: aBoolean</body><body package="JQuery-UI">icons: anObject	"Icons to use for headers, matching an icon provided by the jQuery UI CSS Framework. Set to false to have no icons displayed."	self optionAt: 'icons' put: anObject</body></methods><methods><class-id>JQuery.JQAccordion</class-id> <category>events-generated</category><body package="JQuery-UI">beforeActivate: anObject	"Triggered directly before a panel is activated. Can be canceled to prevent the panel from activating. If the accordion is currently collapsed, ui.oldHeader and ui.oldPanel will be empty jQuery objects. If the accordion is collapsing, ui.newHeader and ui.newPanel will be empty jQuery objects."	self optionAt: 'beforeActivate' put: anObject asFunction</body><body package="JQuery-UI">onActivate: anObject	"Triggered after a panel has been activated (after animation completes). If the accordion was previously collapsed, ui.oldHeader and ui.oldPanel will be empty jQuery objects. If the accordion is collapsing, ui.newHeader and ui.newPanel will be empty jQuery objects."	self optionAt: 'activate' put: anObject asFunction</body><body package="JQuery-UI">onCreate: anObject	"Triggered when the accordion is created. If the accordion is collapsed, ui.header and ui.panel will be empty jQuery objects"	self optionAt: 'create' put: anObject asFunction</body></methods><methods><class-id>JQuery.JQAccordion</class-id> <category>actions</category><body package="JQuery-UI">refresh	"Process any headers and panels that were added or removed directly in the DOM and recompute the height of the accordion panels. Results depend on the content and the heightStyle option."		self action: 'refresh'</body></methods><methods><class-id>JQuery.JQSwankyPurseTheme</class-id> <category>accessing</category><body package="JQuery-UI">themeName	^ 'swanky-purse'</body></methods><methods><class-id>JQuery.JQDatepicker</class-id> <category>actions</category><body package="JQuery-UI">getDate	"Get the current date for a date picker."		self action: 'getDate'</body><body package="JQuery-UI">hide	"Close a previously opened date picker."		self action: 'hide'</body><body package="JQuery-UI">isDisabled	"Determine whether a date picker has been disabled."		self action: 'isDisabled'</body><body package="JQuery-UI">setDate: aDate	"Set the current date for a date picker."		self action: 'setDate' arguments: (Array with: aDate)</body><body package="JQuery-UI">show	"Call up a previously attached date picker."		self action: 'show'</body></methods><methods><class-id>JQuery.JQDatepicker</class-id> <category>accessing</category><body package="JQuery-UI">method	^ 'datepicker'</body></methods><methods><class-id>JQuery.JQDatepicker</class-id> <category>options-generated</category><body package="JQuery-UI">altField: aString	"The jQuery selector for another field that is to be updated with the selected date from the datepicker. Use the altFormat setting below to change the format of the date within this field. Leave as blank for no alternate field."	self optionAt: 'altField' put: aString</body><body package="JQuery-UI">altFormat: aString	"The dateFormat to be used for the altField option. This allows one date format to be shown to the user for selection purposes, while a different format is actually sent behind the scenes. For a full list of the possible formats see the [[UI/Datepicker/formatDate"	self optionAt: 'altFormat' put: aString</body><body package="JQuery-UI">appendText: aString	"The text to display after each date field, e.g. to show the required format."	self optionAt: 'appendText' put: aString</body><body package="JQuery-UI">autoSize: aBoolean	"Set to true to automatically resize the input field to accomodate dates in the current [[UI/Datepicker#option-dateFormat"	self optionAt: 'autoSize' put: aBoolean</body><body package="JQuery-UI">buttonImage: aString	"The URL for the popup button image. If set, button text becomes the 'alt' value and is not directly displayed."	self optionAt: 'buttonImage' put: aString</body><body package="JQuery-UI">buttonImageOnly: aBoolean	"Set to true to place an image after the field to use as the trigger without it appearing on a button."	self optionAt: 'buttonImageOnly' put: aBoolean</body><body package="JQuery-UI">buttonText: aString	"The text to display on the trigger button. Use in conjunction with 'showOn' equal to 'button' or 'both'."	self optionAt: 'buttonText' put: aString</body><body package="JQuery-UI">calculateWeek: aFunction	"A function to calculate the week of the year for a given date. The default implementation uses the ISO 8601 definition: weeks start on a Monday; the first week of the year contains the first Thursday of the year."	self optionAt: 'calculateWeek' put: aFunction</body><body package="JQuery-UI">changeMonth: aBoolean	"Allows you to change the month by selecting from a drop-down list. You can enable this feature by setting the attribute to true."	self optionAt: 'changeMonth' put: aBoolean</body><body package="JQuery-UI">changeYear: aBoolean	"Allows you to change the year by selecting from a drop-down list. You can enable this feature by setting the attribute to true."	self optionAt: 'changeYear' put: aBoolean</body><body package="JQuery-UI">closeText: aString	"The text to display for the close link. This attribute is one of the regionalisation attributes. Use the showButtonPanel to display this button."	self optionAt: 'closeText' put: aString</body><body package="JQuery-UI">constrainInput: aBoolean	"True if the input field is constrained to the current date format."	self optionAt: 'constrainInput' put: aBoolean</body><body package="JQuery-UI">currentText: aString	"The text to display for the current day link. This attribute is one of the regionalisation attributes. Use the showButtonPanel to display this button."	self optionAt: 'currentText' put: aString</body><body package="JQuery-UI">dateFormat: aString	"The format for parsed and displayed dates. This attribute is one of the regionalisation attributes. For a full list of the possible formats see the [[UI/Datepicker/formatDate"	self optionAt: 'dateFormat' put: aString</body><body package="JQuery-UI">dayNames: anArray	"The list of long day names, starting from Sunday, for use as requested via the dateFormat setting. They also appear as popup hints when hovering over the corresponding column headings. This attribute is one of the regionalisation attributes."	self optionAt: 'dayNames' put: anArray</body><body package="JQuery-UI">dayNamesMin: anArray	"The list of minimised day names, starting from Sunday, for use as column headers within the datepicker. This attribute is one of the regionalisation attributes."	self optionAt: 'dayNamesMin' put: anArray</body><body package="JQuery-UI">dayNamesShort: anArray	"The list of abbreviated day names, starting from Sunday, for use as requested via the dateFormat setting. This attribute is one of the regionalisation attributes."	self optionAt: 'dayNamesShort' put: anArray</body><body package="JQuery-UI">defaultDate: aDateOrNumberOrString	"Set the date to highlight on first opening if the field is blank. Specify either an actual date via a Date object, or a number of days from today (e.g. +7) or a string of values and periods ('y' for years, 'm' for months, 'w' for weeks, 'd' for days, e.g. '+1m +7d'), or null for today."	self optionAt: 'defaultDate' put: aDateOrNumberOrString</body><body package="JQuery-UI">duration: aStringOrNumber	"Control the speed at which the datepicker appears, it may be a time in milliseconds, a string representing one of the three predefined speeds ('slow', 'normal', 'fast'), or ' for immediately."	self optionAt: 'duration' put: aStringOrNumber</body><body package="JQuery-UI">firstDay: aNumber	"Set the first day of the week: Sunday is 0, Monday is 1, ... This attribute is one of the regionalisation attributes."	self optionAt: 'firstDay' put: aNumber</body><body package="JQuery-UI">gotoCurrent: aBoolean	"If true, the current day link moves to the currently selected date instead of today."	self optionAt: 'gotoCurrent' put: aBoolean</body><body package="JQuery-UI">hideIfNoPrevNext: aBoolean	"Normally the previous and next links are disabled when not applicable (see minDate/maxDate). You can hide them altogether by setting this attribute to true."	self optionAt: 'hideIfNoPrevNext' put: aBoolean</body><body package="JQuery-UI">isRTL: aBoolean	"True if the current language is drawn from right to left. This attribute is one of the regionalisation attributes."	self optionAt: 'isRTL' put: aBoolean</body><body package="JQuery-UI">maxDate: aDateOrNumberOrString	"Set a maximum selectable date via a Date object, or a number of days from today (e.g. +7) or a string of values and periods ('y' for years, 'm' for months, 'w' for weeks, 'd' for days, e.g. '+1m +1w'), or null for no limit."	self optionAt: 'maxDate' put: aDateOrNumberOrString</body><body package="JQuery-UI">minDate: aDateOrNumberOrString	"Set a minimum selectable date via a Date object, or a number of days from today (e.g. +7) or a string of values and periods ('y' for years, 'm' for months, 'w' for weeks, 'd' for days, e.g. '-1y -1m'), or null for no limit."	self optionAt: 'minDate' put: aDateOrNumberOrString</body><body package="JQuery-UI">monthNames: anArray	"The list of full month names, as used in the month header on each datepicker and as requested via the dateFormat setting. This attribute is one of the regionalisation attributes."	self optionAt: 'monthNames' put: anArray</body><body package="JQuery-UI">monthNamesShort: anArray	"The list of abbreviated month names, for use as requested via the dateFormat setting. This attribute is one of the regionalisation attributes."	self optionAt: 'monthNamesShort' put: anArray</body><body package="JQuery-UI">navigationAsDateFormat: aBoolean	"When true the formatDate function is applied to the prevText, nextText, and currentText values before display, allowing them to display the target month names for example."	self optionAt: 'navigationAsDateFormat' put: aBoolean</body><body package="JQuery-UI">nextText: aString	"The text to display for the next month link. This attribute is one of the regionalisation attributes. With the standard ThemeRoller styling, this value is replaced by an icon."	self optionAt: 'nextText' put: aString</body><body package="JQuery-UI">numberOfMonths: aNumberOrArray	"Set how many months to show at once. The value can be a straight integer, or can be a two-element array to define the number of rows and columns to display."	self optionAt: 'numberOfMonths' put: aNumberOrArray</body><body package="JQuery-UI">prevText: aString	"The text to display for the previous month link. This attribute is one of the regionalisation attributes. With the standard ThemeRoller styling, this value is replaced by an icon."	self optionAt: 'prevText' put: aString</body><body package="JQuery-UI">selectOtherMonths: aBoolean	"When true days in other months shown before or after the current month are selectable. This only applies if [[UI/Datepicker#option-showOtherMonths"	self optionAt: 'selectOtherMonths' put: aBoolean</body><body package="JQuery-UI">shortYearCutoff: aStringOrNumber	"Set the cutoff year for determining the century for a date (used in conjunction with dateFormat 'y'). If a numeric value (0-99) is provided then this value is used directly. If a string value is provided then it is converted to a number and added to the current year. Once the cutoff year is calculated, any dates entered with a year value less than or equal to it are considered to be in the current century, while those greater than it are deemed to be in the previous century."	self optionAt: 'shortYearCutoff' put: aStringOrNumber</body><body package="JQuery-UI">showAnim: aString	"Set the name of the animation used to show/hide the datepicker. Use 'show' (the default), 'slideDown', 'fadeIn', or any of the show/hide [http://docs.jquery.com/UI/Effects jQuery UI effects]."	self optionAt: 'showAnim' put: aString</body><body package="JQuery-UI">showButtonPanel: aBoolean	"Whether to show the button panel."	self optionAt: 'showButtonPanel' put: aBoolean</body><body package="JQuery-UI">showCurrentAtPos: aNumber	"Specify where in a multi-month display the current month shows, starting from 0 at the top/left."	self optionAt: 'showCurrentAtPos' put: aNumber</body><body package="JQuery-UI">showMonthAfterYear: aBoolean	"Whether to show the month after the year in the header."	self optionAt: 'showMonthAfterYear' put: aBoolean</body><body package="JQuery-UI">showOn: aString	"Have the datepicker appear automatically when the field receives focus ('focus'), appear only when a button is clicked ('button'), or appear when either event takes place ('both')."	self optionAt: 'showOn' put: aString</body><body package="JQuery-UI">showOptions: anOptions	"If using one of the jQuery UI effects for showAnim, you can provide additional settings for that animation via this option."	self optionAt: 'showOptions' put: anOptions</body><body package="JQuery-UI">showOtherMonths: aBoolean	"Display dates in other months (non-selectable) at the start or end of the current month."	self optionAt: 'showOtherMonths' put: aBoolean</body><body package="JQuery-UI">showWeek: aBoolean	"When true a column is added to show the week of the year."	self optionAt: 'showWeek' put: aBoolean</body><body package="JQuery-UI">stepMonths: aNumber	"Set how many months to move when clicking the Previous/Next links."	self optionAt: 'stepMonths' put: aNumber</body><body package="JQuery-UI">weekHeader: aString	"The text to display for the week of the year column heading. This attribute is one of the regionalisation attributes."	self optionAt: 'weekHeader' put: aString</body><body package="JQuery-UI">yearRange: aString	"Control the range of years displayed in the year drop-down: either relative to current year (-nn:+nn) or absolute (nnnn:nnnn)."	self optionAt: 'yearRange' put: aString</body><body package="JQuery-UI">yearSuffix: aString	"Additional text to display after the year in the month headers. This attribute is one of the regionalisation attributes."	self optionAt: 'yearSuffix' put: aString</body></methods><methods><class-id>JQuery.JQDatepicker</class-id> <category>events-generated</category><body package="JQuery-UI">onBeforeShow: anObject	"Can be a function that takes an input field and current datepicker instance and returns an options object to update the datepicker with. It is called just before the datepicker is displayed."	self optionAt: 'beforeShow' put: anObject asFunction</body><body package="JQuery-UI">onBeforeShowDay: anObject	"The function takes a date as a parameter and must return an array with [0] equal to true/false indicating whether or not this date is selectable, [1] equal to a CSS class name(s) or ' for the default presentation, and [2] an optional popup tooltip for this date. It is called for each day in the datepicker before it is displayed."	self optionAt: 'beforeShowDay' put: anObject asFunction</body><body package="JQuery-UI">onChangeMonthYear: anObject	"Allows you to define your own event when the datepicker moves to a new month and/or year. The function receives the selected year, month (1-12), and the datepicker instance as parameters. this refers to the associated input field."	self optionAt: 'onChangeMonthYear' put: anObject asFunction</body><body package="JQuery-UI">onClose: anObject	"Allows you to define your own event when the datepicker is closed, whether or not a date is selected. The function receives the selected date as text (' if none) and the datepicker instance as parameters. this refers to the associated input field."	self optionAt: 'onClose' put: anObject asFunction</body><body package="JQuery-UI">onSelect: anObject	"Allows you to define your own event when the datepicker is selected. The function receives the selected date as text and the datepicker instance as parameters. this refers to the associated input field."	self optionAt: 'onSelect' put: anObject asFunction</body></methods><methods><class-id>JQuery.JQEggplantTheme</class-id> <category>accessing</category><body package="JQuery-UI">themeName	^ 'eggplant'</body></methods><methods><class-id>JQuery.JQBlackTieTheme</class-id> <category>accessing</category><body package="JQuery-UI">themeName	^ 'black-tie'</body></methods><methods><class-id>JQuery.JQAutocomplete</class-id> <category>actions</category><body package="JQuery-UI">close	"Close the autocomplete menu. Useful in combination with the search method, to close the open menu."		self action: 'close' arguments: #()</body><body package="JQuery-UI">search: aString	"Triggers a search event, which, when data is available, then will display the suggestions; can be used by a selectbox-like button to open the suggestions when clicked. If no value argument is specified, the current input's value is used. Can be called with an empty string and minLength: 0 to display all items."		self action: 'search' arguments: (Array with: aString)</body></methods><methods><class-id>JQuery.JQAutocomplete</class-id> <category>accessing</category><body package="JQuery-UI">method	^ 'autocomplete'</body></methods><methods><class-id>JQuery.JQAutocomplete</class-id> <category>events-generated</category><body package="JQuery-UI">onChange: anObject	"Triggered when the field is blurred, if the value has changed; ui.item refers to the selected item."	self optionAt: 'change' put: anObject asFunction</body><body package="JQuery-UI">onClose: anObject	"When the list is hidden - doesn't have to occur together with a change."	self optionAt: 'close' put: anObject asFunction</body><body package="JQuery-UI">onFocus: anObject	"Before focus is moved to an item (not selecting), ui.item refers to the focused item. The default action of focus is to replace the text field's value with the value of the focused item, though only if the focus event was triggered by a keyboard interaction. Canceling this event prevents the value from being updated, but does not prevent the menu item from being focused."	self optionAt: 'focus' put: anObject asFunction</body><body package="JQuery-UI">onOpen: anObject	"Triggered when the suggestion menu is opened."	self optionAt: 'open' put: anObject asFunction</body><body package="JQuery-UI">onResponse: anObject	"Triggered after a search completes, before the menu is shown. Useful for local manipulation of suggestion data, where a custom source option callback is not required. This event is always triggered when a search completes, even if the menu will not be shown because there are no results or the Autocomplete is disabled."	self optionAt: 'response' put: anObject asFunction</body><body package="JQuery-UI">onSearch: anObject	"Before a request (source-option) is started, after minLength and delay are met. Can be canceled (return false), then no request will be started and no items suggested."	self optionAt: 'search' put: anObject asFunction</body><body package="JQuery-UI">onSelect: anObject	"Triggered when an item is selected from the menu; ui.item refers to the selected item. The default action of select is to replace the text field's value with the value of the selected item. Canceling this event prevents the value from being updated, but does not prevent the menu from closing."	self optionAt: 'select' put: anObject asFunction</body></methods><methods><class-id>JQuery.JQAutocomplete</class-id> <category>options-generated</category><body package="JQuery-UI">appendTo: aSelector	"Which element the menu should be appended to."	self optionAt: 'appendTo' put: aSelector</body><body package="JQuery-UI">autoFocus: aBoolean	"If set to true the first item will be automatically focused."	self optionAt: 'autoFocus' put: aBoolean</body><body package="JQuery-UI">delay: anInteger	"The delay in milliseconds the Autocomplete waits after a keystroke to activate itself. A zero-delay makes sense for local data (more responsive), but can produce a lot of load for remote data, while being less responsive."	self optionAt: 'delay' put: anInteger</body><body package="JQuery-UI">minLength: anInteger	"The minimum number of characters a user has to type before the Autocomplete activates. Zero is useful for local data with just a few items. Should be increased when there are a lot of items, where a single character would match a few thousand items."	self optionAt: 'minLength' put: anInteger</body><body package="JQuery-UI">position: anObject	"Identifies the position of the Autocomplete widget in relation to the associated input element. The 'of' option defaults to the input element, but you can specify another element to position against. See more details at http://api.jqueryui.com/autocomplete/#option-position"	self optionAt: 'position' put: anObject</body><body package="JQuery-UI">source: aStringOrArrayOrCallback	"Defines the data to use, must be specified. See Overview section for more details, and look at the various demos."	self optionAt: 'source' put: aStringOrArrayOrCallback</body></methods><methods><class-id>JQuery.JQAutocomplete</class-id> <category>convenience</category><body package="JQuery-UI">search: aSearchBlock callback: aCallbackBlock	self search: aSearchBlock labels: [ :each | each greaseString ] callback: aCallbackBlock</body><body package="JQuery-UI">search: aSearchBlock labels: aLabelsBlock callback: aCallbackBlock	"A one argument block aSearchBlock that will be evaluated with the term the user currently typed. The block is expected to answer a collection of objects. aLabelsBlock should answer a string label to be displayed for each object. aCallbackBlock is evaluated with the selected object and an ajax script to be performed."		| term mapping |	mapping := IdentityDictionary new.	"assigments to temps don't work in GS 2.4'	http://code.google.com/p/glassdb/issues/detail?id=221"	term := WAValueHolder new.	self source: ((self jQuery getJson		callback: [ :value | term contents: value ]		value: (JSStream on: 'request.term');		text: [ :stream | 			stream json: ((aSearchBlock value: term contents) asArray collect: [ :object | 				GRSmallDictionary new					at: 'label' put: (aLabelsBlock value: object);					at: 'index' put: (mapping at: object ifAbsentPut: [ mapping size + 1 ]);					yourself ]) ];		onSuccess: 'response(arguments[0])'; 		dataType: 'jsonp') asFunction: #('request' 'response')).	self onSelect: ((self jQuery ajax		callback: [ :value | term contents: value greaseInteger ] 		value: (JSStream on: 'ui.item.index');		script: [ :script |			mapping keysAndValuesDo: [ :object :value |				value = term contents					ifTrue: [ aCallbackBlock value: object value: script ] ] ])		asFunction: #('event' 'ui'))</body><body package="JQuery-UI">sourceCallback: aOneArgumentBlock	"A one argument block that will be evaluated with the term the user currently typed. The block is expected to answer a collection of objects."		| term |	"assignments to temps don't work in GS 2.4	http://code.google.com/p/glassdb/issues/detail?id=152"	term := WAValueHolder new.	self source: ((self jQuery getJson		text: [ :stream | stream json: (aOneArgumentBlock value: term contents) ];		callback: [ :value | term contents: value ] value: (JSStream on: 'request.term');		onSuccess: 'response(arguments[0])'; 		dataType: 'jsonp') asFunction: #('request' 'response'))</body></methods><methods><class-id>JQuery.JQSlider</class-id> <category>accessing</category><body package="JQuery-UI">method	^ 'slider'</body></methods><methods><class-id>JQuery.JQSlider</class-id> <category>options-generated</category><body package="JQuery-UI">animate: aBooleanOrStringOrNumber	"Whether to slide handle smoothly when user click outside handle on the bar. Will also accept a string representing one of the three predefined speeds ('slow', 'normal', or 'fast') or the number of milliseconds to run the animation (e.g. 1000)."	self optionAt: 'animate' put: aBooleanOrStringOrNumber</body><body package="JQuery-UI">max: aNumber	"The maximum value of the slider."	self optionAt: 'max' put: aNumber</body><body package="JQuery-UI">min: aNumber	"The minimum value of the slider."	self optionAt: 'min' put: aNumber</body><body package="JQuery-UI">orientation: aString	"This option determines whether the slider has the min at the left, the max at the right or the min at the bottom, the max at the top. Possible values: 'horizontal', 'vertical'."	self optionAt: 'orientation' put: aString</body><body package="JQuery-UI">range: aBooleanOrString	"If set to true, the slider will detect if you have two handles and create a stylable range element between these two. Two other possible values are 'min' and 'max'. A min range goes from the slider min to one handle. A max range goes from one handle to the slider max."	self optionAt: 'range' put: aBooleanOrString</body><body package="JQuery-UI">step: aNumber	"Determines the size or amount of each interval or step the slider takes between min and max. The full specified value range of the slider (max - min) needs to be evenly divisible by the step."	self optionAt: 'step' put: aNumber</body><body package="JQuery-UI">value: aNumber	"Determines the value of the slider, if there's only one handle. If there is more than one handle, determines the value of the first handle."	self optionAt: 'value' put: aNumber</body><body package="JQuery-UI">values: anArray	"This option can be used to specify multiple handles. If range is set to true, the length of 'values' should be 2."	self optionAt: 'values' put: anArray</body></methods><methods><class-id>JQuery.JQSlider</class-id> <category>events-generated</category><body package="JQuery-UI">onChange: anObject	"This event is triggered on slide stop, or if the value is changed programmatically (by the value method). Takes arguments event and ui. Use event.orginalEvent to detect whether the value changed by mouse, keyboard, or programmatically. Use ui.value (single-handled sliders) to obtain the value of the current handle, $(this).slider('values', index) to get another handle's value."	self optionAt: 'change' put: anObject asFunction</body><body package="JQuery-UI">onSlide: anObject	"This event is triggered on every mouse move during slide. Use ui.value (single-handled sliders) to obtain the value of the current handle, $(..).slider('value', index) to get another handles' value. Return false in order to prevent a slide, based on ui.value."	self optionAt: 'slide' put: anObject asFunction</body><body package="JQuery-UI">onStart: anObject	"This event is triggered when the user starts sliding."	self optionAt: 'start' put: anObject asFunction</body><body package="JQuery-UI">onStop: anObject	"This event is triggered when the user stops sliding."	self optionAt: 'stop' put: anObject asFunction</body></methods><methods><class-id>JQuery.JQSlider</class-id> <category>actions</category><body package="JQuery-UI">getValue	"Gets the value of the slider. For single handle sliders."	self action: 'value'</body><body package="JQuery-UI">getValueAt: anInteger	"Gets the values of the slider. For multiple handle or range sliders."	self action: 'values' arguments: (Array with: anInteger)</body><body package="JQuery-UI">setValue: aNumber	"Sets the value of the slider. For single handle sliders."	self action: 'value' arguments: (Array with: aNumber)</body><body package="JQuery-UI">setValue: aNumber at: anInteger	"Sets the values of the slider. For multiple handle or range sliders."	self action: 'values' arguments: (Array with: aNumber with: anInteger)</body></methods><methods><class-id>JQuery.JQHotSneaksTheme</class-id> <category>accessing</category><body package="JQuery-UI">themeName	^ 'hot-sneaks'</body></methods><methods><class-id>JQuery.JQVaderTheme</class-id> <category>accessing</category><body package="JQuery-UI">themeName	^ 'vader'</body></methods><methods><class-id>JQuery.JQLeFrogTheme</class-id> <category>accessing</category><body package="JQuery-UI">themeName	^ 'le-frog'</body></methods><methods><class-id>JQuery.JQDraggable</class-id> <category>accessing</category><body package="JQuery-UI">method	^ 'draggable'</body></methods><methods><class-id>JQuery.JQDraggable</class-id> <category>options-generated</category><body package="JQuery-UI">addClasses: aBoolean	"If set to false, will prevent the ui-draggable class from being added. This may be desired as a performance optimization when calling .draggable() init on many hundreds of elements."	self optionAt: 'addClasses' put: aBoolean</body><body package="JQuery-UI">appendTo: anElementOrSelector	"The element passed to or selected by the appendTo option will be used as the draggable helper's container during dragging. By default, the helper is appended to the same container as the draggable."	self optionAt: 'appendTo' put: anElementOrSelector</body><body package="JQuery-UI">axis: aString	"Constrains dragging to either the horizontal (x) or vertical (y) axis. Possible values: 'x', 'y'."	self optionAt: 'axis' put: aString</body><body package="JQuery-UI">cancel: aSelector	"Prevents dragging from starting on specified elements."	self optionAt: 'cancel' put: aSelector</body><body package="JQuery-UI">connectToSortable: aSelector	"Allows the draggable to be dropped onto the specified sortables. If this option is used (helper must be set to 'clone' in order to work flawlessly), a draggable can be dropped onto a sortable list and then becomes part of it. Note: Specifying this option as an array of selectors has been removed."	self optionAt: 'connectToSortable' put: aSelector</body><body package="JQuery-UI">containment: aSelectorOrElementOrStringOrArray	"Constrains dragging to within the bounds of the specified element or region. Possible string values: 'parent', 'document', 'window', [x1, y1, x2, y2]."	self optionAt: 'containment' put: aSelectorOrElementOrStringOrArray</body><body package="JQuery-UI">cursor: aString	"The css cursor during the drag operation."	self optionAt: 'cursor' put: aString</body><body package="JQuery-UI">cursorAt: anObject	"Sets the offset of the dragging helper relative to the mouse cursor. Coordinates can be given as a hash using a combination of one or two keys: { top, left, right, bottom }."	self optionAt: 'cursorAt' put: anObject</body><body package="JQuery-UI">delay: anInteger	"Time in milliseconds after mousedown until dragging should start. This option can be used to prevent unwanted drags when clicking on an element."	self optionAt: 'delay' put: anInteger</body><body package="JQuery-UI">distance: anInteger	"Distance in pixels after mousedown the mouse must move before dragging should start. This option can be used to prevent unwanted drags when clicking on an element."	self optionAt: 'distance' put: anInteger</body><body package="JQuery-UI">grid: anArray	"Snaps the dragging helper to a grid, every x and y pixels. Array values: [x, y]"	self optionAt: 'grid' put: anArray</body><body package="JQuery-UI">handle: anElementOrSelector	"If specified, restricts drag start click to the specified element(s)."	self optionAt: 'handle' put: anElementOrSelector</body><body package="JQuery-UI">helper: aStringOrFunction	"Allows for a helper element to be used for dragging display. Possible values: 'original', 'clone', Function. If a function is specified, it must return a DOMElement."	self optionAt: 'helper' put: aStringOrFunction</body><body package="JQuery-UI">iframeFix: aBooleanOrSelector	"Prevent iframes from capturing the mousemove events during a drag. Useful in combination with cursorAt, or in any case, if the mouse cursor is not over the helper. If set to true, transparent overlays will be placed over all iframes on the page. If a selector is supplied, the matched iframes will have an overlay placed over them."	self optionAt: 'iframeFix' put: aBooleanOrSelector</body><body package="JQuery-UI">opacity: aFloat	"Opacity for the helper while being dragged."	self optionAt: 'opacity' put: aFloat</body><body package="JQuery-UI">refreshPositions: aBoolean	"If set to true, all droppable positions are calculated on every mousemove. Caution: This solves issues on highly dynamic pages, but dramatically decreases performance."	self optionAt: 'refreshPositions' put: aBoolean</body><body package="JQuery-UI">revert: aBooleanOrString	"If set to true, the element will return to its start position when dragging stops. Possible string values: 'valid', 'invalid'. If set to invalid, revert will only occur if the draggable has not been dropped on a droppable. For valid, it's the other way around."	self optionAt: 'revert' put: aBooleanOrString</body><body package="JQuery-UI">revertDuration: anInteger	"The duration of the revert animation, in milliseconds. Ignored if revert is false."	self optionAt: 'revertDuration' put: anInteger</body><body package="JQuery-UI">scope: aString	"Used to group sets of draggable and droppable items, in addition to droppable's accept option. A draggable with the same scope value as a droppable will be accepted by the droppable."	self optionAt: 'scope' put: aString</body><body package="JQuery-UI">scroll: aBoolean	"If set to true, container auto-scrolls while dragging."	self optionAt: 'scroll' put: aBoolean</body><body package="JQuery-UI">scrollSensitivity: anInteger	"Distance in pixels from the edge of the viewport after which the viewport should scroll. Distance is relative to pointer, not the draggable."	self optionAt: 'scrollSensitivity' put: anInteger</body><body package="JQuery-UI">scrollSpeed: anInteger	"The speed at which the window should scroll once the mouse pointer gets within the scrollSensitivity distance."	self optionAt: 'scrollSpeed' put: anInteger</body><body package="JQuery-UI">snap: aBooleanOrSelector	"If set to a selector or to true (equivalent to '.ui-draggable'), the draggable will snap to the edges of the selected elements when near an edge of the element."	self optionAt: 'snap' put: aBooleanOrSelector</body><body package="JQuery-UI">snapMode: aString	"Determines which edges of snap elements the draggable will snap to. Ignored if snap is false. Possible values: 'inner', 'outer', 'both'"	self optionAt: 'snapMode' put: aString</body><body package="JQuery-UI">snapTolerance: anInteger	"The distance in pixels from the snap element edges at which snapping should occur. Ignored if snap is false."	self optionAt: 'snapTolerance' put: anInteger</body><body package="JQuery-UI">stack: aSelector	"Controls the z-Index of the set of elements that match the selector, always brings to front the dragged item. Very useful in things like window managers."	self optionAt: 'stack' put: aSelector</body><body package="JQuery-UI">zIndex: anInteger	"z-index for the helper while being dragged."	self optionAt: 'zIndex' put: anInteger</body></methods><methods><class-id>JQuery.JQDraggable</class-id> <category>events-generated</category><body package="JQuery-UI">onDrag: anObject	"This event is triggered when the mouse is moved during the dragging."	self optionAt: 'drag' put: anObject asFunction</body><body package="JQuery-UI">onStart: anObject	"This event is triggered when dragging starts."	self optionAt: 'start' put: anObject asFunction</body><body package="JQuery-UI">onStop: anObject	"This event is triggered when dragging stops."	self optionAt: 'stop' put: anObject asFunction</body></methods><methods><class-id>JQuery.JQTrontasticTheme</class-id> <category>accessing</category><body package="JQuery-UI">themeName	^ 'trontastic'</body></methods><methods><class-id>JQuery.JQPosition</class-id> <category>options-generated</category><body package="JQuery-UI">at: aString	"Defines which position on the target element to align the positioned element against: 'horizontal vertical' alignment. See the my option for full details on possible values. Percentage offsets are relative to the target element."	self optionAt: 'at' put: aString</body><body package="JQuery-UI">bgiframe: aBoolean	"Applies the bgiframe plugin when set to true. Only applies when bgiframe is actually loaded, nothing happens otherwise."	self optionAt: 'bgiframe' put: aBoolean</body><body package="JQuery-UI">by: aFunction	"When specified the actual property setting is delegated to this callback. Receives a single parameter which is a hash of top and left values for the position that should be set."	self optionAt: 'by' put: aFunction</body><body package="JQuery-UI">collision: aString	"When the positioned element overflows the window in some direction, move it to an alternative position. Similar to my and at, this accepts a single value or a pair for horizontal/vertical, eg. 'flip', 'fit', 'fit flip', 'fit none'. * ''flip'': to the opposite side and the collision detection is run again to see if it will fit. If it won't fit in either position, the center option should be used as a fall back. * ''fit'': so the element keeps in the desired direction, but is re-positioned so it fits. * ''none'': not do collision detection."	self optionAt: 'collision' put: aString</body><body package="JQuery-UI">my: aString	"Defines which position on the element being positioned to align with the target element: 'horizontal vertical' alignment. A single value such as 'right' will be normalized to 'right center', 'top' will be normalized to 'center top' (following CSS convention). Acceptable horizontal values: 'left', 'center', 'right'. Acceptable vertical values: 'top', 'center', 'bottom'. Example: 'left top' or 'center center'. Each dimension can also contain offsets, in pixels or percent, e.g., 'right+10 top-25%'. Percentage offsets are relative to the element being positioned."	self optionAt: 'my' put: aString</body><body package="JQuery-UI">of: aSelector	"Element to position against. You can use a browser event object contains pageX and pageY values. Example: '#top-menu'"	self optionAt: 'of' put: aSelector</body><body package="JQuery-UI">using: aJSObject	"When specified, the actual property setting is delegated to this callback. Receives two parameters: The first is a hash of top and left values for the position that should be set and can be forwarded to .css() or .animate().The second provides feedback about the position and dimensions of both elements, as well as calculations to their relative position. Both target and element have these properties: element, left, top, width, height. In addition, there's horizontal, vertical and important, giving you twelve potential directions like { horizontal: 'center', vertical: 'left', important: 'horizontal' }"	self optionAt: 'using' put: aJSObject asFunction</body><body package="JQuery-UI">within: aString	"Element to position within, affecting collision detection. If you provide a selector or jQuery object, the first matching element will be used."	self optionAt: 'within' put: aString</body></methods><methods><class-id>JQuery.JQPosition</class-id> <category>accessing</category><body package="JQuery-UI">method	^ 'position'</body></methods><methods><class-id>JQuery.JQPepperGrinderTheme</class-id> <category>accessing</category><body package="JQuery-UI">themeName	^ 'pepper-grinder'</body></methods><methods><class-id>JQuery.JQExciteBikeTheme</class-id> <category>accessing</category><body package="JQuery-UI">themeName	^ 'excite-bike'</body></methods><methods><class-id>JQuery.JQSortable</class-id> <category>accessing</category><body package="JQuery-UI">method	^ 'sortable'</body></methods><methods><class-id>JQuery.JQSortable</class-id> <category>actions</category><body package="JQuery-UI">cancel	"Cancels a change in the current sortable and reverts it back to how it was before the current sort started. Useful in the stop and receive callback functions."		self action: 'cancel'</body><body package="JQuery-UI">refresh	"Refresh the sortable items."		self action: 'refresh'</body><body package="JQuery-UI">refreshPositions	"Refresh the cached positions of the sortables' items."		self action: 'refreshPositions'</body></methods><methods><class-id>JQuery.JQSortable</class-id> <category>options-generated</category><body package="JQuery-UI">appendTo: aString	"Defines where the helper that moves with the mouse is being appended to during the drag (for example, to resolve overlap/zIndex issues)."	self optionAt: 'appendTo' put: aString</body><body package="JQuery-UI">axis: aString	"If defined, the items can be dragged only horizontally or vertically. Possible values:'x', 'y'."	self optionAt: 'axis' put: aString</body><body package="JQuery-UI">cancel: aSelector	"Prevents sorting if you start on elements matching the selector."	self optionAt: 'cancel' put: aSelector</body><body package="JQuery-UI">connectWith: aSelector	"Takes a jQuery selector with items that also have sortables applied. If used, the sortable is now connected to the other one-way, so you can drag from this sortable to the other."	self optionAt: 'connectWith' put: aSelector</body><body package="JQuery-UI">containment: anElementOrStringOrSelector	"Constrains dragging to within the bounds of the specified element - can be a DOM element, 'parent', 'document', 'window', or a jQuery selector. Note: the element specified for containment must have a calculated width and height (though it need not be explicit), so for example, if you have float:left sortable children and specify containment:'parent' be sure to have float:left on the sortable/parent container as well or it will have height: 0, causing undefined behavior."	self optionAt: 'containment' put: anElementOrStringOrSelector</body><body package="JQuery-UI">cursor: aString	"Defines the cursor that is being shown while sorting."	self optionAt: 'cursor' put: aString</body><body package="JQuery-UI">cursorAt: anObject	"Moves the sorting element or helper so the cursor always appears to drag from the same position. Coordinates can be given as a hash using a combination of one or two keys: { top, left, right, bottom }."	self optionAt: 'cursorAt' put: anObject</body><body package="JQuery-UI">delay: anInteger	"Time in milliseconds to define when the sorting should start. It helps preventing unwanted drags when clicking on an element."	self optionAt: 'delay' put: anInteger</body><body package="JQuery-UI">distance: anInteger	"Tolerance, in pixels, for when sorting should start. If specified, sorting will not start until after mouse is dragged beyond distance. Can be used to allow for clicks on elements within a handle."	self optionAt: 'distance' put: anInteger</body><body package="JQuery-UI">dropOnEmpty: aBoolean	"If false items from this sortable can't be dropped to an empty linked sortable."	self optionAt: 'dropOnEmpty' put: aBoolean</body><body package="JQuery-UI">forceHelperSize: aBoolean	"If true, forces the helper to have a size."	self optionAt: 'forceHelperSize' put: aBoolean</body><body package="JQuery-UI">forcePlaceholderSize: aBoolean	"If true, forces the placeholder to have a size."	self optionAt: 'forcePlaceholderSize' put: aBoolean</body><body package="JQuery-UI">grid: anArray	"Snaps the sorting element or helper to a grid, every x and y pixels. Array values: [x, y]"	self optionAt: 'grid' put: anArray</body><body package="JQuery-UI">handle: aSelectorOrElement	"Restricts sort start click to the specified element."	self optionAt: 'handle' put: aSelectorOrElement</body><body package="JQuery-UI">helper: aStringOrFunction	"Allows for a helper element to be used for dragging display. The supplied function receives the event and the element being sorted, and should return a DOMElement to be used as a custom proxy helper. Possible values: 'original', 'clone'"	self optionAt: 'helper' put: aStringOrFunction</body><body package="JQuery-UI">items: aSelector	"Specifies which items inside the element should be sortable."	self optionAt: 'items' put: aSelector</body><body package="JQuery-UI">opacity: aFloat	"Defines the opacity of the helper while sorting. From 0.01 to 1"	self optionAt: 'opacity' put: aFloat</body><body package="JQuery-UI">placeholder: aString	"Class that gets applied to the otherwise white space."	self optionAt: 'placeholder' put: aString</body><body package="JQuery-UI">revert: aBooleanInteger	"If set to true, the item will be reverted to its new DOM position with a smooth animation. Optionally, it can also be set to a number that controls the duration of the animation in ms."	self optionAt: 'revert' put: aBooleanInteger</body><body package="JQuery-UI">scroll: aBoolean	"If set to true, the page scrolls when coming to an edge."	self optionAt: 'scroll' put: aBoolean</body><body package="JQuery-UI">scrollSensitivity: anInteger	"Defines how near the mouse must be to an edge to start scrolling."	self optionAt: 'scrollSensitivity' put: anInteger</body><body package="JQuery-UI">scrollSpeed: anInteger	"The speed at which the window should scroll once the mouse pointer gets within the scrollSensitivity distance."	self optionAt: 'scrollSpeed' put: anInteger</body><body package="JQuery-UI">tolerance: aString	"This is the way the reordering behaves during drag. Possible values: 'intersect', 'pointer'. In some setups, 'pointer' is more natural.  ''intersect'': draggable overlaps the droppable at least 50% ''pointer'': mouse pointer overlaps the droppable "	self optionAt: 'tolerance' put: aString</body><body package="JQuery-UI">zIndex: anInteger	"Z-index for element/helper while being sorted."	self optionAt: 'zIndex' put: anInteger</body></methods><methods><class-id>JQuery.JQSortable</class-id> <category>events-generated</category><body package="JQuery-UI">onActivate: anObject	"This event is triggered when using connected lists, every connected list on drag start receives it."	self optionAt: 'activate' put: anObject asFunction</body><body package="JQuery-UI">onBeforeStop: anObject	"This event is triggered when sorting stops, but when the placeholder/helper is still available."	self optionAt: 'beforeStop' put: anObject asFunction</body><body package="JQuery-UI">onChange: anObject	"This event is triggered during sorting, but only when the DOM position has changed."	self optionAt: 'change' put: anObject asFunction</body><body package="JQuery-UI">onDeactivate: anObject	"This event is triggered when sorting was stopped, is propagated to all possible connected lists."	self optionAt: 'deactivate' put: anObject asFunction</body><body package="JQuery-UI">onOut: anObject	"This event is triggered when a sortable item is moved away from a connected list."	self optionAt: 'out' put: anObject asFunction</body><body package="JQuery-UI">onOver: anObject	"This event is triggered when a sortable item is moved into a connected list."	self optionAt: 'over' put: anObject asFunction</body><body package="JQuery-UI">onReceive: anObject	"This event is triggered when a connected sortable list has received an item from another list."	self optionAt: 'receive' put: anObject asFunction</body><body package="JQuery-UI">onRemove: anObject	"This event is triggered when a sortable item has been dragged out from the list and into another."	self optionAt: 'remove' put: anObject asFunction</body><body package="JQuery-UI">onSort: anObject	"This event is triggered during sorting."	self optionAt: 'sort' put: anObject asFunction</body><body package="JQuery-UI">onStart: anObject	"This event is triggered when sorting starts."	self optionAt: 'start' put: anObject asFunction</body><body package="JQuery-UI">onStop: anObject	"This event is triggered when sorting has stopped."	self optionAt: 'stop' put: anObject asFunction</body><body package="JQuery-UI">onUpdate: anObject	"This event is triggered when the user stopped sorting and the DOM position has changed."	self optionAt: 'update' put: anObject asFunction</body></methods><methods><class-id>JQuery.JQResizable</class-id> <category>accessing</category><body package="JQuery-UI">method	^ 'resizable'</body></methods><methods><class-id>JQuery.JQResizable</class-id> <category>options-generated</category><body package="JQuery-UI">alsoResize: aSelectorOrjQueryOrElement	"Resize these elements synchronous when resizing."	self optionAt: 'alsoResize' put: aSelectorOrjQueryOrElement</body><body package="JQuery-UI">animate: aBoolean	"Animates to the final size after resizing."	self optionAt: 'animate' put: aBoolean</body><body package="JQuery-UI">animateDuration: anIntegerOrString	"Duration time for animating, in milliseconds. Other possible values: 'slow', 'normal', 'fast'."	self optionAt: 'animateDuration' put: anIntegerOrString</body><body package="JQuery-UI">animateEasing: aString	"Easing effect for animating."	self optionAt: 'animateEasing' put: aString</body><body package="JQuery-UI">aspectRatio: aBooleanOrFloat	"If set to true, resizing is constrained by the original aspect ratio. Otherwise a custom aspect ratio can be specified, such as 9 / 16, or 0.5."	self optionAt: 'aspectRatio' put: aBooleanOrFloat</body><body package="JQuery-UI">autoHide: aBoolean	"If set to true, automatically hides the handles except when the mouse hovers over the element."	self optionAt: 'autoHide' put: aBoolean</body><body package="JQuery-UI">cancel: aSelector	"Prevents resizing if you start on elements matching the selector."	self optionAt: 'cancel' put: aSelector</body><body package="JQuery-UI">containment: aStringOrElementOrSelector	"Constrains resizing to within the bounds of the specified element. Possible values: 'parent', 'document', a DOMElement, or a Selector."	self optionAt: 'containment' put: aStringOrElementOrSelector</body><body package="JQuery-UI">delay: anInteger	"Tolerance, in milliseconds, for when resizing should start. If specified, resizing will not start until after mouse is moved beyond duration. This can help prevent unintended resizing when clicking on an element."	self optionAt: 'delay' put: anInteger</body><body package="JQuery-UI">distance: anInteger	"Tolerance, in pixels, for when resizing should start. If specified, resizing will not start until after mouse is moved beyond distance. This can help prevent unintended resizing when clicking on an element."	self optionAt: 'distance' put: anInteger</body><body package="JQuery-UI">ghost: aBoolean	"If set to true, a semi-transparent helper element is shown for resizing."	self optionAt: 'ghost' put: aBoolean</body><body package="JQuery-UI">grid: anArray	"Snaps the resizing element to a grid, every x and y pixels. Array values: [x, y]"	self optionAt: 'grid' put: anArray</body><body package="JQuery-UI">handles: aStringOrObject	"If specified as a string, should be a comma-split list of any of the following: 'n, e, s, w, ne, se, sw, nw, all'. The necessary handles will be auto-generated by the plugin. If specified as an object, the following keys are supported: { n, e, s, w, ne, se, sw, nw }. The value of any specified should be a jQuery selector matching the child element of the resizable to use as that handle. If the handle is not a child of the resizable, you can pass in the DOMElement or a valid jQuery object directly."	self optionAt: 'handles' put: aStringOrObject</body><body package="JQuery-UI">helper: aString	"This is the css class that will be added to a proxy element to outline the resize during the drag of the resize handle. Once the resize is complete, the original element is sized."	self optionAt: 'helper' put: aString</body><body package="JQuery-UI">maxHeight: anInteger	"This is the maximum height the resizable should be allowed to resize to."	self optionAt: 'maxHeight' put: anInteger</body><body package="JQuery-UI">maxWidth: anInteger	"This is the maximum width the resizable should be allowed to resize to."	self optionAt: 'maxWidth' put: anInteger</body><body package="JQuery-UI">minHeight: anInteger	"This is the minimum height the resizable should be allowed to resize to."	self optionAt: 'minHeight' put: anInteger</body><body package="JQuery-UI">minWidth: anInteger	"This is the minimum width the resizable should be allowed to resize to."	self optionAt: 'minWidth' put: anInteger</body></methods><methods><class-id>JQuery.JQResizable</class-id> <category>events-generated</category><body package="JQuery-UI">onResize: anObject	"This event is triggered during the resize, on the drag of the resize handler."	self optionAt: 'resize' put: anObject asFunction</body><body package="JQuery-UI">onStart: anObject	"This event is triggered at the start of a resize operation."	self optionAt: 'start' put: anObject asFunction</body><body package="JQuery-UI">onStop: anObject	"This event is triggered at the end of a resize operation."	self optionAt: 'stop' put: anObject asFunction</body></methods><methods><class-id>JQuery.JQMintChocTheme</class-id> <category>accessing</category><body package="JQuery-UI">themeName	^ 'mint-choc'</body></methods><methods><class-id>JQuery.JQStartTheme</class-id> <category>accessing</category><body package="JQuery-UI">themeName	^ 'start'</body></methods><methods><class-id>JQuery.JQHumanityTheme</class-id> <category>accessing</category><body package="JQuery-UI">themeName	^ 'humanity'</body></methods><methods><class-id>JQuery.JQUiDevelopmentLibrary</class-id> <category>accessing</category><body package="JQuery-UI">selectorsToInclude	^ #(jQueryUiJs)</body></methods><methods><class-id>JQuery.JQUiDevelopmentLibrary</class-id> <category>uploaded</category><body package="JQuery-UI">jQueryUiJs	^ '/*! jQuery UI - v1.10.4 - 2014-01-17* http://jqueryui.com* Includes: jquery.ui.core.js, jquery.ui.widget.js, jquery.ui.mouse.js, jquery.ui.draggable.js, jquery.ui.droppable.js, jquery.ui.resizable.js, jquery.ui.selectable.js, jquery.ui.sortable.js, jquery.ui.effect.js, jquery.ui.accordion.js, jquery.ui.autocomplete.js, jquery.ui.button.js, jquery.ui.datepicker.js, jquery.ui.dialog.js, jquery.ui.effect-blind.js, jquery.ui.effect-bounce.js, jquery.ui.effect-clip.js, jquery.ui.effect-drop.js, jquery.ui.effect-explode.js, jquery.ui.effect-fade.js, jquery.ui.effect-fold.js, jquery.ui.effect-highlight.js, jquery.ui.effect-pulsate.js, jquery.ui.effect-scale.js, jquery.ui.effect-shake.js, jquery.ui.effect-slide.js, jquery.ui.effect-transfer.js, jquery.ui.menu.js, jquery.ui.position.js, jquery.ui.progressbar.js, jquery.ui.slider.js, jquery.ui.spinner.js, jquery.ui.tabs.js, jquery.ui.tooltip.js* Copyright 2014 jQuery Foundation and other contributors; Licensed MIT */(function( $, undefined ) {var uuid = 0,	runiqueId = /^ui-id-\d+$/;// $.ui might exist from components with no dependencies, e.g., $.ui.position$.ui = $.ui || {};$.extend( $.ui, {	version: "1.10.4",	keyCode: {		BACKSPACE: 8,		COMMA: 188,		DELETE: 46,		DOWN: 40,		END: 35,		ENTER: 13,		ESCAPE: 27,		HOME: 36,		LEFT: 37,		NUMPAD_ADD: 107,		NUMPAD_DECIMAL: 110,		NUMPAD_DIVIDE: 111,		NUMPAD_ENTER: 108,		NUMPAD_MULTIPLY: 106,		NUMPAD_SUBTRACT: 109,		PAGE_DOWN: 34,		PAGE_UP: 33,		PERIOD: 190,		RIGHT: 39,		SPACE: 32,		TAB: 9,		UP: 38	}});// plugins$.fn.extend({	focus: (function( orig ) {		return function( delay, fn ) {			return typeof delay === "number" ?				this.each(function() {					var elem = this;					setTimeout(function() {						$( elem ).focus();						if ( fn ) {							fn.call( elem );						}					}, delay );				}) :				orig.apply( this, arguments );		};	})( $.fn.focus ),	scrollParent: function() {		var scrollParent;		if (($.ui.ie &amp;&amp; (/(static|relative)/).test(this.css("position"))) || (/absolute/).test(this.css("position"))) {			scrollParent = this.parents().filter(function() {				return (/(relative|absolute|fixed)/).test($.css(this,"position")) &amp;&amp; (/(auto|scroll)/).test($.css(this,"overflow")+$.css(this,"overflow-y")+$.css(this,"overflow-x"));			}).eq(0);		} else {			scrollParent = this.parents().filter(function() {				return (/(auto|scroll)/).test($.css(this,"overflow")+$.css(this,"overflow-y")+$.css(this,"overflow-x"));			}).eq(0);		}		return (/fixed/).test(this.css("position")) || !scrollParent.length ? $(document) : scrollParent;	},	zIndex: function( zIndex ) {		if ( zIndex !== undefined ) {			return this.css( "zIndex", zIndex );		}		if ( this.length ) {			var elem = $( this[ 0 ] ), position, value;			while ( elem.length &amp;&amp; elem[ 0 ] !== document ) {				// Ignore z-index if position is set to a value where z-index is ignored by the browser				// This makes behavior of this function consistent across browsers				// WebKit always returns auto if the element is positioned				position = elem.css( "position" );				if ( position === "absolute" || position === "relative" || position === "fixed" ) {					// IE returns 0 when zIndex is not specified					// other browsers return a string					// we ignore the case of nested elements with an explicit value of 0					// &lt;div style="z-index: -10;"&gt;&lt;div style="z-index: 0;"&gt;&lt;/div&gt;&lt;/div&gt;					value = parseInt( elem.css( "zIndex" ), 10 );					if ( !isNaN( value ) &amp;&amp; value !== 0 ) {						return value;					}				}				elem = elem.parent();			}		}		return 0;	},	uniqueId: function() {		return this.each(function() {			if ( !this.id ) {				this.id = "ui-id-" + (++uuid);			}		});	},	removeUniqueId: function() {		return this.each(function() {			if ( runiqueId.test( this.id ) ) {				$( this ).removeAttr( "id" );			}		});	}});// selectorsfunction focusable( element, isTabIndexNotNaN ) {	var map, mapName, img,		nodeName = element.nodeName.toLowerCase();	if ( "area" === nodeName ) {		map = element.parentNode;		mapName = map.name;		if ( !element.href || !mapName || map.nodeName.toLowerCase() !== "map" ) {			return false;		}		img = $( "img[usemap=#" + mapName + "]" )[0];		return !!img &amp;&amp; visible( img );	}	return ( /input|select|textarea|button|object/.test( nodeName ) ?		!element.disabled :		"a" === nodeName ?			element.href || isTabIndexNotNaN :			isTabIndexNotNaN) &amp;&amp;		// the element and all of its ancestors must be visible		visible( element );}function visible( element ) {	return $.expr.filters.visible( element ) &amp;&amp;		!$( element ).parents().addBack().filter(function() {			return $.css( this, "visibility" ) === "hidden";		}).length;}$.extend( $.expr[ ":" ], {	data: $.expr.createPseudo ?		$.expr.createPseudo(function( dataName ) {			return function( elem ) {				return !!$.data( elem, dataName );			};		}) :		// support: jQuery &lt;1.8		function( elem, i, match ) {			return !!$.data( elem, match[ 3 ] );		},	focusable: function( element ) {		return focusable( element, !isNaN( $.attr( element, "tabindex" ) ) );	},	tabbable: function( element ) {		var tabIndex = $.attr( element, "tabindex" ),			isTabIndexNaN = isNaN( tabIndex );		return ( isTabIndexNaN || tabIndex &gt;= 0 ) &amp;&amp; focusable( element, !isTabIndexNaN );	}});// support: jQuery &lt;1.8if ( !$( "&lt;a&gt;" ).outerWidth( 1 ).jquery ) {	$.each( [ "Width", "Height" ], function( i, name ) {		var side = name === "Width" ? [ "Left", "Right" ] : [ "Top", "Bottom" ],			type = name.toLowerCase(),			orig = {				innerWidth: $.fn.innerWidth,				innerHeight: $.fn.innerHeight,				outerWidth: $.fn.outerWidth,				outerHeight: $.fn.outerHeight			};		function reduce( elem, size, border, margin ) {			$.each( side, function() {				size -= parseFloat( $.css( elem, "padding" + this ) ) || 0;				if ( border ) {					size -= parseFloat( $.css( elem, "border" + this + "Width" ) ) || 0;				}				if ( margin ) {					size -= parseFloat( $.css( elem, "margin" + this ) ) || 0;				}			});			return size;		}		$.fn[ "inner" + name ] = function( size ) {			if ( size === undefined ) {				return orig[ "inner" + name ].call( this );			}			return this.each(function() {				$( this ).css( type, reduce( this, size ) + "px" );			});		};		$.fn[ "outer" + name] = function( size, margin ) {			if ( typeof size !== "number" ) {				return orig[ "outer" + name ].call( this, size );			}			return this.each(function() {				$( this).css( type, reduce( this, size, true, margin ) + "px" );			});		};	});}// support: jQuery &lt;1.8if ( !$.fn.addBack ) {	$.fn.addBack = function( selector ) {		return this.add( selector == null ?			this.prevObject : this.prevObject.filter( selector )		);	};}// support: jQuery 1.6.1, 1.6.2 (http://bugs.jquery.com/ticket/9413)if ( $( "&lt;a&gt;" ).data( "a-b", "a" ).removeData( "a-b" ).data( "a-b" ) ) {	$.fn.removeData = (function( removeData ) {		return function( key ) {			if ( arguments.length ) {				return removeData.call( this, $.camelCase( key ) );			} else {				return removeData.call( this );			}		};	})( $.fn.removeData );}// deprecated$.ui.ie = !!/msie [\w.]+/.exec( navigator.userAgent.toLowerCase() );$.support.selectstart = "onselectstart" in document.createElement( "div" );$.fn.extend({	disableSelection: function() {		return this.bind( ( $.support.selectstart ? "selectstart" : "mousedown" ) +			".ui-disableSelection", function( event ) {				event.preventDefault();			});	},	enableSelection: function() {		return this.unbind( ".ui-disableSelection" );	}});$.extend( $.ui, {	// $.ui.plugin is deprecated. Use $.widget() extensions instead.	plugin: {		add: function( module, option, set ) {			var i,				proto = $.ui[ module ].prototype;			for ( i in set ) {				proto.plugins[ i ] = proto.plugins[ i ] || [];				proto.plugins[ i ].push( [ option, set[ i ] ] );			}		},		call: function( instance, name, args ) {			var i,				set = instance.plugins[ name ];			if ( !set || !instance.element[ 0 ].parentNode || instance.element[ 0 ].parentNode.nodeType === 11 ) {				return;			}			for ( i = 0; i &lt; set.length; i++ ) {				if ( instance.options[ set[ i ][ 0 ] ] ) {					set[ i ][ 1 ].apply( instance.element, args );				}			}		}	},	// only used by resizable	hasScroll: function( el, a ) {		//If overflow is hidden, the element might have extra content, but the user wants to hide it		if ( $( el ).css( "overflow" ) === "hidden") {			return false;		}		var scroll = ( a &amp;&amp; a === "left" ) ? "scrollLeft" : "scrollTop",			has = false;		if ( el[ scroll ] &gt; 0 ) {			return true;		}		// TODO: determine which cases actually cause this to happen		// if the element doesn''t have the scroll set, see if it''s possible to		// set the scroll		el[ scroll ] = 1;		has = ( el[ scroll ] &gt; 0 );		el[ scroll ] = 0;		return has;	}});})( jQuery );(function( $, undefined ) {var uuid = 0,	slice = Array.prototype.slice,	_cleanData = $.cleanData;$.cleanData = function( elems ) {	for ( var i = 0, elem; (elem = elems[i]) != null; i++ ) {		try {			$( elem ).triggerHandler( "remove" );		// http://bugs.jquery.com/ticket/8235		} catch( e ) {}	}	_cleanData( elems );};$.widget = function( name, base, prototype ) {	var fullName, existingConstructor, constructor, basePrototype,		// proxiedPrototype allows the provided prototype to remain unmodified		// so that it can be used as a mixin for multiple widgets (#8876)		proxiedPrototype = {},		namespace = name.split( "." )[ 0 ];	name = name.split( "." )[ 1 ];	fullName = namespace + "-" + name;	if ( !prototype ) {		prototype = base;		base = $.Widget;	}	// create selector for plugin	$.expr[ ":" ][ fullName.toLowerCase() ] = function( elem ) {		return !!$.data( elem, fullName );	};	$[ namespace ] = $[ namespace ] || {};	existingConstructor = $[ namespace ][ name ];	constructor = $[ namespace ][ name ] = function( options, element ) {		// allow instantiation without "new" keyword		if ( !this._createWidget ) {			return new constructor( options, element );		}		// allow instantiation without initializing for simple inheritance		// must use "new" keyword (the code above always passes args)		if ( arguments.length ) {			this._createWidget( options, element );		}	};	// extend with the existing constructor to carry over any static properties	$.extend( constructor, existingConstructor, {		version: prototype.version,		// copy the object used to create the prototype in case we need to		// redefine the widget later		_proto: $.extend( {}, prototype ),		// track widgets that inherit from this widget in case this widget is		// redefined after a widget inherits from it		_childConstructors: []	});	basePrototype = new base();	// we need to make the options hash a property directly on the new instance	// otherwise we''ll modify the options hash on the prototype that we''re	// inheriting from	basePrototype.options = $.widget.extend( {}, basePrototype.options );	$.each( prototype, function( prop, value ) {		if ( !$.isFunction( value ) ) {			proxiedPrototype[ prop ] = value;			return;		}		proxiedPrototype[ prop ] = (function() {			var _super = function() {					return base.prototype[ prop ].apply( this, arguments );				},				_superApply = function( args ) {					return base.prototype[ prop ].apply( this, args );				};			return function() {				var __super = this._super,					__superApply = this._superApply,					returnValue;				this._super = _super;				this._superApply = _superApply;				returnValue = value.apply( this, arguments );				this._super = __super;				this._superApply = __superApply;				return returnValue;			};		})();	});	constructor.prototype = $.widget.extend( basePrototype, {		// TODO: remove support for widgetEventPrefix		// always use the name + a colon as the prefix, e.g., draggable:start		// don''t prefix for widgets that aren''t DOM-based		widgetEventPrefix: existingConstructor ? (basePrototype.widgetEventPrefix || name) : name	}, proxiedPrototype, {		constructor: constructor,		namespace: namespace,		widgetName: name,		widgetFullName: fullName	});	// If this widget is being redefined then we need to find all widgets that	// are inheriting from it and redefine all of them so that they inherit from	// the new version of this widget. We''re essentially trying to replace one	// level in the prototype chain.	if ( existingConstructor ) {		$.each( existingConstructor._childConstructors, function( i, child ) {			var childPrototype = child.prototype;			// redefine the child widget using the same prototype that was			// originally used, but inherit from the new version of the base			$.widget( childPrototype.namespace + "." + childPrototype.widgetName, constructor, child._proto );		});		// remove the list of existing child constructors from the old constructor		// so the old child constructors can be garbage collected		delete existingConstructor._childConstructors;	} else {		base._childConstructors.push( constructor );	}	$.widget.bridge( name, constructor );};$.widget.extend = function( target ) {	var input = slice.call( arguments, 1 ),		inputIndex = 0,		inputLength = input.length,		key,		value;	for ( ; inputIndex &lt; inputLength; inputIndex++ ) {		for ( key in input[ inputIndex ] ) {			value = input[ inputIndex ][ key ];			if ( input[ inputIndex ].hasOwnProperty( key ) &amp;&amp; value !== undefined ) {				// Clone objects				if ( $.isPlainObject( value ) ) {					target[ key ] = $.isPlainObject( target[ key ] ) ?						$.widget.extend( {}, target[ key ], value ) :						// Don''t extend strings, arrays, etc. with objects						$.widget.extend( {}, value );				// Copy everything else by reference				} else {					target[ key ] = value;				}			}		}	}	return target;};$.widget.bridge = function( name, object ) {	var fullName = object.prototype.widgetFullName || name;	$.fn[ name ] = function( options ) {		var isMethodCall = typeof options === "string",			args = slice.call( arguments, 1 ),			returnValue = this;		// allow multiple hashes to be passed on init		options = !isMethodCall &amp;&amp; args.length ?			$.widget.extend.apply( null, [ options ].concat(args) ) :			options;		if ( isMethodCall ) {			this.each(function() {				var methodValue,					instance = $.data( this, fullName );				if ( !instance ) {					return $.error( "cannot call methods on " + name + " prior to initialization; " +						"attempted to call method ''" + options + "''" );				}				if ( !$.isFunction( instance[options] ) || options.charAt( 0 ) === "_" ) {					return $.error( "no such method ''" + options + "'' for " + name + " widget instance" );				}				methodValue = instance[ options ].apply( instance, args );				if ( methodValue !== instance &amp;&amp; methodValue !== undefined ) {					returnValue = methodValue &amp;&amp; methodValue.jquery ?						returnValue.pushStack( methodValue.get() ) :						methodValue;					return false;				}			});		} else {			this.each(function() {				var instance = $.data( this, fullName );				if ( instance ) {					instance.option( options || {} )._init();				} else {					$.data( this, fullName, new object( options, this ) );				}			});		}		return returnValue;	};};$.Widget = function( /* options, element */ ) {};$.Widget._childConstructors = [];$.Widget.prototype = {	widgetName: "widget",	widgetEventPrefix: "",	defaultElement: "&lt;div&gt;",	options: {		disabled: false,		// callbacks		create: null	},	_createWidget: function( options, element ) {		element = $( element || this.defaultElement || this )[ 0 ];		this.element = $( element );		this.uuid = uuid++;		this.eventNamespace = "." + this.widgetName + this.uuid;		this.options = $.widget.extend( {},			this.options,			this._getCreateOptions(),			options );		this.bindings = $();		this.hoverable = $();		this.focusable = $();		if ( element !== this ) {			$.data( element, this.widgetFullName, this );			this._on( true, this.element, {				remove: function( event ) {					if ( event.target === element ) {						this.destroy();					}				}			});			this.document = $( element.style ?				// element within the document				element.ownerDocument :				// element is window or document				element.document || element );			this.window = $( this.document[0].defaultView || this.document[0].parentWindow );		}		this._create();		this._trigger( "create", null, this._getCreateEventData() );		this._init();	},	_getCreateOptions: $.noop,	_getCreateEventData: $.noop,	_create: $.noop,	_init: $.noop,	destroy: function() {		this._destroy();		// we can probably remove the unbind calls in 2.0		// all event bindings should go through this._on()		this.element			.unbind( this.eventNamespace )			// 1.9 BC for #7810			// TODO remove dual storage			.removeData( this.widgetName )			.removeData( this.widgetFullName )			// support: jquery &lt;1.6.3			// http://bugs.jquery.com/ticket/9413			.removeData( $.camelCase( this.widgetFullName ) );		this.widget()			.unbind( this.eventNamespace )			.removeAttr( "aria-disabled" )			.removeClass(				this.widgetFullName + "-disabled " +				"ui-state-disabled" );		// clean up events and states		this.bindings.unbind( this.eventNamespace );		this.hoverable.removeClass( "ui-state-hover" );		this.focusable.removeClass( "ui-state-focus" );	},	_destroy: $.noop,	widget: function() {		return this.element;	},	option: function( key, value ) {		var options = key,			parts,			curOption,			i;		if ( arguments.length === 0 ) {			// don''t return a reference to the internal hash			return $.widget.extend( {}, this.options );		}		if ( typeof key === "string" ) {			// handle nested keys, e.g., "foo.bar" =&gt; { foo: { bar: ___ } }			options = {};			parts = key.split( "." );			key = parts.shift();			if ( parts.length ) {				curOption = options[ key ] = $.widget.extend( {}, this.options[ key ] );				for ( i = 0; i &lt; parts.length - 1; i++ ) {					curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};					curOption = curOption[ parts[ i ] ];				}				key = parts.pop();				if ( arguments.length === 1 ) {					return curOption[ key ] === undefined ? null : curOption[ key ];				}				curOption[ key ] = value;			} else {				if ( arguments.length === 1 ) {					return this.options[ key ] === undefined ? null : this.options[ key ];				}				options[ key ] = value;			}		}		this._setOptions( options );		return this;	},	_setOptions: function( options ) {		var key;		for ( key in options ) {			this._setOption( key, options[ key ] );		}		return this;	},	_setOption: function( key, value ) {		this.options[ key ] = value;		if ( key === "disabled" ) {			this.widget()				.toggleClass( this.widgetFullName + "-disabled ui-state-disabled", !!value )				.attr( "aria-disabled", value );			this.hoverable.removeClass( "ui-state-hover" );			this.focusable.removeClass( "ui-state-focus" );		}		return this;	},	enable: function() {		return this._setOption( "disabled", false );	},	disable: function() {		return this._setOption( "disabled", true );	},	_on: function( suppressDisabledCheck, element, handlers ) {		var delegateElement,			instance = this;		// no suppressDisabledCheck flag, shuffle arguments		if ( typeof suppressDisabledCheck !== "boolean" ) {			handlers = element;			element = suppressDisabledCheck;			suppressDisabledCheck = false;		}		// no element argument, shuffle and use this.element		if ( !handlers ) {			handlers = element;			element = this.element;			delegateElement = this.widget();		} else {			// accept selectors, DOM elements			element = delegateElement = $( element );			this.bindings = this.bindings.add( element );		}		$.each( handlers, function( event, handler ) {			function handlerProxy() {				// allow widgets to customize the disabled handling				// - disabled as an array instead of boolean				// - disabled class as method for disabling individual parts				if ( !suppressDisabledCheck &amp;&amp;						( instance.options.disabled === true ||							$( this ).hasClass( "ui-state-disabled" ) ) ) {					return;				}				return ( typeof handler === "string" ? instance[ handler ] : handler )					.apply( instance, arguments );			}			// copy the guid so direct unbinding works			if ( typeof handler !== "string" ) {				handlerProxy.guid = handler.guid =					handler.guid || handlerProxy.guid || $.guid++;			}			var match = event.match( /^(\w+)\s*(.*)$/ ),				eventName = match[1] + instance.eventNamespace,				selector = match[2];			if ( selector ) {				delegateElement.delegate( selector, eventName, handlerProxy );			} else {				element.bind( eventName, handlerProxy );			}		});	},	_off: function( element, eventName ) {		eventName = (eventName || "").split( " " ).join( this.eventNamespace + " " ) + this.eventNamespace;		element.unbind( eventName ).undelegate( eventName );	},	_delay: function( handler, delay ) {		function handlerProxy() {			return ( typeof handler === "string" ? instance[ handler ] : handler )				.apply( instance, arguments );		}		var instance = this;		return setTimeout( handlerProxy, delay || 0 );	},	_hoverable: function( element ) {		this.hoverable = this.hoverable.add( element );		this._on( element, {			mouseenter: function( event ) {				$( event.currentTarget ).addClass( "ui-state-hover" );			},			mouseleave: function( event ) {				$( event.currentTarget ).removeClass( "ui-state-hover" );			}		});	},	_focusable: function( element ) {		this.focusable = this.focusable.add( element );		this._on( element, {			focusin: function( event ) {				$( event.currentTarget ).addClass( "ui-state-focus" );			},			focusout: function( event ) {				$( event.currentTarget ).removeClass( "ui-state-focus" );			}		});	},	_trigger: function( type, event, data ) {		var prop, orig,			callback = this.options[ type ];		data = data || {};		event = $.Event( event );		event.type = ( type === this.widgetEventPrefix ?			type :			this.widgetEventPrefix + type ).toLowerCase();		// the original event may come from any element		// so we need to reset the target on the new event		event.target = this.element[ 0 ];		// copy original event properties over to the new event		orig = event.originalEvent;		if ( orig ) {			for ( prop in orig ) {				if ( !( prop in event ) ) {					event[ prop ] = orig[ prop ];				}			}		}		this.element.trigger( event, data );		return !( $.isFunction( callback ) &amp;&amp;			callback.apply( this.element[0], [ event ].concat( data ) ) === false ||			event.isDefaultPrevented() );	}};$.each( { show: "fadeIn", hide: "fadeOut" }, function( method, defaultEffect ) {	$.Widget.prototype[ "_" + method ] = function( element, options, callback ) {		if ( typeof options === "string" ) {			options = { effect: options };		}		var hasOptions,			effectName = !options ?				method :				options === true || typeof options === "number" ?					defaultEffect :					options.effect || defaultEffect;		options = options || {};		if ( typeof options === "number" ) {			options = { duration: options };		}		hasOptions = !$.isEmptyObject( options );		options.complete = callback;		if ( options.delay ) {			element.delay( options.delay );		}		if ( hasOptions &amp;&amp; $.effects &amp;&amp; $.effects.effect[ effectName ] ) {			element[ method ]( options );		} else if ( effectName !== method &amp;&amp; element[ effectName ] ) {			element[ effectName ]( options.duration, options.easing, callback );		} else {			element.queue(function( next ) {				$( this )[ method ]();				if ( callback ) {					callback.call( element[ 0 ] );				}				next();			});		}	};});})( jQuery );(function( $, undefined ) {var mouseHandled = false;$( document ).mouseup( function() {	mouseHandled = false;});$.widget("ui.mouse", {	version: "1.10.4",	options: {		cancel: "input,textarea,button,select,option",		distance: 1,		delay: 0	},	_mouseInit: function() {		var that = this;		this.element			.bind("mousedown."+this.widgetName, function(event) {				return that._mouseDown(event);			})			.bind("click."+this.widgetName, function(event) {				if (true === $.data(event.target, that.widgetName + ".preventClickEvent")) {					$.removeData(event.target, that.widgetName + ".preventClickEvent");					event.stopImmediatePropagation();					return false;				}			});		this.started = false;	},	// TODO: make sure destroying one instance of mouse doesn''t mess with	// other instances of mouse	_mouseDestroy: function() {		this.element.unbind("."+this.widgetName);		if ( this._mouseMoveDelegate ) {			$(document)				.unbind("mousemove."+this.widgetName, this._mouseMoveDelegate)				.unbind("mouseup."+this.widgetName, this._mouseUpDelegate);		}	},	_mouseDown: function(event) {		// don''t let more than one widget handle mouseStart		if( mouseHandled ) { return; }		// we may have missed mouseup (out of window)		(this._mouseStarted &amp;&amp; this._mouseUp(event));		this._mouseDownEvent = event;		var that = this,			btnIsLeft = (event.which === 1),			// event.target.nodeName works around a bug in IE 8 with			// disabled inputs (#7620)			elIsCancel = (typeof this.options.cancel === "string" &amp;&amp; event.target.nodeName ? $(event.target).closest(this.options.cancel).length : false);		if (!btnIsLeft || elIsCancel || !this._mouseCapture(event)) {			return true;		}		this.mouseDelayMet = !this.options.delay;		if (!this.mouseDelayMet) {			this._mouseDelayTimer = setTimeout(function() {				that.mouseDelayMet = true;			}, this.options.delay);		}		if (this._mouseDistanceMet(event) &amp;&amp; this._mouseDelayMet(event)) {			this._mouseStarted = (this._mouseStart(event) !== false);			if (!this._mouseStarted) {				event.preventDefault();				return true;			}		}		// Click event may never have fired (Gecko &amp; Opera)		if (true === $.data(event.target, this.widgetName + ".preventClickEvent")) {			$.removeData(event.target, this.widgetName + ".preventClickEvent");		}		// these delegates are required to keep context		this._mouseMoveDelegate = function(event) {			return that._mouseMove(event);		};		this._mouseUpDelegate = function(event) {			return that._mouseUp(event);		};		$(document)			.bind("mousemove."+this.widgetName, this._mouseMoveDelegate)			.bind("mouseup."+this.widgetName, this._mouseUpDelegate);		event.preventDefault();		mouseHandled = true;		return true;	},	_mouseMove: function(event) {		// IE mouseup check - mouseup happened when mouse was out of window		if ($.ui.ie &amp;&amp; ( !document.documentMode || document.documentMode &lt; 9 ) &amp;&amp; !event.button) {			return this._mouseUp(event);		}		if (this._mouseStarted) {			this._mouseDrag(event);			return event.preventDefault();		}		if (this._mouseDistanceMet(event) &amp;&amp; this._mouseDelayMet(event)) {			this._mouseStarted =				(this._mouseStart(this._mouseDownEvent, event) !== false);			(this._mouseStarted ? this._mouseDrag(event) : this._mouseUp(event));		}		return !this._mouseStarted;	},	_mouseUp: function(event) {		$(document)			.unbind("mousemove."+this.widgetName, this._mouseMoveDelegate)			.unbind("mouseup."+this.widgetName, this._mouseUpDelegate);		if (this._mouseStarted) {			this._mouseStarted = false;			if (event.target === this._mouseDownEvent.target) {				$.data(event.target, this.widgetName + ".preventClickEvent", true);			}			this._mouseStop(event);		}		return false;	},	_mouseDistanceMet: function(event) {		return (Math.max(				Math.abs(this._mouseDownEvent.pageX - event.pageX),				Math.abs(this._mouseDownEvent.pageY - event.pageY)			) &gt;= this.options.distance		);	},	_mouseDelayMet: function(/* event */) {		return this.mouseDelayMet;	},	// These are placeholder methods, to be overriden by extending plugin	_mouseStart: function(/* event */) {},	_mouseDrag: function(/* event */) {},	_mouseStop: function(/* event */) {},	_mouseCapture: function(/* event */) { return true; }});})(jQuery);(function( $, undefined ) {$.widget("ui.draggable", $.ui.mouse, {	version: "1.10.4",	widgetEventPrefix: "drag",	options: {		addClasses: true,		appendTo: "parent",		axis: false,		connectToSortable: false,		containment: false,		cursor: "auto",		cursorAt: false,		grid: false,		handle: false,		helper: "original",		iframeFix: false,		opacity: false,		refreshPositions: false,		revert: false,		revertDuration: 500,		scope: "default",		scroll: true,		scrollSensitivity: 20,		scrollSpeed: 20,		snap: false,		snapMode: "both",		snapTolerance: 20,		stack: false,		zIndex: false,		// callbacks		drag: null,		start: null,		stop: null	},	_create: function() {		if (this.options.helper === "original" &amp;&amp; !(/^(?:r|a|f)/).test(this.element.css("position"))) {			this.element[0].style.position = "relative";		}		if (this.options.addClasses){			this.element.addClass("ui-draggable");		}		if (this.options.disabled){			this.element.addClass("ui-draggable-disabled");		}		this._mouseInit();	},	_destroy: function() {		this.element.removeClass( "ui-draggable ui-draggable-dragging ui-draggable-disabled" );		this._mouseDestroy();	},	_mouseCapture: function(event) {		var o = this.options;		// among others, prevent a drag on a resizable-handle		if (this.helper || o.disabled || $(event.target).closest(".ui-resizable-handle").length &gt; 0) {			return false;		}		//Quit if we''re not on a valid handle		this.handle = this._getHandle(event);		if (!this.handle) {			return false;		}		$(o.iframeFix === true ? "iframe" : o.iframeFix).each(function() {			$("&lt;div class=''ui-draggable-iframeFix'' style=''background: #fff;''&gt;&lt;/div&gt;")			.css({				width: this.offsetWidth+"px", height: this.offsetHeight+"px",				position: "absolute", opacity: "0.001", zIndex: 1000			})			.css($(this).offset())			.appendTo("body");		});		return true;	},	_mouseStart: function(event) {		var o = this.options;		//Create and append the visible helper		this.helper = this._createHelper(event);		this.helper.addClass("ui-draggable-dragging");		//Cache the helper size		this._cacheHelperProportions();		//If ddmanager is used for droppables, set the global draggable		if($.ui.ddmanager) {			$.ui.ddmanager.current = this;		}		/*		 * - Position generation -		 * This block generates everything position related - it''s the core of draggables.		 */		//Cache the margins of the original element		this._cacheMargins();		//Store the helper''s css position		this.cssPosition = this.helper.css( "position" );		this.scrollParent = this.helper.scrollParent();		this.offsetParent = this.helper.offsetParent();		this.offsetParentCssPosition = this.offsetParent.css( "position" );		//The element''s absolute position on the page minus margins		this.offset = this.positionAbs = this.element.offset();		this.offset = {			top: this.offset.top - this.margins.top,			left: this.offset.left - this.margins.left		};		//Reset scroll cache		this.offset.scroll = false;		$.extend(this.offset, {			click: { //Where the click happened, relative to the element				left: event.pageX - this.offset.left,				top: event.pageY - this.offset.top			},			parent: this._getParentOffset(),			relative: this._getRelativeOffset() //This is a relative to absolute position minus the actual position calculation - only used for relative positioned helper		});		//Generate the original position		this.originalPosition = this.position = this._generatePosition(event);		this.originalPageX = event.pageX;		this.originalPageY = event.pageY;		//Adjust the mouse offset relative to the helper if "cursorAt" is supplied		(o.cursorAt &amp;&amp; this._adjustOffsetFromHelper(o.cursorAt));		//Set a containment if given in the options		this._setContainment();		//Trigger event + callbacks		if(this._trigger("start", event) === false) {			this._clear();			return false;		}		//Recache the helper size		this._cacheHelperProportions();		//Prepare the droppable offsets		if ($.ui.ddmanager &amp;&amp; !o.dropBehaviour) {			$.ui.ddmanager.prepareOffsets(this, event);		}		this._mouseDrag(event, true); //Execute the drag once - this causes the helper not to be visible before getting its correct position		//If the ddmanager is used for droppables, inform the manager that dragging has started (see #5003)		if ( $.ui.ddmanager ) {			$.ui.ddmanager.dragStart(this, event);		}		return true;	},	_mouseDrag: function(event, noPropagation) {		// reset any necessary cached properties (see #5009)		if ( this.offsetParentCssPosition === "fixed" ) {			this.offset.parent = this._getParentOffset();		}		//Compute the helpers position		this.position = this._generatePosition(event);		this.positionAbs = this._convertPositionTo("absolute");		//Call plugins and callbacks and use the resulting position if something is returned		if (!noPropagation) {			var ui = this._uiHash();			if(this._trigger("drag", event, ui) === false) {				this._mouseUp({});				return false;			}			this.position = ui.position;		}		if(!this.options.axis || this.options.axis !== "y") {			this.helper[0].style.left = this.position.left+"px";		}		if(!this.options.axis || this.options.axis !== "x") {			this.helper[0].style.top = this.position.top+"px";		}		if($.ui.ddmanager) {			$.ui.ddmanager.drag(this, event);		}		return false;	},	_mouseStop: function(event) {		//If we are using droppables, inform the manager about the drop		var that = this,			dropped = false;		if ($.ui.ddmanager &amp;&amp; !this.options.dropBehaviour) {			dropped = $.ui.ddmanager.drop(this, event);		}		//if a drop comes from outside (a sortable)		if(this.dropped) {			dropped = this.dropped;			this.dropped = false;		}		//if the original element is no longer in the DOM don''t bother to continue (see #8269)		if ( this.options.helper === "original" &amp;&amp; !$.contains( this.element[ 0 ].ownerDocument, this.element[ 0 ] ) ) {			return false;		}		if((this.options.revert === "invalid" &amp;&amp; !dropped) || (this.options.revert === "valid" &amp;&amp; dropped) || this.options.revert === true || ($.isFunction(this.options.revert) &amp;&amp; this.options.revert.call(this.element, dropped))) {			$(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function() {				if(that._trigger("stop", event) !== false) {					that._clear();				}			});		} else {			if(this._trigger("stop", event) !== false) {				this._clear();			}		}		return false;	},	_mouseUp: function(event) {		//Remove frame helpers		$("div.ui-draggable-iframeFix").each(function() {			this.parentNode.removeChild(this);		});		//If the ddmanager is used for droppables, inform the manager that dragging has stopped (see #5003)		if( $.ui.ddmanager ) {			$.ui.ddmanager.dragStop(this, event);		}		return $.ui.mouse.prototype._mouseUp.call(this, event);	},	cancel: function() {		if(this.helper.is(".ui-draggable-dragging")) {			this._mouseUp({});		} else {			this._clear();		}		return this;	},	_getHandle: function(event) {		return this.options.handle ?			!!$( event.target ).closest( this.element.find( this.options.handle ) ).length :			true;	},	_createHelper: function(event) {		var o = this.options,			helper = $.isFunction(o.helper) ? $(o.helper.apply(this.element[0], [event])) : (o.helper === "clone" ? this.element.clone().removeAttr("id") : this.element);		if(!helper.parents("body").length) {			helper.appendTo((o.appendTo === "parent" ? this.element[0].parentNode : o.appendTo));		}		if(helper[0] !== this.element[0] &amp;&amp; !(/(fixed|absolute)/).test(helper.css("position"))) {			helper.css("position", "absolute");		}		return helper;	},	_adjustOffsetFromHelper: function(obj) {		if (typeof obj === "string") {			obj = obj.split(" ");		}		if ($.isArray(obj)) {			obj = {left: +obj[0], top: +obj[1] || 0};		}		if ("left" in obj) {			this.offset.click.left = obj.left + this.margins.left;		}		if ("right" in obj) {			this.offset.click.left = this.helperProportions.width - obj.right + this.margins.left;		}		if ("top" in obj) {			this.offset.click.top = obj.top + this.margins.top;		}		if ("bottom" in obj) {			this.offset.click.top = this.helperProportions.height - obj.bottom + this.margins.top;		}	},	_getParentOffset: function() {		//Get the offsetParent and cache its position		var po = this.offsetParent.offset();		// This is a special case where we need to modify a offset calculated on start, since the following happened:		// 1. The position of the helper is absolute, so it''s position is calculated based on the next positioned parent		// 2. The actual offset parent is a child of the scroll parent, and the scroll parent isn''t the document, which means that		//    the scroll is included in the initial calculation of the offset of the parent, and never recalculated upon drag		if(this.cssPosition === "absolute" &amp;&amp; this.scrollParent[0] !== document &amp;&amp; $.contains(this.scrollParent[0], this.offsetParent[0])) {			po.left += this.scrollParent.scrollLeft();			po.top += this.scrollParent.scrollTop();		}		//This needs to be actually done for all browsers, since pageX/pageY includes this information		//Ugly IE fix		if((this.offsetParent[0] === document.body) ||			(this.offsetParent[0].tagName &amp;&amp; this.offsetParent[0].tagName.toLowerCase() === "html" &amp;&amp; $.ui.ie)) {			po = { top: 0, left: 0 };		}		return {			top: po.top + (parseInt(this.offsetParent.css("borderTopWidth"),10) || 0),			left: po.left + (parseInt(this.offsetParent.css("borderLeftWidth"),10) || 0)		};	},	_getRelativeOffset: function() {		if(this.cssPosition === "relative") {			var p = this.element.position();			return {				top: p.top - (parseInt(this.helper.css("top"),10) || 0) + this.scrollParent.scrollTop(),				left: p.left - (parseInt(this.helper.css("left"),10) || 0) + this.scrollParent.scrollLeft()			};		} else {			return { top: 0, left: 0 };		}	},	_cacheMargins: function() {		this.margins = {			left: (parseInt(this.element.css("marginLeft"),10) || 0),			top: (parseInt(this.element.css("marginTop"),10) || 0),			right: (parseInt(this.element.css("marginRight"),10) || 0),			bottom: (parseInt(this.element.css("marginBottom"),10) || 0)		};	},	_cacheHelperProportions: function() {		this.helperProportions = {			width: this.helper.outerWidth(),			height: this.helper.outerHeight()		};	},	_setContainment: function() {		var over, c, ce,			o = this.options;		if ( !o.containment ) {			this.containment = null;			return;		}		if ( o.containment === "window" ) {			this.containment = [				$( window ).scrollLeft() - this.offset.relative.left - this.offset.parent.left,				$( window ).scrollTop() - this.offset.relative.top - this.offset.parent.top,				$( window ).scrollLeft() + $( window ).width() - this.helperProportions.width - this.margins.left,				$( window ).scrollTop() + ( $( window ).height() || document.body.parentNode.scrollHeight ) - this.helperProportions.height - this.margins.top			];			return;		}		if ( o.containment === "document") {			this.containment = [				0,				0,				$( document ).width() - this.helperProportions.width - this.margins.left,				( $( document ).height() || document.body.parentNode.scrollHeight ) - this.helperProportions.height - this.margins.top			];			return;		}		if ( o.containment.constructor === Array ) {			this.containment = o.containment;			return;		}		if ( o.containment === "parent" ) {			o.containment = this.helper[ 0 ].parentNode;		}		c = $( o.containment );		ce = c[ 0 ];		if( !ce ) {			return;		}		over = c.css( "overflow" ) !== "hidden";		this.containment = [			( parseInt( c.css( "borderLeftWidth" ), 10 ) || 0 ) + ( parseInt( c.css( "paddingLeft" ), 10 ) || 0 ),			( parseInt( c.css( "borderTopWidth" ), 10 ) || 0 ) + ( parseInt( c.css( "paddingTop" ), 10 ) || 0 ) ,			( over ? Math.max( ce.scrollWidth, ce.offsetWidth ) : ce.offsetWidth ) - ( parseInt( c.css( "borderRightWidth" ), 10 ) || 0 ) - ( parseInt( c.css( "paddingRight" ), 10 ) || 0 ) - this.helperProportions.width - this.margins.left - this.margins.right,			( over ? Math.max( ce.scrollHeight, ce.offsetHeight ) : ce.offsetHeight ) - ( parseInt( c.css( "borderBottomWidth" ), 10 ) || 0 ) - ( parseInt( c.css( "paddingBottom" ), 10 ) || 0 ) - this.helperProportions.height - this.margins.top  - this.margins.bottom		];		this.relative_container = c;	},	_convertPositionTo: function(d, pos) {		if(!pos) {			pos = this.position;		}		var mod = d === "absolute" ? 1 : -1,			scroll = this.cssPosition === "absolute" &amp;&amp; !( this.scrollParent[ 0 ] !== document &amp;&amp; $.contains( this.scrollParent[ 0 ], this.offsetParent[ 0 ] ) ) ? this.offsetParent : this.scrollParent;		//Cache the scroll		if (!this.offset.scroll) {			this.offset.scroll = {top : scroll.scrollTop(), left : scroll.scrollLeft()};		}		return {			top: (				pos.top	+																// The absolute mouse position				this.offset.relative.top * mod +										// Only for relative positioned nodes: Relative offset from element to offset parent				this.offset.parent.top * mod -										// The offsetParent''s offset without borders (offset + border)				( ( this.cssPosition === "fixed" ? -this.scrollParent.scrollTop() : this.offset.scroll.top ) * mod )			),			left: (				pos.left +																// The absolute mouse position				this.offset.relative.left * mod +										// Only for relative positioned nodes: Relative offset from element to offset parent				this.offset.parent.left * mod	-										// The offsetParent''s offset without borders (offset + border)				( ( this.cssPosition === "fixed" ? -this.scrollParent.scrollLeft() : this.offset.scroll.left ) * mod )			)		};	},	_generatePosition: function(event) {		var containment, co, top, left,			o = this.options,			scroll = this.cssPosition === "absolute" &amp;&amp; !( this.scrollParent[ 0 ] !== document &amp;&amp; $.contains( this.scrollParent[ 0 ], this.offsetParent[ 0 ] ) ) ? this.offsetParent : this.scrollParent,			pageX = event.pageX,			pageY = event.pageY;		//Cache the scroll		if (!this.offset.scroll) {			this.offset.scroll = {top : scroll.scrollTop(), left : scroll.scrollLeft()};		}		/*		 * - Position constraining -		 * Constrain the position to a mix of grid, containment.		 */		// If we are not dragging yet, we won''t check for options		if ( this.originalPosition ) {			if ( this.containment ) {				if ( this.relative_container ){					co = this.relative_container.offset();					containment = [						this.containment[ 0 ] + co.left,						this.containment[ 1 ] + co.top,						this.containment[ 2 ] + co.left,						this.containment[ 3 ] + co.top					];				}				else {					containment = this.containment;				}				if(event.pageX - this.offset.click.left &lt; containment[0]) {					pageX = containment[0] + this.offset.click.left;				}				if(event.pageY - this.offset.click.top &lt; containment[1]) {					pageY = containment[1] + this.offset.click.top;				}				if(event.pageX - this.offset.click.left &gt; containment[2]) {					pageX = containment[2] + this.offset.click.left;				}				if(event.pageY - this.offset.click.top &gt; containment[3]) {					pageY = containment[3] + this.offset.click.top;				}			}			if(o.grid) {				//Check for grid elements set to 0 to prevent divide by 0 error causing invalid argument errors in IE (see ticket #6950)				top = o.grid[1] ? this.originalPageY + Math.round((pageY - this.originalPageY) / o.grid[1]) * o.grid[1] : this.originalPageY;				pageY = containment ? ((top - this.offset.click.top &gt;= containment[1] || top - this.offset.click.top &gt; containment[3]) ? top : ((top - this.offset.click.top &gt;= containment[1]) ? top - o.grid[1] : top + o.grid[1])) : top;				left = o.grid[0] ? this.originalPageX + Math.round((pageX - this.originalPageX) / o.grid[0]) * o.grid[0] : this.originalPageX;				pageX = containment ? ((left - this.offset.click.left &gt;= containment[0] || left - this.offset.click.left &gt; containment[2]) ? left : ((left - this.offset.click.left &gt;= containment[0]) ? left - o.grid[0] : left + o.grid[0])) : left;			}		}		return {			top: (				pageY -																	// The absolute mouse position				this.offset.click.top	-												// Click offset (relative to the element)				this.offset.relative.top -												// Only for relative positioned nodes: Relative offset from element to offset parent				this.offset.parent.top +												// The offsetParent''s offset without borders (offset + border)				( this.cssPosition === "fixed" ? -this.scrollParent.scrollTop() : this.offset.scroll.top )			),			left: (				pageX -																	// The absolute mouse position				this.offset.click.left -												// Click offset (relative to the element)				this.offset.relative.left -												// Only for relative positioned nodes: Relative offset from element to offset parent				this.offset.parent.left +												// The offsetParent''s offset without borders (offset + border)				( this.cssPosition === "fixed" ? -this.scrollParent.scrollLeft() : this.offset.scroll.left )			)		};	},	_clear: function() {		this.helper.removeClass("ui-draggable-dragging");		if(this.helper[0] !== this.element[0] &amp;&amp; !this.cancelHelperRemoval) {			this.helper.remove();		}		this.helper = null;		this.cancelHelperRemoval = false;	},	// From now on bulk stuff - mainly helpers	_trigger: function(type, event, ui) {		ui = ui || this._uiHash();		$.ui.plugin.call(this, type, [event, ui]);		//The absolute position has to be recalculated after plugins		if(type === "drag") {			this.positionAbs = this._convertPositionTo("absolute");		}		return $.Widget.prototype._trigger.call(this, type, event, ui);	},	plugins: {},	_uiHash: function() {		return {			helper: this.helper,			position: this.position,			originalPosition: this.originalPosition,			offset: this.positionAbs		};	}});$.ui.plugin.add("draggable", "connectToSortable", {	start: function(event, ui) {		var inst = $(this).data("ui-draggable"), o = inst.options,			uiSortable = $.extend({}, ui, { item: inst.element });		inst.sortables = [];		$(o.connectToSortable).each(function() {			var sortable = $.data(this, "ui-sortable");			if (sortable &amp;&amp; !sortable.options.disabled) {				inst.sortables.push({					instance: sortable,					shouldRevert: sortable.options.revert				});				sortable.refreshPositions();	// Call the sortable''s refreshPositions at drag start to refresh the containerCache since the sortable container cache is used in drag and needs to be up to date (this will ensure it''s initialised as well as being kept in step with any changes that might have happened on the page).				sortable._trigger("activate", event, uiSortable);			}		});	},	stop: function(event, ui) {		//If we are still over the sortable, we fake the stop event of the sortable, but also remove helper		var inst = $(this).data("ui-draggable"),			uiSortable = $.extend({}, ui, { item: inst.element });		$.each(inst.sortables, function() {			if(this.instance.isOver) {				this.instance.isOver = 0;				inst.cancelHelperRemoval = true; //Don''t remove the helper in the draggable instance				this.instance.cancelHelperRemoval = false; //Remove it in the sortable instance (so sortable plugins like revert still work)				//The sortable revert is supported, and we have to set a temporary dropped variable on the draggable to support revert: "valid/invalid"				if(this.shouldRevert) {					this.instance.options.revert = this.shouldRevert;				}				//Trigger the stop of the sortable				this.instance._mouseStop(event);				this.instance.options.helper = this.instance.options._helper;				//If the helper has been the original item, restore properties in the sortable				if(inst.options.helper === "original") {					this.instance.currentItem.css({ top: "auto", left: "auto" });				}			} else {				this.instance.cancelHelperRemoval = false; //Remove the helper in the sortable instance				this.instance._trigger("deactivate", event, uiSortable);			}		});	},	drag: function(event, ui) {		var inst = $(this).data("ui-draggable"), that = this;		$.each(inst.sortables, function() {			var innermostIntersecting = false,				thisSortable = this;			//Copy over some variables to allow calling the sortable''s native _intersectsWith			this.instance.positionAbs = inst.positionAbs;			this.instance.helperProportions = inst.helperProportions;			this.instance.offset.click = inst.offset.click;			if(this.instance._intersectsWith(this.instance.containerCache)) {				innermostIntersecting = true;				$.each(inst.sortables, function () {					this.instance.positionAbs = inst.positionAbs;					this.instance.helperProportions = inst.helperProportions;					this.instance.offset.click = inst.offset.click;					if (this !== thisSortable &amp;&amp;						this.instance._intersectsWith(this.instance.containerCache) &amp;&amp;						$.contains(thisSortable.instance.element[0], this.instance.element[0])					) {						innermostIntersecting = false;					}					return innermostIntersecting;				});			}			if(innermostIntersecting) {				//If it intersects, we use a little isOver variable and set it once, so our move-in stuff gets fired only once				if(!this.instance.isOver) {					this.instance.isOver = 1;					//Now we fake the start of dragging for the sortable instance,					//by cloning the list group item, appending it to the sortable and using it as inst.currentItem					//We can then fire the start event of the sortable with our passed browser event, and our own helper (so it doesn''t create a new one)					this.instance.currentItem = $(that).clone().removeAttr("id").appendTo(this.instance.element).data("ui-sortable-item", true);					this.instance.options._helper = this.instance.options.helper; //Store helper option to later restore it					this.instance.options.helper = function() { return ui.helper[0]; };					event.target = this.instance.currentItem[0];					this.instance._mouseCapture(event, true);					this.instance._mouseStart(event, true, true);					//Because the browser event is way off the new appended portlet, we modify a couple of variables to reflect the changes					this.instance.offset.click.top = inst.offset.click.top;					this.instance.offset.click.left = inst.offset.click.left;					this.instance.offset.parent.left -= inst.offset.parent.left - this.instance.offset.parent.left;					this.instance.offset.parent.top -= inst.offset.parent.top - this.instance.offset.parent.top;					inst._trigger("toSortable", event);					inst.dropped = this.instance.element; //draggable revert needs that					//hack so receive/update callbacks work (mostly)					inst.currentItem = inst.element;					this.instance.fromOutside = inst;				}				//Provided we did all the previous steps, we can fire the drag event of the sortable on every draggable drag, when it intersects with the sortable				if(this.instance.currentItem) {					this.instance._mouseDrag(event);				}			} else {				//If it doesn''t intersect with the sortable, and it intersected before,				//we fake the drag stop of the sortable, but make sure it doesn''t remove the helper by using cancelHelperRemoval				if(this.instance.isOver) {					this.instance.isOver = 0;					this.instance.cancelHelperRemoval = true;					//Prevent reverting on this forced stop					this.instance.options.revert = false;					// The out event needs to be triggered independently					this.instance._trigger("out", event, this.instance._uiHash(this.instance));					this.instance._mouseStop(event, true);					this.instance.options.helper = this.instance.options._helper;					//Now we remove our currentItem, the list group clone again, and the placeholder, and animate the helper back to it''s original size					this.instance.currentItem.remove();					if(this.instance.placeholder) {						this.instance.placeholder.remove();					}					inst._trigger("fromSortable", event);					inst.dropped = false; //draggable revert needs that				}			}		});	}});$.ui.plugin.add("draggable", "cursor", {	start: function() {		var t = $("body"), o = $(this).data("ui-draggable").options;		if (t.css("cursor")) {			o._cursor = t.css("cursor");		}		t.css("cursor", o.cursor);	},	stop: function() {		var o = $(this).data("ui-draggable").options;		if (o._cursor) {			$("body").css("cursor", o._cursor);		}	}});$.ui.plugin.add("draggable", "opacity", {	start: function(event, ui) {		var t = $(ui.helper), o = $(this).data("ui-draggable").options;		if(t.css("opacity")) {			o._opacity = t.css("opacity");		}		t.css("opacity", o.opacity);	},	stop: function(event, ui) {		var o = $(this).data("ui-draggable").options;		if(o._opacity) {			$(ui.helper).css("opacity", o._opacity);		}	}});$.ui.plugin.add("draggable", "scroll", {	start: function() {		var i = $(this).data("ui-draggable");		if(i.scrollParent[0] !== document &amp;&amp; i.scrollParent[0].tagName !== "HTML") {			i.overflowOffset = i.scrollParent.offset();		}	},	drag: function( event ) {		var i = $(this).data("ui-draggable"), o = i.options, scrolled = false;		if(i.scrollParent[0] !== document &amp;&amp; i.scrollParent[0].tagName !== "HTML") {			if(!o.axis || o.axis !== "x") {				if((i.overflowOffset.top + i.scrollParent[0].offsetHeight) - event.pageY &lt; o.scrollSensitivity) {					i.scrollParent[0].scrollTop = scrolled = i.scrollParent[0].scrollTop + o.scrollSpeed;				} else if(event.pageY - i.overflowOffset.top &lt; o.scrollSensitivity) {					i.scrollParent[0].scrollTop = scrolled = i.scrollParent[0].scrollTop - o.scrollSpeed;				}			}			if(!o.axis || o.axis !== "y") {				if((i.overflowOffset.left + i.scrollParent[0].offsetWidth) - event.pageX &lt; o.scrollSensitivity) {					i.scrollParent[0].scrollLeft = scrolled = i.scrollParent[0].scrollLeft + o.scrollSpeed;				} else if(event.pageX - i.overflowOffset.left &lt; o.scrollSensitivity) {					i.scrollParent[0].scrollLeft = scrolled = i.scrollParent[0].scrollLeft - o.scrollSpeed;				}			}		} else {			if(!o.axis || o.axis !== "x") {				if(event.pageY - $(document).scrollTop() &lt; o.scrollSensitivity) {					scrolled = $(document).scrollTop($(document).scrollTop() - o.scrollSpeed);				} else if($(window).height() - (event.pageY - $(document).scrollTop()) &lt; o.scrollSensitivity) {					scrolled = $(document).scrollTop($(document).scrollTop() + o.scrollSpeed);				}			}			if(!o.axis || o.axis !== "y") {				if(event.pageX - $(document).scrollLeft() &lt; o.scrollSensitivity) {					scrolled = $(document).scrollLeft($(document).scrollLeft() - o.scrollSpeed);				} else if($(window).width() - (event.pageX - $(document).scrollLeft()) &lt; o.scrollSensitivity) {					scrolled = $(document).scrollLeft($(document).scrollLeft() + o.scrollSpeed);				}			}		}		if(scrolled !== false &amp;&amp; $.ui.ddmanager &amp;&amp; !o.dropBehaviour) {			$.ui.ddmanager.prepareOffsets(i, event);		}	}});$.ui.plugin.add("draggable", "snap", {	start: function() {		var i = $(this).data("ui-draggable"),			o = i.options;		i.snapElements = [];		$(o.snap.constructor !== String ? ( o.snap.items || ":data(ui-draggable)" ) : o.snap).each(function() {			var $t = $(this),				$o = $t.offset();			if(this !== i.element[0]) {				i.snapElements.push({					item: this,					width: $t.outerWidth(), height: $t.outerHeight(),					top: $o.top, left: $o.left				});			}		});	},	drag: function(event, ui) {		var ts, bs, ls, rs, l, r, t, b, i, first,			inst = $(this).data("ui-draggable"),			o = inst.options,			d = o.snapTolerance,			x1 = ui.offset.left, x2 = x1 + inst.helperProportions.width,			y1 = ui.offset.top, y2 = y1 + inst.helperProportions.height;		for (i = inst.snapElements.length - 1; i &gt;= 0; i--){			l = inst.snapElements[i].left;			r = l + inst.snapElements[i].width;			t = inst.snapElements[i].top;			b = t + inst.snapElements[i].height;			if ( x2 &lt; l - d || x1 &gt; r + d || y2 &lt; t - d || y1 &gt; b + d || !$.contains( inst.snapElements[ i ].item.ownerDocument, inst.snapElements[ i ].item ) ) {				if(inst.snapElements[i].snapping) {					(inst.options.snap.release &amp;&amp; inst.options.snap.release.call(inst.element, event, $.extend(inst._uiHash(), { snapItem: inst.snapElements[i].item })));				}				inst.snapElements[i].snapping = false;				continue;			}			if(o.snapMode !== "inner") {				ts = Math.abs(t - y2) &lt;= d;				bs = Math.abs(b - y1) &lt;= d;				ls = Math.abs(l - x2) &lt;= d;				rs = Math.abs(r - x1) &lt;= d;				if(ts) {					ui.position.top = inst._convertPositionTo("relative", { top: t - inst.helperProportions.height, left: 0 }).top - inst.margins.top;				}				if(bs) {					ui.position.top = inst._convertPositionTo("relative", { top: b, left: 0 }).top - inst.margins.top;				}				if(ls) {					ui.position.left = inst._convertPositionTo("relative", { top: 0, left: l - inst.helperProportions.width }).left - inst.margins.left;				}				if(rs) {					ui.position.left = inst._convertPositionTo("relative", { top: 0, left: r }).left - inst.margins.left;				}			}			first = (ts || bs || ls || rs);			if(o.snapMode !== "outer") {				ts = Math.abs(t - y1) &lt;= d;				bs = Math.abs(b - y2) &lt;= d;				ls = Math.abs(l - x1) &lt;= d;				rs = Math.abs(r - x2) &lt;= d;				if(ts) {					ui.position.top = inst._convertPositionTo("relative", { top: t, left: 0 }).top - inst.margins.top;				}				if(bs) {					ui.position.top = inst._convertPositionTo("relative", { top: b - inst.helperProportions.height, left: 0 }).top - inst.margins.top;				}				if(ls) {					ui.position.left = inst._convertPositionTo("relative", { top: 0, left: l }).left - inst.margins.left;				}				if(rs) {					ui.position.left = inst._convertPositionTo("relative", { top: 0, left: r - inst.helperProportions.width }).left - inst.margins.left;				}			}			if(!inst.snapElements[i].snapping &amp;&amp; (ts || bs || ls || rs || first)) {				(inst.options.snap.snap &amp;&amp; inst.options.snap.snap.call(inst.element, event, $.extend(inst._uiHash(), { snapItem: inst.snapElements[i].item })));			}			inst.snapElements[i].snapping = (ts || bs || ls || rs || first);		}	}});$.ui.plugin.add("draggable", "stack", {	start: function() {		var min,			o = this.data("ui-draggable").options,			group = $.makeArray($(o.stack)).sort(function(a,b) {				return (parseInt($(a).css("zIndex"),10) || 0) - (parseInt($(b).css("zIndex"),10) || 0);			});		if (!group.length) { return; }		min = parseInt($(group[0]).css("zIndex"), 10) || 0;		$(group).each(function(i) {			$(this).css("zIndex", min + i);		});		this.css("zIndex", (min + group.length));	}});$.ui.plugin.add("draggable", "zIndex", {	start: function(event, ui) {		var t = $(ui.helper), o = $(this).data("ui-draggable").options;		if(t.css("zIndex")) {			o._zIndex = t.css("zIndex");		}		t.css("zIndex", o.zIndex);	},	stop: function(event, ui) {		var o = $(this).data("ui-draggable").options;		if(o._zIndex) {			$(ui.helper).css("zIndex", o._zIndex);		}	}});})(jQuery);(function( $, undefined ) {function isOverAxis( x, reference, size ) {	return ( x &gt; reference ) &amp;&amp; ( x &lt; ( reference + size ) );}$.widget("ui.droppable", {	version: "1.10.4",	widgetEventPrefix: "drop",	options: {		accept: "*",		activeClass: false,		addClasses: true,		greedy: false,		hoverClass: false,		scope: "default",		tolerance: "intersect",		// callbacks		activate: null,		deactivate: null,		drop: null,		out: null,		over: null	},	_create: function() {		var proportions,			o = this.options,			accept = o.accept;		this.isover = false;		this.isout = true;		this.accept = $.isFunction(accept) ? accept : function(d) {			return d.is(accept);		};		this.proportions = function( /* valueToWrite */ ) {			if ( arguments.length ) {				// Store the droppable''s proportions				proportions = arguments[ 0 ];			} else {				// Retrieve or derive the droppable''s proportions				return proportions ?					proportions :					proportions = {						width: this.element[ 0 ].offsetWidth,						height: this.element[ 0 ].offsetHeight					};			}		};		// Add the reference and positions to the manager		$.ui.ddmanager.droppables[o.scope] = $.ui.ddmanager.droppables[o.scope] || [];		$.ui.ddmanager.droppables[o.scope].push(this);		(o.addClasses &amp;&amp; this.element.addClass("ui-droppable"));	},	_destroy: function() {		var i = 0,			drop = $.ui.ddmanager.droppables[this.options.scope];		for ( ; i &lt; drop.length; i++ ) {			if ( drop[i] === this ) {				drop.splice(i, 1);			}		}		this.element.removeClass("ui-droppable ui-droppable-disabled");	},	_setOption: function(key, value) {		if(key === "accept") {			this.accept = $.isFunction(value) ? value : function(d) {				return d.is(value);			};		}		$.Widget.prototype._setOption.apply(this, arguments);	},	_activate: function(event) {		var draggable = $.ui.ddmanager.current;		if(this.options.activeClass) {			this.element.addClass(this.options.activeClass);		}		if(draggable){			this._trigger("activate", event, this.ui(draggable));		}	},	_deactivate: function(event) {		var draggable = $.ui.ddmanager.current;		if(this.options.activeClass) {			this.element.removeClass(this.options.activeClass);		}		if(draggable){			this._trigger("deactivate", event, this.ui(draggable));		}	},	_over: function(event) {		var draggable = $.ui.ddmanager.current;		// Bail if draggable and droppable are same element		if (!draggable || (draggable.currentItem || draggable.element)[0] === this.element[0]) {			return;		}		if (this.accept.call(this.element[0],(draggable.currentItem || draggable.element))) {			if(this.options.hoverClass) {				this.element.addClass(this.options.hoverClass);			}			this._trigger("over", event, this.ui(draggable));		}	},	_out: function(event) {		var draggable = $.ui.ddmanager.current;		// Bail if draggable and droppable are same element		if (!draggable || (draggable.currentItem || draggable.element)[0] === this.element[0]) {			return;		}		if (this.accept.call(this.element[0],(draggable.currentItem || draggable.element))) {			if(this.options.hoverClass) {				this.element.removeClass(this.options.hoverClass);			}			this._trigger("out", event, this.ui(draggable));		}	},	_drop: function(event,custom) {		var draggable = custom || $.ui.ddmanager.current,			childrenIntersection = false;		// Bail if draggable and droppable are same element		if (!draggable || (draggable.currentItem || draggable.element)[0] === this.element[0]) {			return false;		}		this.element.find(":data(ui-droppable)").not(".ui-draggable-dragging").each(function() {			var inst = $.data(this, "ui-droppable");			if(				inst.options.greedy &amp;&amp;				!inst.options.disabled &amp;&amp;				inst.options.scope === draggable.options.scope &amp;&amp;				inst.accept.call(inst.element[0], (draggable.currentItem || draggable.element)) &amp;&amp;				$.ui.intersect(draggable, $.extend(inst, { offset: inst.element.offset() }), inst.options.tolerance)			) { childrenIntersection = true; return false; }		});		if(childrenIntersection) {			return false;		}		if(this.accept.call(this.element[0],(draggable.currentItem || draggable.element))) {			if(this.options.activeClass) {				this.element.removeClass(this.options.activeClass);			}			if(this.options.hoverClass) {				this.element.removeClass(this.options.hoverClass);			}			this._trigger("drop", event, this.ui(draggable));			return this.element;		}		return false;	},	ui: function(c) {		return {			draggable: (c.currentItem || c.element),			helper: c.helper,			position: c.position,			offset: c.positionAbs		};	}});$.ui.intersect = function(draggable, droppable, toleranceMode) {	if (!droppable.offset) {		return false;	}	var draggableLeft, draggableTop,		x1 = (draggable.positionAbs || draggable.position.absolute).left,		y1 = (draggable.positionAbs || draggable.position.absolute).top,		x2 = x1 + draggable.helperProportions.width,		y2 = y1 + draggable.helperProportions.height,		l = droppable.offset.left,		t = droppable.offset.top,		r = l + droppable.proportions().width,		b = t + droppable.proportions().height;	switch (toleranceMode) {		case "fit":			return (l &lt;= x1 &amp;&amp; x2 &lt;= r &amp;&amp; t &lt;= y1 &amp;&amp; y2 &lt;= b);		case "intersect":			return (l &lt; x1 + (draggable.helperProportions.width / 2) &amp;&amp; // Right Half				x2 - (draggable.helperProportions.width / 2) &lt; r &amp;&amp; // Left Half				t &lt; y1 + (draggable.helperProportions.height / 2) &amp;&amp; // Bottom Half				y2 - (draggable.helperProportions.height / 2) &lt; b ); // Top Half		case "pointer":			draggableLeft = ((draggable.positionAbs || draggable.position.absolute).left + (draggable.clickOffset || draggable.offset.click).left);			draggableTop = ((draggable.positionAbs || draggable.position.absolute).top + (draggable.clickOffset || draggable.offset.click).top);			return isOverAxis( draggableTop, t, droppable.proportions().height ) &amp;&amp; isOverAxis( draggableLeft, l, droppable.proportions().width );		case "touch":			return (				(y1 &gt;= t &amp;&amp; y1 &lt;= b) ||	// Top edge touching				(y2 &gt;= t &amp;&amp; y2 &lt;= b) ||	// Bottom edge touching				(y1 &lt; t &amp;&amp; y2 &gt; b)		// Surrounded vertically			) &amp;&amp; (				(x1 &gt;= l &amp;&amp; x1 &lt;= r) ||	// Left edge touching				(x2 &gt;= l &amp;&amp; x2 &lt;= r) ||	// Right edge touching				(x1 &lt; l &amp;&amp; x2 &gt; r)		// Surrounded horizontally			);		default:			return false;		}};/*	This manager tracks offsets of draggables and droppables*/$.ui.ddmanager = {	current: null,	droppables: { "default": [] },	prepareOffsets: function(t, event) {		var i, j,			m = $.ui.ddmanager.droppables[t.options.scope] || [],			type = event ? event.type : null, // workaround for #2317			list = (t.currentItem || t.element).find(":data(ui-droppable)").addBack();		droppablesLoop: for (i = 0; i &lt; m.length; i++) {			//No disabled and non-accepted			if(m[i].options.disabled || (t &amp;&amp; !m[i].accept.call(m[i].element[0],(t.currentItem || t.element)))) {				continue;			}			// Filter out elements in the current dragged item			for (j=0; j &lt; list.length; j++) {				if(list[j] === m[i].element[0]) {					m[i].proportions().height = 0;					continue droppablesLoop;				}			}			m[i].visible = m[i].element.css("display") !== "none";			if(!m[i].visible) {				continue;			}			//Activate the droppable if used directly from draggables			if(type === "mousedown") {				m[i]._activate.call(m[i], event);			}			m[ i ].offset = m[ i ].element.offset();			m[ i ].proportions({ width: m[ i ].element[ 0 ].offsetWidth, height: m[ i ].element[ 0 ].offsetHeight });		}	},	drop: function(draggable, event) {		var dropped = false;		// Create a copy of the droppables in case the list changes during the drop (#9116)		$.each(($.ui.ddmanager.droppables[draggable.options.scope] || []).slice(), function() {			if(!this.options) {				return;			}			if (!this.options.disabled &amp;&amp; this.visible &amp;&amp; $.ui.intersect(draggable, this, this.options.tolerance)) {				dropped = this._drop.call(this, event) || dropped;			}			if (!this.options.disabled &amp;&amp; this.visible &amp;&amp; this.accept.call(this.element[0],(draggable.currentItem || draggable.element))) {				this.isout = true;				this.isover = false;				this._deactivate.call(this, event);			}		});		return dropped;	},	dragStart: function( draggable, event ) {		//Listen for scrolling so that if the dragging causes scrolling the position of the droppables can be recalculated (see #5003)		draggable.element.parentsUntil( "body" ).bind( "scroll.droppable", function() {			if( !draggable.options.refreshPositions ) {				$.ui.ddmanager.prepareOffsets( draggable, event );			}		});	},	drag: function(draggable, event) {		//If you have a highly dynamic page, you might try this option. It renders positions every time you move the mouse.		if(draggable.options.refreshPositions) {			$.ui.ddmanager.prepareOffsets(draggable, event);		}		//Run through all droppables and check their positions based on specific tolerance options		$.each($.ui.ddmanager.droppables[draggable.options.scope] || [], function() {			if(this.options.disabled || this.greedyChild || !this.visible) {				return;			}			var parentInstance, scope, parent,				intersects = $.ui.intersect(draggable, this, this.options.tolerance),				c = !intersects &amp;&amp; this.isover ? "isout" : (intersects &amp;&amp; !this.isover ? "isover" : null);			if(!c) {				return;			}			if (this.options.greedy) {				// find droppable parents with same scope				scope = this.options.scope;				parent = this.element.parents(":data(ui-droppable)").filter(function () {					return $.data(this, "ui-droppable").options.scope === scope;				});				if (parent.length) {					parentInstance = $.data(parent[0], "ui-droppable");					parentInstance.greedyChild = (c === "isover");				}			}			// we just moved into a greedy child			if (parentInstance &amp;&amp; c === "isover") {				parentInstance.isover = false;				parentInstance.isout = true;				parentInstance._out.call(parentInstance, event);			}			this[c] = true;			this[c === "isout" ? "isover" : "isout"] = false;			this[c === "isover" ? "_over" : "_out"].call(this, event);			// we just moved out of a greedy child			if (parentInstance &amp;&amp; c === "isout") {				parentInstance.isout = false;				parentInstance.isover = true;				parentInstance._over.call(parentInstance, event);			}		});	},	dragStop: function( draggable, event ) {		draggable.element.parentsUntil( "body" ).unbind( "scroll.droppable" );		//Call prepareOffsets one final time since IE does not fire return scroll events when overflow was caused by drag (see #5003)		if( !draggable.options.refreshPositions ) {			$.ui.ddmanager.prepareOffsets( draggable, event );		}	}};})(jQuery);(function( $, undefined ) {function num(v) {	return parseInt(v, 10) || 0;}function isNumber(value) {	return !isNaN(parseInt(value, 10));}$.widget("ui.resizable", $.ui.mouse, {	version: "1.10.4",	widgetEventPrefix: "resize",	options: {		alsoResize: false,		animate: false,		animateDuration: "slow",		animateEasing: "swing",		aspectRatio: false,		autoHide: false,		containment: false,		ghost: false,		grid: false,		handles: "e,s,se",		helper: false,		maxHeight: null,		maxWidth: null,		minHeight: 10,		minWidth: 10,		// See #7960		zIndex: 90,		// callbacks		resize: null,		start: null,		stop: null	},	_create: function() {		var n, i, handle, axis, hname,			that = this,			o = this.options;		this.element.addClass("ui-resizable");		$.extend(this, {			_aspectRatio: !!(o.aspectRatio),			aspectRatio: o.aspectRatio,			originalElement: this.element,			_proportionallyResizeElements: [],			_helper: o.helper || o.ghost || o.animate ? o.helper || "ui-resizable-helper" : null		});		//Wrap the element if it cannot hold child nodes		if(this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)) {			//Create a wrapper element and set the wrapper to the new current internal element			this.element.wrap(				$("&lt;div class=''ui-wrapper'' style=''overflow: hidden;''&gt;&lt;/div&gt;").css({					position: this.element.css("position"),					width: this.element.outerWidth(),					height: this.element.outerHeight(),					top: this.element.css("top"),					left: this.element.css("left")				})			);			//Overwrite the original this.element			this.element = this.element.parent().data(				"ui-resizable", this.element.data("ui-resizable")			);			this.elementIsWrapper = true;			//Move margins to the wrapper			this.element.css({ marginLeft: this.originalElement.css("marginLeft"), marginTop: this.originalElement.css("marginTop"), marginRight: this.originalElement.css("marginRight"), marginBottom: this.originalElement.css("marginBottom") });			this.originalElement.css({ marginLeft: 0, marginTop: 0, marginRight: 0, marginBottom: 0});			//Prevent Safari textarea resize			this.originalResizeStyle = this.originalElement.css("resize");			this.originalElement.css("resize", "none");			//Push the actual element to our proportionallyResize internal array			this._proportionallyResizeElements.push(this.originalElement.css({ position: "static", zoom: 1, display: "block" }));			// avoid IE jump (hard set the margin)			this.originalElement.css({ margin: this.originalElement.css("margin") });			// fix handlers offset			this._proportionallyResize();		}		this.handles = o.handles || (!$(".ui-resizable-handle", this.element).length ? "e,s,se" : { n: ".ui-resizable-n", e: ".ui-resizable-e", s: ".ui-resizable-s", w: ".ui-resizable-w", se: ".ui-resizable-se", sw: ".ui-resizable-sw", ne: ".ui-resizable-ne", nw: ".ui-resizable-nw" });		if(this.handles.constructor === String) {			if ( this.handles === "all") {				this.handles = "n,e,s,w,se,sw,ne,nw";			}			n = this.handles.split(",");			this.handles = {};			for(i = 0; i &lt; n.length; i++) {				handle = $.trim(n[i]);				hname = "ui-resizable-"+handle;				axis = $("&lt;div class=''ui-resizable-handle " + hname + "''&gt;&lt;/div&gt;");				// Apply zIndex to all handles - see #7960				axis.css({ zIndex: o.zIndex });				//TODO : What''s going on here?				if ("se" === handle) {					axis.addClass("ui-icon ui-icon-gripsmall-diagonal-se");				}				//Insert into internal handles object and append to element				this.handles[handle] = ".ui-resizable-"+handle;				this.element.append(axis);			}		}		this._renderAxis = function(target) {			var i, axis, padPos, padWrapper;			target = target || this.element;			for(i in this.handles) {				if(this.handles[i].constructor === String) {					this.handles[i] = $(this.handles[i], this.element).show();				}				//Apply pad to wrapper element, needed to fix axis position (textarea, inputs, scrolls)				if (this.elementIsWrapper &amp;&amp; this.originalElement[0].nodeName.match(/textarea|input|select|button/i)) {					axis = $(this.handles[i], this.element);					//Checking the correct pad and border					padWrapper = /sw|ne|nw|se|n|s/.test(i) ? axis.outerHeight() : axis.outerWidth();					//The padding type i have to apply...					padPos = [ "padding",						/ne|nw|n/.test(i) ? "Top" :						/se|sw|s/.test(i) ? "Bottom" :						/^e$/.test(i) ? "Right" : "Left" ].join("");					target.css(padPos, padWrapper);					this._proportionallyResize();				}				//TODO: What''s that good for? There''s not anything to be executed left				if(!$(this.handles[i]).length) {					continue;				}			}		};		//TODO: make renderAxis a prototype function		this._renderAxis(this.element);		this._handles = $(".ui-resizable-handle", this.element)			.disableSelection();		//Matching axis name		this._handles.mouseover(function() {			if (!that.resizing) {				if (this.className) {					axis = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i);				}				//Axis, default = se				that.axis = axis &amp;&amp; axis[1] ? axis[1] : "se";			}		});		//If we want to auto hide the elements		if (o.autoHide) {			this._handles.hide();			$(this.element)				.addClass("ui-resizable-autohide")				.mouseenter(function() {					if (o.disabled) {						return;					}					$(this).removeClass("ui-resizable-autohide");					that._handles.show();				})				.mouseleave(function(){					if (o.disabled) {						return;					}					if (!that.resizing) {						$(this).addClass("ui-resizable-autohide");						that._handles.hide();					}				});		}		//Initialize the mouse interaction		this._mouseInit();	},	_destroy: function() {		this._mouseDestroy();		var wrapper,			_destroy = function(exp) {				$(exp).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing")					.removeData("resizable").removeData("ui-resizable").unbind(".resizable").find(".ui-resizable-handle").remove();			};		//TODO: Unwrap at same DOM position		if (this.elementIsWrapper) {			_destroy(this.element);			wrapper = this.element;			this.originalElement.css({				position: wrapper.css("position"),				width: wrapper.outerWidth(),				height: wrapper.outerHeight(),				top: wrapper.css("top"),				left: wrapper.css("left")			}).insertAfter( wrapper );			wrapper.remove();		}		this.originalElement.css("resize", this.originalResizeStyle);		_destroy(this.originalElement);		return this;	},	_mouseCapture: function(event) {		var i, handle,			capture = false;		for (i in this.handles) {			handle = $(this.handles[i])[0];			if (handle === event.target || $.contains(handle, event.target)) {				capture = true;			}		}		return !this.options.disabled &amp;&amp; capture;	},	_mouseStart: function(event) {		var curleft, curtop, cursor,			o = this.options,			iniPos = this.element.position(),			el = this.element;		this.resizing = true;		// bugfix for http://dev.jquery.com/ticket/1749		if ( (/absolute/).test( el.css("position") ) ) {			el.css({ position: "absolute", top: el.css("top"), left: el.css("left") });		} else if (el.is(".ui-draggable")) {			el.css({ position: "absolute", top: iniPos.top, left: iniPos.left });		}		this._renderProxy();		curleft = num(this.helper.css("left"));		curtop = num(this.helper.css("top"));		if (o.containment) {			curleft += $(o.containment).scrollLeft() || 0;			curtop += $(o.containment).scrollTop() || 0;		}		//Store needed variables		this.offset = this.helper.offset();		this.position = { left: curleft, top: curtop };		this.size = this._helper ? { width: this.helper.width(), height: this.helper.height() } : { width: el.width(), height: el.height() };		this.originalSize = this._helper ? { width: el.outerWidth(), height: el.outerHeight() } : { width: el.width(), height: el.height() };		this.originalPosition = { left: curleft, top: curtop };		this.sizeDiff = { width: el.outerWidth() - el.width(), height: el.outerHeight() - el.height() };		this.originalMousePosition = { left: event.pageX, top: event.pageY };		//Aspect Ratio		this.aspectRatio = (typeof o.aspectRatio === "number") ? o.aspectRatio : ((this.originalSize.width / this.originalSize.height) || 1);		cursor = $(".ui-resizable-" + this.axis).css("cursor");		$("body").css("cursor", cursor === "auto" ? this.axis + "-resize" : cursor);		el.addClass("ui-resizable-resizing");		this._propagate("start", event);		return true;	},	_mouseDrag: function(event) {		//Increase performance, avoid regex		var data,			el = this.helper, props = {},			smp = this.originalMousePosition,			a = this.axis,			prevTop = this.position.top,			prevLeft = this.position.left,			prevWidth = this.size.width,			prevHeight = this.size.height,			dx = (event.pageX-smp.left)||0,			dy = (event.pageY-smp.top)||0,			trigger = this._change[a];		if (!trigger) {			return false;		}		// Calculate the attrs that will be change		data = trigger.apply(this, [event, dx, dy]);		// Put this in the mouseDrag handler since the user can start pressing shift while resizing		this._updateVirtualBoundaries(event.shiftKey);		if (this._aspectRatio || event.shiftKey) {			data = this._updateRatio(data, event);		}		data = this._respectSize(data, event);		this._updateCache(data);		// plugins callbacks need to be called first		this._propagate("resize", event);		if (this.position.top !== prevTop) {			props.top = this.position.top + "px";		}		if (this.position.left !== prevLeft) {			props.left = this.position.left + "px";		}		if (this.size.width !== prevWidth) {			props.width = this.size.width + "px";		}		if (this.size.height !== prevHeight) {			props.height = this.size.height + "px";		}		el.css(props);		if (!this._helper &amp;&amp; this._proportionallyResizeElements.length) {			this._proportionallyResize();		}		// Call the user callback if the element was resized		if ( ! $.isEmptyObject(props) ) {			this._trigger("resize", event, this.ui());		}		return false;	},	_mouseStop: function(event) {		this.resizing = false;		var pr, ista, soffseth, soffsetw, s, left, top,			o = this.options, that = this;		if(this._helper) {			pr = this._proportionallyResizeElements;			ista = pr.length &amp;&amp; (/textarea/i).test(pr[0].nodeName);			soffseth = ista &amp;&amp; $.ui.hasScroll(pr[0], "left") /* TODO - jump height */ ? 0 : that.sizeDiff.height;			soffsetw = ista ? 0 : that.sizeDiff.width;			s = { width: (that.helper.width()  - soffsetw), height: (that.helper.height() - soffseth) };			left = (parseInt(that.element.css("left"), 10) + (that.position.left - that.originalPosition.left)) || null;			top = (parseInt(that.element.css("top"), 10) + (that.position.top - that.originalPosition.top)) || null;			if (!o.animate) {				this.element.css($.extend(s, { top: top, left: left }));			}			that.helper.height(that.size.height);			that.helper.width(that.size.width);			if (this._helper &amp;&amp; !o.animate) {				this._proportionallyResize();			}		}		$("body").css("cursor", "auto");		this.element.removeClass("ui-resizable-resizing");		this._propagate("stop", event);		if (this._helper) {			this.helper.remove();		}		return false;	},	_updateVirtualBoundaries: function(forceAspectRatio) {		var pMinWidth, pMaxWidth, pMinHeight, pMaxHeight, b,			o = this.options;		b = {			minWidth: isNumber(o.minWidth) ? o.minWidth : 0,			maxWidth: isNumber(o.maxWidth) ? o.maxWidth : Infinity,			minHeight: isNumber(o.minHeight) ? o.minHeight : 0,			maxHeight: isNumber(o.maxHeight) ? o.maxHeight : Infinity		};		if(this._aspectRatio || forceAspectRatio) {			// We want to create an enclosing box whose aspect ration is the requested one			// First, compute the "projected" size for each dimension based on the aspect ratio and other dimension			pMinWidth = b.minHeight * this.aspectRatio;			pMinHeight = b.minWidth / this.aspectRatio;			pMaxWidth = b.maxHeight * this.aspectRatio;			pMaxHeight = b.maxWidth / this.aspectRatio;			if(pMinWidth &gt; b.minWidth) {				b.minWidth = pMinWidth;			}			if(pMinHeight &gt; b.minHeight) {				b.minHeight = pMinHeight;			}			if(pMaxWidth &lt; b.maxWidth) {				b.maxWidth = pMaxWidth;			}			if(pMaxHeight &lt; b.maxHeight) {				b.maxHeight = pMaxHeight;			}		}		this._vBoundaries = b;	},	_updateCache: function(data) {		this.offset = this.helper.offset();		if (isNumber(data.left)) {			this.position.left = data.left;		}		if (isNumber(data.top)) {			this.position.top = data.top;		}		if (isNumber(data.height)) {			this.size.height = data.height;		}		if (isNumber(data.width)) {			this.size.width = data.width;		}	},	_updateRatio: function( data ) {		var cpos = this.position,			csize = this.size,			a = this.axis;		if (isNumber(data.height)) {			data.width = (data.height * this.aspectRatio);		} else if (isNumber(data.width)) {			data.height = (data.width / this.aspectRatio);		}		if (a === "sw") {			data.left = cpos.left + (csize.width - data.width);			data.top = null;		}		if (a === "nw") {			data.top = cpos.top + (csize.height - data.height);			data.left = cpos.left + (csize.width - data.width);		}		return data;	},	_respectSize: function( data ) {		var o = this._vBoundaries,			a = this.axis,			ismaxw = isNumber(data.width) &amp;&amp; o.maxWidth &amp;&amp; (o.maxWidth &lt; data.width), ismaxh = isNumber(data.height) &amp;&amp; o.maxHeight &amp;&amp; (o.maxHeight &lt; data.height),			isminw = isNumber(data.width) &amp;&amp; o.minWidth &amp;&amp; (o.minWidth &gt; data.width), isminh = isNumber(data.height) &amp;&amp; o.minHeight &amp;&amp; (o.minHeight &gt; data.height),			dw = this.originalPosition.left + this.originalSize.width,			dh = this.position.top + this.size.height,			cw = /sw|nw|w/.test(a), ch = /nw|ne|n/.test(a);		if (isminw) {			data.width = o.minWidth;		}		if (isminh) {			data.height = o.minHeight;		}		if (ismaxw) {			data.width = o.maxWidth;		}		if (ismaxh) {			data.height = o.maxHeight;		}		if (isminw &amp;&amp; cw) {			data.left = dw - o.minWidth;		}		if (ismaxw &amp;&amp; cw) {			data.left = dw - o.maxWidth;		}		if (isminh &amp;&amp; ch) {			data.top = dh - o.minHeight;		}		if (ismaxh &amp;&amp; ch) {			data.top = dh - o.maxHeight;		}		// fixing jump error on top/left - bug #2330		if (!data.width &amp;&amp; !data.height &amp;&amp; !data.left &amp;&amp; data.top) {			data.top = null;		} else if (!data.width &amp;&amp; !data.height &amp;&amp; !data.top &amp;&amp; data.left) {			data.left = null;		}		return data;	},	_proportionallyResize: function() {		if (!this._proportionallyResizeElements.length) {			return;		}		var i, j, borders, paddings, prel,			element = this.helper || this.element;		for ( i=0; i &lt; this._proportionallyResizeElements.length; i++) {			prel = this._proportionallyResizeElements[i];			if (!this.borderDif) {				this.borderDif = [];				borders = [prel.css("borderTopWidth"), prel.css("borderRightWidth"), prel.css("borderBottomWidth"), prel.css("borderLeftWidth")];				paddings = [prel.css("paddingTop"), prel.css("paddingRight"), prel.css("paddingBottom"), prel.css("paddingLeft")];				for ( j = 0; j &lt; borders.length; j++ ) {					this.borderDif[ j ] = ( parseInt( borders[ j ], 10 ) || 0 ) + ( parseInt( paddings[ j ], 10 ) || 0 );				}			}			prel.css({				height: (element.height() - this.borderDif[0] - this.borderDif[2]) || 0,				width: (element.width() - this.borderDif[1] - this.borderDif[3]) || 0			});		}	},	_renderProxy: function() {		var el = this.element, o = this.options;		this.elementOffset = el.offset();		if(this._helper) {			this.helper = this.helper || $("&lt;div style=''overflow:hidden;''&gt;&lt;/div&gt;");			this.helper.addClass(this._helper).css({				width: this.element.outerWidth() - 1,				height: this.element.outerHeight() - 1,				position: "absolute",				left: this.elementOffset.left +"px",				top: this.elementOffset.top +"px",				zIndex: ++o.zIndex //TODO: Don''t modify option			});			this.helper				.appendTo("body")				.disableSelection();		} else {			this.helper = this.element;		}	},	_change: {		e: function(event, dx) {			return { width: this.originalSize.width + dx };		},		w: function(event, dx) {			var cs = this.originalSize, sp = this.originalPosition;			return { left: sp.left + dx, width: cs.width - dx };		},		n: function(event, dx, dy) {			var cs = this.originalSize, sp = this.originalPosition;			return { top: sp.top + dy, height: cs.height - dy };		},		s: function(event, dx, dy) {			return { height: this.originalSize.height + dy };		},		se: function(event, dx, dy) {			return $.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [event, dx, dy]));		},		sw: function(event, dx, dy) {			return $.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [event, dx, dy]));		},		ne: function(event, dx, dy) {			return $.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [event, dx, dy]));		},		nw: function(event, dx, dy) {			return $.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [event, dx, dy]));		}	},	_propagate: function(n, event) {		$.ui.plugin.call(this, n, [event, this.ui()]);		(n !== "resize" &amp;&amp; this._trigger(n, event, this.ui()));	},	plugins: {},	ui: function() {		return {			originalElement: this.originalElement,			element: this.element,			helper: this.helper,			position: this.position,			size: this.size,			originalSize: this.originalSize,			originalPosition: this.originalPosition		};	}});/* * Resizable Extensions */$.ui.plugin.add("resizable", "animate", {	stop: function( event ) {		var that = $(this).data("ui-resizable"),			o = that.options,			pr = that._proportionallyResizeElements,			ista = pr.length &amp;&amp; (/textarea/i).test(pr[0].nodeName),			soffseth = ista &amp;&amp; $.ui.hasScroll(pr[0], "left") /* TODO - jump height */ ? 0 : that.sizeDiff.height,			soffsetw = ista ? 0 : that.sizeDiff.width,			style = { width: (that.size.width - soffsetw), height: (that.size.height - soffseth) },			left = (parseInt(that.element.css("left"), 10) + (that.position.left - that.originalPosition.left)) || null,			top = (parseInt(that.element.css("top"), 10) + (that.position.top - that.originalPosition.top)) || null;		that.element.animate(			$.extend(style, top &amp;&amp; left ? { top: top, left: left } : {}), {				duration: o.animateDuration,				easing: o.animateEasing,				step: function() {					var data = {						width: parseInt(that.element.css("width"), 10),						height: parseInt(that.element.css("height"), 10),						top: parseInt(that.element.css("top"), 10),						left: parseInt(that.element.css("left"), 10)					};					if (pr &amp;&amp; pr.length) {						$(pr[0]).css({ width: data.width, height: data.height });					}					// propagating resize, and updating values for each animation step					that._updateCache(data);					that._propagate("resize", event);				}			}		);	}});$.ui.plugin.add("resizable", "containment", {	start: function() {		var element, p, co, ch, cw, width, height,			that = $(this).data("ui-resizable"),			o = that.options,			el = that.element,			oc = o.containment,			ce = (oc instanceof $) ? oc.get(0) : (/parent/.test(oc)) ? el.parent().get(0) : oc;		if (!ce) {			return;		}		that.containerElement = $(ce);		if (/document/.test(oc) || oc === document) {			that.containerOffset = { left: 0, top: 0 };			that.containerPosition = { left: 0, top: 0 };			that.parentData = {				element: $(document), left: 0, top: 0,				width: $(document).width(), height: $(document).height() || document.body.parentNode.scrollHeight			};		}		// i''m a node, so compute top, left, right, bottom		else {			element = $(ce);			p = [];			$([ "Top", "Right", "Left", "Bottom" ]).each(function(i, name) { p[i] = num(element.css("padding" + name)); });			that.containerOffset = element.offset();			that.containerPosition = element.position();			that.containerSize = { height: (element.innerHeight() - p[3]), width: (element.innerWidth() - p[1]) };			co = that.containerOffset;			ch = that.containerSize.height;			cw = that.containerSize.width;			width = ($.ui.hasScroll(ce, "left") ? ce.scrollWidth : cw );			height = ($.ui.hasScroll(ce) ? ce.scrollHeight : ch);			that.parentData = {				element: ce, left: co.left, top: co.top, width: width, height: height			};		}	},	resize: function( event ) {		var woset, hoset, isParent, isOffsetRelative,			that = $(this).data("ui-resizable"),			o = that.options,			co = that.containerOffset, cp = that.position,			pRatio = that._aspectRatio || event.shiftKey,			cop = { top:0, left:0 }, ce = that.containerElement;		if (ce[0] !== document &amp;&amp; (/static/).test(ce.css("position"))) {			cop = co;		}		if (cp.left &lt; (that._helper ? co.left : 0)) {			that.size.width = that.size.width + (that._helper ? (that.position.left - co.left) : (that.position.left - cop.left));			if (pRatio) {				that.size.height = that.size.width / that.aspectRatio;			}			that.position.left = o.helper ? co.left : 0;		}		if (cp.top &lt; (that._helper ? co.top : 0)) {			that.size.height = that.size.height + (that._helper ? (that.position.top - co.top) : that.position.top);			if (pRatio) {				that.size.width = that.size.height * that.aspectRatio;			}			that.position.top = that._helper ? co.top : 0;		}		that.offset.left = that.parentData.left+that.position.left;		that.offset.top = that.parentData.top+that.position.top;		woset = Math.abs( (that._helper ? that.offset.left - cop.left : (that.offset.left - cop.left)) + that.sizeDiff.width );		hoset = Math.abs( (that._helper ? that.offset.top - cop.top : (that.offset.top - co.top)) + that.sizeDiff.height );		isParent = that.containerElement.get(0) === that.element.parent().get(0);		isOffsetRelative = /relative|absolute/.test(that.containerElement.css("position"));		if ( isParent &amp;&amp; isOffsetRelative ) {			woset -= Math.abs( that.parentData.left );		}		if (woset + that.size.width &gt;= that.parentData.width) {			that.size.width = that.parentData.width - woset;			if (pRatio) {				that.size.height = that.size.width / that.aspectRatio;			}		}		if (hoset + that.size.height &gt;= that.parentData.height) {			that.size.height = that.parentData.height - hoset;			if (pRatio) {				that.size.width = that.size.height * that.aspectRatio;			}		}	},	stop: function(){		var that = $(this).data("ui-resizable"),			o = that.options,			co = that.containerOffset,			cop = that.containerPosition,			ce = that.containerElement,			helper = $(that.helper),			ho = helper.offset(),			w = helper.outerWidth() - that.sizeDiff.width,			h = helper.outerHeight() - that.sizeDiff.height;		if (that._helper &amp;&amp; !o.animate &amp;&amp; (/relative/).test(ce.css("position"))) {			$(this).css({ left: ho.left - cop.left - co.left, width: w, height: h });		}		if (that._helper &amp;&amp; !o.animate &amp;&amp; (/static/).test(ce.css("position"))) {			$(this).css({ left: ho.left - cop.left - co.left, width: w, height: h });		}	}});$.ui.plugin.add("resizable", "alsoResize", {	start: function () {		var that = $(this).data("ui-resizable"),			o = that.options,			_store = function (exp) {				$(exp).each(function() {					var el = $(this);					el.data("ui-resizable-alsoresize", {						width: parseInt(el.width(), 10), height: parseInt(el.height(), 10),						left: parseInt(el.css("left"), 10), top: parseInt(el.css("top"), 10)					});				});			};		if (typeof(o.alsoResize) === "object" &amp;&amp; !o.alsoResize.parentNode) {			if (o.alsoResize.length) { o.alsoResize = o.alsoResize[0]; _store(o.alsoResize); }			else { $.each(o.alsoResize, function (exp) { _store(exp); }); }		}else{			_store(o.alsoResize);		}	},	resize: function (event, ui) {		var that = $(this).data("ui-resizable"),			o = that.options,			os = that.originalSize,			op = that.originalPosition,			delta = {				height: (that.size.height - os.height) || 0, width: (that.size.width - os.width) || 0,				top: (that.position.top - op.top) || 0, left: (that.position.left - op.left) || 0			},			_alsoResize = function (exp, c) {				$(exp).each(function() {					var el = $(this), start = $(this).data("ui-resizable-alsoresize"), style = {},						css = c &amp;&amp; c.length ? c : el.parents(ui.originalElement[0]).length ? ["width", "height"] : ["width", "height", "top", "left"];					$.each(css, function (i, prop) {						var sum = (start[prop]||0) + (delta[prop]||0);						if (sum &amp;&amp; sum &gt;= 0) {							style[prop] = sum || null;						}					});					el.css(style);				});			};		if (typeof(o.alsoResize) === "object" &amp;&amp; !o.alsoResize.nodeType) {			$.each(o.alsoResize, function (exp, c) { _alsoResize(exp, c); });		}else{			_alsoResize(o.alsoResize);		}	},	stop: function () {		$(this).removeData("resizable-alsoresize");	}});$.ui.plugin.add("resizable", "ghost", {	start: function() {		var that = $(this).data("ui-resizable"), o = that.options, cs = that.size;		that.ghost = that.originalElement.clone();		that.ghost			.css({ opacity: 0.25, display: "block", position: "relative", height: cs.height, width: cs.width, margin: 0, left: 0, top: 0 })			.addClass("ui-resizable-ghost")			.addClass(typeof o.ghost === "string" ? o.ghost : "");		that.ghost.appendTo(that.helper);	},	resize: function(){		var that = $(this).data("ui-resizable");		if (that.ghost) {			that.ghost.css({ position: "relative", height: that.size.height, width: that.size.width });		}	},	stop: function() {		var that = $(this).data("ui-resizable");		if (that.ghost &amp;&amp; that.helper) {			that.helper.get(0).removeChild(that.ghost.get(0));		}	}});$.ui.plugin.add("resizable", "grid", {	resize: function() {		var that = $(this).data("ui-resizable"),			o = that.options,			cs = that.size,			os = that.originalSize,			op = that.originalPosition,			a = that.axis,			grid = typeof o.grid === "number" ? [o.grid, o.grid] : o.grid,			gridX = (grid[0]||1),			gridY = (grid[1]||1),			ox = Math.round((cs.width - os.width) / gridX) * gridX,			oy = Math.round((cs.height - os.height) / gridY) * gridY,			newWidth = os.width + ox,			newHeight = os.height + oy,			isMaxWidth = o.maxWidth &amp;&amp; (o.maxWidth &lt; newWidth),			isMaxHeight = o.maxHeight &amp;&amp; (o.maxHeight &lt; newHeight),			isMinWidth = o.minWidth &amp;&amp; (o.minWidth &gt; newWidth),			isMinHeight = o.minHeight &amp;&amp; (o.minHeight &gt; newHeight);		o.grid = grid;		if (isMinWidth) {			newWidth = newWidth + gridX;		}		if (isMinHeight) {			newHeight = newHeight + gridY;		}		if (isMaxWidth) {			newWidth = newWidth - gridX;		}		if (isMaxHeight) {			newHeight = newHeight - gridY;		}		if (/^(se|s|e)$/.test(a)) {			that.size.width = newWidth;			that.size.height = newHeight;		} else if (/^(ne)$/.test(a)) {			that.size.width = newWidth;			that.size.height = newHeight;			that.position.top = op.top - oy;		} else if (/^(sw)$/.test(a)) {			that.size.width = newWidth;			that.size.height = newHeight;			that.position.left = op.left - ox;		} else {			if ( newHeight - gridY &gt; 0 ) {				that.size.height = newHeight;				that.position.top = op.top - oy;			} else {				that.size.height = gridY;				that.position.top = op.top + os.height - gridY;			}			if ( newWidth - gridX &gt; 0 ) {				that.size.width = newWidth;				that.position.left = op.left - ox;			} else {				that.size.width = gridX;				that.position.left = op.left + os.width - gridX;			}		}	}});})(jQuery);(function( $, undefined ) {$.widget("ui.selectable", $.ui.mouse, {	version: "1.10.4",	options: {		appendTo: "body",		autoRefresh: true,		distance: 0,		filter: "*",		tolerance: "touch",		// callbacks		selected: null,		selecting: null,		start: null,		stop: null,		unselected: null,		unselecting: null	},	_create: function() {		var selectees,			that = this;		this.element.addClass("ui-selectable");		this.dragged = false;		// cache selectee children based on filter		this.refresh = function() {			selectees = $(that.options.filter, that.element[0]);			selectees.addClass("ui-selectee");			selectees.each(function() {				var $this = $(this),					pos = $this.offset();				$.data(this, "selectable-item", {					element: this,					$element: $this,					left: pos.left,					top: pos.top,					right: pos.left + $this.outerWidth(),					bottom: pos.top + $this.outerHeight(),					startselected: false,					selected: $this.hasClass("ui-selected"),					selecting: $this.hasClass("ui-selecting"),					unselecting: $this.hasClass("ui-unselecting")				});			});		};		this.refresh();		this.selectees = selectees.addClass("ui-selectee");		this._mouseInit();		this.helper = $("&lt;div class=''ui-selectable-helper''&gt;&lt;/div&gt;");	},	_destroy: function() {		this.selectees			.removeClass("ui-selectee")			.removeData("selectable-item");		this.element			.removeClass("ui-selectable ui-selectable-disabled");		this._mouseDestroy();	},	_mouseStart: function(event) {		var that = this,			options = this.options;		this.opos = [event.pageX, event.pageY];		if (this.options.disabled) {			return;		}		this.selectees = $(options.filter, this.element[0]);		this._trigger("start", event);		$(options.appendTo).append(this.helper);		// position helper (lasso)		this.helper.css({			"left": event.pageX,			"top": event.pageY,			"width": 0,			"height": 0		});		if (options.autoRefresh) {			this.refresh();		}		this.selectees.filter(".ui-selected").each(function() {			var selectee = $.data(this, "selectable-item");			selectee.startselected = true;			if (!event.metaKey &amp;&amp; !event.ctrlKey) {				selectee.$element.removeClass("ui-selected");				selectee.selected = false;				selectee.$element.addClass("ui-unselecting");				selectee.unselecting = true;				// selectable UNSELECTING callback				that._trigger("unselecting", event, {					unselecting: selectee.element				});			}		});		$(event.target).parents().addBack().each(function() {			var doSelect,				selectee = $.data(this, "selectable-item");			if (selectee) {				doSelect = (!event.metaKey &amp;&amp; !event.ctrlKey) || !selectee.$element.hasClass("ui-selected");				selectee.$element					.removeClass(doSelect ? "ui-unselecting" : "ui-selected")					.addClass(doSelect ? "ui-selecting" : "ui-unselecting");				selectee.unselecting = !doSelect;				selectee.selecting = doSelect;				selectee.selected = doSelect;				// selectable (UN)SELECTING callback				if (doSelect) {					that._trigger("selecting", event, {						selecting: selectee.element					});				} else {					that._trigger("unselecting", event, {						unselecting: selectee.element					});				}				return false;			}		});	},	_mouseDrag: function(event) {		this.dragged = true;		if (this.options.disabled) {			return;		}		var tmp,			that = this,			options = this.options,			x1 = this.opos[0],			y1 = this.opos[1],			x2 = event.pageX,			y2 = event.pageY;		if (x1 &gt; x2) { tmp = x2; x2 = x1; x1 = tmp; }		if (y1 &gt; y2) { tmp = y2; y2 = y1; y1 = tmp; }		this.helper.css({left: x1, top: y1, width: x2-x1, height: y2-y1});		this.selectees.each(function() {			var selectee = $.data(this, "selectable-item"),				hit = false;			//prevent helper from being selected if appendTo: selectable			if (!selectee || selectee.element === that.element[0]) {				return;			}			if (options.tolerance === "touch") {				hit = ( !(selectee.left &gt; x2 || selectee.right &lt; x1 || selectee.top &gt; y2 || selectee.bottom &lt; y1) );			} else if (options.tolerance === "fit") {				hit = (selectee.left &gt; x1 &amp;&amp; selectee.right &lt; x2 &amp;&amp; selectee.top &gt; y1 &amp;&amp; selectee.bottom &lt; y2);			}			if (hit) {				// SELECT				if (selectee.selected) {					selectee.$element.removeClass("ui-selected");					selectee.selected = false;				}				if (selectee.unselecting) {					selectee.$element.removeClass("ui-unselecting");					selectee.unselecting = false;				}				if (!selectee.selecting) {					selectee.$element.addClass("ui-selecting");					selectee.selecting = true;					// selectable SELECTING callback					that._trigger("selecting", event, {						selecting: selectee.element					});				}			} else {				// UNSELECT				if (selectee.selecting) {					if ((event.metaKey || event.ctrlKey) &amp;&amp; selectee.startselected) {						selectee.$element.removeClass("ui-selecting");						selectee.selecting = false;						selectee.$element.addClass("ui-selected");						selectee.selected = true;					} else {						selectee.$element.removeClass("ui-selecting");						selectee.selecting = false;						if (selectee.startselected) {							selectee.$element.addClass("ui-unselecting");							selectee.unselecting = true;						}						// selectable UNSELECTING callback						that._trigger("unselecting", event, {							unselecting: selectee.element						});					}				}				if (selectee.selected) {					if (!event.metaKey &amp;&amp; !event.ctrlKey &amp;&amp; !selectee.startselected) {						selectee.$element.removeClass("ui-selected");						selectee.selected = false;						selectee.$element.addClass("ui-unselecting");						selectee.unselecting = true;						// selectable UNSELECTING callback						that._trigger("unselecting", event, {							unselecting: selectee.element						});					}				}			}		});		return false;	},	_mouseStop: function(event) {		var that = this;		this.dragged = false;		$(".ui-unselecting", this.element[0]).each(function() {			var selectee = $.data(this, "selectable-item");			selectee.$element.removeClass("ui-unselecting");			selectee.unselecting = false;			selectee.startselected = false;			that._trigger("unselected", event, {				unselected: selectee.element			});		});		$(".ui-selecting", this.element[0]).each(function() {			var selectee = $.data(this, "selectable-item");			selectee.$element.removeClass("ui-selecting").addClass("ui-selected");			selectee.selecting = false;			selectee.selected = true;			selectee.startselected = true;			that._trigger("selected", event, {				selected: selectee.element			});		});		this._trigger("stop", event);		this.helper.remove();		return false;	}});})(jQuery);(function( $, undefined ) {function isOverAxis( x, reference, size ) {	return ( x &gt; reference ) &amp;&amp; ( x &lt; ( reference + size ) );}function isFloating(item) {	return (/left|right/).test(item.css("float")) || (/inline|table-cell/).test(item.css("display"));}$.widget("ui.sortable", $.ui.mouse, {	version: "1.10.4",	widgetEventPrefix: "sort",	ready: false,	options: {		appendTo: "parent",		axis: false,		connectWith: false,		containment: false,		cursor: "auto",		cursorAt: false,		dropOnEmpty: true,		forcePlaceholderSize: false,		forceHelperSize: false,		grid: false,		handle: false,		helper: "original",		items: "&gt; *",		opacity: false,		placeholder: false,		revert: false,		scroll: true,		scrollSensitivity: 20,		scrollSpeed: 20,		scope: "default",		tolerance: "intersect",		zIndex: 1000,		// callbacks		activate: null,		beforeStop: null,		change: null,		deactivate: null,		out: null,		over: null,		receive: null,		remove: null,		sort: null,		start: null,		stop: null,		update: null	},	_create: function() {		var o = this.options;		this.containerCache = {};		this.element.addClass("ui-sortable");		//Get the items		this.refresh();		//Let''s determine if the items are being displayed horizontally		this.floating = this.items.length ? o.axis === "x" || isFloating(this.items[0].item) : false;		//Let''s determine the parent''s offset		this.offset = this.element.offset();		//Initialize mouse events for interaction		this._mouseInit();		//We''re ready to go		this.ready = true;	},	_destroy: function() {		this.element			.removeClass("ui-sortable ui-sortable-disabled");		this._mouseDestroy();		for ( var i = this.items.length - 1; i &gt;= 0; i-- ) {			this.items[i].item.removeData(this.widgetName + "-item");		}		return this;	},	_setOption: function(key, value){		if ( key === "disabled" ) {			this.options[ key ] = value;			this.widget().toggleClass( "ui-sortable-disabled", !!value );		} else {			// Don''t call widget base _setOption for disable as it adds ui-state-disabled class			$.Widget.prototype._setOption.apply(this, arguments);		}	},	_mouseCapture: function(event, overrideHandle) {		var currentItem = null,			validHandle = false,			that = this;		if (this.reverting) {			return false;		}		if(this.options.disabled || this.options.type === "static") {			return false;		}		//We have to refresh the items data once first		this._refreshItems(event);		//Find out if the clicked node (or one of its parents) is a actual item in this.items		$(event.target).parents().each(function() {			if($.data(this, that.widgetName + "-item") === that) {				currentItem = $(this);				return false;			}		});		if($.data(event.target, that.widgetName + "-item") === that) {			currentItem = $(event.target);		}		if(!currentItem) {			return false;		}		if(this.options.handle &amp;&amp; !overrideHandle) {			$(this.options.handle, currentItem).find("*").addBack().each(function() {				if(this === event.target) {					validHandle = true;				}			});			if(!validHandle) {				return false;			}		}		this.currentItem = currentItem;		this._removeCurrentsFromItems();		return true;	},	_mouseStart: function(event, overrideHandle, noActivation) {		var i, body,			o = this.options;		this.currentContainer = this;		//We only need to call refreshPositions, because the refreshItems call has been moved to mouseCapture		this.refreshPositions();		//Create and append the visible helper		this.helper = this._createHelper(event);		//Cache the helper size		this._cacheHelperProportions();		/*		 * - Position generation -		 * This block generates everything position related - it''s the core of draggables.		 */		//Cache the margins of the original element		this._cacheMargins();		//Get the next scrolling parent		this.scrollParent = this.helper.scrollParent();		//The element''s absolute position on the page minus margins		this.offset = this.currentItem.offset();		this.offset = {			top: this.offset.top - this.margins.top,			left: this.offset.left - this.margins.left		};		$.extend(this.offset, {			click: { //Where the click happened, relative to the element				left: event.pageX - this.offset.left,				top: event.pageY - this.offset.top			},			parent: this._getParentOffset(),			relative: this._getRelativeOffset() //This is a relative to absolute position minus the actual position calculation - only used for relative positioned helper		});		// Only after we got the offset, we can change the helper''s position to absolute		// TODO: Still need to figure out a way to make relative sorting possible		this.helper.css("position", "absolute");		this.cssPosition = this.helper.css("position");		//Generate the original position		this.originalPosition = this._generatePosition(event);		this.originalPageX = event.pageX;		this.originalPageY = event.pageY;		//Adjust the mouse offset relative to the helper if "cursorAt" is supplied		(o.cursorAt &amp;&amp; this._adjustOffsetFromHelper(o.cursorAt));		//Cache the former DOM position		this.domPosition = { prev: this.currentItem.prev()[0], parent: this.currentItem.parent()[0] };		//If the helper is not the original, hide the original so it''s not playing any role during the drag, won''t cause anything bad this way		if(this.helper[0] !== this.currentItem[0]) {			this.currentItem.hide();		}		//Create the placeholder		this._createPlaceholder();		//Set a containment if given in the options		if(o.containment) {			this._setContainment();		}		if( o.cursor &amp;&amp; o.cursor !== "auto" ) { // cursor option			body = this.document.find( "body" );			// support: IE			this.storedCursor = body.css( "cursor" );			body.css( "cursor", o.cursor );			this.storedStylesheet = $( "&lt;style&gt;*{ cursor: "+o.cursor+" !important; }&lt;/style&gt;" ).appendTo( body );		}		if(o.opacity) { // opacity option			if (this.helper.css("opacity")) {				this._storedOpacity = this.helper.css("opacity");			}			this.helper.css("opacity", o.opacity);		}		if(o.zIndex) { // zIndex option			if (this.helper.css("zIndex")) {				this._storedZIndex = this.helper.css("zIndex");			}			this.helper.css("zIndex", o.zIndex);		}		//Prepare scrolling		if(this.scrollParent[0] !== document &amp;&amp; this.scrollParent[0].tagName !== "HTML") {			this.overflowOffset = this.scrollParent.offset();		}		//Call callbacks		this._trigger("start", event, this._uiHash());		//Recache the helper size		if(!this._preserveHelperProportions) {			this._cacheHelperProportions();		}		//Post "activate" events to possible containers		if( !noActivation ) {			for ( i = this.containers.length - 1; i &gt;= 0; i-- ) {				this.containers[ i ]._trigger( "activate", event, this._uiHash( this ) );			}		}		//Prepare possible droppables		if($.ui.ddmanager) {			$.ui.ddmanager.current = this;		}		if ($.ui.ddmanager &amp;&amp; !o.dropBehaviour) {			$.ui.ddmanager.prepareOffsets(this, event);		}		this.dragging = true;		this.helper.addClass("ui-sortable-helper");		this._mouseDrag(event); //Execute the drag once - this causes the helper not to be visible before getting its correct position		return true;	},	_mouseDrag: function(event) {		var i, item, itemElement, intersection,			o = this.options,			scrolled = false;		//Compute the helpers position		this.position = this._generatePosition(event);		this.positionAbs = this._convertPositionTo("absolute");		if (!this.lastPositionAbs) {			this.lastPositionAbs = this.positionAbs;		}		//Do scrolling		if(this.options.scroll) {			if(this.scrollParent[0] !== document &amp;&amp; this.scrollParent[0].tagName !== "HTML") {				if((this.overflowOffset.top + this.scrollParent[0].offsetHeight) - event.pageY &lt; o.scrollSensitivity) {					this.scrollParent[0].scrollTop = scrolled = this.scrollParent[0].scrollTop + o.scrollSpeed;				} else if(event.pageY - this.overflowOffset.top &lt; o.scrollSensitivity) {					this.scrollParent[0].scrollTop = scrolled = this.scrollParent[0].scrollTop - o.scrollSpeed;				}				if((this.overflowOffset.left + this.scrollParent[0].offsetWidth) - event.pageX &lt; o.scrollSensitivity) {					this.scrollParent[0].scrollLeft = scrolled = this.scrollParent[0].scrollLeft + o.scrollSpeed;				} else if(event.pageX - this.overflowOffset.left &lt; o.scrollSensitivity) {					this.scrollParent[0].scrollLeft = scrolled = this.scrollParent[0].scrollLeft - o.scrollSpeed;				}			} else {				if(event.pageY - $(document).scrollTop() &lt; o.scrollSensitivity) {					scrolled = $(document).scrollTop($(document).scrollTop() - o.scrollSpeed);				} else if($(window).height() - (event.pageY - $(document).scrollTop()) &lt; o.scrollSensitivity) {					scrolled = $(document).scrollTop($(document).scrollTop() + o.scrollSpeed);				}				if(event.pageX - $(document).scrollLeft() &lt; o.scrollSensitivity) {					scrolled = $(document).scrollLeft($(document).scrollLeft() - o.scrollSpeed);				} else if($(window).width() - (event.pageX - $(document).scrollLeft()) &lt; o.scrollSensitivity) {					scrolled = $(document).scrollLeft($(document).scrollLeft() + o.scrollSpeed);				}			}			if(scrolled !== false &amp;&amp; $.ui.ddmanager &amp;&amp; !o.dropBehaviour) {				$.ui.ddmanager.prepareOffsets(this, event);			}		}		//Regenerate the absolute position used for position checks		this.positionAbs = this._convertPositionTo("absolute");		//Set the helper position		if(!this.options.axis || this.options.axis !== "y") {			this.helper[0].style.left = this.position.left+"px";		}		if(!this.options.axis || this.options.axis !== "x") {			this.helper[0].style.top = this.position.top+"px";		}		//Rearrange		for (i = this.items.length - 1; i &gt;= 0; i--) {			//Cache variables and intersection, continue if no intersection			item = this.items[i];			itemElement = item.item[0];			intersection = this._intersectsWithPointer(item);			if (!intersection) {				continue;			}			// Only put the placeholder inside the current Container, skip all			// items from other containers. This works because when moving			// an item from one container to another the			// currentContainer is switched before the placeholder is moved.			//			// Without this, moving items in "sub-sortables" can cause			// the placeholder to jitter beetween the outer and inner container.			if (item.instance !== this.currentContainer) {				continue;			}			// cannot intersect with itself			// no useless actions that have been done before			// no action if the item moved is the parent of the item checked			if (itemElement !== this.currentItem[0] &amp;&amp;				this.placeholder[intersection === 1 ? "next" : "prev"]()[0] !== itemElement &amp;&amp;				!$.contains(this.placeholder[0], itemElement) &amp;&amp;				(this.options.type === "semi-dynamic" ? !$.contains(this.element[0], itemElement) : true)			) {				this.direction = intersection === 1 ? "down" : "up";				if (this.options.tolerance === "pointer" || this._intersectsWithSides(item)) {					this._rearrange(event, item);				} else {					break;				}				this._trigger("change", event, this._uiHash());				break;			}		}		//Post events to containers		this._contactContainers(event);		//Interconnect with droppables		if($.ui.ddmanager) {			$.ui.ddmanager.drag(this, event);		}		//Call callbacks		this._trigger("sort", event, this._uiHash());		this.lastPositionAbs = this.positionAbs;		return false;	},	_mouseStop: function(event, noPropagation) {		if(!event) {			return;		}		//If we are using droppables, inform the manager about the drop		if ($.ui.ddmanager &amp;&amp; !this.options.dropBehaviour) {			$.ui.ddmanager.drop(this, event);		}		if(this.options.revert) {			var that = this,				cur = this.placeholder.offset(),				axis = this.options.axis,				animation = {};			if ( !axis || axis === "x" ) {				animation.left = cur.left - this.offset.parent.left - this.margins.left + (this.offsetParent[0] === document.body ? 0 : this.offsetParent[0].scrollLeft);			}			if ( !axis || axis === "y" ) {				animation.top = cur.top - this.offset.parent.top - this.margins.top + (this.offsetParent[0] === document.body ? 0 : this.offsetParent[0].scrollTop);			}			this.reverting = true;			$(this.helper).animate( animation, parseInt(this.options.revert, 10) || 500, function() {				that._clear(event);			});		} else {			this._clear(event, noPropagation);		}		return false;	},	cancel: function() {		if(this.dragging) {			this._mouseUp({ target: null });			if(this.options.helper === "original") {				this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper");			} else {				this.currentItem.show();			}			//Post deactivating events to containers			for (var i = this.containers.length - 1; i &gt;= 0; i--){				this.containers[i]._trigger("deactivate", null, this._uiHash(this));				if(this.containers[i].containerCache.over) {					this.containers[i]._trigger("out", null, this._uiHash(this));					this.containers[i].containerCache.over = 0;				}			}		}		if (this.placeholder) {			//$(this.placeholder[0]).remove(); would have been the jQuery way - unfortunately, it unbinds ALL events from the original node!			if(this.placeholder[0].parentNode) {				this.placeholder[0].parentNode.removeChild(this.placeholder[0]);			}			if(this.options.helper !== "original" &amp;&amp; this.helper &amp;&amp; this.helper[0].parentNode) {				this.helper.remove();			}			$.extend(this, {				helper: null,				dragging: false,				reverting: false,				_noFinalSort: null			});			if(this.domPosition.prev) {				$(this.domPosition.prev).after(this.currentItem);			} else {				$(this.domPosition.parent).prepend(this.currentItem);			}		}		return this;	},	serialize: function(o) {		var items = this._getItemsAsjQuery(o &amp;&amp; o.connected),			str = [];		o = o || {};		$(items).each(function() {			var res = ($(o.item || this).attr(o.attribute || "id") || "").match(o.expression || (/(.+)[\-=_](.+)/));			if (res) {				str.push((o.key || res[1]+"[]")+"="+(o.key &amp;&amp; o.expression ? res[1] : res[2]));			}		});		if(!str.length &amp;&amp; o.key) {			str.push(o.key + "=");		}		return str.join("&amp;");	},	toArray: function(o) {		var items = this._getItemsAsjQuery(o &amp;&amp; o.connected),			ret = [];		o = o || {};		items.each(function() { ret.push($(o.item || this).attr(o.attribute || "id") || ""); });		return ret;	},	/* Be careful with the following core functions */	_intersectsWith: function(item) {		var x1 = this.positionAbs.left,			x2 = x1 + this.helperProportions.width,			y1 = this.positionAbs.top,			y2 = y1 + this.helperProportions.height,			l = item.left,			r = l + item.width,			t = item.top,			b = t + item.height,			dyClick = this.offset.click.top,			dxClick = this.offset.click.left,			isOverElementHeight = ( this.options.axis === "x" ) || ( ( y1 + dyClick ) &gt; t &amp;&amp; ( y1 + dyClick ) &lt; b ),			isOverElementWidth = ( this.options.axis === "y" ) || ( ( x1 + dxClick ) &gt; l &amp;&amp; ( x1 + dxClick ) &lt; r ),			isOverElement = isOverElementHeight &amp;&amp; isOverElementWidth;		if ( this.options.tolerance === "pointer" ||			this.options.forcePointerForContainers ||			(this.options.tolerance !== "pointer" &amp;&amp; this.helperProportions[this.floating ? "width" : "height"] &gt; item[this.floating ? "width" : "height"])		) {			return isOverElement;		} else {			return (l &lt; x1 + (this.helperProportions.width / 2) &amp;&amp; // Right Half				x2 - (this.helperProportions.width / 2) &lt; r &amp;&amp; // Left Half				t &lt; y1 + (this.helperProportions.height / 2) &amp;&amp; // Bottom Half				y2 - (this.helperProportions.height / 2) &lt; b ); // Top Half		}	},	_intersectsWithPointer: function(item) {		var isOverElementHeight = (this.options.axis === "x") || isOverAxis(this.positionAbs.top + this.offset.click.top, item.top, item.height),			isOverElementWidth = (this.options.axis === "y") || isOverAxis(this.positionAbs.left + this.offset.click.left, item.left, item.width),			isOverElement = isOverElementHeight &amp;&amp; isOverElementWidth,			verticalDirection = this._getDragVerticalDirection(),			horizontalDirection = this._getDragHorizontalDirection();		if (!isOverElement) {			return false;		}		return this.floating ?			( ((horizontalDirection &amp;&amp; horizontalDirection === "right") || verticalDirection === "down") ? 2 : 1 )			: ( verticalDirection &amp;&amp; (verticalDirection === "down" ? 2 : 1) );	},	_intersectsWithSides: function(item) {		var isOverBottomHalf = isOverAxis(this.positionAbs.top + this.offset.click.top, item.top + (item.height/2), item.height),			isOverRightHalf = isOverAxis(this.positionAbs.left + this.offset.click.left, item.left + (item.width/2), item.width),			verticalDirection = this._getDragVerticalDirection(),			horizontalDirection = this._getDragHorizontalDirection();		if (this.floating &amp;&amp; horizontalDirection) {			return ((horizontalDirection === "right" &amp;&amp; isOverRightHalf) || (horizontalDirection === "left" &amp;&amp; !isOverRightHalf));		} else {			return verticalDirection &amp;&amp; ((verticalDirection === "down" &amp;&amp; isOverBottomHalf) || (verticalDirection === "up" &amp;&amp; !isOverBottomHalf));		}	},	_getDragVerticalDirection: function() {		var delta = this.positionAbs.top - this.lastPositionAbs.top;		return delta !== 0 &amp;&amp; (delta &gt; 0 ? "down" : "up");	},	_getDragHorizontalDirection: function() {		var delta = this.positionAbs.left - this.lastPositionAbs.left;		return delta !== 0 &amp;&amp; (delta &gt; 0 ? "right" : "left");	},	refresh: function(event) {		this._refreshItems(event);		this.refreshPositions();		return this;	},	_connectWith: function() {		var options = this.options;		return options.connectWith.constructor === String ? [options.connectWith] : options.connectWith;	},	_getItemsAsjQuery: function(connected) {		var i, j, cur, inst,			items = [],			queries = [],			connectWith = this._connectWith();		if(connectWith &amp;&amp; connected) {			for (i = connectWith.length - 1; i &gt;= 0; i--){				cur = $(connectWith[i]);				for ( j = cur.length - 1; j &gt;= 0; j--){					inst = $.data(cur[j], this.widgetFullName);					if(inst &amp;&amp; inst !== this &amp;&amp; !inst.options.disabled) {						queries.push([$.isFunction(inst.options.items) ? inst.options.items.call(inst.element) : $(inst.options.items, inst.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), inst]);					}				}			}		}		queries.push([$.isFunction(this.options.items) ? this.options.items.call(this.element, null, { options: this.options, item: this.currentItem }) : $(this.options.items, this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), this]);		function addItems() {			items.push( this );		}		for (i = queries.length - 1; i &gt;= 0; i--){			queries[i][0].each( addItems );		}		return $(items);	},	_removeCurrentsFromItems: function() {		var list = this.currentItem.find(":data(" + this.widgetName + "-item)");		this.items = $.grep(this.items, function (item) {			for (var j=0; j &lt; list.length; j++) {				if(list[j] === item.item[0]) {					return false;				}			}			return true;		});	},	_refreshItems: function(event) {		this.items = [];		this.containers = [this];		var i, j, cur, inst, targetData, _queries, item, queriesLength,			items = this.items,			queries = [[$.isFunction(this.options.items) ? this.options.items.call(this.element[0], event, { item: this.currentItem }) : $(this.options.items, this.element), this]],			connectWith = this._connectWith();		if(connectWith &amp;&amp; this.ready) { //Shouldn''t be run the first time through due to massive slow-down			for (i = connectWith.length - 1; i &gt;= 0; i--){				cur = $(connectWith[i]);				for (j = cur.length - 1; j &gt;= 0; j--){					inst = $.data(cur[j], this.widgetFullName);					if(inst &amp;&amp; inst !== this &amp;&amp; !inst.options.disabled) {						queries.push([$.isFunction(inst.options.items) ? inst.options.items.call(inst.element[0], event, { item: this.currentItem }) : $(inst.options.items, inst.element), inst]);						this.containers.push(inst);					}				}			}		}		for (i = queries.length - 1; i &gt;= 0; i--) {			targetData = queries[i][1];			_queries = queries[i][0];			for (j=0, queriesLength = _queries.length; j &lt; queriesLength; j++) {				item = $(_queries[j]);				item.data(this.widgetName + "-item", targetData); // Data for target checking (mouse manager)				items.push({					item: item,					instance: targetData,					width: 0, height: 0,					left: 0, top: 0				});			}		}	},	refreshPositions: function(fast) {		//This has to be redone because due to the item being moved out/into the offsetParent, the offsetParent''s position will change		if(this.offsetParent &amp;&amp; this.helper) {			this.offset.parent = this._getParentOffset();		}		var i, item, t, p;		for (i = this.items.length - 1; i &gt;= 0; i--){			item = this.items[i];			//We ignore calculating positions of all connected containers when we''re not over them			if(item.instance !== this.currentContainer &amp;&amp; this.currentContainer &amp;&amp; item.item[0] !== this.currentItem[0]) {				continue;			}			t = this.options.toleranceElement ? $(this.options.toleranceElement, item.item) : item.item;			if (!fast) {				item.width = t.outerWidth();				item.height = t.outerHeight();			}			p = t.offset();			item.left = p.left;			item.top = p.top;		}		if(this.options.custom &amp;&amp; this.options.custom.refreshContainers) {			this.options.custom.refreshContainers.call(this);		} else {			for (i = this.containers.length - 1; i &gt;= 0; i--){				p = this.containers[i].element.offset();				this.containers[i].containerCache.left = p.left;				this.containers[i].containerCache.top = p.top;				this.containers[i].containerCache.width	= this.containers[i].element.outerWidth();				this.containers[i].containerCache.height = this.containers[i].element.outerHeight();			}		}		return this;	},	_createPlaceholder: function(that) {		that = that || this;		var className,			o = that.options;		if(!o.placeholder || o.placeholder.constructor === String) {			className = o.placeholder;			o.placeholder = {				element: function() {					var nodeName = that.currentItem[0].nodeName.toLowerCase(),						element = $( "&lt;" + nodeName + "&gt;", that.document[0] )							.addClass(className || that.currentItem[0].className+" ui-sortable-placeholder")							.removeClass("ui-sortable-helper");					if ( nodeName === "tr" ) {						that.currentItem.children().each(function() {							$( "&lt;td&gt;&amp;#160;&lt;/td&gt;", that.document[0] )								.attr( "colspan", $( this ).attr( "colspan" ) || 1 )								.appendTo( element );						});					} else if ( nodeName === "img" ) {						element.attr( "src", that.currentItem.attr( "src" ) );					}					if ( !className ) {						element.css( "visibility", "hidden" );					}					return element;				},				update: function(container, p) {					// 1. If a className is set as ''placeholder option, we don''t force sizes - the class is responsible for that					// 2. The option ''forcePlaceholderSize can be enabled to force it even if a class name is specified					if(className &amp;&amp; !o.forcePlaceholderSize) {						return;					}					//If the element doesn''t have a actual height by itself (without styles coming from a stylesheet), it receives the inline height from the dragged item					if(!p.height()) { p.height(that.currentItem.innerHeight() - parseInt(that.currentItem.css("paddingTop")||0, 10) - parseInt(that.currentItem.css("paddingBottom")||0, 10)); }					if(!p.width()) { p.width(that.currentItem.innerWidth() - parseInt(that.currentItem.css("paddingLeft")||0, 10) - parseInt(that.currentItem.css("paddingRight")||0, 10)); }				}			};		}		//Create the placeholder		that.placeholder = $(o.placeholder.element.call(that.element, that.currentItem));		//Append it after the actual current item		that.currentItem.after(that.placeholder);		//Update the size of the placeholder (TODO: Logic to fuzzy, see line 316/317)		o.placeholder.update(that, that.placeholder);	},	_contactContainers: function(event) {		var i, j, dist, itemWithLeastDistance, posProperty, sizeProperty, base, cur, nearBottom, floating,			innermostContainer = null,			innermostIndex = null;		// get innermost container that intersects with item		for (i = this.containers.length - 1; i &gt;= 0; i--) {			// never consider a container that''s located within the item itself			if($.contains(this.currentItem[0], this.containers[i].element[0])) {				continue;			}			if(this._intersectsWith(this.containers[i].containerCache)) {				// if we''ve already found a container and it''s more "inner" than this, then continue				if(innermostContainer &amp;&amp; $.contains(this.containers[i].element[0], innermostContainer.element[0])) {					continue;				}				innermostContainer = this.containers[i];				innermostIndex = i;			} else {				// container doesn''t intersect. trigger "out" event if necessary				if(this.containers[i].containerCache.over) {					this.containers[i]._trigger("out", event, this._uiHash(this));					this.containers[i].containerCache.over = 0;				}			}		}		// if no intersecting containers found, return		if(!innermostContainer) {			return;		}		// move the item into the container if it''s not there already		if(this.containers.length === 1) {			if (!this.containers[innermostIndex].containerCache.over) {				this.containers[innermostIndex]._trigger("over", event, this._uiHash(this));				this.containers[innermostIndex].containerCache.over = 1;			}		} else {			//When entering a new container, we will find the item with the least distance and append our item near it			dist = 10000;			itemWithLeastDistance = null;			floating = innermostContainer.floating || isFloating(this.currentItem);			posProperty = floating ? "left" : "top";			sizeProperty = floating ? "width" : "height";			base = this.positionAbs[posProperty] + this.offset.click[posProperty];			for (j = this.items.length - 1; j &gt;= 0; j--) {				if(!$.contains(this.containers[innermostIndex].element[0], this.items[j].item[0])) {					continue;				}				if(this.items[j].item[0] === this.currentItem[0]) {					continue;				}				if (floating &amp;&amp; !isOverAxis(this.positionAbs.top + this.offset.click.top, this.items[j].top, this.items[j].height)) {					continue;				}				cur = this.items[j].item.offset()[posProperty];				nearBottom = false;				if(Math.abs(cur - base) &gt; Math.abs(cur + this.items[j][sizeProperty] - base)){					nearBottom = true;					cur += this.items[j][sizeProperty];				}				if(Math.abs(cur - base) &lt; dist) {					dist = Math.abs(cur - base); itemWithLeastDistance = this.items[j];					this.direction = nearBottom ? "up": "down";				}			}			//Check if dropOnEmpty is enabled			if(!itemWithLeastDistance &amp;&amp; !this.options.dropOnEmpty) {				return;			}			if(this.currentContainer === this.containers[innermostIndex]) {				return;			}			itemWithLeastDistance ? this._rearrange(event, itemWithLeastDistance, null, true) : this._rearrange(event, null, this.containers[innermostIndex].element, true);			this._trigger("change", event, this._uiHash());			this.containers[innermostIndex]._trigger("change", event, this._uiHash(this));			this.currentContainer = this.containers[innermostIndex];			//Update the placeholder			this.options.placeholder.update(this.currentContainer, this.placeholder);			this.containers[innermostIndex]._trigger("over", event, this._uiHash(this));			this.containers[innermostIndex].containerCache.over = 1;		}	},	_createHelper: function(event) {		var o = this.options,			helper = $.isFunction(o.helper) ? $(o.helper.apply(this.element[0], [event, this.currentItem])) : (o.helper === "clone" ? this.currentItem.clone() : this.currentItem);		//Add the helper to the DOM if that didn''t happen already		if(!helper.parents("body").length) {			$(o.appendTo !== "parent" ? o.appendTo : this.currentItem[0].parentNode)[0].appendChild(helper[0]);		}		if(helper[0] === this.currentItem[0]) {			this._storedCSS = { width: this.currentItem[0].style.width, height: this.currentItem[0].style.height, position: this.currentItem.css("position"), top: this.currentItem.css("top"), left: this.currentItem.css("left") };		}		if(!helper[0].style.width || o.forceHelperSize) {			helper.width(this.currentItem.width());		}		if(!helper[0].style.height || o.forceHelperSize) {			helper.height(this.currentItem.height());		}		return helper;	},	_adjustOffsetFromHelper: function(obj) {		if (typeof obj === "string") {			obj = obj.split(" ");		}		if ($.isArray(obj)) {			obj = {left: +obj[0], top: +obj[1] || 0};		}		if ("left" in obj) {			this.offset.click.left = obj.left + this.margins.left;		}		if ("right" in obj) {			this.offset.click.left = this.helperProportions.width - obj.right + this.margins.left;		}		if ("top" in obj) {			this.offset.click.top = obj.top + this.margins.top;		}		if ("bottom" in obj) {			this.offset.click.top = this.helperProportions.height - obj.bottom + this.margins.top;		}	},	_getParentOffset: function() {		//Get the offsetParent and cache its position		this.offsetParent = this.helper.offsetParent();		var po = this.offsetParent.offset();		// This is a special case where we need to modify a offset calculated on start, since the following happened:		// 1. The position of the helper is absolute, so it''s position is calculated based on the next positioned parent		// 2. The actual offset parent is a child of the scroll parent, and the scroll parent isn''t the document, which means that		//    the scroll is included in the initial calculation of the offset of the parent, and never recalculated upon drag		if(this.cssPosition === "absolute" &amp;&amp; this.scrollParent[0] !== document &amp;&amp; $.contains(this.scrollParent[0], this.offsetParent[0])) {			po.left += this.scrollParent.scrollLeft();			po.top += this.scrollParent.scrollTop();		}		// This needs to be actually done for all browsers, since pageX/pageY includes this information		// with an ugly IE fix		if( this.offsetParent[0] === document.body || (this.offsetParent[0].tagName &amp;&amp; this.offsetParent[0].tagName.toLowerCase() === "html" &amp;&amp; $.ui.ie)) {			po = { top: 0, left: 0 };		}		return {			top: po.top + (parseInt(this.offsetParent.css("borderTopWidth"),10) || 0),			left: po.left + (parseInt(this.offsetParent.css("borderLeftWidth"),10) || 0)		};	},	_getRelativeOffset: function() {		if(this.cssPosition === "relative") {			var p = this.currentItem.position();			return {				top: p.top - (parseInt(this.helper.css("top"),10) || 0) + this.scrollParent.scrollTop(),				left: p.left - (parseInt(this.helper.css("left"),10) || 0) + this.scrollParent.scrollLeft()			};		} else {			return { top: 0, left: 0 };		}	},	_cacheMargins: function() {		this.margins = {			left: (parseInt(this.currentItem.css("marginLeft"),10) || 0),			top: (parseInt(this.currentItem.css("marginTop"),10) || 0)		};	},	_cacheHelperProportions: function() {		this.helperProportions = {			width: this.helper.outerWidth(),			height: this.helper.outerHeight()		};	},	_setContainment: function() {		var ce, co, over,			o = this.options;		if(o.containment === "parent") {			o.containment = this.helper[0].parentNode;		}		if(o.containment === "document" || o.containment === "window") {			this.containment = [				0 - this.offset.relative.left - this.offset.parent.left,				0 - this.offset.relative.top - this.offset.parent.top,				$(o.containment === "document" ? document : window).width() - this.helperProportions.width - this.margins.left,				($(o.containment === "document" ? document : window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top			];		}		if(!(/^(document|window|parent)$/).test(o.containment)) {			ce = $(o.containment)[0];			co = $(o.containment).offset();			over = ($(ce).css("overflow") !== "hidden");			this.containment = [				co.left + (parseInt($(ce).css("borderLeftWidth"),10) || 0) + (parseInt($(ce).css("paddingLeft"),10) || 0) - this.margins.left,				co.top + (parseInt($(ce).css("borderTopWidth"),10) || 0) + (parseInt($(ce).css("paddingTop"),10) || 0) - this.margins.top,				co.left+(over ? Math.max(ce.scrollWidth,ce.offsetWidth) : ce.offsetWidth) - (parseInt($(ce).css("borderLeftWidth"),10) || 0) - (parseInt($(ce).css("paddingRight"),10) || 0) - this.helperProportions.width - this.margins.left,				co.top+(over ? Math.max(ce.scrollHeight,ce.offsetHeight) : ce.offsetHeight) - (parseInt($(ce).css("borderTopWidth"),10) || 0) - (parseInt($(ce).css("paddingBottom"),10) || 0) - this.helperProportions.height - this.margins.top			];		}	},	_convertPositionTo: function(d, pos) {		if(!pos) {			pos = this.position;		}		var mod = d === "absolute" ? 1 : -1,			scroll = this.cssPosition === "absolute" &amp;&amp; !(this.scrollParent[0] !== document &amp;&amp; $.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,			scrollIsRootNode = (/(html|body)/i).test(scroll[0].tagName);		return {			top: (				pos.top	+																// The absolute mouse position				this.offset.relative.top * mod +										// Only for relative positioned nodes: Relative offset from element to offset parent				this.offset.parent.top * mod -											// The offsetParent''s offset without borders (offset + border)				( ( this.cssPosition === "fixed" ? -this.scrollParent.scrollTop() : ( scrollIsRootNode ? 0 : scroll.scrollTop() ) ) * mod)			),			left: (				pos.left +																// The absolute mouse position				this.offset.relative.left * mod +										// Only for relative positioned nodes: Relative offset from element to offset parent				this.offset.parent.left * mod	-										// The offsetParent''s offset without borders (offset + border)				( ( this.cssPosition === "fixed" ? -this.scrollParent.scrollLeft() : scrollIsRootNode ? 0 : scroll.scrollLeft() ) * mod)			)		};	},	_generatePosition: function(event) {		var top, left,			o = this.options,			pageX = event.pageX,			pageY = event.pageY,			scroll = this.cssPosition === "absolute" &amp;&amp; !(this.scrollParent[0] !== document &amp;&amp; $.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent, scrollIsRootNode = (/(html|body)/i).test(scroll[0].tagName);		// This is another very weird special case that only happens for relative elements:		// 1. If the css position is relative		// 2. and the scroll parent is the document or similar to the offset parent		// we have to refresh the relative offset during the scroll so there are no jumps		if(this.cssPosition === "relative" &amp;&amp; !(this.scrollParent[0] !== document &amp;&amp; this.scrollParent[0] !== this.offsetParent[0])) {			this.offset.relative = this._getRelativeOffset();		}		/*		 * - Position constraining -		 * Constrain the position to a mix of grid, containment.		 */		if(this.originalPosition) { //If we are not dragging yet, we won''t check for options			if(this.containment) {				if(event.pageX - this.offset.click.left &lt; this.containment[0]) {					pageX = this.containment[0] + this.offset.click.left;				}				if(event.pageY - this.offset.click.top &lt; this.containment[1]) {					pageY = this.containment[1] + this.offset.click.top;				}				if(event.pageX - this.offset.click.left &gt; this.containment[2]) {					pageX = this.containment[2] + this.offset.click.left;				}				if(event.pageY - this.offset.click.top &gt; this.containment[3]) {					pageY = this.containment[3] + this.offset.click.top;				}			}			if(o.grid) {				top = this.originalPageY + Math.round((pageY - this.originalPageY) / o.grid[1]) * o.grid[1];				pageY = this.containment ? ( (top - this.offset.click.top &gt;= this.containment[1] &amp;&amp; top - this.offset.click.top &lt;= this.containment[3]) ? top : ((top - this.offset.click.top &gt;= this.containment[1]) ? top - o.grid[1] : top + o.grid[1])) : top;				left = this.originalPageX + Math.round((pageX - this.originalPageX) / o.grid[0]) * o.grid[0];				pageX = this.containment ? ( (left - this.offset.click.left &gt;= this.containment[0] &amp;&amp; left - this.offset.click.left &lt;= this.containment[2]) ? left : ((left - this.offset.click.left &gt;= this.containment[0]) ? left - o.grid[0] : left + o.grid[0])) : left;			}		}		return {			top: (				pageY -																// The absolute mouse position				this.offset.click.top -													// Click offset (relative to the element)				this.offset.relative.top	-											// Only for relative positioned nodes: Relative offset from element to offset parent				this.offset.parent.top +												// The offsetParent''s offset without borders (offset + border)				( ( this.cssPosition === "fixed" ? -this.scrollParent.scrollTop() : ( scrollIsRootNode ? 0 : scroll.scrollTop() ) ))			),			left: (				pageX -																// The absolute mouse position				this.offset.click.left -												// Click offset (relative to the element)				this.offset.relative.left	-											// Only for relative positioned nodes: Relative offset from element to offset parent				this.offset.parent.left +												// The offsetParent''s offset without borders (offset + border)				( ( this.cssPosition === "fixed" ? -this.scrollParent.scrollLeft() : scrollIsRootNode ? 0 : scroll.scrollLeft() ))			)		};	},	_rearrange: function(event, i, a, hardRefresh) {		a ? a[0].appendChild(this.placeholder[0]) : i.item[0].parentNode.insertBefore(this.placeholder[0], (this.direction === "down" ? i.item[0] : i.item[0].nextSibling));		//Various things done here to improve the performance:		// 1. we create a setTimeout, that calls refreshPositions		// 2. on the instance, we have a counter variable, that get''s higher after every append		// 3. on the local scope, we copy the counter variable, and check in the timeout, if it''s still the same		// 4. this lets only the last addition to the timeout stack through		this.counter = this.counter ? ++this.counter : 1;		var counter = this.counter;		this._delay(function() {			if(counter === this.counter) {				this.refreshPositions(!hardRefresh); //Precompute after each DOM insertion, NOT on mousemove			}		});	},	_clear: function(event, noPropagation) {		this.reverting = false;		// We delay all events that have to be triggered to after the point where the placeholder has been removed and		// everything else normalized again		var i,			delayedTriggers = [];		// We first have to update the dom position of the actual currentItem		// Note: don''t do it if the current item is already removed (by a user), or it gets reappended (see #4088)		if(!this._noFinalSort &amp;&amp; this.currentItem.parent().length) {			this.placeholder.before(this.currentItem);		}		this._noFinalSort = null;		if(this.helper[0] === this.currentItem[0]) {			for(i in this._storedCSS) {				if(this._storedCSS[i] === "auto" || this._storedCSS[i] === "static") {					this._storedCSS[i] = "";				}			}			this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper");		} else {			this.currentItem.show();		}		if(this.fromOutside &amp;&amp; !noPropagation) {			delayedTriggers.push(function(event) { this._trigger("receive", event, this._uiHash(this.fromOutside)); });		}		if((this.fromOutside || this.domPosition.prev !== this.currentItem.prev().not(".ui-sortable-helper")[0] || this.domPosition.parent !== this.currentItem.parent()[0]) &amp;&amp; !noPropagation) {			delayedTriggers.push(function(event) { this._trigger("update", event, this._uiHash()); }); //Trigger update callback if the DOM position has changed		}		// Check if the items Container has Changed and trigger appropriate		// events.		if (this !== this.currentContainer) {			if(!noPropagation) {				delayedTriggers.push(function(event) { this._trigger("remove", event, this._uiHash()); });				delayedTriggers.push((function(c) { return function(event) { c._trigger("receive", event, this._uiHash(this)); };  }).call(this, this.currentContainer));				delayedTriggers.push((function(c) { return function(event) { c._trigger("update", event, this._uiHash(this));  }; }).call(this, this.currentContainer));			}		}		//Post events to containers		function delayEvent( type, instance, container ) {			return function( event ) {				container._trigger( type, event, instance._uiHash( instance ) );			};		}		for (i = this.containers.length - 1; i &gt;= 0; i--){			if (!noPropagation) {				delayedTriggers.push( delayEvent( "deactivate", this, this.containers[ i ] ) );			}			if(this.containers[i].containerCache.over) {				delayedTriggers.push( delayEvent( "out", this, this.containers[ i ] ) );				this.containers[i].containerCache.over = 0;			}		}		//Do what was originally in plugins		if ( this.storedCursor ) {			this.document.find( "body" ).css( "cursor", this.storedCursor );			this.storedStylesheet.remove();		}		if(this._storedOpacity) {			this.helper.css("opacity", this._storedOpacity);		}		if(this._storedZIndex) {			this.helper.css("zIndex", this._storedZIndex === "auto" ? "" : this._storedZIndex);		}		this.dragging = false;		if(this.cancelHelperRemoval) {			if(!noPropagation) {				this._trigger("beforeStop", event, this._uiHash());				for (i=0; i &lt; delayedTriggers.length; i++) {					delayedTriggers[i].call(this, event);				} //Trigger all delayed events				this._trigger("stop", event, this._uiHash());			}			this.fromOutside = false;			return false;		}		if(!noPropagation) {			this._trigger("beforeStop", event, this._uiHash());		}		//$(this.placeholder[0]).remove(); would have been the jQuery way - unfortunately, it unbinds ALL events from the original node!		this.placeholder[0].parentNode.removeChild(this.placeholder[0]);		if(this.helper[0] !== this.currentItem[0]) {			this.helper.remove();		}		this.helper = null;		if(!noPropagation) {			for (i=0; i &lt; delayedTriggers.length; i++) {				delayedTriggers[i].call(this, event);			} //Trigger all delayed events			this._trigger("stop", event, this._uiHash());		}		this.fromOutside = false;		return true;	},	_trigger: function() {		if ($.Widget.prototype._trigger.apply(this, arguments) === false) {			this.cancel();		}	},	_uiHash: function(_inst) {		var inst = _inst || this;		return {			helper: inst.helper,			placeholder: inst.placeholder || $([]),			position: inst.position,			originalPosition: inst.originalPosition,			offset: inst.positionAbs,			item: inst.currentItem,			sender: _inst ? _inst.element : null		};	}});})(jQuery);(function($, undefined) {var dataSpace = "ui-effects-";$.effects = {	effect: {}};/*! * jQuery Color Animations v2.1.2 * https://github.com/jquery/jquery-color * * Copyright 2013 jQuery Foundation and other contributors * Released under the MIT license. * http://jquery.org/license * * Date: Wed Jan 16 08:47:09 2013 -0600 */(function( jQuery, undefined ) {	var stepHooks = "backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor",	// plusequals test for += 100 -= 100	rplusequals = /^([\-+])=\s*(\d+\.?\d*)/,	// a set of RE''s that can match strings and generate color tuples.	stringParsers = [{			re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,			parse: function( execResult ) {				return [					execResult[ 1 ],					execResult[ 2 ],					execResult[ 3 ],					execResult[ 4 ]				];			}		}, {			re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,			parse: function( execResult ) {				return [					execResult[ 1 ] * 2.55,					execResult[ 2 ] * 2.55,					execResult[ 3 ] * 2.55,					execResult[ 4 ]				];			}		}, {			// this regex ignores A-F because it''s compared against an already lowercased string			re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,			parse: function( execResult ) {				return [					parseInt( execResult[ 1 ], 16 ),					parseInt( execResult[ 2 ], 16 ),					parseInt( execResult[ 3 ], 16 )				];			}		}, {			// this regex ignores A-F because it''s compared against an already lowercased string			re: /#([a-f0-9])([a-f0-9])([a-f0-9])/,			parse: function( execResult ) {				return [					parseInt( execResult[ 1 ] + execResult[ 1 ], 16 ),					parseInt( execResult[ 2 ] + execResult[ 2 ], 16 ),					parseInt( execResult[ 3 ] + execResult[ 3 ], 16 )				];			}		}, {			re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,			space: "hsla",			parse: function( execResult ) {				return [					execResult[ 1 ],					execResult[ 2 ] / 100,					execResult[ 3 ] / 100,					execResult[ 4 ]				];			}		}],	// jQuery.Color( )	color = jQuery.Color = function( color, green, blue, alpha ) {		return new jQuery.Color.fn.parse( color, green, blue, alpha );	},	spaces = {		rgba: {			props: {				red: {					idx: 0,					type: "byte"				},				green: {					idx: 1,					type: "byte"				},				blue: {					idx: 2,					type: "byte"				}			}		},		hsla: {			props: {				hue: {					idx: 0,					type: "degrees"				},				saturation: {					idx: 1,					type: "percent"				},				lightness: {					idx: 2,					type: "percent"				}			}		}	},	propTypes = {		"byte": {			floor: true,			max: 255		},		"percent": {			max: 1		},		"degrees": {			mod: 360,			floor: true		}	},	support = color.support = {},	// element for support tests	supportElem = jQuery( "&lt;p&gt;" )[ 0 ],	// colors = jQuery.Color.names	colors,	// local aliases of functions called often	each = jQuery.each;// determine rgba support immediatelysupportElem.style.cssText = "background-color:rgba(1,1,1,.5)";support.rgba = supportElem.style.backgroundColor.indexOf( "rgba" ) &gt; -1;// define cache name and alpha properties// for rgba and hsla spaceseach( spaces, function( spaceName, space ) {	space.cache = "_" + spaceName;	space.props.alpha = {		idx: 3,		type: "percent",		def: 1	};});function clamp( value, prop, allowEmpty ) {	var type = propTypes[ prop.type ] || {};	if ( value == null ) {		return (allowEmpty || !prop.def) ? null : prop.def;	}	// ~~ is an short way of doing floor for positive numbers	value = type.floor ? ~~value : parseFloat( value );	// IE will pass in empty strings as value for alpha,	// which will hit this case	if ( isNaN( value ) ) {		return prop.def;	}	if ( type.mod ) {		// we add mod before modding to make sure that negatives values		// get converted properly: -10 -&gt; 350		return (value + type.mod) % type.mod;	}	// for now all property types without mod have min and max	return 0 &gt; value ? 0 : type.max &lt; value ? type.max : value;}function stringParse( string ) {	var inst = color(),		rgba = inst._rgba = [];	string = string.toLowerCase();	each( stringParsers, function( i, parser ) {		var parsed,			match = parser.re.exec( string ),			values = match &amp;&amp; parser.parse( match ),			spaceName = parser.space || "rgba";		if ( values ) {			parsed = inst[ spaceName ]( values );			// if this was an rgba parse the assignment might happen twice			// oh well....			inst[ spaces[ spaceName ].cache ] = parsed[ spaces[ spaceName ].cache ];			rgba = inst._rgba = parsed._rgba;			// exit each( stringParsers ) here because we matched			return false;		}	});	// Found a stringParser that handled it	if ( rgba.length ) {		// if this came from a parsed string, force "transparent" when alpha is 0		// chrome, (and maybe others) return "transparent" as rgba(0,0,0,0)		if ( rgba.join() === "0,0,0,0" ) {			jQuery.extend( rgba, colors.transparent );		}		return inst;	}	// named colors	return colors[ string ];}color.fn = jQuery.extend( color.prototype, {	parse: function( red, green, blue, alpha ) {		if ( red === undefined ) {			this._rgba = [ null, null, null, null ];			return this;		}		if ( red.jquery || red.nodeType ) {			red = jQuery( red ).css( green );			green = undefined;		}		var inst = this,			type = jQuery.type( red ),			rgba = this._rgba = [];		// more than 1 argument specified - assume ( red, green, blue, alpha )		if ( green !== undefined ) {			red = [ red, green, blue, alpha ];			type = "array";		}		if ( type === "string" ) {			return this.parse( stringParse( red ) || colors._default );		}		if ( type === "array" ) {			each( spaces.rgba.props, function( key, prop ) {				rgba[ prop.idx ] = clamp( red[ prop.idx ], prop );			});			return this;		}		if ( type === "object" ) {			if ( red instanceof color ) {				each( spaces, function( spaceName, space ) {					if ( red[ space.cache ] ) {						inst[ space.cache ] = red[ space.cache ].slice();					}				});			} else {				each( spaces, function( spaceName, space ) {					var cache = space.cache;					each( space.props, function( key, prop ) {						// if the cache doesn''t exist, and we know how to convert						if ( !inst[ cache ] &amp;&amp; space.to ) {							// if the value was null, we don''t need to copy it							// if the key was alpha, we don''t need to copy it either							if ( key === "alpha" || red[ key ] == null ) {								return;							}							inst[ cache ] = space.to( inst._rgba );						}						// this is the only case where we allow nulls for ALL properties.						// call clamp with alwaysAllowEmpty						inst[ cache ][ prop.idx ] = clamp( red[ key ], prop, true );					});					// everything defined but alpha?					if ( inst[ cache ] &amp;&amp; jQuery.inArray( null, inst[ cache ].slice( 0, 3 ) ) &lt; 0 ) {						// use the default of 1						inst[ cache ][ 3 ] = 1;						if ( space.from ) {							inst._rgba = space.from( inst[ cache ] );						}					}				});			}			return this;		}	},	is: function( compare ) {		var is = color( compare ),			same = true,			inst = this;		each( spaces, function( _, space ) {			var localCache,				isCache = is[ space.cache ];			if (isCache) {				localCache = inst[ space.cache ] || space.to &amp;&amp; space.to( inst._rgba ) || [];				each( space.props, function( _, prop ) {					if ( isCache[ prop.idx ] != null ) {						same = ( isCache[ prop.idx ] === localCache[ prop.idx ] );						return same;					}				});			}			return same;		});		return same;	},	_space: function() {		var used = [],			inst = this;		each( spaces, function( spaceName, space ) {			if ( inst[ space.cache ] ) {				used.push( spaceName );			}		});		return used.pop();	},	transition: function( other, distance ) {		var end = color( other ),			spaceName = end._space(),			space = spaces[ spaceName ],			startColor = this.alpha() === 0 ? color( "transparent" ) : this,			start = startColor[ space.cache ] || space.to( startColor._rgba ),			result = start.slice();		end = end[ space.cache ];		each( space.props, function( key, prop ) {			var index = prop.idx,				startValue = start[ index ],				endValue = end[ index ],				type = propTypes[ prop.type ] || {};			// if null, don''t override start value			if ( endValue === null ) {				return;			}			// if null - use end			if ( startValue === null ) {				result[ index ] = endValue;			} else {				if ( type.mod ) {					if ( endValue - startValue &gt; type.mod / 2 ) {						startValue += type.mod;					} else if ( startValue - endValue &gt; type.mod / 2 ) {						startValue -= type.mod;					}				}				result[ index ] = clamp( ( endValue - startValue ) * distance + startValue, prop );			}		});		return this[ spaceName ]( result );	},	blend: function( opaque ) {		// if we are already opaque - return ourself		if ( this._rgba[ 3 ] === 1 ) {			return this;		}		var rgb = this._rgba.slice(),			a = rgb.pop(),			blend = color( opaque )._rgba;		return color( jQuery.map( rgb, function( v, i ) {			return ( 1 - a ) * blend[ i ] + a * v;		}));	},	toRgbaString: function() {		var prefix = "rgba(",			rgba = jQuery.map( this._rgba, function( v, i ) {				return v == null ? ( i &gt; 2 ? 1 : 0 ) : v;			});		if ( rgba[ 3 ] === 1 ) {			rgba.pop();			prefix = "rgb(";		}		return prefix + rgba.join() + ")";	},	toHslaString: function() {		var prefix = "hsla(",			hsla = jQuery.map( this.hsla(), function( v, i ) {				if ( v == null ) {					v = i &gt; 2 ? 1 : 0;				}				// catch 1 and 2				if ( i &amp;&amp; i &lt; 3 ) {					v = Math.round( v * 100 ) + "%";				}				return v;			});		if ( hsla[ 3 ] === 1 ) {			hsla.pop();			prefix = "hsl(";		}		return prefix + hsla.join() + ")";	},	toHexString: function( includeAlpha ) {		var rgba = this._rgba.slice(),			alpha = rgba.pop();		if ( includeAlpha ) {			rgba.push( ~~( alpha * 255 ) );		}		return "#" + jQuery.map( rgba, function( v ) {			// default to 0 when nulls exist			v = ( v || 0 ).toString( 16 );			return v.length === 1 ? "0" + v : v;		}).join("");	},	toString: function() {		return this._rgba[ 3 ] === 0 ? "transparent" : this.toRgbaString();	}});color.fn.parse.prototype = color.fn;// hsla conversions adapted from:// https://code.google.com/p/maashaack/source/browse/packages/graphics/trunk/src/graphics/colors/HUE2RGB.as?r=5021function hue2rgb( p, q, h ) {	h = ( h + 1 ) % 1;	if ( h * 6 &lt; 1 ) {		return p + (q - p) * h * 6;	}	if ( h * 2 &lt; 1) {		return q;	}	if ( h * 3 &lt; 2 ) {		return p + (q - p) * ((2/3) - h) * 6;	}	return p;}spaces.hsla.to = function ( rgba ) {	if ( rgba[ 0 ] == null || rgba[ 1 ] == null || rgba[ 2 ] == null ) {		return [ null, null, null, rgba[ 3 ] ];	}	var r = rgba[ 0 ] / 255,		g = rgba[ 1 ] / 255,		b = rgba[ 2 ] / 255,		a = rgba[ 3 ],		max = Math.max( r, g, b ),		min = Math.min( r, g, b ),		diff = max - min,		add = max + min,		l = add * 0.5,		h, s;	if ( min === max ) {		h = 0;	} else if ( r === max ) {		h = ( 60 * ( g - b ) / diff ) + 360;	} else if ( g === max ) {		h = ( 60 * ( b - r ) / diff ) + 120;	} else {		h = ( 60 * ( r - g ) / diff ) + 240;	}	// chroma (diff) == 0 means greyscale which, by definition, saturation = 0%	// otherwise, saturation is based on the ratio of chroma (diff) to lightness (add)	if ( diff === 0 ) {		s = 0;	} else if ( l &lt;= 0.5 ) {		s = diff / add;	} else {		s = diff / ( 2 - add );	}	return [ Math.round(h) % 360, s, l, a == null ? 1 : a ];};spaces.hsla.from = function ( hsla ) {	if ( hsla[ 0 ] == null || hsla[ 1 ] == null || hsla[ 2 ] == null ) {		return [ null, null, null, hsla[ 3 ] ];	}	var h = hsla[ 0 ] / 360,		s = hsla[ 1 ],		l = hsla[ 2 ],		a = hsla[ 3 ],		q = l &lt;= 0.5 ? l * ( 1 + s ) : l + s - l * s,		p = 2 * l - q;	return [		Math.round( hue2rgb( p, q, h + ( 1 / 3 ) ) * 255 ),		Math.round( hue2rgb( p, q, h ) * 255 ),		Math.round( hue2rgb( p, q, h - ( 1 / 3 ) ) * 255 ),		a	];};each( spaces, function( spaceName, space ) {	var props = space.props,		cache = space.cache,		to = space.to,		from = space.from;	// makes rgba() and hsla()	color.fn[ spaceName ] = function( value ) {		// generate a cache for this space if it doesn''t exist		if ( to &amp;&amp; !this[ cache ] ) {			this[ cache ] = to( this._rgba );		}		if ( value === undefined ) {			return this[ cache ].slice();		}		var ret,			type = jQuery.type( value ),			arr = ( type === "array" || type === "object" ) ? value : arguments,			local = this[ cache ].slice();		each( props, function( key, prop ) {			var val = arr[ type === "object" ? key : prop.idx ];			if ( val == null ) {				val = local[ prop.idx ];			}			local[ prop.idx ] = clamp( val, prop );		});		if ( from ) {			ret = color( from( local ) );			ret[ cache ] = local;			return ret;		} else {			return color( local );		}	};	// makes red() green() blue() alpha() hue() saturation() lightness()	each( props, function( key, prop ) {		// alpha is included in more than one space		if ( color.fn[ key ] ) {			return;		}		color.fn[ key ] = function( value ) {			var vtype = jQuery.type( value ),				fn = ( key === "alpha" ? ( this._hsla ? "hsla" : "rgba" ) : spaceName ),				local = this[ fn ](),				cur = local[ prop.idx ],				match;			if ( vtype === "undefined" ) {				return cur;			}			if ( vtype === "function" ) {				value = value.call( this, cur );				vtype = jQuery.type( value );			}			if ( value == null &amp;&amp; prop.empty ) {				return this;			}			if ( vtype === "string" ) {				match = rplusequals.exec( value );				if ( match ) {					value = cur + parseFloat( match[ 2 ] ) * ( match[ 1 ] === "+" ? 1 : -1 );				}			}			local[ prop.idx ] = value;			return this[ fn ]( local );		};	});});// add cssHook and .fx.step function for each named hook.// accept a space separated string of propertiescolor.hook = function( hook ) {	var hooks = hook.split( " " );	each( hooks, function( i, hook ) {		jQuery.cssHooks[ hook ] = {			set: function( elem, value ) {				var parsed, curElem,					backgroundColor = "";				if ( value !== "transparent" &amp;&amp; ( jQuery.type( value ) !== "string" || ( parsed = stringParse( value ) ) ) ) {					value = color( parsed || value );					if ( !support.rgba &amp;&amp; value._rgba[ 3 ] !== 1 ) {						curElem = hook === "backgroundColor" ? elem.parentNode : elem;						while (							(backgroundColor === "" || backgroundColor === "transparent") &amp;&amp;							curElem &amp;&amp; curElem.style						) {							try {								backgroundColor = jQuery.css( curElem, "backgroundColor" );								curElem = curElem.parentNode;							} catch ( e ) {							}						}						value = value.blend( backgroundColor &amp;&amp; backgroundColor !== "transparent" ?							backgroundColor :							"_default" );					}					value = value.toRgbaString();				}				try {					elem.style[ hook ] = value;				} catch( e ) {					// wrapped to prevent IE from throwing errors on "invalid" values like ''auto'' or ''inherit''				}			}		};		jQuery.fx.step[ hook ] = function( fx ) {			if ( !fx.colorInit ) {				fx.start = color( fx.elem, hook );				fx.end = color( fx.end );				fx.colorInit = true;			}			jQuery.cssHooks[ hook ].set( fx.elem, fx.start.transition( fx.end, fx.pos ) );		};	});};color.hook( stepHooks );jQuery.cssHooks.borderColor = {	expand: function( value ) {		var expanded = {};		each( [ "Top", "Right", "Bottom", "Left" ], function( i, part ) {			expanded[ "border" + part + "Color" ] = value;		});		return expanded;	}};// Basic color names only.// Usage of any of the other color names requires adding yourself or including// jquery.color.svg-names.js.colors = jQuery.Color.names = {	// 4.1. Basic color keywords	aqua: "#00ffff",	black: "#000000",	blue: "#0000ff",	fuchsia: "#ff00ff",	gray: "#808080",	green: "#008000",	lime: "#00ff00",	maroon: "#800000",	navy: "#000080",	olive: "#808000",	purple: "#800080",	red: "#ff0000",	silver: "#c0c0c0",	teal: "#008080",	white: "#ffffff",	yellow: "#ffff00",	// 4.2.3. "transparent" color keyword	transparent: [ null, null, null, 0 ],	_default: "#ffffff"};})( jQuery );/******************************************************************************//****************************** CLASS ANIMATIONS ******************************//******************************************************************************/(function() {var classAnimationActions = [ "add", "remove", "toggle" ],	shorthandStyles = {		border: 1,		borderBottom: 1,		borderColor: 1,		borderLeft: 1,		borderRight: 1,		borderTop: 1,		borderWidth: 1,		margin: 1,		padding: 1	};$.each([ "borderLeftStyle", "borderRightStyle", "borderBottomStyle", "borderTopStyle" ], function( _, prop ) {	$.fx.step[ prop ] = function( fx ) {		if ( fx.end !== "none" &amp;&amp; !fx.setAttr || fx.pos === 1 &amp;&amp; !fx.setAttr ) {			jQuery.style( fx.elem, prop, fx.end );			fx.setAttr = true;		}	};});function getElementStyles( elem ) {	var key, len,		style = elem.ownerDocument.defaultView ?			elem.ownerDocument.defaultView.getComputedStyle( elem, null ) :			elem.currentStyle,		styles = {};	if ( style &amp;&amp; style.length &amp;&amp; style[ 0 ] &amp;&amp; style[ style[ 0 ] ] ) {		len = style.length;		while ( len-- ) {			key = style[ len ];			if ( typeof style[ key ] === "string" ) {				styles[ $.camelCase( key ) ] = style[ key ];			}		}	// support: Opera, IE &lt;9	} else {		for ( key in style ) {			if ( typeof style[ key ] === "string" ) {				styles[ key ] = style[ key ];			}		}	}	return styles;}function styleDifference( oldStyle, newStyle ) {	var diff = {},		name, value;	for ( name in newStyle ) {		value = newStyle[ name ];		if ( oldStyle[ name ] !== value ) {			if ( !shorthandStyles[ name ] ) {				if ( $.fx.step[ name ] || !isNaN( parseFloat( value ) ) ) {					diff[ name ] = value;				}			}		}	}	return diff;}// support: jQuery &lt;1.8if ( !$.fn.addBack ) {	$.fn.addBack = function( selector ) {		return this.add( selector == null ?			this.prevObject : this.prevObject.filter( selector )		);	};}$.effects.animateClass = function( value, duration, easing, callback ) {	var o = $.speed( duration, easing, callback );	return this.queue( function() {		var animated = $( this ),			baseClass = animated.attr( "class" ) || "",			applyClassChange,			allAnimations = o.children ? animated.find( "*" ).addBack() : animated;		// map the animated objects to store the original styles.		allAnimations = allAnimations.map(function() {			var el = $( this );			return {				el: el,				start: getElementStyles( this )			};		});		// apply class change		applyClassChange = function() {			$.each( classAnimationActions, function(i, action) {				if ( value[ action ] ) {					animated[ action + "Class" ]( value[ action ] );				}			});		};		applyClassChange();		// map all animated objects again - calculate new styles and diff		allAnimations = allAnimations.map(function() {			this.end = getElementStyles( this.el[ 0 ] );			this.diff = styleDifference( this.start, this.end );			return this;		});		// apply original class		animated.attr( "class", baseClass );		// map all animated objects again - this time collecting a promise		allAnimations = allAnimations.map(function() {			var styleInfo = this,				dfd = $.Deferred(),				opts = $.extend({}, o, {					queue: false,					complete: function() {						dfd.resolve( styleInfo );					}				});			this.el.animate( this.diff, opts );			return dfd.promise();		});		// once all animations have completed:		$.when.apply( $, allAnimations.get() ).done(function() {			// set the final class			applyClassChange();			// for each animated element,			// clear all css properties that were animated			$.each( arguments, function() {				var el = this.el;				$.each( this.diff, function(key) {					el.css( key, "" );				});			});			// this is guarnteed to be there if you use jQuery.speed()			// it also handles dequeuing the next anim...			o.complete.call( animated[ 0 ] );		});	});};$.fn.extend({	addClass: (function( orig ) {		return function( classNames, speed, easing, callback ) {			return speed ?				$.effects.animateClass.call( this,					{ add: classNames }, speed, easing, callback ) :				orig.apply( this, arguments );		};	})( $.fn.addClass ),	removeClass: (function( orig ) {		return function( classNames, speed, easing, callback ) {			return arguments.length &gt; 1 ?				$.effects.animateClass.call( this,					{ remove: classNames }, speed, easing, callback ) :				orig.apply( this, arguments );		};	})( $.fn.removeClass ),	toggleClass: (function( orig ) {		return function( classNames, force, speed, easing, callback ) {			if ( typeof force === "boolean" || force === undefined ) {				if ( !speed ) {					// without speed parameter					return orig.apply( this, arguments );				} else {					return $.effects.animateClass.call( this,						(force ? { add: classNames } : { remove: classNames }),						speed, easing, callback );				}			} else {				// without force parameter				return $.effects.animateClass.call( this,					{ toggle: classNames }, force, speed, easing );			}		};	})( $.fn.toggleClass ),	switchClass: function( remove, add, speed, easing, callback) {		return $.effects.animateClass.call( this, {			add: add,			remove: remove		}, speed, easing, callback );	}});})();/******************************************************************************//*********************************** EFFECTS **********************************//******************************************************************************/(function() {$.extend( $.effects, {	version: "1.10.4",	// Saves a set of properties in a data storage	save: function( element, set ) {		for( var i=0; i &lt; set.length; i++ ) {			if ( set[ i ] !== null ) {				element.data( dataSpace + set[ i ], element[ 0 ].style[ set[ i ] ] );			}		}	},	// Restores a set of previously saved properties from a data storage	restore: function( element, set ) {		var val, i;		for( i=0; i &lt; set.length; i++ ) {			if ( set[ i ] !== null ) {				val = element.data( dataSpace + set[ i ] );				// support: jQuery 1.6.2				// http://bugs.jquery.com/ticket/9917				// jQuery 1.6.2 incorrectly returns undefined for any falsy value.				// We can''t differentiate between "" and 0 here, so we just assume				// empty string since it''s likely to be a more common value...				if ( val === undefined ) {					val = "";				}				element.css( set[ i ], val );			}		}	},	setMode: function( el, mode ) {		if (mode === "toggle") {			mode = el.is( ":hidden" ) ? "show" : "hide";		}		return mode;	},	// Translates a [top,left] array into a baseline value	// this should be a little more flexible in the future to handle a string &amp; hash	getBaseline: function( origin, original ) {		var y, x;		switch ( origin[ 0 ] ) {			case "top": y = 0; break;			case "middle": y = 0.5; break;			case "bottom": y = 1; break;			default: y = origin[ 0 ] / original.height;		}		switch ( origin[ 1 ] ) {			case "left": x = 0; break;			case "center": x = 0.5; break;			case "right": x = 1; break;			default: x = origin[ 1 ] / original.width;		}		return {			x: x,			y: y		};	},	// Wraps the element around a wrapper that copies position properties	createWrapper: function( element ) {		// if the element is already wrapped, return it		if ( element.parent().is( ".ui-effects-wrapper" )) {			return element.parent();		}		// wrap the element		var props = {				width: element.outerWidth(true),				height: element.outerHeight(true),				"float": element.css( "float" )			},			wrapper = $( "&lt;div&gt;&lt;/div&gt;" )				.addClass( "ui-effects-wrapper" )				.css({					fontSize: "100%",					background: "transparent",					border: "none",					margin: 0,					padding: 0				}),			// Store the size in case width/height are defined in % - Fixes #5245			size = {				width: element.width(),				height: element.height()			},			active = document.activeElement;		// support: Firefox		// Firefox incorrectly exposes anonymous content		// https://bugzilla.mozilla.org/show_bug.cgi?id=561664		try {			active.id;		} catch( e ) {			active = document.body;		}		element.wrap( wrapper );		// Fixes #7595 - Elements lose focus when wrapped.		if ( element[ 0 ] === active || $.contains( element[ 0 ], active ) ) {			$( active ).focus();		}		wrapper = element.parent(); //Hotfix for jQuery 1.4 since some change in wrap() seems to actually lose the reference to the wrapped element		// transfer positioning properties to the wrapper		if ( element.css( "position" ) === "static" ) {			wrapper.css({ position: "relative" });			element.css({ position: "relative" });		} else {			$.extend( props, {				position: element.css( "position" ),				zIndex: element.css( "z-index" )			});			$.each([ "top", "left", "bottom", "right" ], function(i, pos) {				props[ pos ] = element.css( pos );				if ( isNaN( parseInt( props[ pos ], 10 ) ) ) {					props[ pos ] = "auto";				}			});			element.css({				position: "relative",				top: 0,				left: 0,				right: "auto",				bottom: "auto"			});		}		element.css(size);		return wrapper.css( props ).show();	},	removeWrapper: function( element ) {		var active = document.activeElement;		if ( element.parent().is( ".ui-effects-wrapper" ) ) {			element.parent().replaceWith( element );			// Fixes #7595 - Elements lose focus when wrapped.			if ( element[ 0 ] === active || $.contains( element[ 0 ], active ) ) {				$( active ).focus();			}		}		return element;	},	setTransition: function( element, list, factor, value ) {		value = value || {};		$.each( list, function( i, x ) {			var unit = element.cssUnit( x );			if ( unit[ 0 ] &gt; 0 ) {				value[ x ] = unit[ 0 ] * factor + unit[ 1 ];			}		});		return value;	}});// return an effect options object for the given parameters:function _normalizeArguments( effect, options, speed, callback ) {	// allow passing all options as the first parameter	if ( $.isPlainObject( effect ) ) {		options = effect;		effect = effect.effect;	}	// convert to an object	effect = { effect: effect };	// catch (effect, null, ...)	if ( options == null ) {		options = {};	}	// catch (effect, callback)	if ( $.isFunction( options ) ) {		callback = options;		speed = null;		options = {};	}	// catch (effect, speed, ?)	if ( typeof options === "number" || $.fx.speeds[ options ] ) {		callback = speed;		speed = options;		options = {};	}	// catch (effect, options, callback)	if ( $.isFunction( speed ) ) {		callback = speed;		speed = null;	}	// add options to effect	if ( options ) {		$.extend( effect, options );	}	speed = speed || options.duration;	effect.duration = $.fx.off ? 0 :		typeof speed === "number" ? speed :		speed in $.fx.speeds ? $.fx.speeds[ speed ] :		$.fx.speeds._default;	effect.complete = callback || options.complete;	return effect;}function standardAnimationOption( option ) {	// Valid standard speeds (nothing, number, named speed)	if ( !option || typeof option === "number" || $.fx.speeds[ option ] ) {		return true;	}	// Invalid strings - treat as "normal" speed	if ( typeof option === "string" &amp;&amp; !$.effects.effect[ option ] ) {		return true;	}	// Complete callback	if ( $.isFunction( option ) ) {		return true;	}	// Options hash (but not naming an effect)	if ( typeof option === "object" &amp;&amp; !option.effect ) {		return true;	}	// Didn''t match any standard API	return false;}$.fn.extend({	effect: function( /* effect, options, speed, callback */ ) {		var args = _normalizeArguments.apply( this, arguments ),			mode = args.mode,			queue = args.queue,			effectMethod = $.effects.effect[ args.effect ];		if ( $.fx.off || !effectMethod ) {			// delegate to the original method (e.g., .show()) if possible			if ( mode ) {				return this[ mode ]( args.duration, args.complete );			} else {				return this.each( function() {					if ( args.complete ) {						args.complete.call( this );					}				});			}		}		function run( next ) {			var elem = $( this ),				complete = args.complete,				mode = args.mode;			function done() {				if ( $.isFunction( complete ) ) {					complete.call( elem[0] );				}				if ( $.isFunction( next ) ) {					next();				}			}			// If the element already has the correct final state, delegate to			// the core methods so the internal tracking of "olddisplay" works.			if ( elem.is( ":hidden" ) ? mode === "hide" : mode === "show" ) {				elem[ mode ]();				done();			} else {				effectMethod.call( elem[0], args, done );			}		}		return queue === false ? this.each( run ) : this.queue( queue || "fx", run );	},	show: (function( orig ) {		return function( option ) {			if ( standardAnimationOption( option ) ) {				return orig.apply( this, arguments );			} else {				var args = _normalizeArguments.apply( this, arguments );				args.mode = "show";				return this.effect.call( this, args );			}		};	})( $.fn.show ),	hide: (function( orig ) {		return function( option ) {			if ( standardAnimationOption( option ) ) {				return orig.apply( this, arguments );			} else {				var args = _normalizeArguments.apply( this, arguments );				args.mode = "hide";				return this.effect.call( this, args );			}		};	})( $.fn.hide ),	toggle: (function( orig ) {		return function( option ) {			if ( standardAnimationOption( option ) || typeof option === "boolean" ) {				return orig.apply( this, arguments );			} else {				var args = _normalizeArguments.apply( this, arguments );				args.mode = "toggle";				return this.effect.call( this, args );			}		};	})( $.fn.toggle ),	// helper functions	cssUnit: function(key) {		var style = this.css( key ),			val = [];		$.each( [ "em", "px", "%", "pt" ], function( i, unit ) {			if ( style.indexOf( unit ) &gt; 0 ) {				val = [ parseFloat( style ), unit ];			}		});		return val;	}});})();/******************************************************************************//*********************************** EASING ***********************************//******************************************************************************/(function() {// based on easing equations from Robert Penner (http://www.robertpenner.com/easing)var baseEasings = {};$.each( [ "Quad", "Cubic", "Quart", "Quint", "Expo" ], function( i, name ) {	baseEasings[ name ] = function( p ) {		return Math.pow( p, i + 2 );	};});$.extend( baseEasings, {	Sine: function ( p ) {		return 1 - Math.cos( p * Math.PI / 2 );	},	Circ: function ( p ) {		return 1 - Math.sqrt( 1 - p * p );	},	Elastic: function( p ) {		return p === 0 || p === 1 ? p :			-Math.pow( 2, 8 * (p - 1) ) * Math.sin( ( (p - 1) * 80 - 7.5 ) * Math.PI / 15 );	},	Back: function( p ) {		return p * p * ( 3 * p - 2 );	},	Bounce: function ( p ) {		var pow2,			bounce = 4;		while ( p &lt; ( ( pow2 = Math.pow( 2, --bounce ) ) - 1 ) / 11 ) {}		return 1 / Math.pow( 4, 3 - bounce ) - 7.5625 * Math.pow( ( pow2 * 3 - 2 ) / 22 - p, 2 );	}});$.each( baseEasings, function( name, easeIn ) {	$.easing[ "easeIn" + name ] = easeIn;	$.easing[ "easeOut" + name ] = function( p ) {		return 1 - easeIn( 1 - p );	};	$.easing[ "easeInOut" + name ] = function( p ) {		return p &lt; 0.5 ?			easeIn( p * 2 ) / 2 :			1 - easeIn( p * -2 + 2 ) / 2;	};});})();})(jQuery);(function( $, undefined ) {var uid = 0,	hideProps = {},	showProps = {};hideProps.height = hideProps.paddingTop = hideProps.paddingBottom =	hideProps.borderTopWidth = hideProps.borderBottomWidth = "hide";showProps.height = showProps.paddingTop = showProps.paddingBottom =	showProps.borderTopWidth = showProps.borderBottomWidth = "show";$.widget( "ui.accordion", {	version: "1.10.4",	options: {		active: 0,		animate: {},		collapsible: false,		event: "click",		header: "&gt; li &gt; :first-child,&gt; :not(li):even",		heightStyle: "auto",		icons: {			activeHeader: "ui-icon-triangle-1-s",			header: "ui-icon-triangle-1-e"		},		// callbacks		activate: null,		beforeActivate: null	},	_create: function() {		var options = this.options;		this.prevShow = this.prevHide = $();		this.element.addClass( "ui-accordion ui-widget ui-helper-reset" )			// ARIA			.attr( "role", "tablist" );		// don''t allow collapsible: false and active: false / null		if ( !options.collapsible &amp;&amp; (options.active === false || options.active == null) ) {			options.active = 0;		}		this._processPanels();		// handle negative values		if ( options.active &lt; 0 ) {			options.active += this.headers.length;		}		this._refresh();	},	_getCreateEventData: function() {		return {			header: this.active,			panel: !this.active.length ? $() : this.active.next(),			content: !this.active.length ? $() : this.active.next()		};	},	_createIcons: function() {		var icons = this.options.icons;		if ( icons ) {			$( "&lt;span&gt;" )				.addClass( "ui-accordion-header-icon ui-icon " + icons.header )				.prependTo( this.headers );			this.active.children( ".ui-accordion-header-icon" )				.removeClass( icons.header )				.addClass( icons.activeHeader );			this.headers.addClass( "ui-accordion-icons" );		}	},	_destroyIcons: function() {		this.headers			.removeClass( "ui-accordion-icons" )			.children( ".ui-accordion-header-icon" )				.remove();	},	_destroy: function() {		var contents;		// clean up main element		this.element			.removeClass( "ui-accordion ui-widget ui-helper-reset" )			.removeAttr( "role" );		// clean up headers		this.headers			.removeClass( "ui-accordion-header ui-accordion-header-active ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top" )			.removeAttr( "role" )			.removeAttr( "aria-expanded" )			.removeAttr( "aria-selected" )			.removeAttr( "aria-controls" )			.removeAttr( "tabIndex" )			.each(function() {				if ( /^ui-accordion/.test( this.id ) ) {					this.removeAttribute( "id" );				}			});		this._destroyIcons();		// clean up content panels		contents = this.headers.next()			.css( "display", "" )			.removeAttr( "role" )			.removeAttr( "aria-hidden" )			.removeAttr( "aria-labelledby" )			.removeClass( "ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-state-disabled" )			.each(function() {				if ( /^ui-accordion/.test( this.id ) ) {					this.removeAttribute( "id" );				}			});		if ( this.options.heightStyle !== "content" ) {			contents.css( "height", "" );		}	},	_setOption: function( key, value ) {		if ( key === "active" ) {			// _activate() will handle invalid values and update this.options			this._activate( value );			return;		}		if ( key === "event" ) {			if ( this.options.event ) {				this._off( this.headers, this.options.event );			}			this._setupEvents( value );		}		this._super( key, value );		// setting collapsible: false while collapsed; open first panel		if ( key === "collapsible" &amp;&amp; !value &amp;&amp; this.options.active === false ) {			this._activate( 0 );		}		if ( key === "icons" ) {			this._destroyIcons();			if ( value ) {				this._createIcons();			}		}		// #5332 - opacity doesn''t cascade to positioned elements in IE		// so we need to add the disabled class to the headers and panels		if ( key === "disabled" ) {			this.headers.add( this.headers.next() )				.toggleClass( "ui-state-disabled", !!value );		}	},	_keydown: function( event ) {		if ( event.altKey || event.ctrlKey ) {			return;		}		var keyCode = $.ui.keyCode,			length = this.headers.length,			currentIndex = this.headers.index( event.target ),			toFocus = false;		switch ( event.keyCode ) {			case keyCode.RIGHT:			case keyCode.DOWN:				toFocus = this.headers[ ( currentIndex + 1 ) % length ];				break;			case keyCode.LEFT:			case keyCode.UP:				toFocus = this.headers[ ( currentIndex - 1 + length ) % length ];				break;			case keyCode.SPACE:			case keyCode.ENTER:				this._eventHandler( event );				break;			case keyCode.HOME:				toFocus = this.headers[ 0 ];				break;			case keyCode.END:				toFocus = this.headers[ length - 1 ];				break;		}		if ( toFocus ) {			$( event.target ).attr( "tabIndex", -1 );			$( toFocus ).attr( "tabIndex", 0 );			toFocus.focus();			event.preventDefault();		}	},	_panelKeyDown : function( event ) {		if ( event.keyCode === $.ui.keyCode.UP &amp;&amp; event.ctrlKey ) {			$( event.currentTarget ).prev().focus();		}	},	refresh: function() {		var options = this.options;		this._processPanels();		// was collapsed or no panel		if ( ( options.active === false &amp;&amp; options.collapsible === true ) || !this.headers.length ) {			options.active = false;			this.active = $();		// active false only when collapsible is true		} else if ( options.active === false ) {			this._activate( 0 );		// was active, but active panel is gone		} else if ( this.active.length &amp;&amp; !$.contains( this.element[ 0 ], this.active[ 0 ] ) ) {			// all remaining panel are disabled			if ( this.headers.length === this.headers.find(".ui-state-disabled").length ) {				options.active = false;				this.active = $();			// activate previous panel			} else {				this._activate( Math.max( 0, options.active - 1 ) );			}		// was active, active panel still exists		} else {			// make sure active index is correct			options.active = this.headers.index( this.active );		}		this._destroyIcons();		this._refresh();	},	_processPanels: function() {		this.headers = this.element.find( this.options.header )			.addClass( "ui-accordion-header ui-helper-reset ui-state-default ui-corner-all" );		this.headers.next()			.addClass( "ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom" )			.filter(":not(.ui-accordion-content-active)")			.hide();	},	_refresh: function() {		var maxHeight,			options = this.options,			heightStyle = options.heightStyle,			parent = this.element.parent(),			accordionId = this.accordionId = "ui-accordion-" +				(this.element.attr( "id" ) || ++uid);		this.active = this._findActive( options.active )			.addClass( "ui-accordion-header-active ui-state-active ui-corner-top" )			.removeClass( "ui-corner-all" );		this.active.next()			.addClass( "ui-accordion-content-active" )			.show();		this.headers			.attr( "role", "tab" )			.each(function( i ) {				var header = $( this ),					headerId = header.attr( "id" ),					panel = header.next(),					panelId = panel.attr( "id" );				if ( !headerId ) {					headerId = accordionId + "-header-" + i;					header.attr( "id", headerId );				}				if ( !panelId ) {					panelId = accordionId + "-panel-" + i;					panel.attr( "id", panelId );				}				header.attr( "aria-controls", panelId );				panel.attr( "aria-labelledby", headerId );			})			.next()				.attr( "role", "tabpanel" );		this.headers			.not( this.active )			.attr({				"aria-selected": "false",				"aria-expanded": "false",				tabIndex: -1			})			.next()				.attr({					"aria-hidden": "true"				})				.hide();		// make sure at least one header is in the tab order		if ( !this.active.length ) {			this.headers.eq( 0 ).attr( "tabIndex", 0 );		} else {			this.active.attr({				"aria-selected": "true",				"aria-expanded": "true",				tabIndex: 0			})			.next()				.attr({					"aria-hidden": "false"				});		}		this._createIcons();		this._setupEvents( options.event );		if ( heightStyle === "fill" ) {			maxHeight = parent.height();			this.element.siblings( ":visible" ).each(function() {				var elem = $( this ),					position = elem.css( "position" );				if ( position === "absolute" || position === "fixed" ) {					return;				}				maxHeight -= elem.outerHeight( true );			});			this.headers.each(function() {				maxHeight -= $( this ).outerHeight( true );			});			this.headers.next()				.each(function() {					$( this ).height( Math.max( 0, maxHeight -						$( this ).innerHeight() + $( this ).height() ) );				})				.css( "overflow", "auto" );		} else if ( heightStyle === "auto" ) {			maxHeight = 0;			this.headers.next()				.each(function() {					maxHeight = Math.max( maxHeight, $( this ).css( "height", "" ).height() );				})				.height( maxHeight );		}	},	_activate: function( index ) {		var active = this._findActive( index )[ 0 ];		// trying to activate the already active panel		if ( active === this.active[ 0 ] ) {			return;		}		// trying to collapse, simulate a click on the currently active header		active = active || this.active[ 0 ];		this._eventHandler({			target: active,			currentTarget: active,			preventDefault: $.noop		});	},	_findActive: function( selector ) {		return typeof selector === "number" ? this.headers.eq( selector ) : $();	},	_setupEvents: function( event ) {		var events = {			keydown: "_keydown"		};		if ( event ) {			$.each( event.split(" "), function( index, eventName ) {				events[ eventName ] = "_eventHandler";			});		}		this._off( this.headers.add( this.headers.next() ) );		this._on( this.headers, events );		this._on( this.headers.next(), { keydown: "_panelKeyDown" });		this._hoverable( this.headers );		this._focusable( this.headers );	},	_eventHandler: function( event ) {		var options = this.options,			active = this.active,			clicked = $( event.currentTarget ),			clickedIsActive = clicked[ 0 ] === active[ 0 ],			collapsing = clickedIsActive &amp;&amp; options.collapsible,			toShow = collapsing ? $() : clicked.next(),			toHide = active.next(),			eventData = {				oldHeader: active,				oldPanel: toHide,				newHeader: collapsing ? $() : clicked,				newPanel: toShow			};		event.preventDefault();		if (				// click on active header, but not collapsible				( clickedIsActive &amp;&amp; !options.collapsible ) ||				// allow canceling activation				( this._trigger( "beforeActivate", event, eventData ) === false ) ) {			return;		}		options.active = collapsing ? false : this.headers.index( clicked );		// when the call to ._toggle() comes after the class changes		// it causes a very odd bug in IE 8 (see #6720)		this.active = clickedIsActive ? $() : clicked;		this._toggle( eventData );		// switch classes		// corner classes on the previously active header stay after the animation		active.removeClass( "ui-accordion-header-active ui-state-active" );		if ( options.icons ) {			active.children( ".ui-accordion-header-icon" )				.removeClass( options.icons.activeHeader )				.addClass( options.icons.header );		}		if ( !clickedIsActive ) {			clicked				.removeClass( "ui-corner-all" )				.addClass( "ui-accordion-header-active ui-state-active ui-corner-top" );			if ( options.icons ) {				clicked.children( ".ui-accordion-header-icon" )					.removeClass( options.icons.header )					.addClass( options.icons.activeHeader );			}			clicked				.next()				.addClass( "ui-accordion-content-active" );		}	},	_toggle: function( data ) {		var toShow = data.newPanel,			toHide = this.prevShow.length ? this.prevShow : data.oldPanel;		// handle activating a panel during the animation for another activation		this.prevShow.add( this.prevHide ).stop( true, true );		this.prevShow = toShow;		this.prevHide = toHide;		if ( this.options.animate ) {			this._animate( toShow, toHide, data );		} else {			toHide.hide();			toShow.show();			this._toggleComplete( data );		}		toHide.attr({			"aria-hidden": "true"		});		toHide.prev().attr( "aria-selected", "false" );		// if we''re switching panels, remove the old header from the tab order		// if we''re opening from collapsed state, remove the previous header from the tab order		// if we''re collapsing, then keep the collapsing header in the tab order		if ( toShow.length &amp;&amp; toHide.length ) {			toHide.prev().attr({				"tabIndex": -1,				"aria-expanded": "false"			});		} else if ( toShow.length ) {			this.headers.filter(function() {				return $( this ).attr( "tabIndex" ) === 0;			})			.attr( "tabIndex", -1 );		}		toShow			.attr( "aria-hidden", "false" )			.prev()				.attr({					"aria-selected": "true",					tabIndex: 0,					"aria-expanded": "true"				});	},	_animate: function( toShow, toHide, data ) {		var total, easing, duration,			that = this,			adjust = 0,			down = toShow.length &amp;&amp;				( !toHide.length || ( toShow.index() &lt; toHide.index() ) ),			animate = this.options.animate || {},			options = down &amp;&amp; animate.down || animate,			complete = function() {				that._toggleComplete( data );			};		if ( typeof options === "number" ) {			duration = options;		}		if ( typeof options === "string" ) {			easing = options;		}		// fall back from options to animation in case of partial down settings		easing = easing || options.easing || animate.easing;		duration = duration || options.duration || animate.duration;		if ( !toHide.length ) {			return toShow.animate( showProps, duration, easing, complete );		}		if ( !toShow.length ) {			return toHide.animate( hideProps, duration, easing, complete );		}		total = toShow.show().outerHeight();		toHide.animate( hideProps, {			duration: duration,			easing: easing,			step: function( now, fx ) {				fx.now = Math.round( now );			}		});		toShow			.hide()			.animate( showProps, {				duration: duration,				easing: easing,				complete: complete,				step: function( now, fx ) {					fx.now = Math.round( now );					if ( fx.prop !== "height" ) {						adjust += fx.now;					} else if ( that.options.heightStyle !== "content" ) {						fx.now = Math.round( total - toHide.outerHeight() - adjust );						adjust = 0;					}				}			});	},	_toggleComplete: function( data ) {		var toHide = data.oldPanel;		toHide			.removeClass( "ui-accordion-content-active" )			.prev()				.removeClass( "ui-corner-top" )				.addClass( "ui-corner-all" );		// Work around for rendering bug in IE (#5421)		if ( toHide.length ) {			toHide.parent()[0].className = toHide.parent()[0].className;		}		this._trigger( "activate", null, data );	}});})( jQuery );(function( $, undefined ) {$.widget( "ui.autocomplete", {	version: "1.10.4",	defaultElement: "&lt;input&gt;",	options: {		appendTo: null,		autoFocus: false,		delay: 300,		minLength: 1,		position: {			my: "left top",			at: "left bottom",			collision: "none"		},		source: null,		// callbacks		change: null,		close: null,		focus: null,		open: null,		response: null,		search: null,		select: null	},	requestIndex: 0,	pending: 0,	_create: function() {		// Some browsers only repeat keydown events, not keypress events,		// so we use the suppressKeyPress flag to determine if we''ve already		// handled the keydown event. #7269		// Unfortunately the code for &amp; in keypress is the same as the up arrow,		// so we use the suppressKeyPressRepeat flag to avoid handling keypress		// events when we know the keydown event was used to modify the		// search term. #7799		var suppressKeyPress, suppressKeyPressRepeat, suppressInput,			nodeName = this.element[0].nodeName.toLowerCase(),			isTextarea = nodeName === "textarea",			isInput = nodeName === "input";		this.isMultiLine =			// Textareas are always multi-line			isTextarea ? true :			// Inputs are always single-line, even if inside a contentEditable element			// IE also treats inputs as contentEditable			isInput ? false :			// All other element types are determined by whether or not they''re contentEditable			this.element.prop( "isContentEditable" );		this.valueMethod = this.element[ isTextarea || isInput ? "val" : "text" ];		this.isNewMenu = true;		this.element			.addClass( "ui-autocomplete-input" )			.attr( "autocomplete", "off" );		this._on( this.element, {			keydown: function( event ) {				if ( this.element.prop( "readOnly" ) ) {					suppressKeyPress = true;					suppressInput = true;					suppressKeyPressRepeat = true;					return;				}				suppressKeyPress = false;				suppressInput = false;				suppressKeyPressRepeat = false;				var keyCode = $.ui.keyCode;				switch( event.keyCode ) {				case keyCode.PAGE_UP:					suppressKeyPress = true;					this._move( "previousPage", event );					break;				case keyCode.PAGE_DOWN:					suppressKeyPress = true;					this._move( "nextPage", event );					break;				case keyCode.UP:					suppressKeyPress = true;					this._keyEvent( "previous", event );					break;				case keyCode.DOWN:					suppressKeyPress = true;					this._keyEvent( "next", event );					break;				case keyCode.ENTER:				case keyCode.NUMPAD_ENTER:					// when menu is open and has focus					if ( this.menu.active ) {						// #6055 - Opera still allows the keypress to occur						// which causes forms to submit						suppressKeyPress = true;						event.preventDefault();						this.menu.select( event );					}					break;				case keyCode.TAB:					if ( this.menu.active ) {						this.menu.select( event );					}					break;				case keyCode.ESCAPE:					if ( this.menu.element.is( ":visible" ) ) {						this._value( this.term );						this.close( event );						// Different browsers have different default behavior for escape						// Single press can mean undo or clear						// Double press in IE means clear the whole form						event.preventDefault();					}					break;				default:					suppressKeyPressRepeat = true;					// search timeout should be triggered before the input value is changed					this._searchTimeout( event );					break;				}			},			keypress: function( event ) {				if ( suppressKeyPress ) {					suppressKeyPress = false;					if ( !this.isMultiLine || this.menu.element.is( ":visible" ) ) {						event.preventDefault();					}					return;				}				if ( suppressKeyPressRepeat ) {					return;				}				// replicate some key handlers to allow them to repeat in Firefox and Opera				var keyCode = $.ui.keyCode;				switch( event.keyCode ) {				case keyCode.PAGE_UP:					this._move( "previousPage", event );					break;				case keyCode.PAGE_DOWN:					this._move( "nextPage", event );					break;				case keyCode.UP:					this._keyEvent( "previous", event );					break;				case keyCode.DOWN:					this._keyEvent( "next", event );					break;				}			},			input: function( event ) {				if ( suppressInput ) {					suppressInput = false;					event.preventDefault();					return;				}				this._searchTimeout( event );			},			focus: function() {				this.selectedItem = null;				this.previous = this._value();			},			blur: function( event ) {				if ( this.cancelBlur ) {					delete this.cancelBlur;					return;				}				clearTimeout( this.searching );				this.close( event );				this._change( event );			}		});		this._initSource();		this.menu = $( "&lt;ul&gt;" )			.addClass( "ui-autocomplete ui-front" )			.appendTo( this._appendTo() )			.menu({				// disable ARIA support, the live region takes care of that				role: null			})			.hide()			.data( "ui-menu" );		this._on( this.menu.element, {			mousedown: function( event ) {				// prevent moving focus out of the text field				event.preventDefault();				// IE doesn''t prevent moving focus even with event.preventDefault()				// so we set a flag to know when we should ignore the blur event				this.cancelBlur = true;				this._delay(function() {					delete this.cancelBlur;				});				// clicking on the scrollbar causes focus to shift to the body				// but we can''t detect a mouseup or a click immediately afterward				// so we have to track the next mousedown and close the menu if				// the user clicks somewhere outside of the autocomplete				var menuElement = this.menu.element[ 0 ];				if ( !$( event.target ).closest( ".ui-menu-item" ).length ) {					this._delay(function() {						var that = this;						this.document.one( "mousedown", function( event ) {							if ( event.target !== that.element[ 0 ] &amp;&amp;									event.target !== menuElement &amp;&amp;									!$.contains( menuElement, event.target ) ) {								that.close();							}						});					});				}			},			menufocus: function( event, ui ) {				// support: Firefox				// Prevent accidental activation of menu items in Firefox (#7024 #9118)				if ( this.isNewMenu ) {					this.isNewMenu = false;					if ( event.originalEvent &amp;&amp; /^mouse/.test( event.originalEvent.type ) ) {						this.menu.blur();						this.document.one( "mousemove", function() {							$( event.target ).trigger( event.originalEvent );						});						return;					}				}				var item = ui.item.data( "ui-autocomplete-item" );				if ( false !== this._trigger( "focus", event, { item: item } ) ) {					// use value to match what will end up in the input, if it was a key event					if ( event.originalEvent &amp;&amp; /^key/.test( event.originalEvent.type ) ) {						this._value( item.value );					}				} else {					// Normally the input is populated with the item''s value as the					// menu is navigated, causing screen readers to notice a change and					// announce the item. Since the focus event was canceled, this doesn''t					// happen, so we update the live region so that screen readers can					// still notice the change and announce it.					this.liveRegion.text( item.value );				}			},			menuselect: function( event, ui ) {				var item = ui.item.data( "ui-autocomplete-item" ),					previous = this.previous;				// only trigger when focus was lost (click on menu)				if ( this.element[0] !== this.document[0].activeElement ) {					this.element.focus();					this.previous = previous;					// #6109 - IE triggers two focus events and the second					// is asynchronous, so we need to reset the previous					// term synchronously and asynchronously :-(					this._delay(function() {						this.previous = previous;						this.selectedItem = item;					});				}				if ( false !== this._trigger( "select", event, { item: item } ) ) {					this._value( item.value );				}				// reset the term after the select event				// this allows custom select handling to work properly				this.term = this._value();				this.close( event );				this.selectedItem = item;			}		});		this.liveRegion = $( "&lt;span&gt;", {				role: "status",				"aria-live": "polite"			})			.addClass( "ui-helper-hidden-accessible" )			.insertBefore( this.element );		// turning off autocomplete prevents the browser from remembering the		// value when navigating through history, so we re-enable autocomplete		// if the page is unloaded before the widget is destroyed. #7790		this._on( this.window, {			beforeunload: function() {				this.element.removeAttr( "autocomplete" );			}		});	},	_destroy: function() {		clearTimeout( this.searching );		this.element			.removeClass( "ui-autocomplete-input" )			.removeAttr( "autocomplete" );		this.menu.element.remove();		this.liveRegion.remove();	},	_setOption: function( key, value ) {		this._super( key, value );		if ( key === "source" ) {			this._initSource();		}		if ( key === "appendTo" ) {			this.menu.element.appendTo( this._appendTo() );		}		if ( key === "disabled" &amp;&amp; value &amp;&amp; this.xhr ) {			this.xhr.abort();		}	},	_appendTo: function() {		var element = this.options.appendTo;		if ( element ) {			element = element.jquery || element.nodeType ?				$( element ) :				this.document.find( element ).eq( 0 );		}		if ( !element ) {			element = this.element.closest( ".ui-front" );		}		if ( !element.length ) {			element = this.document[0].body;		}		return element;	},	_initSource: function() {		var array, url,			that = this;		if ( $.isArray(this.options.source) ) {			array = this.options.source;			this.source = function( request, response ) {				response( $.ui.autocomplete.filter( array, request.term ) );			};		} else if ( typeof this.options.source === "string" ) {			url = this.options.source;			this.source = function( request, response ) {				if ( that.xhr ) {					that.xhr.abort();				}				that.xhr = $.ajax({					url: url,					data: request,					dataType: "json",					success: function( data ) {						response( data );					},					error: function() {						response( [] );					}				});			};		} else {			this.source = this.options.source;		}	},	_searchTimeout: function( event ) {		clearTimeout( this.searching );		this.searching = this._delay(function() {			// only search if the value has changed			if ( this.term !== this._value() ) {				this.selectedItem = null;				this.search( null, event );			}		}, this.options.delay );	},	search: function( value, event ) {		value = value != null ? value : this._value();		// always save the actual value, not the one passed as an argument		this.term = this._value();		if ( value.length &lt; this.options.minLength ) {			return this.close( event );		}		if ( this._trigger( "search", event ) === false ) {			return;		}		return this._search( value );	},	_search: function( value ) {		this.pending++;		this.element.addClass( "ui-autocomplete-loading" );		this.cancelSearch = false;		this.source( { term: value }, this._response() );	},	_response: function() {		var index = ++this.requestIndex;		return $.proxy(function( content ) {			if ( index === this.requestIndex ) {				this.__response( content );			}			this.pending--;			if ( !this.pending ) {				this.element.removeClass( "ui-autocomplete-loading" );			}		}, this );	},	__response: function( content ) {		if ( content ) {			content = this._normalize( content );		}		this._trigger( "response", null, { content: content } );		if ( !this.options.disabled &amp;&amp; content &amp;&amp; content.length &amp;&amp; !this.cancelSearch ) {			this._suggest( content );			this._trigger( "open" );		} else {			// use ._close() instead of .close() so we don''t cancel future searches			this._close();		}	},	close: function( event ) {		this.cancelSearch = true;		this._close( event );	},	_close: function( event ) {		if ( this.menu.element.is( ":visible" ) ) {			this.menu.element.hide();			this.menu.blur();			this.isNewMenu = true;			this._trigger( "close", event );		}	},	_change: function( event ) {		if ( this.previous !== this._value() ) {			this._trigger( "change", event, { item: this.selectedItem } );		}	},	_normalize: function( items ) {		// assume all items have the right format when the first item is complete		if ( items.length &amp;&amp; items[0].label &amp;&amp; items[0].value ) {			return items;		}		return $.map( items, function( item ) {			if ( typeof item === "string" ) {				return {					label: item,					value: item				};			}			return $.extend({				label: item.label || item.value,				value: item.value || item.label			}, item );		});	},	_suggest: function( items ) {		var ul = this.menu.element.empty();		this._renderMenu( ul, items );		this.isNewMenu = true;		this.menu.refresh();		// size and position menu		ul.show();		this._resizeMenu();		ul.position( $.extend({			of: this.element		}, this.options.position ));		if ( this.options.autoFocus ) {			this.menu.next();		}	},	_resizeMenu: function() {		var ul = this.menu.element;		ul.outerWidth( Math.max(			// Firefox wraps long text (possibly a rounding bug)			// so we add 1px to avoid the wrapping (#7513)			ul.width( "" ).outerWidth() + 1,			this.element.outerWidth()		) );	},	_renderMenu: function( ul, items ) {		var that = this;		$.each( items, function( index, item ) {			that._renderItemData( ul, item );		});	},	_renderItemData: function( ul, item ) {		return this._renderItem( ul, item ).data( "ui-autocomplete-item", item );	},	_renderItem: function( ul, item ) {		return $( "&lt;li&gt;" )			.append( $( "&lt;a&gt;" ).text( item.label ) )			.appendTo( ul );	},	_move: function( direction, event ) {		if ( !this.menu.element.is( ":visible" ) ) {			this.search( null, event );			return;		}		if ( this.menu.isFirstItem() &amp;&amp; /^previous/.test( direction ) ||				this.menu.isLastItem() &amp;&amp; /^next/.test( direction ) ) {			this._value( this.term );			this.menu.blur();			return;		}		this.menu[ direction ]( event );	},	widget: function() {		return this.menu.element;	},	_value: function() {		return this.valueMethod.apply( this.element, arguments );	},	_keyEvent: function( keyEvent, event ) {		if ( !this.isMultiLine || this.menu.element.is( ":visible" ) ) {			this._move( keyEvent, event );			// prevents moving cursor to beginning/end of the text field in some browsers			event.preventDefault();		}	}});$.extend( $.ui.autocomplete, {	escapeRegex: function( value ) {		return value.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&amp;");	},	filter: function(array, term) {		var matcher = new RegExp( $.ui.autocomplete.escapeRegex(term), "i" );		return $.grep( array, function(value) {			return matcher.test( value.label || value.value || value );		});	}});// live region extension, adding a `messages` option// NOTE: This is an experimental API. We are still investigating// a full solution for string manipulation and internationalization.$.widget( "ui.autocomplete", $.ui.autocomplete, {	options: {		messages: {			noResults: "No search results.",			results: function( amount ) {				return amount + ( amount &gt; 1 ? " results are" : " result is" ) +					" available, use up and down arrow keys to navigate.";			}		}	},	__response: function( content ) {		var message;		this._superApply( arguments );		if ( this.options.disabled || this.cancelSearch ) {			return;		}		if ( content &amp;&amp; content.length ) {			message = this.options.messages.results( content.length );		} else {			message = this.options.messages.noResults;		}		this.liveRegion.text( message );	}});}( jQuery ));(function( $, undefined ) {var lastActive,	baseClasses = "ui-button ui-widget ui-state-default ui-corner-all",	typeClasses = "ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only",	formResetHandler = function() {		var form = $( this );		setTimeout(function() {			form.find( ":ui-button" ).button( "refresh" );		}, 1 );	},	radioGroup = function( radio ) {		var name = radio.name,			form = radio.form,			radios = $( [] );		if ( name ) {			name = name.replace( /''/g, "\\''" );			if ( form ) {				radios = $( form ).find( "[name=''" + name + "'']" );			} else {				radios = $( "[name=''" + name + "'']", radio.ownerDocument )					.filter(function() {						return !this.form;					});			}		}		return radios;	};$.widget( "ui.button", {	version: "1.10.4",	defaultElement: "&lt;button&gt;",	options: {		disabled: null,		text: true,		label: null,		icons: {			primary: null,			secondary: null		}	},	_create: function() {		this.element.closest( "form" )			.unbind( "reset" + this.eventNamespace )			.bind( "reset" + this.eventNamespace, formResetHandler );		if ( typeof this.options.disabled !== "boolean" ) {			this.options.disabled = !!this.element.prop( "disabled" );		} else {			this.element.prop( "disabled", this.options.disabled );		}		this._determineButtonType();		this.hasTitle = !!this.buttonElement.attr( "title" );		var that = this,			options = this.options,			toggleButton = this.type === "checkbox" || this.type === "radio",			activeClass = !toggleButton ? "ui-state-active" : "";		if ( options.label === null ) {			options.label = (this.type === "input" ? this.buttonElement.val() : this.buttonElement.html());		}		this._hoverable( this.buttonElement );		this.buttonElement			.addClass( baseClasses )			.attr( "role", "button" )			.bind( "mouseenter" + this.eventNamespace, function() {				if ( options.disabled ) {					return;				}				if ( this === lastActive ) {					$( this ).addClass( "ui-state-active" );				}			})			.bind( "mouseleave" + this.eventNamespace, function() {				if ( options.disabled ) {					return;				}				$( this ).removeClass( activeClass );			})			.bind( "click" + this.eventNamespace, function( event ) {				if ( options.disabled ) {					event.preventDefault();					event.stopImmediatePropagation();				}			});		// Can''t use _focusable() because the element that receives focus		// and the element that gets the ui-state-focus class are different		this._on({			focus: function() {				this.buttonElement.addClass( "ui-state-focus" );			},			blur: function() {				this.buttonElement.removeClass( "ui-state-focus" );			}		});		if ( toggleButton ) {			this.element.bind( "change" + this.eventNamespace, function() {				that.refresh();			});		}		if ( this.type === "checkbox" ) {			this.buttonElement.bind( "click" + this.eventNamespace, function() {				if ( options.disabled ) {					return false;				}			});		} else if ( this.type === "radio" ) {			this.buttonElement.bind( "click" + this.eventNamespace, function() {				if ( options.disabled ) {					return false;				}				$( this ).addClass( "ui-state-active" );				that.buttonElement.attr( "aria-pressed", "true" );				var radio = that.element[ 0 ];				radioGroup( radio )					.not( radio )					.map(function() {						return $( this ).button( "widget" )[ 0 ];					})					.removeClass( "ui-state-active" )					.attr( "aria-pressed", "false" );			});		} else {			this.buttonElement				.bind( "mousedown" + this.eventNamespace, function() {					if ( options.disabled ) {						return false;					}					$( this ).addClass( "ui-state-active" );					lastActive = this;					that.document.one( "mouseup", function() {						lastActive = null;					});				})				.bind( "mouseup" + this.eventNamespace, function() {					if ( options.disabled ) {						return false;					}					$( this ).removeClass( "ui-state-active" );				})				.bind( "keydown" + this.eventNamespace, function(event) {					if ( options.disabled ) {						return false;					}					if ( event.keyCode === $.ui.keyCode.SPACE || event.keyCode === $.ui.keyCode.ENTER ) {						$( this ).addClass( "ui-state-active" );					}				})				// see #8559, we bind to blur here in case the button element loses				// focus between keydown and keyup, it would be left in an "active" state				.bind( "keyup" + this.eventNamespace + " blur" + this.eventNamespace, function() {					$( this ).removeClass( "ui-state-active" );				});			if ( this.buttonElement.is("a") ) {				this.buttonElement.keyup(function(event) {					if ( event.keyCode === $.ui.keyCode.SPACE ) {						// TODO pass through original event correctly (just as 2nd argument doesn''t work)						$( this ).click();					}				});			}		}		// TODO: pull out $.Widget''s handling for the disabled option into		// $.Widget.prototype._setOptionDisabled so it''s easy to proxy and can		// be overridden by individual plugins		this._setOption( "disabled", options.disabled );		this._resetButton();	},	_determineButtonType: function() {		var ancestor, labelSelector, checked;		if ( this.element.is("[type=checkbox]") ) {			this.type = "checkbox";		} else if ( this.element.is("[type=radio]") ) {			this.type = "radio";		} else if ( this.element.is("input") ) {			this.type = "input";		} else {			this.type = "button";		}		if ( this.type === "checkbox" || this.type === "radio" ) {			// we don''t search against the document in case the element			// is disconnected from the DOM			ancestor = this.element.parents().last();			labelSelector = "label[for=''" + this.element.attr("id") + "'']";			this.buttonElement = ancestor.find( labelSelector );			if ( !this.buttonElement.length ) {				ancestor = ancestor.length ? ancestor.siblings() : this.element.siblings();				this.buttonElement = ancestor.filter( labelSelector );				if ( !this.buttonElement.length ) {					this.buttonElement = ancestor.find( labelSelector );				}			}			this.element.addClass( "ui-helper-hidden-accessible" );			checked = this.element.is( ":checked" );			if ( checked ) {				this.buttonElement.addClass( "ui-state-active" );			}			this.buttonElement.prop( "aria-pressed", checked );		} else {			this.buttonElement = this.element;		}	},	widget: function() {		return this.buttonElement;	},	_destroy: function() {		this.element			.removeClass( "ui-helper-hidden-accessible" );		this.buttonElement			.removeClass( baseClasses + " ui-state-active " + typeClasses )			.removeAttr( "role" )			.removeAttr( "aria-pressed" )			.html( this.buttonElement.find(".ui-button-text").html() );		if ( !this.hasTitle ) {			this.buttonElement.removeAttr( "title" );		}	},	_setOption: function( key, value ) {		this._super( key, value );		if ( key === "disabled" ) {			this.element.prop( "disabled", !!value );			if ( value ) {				this.buttonElement.removeClass( "ui-state-focus" );			}			return;		}		this._resetButton();	},	refresh: function() {		//See #8237 &amp; #8828		var isDisabled = this.element.is( "input, button" ) ? this.element.is( ":disabled" ) : this.element.hasClass( "ui-button-disabled" );		if ( isDisabled !== this.options.disabled ) {			this._setOption( "disabled", isDisabled );		}		if ( this.type === "radio" ) {			radioGroup( this.element[0] ).each(function() {				if ( $( this ).is( ":checked" ) ) {					$( this ).button( "widget" )						.addClass( "ui-state-active" )						.attr( "aria-pressed", "true" );				} else {					$( this ).button( "widget" )						.removeClass( "ui-state-active" )						.attr( "aria-pressed", "false" );				}			});		} else if ( this.type === "checkbox" ) {			if ( this.element.is( ":checked" ) ) {				this.buttonElement					.addClass( "ui-state-active" )					.attr( "aria-pressed", "true" );			} else {				this.buttonElement					.removeClass( "ui-state-active" )					.attr( "aria-pressed", "false" );			}		}	},	_resetButton: function() {		if ( this.type === "input" ) {			if ( this.options.label ) {				this.element.val( this.options.label );			}			return;		}		var buttonElement = this.buttonElement.removeClass( typeClasses ),			buttonText = $( "&lt;span&gt;&lt;/span&gt;", this.document[0] )				.addClass( "ui-button-text" )				.html( this.options.label )				.appendTo( buttonElement.empty() )				.text(),			icons = this.options.icons,			multipleIcons = icons.primary &amp;&amp; icons.secondary,			buttonClasses = [];		if ( icons.primary || icons.secondary ) {			if ( this.options.text ) {				buttonClasses.push( "ui-button-text-icon" + ( multipleIcons ? "s" : ( icons.primary ? "-primary" : "-secondary" ) ) );			}			if ( icons.primary ) {				buttonElement.prepend( "&lt;span class=''ui-button-icon-primary ui-icon " + icons.primary + "''&gt;&lt;/span&gt;" );			}			if ( icons.secondary ) {				buttonElement.append( "&lt;span class=''ui-button-icon-secondary ui-icon " + icons.secondary + "''&gt;&lt;/span&gt;" );			}			if ( !this.options.text ) {				buttonClasses.push( multipleIcons ? "ui-button-icons-only" : "ui-button-icon-only" );				if ( !this.hasTitle ) {					buttonElement.attr( "title", $.trim( buttonText ) );				}			}		} else {			buttonClasses.push( "ui-button-text-only" );		}		buttonElement.addClass( buttonClasses.join( " " ) );	}});$.widget( "ui.buttonset", {	version: "1.10.4",	options: {		items: "button, input[type=button], input[type=submit], input[type=reset], input[type=checkbox], input[type=radio], a, :data(ui-button)"	},	_create: function() {		this.element.addClass( "ui-buttonset" );	},	_init: function() {		this.refresh();	},	_setOption: function( key, value ) {		if ( key === "disabled" ) {			this.buttons.button( "option", key, value );		}		this._super( key, value );	},	refresh: function() {		var rtl = this.element.css( "direction" ) === "rtl";		this.buttons = this.element.find( this.options.items )			.filter( ":ui-button" )				.button( "refresh" )			.end()			.not( ":ui-button" )				.button()			.end()			.map(function() {				return $( this ).button( "widget" )[ 0 ];			})				.removeClass( "ui-corner-all ui-corner-left ui-corner-right" )				.filter( ":first" )					.addClass( rtl ? "ui-corner-right" : "ui-corner-left" )				.end()				.filter( ":last" )					.addClass( rtl ? "ui-corner-left" : "ui-corner-right" )				.end()			.end();	},	_destroy: function() {		this.element.removeClass( "ui-buttonset" );		this.buttons			.map(function() {				return $( this ).button( "widget" )[ 0 ];			})				.removeClass( "ui-corner-left ui-corner-right" )			.end()			.button( "destroy" );	}});}( jQuery ) );(function( $, undefined ) {$.extend($.ui, { datepicker: { version: "1.10.4" } });var PROP_NAME = "datepicker",	instActive;/* Date picker manager.   Use the singleton instance of this class, $.datepicker, to interact with the date picker.   Settings for (groups of) date pickers are maintained in an instance object,   allowing multiple different settings on the same page. */function Datepicker() {	this._curInst = null; // The current instance in use	this._keyEvent = false; // If the last event was a key event	this._disabledInputs = []; // List of date picker inputs that have been disabled	this._datepickerShowing = false; // True if the popup picker is showing , false if not	this._inDialog = false; // True if showing within a "dialog", false if not	this._mainDivId = "ui-datepicker-div"; // The ID of the main datepicker division	this._inlineClass = "ui-datepicker-inline"; // The name of the inline marker class	this._appendClass = "ui-datepicker-append"; // The name of the append marker class	this._triggerClass = "ui-datepicker-trigger"; // The name of the trigger marker class	this._dialogClass = "ui-datepicker-dialog"; // The name of the dialog marker class	this._disableClass = "ui-datepicker-disabled"; // The name of the disabled covering marker class	this._unselectableClass = "ui-datepicker-unselectable"; // The name of the unselectable cell marker class	this._currentClass = "ui-datepicker-current-day"; // The name of the current day marker class	this._dayOverClass = "ui-datepicker-days-cell-over"; // The name of the day hover marker class	this.regional = []; // Available regional settings, indexed by language code	this.regional[""] = { // Default regional settings		closeText: "Done", // Display text for close link		prevText: "Prev", // Display text for previous month link		nextText: "Next", // Display text for next month link		currentText: "Today", // Display text for current month link		monthNames: ["January","February","March","April","May","June",			"July","August","September","October","November","December"], // Names of months for drop-down and formatting		monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], // For formatting		dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], // For formatting		dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], // For formatting		dayNamesMin: ["Su","Mo","Tu","We","Th","Fr","Sa"], // Column headings for days starting at Sunday		weekHeader: "Wk", // Column header for week of the year		dateFormat: "mm/dd/yy", // See format options on parseDate		firstDay: 0, // The first day of the week, Sun = 0, Mon = 1, ...		isRTL: false, // True if right-to-left language, false if left-to-right		showMonthAfterYear: false, // True if the year select precedes month, false for month then year		yearSuffix: "" // Additional text to append to the year in the month headers	};	this._defaults = { // Global defaults for all the date picker instances		showOn: "focus", // "focus" for popup on focus,			// "button" for trigger button, or "both" for either		showAnim: "fadeIn", // Name of jQuery animation for popup		showOptions: {}, // Options for enhanced animations		defaultDate: null, // Used when field is blank: actual date,			// +/-number for offset from today, null for today		appendText: "", // Display text following the input box, e.g. showing the format		buttonText: "...", // Text for trigger button		buttonImage: "", // URL for trigger button image		buttonImageOnly: false, // True if the image appears alone, false if it appears on a button		hideIfNoPrevNext: false, // True to hide next/previous month links			// if not applicable, false to just disable them		navigationAsDateFormat: false, // True if date formatting applied to prev/today/next links		gotoCurrent: false, // True if today link goes back to current selection instead		changeMonth: false, // True if month can be selected directly, false if only prev/next		changeYear: false, // True if year can be selected directly, false if only prev/next		yearRange: "c-10:c+10", // Range of years to display in drop-down,			// either relative to today''s year (-nn:+nn), relative to currently displayed year			// (c-nn:c+nn), absolute (nnnn:nnnn), or a combination of the above (nnnn:-n)		showOtherMonths: false, // True to show dates in other months, false to leave blank		selectOtherMonths: false, // True to allow selection of dates in other months, false for unselectable		showWeek: false, // True to show week of the year, false to not show it		calculateWeek: this.iso8601Week, // How to calculate the week of the year,			// takes a Date and returns the number of the week for it		shortYearCutoff: "+10", // Short year values &lt; this are in the current century,			// &gt; this are in the previous century,			// string value starting with "+" for current year + value		minDate: null, // The earliest selectable date, or null for no limit		maxDate: null, // The latest selectable date, or null for no limit		duration: "fast", // Duration of display/closure		beforeShowDay: null, // Function that takes a date and returns an array with			// [0] = true if selectable, false if not, [1] = custom CSS class name(s) or "",			// [2] = cell title (optional), e.g. $.datepicker.noWeekends		beforeShow: null, // Function that takes an input field and			// returns a set of custom settings for the date picker		onSelect: null, // Define a callback function when a date is selected		onChangeMonthYear: null, // Define a callback function when the month or year is changed		onClose: null, // Define a callback function when the datepicker is closed		numberOfMonths: 1, // Number of months to show at a time		showCurrentAtPos: 0, // The position in multipe months at which to show the current month (starting at 0)		stepMonths: 1, // Number of months to step back/forward		stepBigMonths: 12, // Number of months to step back/forward for the big links		altField: "", // Selector for an alternate field to store selected dates into		altFormat: "", // The date format to use for the alternate field		constrainInput: true, // The input is constrained by the current date format		showButtonPanel: false, // True to show button panel, false to not show it		autoSize: false, // True to size the input for the date format, false to leave as is		disabled: false // The initial disabled state	};	$.extend(this._defaults, this.regional[""]);	this.dpDiv = bindHover($("&lt;div id=''" + this._mainDivId + "'' class=''ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all''&gt;&lt;/div&gt;"));}$.extend(Datepicker.prototype, {	/* Class name added to elements to indicate already configured with a date picker. */	markerClassName: "hasDatepicker",	//Keep track of the maximum number of rows displayed (see #7043)	maxRows: 4,	// TODO rename to "widget" when switching to widget factory	_widgetDatepicker: function() {		return this.dpDiv;	},	/* Override the default settings for all instances of the date picker.	 * @param  settings  object - the new settings to use as defaults (anonymous object)	 * @return the manager object	 */	setDefaults: function(settings) {		extendRemove(this._defaults, settings || {});		return this;	},	/* Attach the date picker to a jQuery selection.	 * @param  target	element - the target input field or division or span	 * @param  settings  object - the new settings to use for this date picker instance (anonymous)	 */	_attachDatepicker: function(target, settings) {		var nodeName, inline, inst;		nodeName = target.nodeName.toLowerCase();		inline = (nodeName === "div" || nodeName === "span");		if (!target.id) {			this.uuid += 1;			target.id = "dp" + this.uuid;		}		inst = this._newInst($(target), inline);		inst.settings = $.extend({}, settings || {});		if (nodeName === "input") {			this._connectDatepicker(target, inst);		} else if (inline) {			this._inlineDatepicker(target, inst);		}	},	/* Create a new instance object. */	_newInst: function(target, inline) {		var id = target[0].id.replace(/([^A-Za-z0-9_\-])/g, "\\\\$1"); // escape jQuery meta chars		return {id: id, input: target, // associated target			selectedDay: 0, selectedMonth: 0, selectedYear: 0, // current selection			drawMonth: 0, drawYear: 0, // month being drawn			inline: inline, // is datepicker inline or not			dpDiv: (!inline ? this.dpDiv : // presentation div			bindHover($("&lt;div class=''" + this._inlineClass + " ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all''&gt;&lt;/div&gt;")))};	},	/* Attach the date picker to an input field. */	_connectDatepicker: function(target, inst) {		var input = $(target);		inst.append = $([]);		inst.trigger = $([]);		if (input.hasClass(this.markerClassName)) {			return;		}		this._attachments(input, inst);		input.addClass(this.markerClassName).keydown(this._doKeyDown).			keypress(this._doKeyPress).keyup(this._doKeyUp);		this._autoSize(inst);		$.data(target, PROP_NAME, inst);		//If disabled option is true, disable the datepicker once it has been attached to the input (see ticket #5665)		if( inst.settings.disabled ) {			this._disableDatepicker( target );		}	},	/* Make attachments based on settings. */	_attachments: function(input, inst) {		var showOn, buttonText, buttonImage,			appendText = this._get(inst, "appendText"),			isRTL = this._get(inst, "isRTL");		if (inst.append) {			inst.append.remove();		}		if (appendText) {			inst.append = $("&lt;span class=''" + this._appendClass + "''&gt;" + appendText + "&lt;/span&gt;");			input[isRTL ? "before" : "after"](inst.append);		}		input.unbind("focus", this._showDatepicker);		if (inst.trigger) {			inst.trigger.remove();		}		showOn = this._get(inst, "showOn");		if (showOn === "focus" || showOn === "both") { // pop-up date picker when in the marked field			input.focus(this._showDatepicker);		}		if (showOn === "button" || showOn === "both") { // pop-up date picker when button clicked			buttonText = this._get(inst, "buttonText");			buttonImage = this._get(inst, "buttonImage");			inst.trigger = $(this._get(inst, "buttonImageOnly") ?				$("&lt;img/&gt;").addClass(this._triggerClass).					attr({ src: buttonImage, alt: buttonText, title: buttonText }) :				$("&lt;button type=''button''&gt;&lt;/button&gt;").addClass(this._triggerClass).					html(!buttonImage ? buttonText : $("&lt;img/&gt;").attr(					{ src:buttonImage, alt:buttonText, title:buttonText })));			input[isRTL ? "before" : "after"](inst.trigger);			inst.trigger.click(function() {				if ($.datepicker._datepickerShowing &amp;&amp; $.datepicker._lastInput === input[0]) {					$.datepicker._hideDatepicker();				} else if ($.datepicker._datepickerShowing &amp;&amp; $.datepicker._lastInput !== input[0]) {					$.datepicker._hideDatepicker();					$.datepicker._showDatepicker(input[0]);				} else {					$.datepicker._showDatepicker(input[0]);				}				return false;			});		}	},	/* Apply the maximum length for the date format. */	_autoSize: function(inst) {		if (this._get(inst, "autoSize") &amp;&amp; !inst.inline) {			var findMax, max, maxI, i,				date = new Date(2009, 12 - 1, 20), // Ensure double digits				dateFormat = this._get(inst, "dateFormat");			if (dateFormat.match(/[DM]/)) {				findMax = function(names) {					max = 0;					maxI = 0;					for (i = 0; i &lt; names.length; i++) {						if (names[i].length &gt; max) {							max = names[i].length;							maxI = i;						}					}					return maxI;				};				date.setMonth(findMax(this._get(inst, (dateFormat.match(/MM/) ?					"monthNames" : "monthNamesShort"))));				date.setDate(findMax(this._get(inst, (dateFormat.match(/DD/) ?					"dayNames" : "dayNamesShort"))) + 20 - date.getDay());			}			inst.input.attr("size", this._formatDate(inst, date).length);		}	},	/* Attach an inline date picker to a div. */	_inlineDatepicker: function(target, inst) {		var divSpan = $(target);		if (divSpan.hasClass(this.markerClassName)) {			return;		}		divSpan.addClass(this.markerClassName).append(inst.dpDiv);		$.data(target, PROP_NAME, inst);		this._setDate(inst, this._getDefaultDate(inst), true);		this._updateDatepicker(inst);		this._updateAlternate(inst);		//If disabled option is true, disable the datepicker before showing it (see ticket #5665)		if( inst.settings.disabled ) {			this._disableDatepicker( target );		}		// Set display:block in place of inst.dpDiv.show() which won''t work on disconnected elements		// http://bugs.jqueryui.com/ticket/7552 - A Datepicker created on a detached div has zero height		inst.dpDiv.css( "display", "block" );	},	/* Pop-up the date picker in a "dialog" box.	 * @param  input element - ignored	 * @param  date	string or Date - the initial date to display	 * @param  onSelect  function - the function to call when a date is selected	 * @param  settings  object - update the dialog date picker instance''s settings (anonymous object)	 * @param  pos int[2] - coordinates for the dialog''s position within the screen or	 *					event - with x/y coordinates or	 *					leave empty for default (screen centre)	 * @return the manager object	 */	_dialogDatepicker: function(input, date, onSelect, settings, pos) {		var id, browserWidth, browserHeight, scrollX, scrollY,			inst = this._dialogInst; // internal instance		if (!inst) {			this.uuid += 1;			id = "dp" + this.uuid;			this._dialogInput = $("&lt;input type=''text'' id=''" + id +				"'' style=''position: absolute; top: -100px; width: 0px;''/&gt;");			this._dialogInput.keydown(this._doKeyDown);			$("body").append(this._dialogInput);			inst = this._dialogInst = this._newInst(this._dialogInput, false);			inst.settings = {};			$.data(this._dialogInput[0], PROP_NAME, inst);		}		extendRemove(inst.settings, settings || {});		date = (date &amp;&amp; date.constructor === Date ? this._formatDate(inst, date) : date);		this._dialogInput.val(date);		this._pos = (pos ? (pos.length ? pos : [pos.pageX, pos.pageY]) : null);		if (!this._pos) {			browserWidth = document.documentElement.clientWidth;			browserHeight = document.documentElement.clientHeight;			scrollX = document.documentElement.scrollLeft || document.body.scrollLeft;			scrollY = document.documentElement.scrollTop || document.body.scrollTop;			this._pos = // should use actual width/height below				[(browserWidth / 2) - 100 + scrollX, (browserHeight / 2) - 150 + scrollY];		}		// move input on screen for focus, but hidden behind dialog		this._dialogInput.css("left", (this._pos[0] + 20) + "px").css("top", this._pos[1] + "px");		inst.settings.onSelect = onSelect;		this._inDialog = true;		this.dpDiv.addClass(this._dialogClass);		this._showDatepicker(this._dialogInput[0]);		if ($.blockUI) {			$.blockUI(this.dpDiv);		}		$.data(this._dialogInput[0], PROP_NAME, inst);		return this;	},	/* Detach a datepicker from its control.	 * @param  target	element - the target input field or division or span	 */	_destroyDatepicker: function(target) {		var nodeName,			$target = $(target),			inst = $.data(target, PROP_NAME);		if (!$target.hasClass(this.markerClassName)) {			return;		}		nodeName = target.nodeName.toLowerCase();		$.removeData(target, PROP_NAME);		if (nodeName === "input") {			inst.append.remove();			inst.trigger.remove();			$target.removeClass(this.markerClassName).				unbind("focus", this._showDatepicker).				unbind("keydown", this._doKeyDown).				unbind("keypress", this._doKeyPress).				unbind("keyup", this._doKeyUp);		} else if (nodeName === "div" || nodeName === "span") {			$target.removeClass(this.markerClassName).empty();		}	},	/* Enable the date picker to a jQuery selection.	 * @param  target	element - the target input field or division or span	 */	_enableDatepicker: function(target) {		var nodeName, inline,			$target = $(target),			inst = $.data(target, PROP_NAME);		if (!$target.hasClass(this.markerClassName)) {			return;		}		nodeName = target.nodeName.toLowerCase();		if (nodeName === "input") {			target.disabled = false;			inst.trigger.filter("button").				each(function() { this.disabled = false; }).end().				filter("img").css({opacity: "1.0", cursor: ""});		} else if (nodeName === "div" || nodeName === "span") {			inline = $target.children("." + this._inlineClass);			inline.children().removeClass("ui-state-disabled");			inline.find("select.ui-datepicker-month, select.ui-datepicker-year").				prop("disabled", false);		}		this._disabledInputs = $.map(this._disabledInputs,			function(value) { return (value === target ? null : value); }); // delete entry	},	/* Disable the date picker to a jQuery selection.	 * @param  target	element - the target input field or division or span	 */	_disableDatepicker: function(target) {		var nodeName, inline,			$target = $(target),			inst = $.data(target, PROP_NAME);		if (!$target.hasClass(this.markerClassName)) {			return;		}		nodeName = target.nodeName.toLowerCase();		if (nodeName === "input") {			target.disabled = true;			inst.trigger.filter("button").				each(function() { this.disabled = true; }).end().				filter("img").css({opacity: "0.5", cursor: "default"});		} else if (nodeName === "div" || nodeName === "span") {			inline = $target.children("." + this._inlineClass);			inline.children().addClass("ui-state-disabled");			inline.find("select.ui-datepicker-month, select.ui-datepicker-year").				prop("disabled", true);		}		this._disabledInputs = $.map(this._disabledInputs,			function(value) { return (value === target ? null : value); }); // delete entry		this._disabledInputs[this._disabledInputs.length] = target;	},	/* Is the first field in a jQuery collection disabled as a datepicker?	 * @param  target	element - the target input field or division or span	 * @return boolean - true if disabled, false if enabled	 */	_isDisabledDatepicker: function(target) {		if (!target) {			return false;		}		for (var i = 0; i &lt; this._disabledInputs.length; i++) {			if (this._disabledInputs[i] === target) {				return true;			}		}		return false;	},	/* Retrieve the instance data for the target control.	 * @param  target  element - the target input field or division or span	 * @return  object - the associated instance data	 * @throws  error if a jQuery problem getting data	 */	_getInst: function(target) {		try {			return $.data(target, PROP_NAME);		}		catch (err) {			throw "Missing instance data for this datepicker";		}	},	/* Update or retrieve the settings for a date picker attached to an input field or division.	 * @param  target  element - the target input field or division or span	 * @param  name	object - the new settings to update or	 *				string - the name of the setting to change or retrieve,	 *				when retrieving also "all" for all instance settings or	 *				"defaults" for all global defaults	 * @param  value   any - the new value for the setting	 *				(omit if above is an object or to retrieve a value)	 */	_optionDatepicker: function(target, name, value) {		var settings, date, minDate, maxDate,			inst = this._getInst(target);		if (arguments.length === 2 &amp;&amp; typeof name === "string") {			return (name === "defaults" ? $.extend({}, $.datepicker._defaults) :				(inst ? (name === "all" ? $.extend({}, inst.settings) :				this._get(inst, name)) : null));		}		settings = name || {};		if (typeof name === "string") {			settings = {};			settings[name] = value;		}		if (inst) {			if (this._curInst === inst) {				this._hideDatepicker();			}			date = this._getDateDatepicker(target, true);			minDate = this._getMinMaxDate(inst, "min");			maxDate = this._getMinMaxDate(inst, "max");			extendRemove(inst.settings, settings);			// reformat the old minDate/maxDate values if dateFormat changes and a new minDate/maxDate isn''t provided			if (minDate !== null &amp;&amp; settings.dateFormat !== undefined &amp;&amp; settings.minDate === undefined) {				inst.settings.minDate = this._formatDate(inst, minDate);			}			if (maxDate !== null &amp;&amp; settings.dateFormat !== undefined &amp;&amp; settings.maxDate === undefined) {				inst.settings.maxDate = this._formatDate(inst, maxDate);			}			if ( "disabled" in settings ) {				if ( settings.disabled ) {					this._disableDatepicker(target);				} else {					this._enableDatepicker(target);				}			}			this._attachments($(target), inst);			this._autoSize(inst);			this._setDate(inst, date);			this._updateAlternate(inst);			this._updateDatepicker(inst);		}	},	// change method deprecated	_changeDatepicker: function(target, name, value) {		this._optionDatepicker(target, name, value);	},	/* Redraw the date picker attached to an input field or division.	 * @param  target  element - the target input field or division or span	 */	_refreshDatepicker: function(target) {		var inst = this._getInst(target);		if (inst) {			this._updateDatepicker(inst);		}	},	/* Set the dates for a jQuery selection.	 * @param  target element - the target input field or division or span	 * @param  date	Date - the new date	 */	_setDateDatepicker: function(target, date) {		var inst = this._getInst(target);		if (inst) {			this._setDate(inst, date);			this._updateDatepicker(inst);			this._updateAlternate(inst);		}	},	/* Get the date(s) for the first entry in a jQuery selection.	 * @param  target element - the target input field or division or span	 * @param  noDefault boolean - true if no default date is to be used	 * @return Date - the current date	 */	_getDateDatepicker: function(target, noDefault) {		var inst = this._getInst(target);		if (inst &amp;&amp; !inst.inline) {			this._setDateFromField(inst, noDefault);		}		return (inst ? this._getDate(inst) : null);	},	/* Handle keystrokes. */	_doKeyDown: function(event) {		var onSelect, dateStr, sel,			inst = $.datepicker._getInst(event.target),			handled = true,			isRTL = inst.dpDiv.is(".ui-datepicker-rtl");		inst._keyEvent = true;		if ($.datepicker._datepickerShowing) {			switch (event.keyCode) {				case 9: $.datepicker._hideDatepicker();						handled = false;						break; // hide on tab out				case 13: sel = $("td." + $.datepicker._dayOverClass + ":not(." +									$.datepicker._currentClass + ")", inst.dpDiv);						if (sel[0]) {							$.datepicker._selectDay(event.target, inst.selectedMonth, inst.selectedYear, sel[0]);						}						onSelect = $.datepicker._get(inst, "onSelect");						if (onSelect) {							dateStr = $.datepicker._formatDate(inst);							// trigger custom callback							onSelect.apply((inst.input ? inst.input[0] : null), [dateStr, inst]);						} else {							$.datepicker._hideDatepicker();						}						return false; // don''t submit the form				case 27: $.datepicker._hideDatepicker();						break; // hide on escape				case 33: $.datepicker._adjustDate(event.target, (event.ctrlKey ?							-$.datepicker._get(inst, "stepBigMonths") :							-$.datepicker._get(inst, "stepMonths")), "M");						break; // previous month/year on page up/+ ctrl				case 34: $.datepicker._adjustDate(event.target, (event.ctrlKey ?							+$.datepicker._get(inst, "stepBigMonths") :							+$.datepicker._get(inst, "stepMonths")), "M");						break; // next month/year on page down/+ ctrl				case 35: if (event.ctrlKey || event.metaKey) {							$.datepicker._clearDate(event.target);						}						handled = event.ctrlKey || event.metaKey;						break; // clear on ctrl or command +end				case 36: if (event.ctrlKey || event.metaKey) {							$.datepicker._gotoToday(event.target);						}						handled = event.ctrlKey || event.metaKey;						break; // current on ctrl or command +home				case 37: if (event.ctrlKey || event.metaKey) {							$.datepicker._adjustDate(event.target, (isRTL ? +1 : -1), "D");						}						handled = event.ctrlKey || event.metaKey;						// -1 day on ctrl or command +left						if (event.originalEvent.altKey) {							$.datepicker._adjustDate(event.target, (event.ctrlKey ?								-$.datepicker._get(inst, "stepBigMonths") :								-$.datepicker._get(inst, "stepMonths")), "M");						}						// next month/year on alt +left on Mac						break;				case 38: if (event.ctrlKey || event.metaKey) {							$.datepicker._adjustDate(event.target, -7, "D");						}						handled = event.ctrlKey || event.metaKey;						break; // -1 week on ctrl or command +up				case 39: if (event.ctrlKey || event.metaKey) {							$.datepicker._adjustDate(event.target, (isRTL ? -1 : +1), "D");						}						handled = event.ctrlKey || event.metaKey;						// +1 day on ctrl or command +right						if (event.originalEvent.altKey) {							$.datepicker._adjustDate(event.target, (event.ctrlKey ?								+$.datepicker._get(inst, "stepBigMonths") :								+$.datepicker._get(inst, "stepMonths")), "M");						}						// next month/year on alt +right						break;				case 40: if (event.ctrlKey || event.metaKey) {							$.datepicker._adjustDate(event.target, +7, "D");						}						handled = event.ctrlKey || event.metaKey;						break; // +1 week on ctrl or command +down				default: handled = false;			}		} else if (event.keyCode === 36 &amp;&amp; event.ctrlKey) { // display the date picker on ctrl+home			$.datepicker._showDatepicker(this);		} else {			handled = false;		}		if (handled) {			event.preventDefault();			event.stopPropagation();		}	},	/* Filter entered characters - based on date format. */	_doKeyPress: function(event) {		var chars, chr,			inst = $.datepicker._getInst(event.target);		if ($.datepicker._get(inst, "constrainInput")) {			chars = $.datepicker._possibleChars($.datepicker._get(inst, "dateFormat"));			chr = String.fromCharCode(event.charCode == null ? event.keyCode : event.charCode);			return event.ctrlKey || event.metaKey || (chr &lt; " " || !chars || chars.indexOf(chr) &gt; -1);		}	},	/* Synchronise manual entry and field/alternate field. */	_doKeyUp: function(event) {		var date,			inst = $.datepicker._getInst(event.target);		if (inst.input.val() !== inst.lastVal) {			try {				date = $.datepicker.parseDate($.datepicker._get(inst, "dateFormat"),					(inst.input ? inst.input.val() : null),					$.datepicker._getFormatConfig(inst));				if (date) { // only if valid					$.datepicker._setDateFromField(inst);					$.datepicker._updateAlternate(inst);					$.datepicker._updateDatepicker(inst);				}			}			catch (err) {			}		}		return true;	},	/* Pop-up the date picker for a given input field.	 * If false returned from beforeShow event handler do not show.	 * @param  input  element - the input field attached to the date picker or	 *					event - if triggered by focus	 */	_showDatepicker: function(input) {		input = input.target || input;		if (input.nodeName.toLowerCase() !== "input") { // find from button/image trigger			input = $("input", input.parentNode)[0];		}		if ($.datepicker._isDisabledDatepicker(input) || $.datepicker._lastInput === input) { // already here			return;		}		var inst, beforeShow, beforeShowSettings, isFixed,			offset, showAnim, duration;		inst = $.datepicker._getInst(input);		if ($.datepicker._curInst &amp;&amp; $.datepicker._curInst !== inst) {			$.datepicker._curInst.dpDiv.stop(true, true);			if ( inst &amp;&amp; $.datepicker._datepickerShowing ) {				$.datepicker._hideDatepicker( $.datepicker._curInst.input[0] );			}		}		beforeShow = $.datepicker._get(inst, "beforeShow");		beforeShowSettings = beforeShow ? beforeShow.apply(input, [input, inst]) : {};		if(beforeShowSettings === false){			return;		}		extendRemove(inst.settings, beforeShowSettings);		inst.lastVal = null;		$.datepicker._lastInput = input;		$.datepicker._setDateFromField(inst);		if ($.datepicker._inDialog) { // hide cursor			input.value = "";		}		if (!$.datepicker._pos) { // position below input			$.datepicker._pos = $.datepicker._findPos(input);			$.datepicker._pos[1] += input.offsetHeight; // add the height		}		isFixed = false;		$(input).parents().each(function() {			isFixed |= $(this).css("position") === "fixed";			return !isFixed;		});		offset = {left: $.datepicker._pos[0], top: $.datepicker._pos[1]};		$.datepicker._pos = null;		//to avoid flashes on Firefox		inst.dpDiv.empty();		// determine sizing offscreen		inst.dpDiv.css({position: "absolute", display: "block", top: "-1000px"});		$.datepicker._updateDatepicker(inst);		// fix width for dynamic number of date pickers		// and adjust position before showing		offset = $.datepicker._checkOffset(inst, offset, isFixed);		inst.dpDiv.css({position: ($.datepicker._inDialog &amp;&amp; $.blockUI ?			"static" : (isFixed ? "fixed" : "absolute")), display: "none",			left: offset.left + "px", top: offset.top + "px"});		if (!inst.inline) {			showAnim = $.datepicker._get(inst, "showAnim");			duration = $.datepicker._get(inst, "duration");			inst.dpDiv.zIndex($(input).zIndex()+1);			$.datepicker._datepickerShowing = true;			if ( $.effects &amp;&amp; $.effects.effect[ showAnim ] ) {				inst.dpDiv.show(showAnim, $.datepicker._get(inst, "showOptions"), duration);			} else {				inst.dpDiv[showAnim || "show"](showAnim ? duration : null);			}			if ( $.datepicker._shouldFocusInput( inst ) ) {				inst.input.focus();			}			$.datepicker._curInst = inst;		}	},	/* Generate the date picker content. */	_updateDatepicker: function(inst) {		this.maxRows = 4; //Reset the max number of rows being displayed (see #7043)		instActive = inst; // for delegate hover events		inst.dpDiv.empty().append(this._generateHTML(inst));		this._attachHandlers(inst);		inst.dpDiv.find("." + this._dayOverClass + " a").mouseover();		var origyearshtml,			numMonths = this._getNumberOfMonths(inst),			cols = numMonths[1],			width = 17;		inst.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width("");		if (cols &gt; 1) {			inst.dpDiv.addClass("ui-datepicker-multi-" + cols).css("width", (width * cols) + "em");		}		inst.dpDiv[(numMonths[0] !== 1 || numMonths[1] !== 1 ? "add" : "remove") +			"Class"]("ui-datepicker-multi");		inst.dpDiv[(this._get(inst, "isRTL") ? "add" : "remove") +			"Class"]("ui-datepicker-rtl");		if (inst === $.datepicker._curInst &amp;&amp; $.datepicker._datepickerShowing &amp;&amp; $.datepicker._shouldFocusInput( inst ) ) {			inst.input.focus();		}		// deffered render of the years select (to avoid flashes on Firefox)		if( inst.yearshtml ){			origyearshtml = inst.yearshtml;			setTimeout(function(){				//assure that inst.yearshtml didn''t change.				if( origyearshtml === inst.yearshtml &amp;&amp; inst.yearshtml ){					inst.dpDiv.find("select.ui-datepicker-year:first").replaceWith(inst.yearshtml);				}				origyearshtml = inst.yearshtml = null;			}, 0);		}	},	// #6694 - don''t focus the input if it''s already focused	// this breaks the change event in IE	// Support: IE and jQuery &lt;1.9	_shouldFocusInput: function( inst ) {		return inst.input &amp;&amp; inst.input.is( ":visible" ) &amp;&amp; !inst.input.is( ":disabled" ) &amp;&amp; !inst.input.is( ":focus" );	},	/* Check positioning to remain on screen. */	_checkOffset: function(inst, offset, isFixed) {		var dpWidth = inst.dpDiv.outerWidth(),			dpHeight = inst.dpDiv.outerHeight(),			inputWidth = inst.input ? inst.input.outerWidth() : 0,			inputHeight = inst.input ? inst.input.outerHeight() : 0,			viewWidth = document.documentElement.clientWidth + (isFixed ? 0 : $(document).scrollLeft()),			viewHeight = document.documentElement.clientHeight + (isFixed ? 0 : $(document).scrollTop());		offset.left -= (this._get(inst, "isRTL") ? (dpWidth - inputWidth) : 0);		offset.left -= (isFixed &amp;&amp; offset.left === inst.input.offset().left) ? $(document).scrollLeft() : 0;		offset.top -= (isFixed &amp;&amp; offset.top === (inst.input.offset().top + inputHeight)) ? $(document).scrollTop() : 0;		// now check if datepicker is showing outside window viewport - move to a better place if so.		offset.left -= Math.min(offset.left, (offset.left + dpWidth &gt; viewWidth &amp;&amp; viewWidth &gt; dpWidth) ?			Math.abs(offset.left + dpWidth - viewWidth) : 0);		offset.top -= Math.min(offset.top, (offset.top + dpHeight &gt; viewHeight &amp;&amp; viewHeight &gt; dpHeight) ?			Math.abs(dpHeight + inputHeight) : 0);		return offset;	},	/* Find an object''s position on the screen. */	_findPos: function(obj) {		var position,			inst = this._getInst(obj),			isRTL = this._get(inst, "isRTL");		while (obj &amp;&amp; (obj.type === "hidden" || obj.nodeType !== 1 || $.expr.filters.hidden(obj))) {			obj = obj[isRTL ? "previousSibling" : "nextSibling"];		}		position = $(obj).offset();		return [position.left, position.top];	},	/* Hide the date picker from view.	 * @param  input  element - the input field attached to the date picker	 */	_hideDatepicker: function(input) {		var showAnim, duration, postProcess, onClose,			inst = this._curInst;		if (!inst || (input &amp;&amp; inst !== $.data(input, PROP_NAME))) {			return;		}		if (this._datepickerShowing) {			showAnim = this._get(inst, "showAnim");			duration = this._get(inst, "duration");			postProcess = function() {				$.datepicker._tidyDialog(inst);			};			// DEPRECATED: after BC for 1.8.x $.effects[ showAnim ] is not needed			if ( $.effects &amp;&amp; ( $.effects.effect[ showAnim ] || $.effects[ showAnim ] ) ) {				inst.dpDiv.hide(showAnim, $.datepicker._get(inst, "showOptions"), duration, postProcess);			} else {				inst.dpDiv[(showAnim === "slideDown" ? "slideUp" :					(showAnim === "fadeIn" ? "fadeOut" : "hide"))]((showAnim ? duration : null), postProcess);			}			if (!showAnim) {				postProcess();			}			this._datepickerShowing = false;			onClose = this._get(inst, "onClose");			if (onClose) {				onClose.apply((inst.input ? inst.input[0] : null), [(inst.input ? inst.input.val() : ""), inst]);			}			this._lastInput = null;			if (this._inDialog) {				this._dialogInput.css({ position: "absolute", left: "0", top: "-100px" });				if ($.blockUI) {					$.unblockUI();					$("body").append(this.dpDiv);				}			}			this._inDialog = false;		}	},	/* Tidy up after a dialog display. */	_tidyDialog: function(inst) {		inst.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar");	},	/* Close date picker if clicked elsewhere. */	_checkExternalClick: function(event) {		if (!$.datepicker._curInst) {			return;		}		var $target = $(event.target),			inst = $.datepicker._getInst($target[0]);		if ( ( ( $target[0].id !== $.datepicker._mainDivId &amp;&amp;				$target.parents("#" + $.datepicker._mainDivId).length === 0 &amp;&amp;				!$target.hasClass($.datepicker.markerClassName) &amp;&amp;				!$target.closest("." + $.datepicker._triggerClass).length &amp;&amp;				$.datepicker._datepickerShowing &amp;&amp; !($.datepicker._inDialog &amp;&amp; $.blockUI) ) ) ||			( $target.hasClass($.datepicker.markerClassName) &amp;&amp; $.datepicker._curInst !== inst ) ) {				$.datepicker._hideDatepicker();		}	},	/* Adjust one of the date sub-fields. */	_adjustDate: function(id, offset, period) {		var target = $(id),			inst = this._getInst(target[0]);		if (this._isDisabledDatepicker(target[0])) {			return;		}		this._adjustInstDate(inst, offset +			(period === "M" ? this._get(inst, "showCurrentAtPos") : 0), // undo positioning			period);		this._updateDatepicker(inst);	},	/* Action for current link. */	_gotoToday: function(id) {		var date,			target = $(id),			inst = this._getInst(target[0]);		if (this._get(inst, "gotoCurrent") &amp;&amp; inst.currentDay) {			inst.selectedDay = inst.currentDay;			inst.drawMonth = inst.selectedMonth = inst.currentMonth;			inst.drawYear = inst.selectedYear = inst.currentYear;		} else {			date = new Date();			inst.selectedDay = date.getDate();			inst.drawMonth = inst.selectedMonth = date.getMonth();			inst.drawYear = inst.selectedYear = date.getFullYear();		}		this._notifyChange(inst);		this._adjustDate(target);	},	/* Action for selecting a new month/year. */	_selectMonthYear: function(id, select, period) {		var target = $(id),			inst = this._getInst(target[0]);		inst["selected" + (period === "M" ? "Month" : "Year")] =		inst["draw" + (period === "M" ? "Month" : "Year")] =			parseInt(select.options[select.selectedIndex].value,10);		this._notifyChange(inst);		this._adjustDate(target);	},	/* Action for selecting a day. */	_selectDay: function(id, month, year, td) {		var inst,			target = $(id);		if ($(td).hasClass(this._unselectableClass) || this._isDisabledDatepicker(target[0])) {			return;		}		inst = this._getInst(target[0]);		inst.selectedDay = inst.currentDay = $("a", td).html();		inst.selectedMonth = inst.currentMonth = month;		inst.selectedYear = inst.currentYear = year;		this._selectDate(id, this._formatDate(inst,			inst.currentDay, inst.currentMonth, inst.currentYear));	},	/* Erase the input field and hide the date picker. */	_clearDate: function(id) {		var target = $(id);		this._selectDate(target, "");	},	/* Update the input field with the selected date. */	_selectDate: function(id, dateStr) {		var onSelect,			target = $(id),			inst = this._getInst(target[0]);		dateStr = (dateStr != null ? dateStr : this._formatDate(inst));		if (inst.input) {			inst.input.val(dateStr);		}		this._updateAlternate(inst);		onSelect = this._get(inst, "onSelect");		if (onSelect) {			onSelect.apply((inst.input ? inst.input[0] : null), [dateStr, inst]);  // trigger custom callback		} else if (inst.input) {			inst.input.trigger("change"); // fire the change event		}		if (inst.inline){			this._updateDatepicker(inst);		} else {			this._hideDatepicker();			this._lastInput = inst.input[0];			if (typeof(inst.input[0]) !== "object") {				inst.input.focus(); // restore focus			}			this._lastInput = null;		}	},	/* Update any alternate field to synchronise with the main field. */	_updateAlternate: function(inst) {		var altFormat, date, dateStr,			altField = this._get(inst, "altField");		if (altField) { // update alternate field too			altFormat = this._get(inst, "altFormat") || this._get(inst, "dateFormat");			date = this._getDate(inst);			dateStr = this.formatDate(altFormat, date, this._getFormatConfig(inst));			$(altField).each(function() { $(this).val(dateStr); });		}	},	/* Set as beforeShowDay function to prevent selection of weekends.	 * @param  date  Date - the date to customise	 * @return [boolean, string] - is this date selectable?, what is its CSS class?	 */	noWeekends: function(date) {		var day = date.getDay();		return [(day &gt; 0 &amp;&amp; day &lt; 6), ""];	},	/* Set as calculateWeek to determine the week of the year based on the ISO 8601 definition.	 * @param  date  Date - the date to get the week for	 * @return  number - the number of the week within the year that contains this date	 */	iso8601Week: function(date) {		var time,			checkDate = new Date(date.getTime());		// Find Thursday of this week starting on Monday		checkDate.setDate(checkDate.getDate() + 4 - (checkDate.getDay() || 7));		time = checkDate.getTime();		checkDate.setMonth(0); // Compare with Jan 1		checkDate.setDate(1);		return Math.floor(Math.round((time - checkDate) / 86400000) / 7) + 1;	},	/* Parse a string value into a date object.	 * See formatDate below for the possible formats.	 *	 * @param  format string - the expected format of the date	 * @param  value string - the date in the above format	 * @param  settings Object - attributes include:	 *					shortYearCutoff  number - the cutoff year for determining the century (optional)	 *					dayNamesShort	string[7] - abbreviated names of the days from Sunday (optional)	 *					dayNames		string[7] - names of the days from Sunday (optional)	 *					monthNamesShort string[12] - abbreviated names of the months (optional)	 *					monthNames		string[12] - names of the months (optional)	 * @return  Date - the extracted date value or null if value is blank	 */	parseDate: function (format, value, settings) {		if (format == null || value == null) {			throw "Invalid arguments";		}		value = (typeof value === "object" ? value.toString() : value + "");		if (value === "") {			return null;		}		var iFormat, dim, extra,			iValue = 0,			shortYearCutoffTemp = (settings ? settings.shortYearCutoff : null) || this._defaults.shortYearCutoff,			shortYearCutoff = (typeof shortYearCutoffTemp !== "string" ? shortYearCutoffTemp :				new Date().getFullYear() % 100 + parseInt(shortYearCutoffTemp, 10)),			dayNamesShort = (settings ? settings.dayNamesShort : null) || this._defaults.dayNamesShort,			dayNames = (settings ? settings.dayNames : null) || this._defaults.dayNames,			monthNamesShort = (settings ? settings.monthNamesShort : null) || this._defaults.monthNamesShort,			monthNames = (settings ? settings.monthNames : null) || this._defaults.monthNames,			year = -1,			month = -1,			day = -1,			doy = -1,			literal = false,			date,			// Check whether a format character is doubled			lookAhead = function(match) {				var matches = (iFormat + 1 &lt; format.length &amp;&amp; format.charAt(iFormat + 1) === match);				if (matches) {					iFormat++;				}				return matches;			},			// Extract a number from the string value			getNumber = function(match) {				var isDoubled = lookAhead(match),					size = (match === "@" ? 14 : (match === "!" ? 20 :					(match === "y" &amp;&amp; isDoubled ? 4 : (match === "o" ? 3 : 2)))),					digits = new RegExp("^\\d{1," + size + "}"),					num = value.substring(iValue).match(digits);				if (!num) {					throw "Missing number at position " + iValue;				}				iValue += num[0].length;				return parseInt(num[0], 10);			},			// Extract a name from the string value and convert to an index			getName = function(match, shortNames, longNames) {				var index = -1,					names = $.map(lookAhead(match) ? longNames : shortNames, function (v, k) {						return [ [k, v] ];					}).sort(function (a, b) {						return -(a[1].length - b[1].length);					});				$.each(names, function (i, pair) {					var name = pair[1];					if (value.substr(iValue, name.length).toLowerCase() === name.toLowerCase()) {						index = pair[0];						iValue += name.length;						return false;					}				});				if (index !== -1) {					return index + 1;				} else {					throw "Unknown name at position " + iValue;				}			},			// Confirm that a literal character matches the string value			checkLiteral = function() {				if (value.charAt(iValue) !== format.charAt(iFormat)) {					throw "Unexpected literal at position " + iValue;				}				iValue++;			};		for (iFormat = 0; iFormat &lt; format.length; iFormat++) {			if (literal) {				if (format.charAt(iFormat) === "''" &amp;&amp; !lookAhead("''")) {					literal = false;				} else {					checkLiteral();				}			} else {				switch (format.charAt(iFormat)) {					case "d":						day = getNumber("d");						break;					case "D":						getName("D", dayNamesShort, dayNames);						break;					case "o":						doy = getNumber("o");						break;					case "m":						month = getNumber("m");						break;					case "M":						month = getName("M", monthNamesShort, monthNames);						break;					case "y":						year = getNumber("y");						break;					case "@":						date = new Date(getNumber("@"));						year = date.getFullYear();						month = date.getMonth() + 1;						day = date.getDate();						break;					case "!":						date = new Date((getNumber("!") - this._ticksTo1970) / 10000);						year = date.getFullYear();						month = date.getMonth() + 1;						day = date.getDate();						break;					case "''":						if (lookAhead("''")){							checkLiteral();						} else {							literal = true;						}						break;					default:						checkLiteral();				}			}		}		if (iValue &lt; value.length){			extra = value.substr(iValue);			if (!/^\s+/.test(extra)) {				throw "Extra/unparsed characters found in date: " + extra;			}		}		if (year === -1) {			year = new Date().getFullYear();		} else if (year &lt; 100) {			year += new Date().getFullYear() - new Date().getFullYear() % 100 +				(year &lt;= shortYearCutoff ? 0 : -100);		}		if (doy &gt; -1) {			month = 1;			day = doy;			do {				dim = this._getDaysInMonth(year, month - 1);				if (day &lt;= dim) {					break;				}				month++;				day -= dim;			} while (true);		}		date = this._daylightSavingAdjust(new Date(year, month - 1, day));		if (date.getFullYear() !== year || date.getMonth() + 1 !== month || date.getDate() !== day) {			throw "Invalid date"; // E.g. 31/02/00		}		return date;	},	/* Standard date formats. */	ATOM: "yy-mm-dd", // RFC 3339 (ISO 8601)	COOKIE: "D, dd M yy",	ISO_8601: "yy-mm-dd",	RFC_822: "D, d M y",	RFC_850: "DD, dd-M-y",	RFC_1036: "D, d M y",	RFC_1123: "D, d M yy",	RFC_2822: "D, d M yy",	RSS: "D, d M y", // RFC 822	TICKS: "!",	TIMESTAMP: "@",	W3C: "yy-mm-dd", // ISO 8601	_ticksTo1970: (((1970 - 1) * 365 + Math.floor(1970 / 4) - Math.floor(1970 / 100) +		Math.floor(1970 / 400)) * 24 * 60 * 60 * 10000000),	/* Format a date object into a string value.	 * The format can be combinations of the following:	 * d  - day of month (no leading zero)	 * dd - day of month (two digit)	 * o  - day of year (no leading zeros)	 * oo - day of year (three digit)	 * D  - day name short	 * DD - day name long	 * m  - month of year (no leading zero)	 * mm - month of year (two digit)	 * M  - month name short	 * MM - month name long	 * y  - year (two digit)	 * yy - year (four digit)	 * @ - Unix timestamp (ms since 01/01/1970)	 * ! - Windows ticks (100ns since 01/01/0001)	 * "..." - literal text	 * '''' - single quote	 *	 * @param  format string - the desired format of the date	 * @param  date Date - the date value to format	 * @param  settings Object - attributes include:	 *					dayNamesShort	string[7] - abbreviated names of the days from Sunday (optional)	 *					dayNames		string[7] - names of the days from Sunday (optional)	 *					monthNamesShort string[12] - abbreviated names of the months (optional)	 *					monthNames		string[12] - names of the months (optional)	 * @return  string - the date in the above format	 */	formatDate: function (format, date, settings) {		if (!date) {			return "";		}		var iFormat,			dayNamesShort = (settings ? settings.dayNamesShort : null) || this._defaults.dayNamesShort,			dayNames = (settings ? settings.dayNames : null) || this._defaults.dayNames,			monthNamesShort = (settings ? settings.monthNamesShort : null) || this._defaults.monthNamesShort,			monthNames = (settings ? settings.monthNames : null) || this._defaults.monthNames,			// Check whether a format character is doubled			lookAhead = function(match) {				var matches = (iFormat + 1 &lt; format.length &amp;&amp; format.charAt(iFormat + 1) === match);				if (matches) {					iFormat++;				}				return matches;			},			// Format a number, with leading zero if necessary			formatNumber = function(match, value, len) {				var num = "" + value;				if (lookAhead(match)) {					while (num.length &lt; len) {						num = "0" + num;					}				}				return num;			},			// Format a name, short or long as requested			formatName = function(match, value, shortNames, longNames) {				return (lookAhead(match) ? longNames[value] : shortNames[value]);			},			output = "",			literal = false;		if (date) {			for (iFormat = 0; iFormat &lt; format.length; iFormat++) {				if (literal) {					if (format.charAt(iFormat) === "''" &amp;&amp; !lookAhead("''")) {						literal = false;					} else {						output += format.charAt(iFormat);					}				} else {					switch (format.charAt(iFormat)) {						case "d":							output += formatNumber("d", date.getDate(), 2);							break;						case "D":							output += formatName("D", date.getDay(), dayNamesShort, dayNames);							break;						case "o":							output += formatNumber("o",								Math.round((new Date(date.getFullYear(), date.getMonth(), date.getDate()).getTime() - new Date(date.getFullYear(), 0, 0).getTime()) / 86400000), 3);							break;						case "m":							output += formatNumber("m", date.getMonth() + 1, 2);							break;						case "M":							output += formatName("M", date.getMonth(), monthNamesShort, monthNames);							break;						case "y":							output += (lookAhead("y") ? date.getFullYear() :								(date.getYear() % 100 &lt; 10 ? "0" : "") + date.getYear() % 100);							break;						case "@":							output += date.getTime();							break;						case "!":							output += date.getTime() * 10000 + this._ticksTo1970;							break;						case "''":							if (lookAhead("''")) {								output += "''";							} else {								literal = true;							}							break;						default:							output += format.charAt(iFormat);					}				}			}		}		return output;	},	/* Extract all possible characters from the date format. */	_possibleChars: function (format) {		var iFormat,			chars = "",			literal = false,			// Check whether a format character is doubled			lookAhead = function(match) {				var matches = (iFormat + 1 &lt; format.length &amp;&amp; format.charAt(iFormat + 1) === match);				if (matches) {					iFormat++;				}				return matches;			};		for (iFormat = 0; iFormat &lt; format.length; iFormat++) {			if (literal) {				if (format.charAt(iFormat) === "''" &amp;&amp; !lookAhead("''")) {					literal = false;				} else {					chars += format.charAt(iFormat);				}			} else {				switch (format.charAt(iFormat)) {					case "d": case "m": case "y": case "@":						chars += "0123456789";						break;					case "D": case "M":						return null; // Accept anything					case "''":						if (lookAhead("''")) {							chars += "''";						} else {							literal = true;						}						break;					default:						chars += format.charAt(iFormat);				}			}		}		return chars;	},	/* Get a setting value, defaulting if necessary. */	_get: function(inst, name) {		return inst.settings[name] !== undefined ?			inst.settings[name] : this._defaults[name];	},	/* Parse existing date and initialise date picker. */	_setDateFromField: function(inst, noDefault) {		if (inst.input.val() === inst.lastVal) {			return;		}		var dateFormat = this._get(inst, "dateFormat"),			dates = inst.lastVal = inst.input ? inst.input.val() : null,			defaultDate = this._getDefaultDate(inst),			date = defaultDate,			settings = this._getFormatConfig(inst);		try {			date = this.parseDate(dateFormat, dates, settings) || defaultDate;		} catch (event) {			dates = (noDefault ? "" : dates);		}		inst.selectedDay = date.getDate();		inst.drawMonth = inst.selectedMonth = date.getMonth();		inst.drawYear = inst.selectedYear = date.getFullYear();		inst.currentDay = (dates ? date.getDate() : 0);		inst.currentMonth = (dates ? date.getMonth() : 0);		inst.currentYear = (dates ? date.getFullYear() : 0);		this._adjustInstDate(inst);	},	/* Retrieve the default date shown on opening. */	_getDefaultDate: function(inst) {		return this._restrictMinMax(inst,			this._determineDate(inst, this._get(inst, "defaultDate"), new Date()));	},	/* A date may be specified as an exact value or a relative one. */	_determineDate: function(inst, date, defaultDate) {		var offsetNumeric = function(offset) {				var date = new Date();				date.setDate(date.getDate() + offset);				return date;			},			offsetString = function(offset) {				try {					return $.datepicker.parseDate($.datepicker._get(inst, "dateFormat"),						offset, $.datepicker._getFormatConfig(inst));				}				catch (e) {					// Ignore				}				var date = (offset.toLowerCase().match(/^c/) ?					$.datepicker._getDate(inst) : null) || new Date(),					year = date.getFullYear(),					month = date.getMonth(),					day = date.getDate(),					pattern = /([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,					matches = pattern.exec(offset);				while (matches) {					switch (matches[2] || "d") {						case "d" : case "D" :							day += parseInt(matches[1],10); break;						case "w" : case "W" :							day += parseInt(matches[1],10) * 7; break;						case "m" : case "M" :							month += parseInt(matches[1],10);							day = Math.min(day, $.datepicker._getDaysInMonth(year, month));							break;						case "y": case "Y" :							year += parseInt(matches[1],10);							day = Math.min(day, $.datepicker._getDaysInMonth(year, month));							break;					}					matches = pattern.exec(offset);				}				return new Date(year, month, day);			},			newDate = (date == null || date === "" ? defaultDate : (typeof date === "string" ? offsetString(date) :				(typeof date === "number" ? (isNaN(date) ? defaultDate : offsetNumeric(date)) : new Date(date.getTime()))));		newDate = (newDate &amp;&amp; newDate.toString() === "Invalid Date" ? defaultDate : newDate);		if (newDate) {			newDate.setHours(0);			newDate.setMinutes(0);			newDate.setSeconds(0);			newDate.setMilliseconds(0);		}		return this._daylightSavingAdjust(newDate);	},	/* Handle switch to/from daylight saving.	 * Hours may be non-zero on daylight saving cut-over:	 * &gt; 12 when midnight changeover, but then cannot generate	 * midnight datetime, so jump to 1AM, otherwise reset.	 * @param  date  (Date) the date to check	 * @return  (Date) the corrected date	 */	_daylightSavingAdjust: function(date) {		if (!date) {			return null;		}		date.setHours(date.getHours() &gt; 12 ? date.getHours() + 2 : 0);		return date;	},	/* Set the date(s) directly. */	_setDate: function(inst, date, noChange) {		var clear = !date,			origMonth = inst.selectedMonth,			origYear = inst.selectedYear,			newDate = this._restrictMinMax(inst, this._determineDate(inst, date, new Date()));		inst.selectedDay = inst.currentDay = newDate.getDate();		inst.drawMonth = inst.selectedMonth = inst.currentMonth = newDate.getMonth();		inst.drawYear = inst.selectedYear = inst.currentYear = newDate.getFullYear();		if ((origMonth !== inst.selectedMonth || origYear !== inst.selectedYear) &amp;&amp; !noChange) {			this._notifyChange(inst);		}		this._adjustInstDate(inst);		if (inst.input) {			inst.input.val(clear ? "" : this._formatDate(inst));		}	},	/* Retrieve the date(s) directly. */	_getDate: function(inst) {		var startDate = (!inst.currentYear || (inst.input &amp;&amp; inst.input.val() === "") ? null :			this._daylightSavingAdjust(new Date(			inst.currentYear, inst.currentMonth, inst.currentDay)));			return startDate;	},	/* Attach the onxxx handlers.  These are declared statically so	 * they work with static code transformers like Caja.	 */	_attachHandlers: function(inst) {		var stepMonths = this._get(inst, "stepMonths"),			id = "#" + inst.id.replace( /\\\\/g, "\\" );		inst.dpDiv.find("[data-handler]").map(function () {			var handler = {				prev: function () {					$.datepicker._adjustDate(id, -stepMonths, "M");				},				next: function () {					$.datepicker._adjustDate(id, +stepMonths, "M");				},				hide: function () {					$.datepicker._hideDatepicker();				},				today: function () {					$.datepicker._gotoToday(id);				},				selectDay: function () {					$.datepicker._selectDay(id, +this.getAttribute("data-month"), +this.getAttribute("data-year"), this);					return false;				},				selectMonth: function () {					$.datepicker._selectMonthYear(id, this, "M");					return false;				},				selectYear: function () {					$.datepicker._selectMonthYear(id, this, "Y");					return false;				}			};			$(this).bind(this.getAttribute("data-event"), handler[this.getAttribute("data-handler")]);		});	},	/* Generate the HTML for the current state of the date picker. */	_generateHTML: function(inst) {		var maxDraw, prevText, prev, nextText, next, currentText, gotoDate,			controls, buttonPanel, firstDay, showWeek, dayNames, dayNamesMin,			monthNames, monthNamesShort, beforeShowDay, showOtherMonths,			selectOtherMonths, defaultDate, html, dow, row, group, col, selectedDate,			cornerClass, calender, thead, day, daysInMonth, leadDays, curRows, numRows,			printDate, dRow, tbody, daySettings, otherMonth, unselectable,			tempDate = new Date(),			today = this._daylightSavingAdjust(				new Date(tempDate.getFullYear(), tempDate.getMonth(), tempDate.getDate())), // clear time			isRTL = this._get(inst, "isRTL"),			showButtonPanel = this._get(inst, "showButtonPanel"),			hideIfNoPrevNext = this._get(inst, "hideIfNoPrevNext"),			navigationAsDateFormat = this._get(inst, "navigationAsDateFormat"),			numMonths = this._getNumberOfMonths(inst),			showCurrentAtPos = this._get(inst, "showCurrentAtPos"),			stepMonths = this._get(inst, "stepMonths"),			isMultiMonth = (numMonths[0] !== 1 || numMonths[1] !== 1),			currentDate = this._daylightSavingAdjust((!inst.currentDay ? new Date(9999, 9, 9) :				new Date(inst.currentYear, inst.currentMonth, inst.currentDay))),			minDate = this._getMinMaxDate(inst, "min"),			maxDate = this._getMinMaxDate(inst, "max"),			drawMonth = inst.drawMonth - showCurrentAtPos,			drawYear = inst.drawYear;		if (drawMonth &lt; 0) {			drawMonth += 12;			drawYear--;		}		if (maxDate) {			maxDraw = this._daylightSavingAdjust(new Date(maxDate.getFullYear(),				maxDate.getMonth() - (numMonths[0] * numMonths[1]) + 1, maxDate.getDate()));			maxDraw = (minDate &amp;&amp; maxDraw &lt; minDate ? minDate : maxDraw);			while (this._daylightSavingAdjust(new Date(drawYear, drawMonth, 1)) &gt; maxDraw) {				drawMonth--;				if (drawMonth &lt; 0) {					drawMonth = 11;					drawYear--;				}			}		}		inst.drawMonth = drawMonth;		inst.drawYear = drawYear;		prevText = this._get(inst, "prevText");		prevText = (!navigationAsDateFormat ? prevText : this.formatDate(prevText,			this._daylightSavingAdjust(new Date(drawYear, drawMonth - stepMonths, 1)),			this._getFormatConfig(inst)));		prev = (this._canAdjustMonth(inst, -1, drawYear, drawMonth) ?			"&lt;a class=''ui-datepicker-prev ui-corner-all'' data-handler=''prev'' data-event=''click''" +			" title=''" + prevText + "''&gt;&lt;span class=''ui-icon ui-icon-circle-triangle-" + ( isRTL ? "e" : "w") + "''&gt;" + prevText + "&lt;/span&gt;&lt;/a&gt;" :			(hideIfNoPrevNext ? "" : "&lt;a class=''ui-datepicker-prev ui-corner-all ui-state-disabled'' title=''"+ prevText +"''&gt;&lt;span class=''ui-icon ui-icon-circle-triangle-" + ( isRTL ? "e" : "w") + "''&gt;" + prevText + "&lt;/span&gt;&lt;/a&gt;"));		nextText = this._get(inst, "nextText");		nextText = (!navigationAsDateFormat ? nextText : this.formatDate(nextText,			this._daylightSavingAdjust(new Date(drawYear, drawMonth + stepMonths, 1)),			this._getFormatConfig(inst)));		next = (this._canAdjustMonth(inst, +1, drawYear, drawMonth) ?			"&lt;a class=''ui-datepicker-next ui-corner-all'' data-handler=''next'' data-event=''click''" +			" title=''" + nextText + "''&gt;&lt;span class=''ui-icon ui-icon-circle-triangle-" + ( isRTL ? "w" : "e") + "''&gt;" + nextText + "&lt;/span&gt;&lt;/a&gt;" :			(hideIfNoPrevNext ? "" : "&lt;a class=''ui-datepicker-next ui-corner-all ui-state-disabled'' title=''"+ nextText + "''&gt;&lt;span class=''ui-icon ui-icon-circle-triangle-" + ( isRTL ? "w" : "e") + "''&gt;" + nextText + "&lt;/span&gt;&lt;/a&gt;"));		currentText = this._get(inst, "currentText");		gotoDate = (this._get(inst, "gotoCurrent") &amp;&amp; inst.currentDay ? currentDate : today);		currentText = (!navigationAsDateFormat ? currentText :			this.formatDate(currentText, gotoDate, this._getFormatConfig(inst)));		controls = (!inst.inline ? "&lt;button type=''button'' class=''ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all'' data-handler=''hide'' data-event=''click''&gt;" +			this._get(inst, "closeText") + "&lt;/button&gt;" : "");		buttonPanel = (showButtonPanel) ? "&lt;div class=''ui-datepicker-buttonpane ui-widget-content''&gt;" + (isRTL ? controls : "") +			(this._isInRange(inst, gotoDate) ? "&lt;button type=''button'' class=''ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all'' data-handler=''today'' data-event=''click''" +			"&gt;" + currentText + "&lt;/button&gt;" : "") + (isRTL ? "" : controls) + "&lt;/div&gt;" : "";		firstDay = parseInt(this._get(inst, "firstDay"),10);		firstDay = (isNaN(firstDay) ? 0 : firstDay);		showWeek = this._get(inst, "showWeek");		dayNames = this._get(inst, "dayNames");		dayNamesMin = this._get(inst, "dayNamesMin");		monthNames = this._get(inst, "monthNames");		monthNamesShort = this._get(inst, "monthNamesShort");		beforeShowDay = this._get(inst, "beforeShowDay");		showOtherMonths = this._get(inst, "showOtherMonths");		selectOtherMonths = this._get(inst, "selectOtherMonths");		defaultDate = this._getDefaultDate(inst);		html = "";		dow;		for (row = 0; row &lt; numMonths[0]; row++) {			group = "";			this.maxRows = 4;			for (col = 0; col &lt; numMonths[1]; col++) {				selectedDate = this._daylightSavingAdjust(new Date(drawYear, drawMonth, inst.selectedDay));				cornerClass = " ui-corner-all";				calender = "";				if (isMultiMonth) {					calender += "&lt;div class=''ui-datepicker-group";					if (numMonths[1] &gt; 1) {						switch (col) {							case 0: calender += " ui-datepicker-group-first";								cornerClass = " ui-corner-" + (isRTL ? "right" : "left"); break;							case numMonths[1]-1: calender += " ui-datepicker-group-last";								cornerClass = " ui-corner-" + (isRTL ? "left" : "right"); break;							default: calender += " ui-datepicker-group-middle"; cornerClass = ""; break;						}					}					calender += "''&gt;";				}				calender += "&lt;div class=''ui-datepicker-header ui-widget-header ui-helper-clearfix" + cornerClass + "''&gt;" +					(/all|left/.test(cornerClass) &amp;&amp; row === 0 ? (isRTL ? next : prev) : "") +					(/all|right/.test(cornerClass) &amp;&amp; row === 0 ? (isRTL ? prev : next) : "") +					this._generateMonthYearHeader(inst, drawMonth, drawYear, minDate, maxDate,					row &gt; 0 || col &gt; 0, monthNames, monthNamesShort) + // draw month headers					"&lt;/div&gt;&lt;table class=''ui-datepicker-calendar''&gt;&lt;thead&gt;" +					"&lt;tr&gt;";				thead = (showWeek ? "&lt;th class=''ui-datepicker-week-col''&gt;" + this._get(inst, "weekHeader") + "&lt;/th&gt;" : "");				for (dow = 0; dow &lt; 7; dow++) { // days of the week					day = (dow + firstDay) % 7;					thead += "&lt;th" + ((dow + firstDay + 6) % 7 &gt;= 5 ? " class=''ui-datepicker-week-end''" : "") + "&gt;" +						"&lt;span title=''" + dayNames[day] + "''&gt;" + dayNamesMin[day] + "&lt;/span&gt;&lt;/th&gt;";				}				calender += thead + "&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;";				daysInMonth = this._getDaysInMonth(drawYear, drawMonth);				if (drawYear === inst.selectedYear &amp;&amp; drawMonth === inst.selectedMonth) {					inst.selectedDay = Math.min(inst.selectedDay, daysInMonth);				}				leadDays = (this._getFirstDayOfMonth(drawYear, drawMonth) - firstDay + 7) % 7;				curRows = Math.ceil((leadDays + daysInMonth) / 7); // calculate the number of rows to generate				numRows = (isMultiMonth ? this.maxRows &gt; curRows ? this.maxRows : curRows : curRows); //If multiple months, use the higher number of rows (see #7043)				this.maxRows = numRows;				printDate = this._daylightSavingAdjust(new Date(drawYear, drawMonth, 1 - leadDays));				for (dRow = 0; dRow &lt; numRows; dRow++) { // create date picker rows					calender += "&lt;tr&gt;";					tbody = (!showWeek ? "" : "&lt;td class=''ui-datepicker-week-col''&gt;" +						this._get(inst, "calculateWeek")(printDate) + "&lt;/td&gt;");					for (dow = 0; dow &lt; 7; dow++) { // create date picker days						daySettings = (beforeShowDay ?							beforeShowDay.apply((inst.input ? inst.input[0] : null), [printDate]) : [true, ""]);						otherMonth = (printDate.getMonth() !== drawMonth);						unselectable = (otherMonth &amp;&amp; !selectOtherMonths) || !daySettings[0] ||							(minDate &amp;&amp; printDate &lt; minDate) || (maxDate &amp;&amp; printDate &gt; maxDate);						tbody += "&lt;td class=''" +							((dow + firstDay + 6) % 7 &gt;= 5 ? " ui-datepicker-week-end" : "") + // highlight weekends							(otherMonth ? " ui-datepicker-other-month" : "") + // highlight days from other months							((printDate.getTime() === selectedDate.getTime() &amp;&amp; drawMonth === inst.selectedMonth &amp;&amp; inst._keyEvent) || // user pressed key							(defaultDate.getTime() === printDate.getTime() &amp;&amp; defaultDate.getTime() === selectedDate.getTime()) ?							// or defaultDate is current printedDate and defaultDate is selectedDate							" " + this._dayOverClass : "") + // highlight selected day							(unselectable ? " " + this._unselectableClass + " ui-state-disabled": "") +  // highlight unselectable days							(otherMonth &amp;&amp; !showOtherMonths ? "" : " " + daySettings[1] + // highlight custom dates							(printDate.getTime() === currentDate.getTime() ? " " + this._currentClass : "") + // highlight selected day							(printDate.getTime() === today.getTime() ? " ui-datepicker-today" : "")) + "''" + // highlight today (if different)							((!otherMonth || showOtherMonths) &amp;&amp; daySettings[2] ? " title=''" + daySettings[2].replace(/''/g, "&amp;#39;") + "''" : "") + // cell title							(unselectable ? "" : " data-handler=''selectDay'' data-event=''click'' data-month=''" + printDate.getMonth() + "'' data-year=''" + printDate.getFullYear() + "''") + "&gt;" + // actions							(otherMonth &amp;&amp; !showOtherMonths ? "&amp;#xa0;" : // display for other months							(unselectable ? "&lt;span class=''ui-state-default''&gt;" + printDate.getDate() + "&lt;/span&gt;" : "&lt;a class=''ui-state-default" +							(printDate.getTime() === today.getTime() ? " ui-state-highlight" : "") +							(printDate.getTime() === currentDate.getTime() ? " ui-state-active" : "") + // highlight selected day							(otherMonth ? " ui-priority-secondary" : "") + // distinguish dates from other months							"'' href=''#''&gt;" + printDate.getDate() + "&lt;/a&gt;")) + "&lt;/td&gt;"; // display selectable date						printDate.setDate(printDate.getDate() + 1);						printDate = this._daylightSavingAdjust(printDate);					}					calender += tbody + "&lt;/tr&gt;";				}				drawMonth++;				if (drawMonth &gt; 11) {					drawMonth = 0;					drawYear++;				}				calender += "&lt;/tbody&gt;&lt;/table&gt;" + (isMultiMonth ? "&lt;/div&gt;" +							((numMonths[0] &gt; 0 &amp;&amp; col === numMonths[1]-1) ? "&lt;div class=''ui-datepicker-row-break''&gt;&lt;/div&gt;" : "") : "");				group += calender;			}			html += group;		}		html += buttonPanel;		inst._keyEvent = false;		return html;	},	/* Generate the month and year header. */	_generateMonthYearHeader: function(inst, drawMonth, drawYear, minDate, maxDate,			secondary, monthNames, monthNamesShort) {		var inMinYear, inMaxYear, month, years, thisYear, determineYear, year, endYear,			changeMonth = this._get(inst, "changeMonth"),			changeYear = this._get(inst, "changeYear"),			showMonthAfterYear = this._get(inst, "showMonthAfterYear"),			html = "&lt;div class=''ui-datepicker-title''&gt;",			monthHtml = "";		// month selection		if (secondary || !changeMonth) {			monthHtml += "&lt;span class=''ui-datepicker-month''&gt;" + monthNames[drawMonth] + "&lt;/span&gt;";		} else {			inMinYear = (minDate &amp;&amp; minDate.getFullYear() === drawYear);			inMaxYear = (maxDate &amp;&amp; maxDate.getFullYear() === drawYear);			monthHtml += "&lt;select class=''ui-datepicker-month'' data-handler=''selectMonth'' data-event=''change''&gt;";			for ( month = 0; month &lt; 12; month++) {				if ((!inMinYear || month &gt;= minDate.getMonth()) &amp;&amp; (!inMaxYear || month &lt;= maxDate.getMonth())) {					monthHtml += "&lt;option value=''" + month + "''" +						(month === drawMonth ? " selected=''selected''" : "") +						"&gt;" + monthNamesShort[month] + "&lt;/option&gt;";				}			}			monthHtml += "&lt;/select&gt;";		}		if (!showMonthAfterYear) {			html += monthHtml + (secondary || !(changeMonth &amp;&amp; changeYear) ? "&amp;#xa0;" : "");		}		// year selection		if ( !inst.yearshtml ) {			inst.yearshtml = "";			if (secondary || !changeYear) {				html += "&lt;span class=''ui-datepicker-year''&gt;" + drawYear + "&lt;/span&gt;";			} else {				// determine range of years to display				years = this._get(inst, "yearRange").split(":");				thisYear = new Date().getFullYear();				determineYear = function(value) {					var year = (value.match(/c[+\-].*/) ? drawYear + parseInt(value.substring(1), 10) :						(value.match(/[+\-].*/) ? thisYear + parseInt(value, 10) :						parseInt(value, 10)));					return (isNaN(year) ? thisYear : year);				};				year = determineYear(years[0]);				endYear = Math.max(year, determineYear(years[1] || ""));				year = (minDate ? Math.max(year, minDate.getFullYear()) : year);				endYear = (maxDate ? Math.min(endYear, maxDate.getFullYear()) : endYear);				inst.yearshtml += "&lt;select class=''ui-datepicker-year'' data-handler=''selectYear'' data-event=''change''&gt;";				for (; year &lt;= endYear; year++) {					inst.yearshtml += "&lt;option value=''" + year + "''" +						(year === drawYear ? " selected=''selected''" : "") +						"&gt;" + year + "&lt;/option&gt;";				}				inst.yearshtml += "&lt;/select&gt;";				html += inst.yearshtml;				inst.yearshtml = null;			}		}		html += this._get(inst, "yearSuffix");		if (showMonthAfterYear) {			html += (secondary || !(changeMonth &amp;&amp; changeYear) ? "&amp;#xa0;" : "") + monthHtml;		}		html += "&lt;/div&gt;"; // Close datepicker_header		return html;	},	/* Adjust one of the date sub-fields. */	_adjustInstDate: function(inst, offset, period) {		var year = inst.drawYear + (period === "Y" ? offset : 0),			month = inst.drawMonth + (period === "M" ? offset : 0),			day = Math.min(inst.selectedDay, this._getDaysInMonth(year, month)) + (period === "D" ? offset : 0),			date = this._restrictMinMax(inst, this._daylightSavingAdjust(new Date(year, month, day)));		inst.selectedDay = date.getDate();		inst.drawMonth = inst.selectedMonth = date.getMonth();		inst.drawYear = inst.selectedYear = date.getFullYear();		if (period === "M" || period === "Y") {			this._notifyChange(inst);		}	},	/* Ensure a date is within any min/max bounds. */	_restrictMinMax: function(inst, date) {		var minDate = this._getMinMaxDate(inst, "min"),			maxDate = this._getMinMaxDate(inst, "max"),			newDate = (minDate &amp;&amp; date &lt; minDate ? minDate : date);		return (maxDate &amp;&amp; newDate &gt; maxDate ? maxDate : newDate);	},	/* Notify change of month/year. */	_notifyChange: function(inst) {		var onChange = this._get(inst, "onChangeMonthYear");		if (onChange) {			onChange.apply((inst.input ? inst.input[0] : null),				[inst.selectedYear, inst.selectedMonth + 1, inst]);		}	},	/* Determine the number of months to show. */	_getNumberOfMonths: function(inst) {		var numMonths = this._get(inst, "numberOfMonths");		return (numMonths == null ? [1, 1] : (typeof numMonths === "number" ? [1, numMonths] : numMonths));	},	/* Determine the current maximum date - ensure no time components are set. */	_getMinMaxDate: function(inst, minMax) {		return this._determineDate(inst, this._get(inst, minMax + "Date"), null);	},	/* Find the number of days in a given month. */	_getDaysInMonth: function(year, month) {		return 32 - this._daylightSavingAdjust(new Date(year, month, 32)).getDate();	},	/* Find the day of the week of the first of a month. */	_getFirstDayOfMonth: function(year, month) {		return new Date(year, month, 1).getDay();	},	/* Determines if we should allow a "next/prev" month display change. */	_canAdjustMonth: function(inst, offset, curYear, curMonth) {		var numMonths = this._getNumberOfMonths(inst),			date = this._daylightSavingAdjust(new Date(curYear,			curMonth + (offset &lt; 0 ? offset : numMonths[0] * numMonths[1]), 1));		if (offset &lt; 0) {			date.setDate(this._getDaysInMonth(date.getFullYear(), date.getMonth()));		}		return this._isInRange(inst, date);	},	/* Is the given date in the accepted range? */	_isInRange: function(inst, date) {		var yearSplit, currentYear,			minDate = this._getMinMaxDate(inst, "min"),			maxDate = this._getMinMaxDate(inst, "max"),			minYear = null,			maxYear = null,			years = this._get(inst, "yearRange");			if (years){				yearSplit = years.split(":");				currentYear = new Date().getFullYear();				minYear = parseInt(yearSplit[0], 10);				maxYear = parseInt(yearSplit[1], 10);				if ( yearSplit[0].match(/[+\-].*/) ) {					minYear += currentYear;				}				if ( yearSplit[1].match(/[+\-].*/) ) {					maxYear += currentYear;				}			}		return ((!minDate || date.getTime() &gt;= minDate.getTime()) &amp;&amp;			(!maxDate || date.getTime() &lt;= maxDate.getTime()) &amp;&amp;			(!minYear || date.getFullYear() &gt;= minYear) &amp;&amp;			(!maxYear || date.getFullYear() &lt;= maxYear));	},	/* Provide the configuration settings for formatting/parsing. */	_getFormatConfig: function(inst) {		var shortYearCutoff = this._get(inst, "shortYearCutoff");		shortYearCutoff = (typeof shortYearCutoff !== "string" ? shortYearCutoff :			new Date().getFullYear() % 100 + parseInt(shortYearCutoff, 10));		return {shortYearCutoff: shortYearCutoff,			dayNamesShort: this._get(inst, "dayNamesShort"), dayNames: this._get(inst, "dayNames"),			monthNamesShort: this._get(inst, "monthNamesShort"), monthNames: this._get(inst, "monthNames")};	},	/* Format the given date for display. */	_formatDate: function(inst, day, month, year) {		if (!day) {			inst.currentDay = inst.selectedDay;			inst.currentMonth = inst.selectedMonth;			inst.currentYear = inst.selectedYear;		}		var date = (day ? (typeof day === "object" ? day :			this._daylightSavingAdjust(new Date(year, month, day))) :			this._daylightSavingAdjust(new Date(inst.currentYear, inst.currentMonth, inst.currentDay)));		return this.formatDate(this._get(inst, "dateFormat"), date, this._getFormatConfig(inst));	}});/* * Bind hover events for datepicker elements. * Done via delegate so the binding only occurs once in the lifetime of the parent div. * Global instActive, set by _updateDatepicker allows the handlers to find their way back to the active picker. */function bindHover(dpDiv) {	var selector = "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";	return dpDiv.delegate(selector, "mouseout", function() {			$(this).removeClass("ui-state-hover");			if (this.className.indexOf("ui-datepicker-prev") !== -1) {				$(this).removeClass("ui-datepicker-prev-hover");			}			if (this.className.indexOf("ui-datepicker-next") !== -1) {				$(this).removeClass("ui-datepicker-next-hover");			}		})		.delegate(selector, "mouseover", function(){			if (!$.datepicker._isDisabledDatepicker( instActive.inline ? dpDiv.parent()[0] : instActive.input[0])) {				$(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover");				$(this).addClass("ui-state-hover");				if (this.className.indexOf("ui-datepicker-prev") !== -1) {					$(this).addClass("ui-datepicker-prev-hover");				}				if (this.className.indexOf("ui-datepicker-next") !== -1) {					$(this).addClass("ui-datepicker-next-hover");				}			}		});}/* jQuery extend now ignores nulls! */function extendRemove(target, props) {	$.extend(target, props);	for (var name in props) {		if (props[name] == null) {			target[name] = props[name];		}	}	return target;}/* Invoke the datepicker functionality.   @param  options  string - a command, optionally followed by additional parameters or					Object - settings for attaching new datepicker functionality   @return  jQuery object */$.fn.datepicker = function(options){	/* Verify an empty collection wasn''t passed - Fixes #6976 */	if ( !this.length ) {		return this;	}	/* Initialise the date picker. */	if (!$.datepicker.initialized) {		$(document).mousedown($.datepicker._checkExternalClick);		$.datepicker.initialized = true;	}	/* Append datepicker main container to body if not exist. */	if ($("#"+$.datepicker._mainDivId).length === 0) {		$("body").append($.datepicker.dpDiv);	}	var otherArgs = Array.prototype.slice.call(arguments, 1);	if (typeof options === "string" &amp;&amp; (options === "isDisabled" || options === "getDate" || options === "widget")) {		return $.datepicker["_" + options + "Datepicker"].			apply($.datepicker, [this[0]].concat(otherArgs));	}	if (options === "option" &amp;&amp; arguments.length === 2 &amp;&amp; typeof arguments[1] === "string") {		return $.datepicker["_" + options + "Datepicker"].			apply($.datepicker, [this[0]].concat(otherArgs));	}	return this.each(function() {		typeof options === "string" ?			$.datepicker["_" + options + "Datepicker"].				apply($.datepicker, [this].concat(otherArgs)) :			$.datepicker._attachDatepicker(this, options);	});};$.datepicker = new Datepicker(); // singleton instance$.datepicker.initialized = false;$.datepicker.uuid = new Date().getTime();$.datepicker.version = "1.10.4";})(jQuery);(function( $, undefined ) {var sizeRelatedOptions = {		buttons: true,		height: true,		maxHeight: true,		maxWidth: true,		minHeight: true,		minWidth: true,		width: true	},	resizableRelatedOptions = {		maxHeight: true,		maxWidth: true,		minHeight: true,		minWidth: true	};$.widget( "ui.dialog", {	version: "1.10.4",	options: {		appendTo: "body",		autoOpen: true,		buttons: [],		closeOnEscape: true,		closeText: "close",		dialogClass: "",		draggable: true,		hide: null,		height: "auto",		maxHeight: null,		maxWidth: null,		minHeight: 150,		minWidth: 150,		modal: false,		position: {			my: "center",			at: "center",			of: window,			collision: "fit",			// Ensure the titlebar is always visible			using: function( pos ) {				var topOffset = $( this ).css( pos ).offset().top;				if ( topOffset &lt; 0 ) {					$( this ).css( "top", pos.top - topOffset );				}			}		},		resizable: true,		show: null,		title: null,		width: 300,		// callbacks		beforeClose: null,		close: null,		drag: null,		dragStart: null,		dragStop: null,		focus: null,		open: null,		resize: null,		resizeStart: null,		resizeStop: null	},	_create: function() {		this.originalCss = {			display: this.element[0].style.display,			width: this.element[0].style.width,			minHeight: this.element[0].style.minHeight,			maxHeight: this.element[0].style.maxHeight,			height: this.element[0].style.height		};		this.originalPosition = {			parent: this.element.parent(),			index: this.element.parent().children().index( this.element )		};		this.originalTitle = this.element.attr("title");		this.options.title = this.options.title || this.originalTitle;		this._createWrapper();		this.element			.show()			.removeAttr("title")			.addClass("ui-dialog-content ui-widget-content")			.appendTo( this.uiDialog );		this._createTitlebar();		this._createButtonPane();		if ( this.options.draggable &amp;&amp; $.fn.draggable ) {			this._makeDraggable();		}		if ( this.options.resizable &amp;&amp; $.fn.resizable ) {			this._makeResizable();		}		this._isOpen = false;	},	_init: function() {		if ( this.options.autoOpen ) {			this.open();		}	},	_appendTo: function() {		var element = this.options.appendTo;		if ( element &amp;&amp; (element.jquery || element.nodeType) ) {			return $( element );		}		return this.document.find( element || "body" ).eq( 0 );	},	_destroy: function() {		var next,			originalPosition = this.originalPosition;		this._destroyOverlay();		this.element			.removeUniqueId()			.removeClass("ui-dialog-content ui-widget-content")			.css( this.originalCss )			// Without detaching first, the following becomes really slow			.detach();		this.uiDialog.stop( true, true ).remove();		if ( this.originalTitle ) {			this.element.attr( "title", this.originalTitle );		}		next = originalPosition.parent.children().eq( originalPosition.index );		// Don''t try to place the dialog next to itself (#8613)		if ( next.length &amp;&amp; next[0] !== this.element[0] ) {			next.before( this.element );		} else {			originalPosition.parent.append( this.element );		}	},	widget: function() {		return this.uiDialog;	},	disable: $.noop,	enable: $.noop,	close: function( event ) {		var activeElement,			that = this;		if ( !this._isOpen || this._trigger( "beforeClose", event ) === false ) {			return;		}		this._isOpen = false;		this._destroyOverlay();		if ( !this.opener.filter(":focusable").focus().length ) {			// support: IE9			// IE9 throws an "Unspecified error" accessing document.activeElement from an &lt;iframe&gt;			try {				activeElement = this.document[ 0 ].activeElement;				// Support: IE9, IE10				// If the &lt;body&gt; is blurred, IE will switch windows, see #4520				if ( activeElement &amp;&amp; activeElement.nodeName.toLowerCase() !== "body" ) {					// Hiding a focused element doesn''t trigger blur in WebKit					// so in case we have nothing to focus on, explicitly blur the active element					// https://bugs.webkit.org/show_bug.cgi?id=47182					$( activeElement ).blur();				}			} catch ( error ) {}		}		this._hide( this.uiDialog, this.options.hide, function() {			that._trigger( "close", event );		});	},	isOpen: function() {		return this._isOpen;	},	moveToTop: function() {		this._moveToTop();	},	_moveToTop: function( event, silent ) {		var moved = !!this.uiDialog.nextAll(":visible").insertBefore( this.uiDialog ).length;		if ( moved &amp;&amp; !silent ) {			this._trigger( "focus", event );		}		return moved;	},	open: function() {		var that = this;		if ( this._isOpen ) {			if ( this._moveToTop() ) {				this._focusTabbable();			}			return;		}		this._isOpen = true;		this.opener = $( this.document[0].activeElement );		this._size();		this._position();		this._createOverlay();		this._moveToTop( null, true );		this._show( this.uiDialog, this.options.show, function() {			that._focusTabbable();			that._trigger("focus");		});		this._trigger("open");	},	_focusTabbable: function() {		// Set focus to the first match:		// 1. First element inside the dialog matching [autofocus]		// 2. Tabbable element inside the content element		// 3. Tabbable element inside the buttonpane		// 4. The close button		// 5. The dialog itself		var hasFocus = this.element.find("[autofocus]");		if ( !hasFocus.length ) {			hasFocus = this.element.find(":tabbable");		}		if ( !hasFocus.length ) {			hasFocus = this.uiDialogButtonPane.find(":tabbable");		}		if ( !hasFocus.length ) {			hasFocus = this.uiDialogTitlebarClose.filter(":tabbable");		}		if ( !hasFocus.length ) {			hasFocus = this.uiDialog;		}		hasFocus.eq( 0 ).focus();	},	_keepFocus: function( event ) {		function checkFocus() {			var activeElement = this.document[0].activeElement,				isActive = this.uiDialog[0] === activeElement ||					$.contains( this.uiDialog[0], activeElement );			if ( !isActive ) {				this._focusTabbable();			}		}		event.preventDefault();		checkFocus.call( this );		// support: IE		// IE &lt;= 8 doesn''t prevent moving focus even with event.preventDefault()		// so we check again later		this._delay( checkFocus );	},	_createWrapper: function() {		this.uiDialog = $("&lt;div&gt;")			.addClass( "ui-dialog ui-widget ui-widget-content ui-corner-all ui-front " +				this.options.dialogClass )			.hide()			.attr({				// Setting tabIndex makes the div focusable				tabIndex: -1,				role: "dialog"			})			.appendTo( this._appendTo() );		this._on( this.uiDialog, {			keydown: function( event ) {				if ( this.options.closeOnEscape &amp;&amp; !event.isDefaultPrevented() &amp;&amp; event.keyCode &amp;&amp;						event.keyCode === $.ui.keyCode.ESCAPE ) {					event.preventDefault();					this.close( event );					return;				}				// prevent tabbing out of dialogs				if ( event.keyCode !== $.ui.keyCode.TAB ) {					return;				}				var tabbables = this.uiDialog.find(":tabbable"),					first = tabbables.filter(":first"),					last  = tabbables.filter(":last");				if ( ( event.target === last[0] || event.target === this.uiDialog[0] ) &amp;&amp; !event.shiftKey ) {					first.focus( 1 );					event.preventDefault();				} else if ( ( event.target === first[0] || event.target === this.uiDialog[0] ) &amp;&amp; event.shiftKey ) {					last.focus( 1 );					event.preventDefault();				}			},			mousedown: function( event ) {				if ( this._moveToTop( event ) ) {					this._focusTabbable();				}			}		});		// We assume that any existing aria-describedby attribute means		// that the dialog content is marked up properly		// otherwise we brute force the content as the description		if ( !this.element.find("[aria-describedby]").length ) {			this.uiDialog.attr({				"aria-describedby": this.element.uniqueId().attr("id")			});		}	},	_createTitlebar: function() {		var uiDialogTitle;		this.uiDialogTitlebar = $("&lt;div&gt;")			.addClass("ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix")			.prependTo( this.uiDialog );		this._on( this.uiDialogTitlebar, {			mousedown: function( event ) {				// Don''t prevent click on close button (#8838)				// Focusing a dialog that is partially scrolled out of view				// causes the browser to scroll it into view, preventing the click event				if ( !$( event.target ).closest(".ui-dialog-titlebar-close") ) {					// Dialog isn''t getting focus when dragging (#8063)					this.uiDialog.focus();				}			}		});		// support: IE		// Use type="button" to prevent enter keypresses in textboxes from closing the		// dialog in IE (#9312)		this.uiDialogTitlebarClose = $( "&lt;button type=''button''&gt;&lt;/button&gt;" )			.button({				label: this.options.closeText,				icons: {					primary: "ui-icon-closethick"				},				text: false			})			.addClass("ui-dialog-titlebar-close")			.appendTo( this.uiDialogTitlebar );		this._on( this.uiDialogTitlebarClose, {			click: function( event ) {				event.preventDefault();				this.close( event );			}		});		uiDialogTitle = $("&lt;span&gt;")			.uniqueId()			.addClass("ui-dialog-title")			.prependTo( this.uiDialogTitlebar );		this._title( uiDialogTitle );		this.uiDialog.attr({			"aria-labelledby": uiDialogTitle.attr("id")		});	},	_title: function( title ) {		if ( !this.options.title ) {			title.html("&amp;#160;");		}		title.text( this.options.title );	},	_createButtonPane: function() {		this.uiDialogButtonPane = $("&lt;div&gt;")			.addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix");		this.uiButtonSet = $("&lt;div&gt;")			.addClass("ui-dialog-buttonset")			.appendTo( this.uiDialogButtonPane );		this._createButtons();	},	_createButtons: function() {		var that = this,			buttons = this.options.buttons;		// if we already have a button pane, remove it		this.uiDialogButtonPane.remove();		this.uiButtonSet.empty();		if ( $.isEmptyObject( buttons ) || ($.isArray( buttons ) &amp;&amp; !buttons.length) ) {			this.uiDialog.removeClass("ui-dialog-buttons");			return;		}		$.each( buttons, function( name, props ) {			var click, buttonOptions;			props = $.isFunction( props ) ?				{ click: props, text: name } :				props;			// Default to a non-submitting button			props = $.extend( { type: "button" }, props );			// Change the context for the click callback to be the main element			click = props.click;			props.click = function() {				click.apply( that.element[0], arguments );			};			buttonOptions = {				icons: props.icons,				text: props.showText			};			delete props.icons;			delete props.showText;			$( "&lt;button&gt;&lt;/button&gt;", props )				.button( buttonOptions )				.appendTo( that.uiButtonSet );		});		this.uiDialog.addClass("ui-dialog-buttons");		this.uiDialogButtonPane.appendTo( this.uiDialog );	},	_makeDraggable: function() {		var that = this,			options = this.options;		function filteredUi( ui ) {			return {				position: ui.position,				offset: ui.offset			};		}		this.uiDialog.draggable({			cancel: ".ui-dialog-content, .ui-dialog-titlebar-close",			handle: ".ui-dialog-titlebar",			containment: "document",			start: function( event, ui ) {				$( this ).addClass("ui-dialog-dragging");				that._blockFrames();				that._trigger( "dragStart", event, filteredUi( ui ) );			},			drag: function( event, ui ) {				that._trigger( "drag", event, filteredUi( ui ) );			},			stop: function( event, ui ) {				options.position = [					ui.position.left - that.document.scrollLeft(),					ui.position.top - that.document.scrollTop()				];				$( this ).removeClass("ui-dialog-dragging");				that._unblockFrames();				that._trigger( "dragStop", event, filteredUi( ui ) );			}		});	},	_makeResizable: function() {		var that = this,			options = this.options,			handles = options.resizable,			// .ui-resizable has position: relative defined in the stylesheet			// but dialogs have to use absolute or fixed positioning			position = this.uiDialog.css("position"),			resizeHandles = typeof handles === "string" ?				handles	:				"n,e,s,w,se,sw,ne,nw";		function filteredUi( ui ) {			return {				originalPosition: ui.originalPosition,				originalSize: ui.originalSize,				position: ui.position,				size: ui.size			};		}		this.uiDialog.resizable({			cancel: ".ui-dialog-content",			containment: "document",			alsoResize: this.element,			maxWidth: options.maxWidth,			maxHeight: options.maxHeight,			minWidth: options.minWidth,			minHeight: this._minHeight(),			handles: resizeHandles,			start: function( event, ui ) {				$( this ).addClass("ui-dialog-resizing");				that._blockFrames();				that._trigger( "resizeStart", event, filteredUi( ui ) );			},			resize: function( event, ui ) {				that._trigger( "resize", event, filteredUi( ui ) );			},			stop: function( event, ui ) {				options.height = $( this ).height();				options.width = $( this ).width();				$( this ).removeClass("ui-dialog-resizing");				that._unblockFrames();				that._trigger( "resizeStop", event, filteredUi( ui ) );			}		})		.css( "position", position );	},	_minHeight: function() {		var options = this.options;		return options.height === "auto" ?			options.minHeight :			Math.min( options.minHeight, options.height );	},	_position: function() {		// Need to show the dialog to get the actual offset in the position plugin		var isVisible = this.uiDialog.is(":visible");		if ( !isVisible ) {			this.uiDialog.show();		}		this.uiDialog.position( this.options.position );		if ( !isVisible ) {			this.uiDialog.hide();		}	},	_setOptions: function( options ) {		var that = this,			resize = false,			resizableOptions = {};		$.each( options, function( key, value ) {			that._setOption( key, value );			if ( key in sizeRelatedOptions ) {				resize = true;			}			if ( key in resizableRelatedOptions ) {				resizableOptions[ key ] = value;			}		});		if ( resize ) {			this._size();			this._position();		}		if ( this.uiDialog.is(":data(ui-resizable)") ) {			this.uiDialog.resizable( "option", resizableOptions );		}	},	_setOption: function( key, value ) {		var isDraggable, isResizable,			uiDialog = this.uiDialog;		if ( key === "dialogClass" ) {			uiDialog				.removeClass( this.options.dialogClass )				.addClass( value );		}		if ( key === "disabled" ) {			return;		}		this._super( key, value );		if ( key === "appendTo" ) {			this.uiDialog.appendTo( this._appendTo() );		}		if ( key === "buttons" ) {			this._createButtons();		}		if ( key === "closeText" ) {			this.uiDialogTitlebarClose.button({				// Ensure that we always pass a string				label: "" + value			});		}		if ( key === "draggable" ) {			isDraggable = uiDialog.is(":data(ui-draggable)");			if ( isDraggable &amp;&amp; !value ) {				uiDialog.draggable("destroy");			}			if ( !isDraggable &amp;&amp; value ) {				this._makeDraggable();			}		}		if ( key === "position" ) {			this._position();		}		if ( key === "resizable" ) {			// currently resizable, becoming non-resizable			isResizable = uiDialog.is(":data(ui-resizable)");			if ( isResizable &amp;&amp; !value ) {				uiDialog.resizable("destroy");			}			// currently resizable, changing handles			if ( isResizable &amp;&amp; typeof value === "string" ) {				uiDialog.resizable( "option", "handles", value );			}			// currently non-resizable, becoming resizable			if ( !isResizable &amp;&amp; value !== false ) {				this._makeResizable();			}		}		if ( key === "title" ) {			this._title( this.uiDialogTitlebar.find(".ui-dialog-title") );		}	},	_size: function() {		// If the user has resized the dialog, the .ui-dialog and .ui-dialog-content		// divs will both have width and height set, so we need to reset them		var nonContentHeight, minContentHeight, maxContentHeight,			options = this.options;		// Reset content sizing		this.element.show().css({			width: "auto",			minHeight: 0,			maxHeight: "none",			height: 0		});		if ( options.minWidth &gt; options.width ) {			options.width = options.minWidth;		}		// reset wrapper sizing		// determine the height of all the non-content elements		nonContentHeight = this.uiDialog.css({				height: "auto",				width: options.width			})			.outerHeight();		minContentHeight = Math.max( 0, options.minHeight - nonContentHeight );		maxContentHeight = typeof options.maxHeight === "number" ?			Math.max( 0, options.maxHeight - nonContentHeight ) :			"none";		if ( options.height === "auto" ) {			this.element.css({				minHeight: minContentHeight,				maxHeight: maxContentHeight,				height: "auto"			});		} else {			this.element.height( Math.max( 0, options.height - nonContentHeight ) );		}		if (this.uiDialog.is(":data(ui-resizable)") ) {			this.uiDialog.resizable( "option", "minHeight", this._minHeight() );		}	},	_blockFrames: function() {		this.iframeBlocks = this.document.find( "iframe" ).map(function() {			var iframe = $( this );			return $( "&lt;div&gt;" )				.css({					position: "absolute",					width: iframe.outerWidth(),					height: iframe.outerHeight()				})				.appendTo( iframe.parent() )				.offset( iframe.offset() )[0];		});	},	_unblockFrames: function() {		if ( this.iframeBlocks ) {			this.iframeBlocks.remove();			delete this.iframeBlocks;		}	},	_allowInteraction: function( event ) {		if ( $( event.target ).closest(".ui-dialog").length ) {			return true;		}		// TODO: Remove hack when datepicker implements		// the .ui-front logic (#8989)		return !!$( event.target ).closest(".ui-datepicker").length;	},	_createOverlay: function() {		if ( !this.options.modal ) {			return;		}		var that = this,			widgetFullName = this.widgetFullName;		if ( !$.ui.dialog.overlayInstances ) {			// Prevent use of anchors and inputs.			// We use a delay in case the overlay is created from an			// event that we''re going to be cancelling. (#2804)			this._delay(function() {				// Handle .dialog().dialog("close") (#4065)				if ( $.ui.dialog.overlayInstances ) {					this.document.bind( "focusin.dialog", function( event ) {						if ( !that._allowInteraction( event ) ) {							event.preventDefault();							$(".ui-dialog:visible:last .ui-dialog-content")								.data( widgetFullName )._focusTabbable();						}					});				}			});		}		this.overlay = $("&lt;div&gt;")			.addClass("ui-widget-overlay ui-front")			.appendTo( this._appendTo() );		this._on( this.overlay, {			mousedown: "_keepFocus"		});		$.ui.dialog.overlayInstances++;	},	_destroyOverlay: function() {		if ( !this.options.modal ) {			return;		}		if ( this.overlay ) {			$.ui.dialog.overlayInstances--;			if ( !$.ui.dialog.overlayInstances ) {				this.document.unbind( "focusin.dialog" );			}			this.overlay.remove();			this.overlay = null;		}	}});$.ui.dialog.overlayInstances = 0;// DEPRECATEDif ( $.uiBackCompat !== false ) {	// position option with array notation	// just override with old implementation	$.widget( "ui.dialog", $.ui.dialog, {		_position: function() {			var position = this.options.position,				myAt = [],				offset = [ 0, 0 ],				isVisible;			if ( position ) {				if ( typeof position === "string" || (typeof position === "object" &amp;&amp; "0" in position ) ) {					myAt = position.split ? position.split(" ") : [ position[0], position[1] ];					if ( myAt.length === 1 ) {						myAt[1] = myAt[0];					}					$.each( [ "left", "top" ], function( i, offsetPosition ) {						if ( +myAt[ i ] === myAt[ i ] ) {							offset[ i ] = myAt[ i ];							myAt[ i ] = offsetPosition;						}					});					position = {						my: myAt[0] + (offset[0] &lt; 0 ? offset[0] : "+" + offset[0]) + " " +							myAt[1] + (offset[1] &lt; 0 ? offset[1] : "+" + offset[1]),						at: myAt.join(" ")					};				}				position = $.extend( {}, $.ui.dialog.prototype.options.position, position );			} else {				position = $.ui.dialog.prototype.options.position;			}			// need to show the dialog to get the actual offset in the position plugin			isVisible = this.uiDialog.is(":visible");			if ( !isVisible ) {				this.uiDialog.show();			}			this.uiDialog.position( position );			if ( !isVisible ) {				this.uiDialog.hide();			}		}	});}}( jQuery ) );(function( $, undefined ) {var rvertical = /up|down|vertical/,	rpositivemotion = /up|left|vertical|horizontal/;$.effects.effect.blind = function( o, done ) {	// Create element	var el = $( this ),		props = [ "position", "top", "bottom", "left", "right", "height", "width" ],		mode = $.effects.setMode( el, o.mode || "hide" ),		direction = o.direction || "up",		vertical = rvertical.test( direction ),		ref = vertical ? "height" : "width",		ref2 = vertical ? "top" : "left",		motion = rpositivemotion.test( direction ),		animation = {},		show = mode === "show",		wrapper, distance, margin;	// if already wrapped, the wrapper''s properties are my property. #6245	if ( el.parent().is( ".ui-effects-wrapper" ) ) {		$.effects.save( el.parent(), props );	} else {		$.effects.save( el, props );	}	el.show();	wrapper = $.effects.createWrapper( el ).css({		overflow: "hidden"	});	distance = wrapper[ ref ]();	margin = parseFloat( wrapper.css( ref2 ) ) || 0;	animation[ ref ] = show ? distance : 0;	if ( !motion ) {		el			.css( vertical ? "bottom" : "right", 0 )			.css( vertical ? "top" : "left", "auto" )			.css({ position: "absolute" });		animation[ ref2 ] = show ? margin : distance + margin;	}	// start at 0 if we are showing	if ( show ) {		wrapper.css( ref, 0 );		if ( ! motion ) {			wrapper.css( ref2, margin + distance );		}	}	// Animate	wrapper.animate( animation, {		duration: o.duration,		easing: o.easing,		queue: false,		complete: function() {			if ( mode === "hide" ) {				el.hide();			}			$.effects.restore( el, props );			$.effects.removeWrapper( el );			done();		}	});};})(jQuery);(function( $, undefined ) {$.effects.effect.bounce = function( o, done ) {	var el = $( this ),		props = [ "position", "top", "bottom", "left", "right", "height", "width" ],		// defaults:		mode = $.effects.setMode( el, o.mode || "effect" ),		hide = mode === "hide",		show = mode === "show",		direction = o.direction || "up",		distance = o.distance,		times = o.times || 5,		// number of internal animations		anims = times * 2 + ( show || hide ? 1 : 0 ),		speed = o.duration / anims,		easing = o.easing,		// utility:		ref = ( direction === "up" || direction === "down" ) ? "top" : "left",		motion = ( direction === "up" || direction === "left" ),		i,		upAnim,		downAnim,		// we will need to re-assemble the queue to stack our animations in place		queue = el.queue(),		queuelen = queue.length;	// Avoid touching opacity to prevent clearType and PNG issues in IE	if ( show || hide ) {		props.push( "opacity" );	}	$.effects.save( el, props );	el.show();	$.effects.createWrapper( el ); // Create Wrapper	// default distance for the BIGGEST bounce is the outer Distance / 3	if ( !distance ) {		distance = el[ ref === "top" ? "outerHeight" : "outerWidth" ]() / 3;	}	if ( show ) {		downAnim = { opacity: 1 };		downAnim[ ref ] = 0;		// if we are showing, force opacity 0 and set the initial position		// then do the "first" animation		el.css( "opacity", 0 )			.css( ref, motion ? -distance * 2 : distance * 2 )			.animate( downAnim, speed, easing );	}	// start at the smallest distance if we are hiding	if ( hide ) {		distance = distance / Math.pow( 2, times - 1 );	}	downAnim = {};	downAnim[ ref ] = 0;	// Bounces up/down/left/right then back to 0 -- times * 2 animations happen here	for ( i = 0; i &lt; times; i++ ) {		upAnim = {};		upAnim[ ref ] = ( motion ? "-=" : "+=" ) + distance;		el.animate( upAnim, speed, easing )			.animate( downAnim, speed, easing );		distance = hide ? distance * 2 : distance / 2;	}	// Last Bounce when Hiding	if ( hide ) {		upAnim = { opacity: 0 };		upAnim[ ref ] = ( motion ? "-=" : "+=" ) + distance;		el.animate( upAnim, speed, easing );	}	el.queue(function() {		if ( hide ) {			el.hide();		}		$.effects.restore( el, props );		$.effects.removeWrapper( el );		done();	});	// inject all the animations we just queued to be first in line (after "inprogress")	if ( queuelen &gt; 1) {		queue.splice.apply( queue,			[ 1, 0 ].concat( queue.splice( queuelen, anims + 1 ) ) );	}	el.dequeue();};})(jQuery);(function( $, undefined ) {$.effects.effect.clip = function( o, done ) {	// Create element	var el = $( this ),		props = [ "position", "top", "bottom", "left", "right", "height", "width" ],		mode = $.effects.setMode( el, o.mode || "hide" ),		show = mode === "show",		direction = o.direction || "vertical",		vert = direction === "vertical",		size = vert ? "height" : "width",		position = vert ? "top" : "left",		animation = {},		wrapper, animate, distance;	// Save &amp; Show	$.effects.save( el, props );	el.show();	// Create Wrapper	wrapper = $.effects.createWrapper( el ).css({		overflow: "hidden"	});	animate = ( el[0].tagName === "IMG" ) ? wrapper : el;	distance = animate[ size ]();	// Shift	if ( show ) {		animate.css( size, 0 );		animate.css( position, distance / 2 );	}	// Create Animation Object:	animation[ size ] = show ? distance : 0;	animation[ position ] = show ? 0 : distance / 2;	// Animate	animate.animate( animation, {		queue: false,		duration: o.duration,		easing: o.easing,		complete: function() {			if ( !show ) {				el.hide();			}			$.effects.restore( el, props );			$.effects.removeWrapper( el );			done();		}	});};})(jQuery);(function( $, undefined ) {$.effects.effect.drop = function( o, done ) {	var el = $( this ),		props = [ "position", "top", "bottom", "left", "right", "opacity", "height", "width" ],		mode = $.effects.setMode( el, o.mode || "hide" ),		show = mode === "show",		direction = o.direction || "left",		ref = ( direction === "up" || direction === "down" ) ? "top" : "left",		motion = ( direction === "up" || direction === "left" ) ? "pos" : "neg",		animation = {			opacity: show ? 1 : 0		},		distance;	// Adjust	$.effects.save( el, props );	el.show();	$.effects.createWrapper( el );	distance = o.distance || el[ ref === "top" ? "outerHeight": "outerWidth" ]( true ) / 2;	if ( show ) {		el			.css( "opacity", 0 )			.css( ref, motion === "pos" ? -distance : distance );	}	// Animation	animation[ ref ] = ( show ?		( motion === "pos" ? "+=" : "-=" ) :		( motion === "pos" ? "-=" : "+=" ) ) +		distance;	// Animate	el.animate( animation, {		queue: false,		duration: o.duration,		easing: o.easing,		complete: function() {			if ( mode === "hide" ) {				el.hide();			}			$.effects.restore( el, props );			$.effects.removeWrapper( el );			done();		}	});};})(jQuery);(function( $, undefined ) {$.effects.effect.explode = function( o, done ) {	var rows = o.pieces ? Math.round( Math.sqrt( o.pieces ) ) : 3,		cells = rows,		el = $( this ),		mode = $.effects.setMode( el, o.mode || "hide" ),		show = mode === "show",		// show and then visibility:hidden the element before calculating offset		offset = el.show().css( "visibility", "hidden" ).offset(),		// width and height of a piece		width = Math.ceil( el.outerWidth() / cells ),		height = Math.ceil( el.outerHeight() / rows ),		pieces = [],		// loop		i, j, left, top, mx, my;	// children animate complete:	function childComplete() {		pieces.push( this );		if ( pieces.length === rows * cells ) {			animComplete();		}	}	// clone the element for each row and cell.	for( i = 0; i &lt; rows ; i++ ) { // ===&gt;		top = offset.top + i * height;		my = i - ( rows - 1 ) / 2 ;		for( j = 0; j &lt; cells ; j++ ) { // |||			left = offset.left + j * width;			mx = j - ( cells - 1 ) / 2 ;			// Create a clone of the now hidden main element that will be absolute positioned			// within a wrapper div off the -left and -top equal to size of our pieces			el				.clone()				.appendTo( "body" )				.wrap( "&lt;div&gt;&lt;/div&gt;" )				.css({					position: "absolute",					visibility: "visible",					left: -j * width,					top: -i * height				})			// select the wrapper - make it overflow: hidden and absolute positioned based on			// where the original was located +left and +top equal to the size of pieces				.parent()				.addClass( "ui-effects-explode" )				.css({					position: "absolute",					overflow: "hidden",					width: width,					height: height,					left: left + ( show ? mx * width : 0 ),					top: top + ( show ? my * height : 0 ),					opacity: show ? 0 : 1				}).animate({					left: left + ( show ? 0 : mx * width ),					top: top + ( show ? 0 : my * height ),					opacity: show ? 1 : 0				}, o.duration || 500, o.easing, childComplete );		}	}	function animComplete() {		el.css({			visibility: "visible"		});		$( pieces ).remove();		if ( !show ) {			el.hide();		}		done();	}};})(jQuery);(function( $, undefined ) {$.effects.effect.fade = function( o, done ) {	var el = $( this ),		mode = $.effects.setMode( el, o.mode || "toggle" );	el.animate({		opacity: mode	}, {		queue: false,		duration: o.duration,		easing: o.easing,		complete: done	});};})( jQuery );(function( $, undefined ) {$.effects.effect.fold = function( o, done ) {	// Create element	var el = $( this ),		props = [ "position", "top", "bottom", "left", "right", "height", "width" ],		mode = $.effects.setMode( el, o.mode || "hide" ),		show = mode === "show",		hide = mode === "hide",		size = o.size || 15,		percent = /([0-9]+)%/.exec( size ),		horizFirst = !!o.horizFirst,		widthFirst = show !== horizFirst,		ref = widthFirst ? [ "width", "height" ] : [ "height", "width" ],		duration = o.duration / 2,		wrapper, distance,		animation1 = {},		animation2 = {};	$.effects.save( el, props );	el.show();	// Create Wrapper	wrapper = $.effects.createWrapper( el ).css({		overflow: "hidden"	});	distance = widthFirst ?		[ wrapper.width(), wrapper.height() ] :		[ wrapper.height(), wrapper.width() ];	if ( percent ) {		size = parseInt( percent[ 1 ], 10 ) / 100 * distance[ hide ? 0 : 1 ];	}	if ( show ) {		wrapper.css( horizFirst ? {			height: 0,			width: size		} : {			height: size,			width: 0		});	}	// Animation	animation1[ ref[ 0 ] ] = show ? distance[ 0 ] : size;	animation2[ ref[ 1 ] ] = show ? distance[ 1 ] : 0;	// Animate	wrapper		.animate( animation1, duration, o.easing )		.animate( animation2, duration, o.easing, function() {			if ( hide ) {				el.hide();			}			$.effects.restore( el, props );			$.effects.removeWrapper( el );			done();		});};})(jQuery);(function( $, undefined ) {$.effects.effect.highlight = function( o, done ) {	var elem = $( this ),		props = [ "backgroundImage", "backgroundColor", "opacity" ],		mode = $.effects.setMode( elem, o.mode || "show" ),		animation = {			backgroundColor: elem.css( "backgroundColor" )		};	if (mode === "hide") {		animation.opacity = 0;	}	$.effects.save( elem, props );	elem		.show()		.css({			backgroundImage: "none",			backgroundColor: o.color || "#ffff99"		})		.animate( animation, {			queue: false,			duration: o.duration,			easing: o.easing,			complete: function() {				if ( mode === "hide" ) {					elem.hide();				}				$.effects.restore( elem, props );				done();			}		});};})(jQuery);(function( $, undefined ) {$.effects.effect.pulsate = function( o, done ) {	var elem = $( this ),		mode = $.effects.setMode( elem, o.mode || "show" ),		show = mode === "show",		hide = mode === "hide",		showhide = ( show || mode === "hide" ),		// showing or hiding leaves of the "last" animation		anims = ( ( o.times || 5 ) * 2 ) + ( showhide ? 1 : 0 ),		duration = o.duration / anims,		animateTo = 0,		queue = elem.queue(),		queuelen = queue.length,		i;	if ( show || !elem.is(":visible")) {		elem.css( "opacity", 0 ).show();		animateTo = 1;	}	// anims - 1 opacity "toggles"	for ( i = 1; i &lt; anims; i++ ) {		elem.animate({			opacity: animateTo		}, duration, o.easing );		animateTo = 1 - animateTo;	}	elem.animate({		opacity: animateTo	}, duration, o.easing);	elem.queue(function() {		if ( hide ) {			elem.hide();		}		done();	});	// We just queued up "anims" animations, we need to put them next in the queue	if ( queuelen &gt; 1 ) {		queue.splice.apply( queue,			[ 1, 0 ].concat( queue.splice( queuelen, anims + 1 ) ) );	}	elem.dequeue();};})(jQuery);(function( $, undefined ) {$.effects.effect.puff = function( o, done ) {	var elem = $( this ),		mode = $.effects.setMode( elem, o.mode || "hide" ),		hide = mode === "hide",		percent = parseInt( o.percent, 10 ) || 150,		factor = percent / 100,		original = {			height: elem.height(),			width: elem.width(),			outerHeight: elem.outerHeight(),			outerWidth: elem.outerWidth()		};	$.extend( o, {		effect: "scale",		queue: false,		fade: true,		mode: mode,		complete: done,		percent: hide ? percent : 100,		from: hide ?			original :			{				height: original.height * factor,				width: original.width * factor,				outerHeight: original.outerHeight * factor,				outerWidth: original.outerWidth * factor			}	});	elem.effect( o );};$.effects.effect.scale = function( o, done ) {	// Create element	var el = $( this ),		options = $.extend( true, {}, o ),		mode = $.effects.setMode( el, o.mode || "effect" ),		percent = parseInt( o.percent, 10 ) ||			( parseInt( o.percent, 10 ) === 0 ? 0 : ( mode === "hide" ? 0 : 100 ) ),		direction = o.direction || "both",		origin = o.origin,		original = {			height: el.height(),			width: el.width(),			outerHeight: el.outerHeight(),			outerWidth: el.outerWidth()		},		factor = {			y: direction !== "horizontal" ? (percent / 100) : 1,			x: direction !== "vertical" ? (percent / 100) : 1		};	// We are going to pass this effect to the size effect:	options.effect = "size";	options.queue = false;	options.complete = done;	// Set default origin and restore for show/hide	if ( mode !== "effect" ) {		options.origin = origin || ["middle","center"];		options.restore = true;	}	options.from = o.from || ( mode === "show" ? {		height: 0,		width: 0,		outerHeight: 0,		outerWidth: 0	} : original );	options.to = {		height: original.height * factor.y,		width: original.width * factor.x,		outerHeight: original.outerHeight * factor.y,		outerWidth: original.outerWidth * factor.x	};	// Fade option to support puff	if ( options.fade ) {		if ( mode === "show" ) {			options.from.opacity = 0;			options.to.opacity = 1;		}		if ( mode === "hide" ) {			options.from.opacity = 1;			options.to.opacity = 0;		}	}	// Animate	el.effect( options );};$.effects.effect.size = function( o, done ) {	// Create element	var original, baseline, factor,		el = $( this ),		props0 = [ "position", "top", "bottom", "left", "right", "width", "height", "overflow", "opacity" ],		// Always restore		props1 = [ "position", "top", "bottom", "left", "right", "overflow", "opacity" ],		// Copy for children		props2 = [ "width", "height", "overflow" ],		cProps = [ "fontSize" ],		vProps = [ "borderTopWidth", "borderBottomWidth", "paddingTop", "paddingBottom" ],		hProps = [ "borderLeftWidth", "borderRightWidth", "paddingLeft", "paddingRight" ],		// Set options		mode = $.effects.setMode( el, o.mode || "effect" ),		restore = o.restore || mode !== "effect",		scale = o.scale || "both",		origin = o.origin || [ "middle", "center" ],		position = el.css( "position" ),		props = restore ? props0 : props1,		zero = {			height: 0,			width: 0,			outerHeight: 0,			outerWidth: 0		};	if ( mode === "show" ) {		el.show();	}	original = {		height: el.height(),		width: el.width(),		outerHeight: el.outerHeight(),		outerWidth: el.outerWidth()	};	if ( o.mode === "toggle" &amp;&amp; mode === "show" ) {		el.from = o.to || zero;		el.to = o.from || original;	} else {		el.from = o.from || ( mode === "show" ? zero : original );		el.to = o.to || ( mode === "hide" ? zero : original );	}	// Set scaling factor	factor = {		from: {			y: el.from.height / original.height,			x: el.from.width / original.width		},		to: {			y: el.to.height / original.height,			x: el.to.width / original.width		}	};	// Scale the css box	if ( scale === "box" || scale === "both" ) {		// Vertical props scaling		if ( factor.from.y !== factor.to.y ) {			props = props.concat( vProps );			el.from = $.effects.setTransition( el, vProps, factor.from.y, el.from );			el.to = $.effects.setTransition( el, vProps, factor.to.y, el.to );		}		// Horizontal props scaling		if ( factor.from.x !== factor.to.x ) {			props = props.concat( hProps );			el.from = $.effects.setTransition( el, hProps, factor.from.x, el.from );			el.to = $.effects.setTransition( el, hProps, factor.to.x, el.to );		}	}	// Scale the content	if ( scale === "content" || scale === "both" ) {		// Vertical props scaling		if ( factor.from.y !== factor.to.y ) {			props = props.concat( cProps ).concat( props2 );			el.from = $.effects.setTransition( el, cProps, factor.from.y, el.from );			el.to = $.effects.setTransition( el, cProps, factor.to.y, el.to );		}	}	$.effects.save( el, props );	el.show();	$.effects.createWrapper( el );	el.css( "overflow", "hidden" ).css( el.from );	// Adjust	if (origin) { // Calculate baseline shifts		baseline = $.effects.getBaseline( origin, original );		el.from.top = ( original.outerHeight - el.outerHeight() ) * baseline.y;		el.from.left = ( original.outerWidth - el.outerWidth() ) * baseline.x;		el.to.top = ( original.outerHeight - el.to.outerHeight ) * baseline.y;		el.to.left = ( original.outerWidth - el.to.outerWidth ) * baseline.x;	}	el.css( el.from ); // set top &amp; left	// Animate	if ( scale === "content" || scale === "both" ) { // Scale the children		// Add margins/font-size		vProps = vProps.concat([ "marginTop", "marginBottom" ]).concat(cProps);		hProps = hProps.concat([ "marginLeft", "marginRight" ]);		props2 = props0.concat(vProps).concat(hProps);		el.find( "*[width]" ).each( function(){			var child = $( this ),				c_original = {					height: child.height(),					width: child.width(),					outerHeight: child.outerHeight(),					outerWidth: child.outerWidth()				};			if (restore) {				$.effects.save(child, props2);			}			child.from = {				height: c_original.height * factor.from.y,				width: c_original.width * factor.from.x,				outerHeight: c_original.outerHeight * factor.from.y,				outerWidth: c_original.outerWidth * factor.from.x			};			child.to = {				height: c_original.height * factor.to.y,				width: c_original.width * factor.to.x,				outerHeight: c_original.height * factor.to.y,				outerWidth: c_original.width * factor.to.x			};			// Vertical props scaling			if ( factor.from.y !== factor.to.y ) {				child.from = $.effects.setTransition( child, vProps, factor.from.y, child.from );				child.to = $.effects.setTransition( child, vProps, factor.to.y, child.to );			}			// Horizontal props scaling			if ( factor.from.x !== factor.to.x ) {				child.from = $.effects.setTransition( child, hProps, factor.from.x, child.from );				child.to = $.effects.setTransition( child, hProps, factor.to.x, child.to );			}			// Animate children			child.css( child.from );			child.animate( child.to, o.duration, o.easing, function() {				// Restore children				if ( restore ) {					$.effects.restore( child, props2 );				}			});		});	}	// Animate	el.animate( el.to, {		queue: false,		duration: o.duration,		easing: o.easing,		complete: function() {			if ( el.to.opacity === 0 ) {				el.css( "opacity", el.from.opacity );			}			if( mode === "hide" ) {				el.hide();			}			$.effects.restore( el, props );			if ( !restore ) {				// we need to calculate our new positioning based on the scaling				if ( position === "static" ) {					el.css({						position: "relative",						top: el.to.top,						left: el.to.left					});				} else {					$.each([ "top", "left" ], function( idx, pos ) {						el.css( pos, function( _, str ) {							var val = parseInt( str, 10 ),								toRef = idx ? el.to.left : el.to.top;							// if original was "auto", recalculate the new value from wrapper							if ( str === "auto" ) {								return toRef + "px";							}							return val + toRef + "px";						});					});				}			}			$.effects.removeWrapper( el );			done();		}	});};})(jQuery);(function( $, undefined ) {$.effects.effect.shake = function( o, done ) {	var el = $( this ),		props = [ "position", "top", "bottom", "left", "right", "height", "width" ],		mode = $.effects.setMode( el, o.mode || "effect" ),		direction = o.direction || "left",		distance = o.distance || 20,		times = o.times || 3,		anims = times * 2 + 1,		speed = Math.round(o.duration/anims),		ref = (direction === "up" || direction === "down") ? "top" : "left",		positiveMotion = (direction === "up" || direction === "left"),		animation = {},		animation1 = {},		animation2 = {},		i,		// we will need to re-assemble the queue to stack our animations in place		queue = el.queue(),		queuelen = queue.length;	$.effects.save( el, props );	el.show();	$.effects.createWrapper( el );	// Animation	animation[ ref ] = ( positiveMotion ? "-=" : "+=" ) + distance;	animation1[ ref ] = ( positiveMotion ? "+=" : "-=" ) + distance * 2;	animation2[ ref ] = ( positiveMotion ? "-=" : "+=" ) + distance * 2;	// Animate	el.animate( animation, speed, o.easing );	// Shakes	for ( i = 1; i &lt; times; i++ ) {		el.animate( animation1, speed, o.easing ).animate( animation2, speed, o.easing );	}	el		.animate( animation1, speed, o.easing )		.animate( animation, speed / 2, o.easing )		.queue(function() {			if ( mode === "hide" ) {				el.hide();			}			$.effects.restore( el, props );			$.effects.removeWrapper( el );			done();		});	// inject all the animations we just queued to be first in line (after "inprogress")	if ( queuelen &gt; 1) {		queue.splice.apply( queue,			[ 1, 0 ].concat( queue.splice( queuelen, anims + 1 ) ) );	}	el.dequeue();};})(jQuery);(function( $, undefined ) {$.effects.effect.slide = function( o, done ) {	// Create element	var el = $( this ),		props = [ "position", "top", "bottom", "left", "right", "width", "height" ],		mode = $.effects.setMode( el, o.mode || "show" ),		show = mode === "show",		direction = o.direction || "left",		ref = (direction === "up" || direction === "down") ? "top" : "left",		positiveMotion = (direction === "up" || direction === "left"),		distance,		animation = {};	// Adjust	$.effects.save( el, props );	el.show();	distance = o.distance || el[ ref === "top" ? "outerHeight" : "outerWidth" ]( true );	$.effects.createWrapper( el ).css({		overflow: "hidden"	});	if ( show ) {		el.css( ref, positiveMotion ? (isNaN(distance) ? "-" + distance : -distance) : distance );	}	// Animation	animation[ ref ] = ( show ?		( positiveMotion ? "+=" : "-=") :		( positiveMotion ? "-=" : "+=")) +		distance;	// Animate	el.animate( animation, {		queue: false,		duration: o.duration,		easing: o.easing,		complete: function() {			if ( mode === "hide" ) {				el.hide();			}			$.effects.restore( el, props );			$.effects.removeWrapper( el );			done();		}	});};})(jQuery);(function( $, undefined ) {$.effects.effect.transfer = function( o, done ) {	var elem = $( this ),		target = $( o.to ),		targetFixed = target.css( "position" ) === "fixed",		body = $("body"),		fixTop = targetFixed ? body.scrollTop() : 0,		fixLeft = targetFixed ? body.scrollLeft() : 0,		endPosition = target.offset(),		animation = {			top: endPosition.top - fixTop ,			left: endPosition.left - fixLeft ,			height: target.innerHeight(),			width: target.innerWidth()		},		startPosition = elem.offset(),		transfer = $( "&lt;div class=''ui-effects-transfer''&gt;&lt;/div&gt;" )			.appendTo( document.body )			.addClass( o.className )			.css({				top: startPosition.top - fixTop ,				left: startPosition.left - fixLeft ,				height: elem.innerHeight(),				width: elem.innerWidth(),				position: targetFixed ? "fixed" : "absolute"			})			.animate( animation, o.duration, o.easing, function() {				transfer.remove();				done();			});};})(jQuery);(function( $, undefined ) {$.widget( "ui.menu", {	version: "1.10.4",	defaultElement: "&lt;ul&gt;",	delay: 300,	options: {		icons: {			submenu: "ui-icon-carat-1-e"		},		menus: "ul",		position: {			my: "left top",			at: "right top"		},		role: "menu",		// callbacks		blur: null,		focus: null,		select: null	},	_create: function() {		this.activeMenu = this.element;		// flag used to prevent firing of the click handler		// as the event bubbles up through nested menus		this.mouseHandled = false;		this.element			.uniqueId()			.addClass( "ui-menu ui-widget ui-widget-content ui-corner-all" )			.toggleClass( "ui-menu-icons", !!this.element.find( ".ui-icon" ).length )			.attr({				role: this.options.role,				tabIndex: 0			})			// need to catch all clicks on disabled menu			// not possible through _on			.bind( "click" + this.eventNamespace, $.proxy(function( event ) {				if ( this.options.disabled ) {					event.preventDefault();				}			}, this ));		if ( this.options.disabled ) {			this.element				.addClass( "ui-state-disabled" )				.attr( "aria-disabled", "true" );		}		this._on({			// Prevent focus from sticking to links inside menu after clicking			// them (focus should always stay on UL during navigation).			"mousedown .ui-menu-item &gt; a": function( event ) {				event.preventDefault();			},			"click .ui-state-disabled &gt; a": function( event ) {				event.preventDefault();			},			"click .ui-menu-item:has(a)": function( event ) {				var target = $( event.target ).closest( ".ui-menu-item" );				if ( !this.mouseHandled &amp;&amp; target.not( ".ui-state-disabled" ).length ) {					this.select( event );					// Only set the mouseHandled flag if the event will bubble, see #9469.					if ( !event.isPropagationStopped() ) {						this.mouseHandled = true;					}					// Open submenu on click					if ( target.has( ".ui-menu" ).length ) {						this.expand( event );					} else if ( !this.element.is( ":focus" ) &amp;&amp; $( this.document[ 0 ].activeElement ).closest( ".ui-menu" ).length ) {						// Redirect focus to the menu						this.element.trigger( "focus", [ true ] );						// If the active item is on the top level, let it stay active.						// Otherwise, blur the active item since it is no longer visible.						if ( this.active &amp;&amp; this.active.parents( ".ui-menu" ).length === 1 ) {							clearTimeout( this.timer );						}					}				}			},			"mouseenter .ui-menu-item": function( event ) {				var target = $( event.currentTarget );				// Remove ui-state-active class from siblings of the newly focused menu item				// to avoid a jump caused by adjacent elements both having a class with a border				target.siblings().children( ".ui-state-active" ).removeClass( "ui-state-active" );				this.focus( event, target );			},			mouseleave: "collapseAll",			"mouseleave .ui-menu": "collapseAll",			focus: function( event, keepActiveItem ) {				// If there''s already an active item, keep it active				// If not, activate the first item				var item = this.active || this.element.children( ".ui-menu-item" ).eq( 0 );				if ( !keepActiveItem ) {					this.focus( event, item );				}			},			blur: function( event ) {				this._delay(function() {					if ( !$.contains( this.element[0], this.document[0].activeElement ) ) {						this.collapseAll( event );					}				});			},			keydown: "_keydown"		});		this.refresh();		// Clicks outside of a menu collapse any open menus		this._on( this.document, {			click: function( event ) {				if ( !$( event.target ).closest( ".ui-menu" ).length ) {					this.collapseAll( event );				}				// Reset the mouseHandled flag				this.mouseHandled = false;			}		});	},	_destroy: function() {		// Destroy (sub)menus		this.element			.removeAttr( "aria-activedescendant" )			.find( ".ui-menu" ).addBack()				.removeClass( "ui-menu ui-widget ui-widget-content ui-corner-all ui-menu-icons" )				.removeAttr( "role" )				.removeAttr( "tabIndex" )				.removeAttr( "aria-labelledby" )				.removeAttr( "aria-expanded" )				.removeAttr( "aria-hidden" )				.removeAttr( "aria-disabled" )				.removeUniqueId()				.show();		// Destroy menu items		this.element.find( ".ui-menu-item" )			.removeClass( "ui-menu-item" )			.removeAttr( "role" )			.removeAttr( "aria-disabled" )			.children( "a" )				.removeUniqueId()				.removeClass( "ui-corner-all ui-state-hover" )				.removeAttr( "tabIndex" )				.removeAttr( "role" )				.removeAttr( "aria-haspopup" )				.children().each( function() {					var elem = $( this );					if ( elem.data( "ui-menu-submenu-carat" ) ) {						elem.remove();					}				});		// Destroy menu dividers		this.element.find( ".ui-menu-divider" ).removeClass( "ui-menu-divider ui-widget-content" );	},	_keydown: function( event ) {		var match, prev, character, skip, regex,			preventDefault = true;		function escape( value ) {			return value.replace( /[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&amp;" );		}		switch ( event.keyCode ) {		case $.ui.keyCode.PAGE_UP:			this.previousPage( event );			break;		case $.ui.keyCode.PAGE_DOWN:			this.nextPage( event );			break;		case $.ui.keyCode.HOME:			this._move( "first", "first", event );			break;		case $.ui.keyCode.END:			this._move( "last", "last", event );			break;		case $.ui.keyCode.UP:			this.previous( event );			break;		case $.ui.keyCode.DOWN:			this.next( event );			break;		case $.ui.keyCode.LEFT:			this.collapse( event );			break;		case $.ui.keyCode.RIGHT:			if ( this.active &amp;&amp; !this.active.is( ".ui-state-disabled" ) ) {				this.expand( event );			}			break;		case $.ui.keyCode.ENTER:		case $.ui.keyCode.SPACE:			this._activate( event );			break;		case $.ui.keyCode.ESCAPE:			this.collapse( event );			break;		default:			preventDefault = false;			prev = this.previousFilter || "";			character = String.fromCharCode( event.keyCode );			skip = false;			clearTimeout( this.filterTimer );			if ( character === prev ) {				skip = true;			} else {				character = prev + character;			}			regex = new RegExp( "^" + escape( character ), "i" );			match = this.activeMenu.children( ".ui-menu-item" ).filter(function() {				return regex.test( $( this ).children( "a" ).text() );			});			match = skip &amp;&amp; match.index( this.active.next() ) !== -1 ?				this.active.nextAll( ".ui-menu-item" ) :				match;			// If no matches on the current filter, reset to the last character pressed			// to move down the menu to the first item that starts with that character			if ( !match.length ) {				character = String.fromCharCode( event.keyCode );				regex = new RegExp( "^" + escape( character ), "i" );				match = this.activeMenu.children( ".ui-menu-item" ).filter(function() {					return regex.test( $( this ).children( "a" ).text() );				});			}			if ( match.length ) {				this.focus( event, match );				if ( match.length &gt; 1 ) {					this.previousFilter = character;					this.filterTimer = this._delay(function() {						delete this.previousFilter;					}, 1000 );				} else {					delete this.previousFilter;				}			} else {				delete this.previousFilter;			}		}		if ( preventDefault ) {			event.preventDefault();		}	},	_activate: function( event ) {		if ( !this.active.is( ".ui-state-disabled" ) ) {			if ( this.active.children( "a[aria-haspopup=''true'']" ).length ) {				this.expand( event );			} else {				this.select( event );			}		}	},	refresh: function() {		var menus,			icon = this.options.icons.submenu,			submenus = this.element.find( this.options.menus );		this.element.toggleClass( "ui-menu-icons", !!this.element.find( ".ui-icon" ).length );		// Initialize nested menus		submenus.filter( ":not(.ui-menu)" )			.addClass( "ui-menu ui-widget ui-widget-content ui-corner-all" )			.hide()			.attr({				role: this.options.role,				"aria-hidden": "true",				"aria-expanded": "false"			})			.each(function() {				var menu = $( this ),					item = menu.prev( "a" ),					submenuCarat = $( "&lt;span&gt;" )						.addClass( "ui-menu-icon ui-icon " + icon )						.data( "ui-menu-submenu-carat", true );				item					.attr( "aria-haspopup", "true" )					.prepend( submenuCarat );				menu.attr( "aria-labelledby", item.attr( "id" ) );			});		menus = submenus.add( this.element );		// Don''t refresh list items that are already adapted		menus.children( ":not(.ui-menu-item):has(a)" )			.addClass( "ui-menu-item" )			.attr( "role", "presentation" )			.children( "a" )				.uniqueId()				.addClass( "ui-corner-all" )				.attr({					tabIndex: -1,					role: this._itemRole()				});		// Initialize unlinked menu-items containing spaces and/or dashes only as dividers		menus.children( ":not(.ui-menu-item)" ).each(function() {			var item = $( this );			// hyphen, em dash, en dash			if ( !/[^\-\u2014\u2013\s]/.test( item.text() ) ) {				item.addClass( "ui-widget-content ui-menu-divider" );			}		});		// Add aria-disabled attribute to any disabled menu item		menus.children( ".ui-state-disabled" ).attr( "aria-disabled", "true" );		// If the active item has been removed, blur the menu		if ( this.active &amp;&amp; !$.contains( this.element[ 0 ], this.active[ 0 ] ) ) {			this.blur();		}	},	_itemRole: function() {		return {			menu: "menuitem",			listbox: "option"		}[ this.options.role ];	},	_setOption: function( key, value ) {		if ( key === "icons" ) {			this.element.find( ".ui-menu-icon" )				.removeClass( this.options.icons.submenu )				.addClass( value.submenu );		}		this._super( key, value );	},	focus: function( event, item ) {		var nested, focused;		this.blur( event, event &amp;&amp; event.type === "focus" );		this._scrollIntoView( item );		this.active = item.first();		focused = this.active.children( "a" ).addClass( "ui-state-focus" );		// Only update aria-activedescendant if there''s a role		// otherwise we assume focus is managed elsewhere		if ( this.options.role ) {			this.element.attr( "aria-activedescendant", focused.attr( "id" ) );		}		// Highlight active parent menu item, if any		this.active			.parent()			.closest( ".ui-menu-item" )			.children( "a:first" )			.addClass( "ui-state-active" );		if ( event &amp;&amp; event.type === "keydown" ) {			this._close();		} else {			this.timer = this._delay(function() {				this._close();			}, this.delay );		}		nested = item.children( ".ui-menu" );		if ( nested.length &amp;&amp; event &amp;&amp; ( /^mouse/.test( event.type ) ) ) {			this._startOpening(nested);		}		this.activeMenu = item.parent();		this._trigger( "focus", event, { item: item } );	},	_scrollIntoView: function( item ) {		var borderTop, paddingTop, offset, scroll, elementHeight, itemHeight;		if ( this._hasScroll() ) {			borderTop = parseFloat( $.css( this.activeMenu[0], "borderTopWidth" ) ) || 0;			paddingTop = parseFloat( $.css( this.activeMenu[0], "paddingTop" ) ) || 0;			offset = item.offset().top - this.activeMenu.offset().top - borderTop - paddingTop;			scroll = this.activeMenu.scrollTop();			elementHeight = this.activeMenu.height();			itemHeight = item.height();			if ( offset &lt; 0 ) {				this.activeMenu.scrollTop( scroll + offset );			} else if ( offset + itemHeight &gt; elementHeight ) {				this.activeMenu.scrollTop( scroll + offset - elementHeight + itemHeight );			}		}	},	blur: function( event, fromFocus ) {		if ( !fromFocus ) {			clearTimeout( this.timer );		}		if ( !this.active ) {			return;		}		this.active.children( "a" ).removeClass( "ui-state-focus" );		this.active = null;		this._trigger( "blur", event, { item: this.active } );	},	_startOpening: function( submenu ) {		clearTimeout( this.timer );		// Don''t open if already open fixes a Firefox bug that caused a .5 pixel		// shift in the submenu position when mousing over the carat icon		if ( submenu.attr( "aria-hidden" ) !== "true" ) {			return;		}		this.timer = this._delay(function() {			this._close();			this._open( submenu );		}, this.delay );	},	_open: function( submenu ) {		var position = $.extend({			of: this.active		}, this.options.position );		clearTimeout( this.timer );		this.element.find( ".ui-menu" ).not( submenu.parents( ".ui-menu" ) )			.hide()			.attr( "aria-hidden", "true" );		submenu			.show()			.removeAttr( "aria-hidden" )			.attr( "aria-expanded", "true" )			.position( position );	},	collapseAll: function( event, all ) {		clearTimeout( this.timer );		this.timer = this._delay(function() {			// If we were passed an event, look for the submenu that contains the event			var currentMenu = all ? this.element :				$( event &amp;&amp; event.target ).closest( this.element.find( ".ui-menu" ) );			// If we found no valid submenu ancestor, use the main menu to close all sub menus anyway			if ( !currentMenu.length ) {				currentMenu = this.element;			}			this._close( currentMenu );			this.blur( event );			this.activeMenu = currentMenu;		}, this.delay );	},	// With no arguments, closes the currently active menu - if nothing is active	// it closes all menus.  If passed an argument, it will search for menus BELOW	_close: function( startMenu ) {		if ( !startMenu ) {			startMenu = this.active ? this.active.parent() : this.element;		}		startMenu			.find( ".ui-menu" )				.hide()				.attr( "aria-hidden", "true" )				.attr( "aria-expanded", "false" )			.end()			.find( "a.ui-state-active" )				.removeClass( "ui-state-active" );	},	collapse: function( event ) {		var newItem = this.active &amp;&amp;			this.active.parent().closest( ".ui-menu-item", this.element );		if ( newItem &amp;&amp; newItem.length ) {			this._close();			this.focus( event, newItem );		}	},	expand: function( event ) {		var newItem = this.active &amp;&amp;			this.active				.children( ".ui-menu " )				.children( ".ui-menu-item" )				.first();		if ( newItem &amp;&amp; newItem.length ) {			this._open( newItem.parent() );			// Delay so Firefox will not hide activedescendant change in expanding submenu from AT			this._delay(function() {				this.focus( event, newItem );			});		}	},	next: function( event ) {		this._move( "next", "first", event );	},	previous: function( event ) {		this._move( "prev", "last", event );	},	isFirstItem: function() {		return this.active &amp;&amp; !this.active.prevAll( ".ui-menu-item" ).length;	},	isLastItem: function() {		return this.active &amp;&amp; !this.active.nextAll( ".ui-menu-item" ).length;	},	_move: function( direction, filter, event ) {		var next;		if ( this.active ) {			if ( direction === "first" || direction === "last" ) {				next = this.active					[ direction === "first" ? "prevAll" : "nextAll" ]( ".ui-menu-item" )					.eq( -1 );			} else {				next = this.active					[ direction + "All" ]( ".ui-menu-item" )					.eq( 0 );			}		}		if ( !next || !next.length || !this.active ) {			next = this.activeMenu.children( ".ui-menu-item" )[ filter ]();		}		this.focus( event, next );	},	nextPage: function( event ) {		var item, base, height;		if ( !this.active ) {			this.next( event );			return;		}		if ( this.isLastItem() ) {			return;		}		if ( this._hasScroll() ) {			base = this.active.offset().top;			height = this.element.height();			this.active.nextAll( ".ui-menu-item" ).each(function() {				item = $( this );				return item.offset().top - base - height &lt; 0;			});			this.focus( event, item );		} else {			this.focus( event, this.activeMenu.children( ".ui-menu-item" )				[ !this.active ? "first" : "last" ]() );		}	},	previousPage: function( event ) {		var item, base, height;		if ( !this.active ) {			this.next( event );			return;		}		if ( this.isFirstItem() ) {			return;		}		if ( this._hasScroll() ) {			base = this.active.offset().top;			height = this.element.height();			this.active.prevAll( ".ui-menu-item" ).each(function() {				item = $( this );				return item.offset().top - base + height &gt; 0;			});			this.focus( event, item );		} else {			this.focus( event, this.activeMenu.children( ".ui-menu-item" ).first() );		}	},	_hasScroll: function() {		return this.element.outerHeight() &lt; this.element.prop( "scrollHeight" );	},	select: function( event ) {		// TODO: It should never be possible to not have an active item at this		// point, but the tests don''t trigger mouseenter before click.		this.active = this.active || $( event.target ).closest( ".ui-menu-item" );		var ui = { item: this.active };		if ( !this.active.has( ".ui-menu" ).length ) {			this.collapseAll( event, true );		}		this._trigger( "select", event, ui );	}});}( jQuery ));(function( $, undefined ) {$.ui = $.ui || {};var cachedScrollbarWidth,	max = Math.max,	abs = Math.abs,	round = Math.round,	rhorizontal = /left|center|right/,	rvertical = /top|center|bottom/,	roffset = /[\+\-]\d+(\.[\d]+)?%?/,	rposition = /^\w+/,	rpercent = /%$/,	_position = $.fn.position;function getOffsets( offsets, width, height ) {	return [		parseFloat( offsets[ 0 ] ) * ( rpercent.test( offsets[ 0 ] ) ? width / 100 : 1 ),		parseFloat( offsets[ 1 ] ) * ( rpercent.test( offsets[ 1 ] ) ? height / 100 : 1 )	];}function parseCss( element, property ) {	return parseInt( $.css( element, property ), 10 ) || 0;}function getDimensions( elem ) {	var raw = elem[0];	if ( raw.nodeType === 9 ) {		return {			width: elem.width(),			height: elem.height(),			offset: { top: 0, left: 0 }		};	}	if ( $.isWindow( raw ) ) {		return {			width: elem.width(),			height: elem.height(),			offset: { top: elem.scrollTop(), left: elem.scrollLeft() }		};	}	if ( raw.preventDefault ) {		return {			width: 0,			height: 0,			offset: { top: raw.pageY, left: raw.pageX }		};	}	return {		width: elem.outerWidth(),		height: elem.outerHeight(),		offset: elem.offset()	};}$.position = {	scrollbarWidth: function() {		if ( cachedScrollbarWidth !== undefined ) {			return cachedScrollbarWidth;		}		var w1, w2,			div = $( "&lt;div style=''display:block;position:absolute;width:50px;height:50px;overflow:hidden;''&gt;&lt;div style=''height:100px;width:auto;''&gt;&lt;/div&gt;&lt;/div&gt;" ),			innerDiv = div.children()[0];		$( "body" ).append( div );		w1 = innerDiv.offsetWidth;		div.css( "overflow", "scroll" );		w2 = innerDiv.offsetWidth;		if ( w1 === w2 ) {			w2 = div[0].clientWidth;		}		div.remove();		return (cachedScrollbarWidth = w1 - w2);	},	getScrollInfo: function( within ) {		var overflowX = within.isWindow || within.isDocument ? "" :				within.element.css( "overflow-x" ),			overflowY = within.isWindow || within.isDocument ? "" :				within.element.css( "overflow-y" ),			hasOverflowX = overflowX === "scroll" ||				( overflowX === "auto" &amp;&amp; within.width &lt; within.element[0].scrollWidth ),			hasOverflowY = overflowY === "scroll" ||				( overflowY === "auto" &amp;&amp; within.height &lt; within.element[0].scrollHeight );		return {			width: hasOverflowY ? $.position.scrollbarWidth() : 0,			height: hasOverflowX ? $.position.scrollbarWidth() : 0		};	},	getWithinInfo: function( element ) {		var withinElement = $( element || window ),			isWindow = $.isWindow( withinElement[0] ),			isDocument = !!withinElement[ 0 ] &amp;&amp; withinElement[ 0 ].nodeType === 9;		return {			element: withinElement,			isWindow: isWindow,			isDocument: isDocument,			offset: withinElement.offset() || { left: 0, top: 0 },			scrollLeft: withinElement.scrollLeft(),			scrollTop: withinElement.scrollTop(),			width: isWindow ? withinElement.width() : withinElement.outerWidth(),			height: isWindow ? withinElement.height() : withinElement.outerHeight()		};	}};$.fn.position = function( options ) {	if ( !options || !options.of ) {		return _position.apply( this, arguments );	}	// make a copy, we don''t want to modify arguments	options = $.extend( {}, options );	var atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,		target = $( options.of ),		within = $.position.getWithinInfo( options.within ),		scrollInfo = $.position.getScrollInfo( within ),		collision = ( options.collision || "flip" ).split( " " ),		offsets = {};	dimensions = getDimensions( target );	if ( target[0].preventDefault ) {		// force left top to allow flipping		options.at = "left top";	}	targetWidth = dimensions.width;	targetHeight = dimensions.height;	targetOffset = dimensions.offset;	// clone to reuse original targetOffset later	basePosition = $.extend( {}, targetOffset );	// force my and at to have valid horizontal and vertical positions	// if a value is missing or invalid, it will be converted to center	$.each( [ "my", "at" ], function() {		var pos = ( options[ this ] || "" ).split( " " ),			horizontalOffset,			verticalOffset;		if ( pos.length === 1) {			pos = rhorizontal.test( pos[ 0 ] ) ?				pos.concat( [ "center" ] ) :				rvertical.test( pos[ 0 ] ) ?					[ "center" ].concat( pos ) :					[ "center", "center" ];		}		pos[ 0 ] = rhorizontal.test( pos[ 0 ] ) ? pos[ 0 ] : "center";		pos[ 1 ] = rvertical.test( pos[ 1 ] ) ? pos[ 1 ] : "center";		// calculate offsets		horizontalOffset = roffset.exec( pos[ 0 ] );		verticalOffset = roffset.exec( pos[ 1 ] );		offsets[ this ] = [			horizontalOffset ? horizontalOffset[ 0 ] : 0,			verticalOffset ? verticalOffset[ 0 ] : 0		];		// reduce to just the positions without the offsets		options[ this ] = [			rposition.exec( pos[ 0 ] )[ 0 ],			rposition.exec( pos[ 1 ] )[ 0 ]		];	});	// normalize collision option	if ( collision.length === 1 ) {		collision[ 1 ] = collision[ 0 ];	}	if ( options.at[ 0 ] === "right" ) {		basePosition.left += targetWidth;	} else if ( options.at[ 0 ] === "center" ) {		basePosition.left += targetWidth / 2;	}	if ( options.at[ 1 ] === "bottom" ) {		basePosition.top += targetHeight;	} else if ( options.at[ 1 ] === "center" ) {		basePosition.top += targetHeight / 2;	}	atOffset = getOffsets( offsets.at, targetWidth, targetHeight );	basePosition.left += atOffset[ 0 ];	basePosition.top += atOffset[ 1 ];	return this.each(function() {		var collisionPosition, using,			elem = $( this ),			elemWidth = elem.outerWidth(),			elemHeight = elem.outerHeight(),			marginLeft = parseCss( this, "marginLeft" ),			marginTop = parseCss( this, "marginTop" ),			collisionWidth = elemWidth + marginLeft + parseCss( this, "marginRight" ) + scrollInfo.width,			collisionHeight = elemHeight + marginTop + parseCss( this, "marginBottom" ) + scrollInfo.height,			position = $.extend( {}, basePosition ),			myOffset = getOffsets( offsets.my, elem.outerWidth(), elem.outerHeight() );		if ( options.my[ 0 ] === "right" ) {			position.left -= elemWidth;		} else if ( options.my[ 0 ] === "center" ) {			position.left -= elemWidth / 2;		}		if ( options.my[ 1 ] === "bottom" ) {			position.top -= elemHeight;		} else if ( options.my[ 1 ] === "center" ) {			position.top -= elemHeight / 2;		}		position.left += myOffset[ 0 ];		position.top += myOffset[ 1 ];		// if the browser doesn''t support fractions, then round for consistent results		if ( !$.support.offsetFractions ) {			position.left = round( position.left );			position.top = round( position.top );		}		collisionPosition = {			marginLeft: marginLeft,			marginTop: marginTop		};		$.each( [ "left", "top" ], function( i, dir ) {			if ( $.ui.position[ collision[ i ] ] ) {				$.ui.position[ collision[ i ] ][ dir ]( position, {					targetWidth: targetWidth,					targetHeight: targetHeight,					elemWidth: elemWidth,					elemHeight: elemHeight,					collisionPosition: collisionPosition,					collisionWidth: collisionWidth,					collisionHeight: collisionHeight,					offset: [ atOffset[ 0 ] + myOffset[ 0 ], atOffset [ 1 ] + myOffset[ 1 ] ],					my: options.my,					at: options.at,					within: within,					elem : elem				});			}		});		if ( options.using ) {			// adds feedback as second argument to using callback, if present			using = function( props ) {				var left = targetOffset.left - position.left,					right = left + targetWidth - elemWidth,					top = targetOffset.top - position.top,					bottom = top + targetHeight - elemHeight,					feedback = {						target: {							element: target,							left: targetOffset.left,							top: targetOffset.top,							width: targetWidth,							height: targetHeight						},						element: {							element: elem,							left: position.left,							top: position.top,							width: elemWidth,							height: elemHeight						},						horizontal: right &lt; 0 ? "left" : left &gt; 0 ? "right" : "center",						vertical: bottom &lt; 0 ? "top" : top &gt; 0 ? "bottom" : "middle"					};				if ( targetWidth &lt; elemWidth &amp;&amp; abs( left + right ) &lt; targetWidth ) {					feedback.horizontal = "center";				}				if ( targetHeight &lt; elemHeight &amp;&amp; abs( top + bottom ) &lt; targetHeight ) {					feedback.vertical = "middle";				}				if ( max( abs( left ), abs( right ) ) &gt; max( abs( top ), abs( bottom ) ) ) {					feedback.important = "horizontal";				} else {					feedback.important = "vertical";				}				options.using.call( this, props, feedback );			};		}		elem.offset( $.extend( position, { using: using } ) );	});};$.ui.position = {	fit: {		left: function( position, data ) {			var within = data.within,				withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,				outerWidth = within.width,				collisionPosLeft = position.left - data.collisionPosition.marginLeft,				overLeft = withinOffset - collisionPosLeft,				overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,				newOverRight;			// element is wider than within			if ( data.collisionWidth &gt; outerWidth ) {				// element is initially over the left side of within				if ( overLeft &gt; 0 &amp;&amp; overRight &lt;= 0 ) {					newOverRight = position.left + overLeft + data.collisionWidth - outerWidth - withinOffset;					position.left += overLeft - newOverRight;				// element is initially over right side of within				} else if ( overRight &gt; 0 &amp;&amp; overLeft &lt;= 0 ) {					position.left = withinOffset;				// element is initially over both left and right sides of within				} else {					if ( overLeft &gt; overRight ) {						position.left = withinOffset + outerWidth - data.collisionWidth;					} else {						position.left = withinOffset;					}				}			// too far left -&gt; align with left edge			} else if ( overLeft &gt; 0 ) {				position.left += overLeft;			// too far right -&gt; align with right edge			} else if ( overRight &gt; 0 ) {				position.left -= overRight;			// adjust based on position and margin			} else {				position.left = max( position.left - collisionPosLeft, position.left );			}		},		top: function( position, data ) {			var within = data.within,				withinOffset = within.isWindow ? within.scrollTop : within.offset.top,				outerHeight = data.within.height,				collisionPosTop = position.top - data.collisionPosition.marginTop,				overTop = withinOffset - collisionPosTop,				overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,				newOverBottom;			// element is taller than within			if ( data.collisionHeight &gt; outerHeight ) {				// element is initially over the top of within				if ( overTop &gt; 0 &amp;&amp; overBottom &lt;= 0 ) {					newOverBottom = position.top + overTop + data.collisionHeight - outerHeight - withinOffset;					position.top += overTop - newOverBottom;				// element is initially over bottom of within				} else if ( overBottom &gt; 0 &amp;&amp; overTop &lt;= 0 ) {					position.top = withinOffset;				// element is initially over both top and bottom of within				} else {					if ( overTop &gt; overBottom ) {						position.top = withinOffset + outerHeight - data.collisionHeight;					} else {						position.top = withinOffset;					}				}			// too far up -&gt; align with top			} else if ( overTop &gt; 0 ) {				position.top += overTop;			// too far down -&gt; align with bottom edge			} else if ( overBottom &gt; 0 ) {				position.top -= overBottom;			// adjust based on position and margin			} else {				position.top = max( position.top - collisionPosTop, position.top );			}		}	},	flip: {		left: function( position, data ) {			var within = data.within,				withinOffset = within.offset.left + within.scrollLeft,				outerWidth = within.width,				offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,				collisionPosLeft = position.left - data.collisionPosition.marginLeft,				overLeft = collisionPosLeft - offsetLeft,				overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,				myOffset = data.my[ 0 ] === "left" ?					-data.elemWidth :					data.my[ 0 ] === "right" ?						data.elemWidth :						0,				atOffset = data.at[ 0 ] === "left" ?					data.targetWidth :					data.at[ 0 ] === "right" ?						-data.targetWidth :						0,				offset = -2 * data.offset[ 0 ],				newOverRight,				newOverLeft;			if ( overLeft &lt; 0 ) {				newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth - outerWidth - withinOffset;				if ( newOverRight &lt; 0 || newOverRight &lt; abs( overLeft ) ) {					position.left += myOffset + atOffset + offset;				}			}			else if ( overRight &gt; 0 ) {				newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset + atOffset + offset - offsetLeft;				if ( newOverLeft &gt; 0 || abs( newOverLeft ) &lt; overRight ) {					position.left += myOffset + atOffset + offset;				}			}		},		top: function( position, data ) {			var within = data.within,				withinOffset = within.offset.top + within.scrollTop,				outerHeight = within.height,				offsetTop = within.isWindow ? within.scrollTop : within.offset.top,				collisionPosTop = position.top - data.collisionPosition.marginTop,				overTop = collisionPosTop - offsetTop,				overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,				top = data.my[ 1 ] === "top",				myOffset = top ?					-data.elemHeight :					data.my[ 1 ] === "bottom" ?						data.elemHeight :						0,				atOffset = data.at[ 1 ] === "top" ?					data.targetHeight :					data.at[ 1 ] === "bottom" ?						-data.targetHeight :						0,				offset = -2 * data.offset[ 1 ],				newOverTop,				newOverBottom;			if ( overTop &lt; 0 ) {				newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight - outerHeight - withinOffset;				if ( ( position.top + myOffset + atOffset + offset) &gt; overTop &amp;&amp; ( newOverBottom &lt; 0 || newOverBottom &lt; abs( overTop ) ) ) {					position.top += myOffset + atOffset + offset;				}			}			else if ( overBottom &gt; 0 ) {				newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset + offset - offsetTop;				if ( ( position.top + myOffset + atOffset + offset) &gt; overBottom &amp;&amp; ( newOverTop &gt; 0 || abs( newOverTop ) &lt; overBottom ) ) {					position.top += myOffset + atOffset + offset;				}			}		}	},	flipfit: {		left: function() {			$.ui.position.flip.left.apply( this, arguments );			$.ui.position.fit.left.apply( this, arguments );		},		top: function() {			$.ui.position.flip.top.apply( this, arguments );			$.ui.position.fit.top.apply( this, arguments );		}	}};// fraction support test(function () {	var testElement, testElementParent, testElementStyle, offsetLeft, i,		body = document.getElementsByTagName( "body" )[ 0 ],		div = document.createElement( "div" );	//Create a "fake body" for testing based on method used in jQuery.support	testElement = document.createElement( body ? "div" : "body" );	testElementStyle = {		visibility: "hidden",		width: 0,		height: 0,		border: 0,		margin: 0,		background: "none"	};	if ( body ) {		$.extend( testElementStyle, {			position: "absolute",			left: "-1000px",			top: "-1000px"		});	}	for ( i in testElementStyle ) {		testElement.style[ i ] = testElementStyle[ i ];	}	testElement.appendChild( div );	testElementParent = body || document.documentElement;	testElementParent.insertBefore( testElement, testElementParent.firstChild );	div.style.cssText = "position: absolute; left: 10.7432222px;";	offsetLeft = $( div ).offset().left;	$.support.offsetFractions = offsetLeft &gt; 10 &amp;&amp; offsetLeft &lt; 11;	testElement.innerHTML = "";	testElementParent.removeChild( testElement );})();}( jQuery ) );(function( $, undefined ) {$.widget( "ui.progressbar", {	version: "1.10.4",	options: {		max: 100,		value: 0,		change: null,		complete: null	},	min: 0,	_create: function() {		// Constrain initial value		this.oldValue = this.options.value = this._constrainedValue();		this.element			.addClass( "ui-progressbar ui-widget ui-widget-content ui-corner-all" )			.attr({				// Only set static values, aria-valuenow and aria-valuemax are				// set inside _refreshValue()				role: "progressbar",				"aria-valuemin": this.min			});		this.valueDiv = $( "&lt;div class=''ui-progressbar-value ui-widget-header ui-corner-left''&gt;&lt;/div&gt;" )			.appendTo( this.element );		this._refreshValue();	},	_destroy: function() {		this.element			.removeClass( "ui-progressbar ui-widget ui-widget-content ui-corner-all" )			.removeAttr( "role" )			.removeAttr( "aria-valuemin" )			.removeAttr( "aria-valuemax" )			.removeAttr( "aria-valuenow" );		this.valueDiv.remove();	},	value: function( newValue ) {		if ( newValue === undefined ) {			return this.options.value;		}		this.options.value = this._constrainedValue( newValue );		this._refreshValue();	},	_constrainedValue: function( newValue ) {		if ( newValue === undefined ) {			newValue = this.options.value;		}		this.indeterminate = newValue === false;		// sanitize value		if ( typeof newValue !== "number" ) {			newValue = 0;		}		return this.indeterminate ? false :			Math.min( this.options.max, Math.max( this.min, newValue ) );	},	_setOptions: function( options ) {		// Ensure "value" option is set after other values (like max)		var value = options.value;		delete options.value;		this._super( options );		this.options.value = this._constrainedValue( value );		this._refreshValue();	},	_setOption: function( key, value ) {		if ( key === "max" ) {			// Don''t allow a max less than min			value = Math.max( this.min, value );		}		this._super( key, value );	},	_percentage: function() {		return this.indeterminate ? 100 : 100 * ( this.options.value - this.min ) / ( this.options.max - this.min );	},	_refreshValue: function() {		var value = this.options.value,			percentage = this._percentage();		this.valueDiv			.toggle( this.indeterminate || value &gt; this.min )			.toggleClass( "ui-corner-right", value === this.options.max )			.width( percentage.toFixed(0) + "%" );		this.element.toggleClass( "ui-progressbar-indeterminate", this.indeterminate );		if ( this.indeterminate ) {			this.element.removeAttr( "aria-valuenow" );			if ( !this.overlayDiv ) {				this.overlayDiv = $( "&lt;div class=''ui-progressbar-overlay''&gt;&lt;/div&gt;" ).appendTo( this.valueDiv );			}		} else {			this.element.attr({				"aria-valuemax": this.options.max,				"aria-valuenow": value			});			if ( this.overlayDiv ) {				this.overlayDiv.remove();				this.overlayDiv = null;			}		}		if ( this.oldValue !== value ) {			this.oldValue = value;			this._trigger( "change" );		}		if ( value === this.options.max ) {			this._trigger( "complete" );		}	}});})( jQuery );(function( $, undefined ) {// number of pages in a slider// (how many times can you page up/down to go through the whole range)var numPages = 5;$.widget( "ui.slider", $.ui.mouse, {	version: "1.10.4",	widgetEventPrefix: "slide",	options: {		animate: false,		distance: 0,		max: 100,		min: 0,		orientation: "horizontal",		range: false,		step: 1,		value: 0,		values: null,		// callbacks		change: null,		slide: null,		start: null,		stop: null	},	_create: function() {		this._keySliding = false;		this._mouseSliding = false;		this._animateOff = true;		this._handleIndex = null;		this._detectOrientation();		this._mouseInit();		this.element			.addClass( "ui-slider" +				" ui-slider-" + this.orientation +				" ui-widget" +				" ui-widget-content" +				" ui-corner-all");		this._refresh();		this._setOption( "disabled", this.options.disabled );		this._animateOff = false;	},	_refresh: function() {		this._createRange();		this._createHandles();		this._setupEvents();		this._refreshValue();	},	_createHandles: function() {		var i, handleCount,			options = this.options,			existingHandles = this.element.find( ".ui-slider-handle" ).addClass( "ui-state-default ui-corner-all" ),			handle = "&lt;a class=''ui-slider-handle ui-state-default ui-corner-all'' href=''#''&gt;&lt;/a&gt;",			handles = [];		handleCount = ( options.values &amp;&amp; options.values.length ) || 1;		if ( existingHandles.length &gt; handleCount ) {			existingHandles.slice( handleCount ).remove();			existingHandles = existingHandles.slice( 0, handleCount );		}		for ( i = existingHandles.length; i &lt; handleCount; i++ ) {			handles.push( handle );		}		this.handles = existingHandles.add( $( handles.join( "" ) ).appendTo( this.element ) );		this.handle = this.handles.eq( 0 );		this.handles.each(function( i ) {			$( this ).data( "ui-slider-handle-index", i );		});	},	_createRange: function() {		var options = this.options,			classes = "";		if ( options.range ) {			if ( options.range === true ) {				if ( !options.values ) {					options.values = [ this._valueMin(), this._valueMin() ];				} else if ( options.values.length &amp;&amp; options.values.length !== 2 ) {					options.values = [ options.values[0], options.values[0] ];				} else if ( $.isArray( options.values ) ) {					options.values = options.values.slice(0);				}			}			if ( !this.range || !this.range.length ) {				this.range = $( "&lt;div&gt;&lt;/div&gt;" )					.appendTo( this.element );				classes = "ui-slider-range" +				// note: this isn''t the most fittingly semantic framework class for this element,				// but worked best visually with a variety of themes				" ui-widget-header ui-corner-all";			} else {				this.range.removeClass( "ui-slider-range-min ui-slider-range-max" )					// Handle range switching from true to min/max					.css({						"left": "",						"bottom": ""					});			}			this.range.addClass( classes +				( ( options.range === "min" || options.range === "max" ) ? " ui-slider-range-" + options.range : "" ) );		} else {			if ( this.range ) {				this.range.remove();			}			this.range = null;		}	},	_setupEvents: function() {		var elements = this.handles.add( this.range ).filter( "a" );		this._off( elements );		this._on( elements, this._handleEvents );		this._hoverable( elements );		this._focusable( elements );	},	_destroy: function() {		this.handles.remove();		if ( this.range ) {			this.range.remove();		}		this.element			.removeClass( "ui-slider" +				" ui-slider-horizontal" +				" ui-slider-vertical" +				" ui-widget" +				" ui-widget-content" +				" ui-corner-all" );		this._mouseDestroy();	},	_mouseCapture: function( event ) {		var position, normValue, distance, closestHandle, index, allowed, offset, mouseOverHandle,			that = this,			o = this.options;		if ( o.disabled ) {			return false;		}		this.elementSize = {			width: this.element.outerWidth(),			height: this.element.outerHeight()		};		this.elementOffset = this.element.offset();		position = { x: event.pageX, y: event.pageY };		normValue = this._normValueFromMouse( position );		distance = this._valueMax() - this._valueMin() + 1;		this.handles.each(function( i ) {			var thisDistance = Math.abs( normValue - that.values(i) );			if (( distance &gt; thisDistance ) ||				( distance === thisDistance &amp;&amp;					(i === that._lastChangedValue || that.values(i) === o.min ))) {				distance = thisDistance;				closestHandle = $( this );				index = i;			}		});		allowed = this._start( event, index );		if ( allowed === false ) {			return false;		}		this._mouseSliding = true;		this._handleIndex = index;		closestHandle			.addClass( "ui-state-active" )			.focus();		offset = closestHandle.offset();		mouseOverHandle = !$( event.target ).parents().addBack().is( ".ui-slider-handle" );		this._clickOffset = mouseOverHandle ? { left: 0, top: 0 } : {			left: event.pageX - offset.left - ( closestHandle.width() / 2 ),			top: event.pageY - offset.top -				( closestHandle.height() / 2 ) -				( parseInt( closestHandle.css("borderTopWidth"), 10 ) || 0 ) -				( parseInt( closestHandle.css("borderBottomWidth"), 10 ) || 0) +				( parseInt( closestHandle.css("marginTop"), 10 ) || 0)		};		if ( !this.handles.hasClass( "ui-state-hover" ) ) {			this._slide( event, index, normValue );		}		this._animateOff = true;		return true;	},	_mouseStart: function() {		return true;	},	_mouseDrag: function( event ) {		var position = { x: event.pageX, y: event.pageY },			normValue = this._normValueFromMouse( position );		this._slide( event, this._handleIndex, normValue );		return false;	},	_mouseStop: function( event ) {		this.handles.removeClass( "ui-state-active" );		this._mouseSliding = false;		this._stop( event, this._handleIndex );		this._change( event, this._handleIndex );		this._handleIndex = null;		this._clickOffset = null;		this._animateOff = false;		return false;	},	_detectOrientation: function() {		this.orientation = ( this.options.orientation === "vertical" ) ? "vertical" : "horizontal";	},	_normValueFromMouse: function( position ) {		var pixelTotal,			pixelMouse,			percentMouse,			valueTotal,			valueMouse;		if ( this.orientation === "horizontal" ) {			pixelTotal = this.elementSize.width;			pixelMouse = position.x - this.elementOffset.left - ( this._clickOffset ? this._clickOffset.left : 0 );		} else {			pixelTotal = this.elementSize.height;			pixelMouse = position.y - this.elementOffset.top - ( this._clickOffset ? this._clickOffset.top : 0 );		}		percentMouse = ( pixelMouse / pixelTotal );		if ( percentMouse &gt; 1 ) {			percentMouse = 1;		}		if ( percentMouse &lt; 0 ) {			percentMouse = 0;		}		if ( this.orientation === "vertical" ) {			percentMouse = 1 - percentMouse;		}		valueTotal = this._valueMax() - this._valueMin();		valueMouse = this._valueMin() + percentMouse * valueTotal;		return this._trimAlignValue( valueMouse );	},	_start: function( event, index ) {		var uiHash = {			handle: this.handles[ index ],			value: this.value()		};		if ( this.options.values &amp;&amp; this.options.values.length ) {			uiHash.value = this.values( index );			uiHash.values = this.values();		}		return this._trigger( "start", event, uiHash );	},	_slide: function( event, index, newVal ) {		var otherVal,			newValues,			allowed;		if ( this.options.values &amp;&amp; this.options.values.length ) {			otherVal = this.values( index ? 0 : 1 );			if ( ( this.options.values.length === 2 &amp;&amp; this.options.range === true ) &amp;&amp;					( ( index === 0 &amp;&amp; newVal &gt; otherVal) || ( index === 1 &amp;&amp; newVal &lt; otherVal ) )				) {				newVal = otherVal;			}			if ( newVal !== this.values( index ) ) {				newValues = this.values();				newValues[ index ] = newVal;				// A slide can be canceled by returning false from the slide callback				allowed = this._trigger( "slide", event, {					handle: this.handles[ index ],					value: newVal,					values: newValues				} );				otherVal = this.values( index ? 0 : 1 );				if ( allowed !== false ) {					this.values( index, newVal );				}			}		} else {			if ( newVal !== this.value() ) {				// A slide can be canceled by returning false from the slide callback				allowed = this._trigger( "slide", event, {					handle: this.handles[ index ],					value: newVal				} );				if ( allowed !== false ) {					this.value( newVal );				}			}		}	},	_stop: function( event, index ) {		var uiHash = {			handle: this.handles[ index ],			value: this.value()		};		if ( this.options.values &amp;&amp; this.options.values.length ) {			uiHash.value = this.values( index );			uiHash.values = this.values();		}		this._trigger( "stop", event, uiHash );	},	_change: function( event, index ) {		if ( !this._keySliding &amp;&amp; !this._mouseSliding ) {			var uiHash = {				handle: this.handles[ index ],				value: this.value()			};			if ( this.options.values &amp;&amp; this.options.values.length ) {				uiHash.value = this.values( index );				uiHash.values = this.values();			}			//store the last changed value index for reference when handles overlap			this._lastChangedValue = index;			this._trigger( "change", event, uiHash );		}	},	value: function( newValue ) {		if ( arguments.length ) {			this.options.value = this._trimAlignValue( newValue );			this._refreshValue();			this._change( null, 0 );			return;		}		return this._value();	},	values: function( index, newValue ) {		var vals,			newValues,			i;		if ( arguments.length &gt; 1 ) {			this.options.values[ index ] = this._trimAlignValue( newValue );			this._refreshValue();			this._change( null, index );			return;		}		if ( arguments.length ) {			if ( $.isArray( arguments[ 0 ] ) ) {				vals = this.options.values;				newValues = arguments[ 0 ];				for ( i = 0; i &lt; vals.length; i += 1 ) {					vals[ i ] = this._trimAlignValue( newValues[ i ] );					this._change( null, i );				}				this._refreshValue();			} else {				if ( this.options.values &amp;&amp; this.options.values.length ) {					return this._values( index );				} else {					return this.value();				}			}		} else {			return this._values();		}	},	_setOption: function( key, value ) {		var i,			valsLength = 0;		if ( key === "range" &amp;&amp; this.options.range === true ) {			if ( value === "min" ) {				this.options.value = this._values( 0 );				this.options.values = null;			} else if ( value === "max" ) {				this.options.value = this._values( this.options.values.length-1 );				this.options.values = null;			}		}		if ( $.isArray( this.options.values ) ) {			valsLength = this.options.values.length;		}		$.Widget.prototype._setOption.apply( this, arguments );		switch ( key ) {			case "orientation":				this._detectOrientation();				this.element					.removeClass( "ui-slider-horizontal ui-slider-vertical" )					.addClass( "ui-slider-" + this.orientation );				this._refreshValue();				break;			case "value":				this._animateOff = true;				this._refreshValue();				this._change( null, 0 );				this._animateOff = false;				break;			case "values":				this._animateOff = true;				this._refreshValue();				for ( i = 0; i &lt; valsLength; i += 1 ) {					this._change( null, i );				}				this._animateOff = false;				break;			case "min":			case "max":				this._animateOff = true;				this._refreshValue();				this._animateOff = false;				break;			case "range":				this._animateOff = true;				this._refresh();				this._animateOff = false;				break;		}	},	//internal value getter	// _value() returns value trimmed by min and max, aligned by step	_value: function() {		var val = this.options.value;		val = this._trimAlignValue( val );		return val;	},	//internal values getter	// _values() returns array of values trimmed by min and max, aligned by step	// _values( index ) returns single value trimmed by min and max, aligned by step	_values: function( index ) {		var val,			vals,			i;		if ( arguments.length ) {			val = this.options.values[ index ];			val = this._trimAlignValue( val );			return val;		} else if ( this.options.values &amp;&amp; this.options.values.length ) {			// .slice() creates a copy of the array			// this copy gets trimmed by min and max and then returned			vals = this.options.values.slice();			for ( i = 0; i &lt; vals.length; i+= 1) {				vals[ i ] = this._trimAlignValue( vals[ i ] );			}			return vals;		} else {			return [];		}	},	// returns the step-aligned value that val is closest to, between (inclusive) min and max	_trimAlignValue: function( val ) {		if ( val &lt;= this._valueMin() ) {			return this._valueMin();		}		if ( val &gt;= this._valueMax() ) {			return this._valueMax();		}		var step = ( this.options.step &gt; 0 ) ? this.options.step : 1,			valModStep = (val - this._valueMin()) % step,			alignValue = val - valModStep;		if ( Math.abs(valModStep) * 2 &gt;= step ) {			alignValue += ( valModStep &gt; 0 ) ? step : ( -step );		}		// Since JavaScript has problems with large floats, round		// the final value to 5 digits after the decimal point (see #4124)		return parseFloat( alignValue.toFixed(5) );	},	_valueMin: function() {		return this.options.min;	},	_valueMax: function() {		return this.options.max;	},	_refreshValue: function() {		var lastValPercent, valPercent, value, valueMin, valueMax,			oRange = this.options.range,			o = this.options,			that = this,			animate = ( !this._animateOff ) ? o.animate : false,			_set = {};		if ( this.options.values &amp;&amp; this.options.values.length ) {			this.handles.each(function( i ) {				valPercent = ( that.values(i) - that._valueMin() ) / ( that._valueMax() - that._valueMin() ) * 100;				_set[ that.orientation === "horizontal" ? "left" : "bottom" ] = valPercent + "%";				$( this ).stop( 1, 1 )[ animate ? "animate" : "css" ]( _set, o.animate );				if ( that.options.range === true ) {					if ( that.orientation === "horizontal" ) {						if ( i === 0 ) {							that.range.stop( 1, 1 )[ animate ? "animate" : "css" ]( { left: valPercent + "%" }, o.animate );						}						if ( i === 1 ) {							that.range[ animate ? "animate" : "css" ]( { width: ( valPercent - lastValPercent ) + "%" }, { queue: false, duration: o.animate } );						}					} else {						if ( i === 0 ) {							that.range.stop( 1, 1 )[ animate ? "animate" : "css" ]( { bottom: ( valPercent ) + "%" }, o.animate );						}						if ( i === 1 ) {							that.range[ animate ? "animate" : "css" ]( { height: ( valPercent - lastValPercent ) + "%" }, { queue: false, duration: o.animate } );						}					}				}				lastValPercent = valPercent;			});		} else {			value = this.value();			valueMin = this._valueMin();			valueMax = this._valueMax();			valPercent = ( valueMax !== valueMin ) ?					( value - valueMin ) / ( valueMax - valueMin ) * 100 :					0;			_set[ this.orientation === "horizontal" ? "left" : "bottom" ] = valPercent + "%";			this.handle.stop( 1, 1 )[ animate ? "animate" : "css" ]( _set, o.animate );			if ( oRange === "min" &amp;&amp; this.orientation === "horizontal" ) {				this.range.stop( 1, 1 )[ animate ? "animate" : "css" ]( { width: valPercent + "%" }, o.animate );			}			if ( oRange === "max" &amp;&amp; this.orientation === "horizontal" ) {				this.range[ animate ? "animate" : "css" ]( { width: ( 100 - valPercent ) + "%" }, { queue: false, duration: o.animate } );			}			if ( oRange === "min" &amp;&amp; this.orientation === "vertical" ) {				this.range.stop( 1, 1 )[ animate ? "animate" : "css" ]( { height: valPercent + "%" }, o.animate );			}			if ( oRange === "max" &amp;&amp; this.orientation === "vertical" ) {				this.range[ animate ? "animate" : "css" ]( { height: ( 100 - valPercent ) + "%" }, { queue: false, duration: o.animate } );			}		}	},	_handleEvents: {		keydown: function( event ) {			var allowed, curVal, newVal, step,				index = $( event.target ).data( "ui-slider-handle-index" );			switch ( event.keyCode ) {				case $.ui.keyCode.HOME:				case $.ui.keyCode.END:				case $.ui.keyCode.PAGE_UP:				case $.ui.keyCode.PAGE_DOWN:				case $.ui.keyCode.UP:				case $.ui.keyCode.RIGHT:				case $.ui.keyCode.DOWN:				case $.ui.keyCode.LEFT:					event.preventDefault();					if ( !this._keySliding ) {						this._keySliding = true;						$( event.target ).addClass( "ui-state-active" );						allowed = this._start( event, index );						if ( allowed === false ) {							return;						}					}					break;			}			step = this.options.step;			if ( this.options.values &amp;&amp; this.options.values.length ) {				curVal = newVal = this.values( index );			} else {				curVal = newVal = this.value();			}			switch ( event.keyCode ) {				case $.ui.keyCode.HOME:					newVal = this._valueMin();					break;				case $.ui.keyCode.END:					newVal = this._valueMax();					break;				case $.ui.keyCode.PAGE_UP:					newVal = this._trimAlignValue( curVal + ( (this._valueMax() - this._valueMin()) / numPages ) );					break;				case $.ui.keyCode.PAGE_DOWN:					newVal = this._trimAlignValue( curVal - ( (this._valueMax() - this._valueMin()) / numPages ) );					break;				case $.ui.keyCode.UP:				case $.ui.keyCode.RIGHT:					if ( curVal === this._valueMax() ) {						return;					}					newVal = this._trimAlignValue( curVal + step );					break;				case $.ui.keyCode.DOWN:				case $.ui.keyCode.LEFT:					if ( curVal === this._valueMin() ) {						return;					}					newVal = this._trimAlignValue( curVal - step );					break;			}			this._slide( event, index, newVal );		},		click: function( event ) {			event.preventDefault();		},		keyup: function( event ) {			var index = $( event.target ).data( "ui-slider-handle-index" );			if ( this._keySliding ) {				this._keySliding = false;				this._stop( event, index );				this._change( event, index );				$( event.target ).removeClass( "ui-state-active" );			}		}	}});}(jQuery));(function( $ ) {function modifier( fn ) {	return function() {		var previous = this.element.val();		fn.apply( this, arguments );		this._refresh();		if ( previous !== this.element.val() ) {			this._trigger( "change" );		}	};}$.widget( "ui.spinner", {	version: "1.10.4",	defaultElement: "&lt;input&gt;",	widgetEventPrefix: "spin",	options: {		culture: null,		icons: {			down: "ui-icon-triangle-1-s",			up: "ui-icon-triangle-1-n"		},		incremental: true,		max: null,		min: null,		numberFormat: null,		page: 10,		step: 1,		change: null,		spin: null,		start: null,		stop: null	},	_create: function() {		// handle string values that need to be parsed		this._setOption( "max", this.options.max );		this._setOption( "min", this.options.min );		this._setOption( "step", this.options.step );		// Only format if there is a value, prevents the field from being marked		// as invalid in Firefox, see #9573.		if ( this.value() !== "" ) {			// Format the value, but don''t constrain.			this._value( this.element.val(), true );		}		this._draw();		this._on( this._events );		this._refresh();		// turning off autocomplete prevents the browser from remembering the		// value when navigating through history, so we re-enable autocomplete		// if the page is unloaded before the widget is destroyed. #7790		this._on( this.window, {			beforeunload: function() {				this.element.removeAttr( "autocomplete" );			}		});	},	_getCreateOptions: function() {		var options = {},			element = this.element;		$.each( [ "min", "max", "step" ], function( i, option ) {			var value = element.attr( option );			if ( value !== undefined &amp;&amp; value.length ) {				options[ option ] = value;			}		});		return options;	},	_events: {		keydown: function( event ) {			if ( this._start( event ) &amp;&amp; this._keydown( event ) ) {				event.preventDefault();			}		},		keyup: "_stop",		focus: function() {			this.previous = this.element.val();		},		blur: function( event ) {			if ( this.cancelBlur ) {				delete this.cancelBlur;				return;			}			this._stop();			this._refresh();			if ( this.previous !== this.element.val() ) {				this._trigger( "change", event );			}		},		mousewheel: function( event, delta ) {			if ( !delta ) {				return;			}			if ( !this.spinning &amp;&amp; !this._start( event ) ) {				return false;			}			this._spin( (delta &gt; 0 ? 1 : -1) * this.options.step, event );			clearTimeout( this.mousewheelTimer );			this.mousewheelTimer = this._delay(function() {				if ( this.spinning ) {					this._stop( event );				}			}, 100 );			event.preventDefault();		},		"mousedown .ui-spinner-button": function( event ) {			var previous;			// We never want the buttons to have focus; whenever the user is			// interacting with the spinner, the focus should be on the input.			// If the input is focused then this.previous is properly set from			// when the input first received focus. If the input is not focused			// then we need to set this.previous based on the value before spinning.			previous = this.element[0] === this.document[0].activeElement ?				this.previous : this.element.val();			function checkFocus() {				var isActive = this.element[0] === this.document[0].activeElement;				if ( !isActive ) {					this.element.focus();					this.previous = previous;					// support: IE					// IE sets focus asynchronously, so we need to check if focus					// moved off of the input because the user clicked on the button.					this._delay(function() {						this.previous = previous;					});				}			}			// ensure focus is on (or stays on) the text field			event.preventDefault();			checkFocus.call( this );			// support: IE			// IE doesn''t prevent moving focus even with event.preventDefault()			// so we set a flag to know when we should ignore the blur event			// and check (again) if focus moved off of the input.			this.cancelBlur = true;			this._delay(function() {				delete this.cancelBlur;				checkFocus.call( this );			});			if ( this._start( event ) === false ) {				return;			}			this._repeat( null, $( event.currentTarget ).hasClass( "ui-spinner-up" ) ? 1 : -1, event );		},		"mouseup .ui-spinner-button": "_stop",		"mouseenter .ui-spinner-button": function( event ) {			// button will add ui-state-active if mouse was down while mouseleave and kept down			if ( !$( event.currentTarget ).hasClass( "ui-state-active" ) ) {				return;			}			if ( this._start( event ) === false ) {				return false;			}			this._repeat( null, $( event.currentTarget ).hasClass( "ui-spinner-up" ) ? 1 : -1, event );		},		// TODO: do we really want to consider this a stop?		// shouldn''t we just stop the repeater and wait until mouseup before		// we trigger the stop event?		"mouseleave .ui-spinner-button": "_stop"	},	_draw: function() {		var uiSpinner = this.uiSpinner = this.element			.addClass( "ui-spinner-input" )			.attr( "autocomplete", "off" )			.wrap( this._uiSpinnerHtml() )			.parent()				// add buttons				.append( this._buttonHtml() );		this.element.attr( "role", "spinbutton" );		// button bindings		this.buttons = uiSpinner.find( ".ui-spinner-button" )			.attr( "tabIndex", -1 )			.button()			.removeClass( "ui-corner-all" );		// IE 6 doesn''t understand height: 50% for the buttons		// unless the wrapper has an explicit height		if ( this.buttons.height() &gt; Math.ceil( uiSpinner.height() * 0.5 ) &amp;&amp;				uiSpinner.height() &gt; 0 ) {			uiSpinner.height( uiSpinner.height() );		}		// disable spinner if element was already disabled		if ( this.options.disabled ) {			this.disable();		}	},	_keydown: function( event ) {		var options = this.options,			keyCode = $.ui.keyCode;		switch ( event.keyCode ) {		case keyCode.UP:			this._repeat( null, 1, event );			return true;		case keyCode.DOWN:			this._repeat( null, -1, event );			return true;		case keyCode.PAGE_UP:			this._repeat( null, options.page, event );			return true;		case keyCode.PAGE_DOWN:			this._repeat( null, -options.page, event );			return true;		}		return false;	},	_uiSpinnerHtml: function() {		return "&lt;span class=''ui-spinner ui-widget ui-widget-content ui-corner-all''&gt;&lt;/span&gt;";	},	_buttonHtml: function() {		return "" +			"&lt;a class=''ui-spinner-button ui-spinner-up ui-corner-tr''&gt;" +				"&lt;span class=''ui-icon " + this.options.icons.up + "''&gt;&amp;#9650;&lt;/span&gt;" +			"&lt;/a&gt;" +			"&lt;a class=''ui-spinner-button ui-spinner-down ui-corner-br''&gt;" +				"&lt;span class=''ui-icon " + this.options.icons.down + "''&gt;&amp;#9660;&lt;/span&gt;" +			"&lt;/a&gt;";	},	_start: function( event ) {		if ( !this.spinning &amp;&amp; this._trigger( "start", event ) === false ) {			return false;		}		if ( !this.counter ) {			this.counter = 1;		}		this.spinning = true;		return true;	},	_repeat: function( i, steps, event ) {		i = i || 500;		clearTimeout( this.timer );		this.timer = this._delay(function() {			this._repeat( 40, steps, event );		}, i );		this._spin( steps * this.options.step, event );	},	_spin: function( step, event ) {		var value = this.value() || 0;		if ( !this.counter ) {			this.counter = 1;		}		value = this._adjustValue( value + step * this._increment( this.counter ) );		if ( !this.spinning || this._trigger( "spin", event, { value: value } ) !== false) {			this._value( value );			this.counter++;		}	},	_increment: function( i ) {		var incremental = this.options.incremental;		if ( incremental ) {			return $.isFunction( incremental ) ?				incremental( i ) :				Math.floor( i*i*i/50000 - i*i/500 + 17*i/200 + 1 );		}		return 1;	},	_precision: function() {		var precision = this._precisionOf( this.options.step );		if ( this.options.min !== null ) {			precision = Math.max( precision, this._precisionOf( this.options.min ) );		}		return precision;	},	_precisionOf: function( num ) {		var str = num.toString(),			decimal = str.indexOf( "." );		return decimal === -1 ? 0 : str.length - decimal - 1;	},	_adjustValue: function( value ) {		var base, aboveMin,			options = this.options;		// make sure we''re at a valid step		// - find out where we are relative to the base (min or 0)		base = options.min !== null ? options.min : 0;		aboveMin = value - base;		// - round to the nearest step		aboveMin = Math.round(aboveMin / options.step) * options.step;		// - rounding is based on 0, so adjust back to our base		value = base + aboveMin;		// fix precision from bad JS floating point math		value = parseFloat( value.toFixed( this._precision() ) );		// clamp the value		if ( options.max !== null &amp;&amp; value &gt; options.max) {			return options.max;		}		if ( options.min !== null &amp;&amp; value &lt; options.min ) {			return options.min;		}		return value;	},	_stop: function( event ) {		if ( !this.spinning ) {			return;		}		clearTimeout( this.timer );		clearTimeout( this.mousewheelTimer );		this.counter = 0;		this.spinning = false;		this._trigger( "stop", event );	},	_setOption: function( key, value ) {		if ( key === "culture" || key === "numberFormat" ) {			var prevValue = this._parse( this.element.val() );			this.options[ key ] = value;			this.element.val( this._format( prevValue ) );			return;		}		if ( key === "max" || key === "min" || key === "step" ) {			if ( typeof value === "string" ) {				value = this._parse( value );			}		}		if ( key === "icons" ) {			this.buttons.first().find( ".ui-icon" )				.removeClass( this.options.icons.up )				.addClass( value.up );			this.buttons.last().find( ".ui-icon" )				.removeClass( this.options.icons.down )				.addClass( value.down );		}		this._super( key, value );		if ( key === "disabled" ) {			if ( value ) {				this.element.prop( "disabled", true );				this.buttons.button( "disable" );			} else {				this.element.prop( "disabled", false );				this.buttons.button( "enable" );			}		}	},	_setOptions: modifier(function( options ) {		this._super( options );		this._value( this.element.val() );	}),	_parse: function( val ) {		if ( typeof val === "string" &amp;&amp; val !== "" ) {			val = window.Globalize &amp;&amp; this.options.numberFormat ?				Globalize.parseFloat( val, 10, this.options.culture ) : +val;		}		return val === "" || isNaN( val ) ? null : val;	},	_format: function( value ) {		if ( value === "" ) {			return "";		}		return window.Globalize &amp;&amp; this.options.numberFormat ?			Globalize.format( value, this.options.numberFormat, this.options.culture ) :			value;	},	_refresh: function() {		this.element.attr({			"aria-valuemin": this.options.min,			"aria-valuemax": this.options.max,			// TODO: what should we do with values that can''t be parsed?			"aria-valuenow": this._parse( this.element.val() )		});	},	// update the value without triggering change	_value: function( value, allowAny ) {		var parsed;		if ( value !== "" ) {			parsed = this._parse( value );			if ( parsed !== null ) {				if ( !allowAny ) {					parsed = this._adjustValue( parsed );				}				value = this._format( parsed );			}		}		this.element.val( value );		this._refresh();	},	_destroy: function() {		this.element			.removeClass( "ui-spinner-input" )			.prop( "disabled", false )			.removeAttr( "autocomplete" )			.removeAttr( "role" )			.removeAttr( "aria-valuemin" )			.removeAttr( "aria-valuemax" )			.removeAttr( "aria-valuenow" );		this.uiSpinner.replaceWith( this.element );	},	stepUp: modifier(function( steps ) {		this._stepUp( steps );	}),	_stepUp: function( steps ) {		if ( this._start() ) {			this._spin( (steps || 1) * this.options.step );			this._stop();		}	},	stepDown: modifier(function( steps ) {		this._stepDown( steps );	}),	_stepDown: function( steps ) {		if ( this._start() ) {			this._spin( (steps || 1) * -this.options.step );			this._stop();		}	},	pageUp: modifier(function( pages ) {		this._stepUp( (pages || 1) * this.options.page );	}),	pageDown: modifier(function( pages ) {		this._stepDown( (pages || 1) * this.options.page );	}),	value: function( newVal ) {		if ( !arguments.length ) {			return this._parse( this.element.val() );		}		modifier( this._value ).call( this, newVal );	},	widget: function() {		return this.uiSpinner;	}});}( jQuery ) );(function( $, undefined ) {var tabId = 0,	rhash = /#.*$/;function getNextTabId() {	return ++tabId;}function isLocal( anchor ) {	// support: IE7	// IE7 doesn''t normalize the href property when set via script (#9317)	anchor = anchor.cloneNode( false );	return anchor.hash.length &gt; 1 &amp;&amp;		decodeURIComponent( anchor.href.replace( rhash, "" ) ) ===			decodeURIComponent( location.href.replace( rhash, "" ) );}$.widget( "ui.tabs", {	version: "1.10.4",	delay: 300,	options: {		active: null,		collapsible: false,		event: "click",		heightStyle: "content",		hide: null,		show: null,		// callbacks		activate: null,		beforeActivate: null,		beforeLoad: null,		load: null	},	_create: function() {		var that = this,			options = this.options;		this.running = false;		this.element			.addClass( "ui-tabs ui-widget ui-widget-content ui-corner-all" )			.toggleClass( "ui-tabs-collapsible", options.collapsible )			// Prevent users from focusing disabled tabs via click			.delegate( ".ui-tabs-nav &gt; li", "mousedown" + this.eventNamespace, function( event ) {				if ( $( this ).is( ".ui-state-disabled" ) ) {					event.preventDefault();				}			})			// support: IE &lt;9			// Preventing the default action in mousedown doesn''t prevent IE			// from focusing the element, so if the anchor gets focused, blur.			// We don''t have to worry about focusing the previously focused			// element since clicking on a non-focusable element should focus			// the body anyway.			.delegate( ".ui-tabs-anchor", "focus" + this.eventNamespace, function() {				if ( $( this ).closest( "li" ).is( ".ui-state-disabled" ) ) {					this.blur();				}			});		this._processTabs();		options.active = this._initialActive();		// Take disabling tabs via class attribute from HTML		// into account and update option properly.		if ( $.isArray( options.disabled ) ) {			options.disabled = $.unique( options.disabled.concat(				$.map( this.tabs.filter( ".ui-state-disabled" ), function( li ) {					return that.tabs.index( li );				})			) ).sort();		}		// check for length avoids error when initializing empty list		if ( this.options.active !== false &amp;&amp; this.anchors.length ) {			this.active = this._findActive( options.active );		} else {			this.active = $();		}		this._refresh();		if ( this.active.length ) {			this.load( options.active );		}	},	_initialActive: function() {		var active = this.options.active,			collapsible = this.options.collapsible,			locationHash = location.hash.substring( 1 );		if ( active === null ) {			// check the fragment identifier in the URL			if ( locationHash ) {				this.tabs.each(function( i, tab ) {					if ( $( tab ).attr( "aria-controls" ) === locationHash ) {						active = i;						return false;					}				});			}			// check for a tab marked active via a class			if ( active === null ) {				active = this.tabs.index( this.tabs.filter( ".ui-tabs-active" ) );			}			// no active tab, set to false			if ( active === null || active === -1 ) {				active = this.tabs.length ? 0 : false;			}		}		// handle numbers: negative, out of range		if ( active !== false ) {			active = this.tabs.index( this.tabs.eq( active ) );			if ( active === -1 ) {				active = collapsible ? false : 0;			}		}		// don''t allow collapsible: false and active: false		if ( !collapsible &amp;&amp; active === false &amp;&amp; this.anchors.length ) {			active = 0;		}		return active;	},	_getCreateEventData: function() {		return {			tab: this.active,			panel: !this.active.length ? $() : this._getPanelForTab( this.active )		};	},	_tabKeydown: function( event ) {		var focusedTab = $( this.document[0].activeElement ).closest( "li" ),			selectedIndex = this.tabs.index( focusedTab ),			goingForward = true;		if ( this._handlePageNav( event ) ) {			return;		}		switch ( event.keyCode ) {			case $.ui.keyCode.RIGHT:			case $.ui.keyCode.DOWN:				selectedIndex++;				break;			case $.ui.keyCode.UP:			case $.ui.keyCode.LEFT:				goingForward = false;				selectedIndex--;				break;			case $.ui.keyCode.END:				selectedIndex = this.anchors.length - 1;				break;			case $.ui.keyCode.HOME:				selectedIndex = 0;				break;			case $.ui.keyCode.SPACE:				// Activate only, no collapsing				event.preventDefault();				clearTimeout( this.activating );				this._activate( selectedIndex );				return;			case $.ui.keyCode.ENTER:				// Toggle (cancel delayed activation, allow collapsing)				event.preventDefault();				clearTimeout( this.activating );				// Determine if we should collapse or activate				this._activate( selectedIndex === this.options.active ? false : selectedIndex );				return;			default:				return;		}		// Focus the appropriate tab, based on which key was pressed		event.preventDefault();		clearTimeout( this.activating );		selectedIndex = this._focusNextTab( selectedIndex, goingForward );		// Navigating with control key will prevent automatic activation		if ( !event.ctrlKey ) {			// Update aria-selected immediately so that AT think the tab is already selected.			// Otherwise AT may confuse the user by stating that they need to activate the tab,			// but the tab will already be activated by the time the announcement finishes.			focusedTab.attr( "aria-selected", "false" );			this.tabs.eq( selectedIndex ).attr( "aria-selected", "true" );			this.activating = this._delay(function() {				this.option( "active", selectedIndex );			}, this.delay );		}	},	_panelKeydown: function( event ) {		if ( this._handlePageNav( event ) ) {			return;		}		// Ctrl+up moves focus to the current tab		if ( event.ctrlKey &amp;&amp; event.keyCode === $.ui.keyCode.UP ) {			event.preventDefault();			this.active.focus();		}	},	// Alt+page up/down moves focus to the previous/next tab (and activates)	_handlePageNav: function( event ) {		if ( event.altKey &amp;&amp; event.keyCode === $.ui.keyCode.PAGE_UP ) {			this._activate( this._focusNextTab( this.options.active - 1, false ) );			return true;		}		if ( event.altKey &amp;&amp; event.keyCode === $.ui.keyCode.PAGE_DOWN ) {			this._activate( this._focusNextTab( this.options.active + 1, true ) );			return true;		}	},	_findNextTab: function( index, goingForward ) {		var lastTabIndex = this.tabs.length - 1;		function constrain() {			if ( index &gt; lastTabIndex ) {				index = 0;			}			if ( index &lt; 0 ) {				index = lastTabIndex;			}			return index;		}		while ( $.inArray( constrain(), this.options.disabled ) !== -1 ) {			index = goingForward ? index + 1 : index - 1;		}		return index;	},	_focusNextTab: function( index, goingForward ) {		index = this._findNextTab( index, goingForward );		this.tabs.eq( index ).focus();		return index;	},	_setOption: function( key, value ) {		if ( key === "active" ) {			// _activate() will handle invalid values and update this.options			this._activate( value );			return;		}		if ( key === "disabled" ) {			// don''t use the widget factory''s disabled handling			this._setupDisabled( value );			return;		}		this._super( key, value);		if ( key === "collapsible" ) {			this.element.toggleClass( "ui-tabs-collapsible", value );			// Setting collapsible: false while collapsed; open first panel			if ( !value &amp;&amp; this.options.active === false ) {				this._activate( 0 );			}		}		if ( key === "event" ) {			this._setupEvents( value );		}		if ( key === "heightStyle" ) {			this._setupHeightStyle( value );		}	},	_tabId: function( tab ) {		return tab.attr( "aria-controls" ) || "ui-tabs-" + getNextTabId();	},	_sanitizeSelector: function( hash ) {		return hash ? hash.replace( /[!"$%&amp;''()*+,.\/:;&lt;=&gt;?@\[\]\^`{|}~]/g, "\\$&amp;" ) : "";	},	refresh: function() {		var options = this.options,			lis = this.tablist.children( ":has(a[href])" );		// get disabled tabs from class attribute from HTML		// this will get converted to a boolean if needed in _refresh()		options.disabled = $.map( lis.filter( ".ui-state-disabled" ), function( tab ) {			return lis.index( tab );		});		this._processTabs();		// was collapsed or no tabs		if ( options.active === false || !this.anchors.length ) {			options.active = false;			this.active = $();		// was active, but active tab is gone		} else if ( this.active.length &amp;&amp; !$.contains( this.tablist[ 0 ], this.active[ 0 ] ) ) {			// all remaining tabs are disabled			if ( this.tabs.length === options.disabled.length ) {				options.active = false;				this.active = $();			// activate previous tab			} else {				this._activate( this._findNextTab( Math.max( 0, options.active - 1 ), false ) );			}		// was active, active tab still exists		} else {			// make sure active index is correct			options.active = this.tabs.index( this.active );		}		this._refresh();	},	_refresh: function() {		this._setupDisabled( this.options.disabled );		this._setupEvents( this.options.event );		this._setupHeightStyle( this.options.heightStyle );		this.tabs.not( this.active ).attr({			"aria-selected": "false",			tabIndex: -1		});		this.panels.not( this._getPanelForTab( this.active ) )			.hide()			.attr({				"aria-expanded": "false",				"aria-hidden": "true"			});		// Make sure one tab is in the tab order		if ( !this.active.length ) {			this.tabs.eq( 0 ).attr( "tabIndex", 0 );		} else {			this.active				.addClass( "ui-tabs-active ui-state-active" )				.attr({					"aria-selected": "true",					tabIndex: 0				});			this._getPanelForTab( this.active )				.show()				.attr({					"aria-expanded": "true",					"aria-hidden": "false"				});		}	},	_processTabs: function() {		var that = this;		this.tablist = this._getList()			.addClass( "ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all" )			.attr( "role", "tablist" );		this.tabs = this.tablist.find( "&gt; li:has(a[href])" )			.addClass( "ui-state-default ui-corner-top" )			.attr({				role: "tab",				tabIndex: -1			});		this.anchors = this.tabs.map(function() {				return $( "a", this )[ 0 ];			})			.addClass( "ui-tabs-anchor" )			.attr({				role: "presentation",				tabIndex: -1			});		this.panels = $();		this.anchors.each(function( i, anchor ) {			var selector, panel, panelId,				anchorId = $( anchor ).uniqueId().attr( "id" ),				tab = $( anchor ).closest( "li" ),				originalAriaControls = tab.attr( "aria-controls" );			// inline tab			if ( isLocal( anchor ) ) {				selector = anchor.hash;				panel = that.element.find( that._sanitizeSelector( selector ) );			// remote tab			} else {				panelId = that._tabId( tab );				selector = "#" + panelId;				panel = that.element.find( selector );				if ( !panel.length ) {					panel = that._createPanel( panelId );					panel.insertAfter( that.panels[ i - 1 ] || that.tablist );				}				panel.attr( "aria-live", "polite" );			}			if ( panel.length) {				that.panels = that.panels.add( panel );			}			if ( originalAriaControls ) {				tab.data( "ui-tabs-aria-controls", originalAriaControls );			}			tab.attr({				"aria-controls": selector.substring( 1 ),				"aria-labelledby": anchorId			});			panel.attr( "aria-labelledby", anchorId );		});		this.panels			.addClass( "ui-tabs-panel ui-widget-content ui-corner-bottom" )			.attr( "role", "tabpanel" );	},	// allow overriding how to find the list for rare usage scenarios (#7715)	_getList: function() {		return this.tablist || this.element.find( "ol,ul" ).eq( 0 );	},	_createPanel: function( id ) {		return $( "&lt;div&gt;" )			.attr( "id", id )			.addClass( "ui-tabs-panel ui-widget-content ui-corner-bottom" )			.data( "ui-tabs-destroy", true );	},	_setupDisabled: function( disabled ) {		if ( $.isArray( disabled ) ) {			if ( !disabled.length ) {				disabled = false;			} else if ( disabled.length === this.anchors.length ) {				disabled = true;			}		}		// disable tabs		for ( var i = 0, li; ( li = this.tabs[ i ] ); i++ ) {			if ( disabled === true || $.inArray( i, disabled ) !== -1 ) {				$( li )					.addClass( "ui-state-disabled" )					.attr( "aria-disabled", "true" );			} else {				$( li )					.removeClass( "ui-state-disabled" )					.removeAttr( "aria-disabled" );			}		}		this.options.disabled = disabled;	},	_setupEvents: function( event ) {		var events = {			click: function( event ) {				event.preventDefault();			}		};		if ( event ) {			$.each( event.split(" "), function( index, eventName ) {				events[ eventName ] = "_eventHandler";			});		}		this._off( this.anchors.add( this.tabs ).add( this.panels ) );		this._on( this.anchors, events );		this._on( this.tabs, { keydown: "_tabKeydown" } );		this._on( this.panels, { keydown: "_panelKeydown" } );		this._focusable( this.tabs );		this._hoverable( this.tabs );	},	_setupHeightStyle: function( heightStyle ) {		var maxHeight,			parent = this.element.parent();		if ( heightStyle === "fill" ) {			maxHeight = parent.height();			maxHeight -= this.element.outerHeight() - this.element.height();			this.element.siblings( ":visible" ).each(function() {				var elem = $( this ),					position = elem.css( "position" );				if ( position === "absolute" || position === "fixed" ) {					return;				}				maxHeight -= elem.outerHeight( true );			});			this.element.children().not( this.panels ).each(function() {				maxHeight -= $( this ).outerHeight( true );			});			this.panels.each(function() {				$( this ).height( Math.max( 0, maxHeight -					$( this ).innerHeight() + $( this ).height() ) );			})			.css( "overflow", "auto" );		} else if ( heightStyle === "auto" ) {			maxHeight = 0;			this.panels.each(function() {				maxHeight = Math.max( maxHeight, $( this ).height( "" ).height() );			}).height( maxHeight );		}	},	_eventHandler: function( event ) {		var options = this.options,			active = this.active,			anchor = $( event.currentTarget ),			tab = anchor.closest( "li" ),			clickedIsActive = tab[ 0 ] === active[ 0 ],			collapsing = clickedIsActive &amp;&amp; options.collapsible,			toShow = collapsing ? $() : this._getPanelForTab( tab ),			toHide = !active.length ? $() : this._getPanelForTab( active ),			eventData = {				oldTab: active,				oldPanel: toHide,				newTab: collapsing ? $() : tab,				newPanel: toShow			};		event.preventDefault();		if ( tab.hasClass( "ui-state-disabled" ) ||				// tab is already loading				tab.hasClass( "ui-tabs-loading" ) ||				// can''t switch durning an animation				this.running ||				// click on active header, but not collapsible				( clickedIsActive &amp;&amp; !options.collapsible ) ||				// allow canceling activation				( this._trigger( "beforeActivate", event, eventData ) === false ) ) {			return;		}		options.active = collapsing ? false : this.tabs.index( tab );		this.active = clickedIsActive ? $() : tab;		if ( this.xhr ) {			this.xhr.abort();		}		if ( !toHide.length &amp;&amp; !toShow.length ) {			$.error( "jQuery UI Tabs: Mismatching fragment identifier." );		}		if ( toShow.length ) {			this.load( this.tabs.index( tab ), event );		}		this._toggle( event, eventData );	},	// handles show/hide for selecting tabs	_toggle: function( event, eventData ) {		var that = this,			toShow = eventData.newPanel,			toHide = eventData.oldPanel;		this.running = true;		function complete() {			that.running = false;			that._trigger( "activate", event, eventData );		}		function show() {			eventData.newTab.closest( "li" ).addClass( "ui-tabs-active ui-state-active" );			if ( toShow.length &amp;&amp; that.options.show ) {				that._show( toShow, that.options.show, complete );			} else {				toShow.show();				complete();			}		}		// start out by hiding, then showing, then completing		if ( toHide.length &amp;&amp; this.options.hide ) {			this._hide( toHide, this.options.hide, function() {				eventData.oldTab.closest( "li" ).removeClass( "ui-tabs-active ui-state-active" );				show();			});		} else {			eventData.oldTab.closest( "li" ).removeClass( "ui-tabs-active ui-state-active" );			toHide.hide();			show();		}		toHide.attr({			"aria-expanded": "false",			"aria-hidden": "true"		});		eventData.oldTab.attr( "aria-selected", "false" );		// If we''re switching tabs, remove the old tab from the tab order.		// If we''re opening from collapsed state, remove the previous tab from the tab order.		// If we''re collapsing, then keep the collapsing tab in the tab order.		if ( toShow.length &amp;&amp; toHide.length ) {			eventData.oldTab.attr( "tabIndex", -1 );		} else if ( toShow.length ) {			this.tabs.filter(function() {				return $( this ).attr( "tabIndex" ) === 0;			})			.attr( "tabIndex", -1 );		}		toShow.attr({			"aria-expanded": "true",			"aria-hidden": "false"		});		eventData.newTab.attr({			"aria-selected": "true",			tabIndex: 0		});	},	_activate: function( index ) {		var anchor,			active = this._findActive( index );		// trying to activate the already active panel		if ( active[ 0 ] === this.active[ 0 ] ) {			return;		}		// trying to collapse, simulate a click on the current active header		if ( !active.length ) {			active = this.active;		}		anchor = active.find( ".ui-tabs-anchor" )[ 0 ];		this._eventHandler({			target: anchor,			currentTarget: anchor,			preventDefault: $.noop		});	},	_findActive: function( index ) {		return index === false ? $() : this.tabs.eq( index );	},	_getIndex: function( index ) {		// meta-function to give users option to provide a href string instead of a numerical index.		if ( typeof index === "string" ) {			index = this.anchors.index( this.anchors.filter( "[href$=''" + index + "'']" ) );		}		return index;	},	_destroy: function() {		if ( this.xhr ) {			this.xhr.abort();		}		this.element.removeClass( "ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible" );		this.tablist			.removeClass( "ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all" )			.removeAttr( "role" );		this.anchors			.removeClass( "ui-tabs-anchor" )			.removeAttr( "role" )			.removeAttr( "tabIndex" )			.removeUniqueId();		this.tabs.add( this.panels ).each(function() {			if ( $.data( this, "ui-tabs-destroy" ) ) {				$( this ).remove();			} else {				$( this )					.removeClass( "ui-state-default ui-state-active ui-state-disabled " +						"ui-corner-top ui-corner-bottom ui-widget-content ui-tabs-active ui-tabs-panel" )					.removeAttr( "tabIndex" )					.removeAttr( "aria-live" )					.removeAttr( "aria-busy" )					.removeAttr( "aria-selected" )					.removeAttr( "aria-labelledby" )					.removeAttr( "aria-hidden" )					.removeAttr( "aria-expanded" )					.removeAttr( "role" );			}		});		this.tabs.each(function() {			var li = $( this ),				prev = li.data( "ui-tabs-aria-controls" );			if ( prev ) {				li					.attr( "aria-controls", prev )					.removeData( "ui-tabs-aria-controls" );			} else {				li.removeAttr( "aria-controls" );			}		});		this.panels.show();		if ( this.options.heightStyle !== "content" ) {			this.panels.css( "height", "" );		}	},	enable: function( index ) {		var disabled = this.options.disabled;		if ( disabled === false ) {			return;		}		if ( index === undefined ) {			disabled = false;		} else {			index = this._getIndex( index );			if ( $.isArray( disabled ) ) {				disabled = $.map( disabled, function( num ) {					return num !== index ? num : null;				});			} else {				disabled = $.map( this.tabs, function( li, num ) {					return num !== index ? num : null;				});			}		}		this._setupDisabled( disabled );	},	disable: function( index ) {		var disabled = this.options.disabled;		if ( disabled === true ) {			return;		}		if ( index === undefined ) {			disabled = true;		} else {			index = this._getIndex( index );			if ( $.inArray( index, disabled ) !== -1 ) {				return;			}			if ( $.isArray( disabled ) ) {				disabled = $.merge( [ index ], disabled ).sort();			} else {				disabled = [ index ];			}		}		this._setupDisabled( disabled );	},	load: function( index, event ) {		index = this._getIndex( index );		var that = this,			tab = this.tabs.eq( index ),			anchor = tab.find( ".ui-tabs-anchor" ),			panel = this._getPanelForTab( tab ),			eventData = {				tab: tab,				panel: panel			};		// not remote		if ( isLocal( anchor[ 0 ] ) ) {			return;		}		this.xhr = $.ajax( this._ajaxSettings( anchor, event, eventData ) );		// support: jQuery &lt;1.8		// jQuery &lt;1.8 returns false if the request is canceled in beforeSend,		// but as of 1.8, $.ajax() always returns a jqXHR object.		if ( this.xhr &amp;&amp; this.xhr.statusText !== "canceled" ) {			tab.addClass( "ui-tabs-loading" );			panel.attr( "aria-busy", "true" );			this.xhr				.success(function( response ) {					// support: jQuery &lt;1.8					// http://bugs.jquery.com/ticket/11778					setTimeout(function() {						panel.html( response );						that._trigger( "load", event, eventData );					}, 1 );				})				.complete(function( jqXHR, status ) {					// support: jQuery &lt;1.8					// http://bugs.jquery.com/ticket/11778					setTimeout(function() {						if ( status === "abort" ) {							that.panels.stop( false, true );						}						tab.removeClass( "ui-tabs-loading" );						panel.removeAttr( "aria-busy" );						if ( jqXHR === that.xhr ) {							delete that.xhr;						}					}, 1 );				});		}	},	_ajaxSettings: function( anchor, event, eventData ) {		var that = this;		return {			url: anchor.attr( "href" ),			beforeSend: function( jqXHR, settings ) {				return that._trigger( "beforeLoad", event,					$.extend( { jqXHR : jqXHR, ajaxSettings: settings }, eventData ) );			}		};	},	_getPanelForTab: function( tab ) {		var id = $( tab ).attr( "aria-controls" );		return this.element.find( this._sanitizeSelector( "#" + id ) );	}});})( jQuery );(function( $ ) {var increments = 0;function addDescribedBy( elem, id ) {	var describedby = (elem.attr( "aria-describedby" ) || "").split( /\s+/ );	describedby.push( id );	elem		.data( "ui-tooltip-id", id )		.attr( "aria-describedby", $.trim( describedby.join( " " ) ) );}function removeDescribedBy( elem ) {	var id = elem.data( "ui-tooltip-id" ),		describedby = (elem.attr( "aria-describedby" ) || "").split( /\s+/ ),		index = $.inArray( id, describedby );	if ( index !== -1 ) {		describedby.splice( index, 1 );	}	elem.removeData( "ui-tooltip-id" );	describedby = $.trim( describedby.join( " " ) );	if ( describedby ) {		elem.attr( "aria-describedby", describedby );	} else {		elem.removeAttr( "aria-describedby" );	}}$.widget( "ui.tooltip", {	version: "1.10.4",	options: {		content: function() {			// support: IE&lt;9, Opera in jQuery &lt;1.7			// .text() can''t accept undefined, so coerce to a string			var title = $( this ).attr( "title" ) || "";			// Escape title, since we''re going from an attribute to raw HTML			return $( "&lt;a&gt;" ).text( title ).html();		},		hide: true,		// Disabled elements have inconsistent behavior across browsers (#8661)		items: "[title]:not([disabled])",		position: {			my: "left top+15",			at: "left bottom",			collision: "flipfit flip"		},		show: true,		tooltipClass: null,		track: false,		// callbacks		close: null,		open: null	},	_create: function() {		this._on({			mouseover: "open",			focusin: "open"		});		// IDs of generated tooltips, needed for destroy		this.tooltips = {};		// IDs of parent tooltips where we removed the title attribute		this.parents = {};		if ( this.options.disabled ) {			this._disable();		}	},	_setOption: function( key, value ) {		var that = this;		if ( key === "disabled" ) {			this[ value ? "_disable" : "_enable" ]();			this.options[ key ] = value;			// disable element style changes			return;		}		this._super( key, value );		if ( key === "content" ) {			$.each( this.tooltips, function( id, element ) {				that._updateContent( element );			});		}	},	_disable: function() {		var that = this;		// close open tooltips		$.each( this.tooltips, function( id, element ) {			var event = $.Event( "blur" );			event.target = event.currentTarget = element[0];			that.close( event, true );		});		// remove title attributes to prevent native tooltips		this.element.find( this.options.items ).addBack().each(function() {			var element = $( this );			if ( element.is( "[title]" ) ) {				element					.data( "ui-tooltip-title", element.attr( "title" ) )					.attr( "title", "" );			}		});	},	_enable: function() {		// restore title attributes		this.element.find( this.options.items ).addBack().each(function() {			var element = $( this );			if ( element.data( "ui-tooltip-title" ) ) {				element.attr( "title", element.data( "ui-tooltip-title" ) );			}		});	},	open: function( event ) {		var that = this,			target = $( event ? event.target : this.element )				// we need closest here due to mouseover bubbling,				// but always pointing at the same event target				.closest( this.options.items );		// No element to show a tooltip for or the tooltip is already open		if ( !target.length || target.data( "ui-tooltip-id" ) ) {			return;		}		if ( target.attr( "title" ) ) {			target.data( "ui-tooltip-title", target.attr( "title" ) );		}		target.data( "ui-tooltip-open", true );		// kill parent tooltips, custom or native, for hover		if ( event &amp;&amp; event.type === "mouseover" ) {			target.parents().each(function() {				var parent = $( this ),					blurEvent;				if ( parent.data( "ui-tooltip-open" ) ) {					blurEvent = $.Event( "blur" );					blurEvent.target = blurEvent.currentTarget = this;					that.close( blurEvent, true );				}				if ( parent.attr( "title" ) ) {					parent.uniqueId();					that.parents[ this.id ] = {						element: this,						title: parent.attr( "title" )					};					parent.attr( "title", "" );				}			});		}		this._updateContent( target, event );	},	_updateContent: function( target, event ) {		var content,			contentOption = this.options.content,			that = this,			eventType = event ? event.type : null;		if ( typeof contentOption === "string" ) {			return this._open( event, target, contentOption );		}		content = contentOption.call( target[0], function( response ) {			// ignore async response if tooltip was closed already			if ( !target.data( "ui-tooltip-open" ) ) {				return;			}			// IE may instantly serve a cached response for ajax requests			// delay this call to _open so the other call to _open runs first			that._delay(function() {				// jQuery creates a special event for focusin when it doesn''t				// exist natively. To improve performance, the native event				// object is reused and the type is changed. Therefore, we can''t				// rely on the type being correct after the event finished				// bubbling, so we set it back to the previous value. (#8740)				if ( event ) {					event.type = eventType;				}				this._open( event, target, response );			});		});		if ( content ) {			this._open( event, target, content );		}	},	_open: function( event, target, content ) {		var tooltip, events, delayedShow,			positionOption = $.extend( {}, this.options.position );		if ( !content ) {			return;		}		// Content can be updated multiple times. If the tooltip already		// exists, then just update the content and bail.		tooltip = this._find( target );		if ( tooltip.length ) {			tooltip.find( ".ui-tooltip-content" ).html( content );			return;		}		// if we have a title, clear it to prevent the native tooltip		// we have to check first to avoid defining a title if none exists		// (we don''t want to cause an element to start matching [title])		//		// We use removeAttr only for key events, to allow IE to export the correct		// accessible attributes. For mouse events, set to empty string to avoid		// native tooltip showing up (happens only when removing inside mouseover).		if ( target.is( "[title]" ) ) {			if ( event &amp;&amp; event.type === "mouseover" ) {				target.attr( "title", "" );			} else {				target.removeAttr( "title" );			}		}		tooltip = this._tooltip( target );		addDescribedBy( target, tooltip.attr( "id" ) );		tooltip.find( ".ui-tooltip-content" ).html( content );		function position( event ) {			positionOption.of = event;			if ( tooltip.is( ":hidden" ) ) {				return;			}			tooltip.position( positionOption );		}		if ( this.options.track &amp;&amp; event &amp;&amp; /^mouse/.test( event.type ) ) {			this._on( this.document, {				mousemove: position			});			// trigger once to override element-relative positioning			position( event );		} else {			tooltip.position( $.extend({				of: target			}, this.options.position ) );		}		tooltip.hide();		this._show( tooltip, this.options.show );		// Handle tracking tooltips that are shown with a delay (#8644). As soon		// as the tooltip is visible, position the tooltip using the most recent		// event.		if ( this.options.show &amp;&amp; this.options.show.delay ) {			delayedShow = this.delayedShow = setInterval(function() {				if ( tooltip.is( ":visible" ) ) {					position( positionOption.of );					clearInterval( delayedShow );				}			}, $.fx.interval );		}		this._trigger( "open", event, { tooltip: tooltip } );		events = {			keyup: function( event ) {				if ( event.keyCode === $.ui.keyCode.ESCAPE ) {					var fakeEvent = $.Event(event);					fakeEvent.currentTarget = target[0];					this.close( fakeEvent, true );				}			},			remove: function() {				this._removeTooltip( tooltip );			}		};		if ( !event || event.type === "mouseover" ) {			events.mouseleave = "close";		}		if ( !event || event.type === "focusin" ) {			events.focusout = "close";		}		this._on( true, target, events );	},	close: function( event ) {		var that = this,			target = $( event ? event.currentTarget : this.element ),			tooltip = this._find( target );		// disabling closes the tooltip, so we need to track when we''re closing		// to avoid an infinite loop in case the tooltip becomes disabled on close		if ( this.closing ) {			return;		}		// Clear the interval for delayed tracking tooltips		clearInterval( this.delayedShow );		// only set title if we had one before (see comment in _open())		if ( target.data( "ui-tooltip-title" ) ) {			target.attr( "title", target.data( "ui-tooltip-title" ) );		}		removeDescribedBy( target );		tooltip.stop( true );		this._hide( tooltip, this.options.hide, function() {			that._removeTooltip( $( this ) );		});		target.removeData( "ui-tooltip-open" );		this._off( target, "mouseleave focusout keyup" );		// Remove ''remove'' binding only on delegated targets		if ( target[0] !== this.element[0] ) {			this._off( target, "remove" );		}		this._off( this.document, "mousemove" );		if ( event &amp;&amp; event.type === "mouseleave" ) {			$.each( this.parents, function( id, parent ) {				$( parent.element ).attr( "title", parent.title );				delete that.parents[ id ];			});		}		this.closing = true;		this._trigger( "close", event, { tooltip: tooltip } );		this.closing = false;	},	_tooltip: function( element ) {		var id = "ui-tooltip-" + increments++,			tooltip = $( "&lt;div&gt;" )				.attr({					id: id,					role: "tooltip"				})				.addClass( "ui-tooltip ui-widget ui-corner-all ui-widget-content " +					( this.options.tooltipClass || "" ) );		$( "&lt;div&gt;" )			.addClass( "ui-tooltip-content" )			.appendTo( tooltip );		tooltip.appendTo( this.document[0].body );		this.tooltips[ id ] = element;		return tooltip;	},	_find: function( target ) {		var id = target.data( "ui-tooltip-id" );		return id ? $( "#" + id ) : $();	},	_removeTooltip: function( tooltip ) {		tooltip.remove();		delete this.tooltips[ tooltip.attr( "id" ) ];	},	_destroy: function() {		var that = this;		// close open tooltips		$.each( this.tooltips, function( id, element ) {			// Delegate to close method to handle common cleanup			var event = $.Event( "blur" );			event.target = event.currentTarget = element[0];			that.close( event, true );			// Remove immediately; destroying an open tooltip doesn''t use the			// hide animation			$( "#" + id ).remove();			// Restore the title			if ( element.data( "ui-tooltip-title" ) ) {				element.attr( "title", element.data( "ui-tooltip-title" ) );				element.removeData( "ui-tooltip-title" );			}		});	}});}( jQuery ) );'</body></methods><methods><class-id>JQuery.JQBlitzerTheme</class-id> <category>accessing</category><body package="JQuery-UI">themeName	^ 'blitzer'</body></methods><methods><class-id>JQuery.JQDroppable</class-id> <category>accessing</category><body package="JQuery-UI">method	^ 'droppable'</body></methods><methods><class-id>JQuery.JQDroppable</class-id> <category>events-generated</category><body package="JQuery-UI">onActivate: anObject	"This event is triggered any time an accepted draggable starts dragging. This can be useful if you want to make the droppable 'light up' when it can be dropped on."	self optionAt: 'activate' put: anObject asFunction</body><body package="JQuery-UI">onDeactivate: anObject	"This event is triggered any time an accepted draggable stops dragging."	self optionAt: 'deactivate' put: anObject asFunction</body><body package="JQuery-UI">onDrop: anObject	"This event is triggered when an accepted draggable is dropped 'over' (within the tolerance of) this droppable. In the callback, $(this) represents the droppable the draggable is dropped on. ui.draggable represents the draggable."	self optionAt: 'drop' put: anObject asFunction</body><body package="JQuery-UI">onOut: anObject	"This event is triggered when an accepted draggable is dragged out (within the tolerance of) this droppable."	self optionAt: 'out' put: anObject asFunction</body><body package="JQuery-UI">onOver: anObject	"This event is triggered as an accepted draggable is dragged 'over' (within the tolerance of) this droppable."	self optionAt: 'over' put: anObject asFunction</body></methods><methods><class-id>JQuery.JQDroppable</class-id> <category>options-generated</category><body package="JQuery-UI">accept: aSelectorOrFunction	"All draggables that match the selector will be accepted. If a function is specified, the function will be called for each draggable on the page (passed as the first argument to the function), to provide a custom filter. The function should return true if the draggable should be accepted."	self optionAt: 'accept' put: aSelectorOrFunction</body><body package="JQuery-UI">activeClass: aString	"If specified, the class will be added to the droppable while an acceptable draggable is being dragged."	self optionAt: 'activeClass' put: aString</body><body package="JQuery-UI">addClasses: aBoolean	"If set to false, will prevent the ui-droppable class from being added. This may be desired as a performance optimization when calling .droppable() init on many hundreds of elements."	self optionAt: 'addClasses' put: aBoolean</body><body package="JQuery-UI">greedy: aBoolean	"If true, will prevent event propagation on nested droppables."	self optionAt: 'greedy' put: aBoolean</body><body package="JQuery-UI">hoverClass: aString	"If specified, the class will be added to the droppable while an acceptable draggable is being hovered."	self optionAt: 'hoverClass' put: aString</body><body package="JQuery-UI">scope: aString	"Used to group sets of draggable and droppable items, in addition to droppable's accept option. A draggable with the same scope value as a droppable will be accepted."	self optionAt: 'scope' put: aString</body><body package="JQuery-UI">tolerance: aString	"Specifies which mode to use for testing whether a draggable is 'over' a droppable. Possible values: 'fit', 'intersect', 'pointer', 'touch'.  ''fit'': draggable overlaps the droppable entirely ''intersect'': draggable overlaps the droppable at least 50% ''pointer'': mouse pointer overlaps the droppable ''touch'': draggable overlaps the droppable any amount "	self optionAt: 'tolerance' put: aString</body></methods><methods><class-id>JQuery.JQTabs</class-id> <category>actions</category><body package="JQuery-UI">destroy	"Removes the tabs functionality completely. This will return the element back to its pre-init state."		self action: 'destroy'</body><body package="JQuery-UI">disable: anInteger	"=Disable a tab. The selected tab cannot be disabled. To disable more than one tab at once use: &lt;code&gt;$('#example').data('disabled.tabs', [1, 2, 3]);&lt;/code&gt;  The second argument is the zero-based index of the tab to be disabled. "		self action: 'disable' arguments: (Array with: anInteger)</body><body package="JQuery-UI">enable: anInteger	"Enable a disabled tab.  To enable more than one tab at once reset the disabled property like: &lt;code&gt;$('#example').data('disabled.tabs', []);&lt;/code&gt;. The second argument is the zero-based index of the tab to be enabled."		self action: 'enable' arguments: (Array with: anInteger)</body><body package="JQuery-UI">load: anInteger	"Reload the content of an Ajax tab programmatically. This method always loads the tab content from the remote location, even if cache is set to true. The second argument is the zero-based index of the tab to be reloaded."		self action: 'load' arguments: (Array with: anInteger)</body><body package="JQuery-UI">refresh	"Process any tabs that were added or removed directly in the DOM and recompute the height of the tab panels. "		self action: 'refresh'</body></methods><methods><class-id>JQuery.JQTabs</class-id> <category>accessing</category><body package="JQuery-UI">method	^ 'tabs'</body></methods><methods><class-id>JQuery.JQTabs</class-id> <category>options-generated</category><body package="JQuery-UI">active: aJSObject	"Which panel is currently open"	self optionAt: 'active' put: aJSObject</body><body package="JQuery-UI">collapsible: aBoolean	"Set to true to allow an already selected tab to become unselected again upon reselection."	self optionAt: 'collapsible' put: aBoolean</body><body package="JQuery-UI">disabled: anArrayNumber	"An array containing the position of the tabs (zero-based index) that should be disabled on initialization."	self optionAt: 'disabled' put: anArrayNumber</body><body package="JQuery-UI">event: aString	"The type of event to be used for selecting a tab."	self optionAt: 'event' put: aString</body><body package="JQuery-UI">heightStyle: aString	"Controls the height of the tabs widget and each panel. Possible values: 		'auto': All panels will be set to the height of the tallest panel. 		'fill': Expand to the available height based on the tabs' parent height.		'content': Each panel will be only as tall as its content."	self optionAt: 'heightStyle' put: aString</body><body package="JQuery-UI">hide: aJSObject	"If and how to animate the hiding of the panel"	self optionAt: 'hide' put: aJSObject</body><body package="JQuery-UI">show: aJSObject	"If and how to animate the showing of the panel"	self optionAt: 'show' put: aJSObject</body></methods><methods><class-id>JQuery.JQTabs</class-id> <category>events-generated</category><body package="JQuery-UI">onActivate: anObject	"Triggered after a tab has been activated (after animation completes). If the tabs were previously collapsed, ui.oldTab and ui.oldPanel will be empty jQuery objects. If the tabs are collapsing, ui.newTab and ui.newPanel will be empty jQuery objects."	self optionAt: 'activate' put: anObject asFunction</body><body package="JQuery-UI">onBeforeActivate: anObject	"Triggered immediately before a tab is activated. Can be canceled to prevent the tab from activating. If the tabs are currently collapsed, ui.oldTab and ui.oldPanel will be empty jQuery objects. If the tabs are collapsing, ui.newTab and ui.newPanel will be empty jQuery objects."	self optionAt: 'beforeActivate' put: anObject asFunction</body><body package="JQuery-UI">onBeforeLoad: anObject	"Triggered when a remote tab is about to be loaded, after the beforeActivate event. Can be canceled to prevent the tab panel from loading content; though the panel will still be activated. This event is triggered just before the Ajax request is made, so modifications can be made to ui.jqXHR and ui.ajaxSettings."	self optionAt: 'beforeload' put: anObject asFunction</body><body package="JQuery-UI">onCreate: anObject	"Triggered when the tabs are created. If the tabs are collapsed, ui.tab and ui.panel will be empty jQuery objects."	self optionAt: 'create' put: anObject asFunction</body><body package="JQuery-UI">onLoad: anObject	"This event is triggered after the content of a remote tab has been loaded."	self optionAt: 'load' put: anObject asFunction</body></methods><methods><class-id>JQuery.JQOvercastTheme</class-id> <category>accessing</category><body package="JQuery-UI">themeName	^ 'overcast'</body></methods><methods><class-id>JQuery.JQUiDarknessTheme</class-id> <category>accessing</category><body package="JQuery-UI">themeName	^ 'ui-darkness'</body></methods><methods><class-id>JQuery.JQUiDeploymentLibrary</class-id> <category>accessing</category><body package="JQuery-UI">selectorsToInclude	^ #(jQueryUiJs)</body></methods><methods><class-id>JQuery.JQUiDeploymentLibrary</class-id> <category>uploaded</category><body package="JQuery-UI">jQueryUiJs	^ '/*! jQuery UI - v1.10.4 - 2014-01-17* http://jqueryui.com* Includes: jquery.ui.core.js, jquery.ui.widget.js, jquery.ui.mouse.js, jquery.ui.draggable.js, jquery.ui.droppable.js, jquery.ui.resizable.js, jquery.ui.selectable.js, jquery.ui.sortable.js, jquery.ui.effect.js, jquery.ui.accordion.js, jquery.ui.autocomplete.js, jquery.ui.button.js, jquery.ui.datepicker.js, jquery.ui.dialog.js, jquery.ui.effect-blind.js, jquery.ui.effect-bounce.js, jquery.ui.effect-clip.js, jquery.ui.effect-drop.js, jquery.ui.effect-explode.js, jquery.ui.effect-fade.js, jquery.ui.effect-fold.js, jquery.ui.effect-highlight.js, jquery.ui.effect-pulsate.js, jquery.ui.effect-scale.js, jquery.ui.effect-shake.js, jquery.ui.effect-slide.js, jquery.ui.effect-transfer.js, jquery.ui.menu.js, jquery.ui.position.js, jquery.ui.progressbar.js, jquery.ui.slider.js, jquery.ui.spinner.js, jquery.ui.tabs.js, jquery.ui.tooltip.js* Copyright 2014 jQuery Foundation and other contributors; Licensed MIT */(function(t,e){function i(e,i){var n,o,a,r=e.nodeName.toLowerCase();return"area"===r?(n=e.parentNode,o=n.name,e.href&amp;&amp;o&amp;&amp;"map"===n.nodeName.toLowerCase()?(a=t("img[usemap=#"+o+"]")[0],!!a&amp;&amp;s(a)):!1):(/input|select|textarea|button|object/.test(r)?!e.disabled:"a"===r?e.href||i:i)&amp;&amp;s(e)}function s(e){return t.expr.filters.visible(e)&amp;&amp;!t(e).parents().addBack().filter(function(){return"hidden"===t.css(this,"visibility")}).length}var n=0,o=/^ui-id-\d+$/;t.ui=t.ui||{},t.extend(t.ui,{version:"1.10.4",keyCode:{BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38}}),t.fn.extend({focus:function(e){return function(i,s){return"number"==typeof i?this.each(function(){var e=this;setTimeout(function(){t(e).focus(),s&amp;&amp;s.call(e)},i)}):e.apply(this,arguments)}}(t.fn.focus),scrollParent:function(){var e;return e=t.ui.ie&amp;&amp;/(static|relative)/.test(this.css("position"))||/absolute/.test(this.css("position"))?this.parents().filter(function(){return/(relative|absolute|fixed)/.test(t.css(this,"position"))&amp;&amp;/(auto|scroll)/.test(t.css(this,"overflow")+t.css(this,"overflow-y")+t.css(this,"overflow-x"))}).eq(0):this.parents().filter(function(){return/(auto|scroll)/.test(t.css(this,"overflow")+t.css(this,"overflow-y")+t.css(this,"overflow-x"))}).eq(0),/fixed/.test(this.css("position"))||!e.length?t(document):e},zIndex:function(i){if(i!==e)return this.css("zIndex",i);if(this.length)for(var s,n,o=t(this[0]);o.length&amp;&amp;o[0]!==document;){if(s=o.css("position"),("absolute"===s||"relative"===s||"fixed"===s)&amp;&amp;(n=parseInt(o.css("zIndex"),10),!isNaN(n)&amp;&amp;0!==n))return n;o=o.parent()}return 0},uniqueId:function(){return this.each(function(){this.id||(this.id="ui-id-"+ ++n)})},removeUniqueId:function(){return this.each(function(){o.test(this.id)&amp;&amp;t(this).removeAttr("id")})}}),t.extend(t.expr[":"],{data:t.expr.createPseudo?t.expr.createPseudo(function(e){return function(i){return!!t.data(i,e)}}):function(e,i,s){return!!t.data(e,s[3])},focusable:function(e){return i(e,!isNaN(t.attr(e,"tabindex")))},tabbable:function(e){var s=t.attr(e,"tabindex"),n=isNaN(s);return(n||s&gt;=0)&amp;&amp;i(e,!n)}}),t("&lt;a&gt;").outerWidth(1).jquery||t.each(["Width","Height"],function(i,s){function n(e,i,s,n){return t.each(o,function(){i-=parseFloat(t.css(e,"padding"+this))||0,s&amp;&amp;(i-=parseFloat(t.css(e,"border"+this+"Width"))||0),n&amp;&amp;(i-=parseFloat(t.css(e,"margin"+this))||0)}),i}var o="Width"===s?["Left","Right"]:["Top","Bottom"],a=s.toLowerCase(),r={innerWidth:t.fn.innerWidth,innerHeight:t.fn.innerHeight,outerWidth:t.fn.outerWidth,outerHeight:t.fn.outerHeight};t.fn["inner"+s]=function(i){return i===e?r["inner"+s].call(this):this.each(function(){t(this).css(a,n(this,i)+"px")})},t.fn["outer"+s]=function(e,i){return"number"!=typeof e?r["outer"+s].call(this,e):this.each(function(){t(this).css(a,n(this,e,!0,i)+"px")})}}),t.fn.addBack||(t.fn.addBack=function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}),t("&lt;a&gt;").data("a-b","a").removeData("a-b").data("a-b")&amp;&amp;(t.fn.removeData=function(e){return function(i){return arguments.length?e.call(this,t.camelCase(i)):e.call(this)}}(t.fn.removeData)),t.ui.ie=!!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase()),t.support.selectstart="onselectstart"in document.createElement("div"),t.fn.extend({disableSelection:function(){return this.bind((t.support.selectstart?"selectstart":"mousedown")+".ui-disableSelection",function(t){t.preventDefault()})},enableSelection:function(){return this.unbind(".ui-disableSelection")}}),t.extend(t.ui,{plugin:{add:function(e,i,s){var n,o=t.ui[e].prototype;for(n in s)o.plugins[n]=o.plugins[n]||[],o.plugins[n].push([i,s[n]])},call:function(t,e,i){var s,n=t.plugins[e];if(n&amp;&amp;t.element[0].parentNode&amp;&amp;11!==t.element[0].parentNode.nodeType)for(s=0;n.length&gt;s;s++)t.options[n[s][0]]&amp;&amp;n[s][1].apply(t.element,i)}},hasScroll:function(e,i){if("hidden"===t(e).css("overflow"))return!1;var s=i&amp;&amp;"left"===i?"scrollLeft":"scrollTop",n=!1;return e[s]&gt;0?!0:(e[s]=1,n=e[s]&gt;0,e[s]=0,n)}})})(jQuery),function(t,e){var i=0,s=Array.prototype.slice,n=t.cleanData;t.cleanData=function(e){for(var i,s=0;null!=(i=e[s]);s++)try{t(i).triggerHandler("remove")}catch(o){}n(e)},t.widget=function(i,s,n){var o,a,r,h,l={},c=i.split(".")[0];i=i.split(".")[1],o=c+"-"+i,n||(n=s,s=t.Widget),t.expr[":"][o.toLowerCase()]=function(e){return!!t.data(e,o)},t[c]=t[c]||{},a=t[c][i],r=t[c][i]=function(t,i){return this._createWidget?(arguments.length&amp;&amp;this._createWidget(t,i),e):new r(t,i)},t.extend(r,a,{version:n.version,_proto:t.extend({},n),_childConstructors:[]}),h=new s,h.options=t.widget.extend({},h.options),t.each(n,function(i,n){return t.isFunction(n)?(l[i]=function(){var t=function(){return s.prototype[i].apply(this,arguments)},e=function(t){return s.prototype[i].apply(this,t)};return function(){var i,s=this._super,o=this._superApply;return this._super=t,this._superApply=e,i=n.apply(this,arguments),this._super=s,this._superApply=o,i}}(),e):(l[i]=n,e)}),r.prototype=t.widget.extend(h,{widgetEventPrefix:a?h.widgetEventPrefix||i:i},l,{constructor:r,namespace:c,widgetName:i,widgetFullName:o}),a?(t.each(a._childConstructors,function(e,i){var s=i.prototype;t.widget(s.namespace+"."+s.widgetName,r,i._proto)}),delete a._childConstructors):s._childConstructors.push(r),t.widget.bridge(i,r)},t.widget.extend=function(i){for(var n,o,a=s.call(arguments,1),r=0,h=a.length;h&gt;r;r++)for(n in a[r])o=a[r][n],a[r].hasOwnProperty(n)&amp;&amp;o!==e&amp;&amp;(i[n]=t.isPlainObject(o)?t.isPlainObject(i[n])?t.widget.extend({},i[n],o):t.widget.extend({},o):o);return i},t.widget.bridge=function(i,n){var o=n.prototype.widgetFullName||i;t.fn[i]=function(a){var r="string"==typeof a,h=s.call(arguments,1),l=this;return a=!r&amp;&amp;h.length?t.widget.extend.apply(null,[a].concat(h)):a,r?this.each(function(){var s,n=t.data(this,o);return n?t.isFunction(n[a])&amp;&amp;"_"!==a.charAt(0)?(s=n[a].apply(n,h),s!==n&amp;&amp;s!==e?(l=s&amp;&amp;s.jquery?l.pushStack(s.get()):s,!1):e):t.error("no such method ''"+a+"'' for "+i+" widget instance"):t.error("cannot call methods on "+i+" prior to initialization; "+"attempted to call method ''"+a+"''")}):this.each(function(){var e=t.data(this,o);e?e.option(a||{})._init():t.data(this,o,new n(a,this))}),l}},t.Widget=function(){},t.Widget._childConstructors=[],t.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",defaultElement:"&lt;div&gt;",options:{disabled:!1,create:null},_createWidget:function(e,s){s=t(s||this.defaultElement||this)[0],this.element=t(s),this.uuid=i++,this.eventNamespace="."+this.widgetName+this.uuid,this.options=t.widget.extend({},this.options,this._getCreateOptions(),e),this.bindings=t(),this.hoverable=t(),this.focusable=t(),s!==this&amp;&amp;(t.data(s,this.widgetFullName,this),this._on(!0,this.element,{remove:function(t){t.target===s&amp;&amp;this.destroy()}}),this.document=t(s.style?s.ownerDocument:s.document||s),this.window=t(this.document[0].defaultView||this.document[0].parentWindow)),this._create(),this._trigger("create",null,this._getCreateEventData()),this._init()},_getCreateOptions:t.noop,_getCreateEventData:t.noop,_create:t.noop,_init:t.noop,destroy:function(){this._destroy(),this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(t.camelCase(this.widgetFullName)),this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName+"-disabled "+"ui-state-disabled"),this.bindings.unbind(this.eventNamespace),this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus")},_destroy:t.noop,widget:function(){return this.element},option:function(i,s){var n,o,a,r=i;if(0===arguments.length)return t.widget.extend({},this.options);if("string"==typeof i)if(r={},n=i.split("."),i=n.shift(),n.length){for(o=r[i]=t.widget.extend({},this.options[i]),a=0;n.length-1&gt;a;a++)o[n[a]]=o[n[a]]||{},o=o[n[a]];if(i=n.pop(),1===arguments.length)return o[i]===e?null:o[i];o[i]=s}else{if(1===arguments.length)return this.options[i]===e?null:this.options[i];r[i]=s}return this._setOptions(r),this},_setOptions:function(t){var e;for(e in t)this._setOption(e,t[e]);return this},_setOption:function(t,e){return this.options[t]=e,"disabled"===t&amp;&amp;(this.widget().toggleClass(this.widgetFullName+"-disabled ui-state-disabled",!!e).attr("aria-disabled",e),this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus")),this},enable:function(){return this._setOption("disabled",!1)},disable:function(){return this._setOption("disabled",!0)},_on:function(i,s,n){var o,a=this;"boolean"!=typeof i&amp;&amp;(n=s,s=i,i=!1),n?(s=o=t(s),this.bindings=this.bindings.add(s)):(n=s,s=this.element,o=this.widget()),t.each(n,function(n,r){function h(){return i||a.options.disabled!==!0&amp;&amp;!t(this).hasClass("ui-state-disabled")?("string"==typeof r?a[r]:r).apply(a,arguments):e}"string"!=typeof r&amp;&amp;(h.guid=r.guid=r.guid||h.guid||t.guid++);var l=n.match(/^(\w+)\s*(.*)$/),c=l[1]+a.eventNamespace,u=l[2];u?o.delegate(u,c,h):s.bind(c,h)})},_off:function(t,e){e=(e||"").split(" ").join(this.eventNamespace+" ")+this.eventNamespace,t.unbind(e).undelegate(e)},_delay:function(t,e){function i(){return("string"==typeof t?s[t]:t).apply(s,arguments)}var s=this;return setTimeout(i,e||0)},_hoverable:function(e){this.hoverable=this.hoverable.add(e),this._on(e,{mouseenter:function(e){t(e.currentTarget).addClass("ui-state-hover")},mouseleave:function(e){t(e.currentTarget).removeClass("ui-state-hover")}})},_focusable:function(e){this.focusable=this.focusable.add(e),this._on(e,{focusin:function(e){t(e.currentTarget).addClass("ui-state-focus")},focusout:function(e){t(e.currentTarget).removeClass("ui-state-focus")}})},_trigger:function(e,i,s){var n,o,a=this.options[e];if(s=s||{},i=t.Event(i),i.type=(e===this.widgetEventPrefix?e:this.widgetEventPrefix+e).toLowerCase(),i.target=this.element[0],o=i.originalEvent)for(n in o)n in i||(i[n]=o[n]);return this.element.trigger(i,s),!(t.isFunction(a)&amp;&amp;a.apply(this.element[0],[i].concat(s))===!1||i.isDefaultPrevented())}},t.each({show:"fadeIn",hide:"fadeOut"},function(e,i){t.Widget.prototype["_"+e]=function(s,n,o){"string"==typeof n&amp;&amp;(n={effect:n});var a,r=n?n===!0||"number"==typeof n?i:n.effect||i:e;n=n||{},"number"==typeof n&amp;&amp;(n={duration:n}),a=!t.isEmptyObject(n),n.complete=o,n.delay&amp;&amp;s.delay(n.delay),a&amp;&amp;t.effects&amp;&amp;t.effects.effect[r]?s[e](n):r!==e&amp;&amp;s[r]?s[r](n.duration,n.easing,o):s.queue(function(i){t(this)[e](),o&amp;&amp;o.call(s[0]),i()})}})}(jQuery),function(t){var e=!1;t(document).mouseup(function(){e=!1}),t.widget("ui.mouse",{version:"1.10.4",options:{cancel:"input,textarea,button,select,option",distance:1,delay:0},_mouseInit:function(){var e=this;this.element.bind("mousedown."+this.widgetName,function(t){return e._mouseDown(t)}).bind("click."+this.widgetName,function(i){return!0===t.data(i.target,e.widgetName+".preventClickEvent")?(t.removeData(i.target,e.widgetName+".preventClickEvent"),i.stopImmediatePropagation(),!1):undefined}),this.started=!1},_mouseDestroy:function(){this.element.unbind("."+this.widgetName),this._mouseMoveDelegate&amp;&amp;t(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(i){if(!e){this._mouseStarted&amp;&amp;this._mouseUp(i),this._mouseDownEvent=i;var s=this,n=1===i.which,o="string"==typeof this.options.cancel&amp;&amp;i.target.nodeName?t(i.target).closest(this.options.cancel).length:!1;return n&amp;&amp;!o&amp;&amp;this._mouseCapture(i)?(this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout(function(){s.mouseDelayMet=!0},this.options.delay)),this._mouseDistanceMet(i)&amp;&amp;this._mouseDelayMet(i)&amp;&amp;(this._mouseStarted=this._mouseStart(i)!==!1,!this._mouseStarted)?(i.preventDefault(),!0):(!0===t.data(i.target,this.widgetName+".preventClickEvent")&amp;&amp;t.removeData(i.target,this.widgetName+".preventClickEvent"),this._mouseMoveDelegate=function(t){return s._mouseMove(t)},this._mouseUpDelegate=function(t){return s._mouseUp(t)},t(document).bind("mousemove."+this.widgetName,this._mouseMoveDelegate).bind("mouseup."+this.widgetName,this._mouseUpDelegate),i.preventDefault(),e=!0,!0)):!0}},_mouseMove:function(e){return t.ui.ie&amp;&amp;(!document.documentMode||9&gt;document.documentMode)&amp;&amp;!e.button?this._mouseUp(e):this._mouseStarted?(this._mouseDrag(e),e.preventDefault()):(this._mouseDistanceMet(e)&amp;&amp;this._mouseDelayMet(e)&amp;&amp;(this._mouseStarted=this._mouseStart(this._mouseDownEvent,e)!==!1,this._mouseStarted?this._mouseDrag(e):this._mouseUp(e)),!this._mouseStarted)},_mouseUp:function(e){return t(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate),this._mouseStarted&amp;&amp;(this._mouseStarted=!1,e.target===this._mouseDownEvent.target&amp;&amp;t.data(e.target,this.widgetName+".preventClickEvent",!0),this._mouseStop(e)),!1},_mouseDistanceMet:function(t){return Math.max(Math.abs(this._mouseDownEvent.pageX-t.pageX),Math.abs(this._mouseDownEvent.pageY-t.pageY))&gt;=this.options.distance},_mouseDelayMet:function(){return this.mouseDelayMet},_mouseStart:function(){},_mouseDrag:function(){},_mouseStop:function(){},_mouseCapture:function(){return!0}})}(jQuery),function(t){t.widget("ui.draggable",t.ui.mouse,{version:"1.10.4",widgetEventPrefix:"drag",options:{addClasses:!0,appendTo:"parent",axis:!1,connectToSortable:!1,containment:!1,cursor:"auto",cursorAt:!1,grid:!1,handle:!1,helper:"original",iframeFix:!1,opacity:!1,refreshPositions:!1,revert:!1,revertDuration:500,scope:"default",scroll:!0,scrollSensitivity:20,scrollSpeed:20,snap:!1,snapMode:"both",snapTolerance:20,stack:!1,zIndex:!1,drag:null,start:null,stop:null},_create:function(){"original"!==this.options.helper||/^(?:r|a|f)/.test(this.element.css("position"))||(this.element[0].style.position="relative"),this.options.addClasses&amp;&amp;this.element.addClass("ui-draggable"),this.options.disabled&amp;&amp;this.element.addClass("ui-draggable-disabled"),this._mouseInit()},_destroy:function(){this.element.removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled"),this._mouseDestroy()},_mouseCapture:function(e){var i=this.options;return this.helper||i.disabled||t(e.target).closest(".ui-resizable-handle").length&gt;0?!1:(this.handle=this._getHandle(e),this.handle?(t(i.iframeFix===!0?"iframe":i.iframeFix).each(function(){t("&lt;div class=''ui-draggable-iframeFix'' style=''background: #fff;''&gt;&lt;/div&gt;").css({width:this.offsetWidth+"px",height:this.offsetHeight+"px",position:"absolute",opacity:"0.001",zIndex:1e3}).css(t(this).offset()).appendTo("body")}),!0):!1)},_mouseStart:function(e){var i=this.options;return this.helper=this._createHelper(e),this.helper.addClass("ui-draggable-dragging"),this._cacheHelperProportions(),t.ui.ddmanager&amp;&amp;(t.ui.ddmanager.current=this),this._cacheMargins(),this.cssPosition=this.helper.css("position"),this.scrollParent=this.helper.scrollParent(),this.offsetParent=this.helper.offsetParent(),this.offsetParentCssPosition=this.offsetParent.css("position"),this.offset=this.positionAbs=this.element.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},this.offset.scroll=!1,t.extend(this.offset,{click:{left:e.pageX-this.offset.left,top:e.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.originalPosition=this.position=this._generatePosition(e),this.originalPageX=e.pageX,this.originalPageY=e.pageY,i.cursorAt&amp;&amp;this._adjustOffsetFromHelper(i.cursorAt),this._setContainment(),this._trigger("start",e)===!1?(this._clear(),!1):(this._cacheHelperProportions(),t.ui.ddmanager&amp;&amp;!i.dropBehaviour&amp;&amp;t.ui.ddmanager.prepareOffsets(this,e),this._mouseDrag(e,!0),t.ui.ddmanager&amp;&amp;t.ui.ddmanager.dragStart(this,e),!0)},_mouseDrag:function(e,i){if("fixed"===this.offsetParentCssPosition&amp;&amp;(this.offset.parent=this._getParentOffset()),this.position=this._generatePosition(e),this.positionAbs=this._convertPositionTo("absolute"),!i){var s=this._uiHash();if(this._trigger("drag",e,s)===!1)return this._mouseUp({}),!1;this.position=s.position}return this.options.axis&amp;&amp;"y"===this.options.axis||(this.helper[0].style.left=this.position.left+"px"),this.options.axis&amp;&amp;"x"===this.options.axis||(this.helper[0].style.top=this.position.top+"px"),t.ui.ddmanager&amp;&amp;t.ui.ddmanager.drag(this,e),!1},_mouseStop:function(e){var i=this,s=!1;return t.ui.ddmanager&amp;&amp;!this.options.dropBehaviour&amp;&amp;(s=t.ui.ddmanager.drop(this,e)),this.dropped&amp;&amp;(s=this.dropped,this.dropped=!1),"original"!==this.options.helper||t.contains(this.element[0].ownerDocument,this.element[0])?("invalid"===this.options.revert&amp;&amp;!s||"valid"===this.options.revert&amp;&amp;s||this.options.revert===!0||t.isFunction(this.options.revert)&amp;&amp;this.options.revert.call(this.element,s)?t(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,10),function(){i._trigger("stop",e)!==!1&amp;&amp;i._clear()}):this._trigger("stop",e)!==!1&amp;&amp;this._clear(),!1):!1},_mouseUp:function(e){return t("div.ui-draggable-iframeFix").each(function(){this.parentNode.removeChild(this)}),t.ui.ddmanager&amp;&amp;t.ui.ddmanager.dragStop(this,e),t.ui.mouse.prototype._mouseUp.call(this,e)},cancel:function(){return this.helper.is(".ui-draggable-dragging")?this._mouseUp({}):this._clear(),this},_getHandle:function(e){return this.options.handle?!!t(e.target).closest(this.element.find(this.options.handle)).length:!0},_createHelper:function(e){var i=this.options,s=t.isFunction(i.helper)?t(i.helper.apply(this.element[0],[e])):"clone"===i.helper?this.element.clone().removeAttr("id"):this.element;return s.parents("body").length||s.appendTo("parent"===i.appendTo?this.element[0].parentNode:i.appendTo),s[0]===this.element[0]||/(fixed|absolute)/.test(s.css("position"))||s.css("position","absolute"),s},_adjustOffsetFromHelper:function(e){"string"==typeof e&amp;&amp;(e=e.split(" ")),t.isArray(e)&amp;&amp;(e={left:+e[0],top:+e[1]||0}),"left"in e&amp;&amp;(this.offset.click.left=e.left+this.margins.left),"right"in e&amp;&amp;(this.offset.click.left=this.helperProportions.width-e.right+this.margins.left),"top"in e&amp;&amp;(this.offset.click.top=e.top+this.margins.top),"bottom"in e&amp;&amp;(this.offset.click.top=this.helperProportions.height-e.bottom+this.margins.top)},_getParentOffset:function(){var e=this.offsetParent.offset();return"absolute"===this.cssPosition&amp;&amp;this.scrollParent[0]!==document&amp;&amp;t.contains(this.scrollParent[0],this.offsetParent[0])&amp;&amp;(e.left+=this.scrollParent.scrollLeft(),e.top+=this.scrollParent.scrollTop()),(this.offsetParent[0]===document.body||this.offsetParent[0].tagName&amp;&amp;"html"===this.offsetParent[0].tagName.toLowerCase()&amp;&amp;t.ui.ie)&amp;&amp;(e={top:0,left:0}),{top:e.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:e.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if("relative"===this.cssPosition){var t=this.element.position();return{top:t.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:t.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.element.css("marginLeft"),10)||0,top:parseInt(this.element.css("marginTop"),10)||0,right:parseInt(this.element.css("marginRight"),10)||0,bottom:parseInt(this.element.css("marginBottom"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var e,i,s,n=this.options;return n.containment?"window"===n.containment?(this.containment=[t(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,t(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,t(window).scrollLeft()+t(window).width()-this.helperProportions.width-this.margins.left,t(window).scrollTop()+(t(window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top],undefined):"document"===n.containment?(this.containment=[0,0,t(document).width()-this.helperProportions.width-this.margins.left,(t(document).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top],undefined):n.containment.constructor===Array?(this.containment=n.containment,undefined):("parent"===n.containment&amp;&amp;(n.containment=this.helper[0].parentNode),i=t(n.containment),s=i[0],s&amp;&amp;(e="hidden"!==i.css("overflow"),this.containment=[(parseInt(i.css("borderLeftWidth"),10)||0)+(parseInt(i.css("paddingLeft"),10)||0),(parseInt(i.css("borderTopWidth"),10)||0)+(parseInt(i.css("paddingTop"),10)||0),(e?Math.max(s.scrollWidth,s.offsetWidth):s.offsetWidth)-(parseInt(i.css("borderRightWidth"),10)||0)-(parseInt(i.css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(e?Math.max(s.scrollHeight,s.offsetHeight):s.offsetHeight)-(parseInt(i.css("borderBottomWidth"),10)||0)-(parseInt(i.css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom],this.relative_container=i),undefined):(this.containment=null,undefined)},_convertPositionTo:function(e,i){i||(i=this.position);var s="absolute"===e?1:-1,n="absolute"!==this.cssPosition||this.scrollParent[0]!==document&amp;&amp;t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent;return this.offset.scroll||(this.offset.scroll={top:n.scrollTop(),left:n.scrollLeft()}),{top:i.top+this.offset.relative.top*s+this.offset.parent.top*s-("fixed"===this.cssPosition?-this.scrollParent.scrollTop():this.offset.scroll.top)*s,left:i.left+this.offset.relative.left*s+this.offset.parent.left*s-("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():this.offset.scroll.left)*s}},_generatePosition:function(e){var i,s,n,o,a=this.options,r="absolute"!==this.cssPosition||this.scrollParent[0]!==document&amp;&amp;t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,h=e.pageX,l=e.pageY;return this.offset.scroll||(this.offset.scroll={top:r.scrollTop(),left:r.scrollLeft()}),this.originalPosition&amp;&amp;(this.containment&amp;&amp;(this.relative_container?(s=this.relative_container.offset(),i=[this.containment[0]+s.left,this.containment[1]+s.top,this.containment[2]+s.left,this.containment[3]+s.top]):i=this.containment,e.pageX-this.offset.click.left&lt;i[0]&amp;&amp;(h=i[0]+this.offset.click.left),e.pageY-this.offset.click.top&lt;i[1]&amp;&amp;(l=i[1]+this.offset.click.top),e.pageX-this.offset.click.left&gt;i[2]&amp;&amp;(h=i[2]+this.offset.click.left),e.pageY-this.offset.click.top&gt;i[3]&amp;&amp;(l=i[3]+this.offset.click.top)),a.grid&amp;&amp;(n=a.grid[1]?this.originalPageY+Math.round((l-this.originalPageY)/a.grid[1])*a.grid[1]:this.originalPageY,l=i?n-this.offset.click.top&gt;=i[1]||n-this.offset.click.top&gt;i[3]?n:n-this.offset.click.top&gt;=i[1]?n-a.grid[1]:n+a.grid[1]:n,o=a.grid[0]?this.originalPageX+Math.round((h-this.originalPageX)/a.grid[0])*a.grid[0]:this.originalPageX,h=i?o-this.offset.click.left&gt;=i[0]||o-this.offset.click.left&gt;i[2]?o:o-this.offset.click.left&gt;=i[0]?o-a.grid[0]:o+a.grid[0]:o)),{top:l-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+("fixed"===this.cssPosition?-this.scrollParent.scrollTop():this.offset.scroll.top),left:h-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():this.offset.scroll.left)}},_clear:function(){this.helper.removeClass("ui-draggable-dragging"),this.helper[0]===this.element[0]||this.cancelHelperRemoval||this.helper.remove(),this.helper=null,this.cancelHelperRemoval=!1},_trigger:function(e,i,s){return s=s||this._uiHash(),t.ui.plugin.call(this,e,[i,s]),"drag"===e&amp;&amp;(this.positionAbs=this._convertPositionTo("absolute")),t.Widget.prototype._trigger.call(this,e,i,s)},plugins:{},_uiHash:function(){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}}),t.ui.plugin.add("draggable","connectToSortable",{start:function(e,i){var s=t(this).data("ui-draggable"),n=s.options,o=t.extend({},i,{item:s.element});s.sortables=[],t(n.connectToSortable).each(function(){var i=t.data(this,"ui-sortable");i&amp;&amp;!i.options.disabled&amp;&amp;(s.sortables.push({instance:i,shouldRevert:i.options.revert}),i.refreshPositions(),i._trigger("activate",e,o))})},stop:function(e,i){var s=t(this).data("ui-draggable"),n=t.extend({},i,{item:s.element});t.each(s.sortables,function(){this.instance.isOver?(this.instance.isOver=0,s.cancelHelperRemoval=!0,this.instance.cancelHelperRemoval=!1,this.shouldRevert&amp;&amp;(this.instance.options.revert=this.shouldRevert),this.instance._mouseStop(e),this.instance.options.helper=this.instance.options._helper,"original"===s.options.helper&amp;&amp;this.instance.currentItem.css({top:"auto",left:"auto"})):(this.instance.cancelHelperRemoval=!1,this.instance._trigger("deactivate",e,n))})},drag:function(e,i){var s=t(this).data("ui-draggable"),n=this;t.each(s.sortables,function(){var o=!1,a=this;this.instance.positionAbs=s.positionAbs,this.instance.helperProportions=s.helperProportions,this.instance.offset.click=s.offset.click,this.instance._intersectsWith(this.instance.containerCache)&amp;&amp;(o=!0,t.each(s.sortables,function(){return this.instance.positionAbs=s.positionAbs,this.instance.helperProportions=s.helperProportions,this.instance.offset.click=s.offset.click,this!==a&amp;&amp;this.instance._intersectsWith(this.instance.containerCache)&amp;&amp;t.contains(a.instance.element[0],this.instance.element[0])&amp;&amp;(o=!1),o})),o?(this.instance.isOver||(this.instance.isOver=1,this.instance.currentItem=t(n).clone().removeAttr("id").appendTo(this.instance.element).data("ui-sortable-item",!0),this.instance.options._helper=this.instance.options.helper,this.instance.options.helper=function(){return i.helper[0]},e.target=this.instance.currentItem[0],this.instance._mouseCapture(e,!0),this.instance._mouseStart(e,!0,!0),this.instance.offset.click.top=s.offset.click.top,this.instance.offset.click.left=s.offset.click.left,this.instance.offset.parent.left-=s.offset.parent.left-this.instance.offset.parent.left,this.instance.offset.parent.top-=s.offset.parent.top-this.instance.offset.parent.top,s._trigger("toSortable",e),s.dropped=this.instance.element,s.currentItem=s.element,this.instance.fromOutside=s),this.instance.currentItem&amp;&amp;this.instance._mouseDrag(e)):this.instance.isOver&amp;&amp;(this.instance.isOver=0,this.instance.cancelHelperRemoval=!0,this.instance.options.revert=!1,this.instance._trigger("out",e,this.instance._uiHash(this.instance)),this.instance._mouseStop(e,!0),this.instance.options.helper=this.instance.options._helper,this.instance.currentItem.remove(),this.instance.placeholder&amp;&amp;this.instance.placeholder.remove(),s._trigger("fromSortable",e),s.dropped=!1)})}}),t.ui.plugin.add("draggable","cursor",{start:function(){var e=t("body"),i=t(this).data("ui-draggable").options;e.css("cursor")&amp;&amp;(i._cursor=e.css("cursor")),e.css("cursor",i.cursor)},stop:function(){var e=t(this).data("ui-draggable").options;e._cursor&amp;&amp;t("body").css("cursor",e._cursor)}}),t.ui.plugin.add("draggable","opacity",{start:function(e,i){var s=t(i.helper),n=t(this).data("ui-draggable").options;s.css("opacity")&amp;&amp;(n._opacity=s.css("opacity")),s.css("opacity",n.opacity)},stop:function(e,i){var s=t(this).data("ui-draggable").options;s._opacity&amp;&amp;t(i.helper).css("opacity",s._opacity)}}),t.ui.plugin.add("draggable","scroll",{start:function(){var e=t(this).data("ui-draggable");e.scrollParent[0]!==document&amp;&amp;"HTML"!==e.scrollParent[0].tagName&amp;&amp;(e.overflowOffset=e.scrollParent.offset())},drag:function(e){var i=t(this).data("ui-draggable"),s=i.options,n=!1;i.scrollParent[0]!==document&amp;&amp;"HTML"!==i.scrollParent[0].tagName?(s.axis&amp;&amp;"x"===s.axis||(i.overflowOffset.top+i.scrollParent[0].offsetHeight-e.pageY&lt;s.scrollSensitivity?i.scrollParent[0].scrollTop=n=i.scrollParent[0].scrollTop+s.scrollSpeed:e.pageY-i.overflowOffset.top&lt;s.scrollSensitivity&amp;&amp;(i.scrollParent[0].scrollTop=n=i.scrollParent[0].scrollTop-s.scrollSpeed)),s.axis&amp;&amp;"y"===s.axis||(i.overflowOffset.left+i.scrollParent[0].offsetWidth-e.pageX&lt;s.scrollSensitivity?i.scrollParent[0].scrollLeft=n=i.scrollParent[0].scrollLeft+s.scrollSpeed:e.pageX-i.overflowOffset.left&lt;s.scrollSensitivity&amp;&amp;(i.scrollParent[0].scrollLeft=n=i.scrollParent[0].scrollLeft-s.scrollSpeed))):(s.axis&amp;&amp;"x"===s.axis||(e.pageY-t(document).scrollTop()&lt;s.scrollSensitivity?n=t(document).scrollTop(t(document).scrollTop()-s.scrollSpeed):t(window).height()-(e.pageY-t(document).scrollTop())&lt;s.scrollSensitivity&amp;&amp;(n=t(document).scrollTop(t(document).scrollTop()+s.scrollSpeed))),s.axis&amp;&amp;"y"===s.axis||(e.pageX-t(document).scrollLeft()&lt;s.scrollSensitivity?n=t(document).scrollLeft(t(document).scrollLeft()-s.scrollSpeed):t(window).width()-(e.pageX-t(document).scrollLeft())&lt;s.scrollSensitivity&amp;&amp;(n=t(document).scrollLeft(t(document).scrollLeft()+s.scrollSpeed)))),n!==!1&amp;&amp;t.ui.ddmanager&amp;&amp;!s.dropBehaviour&amp;&amp;t.ui.ddmanager.prepareOffsets(i,e)}}),t.ui.plugin.add("draggable","snap",{start:function(){var e=t(this).data("ui-draggable"),i=e.options;e.snapElements=[],t(i.snap.constructor!==String?i.snap.items||":data(ui-draggable)":i.snap).each(function(){var i=t(this),s=i.offset();this!==e.element[0]&amp;&amp;e.snapElements.push({item:this,width:i.outerWidth(),height:i.outerHeight(),top:s.top,left:s.left})})},drag:function(e,i){var s,n,o,a,r,h,l,c,u,d,p=t(this).data("ui-draggable"),f=p.options,g=f.snapTolerance,m=i.offset.left,v=m+p.helperProportions.width,_=i.offset.top,b=_+p.helperProportions.height;for(u=p.snapElements.length-1;u&gt;=0;u--)r=p.snapElements[u].left,h=r+p.snapElements[u].width,l=p.snapElements[u].top,c=l+p.snapElements[u].height,r-g&gt;v||m&gt;h+g||l-g&gt;b||_&gt;c+g||!t.contains(p.snapElements[u].item.ownerDocument,p.snapElements[u].item)?(p.snapElements[u].snapping&amp;&amp;p.options.snap.release&amp;&amp;p.options.snap.release.call(p.element,e,t.extend(p._uiHash(),{snapItem:p.snapElements[u].item})),p.snapElements[u].snapping=!1):("inner"!==f.snapMode&amp;&amp;(s=g&gt;=Math.abs(l-b),n=g&gt;=Math.abs(c-_),o=g&gt;=Math.abs(r-v),a=g&gt;=Math.abs(h-m),s&amp;&amp;(i.position.top=p._convertPositionTo("relative",{top:l-p.helperProportions.height,left:0}).top-p.margins.top),n&amp;&amp;(i.position.top=p._convertPositionTo("relative",{top:c,left:0}).top-p.margins.top),o&amp;&amp;(i.position.left=p._convertPositionTo("relative",{top:0,left:r-p.helperProportions.width}).left-p.margins.left),a&amp;&amp;(i.position.left=p._convertPositionTo("relative",{top:0,left:h}).left-p.margins.left)),d=s||n||o||a,"outer"!==f.snapMode&amp;&amp;(s=g&gt;=Math.abs(l-_),n=g&gt;=Math.abs(c-b),o=g&gt;=Math.abs(r-m),a=g&gt;=Math.abs(h-v),s&amp;&amp;(i.position.top=p._convertPositionTo("relative",{top:l,left:0}).top-p.margins.top),n&amp;&amp;(i.position.top=p._convertPositionTo("relative",{top:c-p.helperProportions.height,left:0}).top-p.margins.top),o&amp;&amp;(i.position.left=p._convertPositionTo("relative",{top:0,left:r}).left-p.margins.left),a&amp;&amp;(i.position.left=p._convertPositionTo("relative",{top:0,left:h-p.helperProportions.width}).left-p.margins.left)),!p.snapElements[u].snapping&amp;&amp;(s||n||o||a||d)&amp;&amp;p.options.snap.snap&amp;&amp;p.options.snap.snap.call(p.element,e,t.extend(p._uiHash(),{snapItem:p.snapElements[u].item})),p.snapElements[u].snapping=s||n||o||a||d)}}),t.ui.plugin.add("draggable","stack",{start:function(){var e,i=this.data("ui-draggable").options,s=t.makeArray(t(i.stack)).sort(function(e,i){return(parseInt(t(e).css("zIndex"),10)||0)-(parseInt(t(i).css("zIndex"),10)||0)});s.length&amp;&amp;(e=parseInt(t(s[0]).css("zIndex"),10)||0,t(s).each(function(i){t(this).css("zIndex",e+i)}),this.css("zIndex",e+s.length))}}),t.ui.plugin.add("draggable","zIndex",{start:function(e,i){var s=t(i.helper),n=t(this).data("ui-draggable").options;s.css("zIndex")&amp;&amp;(n._zIndex=s.css("zIndex")),s.css("zIndex",n.zIndex)},stop:function(e,i){var s=t(this).data("ui-draggable").options;s._zIndex&amp;&amp;t(i.helper).css("zIndex",s._zIndex)}})}(jQuery),function(t){function e(t,e,i){return t&gt;e&amp;&amp;e+i&gt;t}t.widget("ui.droppable",{version:"1.10.4",widgetEventPrefix:"drop",options:{accept:"*",activeClass:!1,addClasses:!0,greedy:!1,hoverClass:!1,scope:"default",tolerance:"intersect",activate:null,deactivate:null,drop:null,out:null,over:null},_create:function(){var e,i=this.options,s=i.accept;this.isover=!1,this.isout=!0,this.accept=t.isFunction(s)?s:function(t){return t.is(s)},this.proportions=function(){return arguments.length?(e=arguments[0],undefined):e?e:e={width:this.element[0].offsetWidth,height:this.element[0].offsetHeight}},t.ui.ddmanager.droppables[i.scope]=t.ui.ddmanager.droppables[i.scope]||[],t.ui.ddmanager.droppables[i.scope].push(this),i.addClasses&amp;&amp;this.element.addClass("ui-droppable")},_destroy:function(){for(var e=0,i=t.ui.ddmanager.droppables[this.options.scope];i.length&gt;e;e++)i[e]===this&amp;&amp;i.splice(e,1);this.element.removeClass("ui-droppable ui-droppable-disabled")},_setOption:function(e,i){"accept"===e&amp;&amp;(this.accept=t.isFunction(i)?i:function(t){return t.is(i)}),t.Widget.prototype._setOption.apply(this,arguments)},_activate:function(e){var i=t.ui.ddmanager.current;this.options.activeClass&amp;&amp;this.element.addClass(this.options.activeClass),i&amp;&amp;this._trigger("activate",e,this.ui(i))},_deactivate:function(e){var i=t.ui.ddmanager.current;this.options.activeClass&amp;&amp;this.element.removeClass(this.options.activeClass),i&amp;&amp;this._trigger("deactivate",e,this.ui(i))},_over:function(e){var i=t.ui.ddmanager.current;i&amp;&amp;(i.currentItem||i.element)[0]!==this.element[0]&amp;&amp;this.accept.call(this.element[0],i.currentItem||i.element)&amp;&amp;(this.options.hoverClass&amp;&amp;this.element.addClass(this.options.hoverClass),this._trigger("over",e,this.ui(i)))},_out:function(e){var i=t.ui.ddmanager.current;i&amp;&amp;(i.currentItem||i.element)[0]!==this.element[0]&amp;&amp;this.accept.call(this.element[0],i.currentItem||i.element)&amp;&amp;(this.options.hoverClass&amp;&amp;this.element.removeClass(this.options.hoverClass),this._trigger("out",e,this.ui(i)))},_drop:function(e,i){var s=i||t.ui.ddmanager.current,n=!1;return s&amp;&amp;(s.currentItem||s.element)[0]!==this.element[0]?(this.element.find(":data(ui-droppable)").not(".ui-draggable-dragging").each(function(){var e=t.data(this,"ui-droppable");return e.options.greedy&amp;&amp;!e.options.disabled&amp;&amp;e.options.scope===s.options.scope&amp;&amp;e.accept.call(e.element[0],s.currentItem||s.element)&amp;&amp;t.ui.intersect(s,t.extend(e,{offset:e.element.offset()}),e.options.tolerance)?(n=!0,!1):undefined}),n?!1:this.accept.call(this.element[0],s.currentItem||s.element)?(this.options.activeClass&amp;&amp;this.element.removeClass(this.options.activeClass),this.options.hoverClass&amp;&amp;this.element.removeClass(this.options.hoverClass),this._trigger("drop",e,this.ui(s)),this.element):!1):!1},ui:function(t){return{draggable:t.currentItem||t.element,helper:t.helper,position:t.position,offset:t.positionAbs}}}),t.ui.intersect=function(t,i,s){if(!i.offset)return!1;var n,o,a=(t.positionAbs||t.position.absolute).left,r=(t.positionAbs||t.position.absolute).top,h=a+t.helperProportions.width,l=r+t.helperProportions.height,c=i.offset.left,u=i.offset.top,d=c+i.proportions().width,p=u+i.proportions().height;switch(s){case"fit":return a&gt;=c&amp;&amp;d&gt;=h&amp;&amp;r&gt;=u&amp;&amp;p&gt;=l;case"intersect":return a+t.helperProportions.width/2&gt;c&amp;&amp;d&gt;h-t.helperProportions.width/2&amp;&amp;r+t.helperProportions.height/2&gt;u&amp;&amp;p&gt;l-t.helperProportions.height/2;case"pointer":return n=(t.positionAbs||t.position.absolute).left+(t.clickOffset||t.offset.click).left,o=(t.positionAbs||t.position.absolute).top+(t.clickOffset||t.offset.click).top,e(o,u,i.proportions().height)&amp;&amp;e(n,c,i.proportions().width);case"touch":return(r&gt;=u&amp;&amp;p&gt;=r||l&gt;=u&amp;&amp;p&gt;=l||u&gt;r&amp;&amp;l&gt;p)&amp;&amp;(a&gt;=c&amp;&amp;d&gt;=a||h&gt;=c&amp;&amp;d&gt;=h||c&gt;a&amp;&amp;h&gt;d);default:return!1}},t.ui.ddmanager={current:null,droppables:{"default":[]},prepareOffsets:function(e,i){var s,n,o=t.ui.ddmanager.droppables[e.options.scope]||[],a=i?i.type:null,r=(e.currentItem||e.element).find(":data(ui-droppable)").addBack();t:for(s=0;o.length&gt;s;s++)if(!(o[s].options.disabled||e&amp;&amp;!o[s].accept.call(o[s].element[0],e.currentItem||e.element))){for(n=0;r.length&gt;n;n++)if(r[n]===o[s].element[0]){o[s].proportions().height=0;continue t}o[s].visible="none"!==o[s].element.css("display"),o[s].visible&amp;&amp;("mousedown"===a&amp;&amp;o[s]._activate.call(o[s],i),o[s].offset=o[s].element.offset(),o[s].proportions({width:o[s].element[0].offsetWidth,height:o[s].element[0].offsetHeight}))}},drop:function(e,i){var s=!1;return t.each((t.ui.ddmanager.droppables[e.options.scope]||[]).slice(),function(){this.options&amp;&amp;(!this.options.disabled&amp;&amp;this.visible&amp;&amp;t.ui.intersect(e,this,this.options.tolerance)&amp;&amp;(s=this._drop.call(this,i)||s),!this.options.disabled&amp;&amp;this.visible&amp;&amp;this.accept.call(this.element[0],e.currentItem||e.element)&amp;&amp;(this.isout=!0,this.isover=!1,this._deactivate.call(this,i)))}),s},dragStart:function(e,i){e.element.parentsUntil("body").bind("scroll.droppable",function(){e.options.refreshPositions||t.ui.ddmanager.prepareOffsets(e,i)})},drag:function(e,i){e.options.refreshPositions&amp;&amp;t.ui.ddmanager.prepareOffsets(e,i),t.each(t.ui.ddmanager.droppables[e.options.scope]||[],function(){if(!this.options.disabled&amp;&amp;!this.greedyChild&amp;&amp;this.visible){var s,n,o,a=t.ui.intersect(e,this,this.options.tolerance),r=!a&amp;&amp;this.isover?"isout":a&amp;&amp;!this.isover?"isover":null;r&amp;&amp;(this.options.greedy&amp;&amp;(n=this.options.scope,o=this.element.parents(":data(ui-droppable)").filter(function(){return t.data(this,"ui-droppable").options.scope===n}),o.length&amp;&amp;(s=t.data(o[0],"ui-droppable"),s.greedyChild="isover"===r)),s&amp;&amp;"isover"===r&amp;&amp;(s.isover=!1,s.isout=!0,s._out.call(s,i)),this[r]=!0,this["isout"===r?"isover":"isout"]=!1,this["isover"===r?"_over":"_out"].call(this,i),s&amp;&amp;"isout"===r&amp;&amp;(s.isout=!1,s.isover=!0,s._over.call(s,i)))}})},dragStop:function(e,i){e.element.parentsUntil("body").unbind("scroll.droppable"),e.options.refreshPositions||t.ui.ddmanager.prepareOffsets(e,i)}}}(jQuery),function(t){function e(t){return parseInt(t,10)||0}function i(t){return!isNaN(parseInt(t,10))}t.widget("ui.resizable",t.ui.mouse,{version:"1.10.4",widgetEventPrefix:"resize",options:{alsoResize:!1,animate:!1,animateDuration:"slow",animateEasing:"swing",aspectRatio:!1,autoHide:!1,containment:!1,ghost:!1,grid:!1,handles:"e,s,se",helper:!1,maxHeight:null,maxWidth:null,minHeight:10,minWidth:10,zIndex:90,resize:null,start:null,stop:null},_create:function(){var e,i,s,n,o,a=this,r=this.options;if(this.element.addClass("ui-resizable"),t.extend(this,{_aspectRatio:!!r.aspectRatio,aspectRatio:r.aspectRatio,originalElement:this.element,_proportionallyResizeElements:[],_helper:r.helper||r.ghost||r.animate?r.helper||"ui-resizable-helper":null}),this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)&amp;&amp;(this.element.wrap(t("&lt;div class=''ui-wrapper'' style=''overflow: hidden;''&gt;&lt;/div&gt;").css({position:this.element.css("position"),width:this.element.outerWidth(),height:this.element.outerHeight(),top:this.element.css("top"),left:this.element.css("left")})),this.element=this.element.parent().data("ui-resizable",this.element.data("ui-resizable")),this.elementIsWrapper=!0,this.element.css({marginLeft:this.originalElement.css("marginLeft"),marginTop:this.originalElement.css("marginTop"),marginRight:this.originalElement.css("marginRight"),marginBottom:this.originalElement.css("marginBottom")}),this.originalElement.css({marginLeft:0,marginTop:0,marginRight:0,marginBottom:0}),this.originalResizeStyle=this.originalElement.css("resize"),this.originalElement.css("resize","none"),this._proportionallyResizeElements.push(this.originalElement.css({position:"static",zoom:1,display:"block"})),this.originalElement.css({margin:this.originalElement.css("margin")}),this._proportionallyResize()),this.handles=r.handles||(t(".ui-resizable-handle",this.element).length?{n:".ui-resizable-n",e:".ui-resizable-e",s:".ui-resizable-s",w:".ui-resizable-w",se:".ui-resizable-se",sw:".ui-resizable-sw",ne:".ui-resizable-ne",nw:".ui-resizable-nw"}:"e,s,se"),this.handles.constructor===String)for("all"===this.handles&amp;&amp;(this.handles="n,e,s,w,se,sw,ne,nw"),e=this.handles.split(","),this.handles={},i=0;e.length&gt;i;i++)s=t.trim(e[i]),o="ui-resizable-"+s,n=t("&lt;div class=''ui-resizable-handle "+o+"''&gt;&lt;/div&gt;"),n.css({zIndex:r.zIndex}),"se"===s&amp;&amp;n.addClass("ui-icon ui-icon-gripsmall-diagonal-se"),this.handles[s]=".ui-resizable-"+s,this.element.append(n);this._renderAxis=function(e){var i,s,n,o;e=e||this.element;for(i in this.handles)this.handles[i].constructor===String&amp;&amp;(this.handles[i]=t(this.handles[i],this.element).show()),this.elementIsWrapper&amp;&amp;this.originalElement[0].nodeName.match(/textarea|input|select|button/i)&amp;&amp;(s=t(this.handles[i],this.element),o=/sw|ne|nw|se|n|s/.test(i)?s.outerHeight():s.outerWidth(),n=["padding",/ne|nw|n/.test(i)?"Top":/se|sw|s/.test(i)?"Bottom":/^e$/.test(i)?"Right":"Left"].join(""),e.css(n,o),this._proportionallyResize()),t(this.handles[i]).length},this._renderAxis(this.element),this._handles=t(".ui-resizable-handle",this.element).disableSelection(),this._handles.mouseover(function(){a.resizing||(this.className&amp;&amp;(n=this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)),a.axis=n&amp;&amp;n[1]?n[1]:"se")}),r.autoHide&amp;&amp;(this._handles.hide(),t(this.element).addClass("ui-resizable-autohide").mouseenter(function(){r.disabled||(t(this).removeClass("ui-resizable-autohide"),a._handles.show())}).mouseleave(function(){r.disabled||a.resizing||(t(this).addClass("ui-resizable-autohide"),a._handles.hide())})),this._mouseInit()},_destroy:function(){this._mouseDestroy();var e,i=function(e){t(e).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").removeData("ui-resizable").unbind(".resizable").find(".ui-resizable-handle").remove()};return this.elementIsWrapper&amp;&amp;(i(this.element),e=this.element,this.originalElement.css({position:e.css("position"),width:e.outerWidth(),height:e.outerHeight(),top:e.css("top"),left:e.css("left")}).insertAfter(e),e.remove()),this.originalElement.css("resize",this.originalResizeStyle),i(this.originalElement),this},_mouseCapture:function(e){var i,s,n=!1;for(i in this.handles)s=t(this.handles[i])[0],(s===e.target||t.contains(s,e.target))&amp;&amp;(n=!0);return!this.options.disabled&amp;&amp;n},_mouseStart:function(i){var s,n,o,a=this.options,r=this.element.position(),h=this.element;return this.resizing=!0,/absolute/.test(h.css("position"))?h.css({position:"absolute",top:h.css("top"),left:h.css("left")}):h.is(".ui-draggable")&amp;&amp;h.css({position:"absolute",top:r.top,left:r.left}),this._renderProxy(),s=e(this.helper.css("left")),n=e(this.helper.css("top")),a.containment&amp;&amp;(s+=t(a.containment).scrollLeft()||0,n+=t(a.containment).scrollTop()||0),this.offset=this.helper.offset(),this.position={left:s,top:n},this.size=this._helper?{width:this.helper.width(),height:this.helper.height()}:{width:h.width(),height:h.height()},this.originalSize=this._helper?{width:h.outerWidth(),height:h.outerHeight()}:{width:h.width(),height:h.height()},this.originalPosition={left:s,top:n},this.sizeDiff={width:h.outerWidth()-h.width(),height:h.outerHeight()-h.height()},this.originalMousePosition={left:i.pageX,top:i.pageY},this.aspectRatio="number"==typeof a.aspectRatio?a.aspectRatio:this.originalSize.width/this.originalSize.height||1,o=t(".ui-resizable-"+this.axis).css("cursor"),t("body").css("cursor","auto"===o?this.axis+"-resize":o),h.addClass("ui-resizable-resizing"),this._propagate("start",i),!0},_mouseDrag:function(e){var i,s=this.helper,n={},o=this.originalMousePosition,a=this.axis,r=this.position.top,h=this.position.left,l=this.size.width,c=this.size.height,u=e.pageX-o.left||0,d=e.pageY-o.top||0,p=this._change[a];return p?(i=p.apply(this,[e,u,d]),this._updateVirtualBoundaries(e.shiftKey),(this._aspectRatio||e.shiftKey)&amp;&amp;(i=this._updateRatio(i,e)),i=this._respectSize(i,e),this._updateCache(i),this._propagate("resize",e),this.position.top!==r&amp;&amp;(n.top=this.position.top+"px"),this.position.left!==h&amp;&amp;(n.left=this.position.left+"px"),this.size.width!==l&amp;&amp;(n.width=this.size.width+"px"),this.size.height!==c&amp;&amp;(n.height=this.size.height+"px"),s.css(n),!this._helper&amp;&amp;this._proportionallyResizeElements.length&amp;&amp;this._proportionallyResize(),t.isEmptyObject(n)||this._trigger("resize",e,this.ui()),!1):!1},_mouseStop:function(e){this.resizing=!1;var i,s,n,o,a,r,h,l=this.options,c=this;return this._helper&amp;&amp;(i=this._proportionallyResizeElements,s=i.length&amp;&amp;/textarea/i.test(i[0].nodeName),n=s&amp;&amp;t.ui.hasScroll(i[0],"left")?0:c.sizeDiff.height,o=s?0:c.sizeDiff.width,a={width:c.helper.width()-o,height:c.helper.height()-n},r=parseInt(c.element.css("left"),10)+(c.position.left-c.originalPosition.left)||null,h=parseInt(c.element.css("top"),10)+(c.position.top-c.originalPosition.top)||null,l.animate||this.element.css(t.extend(a,{top:h,left:r})),c.helper.height(c.size.height),c.helper.width(c.size.width),this._helper&amp;&amp;!l.animate&amp;&amp;this._proportionallyResize()),t("body").css("cursor","auto"),this.element.removeClass("ui-resizable-resizing"),this._propagate("stop",e),this._helper&amp;&amp;this.helper.remove(),!1},_updateVirtualBoundaries:function(t){var e,s,n,o,a,r=this.options;a={minWidth:i(r.minWidth)?r.minWidth:0,maxWidth:i(r.maxWidth)?r.maxWidth:1/0,minHeight:i(r.minHeight)?r.minHeight:0,maxHeight:i(r.maxHeight)?r.maxHeight:1/0},(this._aspectRatio||t)&amp;&amp;(e=a.minHeight*this.aspectRatio,n=a.minWidth/this.aspectRatio,s=a.maxHeight*this.aspectRatio,o=a.maxWidth/this.aspectRatio,e&gt;a.minWidth&amp;&amp;(a.minWidth=e),n&gt;a.minHeight&amp;&amp;(a.minHeight=n),a.maxWidth&gt;s&amp;&amp;(a.maxWidth=s),a.maxHeight&gt;o&amp;&amp;(a.maxHeight=o)),this._vBoundaries=a},_updateCache:function(t){this.offset=this.helper.offset(),i(t.left)&amp;&amp;(this.position.left=t.left),i(t.top)&amp;&amp;(this.position.top=t.top),i(t.height)&amp;&amp;(this.size.height=t.height),i(t.width)&amp;&amp;(this.size.width=t.width)},_updateRatio:function(t){var e=this.position,s=this.size,n=this.axis;return i(t.height)?t.width=t.height*this.aspectRatio:i(t.width)&amp;&amp;(t.height=t.width/this.aspectRatio),"sw"===n&amp;&amp;(t.left=e.left+(s.width-t.width),t.top=null),"nw"===n&amp;&amp;(t.top=e.top+(s.height-t.height),t.left=e.left+(s.width-t.width)),t},_respectSize:function(t){var e=this._vBoundaries,s=this.axis,n=i(t.width)&amp;&amp;e.maxWidth&amp;&amp;e.maxWidth&lt;t.width,o=i(t.height)&amp;&amp;e.maxHeight&amp;&amp;e.maxHeight&lt;t.height,a=i(t.width)&amp;&amp;e.minWidth&amp;&amp;e.minWidth&gt;t.width,r=i(t.height)&amp;&amp;e.minHeight&amp;&amp;e.minHeight&gt;t.height,h=this.originalPosition.left+this.originalSize.width,l=this.position.top+this.size.height,c=/sw|nw|w/.test(s),u=/nw|ne|n/.test(s);return a&amp;&amp;(t.width=e.minWidth),r&amp;&amp;(t.height=e.minHeight),n&amp;&amp;(t.width=e.maxWidth),o&amp;&amp;(t.height=e.maxHeight),a&amp;&amp;c&amp;&amp;(t.left=h-e.minWidth),n&amp;&amp;c&amp;&amp;(t.left=h-e.maxWidth),r&amp;&amp;u&amp;&amp;(t.top=l-e.minHeight),o&amp;&amp;u&amp;&amp;(t.top=l-e.maxHeight),t.width||t.height||t.left||!t.top?t.width||t.height||t.top||!t.left||(t.left=null):t.top=null,t},_proportionallyResize:function(){if(this._proportionallyResizeElements.length){var t,e,i,s,n,o=this.helper||this.element;for(t=0;this._proportionallyResizeElements.length&gt;t;t++){if(n=this._proportionallyResizeElements[t],!this.borderDif)for(this.borderDif=[],i=[n.css("borderTopWidth"),n.css("borderRightWidth"),n.css("borderBottomWidth"),n.css("borderLeftWidth")],s=[n.css("paddingTop"),n.css("paddingRight"),n.css("paddingBottom"),n.css("paddingLeft")],e=0;i.length&gt;e;e++)this.borderDif[e]=(parseInt(i[e],10)||0)+(parseInt(s[e],10)||0);n.css({height:o.height()-this.borderDif[0]-this.borderDif[2]||0,width:o.width()-this.borderDif[1]-this.borderDif[3]||0})}}},_renderProxy:function(){var e=this.element,i=this.options;this.elementOffset=e.offset(),this._helper?(this.helper=this.helper||t("&lt;div style=''overflow:hidden;''&gt;&lt;/div&gt;"),this.helper.addClass(this._helper).css({width:this.element.outerWidth()-1,height:this.element.outerHeight()-1,position:"absolute",left:this.elementOffset.left+"px",top:this.elementOffset.top+"px",zIndex:++i.zIndex}),this.helper.appendTo("body").disableSelection()):this.helper=this.element},_change:{e:function(t,e){return{width:this.originalSize.width+e}},w:function(t,e){var i=this.originalSize,s=this.originalPosition;return{left:s.left+e,width:i.width-e}},n:function(t,e,i){var s=this.originalSize,n=this.originalPosition;return{top:n.top+i,height:s.height-i}},s:function(t,e,i){return{height:this.originalSize.height+i}},se:function(e,i,s){return t.extend(this._change.s.apply(this,arguments),this._change.e.apply(this,[e,i,s]))},sw:function(e,i,s){return t.extend(this._change.s.apply(this,arguments),this._change.w.apply(this,[e,i,s]))},ne:function(e,i,s){return t.extend(this._change.n.apply(this,arguments),this._change.e.apply(this,[e,i,s]))},nw:function(e,i,s){return t.extend(this._change.n.apply(this,arguments),this._change.w.apply(this,[e,i,s]))}},_propagate:function(e,i){t.ui.plugin.call(this,e,[i,this.ui()]),"resize"!==e&amp;&amp;this._trigger(e,i,this.ui())},plugins:{},ui:function(){return{originalElement:this.originalElement,element:this.element,helper:this.helper,position:this.position,size:this.size,originalSize:this.originalSize,originalPosition:this.originalPosition}}}),t.ui.plugin.add("resizable","animate",{stop:function(e){var i=t(this).data("ui-resizable"),s=i.options,n=i._proportionallyResizeElements,o=n.length&amp;&amp;/textarea/i.test(n[0].nodeName),a=o&amp;&amp;t.ui.hasScroll(n[0],"left")?0:i.sizeDiff.height,r=o?0:i.sizeDiff.width,h={width:i.size.width-r,height:i.size.height-a},l=parseInt(i.element.css("left"),10)+(i.position.left-i.originalPosition.left)||null,c=parseInt(i.element.css("top"),10)+(i.position.top-i.originalPosition.top)||null;i.element.animate(t.extend(h,c&amp;&amp;l?{top:c,left:l}:{}),{duration:s.animateDuration,easing:s.animateEasing,step:function(){var s={width:parseInt(i.element.css("width"),10),height:parseInt(i.element.css("height"),10),top:parseInt(i.element.css("top"),10),left:parseInt(i.element.css("left"),10)};n&amp;&amp;n.length&amp;&amp;t(n[0]).css({width:s.width,height:s.height}),i._updateCache(s),i._propagate("resize",e)}})}}),t.ui.plugin.add("resizable","containment",{start:function(){var i,s,n,o,a,r,h,l=t(this).data("ui-resizable"),c=l.options,u=l.element,d=c.containment,p=d instanceof t?d.get(0):/parent/.test(d)?u.parent().get(0):d;p&amp;&amp;(l.containerElement=t(p),/document/.test(d)||d===document?(l.containerOffset={left:0,top:0},l.containerPosition={left:0,top:0},l.parentData={element:t(document),left:0,top:0,width:t(document).width(),height:t(document).height()||document.body.parentNode.scrollHeight}):(i=t(p),s=[],t(["Top","Right","Left","Bottom"]).each(function(t,n){s[t]=e(i.css("padding"+n))}),l.containerOffset=i.offset(),l.containerPosition=i.position(),l.containerSize={height:i.innerHeight()-s[3],width:i.innerWidth()-s[1]},n=l.containerOffset,o=l.containerSize.height,a=l.containerSize.width,r=t.ui.hasScroll(p,"left")?p.scrollWidth:a,h=t.ui.hasScroll(p)?p.scrollHeight:o,l.parentData={element:p,left:n.left,top:n.top,width:r,height:h}))},resize:function(e){var i,s,n,o,a=t(this).data("ui-resizable"),r=a.options,h=a.containerOffset,l=a.position,c=a._aspectRatio||e.shiftKey,u={top:0,left:0},d=a.containerElement;d[0]!==document&amp;&amp;/static/.test(d.css("position"))&amp;&amp;(u=h),l.left&lt;(a._helper?h.left:0)&amp;&amp;(a.size.width=a.size.width+(a._helper?a.position.left-h.left:a.position.left-u.left),c&amp;&amp;(a.size.height=a.size.width/a.aspectRatio),a.position.left=r.helper?h.left:0),l.top&lt;(a._helper?h.top:0)&amp;&amp;(a.size.height=a.size.height+(a._helper?a.position.top-h.top:a.position.top),c&amp;&amp;(a.size.width=a.size.height*a.aspectRatio),a.position.top=a._helper?h.top:0),a.offset.left=a.parentData.left+a.position.left,a.offset.top=a.parentData.top+a.position.top,i=Math.abs((a._helper?a.offset.left-u.left:a.offset.left-u.left)+a.sizeDiff.width),s=Math.abs((a._helper?a.offset.top-u.top:a.offset.top-h.top)+a.sizeDiff.height),n=a.containerElement.get(0)===a.element.parent().get(0),o=/relative|absolute/.test(a.containerElement.css("position")),n&amp;&amp;o&amp;&amp;(i-=Math.abs(a.parentData.left)),i+a.size.width&gt;=a.parentData.width&amp;&amp;(a.size.width=a.parentData.width-i,c&amp;&amp;(a.size.height=a.size.width/a.aspectRatio)),s+a.size.height&gt;=a.parentData.height&amp;&amp;(a.size.height=a.parentData.height-s,c&amp;&amp;(a.size.width=a.size.height*a.aspectRatio))},stop:function(){var e=t(this).data("ui-resizable"),i=e.options,s=e.containerOffset,n=e.containerPosition,o=e.containerElement,a=t(e.helper),r=a.offset(),h=a.outerWidth()-e.sizeDiff.width,l=a.outerHeight()-e.sizeDiff.height;e._helper&amp;&amp;!i.animate&amp;&amp;/relative/.test(o.css("position"))&amp;&amp;t(this).css({left:r.left-n.left-s.left,width:h,height:l}),e._helper&amp;&amp;!i.animate&amp;&amp;/static/.test(o.css("position"))&amp;&amp;t(this).css({left:r.left-n.left-s.left,width:h,height:l})}}),t.ui.plugin.add("resizable","alsoResize",{start:function(){var e=t(this).data("ui-resizable"),i=e.options,s=function(e){t(e).each(function(){var e=t(this);e.data("ui-resizable-alsoresize",{width:parseInt(e.width(),10),height:parseInt(e.height(),10),left:parseInt(e.css("left"),10),top:parseInt(e.css("top"),10)})})};"object"!=typeof i.alsoResize||i.alsoResize.parentNode?s(i.alsoResize):i.alsoResize.length?(i.alsoResize=i.alsoResize[0],s(i.alsoResize)):t.each(i.alsoResize,function(t){s(t)})},resize:function(e,i){var s=t(this).data("ui-resizable"),n=s.options,o=s.originalSize,a=s.originalPosition,r={height:s.size.height-o.height||0,width:s.size.width-o.width||0,top:s.position.top-a.top||0,left:s.position.left-a.left||0},h=function(e,s){t(e).each(function(){var e=t(this),n=t(this).data("ui-resizable-alsoresize"),o={},a=s&amp;&amp;s.length?s:e.parents(i.originalElement[0]).length?["width","height"]:["width","height","top","left"];t.each(a,function(t,e){var i=(n[e]||0)+(r[e]||0);i&amp;&amp;i&gt;=0&amp;&amp;(o[e]=i||null)}),e.css(o)})};"object"!=typeof n.alsoResize||n.alsoResize.nodeType?h(n.alsoResize):t.each(n.alsoResize,function(t,e){h(t,e)})},stop:function(){t(this).removeData("resizable-alsoresize")}}),t.ui.plugin.add("resizable","ghost",{start:function(){var e=t(this).data("ui-resizable"),i=e.options,s=e.size;e.ghost=e.originalElement.clone(),e.ghost.css({opacity:.25,display:"block",position:"relative",height:s.height,width:s.width,margin:0,left:0,top:0}).addClass("ui-resizable-ghost").addClass("string"==typeof i.ghost?i.ghost:""),e.ghost.appendTo(e.helper)},resize:function(){var e=t(this).data("ui-resizable");e.ghost&amp;&amp;e.ghost.css({position:"relative",height:e.size.height,width:e.size.width})},stop:function(){var e=t(this).data("ui-resizable");e.ghost&amp;&amp;e.helper&amp;&amp;e.helper.get(0).removeChild(e.ghost.get(0))}}),t.ui.plugin.add("resizable","grid",{resize:function(){var e=t(this).data("ui-resizable"),i=e.options,s=e.size,n=e.originalSize,o=e.originalPosition,a=e.axis,r="number"==typeof i.grid?[i.grid,i.grid]:i.grid,h=r[0]||1,l=r[1]||1,c=Math.round((s.width-n.width)/h)*h,u=Math.round((s.height-n.height)/l)*l,d=n.width+c,p=n.height+u,f=i.maxWidth&amp;&amp;d&gt;i.maxWidth,g=i.maxHeight&amp;&amp;p&gt;i.maxHeight,m=i.minWidth&amp;&amp;i.minWidth&gt;d,v=i.minHeight&amp;&amp;i.minHeight&gt;p;i.grid=r,m&amp;&amp;(d+=h),v&amp;&amp;(p+=l),f&amp;&amp;(d-=h),g&amp;&amp;(p-=l),/^(se|s|e)$/.test(a)?(e.size.width=d,e.size.height=p):/^(ne)$/.test(a)?(e.size.width=d,e.size.height=p,e.position.top=o.top-u):/^(sw)$/.test(a)?(e.size.width=d,e.size.height=p,e.position.left=o.left-c):(p-l&gt;0?(e.size.height=p,e.position.top=o.top-u):(e.size.height=l,e.position.top=o.top+n.height-l),d-h&gt;0?(e.size.width=d,e.position.left=o.left-c):(e.size.width=h,e.position.left=o.left+n.width-h))}})}(jQuery),function(t){t.widget("ui.selectable",t.ui.mouse,{version:"1.10.4",options:{appendTo:"body",autoRefresh:!0,distance:0,filter:"*",tolerance:"touch",selected:null,selecting:null,start:null,stop:null,unselected:null,unselecting:null},_create:function(){var e,i=this;this.element.addClass("ui-selectable"),this.dragged=!1,this.refresh=function(){e=t(i.options.filter,i.element[0]),e.addClass("ui-selectee"),e.each(function(){var e=t(this),i=e.offset();t.data(this,"selectable-item",{element:this,$element:e,left:i.left,top:i.top,right:i.left+e.outerWidth(),bottom:i.top+e.outerHeight(),startselected:!1,selected:e.hasClass("ui-selected"),selecting:e.hasClass("ui-selecting"),unselecting:e.hasClass("ui-unselecting")})})},this.refresh(),this.selectees=e.addClass("ui-selectee"),this._mouseInit(),this.helper=t("&lt;div class=''ui-selectable-helper''&gt;&lt;/div&gt;")},_destroy:function(){this.selectees.removeClass("ui-selectee").removeData("selectable-item"),this.element.removeClass("ui-selectable ui-selectable-disabled"),this._mouseDestroy()},_mouseStart:function(e){var i=this,s=this.options;this.opos=[e.pageX,e.pageY],this.options.disabled||(this.selectees=t(s.filter,this.element[0]),this._trigger("start",e),t(s.appendTo).append(this.helper),this.helper.css({left:e.pageX,top:e.pageY,width:0,height:0}),s.autoRefresh&amp;&amp;this.refresh(),this.selectees.filter(".ui-selected").each(function(){var s=t.data(this,"selectable-item");s.startselected=!0,e.metaKey||e.ctrlKey||(s.$element.removeClass("ui-selected"),s.selected=!1,s.$element.addClass("ui-unselecting"),s.unselecting=!0,i._trigger("unselecting",e,{unselecting:s.element}))}),t(e.target).parents().addBack().each(function(){var s,n=t.data(this,"selectable-item");return n?(s=!e.metaKey&amp;&amp;!e.ctrlKey||!n.$element.hasClass("ui-selected"),n.$element.removeClass(s?"ui-unselecting":"ui-selected").addClass(s?"ui-selecting":"ui-unselecting"),n.unselecting=!s,n.selecting=s,n.selected=s,s?i._trigger("selecting",e,{selecting:n.element}):i._trigger("unselecting",e,{unselecting:n.element}),!1):undefined}))},_mouseDrag:function(e){if(this.dragged=!0,!this.options.disabled){var i,s=this,n=this.options,o=this.opos[0],a=this.opos[1],r=e.pageX,h=e.pageY;return o&gt;r&amp;&amp;(i=r,r=o,o=i),a&gt;h&amp;&amp;(i=h,h=a,a=i),this.helper.css({left:o,top:a,width:r-o,height:h-a}),this.selectees.each(function(){var i=t.data(this,"selectable-item"),l=!1;i&amp;&amp;i.element!==s.element[0]&amp;&amp;("touch"===n.tolerance?l=!(i.left&gt;r||o&gt;i.right||i.top&gt;h||a&gt;i.bottom):"fit"===n.tolerance&amp;&amp;(l=i.left&gt;o&amp;&amp;r&gt;i.right&amp;&amp;i.top&gt;a&amp;&amp;h&gt;i.bottom),l?(i.selected&amp;&amp;(i.$element.removeClass("ui-selected"),i.selected=!1),i.unselecting&amp;&amp;(i.$element.removeClass("ui-unselecting"),i.unselecting=!1),i.selecting||(i.$element.addClass("ui-selecting"),i.selecting=!0,s._trigger("selecting",e,{selecting:i.element}))):(i.selecting&amp;&amp;((e.metaKey||e.ctrlKey)&amp;&amp;i.startselected?(i.$element.removeClass("ui-selecting"),i.selecting=!1,i.$element.addClass("ui-selected"),i.selected=!0):(i.$element.removeClass("ui-selecting"),i.selecting=!1,i.startselected&amp;&amp;(i.$element.addClass("ui-unselecting"),i.unselecting=!0),s._trigger("unselecting",e,{unselecting:i.element}))),i.selected&amp;&amp;(e.metaKey||e.ctrlKey||i.startselected||(i.$element.removeClass("ui-selected"),i.selected=!1,i.$element.addClass("ui-unselecting"),i.unselecting=!0,s._trigger("unselecting",e,{unselecting:i.element})))))}),!1}},_mouseStop:function(e){var i=this;return this.dragged=!1,t(".ui-unselecting",this.element[0]).each(function(){var s=t.data(this,"selectable-item");s.$element.removeClass("ui-unselecting"),s.unselecting=!1,s.startselected=!1,i._trigger("unselected",e,{unselected:s.element})}),t(".ui-selecting",this.element[0]).each(function(){var s=t.data(this,"selectable-item");s.$element.removeClass("ui-selecting").addClass("ui-selected"),s.selecting=!1,s.selected=!0,s.startselected=!0,i._trigger("selected",e,{selected:s.element})}),this._trigger("stop",e),this.helper.remove(),!1}})}(jQuery),function(t){function e(t,e,i){return t&gt;e&amp;&amp;e+i&gt;t}function i(t){return/left|right/.test(t.css("float"))||/inline|table-cell/.test(t.css("display"))}t.widget("ui.sortable",t.ui.mouse,{version:"1.10.4",widgetEventPrefix:"sort",ready:!1,options:{appendTo:"parent",axis:!1,connectWith:!1,containment:!1,cursor:"auto",cursorAt:!1,dropOnEmpty:!0,forcePlaceholderSize:!1,forceHelperSize:!1,grid:!1,handle:!1,helper:"original",items:"&gt; *",opacity:!1,placeholder:!1,revert:!1,scroll:!0,scrollSensitivity:20,scrollSpeed:20,scope:"default",tolerance:"intersect",zIndex:1e3,activate:null,beforeStop:null,change:null,deactivate:null,out:null,over:null,receive:null,remove:null,sort:null,start:null,stop:null,update:null},_create:function(){var t=this.options;this.containerCache={},this.element.addClass("ui-sortable"),this.refresh(),this.floating=this.items.length?"x"===t.axis||i(this.items[0].item):!1,this.offset=this.element.offset(),this._mouseInit(),this.ready=!0},_destroy:function(){this.element.removeClass("ui-sortable ui-sortable-disabled"),this._mouseDestroy();for(var t=this.items.length-1;t&gt;=0;t--)this.items[t].item.removeData(this.widgetName+"-item");return this},_setOption:function(e,i){"disabled"===e?(this.options[e]=i,this.widget().toggleClass("ui-sortable-disabled",!!i)):t.Widget.prototype._setOption.apply(this,arguments)},_mouseCapture:function(e,i){var s=null,n=!1,o=this;return this.reverting?!1:this.options.disabled||"static"===this.options.type?!1:(this._refreshItems(e),t(e.target).parents().each(function(){return t.data(this,o.widgetName+"-item")===o?(s=t(this),!1):undefined}),t.data(e.target,o.widgetName+"-item")===o&amp;&amp;(s=t(e.target)),s?!this.options.handle||i||(t(this.options.handle,s).find("*").addBack().each(function(){this===e.target&amp;&amp;(n=!0)}),n)?(this.currentItem=s,this._removeCurrentsFromItems(),!0):!1:!1)},_mouseStart:function(e,i,s){var n,o,a=this.options;if(this.currentContainer=this,this.refreshPositions(),this.helper=this._createHelper(e),this._cacheHelperProportions(),this._cacheMargins(),this.scrollParent=this.helper.scrollParent(),this.offset=this.currentItem.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},t.extend(this.offset,{click:{left:e.pageX-this.offset.left,top:e.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.helper.css("position","absolute"),this.cssPosition=this.helper.css("position"),this.originalPosition=this._generatePosition(e),this.originalPageX=e.pageX,this.originalPageY=e.pageY,a.cursorAt&amp;&amp;this._adjustOffsetFromHelper(a.cursorAt),this.domPosition={prev:this.currentItem.prev()[0],parent:this.currentItem.parent()[0]},this.helper[0]!==this.currentItem[0]&amp;&amp;this.currentItem.hide(),this._createPlaceholder(),a.containment&amp;&amp;this._setContainment(),a.cursor&amp;&amp;"auto"!==a.cursor&amp;&amp;(o=this.document.find("body"),this.storedCursor=o.css("cursor"),o.css("cursor",a.cursor),this.storedStylesheet=t("&lt;style&gt;*{ cursor: "+a.cursor+" !important; }&lt;/style&gt;").appendTo(o)),a.opacity&amp;&amp;(this.helper.css("opacity")&amp;&amp;(this._storedOpacity=this.helper.css("opacity")),this.helper.css("opacity",a.opacity)),a.zIndex&amp;&amp;(this.helper.css("zIndex")&amp;&amp;(this._storedZIndex=this.helper.css("zIndex")),this.helper.css("zIndex",a.zIndex)),this.scrollParent[0]!==document&amp;&amp;"HTML"!==this.scrollParent[0].tagName&amp;&amp;(this.overflowOffset=this.scrollParent.offset()),this._trigger("start",e,this._uiHash()),this._preserveHelperProportions||this._cacheHelperProportions(),!s)for(n=this.containers.length-1;n&gt;=0;n--)this.containers[n]._trigger("activate",e,this._uiHash(this));return t.ui.ddmanager&amp;&amp;(t.ui.ddmanager.current=this),t.ui.ddmanager&amp;&amp;!a.dropBehaviour&amp;&amp;t.ui.ddmanager.prepareOffsets(this,e),this.dragging=!0,this.helper.addClass("ui-sortable-helper"),this._mouseDrag(e),!0},_mouseDrag:function(e){var i,s,n,o,a=this.options,r=!1;for(this.position=this._generatePosition(e),this.positionAbs=this._convertPositionTo("absolute"),this.lastPositionAbs||(this.lastPositionAbs=this.positionAbs),this.options.scroll&amp;&amp;(this.scrollParent[0]!==document&amp;&amp;"HTML"!==this.scrollParent[0].tagName?(this.overflowOffset.top+this.scrollParent[0].offsetHeight-e.pageY&lt;a.scrollSensitivity?this.scrollParent[0].scrollTop=r=this.scrollParent[0].scrollTop+a.scrollSpeed:e.pageY-this.overflowOffset.top&lt;a.scrollSensitivity&amp;&amp;(this.scrollParent[0].scrollTop=r=this.scrollParent[0].scrollTop-a.scrollSpeed),this.overflowOffset.left+this.scrollParent[0].offsetWidth-e.pageX&lt;a.scrollSensitivity?this.scrollParent[0].scrollLeft=r=this.scrollParent[0].scrollLeft+a.scrollSpeed:e.pageX-this.overflowOffset.left&lt;a.scrollSensitivity&amp;&amp;(this.scrollParent[0].scrollLeft=r=this.scrollParent[0].scrollLeft-a.scrollSpeed)):(e.pageY-t(document).scrollTop()&lt;a.scrollSensitivity?r=t(document).scrollTop(t(document).scrollTop()-a.scrollSpeed):t(window).height()-(e.pageY-t(document).scrollTop())&lt;a.scrollSensitivity&amp;&amp;(r=t(document).scrollTop(t(document).scrollTop()+a.scrollSpeed)),e.pageX-t(document).scrollLeft()&lt;a.scrollSensitivity?r=t(document).scrollLeft(t(document).scrollLeft()-a.scrollSpeed):t(window).width()-(e.pageX-t(document).scrollLeft())&lt;a.scrollSensitivity&amp;&amp;(r=t(document).scrollLeft(t(document).scrollLeft()+a.scrollSpeed))),r!==!1&amp;&amp;t.ui.ddmanager&amp;&amp;!a.dropBehaviour&amp;&amp;t.ui.ddmanager.prepareOffsets(this,e)),this.positionAbs=this._convertPositionTo("absolute"),this.options.axis&amp;&amp;"y"===this.options.axis||(this.helper[0].style.left=this.position.left+"px"),this.options.axis&amp;&amp;"x"===this.options.axis||(this.helper[0].style.top=this.position.top+"px"),i=this.items.length-1;i&gt;=0;i--)if(s=this.items[i],n=s.item[0],o=this._intersectsWithPointer(s),o&amp;&amp;s.instance===this.currentContainer&amp;&amp;n!==this.currentItem[0]&amp;&amp;this.placeholder[1===o?"next":"prev"]()[0]!==n&amp;&amp;!t.contains(this.placeholder[0],n)&amp;&amp;("semi-dynamic"===this.options.type?!t.contains(this.element[0],n):!0)){if(this.direction=1===o?"down":"up","pointer"!==this.options.tolerance&amp;&amp;!this._intersectsWithSides(s))break;this._rearrange(e,s),this._trigger("change",e,this._uiHash());break}return this._contactContainers(e),t.ui.ddmanager&amp;&amp;t.ui.ddmanager.drag(this,e),this._trigger("sort",e,this._uiHash()),this.lastPositionAbs=this.positionAbs,!1},_mouseStop:function(e,i){if(e){if(t.ui.ddmanager&amp;&amp;!this.options.dropBehaviour&amp;&amp;t.ui.ddmanager.drop(this,e),this.options.revert){var s=this,n=this.placeholder.offset(),o=this.options.axis,a={};o&amp;&amp;"x"!==o||(a.left=n.left-this.offset.parent.left-this.margins.left+(this.offsetParent[0]===document.body?0:this.offsetParent[0].scrollLeft)),o&amp;&amp;"y"!==o||(a.top=n.top-this.offset.parent.top-this.margins.top+(this.offsetParent[0]===document.body?0:this.offsetParent[0].scrollTop)),this.reverting=!0,t(this.helper).animate(a,parseInt(this.options.revert,10)||500,function(){s._clear(e)})}else this._clear(e,i);return!1}},cancel:function(){if(this.dragging){this._mouseUp({target:null}),"original"===this.options.helper?this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper"):this.currentItem.show();for(var e=this.containers.length-1;e&gt;=0;e--)this.containers[e]._trigger("deactivate",null,this._uiHash(this)),this.containers[e].containerCache.over&amp;&amp;(this.containers[e]._trigger("out",null,this._uiHash(this)),this.containers[e].containerCache.over=0)}return this.placeholder&amp;&amp;(this.placeholder[0].parentNode&amp;&amp;this.placeholder[0].parentNode.removeChild(this.placeholder[0]),"original"!==this.options.helper&amp;&amp;this.helper&amp;&amp;this.helper[0].parentNode&amp;&amp;this.helper.remove(),t.extend(this,{helper:null,dragging:!1,reverting:!1,_noFinalSort:null}),this.domPosition.prev?t(this.domPosition.prev).after(this.currentItem):t(this.domPosition.parent).prepend(this.currentItem)),this},serialize:function(e){var i=this._getItemsAsjQuery(e&amp;&amp;e.connected),s=[];return e=e||{},t(i).each(function(){var i=(t(e.item||this).attr(e.attribute||"id")||"").match(e.expression||/(.+)[\-=_](.+)/);i&amp;&amp;s.push((e.key||i[1]+"[]")+"="+(e.key&amp;&amp;e.expression?i[1]:i[2]))}),!s.length&amp;&amp;e.key&amp;&amp;s.push(e.key+"="),s.join("&amp;")},toArray:function(e){var i=this._getItemsAsjQuery(e&amp;&amp;e.connected),s=[];return e=e||{},i.each(function(){s.push(t(e.item||this).attr(e.attribute||"id")||"")}),s},_intersectsWith:function(t){var e=this.positionAbs.left,i=e+this.helperProportions.width,s=this.positionAbs.top,n=s+this.helperProportions.height,o=t.left,a=o+t.width,r=t.top,h=r+t.height,l=this.offset.click.top,c=this.offset.click.left,u="x"===this.options.axis||s+l&gt;r&amp;&amp;h&gt;s+l,d="y"===this.options.axis||e+c&gt;o&amp;&amp;a&gt;e+c,p=u&amp;&amp;d;return"pointer"===this.options.tolerance||this.options.forcePointerForContainers||"pointer"!==this.options.tolerance&amp;&amp;this.helperProportions[this.floating?"width":"height"]&gt;t[this.floating?"width":"height"]?p:e+this.helperProportions.width/2&gt;o&amp;&amp;a&gt;i-this.helperProportions.width/2&amp;&amp;s+this.helperProportions.height/2&gt;r&amp;&amp;h&gt;n-this.helperProportions.height/2},_intersectsWithPointer:function(t){var i="x"===this.options.axis||e(this.positionAbs.top+this.offset.click.top,t.top,t.height),s="y"===this.options.axis||e(this.positionAbs.left+this.offset.click.left,t.left,t.width),n=i&amp;&amp;s,o=this._getDragVerticalDirection(),a=this._getDragHorizontalDirection();return n?this.floating?a&amp;&amp;"right"===a||"down"===o?2:1:o&amp;&amp;("down"===o?2:1):!1},_intersectsWithSides:function(t){var i=e(this.positionAbs.top+this.offset.click.top,t.top+t.height/2,t.height),s=e(this.positionAbs.left+this.offset.click.left,t.left+t.width/2,t.width),n=this._getDragVerticalDirection(),o=this._getDragHorizontalDirection();return this.floating&amp;&amp;o?"right"===o&amp;&amp;s||"left"===o&amp;&amp;!s:n&amp;&amp;("down"===n&amp;&amp;i||"up"===n&amp;&amp;!i)},_getDragVerticalDirection:function(){var t=this.positionAbs.top-this.lastPositionAbs.top;return 0!==t&amp;&amp;(t&gt;0?"down":"up")},_getDragHorizontalDirection:function(){var t=this.positionAbs.left-this.lastPositionAbs.left;return 0!==t&amp;&amp;(t&gt;0?"right":"left")},refresh:function(t){return this._refreshItems(t),this.refreshPositions(),this},_connectWith:function(){var t=this.options;return t.connectWith.constructor===String?[t.connectWith]:t.connectWith},_getItemsAsjQuery:function(e){function i(){r.push(this)}var s,n,o,a,r=[],h=[],l=this._connectWith();if(l&amp;&amp;e)for(s=l.length-1;s&gt;=0;s--)for(o=t(l[s]),n=o.length-1;n&gt;=0;n--)a=t.data(o[n],this.widgetFullName),a&amp;&amp;a!==this&amp;&amp;!a.options.disabled&amp;&amp;h.push([t.isFunction(a.options.items)?a.options.items.call(a.element):t(a.options.items,a.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),a]);for(h.push([t.isFunction(this.options.items)?this.options.items.call(this.element,null,{options:this.options,item:this.currentItem}):t(this.options.items,this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),this]),s=h.length-1;s&gt;=0;s--)h[s][0].each(i);return t(r)},_removeCurrentsFromItems:function(){var e=this.currentItem.find(":data("+this.widgetName+"-item)");this.items=t.grep(this.items,function(t){for(var i=0;e.length&gt;i;i++)if(e[i]===t.item[0])return!1;return!0})},_refreshItems:function(e){this.items=[],this.containers=[this];var i,s,n,o,a,r,h,l,c=this.items,u=[[t.isFunction(this.options.items)?this.options.items.call(this.element[0],e,{item:this.currentItem}):t(this.options.items,this.element),this]],d=this._connectWith();if(d&amp;&amp;this.ready)for(i=d.length-1;i&gt;=0;i--)for(n=t(d[i]),s=n.length-1;s&gt;=0;s--)o=t.data(n[s],this.widgetFullName),o&amp;&amp;o!==this&amp;&amp;!o.options.disabled&amp;&amp;(u.push([t.isFunction(o.options.items)?o.options.items.call(o.element[0],e,{item:this.currentItem}):t(o.options.items,o.element),o]),this.containers.push(o));for(i=u.length-1;i&gt;=0;i--)for(a=u[i][1],r=u[i][0],s=0,l=r.length;l&gt;s;s++)h=t(r[s]),h.data(this.widgetName+"-item",a),c.push({item:h,instance:a,width:0,height:0,left:0,top:0})},refreshPositions:function(e){this.offsetParent&amp;&amp;this.helper&amp;&amp;(this.offset.parent=this._getParentOffset());var i,s,n,o;for(i=this.items.length-1;i&gt;=0;i--)s=this.items[i],s.instance!==this.currentContainer&amp;&amp;this.currentContainer&amp;&amp;s.item[0]!==this.currentItem[0]||(n=this.options.toleranceElement?t(this.options.toleranceElement,s.item):s.item,e||(s.width=n.outerWidth(),s.height=n.outerHeight()),o=n.offset(),s.left=o.left,s.top=o.top);if(this.options.custom&amp;&amp;this.options.custom.refreshContainers)this.options.custom.refreshContainers.call(this);else for(i=this.containers.length-1;i&gt;=0;i--)o=this.containers[i].element.offset(),this.containers[i].containerCache.left=o.left,this.containers[i].containerCache.top=o.top,this.containers[i].containerCache.width=this.containers[i].element.outerWidth(),this.containers[i].containerCache.height=this.containers[i].element.outerHeight();return this},_createPlaceholder:function(e){e=e||this;var i,s=e.options;s.placeholder&amp;&amp;s.placeholder.constructor!==String||(i=s.placeholder,s.placeholder={element:function(){var s=e.currentItem[0].nodeName.toLowerCase(),n=t("&lt;"+s+"&gt;",e.document[0]).addClass(i||e.currentItem[0].className+" ui-sortable-placeholder").removeClass("ui-sortable-helper");return"tr"===s?e.currentItem.children().each(function(){t("&lt;td&gt;&amp;#160;&lt;/td&gt;",e.document[0]).attr("colspan",t(this).attr("colspan")||1).appendTo(n)}):"img"===s&amp;&amp;n.attr("src",e.currentItem.attr("src")),i||n.css("visibility","hidden"),n},update:function(t,n){(!i||s.forcePlaceholderSize)&amp;&amp;(n.height()||n.height(e.currentItem.innerHeight()-parseInt(e.currentItem.css("paddingTop")||0,10)-parseInt(e.currentItem.css("paddingBottom")||0,10)),n.width()||n.width(e.currentItem.innerWidth()-parseInt(e.currentItem.css("paddingLeft")||0,10)-parseInt(e.currentItem.css("paddingRight")||0,10)))}}),e.placeholder=t(s.placeholder.element.call(e.element,e.currentItem)),e.currentItem.after(e.placeholder),s.placeholder.update(e,e.placeholder)},_contactContainers:function(s){var n,o,a,r,h,l,c,u,d,p,f=null,g=null;for(n=this.containers.length-1;n&gt;=0;n--)if(!t.contains(this.currentItem[0],this.containers[n].element[0]))if(this._intersectsWith(this.containers[n].containerCache)){if(f&amp;&amp;t.contains(this.containers[n].element[0],f.element[0]))continue;f=this.containers[n],g=n}else this.containers[n].containerCache.over&amp;&amp;(this.containers[n]._trigger("out",s,this._uiHash(this)),this.containers[n].containerCache.over=0);if(f)if(1===this.containers.length)this.containers[g].containerCache.over||(this.containers[g]._trigger("over",s,this._uiHash(this)),this.containers[g].containerCache.over=1);else{for(a=1e4,r=null,p=f.floating||i(this.currentItem),h=p?"left":"top",l=p?"width":"height",c=this.positionAbs[h]+this.offset.click[h],o=this.items.length-1;o&gt;=0;o--)t.contains(this.containers[g].element[0],this.items[o].item[0])&amp;&amp;this.items[o].item[0]!==this.currentItem[0]&amp;&amp;(!p||e(this.positionAbs.top+this.offset.click.top,this.items[o].top,this.items[o].height))&amp;&amp;(u=this.items[o].item.offset()[h],d=!1,Math.abs(u-c)&gt;Math.abs(u+this.items[o][l]-c)&amp;&amp;(d=!0,u+=this.items[o][l]),a&gt;Math.abs(u-c)&amp;&amp;(a=Math.abs(u-c),r=this.items[o],this.direction=d?"up":"down"));if(!r&amp;&amp;!this.options.dropOnEmpty)return;if(this.currentContainer===this.containers[g])return;r?this._rearrange(s,r,null,!0):this._rearrange(s,null,this.containers[g].element,!0),this._trigger("change",s,this._uiHash()),this.containers[g]._trigger("change",s,this._uiHash(this)),this.currentContainer=this.containers[g],this.options.placeholder.update(this.currentContainer,this.placeholder),this.containers[g]._trigger("over",s,this._uiHash(this)),this.containers[g].containerCache.over=1}},_createHelper:function(e){var i=this.options,s=t.isFunction(i.helper)?t(i.helper.apply(this.element[0],[e,this.currentItem])):"clone"===i.helper?this.currentItem.clone():this.currentItem;return s.parents("body").length||t("parent"!==i.appendTo?i.appendTo:this.currentItem[0].parentNode)[0].appendChild(s[0]),s[0]===this.currentItem[0]&amp;&amp;(this._storedCSS={width:this.currentItem[0].style.width,height:this.currentItem[0].style.height,position:this.currentItem.css("position"),top:this.currentItem.css("top"),left:this.currentItem.css("left")}),(!s[0].style.width||i.forceHelperSize)&amp;&amp;s.width(this.currentItem.width()),(!s[0].style.height||i.forceHelperSize)&amp;&amp;s.height(this.currentItem.height()),s},_adjustOffsetFromHelper:function(e){"string"==typeof e&amp;&amp;(e=e.split(" ")),t.isArray(e)&amp;&amp;(e={left:+e[0],top:+e[1]||0}),"left"in e&amp;&amp;(this.offset.click.left=e.left+this.margins.left),"right"in e&amp;&amp;(this.offset.click.left=this.helperProportions.width-e.right+this.margins.left),"top"in e&amp;&amp;(this.offset.click.top=e.top+this.margins.top),"bottom"in e&amp;&amp;(this.offset.click.top=this.helperProportions.height-e.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var e=this.offsetParent.offset();return"absolute"===this.cssPosition&amp;&amp;this.scrollParent[0]!==document&amp;&amp;t.contains(this.scrollParent[0],this.offsetParent[0])&amp;&amp;(e.left+=this.scrollParent.scrollLeft(),e.top+=this.scrollParent.scrollTop()),(this.offsetParent[0]===document.body||this.offsetParent[0].tagName&amp;&amp;"html"===this.offsetParent[0].tagName.toLowerCase()&amp;&amp;t.ui.ie)&amp;&amp;(e={top:0,left:0}),{top:e.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:e.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if("relative"===this.cssPosition){var t=this.currentItem.position();return{top:t.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:t.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.currentItem.css("marginLeft"),10)||0,top:parseInt(this.currentItem.css("marginTop"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var e,i,s,n=this.options;"parent"===n.containment&amp;&amp;(n.containment=this.helper[0].parentNode),("document"===n.containment||"window"===n.containment)&amp;&amp;(this.containment=[0-this.offset.relative.left-this.offset.parent.left,0-this.offset.relative.top-this.offset.parent.top,t("document"===n.containment?document:window).width()-this.helperProportions.width-this.margins.left,(t("document"===n.containment?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]),/^(document|window|parent)$/.test(n.containment)||(e=t(n.containment)[0],i=t(n.containment).offset(),s="hidden"!==t(e).css("overflow"),this.containment=[i.left+(parseInt(t(e).css("borderLeftWidth"),10)||0)+(parseInt(t(e).css("paddingLeft"),10)||0)-this.margins.left,i.top+(parseInt(t(e).css("borderTopWidth"),10)||0)+(parseInt(t(e).css("paddingTop"),10)||0)-this.margins.top,i.left+(s?Math.max(e.scrollWidth,e.offsetWidth):e.offsetWidth)-(parseInt(t(e).css("borderLeftWidth"),10)||0)-(parseInt(t(e).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left,i.top+(s?Math.max(e.scrollHeight,e.offsetHeight):e.offsetHeight)-(parseInt(t(e).css("borderTopWidth"),10)||0)-(parseInt(t(e).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top])},_convertPositionTo:function(e,i){i||(i=this.position);var s="absolute"===e?1:-1,n="absolute"!==this.cssPosition||this.scrollParent[0]!==document&amp;&amp;t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,o=/(html|body)/i.test(n[0].tagName);return{top:i.top+this.offset.relative.top*s+this.offset.parent.top*s-("fixed"===this.cssPosition?-this.scrollParent.scrollTop():o?0:n.scrollTop())*s,left:i.left+this.offset.relative.left*s+this.offset.parent.left*s-("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():o?0:n.scrollLeft())*s}},_generatePosition:function(e){var i,s,n=this.options,o=e.pageX,a=e.pageY,r="absolute"!==this.cssPosition||this.scrollParent[0]!==document&amp;&amp;t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,h=/(html|body)/i.test(r[0].tagName);return"relative"!==this.cssPosition||this.scrollParent[0]!==document&amp;&amp;this.scrollParent[0]!==this.offsetParent[0]||(this.offset.relative=this._getRelativeOffset()),this.originalPosition&amp;&amp;(this.containment&amp;&amp;(e.pageX-this.offset.click.left&lt;this.containment[0]&amp;&amp;(o=this.containment[0]+this.offset.click.left),e.pageY-this.offset.click.top&lt;this.containment[1]&amp;&amp;(a=this.containment[1]+this.offset.click.top),e.pageX-this.offset.click.left&gt;this.containment[2]&amp;&amp;(o=this.containment[2]+this.offset.click.left),e.pageY-this.offset.click.top&gt;this.containment[3]&amp;&amp;(a=this.containment[3]+this.offset.click.top)),n.grid&amp;&amp;(i=this.originalPageY+Math.round((a-this.originalPageY)/n.grid[1])*n.grid[1],a=this.containment?i-this.offset.click.top&gt;=this.containment[1]&amp;&amp;i-this.offset.click.top&lt;=this.containment[3]?i:i-this.offset.click.top&gt;=this.containment[1]?i-n.grid[1]:i+n.grid[1]:i,s=this.originalPageX+Math.round((o-this.originalPageX)/n.grid[0])*n.grid[0],o=this.containment?s-this.offset.click.left&gt;=this.containment[0]&amp;&amp;s-this.offset.click.left&lt;=this.containment[2]?s:s-this.offset.click.left&gt;=this.containment[0]?s-n.grid[0]:s+n.grid[0]:s)),{top:a-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+("fixed"===this.cssPosition?-this.scrollParent.scrollTop():h?0:r.scrollTop()),left:o-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():h?0:r.scrollLeft())}},_rearrange:function(t,e,i,s){i?i[0].appendChild(this.placeholder[0]):e.item[0].parentNode.insertBefore(this.placeholder[0],"down"===this.direction?e.item[0]:e.item[0].nextSibling),this.counter=this.counter?++this.counter:1;var n=this.counter;this._delay(function(){n===this.counter&amp;&amp;this.refreshPositions(!s)})},_clear:function(t,e){function i(t,e,i){return function(s){i._trigger(t,s,e._uiHash(e))}}this.reverting=!1;var s,n=[];if(!this._noFinalSort&amp;&amp;this.currentItem.parent().length&amp;&amp;this.placeholder.before(this.currentItem),this._noFinalSort=null,this.helper[0]===this.currentItem[0]){for(s in this._storedCSS)("auto"===this._storedCSS[s]||"static"===this._storedCSS[s])&amp;&amp;(this._storedCSS[s]="");this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")}else this.currentItem.show();for(this.fromOutside&amp;&amp;!e&amp;&amp;n.push(function(t){this._trigger("receive",t,this._uiHash(this.fromOutside))}),!this.fromOutside&amp;&amp;this.domPosition.prev===this.currentItem.prev().not(".ui-sortable-helper")[0]&amp;&amp;this.domPosition.parent===this.currentItem.parent()[0]||e||n.push(function(t){this._trigger("update",t,this._uiHash())}),this!==this.currentContainer&amp;&amp;(e||(n.push(function(t){this._trigger("remove",t,this._uiHash())}),n.push(function(t){return function(e){t._trigger("receive",e,this._uiHash(this))}}.call(this,this.currentContainer)),n.push(function(t){return function(e){t._trigger("update",e,this._uiHash(this))}}.call(this,this.currentContainer)))),s=this.containers.length-1;s&gt;=0;s--)e||n.push(i("deactivate",this,this.containers[s])),this.containers[s].containerCache.over&amp;&amp;(n.push(i("out",this,this.containers[s])),this.containers[s].containerCache.over=0);if(this.storedCursor&amp;&amp;(this.document.find("body").css("cursor",this.storedCursor),this.storedStylesheet.remove()),this._storedOpacity&amp;&amp;this.helper.css("opacity",this._storedOpacity),this._storedZIndex&amp;&amp;this.helper.css("zIndex","auto"===this._storedZIndex?"":this._storedZIndex),this.dragging=!1,this.cancelHelperRemoval){if(!e){for(this._trigger("beforeStop",t,this._uiHash()),s=0;n.length&gt;s;s++)n[s].call(this,t);this._trigger("stop",t,this._uiHash())}return this.fromOutside=!1,!1}if(e||this._trigger("beforeStop",t,this._uiHash()),this.placeholder[0].parentNode.removeChild(this.placeholder[0]),this.helper[0]!==this.currentItem[0]&amp;&amp;this.helper.remove(),this.helper=null,!e){for(s=0;n.length&gt;s;s++)n[s].call(this,t);this._trigger("stop",t,this._uiHash())}return this.fromOutside=!1,!0},_trigger:function(){t.Widget.prototype._trigger.apply(this,arguments)===!1&amp;&amp;this.cancel()},_uiHash:function(e){var i=e||this;return{helper:i.helper,placeholder:i.placeholder||t([]),position:i.position,originalPosition:i.originalPosition,offset:i.positionAbs,item:i.currentItem,sender:e?e.element:null}}})}(jQuery),function(t,e){var i="ui-effects-";t.effects={effect:{}},function(t,e){function i(t,e,i){var s=u[e.type]||{};return null==t?i||!e.def?null:e.def:(t=s.floor?~~t:parseFloat(t),isNaN(t)?e.def:s.mod?(t+s.mod)%s.mod:0&gt;t?0:t&gt;s.max?s.max:t)}function s(i){var s=l(),n=s._rgba=[];return i=i.toLowerCase(),f(h,function(t,o){var a,r=o.re.exec(i),h=r&amp;&amp;o.parse(r),l=o.space||"rgba";return h?(a=s[l](h),s[c[l].cache]=a[c[l].cache],n=s._rgba=a._rgba,!1):e}),n.length?("0,0,0,0"===n.join()&amp;&amp;t.extend(n,o.transparent),s):o[i]}function n(t,e,i){return i=(i+1)%1,1&gt;6*i?t+6*(e-t)*i:1&gt;2*i?e:2&gt;3*i?t+6*(e-t)*(2/3-i):t}var o,a="backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor",r=/^([\-+])=\s*(\d+\.?\d*)/,h=[{re:/rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,parse:function(t){return[t[1],t[2],t[3],t[4]]}},{re:/rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,parse:function(t){return[2.55*t[1],2.55*t[2],2.55*t[3],t[4]]}},{re:/#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,parse:function(t){return[parseInt(t[1],16),parseInt(t[2],16),parseInt(t[3],16)]}},{re:/#([a-f0-9])([a-f0-9])([a-f0-9])/,parse:function(t){return[parseInt(t[1]+t[1],16),parseInt(t[2]+t[2],16),parseInt(t[3]+t[3],16)]}},{re:/hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,space:"hsla",parse:function(t){return[t[1],t[2]/100,t[3]/100,t[4]]}}],l=t.Color=function(e,i,s,n){return new t.Color.fn.parse(e,i,s,n)},c={rgba:{props:{red:{idx:0,type:"byte"},green:{idx:1,type:"byte"},blue:{idx:2,type:"byte"}}},hsla:{props:{hue:{idx:0,type:"degrees"},saturation:{idx:1,type:"percent"},lightness:{idx:2,type:"percent"}}}},u={"byte":{floor:!0,max:255},percent:{max:1},degrees:{mod:360,floor:!0}},d=l.support={},p=t("&lt;p&gt;")[0],f=t.each;p.style.cssText="background-color:rgba(1,1,1,.5)",d.rgba=p.style.backgroundColor.indexOf("rgba")&gt;-1,f(c,function(t,e){e.cache="_"+t,e.props.alpha={idx:3,type:"percent",def:1}}),l.fn=t.extend(l.prototype,{parse:function(n,a,r,h){if(n===e)return this._rgba=[null,null,null,null],this;(n.jquery||n.nodeType)&amp;&amp;(n=t(n).css(a),a=e);var u=this,d=t.type(n),p=this._rgba=[];return a!==e&amp;&amp;(n=[n,a,r,h],d="array"),"string"===d?this.parse(s(n)||o._default):"array"===d?(f(c.rgba.props,function(t,e){p[e.idx]=i(n[e.idx],e)}),this):"object"===d?(n instanceof l?f(c,function(t,e){n[e.cache]&amp;&amp;(u[e.cache]=n[e.cache].slice())}):f(c,function(e,s){var o=s.cache;f(s.props,function(t,e){if(!u[o]&amp;&amp;s.to){if("alpha"===t||null==n[t])return;u[o]=s.to(u._rgba)}u[o][e.idx]=i(n[t],e,!0)}),u[o]&amp;&amp;0&gt;t.inArray(null,u[o].slice(0,3))&amp;&amp;(u[o][3]=1,s.from&amp;&amp;(u._rgba=s.from(u[o])))}),this):e},is:function(t){var i=l(t),s=!0,n=this;return f(c,function(t,o){var a,r=i[o.cache];return r&amp;&amp;(a=n[o.cache]||o.to&amp;&amp;o.to(n._rgba)||[],f(o.props,function(t,i){return null!=r[i.idx]?s=r[i.idx]===a[i.idx]:e})),s}),s},_space:function(){var t=[],e=this;return f(c,function(i,s){e[s.cache]&amp;&amp;t.push(i)}),t.pop()},transition:function(t,e){var s=l(t),n=s._space(),o=c[n],a=0===this.alpha()?l("transparent"):this,r=a[o.cache]||o.to(a._rgba),h=r.slice();return s=s[o.cache],f(o.props,function(t,n){var o=n.idx,a=r[o],l=s[o],c=u[n.type]||{};null!==l&amp;&amp;(null===a?h[o]=l:(c.mod&amp;&amp;(l-a&gt;c.mod/2?a+=c.mod:a-l&gt;c.mod/2&amp;&amp;(a-=c.mod)),h[o]=i((l-a)*e+a,n)))}),this[n](h)},blend:function(e){if(1===this._rgba[3])return this;var i=this._rgba.slice(),s=i.pop(),n=l(e)._rgba;return l(t.map(i,function(t,e){return(1-s)*n[e]+s*t}))},toRgbaString:function(){var e="rgba(",i=t.map(this._rgba,function(t,e){return null==t?e&gt;2?1:0:t});return 1===i[3]&amp;&amp;(i.pop(),e="rgb("),e+i.join()+")"},toHslaString:function(){var e="hsla(",i=t.map(this.hsla(),function(t,e){return null==t&amp;&amp;(t=e&gt;2?1:0),e&amp;&amp;3&gt;e&amp;&amp;(t=Math.round(100*t)+"%"),t});return 1===i[3]&amp;&amp;(i.pop(),e="hsl("),e+i.join()+")"},toHexString:function(e){var i=this._rgba.slice(),s=i.pop();return e&amp;&amp;i.push(~~(255*s)),"#"+t.map(i,function(t){return t=(t||0).toString(16),1===t.length?"0"+t:t}).join("")},toString:function(){return 0===this._rgba[3]?"transparent":this.toRgbaString()}}),l.fn.parse.prototype=l.fn,c.hsla.to=function(t){if(null==t[0]||null==t[1]||null==t[2])return[null,null,null,t[3]];var e,i,s=t[0]/255,n=t[1]/255,o=t[2]/255,a=t[3],r=Math.max(s,n,o),h=Math.min(s,n,o),l=r-h,c=r+h,u=.5*c;return e=h===r?0:s===r?60*(n-o)/l+360:n===r?60*(o-s)/l+120:60*(s-n)/l+240,i=0===l?0:.5&gt;=u?l/c:l/(2-c),[Math.round(e)%360,i,u,null==a?1:a]},c.hsla.from=function(t){if(null==t[0]||null==t[1]||null==t[2])return[null,null,null,t[3]];var e=t[0]/360,i=t[1],s=t[2],o=t[3],a=.5&gt;=s?s*(1+i):s+i-s*i,r=2*s-a;return[Math.round(255*n(r,a,e+1/3)),Math.round(255*n(r,a,e)),Math.round(255*n(r,a,e-1/3)),o]},f(c,function(s,n){var o=n.props,a=n.cache,h=n.to,c=n.from;l.fn[s]=function(s){if(h&amp;&amp;!this[a]&amp;&amp;(this[a]=h(this._rgba)),s===e)return this[a].slice();var n,r=t.type(s),u="array"===r||"object"===r?s:arguments,d=this[a].slice();return f(o,function(t,e){var s=u["object"===r?t:e.idx];null==s&amp;&amp;(s=d[e.idx]),d[e.idx]=i(s,e)}),c?(n=l(c(d)),n[a]=d,n):l(d)},f(o,function(e,i){l.fn[e]||(l.fn[e]=function(n){var o,a=t.type(n),h="alpha"===e?this._hsla?"hsla":"rgba":s,l=this[h](),c=l[i.idx];return"undefined"===a?c:("function"===a&amp;&amp;(n=n.call(this,c),a=t.type(n)),null==n&amp;&amp;i.empty?this:("string"===a&amp;&amp;(o=r.exec(n),o&amp;&amp;(n=c+parseFloat(o[2])*("+"===o[1]?1:-1))),l[i.idx]=n,this[h](l)))})})}),l.hook=function(e){var i=e.split(" ");f(i,function(e,i){t.cssHooks[i]={set:function(e,n){var o,a,r="";if("transparent"!==n&amp;&amp;("string"!==t.type(n)||(o=s(n)))){if(n=l(o||n),!d.rgba&amp;&amp;1!==n._rgba[3]){for(a="backgroundColor"===i?e.parentNode:e;(""===r||"transparent"===r)&amp;&amp;a&amp;&amp;a.style;)try{r=t.css(a,"backgroundColor"),a=a.parentNode}catch(h){}n=n.blend(r&amp;&amp;"transparent"!==r?r:"_default")}n=n.toRgbaString()}try{e.style[i]=n}catch(h){}}},t.fx.step[i]=function(e){e.colorInit||(e.start=l(e.elem,i),e.end=l(e.end),e.colorInit=!0),t.cssHooks[i].set(e.elem,e.start.transition(e.end,e.pos))}})},l.hook(a),t.cssHooks.borderColor={expand:function(t){var e={};return f(["Top","Right","Bottom","Left"],function(i,s){e["border"+s+"Color"]=t}),e}},o=t.Color.names={aqua:"#00ffff",black:"#000000",blue:"#0000ff",fuchsia:"#ff00ff",gray:"#808080",green:"#008000",lime:"#00ff00",maroon:"#800000",navy:"#000080",olive:"#808000",purple:"#800080",red:"#ff0000",silver:"#c0c0c0",teal:"#008080",white:"#ffffff",yellow:"#ffff00",transparent:[null,null,null,0],_default:"#ffffff"}}(jQuery),function(){function i(e){var i,s,n=e.ownerDocument.defaultView?e.ownerDocument.defaultView.getComputedStyle(e,null):e.currentStyle,o={};if(n&amp;&amp;n.length&amp;&amp;n[0]&amp;&amp;n[n[0]])for(s=n.length;s--;)i=n[s],"string"==typeof n[i]&amp;&amp;(o[t.camelCase(i)]=n[i]);else for(i in n)"string"==typeof n[i]&amp;&amp;(o[i]=n[i]);return o}function s(e,i){var s,n,a={};for(s in i)n=i[s],e[s]!==n&amp;&amp;(o[s]||(t.fx.step[s]||!isNaN(parseFloat(n)))&amp;&amp;(a[s]=n));return a}var n=["add","remove","toggle"],o={border:1,borderBottom:1,borderColor:1,borderLeft:1,borderRight:1,borderTop:1,borderWidth:1,margin:1,padding:1};t.each(["borderLeftStyle","borderRightStyle","borderBottomStyle","borderTopStyle"],function(e,i){t.fx.step[i]=function(t){("none"!==t.end&amp;&amp;!t.setAttr||1===t.pos&amp;&amp;!t.setAttr)&amp;&amp;(jQuery.style(t.elem,i,t.end),t.setAttr=!0)}}),t.fn.addBack||(t.fn.addBack=function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}),t.effects.animateClass=function(e,o,a,r){var h=t.speed(o,a,r);return this.queue(function(){var o,a=t(this),r=a.attr("class")||"",l=h.children?a.find("*").addBack():a;l=l.map(function(){var e=t(this);return{el:e,start:i(this)}}),o=function(){t.each(n,function(t,i){e[i]&amp;&amp;a[i+"Class"](e[i])})},o(),l=l.map(function(){return this.end=i(this.el[0]),this.diff=s(this.start,this.end),this}),a.attr("class",r),l=l.map(function(){var e=this,i=t.Deferred(),s=t.extend({},h,{queue:!1,complete:function(){i.resolve(e)}});return this.el.animate(this.diff,s),i.promise()}),t.when.apply(t,l.get()).done(function(){o(),t.each(arguments,function(){var e=this.el;t.each(this.diff,function(t){e.css(t,"")})}),h.complete.call(a[0])})})},t.fn.extend({addClass:function(e){return function(i,s,n,o){return s?t.effects.animateClass.call(this,{add:i},s,n,o):e.apply(this,arguments)}}(t.fn.addClass),removeClass:function(e){return function(i,s,n,o){return arguments.length&gt;1?t.effects.animateClass.call(this,{remove:i},s,n,o):e.apply(this,arguments)}}(t.fn.removeClass),toggleClass:function(i){return function(s,n,o,a,r){return"boolean"==typeof n||n===e?o?t.effects.animateClass.call(this,n?{add:s}:{remove:s},o,a,r):i.apply(this,arguments):t.effects.animateClass.call(this,{toggle:s},n,o,a)}}(t.fn.toggleClass),switchClass:function(e,i,s,n,o){return t.effects.animateClass.call(this,{add:i,remove:e},s,n,o)}})}(),function(){function s(e,i,s,n){return t.isPlainObject(e)&amp;&amp;(i=e,e=e.effect),e={effect:e},null==i&amp;&amp;(i={}),t.isFunction(i)&amp;&amp;(n=i,s=null,i={}),("number"==typeof i||t.fx.speeds[i])&amp;&amp;(n=s,s=i,i={}),t.isFunction(s)&amp;&amp;(n=s,s=null),i&amp;&amp;t.extend(e,i),s=s||i.duration,e.duration=t.fx.off?0:"number"==typeof s?s:s in t.fx.speeds?t.fx.speeds[s]:t.fx.speeds._default,e.complete=n||i.complete,e}function n(e){return!e||"number"==typeof e||t.fx.speeds[e]?!0:"string"!=typeof e||t.effects.effect[e]?t.isFunction(e)?!0:"object"!=typeof e||e.effect?!1:!0:!0}t.extend(t.effects,{version:"1.10.4",save:function(t,e){for(var s=0;e.length&gt;s;s++)null!==e[s]&amp;&amp;t.data(i+e[s],t[0].style[e[s]])},restore:function(t,s){var n,o;for(o=0;s.length&gt;o;o++)null!==s[o]&amp;&amp;(n=t.data(i+s[o]),n===e&amp;&amp;(n=""),t.css(s[o],n))},setMode:function(t,e){return"toggle"===e&amp;&amp;(e=t.is(":hidden")?"show":"hide"),e},getBaseline:function(t,e){var i,s;switch(t[0]){case"top":i=0;break;case"middle":i=.5;break;case"bottom":i=1;break;default:i=t[0]/e.height}switch(t[1]){case"left":s=0;break;case"center":s=.5;break;case"right":s=1;break;default:s=t[1]/e.width}return{x:s,y:i}},createWrapper:function(e){if(e.parent().is(".ui-effects-wrapper"))return e.parent();var i={width:e.outerWidth(!0),height:e.outerHeight(!0),"float":e.css("float")},s=t("&lt;div&gt;&lt;/div&gt;").addClass("ui-effects-wrapper").css({fontSize:"100%",background:"transparent",border:"none",margin:0,padding:0}),n={width:e.width(),height:e.height()},o=document.activeElement;try{o.id}catch(a){o=document.body}return e.wrap(s),(e[0]===o||t.contains(e[0],o))&amp;&amp;t(o).focus(),s=e.parent(),"static"===e.css("position")?(s.css({position:"relative"}),e.css({position:"relative"})):(t.extend(i,{position:e.css("position"),zIndex:e.css("z-index")}),t.each(["top","left","bottom","right"],function(t,s){i[s]=e.css(s),isNaN(parseInt(i[s],10))&amp;&amp;(i[s]="auto")}),e.css({position:"relative",top:0,left:0,right:"auto",bottom:"auto"})),e.css(n),s.css(i).show()},removeWrapper:function(e){var i=document.activeElement;return e.parent().is(".ui-effects-wrapper")&amp;&amp;(e.parent().replaceWith(e),(e[0]===i||t.contains(e[0],i))&amp;&amp;t(i).focus()),e},setTransition:function(e,i,s,n){return n=n||{},t.each(i,function(t,i){var o=e.cssUnit(i);o[0]&gt;0&amp;&amp;(n[i]=o[0]*s+o[1])}),n}}),t.fn.extend({effect:function(){function e(e){function s(){t.isFunction(o)&amp;&amp;o.call(n[0]),t.isFunction(e)&amp;&amp;e()}var n=t(this),o=i.complete,r=i.mode;(n.is(":hidden")?"hide"===r:"show"===r)?(n[r](),s()):a.call(n[0],i,s)}var i=s.apply(this,arguments),n=i.mode,o=i.queue,a=t.effects.effect[i.effect];return t.fx.off||!a?n?this[n](i.duration,i.complete):this.each(function(){i.complete&amp;&amp;i.complete.call(this)}):o===!1?this.each(e):this.queue(o||"fx",e)},show:function(t){return function(e){if(n(e))return t.apply(this,arguments);var i=s.apply(this,arguments);return i.mode="show",this.effect.call(this,i)}}(t.fn.show),hide:function(t){return function(e){if(n(e))return t.apply(this,arguments);var i=s.apply(this,arguments);return i.mode="hide",this.effect.call(this,i)}}(t.fn.hide),toggle:function(t){return function(e){if(n(e)||"boolean"==typeof e)return t.apply(this,arguments);var i=s.apply(this,arguments);return i.mode="toggle",this.effect.call(this,i)}}(t.fn.toggle),cssUnit:function(e){var i=this.css(e),s=[];return t.each(["em","px","%","pt"],function(t,e){i.indexOf(e)&gt;0&amp;&amp;(s=[parseFloat(i),e])}),s}})}(),function(){var e={};t.each(["Quad","Cubic","Quart","Quint","Expo"],function(t,i){e[i]=function(e){return Math.pow(e,t+2)}}),t.extend(e,{Sine:function(t){return 1-Math.cos(t*Math.PI/2)},Circ:function(t){return 1-Math.sqrt(1-t*t)},Elastic:function(t){return 0===t||1===t?t:-Math.pow(2,8*(t-1))*Math.sin((80*(t-1)-7.5)*Math.PI/15)},Back:function(t){return t*t*(3*t-2)},Bounce:function(t){for(var e,i=4;((e=Math.pow(2,--i))-1)/11&gt;t;);return 1/Math.pow(4,3-i)-7.5625*Math.pow((3*e-2)/22-t,2)}}),t.each(e,function(e,i){t.easing["easeIn"+e]=i,t.easing["easeOut"+e]=function(t){return 1-i(1-t)},t.easing["easeInOut"+e]=function(t){return.5&gt;t?i(2*t)/2:1-i(-2*t+2)/2}})}()}(jQuery),function(t){var e=0,i={},s={};i.height=i.paddingTop=i.paddingBottom=i.borderTopWidth=i.borderBottomWidth="hide",s.height=s.paddingTop=s.paddingBottom=s.borderTopWidth=s.borderBottomWidth="show",t.widget("ui.accordion",{version:"1.10.4",options:{active:0,animate:{},collapsible:!1,event:"click",header:"&gt; li &gt; :first-child,&gt; :not(li):even",heightStyle:"auto",icons:{activeHeader:"ui-icon-triangle-1-s",header:"ui-icon-triangle-1-e"},activate:null,beforeActivate:null},_create:function(){var e=this.options;this.prevShow=this.prevHide=t(),this.element.addClass("ui-accordion ui-widget ui-helper-reset").attr("role","tablist"),e.collapsible||e.active!==!1&amp;&amp;null!=e.active||(e.active=0),this._processPanels(),0&gt;e.active&amp;&amp;(e.active+=this.headers.length),this._refresh()},_getCreateEventData:function(){return{header:this.active,panel:this.active.length?this.active.next():t(),content:this.active.length?this.active.next():t()}},_createIcons:function(){var e=this.options.icons;e&amp;&amp;(t("&lt;span&gt;").addClass("ui-accordion-header-icon ui-icon "+e.header).prependTo(this.headers),this.active.children(".ui-accordion-header-icon").removeClass(e.header).addClass(e.activeHeader),this.headers.addClass("ui-accordion-icons"))},_destroyIcons:function(){this.headers.removeClass("ui-accordion-icons").children(".ui-accordion-header-icon").remove()},_destroy:function(){var t;this.element.removeClass("ui-accordion ui-widget ui-helper-reset").removeAttr("role"),this.headers.removeClass("ui-accordion-header ui-accordion-header-active ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top").removeAttr("role").removeAttr("aria-expanded").removeAttr("aria-selected").removeAttr("aria-controls").removeAttr("tabIndex").each(function(){/^ui-accordion/.test(this.id)&amp;&amp;this.removeAttribute("id")}),this._destroyIcons(),t=this.headers.next().css("display","").removeAttr("role").removeAttr("aria-hidden").removeAttr("aria-labelledby").removeClass("ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-state-disabled").each(function(){/^ui-accordion/.test(this.id)&amp;&amp;this.removeAttribute("id")}),"content"!==this.options.heightStyle&amp;&amp;t.css("height","")},_setOption:function(t,e){return"active"===t?(this._activate(e),undefined):("event"===t&amp;&amp;(this.options.event&amp;&amp;this._off(this.headers,this.options.event),this._setupEvents(e)),this._super(t,e),"collapsible"!==t||e||this.options.active!==!1||this._activate(0),"icons"===t&amp;&amp;(this._destroyIcons(),e&amp;&amp;this._createIcons()),"disabled"===t&amp;&amp;this.headers.add(this.headers.next()).toggleClass("ui-state-disabled",!!e),undefined)},_keydown:function(e){if(!e.altKey&amp;&amp;!e.ctrlKey){var i=t.ui.keyCode,s=this.headers.length,n=this.headers.index(e.target),o=!1;switch(e.keyCode){case i.RIGHT:case i.DOWN:o=this.headers[(n+1)%s];break;case i.LEFT:case i.UP:o=this.headers[(n-1+s)%s];break;case i.SPACE:case i.ENTER:this._eventHandler(e);break;case i.HOME:o=this.headers[0];break;case i.END:o=this.headers[s-1]}o&amp;&amp;(t(e.target).attr("tabIndex",-1),t(o).attr("tabIndex",0),o.focus(),e.preventDefault())}},_panelKeyDown:function(e){e.keyCode===t.ui.keyCode.UP&amp;&amp;e.ctrlKey&amp;&amp;t(e.currentTarget).prev().focus()},refresh:function(){var e=this.options;this._processPanels(),e.active===!1&amp;&amp;e.collapsible===!0||!this.headers.length?(e.active=!1,this.active=t()):e.active===!1?this._activate(0):this.active.length&amp;&amp;!t.contains(this.element[0],this.active[0])?this.headers.length===this.headers.find(".ui-state-disabled").length?(e.active=!1,this.active=t()):this._activate(Math.max(0,e.active-1)):e.active=this.headers.index(this.active),this._destroyIcons(),this._refresh()},_processPanels:function(){this.headers=this.element.find(this.options.header).addClass("ui-accordion-header ui-helper-reset ui-state-default ui-corner-all"),this.headers.next().addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom").filter(":not(.ui-accordion-content-active)").hide()},_refresh:function(){var i,s=this.options,n=s.heightStyle,o=this.element.parent(),a=this.accordionId="ui-accordion-"+(this.element.attr("id")||++e);this.active=this._findActive(s.active).addClass("ui-accordion-header-active ui-state-active ui-corner-top").removeClass("ui-corner-all"),this.active.next().addClass("ui-accordion-content-active").show(),this.headers.attr("role","tab").each(function(e){var i=t(this),s=i.attr("id"),n=i.next(),o=n.attr("id");s||(s=a+"-header-"+e,i.attr("id",s)),o||(o=a+"-panel-"+e,n.attr("id",o)),i.attr("aria-controls",o),n.attr("aria-labelledby",s)}).next().attr("role","tabpanel"),this.headers.not(this.active).attr({"aria-selected":"false","aria-expanded":"false",tabIndex:-1}).next().attr({"aria-hidden":"true"}).hide(),this.active.length?this.active.attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0}).next().attr({"aria-hidden":"false"}):this.headers.eq(0).attr("tabIndex",0),this._createIcons(),this._setupEvents(s.event),"fill"===n?(i=o.height(),this.element.siblings(":visible").each(function(){var e=t(this),s=e.css("position");"absolute"!==s&amp;&amp;"fixed"!==s&amp;&amp;(i-=e.outerHeight(!0))}),this.headers.each(function(){i-=t(this).outerHeight(!0)}),this.headers.next().each(function(){t(this).height(Math.max(0,i-t(this).innerHeight()+t(this).height()))}).css("overflow","auto")):"auto"===n&amp;&amp;(i=0,this.headers.next().each(function(){i=Math.max(i,t(this).css("height","").height())}).height(i))},_activate:function(e){var i=this._findActive(e)[0];i!==this.active[0]&amp;&amp;(i=i||this.active[0],this._eventHandler({target:i,currentTarget:i,preventDefault:t.noop}))},_findActive:function(e){return"number"==typeof e?this.headers.eq(e):t()},_setupEvents:function(e){var i={keydown:"_keydown"};e&amp;&amp;t.each(e.split(" "),function(t,e){i[e]="_eventHandler"}),this._off(this.headers.add(this.headers.next())),this._on(this.headers,i),this._on(this.headers.next(),{keydown:"_panelKeyDown"}),this._hoverable(this.headers),this._focusable(this.headers)},_eventHandler:function(e){var i=this.options,s=this.active,n=t(e.currentTarget),o=n[0]===s[0],a=o&amp;&amp;i.collapsible,r=a?t():n.next(),h=s.next(),l={oldHeader:s,oldPanel:h,newHeader:a?t():n,newPanel:r};e.preventDefault(),o&amp;&amp;!i.collapsible||this._trigger("beforeActivate",e,l)===!1||(i.active=a?!1:this.headers.index(n),this.active=o?t():n,this._toggle(l),s.removeClass("ui-accordion-header-active ui-state-active"),i.icons&amp;&amp;s.children(".ui-accordion-header-icon").removeClass(i.icons.activeHeader).addClass(i.icons.header),o||(n.removeClass("ui-corner-all").addClass("ui-accordion-header-active ui-state-active ui-corner-top"),i.icons&amp;&amp;n.children(".ui-accordion-header-icon").removeClass(i.icons.header).addClass(i.icons.activeHeader),n.next().addClass("ui-accordion-content-active")))},_toggle:function(e){var i=e.newPanel,s=this.prevShow.length?this.prevShow:e.oldPanel;this.prevShow.add(this.prevHide).stop(!0,!0),this.prevShow=i,this.prevHide=s,this.options.animate?this._animate(i,s,e):(s.hide(),i.show(),this._toggleComplete(e)),s.attr({"aria-hidden":"true"}),s.prev().attr("aria-selected","false"),i.length&amp;&amp;s.length?s.prev().attr({tabIndex:-1,"aria-expanded":"false"}):i.length&amp;&amp;this.headers.filter(function(){return 0===t(this).attr("tabIndex")}).attr("tabIndex",-1),i.attr("aria-hidden","false").prev().attr({"aria-selected":"true",tabIndex:0,"aria-expanded":"true"})},_animate:function(t,e,n){var o,a,r,h=this,l=0,c=t.length&amp;&amp;(!e.length||t.index()&lt;e.index()),u=this.options.animate||{},d=c&amp;&amp;u.down||u,p=function(){h._toggleComplete(n)};return"number"==typeof d&amp;&amp;(r=d),"string"==typeof d&amp;&amp;(a=d),a=a||d.easing||u.easing,r=r||d.duration||u.duration,e.length?t.length?(o=t.show().outerHeight(),e.animate(i,{duration:r,easing:a,step:function(t,e){e.now=Math.round(t)}}),t.hide().animate(s,{duration:r,easing:a,complete:p,step:function(t,i){i.now=Math.round(t),"height"!==i.prop?l+=i.now:"content"!==h.options.heightStyle&amp;&amp;(i.now=Math.round(o-e.outerHeight()-l),l=0)}}),undefined):e.animate(i,r,a,p):t.animate(s,r,a,p)},_toggleComplete:function(t){var e=t.oldPanel;e.removeClass("ui-accordion-content-active").prev().removeClass("ui-corner-top").addClass("ui-corner-all"),e.length&amp;&amp;(e.parent()[0].className=e.parent()[0].className),this._trigger("activate",null,t)}})}(jQuery),function(t){t.widget("ui.autocomplete",{version:"1.10.4",defaultElement:"&lt;input&gt;",options:{appendTo:null,autoFocus:!1,delay:300,minLength:1,position:{my:"left top",at:"left bottom",collision:"none"},source:null,change:null,close:null,focus:null,open:null,response:null,search:null,select:null},requestIndex:0,pending:0,_create:function(){var e,i,s,n=this.element[0].nodeName.toLowerCase(),o="textarea"===n,a="input"===n;this.isMultiLine=o?!0:a?!1:this.element.prop("isContentEditable"),this.valueMethod=this.element[o||a?"val":"text"],this.isNewMenu=!0,this.element.addClass("ui-autocomplete-input").attr("autocomplete","off"),this._on(this.element,{keydown:function(n){if(this.element.prop("readOnly"))return e=!0,s=!0,i=!0,undefined;e=!1,s=!1,i=!1;var o=t.ui.keyCode;switch(n.keyCode){case o.PAGE_UP:e=!0,this._move("previousPage",n);break;case o.PAGE_DOWN:e=!0,this._move("nextPage",n);break;case o.UP:e=!0,this._keyEvent("previous",n);break;case o.DOWN:e=!0,this._keyEvent("next",n);break;case o.ENTER:case o.NUMPAD_ENTER:this.menu.active&amp;&amp;(e=!0,n.preventDefault(),this.menu.select(n));break;case o.TAB:this.menu.active&amp;&amp;this.menu.select(n);break;case o.ESCAPE:this.menu.element.is(":visible")&amp;&amp;(this._value(this.term),this.close(n),n.preventDefault());break;default:i=!0,this._searchTimeout(n)}},keypress:function(s){if(e)return e=!1,(!this.isMultiLine||this.menu.element.is(":visible"))&amp;&amp;s.preventDefault(),undefined;if(!i){var n=t.ui.keyCode;switch(s.keyCode){case n.PAGE_UP:this._move("previousPage",s);break;case n.PAGE_DOWN:this._move("nextPage",s);break;case n.UP:this._keyEvent("previous",s);break;case n.DOWN:this._keyEvent("next",s)}}},input:function(t){return s?(s=!1,t.preventDefault(),undefined):(this._searchTimeout(t),undefined)},focus:function(){this.selectedItem=null,this.previous=this._value()},blur:function(t){return this.cancelBlur?(delete this.cancelBlur,undefined):(clearTimeout(this.searching),this.close(t),this._change(t),undefined)}}),this._initSource(),this.menu=t("&lt;ul&gt;").addClass("ui-autocomplete ui-front").appendTo(this._appendTo()).menu({role:null}).hide().data("ui-menu"),this._on(this.menu.element,{mousedown:function(e){e.preventDefault(),this.cancelBlur=!0,this._delay(function(){delete this.cancelBlur});var i=this.menu.element[0];t(e.target).closest(".ui-menu-item").length||this._delay(function(){var e=this;this.document.one("mousedown",function(s){s.target===e.element[0]||s.target===i||t.contains(i,s.target)||e.close()})})},menufocus:function(e,i){if(this.isNewMenu&amp;&amp;(this.isNewMenu=!1,e.originalEvent&amp;&amp;/^mouse/.test(e.originalEvent.type)))return this.menu.blur(),this.document.one("mousemove",function(){t(e.target).trigger(e.originalEvent)}),undefined;var s=i.item.data("ui-autocomplete-item");!1!==this._trigger("focus",e,{item:s})?e.originalEvent&amp;&amp;/^key/.test(e.originalEvent.type)&amp;&amp;this._value(s.value):this.liveRegion.text(s.value)},menuselect:function(t,e){var i=e.item.data("ui-autocomplete-item"),s=this.previous;this.element[0]!==this.document[0].activeElement&amp;&amp;(this.element.focus(),this.previous=s,this._delay(function(){this.previous=s,this.selectedItem=i})),!1!==this._trigger("select",t,{item:i})&amp;&amp;this._value(i.value),this.term=this._value(),this.close(t),this.selectedItem=i}}),this.liveRegion=t("&lt;span&gt;",{role:"status","aria-live":"polite"}).addClass("ui-helper-hidden-accessible").insertBefore(this.element),this._on(this.window,{beforeunload:function(){this.element.removeAttr("autocomplete")}})},_destroy:function(){clearTimeout(this.searching),this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete"),this.menu.element.remove(),this.liveRegion.remove()},_setOption:function(t,e){this._super(t,e),"source"===t&amp;&amp;this._initSource(),"appendTo"===t&amp;&amp;this.menu.element.appendTo(this._appendTo()),"disabled"===t&amp;&amp;e&amp;&amp;this.xhr&amp;&amp;this.xhr.abort()},_appendTo:function(){var e=this.options.appendTo;return e&amp;&amp;(e=e.jquery||e.nodeType?t(e):this.document.find(e).eq(0)),e||(e=this.element.closest(".ui-front")),e.length||(e=this.document[0].body),e},_initSource:function(){var e,i,s=this;t.isArray(this.options.source)?(e=this.options.source,this.source=function(i,s){s(t.ui.autocomplete.filter(e,i.term))}):"string"==typeof this.options.source?(i=this.options.source,this.source=function(e,n){s.xhr&amp;&amp;s.xhr.abort(),s.xhr=t.ajax({url:i,data:e,dataType:"json",success:function(t){n(t)},error:function(){n([])}})}):this.source=this.options.source},_searchTimeout:function(t){clearTimeout(this.searching),this.searching=this._delay(function(){this.term!==this._value()&amp;&amp;(this.selectedItem=null,this.search(null,t))},this.options.delay)},search:function(t,e){return t=null!=t?t:this._value(),this.term=this._value(),t.length&lt;this.options.minLength?this.close(e):this._trigger("search",e)!==!1?this._search(t):undefined},_search:function(t){this.pending++,this.element.addClass("ui-autocomplete-loading"),this.cancelSearch=!1,this.source({term:t},this._response())},_response:function(){var e=++this.requestIndex;return t.proxy(function(t){e===this.requestIndex&amp;&amp;this.__response(t),this.pending--,this.pending||this.element.removeClass("ui-autocomplete-loading")},this)},__response:function(t){t&amp;&amp;(t=this._normalize(t)),this._trigger("response",null,{content:t}),!this.options.disabled&amp;&amp;t&amp;&amp;t.length&amp;&amp;!this.cancelSearch?(this._suggest(t),this._trigger("open")):this._close()},close:function(t){this.cancelSearch=!0,this._close(t)},_close:function(t){this.menu.element.is(":visible")&amp;&amp;(this.menu.element.hide(),this.menu.blur(),this.isNewMenu=!0,this._trigger("close",t))},_change:function(t){this.previous!==this._value()&amp;&amp;this._trigger("change",t,{item:this.selectedItem})},_normalize:function(e){return e.length&amp;&amp;e[0].label&amp;&amp;e[0].value?e:t.map(e,function(e){return"string"==typeof e?{label:e,value:e}:t.extend({label:e.label||e.value,value:e.value||e.label},e)})},_suggest:function(e){var i=this.menu.element.empty();this._renderMenu(i,e),this.isNewMenu=!0,this.menu.refresh(),i.show(),this._resizeMenu(),i.position(t.extend({of:this.element},this.options.position)),this.options.autoFocus&amp;&amp;this.menu.next()},_resizeMenu:function(){var t=this.menu.element;t.outerWidth(Math.max(t.width("").outerWidth()+1,this.element.outerWidth()))},_renderMenu:function(e,i){var s=this;t.each(i,function(t,i){s._renderItemData(e,i)})},_renderItemData:function(t,e){return this._renderItem(t,e).data("ui-autocomplete-item",e)},_renderItem:function(e,i){return t("&lt;li&gt;").append(t("&lt;a&gt;").text(i.label)).appendTo(e)},_move:function(t,e){return this.menu.element.is(":visible")?this.menu.isFirstItem()&amp;&amp;/^previous/.test(t)||this.menu.isLastItem()&amp;&amp;/^next/.test(t)?(this._value(this.term),this.menu.blur(),undefined):(this.menu[t](e),undefined):(this.search(null,e),undefined)},widget:function(){return this.menu.element},_value:function(){return this.valueMethod.apply(this.element,arguments)},_keyEvent:function(t,e){(!this.isMultiLine||this.menu.element.is(":visible"))&amp;&amp;(this._move(t,e),e.preventDefault())}}),t.extend(t.ui.autocomplete,{escapeRegex:function(t){return t.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&amp;")},filter:function(e,i){var s=RegExp(t.ui.autocomplete.escapeRegex(i),"i");return t.grep(e,function(t){return s.test(t.label||t.value||t)})}}),t.widget("ui.autocomplete",t.ui.autocomplete,{options:{messages:{noResults:"No search results.",results:function(t){return t+(t&gt;1?" results are":" result is")+" available, use up and down arrow keys to navigate."}}},__response:function(t){var e;this._superApply(arguments),this.options.disabled||this.cancelSearch||(e=t&amp;&amp;t.length?this.options.messages.results(t.length):this.options.messages.noResults,this.liveRegion.text(e))}})}(jQuery),function(t){var e,i="ui-button ui-widget ui-state-default ui-corner-all",s="ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only",n=function(){var e=t(this);setTimeout(function(){e.find(":ui-button").button("refresh")},1)},o=function(e){var i=e.name,s=e.form,n=t([]);return i&amp;&amp;(i=i.replace(/''/g,"\\''"),n=s?t(s).find("[name=''"+i+"'']"):t("[name=''"+i+"'']",e.ownerDocument).filter(function(){return!this.form})),n};t.widget("ui.button",{version:"1.10.4",defaultElement:"&lt;button&gt;",options:{disabled:null,text:!0,label:null,icons:{primary:null,secondary:null}},_create:function(){this.element.closest("form").unbind("reset"+this.eventNamespace).bind("reset"+this.eventNamespace,n),"boolean"!=typeof this.options.disabled?this.options.disabled=!!this.element.prop("disabled"):this.element.prop("disabled",this.options.disabled),this._determineButtonType(),this.hasTitle=!!this.buttonElement.attr("title");var s=this,a=this.options,r="checkbox"===this.type||"radio"===this.type,h=r?"":"ui-state-active";null===a.label&amp;&amp;(a.label="input"===this.type?this.buttonElement.val():this.buttonElement.html()),this._hoverable(this.buttonElement),this.buttonElement.addClass(i).attr("role","button").bind("mouseenter"+this.eventNamespace,function(){a.disabled||this===e&amp;&amp;t(this).addClass("ui-state-active")}).bind("mouseleave"+this.eventNamespace,function(){a.disabled||t(this).removeClass(h)}).bind("click"+this.eventNamespace,function(t){a.disabled&amp;&amp;(t.preventDefault(),t.stopImmediatePropagation())}),this._on({focus:function(){this.buttonElement.addClass("ui-state-focus")},blur:function(){this.buttonElement.removeClass("ui-state-focus")}}),r&amp;&amp;this.element.bind("change"+this.eventNamespace,function(){s.refresh()}),"checkbox"===this.type?this.buttonElement.bind("click"+this.eventNamespace,function(){return a.disabled?!1:undefined}):"radio"===this.type?this.buttonElement.bind("click"+this.eventNamespace,function(){if(a.disabled)return!1;t(this).addClass("ui-state-active"),s.buttonElement.attr("aria-pressed","true");var e=s.element[0];o(e).not(e).map(function(){return t(this).button("widget")[0]}).removeClass("ui-state-active").attr("aria-pressed","false")}):(this.buttonElement.bind("mousedown"+this.eventNamespace,function(){return a.disabled?!1:(t(this).addClass("ui-state-active"),e=this,s.document.one("mouseup",function(){e=null}),undefined)}).bind("mouseup"+this.eventNamespace,function(){return a.disabled?!1:(t(this).removeClass("ui-state-active"),undefined)}).bind("keydown"+this.eventNamespace,function(e){return a.disabled?!1:((e.keyCode===t.ui.keyCode.SPACE||e.keyCode===t.ui.keyCode.ENTER)&amp;&amp;t(this).addClass("ui-state-active"),undefined)}).bind("keyup"+this.eventNamespace+" blur"+this.eventNamespace,function(){t(this).removeClass("ui-state-active")}),this.buttonElement.is("a")&amp;&amp;this.buttonElement.keyup(function(e){e.keyCode===t.ui.keyCode.SPACE&amp;&amp;t(this).click()})),this._setOption("disabled",a.disabled),this._resetButton()},_determineButtonType:function(){var t,e,i;this.type=this.element.is("[type=checkbox]")?"checkbox":this.element.is("[type=radio]")?"radio":this.element.is("input")?"input":"button","checkbox"===this.type||"radio"===this.type?(t=this.element.parents().last(),e="label[for=''"+this.element.attr("id")+"'']",this.buttonElement=t.find(e),this.buttonElement.length||(t=t.length?t.siblings():this.element.siblings(),this.buttonElement=t.filter(e),this.buttonElement.length||(this.buttonElement=t.find(e))),this.element.addClass("ui-helper-hidden-accessible"),i=this.element.is(":checked"),i&amp;&amp;this.buttonElement.addClass("ui-state-active"),this.buttonElement.prop("aria-pressed",i)):this.buttonElement=this.element},widget:function(){return this.buttonElement},_destroy:function(){this.element.removeClass("ui-helper-hidden-accessible"),this.buttonElement.removeClass(i+" ui-state-active "+s).removeAttr("role").removeAttr("aria-pressed").html(this.buttonElement.find(".ui-button-text").html()),this.hasTitle||this.buttonElement.removeAttr("title")},_setOption:function(t,e){return this._super(t,e),"disabled"===t?(this.element.prop("disabled",!!e),e&amp;&amp;this.buttonElement.removeClass("ui-state-focus"),undefined):(this._resetButton(),undefined)},refresh:function(){var e=this.element.is("input, button")?this.element.is(":disabled"):this.element.hasClass("ui-button-disabled");e!==this.options.disabled&amp;&amp;this._setOption("disabled",e),"radio"===this.type?o(this.element[0]).each(function(){t(this).is(":checked")?t(this).button("widget").addClass("ui-state-active").attr("aria-pressed","true"):t(this).button("widget").removeClass("ui-state-active").attr("aria-pressed","false")}):"checkbox"===this.type&amp;&amp;(this.element.is(":checked")?this.buttonElement.addClass("ui-state-active").attr("aria-pressed","true"):this.buttonElement.removeClass("ui-state-active").attr("aria-pressed","false"))},_resetButton:function(){if("input"===this.type)return this.options.label&amp;&amp;this.element.val(this.options.label),undefined;var e=this.buttonElement.removeClass(s),i=t("&lt;span&gt;&lt;/span&gt;",this.document[0]).addClass("ui-button-text").html(this.options.label).appendTo(e.empty()).text(),n=this.options.icons,o=n.primary&amp;&amp;n.secondary,a=[];n.primary||n.secondary?(this.options.text&amp;&amp;a.push("ui-button-text-icon"+(o?"s":n.primary?"-primary":"-secondary")),n.primary&amp;&amp;e.prepend("&lt;span class=''ui-button-icon-primary ui-icon "+n.primary+"''&gt;&lt;/span&gt;"),n.secondary&amp;&amp;e.append("&lt;span class=''ui-button-icon-secondary ui-icon "+n.secondary+"''&gt;&lt;/span&gt;"),this.options.text||(a.push(o?"ui-button-icons-only":"ui-button-icon-only"),this.hasTitle||e.attr("title",t.trim(i)))):a.push("ui-button-text-only"),e.addClass(a.join(" "))}}),t.widget("ui.buttonset",{version:"1.10.4",options:{items:"button, input[type=button], input[type=submit], input[type=reset], input[type=checkbox], input[type=radio], a, :data(ui-button)"},_create:function(){this.element.addClass("ui-buttonset")},_init:function(){this.refresh()},_setOption:function(t,e){"disabled"===t&amp;&amp;this.buttons.button("option",t,e),this._super(t,e)},refresh:function(){var e="rtl"===this.element.css("direction");this.buttons=this.element.find(this.options.items).filter(":ui-button").button("refresh").end().not(":ui-button").button().end().map(function(){return t(this).button("widget")[0]}).removeClass("ui-corner-all ui-corner-left ui-corner-right").filter(":first").addClass(e?"ui-corner-right":"ui-corner-left").end().filter(":last").addClass(e?"ui-corner-left":"ui-corner-right").end().end()},_destroy:function(){this.element.removeClass("ui-buttonset"),this.buttons.map(function(){return t(this).button("widget")[0]}).removeClass("ui-corner-left ui-corner-right").end().button("destroy")}})}(jQuery),function(t,e){function i(){this._curInst=null,this._keyEvent=!1,this._disabledInputs=[],this._datepickerShowing=!1,this._inDialog=!1,this._mainDivId="ui-datepicker-div",this._inlineClass="ui-datepicker-inline",this._appendClass="ui-datepicker-append",this._triggerClass="ui-datepicker-trigger",this._dialogClass="ui-datepicker-dialog",this._disableClass="ui-datepicker-disabled",this._unselectableClass="ui-datepicker-unselectable",this._currentClass="ui-datepicker-current-day",this._dayOverClass="ui-datepicker-days-cell-over",this.regional=[],this.regional[""]={closeText:"Done",prevText:"Prev",nextText:"Next",currentText:"Today",monthNames:["January","February","March","April","May","June","July","August","September","October","November","December"],monthNamesShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],dayNames:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],dayNamesShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],dayNamesMin:["Su","Mo","Tu","We","Th","Fr","Sa"],weekHeader:"Wk",dateFormat:"mm/dd/yy",firstDay:0,isRTL:!1,showMonthAfterYear:!1,yearSuffix:""},this._defaults={showOn:"focus",showAnim:"fadeIn",showOptions:{},defaultDate:null,appendText:"",buttonText:"...",buttonImage:"",buttonImageOnly:!1,hideIfNoPrevNext:!1,navigationAsDateFormat:!1,gotoCurrent:!1,changeMonth:!1,changeYear:!1,yearRange:"c-10:c+10",showOtherMonths:!1,selectOtherMonths:!1,showWeek:!1,calculateWeek:this.iso8601Week,shortYearCutoff:"+10",minDate:null,maxDate:null,duration:"fast",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:"",altFormat:"",constrainInput:!0,showButtonPanel:!1,autoSize:!1,disabled:!1},t.extend(this._defaults,this.regional[""]),this.dpDiv=s(t("&lt;div id=''"+this._mainDivId+"'' class=''ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all''&gt;&lt;/div&gt;"))}function s(e){var i="button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";return e.delegate(i,"mouseout",function(){t(this).removeClass("ui-state-hover"),-1!==this.className.indexOf("ui-datepicker-prev")&amp;&amp;t(this).removeClass("ui-datepicker-prev-hover"),-1!==this.className.indexOf("ui-datepicker-next")&amp;&amp;t(this).removeClass("ui-datepicker-next-hover")}).delegate(i,"mouseover",function(){t.datepicker._isDisabledDatepicker(o.inline?e.parent()[0]:o.input[0])||(t(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"),t(this).addClass("ui-state-hover"),-1!==this.className.indexOf("ui-datepicker-prev")&amp;&amp;t(this).addClass("ui-datepicker-prev-hover"),-1!==this.className.indexOf("ui-datepicker-next")&amp;&amp;t(this).addClass("ui-datepicker-next-hover"))})}function n(e,i){t.extend(e,i);for(var s in i)null==i[s]&amp;&amp;(e[s]=i[s]);return e}t.extend(t.ui,{datepicker:{version:"1.10.4"}});var o,a="datepicker";t.extend(i.prototype,{markerClassName:"hasDatepicker",maxRows:4,_widgetDatepicker:function(){return this.dpDiv},setDefaults:function(t){return n(this._defaults,t||{}),this},_attachDatepicker:function(e,i){var s,n,o;s=e.nodeName.toLowerCase(),n="div"===s||"span"===s,e.id||(this.uuid+=1,e.id="dp"+this.uuid),o=this._newInst(t(e),n),o.settings=t.extend({},i||{}),"input"===s?this._connectDatepicker(e,o):n&amp;&amp;this._inlineDatepicker(e,o)},_newInst:function(e,i){var n=e[0].id.replace(/([^A-Za-z0-9_\-])/g,"\\\\$1");return{id:n,input:e,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:i,dpDiv:i?s(t("&lt;div class=''"+this._inlineClass+" ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all''&gt;&lt;/div&gt;")):this.dpDiv}},_connectDatepicker:function(e,i){var s=t(e);i.append=t([]),i.trigger=t([]),s.hasClass(this.markerClassName)||(this._attachments(s,i),s.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp),this._autoSize(i),t.data(e,a,i),i.settings.disabled&amp;&amp;this._disableDatepicker(e))},_attachments:function(e,i){var s,n,o,a=this._get(i,"appendText"),r=this._get(i,"isRTL");i.append&amp;&amp;i.append.remove(),a&amp;&amp;(i.append=t("&lt;span class=''"+this._appendClass+"''&gt;"+a+"&lt;/span&gt;"),e[r?"before":"after"](i.append)),e.unbind("focus",this._showDatepicker),i.trigger&amp;&amp;i.trigger.remove(),s=this._get(i,"showOn"),("focus"===s||"both"===s)&amp;&amp;e.focus(this._showDatepicker),("button"===s||"both"===s)&amp;&amp;(n=this._get(i,"buttonText"),o=this._get(i,"buttonImage"),i.trigger=t(this._get(i,"buttonImageOnly")?t("&lt;img/&gt;").addClass(this._triggerClass).attr({src:o,alt:n,title:n}):t("&lt;button type=''button''&gt;&lt;/button&gt;").addClass(this._triggerClass).html(o?t("&lt;img/&gt;").attr({src:o,alt:n,title:n}):n)),e[r?"before":"after"](i.trigger),i.trigger.click(function(){return t.datepicker._datepickerShowing&amp;&amp;t.datepicker._lastInput===e[0]?t.datepicker._hideDatepicker():t.datepicker._datepickerShowing&amp;&amp;t.datepicker._lastInput!==e[0]?(t.datepicker._hideDatepicker(),t.datepicker._showDatepicker(e[0])):t.datepicker._showDatepicker(e[0]),!1}))},_autoSize:function(t){if(this._get(t,"autoSize")&amp;&amp;!t.inline){var e,i,s,n,o=new Date(2009,11,20),a=this._get(t,"dateFormat");a.match(/[DM]/)&amp;&amp;(e=function(t){for(i=0,s=0,n=0;t.length&gt;n;n++)t[n].length&gt;i&amp;&amp;(i=t[n].length,s=n);return s},o.setMonth(e(this._get(t,a.match(/MM/)?"monthNames":"monthNamesShort"))),o.setDate(e(this._get(t,a.match(/DD/)?"dayNames":"dayNamesShort"))+20-o.getDay())),t.input.attr("size",this._formatDate(t,o).length)}},_inlineDatepicker:function(e,i){var s=t(e);s.hasClass(this.markerClassName)||(s.addClass(this.markerClassName).append(i.dpDiv),t.data(e,a,i),this._setDate(i,this._getDefaultDate(i),!0),this._updateDatepicker(i),this._updateAlternate(i),i.settings.disabled&amp;&amp;this._disableDatepicker(e),i.dpDiv.css("display","block"))},_dialogDatepicker:function(e,i,s,o,r){var h,l,c,u,d,p=this._dialogInst;return p||(this.uuid+=1,h="dp"+this.uuid,this._dialogInput=t("&lt;input type=''text'' id=''"+h+"'' style=''position: absolute; top: -100px; width: 0px;''/&gt;"),this._dialogInput.keydown(this._doKeyDown),t("body").append(this._dialogInput),p=this._dialogInst=this._newInst(this._dialogInput,!1),p.settings={},t.data(this._dialogInput[0],a,p)),n(p.settings,o||{}),i=i&amp;&amp;i.constructor===Date?this._formatDate(p,i):i,this._dialogInput.val(i),this._pos=r?r.length?r:[r.pageX,r.pageY]:null,this._pos||(l=document.documentElement.clientWidth,c=document.documentElement.clientHeight,u=document.documentElement.scrollLeft||document.body.scrollLeft,d=document.documentElement.scrollTop||document.body.scrollTop,this._pos=[l/2-100+u,c/2-150+d]),this._dialogInput.css("left",this._pos[0]+20+"px").css("top",this._pos[1]+"px"),p.settings.onSelect=s,this._inDialog=!0,this.dpDiv.addClass(this._dialogClass),this._showDatepicker(this._dialogInput[0]),t.blockUI&amp;&amp;t.blockUI(this.dpDiv),t.data(this._dialogInput[0],a,p),this},_destroyDatepicker:function(e){var i,s=t(e),n=t.data(e,a);s.hasClass(this.markerClassName)&amp;&amp;(i=e.nodeName.toLowerCase(),t.removeData(e,a),"input"===i?(n.append.remove(),n.trigger.remove(),s.removeClass(this.markerClassName).unbind("focus",this._showDatepicker).unbind("keydown",this._doKeyDown).unbind("keypress",this._doKeyPress).unbind("keyup",this._doKeyUp)):("div"===i||"span"===i)&amp;&amp;s.removeClass(this.markerClassName).empty())},_enableDatepicker:function(e){var i,s,n=t(e),o=t.data(e,a);n.hasClass(this.markerClassName)&amp;&amp;(i=e.nodeName.toLowerCase(),"input"===i?(e.disabled=!1,o.trigger.filter("button").each(function(){this.disabled=!1}).end().filter("img").css({opacity:"1.0",cursor:""})):("div"===i||"span"===i)&amp;&amp;(s=n.children("."+this._inlineClass),s.children().removeClass("ui-state-disabled"),s.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!1)),this._disabledInputs=t.map(this._disabledInputs,function(t){return t===e?null:t}))},_disableDatepicker:function(e){var i,s,n=t(e),o=t.data(e,a);n.hasClass(this.markerClassName)&amp;&amp;(i=e.nodeName.toLowerCase(),"input"===i?(e.disabled=!0,o.trigger.filter("button").each(function(){this.disabled=!0}).end().filter("img").css({opacity:"0.5",cursor:"default"})):("div"===i||"span"===i)&amp;&amp;(s=n.children("."+this._inlineClass),s.children().addClass("ui-state-disabled"),s.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!0)),this._disabledInputs=t.map(this._disabledInputs,function(t){return t===e?null:t}),this._disabledInputs[this._disabledInputs.length]=e)},_isDisabledDatepicker:function(t){if(!t)return!1;for(var e=0;this._disabledInputs.length&gt;e;e++)if(this._disabledInputs[e]===t)return!0;return!1},_getInst:function(e){try{return t.data(e,a)}catch(i){throw"Missing instance data for this datepicker"}},_optionDatepicker:function(i,s,o){var a,r,h,l,c=this._getInst(i);return 2===arguments.length&amp;&amp;"string"==typeof s?"defaults"===s?t.extend({},t.datepicker._defaults):c?"all"===s?t.extend({},c.settings):this._get(c,s):null:(a=s||{},"string"==typeof s&amp;&amp;(a={},a[s]=o),c&amp;&amp;(this._curInst===c&amp;&amp;this._hideDatepicker(),r=this._getDateDatepicker(i,!0),h=this._getMinMaxDate(c,"min"),l=this._getMinMaxDate(c,"max"),n(c.settings,a),null!==h&amp;&amp;a.dateFormat!==e&amp;&amp;a.minDate===e&amp;&amp;(c.settings.minDate=this._formatDate(c,h)),null!==l&amp;&amp;a.dateFormat!==e&amp;&amp;a.maxDate===e&amp;&amp;(c.settings.maxDate=this._formatDate(c,l)),"disabled"in a&amp;&amp;(a.disabled?this._disableDatepicker(i):this._enableDatepicker(i)),this._attachments(t(i),c),this._autoSize(c),this._setDate(c,r),this._updateAlternate(c),this._updateDatepicker(c)),e)},_changeDatepicker:function(t,e,i){this._optionDatepicker(t,e,i)},_refreshDatepicker:function(t){var e=this._getInst(t);e&amp;&amp;this._updateDatepicker(e)},_setDateDatepicker:function(t,e){var i=this._getInst(t);i&amp;&amp;(this._setDate(i,e),this._updateDatepicker(i),this._updateAlternate(i))},_getDateDatepicker:function(t,e){var i=this._getInst(t);return i&amp;&amp;!i.inline&amp;&amp;this._setDateFromField(i,e),i?this._getDate(i):null},_doKeyDown:function(e){var i,s,n,o=t.datepicker._getInst(e.target),a=!0,r=o.dpDiv.is(".ui-datepicker-rtl");if(o._keyEvent=!0,t.datepicker._datepickerShowing)switch(e.keyCode){case 9:t.datepicker._hideDatepicker(),a=!1;break;case 13:return n=t("td."+t.datepicker._dayOverClass+":not(."+t.datepicker._currentClass+")",o.dpDiv),n[0]&amp;&amp;t.datepicker._selectDay(e.target,o.selectedMonth,o.selectedYear,n[0]),i=t.datepicker._get(o,"onSelect"),i?(s=t.datepicker._formatDate(o),i.apply(o.input?o.input[0]:null,[s,o])):t.datepicker._hideDatepicker(),!1;case 27:t.datepicker._hideDatepicker();break;case 33:t.datepicker._adjustDate(e.target,e.ctrlKey?-t.datepicker._get(o,"stepBigMonths"):-t.datepicker._get(o,"stepMonths"),"M");break;case 34:t.datepicker._adjustDate(e.target,e.ctrlKey?+t.datepicker._get(o,"stepBigMonths"):+t.datepicker._get(o,"stepMonths"),"M");break;case 35:(e.ctrlKey||e.metaKey)&amp;&amp;t.datepicker._clearDate(e.target),a=e.ctrlKey||e.metaKey;break;case 36:(e.ctrlKey||e.metaKey)&amp;&amp;t.datepicker._gotoToday(e.target),a=e.ctrlKey||e.metaKey;break;case 37:(e.ctrlKey||e.metaKey)&amp;&amp;t.datepicker._adjustDate(e.target,r?1:-1,"D"),a=e.ctrlKey||e.metaKey,e.originalEvent.altKey&amp;&amp;t.datepicker._adjustDate(e.target,e.ctrlKey?-t.datepicker._get(o,"stepBigMonths"):-t.datepicker._get(o,"stepMonths"),"M");break;case 38:(e.ctrlKey||e.metaKey)&amp;&amp;t.datepicker._adjustDate(e.target,-7,"D"),a=e.ctrlKey||e.metaKey;break;case 39:(e.ctrlKey||e.metaKey)&amp;&amp;t.datepicker._adjustDate(e.target,r?-1:1,"D"),a=e.ctrlKey||e.metaKey,e.originalEvent.altKey&amp;&amp;t.datepicker._adjustDate(e.target,e.ctrlKey?+t.datepicker._get(o,"stepBigMonths"):+t.datepicker._get(o,"stepMonths"),"M");break;case 40:(e.ctrlKey||e.metaKey)&amp;&amp;t.datepicker._adjustDate(e.target,7,"D"),a=e.ctrlKey||e.metaKey;break;default:a=!1}else 36===e.keyCode&amp;&amp;e.ctrlKey?t.datepicker._showDatepicker(this):a=!1;a&amp;&amp;(e.preventDefault(),e.stopPropagation())},_doKeyPress:function(i){var s,n,o=t.datepicker._getInst(i.target);return t.datepicker._get(o,"constrainInput")?(s=t.datepicker._possibleChars(t.datepicker._get(o,"dateFormat")),n=String.fromCharCode(null==i.charCode?i.keyCode:i.charCode),i.ctrlKey||i.metaKey||" "&gt;n||!s||s.indexOf(n)&gt;-1):e},_doKeyUp:function(e){var i,s=t.datepicker._getInst(e.target);if(s.input.val()!==s.lastVal)try{i=t.datepicker.parseDate(t.datepicker._get(s,"dateFormat"),s.input?s.input.val():null,t.datepicker._getFormatConfig(s)),i&amp;&amp;(t.datepicker._setDateFromField(s),t.datepicker._updateAlternate(s),t.datepicker._updateDatepicker(s))}catch(n){}return!0},_showDatepicker:function(e){if(e=e.target||e,"input"!==e.nodeName.toLowerCase()&amp;&amp;(e=t("input",e.parentNode)[0]),!t.datepicker._isDisabledDatepicker(e)&amp;&amp;t.datepicker._lastInput!==e){var i,s,o,a,r,h,l;i=t.datepicker._getInst(e),t.datepicker._curInst&amp;&amp;t.datepicker._curInst!==i&amp;&amp;(t.datepicker._curInst.dpDiv.stop(!0,!0),i&amp;&amp;t.datepicker._datepickerShowing&amp;&amp;t.datepicker._hideDatepicker(t.datepicker._curInst.input[0])),s=t.datepicker._get(i,"beforeShow"),o=s?s.apply(e,[e,i]):{},o!==!1&amp;&amp;(n(i.settings,o),i.lastVal=null,t.datepicker._lastInput=e,t.datepicker._setDateFromField(i),t.datepicker._inDialog&amp;&amp;(e.value=""),t.datepicker._pos||(t.datepicker._pos=t.datepicker._findPos(e),t.datepicker._pos[1]+=e.offsetHeight),a=!1,t(e).parents().each(function(){return a|="fixed"===t(this).css("position"),!a}),r={left:t.datepicker._pos[0],top:t.datepicker._pos[1]},t.datepicker._pos=null,i.dpDiv.empty(),i.dpDiv.css({position:"absolute",display:"block",top:"-1000px"}),t.datepicker._updateDatepicker(i),r=t.datepicker._checkOffset(i,r,a),i.dpDiv.css({position:t.datepicker._inDialog&amp;&amp;t.blockUI?"static":a?"fixed":"absolute",display:"none",left:r.left+"px",top:r.top+"px"}),i.inline||(h=t.datepicker._get(i,"showAnim"),l=t.datepicker._get(i,"duration"),i.dpDiv.zIndex(t(e).zIndex()+1),t.datepicker._datepickerShowing=!0,t.effects&amp;&amp;t.effects.effect[h]?i.dpDiv.show(h,t.datepicker._get(i,"showOptions"),l):i.dpDiv[h||"show"](h?l:null),t.datepicker._shouldFocusInput(i)&amp;&amp;i.input.focus(),t.datepicker._curInst=i))}},_updateDatepicker:function(e){this.maxRows=4,o=e,e.dpDiv.empty().append(this._generateHTML(e)),this._attachHandlers(e),e.dpDiv.find("."+this._dayOverClass+" a").mouseover();var i,s=this._getNumberOfMonths(e),n=s[1],a=17;e.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""),n&gt;1&amp;&amp;e.dpDiv.addClass("ui-datepicker-multi-"+n).css("width",a*n+"em"),e.dpDiv[(1!==s[0]||1!==s[1]?"add":"remove")+"Class"]("ui-datepicker-multi"),e.dpDiv[(this._get(e,"isRTL")?"add":"remove")+"Class"]("ui-datepicker-rtl"),e===t.datepicker._curInst&amp;&amp;t.datepicker._datepickerShowing&amp;&amp;t.datepicker._shouldFocusInput(e)&amp;&amp;e.input.focus(),e.yearshtml&amp;&amp;(i=e.yearshtml,setTimeout(function(){i===e.yearshtml&amp;&amp;e.yearshtml&amp;&amp;e.dpDiv.find("select.ui-datepicker-year:first").replaceWith(e.yearshtml),i=e.yearshtml=null},0))},_shouldFocusInput:function(t){return t.input&amp;&amp;t.input.is(":visible")&amp;&amp;!t.input.is(":disabled")&amp;&amp;!t.input.is(":focus")},_checkOffset:function(e,i,s){var n=e.dpDiv.outerWidth(),o=e.dpDiv.outerHeight(),a=e.input?e.input.outerWidth():0,r=e.input?e.input.outerHeight():0,h=document.documentElement.clientWidth+(s?0:t(document).scrollLeft()),l=document.documentElement.clientHeight+(s?0:t(document).scrollTop());return i.left-=this._get(e,"isRTL")?n-a:0,i.left-=s&amp;&amp;i.left===e.input.offset().left?t(document).scrollLeft():0,i.top-=s&amp;&amp;i.top===e.input.offset().top+r?t(document).scrollTop():0,i.left-=Math.min(i.left,i.left+n&gt;h&amp;&amp;h&gt;n?Math.abs(i.left+n-h):0),i.top-=Math.min(i.top,i.top+o&gt;l&amp;&amp;l&gt;o?Math.abs(o+r):0),i},_findPos:function(e){for(var i,s=this._getInst(e),n=this._get(s,"isRTL");e&amp;&amp;("hidden"===e.type||1!==e.nodeType||t.expr.filters.hidden(e));)e=e[n?"previousSibling":"nextSibling"];return i=t(e).offset(),[i.left,i.top]},_hideDatepicker:function(e){var i,s,n,o,r=this._curInst;!r||e&amp;&amp;r!==t.data(e,a)||this._datepickerShowing&amp;&amp;(i=this._get(r,"showAnim"),s=this._get(r,"duration"),n=function(){t.datepicker._tidyDialog(r)},t.effects&amp;&amp;(t.effects.effect[i]||t.effects[i])?r.dpDiv.hide(i,t.datepicker._get(r,"showOptions"),s,n):r.dpDiv["slideDown"===i?"slideUp":"fadeIn"===i?"fadeOut":"hide"](i?s:null,n),i||n(),this._datepickerShowing=!1,o=this._get(r,"onClose"),o&amp;&amp;o.apply(r.input?r.input[0]:null,[r.input?r.input.val():"",r]),this._lastInput=null,this._inDialog&amp;&amp;(this._dialogInput.css({position:"absolute",left:"0",top:"-100px"}),t.blockUI&amp;&amp;(t.unblockUI(),t("body").append(this.dpDiv))),this._inDialog=!1)},_tidyDialog:function(t){t.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")},_checkExternalClick:function(e){if(t.datepicker._curInst){var i=t(e.target),s=t.datepicker._getInst(i[0]);(i[0].id!==t.datepicker._mainDivId&amp;&amp;0===i.parents("#"+t.datepicker._mainDivId).length&amp;&amp;!i.hasClass(t.datepicker.markerClassName)&amp;&amp;!i.closest("."+t.datepicker._triggerClass).length&amp;&amp;t.datepicker._datepickerShowing&amp;&amp;(!t.datepicker._inDialog||!t.blockUI)||i.hasClass(t.datepicker.markerClassName)&amp;&amp;t.datepicker._curInst!==s)&amp;&amp;t.datepicker._hideDatepicker()}},_adjustDate:function(e,i,s){var n=t(e),o=this._getInst(n[0]);this._isDisabledDatepicker(n[0])||(this._adjustInstDate(o,i+("M"===s?this._get(o,"showCurrentAtPos"):0),s),this._updateDatepicker(o))},_gotoToday:function(e){var i,s=t(e),n=this._getInst(s[0]);this._get(n,"gotoCurrent")&amp;&amp;n.currentDay?(n.selectedDay=n.currentDay,n.drawMonth=n.selectedMonth=n.currentMonth,n.drawYear=n.selectedYear=n.currentYear):(i=new Date,n.selectedDay=i.getDate(),n.drawMonth=n.selectedMonth=i.getMonth(),n.drawYear=n.selectedYear=i.getFullYear()),this._notifyChange(n),this._adjustDate(s)},_selectMonthYear:function(e,i,s){var n=t(e),o=this._getInst(n[0]);o["selected"+("M"===s?"Month":"Year")]=o["draw"+("M"===s?"Month":"Year")]=parseInt(i.options[i.selectedIndex].value,10),this._notifyChange(o),this._adjustDate(n)},_selectDay:function(e,i,s,n){var o,a=t(e);t(n).hasClass(this._unselectableClass)||this._isDisabledDatepicker(a[0])||(o=this._getInst(a[0]),o.selectedDay=o.currentDay=t("a",n).html(),o.selectedMonth=o.currentMonth=i,o.selectedYear=o.currentYear=s,this._selectDate(e,this._formatDate(o,o.currentDay,o.currentMonth,o.currentYear)))},_clearDate:function(e){var i=t(e);this._selectDate(i,"")},_selectDate:function(e,i){var s,n=t(e),o=this._getInst(n[0]);i=null!=i?i:this._formatDate(o),o.input&amp;&amp;o.input.val(i),this._updateAlternate(o),s=this._get(o,"onSelect"),s?s.apply(o.input?o.input[0]:null,[i,o]):o.input&amp;&amp;o.input.trigger("change"),o.inline?this._updateDatepicker(o):(this._hideDatepicker(),this._lastInput=o.input[0],"object"!=typeof o.input[0]&amp;&amp;o.input.focus(),this._lastInput=null)},_updateAlternate:function(e){var i,s,n,o=this._get(e,"altField");o&amp;&amp;(i=this._get(e,"altFormat")||this._get(e,"dateFormat"),s=this._getDate(e),n=this.formatDate(i,s,this._getFormatConfig(e)),t(o).each(function(){t(this).val(n)}))},noWeekends:function(t){var e=t.getDay();return[e&gt;0&amp;&amp;6&gt;e,""]},iso8601Week:function(t){var e,i=new Date(t.getTime());return i.setDate(i.getDate()+4-(i.getDay()||7)),e=i.getTime(),i.setMonth(0),i.setDate(1),Math.floor(Math.round((e-i)/864e5)/7)+1},parseDate:function(i,s,n){if(null==i||null==s)throw"Invalid arguments";if(s="object"==typeof s?""+s:s+"",""===s)return null;var o,a,r,h,l=0,c=(n?n.shortYearCutoff:null)||this._defaults.shortYearCutoff,u="string"!=typeof c?c:(new Date).getFullYear()%100+parseInt(c,10),d=(n?n.dayNamesShort:null)||this._defaults.dayNamesShort,p=(n?n.dayNames:null)||this._defaults.dayNames,f=(n?n.monthNamesShort:null)||this._defaults.monthNamesShort,g=(n?n.monthNames:null)||this._defaults.monthNames,m=-1,v=-1,_=-1,b=-1,y=!1,w=function(t){var e=i.length&gt;o+1&amp;&amp;i.charAt(o+1)===t;return e&amp;&amp;o++,e},x=function(t){var e=w(t),i="@"===t?14:"!"===t?20:"y"===t&amp;&amp;e?4:"o"===t?3:2,n=RegExp("^\\d{1,"+i+"}"),o=s.substring(l).match(n);if(!o)throw"Missing number at position "+l;return l+=o[0].length,parseInt(o[0],10)},k=function(i,n,o){var a=-1,r=t.map(w(i)?o:n,function(t,e){return[[e,t]]}).sort(function(t,e){return-(t[1].length-e[1].length)});if(t.each(r,function(t,i){var n=i[1];return s.substr(l,n.length).toLowerCase()===n.toLowerCase()?(a=i[0],l+=n.length,!1):e}),-1!==a)return a+1;throw"Unknown name at position "+l},D=function(){if(s.charAt(l)!==i.charAt(o))throw"Unexpected literal at position "+l;l++};for(o=0;i.length&gt;o;o++)if(y)"''"!==i.charAt(o)||w("''")?D():y=!1;else switch(i.charAt(o)){case"d":_=x("d");break;case"D":k("D",d,p);break;case"o":b=x("o");break;case"m":v=x("m");break;case"M":v=k("M",f,g);break;case"y":m=x("y");break;case"@":h=new Date(x("@")),m=h.getFullYear(),v=h.getMonth()+1,_=h.getDate();break;case"!":h=new Date((x("!")-this._ticksTo1970)/1e4),m=h.getFullYear(),v=h.getMonth()+1,_=h.getDate();break;case"''":w("''")?D():y=!0;break;default:D()}if(s.length&gt;l&amp;&amp;(r=s.substr(l),!/^\s+/.test(r)))throw"Extra/unparsed characters found in date: "+r;if(-1===m?m=(new Date).getFullYear():100&gt;m&amp;&amp;(m+=(new Date).getFullYear()-(new Date).getFullYear()%100+(u&gt;=m?0:-100)),b&gt;-1)for(v=1,_=b;;){if(a=this._getDaysInMonth(m,v-1),a&gt;=_)break;v++,_-=a}if(h=this._daylightSavingAdjust(new Date(m,v-1,_)),h.getFullYear()!==m||h.getMonth()+1!==v||h.getDate()!==_)throw"Invalid date";return h},ATOM:"yy-mm-dd",COOKIE:"D, dd M yy",ISO_8601:"yy-mm-dd",RFC_822:"D, d M y",RFC_850:"DD, dd-M-y",RFC_1036:"D, d M y",RFC_1123:"D, d M yy",RFC_2822:"D, d M yy",RSS:"D, d M y",TICKS:"!",TIMESTAMP:"@",W3C:"yy-mm-dd",_ticksTo1970:1e7*60*60*24*(718685+Math.floor(492.5)-Math.floor(19.7)+Math.floor(4.925)),formatDate:function(t,e,i){if(!e)return"";var s,n=(i?i.dayNamesShort:null)||this._defaults.dayNamesShort,o=(i?i.dayNames:null)||this._defaults.dayNames,a=(i?i.monthNamesShort:null)||this._defaults.monthNamesShort,r=(i?i.monthNames:null)||this._defaults.monthNames,h=function(e){var i=t.length&gt;s+1&amp;&amp;t.charAt(s+1)===e;return i&amp;&amp;s++,i},l=function(t,e,i){var s=""+e;if(h(t))for(;i&gt;s.length;)s="0"+s;return s},c=function(t,e,i,s){return h(t)?s[e]:i[e]},u="",d=!1;if(e)for(s=0;t.length&gt;s;s++)if(d)"''"!==t.charAt(s)||h("''")?u+=t.charAt(s):d=!1;else switch(t.charAt(s)){case"d":u+=l("d",e.getDate(),2);break;case"D":u+=c("D",e.getDay(),n,o);break;case"o":u+=l("o",Math.round((new Date(e.getFullYear(),e.getMonth(),e.getDate()).getTime()-new Date(e.getFullYear(),0,0).getTime())/864e5),3);break;case"m":u+=l("m",e.getMonth()+1,2);break;case"M":u+=c("M",e.getMonth(),a,r);break;case"y":u+=h("y")?e.getFullYear():(10&gt;e.getYear()%100?"0":"")+e.getYear()%100;break;case"@":u+=e.getTime();break;case"!":u+=1e4*e.getTime()+this._ticksTo1970;break;case"''":h("''")?u+="''":d=!0;break;default:u+=t.charAt(s)}return u},_possibleChars:function(t){var e,i="",s=!1,n=function(i){var s=t.length&gt;e+1&amp;&amp;t.charAt(e+1)===i;return s&amp;&amp;e++,s};for(e=0;t.length&gt;e;e++)if(s)"''"!==t.charAt(e)||n("''")?i+=t.charAt(e):s=!1;else switch(t.charAt(e)){case"d":case"m":case"y":case"@":i+="0123456789";break;case"D":case"M":return null;case"''":n("''")?i+="''":s=!0;break;default:i+=t.charAt(e)}return i},_get:function(t,i){return t.settings[i]!==e?t.settings[i]:this._defaults[i]},_setDateFromField:function(t,e){if(t.input.val()!==t.lastVal){var i=this._get(t,"dateFormat"),s=t.lastVal=t.input?t.input.val():null,n=this._getDefaultDate(t),o=n,a=this._getFormatConfig(t);try{o=this.parseDate(i,s,a)||n}catch(r){s=e?"":s}t.selectedDay=o.getDate(),t.drawMonth=t.selectedMonth=o.getMonth(),t.drawYear=t.selectedYear=o.getFullYear(),t.currentDay=s?o.getDate():0,t.currentMonth=s?o.getMonth():0,t.currentYear=s?o.getFullYear():0,this._adjustInstDate(t)}},_getDefaultDate:function(t){return this._restrictMinMax(t,this._determineDate(t,this._get(t,"defaultDate"),new Date))},_determineDate:function(e,i,s){var n=function(t){var e=new Date;return e.setDate(e.getDate()+t),e},o=function(i){try{return t.datepicker.parseDate(t.datepicker._get(e,"dateFormat"),i,t.datepicker._getFormatConfig(e))}catch(s){}for(var n=(i.toLowerCase().match(/^c/)?t.datepicker._getDate(e):null)||new Date,o=n.getFullYear(),a=n.getMonth(),r=n.getDate(),h=/([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,l=h.exec(i);l;){switch(l[2]||"d"){case"d":case"D":r+=parseInt(l[1],10);break;case"w":case"W":r+=7*parseInt(l[1],10);break;case"m":case"M":a+=parseInt(l[1],10),r=Math.min(r,t.datepicker._getDaysInMonth(o,a));break;case"y":case"Y":o+=parseInt(l[1],10),r=Math.min(r,t.datepicker._getDaysInMonth(o,a))}l=h.exec(i)}return new Date(o,a,r)},a=null==i||""===i?s:"string"==typeof i?o(i):"number"==typeof i?isNaN(i)?s:n(i):new Date(i.getTime());return a=a&amp;&amp;"Invalid Date"==""+a?s:a,a&amp;&amp;(a.setHours(0),a.setMinutes(0),a.setSeconds(0),a.setMilliseconds(0)),this._daylightSavingAdjust(a)},_daylightSavingAdjust:function(t){return t?(t.setHours(t.getHours()&gt;12?t.getHours()+2:0),t):null},_setDate:function(t,e,i){var s=!e,n=t.selectedMonth,o=t.selectedYear,a=this._restrictMinMax(t,this._determineDate(t,e,new Date));t.selectedDay=t.currentDay=a.getDate(),t.drawMonth=t.selectedMonth=t.currentMonth=a.getMonth(),t.drawYear=t.selectedYear=t.currentYear=a.getFullYear(),n===t.selectedMonth&amp;&amp;o===t.selectedYear||i||this._notifyChange(t),this._adjustInstDate(t),t.input&amp;&amp;t.input.val(s?"":this._formatDate(t))},_getDate:function(t){var e=!t.currentYear||t.input&amp;&amp;""===t.input.val()?null:this._daylightSavingAdjust(new Date(t.currentYear,t.currentMonth,t.currentDay));return e},_attachHandlers:function(e){var i=this._get(e,"stepMonths"),s="#"+e.id.replace(/\\\\/g,"\\");e.dpDiv.find("[data-handler]").map(function(){var e={prev:function(){t.datepicker._adjustDate(s,-i,"M")},next:function(){t.datepicker._adjustDate(s,+i,"M")},hide:function(){t.datepicker._hideDatepicker()},today:function(){t.datepicker._gotoToday(s)},selectDay:function(){return t.datepicker._selectDay(s,+this.getAttribute("data-month"),+this.getAttribute("data-year"),this),!1},selectMonth:function(){return t.datepicker._selectMonthYear(s,this,"M"),!1},selectYear:function(){return t.datepicker._selectMonthYear(s,this,"Y"),!1}};t(this).bind(this.getAttribute("data-event"),e[this.getAttribute("data-handler")])})},_generateHTML:function(t){var e,i,s,n,o,a,r,h,l,c,u,d,p,f,g,m,v,_,b,y,w,x,k,D,C,I,P,T,M,S,z,A,E,H,N,W,O,F,R,L=new Date,j=this._daylightSavingAdjust(new Date(L.getFullYear(),L.getMonth(),L.getDate())),Y=this._get(t,"isRTL"),B=this._get(t,"showButtonPanel"),V=this._get(t,"hideIfNoPrevNext"),K=this._get(t,"navigationAsDateFormat"),q=this._getNumberOfMonths(t),U=this._get(t,"showCurrentAtPos"),Q=this._get(t,"stepMonths"),X=1!==q[0]||1!==q[1],$=this._daylightSavingAdjust(t.currentDay?new Date(t.currentYear,t.currentMonth,t.currentDay):new Date(9999,9,9)),G=this._getMinMaxDate(t,"min"),J=this._getMinMaxDate(t,"max"),Z=t.drawMonth-U,te=t.drawYear;if(0&gt;Z&amp;&amp;(Z+=12,te--),J)for(e=this._daylightSavingAdjust(new Date(J.getFullYear(),J.getMonth()-q[0]*q[1]+1,J.getDate())),e=G&amp;&amp;G&gt;e?G:e;this._daylightSavingAdjust(new Date(te,Z,1))&gt;e;)Z--,0&gt;Z&amp;&amp;(Z=11,te--);for(t.drawMonth=Z,t.drawYear=te,i=this._get(t,"prevText"),i=K?this.formatDate(i,this._daylightSavingAdjust(new Date(te,Z-Q,1)),this._getFormatConfig(t)):i,s=this._canAdjustMonth(t,-1,te,Z)?"&lt;a class=''ui-datepicker-prev ui-corner-all'' data-handler=''prev'' data-event=''click'' title=''"+i+"''&gt;&lt;span class=''ui-icon ui-icon-circle-triangle-"+(Y?"e":"w")+"''&gt;"+i+"&lt;/span&gt;&lt;/a&gt;":V?"":"&lt;a class=''ui-datepicker-prev ui-corner-all ui-state-disabled'' title=''"+i+"''&gt;&lt;span class=''ui-icon ui-icon-circle-triangle-"+(Y?"e":"w")+"''&gt;"+i+"&lt;/span&gt;&lt;/a&gt;",n=this._get(t,"nextText"),n=K?this.formatDate(n,this._daylightSavingAdjust(new Date(te,Z+Q,1)),this._getFormatConfig(t)):n,o=this._canAdjustMonth(t,1,te,Z)?"&lt;a class=''ui-datepicker-next ui-corner-all'' data-handler=''next'' data-event=''click'' title=''"+n+"''&gt;&lt;span class=''ui-icon ui-icon-circle-triangle-"+(Y?"w":"e")+"''&gt;"+n+"&lt;/span&gt;&lt;/a&gt;":V?"":"&lt;a class=''ui-datepicker-next ui-corner-all ui-state-disabled'' title=''"+n+"''&gt;&lt;span class=''ui-icon ui-icon-circle-triangle-"+(Y?"w":"e")+"''&gt;"+n+"&lt;/span&gt;&lt;/a&gt;",a=this._get(t,"currentText"),r=this._get(t,"gotoCurrent")&amp;&amp;t.currentDay?$:j,a=K?this.formatDate(a,r,this._getFormatConfig(t)):a,h=t.inline?"":"&lt;button type=''button'' class=''ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all'' data-handler=''hide'' data-event=''click''&gt;"+this._get(t,"closeText")+"&lt;/button&gt;",l=B?"&lt;div class=''ui-datepicker-buttonpane ui-widget-content''&gt;"+(Y?h:"")+(this._isInRange(t,r)?"&lt;button type=''button'' class=''ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all'' data-handler=''today'' data-event=''click''&gt;"+a+"&lt;/button&gt;":"")+(Y?"":h)+"&lt;/div&gt;":"",c=parseInt(this._get(t,"firstDay"),10),c=isNaN(c)?0:c,u=this._get(t,"showWeek"),d=this._get(t,"dayNames"),p=this._get(t,"dayNamesMin"),f=this._get(t,"monthNames"),g=this._get(t,"monthNamesShort"),m=this._get(t,"beforeShowDay"),v=this._get(t,"showOtherMonths"),_=this._get(t,"selectOtherMonths"),b=this._getDefaultDate(t),y="",x=0;q[0]&gt;x;x++){for(k="",this.maxRows=4,D=0;q[1]&gt;D;D++){if(C=this._daylightSavingAdjust(new Date(te,Z,t.selectedDay)),I=" ui-corner-all",P="",X){if(P+="&lt;div class=''ui-datepicker-group",q[1]&gt;1)switch(D){case 0:P+=" ui-datepicker-group-first",I=" ui-corner-"+(Y?"right":"left");break;case q[1]-1:P+=" ui-datepicker-group-last",I=" ui-corner-"+(Y?"left":"right");break;default:P+=" ui-datepicker-group-middle",I=""}P+="''&gt;"}for(P+="&lt;div class=''ui-datepicker-header ui-widget-header ui-helper-clearfix"+I+"''&gt;"+(/all|left/.test(I)&amp;&amp;0===x?Y?o:s:"")+(/all|right/.test(I)&amp;&amp;0===x?Y?s:o:"")+this._generateMonthYearHeader(t,Z,te,G,J,x&gt;0||D&gt;0,f,g)+"&lt;/div&gt;&lt;table class=''ui-datepicker-calendar''&gt;&lt;thead&gt;"+"&lt;tr&gt;",T=u?"&lt;th class=''ui-datepicker-week-col''&gt;"+this._get(t,"weekHeader")+"&lt;/th&gt;":"",w=0;7&gt;w;w++)M=(w+c)%7,T+="&lt;th"+((w+c+6)%7&gt;=5?" class=''ui-datepicker-week-end''":"")+"&gt;"+"&lt;span title=''"+d[M]+"''&gt;"+p[M]+"&lt;/span&gt;&lt;/th&gt;";for(P+=T+"&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;",S=this._getDaysInMonth(te,Z),te===t.selectedYear&amp;&amp;Z===t.selectedMonth&amp;&amp;(t.selectedDay=Math.min(t.selectedDay,S)),z=(this._getFirstDayOfMonth(te,Z)-c+7)%7,A=Math.ceil((z+S)/7),E=X?this.maxRows&gt;A?this.maxRows:A:A,this.maxRows=E,H=this._daylightSavingAdjust(new Date(te,Z,1-z)),N=0;E&gt;N;N++){for(P+="&lt;tr&gt;",W=u?"&lt;td class=''ui-datepicker-week-col''&gt;"+this._get(t,"calculateWeek")(H)+"&lt;/td&gt;":"",w=0;7&gt;w;w++)O=m?m.apply(t.input?t.input[0]:null,[H]):[!0,""],F=H.getMonth()!==Z,R=F&amp;&amp;!_||!O[0]||G&amp;&amp;G&gt;H||J&amp;&amp;H&gt;J,W+="&lt;td class=''"+((w+c+6)%7&gt;=5?" ui-datepicker-week-end":"")+(F?" ui-datepicker-other-month":"")+(H.getTime()===C.getTime()&amp;&amp;Z===t.selectedMonth&amp;&amp;t._keyEvent||b.getTime()===H.getTime()&amp;&amp;b.getTime()===C.getTime()?" "+this._dayOverClass:"")+(R?" "+this._unselectableClass+" ui-state-disabled":"")+(F&amp;&amp;!v?"":" "+O[1]+(H.getTime()===$.getTime()?" "+this._currentClass:"")+(H.getTime()===j.getTime()?" ui-datepicker-today":""))+"''"+(F&amp;&amp;!v||!O[2]?"":" title=''"+O[2].replace(/''/g,"&amp;#39;")+"''")+(R?"":" data-handler=''selectDay'' data-event=''click'' data-month=''"+H.getMonth()+"'' data-year=''"+H.getFullYear()+"''")+"&gt;"+(F&amp;&amp;!v?"&amp;#xa0;":R?"&lt;span class=''ui-state-default''&gt;"+H.getDate()+"&lt;/span&gt;":"&lt;a class=''ui-state-default"+(H.getTime()===j.getTime()?" ui-state-highlight":"")+(H.getTime()===$.getTime()?" ui-state-active":"")+(F?" ui-priority-secondary":"")+"'' href=''#''&gt;"+H.getDate()+"&lt;/a&gt;")+"&lt;/td&gt;",H.setDate(H.getDate()+1),H=this._daylightSavingAdjust(H);P+=W+"&lt;/tr&gt;"}Z++,Z&gt;11&amp;&amp;(Z=0,te++),P+="&lt;/tbody&gt;&lt;/table&gt;"+(X?"&lt;/div&gt;"+(q[0]&gt;0&amp;&amp;D===q[1]-1?"&lt;div class=''ui-datepicker-row-break''&gt;&lt;/div&gt;":""):""),k+=P}y+=k}return y+=l,t._keyEvent=!1,y},_generateMonthYearHeader:function(t,e,i,s,n,o,a,r){var h,l,c,u,d,p,f,g,m=this._get(t,"changeMonth"),v=this._get(t,"changeYear"),_=this._get(t,"showMonthAfterYear"),b="&lt;div class=''ui-datepicker-title''&gt;",y="";if(o||!m)y+="&lt;span class=''ui-datepicker-month''&gt;"+a[e]+"&lt;/span&gt;";else{for(h=s&amp;&amp;s.getFullYear()===i,l=n&amp;&amp;n.getFullYear()===i,y+="&lt;select class=''ui-datepicker-month'' data-handler=''selectMonth'' data-event=''change''&gt;",c=0;12&gt;c;c++)(!h||c&gt;=s.getMonth())&amp;&amp;(!l||n.getMonth()&gt;=c)&amp;&amp;(y+="&lt;option value=''"+c+"''"+(c===e?" selected=''selected''":"")+"&gt;"+r[c]+"&lt;/option&gt;");y+="&lt;/select&gt;"}if(_||(b+=y+(!o&amp;&amp;m&amp;&amp;v?"":"&amp;#xa0;")),!t.yearshtml)if(t.yearshtml="",o||!v)b+="&lt;span class=''ui-datepicker-year''&gt;"+i+"&lt;/span&gt;";else{for(u=this._get(t,"yearRange").split(":"),d=(new Date).getFullYear(),p=function(t){var e=t.match(/c[+\-].*/)?i+parseInt(t.substring(1),10):t.match(/[+\-].*/)?d+parseInt(t,10):parseInt(t,10);return isNaN(e)?d:e},f=p(u[0]),g=Math.max(f,p(u[1]||"")),f=s?Math.max(f,s.getFullYear()):f,g=n?Math.min(g,n.getFullYear()):g,t.yearshtml+="&lt;select class=''ui-datepicker-year'' data-handler=''selectYear'' data-event=''change''&gt;";g&gt;=f;f++)t.yearshtml+="&lt;option value=''"+f+"''"+(f===i?" selected=''selected''":"")+"&gt;"+f+"&lt;/option&gt;";t.yearshtml+="&lt;/select&gt;",b+=t.yearshtml,t.yearshtml=null}return b+=this._get(t,"yearSuffix"),_&amp;&amp;(b+=(!o&amp;&amp;m&amp;&amp;v?"":"&amp;#xa0;")+y),b+="&lt;/div&gt;"},_adjustInstDate:function(t,e,i){var s=t.drawYear+("Y"===i?e:0),n=t.drawMonth+("M"===i?e:0),o=Math.min(t.selectedDay,this._getDaysInMonth(s,n))+("D"===i?e:0),a=this._restrictMinMax(t,this._daylightSavingAdjust(new Date(s,n,o)));t.selectedDay=a.getDate(),t.drawMonth=t.selectedMonth=a.getMonth(),t.drawYear=t.selectedYear=a.getFullYear(),("M"===i||"Y"===i)&amp;&amp;this._notifyChange(t)},_restrictMinMax:function(t,e){var i=this._getMinMaxDate(t,"min"),s=this._getMinMaxDate(t,"max"),n=i&amp;&amp;i&gt;e?i:e;return s&amp;&amp;n&gt;s?s:n},_notifyChange:function(t){var e=this._get(t,"onChangeMonthYear");e&amp;&amp;e.apply(t.input?t.input[0]:null,[t.selectedYear,t.selectedMonth+1,t])},_getNumberOfMonths:function(t){var e=this._get(t,"numberOfMonths");return null==e?[1,1]:"number"==typeof e?[1,e]:e},_getMinMaxDate:function(t,e){return this._determineDate(t,this._get(t,e+"Date"),null)},_getDaysInMonth:function(t,e){return 32-this._daylightSavingAdjust(new Date(t,e,32)).getDate()},_getFirstDayOfMonth:function(t,e){return new Date(t,e,1).getDay()},_canAdjustMonth:function(t,e,i,s){var n=this._getNumberOfMonths(t),o=this._daylightSavingAdjust(new Date(i,s+(0&gt;e?e:n[0]*n[1]),1));return 0&gt;e&amp;&amp;o.setDate(this._getDaysInMonth(o.getFullYear(),o.getMonth())),this._isInRange(t,o)},_isInRange:function(t,e){var i,s,n=this._getMinMaxDate(t,"min"),o=this._getMinMaxDate(t,"max"),a=null,r=null,h=this._get(t,"yearRange");return h&amp;&amp;(i=h.split(":"),s=(new Date).getFullYear(),a=parseInt(i[0],10),r=parseInt(i[1],10),i[0].match(/[+\-].*/)&amp;&amp;(a+=s),i[1].match(/[+\-].*/)&amp;&amp;(r+=s)),(!n||e.getTime()&gt;=n.getTime())&amp;&amp;(!o||e.getTime()&lt;=o.getTime())&amp;&amp;(!a||e.getFullYear()&gt;=a)&amp;&amp;(!r||r&gt;=e.getFullYear())},_getFormatConfig:function(t){var e=this._get(t,"shortYearCutoff");return e="string"!=typeof e?e:(new Date).getFullYear()%100+parseInt(e,10),{shortYearCutoff:e,dayNamesShort:this._get(t,"dayNamesShort"),dayNames:this._get(t,"dayNames"),monthNamesShort:this._get(t,"monthNamesShort"),monthNames:this._get(t,"monthNames")}},_formatDate:function(t,e,i,s){e||(t.currentDay=t.selectedDay,t.currentMonth=t.selectedMonth,t.currentYear=t.selectedYear);var n=e?"object"==typeof e?e:this._daylightSavingAdjust(new Date(s,i,e)):this._daylightSavingAdjust(new Date(t.currentYear,t.currentMonth,t.currentDay));return this.formatDate(this._get(t,"dateFormat"),n,this._getFormatConfig(t))}}),t.fn.datepicker=function(e){if(!this.length)return this;t.datepicker.initialized||(t(document).mousedown(t.datepicker._checkExternalClick),t.datepicker.initialized=!0),0===t("#"+t.datepicker._mainDivId).length&amp;&amp;t("body").append(t.datepicker.dpDiv);var i=Array.prototype.slice.call(arguments,1);return"string"!=typeof e||"isDisabled"!==e&amp;&amp;"getDate"!==e&amp;&amp;"widget"!==e?"option"===e&amp;&amp;2===arguments.length&amp;&amp;"string"==typeof arguments[1]?t.datepicker["_"+e+"Datepicker"].apply(t.datepicker,[this[0]].concat(i)):this.each(function(){"string"==typeof e?t.datepicker["_"+e+"Datepicker"].apply(t.datepicker,[this].concat(i)):t.datepicker._attachDatepicker(this,e)}):t.datepicker["_"+e+"Datepicker"].apply(t.datepicker,[this[0]].concat(i))},t.datepicker=new i,t.datepicker.initialized=!1,t.datepicker.uuid=(new Date).getTime(),t.datepicker.version="1.10.4"}(jQuery),function(t){var e={buttons:!0,height:!0,maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0,width:!0},i={maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0};t.widget("ui.dialog",{version:"1.10.4",options:{appendTo:"body",autoOpen:!0,buttons:[],closeOnEscape:!0,closeText:"close",dialogClass:"",draggable:!0,hide:null,height:"auto",maxHeight:null,maxWidth:null,minHeight:150,minWidth:150,modal:!1,position:{my:"center",at:"center",of:window,collision:"fit",using:function(e){var i=t(this).css(e).offset().top;0&gt;i&amp;&amp;t(this).css("top",e.top-i)}},resizable:!0,show:null,title:null,width:300,beforeClose:null,close:null,drag:null,dragStart:null,dragStop:null,focus:null,open:null,resize:null,resizeStart:null,resizeStop:null},_create:function(){this.originalCss={display:this.element[0].style.display,width:this.element[0].style.width,minHeight:this.element[0].style.minHeight,maxHeight:this.element[0].style.maxHeight,height:this.element[0].style.height},this.originalPosition={parent:this.element.parent(),index:this.element.parent().children().index(this.element)},this.originalTitle=this.element.attr("title"),this.options.title=this.options.title||this.originalTitle,this._createWrapper(),this.element.show().removeAttr("title").addClass("ui-dialog-content ui-widget-content").appendTo(this.uiDialog),this._createTitlebar(),this._createButtonPane(),this.options.draggable&amp;&amp;t.fn.draggable&amp;&amp;this._makeDraggable(),this.options.resizable&amp;&amp;t.fn.resizable&amp;&amp;this._makeResizable(),this._isOpen=!1},_init:function(){this.options.autoOpen&amp;&amp;this.open()},_appendTo:function(){var e=this.options.appendTo;return e&amp;&amp;(e.jquery||e.nodeType)?t(e):this.document.find(e||"body").eq(0)},_destroy:function(){var t,e=this.originalPosition;this._destroyOverlay(),this.element.removeUniqueId().removeClass("ui-dialog-content ui-widget-content").css(this.originalCss).detach(),this.uiDialog.stop(!0,!0).remove(),this.originalTitle&amp;&amp;this.element.attr("title",this.originalTitle),t=e.parent.children().eq(e.index),t.length&amp;&amp;t[0]!==this.element[0]?t.before(this.element):e.parent.append(this.element)},widget:function(){return this.uiDialog},disable:t.noop,enable:t.noop,close:function(e){var i,s=this;if(this._isOpen&amp;&amp;this._trigger("beforeClose",e)!==!1){if(this._isOpen=!1,this._destroyOverlay(),!this.opener.filter(":focusable").focus().length)try{i=this.document[0].activeElement,i&amp;&amp;"body"!==i.nodeName.toLowerCase()&amp;&amp;t(i).blur()}catch(n){}this._hide(this.uiDialog,this.options.hide,function(){s._trigger("close",e)})}},isOpen:function(){return this._isOpen},moveToTop:function(){this._moveToTop()},_moveToTop:function(t,e){var i=!!this.uiDialog.nextAll(":visible").insertBefore(this.uiDialog).length;return i&amp;&amp;!e&amp;&amp;this._trigger("focus",t),i},open:function(){var e=this;return this._isOpen?(this._moveToTop()&amp;&amp;this._focusTabbable(),undefined):(this._isOpen=!0,this.opener=t(this.document[0].activeElement),this._size(),this._position(),this._createOverlay(),this._moveToTop(null,!0),this._show(this.uiDialog,this.options.show,function(){e._focusTabbable(),e._trigger("focus")}),this._trigger("open"),undefined)},_focusTabbable:function(){var t=this.element.find("[autofocus]");t.length||(t=this.element.find(":tabbable")),t.length||(t=this.uiDialogButtonPane.find(":tabbable")),t.length||(t=this.uiDialogTitlebarClose.filter(":tabbable")),t.length||(t=this.uiDialog),t.eq(0).focus()},_keepFocus:function(e){function i(){var e=this.document[0].activeElement,i=this.uiDialog[0]===e||t.contains(this.uiDialog[0],e);i||this._focusTabbable()}e.preventDefault(),i.call(this),this._delay(i)},_createWrapper:function(){this.uiDialog=t("&lt;div&gt;").addClass("ui-dialog ui-widget ui-widget-content ui-corner-all ui-front "+this.options.dialogClass).hide().attr({tabIndex:-1,role:"dialog"}).appendTo(this._appendTo()),this._on(this.uiDialog,{keydown:function(e){if(this.options.closeOnEscape&amp;&amp;!e.isDefaultPrevented()&amp;&amp;e.keyCode&amp;&amp;e.keyCode===t.ui.keyCode.ESCAPE)return e.preventDefault(),this.close(e),undefined;if(e.keyCode===t.ui.keyCode.TAB){var i=this.uiDialog.find(":tabbable"),s=i.filter(":first"),n=i.filter(":last");e.target!==n[0]&amp;&amp;e.target!==this.uiDialog[0]||e.shiftKey?e.target!==s[0]&amp;&amp;e.target!==this.uiDialog[0]||!e.shiftKey||(n.focus(1),e.preventDefault()):(s.focus(1),e.preventDefault())}},mousedown:function(t){this._moveToTop(t)&amp;&amp;this._focusTabbable()}}),this.element.find("[aria-describedby]").length||this.uiDialog.attr({"aria-describedby":this.element.uniqueId().attr("id")})},_createTitlebar:function(){var e;this.uiDialogTitlebar=t("&lt;div&gt;").addClass("ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix").prependTo(this.uiDialog),this._on(this.uiDialogTitlebar,{mousedown:function(e){t(e.target).closest(".ui-dialog-titlebar-close")||this.uiDialog.focus()}}),this.uiDialogTitlebarClose=t("&lt;button type=''button''&gt;&lt;/button&gt;").button({label:this.options.closeText,icons:{primary:"ui-icon-closethick"},text:!1}).addClass("ui-dialog-titlebar-close").appendTo(this.uiDialogTitlebar),this._on(this.uiDialogTitlebarClose,{click:function(t){t.preventDefault(),this.close(t)}}),e=t("&lt;span&gt;").uniqueId().addClass("ui-dialog-title").prependTo(this.uiDialogTitlebar),this._title(e),this.uiDialog.attr({"aria-labelledby":e.attr("id")})},_title:function(t){this.options.title||t.html("&amp;#160;"),t.text(this.options.title)},_createButtonPane:function(){this.uiDialogButtonPane=t("&lt;div&gt;").addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix"),this.uiButtonSet=t("&lt;div&gt;").addClass("ui-dialog-buttonset").appendTo(this.uiDialogButtonPane),this._createButtons()},_createButtons:function(){var e=this,i=this.options.buttons;return this.uiDialogButtonPane.remove(),this.uiButtonSet.empty(),t.isEmptyObject(i)||t.isArray(i)&amp;&amp;!i.length?(this.uiDialog.removeClass("ui-dialog-buttons"),undefined):(t.each(i,function(i,s){var n,o;s=t.isFunction(s)?{click:s,text:i}:s,s=t.extend({type:"button"},s),n=s.click,s.click=function(){n.apply(e.element[0],arguments)},o={icons:s.icons,text:s.showText},delete s.icons,delete s.showText,t("&lt;button&gt;&lt;/button&gt;",s).button(o).appendTo(e.uiButtonSet)}),this.uiDialog.addClass("ui-dialog-buttons"),this.uiDialogButtonPane.appendTo(this.uiDialog),undefined)},_makeDraggable:function(){function e(t){return{position:t.position,offset:t.offset}}var i=this,s=this.options;this.uiDialog.draggable({cancel:".ui-dialog-content, .ui-dialog-titlebar-close",handle:".ui-dialog-titlebar",containment:"document",start:function(s,n){t(this).addClass("ui-dialog-dragging"),i._blockFrames(),i._trigger("dragStart",s,e(n))},drag:function(t,s){i._trigger("drag",t,e(s))},stop:function(n,o){s.position=[o.position.left-i.document.scrollLeft(),o.position.top-i.document.scrollTop()],t(this).removeClass("ui-dialog-dragging"),i._unblockFrames(),i._trigger("dragStop",n,e(o))}})},_makeResizable:function(){function e(t){return{originalPosition:t.originalPosition,originalSize:t.originalSize,position:t.position,size:t.size}}var i=this,s=this.options,n=s.resizable,o=this.uiDialog.css("position"),a="string"==typeof n?n:"n,e,s,w,se,sw,ne,nw";this.uiDialog.resizable({cancel:".ui-dialog-content",containment:"document",alsoResize:this.element,maxWidth:s.maxWidth,maxHeight:s.maxHeight,minWidth:s.minWidth,minHeight:this._minHeight(),handles:a,start:function(s,n){t(this).addClass("ui-dialog-resizing"),i._blockFrames(),i._trigger("resizeStart",s,e(n))},resize:function(t,s){i._trigger("resize",t,e(s))},stop:function(n,o){s.height=t(this).height(),s.width=t(this).width(),t(this).removeClass("ui-dialog-resizing"),i._unblockFrames(),i._trigger("resizeStop",n,e(o))}}).css("position",o)},_minHeight:function(){var t=this.options;return"auto"===t.height?t.minHeight:Math.min(t.minHeight,t.height)},_position:function(){var t=this.uiDialog.is(":visible");t||this.uiDialog.show(),this.uiDialog.position(this.options.position),t||this.uiDialog.hide()},_setOptions:function(s){var n=this,o=!1,a={};t.each(s,function(t,s){n._setOption(t,s),t in e&amp;&amp;(o=!0),t in i&amp;&amp;(a[t]=s)}),o&amp;&amp;(this._size(),this._position()),this.uiDialog.is(":data(ui-resizable)")&amp;&amp;this.uiDialog.resizable("option",a)},_setOption:function(t,e){var i,s,n=this.uiDialog;"dialogClass"===t&amp;&amp;n.removeClass(this.options.dialogClass).addClass(e),"disabled"!==t&amp;&amp;(this._super(t,e),"appendTo"===t&amp;&amp;this.uiDialog.appendTo(this._appendTo()),"buttons"===t&amp;&amp;this._createButtons(),"closeText"===t&amp;&amp;this.uiDialogTitlebarClose.button({label:""+e}),"draggable"===t&amp;&amp;(i=n.is(":data(ui-draggable)"),i&amp;&amp;!e&amp;&amp;n.draggable("destroy"),!i&amp;&amp;e&amp;&amp;this._makeDraggable()),"position"===t&amp;&amp;this._position(),"resizable"===t&amp;&amp;(s=n.is(":data(ui-resizable)"),s&amp;&amp;!e&amp;&amp;n.resizable("destroy"),s&amp;&amp;"string"==typeof e&amp;&amp;n.resizable("option","handles",e),s||e===!1||this._makeResizable()),"title"===t&amp;&amp;this._title(this.uiDialogTitlebar.find(".ui-dialog-title")))},_size:function(){var t,e,i,s=this.options;this.element.show().css({width:"auto",minHeight:0,maxHeight:"none",height:0}),s.minWidth&gt;s.width&amp;&amp;(s.width=s.minWidth),t=this.uiDialog.css({height:"auto",width:s.width}).outerHeight(),e=Math.max(0,s.minHeight-t),i="number"==typeof s.maxHeight?Math.max(0,s.maxHeight-t):"none","auto"===s.height?this.element.css({minHeight:e,maxHeight:i,height:"auto"}):this.element.height(Math.max(0,s.height-t)),this.uiDialog.is(":data(ui-resizable)")&amp;&amp;this.uiDialog.resizable("option","minHeight",this._minHeight())},_blockFrames:function(){this.iframeBlocks=this.document.find("iframe").map(function(){var e=t(this);return t("&lt;div&gt;").css({position:"absolute",width:e.outerWidth(),height:e.outerHeight()}).appendTo(e.parent()).offset(e.offset())[0]})},_unblockFrames:function(){this.iframeBlocks&amp;&amp;(this.iframeBlocks.remove(),delete this.iframeBlocks)},_allowInteraction:function(e){return t(e.target).closest(".ui-dialog").length?!0:!!t(e.target).closest(".ui-datepicker").length},_createOverlay:function(){if(this.options.modal){var e=this,i=this.widgetFullName;t.ui.dialog.overlayInstances||this._delay(function(){t.ui.dialog.overlayInstances&amp;&amp;this.document.bind("focusin.dialog",function(s){e._allowInteraction(s)||(s.preventDefault(),t(".ui-dialog:visible:last .ui-dialog-content").data(i)._focusTabbable())})}),this.overlay=t("&lt;div&gt;").addClass("ui-widget-overlay ui-front").appendTo(this._appendTo()),this._on(this.overlay,{mousedown:"_keepFocus"}),t.ui.dialog.overlayInstances++}},_destroyOverlay:function(){this.options.modal&amp;&amp;this.overlay&amp;&amp;(t.ui.dialog.overlayInstances--,t.ui.dialog.overlayInstances||this.document.unbind("focusin.dialog"),this.overlay.remove(),this.overlay=null)}}),t.ui.dialog.overlayInstances=0,t.uiBackCompat!==!1&amp;&amp;t.widget("ui.dialog",t.ui.dialog,{_position:function(){var e,i=this.options.position,s=[],n=[0,0];i?(("string"==typeof i||"object"==typeof i&amp;&amp;"0"in i)&amp;&amp;(s=i.split?i.split(" "):[i[0],i[1]],1===s.length&amp;&amp;(s[1]=s[0]),t.each(["left","top"],function(t,e){+s[t]===s[t]&amp;&amp;(n[t]=s[t],s[t]=e)}),i={my:s[0]+(0&gt;n[0]?n[0]:"+"+n[0])+" "+s[1]+(0&gt;n[1]?n[1]:"+"+n[1]),at:s.join(" ")}),i=t.extend({},t.ui.dialog.prototype.options.position,i)):i=t.ui.dialog.prototype.options.position,e=this.uiDialog.is(":visible"),e||this.uiDialog.show(),this.uiDialog.position(i),e||this.uiDialog.hide()}})}(jQuery),function(t){var e=/up|down|vertical/,i=/up|left|vertical|horizontal/;t.effects.effect.blind=function(s,n){var o,a,r,h=t(this),l=["position","top","bottom","left","right","height","width"],c=t.effects.setMode(h,s.mode||"hide"),u=s.direction||"up",d=e.test(u),p=d?"height":"width",f=d?"top":"left",g=i.test(u),m={},v="show"===c;h.parent().is(".ui-effects-wrapper")?t.effects.save(h.parent(),l):t.effects.save(h,l),h.show(),o=t.effects.createWrapper(h).css({overflow:"hidden"}),a=o[p](),r=parseFloat(o.css(f))||0,m[p]=v?a:0,g||(h.css(d?"bottom":"right",0).css(d?"top":"left","auto").css({position:"absolute"}),m[f]=v?r:a+r),v&amp;&amp;(o.css(p,0),g||o.css(f,r+a)),o.animate(m,{duration:s.duration,easing:s.easing,queue:!1,complete:function(){"hide"===c&amp;&amp;h.hide(),t.effects.restore(h,l),t.effects.removeWrapper(h),n()}})}}(jQuery),function(t){t.effects.effect.bounce=function(e,i){var s,n,o,a=t(this),r=["position","top","bottom","left","right","height","width"],h=t.effects.setMode(a,e.mode||"effect"),l="hide"===h,c="show"===h,u=e.direction||"up",d=e.distance,p=e.times||5,f=2*p+(c||l?1:0),g=e.duration/f,m=e.easing,v="up"===u||"down"===u?"top":"left",_="up"===u||"left"===u,b=a.queue(),y=b.length;for((c||l)&amp;&amp;r.push("opacity"),t.effects.save(a,r),a.show(),t.effects.createWrapper(a),d||(d=a["top"===v?"outerHeight":"outerWidth"]()/3),c&amp;&amp;(o={opacity:1},o[v]=0,a.css("opacity",0).css(v,_?2*-d:2*d).animate(o,g,m)),l&amp;&amp;(d/=Math.pow(2,p-1)),o={},o[v]=0,s=0;p&gt;s;s++)n={},n[v]=(_?"-=":"+=")+d,a.animate(n,g,m).animate(o,g,m),d=l?2*d:d/2;l&amp;&amp;(n={opacity:0},n[v]=(_?"-=":"+=")+d,a.animate(n,g,m)),a.queue(function(){l&amp;&amp;a.hide(),t.effects.restore(a,r),t.effects.removeWrapper(a),i()}),y&gt;1&amp;&amp;b.splice.apply(b,[1,0].concat(b.splice(y,f+1))),a.dequeue()}}(jQuery),function(t){t.effects.effect.clip=function(e,i){var s,n,o,a=t(this),r=["position","top","bottom","left","right","height","width"],h=t.effects.setMode(a,e.mode||"hide"),l="show"===h,c=e.direction||"vertical",u="vertical"===c,d=u?"height":"width",p=u?"top":"left",f={};t.effects.save(a,r),a.show(),s=t.effects.createWrapper(a).css({overflow:"hidden"}),n="IMG"===a[0].tagName?s:a,o=n[d](),l&amp;&amp;(n.css(d,0),n.css(p,o/2)),f[d]=l?o:0,f[p]=l?0:o/2,n.animate(f,{queue:!1,duration:e.duration,easing:e.easing,complete:function(){l||a.hide(),t.effects.restore(a,r),t.effects.removeWrapper(a),i()}})}}(jQuery),function(t){t.effects.effect.drop=function(e,i){var s,n=t(this),o=["position","top","bottom","left","right","opacity","height","width"],a=t.effects.setMode(n,e.mode||"hide"),r="show"===a,h=e.direction||"left",l="up"===h||"down"===h?"top":"left",c="up"===h||"left"===h?"pos":"neg",u={opacity:r?1:0};t.effects.save(n,o),n.show(),t.effects.createWrapper(n),s=e.distance||n["top"===l?"outerHeight":"outerWidth"](!0)/2,r&amp;&amp;n.css("opacity",0).css(l,"pos"===c?-s:s),u[l]=(r?"pos"===c?"+=":"-=":"pos"===c?"-=":"+=")+s,n.animate(u,{queue:!1,duration:e.duration,easing:e.easing,complete:function(){"hide"===a&amp;&amp;n.hide(),t.effects.restore(n,o),t.effects.removeWrapper(n),i()}})}}(jQuery),function(t){t.effects.effect.explode=function(e,i){function s(){b.push(this),b.length===u*d&amp;&amp;n()}function n(){p.css({visibility:"visible"}),t(b).remove(),g||p.hide(),i()}var o,a,r,h,l,c,u=e.pieces?Math.round(Math.sqrt(e.pieces)):3,d=u,p=t(this),f=t.effects.setMode(p,e.mode||"hide"),g="show"===f,m=p.show().css("visibility","hidden").offset(),v=Math.ceil(p.outerWidth()/d),_=Math.ceil(p.outerHeight()/u),b=[];for(o=0;u&gt;o;o++)for(h=m.top+o*_,c=o-(u-1)/2,a=0;d&gt;a;a++)r=m.left+a*v,l=a-(d-1)/2,p.clone().appendTo("body").wrap("&lt;div&gt;&lt;/div&gt;").css({position:"absolute",visibility:"visible",left:-a*v,top:-o*_}).parent().addClass("ui-effects-explode").css({position:"absolute",overflow:"hidden",width:v,height:_,left:r+(g?l*v:0),top:h+(g?c*_:0),opacity:g?0:1}).animate({left:r+(g?0:l*v),top:h+(g?0:c*_),opacity:g?1:0},e.duration||500,e.easing,s)}}(jQuery),function(t){t.effects.effect.fade=function(e,i){var s=t(this),n=t.effects.setMode(s,e.mode||"toggle");s.animate({opacity:n},{queue:!1,duration:e.duration,easing:e.easing,complete:i})}}(jQuery),function(t){t.effects.effect.fold=function(e,i){var s,n,o=t(this),a=["position","top","bottom","left","right","height","width"],r=t.effects.setMode(o,e.mode||"hide"),h="show"===r,l="hide"===r,c=e.size||15,u=/([0-9]+)%/.exec(c),d=!!e.horizFirst,p=h!==d,f=p?["width","height"]:["height","width"],g=e.duration/2,m={},v={};t.effects.save(o,a),o.show(),s=t.effects.createWrapper(o).css({overflow:"hidden"}),n=p?[s.width(),s.height()]:[s.height(),s.width()],u&amp;&amp;(c=parseInt(u[1],10)/100*n[l?0:1]),h&amp;&amp;s.css(d?{height:0,width:c}:{height:c,width:0}),m[f[0]]=h?n[0]:c,v[f[1]]=h?n[1]:0,s.animate(m,g,e.easing).animate(v,g,e.easing,function(){l&amp;&amp;o.hide(),t.effects.restore(o,a),t.effects.removeWrapper(o),i()})}}(jQuery),function(t){t.effects.effect.highlight=function(e,i){var s=t(this),n=["backgroundImage","backgroundColor","opacity"],o=t.effects.setMode(s,e.mode||"show"),a={backgroundColor:s.css("backgroundColor")};"hide"===o&amp;&amp;(a.opacity=0),t.effects.save(s,n),s.show().css({backgroundImage:"none",backgroundColor:e.color||"#ffff99"}).animate(a,{queue:!1,duration:e.duration,easing:e.easing,complete:function(){"hide"===o&amp;&amp;s.hide(),t.effects.restore(s,n),i()}})}}(jQuery),function(t){t.effects.effect.pulsate=function(e,i){var s,n=t(this),o=t.effects.setMode(n,e.mode||"show"),a="show"===o,r="hide"===o,h=a||"hide"===o,l=2*(e.times||5)+(h?1:0),c=e.duration/l,u=0,d=n.queue(),p=d.length;for((a||!n.is(":visible"))&amp;&amp;(n.css("opacity",0).show(),u=1),s=1;l&gt;s;s++)n.animate({opacity:u},c,e.easing),u=1-u;n.animate({opacity:u},c,e.easing),n.queue(function(){r&amp;&amp;n.hide(),i()}),p&gt;1&amp;&amp;d.splice.apply(d,[1,0].concat(d.splice(p,l+1))),n.dequeue()}}(jQuery),function(t){t.effects.effect.puff=function(e,i){var s=t(this),n=t.effects.setMode(s,e.mode||"hide"),o="hide"===n,a=parseInt(e.percent,10)||150,r=a/100,h={height:s.height(),width:s.width(),outerHeight:s.outerHeight(),outerWidth:s.outerWidth()};t.extend(e,{effect:"scale",queue:!1,fade:!0,mode:n,complete:i,percent:o?a:100,from:o?h:{height:h.height*r,width:h.width*r,outerHeight:h.outerHeight*r,outerWidth:h.outerWidth*r}}),s.effect(e)},t.effects.effect.scale=function(e,i){var s=t(this),n=t.extend(!0,{},e),o=t.effects.setMode(s,e.mode||"effect"),a=parseInt(e.percent,10)||(0===parseInt(e.percent,10)?0:"hide"===o?0:100),r=e.direction||"both",h=e.origin,l={height:s.height(),width:s.width(),outerHeight:s.outerHeight(),outerWidth:s.outerWidth()},c={y:"horizontal"!==r?a/100:1,x:"vertical"!==r?a/100:1};n.effect="size",n.queue=!1,n.complete=i,"effect"!==o&amp;&amp;(n.origin=h||["middle","center"],n.restore=!0),n.from=e.from||("show"===o?{height:0,width:0,outerHeight:0,outerWidth:0}:l),n.to={height:l.height*c.y,width:l.width*c.x,outerHeight:l.outerHeight*c.y,outerWidth:l.outerWidth*c.x},n.fade&amp;&amp;("show"===o&amp;&amp;(n.from.opacity=0,n.to.opacity=1),"hide"===o&amp;&amp;(n.from.opacity=1,n.to.opacity=0)),s.effect(n)},t.effects.effect.size=function(e,i){var s,n,o,a=t(this),r=["position","top","bottom","left","right","width","height","overflow","opacity"],h=["position","top","bottom","left","right","overflow","opacity"],l=["width","height","overflow"],c=["fontSize"],u=["borderTopWidth","borderBottomWidth","paddingTop","paddingBottom"],d=["borderLeftWidth","borderRightWidth","paddingLeft","paddingRight"],p=t.effects.setMode(a,e.mode||"effect"),f=e.restore||"effect"!==p,g=e.scale||"both",m=e.origin||["middle","center"],v=a.css("position"),_=f?r:h,b={height:0,width:0,outerHeight:0,outerWidth:0};"show"===p&amp;&amp;a.show(),s={height:a.height(),width:a.width(),outerHeight:a.outerHeight(),outerWidth:a.outerWidth()},"toggle"===e.mode&amp;&amp;"show"===p?(a.from=e.to||b,a.to=e.from||s):(a.from=e.from||("show"===p?b:s),a.to=e.to||("hide"===p?b:s)),o={from:{y:a.from.height/s.height,x:a.from.width/s.width},to:{y:a.to.height/s.height,x:a.to.width/s.width}},("box"===g||"both"===g)&amp;&amp;(o.from.y!==o.to.y&amp;&amp;(_=_.concat(u),a.from=t.effects.setTransition(a,u,o.from.y,a.from),a.to=t.effects.setTransition(a,u,o.to.y,a.to)),o.from.x!==o.to.x&amp;&amp;(_=_.concat(d),a.from=t.effects.setTransition(a,d,o.from.x,a.from),a.to=t.effects.setTransition(a,d,o.to.x,a.to))),("content"===g||"both"===g)&amp;&amp;o.from.y!==o.to.y&amp;&amp;(_=_.concat(c).concat(l),a.from=t.effects.setTransition(a,c,o.from.y,a.from),a.to=t.effects.setTransition(a,c,o.to.y,a.to)),t.effects.save(a,_),a.show(),t.effects.createWrapper(a),a.css("overflow","hidden").css(a.from),m&amp;&amp;(n=t.effects.getBaseline(m,s),a.from.top=(s.outerHeight-a.outerHeight())*n.y,a.from.left=(s.outerWidth-a.outerWidth())*n.x,a.to.top=(s.outerHeight-a.to.outerHeight)*n.y,a.to.left=(s.outerWidth-a.to.outerWidth)*n.x),a.css(a.from),("content"===g||"both"===g)&amp;&amp;(u=u.concat(["marginTop","marginBottom"]).concat(c),d=d.concat(["marginLeft","marginRight"]),l=r.concat(u).concat(d),a.find("*[width]").each(function(){var i=t(this),s={height:i.height(),width:i.width(),outerHeight:i.outerHeight(),outerWidth:i.outerWidth()};f&amp;&amp;t.effects.save(i,l),i.from={height:s.height*o.from.y,width:s.width*o.from.x,outerHeight:s.outerHeight*o.from.y,outerWidth:s.outerWidth*o.from.x},i.to={height:s.height*o.to.y,width:s.width*o.to.x,outerHeight:s.height*o.to.y,outerWidth:s.width*o.to.x},o.from.y!==o.to.y&amp;&amp;(i.from=t.effects.setTransition(i,u,o.from.y,i.from),i.to=t.effects.setTransition(i,u,o.to.y,i.to)),o.from.x!==o.to.x&amp;&amp;(i.from=t.effects.setTransition(i,d,o.from.x,i.from),i.to=t.effects.setTransition(i,d,o.to.x,i.to)),i.css(i.from),i.animate(i.to,e.duration,e.easing,function(){f&amp;&amp;t.effects.restore(i,l)})})),a.animate(a.to,{queue:!1,duration:e.duration,easing:e.easing,complete:function(){0===a.to.opacity&amp;&amp;a.css("opacity",a.from.opacity),"hide"===p&amp;&amp;a.hide(),t.effects.restore(a,_),f||("static"===v?a.css({position:"relative",top:a.to.top,left:a.to.left}):t.each(["top","left"],function(t,e){a.css(e,function(e,i){var s=parseInt(i,10),n=t?a.to.left:a.to.top;return"auto"===i?n+"px":s+n+"px"})})),t.effects.removeWrapper(a),i()}})}}(jQuery),function(t){t.effects.effect.shake=function(e,i){var s,n=t(this),o=["position","top","bottom","left","right","height","width"],a=t.effects.setMode(n,e.mode||"effect"),r=e.direction||"left",h=e.distance||20,l=e.times||3,c=2*l+1,u=Math.round(e.duration/c),d="up"===r||"down"===r?"top":"left",p="up"===r||"left"===r,f={},g={},m={},v=n.queue(),_=v.length;for(t.effects.save(n,o),n.show(),t.effects.createWrapper(n),f[d]=(p?"-=":"+=")+h,g[d]=(p?"+=":"-=")+2*h,m[d]=(p?"-=":"+=")+2*h,n.animate(f,u,e.easing),s=1;l&gt;s;s++)n.animate(g,u,e.easing).animate(m,u,e.easing);n.animate(g,u,e.easing).animate(f,u/2,e.easing).queue(function(){"hide"===a&amp;&amp;n.hide(),t.effects.restore(n,o),t.effects.removeWrapper(n),i()}),_&gt;1&amp;&amp;v.splice.apply(v,[1,0].concat(v.splice(_,c+1))),n.dequeue()}}(jQuery),function(t){t.effects.effect.slide=function(e,i){var s,n=t(this),o=["position","top","bottom","left","right","width","height"],a=t.effects.setMode(n,e.mode||"show"),r="show"===a,h=e.direction||"left",l="up"===h||"down"===h?"top":"left",c="up"===h||"left"===h,u={};t.effects.save(n,o),n.show(),s=e.distance||n["top"===l?"outerHeight":"outerWidth"](!0),t.effects.createWrapper(n).css({overflow:"hidden"}),r&amp;&amp;n.css(l,c?isNaN(s)?"-"+s:-s:s),u[l]=(r?c?"+=":"-=":c?"-=":"+=")+s,n.animate(u,{queue:!1,duration:e.duration,easing:e.easing,complete:function(){"hide"===a&amp;&amp;n.hide(),t.effects.restore(n,o),t.effects.removeWrapper(n),i()}})}}(jQuery),function(t){t.effects.effect.transfer=function(e,i){var s=t(this),n=t(e.to),o="fixed"===n.css("position"),a=t("body"),r=o?a.scrollTop():0,h=o?a.scrollLeft():0,l=n.offset(),c={top:l.top-r,left:l.left-h,height:n.innerHeight(),width:n.innerWidth()},u=s.offset(),d=t("&lt;div class=''ui-effects-transfer''&gt;&lt;/div&gt;").appendTo(document.body).addClass(e.className).css({top:u.top-r,left:u.left-h,height:s.innerHeight(),width:s.innerWidth(),position:o?"fixed":"absolute"}).animate(c,e.duration,e.easing,function(){d.remove(),i()})}}(jQuery),function(t){t.widget("ui.menu",{version:"1.10.4",defaultElement:"&lt;ul&gt;",delay:300,options:{icons:{submenu:"ui-icon-carat-1-e"},menus:"ul",position:{my:"left top",at:"right top"},role:"menu",blur:null,focus:null,select:null},_create:function(){this.activeMenu=this.element,this.mouseHandled=!1,this.element.uniqueId().addClass("ui-menu ui-widget ui-widget-content ui-corner-all").toggleClass("ui-menu-icons",!!this.element.find(".ui-icon").length).attr({role:this.options.role,tabIndex:0}).bind("click"+this.eventNamespace,t.proxy(function(t){this.options.disabled&amp;&amp;t.preventDefault()},this)),this.options.disabled&amp;&amp;this.element.addClass("ui-state-disabled").attr("aria-disabled","true"),this._on({"mousedown .ui-menu-item &gt; a":function(t){t.preventDefault()},"click .ui-state-disabled &gt; a":function(t){t.preventDefault()},"click .ui-menu-item:has(a)":function(e){var i=t(e.target).closest(".ui-menu-item");!this.mouseHandled&amp;&amp;i.not(".ui-state-disabled").length&amp;&amp;(this.select(e),e.isPropagationStopped()||(this.mouseHandled=!0),i.has(".ui-menu").length?this.expand(e):!this.element.is(":focus")&amp;&amp;t(this.document[0].activeElement).closest(".ui-menu").length&amp;&amp;(this.element.trigger("focus",[!0]),this.active&amp;&amp;1===this.active.parents(".ui-menu").length&amp;&amp;clearTimeout(this.timer)))},"mouseenter .ui-menu-item":function(e){var i=t(e.currentTarget);i.siblings().children(".ui-state-active").removeClass("ui-state-active"),this.focus(e,i)},mouseleave:"collapseAll","mouseleave .ui-menu":"collapseAll",focus:function(t,e){var i=this.active||this.element.children(".ui-menu-item").eq(0);e||this.focus(t,i)},blur:function(e){this._delay(function(){t.contains(this.element[0],this.document[0].activeElement)||this.collapseAll(e)})},keydown:"_keydown"}),this.refresh(),this._on(this.document,{click:function(e){t(e.target).closest(".ui-menu").length||this.collapseAll(e),this.mouseHandled=!1}})},_destroy:function(){this.element.removeAttr("aria-activedescendant").find(".ui-menu").addBack().removeClass("ui-menu ui-widget ui-widget-content ui-corner-all ui-menu-icons").removeAttr("role").removeAttr("tabIndex").removeAttr("aria-labelledby").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-disabled").removeUniqueId().show(),this.element.find(".ui-menu-item").removeClass("ui-menu-item").removeAttr("role").removeAttr("aria-disabled").children("a").removeUniqueId().removeClass("ui-corner-all ui-state-hover").removeAttr("tabIndex").removeAttr("role").removeAttr("aria-haspopup").children().each(function(){var e=t(this);e.data("ui-menu-submenu-carat")&amp;&amp;e.remove()}),this.element.find(".ui-menu-divider").removeClass("ui-menu-divider ui-widget-content")},_keydown:function(e){function i(t){return t.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&amp;")}var s,n,o,a,r,h=!0;switch(e.keyCode){case t.ui.keyCode.PAGE_UP:this.previousPage(e);break;case t.ui.keyCode.PAGE_DOWN:this.nextPage(e);break;case t.ui.keyCode.HOME:this._move("first","first",e);break;case t.ui.keyCode.END:this._move("last","last",e);break;case t.ui.keyCode.UP:this.previous(e);break;case t.ui.keyCode.DOWN:this.next(e);break;case t.ui.keyCode.LEFT:this.collapse(e);break;case t.ui.keyCode.RIGHT:this.active&amp;&amp;!this.active.is(".ui-state-disabled")&amp;&amp;this.expand(e);break;case t.ui.keyCode.ENTER:case t.ui.keyCode.SPACE:this._activate(e);break;case t.ui.keyCode.ESCAPE:this.collapse(e);break;default:h=!1,n=this.previousFilter||"",o=String.fromCharCode(e.keyCode),a=!1,clearTimeout(this.filterTimer),o===n?a=!0:o=n+o,r=RegExp("^"+i(o),"i"),s=this.activeMenu.children(".ui-menu-item").filter(function(){return r.test(t(this).children("a").text())}),s=a&amp;&amp;-1!==s.index(this.active.next())?this.active.nextAll(".ui-menu-item"):s,s.length||(o=String.fromCharCode(e.keyCode),r=RegExp("^"+i(o),"i"),s=this.activeMenu.children(".ui-menu-item").filter(function(){return r.test(t(this).children("a").text())})),s.length?(this.focus(e,s),s.length&gt;1?(this.previousFilter=o,this.filterTimer=this._delay(function(){delete this.previousFilter},1e3)):delete this.previousFilter):delete this.previousFilter}h&amp;&amp;e.preventDefault()},_activate:function(t){this.active.is(".ui-state-disabled")||(this.active.children("a[aria-haspopup=''true'']").length?this.expand(t):this.select(t))},refresh:function(){var e,i=this.options.icons.submenu,s=this.element.find(this.options.menus);this.element.toggleClass("ui-menu-icons",!!this.element.find(".ui-icon").length),s.filter(":not(.ui-menu)").addClass("ui-menu ui-widget ui-widget-content ui-corner-all").hide().attr({role:this.options.role,"aria-hidden":"true","aria-expanded":"false"}).each(function(){var e=t(this),s=e.prev("a"),n=t("&lt;span&gt;").addClass("ui-menu-icon ui-icon "+i).data("ui-menu-submenu-carat",!0);s.attr("aria-haspopup","true").prepend(n),e.attr("aria-labelledby",s.attr("id"))}),e=s.add(this.element),e.children(":not(.ui-menu-item):has(a)").addClass("ui-menu-item").attr("role","presentation").children("a").uniqueId().addClass("ui-corner-all").attr({tabIndex:-1,role:this._itemRole()}),e.children(":not(.ui-menu-item)").each(function(){var e=t(this);/[^\-\u2014\u2013\s]/.test(e.text())||e.addClass("ui-widget-content ui-menu-divider")}),e.children(".ui-state-disabled").attr("aria-disabled","true"),this.active&amp;&amp;!t.contains(this.element[0],this.active[0])&amp;&amp;this.blur()},_itemRole:function(){return{menu:"menuitem",listbox:"option"}[this.options.role]},_setOption:function(t,e){"icons"===t&amp;&amp;this.element.find(".ui-menu-icon").removeClass(this.options.icons.submenu).addClass(e.submenu),this._super(t,e)},focus:function(t,e){var i,s;this.blur(t,t&amp;&amp;"focus"===t.type),this._scrollIntoView(e),this.active=e.first(),s=this.active.children("a").addClass("ui-state-focus"),this.options.role&amp;&amp;this.element.attr("aria-activedescendant",s.attr("id")),this.active.parent().closest(".ui-menu-item").children("a:first").addClass("ui-state-active"),t&amp;&amp;"keydown"===t.type?this._close():this.timer=this._delay(function(){this._close()},this.delay),i=e.children(".ui-menu"),i.length&amp;&amp;t&amp;&amp;/^mouse/.test(t.type)&amp;&amp;this._startOpening(i),this.activeMenu=e.parent(),this._trigger("focus",t,{item:e})},_scrollIntoView:function(e){var i,s,n,o,a,r;this._hasScroll()&amp;&amp;(i=parseFloat(t.css(this.activeMenu[0],"borderTopWidth"))||0,s=parseFloat(t.css(this.activeMenu[0],"paddingTop"))||0,n=e.offset().top-this.activeMenu.offset().top-i-s,o=this.activeMenu.scrollTop(),a=this.activeMenu.height(),r=e.height(),0&gt;n?this.activeMenu.scrollTop(o+n):n+r&gt;a&amp;&amp;this.activeMenu.scrollTop(o+n-a+r))},blur:function(t,e){e||clearTimeout(this.timer),this.active&amp;&amp;(this.active.children("a").removeClass("ui-state-focus"),this.active=null,this._trigger("blur",t,{item:this.active}))},_startOpening:function(t){clearTimeout(this.timer),"true"===t.attr("aria-hidden")&amp;&amp;(this.timer=this._delay(function(){this._close(),this._open(t)},this.delay))},_open:function(e){var i=t.extend({of:this.active},this.options.position);clearTimeout(this.timer),this.element.find(".ui-menu").not(e.parents(".ui-menu")).hide().attr("aria-hidden","true"),e.show().removeAttr("aria-hidden").attr("aria-expanded","true").position(i)},collapseAll:function(e,i){clearTimeout(this.timer),this.timer=this._delay(function(){var s=i?this.element:t(e&amp;&amp;e.target).closest(this.element.find(".ui-menu"));s.length||(s=this.element),this._close(s),this.blur(e),this.activeMenu=s},this.delay)},_close:function(t){t||(t=this.active?this.active.parent():this.element),t.find(".ui-menu").hide().attr("aria-hidden","true").attr("aria-expanded","false").end().find("a.ui-state-active").removeClass("ui-state-active")},collapse:function(t){var e=this.active&amp;&amp;this.active.parent().closest(".ui-menu-item",this.element);e&amp;&amp;e.length&amp;&amp;(this._close(),this.focus(t,e))},expand:function(t){var e=this.active&amp;&amp;this.active.children(".ui-menu ").children(".ui-menu-item").first();e&amp;&amp;e.length&amp;&amp;(this._open(e.parent()),this._delay(function(){this.focus(t,e)}))},next:function(t){this._move("next","first",t)},previous:function(t){this._move("prev","last",t)},isFirstItem:function(){return this.active&amp;&amp;!this.active.prevAll(".ui-menu-item").length},isLastItem:function(){return this.active&amp;&amp;!this.active.nextAll(".ui-menu-item").length},_move:function(t,e,i){var s;this.active&amp;&amp;(s="first"===t||"last"===t?this.active["first"===t?"prevAll":"nextAll"](".ui-menu-item").eq(-1):this.active[t+"All"](".ui-menu-item").eq(0)),s&amp;&amp;s.length&amp;&amp;this.active||(s=this.activeMenu.children(".ui-menu-item")[e]()),this.focus(i,s)},nextPage:function(e){var i,s,n;return this.active?(this.isLastItem()||(this._hasScroll()?(s=this.active.offset().top,n=this.element.height(),this.active.nextAll(".ui-menu-item").each(function(){return i=t(this),0&gt;i.offset().top-s-n}),this.focus(e,i)):this.focus(e,this.activeMenu.children(".ui-menu-item")[this.active?"last":"first"]())),undefined):(this.next(e),undefined)},previousPage:function(e){var i,s,n;return this.active?(this.isFirstItem()||(this._hasScroll()?(s=this.active.offset().top,n=this.element.height(),this.active.prevAll(".ui-menu-item").each(function(){return i=t(this),i.offset().top-s+n&gt;0}),this.focus(e,i)):this.focus(e,this.activeMenu.children(".ui-menu-item").first())),undefined):(this.next(e),undefined)},_hasScroll:function(){return this.element.outerHeight()&lt;this.element.prop("scrollHeight")},select:function(e){this.active=this.active||t(e.target).closest(".ui-menu-item");var i={item:this.active};this.active.has(".ui-menu").length||this.collapseAll(e,!0),this._trigger("select",e,i)}})}(jQuery),function(t,e){function i(t,e,i){return[parseFloat(t[0])*(p.test(t[0])?e/100:1),parseFloat(t[1])*(p.test(t[1])?i/100:1)]}function s(e,i){return parseInt(t.css(e,i),10)||0}function n(e){var i=e[0];return 9===i.nodeType?{width:e.width(),height:e.height(),offset:{top:0,left:0}}:t.isWindow(i)?{width:e.width(),height:e.height(),offset:{top:e.scrollTop(),left:e.scrollLeft()}}:i.preventDefault?{width:0,height:0,offset:{top:i.pageY,left:i.pageX}}:{width:e.outerWidth(),height:e.outerHeight(),offset:e.offset()}}t.ui=t.ui||{};var o,a=Math.max,r=Math.abs,h=Math.round,l=/left|center|right/,c=/top|center|bottom/,u=/[\+\-]\d+(\.[\d]+)?%?/,d=/^\w+/,p=/%$/,f=t.fn.position;t.position={scrollbarWidth:function(){if(o!==e)return o;var i,s,n=t("&lt;div style=''display:block;position:absolute;width:50px;height:50px;overflow:hidden;''&gt;&lt;div style=''height:100px;width:auto;''&gt;&lt;/div&gt;&lt;/div&gt;"),a=n.children()[0];return t("body").append(n),i=a.offsetWidth,n.css("overflow","scroll"),s=a.offsetWidth,i===s&amp;&amp;(s=n[0].clientWidth),n.remove(),o=i-s},getScrollInfo:function(e){var i=e.isWindow||e.isDocument?"":e.element.css("overflow-x"),s=e.isWindow||e.isDocument?"":e.element.css("overflow-y"),n="scroll"===i||"auto"===i&amp;&amp;e.width&lt;e.element[0].scrollWidth,o="scroll"===s||"auto"===s&amp;&amp;e.height&lt;e.element[0].scrollHeight;return{width:o?t.position.scrollbarWidth():0,height:n?t.position.scrollbarWidth():0}},getWithinInfo:function(e){var i=t(e||window),s=t.isWindow(i[0]),n=!!i[0]&amp;&amp;9===i[0].nodeType;return{element:i,isWindow:s,isDocument:n,offset:i.offset()||{left:0,top:0},scrollLeft:i.scrollLeft(),scrollTop:i.scrollTop(),width:s?i.width():i.outerWidth(),height:s?i.height():i.outerHeight()}}},t.fn.position=function(e){if(!e||!e.of)return f.apply(this,arguments);e=t.extend({},e);var o,p,g,m,v,_,b=t(e.of),y=t.position.getWithinInfo(e.within),w=t.position.getScrollInfo(y),x=(e.collision||"flip").split(" "),k={};return _=n(b),b[0].preventDefault&amp;&amp;(e.at="left top"),p=_.width,g=_.height,m=_.offset,v=t.extend({},m),t.each(["my","at"],function(){var t,i,s=(e[this]||"").split(" ");1===s.length&amp;&amp;(s=l.test(s[0])?s.concat(["center"]):c.test(s[0])?["center"].concat(s):["center","center"]),s[0]=l.test(s[0])?s[0]:"center",s[1]=c.test(s[1])?s[1]:"center",t=u.exec(s[0]),i=u.exec(s[1]),k[this]=[t?t[0]:0,i?i[0]:0],e[this]=[d.exec(s[0])[0],d.exec(s[1])[0]]}),1===x.length&amp;&amp;(x[1]=x[0]),"right"===e.at[0]?v.left+=p:"center"===e.at[0]&amp;&amp;(v.left+=p/2),"bottom"===e.at[1]?v.top+=g:"center"===e.at[1]&amp;&amp;(v.top+=g/2),o=i(k.at,p,g),v.left+=o[0],v.top+=o[1],this.each(function(){var n,l,c=t(this),u=c.outerWidth(),d=c.outerHeight(),f=s(this,"marginLeft"),_=s(this,"marginTop"),D=u+f+s(this,"marginRight")+w.width,C=d+_+s(this,"marginBottom")+w.height,I=t.extend({},v),P=i(k.my,c.outerWidth(),c.outerHeight());"right"===e.my[0]?I.left-=u:"center"===e.my[0]&amp;&amp;(I.left-=u/2),"bottom"===e.my[1]?I.top-=d:"center"===e.my[1]&amp;&amp;(I.top-=d/2),I.left+=P[0],I.top+=P[1],t.support.offsetFractions||(I.left=h(I.left),I.top=h(I.top)),n={marginLeft:f,marginTop:_},t.each(["left","top"],function(i,s){t.ui.position[x[i]]&amp;&amp;t.ui.position[x[i]][s](I,{targetWidth:p,targetHeight:g,elemWidth:u,elemHeight:d,collisionPosition:n,collisionWidth:D,collisionHeight:C,offset:[o[0]+P[0],o[1]+P[1]],my:e.my,at:e.at,within:y,elem:c})}),e.using&amp;&amp;(l=function(t){var i=m.left-I.left,s=i+p-u,n=m.top-I.top,o=n+g-d,h={target:{element:b,left:m.left,top:m.top,width:p,height:g},element:{element:c,left:I.left,top:I.top,width:u,height:d},horizontal:0&gt;s?"left":i&gt;0?"right":"center",vertical:0&gt;o?"top":n&gt;0?"bottom":"middle"};u&gt;p&amp;&amp;p&gt;r(i+s)&amp;&amp;(h.horizontal="center"),d&gt;g&amp;&amp;g&gt;r(n+o)&amp;&amp;(h.vertical="middle"),h.important=a(r(i),r(s))&gt;a(r(n),r(o))?"horizontal":"vertical",e.using.call(this,t,h)}),c.offset(t.extend(I,{using:l}))})},t.ui.position={fit:{left:function(t,e){var i,s=e.within,n=s.isWindow?s.scrollLeft:s.offset.left,o=s.width,r=t.left-e.collisionPosition.marginLeft,h=n-r,l=r+e.collisionWidth-o-n;e.collisionWidth&gt;o?h&gt;0&amp;&amp;0&gt;=l?(i=t.left+h+e.collisionWidth-o-n,t.left+=h-i):t.left=l&gt;0&amp;&amp;0&gt;=h?n:h&gt;l?n+o-e.collisionWidth:n:h&gt;0?t.left+=h:l&gt;0?t.left-=l:t.left=a(t.left-r,t.left)},top:function(t,e){var i,s=e.within,n=s.isWindow?s.scrollTop:s.offset.top,o=e.within.height,r=t.top-e.collisionPosition.marginTop,h=n-r,l=r+e.collisionHeight-o-n;e.collisionHeight&gt;o?h&gt;0&amp;&amp;0&gt;=l?(i=t.top+h+e.collisionHeight-o-n,t.top+=h-i):t.top=l&gt;0&amp;&amp;0&gt;=h?n:h&gt;l?n+o-e.collisionHeight:n:h&gt;0?t.top+=h:l&gt;0?t.top-=l:t.top=a(t.top-r,t.top)}},flip:{left:function(t,e){var i,s,n=e.within,o=n.offset.left+n.scrollLeft,a=n.width,h=n.isWindow?n.scrollLeft:n.offset.left,l=t.left-e.collisionPosition.marginLeft,c=l-h,u=l+e.collisionWidth-a-h,d="left"===e.my[0]?-e.elemWidth:"right"===e.my[0]?e.elemWidth:0,p="left"===e.at[0]?e.targetWidth:"right"===e.at[0]?-e.targetWidth:0,f=-2*e.offset[0];0&gt;c?(i=t.left+d+p+f+e.collisionWidth-a-o,(0&gt;i||r(c)&gt;i)&amp;&amp;(t.left+=d+p+f)):u&gt;0&amp;&amp;(s=t.left-e.collisionPosition.marginLeft+d+p+f-h,(s&gt;0||u&gt;r(s))&amp;&amp;(t.left+=d+p+f))},top:function(t,e){var i,s,n=e.within,o=n.offset.top+n.scrollTop,a=n.height,h=n.isWindow?n.scrollTop:n.offset.top,l=t.top-e.collisionPosition.marginTop,c=l-h,u=l+e.collisionHeight-a-h,d="top"===e.my[1],p=d?-e.elemHeight:"bottom"===e.my[1]?e.elemHeight:0,f="top"===e.at[1]?e.targetHeight:"bottom"===e.at[1]?-e.targetHeight:0,g=-2*e.offset[1];0&gt;c?(s=t.top+p+f+g+e.collisionHeight-a-o,t.top+p+f+g&gt;c&amp;&amp;(0&gt;s||r(c)&gt;s)&amp;&amp;(t.top+=p+f+g)):u&gt;0&amp;&amp;(i=t.top-e.collisionPosition.marginTop+p+f+g-h,t.top+p+f+g&gt;u&amp;&amp;(i&gt;0||u&gt;r(i))&amp;&amp;(t.top+=p+f+g))}},flipfit:{left:function(){t.ui.position.flip.left.apply(this,arguments),t.ui.position.fit.left.apply(this,arguments)},top:function(){t.ui.position.flip.top.apply(this,arguments),t.ui.position.fit.top.apply(this,arguments)}}},function(){var e,i,s,n,o,a=document.getElementsByTagName("body")[0],r=document.createElement("div");e=document.createElement(a?"div":"body"),s={visibility:"hidden",width:0,height:0,border:0,margin:0,background:"none"},a&amp;&amp;t.extend(s,{position:"absolute",left:"-1000px",top:"-1000px"});for(o in s)e.style[o]=s[o];e.appendChild(r),i=a||document.documentElement,i.insertBefore(e,i.firstChild),r.style.cssText="position: absolute; left: 10.7432222px;",n=t(r).offset().left,t.support.offsetFractions=n&gt;10&amp;&amp;11&gt;n,e.innerHTML="",i.removeChild(e)}()}(jQuery),function(t,e){t.widget("ui.progressbar",{version:"1.10.4",options:{max:100,value:0,change:null,complete:null},min:0,_create:function(){this.oldValue=this.options.value=this._constrainedValue(),this.element.addClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").attr({role:"progressbar","aria-valuemin":this.min}),this.valueDiv=t("&lt;div class=''ui-progressbar-value ui-widget-header ui-corner-left''&gt;&lt;/div&gt;").appendTo(this.element),this._refreshValue()},_destroy:function(){this.element.removeClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow"),this.valueDiv.remove()},value:function(t){return t===e?this.options.value:(this.options.value=this._constrainedValue(t),this._refreshValue(),e)},_constrainedValue:function(t){return t===e&amp;&amp;(t=this.options.value),this.indeterminate=t===!1,"number"!=typeof t&amp;&amp;(t=0),this.indeterminate?!1:Math.min(this.options.max,Math.max(this.min,t))},_setOptions:function(t){var e=t.value;delete t.value,this._super(t),this.options.value=this._constrainedValue(e),this._refreshValue()},_setOption:function(t,e){"max"===t&amp;&amp;(e=Math.max(this.min,e)),this._super(t,e)},_percentage:function(){return this.indeterminate?100:100*(this.options.value-this.min)/(this.options.max-this.min)},_refreshValue:function(){var e=this.options.value,i=this._percentage();this.valueDiv.toggle(this.indeterminate||e&gt;this.min).toggleClass("ui-corner-right",e===this.options.max).width(i.toFixed(0)+"%"),this.element.toggleClass("ui-progressbar-indeterminate",this.indeterminate),this.indeterminate?(this.element.removeAttr("aria-valuenow"),this.overlayDiv||(this.overlayDiv=t("&lt;div class=''ui-progressbar-overlay''&gt;&lt;/div&gt;").appendTo(this.valueDiv))):(this.element.attr({"aria-valuemax":this.options.max,"aria-valuenow":e}),this.overlayDiv&amp;&amp;(this.overlayDiv.remove(),this.overlayDiv=null)),this.oldValue!==e&amp;&amp;(this.oldValue=e,this._trigger("change")),e===this.options.max&amp;&amp;this._trigger("complete")}})}(jQuery),function(t){var e=5;t.widget("ui.slider",t.ui.mouse,{version:"1.10.4",widgetEventPrefix:"slide",options:{animate:!1,distance:0,max:100,min:0,orientation:"horizontal",range:!1,step:1,value:0,values:null,change:null,slide:null,start:null,stop:null},_create:function(){this._keySliding=!1,this._mouseSliding=!1,this._animateOff=!0,this._handleIndex=null,this._detectOrientation(),this._mouseInit(),this.element.addClass("ui-slider ui-slider-"+this.orientation+" ui-widget"+" ui-widget-content"+" ui-corner-all"),this._refresh(),this._setOption("disabled",this.options.disabled),this._animateOff=!1},_refresh:function(){this._createRange(),this._createHandles(),this._setupEvents(),this._refreshValue()},_createHandles:function(){var e,i,s=this.options,n=this.element.find(".ui-slider-handle").addClass("ui-state-default ui-corner-all"),o="&lt;a class=''ui-slider-handle ui-state-default ui-corner-all'' href=''#''&gt;&lt;/a&gt;",a=[];for(i=s.values&amp;&amp;s.values.length||1,n.length&gt;i&amp;&amp;(n.slice(i).remove(),n=n.slice(0,i)),e=n.length;i&gt;e;e++)a.push(o);this.handles=n.add(t(a.join("")).appendTo(this.element)),this.handle=this.handles.eq(0),this.handles.each(function(e){t(this).data("ui-slider-handle-index",e)})},_createRange:function(){var e=this.options,i="";e.range?(e.range===!0&amp;&amp;(e.values?e.values.length&amp;&amp;2!==e.values.length?e.values=[e.values[0],e.values[0]]:t.isArray(e.values)&amp;&amp;(e.values=e.values.slice(0)):e.values=[this._valueMin(),this._valueMin()]),this.range&amp;&amp;this.range.length?this.range.removeClass("ui-slider-range-min ui-slider-range-max").css({left:"",bottom:""}):(this.range=t("&lt;div&gt;&lt;/div&gt;").appendTo(this.element),i="ui-slider-range ui-widget-header ui-corner-all"),this.range.addClass(i+("min"===e.range||"max"===e.range?" ui-slider-range-"+e.range:""))):(this.range&amp;&amp;this.range.remove(),this.range=null)},_setupEvents:function(){var t=this.handles.add(this.range).filter("a");this._off(t),this._on(t,this._handleEvents),this._hoverable(t),this._focusable(t)},_destroy:function(){this.handles.remove(),this.range&amp;&amp;this.range.remove(),this.element.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-widget ui-widget-content ui-corner-all"),this._mouseDestroy()},_mouseCapture:function(e){var i,s,n,o,a,r,h,l,c=this,u=this.options;return u.disabled?!1:(this.elementSize={width:this.element.outerWidth(),height:this.element.outerHeight()},this.elementOffset=this.element.offset(),i={x:e.pageX,y:e.pageY},s=this._normValueFromMouse(i),n=this._valueMax()-this._valueMin()+1,this.handles.each(function(e){var i=Math.abs(s-c.values(e));(n&gt;i||n===i&amp;&amp;(e===c._lastChangedValue||c.values(e)===u.min))&amp;&amp;(n=i,o=t(this),a=e)}),r=this._start(e,a),r===!1?!1:(this._mouseSliding=!0,this._handleIndex=a,o.addClass("ui-state-active").focus(),h=o.offset(),l=!t(e.target).parents().addBack().is(".ui-slider-handle"),this._clickOffset=l?{left:0,top:0}:{left:e.pageX-h.left-o.width()/2,top:e.pageY-h.top-o.height()/2-(parseInt(o.css("borderTopWidth"),10)||0)-(parseInt(o.css("borderBottomWidth"),10)||0)+(parseInt(o.css("marginTop"),10)||0)},this.handles.hasClass("ui-state-hover")||this._slide(e,a,s),this._animateOff=!0,!0))},_mouseStart:function(){return!0},_mouseDrag:function(t){var e={x:t.pageX,y:t.pageY},i=this._normValueFromMouse(e);return this._slide(t,this._handleIndex,i),!1},_mouseStop:function(t){return this.handles.removeClass("ui-state-active"),this._mouseSliding=!1,this._stop(t,this._handleIndex),this._change(t,this._handleIndex),this._handleIndex=null,this._clickOffset=null,this._animateOff=!1,!1},_detectOrientation:function(){this.orientation="vertical"===this.options.orientation?"vertical":"horizontal"},_normValueFromMouse:function(t){var e,i,s,n,o;return"horizontal"===this.orientation?(e=this.elementSize.width,i=t.x-this.elementOffset.left-(this._clickOffset?this._clickOffset.left:0)):(e=this.elementSize.height,i=t.y-this.elementOffset.top-(this._clickOffset?this._clickOffset.top:0)),s=i/e,s&gt;1&amp;&amp;(s=1),0&gt;s&amp;&amp;(s=0),"vertical"===this.orientation&amp;&amp;(s=1-s),n=this._valueMax()-this._valueMin(),o=this._valueMin()+s*n,this._trimAlignValue(o)},_start:function(t,e){var i={handle:this.handles[e],value:this.value()};return this.options.values&amp;&amp;this.options.values.length&amp;&amp;(i.value=this.values(e),i.values=this.values()),this._trigger("start",t,i)},_slide:function(t,e,i){var s,n,o;this.options.values&amp;&amp;this.options.values.length?(s=this.values(e?0:1),2===this.options.values.length&amp;&amp;this.options.range===!0&amp;&amp;(0===e&amp;&amp;i&gt;s||1===e&amp;&amp;s&gt;i)&amp;&amp;(i=s),i!==this.values(e)&amp;&amp;(n=this.values(),n[e]=i,o=this._trigger("slide",t,{handle:this.handles[e],value:i,values:n}),s=this.values(e?0:1),o!==!1&amp;&amp;this.values(e,i))):i!==this.value()&amp;&amp;(o=this._trigger("slide",t,{handle:this.handles[e],value:i}),o!==!1&amp;&amp;this.value(i))},_stop:function(t,e){var i={handle:this.handles[e],value:this.value()};this.options.values&amp;&amp;this.options.values.length&amp;&amp;(i.value=this.values(e),i.values=this.values()),this._trigger("stop",t,i)},_change:function(t,e){if(!this._keySliding&amp;&amp;!this._mouseSliding){var i={handle:this.handles[e],value:this.value()};this.options.values&amp;&amp;this.options.values.length&amp;&amp;(i.value=this.values(e),i.values=this.values()),this._lastChangedValue=e,this._trigger("change",t,i)}},value:function(t){return arguments.length?(this.options.value=this._trimAlignValue(t),this._refreshValue(),this._change(null,0),undefined):this._value()},values:function(e,i){var s,n,o;if(arguments.length&gt;1)return this.options.values[e]=this._trimAlignValue(i),this._refreshValue(),this._change(null,e),undefined;if(!arguments.length)return this._values();if(!t.isArray(arguments[0]))return this.options.values&amp;&amp;this.options.values.length?this._values(e):this.value();for(s=this.options.values,n=arguments[0],o=0;s.length&gt;o;o+=1)s[o]=this._trimAlignValue(n[o]),this._change(null,o);this._refreshValue()},_setOption:function(e,i){var s,n=0;switch("range"===e&amp;&amp;this.options.range===!0&amp;&amp;("min"===i?(this.options.value=this._values(0),this.options.values=null):"max"===i&amp;&amp;(this.options.value=this._values(this.options.values.length-1),this.options.values=null)),t.isArray(this.options.values)&amp;&amp;(n=this.options.values.length),t.Widget.prototype._setOption.apply(this,arguments),e){case"orientation":this._detectOrientation(),this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-"+this.orientation),this._refreshValue();break;case"value":this._animateOff=!0,this._refreshValue(),this._change(null,0),this._animateOff=!1;break;case"values":for(this._animateOff=!0,this._refreshValue(),s=0;n&gt;s;s+=1)this._change(null,s);this._animateOff=!1;break;case"min":case"max":this._animateOff=!0,this._refreshValue(),this._animateOff=!1;break;case"range":this._animateOff=!0,this._refresh(),this._animateOff=!1}},_value:function(){var t=this.options.value;return t=this._trimAlignValue(t)},_values:function(t){var e,i,s;if(arguments.length)return e=this.options.values[t],e=this._trimAlignValue(e);if(this.options.values&amp;&amp;this.options.values.length){for(i=this.options.values.slice(),s=0;i.length&gt;s;s+=1)i[s]=this._trimAlignValue(i[s]);return i}return[]},_trimAlignValue:function(t){if(this._valueMin()&gt;=t)return this._valueMin();if(t&gt;=this._valueMax())return this._valueMax();var e=this.options.step&gt;0?this.options.step:1,i=(t-this._valueMin())%e,s=t-i;return 2*Math.abs(i)&gt;=e&amp;&amp;(s+=i&gt;0?e:-e),parseFloat(s.toFixed(5))},_valueMin:function(){return this.options.min},_valueMax:function(){return this.options.max},_refreshValue:function(){var e,i,s,n,o,a=this.options.range,r=this.options,h=this,l=this._animateOff?!1:r.animate,c={};this.options.values&amp;&amp;this.options.values.length?this.handles.each(function(s){i=100*((h.values(s)-h._valueMin())/(h._valueMax()-h._valueMin())),c["horizontal"===h.orientation?"left":"bottom"]=i+"%",t(this).stop(1,1)[l?"animate":"css"](c,r.animate),h.options.range===!0&amp;&amp;("horizontal"===h.orientation?(0===s&amp;&amp;h.range.stop(1,1)[l?"animate":"css"]({left:i+"%"},r.animate),1===s&amp;&amp;h.range[l?"animate":"css"]({width:i-e+"%"},{queue:!1,duration:r.animate})):(0===s&amp;&amp;h.range.stop(1,1)[l?"animate":"css"]({bottom:i+"%"},r.animate),1===s&amp;&amp;h.range[l?"animate":"css"]({height:i-e+"%"},{queue:!1,duration:r.animate}))),e=i}):(s=this.value(),n=this._valueMin(),o=this._valueMax(),i=o!==n?100*((s-n)/(o-n)):0,c["horizontal"===this.orientation?"left":"bottom"]=i+"%",this.handle.stop(1,1)[l?"animate":"css"](c,r.animate),"min"===a&amp;&amp;"horizontal"===this.orientation&amp;&amp;this.range.stop(1,1)[l?"animate":"css"]({width:i+"%"},r.animate),"max"===a&amp;&amp;"horizontal"===this.orientation&amp;&amp;this.range[l?"animate":"css"]({width:100-i+"%"},{queue:!1,duration:r.animate}),"min"===a&amp;&amp;"vertical"===this.orientation&amp;&amp;this.range.stop(1,1)[l?"animate":"css"]({height:i+"%"},r.animate),"max"===a&amp;&amp;"vertical"===this.orientation&amp;&amp;this.range[l?"animate":"css"]({height:100-i+"%"},{queue:!1,duration:r.animate}))},_handleEvents:{keydown:function(i){var s,n,o,a,r=t(i.target).data("ui-slider-handle-index");switch(i.keyCode){case t.ui.keyCode.HOME:case t.ui.keyCode.END:case t.ui.keyCode.PAGE_UP:case t.ui.keyCode.PAGE_DOWN:case t.ui.keyCode.UP:case t.ui.keyCode.RIGHT:case t.ui.keyCode.DOWN:case t.ui.keyCode.LEFT:if(i.preventDefault(),!this._keySliding&amp;&amp;(this._keySliding=!0,t(i.target).addClass("ui-state-active"),s=this._start(i,r),s===!1))return}switch(a=this.options.step,n=o=this.options.values&amp;&amp;this.options.values.length?this.values(r):this.value(),i.keyCode){case t.ui.keyCode.HOME:o=this._valueMin();break;case t.ui.keyCode.END:o=this._valueMax();break;case t.ui.keyCode.PAGE_UP:o=this._trimAlignValue(n+(this._valueMax()-this._valueMin())/e);break;case t.ui.keyCode.PAGE_DOWN:o=this._trimAlignValue(n-(this._valueMax()-this._valueMin())/e);break;case t.ui.keyCode.UP:case t.ui.keyCode.RIGHT:if(n===this._valueMax())return;o=this._trimAlignValue(n+a);break;case t.ui.keyCode.DOWN:case t.ui.keyCode.LEFT:if(n===this._valueMin())return;o=this._trimAlignValue(n-a)}this._slide(i,r,o)},click:function(t){t.preventDefault()},keyup:function(e){var i=t(e.target).data("ui-slider-handle-index");this._keySliding&amp;&amp;(this._keySliding=!1,this._stop(e,i),this._change(e,i),t(e.target).removeClass("ui-state-active"))}}})}(jQuery),function(t){function e(t){return function(){var e=this.element.val();t.apply(this,arguments),this._refresh(),e!==this.element.val()&amp;&amp;this._trigger("change")}}t.widget("ui.spinner",{version:"1.10.4",defaultElement:"&lt;input&gt;",widgetEventPrefix:"spin",options:{culture:null,icons:{down:"ui-icon-triangle-1-s",up:"ui-icon-triangle-1-n"},incremental:!0,max:null,min:null,numberFormat:null,page:10,step:1,change:null,spin:null,start:null,stop:null},_create:function(){this._setOption("max",this.options.max),this._setOption("min",this.options.min),this._setOption("step",this.options.step),""!==this.value()&amp;&amp;this._value(this.element.val(),!0),this._draw(),this._on(this._events),this._refresh(),this._on(this.window,{beforeunload:function(){this.element.removeAttr("autocomplete")}})},_getCreateOptions:function(){var e={},i=this.element;return t.each(["min","max","step"],function(t,s){var n=i.attr(s);void 0!==n&amp;&amp;n.length&amp;&amp;(e[s]=n)}),e},_events:{keydown:function(t){this._start(t)&amp;&amp;this._keydown(t)&amp;&amp;t.preventDefault()},keyup:"_stop",focus:function(){this.previous=this.element.val()},blur:function(t){return this.cancelBlur?(delete this.cancelBlur,void 0):(this._stop(),this._refresh(),this.previous!==this.element.val()&amp;&amp;this._trigger("change",t),void 0)},mousewheel:function(t,e){if(e){if(!this.spinning&amp;&amp;!this._start(t))return!1;this._spin((e&gt;0?1:-1)*this.options.step,t),clearTimeout(this.mousewheelTimer),this.mousewheelTimer=this._delay(function(){this.spinning&amp;&amp;this._stop(t)},100),t.preventDefault()}},"mousedown .ui-spinner-button":function(e){function i(){var t=this.element[0]===this.document[0].activeElement;t||(this.element.focus(),this.previous=s,this._delay(function(){this.previous=s}))}var s;s=this.element[0]===this.document[0].activeElement?this.previous:this.element.val(),e.preventDefault(),i.call(this),this.cancelBlur=!0,this._delay(function(){delete this.cancelBlur,i.call(this)}),this._start(e)!==!1&amp;&amp;this._repeat(null,t(e.currentTarget).hasClass("ui-spinner-up")?1:-1,e)},"mouseup .ui-spinner-button":"_stop","mouseenter .ui-spinner-button":function(e){return t(e.currentTarget).hasClass("ui-state-active")?this._start(e)===!1?!1:(this._repeat(null,t(e.currentTarget).hasClass("ui-spinner-up")?1:-1,e),void 0):void 0},"mouseleave .ui-spinner-button":"_stop"},_draw:function(){var t=this.uiSpinner=this.element.addClass("ui-spinner-input").attr("autocomplete","off").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml());this.element.attr("role","spinbutton"),this.buttons=t.find(".ui-spinner-button").attr("tabIndex",-1).button().removeClass("ui-corner-all"),this.buttons.height()&gt;Math.ceil(.5*t.height())&amp;&amp;t.height()&gt;0&amp;&amp;t.height(t.height()),this.options.disabled&amp;&amp;this.disable()},_keydown:function(e){var i=this.options,s=t.ui.keyCode;switch(e.keyCode){case s.UP:return this._repeat(null,1,e),!0;case s.DOWN:return this._repeat(null,-1,e),!0;case s.PAGE_UP:return this._repeat(null,i.page,e),!0;case s.PAGE_DOWN:return this._repeat(null,-i.page,e),!0}return!1},_uiSpinnerHtml:function(){return"&lt;span class=''ui-spinner ui-widget ui-widget-content ui-corner-all''&gt;&lt;/span&gt;"},_buttonHtml:function(){return"&lt;a class=''ui-spinner-button ui-spinner-up ui-corner-tr''&gt;&lt;span class=''ui-icon "+this.options.icons.up+"''&gt;&amp;#9650;&lt;/span&gt;"+"&lt;/a&gt;"+"&lt;a class=''ui-spinner-button ui-spinner-down ui-corner-br''&gt;"+"&lt;span class=''ui-icon "+this.options.icons.down+"''&gt;&amp;#9660;&lt;/span&gt;"+"&lt;/a&gt;"},_start:function(t){return this.spinning||this._trigger("start",t)!==!1?(this.counter||(this.counter=1),this.spinning=!0,!0):!1},_repeat:function(t,e,i){t=t||500,clearTimeout(this.timer),this.timer=this._delay(function(){this._repeat(40,e,i)},t),this._spin(e*this.options.step,i)},_spin:function(t,e){var i=this.value()||0;this.counter||(this.counter=1),i=this._adjustValue(i+t*this._increment(this.counter)),this.spinning&amp;&amp;this._trigger("spin",e,{value:i})===!1||(this._value(i),this.counter++)},_increment:function(e){var i=this.options.incremental;return i?t.isFunction(i)?i(e):Math.floor(e*e*e/5e4-e*e/500+17*e/200+1):1},_precision:function(){var t=this._precisionOf(this.options.step);return null!==this.options.min&amp;&amp;(t=Math.max(t,this._precisionOf(this.options.min))),t},_precisionOf:function(t){var e=""+t,i=e.indexOf(".");return-1===i?0:e.length-i-1},_adjustValue:function(t){var e,i,s=this.options;return e=null!==s.min?s.min:0,i=t-e,i=Math.round(i/s.step)*s.step,t=e+i,t=parseFloat(t.toFixed(this._precision())),null!==s.max&amp;&amp;t&gt;s.max?s.max:null!==s.min&amp;&amp;s.min&gt;t?s.min:t},_stop:function(t){this.spinning&amp;&amp;(clearTimeout(this.timer),clearTimeout(this.mousewheelTimer),this.counter=0,this.spinning=!1,this._trigger("stop",t))},_setOption:function(t,e){if("culture"===t||"numberFormat"===t){var i=this._parse(this.element.val());return this.options[t]=e,this.element.val(this._format(i)),void 0}("max"===t||"min"===t||"step"===t)&amp;&amp;"string"==typeof e&amp;&amp;(e=this._parse(e)),"icons"===t&amp;&amp;(this.buttons.first().find(".ui-icon").removeClass(this.options.icons.up).addClass(e.up),this.buttons.last().find(".ui-icon").removeClass(this.options.icons.down).addClass(e.down)),this._super(t,e),"disabled"===t&amp;&amp;(e?(this.element.prop("disabled",!0),this.buttons.button("disable")):(this.element.prop("disabled",!1),this.buttons.button("enable")))},_setOptions:e(function(t){this._super(t),this._value(this.element.val())}),_parse:function(t){return"string"==typeof t&amp;&amp;""!==t&amp;&amp;(t=window.Globalize&amp;&amp;this.options.numberFormat?Globalize.parseFloat(t,10,this.options.culture):+t),""===t||isNaN(t)?null:t},_format:function(t){return""===t?"":window.Globalize&amp;&amp;this.options.numberFormat?Globalize.format(t,this.options.numberFormat,this.options.culture):t},_refresh:function(){this.element.attr({"aria-valuemin":this.options.min,"aria-valuemax":this.options.max,"aria-valuenow":this._parse(this.element.val())})},_value:function(t,e){var i;""!==t&amp;&amp;(i=this._parse(t),null!==i&amp;&amp;(e||(i=this._adjustValue(i)),t=this._format(i))),this.element.val(t),this._refresh()},_destroy:function(){this.element.removeClass("ui-spinner-input").prop("disabled",!1).removeAttr("autocomplete").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow"),this.uiSpinner.replaceWith(this.element)},stepUp:e(function(t){this._stepUp(t)}),_stepUp:function(t){this._start()&amp;&amp;(this._spin((t||1)*this.options.step),this._stop())},stepDown:e(function(t){this._stepDown(t)}),_stepDown:function(t){this._start()&amp;&amp;(this._spin((t||1)*-this.options.step),this._stop())},pageUp:e(function(t){this._stepUp((t||1)*this.options.page)}),pageDown:e(function(t){this._stepDown((t||1)*this.options.page)}),value:function(t){return arguments.length?(e(this._value).call(this,t),void 0):this._parse(this.element.val())},widget:function(){return this.uiSpinner}})}(jQuery),function(t,e){function i(){return++n}function s(t){return t=t.cloneNode(!1),t.hash.length&gt;1&amp;&amp;decodeURIComponent(t.href.replace(o,""))===decodeURIComponent(location.href.replace(o,""))}var n=0,o=/#.*$/;t.widget("ui.tabs",{version:"1.10.4",delay:300,options:{active:null,collapsible:!1,event:"click",heightStyle:"content",hide:null,show:null,activate:null,beforeActivate:null,beforeLoad:null,load:null},_create:function(){var e=this,i=this.options;this.running=!1,this.element.addClass("ui-tabs ui-widget ui-widget-content ui-corner-all").toggleClass("ui-tabs-collapsible",i.collapsible).delegate(".ui-tabs-nav &gt; li","mousedown"+this.eventNamespace,function(e){t(this).is(".ui-state-disabled")&amp;&amp;e.preventDefault()}).delegate(".ui-tabs-anchor","focus"+this.eventNamespace,function(){t(this).closest("li").is(".ui-state-disabled")&amp;&amp;this.blur()}),this._processTabs(),i.active=this._initialActive(),t.isArray(i.disabled)&amp;&amp;(i.disabled=t.unique(i.disabled.concat(t.map(this.tabs.filter(".ui-state-disabled"),function(t){return e.tabs.index(t)}))).sort()),this.active=this.options.active!==!1&amp;&amp;this.anchors.length?this._findActive(i.active):t(),this._refresh(),this.active.length&amp;&amp;this.load(i.active)},_initialActive:function(){var i=this.options.active,s=this.options.collapsible,n=location.hash.substring(1);return null===i&amp;&amp;(n&amp;&amp;this.tabs.each(function(s,o){return t(o).attr("aria-controls")===n?(i=s,!1):e}),null===i&amp;&amp;(i=this.tabs.index(this.tabs.filter(".ui-tabs-active"))),(null===i||-1===i)&amp;&amp;(i=this.tabs.length?0:!1)),i!==!1&amp;&amp;(i=this.tabs.index(this.tabs.eq(i)),-1===i&amp;&amp;(i=s?!1:0)),!s&amp;&amp;i===!1&amp;&amp;this.anchors.length&amp;&amp;(i=0),i},_getCreateEventData:function(){return{tab:this.active,panel:this.active.length?this._getPanelForTab(this.active):t()}},_tabKeydown:function(i){var s=t(this.document[0].activeElement).closest("li"),n=this.tabs.index(s),o=!0;if(!this._handlePageNav(i)){switch(i.keyCode){case t.ui.keyCode.RIGHT:case t.ui.keyCode.DOWN:n++;break;case t.ui.keyCode.UP:case t.ui.keyCode.LEFT:o=!1,n--;break;case t.ui.keyCode.END:n=this.anchors.length-1;break;case t.ui.keyCode.HOME:n=0;break;case t.ui.keyCode.SPACE:return i.preventDefault(),clearTimeout(this.activating),this._activate(n),e;case t.ui.keyCode.ENTER:return i.preventDefault(),clearTimeout(this.activating),this._activate(n===this.options.active?!1:n),e;default:return}i.preventDefault(),clearTimeout(this.activating),n=this._focusNextTab(n,o),i.ctrlKey||(s.attr("aria-selected","false"),this.tabs.eq(n).attr("aria-selected","true"),this.activating=this._delay(function(){this.option("active",n)},this.delay))}},_panelKeydown:function(e){this._handlePageNav(e)||e.ctrlKey&amp;&amp;e.keyCode===t.ui.keyCode.UP&amp;&amp;(e.preventDefault(),this.active.focus())},_handlePageNav:function(i){return i.altKey&amp;&amp;i.keyCode===t.ui.keyCode.PAGE_UP?(this._activate(this._focusNextTab(this.options.active-1,!1)),!0):i.altKey&amp;&amp;i.keyCode===t.ui.keyCode.PAGE_DOWN?(this._activate(this._focusNextTab(this.options.active+1,!0)),!0):e},_findNextTab:function(e,i){function s(){return e&gt;n&amp;&amp;(e=0),0&gt;e&amp;&amp;(e=n),e}for(var n=this.tabs.length-1;-1!==t.inArray(s(),this.options.disabled);)e=i?e+1:e-1;return e},_focusNextTab:function(t,e){return t=this._findNextTab(t,e),this.tabs.eq(t).focus(),t},_setOption:function(t,i){return"active"===t?(this._activate(i),e):"disabled"===t?(this._setupDisabled(i),e):(this._super(t,i),"collapsible"===t&amp;&amp;(this.element.toggleClass("ui-tabs-collapsible",i),i||this.options.active!==!1||this._activate(0)),"event"===t&amp;&amp;this._setupEvents(i),"heightStyle"===t&amp;&amp;this._setupHeightStyle(i),e)},_tabId:function(t){return t.attr("aria-controls")||"ui-tabs-"+i()},_sanitizeSelector:function(t){return t?t.replace(/[!"$%&amp;''()*+,.\/:;&lt;=&gt;?@\[\]\^`{|}~]/g,"\\$&amp;"):""},refresh:function(){var e=this.options,i=this.tablist.children(":has(a[href])");e.disabled=t.map(i.filter(".ui-state-disabled"),function(t){return i.index(t)}),this._processTabs(),e.active!==!1&amp;&amp;this.anchors.length?this.active.length&amp;&amp;!t.contains(this.tablist[0],this.active[0])?this.tabs.length===e.disabled.length?(e.active=!1,this.active=t()):this._activate(this._findNextTab(Math.max(0,e.active-1),!1)):e.active=this.tabs.index(this.active):(e.active=!1,this.active=t()),this._refresh()},_refresh:function(){this._setupDisabled(this.options.disabled),this._setupEvents(this.options.event),this._setupHeightStyle(this.options.heightStyle),this.tabs.not(this.active).attr({"aria-selected":"false",tabIndex:-1}),this.panels.not(this._getPanelForTab(this.active)).hide().attr({"aria-expanded":"false","aria-hidden":"true"}),this.active.length?(this.active.addClass("ui-tabs-active ui-state-active").attr({"aria-selected":"true",tabIndex:0}),this._getPanelForTab(this.active).show().attr({"aria-expanded":"true","aria-hidden":"false"})):this.tabs.eq(0).attr("tabIndex",0)},_processTabs:function(){var e=this;this.tablist=this._getList().addClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").attr("role","tablist"),this.tabs=this.tablist.find("&gt; li:has(a[href])").addClass("ui-state-default ui-corner-top").attr({role:"tab",tabIndex:-1}),this.anchors=this.tabs.map(function(){return t("a",this)[0]}).addClass("ui-tabs-anchor").attr({role:"presentation",tabIndex:-1}),this.panels=t(),this.anchors.each(function(i,n){var o,a,r,h=t(n).uniqueId().attr("id"),l=t(n).closest("li"),c=l.attr("aria-controls");s(n)?(o=n.hash,a=e.element.find(e._sanitizeSelector(o))):(r=e._tabId(l),o="#"+r,a=e.element.find(o),a.length||(a=e._createPanel(r),a.insertAfter(e.panels[i-1]||e.tablist)),a.attr("aria-live","polite")),a.length&amp;&amp;(e.panels=e.panels.add(a)),c&amp;&amp;l.data("ui-tabs-aria-controls",c),l.attr({"aria-controls":o.substring(1),"aria-labelledby":h}),a.attr("aria-labelledby",h)}),this.panels.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").attr("role","tabpanel")},_getList:function(){return this.tablist||this.element.find("ol,ul").eq(0)},_createPanel:function(e){return t("&lt;div&gt;").attr("id",e).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").data("ui-tabs-destroy",!0)},_setupDisabled:function(e){t.isArray(e)&amp;&amp;(e.length?e.length===this.anchors.length&amp;&amp;(e=!0):e=!1);for(var i,s=0;i=this.tabs[s];s++)e===!0||-1!==t.inArray(s,e)?t(i).addClass("ui-state-disabled").attr("aria-disabled","true"):t(i).removeClass("ui-state-disabled").removeAttr("aria-disabled");this.options.disabled=e},_setupEvents:function(e){var i={click:function(t){t.preventDefault()}};e&amp;&amp;t.each(e.split(" "),function(t,e){i[e]="_eventHandler"}),this._off(this.anchors.add(this.tabs).add(this.panels)),this._on(this.anchors,i),this._on(this.tabs,{keydown:"_tabKeydown"}),this._on(this.panels,{keydown:"_panelKeydown"}),this._focusable(this.tabs),this._hoverable(this.tabs)},_setupHeightStyle:function(e){var i,s=this.element.parent();"fill"===e?(i=s.height(),i-=this.element.outerHeight()-this.element.height(),this.element.siblings(":visible").each(function(){var e=t(this),s=e.css("position");"absolute"!==s&amp;&amp;"fixed"!==s&amp;&amp;(i-=e.outerHeight(!0))}),this.element.children().not(this.panels).each(function(){i-=t(this).outerHeight(!0)}),this.panels.each(function(){t(this).height(Math.max(0,i-t(this).innerHeight()+t(this).height()))}).css("overflow","auto")):"auto"===e&amp;&amp;(i=0,this.panels.each(function(){i=Math.max(i,t(this).height("").height())}).height(i))},_eventHandler:function(e){var i=this.options,s=this.active,n=t(e.currentTarget),o=n.closest("li"),a=o[0]===s[0],r=a&amp;&amp;i.collapsible,h=r?t():this._getPanelForTab(o),l=s.length?this._getPanelForTab(s):t(),c={oldTab:s,oldPanel:l,newTab:r?t():o,newPanel:h};e.preventDefault(),o.hasClass("ui-state-disabled")||o.hasClass("ui-tabs-loading")||this.running||a&amp;&amp;!i.collapsible||this._trigger("beforeActivate",e,c)===!1||(i.active=r?!1:this.tabs.index(o),this.active=a?t():o,this.xhr&amp;&amp;this.xhr.abort(),l.length||h.length||t.error("jQuery UI Tabs: Mismatching fragment identifier."),h.length&amp;&amp;this.load(this.tabs.index(o),e),this._toggle(e,c))},_toggle:function(e,i){function s(){o.running=!1,o._trigger("activate",e,i)}function n(){i.newTab.closest("li").addClass("ui-tabs-active ui-state-active"),a.length&amp;&amp;o.options.show?o._show(a,o.options.show,s):(a.show(),s())}var o=this,a=i.newPanel,r=i.oldPanel;this.running=!0,r.length&amp;&amp;this.options.hide?this._hide(r,this.options.hide,function(){i.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"),n()}):(i.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"),r.hide(),n()),r.attr({"aria-expanded":"false","aria-hidden":"true"}),i.oldTab.attr("aria-selected","false"),a.length&amp;&amp;r.length?i.oldTab.attr("tabIndex",-1):a.length&amp;&amp;this.tabs.filter(function(){return 0===t(this).attr("tabIndex")}).attr("tabIndex",-1),a.attr({"aria-expanded":"true","aria-hidden":"false"}),i.newTab.attr({"aria-selected":"true",tabIndex:0})},_activate:function(e){var i,s=this._findActive(e);s[0]!==this.active[0]&amp;&amp;(s.length||(s=this.active),i=s.find(".ui-tabs-anchor")[0],this._eventHandler({target:i,currentTarget:i,preventDefault:t.noop}))},_findActive:function(e){return e===!1?t():this.tabs.eq(e)},_getIndex:function(t){return"string"==typeof t&amp;&amp;(t=this.anchors.index(this.anchors.filter("[href$=''"+t+"'']"))),t},_destroy:function(){this.xhr&amp;&amp;this.xhr.abort(),this.element.removeClass("ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible"),this.tablist.removeClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").removeAttr("role"),this.anchors.removeClass("ui-tabs-anchor").removeAttr("role").removeAttr("tabIndex").removeUniqueId(),this.tabs.add(this.panels).each(function(){t.data(this,"ui-tabs-destroy")?t(this).remove():t(this).removeClass("ui-state-default ui-state-active ui-state-disabled ui-corner-top ui-corner-bottom ui-widget-content ui-tabs-active ui-tabs-panel").removeAttr("tabIndex").removeAttr("aria-live").removeAttr("aria-busy").removeAttr("aria-selected").removeAttr("aria-labelledby").removeAttr("aria-hidden").removeAttr("aria-expanded").removeAttr("role")}),this.tabs.each(function(){var e=t(this),i=e.data("ui-tabs-aria-controls");i?e.attr("aria-controls",i).removeData("ui-tabs-aria-controls"):e.removeAttr("aria-controls")}),this.panels.show(),"content"!==this.options.heightStyle&amp;&amp;this.panels.css("height","")},enable:function(i){var s=this.options.disabled;s!==!1&amp;&amp;(i===e?s=!1:(i=this._getIndex(i),s=t.isArray(s)?t.map(s,function(t){return t!==i?t:null}):t.map(this.tabs,function(t,e){return e!==i?e:null})),this._setupDisabled(s))},disable:function(i){var s=this.options.disabled;if(s!==!0){if(i===e)s=!0;else{if(i=this._getIndex(i),-1!==t.inArray(i,s))return;s=t.isArray(s)?t.merge([i],s).sort():[i]}this._setupDisabled(s)}},load:function(e,i){e=this._getIndex(e);var n=this,o=this.tabs.eq(e),a=o.find(".ui-tabs-anchor"),r=this._getPanelForTab(o),h={tab:o,panel:r};s(a[0])||(this.xhr=t.ajax(this._ajaxSettings(a,i,h)),this.xhr&amp;&amp;"canceled"!==this.xhr.statusText&amp;&amp;(o.addClass("ui-tabs-loading"),r.attr("aria-busy","true"),this.xhr.success(function(t){setTimeout(function(){r.html(t),n._trigger("load",i,h)},1)}).complete(function(t,e){setTimeout(function(){"abort"===e&amp;&amp;n.panels.stop(!1,!0),o.removeClass("ui-tabs-loading"),r.removeAttr("aria-busy"),t===n.xhr&amp;&amp;delete n.xhr},1)})))},_ajaxSettings:function(e,i,s){var n=this;return{url:e.attr("href"),beforeSend:function(e,o){return n._trigger("beforeLoad",i,t.extend({jqXHR:e,ajaxSettings:o},s))}}},_getPanelForTab:function(e){var i=t(e).attr("aria-controls");return this.element.find(this._sanitizeSelector("#"+i))}})}(jQuery),function(t){function e(e,i){var s=(e.attr("aria-describedby")||"").split(/\s+/);s.push(i),e.data("ui-tooltip-id",i).attr("aria-describedby",t.trim(s.join(" ")))}function i(e){var i=e.data("ui-tooltip-id"),s=(e.attr("aria-describedby")||"").split(/\s+/),n=t.inArray(i,s);-1!==n&amp;&amp;s.splice(n,1),e.removeData("ui-tooltip-id"),s=t.trim(s.join(" ")),s?e.attr("aria-describedby",s):e.removeAttr("aria-describedby")}var s=0;t.widget("ui.tooltip",{version:"1.10.4",options:{content:function(){var e=t(this).attr("title")||"";return t("&lt;a&gt;").text(e).html()},hide:!0,items:"[title]:not([disabled])",position:{my:"left top+15",at:"left bottom",collision:"flipfit flip"},show:!0,tooltipClass:null,track:!1,close:null,open:null},_create:function(){this._on({mouseover:"open",focusin:"open"}),this.tooltips={},this.parents={},this.options.disabled&amp;&amp;this._disable()},_setOption:function(e,i){var s=this;return"disabled"===e?(this[i?"_disable":"_enable"](),this.options[e]=i,void 0):(this._super(e,i),"content"===e&amp;&amp;t.each(this.tooltips,function(t,e){s._updateContent(e)}),void 0)},_disable:function(){var e=this;t.each(this.tooltips,function(i,s){var n=t.Event("blur");n.target=n.currentTarget=s[0],e.close(n,!0)}),this.element.find(this.options.items).addBack().each(function(){var e=t(this);e.is("[title]")&amp;&amp;e.data("ui-tooltip-title",e.attr("title")).attr("title","")})},_enable:function(){this.element.find(this.options.items).addBack().each(function(){var e=t(this);e.data("ui-tooltip-title")&amp;&amp;e.attr("title",e.data("ui-tooltip-title"))})},open:function(e){var i=this,s=t(e?e.target:this.element).closest(this.options.items);s.length&amp;&amp;!s.data("ui-tooltip-id")&amp;&amp;(s.attr("title")&amp;&amp;s.data("ui-tooltip-title",s.attr("title")),s.data("ui-tooltip-open",!0),e&amp;&amp;"mouseover"===e.type&amp;&amp;s.parents().each(function(){var e,s=t(this);s.data("ui-tooltip-open")&amp;&amp;(e=t.Event("blur"),e.target=e.currentTarget=this,i.close(e,!0)),s.attr("title")&amp;&amp;(s.uniqueId(),i.parents[this.id]={element:this,title:s.attr("title")},s.attr("title",""))}),this._updateContent(s,e))},_updateContent:function(t,e){var i,s=this.options.content,n=this,o=e?e.type:null;return"string"==typeof s?this._open(e,t,s):(i=s.call(t[0],function(i){t.data("ui-tooltip-open")&amp;&amp;n._delay(function(){e&amp;&amp;(e.type=o),this._open(e,t,i)})}),i&amp;&amp;this._open(e,t,i),void 0)},_open:function(i,s,n){function o(t){l.of=t,a.is(":hidden")||a.position(l)}var a,r,h,l=t.extend({},this.options.position);if(n){if(a=this._find(s),a.length)return a.find(".ui-tooltip-content").html(n),void 0;s.is("[title]")&amp;&amp;(i&amp;&amp;"mouseover"===i.type?s.attr("title",""):s.removeAttr("title")),a=this._tooltip(s),e(s,a.attr("id")),a.find(".ui-tooltip-content").html(n),this.options.track&amp;&amp;i&amp;&amp;/^mouse/.test(i.type)?(this._on(this.document,{mousemove:o}),o(i)):a.position(t.extend({of:s},this.options.position)),a.hide(),this._show(a,this.options.show),this.options.show&amp;&amp;this.options.show.delay&amp;&amp;(h=this.delayedShow=setInterval(function(){a.is(":visible")&amp;&amp;(o(l.of),clearInterval(h))},t.fx.interval)),this._trigger("open",i,{tooltip:a}),r={keyup:function(e){if(e.keyCode===t.ui.keyCode.ESCAPE){var i=t.Event(e);i.currentTarget=s[0],this.close(i,!0)}},remove:function(){this._removeTooltip(a)}},i&amp;&amp;"mouseover"!==i.type||(r.mouseleave="close"),i&amp;&amp;"focusin"!==i.type||(r.focusout="close"),this._on(!0,s,r)}},close:function(e){var s=this,n=t(e?e.currentTarget:this.element),o=this._find(n);this.closing||(clearInterval(this.delayedShow),n.data("ui-tooltip-title")&amp;&amp;n.attr("title",n.data("ui-tooltip-title")),i(n),o.stop(!0),this._hide(o,this.options.hide,function(){s._removeTooltip(t(this))}),n.removeData("ui-tooltip-open"),this._off(n,"mouseleave focusout keyup"),n[0]!==this.element[0]&amp;&amp;this._off(n,"remove"),this._off(this.document,"mousemove"),e&amp;&amp;"mouseleave"===e.type&amp;&amp;t.each(this.parents,function(e,i){t(i.element).attr("title",i.title),delete s.parents[e]}),this.closing=!0,this._trigger("close",e,{tooltip:o}),this.closing=!1)},_tooltip:function(e){var i="ui-tooltip-"+s++,n=t("&lt;div&gt;").attr({id:i,role:"tooltip"}).addClass("ui-tooltip ui-widget ui-corner-all ui-widget-content "+(this.options.tooltipClass||""));return t("&lt;div&gt;").addClass("ui-tooltip-content").appendTo(n),n.appendTo(this.document[0].body),this.tooltips[i]=e,n},_find:function(e){var i=e.data("ui-tooltip-id");return i?t("#"+i):t()},_removeTooltip:function(t){t.remove(),delete this.tooltips[t.attr("id")]},_destroy:function(){var e=this;t.each(this.tooltips,function(i,s){var n=t.Event("blur");n.target=n.currentTarget=s[0],e.close(n,!0),t("#"+i).remove(),s.data("ui-tooltip-title")&amp;&amp;(s.attr("title",s.data("ui-tooltip-title")),s.removeData("ui-tooltip-title"))})}})}(jQuery);'</body></methods><methods><class-id>JQuery.JQCupertinoTheme</class-id> <category>accessing</category><body package="JQuery-UI">themeName	^ 'cupertino'</body></methods><methods><class-id>JQuery.JQSunnyTheme</class-id> <category>accessing</category><body package="JQuery-UI">themeName	^ 'sunny'</body></methods><methods><class-id>JQuery.JQAjax</class-id> <category>*jquery-ui-private</category><body package="JQuery-UI">callback: aBlock forEvent: anArraySpec	self 		callback: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]		value: (self javascriptForEvent: anArraySpec)</body></methods><methods><class-id>JQuery.JQAjax</class-id> <category>*jquery-ui</category><body package="JQuery-UI">callback: aBlock passengers: aQuery	"Trigger the callback aBlock with the passengers of aQuery. Nodes that have no passenger are ignored."	self		callback: [ :value | 			aBlock value: (((value substrings: ',')				collect: [ :each | self renderContext callbacks passengerAt: each ])				reject: [ :each | each isNil ]) ]		value: (JSStream on: JQuery functionName , '.map(' , aQuery greaseString , '.get(),function(each){return each.id}).join(",")')</body><body package="JQuery-UI">callbackAccordion: aBlock	"Trigger aBlock with the accordion event object."		self callback: aBlock forEvent: #(		(passenger newHeader "activated header")		(passenger oldHeader "previous header")		(passenger newContent "activated content")		(passenger oldContent "previous content"))</body><body package="JQuery-UI">callbackDraggable: aBlock	"Trigger aBlock with the draggable event object."		self callback: aBlock forEvent: #(		(passenger helper "the helper that's being dragged")		(position position "current position of the helper")		(position offset "current absolute position of the helper"))</body><body package="JQuery-UI">callbackDroppable: aBlock	"Trigger aBlock with the droppable event object."		self callback: aBlock forEvent: #(		(passenger draggable "current draggable element")		(passenger helper "current draggable helper")		(position position "current position of the draggable helper")		(position offset "current absolute position of the draggable helper"))</body><body package="JQuery-UI">callbackResizable: aBlock	"Trigger aBlock with the resizeable event object."		self callback: aBlock forEvent: #(		(passenger helper "the helper element")		(position originalPosition "position before resizing started") 		(position position "current position")		(size originalSize "size before resizing started")		(size size "current size"))</body><body package="JQuery-UI">callbackSlider: aBlock	"Trigger aBlock with the slider event object."		self callback: aBlock forEvent: #(		(passenger handle "the current focused handle")		(number value "the current handle's value"))</body><body package="JQuery-UI">callbackSortable: aBlock	"Trigger aBlock with the selectable event object."		self callback: aBlock forEvent: #(		(passenger helper "the current helper element")		(passenger item " the current dragged element")		(passenger placeholder "the placeholder")		(passenger sender "the sortable where the item comes from")		(position position "current position of the helper")		(position offset "current absolute position of the helper"))</body><body package="JQuery-UI">callbackTabs: aBlock	"Trigger aBlock with the tabs event object."		self callback: aBlock forEvent: #(		(passenger tab "anchor element of the selected (clicked) tab")		(passenger panel "element, that contains the selected/clicked tab contents")		(number index "zero-based index of the selected (clicked) tab"))</body></methods><methods><class-id>JQuery.JQAjax</class-id> <category>*jquery-ui-private</category><body package="JQuery-UI">javascriptForEvent: anArraySpec	| stream |	stream := JSStream new.	anArraySpec		do: [ :spec |			(#(#number string) includes: spec first)				ifTrue: [ stream nextPutAll: 'arguments[1].'; nextPutAll: spec second ].			(spec first = #passenger)				ifTrue: [ stream nextPutAll: JQuery functionName; nextPut: $(; nextPutAll: 'arguments[1].'; nextPutAll: spec second; nextPutAll: ').attr("id")' ].			(spec first = #position)				ifTrue: [ stream nextPutAll: 'arguments[1].'; nextPutAll: spec second; nextPutAll: '.top'; nextPutAll: '+","+'; nextPutAll: 'arguments[1].'; nextPutAll: spec second; nextPutAll: '.left' ].			(spec first = #size)				ifTrue: [ stream nextPutAll: 'arguments[1].'; nextPutAll: spec second; nextPutAll: '.width'; nextPutAll: '+","+'; nextPutAll: 'arguments[1].'; nextPutAll: spec second; nextPutAll: '.height' ] ]		separatedBy: [ stream nextPutAll: '+","+' ].	^ stream</body><body package="JQuery-UI">smalltalkForEvent: anArraySpec value: aString	| stream result |	stream := aString readStream.	result := GRSmallDictionary new.	anArraySpec do: [ :spec |		(spec first = #number)			ifTrue: [ result at: spec last put: (stream upTo: $,) greaseInteger ].		(spec first = #string)				ifTrue: [ result at: spec last put: (stream upTo: $,) ].		(spec first = #passenger)			ifTrue: [ result at: spec last put: (self renderContext callbacks passengerAt: (stream upTo: $,)) ].		(spec first = #position)			ifTrue: [ result at: spec last put: (GRSmallDictionary new add: 'top' -&gt; (stream upTo: $,) greaseInteger; add: 'left' -&gt; (stream upTo: $,) greaseInteger; yourself) ].		(spec first = #size)			ifTrue: [ result at: spec last put: (stream upTo: $,) greaseInteger @ (stream upTo: $,) greaseInteger ] ].	^ result</body></methods><methods><class-id>JQuery.JQueryInstance</class-id> <category>*jquery-ui-widgets</category><body package="JQuery-UI">accordion	"Make the selected elements Accordion widgets."		^ self create: JQAccordion</body></methods><methods><class-id>JQuery.JQueryInstance</class-id> <category>*jquery-ui-transitions</category><body package="JQuery-UI">addClass: aString duration: aDurationOrString	"Adds the specified class to each of the set of matched elements with a optional transition between the states."		self call: 'addClass' with: aString with: aDurationOrString</body></methods><methods><class-id>JQuery.JQueryInstance</class-id> <category>*jquery-ui-widgets</category><body package="JQuery-UI">autocomplete	"Make the selected input elements autocomplete."		^ self create: JQAutocomplete</body><body package="JQuery-UI">button	"Make the selected input elements buttons."		^ self create: JQButton</body><body package="JQuery-UI">buttonset	"Group buttons which should be always applied for radio buttons."	^ self call: 'buttonset'</body><body package="JQuery-UI">datepicker	"The method that you use to create a new date picker."		^ self create: JQDatepicker</body><body package="JQuery-UI">dialog	"Make the selected elements Dialog boxes."		^ self create: JQDialog</body></methods><methods><class-id>JQuery.JQueryInstance</class-id> <category>*jquery-ui-interactions</category><body package="JQuery-UI">draggable	"Creates new draggables on the nodeset supplied by the query."		^ self create: JQDraggable</body><body package="JQuery-UI">droppable	"Creates new droppables on the nodeset supplied by the query."		^ self create: JQDroppable</body></methods><methods><class-id>JQuery.JQueryInstance</class-id> <category>*jquery-ui</category><body package="JQuery-UI">effect	"This is the core dependency of the effects of jQuery UI."		^ self create: JQEffect</body></methods><methods><class-id>JQuery.JQueryInstance</class-id> <category>*jquery-ui-css</category><body package="JQuery-UI">innerHeight: anInteger	"Set the height for the elements in the set of matched elements, including padding but not border."		self call: 'innerHeight' with: anInteger</body><body package="JQuery-UI">innerWidth: anInteger	"Set the width for the elements in the set of matched elements, including padding but not border."		self call: 'innerWidth' with: anInteger</body><body package="JQuery-UI">outerHeight: anInteger	"Set the height for the elements in the set of matched elements, including padding and border."		self call: 'outerHeight' with: anInteger</body><body package="JQuery-UI">outerWidth: anInteger	"Set the width for the elements in the set of matched elements, including padding and border."		self call: 'outerWidth' with: anInteger</body></methods><methods><class-id>JQuery.JQueryInstance</class-id> <category>*jquery-ui-utilities</category><body package="JQuery-UI">positioned	"Make the selected elements positioned. Note: this method is called 'positioned' (contrary to the jQueryUI implementation where it is called 'position') to avoid a conflict in Smalltalk."		^ self create: JQPosition</body></methods><methods><class-id>JQuery.JQueryInstance</class-id> <category>*jquery-ui-widgets</category><body package="JQuery-UI">progressbar	"Make the selected elements progressbar."		^ self create: JQProgressbar</body></methods><methods><class-id>JQuery.JQueryInstance</class-id> <category>*jquery-ui-transitions</category><body package="JQuery-UI">removeClass: aString duration: aDurationOrString	"Removes the specified class from the set of matched elements with a optional transition."		self call: 'removeClass' with: aString with: aDurationOrString</body></methods><methods><class-id>JQuery.JQueryInstance</class-id> <category>*jquery-ui-interactions</category><body package="JQuery-UI">resizable	"Creates new resizables on the nodeset supplied by the query."		^ self create: JQResizable</body><body package="JQuery-UI">selectable	"Creates new selectable on the nodeset supplied by the query."		^ self create: JQSelectable</body></methods><methods><class-id>JQuery.JQueryInstance</class-id> <category>*jquery-ui-widgets</category><body package="JQuery-UI">slider	"Makes a slider from the nodeset supplied by the query."		^ self create: JQSlider</body></methods><methods><class-id>JQuery.JQueryInstance</class-id> <category>*jquery-ui-interactions</category><body package="JQuery-UI">sortable	"Creates new sortable on the nodeset supplied by the query."		^ self create: JQSortable</body></methods><methods><class-id>JQuery.JQueryInstance</class-id> <category>*jquery-ui-transitions</category><body package="JQuery-UI">switchClass: firstClassString to: secondClassString duration: aDurationOrString	"Switches from the class defined in the first argument to the class defined as second argument, using a optional transition."		self call: 'switchClass' with: firstClassString with: secondClassString with: aDurationOrString</body></methods><methods><class-id>JQuery.JQueryInstance</class-id> <category>*jquery-ui-widgets</category><body package="JQuery-UI">tabs	"The method that you use to create a new tabs interface."		^ self create: JQTabs</body></methods><methods><class-id>JQuery.JQueryInstance</class-id> <category>*jquery-ui-transitions</category><body package="JQuery-UI">toggleClass: aString duration: aDurationOrString	"Adds the specified class if it is not present, removes the specified class if it is present, using a optional transition."		self call: 'toggleClass' with: aString with: aDurationOrString</body></methods><methods><class-id>Grease.GRPackage class</class-id> <category>*jquery-ui</category><body package="JQuery-UI">jQueryUI	^ self new		name: 'JQuery-UI';		description: 'jQuery-UI integration for Seaside. Expression through code.';		addDependency: 'JQuery-Core';		url: #seasideUrl;		yourself</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>JQueryInstance</name><environment>JQuery</environment><super>JQuery.JQuery</super><private>false</private><indexed-type>none</indexed-type><inst-vars>arguments </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-Core-Objects</category><attributes><package>JQuery-Core</package></attributes></class><class><name>WAFileLibrary</name><environment>Seaside</environment><super>Seaside.WAAbstractFileLibrary</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Seaside-Core-Libraries</category><attributes><package>Seaside-Core</package></attributes></class><class><name>JQPlugin</name><environment>JQuery</environment><super>Javascript.JSObject</super><private>false</private><indexed-type>none</indexed-type><inst-vars>owner options </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-Core-Objects</category><attributes><package>JQuery-Core</package></attributes></class><class><name>JQAjax</name><environment>JQuery</environment><super>JQuery.JQAjaxSetup</super><private>false</private><indexed-type>none</indexed-type><inst-vars>callback callbackId </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-Core-Objects</category><attributes><package>JQuery-Core</package></attributes></class></st-source>