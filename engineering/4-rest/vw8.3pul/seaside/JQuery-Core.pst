<?xml version="1.0"?><st-source><!-- Name: JQuery-CoreComment: jQuery integration for Seaside. Designed to change the way you write Javascript.DbIdentifier: bear73DbTrace: 492612DbUsername: jkottDbVersion: 3.2.0 - JohanBrichau.139 1DevelopmentPrerequisites: #(#(#any 'JQuery-Namespace' '') #(#any 'Javascript-Core' '') #(#any 'Javascript-VisualWorks-Core' ''))Id: 0f912f62-5a29-4cc2-b635-62bdd97f8ac5Namespace: JQueryPackageName: JQuery-CoreParcel: #('JQuery-Core')ParcelName: JQuery-CorePrerequisiteParcels: #(#('JQuery-Namespace' '') #('Javascript-Core' '') #('Javascript-VisualWorks-Core' ''))PrintStringCache: (3.2.0 - JohanBrichau.139 1,jkott)Url: http://smalltalkhub.com/mc/Seaside/Seaside32/main/JQuery-Core-JohanBrichau.139.mczVersion: 3.2.0 - JohanBrichau.139 1Date: 3:31:29 PM June 30, 2017 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.3 (jun17.5) of June 30, 2017 on June 30, 2017 at 3:31:29 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>JQAjaxifierLibrary</name><environment>JQuery</environment><super>Seaside.WAFileLibrary</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-Core-Libraries</category><attributes><package>JQuery-Core</package></attributes></class><class><name>JQPlugin</name><environment>JQuery</environment><super>Javascript.JSObject</super><private>false</private><indexed-type>none</indexed-type><inst-vars>owner options </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-Core-Objects</category><attributes><package>JQuery-Core</package></attributes></class><class><name>JQGoogleLibrary</name><environment>JQuery</environment><super>Seaside.WAFileLibrary</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-Core-Libraries</category><attributes><package>JQuery-Core</package></attributes></class><class><name>JQuery</name><environment>JQuery</environment><super>Javascript.JSObject</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-Core-Objects</category><attributes><package>JQuery-Core</package></attributes></class><comment><class-id>JQuery.JQuery</class-id><body>The core functionality of jQuery centers around this object. Everything in jQuery is based upon this, or uses this in some way. The most basic use of this object is to pass in an expression (usually consisting of CSS), which then finds all matching elements.</body></comment><class><name>JQueryClass</name><environment>JQuery</environment><super>JQuery.JQuery</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-Core-Objects</category><attributes><package>JQuery-Core</package></attributes></class><class><name>JQ2DeploymentLibrary</name><environment>JQuery</environment><super>Seaside.WAFileLibrary</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-Core-Libraries</category><attributes><package>JQuery-Core</package></attributes></class><class><name>JQAjaxSetup</name><environment>JQuery</environment><super>JQuery.JQPlugin</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-Core-Objects</category><attributes><package>JQuery-Core</package></attributes></class><comment><class-id>JQuery.JQAjaxSetup</class-id><body>Setup global settings for AJAX requests.</body></comment><class><name>JQAjax</name><environment>JQuery</environment><super>JQuery.JQAjaxSetup</super><private>false</private><indexed-type>none</indexed-type><inst-vars>callback callbackId </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-Core-Objects</category><attributes><package>JQuery-Core</package></attributes></class><comment><class-id>JQuery.JQAjax</class-id><body>Load a remote page using an HTTP request.</body></comment><class><name>JQGetScript</name><environment>JQuery</environment><super>JQuery.JQAjax</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-Core-Objects</category><attributes><package>JQuery-Core</package></attributes></class><comment><class-id>JQuery.JQGetScript</class-id><body>Loads, and executes, a local JavaScript file using an HTTP GET request.</body></comment><class><name>JQScriptGenerator</name><environment>JQuery</environment><super>Seaside.WAScriptGenerator</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-Core-Objects</category><attributes><package>JQuery-Core</package></attributes></class><class><name>JQueryInstance</name><environment>JQuery</environment><super>JQuery.JQuery</super><private>false</private><indexed-type>none</indexed-type><inst-vars>arguments </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-Core-Objects</category><attributes><package>JQuery-Core</package></attributes></class><class><name>JQPost</name><environment>JQuery</environment><super>JQuery.JQAjax</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-Core-Objects</category><attributes><package>JQuery-Core</package></attributes></class><comment><class-id>JQuery.JQPost</class-id><body>Load a remote page using an HTTP POST request.</body></comment><class><name>JQGet</name><environment>JQuery</environment><super>JQuery.JQAjax</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-Core-Objects</category><attributes><package>JQuery-Core</package></attributes></class><comment><class-id>JQuery.JQGet</class-id><body>Load a remote page using an HTTP GET request.</body></comment><class><name>JQAnimate</name><environment>JQuery</environment><super>JQuery.JQPlugin</super><private>false</private><indexed-type>none</indexed-type><inst-vars>parameters </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-Core-Objects</category><attributes><package>JQuery-Core</package></attributes></class><class><name>JQGetJson</name><environment>JQuery</environment><super>JQuery.JQAjax</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-Core-Objects</category><attributes><package>JQuery-Core</package></attributes></class><comment><class-id>JQuery.JQGetJson</class-id><body>Load JSON data using an HTTP GET request.</body></comment><class><name>JQDevelopmentLibrary</name><environment>JQuery</environment><super>Seaside.WAFileLibrary</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-Core-Libraries</category><attributes><package>JQuery-Core</package></attributes></class><class><name>JQLoad</name><environment>JQuery</environment><super>JQuery.JQAjax</super><private>false</private><indexed-type>none</indexed-type><inst-vars>selector </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-Core-Objects</category><attributes><package>JQuery-Core</package></attributes></class><comment><class-id>JQuery.JQLoad</class-id><body>Load HTML from a remote file and inject it into the DOM.</body></comment><class><name>JQEvent</name><environment>JQuery</environment><super>Javascript.JSObject</super><private>false</private><indexed-type>none</indexed-type><inst-vars>owner </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-Core-Objects</category><attributes><package>JQuery-Core</package></attributes></class><class><name>JQ2DevelopmentLibrary</name><environment>JQuery</environment><super>Seaside.WAFileLibrary</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-Core-Libraries</category><attributes><package>JQuery-Core</package></attributes></class><class><name>JQDeploymentLibrary</name><environment>JQuery</environment><super>Seaside.WAFileLibrary</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>JQuery-Core-Libraries</category><attributes><package>JQuery-Core</package></attributes></class><shared-variable><name>FunctionName</name><environment>JQuery.JQuery</environment><private>false</private><constant>false</constant><category>accessing</category><attributes><package>JQuery-Core</package></attributes></shared-variable><methods><class-id>JQuery.JQAjaxifierLibrary</class-id> <category>accessing</category><body package="JQuery-Core">selectorsToInclude	^ #( ajaxifierJs )</body></methods><methods><class-id>JQuery.JQAjaxifierLibrary</class-id> <category>uploads</category><body package="JQuery-Core">ajaxifierJs	^ '/* jQuery based Ajaxifier * Copyright (c) 2008 Lukas Renggli, renggli@gmail.com * * For additional documentation see: * - http://www.lukas-renggli.ch/blog/ajaxification * - http://www.lukas-renggli.ch/blog/ajaxification-faq */$(function () {		// constants	var HEAD_EXTRACTOR = /&lt;head[^&gt;]*&gt;((.|\s)*?)&lt;\/head&gt;/im;	var BODY_EXTRACTOR = /&lt;body[^&gt;]*&gt;((.|\s)*?)&lt;\/body&gt;/im;	var SCRIPT_EXTRACTOR = /&lt;script(.|\s)*?\/script&gt;/ig;	var PARAM_EXTRACTOR = /\?(.*)$/i;		// variables	var activeHash = "";	// ajax action	function load(type, url, data, modifyHistory) {		$.ajax({			type: type, url: url, data: data,			beforeSend: function (xhr) {				// WAActionCallback per default are disabled for AJAX requests				// Detection happens with X-Requested-With so we override it 				xhr.setRequestHeader("X-Requested-With", "Ajaxifier");			}, 			success: function (data, textStatus, jqXHR) {				$("head").html(HEAD_EXTRACTOR					.exec(data)[1]					.replace(SCRIPT_EXTRACTOR, ""));				$("body").html(BODY_EXTRACTOR					.exec(data)[1]);				if (modifyHistory) {					var path = jqXHR.getResponseHeader("X-RedirectedTo");	 				if (typeof(window.history.pushState) == "function") {						window.history.pushState(path, null, path);					} else {						window.location.hash = activeHash = PARAM_EXTRACTOR.exec(path)[1];					}				}			}		});	}		// click handler	$(document).click(function (event) {				// links		var anchor = $(event.target).closest("a");		if (anchor.length == 1) {			load("GET", anchor.attr("href"), null, true);			event.preventDefault();		}				// submit		var submit = $(event.target).closest("input[type=submit], button[type=submit]");		if (submit.length == 1) {			var form = submit.closest("form");			if (form.length == 1) {				load("POST", form.attr("action"), form.find(":input").serialize() + "&amp;" + submit.attr("name"), true);				event.preventDefault();			}		}			});		// check for changes in the hash	setInterval(function () {		var currentHash = window.location.hash.substr(1);		if (currentHash != activeHash)			load("GET", "?" + (activeHash = currentHash), null, true);	}, 250);	// We assume nobody else will override onpopstate... since we are LIKELY the only ones to use pushstate etc.	window.onpopstate = function(event) {		load("GET", event.state, null, false);	}});'</body></methods><methods><class-id>JQuery.JQPlugin</class-id> <category>accessing</category><body package="JQuery-Core">arguments	^ options isNil		ifTrue: [ Array new ]		ifFalse: [ Array with: options ]</body><body package="JQuery-Core">method	self subclassResponsibility</body><body package="JQuery-Core">owner	^ owner</body></methods><methods><class-id>JQuery.JQPlugin</class-id> <category>private</category><body package="JQuery-Core">id: aString	self owner id: aString</body><body package="JQuery-Core">jQuery	^ (JQueryClass context: self renderContext)		rendererClass: self rendererClass;		yourself</body></methods><methods><class-id>JQuery.JQPlugin</class-id> <category>options</category><body package="JQuery-Core">optionAt: aKey put: aValue	^ self options at: aKey put: aValue</body><body package="JQuery-Core">options	^ options ifNil: [ options := GRSmallDictionary new ]</body></methods><methods><class-id>JQuery.JQPlugin</class-id> <category>initialization</category><body package="JQuery-Core">setOwner: aQuery	owner := aQuery</body></methods><methods><class-id>JQuery.JQPlugin</class-id> <category>printing</category><body package="JQuery-Core">javascriptContentOn: aStream	aStream		javascript: self owner;		nextPut: $.;		nextPutAll: self method.	JSStream encodeArguments: self arguments on: aStream</body></methods><methods><class-id>JQuery.JQPlugin class</class-id> <category>instance creation</category><body package="JQuery-Core">context: aRenderContext owner: aQuery	^ (self context: aRenderContext)		setOwner: aQuery;		yourself</body></methods><methods><class-id>JQuery.JQGoogleLibrary</class-id> <category>updating</category><body package="JQuery-Core">updateRoot: anHtmlRoot	super updateRoot: anHtmlRoot.	anHtmlRoot javascript		url: 'https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js'</body></methods><methods><class-id>JQuery.JQuery</class-id> <category>private</category><body package="JQuery-Core">create: aPluginClass	^ (aPluginClass context: self renderContext owner: self)		rendererClass: self rendererClass;		yourself</body><body package="JQuery-Core">html: aRenderable	self subclassResponsibility</body><body package="JQuery-Core">id: aString	self subclassResponsibility</body></methods><methods><class-id>JQuery.JQuery</class-id> <category>printing</category><body package="JQuery-Core">javascriptContentOn: aStream	aStream nextPutAll: FunctionName</body></methods><methods><class-id>JQuery.JQuery class</class-id> <category>accessing</category><body package="JQuery-Core">functionName	^ FunctionName</body><body package="JQuery-Core">functionName: aString	"Changes the function name that Seaside generates to access the jQuery namespace. By default Seaside uses '$'. If another Javascript library (like Prototype, MooTools, or YUI) should be used simultaniously this name might be overridden. In this case use 'jQuery' as the function name, as this is an alias that normally does not conflict. In any case consult &lt;http://docs.jquery.com/Using_jQuery_with_Other_Libraries&gt;."	FunctionName := aString</body></methods><methods><class-id>JQuery.JQuery class</class-id> <category>initialization</category><body package="JQuery-Core">initialize	self functionName: '$'</body></methods><methods><class-id>JQuery.JQueryClass</class-id> <category>convenience</category><body package="JQuery-Core">all	"Answer a jQuery object that matches all DOM elements."		^ self expression: '*'</body><body package="JQuery-Core">class: aString 	"Answer a jQuery that matches all DOM elements with the CLASS aString."	^ self expression: '.' , aString greaseString</body><body package="JQuery-Core">document	"Answer a jQuery object with the document DOM element."		^ self expression: (JSStream on: 'document')</body><body package="JQuery-Core">id: aString 	"Answer a jQuery with a single DOM element identified by the ID aString."	^ self expression: '#' , aString greaseString</body><body package="JQuery-Core">this	"Answer a jQuery object of the receiving DOM element."		^ self new</body><body package="JQuery-Core">with: anObject	"Convenience method that answers a jQuery (instance) object. Pass it a symbol to reference an DOM id, a block to render new HTML nodes, a javascript object to be run at load time or a string to be used as a CSS query."		anObject isNil		ifTrue: [ ^ self new ].	anObject isSymbol		ifTrue: [ ^ self id: anObject ].	anObject isBlock		ifTrue: [ ^ self html: anObject ].	anObject isJavascript		ifTrue: [ ^ self ready: anObject ].	^ self expression: anObject</body></methods><methods><class-id>JQuery.JQueryClass</class-id> <category>agent</category><body package="JQuery-Core">support	"A collection of properties that represent the presence of different browser features or bugs."		self access: 'support'</body></methods><methods><class-id>JQuery.JQueryClass</class-id> <category>creation</category><body package="JQuery-Core">event	"Create a new jQuery.Event to be used in an event handler."	^ JQEvent context: self renderContext</body><body package="JQuery-Core">event: aString	"Create a new jQuery.Event object without the new operator."	^ self event alias: (self call: 'Event' with: aString) greaseString</body><body package="JQuery-Core">expression: aString	"This function accepts a string containing a CSS selector which is then used to match a set of elements."	^ self expression: aString context: nil</body><body package="JQuery-Core">expression: aString context: anObject	"This function accepts a string containing a CSS selector which is then used to match a set of elements."		^ (JQueryInstance		context: self renderContext		constructor: (anObject isNil			ifTrue: [ Array with: aString ]			ifFalse: [ Array with: aString with: anObject ]))				rendererClass: self rendererClass;				yourself</body><body package="JQuery-Core">html: aRenderable	"Create DOM elements on-the-fly from the provided String of raw HTML."	^ self expression: (self render: aRenderable)</body><body package="JQuery-Core">new	"Wrap jQuery functionality around this DOM Element."	^ self expression: JSStream this</body><body package="JQuery-Core">ready: anObject	"Binds a function to be executed whenever the DOM is ready to be traversed and manipulated. Note: Do not combine the jQuery ready-function and the Seaside mechanism (WAHtmlDocument&gt;&gt;#addLoadScript:) to add load-scripts. The queues of these two mechanisms are independent and conflict with each other. The execution order of the scripts is undefined. Preferably use the mechanism of Seaside: it transfers less bytes over the network and reliably works for full requests and AJAX callbacks."	^ self expression: anObject asFunction</body></methods><methods><class-id>JQuery.JQueryClass</class-id> <category>ajax</category><body package="JQuery-Core">ajax	"Perform an asynchronous HTTP (Ajax) request."		^ self create: JQAjax</body><body package="JQuery-Core">ajaxSetup	"Set default values for future Ajax requests."	^ self create: JQAjaxSetup</body><body package="JQuery-Core">get	"Load a remote page using an HTTP GET request."		^ self create: JQGet</body><body package="JQuery-Core">getJson	"Load JSON data using an HTTP GET request."		^ self create: JQGetJson</body><body package="JQuery-Core">getScript	"Loads, and executes, a local JavaScript file using an HTTP GET request."		^ self create: JQGetScript</body><body package="JQuery-Core">post	"Load a remote page using an HTTP POST request."		^ self create: JQPost</body></methods><methods><class-id>JQuery.JQueryClass</class-id> <category>utilities</category><body package="JQuery-Core">contains: anObject in: aContainer	"Check to see if a DOM node is within another DOM node."		self call: 'contains' with: aContainer with: anObject</body><body package="JQuery-Core">error: aString	"Takes a string and throws an exception containing it."		self call: 'error' with: aString</body><body package="JQuery-Core">holdReady: aBoolean	"Holds or releases the execution of jQuery's ready event."		self call: 'holdReady' with: aBoolean</body><body package="JQuery-Core">isEmptyObject: anObject	"Check to see if an object is empty (contains no properties)."		self call: 'isEmptyObject' with: anObject</body><body package="JQuery-Core">isPlainObject: anObject	"Check to see if an object is a plain object (created using {} or new Object)."		self call: 'isPlainObject' with: anObject</body><body package="JQuery-Core">isWindow: anObject	"Determine whether the argument is a window."		self call: 'isWindow' with: anObject</body><body package="JQuery-Core">parseJSON: aString	"Takes a well-formed JSON string and returns the resulting JavaScript object."		self call: 'parseJSON' with: aString</body><body package="JQuery-Core">type: anObject	"Determine the internal JavaScript [[Class]] of an object."		self call: 'type' with: anObject</body><body package="JQuery-Core">unique: anArray	"Create a copy of an array of DOM elements with the duplicates removed. Note that this only works on arrays of DOM elements, not strings or numbers."		self call: 'unique' with: anArray</body></methods><methods><class-id>JQuery.JQueryClass</class-id> <category>accessing</category><body package="JQuery-Core">noop	"An empty function."		self access: 'noop'</body></methods><methods><class-id>JQuery.JQ2DeploymentLibrary</class-id> <category>accessing</category><body package="JQuery-Core">selectorsToInclude	^ #(jQueryJs)</body></methods><methods><class-id>JQuery.JQ2DeploymentLibrary</class-id> <category>uploaded</category><body package="JQuery-Core">jQueryJs	^ '/*! jQuery v2.1.4 | (c) 2005, 2015 jQuery Foundation, Inc. | jquery.org/license */!function(a,b){"object"==typeof module&amp;&amp;"object"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error("jQuery requires a window with a document");return b(a)}:b(a)}("undefined"!=typeof window?window:this,function(a,b){var c=[],d=c.slice,e=c.concat,f=c.push,g=c.indexOf,h={},i=h.toString,j=h.hasOwnProperty,k={},l=a.document,m="2.1.4",n=function(a,b){return new n.fn.init(a,b)},o=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,p=/^-ms-/,q=/-([\da-z])/gi,r=function(a,b){return b.toUpperCase()};n.fn=n.prototype={jquery:m,constructor:n,selector:"",length:0,toArray:function(){return d.call(this)},get:function(a){return null!=a?0&gt;a?this[a+this.length]:this[a]:d.call(this)},pushStack:function(a){var b=n.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a,b){return n.each(this,a,b)},map:function(a){return this.pushStack(n.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0&gt;a?b:0);return this.pushStack(c&gt;=0&amp;&amp;b&gt;c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:c.sort,splice:c.splice},n.extend=n.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for("boolean"==typeof g&amp;&amp;(j=g,g=arguments[h]||{},h++),"object"==typeof g||n.isFunction(g)||(g={}),h===i&amp;&amp;(g=this,h--);i&gt;h;h++)if(null!=(a=arguments[h]))for(b in a)c=g[b],d=a[b],g!==d&amp;&amp;(j&amp;&amp;d&amp;&amp;(n.isPlainObject(d)||(e=n.isArray(d)))?(e?(e=!1,f=c&amp;&amp;n.isArray(c)?c:[]):f=c&amp;&amp;n.isPlainObject(c)?c:{},g[b]=n.extend(j,f,d)):void 0!==d&amp;&amp;(g[b]=d));return g},n.extend({expando:"jQuery"+(m+Math.random()).replace(/\D/g,""),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return"function"===n.type(a)},isArray:Array.isArray,isWindow:function(a){return null!=a&amp;&amp;a===a.window},isNumeric:function(a){return!n.isArray(a)&amp;&amp;a-parseFloat(a)+1&gt;=0},isPlainObject:function(a){return"object"!==n.type(a)||a.nodeType||n.isWindow(a)?!1:a.constructor&amp;&amp;!j.call(a.constructor.prototype,"isPrototypeOf")?!1:!0},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},type:function(a){return null==a?a+"":"object"==typeof a||"function"==typeof a?h[i.call(a)]||"object":typeof a},globalEval:function(a){var b,c=eval;a=n.trim(a),a&amp;&amp;(1===a.indexOf("use strict")?(b=l.createElement("script"),b.text=a,l.head.appendChild(b).parentNode.removeChild(b)):c(a))},camelCase:function(a){return a.replace(p,"ms-").replace(q,r)},nodeName:function(a,b){return a.nodeName&amp;&amp;a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b,c){var d,e=0,f=a.length,g=s(a);if(c){if(g){for(;f&gt;e;e++)if(d=b.apply(a[e],c),d===!1)break}else for(e in a)if(d=b.apply(a[e],c),d===!1)break}else if(g){for(;f&gt;e;e++)if(d=b.call(a[e],e,a[e]),d===!1)break}else for(e in a)if(d=b.call(a[e],e,a[e]),d===!1)break;return a},trim:function(a){return null==a?"":(a+"").replace(o,"")},makeArray:function(a,b){var c=b||[];return null!=a&amp;&amp;(s(Object(a))?n.merge(c,"string"==typeof a?[a]:a):f.call(c,a)),c},inArray:function(a,b,c){return null==b?-1:g.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,e=a.length;c&gt;d;d++)a[e++]=b[d];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g&gt;f;f++)d=!b(a[f],f),d!==h&amp;&amp;e.push(a[f]);return e},map:function(a,b,c){var d,f=0,g=a.length,h=s(a),i=[];if(h)for(;g&gt;f;f++)d=b(a[f],f,c),null!=d&amp;&amp;i.push(d);else for(f in a)d=b(a[f],f,c),null!=d&amp;&amp;i.push(d);return e.apply([],i)},guid:1,proxy:function(a,b){var c,e,f;return"string"==typeof b&amp;&amp;(c=a[b],b=a,a=c),n.isFunction(a)?(e=d.call(arguments,2),f=function(){return a.apply(b||this,e.concat(d.call(arguments)))},f.guid=a.guid=a.guid||n.guid++,f):void 0},now:Date.now,support:k}),n.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(a,b){h["[object "+b+"]"]=b.toLowerCase()});function s(a){var b="length"in a&amp;&amp;a.length,c=n.type(a);return"function"===c||n.isWindow(a)?!1:1===a.nodeType&amp;&amp;b?!0:"array"===c||0===b||"number"==typeof b&amp;&amp;b&gt;0&amp;&amp;b-1 in a}var t=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u="sizzle"+1*new Date,v=a.document,w=0,x=0,y=ha(),z=ha(),A=ha(),B=function(a,b){return a===b&amp;&amp;(l=!0),0},C=1&lt;&lt;31,D={}.hasOwnProperty,E=[],F=E.pop,G=E.push,H=E.push,I=E.slice,J=function(a,b){for(var c=0,d=a.length;d&gt;c;c++)if(a[c]===b)return c;return-1},K="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",L="[\\x20\\t\\r\\n\\f]",M="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",N=M.replace("w","w#"),O="\\["+L+"*("+M+")(?:"+L+"*([*^$|!~]?=)"+L+"*(?:''((?:\\\\.|[^\\\\''])*)''|\"((?:\\\\.|[^\\\\\"])*)\"|("+N+"))|)"+L+"*\\]",P=":("+M+")(?:\\(((''((?:\\\\.|[^\\\\''])*)''|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+O+")*)|.*)\\)|)",Q=new RegExp(L+"+","g"),R=new RegExp("^"+L+"+|((?:^|[^\\\\])(?:\\\\.)*)"+L+"+$","g"),S=new RegExp("^"+L+"*,"+L+"*"),T=new RegExp("^"+L+"*([&gt;+~]|"+L+")"+L+"*"),U=new RegExp("="+L+"*([^\\]''\"]*?)"+L+"*\\]","g"),V=new RegExp(P),W=new RegExp("^"+N+"$"),X={ID:new RegExp("^#("+M+")"),CLASS:new RegExp("^\\.("+M+")"),TAG:new RegExp("^("+M.replace("w","w*")+")"),ATTR:new RegExp("^"+O),PSEUDO:new RegExp("^"+P),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+L+"*(even|odd|(([+-]|)(\\d*)n|)"+L+"*(?:([+-]|)"+L+"*(\\d+)|))"+L+"*\\)|)","i"),bool:new RegExp("^(?:"+K+")$","i"),needsContext:new RegExp("^"+L+"*[&gt;+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+L+"*((?:-\\d)?\\d*)"+L+"*\\)|)(?=[^-]|$)","i")},Y=/^(?:input|select|textarea|button)$/i,Z=/^h\d$/i,$=/^[^{]+\{\s*\[native \w/,_=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,aa=/[+~]/,ba=/''|\\/g,ca=new RegExp("\\\\([\\da-f]{1,6}"+L+"?|("+L+")|.)","ig"),da=function(a,b,c){var d="0x"+b-65536;return d!==d||c?b:0&gt;d?String.fromCharCode(d+65536):String.fromCharCode(d&gt;&gt;10|55296,1023&amp;d|56320)},ea=function(){m()};try{H.apply(E=I.call(v.childNodes),v.childNodes),E[v.childNodes.length].nodeType}catch(fa){H={apply:E.length?function(a,b){G.apply(a,I.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function ga(a,b,d,e){var f,h,j,k,l,o,r,s,w,x;if((b?b.ownerDocument||b:v)!==n&amp;&amp;m(b),b=b||n,d=d||[],k=b.nodeType,"string"!=typeof a||!a||1!==k&amp;&amp;9!==k&amp;&amp;11!==k)return d;if(!e&amp;&amp;p){if(11!==k&amp;&amp;(f=_.exec(a)))if(j=f[1]){if(9===k){if(h=b.getElementById(j),!h||!h.parentNode)return d;if(h.id===j)return d.push(h),d}else if(b.ownerDocument&amp;&amp;(h=b.ownerDocument.getElementById(j))&amp;&amp;t(b,h)&amp;&amp;h.id===j)return d.push(h),d}else{if(f[2])return H.apply(d,b.getElementsByTagName(a)),d;if((j=f[3])&amp;&amp;c.getElementsByClassName)return H.apply(d,b.getElementsByClassName(j)),d}if(c.qsa&amp;&amp;(!q||!q.test(a))){if(s=r=u,w=b,x=1!==k&amp;&amp;a,1===k&amp;&amp;"object"!==b.nodeName.toLowerCase()){o=g(a),(r=b.getAttribute("id"))?s=r.replace(ba,"\\$&amp;"):b.setAttribute("id",s),s="[id=''"+s+"''] ",l=o.length;while(l--)o[l]=s+ra(o[l]);w=aa.test(a)&amp;&amp;pa(b.parentNode)||b,x=o.join(",")}if(x)try{return H.apply(d,w.querySelectorAll(x)),d}catch(y){}finally{r||b.removeAttribute("id")}}}return i(a.replace(R,"$1"),b,d,e)}function ha(){var a=[];function b(c,e){return a.push(c+" ")&gt;d.cacheLength&amp;&amp;delete b[a.shift()],b[c+" "]=e}return b}function ia(a){return a[u]=!0,a}function ja(a){var b=n.createElement("div");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&amp;&amp;b.parentNode.removeChild(b),b=null}}function ka(a,b){var c=a.split("|"),e=a.length;while(e--)d.attrHandle[c[e]]=b}function la(a,b){var c=b&amp;&amp;a,d=c&amp;&amp;1===a.nodeType&amp;&amp;1===b.nodeType&amp;&amp;(~b.sourceIndex||C)-(~a.sourceIndex||C);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function ma(a){return function(b){var c=b.nodeName.toLowerCase();return"input"===c&amp;&amp;b.type===a}}function na(a){return function(b){var c=b.nodeName.toLowerCase();return("input"===c||"button"===c)&amp;&amp;b.type===a}}function oa(a){return ia(function(b){return b=+b,ia(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&amp;&amp;(c[e]=!(d[e]=c[e]))})})}function pa(a){return a&amp;&amp;"undefined"!=typeof a.getElementsByTagName&amp;&amp;a}c=ga.support={},f=ga.isXML=function(a){var b=a&amp;&amp;(a.ownerDocument||a).documentElement;return b?"HTML"!==b.nodeName:!1},m=ga.setDocument=function(a){var b,e,g=a?a.ownerDocument||a:v;return g!==n&amp;&amp;9===g.nodeType&amp;&amp;g.documentElement?(n=g,o=g.documentElement,e=g.defaultView,e&amp;&amp;e!==e.top&amp;&amp;(e.addEventListener?e.addEventListener("unload",ea,!1):e.attachEvent&amp;&amp;e.attachEvent("onunload",ea)),p=!f(g),c.attributes=ja(function(a){return a.className="i",!a.getAttribute("className")}),c.getElementsByTagName=ja(function(a){return a.appendChild(g.createComment("")),!a.getElementsByTagName("*").length}),c.getElementsByClassName=$.test(g.getElementsByClassName),c.getById=ja(function(a){return o.appendChild(a).id=u,!g.getElementsByName||!g.getElementsByName(u).length}),c.getById?(d.find.ID=function(a,b){if("undefined"!=typeof b.getElementById&amp;&amp;p){var c=b.getElementById(a);return c&amp;&amp;c.parentNode?[c]:[]}},d.filter.ID=function(a){var b=a.replace(ca,da);return function(a){return a.getAttribute("id")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(ca,da);return function(a){var c="undefined"!=typeof a.getAttributeNode&amp;&amp;a.getAttributeNode("id");return c&amp;&amp;c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return"undefined"!=typeof b.getElementsByTagName?b.getElementsByTagName(a):c.qsa?b.querySelectorAll(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if("*"===a){while(c=f[e++])1===c.nodeType&amp;&amp;d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&amp;&amp;function(a,b){return p?b.getElementsByClassName(a):void 0},r=[],q=[],(c.qsa=$.test(g.querySelectorAll))&amp;&amp;(ja(function(a){o.appendChild(a).innerHTML="&lt;a id=''"+u+"''&gt;&lt;/a&gt;&lt;select id=''"+u+"-\f]'' msallowcapture=''''&gt;&lt;option selected=''''&gt;&lt;/option&gt;&lt;/select&gt;",a.querySelectorAll("[msallowcapture^='''']").length&amp;&amp;q.push("[*^$]="+L+"*(?:''''|\"\")"),a.querySelectorAll("[selected]").length||q.push("\\["+L+"*(?:value|"+K+")"),a.querySelectorAll("[id~="+u+"-]").length||q.push("~="),a.querySelectorAll(":checked").length||q.push(":checked"),a.querySelectorAll("a#"+u+"+*").length||q.push(".#.+[+~]")}),ja(function(a){var b=g.createElement("input");b.setAttribute("type","hidden"),a.appendChild(b).setAttribute("name","D"),a.querySelectorAll("[name=d]").length&amp;&amp;q.push("name"+L+"*[*^$|!~]?="),a.querySelectorAll(":enabled").length||q.push(":enabled",":disabled"),a.querySelectorAll("*,:x"),q.push(",.*:")})),(c.matchesSelector=$.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&amp;&amp;ja(function(a){c.disconnectedMatch=s.call(a,"div"),s.call(a,"[s!='''']:x"),r.push("!=",P)}),q=q.length&amp;&amp;new RegExp(q.join("|")),r=r.length&amp;&amp;new RegExp(r.join("|")),b=$.test(o.compareDocumentPosition),t=b||$.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&amp;&amp;b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&amp;&amp;16&amp;a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&amp;d||!c.sortDetached&amp;&amp;b.compareDocumentPosition(a)===d?a===g||a.ownerDocument===v&amp;&amp;t(v,a)?-1:b===g||b.ownerDocument===v&amp;&amp;t(v,b)?1:k?J(k,a)-J(k,b):0:4&amp;d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,e=a.parentNode,f=b.parentNode,h=[a],i=[b];if(!e||!f)return a===g?-1:b===g?1:e?-1:f?1:k?J(k,a)-J(k,b):0;if(e===f)return la(a,b);c=a;while(c=c.parentNode)h.unshift(c);c=b;while(c=c.parentNode)i.unshift(c);while(h[d]===i[d])d++;return d?la(h[d],i[d]):h[d]===v?-1:i[d]===v?1:0},g):n},ga.matches=function(a,b){return ga(a,null,null,b)},ga.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&amp;&amp;m(a),b=b.replace(U,"=''$1'']"),!(!c.matchesSelector||!p||r&amp;&amp;r.test(b)||q&amp;&amp;q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&amp;&amp;11!==a.document.nodeType)return d}catch(e){}return ga(b,n,null,[a]).length&gt;0},ga.contains=function(a,b){return(a.ownerDocument||a)!==n&amp;&amp;m(a),t(a,b)},ga.attr=function(a,b){(a.ownerDocument||a)!==n&amp;&amp;m(a);var e=d.attrHandle[b.toLowerCase()],f=e&amp;&amp;D.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&amp;&amp;f.specified?f.value:null},ga.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)},ga.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&amp;&amp;a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&amp;&amp;(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=ga.getText=function(a){var b,c="",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if("string"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=ga.selectors={cacheLength:50,createPseudo:ia,match:X,attrHandle:{},find:{},relative:{"&gt;":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(ca,da),a[3]=(a[3]||a[4]||a[5]||"").replace(ca,da),"~="===a[2]&amp;&amp;(a[3]=" "+a[3]+" "),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),"nth"===a[1].slice(0,3)?(a[3]||ga.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*("even"===a[3]||"odd"===a[3])),a[5]=+(a[7]+a[8]||"odd"===a[3])):a[3]&amp;&amp;ga.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&amp;&amp;a[2];return X.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||"":c&amp;&amp;V.test(c)&amp;&amp;(b=g(c,!0))&amp;&amp;(b=c.indexOf(")",c.length-b)-c.length)&amp;&amp;(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(ca,da).toLowerCase();return"*"===a?function(){return!0}:function(a){return a.nodeName&amp;&amp;a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+" "];return b||(b=new RegExp("(^|"+L+")"+a+"("+L+"|$)"))&amp;&amp;y(a,function(a){return b.test("string"==typeof a.className&amp;&amp;a.className||"undefined"!=typeof a.getAttribute&amp;&amp;a.getAttribute("class")||"")})},ATTR:function(a,b,c){return function(d){var e=ga.attr(d,a);return null==e?"!="===b:b?(e+="","="===b?e===c:"!="===b?e!==c:"^="===b?c&amp;&amp;0===e.indexOf(c):"*="===b?c&amp;&amp;e.indexOf(c)&gt;-1:"$="===b?c&amp;&amp;e.slice(-c.length)===c:"~="===b?(" "+e.replace(Q," ")+" ").indexOf(c)&gt;-1:"|="===b?e===c||e.slice(0,c.length+1)===c+"-":!1):!0}},CHILD:function(a,b,c,d,e){var f="nth"!==a.slice(0,3),g="last"!==a.slice(-4),h="of-type"===b;return 1===d&amp;&amp;0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?"nextSibling":"previousSibling",q=b.parentNode,r=h&amp;&amp;b.nodeName.toLowerCase(),s=!i&amp;&amp;!h;if(q){if(f){while(p){l=b;while(l=l[p])if(h?l.nodeName.toLowerCase()===r:1===l.nodeType)return!1;o=p="only"===a&amp;&amp;!o&amp;&amp;"nextSibling"}return!0}if(o=[g?q.firstChild:q.lastChild],g&amp;&amp;s){k=q[u]||(q[u]={}),j=k[a]||[],n=j[0]===w&amp;&amp;j[1],m=j[0]===w&amp;&amp;j[2],l=n&amp;&amp;q.childNodes[n];while(l=++n&amp;&amp;l&amp;&amp;l[p]||(m=n=0)||o.pop())if(1===l.nodeType&amp;&amp;++m&amp;&amp;l===b){k[a]=[w,n,m];break}}else if(s&amp;&amp;(j=(b[u]||(b[u]={}))[a])&amp;&amp;j[0]===w)m=j[1];else while(l=++n&amp;&amp;l&amp;&amp;l[p]||(m=n=0)||o.pop())if((h?l.nodeName.toLowerCase()===r:1===l.nodeType)&amp;&amp;++m&amp;&amp;(s&amp;&amp;((l[u]||(l[u]={}))[a]=[w,m]),l===b))break;return m-=e,m===d||m%d===0&amp;&amp;m/d&gt;=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||ga.error("unsupported pseudo: "+a);return e[u]?e(b):e.length&gt;1?(c=[a,a,"",b],d.setFilters.hasOwnProperty(a.toLowerCase())?ia(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=J(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:ia(function(a){var b=[],c=[],d=h(a.replace(R,"$1"));return d[u]?ia(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&amp;&amp;(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),b[0]=null,!c.pop()}}),has:ia(function(a){return function(b){return ga(a,b).length&gt;0}}),contains:ia(function(a){return a=a.replace(ca,da),function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)&gt;-1}}),lang:ia(function(a){return W.test(a||"")||ga.error("unsupported lang: "+a),a=a.replace(ca,da).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute("xml:lang")||b.getAttribute("lang"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+"-");while((b=b.parentNode)&amp;&amp;1===b.nodeType);return!1}}),target:function(b){var c=a.location&amp;&amp;a.location.hash;return c&amp;&amp;c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&amp;&amp;(!n.hasFocus||n.hasFocus())&amp;&amp;!!(a.type||a.href||~a.tabIndex)},enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return"input"===b&amp;&amp;!!a.checked||"option"===b&amp;&amp;!!a.selected},selected:function(a){return a.parentNode&amp;&amp;a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType&lt;6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return Z.test(a.nodeName)},input:function(a){return Y.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return"input"===b&amp;&amp;"button"===a.type||"button"===b},text:function(a){var b;return"input"===a.nodeName.toLowerCase()&amp;&amp;"text"===a.type&amp;&amp;(null==(b=a.getAttribute("type"))||"text"===b.toLowerCase())},first:oa(function(){return[0]}),last:oa(function(a,b){return[b-1]}),eq:oa(function(a,b,c){return[0&gt;c?c+b:c]}),even:oa(function(a,b){for(var c=0;b&gt;c;c+=2)a.push(c);return a}),odd:oa(function(a,b){for(var c=1;b&gt;c;c+=2)a.push(c);return a}),lt:oa(function(a,b,c){for(var d=0&gt;c?c+b:c;--d&gt;=0;)a.push(d);return a}),gt:oa(function(a,b,c){for(var d=0&gt;c?c+b:c;++d&lt;b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=ma(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=na(b);function qa(){}qa.prototype=d.filters=d.pseudos,d.setFilters=new qa,g=ga.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+" "];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){(!c||(e=S.exec(h)))&amp;&amp;(e&amp;&amp;(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=T.exec(h))&amp;&amp;(c=e.shift(),f.push({value:c,type:e[0].replace(R," ")}),h=h.slice(c.length));for(g in d.filter)!(e=X[g].exec(h))||j[g]&amp;&amp;!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?ga.error(a):z(a,i).slice(0)};function ra(a){for(var b=0,c=a.length,d="";c&gt;b;b++)d+=a[b].value;return d}function sa(a,b,c){var d=b.dir,e=c&amp;&amp;"parentNode"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&amp;&amp;a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(i=b[u]||(b[u]={}),(h=i[d])&amp;&amp;h[0]===w&amp;&amp;h[1]===f)return j[2]=h[2];if(i[d]=j,j[2]=a(b,c,g))return!0}}}function ta(a){return a.length&gt;1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function ua(a,b,c){for(var d=0,e=b.length;e&gt;d;d++)ga(a,b[d],c);return c}function va(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i&gt;h;h++)(f=a[h])&amp;&amp;(!c||c(f,d,e))&amp;&amp;(g.push(f),j&amp;&amp;b.push(h));return g}function wa(a,b,c,d,e,f){return d&amp;&amp;!d[u]&amp;&amp;(d=wa(d)),e&amp;&amp;!e[u]&amp;&amp;(e=wa(e,f)),ia(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||ua(b||"*",h.nodeType?[h]:h,[]),q=!a||!f&amp;&amp;b?p:va(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&amp;&amp;c(q,r,h,i),d){j=va(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&amp;&amp;(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&amp;&amp;j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&amp;&amp;(j=e?J(f,l):m[k])&gt;-1&amp;&amp;(f[j]=!(g[j]=l))}}else r=va(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):H.apply(g,r)})}function xa(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[" "],i=g?1:0,k=sa(function(a){return a===b},h,!0),l=sa(function(a){return J(b,a)&gt;-1},h,!0),m=[function(a,c,d){var e=!g&amp;&amp;(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];f&gt;i;i++)if(c=d.relative[a[i].type])m=[sa(ta(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f&gt;e;e++)if(d.relative[a[e].type])break;return wa(i&gt;1&amp;&amp;ta(m),i&gt;1&amp;&amp;ra(a.slice(0,i-1).concat({value:" "===a[i-2].type?"*":""})).replace(R,"$1"),c,e&gt;i&amp;&amp;xa(a.slice(i,e)),f&gt;e&amp;&amp;xa(a=a.slice(e)),f&gt;e&amp;&amp;ra(a))}m.push(c)}return ta(m)}function ya(a,b){var c=b.length&gt;0,e=a.length&gt;0,f=function(f,g,h,i,k){var l,m,o,p=0,q="0",r=f&amp;&amp;[],s=[],t=j,u=f||e&amp;&amp;d.find.TAG("*",k),v=w+=null==t?1:Math.random()||.1,x=u.length;for(k&amp;&amp;(j=g!==n&amp;&amp;g);q!==x&amp;&amp;null!=(l=u[q]);q++){if(e&amp;&amp;l){m=0;while(o=a[m++])if(o(l,g,h)){i.push(l);break}k&amp;&amp;(w=v)}c&amp;&amp;((l=!o&amp;&amp;l)&amp;&amp;p--,f&amp;&amp;r.push(l))}if(p+=q,c&amp;&amp;q!==p){m=0;while(o=b[m++])o(r,s,g,h);if(f){if(p&gt;0)while(q--)r[q]||s[q]||(s[q]=F.call(i));s=va(s)}H.apply(i,s),k&amp;&amp;!f&amp;&amp;s.length&gt;0&amp;&amp;p+b.length&gt;1&amp;&amp;ga.uniqueSort(i)}return k&amp;&amp;(w=v,j=t),r};return c?ia(f):f}return h=ga.compile=function(a,b){var c,d=[],e=[],f=A[a+" "];if(!f){b||(b=g(a)),c=b.length;while(c--)f=xa(b[c]),f[u]?d.push(f):e.push(f);f=A(a,ya(e,d)),f.selector=a}return f},i=ga.select=function(a,b,e,f){var i,j,k,l,m,n="function"==typeof a&amp;&amp;a,o=!f&amp;&amp;g(a=n.selector||a);if(e=e||[],1===o.length){if(j=o[0]=o[0].slice(0),j.length&gt;2&amp;&amp;"ID"===(k=j[0]).type&amp;&amp;c.getById&amp;&amp;9===b.nodeType&amp;&amp;p&amp;&amp;d.relative[j[1].type]){if(b=(d.find.ID(k.matches[0].replace(ca,da),b)||[])[0],!b)return e;n&amp;&amp;(b=b.parentNode),a=a.slice(j.shift().value.length)}i=X.needsContext.test(a)?0:j.length;while(i--){if(k=j[i],d.relative[l=k.type])break;if((m=d.find[l])&amp;&amp;(f=m(k.matches[0].replace(ca,da),aa.test(j[0].type)&amp;&amp;pa(b.parentNode)||b))){if(j.splice(i,1),a=f.length&amp;&amp;ra(j),!a)return H.apply(e,f),e;break}}}return(n||h(a,o))(f,b,!p,e,aa.test(a)&amp;&amp;pa(b.parentNode)||b),e},c.sortStable=u.split("").sort(B).join("")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ja(function(a){return 1&amp;a.compareDocumentPosition(n.createElement("div"))}),ja(function(a){return a.innerHTML="&lt;a href=''#''&gt;&lt;/a&gt;","#"===a.firstChild.getAttribute("href")})||ka("type|href|height|width",function(a,b,c){return c?void 0:a.getAttribute(b,"type"===b.toLowerCase()?1:2)}),c.attributes&amp;&amp;ja(function(a){return a.innerHTML="&lt;input/&gt;",a.firstChild.setAttribute("value",""),""===a.firstChild.getAttribute("value")})||ka("value",function(a,b,c){return c||"input"!==a.nodeName.toLowerCase()?void 0:a.defaultValue}),ja(function(a){return null==a.getAttribute("disabled")})||ka(K,function(a,b,c){var d;return c?void 0:a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&amp;&amp;d.specified?d.value:null}),ga}(a);n.find=t,n.expr=t.selectors,n.expr[":"]=n.expr.pseudos,n.unique=t.uniqueSort,n.text=t.getText,n.isXMLDoc=t.isXML,n.contains=t.contains;var u=n.expr.match.needsContext,v=/^&lt;(\w+)\s*\/?&gt;(?:&lt;\/\1&gt;|)$/,w=/^.[^:#\[\.,]*$/;function x(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if("string"==typeof b){if(w.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return g.call(b,a)&gt;=0!==c})}n.filter=function(a,b,c){var d=b[0];return c&amp;&amp;(a=":not("+a+")"),1===b.length&amp;&amp;1===d.nodeType?n.find.matchesSelector(d,a)?[d]:[]:n.find.matches(a,n.grep(b,function(a){return 1===a.nodeType}))},n.fn.extend({find:function(a){var b,c=this.length,d=[],e=this;if("string"!=typeof a)return this.pushStack(n(a).filter(function(){for(b=0;c&gt;b;b++)if(n.contains(e[b],this))return!0}));for(b=0;c&gt;b;b++)n.find(a,e[b],d);return d=this.pushStack(c&gt;1?n.unique(d):d),d.selector=this.selector?this.selector+" "+a:a,d},filter:function(a){return this.pushStack(x(this,a||[],!1))},not:function(a){return this.pushStack(x(this,a||[],!0))},is:function(a){return!!x(this,"string"==typeof a&amp;&amp;u.test(a)?n(a):a||[],!1).length}});var y,z=/^(?:\s*(&lt;[\w\W]+&gt;)[^&gt;]*|#([\w-]*))$/,A=n.fn.init=function(a,b){var c,d;if(!a)return this;if("string"==typeof a){if(c="&lt;"===a[0]&amp;&amp;"&gt;"===a[a.length-1]&amp;&amp;a.length&gt;=3?[null,a,null]:z.exec(a),!c||!c[1]&amp;&amp;b)return!b||b.jquery?(b||y).find(a):this.constructor(b).find(a);if(c[1]){if(b=b instanceof n?b[0]:b,n.merge(this,n.parseHTML(c[1],b&amp;&amp;b.nodeType?b.ownerDocument||b:l,!0)),v.test(c[1])&amp;&amp;n.isPlainObject(b))for(c in b)n.isFunction(this[c])?this[c](b[c]):this.attr(c,b[c]);return this}return d=l.getElementById(c[2]),d&amp;&amp;d.parentNode&amp;&amp;(this.length=1,this[0]=d),this.context=l,this.selector=a,this}return a.nodeType?(this.context=this[0]=a,this.length=1,this):n.isFunction(a)?"undefined"!=typeof y.ready?y.ready(a):a(n):(void 0!==a.selector&amp;&amp;(this.selector=a.selector,this.context=a.context),n.makeArray(a,this))};A.prototype=n.fn,y=n(l);var B=/^(?:parents|prev(?:Until|All))/,C={children:!0,contents:!0,next:!0,prev:!0};n.extend({dir:function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&amp;&amp;9!==a.nodeType)if(1===a.nodeType){if(e&amp;&amp;n(a).is(c))break;d.push(a)}return d},sibling:function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&amp;&amp;a!==b&amp;&amp;c.push(a);return c}}),n.fn.extend({has:function(a){var b=n(a,this),c=b.length;return this.filter(function(){for(var a=0;c&gt;a;a++)if(n.contains(this,b[a]))return!0})},closest:function(a,b){for(var c,d=0,e=this.length,f=[],g=u.test(a)||"string"!=typeof a?n(a,b||this.context):0;e&gt;d;d++)for(c=this[d];c&amp;&amp;c!==b;c=c.parentNode)if(c.nodeType&lt;11&amp;&amp;(g?g.index(c)&gt;-1:1===c.nodeType&amp;&amp;n.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length&gt;1?n.unique(f):f)},index:function(a){return a?"string"==typeof a?g.call(n(a),this[0]):g.call(this,a.jquery?a[0]:a):this[0]&amp;&amp;this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(n.unique(n.merge(this.get(),n(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function D(a,b){while((a=a[b])&amp;&amp;1!==a.nodeType);return a}n.each({parent:function(a){var b=a.parentNode;return b&amp;&amp;11!==b.nodeType?b:null},parents:function(a){return n.dir(a,"parentNode")},parentsUntil:function(a,b,c){return n.dir(a,"parentNode",c)},next:function(a){return D(a,"nextSibling")},prev:function(a){return D(a,"previousSibling")},nextAll:function(a){return n.dir(a,"nextSibling")},prevAll:function(a){return n.dir(a,"previousSibling")},nextUntil:function(a,b,c){return n.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return n.dir(a,"previousSibling",c)},siblings:function(a){return n.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return n.sibling(a.firstChild)},contents:function(a){return a.contentDocument||n.merge([],a.childNodes)}},function(a,b){n.fn[a]=function(c,d){var e=n.map(this,b,c);return"Until"!==a.slice(-5)&amp;&amp;(d=c),d&amp;&amp;"string"==typeof d&amp;&amp;(e=n.filter(d,e)),this.length&gt;1&amp;&amp;(C[a]||n.unique(e),B.test(a)&amp;&amp;e.reverse()),this.pushStack(e)}});var E=/\S+/g,F={};function G(a){var b=F[a]={};return n.each(a.match(E)||[],function(a,c){b[c]=!0}),b}n.Callbacks=function(a){a="string"==typeof a?F[a]||G(a):n.extend({},a);var b,c,d,e,f,g,h=[],i=!a.once&amp;&amp;[],j=function(l){for(b=a.memory&amp;&amp;l,c=!0,g=e||0,e=0,f=h.length,d=!0;h&amp;&amp;f&gt;g;g++)if(h[g].apply(l[0],l[1])===!1&amp;&amp;a.stopOnFalse){b=!1;break}d=!1,h&amp;&amp;(i?i.length&amp;&amp;j(i.shift()):b?h=[]:k.disable())},k={add:function(){if(h){var c=h.length;!function g(b){n.each(b,function(b,c){var d=n.type(c);"function"===d?a.unique&amp;&amp;k.has(c)||h.push(c):c&amp;&amp;c.length&amp;&amp;"string"!==d&amp;&amp;g(c)})}(arguments),d?f=h.length:b&amp;&amp;(e=c,j(b))}return this},remove:function(){return h&amp;&amp;n.each(arguments,function(a,b){var c;while((c=n.inArray(b,h,c))&gt;-1)h.splice(c,1),d&amp;&amp;(f&gt;=c&amp;&amp;f--,g&gt;=c&amp;&amp;g--)}),this},has:function(a){return a?n.inArray(a,h)&gt;-1:!(!h||!h.length)},empty:function(){return h=[],f=0,this},disable:function(){return h=i=b=void 0,this},disabled:function(){return!h},lock:function(){return i=void 0,b||k.disable(),this},locked:function(){return!i},fireWith:function(a,b){return!h||c&amp;&amp;!i||(b=b||[],b=[a,b.slice?b.slice():b],d?i.push(b):j(b)),this},fire:function(){return k.fireWith(this,arguments),this},fired:function(){return!!c}};return k},n.extend({Deferred:function(a){var b=[["resolve","done",n.Callbacks("once memory"),"resolved"],["reject","fail",n.Callbacks("once memory"),"rejected"],["notify","progress",n.Callbacks("memory")]],c="pending",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return n.Deferred(function(c){n.each(b,function(b,f){var g=n.isFunction(a[b])&amp;&amp;a[b];e[f[1]](function(){var a=g&amp;&amp;g.apply(this,arguments);a&amp;&amp;n.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f[0]+"With"](this===d?c.promise():this,g?[a]:arguments)})}),a=null}).promise()},promise:function(a){return null!=a?n.extend(a,d):d}},e={};return d.pipe=d.then,n.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&amp;&amp;g.add(function(){c=h},b[1^a][2].disable,b[2][2].lock),e[f[0]]=function(){return e[f[0]+"With"](this===e?d:this,arguments),this},e[f[0]+"With"]=g.fireWith}),d.promise(e),a&amp;&amp;a.call(e,e),e},when:function(a){var b=0,c=d.call(arguments),e=c.length,f=1!==e||a&amp;&amp;n.isFunction(a.promise)?e:0,g=1===f?a:n.Deferred(),h=function(a,b,c){return function(e){b[a]=this,c[a]=arguments.length&gt;1?d.call(arguments):e,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}},i,j,k;if(e&gt;1)for(i=new Array(e),j=new Array(e),k=new Array(e);e&gt;b;b++)c[b]&amp;&amp;n.isFunction(c[b].promise)?c[b].promise().done(h(b,k,c)).fail(g.reject).progress(h(b,j,i)):--f;return f||g.resolveWith(k,c),g.promise()}});var H;n.fn.ready=function(a){return n.ready.promise().done(a),this},n.extend({isReady:!1,readyWait:1,holdReady:function(a){a?n.readyWait++:n.ready(!0)},ready:function(a){(a===!0?--n.readyWait:n.isReady)||(n.isReady=!0,a!==!0&amp;&amp;--n.readyWait&gt;0||(H.resolveWith(l,[n]),n.fn.triggerHandler&amp;&amp;(n(l).triggerHandler("ready"),n(l).off("ready"))))}});function I(){l.removeEventListener("DOMContentLoaded",I,!1),a.removeEventListener("load",I,!1),n.ready()}n.ready.promise=function(b){return H||(H=n.Deferred(),"complete"===l.readyState?setTimeout(n.ready):(l.addEventListener("DOMContentLoaded",I,!1),a.addEventListener("load",I,!1))),H.promise(b)},n.ready.promise();var J=n.access=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if("object"===n.type(c)){e=!0;for(h in c)n.access(a,b,h,c[h],!0,f,g)}else if(void 0!==d&amp;&amp;(e=!0,n.isFunction(d)||(g=!0),j&amp;&amp;(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i&gt;h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f};n.acceptData=function(a){return 1===a.nodeType||9===a.nodeType||!+a.nodeType};function K(){Object.defineProperty(this.cache={},0,{get:function(){return{}}}),this.expando=n.expando+K.uid++}K.uid=1,K.accepts=n.acceptData,K.prototype={key:function(a){if(!K.accepts(a))return 0;var b={},c=a[this.expando];if(!c){c=K.uid++;try{b[this.expando]={value:c},Object.defineProperties(a,b)}catch(d){b[this.expando]=c,n.extend(a,b)}}return this.cache[c]||(this.cache[c]={}),c},set:function(a,b,c){var d,e=this.key(a),f=this.cache[e];if("string"==typeof b)f[b]=c;else if(n.isEmptyObject(f))n.extend(this.cache[e],b);else for(d in b)f[d]=b[d];return f},get:function(a,b){var c=this.cache[this.key(a)];return void 0===b?c:c[b]},access:function(a,b,c){var d;return void 0===b||b&amp;&amp;"string"==typeof b&amp;&amp;void 0===c?(d=this.get(a,b),void 0!==d?d:this.get(a,n.camelCase(b))):(this.set(a,b,c),void 0!==c?c:b)},remove:function(a,b){var c,d,e,f=this.key(a),g=this.cache[f];if(void 0===b)this.cache[f]={};else{n.isArray(b)?d=b.concat(b.map(n.camelCase)):(e=n.camelCase(b),b in g?d=[b,e]:(d=e,d=d in g?[d]:d.match(E)||[])),c=d.length;while(c--)delete g[d[c]]}},hasData:function(a){return!n.isEmptyObject(this.cache[a[this.expando]]||{})},discard:function(a){a[this.expando]&amp;&amp;delete this.cache[a[this.expando]]}};var L=new K,M=new K,N=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,O=/([A-Z])/g;function P(a,b,c){var d;if(void 0===c&amp;&amp;1===a.nodeType)if(d="data-"+b.replace(O,"-$1").toLowerCase(),c=a.getAttribute(d),"string"==typeof c){try{c="true"===c?!0:"false"===c?!1:"null"===c?null:+c+""===c?+c:N.test(c)?n.parseJSON(c):c}catch(e){}M.set(a,b,c)}else c=void 0;return c}n.extend({hasData:function(a){return M.hasData(a)||L.hasData(a)},data:function(a,b,c){return M.access(a,b,c)},removeData:function(a,b){M.remove(a,b)},_data:function(a,b,c){return L.access(a,b,c)},_removeData:function(a,b){L.remove(a,b)}}),n.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&amp;&amp;f.attributes;if(void 0===a){if(this.length&amp;&amp;(e=M.get(f),1===f.nodeType&amp;&amp;!L.get(f,"hasDataAttrs"))){c=g.length;while(c--)g[c]&amp;&amp;(d=g[c].name,0===d.indexOf("data-")&amp;&amp;(d=n.camelCase(d.slice(5)),P(f,d,e[d])));L.set(f,"hasDataAttrs",!0)}return e}return"object"==typeof a?this.each(function(){M.set(this,a)}):J(this,function(b){var c,d=n.camelCase(a);if(f&amp;&amp;void 0===b){if(c=M.get(f,a),void 0!==c)return c;if(c=M.get(f,d),void 0!==c)return c;if(c=P(f,d,void 0),void 0!==c)return c}else this.each(function(){var c=M.get(this,d);M.set(this,d,b),-1!==a.indexOf("-")&amp;&amp;void 0!==c&amp;&amp;M.set(this,a,b)})},null,b,arguments.length&gt;1,null,!0)},removeData:function(a){return this.each(function(){M.remove(this,a)})}}),n.extend({queue:function(a,b,c){var d;return a?(b=(b||"fx")+"queue",d=L.get(a,b),c&amp;&amp;(!d||n.isArray(c)?d=L.access(a,b,n.makeArray(c)):d.push(c)),d||[]):void 0},dequeue:function(a,b){b=b||"fx";var c=n.queue(a,b),d=c.length,e=c.shift(),f=n._queueHooks(a,b),g=function(){n.dequeue(a,b)};"inprogress"===e&amp;&amp;(e=c.shift(),d--),e&amp;&amp;("fx"===b&amp;&amp;c.unshift("inprogress"),delete f.stop,e.call(a,g,f)),!d&amp;&amp;f&amp;&amp;f.empty.fire()},_queueHooks:function(a,b){var c=b+"queueHooks";return L.get(a,c)||L.access(a,c,{empty:n.Callbacks("once memory").add(function(){L.remove(a,[b+"queue",c])})})}}),n.fn.extend({queue:function(a,b){var c=2;return"string"!=typeof a&amp;&amp;(b=a,a="fx",c--),arguments.length&lt;c?n.queue(this[0],a):void 0===b?this:this.each(function(){var c=n.queue(this,a,b);n._queueHooks(this,a),"fx"===a&amp;&amp;"inprogress"!==c[0]&amp;&amp;n.dequeue(this,a)})},dequeue:function(a){return this.each(function(){n.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,b){var c,d=1,e=n.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};"string"!=typeof a&amp;&amp;(b=a,a=void 0),a=a||"fx";while(g--)c=L.get(f[g],a+"queueHooks"),c&amp;&amp;c.empty&amp;&amp;(d++,c.empty.add(h));return h(),e.promise(b)}});var Q=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,R=["Top","Right","Bottom","Left"],S=function(a,b){return a=b||a,"none"===n.css(a,"display")||!n.contains(a.ownerDocument,a)},T=/^(?:checkbox|radio)$/i;!function(){var a=l.createDocumentFragment(),b=a.appendChild(l.createElement("div")),c=l.createElement("input");c.setAttribute("type","radio"),c.setAttribute("checked","checked"),c.setAttribute("name","t"),b.appendChild(c),k.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML="&lt;textarea&gt;x&lt;/textarea&gt;",k.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue}();var U="undefined";k.focusinBubbles="onfocusin"in a;var V=/^key/,W=/^(?:mouse|pointer|contextmenu)|click/,X=/^(?:focusinfocus|focusoutblur)$/,Y=/^([^.]*)(?:\.(.+)|)$/;function Z(){return!0}function $(){return!1}function _(){try{return l.activeElement}catch(a){}}n.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.get(a);if(r){c.handler&amp;&amp;(f=c,c=f.handler,e=f.selector),c.guid||(c.guid=n.guid++),(i=r.events)||(i=r.events={}),(g=r.handle)||(g=r.handle=function(b){return typeof n!==U&amp;&amp;n.event.triggered!==b.type?n.event.dispatch.apply(a,arguments):void 0}),b=(b||"").match(E)||[""],j=b.length;while(j--)h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||"").split(".").sort(),o&amp;&amp;(l=n.event.special[o]||{},o=(e?l.delegateType:l.bindType)||o,l=n.event.special[o]||{},k=n.extend({type:o,origType:q,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&amp;&amp;n.expr.match.needsContext.test(e),namespace:p.join(".")},f),(m=i[o])||(m=i[o]=[],m.delegateCount=0,l.setup&amp;&amp;l.setup.call(a,d,p,g)!==!1||a.addEventListener&amp;&amp;a.addEventListener(o,g,!1)),l.add&amp;&amp;(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),n.event.global[o]=!0)}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.hasData(a)&amp;&amp;L.get(a);if(r&amp;&amp;(i=r.events)){b=(b||"").match(E)||[""],j=b.length;while(j--)if(h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||"").split(".").sort(),o){l=n.event.special[o]||{},o=(d?l.delegateType:l.bindType)||o,m=i[o]||[],h=h[2]&amp;&amp;new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),g=f=m.length;while(f--)k=m[f],!e&amp;&amp;q!==k.origType||c&amp;&amp;c.guid!==k.guid||h&amp;&amp;!h.test(k.namespace)||d&amp;&amp;d!==k.selector&amp;&amp;("**"!==d||!k.selector)||(m.splice(f,1),k.selector&amp;&amp;m.delegateCount--,l.remove&amp;&amp;l.remove.call(a,k));g&amp;&amp;!m.length&amp;&amp;(l.teardown&amp;&amp;l.teardown.call(a,p,r.handle)!==!1||n.removeEvent(a,o,r.handle),delete i[o])}else for(o in i)n.event.remove(a,o+b[j],c,d,!0);n.isEmptyObject(i)&amp;&amp;(delete r.handle,L.remove(a,"events"))}},trigger:function(b,c,d,e){var f,g,h,i,k,m,o,p=[d||l],q=j.call(b,"type")?b.type:b,r=j.call(b,"namespace")?b.namespace.split("."):[];if(g=h=d=d||l,3!==d.nodeType&amp;&amp;8!==d.nodeType&amp;&amp;!X.test(q+n.event.triggered)&amp;&amp;(q.indexOf(".")&gt;=0&amp;&amp;(r=q.split("."),q=r.shift(),r.sort()),k=q.indexOf(":")&lt;0&amp;&amp;"on"+q,b=b[n.expando]?b:new n.Event(q,"object"==typeof b&amp;&amp;b),b.isTrigger=e?2:3,b.namespace=r.join("."),b.namespace_re=b.namespace?new RegExp("(^|\\.)"+r.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,b.result=void 0,b.target||(b.target=d),c=null==c?[b]:n.makeArray(c,[b]),o=n.event.special[q]||{},e||!o.trigger||o.trigger.apply(d,c)!==!1)){if(!e&amp;&amp;!o.noBubble&amp;&amp;!n.isWindow(d)){for(i=o.delegateType||q,X.test(i+q)||(g=g.parentNode);g;g=g.parentNode)p.push(g),h=g;h===(d.ownerDocument||l)&amp;&amp;p.push(h.defaultView||h.parentWindow||a)}f=0;while((g=p[f++])&amp;&amp;!b.isPropagationStopped())b.type=f&gt;1?i:o.bindType||q,m=(L.get(g,"events")||{})[b.type]&amp;&amp;L.get(g,"handle"),m&amp;&amp;m.apply(g,c),m=k&amp;&amp;g[k],m&amp;&amp;m.apply&amp;&amp;n.acceptData(g)&amp;&amp;(b.result=m.apply(g,c),b.result===!1&amp;&amp;b.preventDefault());return b.type=q,e||b.isDefaultPrevented()||o._default&amp;&amp;o._default.apply(p.pop(),c)!==!1||!n.acceptData(d)||k&amp;&amp;n.isFunction(d[q])&amp;&amp;!n.isWindow(d)&amp;&amp;(h=d[k],h&amp;&amp;(d[k]=null),n.event.triggered=q,d[q](),n.event.triggered=void 0,h&amp;&amp;(d[k]=h)),b.result}},dispatch:function(a){a=n.event.fix(a);var b,c,e,f,g,h=[],i=d.call(arguments),j=(L.get(this,"events")||{})[a.type]||[],k=n.event.special[a.type]||{};if(i[0]=a,a.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,a)!==!1){h=n.event.handlers.call(this,a,j),b=0;while((f=h[b++])&amp;&amp;!a.isPropagationStopped()){a.currentTarget=f.elem,c=0;while((g=f.handlers[c++])&amp;&amp;!a.isImmediatePropagationStopped())(!a.namespace_re||a.namespace_re.test(g.namespace))&amp;&amp;(a.handleObj=g,a.data=g.data,e=((n.event.special[g.origType]||{}).handle||g.handler).apply(f.elem,i),void 0!==e&amp;&amp;(a.result=e)===!1&amp;&amp;(a.preventDefault(),a.stopPropagation()))}return k.postDispatch&amp;&amp;k.postDispatch.call(this,a),a.result}},handlers:function(a,b){var c,d,e,f,g=[],h=b.delegateCount,i=a.target;if(h&amp;&amp;i.nodeType&amp;&amp;(!a.button||"click"!==a.type))for(;i!==this;i=i.parentNode||this)if(i.disabled!==!0||"click"!==a.type){for(d=[],c=0;h&gt;c;c++)f=b[c],e=f.selector+" ",void 0===d[e]&amp;&amp;(d[e]=f.needsContext?n(e,this).index(i)&gt;=0:n.find(e,this,null,[i]).length),d[e]&amp;&amp;d.push(f);d.length&amp;&amp;g.push({elem:i,handlers:d})}return h&lt;b.length&amp;&amp;g.push({elem:this,handlers:b.slice(h)}),g},props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(a,b){return null==a.which&amp;&amp;(a.which=null!=b.charCode?b.charCode:b.keyCode),a}},mouseHooks:{props:"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(a,b){var c,d,e,f=b.button;return null==a.pageX&amp;&amp;null!=b.clientX&amp;&amp;(c=a.target.ownerDocument||l,d=c.documentElement,e=c.body,a.pageX=b.clientX+(d&amp;&amp;d.scrollLeft||e&amp;&amp;e.scrollLeft||0)-(d&amp;&amp;d.clientLeft||e&amp;&amp;e.clientLeft||0),a.pageY=b.clientY+(d&amp;&amp;d.scrollTop||e&amp;&amp;e.scrollTop||0)-(d&amp;&amp;d.clientTop||e&amp;&amp;e.clientTop||0)),a.which||void 0===f||(a.which=1&amp;f?1:2&amp;f?3:4&amp;f?2:0),a}},fix:function(a){if(a[n.expando])return a;var b,c,d,e=a.type,f=a,g=this.fixHooks[e];g||(this.fixHooks[e]=g=W.test(e)?this.mouseHooks:V.test(e)?this.keyHooks:{}),d=g.props?this.props.concat(g.props):this.props,a=new n.Event(f),b=d.length;while(b--)c=d[b],a[c]=f[c];return a.target||(a.target=l),3===a.target.nodeType&amp;&amp;(a.target=a.target.parentNode),g.filter?g.filter(a,f):a},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==_()&amp;&amp;this.focus?(this.focus(),!1):void 0},delegateType:"focusin"},blur:{trigger:function(){return this===_()&amp;&amp;this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return"checkbox"===this.type&amp;&amp;this.click&amp;&amp;n.nodeName(this,"input")?(this.click(),!1):void 0},_default:function(a){return n.nodeName(a.target,"a")}},beforeunload:{postDispatch:function(a){void 0!==a.result&amp;&amp;a.originalEvent&amp;&amp;(a.originalEvent.returnValue=a.result)}}},simulate:function(a,b,c,d){var e=n.extend(new n.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?n.event.trigger(e,null,b):n.event.dispatch.call(b,e),e.isDefaultPrevented()&amp;&amp;c.preventDefault()}},n.removeEvent=function(a,b,c){a.removeEventListener&amp;&amp;a.removeEventListener(b,c,!1)},n.Event=function(a,b){return this instanceof n.Event?(a&amp;&amp;a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&amp;&amp;a.returnValue===!1?Z:$):this.type=a,b&amp;&amp;n.extend(this,b),this.timeStamp=a&amp;&amp;a.timeStamp||n.now(),void(this[n.expando]=!0)):new n.Event(a,b)},n.Event.prototype={isDefaultPrevented:$,isPropagationStopped:$,isImmediatePropagationStopped:$,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=Z,a&amp;&amp;a.preventDefault&amp;&amp;a.preventDefault()},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=Z,a&amp;&amp;a.stopPropagation&amp;&amp;a.stopPropagation()},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=Z,a&amp;&amp;a.stopImmediatePropagation&amp;&amp;a.stopImmediatePropagation(),this.stopPropagation()}},n.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(a,b){n.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return(!e||e!==d&amp;&amp;!n.contains(d,e))&amp;&amp;(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),k.focusinBubbles||n.each({focus:"focusin",blur:"focusout"},function(a,b){var c=function(a){n.event.simulate(b,a.target,n.event.fix(a),!0)};n.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=L.access(d,b);e||d.addEventListener(a,c,!0),L.access(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=L.access(d,b)-1;e?L.access(d,b,e):(d.removeEventListener(a,c,!0),L.remove(d,b))}}}),n.fn.extend({on:function(a,b,c,d,e){var f,g;if("object"==typeof a){"string"!=typeof b&amp;&amp;(c=c||b,b=void 0);for(g in a)this.on(g,b,c,a[g],e);return this}if(null==c&amp;&amp;null==d?(d=b,c=b=void 0):null==d&amp;&amp;("string"==typeof b?(d=c,c=void 0):(d=c,c=b,b=void 0)),d===!1)d=$;else if(!d)return this;return 1===e&amp;&amp;(f=d,d=function(a){return n().off(a),f.apply(this,arguments)},d.guid=f.guid||(f.guid=n.guid++)),this.each(function(){n.event.add(this,a,d,c,b)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&amp;&amp;a.preventDefault&amp;&amp;a.handleObj)return d=a.handleObj,n(a.delegateTarget).off(d.namespace?d.origType+"."+d.namespace:d.origType,d.selector,d.handler),this;if("object"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return(b===!1||"function"==typeof b)&amp;&amp;(c=b,b=void 0),c===!1&amp;&amp;(c=$),this.each(function(){n.event.remove(this,a,c,b)})},trigger:function(a,b){return this.each(function(){n.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];return c?n.event.trigger(a,b,c,!0):void 0}});var aa=/&lt;(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^&gt;]*)\/&gt;/gi,ba=/&lt;([\w:]+)/,ca=/&lt;|&amp;#?\w+;/,da=/&lt;(?:script|style|link)/i,ea=/checked\s*(?:[^=]|=\s*.checked.)/i,fa=/^$|\/(?:java|ecma)script/i,ga=/^true\/(.*)/,ha=/^\s*&lt;!(?:\[CDATA\[|--)|(?:\]\]|--)&gt;\s*$/g,ia={option:[1,"&lt;select multiple=''multiple''&gt;","&lt;/select&gt;"],thead:[1,"&lt;table&gt;","&lt;/table&gt;"],col:[2,"&lt;table&gt;&lt;colgroup&gt;","&lt;/colgroup&gt;&lt;/table&gt;"],tr:[2,"&lt;table&gt;&lt;tbody&gt;","&lt;/tbody&gt;&lt;/table&gt;"],td:[3,"&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;","&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;"],_default:[0,"",""]};ia.optgroup=ia.option,ia.tbody=ia.tfoot=ia.colgroup=ia.caption=ia.thead,ia.th=ia.td;function ja(a,b){return n.nodeName(a,"table")&amp;&amp;n.nodeName(11!==b.nodeType?b:b.firstChild,"tr")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function ka(a){return a.type=(null!==a.getAttribute("type"))+"/"+a.type,a}function la(a){var b=ga.exec(a.type);return b?a.type=b[1]:a.removeAttribute("type"),a}function ma(a,b){for(var c=0,d=a.length;d&gt;c;c++)L.set(a[c],"globalEval",!b||L.get(b[c],"globalEval"))}function na(a,b){var c,d,e,f,g,h,i,j;if(1===b.nodeType){if(L.hasData(a)&amp;&amp;(f=L.access(a),g=L.set(b,f),j=f.events)){delete g.handle,g.events={};for(e in j)for(c=0,d=j[e].length;d&gt;c;c++)n.event.add(b,e,j[e][c])}M.hasData(a)&amp;&amp;(h=M.access(a),i=n.extend({},h),M.set(b,i))}}function oa(a,b){var c=a.getElementsByTagName?a.getElementsByTagName(b||"*"):a.querySelectorAll?a.querySelectorAll(b||"*"):[];return void 0===b||b&amp;&amp;n.nodeName(a,b)?n.merge([a],c):c}function pa(a,b){var c=b.nodeName.toLowerCase();"input"===c&amp;&amp;T.test(a.type)?b.checked=a.checked:("input"===c||"textarea"===c)&amp;&amp;(b.defaultValue=a.defaultValue)}n.extend({clone:function(a,b,c){var d,e,f,g,h=a.cloneNode(!0),i=n.contains(a.ownerDocument,a);if(!(k.noCloneChecked||1!==a.nodeType&amp;&amp;11!==a.nodeType||n.isXMLDoc(a)))for(g=oa(h),f=oa(a),d=0,e=f.length;e&gt;d;d++)pa(f[d],g[d]);if(b)if(c)for(f=f||oa(a),g=g||oa(h),d=0,e=f.length;e&gt;d;d++)na(f[d],g[d]);else na(a,h);return g=oa(h,"script"),g.length&gt;0&amp;&amp;ma(g,!i&amp;&amp;oa(a,"script")),h},buildFragment:function(a,b,c,d){for(var e,f,g,h,i,j,k=b.createDocumentFragment(),l=[],m=0,o=a.length;o&gt;m;m++)if(e=a[m],e||0===e)if("object"===n.type(e))n.merge(l,e.nodeType?[e]:e);else if(ca.test(e)){f=f||k.appendChild(b.createElement("div")),g=(ba.exec(e)||["",""])[1].toLowerCase(),h=ia[g]||ia._default,f.innerHTML=h[1]+e.replace(aa,"&lt;$1&gt;&lt;/$2&gt;")+h[2],j=h[0];while(j--)f=f.lastChild;n.merge(l,f.childNodes),f=k.firstChild,f.textContent=""}else l.push(b.createTextNode(e));k.textContent="",m=0;while(e=l[m++])if((!d||-1===n.inArray(e,d))&amp;&amp;(i=n.contains(e.ownerDocument,e),f=oa(k.appendChild(e),"script"),i&amp;&amp;ma(f),c)){j=0;while(e=f[j++])fa.test(e.type||"")&amp;&amp;c.push(e)}return k},cleanData:function(a){for(var b,c,d,e,f=n.event.special,g=0;void 0!==(c=a[g]);g++){if(n.acceptData(c)&amp;&amp;(e=c[L.expando],e&amp;&amp;(b=L.cache[e]))){if(b.events)for(d in b.events)f[d]?n.event.remove(c,d):n.removeEvent(c,d,b.handle);L.cache[e]&amp;&amp;delete L.cache[e]}delete M.cache[c[M.expando]]}}}),n.fn.extend({text:function(a){return J(this,function(a){return void 0===a?n.text(this):this.empty().each(function(){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&amp;&amp;(this.textContent=a)})},null,a,arguments.length)},append:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=ja(this,a);b.appendChild(a)}})},prepend:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=ja(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return this.domManip(arguments,function(a){this.parentNode&amp;&amp;this.parentNode.insertBefore(a,this)})},after:function(){return this.domManip(arguments,function(a){this.parentNode&amp;&amp;this.parentNode.insertBefore(a,this.nextSibling)})},remove:function(a,b){for(var c,d=a?n.filter(a,this):this,e=0;null!=(c=d[e]);e++)b||1!==c.nodeType||n.cleanData(oa(c)),c.parentNode&amp;&amp;(b&amp;&amp;n.contains(c.ownerDocument,c)&amp;&amp;ma(oa(c,"script")),c.parentNode.removeChild(c));return this},empty:function(){for(var a,b=0;null!=(a=this[b]);b++)1===a.nodeType&amp;&amp;(n.cleanData(oa(a,!1)),a.textContent="");return this},clone:function(a,b){return a=null==a?!1:a,b=null==b?a:b,this.map(function(){return n.clone(this,a,b)})},html:function(a){return J(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a&amp;&amp;1===b.nodeType)return b.innerHTML;if("string"==typeof a&amp;&amp;!da.test(a)&amp;&amp;!ia[(ba.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(aa,"&lt;$1&gt;&lt;/$2&gt;");try{for(;d&gt;c;c++)b=this[c]||{},1===b.nodeType&amp;&amp;(n.cleanData(oa(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&amp;&amp;this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=arguments[0];return this.domManip(arguments,function(b){a=this.parentNode,n.cleanData(oa(this)),a&amp;&amp;a.replaceChild(b,this)}),a&amp;&amp;(a.length||a.nodeType)?this:this.remove()},detach:function(a){return this.remove(a,!0)},domManip:function(a,b){a=e.apply([],a);var c,d,f,g,h,i,j=0,l=this.length,m=this,o=l-1,p=a[0],q=n.isFunction(p);if(q||l&gt;1&amp;&amp;"string"==typeof p&amp;&amp;!k.checkClone&amp;&amp;ea.test(p))return this.each(function(c){var d=m.eq(c);q&amp;&amp;(a[0]=p.call(this,c,d.html())),d.domManip(a,b)});if(l&amp;&amp;(c=n.buildFragment(a,this[0].ownerDocument,!1,this),d=c.firstChild,1===c.childNodes.length&amp;&amp;(c=d),d)){for(f=n.map(oa(c,"script"),ka),g=f.length;l&gt;j;j++)h=c,j!==o&amp;&amp;(h=n.clone(h,!0,!0),g&amp;&amp;n.merge(f,oa(h,"script"))),b.call(this[j],h,j);if(g)for(i=f[f.length-1].ownerDocument,n.map(f,la),j=0;g&gt;j;j++)h=f[j],fa.test(h.type||"")&amp;&amp;!L.access(h,"globalEval")&amp;&amp;n.contains(i,h)&amp;&amp;(h.src?n._evalUrl&amp;&amp;n._evalUrl(h.src):n.globalEval(h.textContent.replace(ha,"")))}return this}}),n.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){n.fn[a]=function(a){for(var c,d=[],e=n(a),g=e.length-1,h=0;g&gt;=h;h++)c=h===g?this:this.clone(!0),n(e[h])[b](c),f.apply(d,c.get());return this.pushStack(d)}});var qa,ra={};function sa(b,c){var d,e=n(c.createElement(b)).appendTo(c.body),f=a.getDefaultComputedStyle&amp;&amp;(d=a.getDefaultComputedStyle(e[0]))?d.display:n.css(e[0],"display");return e.detach(),f}function ta(a){var b=l,c=ra[a];return c||(c=sa(a,b),"none"!==c&amp;&amp;c||(qa=(qa||n("&lt;iframe frameborder=''0'' width=''0'' height=''0''/&gt;")).appendTo(b.documentElement),b=qa[0].contentDocument,b.write(),b.close(),c=sa(a,b),qa.detach()),ra[a]=c),c}var ua=/^margin/,va=new RegExp("^("+Q+")(?!px)[a-z%]+$","i"),wa=function(b){return b.ownerDocument.defaultView.opener?b.ownerDocument.defaultView.getComputedStyle(b,null):a.getComputedStyle(b,null)};function xa(a,b,c){var d,e,f,g,h=a.style;return c=c||wa(a),c&amp;&amp;(g=c.getPropertyValue(b)||c[b]),c&amp;&amp;(""!==g||n.contains(a.ownerDocument,a)||(g=n.style(a,b)),va.test(g)&amp;&amp;ua.test(b)&amp;&amp;(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0!==g?g+"":g}function ya(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}!function(){var b,c,d=l.documentElement,e=l.createElement("div"),f=l.createElement("div");if(f.style){f.style.backgroundClip="content-box",f.cloneNode(!0).style.backgroundClip="",k.clearCloneStyle="content-box"===f.style.backgroundClip,e.style.cssText="border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute",e.appendChild(f);function g(){f.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute",f.innerHTML="",d.appendChild(e);var g=a.getComputedStyle(f,null);b="1%"!==g.top,c="4px"===g.width,d.removeChild(e)}a.getComputedStyle&amp;&amp;n.extend(k,{pixelPosition:function(){return g(),b},boxSizingReliable:function(){return null==c&amp;&amp;g(),c},reliableMarginRight:function(){var b,c=f.appendChild(l.createElement("div"));return c.style.cssText=f.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",c.style.marginRight=c.style.width="0",f.style.width="1px",d.appendChild(e),b=!parseFloat(a.getComputedStyle(c,null).marginRight),d.removeChild(e),f.removeChild(c),b}})}}(),n.swap=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};var za=/^(none|table(?!-c[ea]).+)/,Aa=new RegExp("^("+Q+")(.*)$","i"),Ba=new RegExp("^([+-])=("+Q+")","i"),Ca={position:"absolute",visibility:"hidden",display:"block"},Da={letterSpacing:"0",fontWeight:"400"},Ea=["Webkit","O","Moz","ms"];function Fa(a,b){if(b in a)return b;var c=b[0].toUpperCase()+b.slice(1),d=b,e=Ea.length;while(e--)if(b=Ea[e]+c,b in a)return b;return d}function Ga(a,b,c){var d=Aa.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||"px"):b}function Ha(a,b,c,d,e){for(var f=c===(d?"border":"content")?4:"width"===b?1:0,g=0;4&gt;f;f+=2)"margin"===c&amp;&amp;(g+=n.css(a,c+R[f],!0,e)),d?("content"===c&amp;&amp;(g-=n.css(a,"padding"+R[f],!0,e)),"margin"!==c&amp;&amp;(g-=n.css(a,"border"+R[f]+"Width",!0,e))):(g+=n.css(a,"padding"+R[f],!0,e),"padding"!==c&amp;&amp;(g+=n.css(a,"border"+R[f]+"Width",!0,e)));return g}function Ia(a,b,c){var d=!0,e="width"===b?a.offsetWidth:a.offsetHeight,f=wa(a),g="border-box"===n.css(a,"boxSizing",!1,f);if(0&gt;=e||null==e){if(e=xa(a,b,f),(0&gt;e||null==e)&amp;&amp;(e=a.style[b]),va.test(e))return e;d=g&amp;&amp;(k.boxSizingReliable()||e===a.style[b]),e=parseFloat(e)||0}return e+Ha(a,b,c||(g?"border":"content"),d,f)+"px"}function Ja(a,b){for(var c,d,e,f=[],g=0,h=a.length;h&gt;g;g++)d=a[g],d.style&amp;&amp;(f[g]=L.get(d,"olddisplay"),c=d.style.display,b?(f[g]||"none"!==c||(d.style.display=""),""===d.style.display&amp;&amp;S(d)&amp;&amp;(f[g]=L.access(d,"olddisplay",ta(d.nodeName)))):(e=S(d),"none"===c&amp;&amp;e||L.set(d,"olddisplay",e?c:n.css(d,"display"))));for(g=0;h&gt;g;g++)d=a[g],d.style&amp;&amp;(b&amp;&amp;"none"!==d.style.display&amp;&amp;""!==d.style.display||(d.style.display=b?f[g]||"":"none"));return a}n.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=xa(a,"opacity");return""===c?"1":c}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":"cssFloat"},style:function(a,b,c,d){if(a&amp;&amp;3!==a.nodeType&amp;&amp;8!==a.nodeType&amp;&amp;a.style){var e,f,g,h=n.camelCase(b),i=a.style;return b=n.cssProps[h]||(n.cssProps[h]=Fa(i,h)),g=n.cssHooks[b]||n.cssHooks[h],void 0===c?g&amp;&amp;"get"in g&amp;&amp;void 0!==(e=g.get(a,!1,d))?e:i[b]:(f=typeof c,"string"===f&amp;&amp;(e=Ba.exec(c))&amp;&amp;(c=(e[1]+1)*e[2]+parseFloat(n.css(a,b)),f="number"),null!=c&amp;&amp;c===c&amp;&amp;("number"!==f||n.cssNumber[h]||(c+="px"),k.clearCloneStyle||""!==c||0!==b.indexOf("background")||(i[b]="inherit"),g&amp;&amp;"set"in g&amp;&amp;void 0===(c=g.set(a,c,d))||(i[b]=c)),void 0)}},css:function(a,b,c,d){var e,f,g,h=n.camelCase(b);return b=n.cssProps[h]||(n.cssProps[h]=Fa(a.style,h)),g=n.cssHooks[b]||n.cssHooks[h],g&amp;&amp;"get"in g&amp;&amp;(e=g.get(a,!0,c)),void 0===e&amp;&amp;(e=xa(a,b,d)),"normal"===e&amp;&amp;b in Da&amp;&amp;(e=Da[b]),""===c||c?(f=parseFloat(e),c===!0||n.isNumeric(f)?f||0:e):e}}),n.each(["height","width"],function(a,b){n.cssHooks[b]={get:function(a,c,d){return c?za.test(n.css(a,"display"))&amp;&amp;0===a.offsetWidth?n.swap(a,Ca,function(){return Ia(a,b,d)}):Ia(a,b,d):void 0},set:function(a,c,d){var e=d&amp;&amp;wa(a);return Ga(a,c,d?Ha(a,b,d,"border-box"===n.css(a,"boxSizing",!1,e),e):0)}}}),n.cssHooks.marginRight=ya(k.reliableMarginRight,function(a,b){return b?n.swap(a,{display:"inline-block"},xa,[a,"marginRight"]):void 0}),n.each({margin:"",padding:"",border:"Width"},function(a,b){n.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f="string"==typeof c?c.split(" "):[c];4&gt;d;d++)e[a+R[d]+b]=f[d]||f[d-2]||f[0];return e}},ua.test(a)||(n.cssHooks[a+b].set=Ga)}),n.fn.extend({css:function(a,b){return J(this,function(a,b,c){var d,e,f={},g=0;if(n.isArray(b)){for(d=wa(a),e=b.length;e&gt;g;g++)f[b[g]]=n.css(a,b[g],!1,d);return f}return void 0!==c?n.style(a,b,c):n.css(a,b)},a,b,arguments.length&gt;1)},show:function(){return Ja(this,!0)},hide:function(){return Ja(this)},toggle:function(a){return"boolean"==typeof a?a?this.show():this.hide():this.each(function(){S(this)?n(this).show():n(this).hide()})}});function Ka(a,b,c,d,e){return new Ka.prototype.init(a,b,c,d,e)}n.Tween=Ka,Ka.prototype={constructor:Ka,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||"swing",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(n.cssNumber[c]?"":"px")},cur:function(){var a=Ka.propHooks[this.prop];return a&amp;&amp;a.get?a.get(this):Ka.propHooks._default.get(this)},run:function(a){var b,c=Ka.propHooks[this.prop];return this.options.duration?this.pos=b=n.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):this.pos=b=a,this.now=(this.end-this.start)*b+this.start,this.options.step&amp;&amp;this.options.step.call(this.elem,this.now,this),c&amp;&amp;c.set?c.set(this):Ka.propHooks._default.set(this),this}},Ka.prototype.init.prototype=Ka.prototype,Ka.propHooks={_default:{get:function(a){var b;return null==a.elem[a.prop]||a.elem.style&amp;&amp;null!=a.elem.style[a.prop]?(b=n.css(a.elem,a.prop,""),b&amp;&amp;"auto"!==b?b:0):a.elem[a.prop]},set:function(a){n.fx.step[a.prop]?n.fx.step[a.prop](a):a.elem.style&amp;&amp;(null!=a.elem.style[n.cssProps[a.prop]]||n.cssHooks[a.prop])?n.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},Ka.propHooks.scrollTop=Ka.propHooks.scrollLeft={set:function(a){a.elem.nodeType&amp;&amp;a.elem.parentNode&amp;&amp;(a.elem[a.prop]=a.now)}},n.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},n.fx=Ka.prototype.init,n.fx.step={};var La,Ma,Na=/^(?:toggle|show|hide)$/,Oa=new RegExp("^(?:([+-])=|)("+Q+")([a-z%]*)$","i"),Pa=/queueHooks$/,Qa=[Va],Ra={"*":[function(a,b){var c=this.createTween(a,b),d=c.cur(),e=Oa.exec(b),f=e&amp;&amp;e[3]||(n.cssNumber[a]?"":"px"),g=(n.cssNumber[a]||"px"!==f&amp;&amp;+d)&amp;&amp;Oa.exec(n.css(c.elem,a)),h=1,i=20;if(g&amp;&amp;g[3]!==f){f=f||g[3],e=e||[],g=+d||1;do h=h||".5",g/=h,n.style(c.elem,a,g+f);while(h!==(h=c.cur()/d)&amp;&amp;1!==h&amp;&amp;--i)}return e&amp;&amp;(g=c.start=+g||+d||0,c.unit=f,c.end=e[1]?g+(e[1]+1)*e[2]:+e[2]),c}]};function Sa(){return setTimeout(function(){La=void 0}),La=n.now()}function Ta(a,b){var c,d=0,e={height:a};for(b=b?1:0;4&gt;d;d+=2-b)c=R[d],e["margin"+c]=e["padding"+c]=a;return b&amp;&amp;(e.opacity=e.width=a),e}function Ua(a,b,c){for(var d,e=(Ra[b]||[]).concat(Ra["*"]),f=0,g=e.length;g&gt;f;f++)if(d=e[f].call(c,b,a))return d}function Va(a,b,c){var d,e,f,g,h,i,j,k,l=this,m={},o=a.style,p=a.nodeType&amp;&amp;S(a),q=L.get(a,"fxshow");c.queue||(h=n._queueHooks(a,"fx"),null==h.unqueued&amp;&amp;(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,l.always(function(){l.always(function(){h.unqueued--,n.queue(a,"fx").length||h.empty.fire()})})),1===a.nodeType&amp;&amp;("height"in b||"width"in b)&amp;&amp;(c.overflow=[o.overflow,o.overflowX,o.overflowY],j=n.css(a,"display"),k="none"===j?L.get(a,"olddisplay")||ta(a.nodeName):j,"inline"===k&amp;&amp;"none"===n.css(a,"float")&amp;&amp;(o.display="inline-block")),c.overflow&amp;&amp;(o.overflow="hidden",l.always(function(){o.overflow=c.overflow[0],o.overflowX=c.overflow[1],o.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],Na.exec(e)){if(delete b[d],f=f||"toggle"===e,e===(p?"hide":"show")){if("show"!==e||!q||void 0===q[d])continue;p=!0}m[d]=q&amp;&amp;q[d]||n.style(a,d)}else j=void 0;if(n.isEmptyObject(m))"inline"===("none"===j?ta(a.nodeName):j)&amp;&amp;(o.display=j);else{q?"hidden"in q&amp;&amp;(p=q.hidden):q=L.access(a,"fxshow",{}),f&amp;&amp;(q.hidden=!p),p?n(a).show():l.done(function(){n(a).hide()}),l.done(function(){var b;L.remove(a,"fxshow");for(b in m)n.style(a,b,m[b])});for(d in m)g=Ua(p?q[d]:0,d,l),d in q||(q[d]=g.start,p&amp;&amp;(g.end=g.start,g.start="width"===d||"height"===d?1:0))}}function Wa(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&amp;&amp;(e=f[1],f=a[c]=f[0]),c!==d&amp;&amp;(a[d]=f,delete a[c]),g=n.cssHooks[d],g&amp;&amp;"expand"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function Xa(a,b,c){var d,e,f=0,g=Qa.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=La||Sa(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i&gt;g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1&gt;f&amp;&amp;i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:La||Sa(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d&gt;c;c++)j.tweens[c].run(1);return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;for(Wa(k,j.opts.specialEasing);g&gt;f;f++)if(d=Qa[f].call(j,a,k,j.opts))return d;return n.map(k,Ua,j),n.isFunction(j.opts.start)&amp;&amp;j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}n.Animation=n.extend(Xa,{tweener:function(a,b){n.isFunction(a)?(b=a,a=["*"]):a=a.split(" ");for(var c,d=0,e=a.length;e&gt;d;d++)c=a[d],Ra[c]=Ra[c]||[],Ra[c].unshift(b)},prefilter:function(a,b){b?Qa.unshift(a):Qa.push(a)}}),n.speed=function(a,b,c){var d=a&amp;&amp;"object"==typeof a?n.extend({},a):{complete:c||!c&amp;&amp;b||n.isFunction(a)&amp;&amp;a,duration:a,easing:c&amp;&amp;b||b&amp;&amp;!n.isFunction(b)&amp;&amp;b};return d.duration=n.fx.off?0:"number"==typeof d.duration?d.duration:d.duration in n.fx.speeds?n.fx.speeds[d.duration]:n.fx.speeds._default,(null==d.queue||d.queue===!0)&amp;&amp;(d.queue="fx"),d.old=d.complete,d.complete=function(){n.isFunction(d.old)&amp;&amp;d.old.call(this),d.queue&amp;&amp;n.dequeue(this,d.queue)},d},n.fn.extend({fadeTo:function(a,b,c,d){return this.filter(S).css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=n.isEmptyObject(a),f=n.speed(b,c,d),g=function(){var b=Xa(this,n.extend({},a),f);(e||L.get(this,"finish"))&amp;&amp;b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return"string"!=typeof a&amp;&amp;(c=b,b=a,a=void 0),b&amp;&amp;a!==!1&amp;&amp;this.queue(a||"fx",[]),this.each(function(){var b=!0,e=null!=a&amp;&amp;a+"queueHooks",f=n.timers,g=L.get(this);if(e)g[e]&amp;&amp;g[e].stop&amp;&amp;d(g[e]);else for(e in g)g[e]&amp;&amp;g[e].stop&amp;&amp;Pa.test(e)&amp;&amp;d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&amp;&amp;f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));(b||!c)&amp;&amp;n.dequeue(this,a)})},finish:function(a){return a!==!1&amp;&amp;(a=a||"fx"),this.each(function(){var b,c=L.get(this),d=c[a+"queue"],e=c[a+"queueHooks"],f=n.timers,g=d?d.length:0;for(c.finish=!0,n.queue(this,a,[]),e&amp;&amp;e.stop&amp;&amp;e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&amp;&amp;f[b].queue===a&amp;&amp;(f[b].anim.stop(!0),f.splice(b,1));for(b=0;g&gt;b;b++)d[b]&amp;&amp;d[b].finish&amp;&amp;d[b].finish.call(this);delete c.finish})}}),n.each(["toggle","show","hide"],function(a,b){var c=n.fn[b];n.fn[b]=function(a,d,e){return null==a||"boolean"==typeof a?c.apply(this,arguments):this.animate(Ta(b,!0),a,d,e)}}),n.each({slideDown:Ta("show"),slideUp:Ta("hide"),slideToggle:Ta("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){n.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),n.timers=[],n.fx.tick=function(){var a,b=0,c=n.timers;for(La=n.now();b&lt;c.length;b++)a=c[b],a()||c[b]!==a||c.splice(b--,1);c.length||n.fx.stop(),La=void 0},n.fx.timer=function(a){n.timers.push(a),a()?n.fx.start():n.timers.pop()},n.fx.interval=13,n.fx.start=function(){Ma||(Ma=setInterval(n.fx.tick,n.fx.interval))},n.fx.stop=function(){clearInterval(Ma),Ma=null},n.fx.speeds={slow:600,fast:200,_default:400},n.fn.delay=function(a,b){return a=n.fx?n.fx.speeds[a]||a:a,b=b||"fx",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},function(){var a=l.createElement("input"),b=l.createElement("select"),c=b.appendChild(l.createElement("option"));a.type="checkbox",k.checkOn=""!==a.value,k.optSelected=c.selected,b.disabled=!0,k.optDisabled=!c.disabled,a=l.createElement("input"),a.value="t",a.type="radio",k.radioValue="t"===a.value}();var Ya,Za,$a=n.expr.attrHandle;n.fn.extend({attr:function(a,b){return J(this,n.attr,a,b,arguments.length&gt;1)},removeAttr:function(a){return this.each(function(){n.removeAttr(this,a)})}}),n.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(a&amp;&amp;3!==f&amp;&amp;8!==f&amp;&amp;2!==f)return typeof a.getAttribute===U?n.prop(a,b,c):(1===f&amp;&amp;n.isXMLDoc(a)||(b=b.toLowerCase(),d=n.attrHooks[b]||(n.expr.match.bool.test(b)?Za:Ya)),void 0===c?d&amp;&amp;"get"in d&amp;&amp;null!==(e=d.get(a,b))?e:(e=n.find.attr(a,b),null==e?void 0:e):null!==c?d&amp;&amp;"set"in d&amp;&amp;void 0!==(e=d.set(a,c,b))?e:(a.setAttribute(b,c+""),c):void n.removeAttr(a,b))},removeAttr:function(a,b){var c,d,e=0,f=b&amp;&amp;b.match(E);if(f&amp;&amp;1===a.nodeType)while(c=f[e++])d=n.propFix[c]||c,n.expr.match.bool.test(c)&amp;&amp;(a[d]=!1),a.removeAttribute(c)},attrHooks:{type:{set:function(a,b){if(!k.radioValue&amp;&amp;"radio"===b&amp;&amp;n.nodeName(a,"input")){var c=a.value;return a.setAttribute("type",b),c&amp;&amp;(a.value=c),b}}}}}),Za={set:function(a,b,c){return b===!1?n.removeAttr(a,c):a.setAttribute(c,c),c}},n.each(n.expr.match.bool.source.match(/\w+/g),function(a,b){var c=$a[b]||n.find.attr;$a[b]=function(a,b,d){var e,f;return d||(f=$a[b],$a[b]=e,e=null!=c(a,b,d)?b.toLowerCase():null,$a[b]=f),e}});var _a=/^(?:input|select|textarea|button)$/i;n.fn.extend({prop:function(a,b){return J(this,n.prop,a,b,arguments.length&gt;1)},removeProp:function(a){return this.each(function(){delete this[n.propFix[a]||a]})}}),n.extend({propFix:{"for":"htmlFor","class":"className"},prop:function(a,b,c){var d,e,f,g=a.nodeType;if(a&amp;&amp;3!==g&amp;&amp;8!==g&amp;&amp;2!==g)return f=1!==g||!n.isXMLDoc(a),f&amp;&amp;(b=n.propFix[b]||b,e=n.propHooks[b]),void 0!==c?e&amp;&amp;"set"in e&amp;&amp;void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&amp;&amp;"get"in e&amp;&amp;null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){return a.hasAttribute("tabindex")||_a.test(a.nodeName)||a.href?a.tabIndex:-1}}}}),k.optSelected||(n.propHooks.selected={get:function(a){var b=a.parentNode;return b&amp;&amp;b.parentNode&amp;&amp;b.parentNode.selectedIndex,null}}),n.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){n.propFix[this.toLowerCase()]=this});var ab=/[\t\r\n\f]/g;n.fn.extend({addClass:function(a){var b,c,d,e,f,g,h="string"==typeof a&amp;&amp;a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).addClass(a.call(this,b,this.className))});if(h)for(b=(a||"").match(E)||[];j&gt;i;i++)if(c=this[i],d=1===c.nodeType&amp;&amp;(c.className?(" "+c.className+" ").replace(ab," "):" ")){f=0;while(e=b[f++])d.indexOf(" "+e+" ")&lt;0&amp;&amp;(d+=e+" ");g=n.trim(d),c.className!==g&amp;&amp;(c.className=g)}return this},removeClass:function(a){var b,c,d,e,f,g,h=0===arguments.length||"string"==typeof a&amp;&amp;a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).removeClass(a.call(this,b,this.className))});if(h)for(b=(a||"").match(E)||[];j&gt;i;i++)if(c=this[i],d=1===c.nodeType&amp;&amp;(c.className?(" "+c.className+" ").replace(ab," "):"")){f=0;while(e=b[f++])while(d.indexOf(" "+e+" ")&gt;=0)d=d.replace(" "+e+" "," ");g=a?n.trim(d):"",c.className!==g&amp;&amp;(c.className=g)}return this},toggleClass:function(a,b){var c=typeof a;return"boolean"==typeof b&amp;&amp;"string"===c?b?this.addClass(a):this.removeClass(a):this.each(n.isFunction(a)?function(c){n(this).toggleClass(a.call(this,c,this.className,b),b)}:function(){if("string"===c){var b,d=0,e=n(this),f=a.match(E)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else(c===U||"boolean"===c)&amp;&amp;(this.className&amp;&amp;L.set(this,"__className__",this.className),this.className=this.className||a===!1?"":L.get(this,"__className__")||"")})},hasClass:function(a){for(var b=" "+a+" ",c=0,d=this.length;d&gt;c;c++)if(1===this[c].nodeType&amp;&amp;(" "+this[c].className+" ").replace(ab," ").indexOf(b)&gt;=0)return!0;return!1}});var bb=/\r/g;n.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=n.isFunction(a),this.each(function(c){var e;1===this.nodeType&amp;&amp;(e=d?a.call(this,c,n(this).val()):a,null==e?e="":"number"==typeof e?e+="":n.isArray(e)&amp;&amp;(e=n.map(e,function(a){return null==a?"":a+""})),b=n.valHooks[this.type]||n.valHooks[this.nodeName.toLowerCase()],b&amp;&amp;"set"in b&amp;&amp;void 0!==b.set(this,e,"value")||(this.value=e))});if(e)return b=n.valHooks[e.type]||n.valHooks[e.nodeName.toLowerCase()],b&amp;&amp;"get"in b&amp;&amp;void 0!==(c=b.get(e,"value"))?c:(c=e.value,"string"==typeof c?c.replace(bb,""):null==c?"":c)}}}),n.extend({valHooks:{option:{get:function(a){var b=n.find.attr(a,"value");return null!=b?b:n.trim(n.text(a))}},select:{get:function(a){for(var b,c,d=a.options,e=a.selectedIndex,f="select-one"===a.type||0&gt;e,g=f?null:[],h=f?e+1:d.length,i=0&gt;e?h:f?e:0;h&gt;i;i++)if(c=d[i],!(!c.selected&amp;&amp;i!==e||(k.optDisabled?c.disabled:null!==c.getAttribute("disabled"))||c.parentNode.disabled&amp;&amp;n.nodeName(c.parentNode,"optgroup"))){if(b=n(c).val(),f)return b;g.push(b)}return g},set:function(a,b){var c,d,e=a.options,f=n.makeArray(b),g=e.length;while(g--)d=e[g],(d.selected=n.inArray(d.value,f)&gt;=0)&amp;&amp;(c=!0);return c||(a.selectedIndex=-1),f}}}}),n.each(["radio","checkbox"],function(){n.valHooks[this]={set:function(a,b){return n.isArray(b)?a.checked=n.inArray(n(a).val(),b)&gt;=0:void 0}},k.checkOn||(n.valHooks[this].get=function(a){return null===a.getAttribute("value")?"on":a.value})}),n.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(a,b){n.fn[b]=function(a,c){return arguments.length&gt;0?this.on(b,null,a,c):this.trigger(b)}}),n.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,"**"):this.off(b,a||"**",c)}});var cb=n.now(),db=/\?/;n.parseJSON=function(a){return JSON.parse(a+"")},n.parseXML=function(a){var b,c;if(!a||"string"!=typeof a)return null;try{c=new DOMParser,b=c.parseFromString(a,"text/xml")}catch(d){b=void 0}return(!b||b.getElementsByTagName("parsererror").length)&amp;&amp;n.error("Invalid XML: "+a),b};var eb=/#.*$/,fb=/([?&amp;])_=[^&amp;]*/,gb=/^(.*?):[ \t]*([^\r\n]*)$/gm,hb=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,ib=/^(?:GET|HEAD)$/,jb=/^\/\//,kb=/^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,lb={},mb={},nb="*/".concat("*"),ob=a.location.href,pb=kb.exec(ob.toLowerCase())||[];function qb(a){return function(b,c){"string"!=typeof b&amp;&amp;(c=b,b="*");var d,e=0,f=b.toLowerCase().match(E)||[];if(n.isFunction(c))while(d=f[e++])"+"===d[0]?(d=d.slice(1)||"*",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function rb(a,b,c,d){var e={},f=a===mb;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return"string"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e["*"]&amp;&amp;g("*")}function sb(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(c in b)void 0!==b[c]&amp;&amp;((e[c]?a:d||(d={}))[c]=b[c]);return d&amp;&amp;n.extend(!0,a,d),a}function tb(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while("*"===i[0])i.shift(),void 0===d&amp;&amp;(d=a.mimeType||b.getResponseHeader("Content-Type"));if(d)for(e in h)if(h[e]&amp;&amp;h[e].test(d)){i.unshift(e);break}if(i[0]in c)f=i[0];else{for(e in c){if(!i[0]||a.converters[e+" "+i[0]]){f=e;break}g||(g=e)}f=f||g}return f?(f!==i[0]&amp;&amp;i.unshift(f),c[f]):void 0}function ub(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&amp;&amp;(c[a.responseFields[f]]=b),!i&amp;&amp;d&amp;&amp;a.dataFilter&amp;&amp;(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if("*"===f)f=i;else if("*"!==i&amp;&amp;i!==f){if(g=j[i+" "+f]||j["* "+f],!g)for(e in j)if(h=e.split(" "),h[1]===f&amp;&amp;(g=j[i+" "+h[0]]||j["* "+h[0]])){g===!0?g=j[e]:j[e]!==!0&amp;&amp;(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&amp;&amp;a["throws"])b=g(b);else try{b=g(b)}catch(l){return{state:"parsererror",error:g?l:"No conversion from "+i+" to "+f}}}return{state:"success",data:b}}n.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:ob,type:"GET",isLocal:hb.test(pb[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":nb,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":n.parseJSON,"text xml":n.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?sb(sb(a,n.ajaxSettings),b):sb(n.ajaxSettings,a)},ajaxPrefilter:qb(lb),ajaxTransport:qb(mb),ajax:function(a,b){"object"==typeof a&amp;&amp;(b=a,a=void 0),b=b||{};var c,d,e,f,g,h,i,j,k=n.ajaxSetup({},b),l=k.context||k,m=k.context&amp;&amp;(l.nodeType||l.jquery)?n(l):n.event,o=n.Deferred(),p=n.Callbacks("once memory"),q=k.statusCode||{},r={},s={},t=0,u="canceled",v={readyState:0,getResponseHeader:function(a){var b;if(2===t){if(!f){f={};while(b=gb.exec(e))f[b[1].toLowerCase()]=b[2]}b=f[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return 2===t?e:null},setRequestHeader:function(a,b){var c=a.toLowerCase();return t||(a=s[c]=s[c]||a,r[a]=b),this},overrideMimeType:function(a){return t||(k.mimeType=a),this},statusCode:function(a){var b;if(a)if(2&gt;t)for(b in a)q[b]=[q[b],a[b]];else v.always(a[v.status]);return this},abort:function(a){var b=a||u;return c&amp;&amp;c.abort(b),x(0,b),this}};if(o.promise(v).complete=p.add,v.success=v.done,v.error=v.fail,k.url=((a||k.url||ob)+"").replace(eb,"").replace(jb,pb[1]+"//"),k.type=b.method||b.type||k.method||k.type,k.dataTypes=n.trim(k.dataType||"*").toLowerCase().match(E)||[""],null==k.crossDomain&amp;&amp;(h=kb.exec(k.url.toLowerCase()),k.crossDomain=!(!h||h[1]===pb[1]&amp;&amp;h[2]===pb[2]&amp;&amp;(h[3]||("http:"===h[1]?"80":"443"))===(pb[3]||("http:"===pb[1]?"80":"443")))),k.data&amp;&amp;k.processData&amp;&amp;"string"!=typeof k.data&amp;&amp;(k.data=n.param(k.data,k.traditional)),rb(lb,k,b,v),2===t)return v;i=n.event&amp;&amp;k.global,i&amp;&amp;0===n.active++&amp;&amp;n.event.trigger("ajaxStart"),k.type=k.type.toUpperCase(),k.hasContent=!ib.test(k.type),d=k.url,k.hasContent||(k.data&amp;&amp;(d=k.url+=(db.test(d)?"&amp;":"?")+k.data,delete k.data),k.cache===!1&amp;&amp;(k.url=fb.test(d)?d.replace(fb,"$1_="+cb++):d+(db.test(d)?"&amp;":"?")+"_="+cb++)),k.ifModified&amp;&amp;(n.lastModified[d]&amp;&amp;v.setRequestHeader("If-Modified-Since",n.lastModified[d]),n.etag[d]&amp;&amp;v.setRequestHeader("If-None-Match",n.etag[d])),(k.data&amp;&amp;k.hasContent&amp;&amp;k.contentType!==!1||b.contentType)&amp;&amp;v.setRequestHeader("Content-Type",k.contentType),v.setRequestHeader("Accept",k.dataTypes[0]&amp;&amp;k.accepts[k.dataTypes[0]]?k.accepts[k.dataTypes[0]]+("*"!==k.dataTypes[0]?", "+nb+"; q=0.01":""):k.accepts["*"]);for(j in k.headers)v.setRequestHeader(j,k.headers[j]);if(k.beforeSend&amp;&amp;(k.beforeSend.call(l,v,k)===!1||2===t))return v.abort();u="abort";for(j in{success:1,error:1,complete:1})v[j](k[j]);if(c=rb(mb,k,b,v)){v.readyState=1,i&amp;&amp;m.trigger("ajaxSend",[v,k]),k.async&amp;&amp;k.timeout&gt;0&amp;&amp;(g=setTimeout(function(){v.abort("timeout")},k.timeout));try{t=1,c.send(r,x)}catch(w){if(!(2&gt;t))throw w;x(-1,w)}}else x(-1,"No Transport");function x(a,b,f,h){var j,r,s,u,w,x=b;2!==t&amp;&amp;(t=2,g&amp;&amp;clearTimeout(g),c=void 0,e=h||"",v.readyState=a&gt;0?4:0,j=a&gt;=200&amp;&amp;300&gt;a||304===a,f&amp;&amp;(u=tb(k,v,f)),u=ub(k,u,v,j),j?(k.ifModified&amp;&amp;(w=v.getResponseHeader("Last-Modified"),w&amp;&amp;(n.lastModified[d]=w),w=v.getResponseHeader("etag"),w&amp;&amp;(n.etag[d]=w)),204===a||"HEAD"===k.type?x="nocontent":304===a?x="notmodified":(x=u.state,r=u.data,s=u.error,j=!s)):(s=x,(a||!x)&amp;&amp;(x="error",0&gt;a&amp;&amp;(a=0))),v.status=a,v.statusText=(b||x)+"",j?o.resolveWith(l,[r,x,v]):o.rejectWith(l,[v,x,s]),v.statusCode(q),q=void 0,i&amp;&amp;m.trigger(j?"ajaxSuccess":"ajaxError",[v,k,j?r:s]),p.fireWith(l,[v,x]),i&amp;&amp;(m.trigger("ajaxComplete",[v,k]),--n.active||n.event.trigger("ajaxStop")))}return v},getJSON:function(a,b,c){return n.get(a,b,c,"json")},getScript:function(a,b){return n.get(a,void 0,b,"script")}}),n.each(["get","post"],function(a,b){n[b]=function(a,c,d,e){return n.isFunction(c)&amp;&amp;(e=e||d,d=c,c=void 0),n.ajax({url:a,type:b,dataType:e,data:c,success:d})}}),n._evalUrl=function(a){return n.ajax({url:a,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0})},n.fn.extend({wrapAll:function(a){var b;return n.isFunction(a)?this.each(function(b){n(this).wrapAll(a.call(this,b))}):(this[0]&amp;&amp;(b=n(a,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&amp;&amp;b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstElementChild)a=a.firstElementChild;return a}).append(this)),this)},wrapInner:function(a){return this.each(n.isFunction(a)?function(b){n(this).wrapInner(a.call(this,b))}:function(){var b=n(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=n.isFunction(a);return this.each(function(c){n(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){n.nodeName(this,"body")||n(this).replaceWith(this.childNodes)}).end()}}),n.expr.filters.hidden=function(a){return a.offsetWidth&lt;=0&amp;&amp;a.offsetHeight&lt;=0},n.expr.filters.visible=function(a){return!n.expr.filters.hidden(a)};var vb=/%20/g,wb=/\[\]$/,xb=/\r?\n/g,yb=/^(?:submit|button|image|reset|file)$/i,zb=/^(?:input|select|textarea|keygen)/i;function Ab(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||wb.test(a)?d(a,e):Ab(a+"["+("object"==typeof e?b:"")+"]",e,c,d)});else if(c||"object"!==n.type(b))d(a,b);else for(e in b)Ab(a+"["+e+"]",b[e],c,d)}n.param=function(a,b){var c,d=[],e=function(a,b){b=n.isFunction(b)?b():null==b?"":b,d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};if(void 0===b&amp;&amp;(b=n.ajaxSettings&amp;&amp;n.ajaxSettings.traditional),n.isArray(a)||a.jquery&amp;&amp;!n.isPlainObject(a))n.each(a,function(){e(this.name,this.value)});else for(c in a)Ab(c,a[c],b,e);return d.join("&amp;").replace(vb,"+")},n.fn.extend({serialize:function(){return n.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=n.prop(this,"elements");return a?n.makeArray(a):this}).filter(function(){var a=this.type;return this.name&amp;&amp;!n(this).is(":disabled")&amp;&amp;zb.test(this.nodeName)&amp;&amp;!yb.test(a)&amp;&amp;(this.checked||!T.test(a))}).map(function(a,b){var c=n(this).val();return null==c?null:n.isArray(c)?n.map(c,function(a){return{name:b.name,value:a.replace(xb,"\r\n")}}):{name:b.name,value:c.replace(xb,"\r\n")}}).get()}}),n.ajaxSettings.xhr=function(){try{return new XMLHttpRequest}catch(a){}};var Bb=0,Cb={},Db={0:200,1223:204},Eb=n.ajaxSettings.xhr();a.attachEvent&amp;&amp;a.attachEvent("onunload",function(){for(var a in Cb)Cb[a]()}),k.cors=!!Eb&amp;&amp;"withCredentials"in Eb,k.ajax=Eb=!!Eb,n.ajaxTransport(function(a){var b;return k.cors||Eb&amp;&amp;!a.crossDomain?{send:function(c,d){var e,f=a.xhr(),g=++Bb;if(f.open(a.type,a.url,a.async,a.username,a.password),a.xhrFields)for(e in a.xhrFields)f[e]=a.xhrFields[e];a.mimeType&amp;&amp;f.overrideMimeType&amp;&amp;f.overrideMimeType(a.mimeType),a.crossDomain||c["X-Requested-With"]||(c["X-Requested-With"]="XMLHttpRequest");for(e in c)f.setRequestHeader(e,c[e]);b=function(a){return function(){b&amp;&amp;(delete Cb[g],b=f.onload=f.onerror=null,"abort"===a?f.abort():"error"===a?d(f.status,f.statusText):d(Db[f.status]||f.status,f.statusText,"string"==typeof f.responseText?{text:f.responseText}:void 0,f.getAllResponseHeaders()))}},f.onload=b(),f.onerror=b("error"),b=Cb[g]=b("abort");try{f.send(a.hasContent&amp;&amp;a.data||null)}catch(h){if(b)throw h}},abort:function(){b&amp;&amp;b()}}:void 0}),n.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/(?:java|ecma)script/},converters:{"text script":function(a){return n.globalEval(a),a}}}),n.ajaxPrefilter("script",function(a){void 0===a.cache&amp;&amp;(a.cache=!1),a.crossDomain&amp;&amp;(a.type="GET")}),n.ajaxTransport("script",function(a){if(a.crossDomain){var b,c;return{send:function(d,e){b=n("&lt;script&gt;").prop({async:!0,charset:a.scriptCharset,src:a.url}).on("load error",c=function(a){b.remove(),c=null,a&amp;&amp;e("error"===a.type?404:200,a.type)}),l.head.appendChild(b[0])},abort:function(){c&amp;&amp;c()}}}});var Fb=[],Gb=/(=)\?(?=&amp;|$)|\?\?/;n.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var a=Fb.pop()||n.expando+"_"+cb++;return this[a]=!0,a}}),n.ajaxPrefilter("json jsonp",function(b,c,d){var e,f,g,h=b.jsonp!==!1&amp;&amp;(Gb.test(b.url)?"url":"string"==typeof b.data&amp;&amp;!(b.contentType||"").indexOf("application/x-www-form-urlencoded")&amp;&amp;Gb.test(b.data)&amp;&amp;"data");return h||"jsonp"===b.dataTypes[0]?(e=b.jsonpCallback=n.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(Gb,"$1"+e):b.jsonp!==!1&amp;&amp;(b.url+=(db.test(b.url)?"&amp;":"?")+b.jsonp+"="+e),b.converters["script json"]=function(){return g||n.error(e+" was not called"),g[0]},b.dataTypes[0]="json",f=a[e],a[e]=function(){g=arguments},d.always(function(){a[e]=f,b[e]&amp;&amp;(b.jsonpCallback=c.jsonpCallback,Fb.push(e)),g&amp;&amp;n.isFunction(f)&amp;&amp;f(g[0]),g=f=void 0}),"script"):void 0}),n.parseHTML=function(a,b,c){if(!a||"string"!=typeof a)return null;"boolean"==typeof b&amp;&amp;(c=b,b=!1),b=b||l;var d=v.exec(a),e=!c&amp;&amp;[];return d?[b.createElement(d[1])]:(d=n.buildFragment([a],b,e),e&amp;&amp;e.length&amp;&amp;n(e).remove(),n.merge([],d.childNodes))};var Hb=n.fn.load;n.fn.load=function(a,b,c){if("string"!=typeof a&amp;&amp;Hb)return Hb.apply(this,arguments);var d,e,f,g=this,h=a.indexOf(" ");return h&gt;=0&amp;&amp;(d=n.trim(a.slice(h)),a=a.slice(0,h)),n.isFunction(b)?(c=b,b=void 0):b&amp;&amp;"object"==typeof b&amp;&amp;(e="POST"),g.length&gt;0&amp;&amp;n.ajax({url:a,type:e,dataType:"html",data:b}).done(function(a){f=arguments,g.html(d?n("&lt;div&gt;").append(n.parseHTML(a)).find(d):a)}).complete(c&amp;&amp;function(a,b){g.each(c,f||[a.responseText,b,a])}),this},n.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(a,b){n.fn[b]=function(a){return this.on(b,a)}}),n.expr.filters.animated=function(a){return n.grep(n.timers,function(b){return a===b.elem}).length};var Ib=a.document.documentElement;function Jb(a){return n.isWindow(a)?a:9===a.nodeType&amp;&amp;a.defaultView}n.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=n.css(a,"position"),l=n(a),m={};"static"===k&amp;&amp;(a.style.position="relative"),h=l.offset(),f=n.css(a,"top"),i=n.css(a,"left"),j=("absolute"===k||"fixed"===k)&amp;&amp;(f+i).indexOf("auto")&gt;-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),n.isFunction(b)&amp;&amp;(b=b.call(a,c,h)),null!=b.top&amp;&amp;(m.top=b.top-h.top+g),null!=b.left&amp;&amp;(m.left=b.left-h.left+e),"using"in b?b.using.call(a,m):l.css(m)}},n.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){n.offset.setOffset(this,a,b)});var b,c,d=this[0],e={top:0,left:0},f=d&amp;&amp;d.ownerDocument;if(f)return b=f.documentElement,n.contains(b,d)?(typeof d.getBoundingClientRect!==U&amp;&amp;(e=d.getBoundingClientRect()),c=Jb(f),{top:e.top+c.pageYOffset-b.clientTop,left:e.left+c.pageXOffset-b.clientLeft}):e},position:function(){if(this[0]){var a,b,c=this[0],d={top:0,left:0};return"fixed"===n.css(c,"position")?b=c.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),n.nodeName(a[0],"html")||(d=a.offset()),d.top+=n.css(a[0],"borderTopWidth",!0),d.left+=n.css(a[0],"borderLeftWidth",!0)),{top:b.top-d.top-n.css(c,"marginTop",!0),left:b.left-d.left-n.css(c,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||Ib;while(a&amp;&amp;!n.nodeName(a,"html")&amp;&amp;"static"===n.css(a,"position"))a=a.offsetParent;return a||Ib})}}),n.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(b,c){var d="pageYOffset"===c;n.fn[b]=function(e){return J(this,function(b,e,f){var g=Jb(b);return void 0===f?g?g[c]:b[e]:void(g?g.scrollTo(d?a.pageXOffset:f,d?f:a.pageYOffset):b[e]=f)},b,e,arguments.length,null)}}),n.each(["top","left"],function(a,b){n.cssHooks[b]=ya(k.pixelPosition,function(a,c){return c?(c=xa(a,b),va.test(c)?n(a).position()[b]+"px":c):void 0})}),n.each({Height:"height",Width:"width"},function(a,b){n.each({padding:"inner"+a,content:b,"":"outer"+a},function(c,d){n.fn[d]=function(d,e){var f=arguments.length&amp;&amp;(c||"boolean"!=typeof d),g=c||(d===!0||e===!0?"margin":"border");return J(this,function(b,c,d){var e;return n.isWindow(b)?b.document.documentElement["client"+a]:9===b.nodeType?(e=b.documentElement,Math.max(b.body["scroll"+a],e["scroll"+a],b.body["offset"+a],e["offset"+a],e["client"+a])):void 0===d?n.css(b,c,g):n.style(b,c,d,g)},b,f?d:void 0,f,null)}})}),n.fn.size=function(){return this.length},n.fn.andSelf=n.fn.addBack,"function"==typeof define&amp;&amp;define.amd&amp;&amp;define("jquery",[],function(){return n});var Kb=a.jQuery,Lb=a.$;return n.noConflict=function(b){return a.$===n&amp;&amp;(a.$=Lb),b&amp;&amp;a.jQuery===n&amp;&amp;(a.jQuery=Kb),n},typeof b===U&amp;&amp;(a.jQuery=a.$=n),n});'</body></methods><methods><class-id>JQuery.JQAjaxSetup</class-id> <category>options</category><body package="JQuery-Core">async: aBoolean	"By default, all requests are sent asynchronous (i.e. this is set to true by default). If you need synchronous requests, set this option to false. Note that synchronous requests may temporarily lock the browser, disabling any actions while the request is active."		self optionAt: 'async' put: aBoolean</body><body package="JQuery-Core">cache: aBoolean	"If set to false it will force the pages that you request to not be cached by the browser."		self optionAt: 'cache' put: aBoolean</body><body package="JQuery-Core">contentType: aString	"When sending data to the server, use this content-type. Default is 'application/x-www-form-urlencoded', which is fine for most cases. If you explicitly pass in a content-type to $.ajax() then it'll always be sent to the server (even if no data is sent)."		self optionAt: 'contentType' put: aString</body><body package="JQuery-Core">context: anObject	"This object will be made the context of all Ajax-related callbacks. For example specifying a DOM element as the context will make that the context for the complete callback of a request, like so:"		self optionAt: 'context' put: anObject</body><body package="JQuery-Core">data: anObject	"Data to be sent to the server. It is converted to a query string, if not already a string. It's appended to the url for GET-requests. See processData option to prevent this automatic processing. Object must be Key/Value pairs. If value is an Array, jQuery serializes multiple values with same key i.e. {foo:['bar1', 'bar2']} becomes '&amp;foo=bar1&amp;foo=bar2'."		self optionAt: 'data' put: anObject</body><body package="JQuery-Core">dataFilter: anObject	"A function to be used to handle the raw responsed data of XMLHttpRequest.This is a pre-filtering function to sanitize the response.You should return the sanitized data.The function gets passed two arguments: The raw data returned from the server, and the 'dataType' parameter."		self optionAt: 'dataFilter' put: (anObject asFunction return: true)</body><body package="JQuery-Core">dataType: aString	"The type of data that you're expecting back from the server. If none is specified, jQuery will intelligently pass either responseXML or responseText to your success callback, based on the MIME type of the response. The available types (and the result passed as the first argument to your success callback) are:	-	xml: Returns a XML document that can be processed via jQuery.	-	html: Returns HTML as plain text; included script tags are evaluated when inserted in the DOM.	-	script: Evaluates the response as JavaScript and returns it as plain text. Disables caching unless option 'cache' is used. Note: This will turn POSTs into GETs for remote-domain requests.	-	json: Evaluates the response as JSON and returns a JavaScript Object.	-	jsonp: Loads in a JSON block using JSONP. Will add an extra '?callback=?' to the end of your URL to specify the callback. (Added in jQuery 1.2)	-	text: A plain text string."		self optionAt: 'dataType' put: aString</body><body package="JQuery-Core">global: aBoolean	"Whether to trigger global Ajax event handlers for this request. The default is true. Set to false to prevent the global handlers like ajaxStart or ajaxStop from being triggered. This can be used to control various Ajax Events."		self optionAt: 'global' put: aBoolean</body><body package="JQuery-Core">ifModified: aBoolean	"Allow the request to be successful only if the response has changed since the last request. This is done by checking the Last-Modified header. Default value is false, ignoring the header. In jQuery 1.4 this technique also checks the 'etag' specified by the server to catch unmodified data."		self optionAt: 'ifModified' put: aBoolean</body><body package="JQuery-Core">jsonp: aString	"Override the callback function name in a jsonp request. This value will be used instead of 'callback' in the 'callback=?' part of the query string in the url for a GET or the data for a POST. So {jsonp:'onJsonPLoad'} would result in 'onJsonPLoad=?' passed to the server."		self optionAt: 'jsonp' put: aString</body><body package="JQuery-Core">jsonpCallback: anObject	"Specify the callback function name for a jsonp request. This value will be used instead of the random name automatically generated by jQuery. It is preferable to let jQuery generate a unique name as it'll make it easier to manage the requests and provide callbacks and error handling. You may want to specify the callback when you want to enable better browser caching of GET requests."		self optionAt: 'jsonpCallback' put: anObject asFunction</body><body package="JQuery-Core">password: aString	"A password to be used in response to an HTTP access authentication request."		self optionAt: 'password' put: aString</body><body package="JQuery-Core">processData: aBoolean	"By default, data passed in to the data option as an object (technically, anything other than a string) will be processed and transformed into a query string, fitting to the default content-type 'application/x-www-form-urlencoded'. If you want to send a DOMDocument, or other non-processed data, set this option to false."		self optionAt: 'processData' put: aBoolean</body><body package="JQuery-Core">scriptCharset: aString	"Only for requests with 'jsonp' or 'script' dataType and 'GET' type. Forces the request to be interpreted as a certain charset. Only needed for charset differences between the remote and local content."		self optionAt: 'scriptCharset' put: aString</body><body package="JQuery-Core">timeout: anInteger	"Set a local timeout (in milliseconds) for the request. This will override the global timeout, if one is set via $.ajaxSetup. For example, you could use this property to give a single request a longer timeout than all other requests that you've set to time out in one second. See $.ajaxSetup() for global timeouts."		self optionAt: 'timeout' put: anInteger</body><body package="JQuery-Core">traditional: aBoolean	"Set this to true if you wish to use the traditional style of param serialization."		self optionAt: 'traditional' put: aBoolean</body><body package="JQuery-Core">type: aString	"The type of request to make ('POST' or 'GET'), default is 'GET'. Note: Other HTTP request methods, such as PUT and DELETE, can also be used here, but they are not supported by all browsers."		self optionAt: 'type' put: aString asUppercase</body><body package="JQuery-Core">url: aUrl	"A string containing the URL to which the request is sent."		self optionAt: 'url' put: aUrl</body><body package="JQuery-Core">username: aString	"A username to be used in response to an HTTP access authentication request."		self optionAt: 'username' put: aString</body></methods><methods><class-id>JQuery.JQAjaxSetup</class-id> <category>accessing</category><body package="JQuery-Core">method	^ 'ajaxSetup'</body></methods><methods><class-id>JQuery.JQAjaxSetup</class-id> <category>events</category><body package="JQuery-Core">onBeforeSend: anObject	"A pre-callback to modify the XMLHttpRequest object before it is sent. Use this to set custom headers etc. The XMLHttpRequest is passed as the only argument."		self optionAt: 'beforeSend' put: anObject asFunction</body><body package="JQuery-Core">onComplete: anObject	"A function to be called when the request finishes (after success and error callbacks are executed). The function gets passed two arguments: The XMLHttpRequest object and a string describing the type of success of the request."		self optionAt: 'complete' put: anObject asFunction</body><body package="JQuery-Core">onError: anObject	"A function to be called if the request fails. The function is passed three arguments: The XMLHttpRequest object, a string describing the type of error that occurred and an optional exception object, if one occurred. Possible values for the second argument (besides null) are 'timeout', 'error', 'notmodified' and 'parsererror'."		self optionAt: 'error' put: anObject asFunction</body><body package="JQuery-Core">onSuccess: anObject	"A function to be called if the request succeeds. The function gets passed two arguments: The data returned from the server, formatted according to the 'dataType' parameter, and a string describing the status."		self optionAt: 'success' put: anObject asFunction</body><body package="JQuery-Core">onXhr: anObject	"Callback for creating the XMLHttpRequest object. Defaults to the ActiveXObject when available (IE), the XMLHttpRequest otherwise. Override to provide your own implementation for XMLHttpRequest or enhancements to the factory."		self optionAt: 'xhr' put: anObject asFunction</body></methods><methods><class-id>JQuery.JQAjax</class-id> <category>callbacks</category><body package="JQuery-Core">callback: aBlock	"Register aBlock as a primary callback of the receiver. It is only possible to have a single primary callback registered per instance. The primary callback must generate a response."	self enableCallbacks.	callback := aBlock fixCallbackTemps</body><body package="JQuery-Core">callback: aBlock value: anObject	"Register aBlock as a secondary callback. anObject is a reference to a Javascript object on the client-side. The object will be sent back to the server as a string and passed into aBlock. Multiple secondary callbacks can be defined with one receiver.Note: anObject should be a single literal Javascript object (String, Number, Boolean). The object is transfered from client to server as the print-string of the object and passed into the callback block as a Smalltalk String."	self enableCallbacks.	self addParameter: (self renderContext callbacks		store: (WAValueCallback on: aBlock)) 			-&gt; anObject</body><body package="JQuery-Core">html: aRenderable	"Defines a html rendering callback."	self dataType: 'html'.	self respond: [ :response |		response			doNotCache;			contentType: self application contentType.		self render: aRenderable on: response stream ]</body><body package="JQuery-Core">respond: aBlock	"Defines a response callback."	self callback: [ self requestContext respond: aBlock ]</body><body package="JQuery-Core">script: aBlock	"Defines a script rendering callback."	self dataType: 'script'.	self respond: [ :response |		response			doNotCache; 			contentType: (WAMimeType textJavascript				charset: self requestContext handler charSet).		self script: aBlock on: response stream ]</body><body package="JQuery-Core">text: aBlock	"Defines a text rendering callback."	self dataType: 'text'.	self respond: [ :response |		response			doNotCache;			contentType: (WAMimeType textPlain 				charset: self requestContext handler charSet).		aBlock value: response stream ]</body></methods><methods><class-id>JQuery.JQAjax</class-id> <category>accessing</category><body package="JQuery-Core">data	^ self options at: 'data' ifAbsentPut: [ JSJoin new ]</body><body package="JQuery-Core">method	^ 'ajax'</body><body package="JQuery-Core">url	^ self options at: 'url' ifAbsentPut: [ WAUrl new ]</body></methods><methods><class-id>JQuery.JQAjax</class-id> <category>parameters</category><body package="JQuery-Core">addParameter: anObject	"Add the request parameter anObject, a single value or an association."	self parameters add: anObject</body><body package="JQuery-Core">addParameters: aCollection	"Add multiple request parameters from aCollection."	self parameters addAll: aCollection associations</body><body package="JQuery-Core">parameters	"Answer the request parameters of the reciever."		^ self data collection</body></methods><methods><class-id>JQuery.JQAjax</class-id> <category>convenience</category><body package="JQuery-Core">serialize: aQuery	"Serializes a set of input elements matching aQuery and trigger the associated Seaside callbacks."	self enableCallbacks.	self addParameter: aQuery serialize</body><body package="JQuery-Core">serializeChildren	"Serialize all input fields contained in the receiving element."		self serializeChildren: self jQuery this</body><body package="JQuery-Core">serializeChildren: aQuery	"Serialize all input fields being children of aQuery."	self serialize: (aQuery find: ':input')</body><body package="JQuery-Core">serializeFileUpload: aQuery	"Upload the file in the field identified by aQuery using FormData. Cannot be composed with any other callback."		self		data:			((((JSStream on: 'var formdata = new FormData()'),			 ((aQuery copy attributeAt: 'name') assignLocalTo: 'name'),			 (((aQuery property: 0) access: 'files') assignLocalTo: 'files'),			 (JSStream on:'for(i=0;i&lt;files.length;i++) formdata.append(name,files[i])'),			 (JSStream on: 'return formdata')) asFunction) apply: #());		url: self renderContext actionUrl;		type: 'POST';		cache: false;		processData: false;		contentType: false</body><body package="JQuery-Core">serializeForm	"Serialize all input fields of the form the receiving element is contained in."	self serializeForm: self jQuery this</body><body package="JQuery-Core">serializeForm: aQuery	"Serialize all input fields of the form matching aQuery."	self serializeChildren: (aQuery closest: 'form')</body><body package="JQuery-Core">serializeThis	"Serialize the receiving element. Note that this might not work for all form elements: (1) for check-boxes and multi-select lists Seaside internally depends on an additional hidden form element that is generated automatically, instead use #serializeThisWithHidden (2) submit-button callbacks are ignored, instead use a normal callback to trigger specific code evaluation."	self serialize: self jQuery this</body><body package="JQuery-Core">serializeThisWithHidden	"Serialize the receiving form element and a following hidden form element. This is required in case of a check-box or multi-select list."		self serialize: (self jQuery this		next: 'input:hidden';		addBack)</body><body package="JQuery-Core">serializeWithHidden: aQuery	"Serialize the receiving form element and a following hidden form element. This is required in case of a check-box or multi-select list."		self serialize: (aQuery		next: 'input:hidden';		addBack)</body></methods><methods><class-id>JQuery.JQAjax</class-id> <category>private</category><body package="JQuery-Core">enableCallbacks	self hasCallback ifTrue: [ ^ self ].	self url: self renderContext actionUrl withoutQuery withoutFragment.	self addParameters: self renderContext actionUrl queryFields.	self addParameter: (callbackId := self renderContext callbacks		store: (JSAjaxCallback on: [ self processCallback ]))</body><body package="JQuery-Core">hasCallback	^ callbackId notNil</body><body package="JQuery-Core">processCallback	callback isNil		ifFalse: [ callback value ]</body></methods><methods><class-id>JQuery.JQAjax</class-id> <category>options</category><body package="JQuery-Core">isSupportedOption: aString	^ true</body><body package="JQuery-Core">optionAt: aKey put: aValue	^ (self isSupportedOption: aKey) 		ifTrue: [ super optionAt: aKey put: aValue ]		ifFalse: [ self error: 'The option ' , aKey printString , ' is not supported in ' , self class name , '. Either use #ajaxSetup to configure default values, or the more powerful version with #ajax.' ]</body></methods><methods><class-id>JQuery.JQAjax</class-id> <category>accessing-urls</category><body package="JQuery-Core">fullUrl	"Answer a Seaside URL object that is composed with the parameters of the receiver. This method excludes dynamic Javascript objects that might be part of the parameters."		| url |	url := self url copy.	self parameters do: [ :each | 		(each isString)			ifTrue: [ url addField: each ].		((each isKindOf: Association) and: [ each value isJavascript not ])			ifTrue: [ url addField: each key value: each value ] ].	^ url</body><body package="JQuery-Core">javascriptUrl	"Answer a Javascript expression that evaluates to the URL with all parameters attached."	| stream |	stream := JSStream new.	stream javascript: self url.	self data collection isEmpty ifFalse: [		stream nextPutAll: '+"'.		stream nextPut: (self url queryFields isEmpty			ifTrue: [ $? ] ifFalse: [ $&amp; ]).		stream nextPutAll: '"+'; javascript: self data ].	^ stream</body></methods><methods><class-id>JQuery.JQGetScript</class-id> <category>accessing</category><body package="JQuery-Core">arguments	| arguments |	arguments := OrderedCollection with: self javascriptUrl.	self options		at: 'success'		ifPresent: [ :value | arguments add: value ].	^ arguments</body><body package="JQuery-Core">method	^ 'getScript'</body></methods><methods><class-id>JQuery.JQGetScript</class-id> <category>options</category><body package="JQuery-Core">isSupportedOption: aString	^ #('url' 'success' "(" 'dataType' ")") includes: aString</body></methods><methods><class-id>JQuery.JQScriptGenerator</class-id> <category>actions</category><body package="JQuery-Core">close: aHtmlRoot on: aDocument	self loadScripts isEmpty		ifTrue: [ ^ self ].	self 		writeScriptTag: [ 			aDocument nextPutAll: JQuery functionName; nextPutAll: '(function(){'.			self writeLoadScriptsOn: aDocument.			aDocument nextPutAll: '});' ]		on: aDocument</body></methods><methods><class-id>JQuery.JQScriptGenerator</class-id> <category>public</category><body package="JQuery-Core">event: aString do: anObject on: aBrush	anObject ifNil: [ ^ self ].	self addLoadScript: (JQueryInstance new		id: aBrush ensureId;		on: aString do: anObject)</body></methods><methods><class-id>JQuery.JQueryInstance</class-id> <category>private</category><body package="JQuery-Core">id: aString	self setArguments: (Array with: '#' , aString)</body><body package="JQuery-Core">iteratorFor: anObject return: aBoolean	| this |	anObject isBlock		ifFalse: [ ^ anObject asFunction return: true ].	this := (JQueryClass context: self renderContext)			rendererClass: self rendererClass;			this.	anObject argumentCount = 1		ifTrue: [ anObject value: this ]		ifFalse: [ anObject value: this value: (JSStream argument: 0) ].	^ this asFunction return: aBoolean</body></methods><methods><class-id>JQuery.JQueryInstance</class-id> <category>navigation</category><body package="JQuery-Core">add: anObject	"Add elements to the set of matched elements."		self call: 'add' with: anObject</body><body package="JQuery-Core">add: anObject context: aContext	"Add elements to the set of matched elements rooted against the specified context."		self call: 'add' with: anObject with: aContext</body><body package="JQuery-Core">children	"Get the children of each element in the set of matched elements."		self call: 'children'</body><body package="JQuery-Core">children: aString	"Get the children of each element in the set of matched elements filtered by a selector."		self call: 'children' with: aString</body><body package="JQuery-Core">closest	"Get the first element that matches the selector, beginning at the current element and progressing up through the DOM tree."		self call: 'closest'</body><body package="JQuery-Core">closest: aString	"Get the first element that matches the selector, beginning at the current element and progressing up through the DOM tree."		self call: 'closest' with: aString</body><body package="JQuery-Core">contents	"Get the children of each element in the set of matched elements, including text nodes."		self call: 'contents'</body><body package="JQuery-Core">find: aString	"Get the descendants of each element in the current set of matched elements, filtered by a selector."		self call: 'find' with: aString</body><body package="JQuery-Core">next	"Get the immediately following sibling of each element in the set of matched elements, optionally filtered by a selector."		self call: 'next'</body><body package="JQuery-Core">next: aString	"Get the immediately following sibling of each element in the set of matched elements, optionally filtered by a selector."		self call: 'next' with: aString</body><body package="JQuery-Core">nextAll	"Get all following siblings of each element in the set of matched elements, optionally filtered by a selector."		self call: 'nextAll'</body><body package="JQuery-Core">nextAll: aString	"Get all following siblings of each element in the set of matched elements, optionally filtered by a selector."		self call: 'nextAll' with: aString</body><body package="JQuery-Core">nextUntil: aString	"Get all following siblings of each element up to but not including the element matched by the selector."		self call: 'nextUntil' with: aString</body><body package="JQuery-Core">parent	"Get a set of elements containing the unique parents of the matched set of elements."		self call: 'parent'</body><body package="JQuery-Core">parent: aString	"Get a set of elements containing the unique parents of the matched set of elements."		self call: 'parent' with: aString</body><body package="JQuery-Core">parents	"Get the ancestors of each element in the current set of matched elements, optionally filtered by a selector."		self call: 'parents'</body><body package="JQuery-Core">parents: aString	"Get the ancestors of each element in the current set of matched elements, optionally filtered by a selector."		self call: 'parents' with: aString</body><body package="JQuery-Core">parentsUntil: aString	"Get the ancestors of each element in the current set of matched elements, up to but not including the element matched by the selector."		self call: 'parentsUntil' with: aString</body><body package="JQuery-Core">previous	"Get the immediately preceding sibling of each element in the set of matched elements, optionally filtered by a selector."		self call: 'prev'</body><body package="JQuery-Core">previous: aString	"Get the immediately preceding sibling of each element in the set of matched elements, optionally filtered by a selector."		self call: 'prev' with: aString</body><body package="JQuery-Core">previousAll	"Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector."		self call: 'prevAll'</body><body package="JQuery-Core">previousAll: aString	"Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector."		self call: 'prevAll' with: aString</body><body package="JQuery-Core">previousUntil: aString	"Get all preceding siblings of each element up to but not including the element matched by the selector."		self call: 'prevUntil' with: aString</body><body package="JQuery-Core">siblings	"Get the siblings of each element in the set of matched elements, optionally filtered by a selector."		self call: 'siblings'</body><body package="JQuery-Core">siblings: aString	"Get the siblings of each element in the set of matched elements, optionally filtered by a selector."		self call: 'siblings' with: aString</body></methods><methods><class-id>JQuery.JQueryInstance</class-id> <category>events-trigger</category><body package="JQuery-Core">triggerBlur	"Triggers the blur event of each matched element."		self call: 'blur'</body><body package="JQuery-Core">triggerChange	"Triggers the change event of each matched element."		self call: 'change'</body><body package="JQuery-Core">triggerClick	"Triggers the click event of each matched element."		self call: 'click'</body><body package="JQuery-Core">triggerDoubleClick	"Triggers the dblclick event of each matched element."		self call: 'dblclick'</body><body package="JQuery-Core">triggerError	"Triggers the error event of each matched element."		self call: 'error'</body><body package="JQuery-Core">triggerFocus	"Triggers the focus event of each matched element."		self call: 'focus'</body><body package="JQuery-Core">triggerKeyDown	"Triggers the keydown event of each matched element."		self call: 'keydown'</body><body package="JQuery-Core">triggerKeyPress	"Triggers the keypress event of each matched element."		self call: 'keypress'</body><body package="JQuery-Core">triggerKeyUp	"Triggers the keyup event of each matched element."		self call: 'keyup'</body><body package="JQuery-Core">triggerSelect	"Trigger the select event of each matched element."		self call: 'select'</body><body package="JQuery-Core">triggerSubmit	"Trigger the submit event of each matched element."		self call: 'submit'</body></methods><methods><class-id>JQuery.JQueryInstance</class-id> <category>classes</category><body package="JQuery-Core">addClass: aString	"Adds the specified class(es) to each of the set of matched elements."		self call: 'addClass' with: aString</body><body package="JQuery-Core">hasClass: aString 	"Determine whether any of the matched elements are assigned the given class."		self call: 'hasClass' with: aString</body><body package="JQuery-Core">removeClass: aString 	"Remove one or all classes from each element in the set of matched elements."		self call: 'removeClass' with: aString</body><body package="JQuery-Core">toggleClass: aString 	"Add or remove a class from each element in the set of matched elements, depending on either the class's presence or the value of the switch argument."		self call: 'toggleClass' with: aString</body><body package="JQuery-Core">toggleClass: aString state: aBoolean	"Adds the specified class if the switch is true, removes the specified class if the switch is false."		self call: 'toggleClass' with: aString with: aBoolean</body></methods><methods><class-id>JQuery.JQueryInstance</class-id> <category>initialization</category><body package="JQuery-Core">setArguments: anArray	arguments := anArray</body></methods><methods><class-id>JQuery.JQueryInstance</class-id> <category>accessors</category><body package="JQuery-Core">context	"The DOM node context originally passed to jQuery(); if none was passed then context will likely be the document."		self access: 'context'</body><body package="JQuery-Core">each: anObject	"Iterate over a jQuery object, executing a function for each matched element."		self call: 'each' with: anObject asFunction</body><body package="JQuery-Core">eq: anInteger	"Reduce the set of matched elements to the one at the specified index."		self call: 'eq' with: anInteger</body><body package="JQuery-Core">get	"Retrieve the DOM elements matched by the jQuery object."		self call: 'get'</body><body package="JQuery-Core">get: anInteger	"Retrieve the DOM elements matched by the jQuery object."		self call: 'get' with: anInteger</body><body package="JQuery-Core">index	"Answer an integer indicating the position of the first element within the jQuery object relative to its sibling elements."		self call: 'index'</body><body package="JQuery-Core">index: anObject	"Search for a given element from among the matched elements."		self call: 'index' with: anObject</body><body package="JQuery-Core">length	"The number of elements in the jQuery object."		self access: 'length'</body><body package="JQuery-Core">map: anObject	"Pass each element in the current matched set through a function, producing a new jQuery object containing the return values.."		self call: 'map' with: anObject asFunction</body><body package="JQuery-Core">size	"Return the number of DOM elements matched by the jQuery object."		self call: 'size'</body><body package="JQuery-Core">toArray	"Retrieve all the DOM elements contained in the jQuery set, as an array.Retrieve all the DOM elements contained in the jQuery set, as an array."		self call: 'toArray'</body></methods><methods><class-id>JQuery.JQueryInstance</class-id> <category>events-register</category><body package="JQuery-Core">onBlur: anObject	"Bind an event handler to the 'blur' JavaScript event, or trigger that event on an element."		self call: 'blur' with: anObject asFunction</body><body package="JQuery-Core">onChange: anObject	"Bind an event handler to the 'change' JavaScript event, or trigger that event on an element."		self call: 'change' with: anObject asFunction</body><body package="JQuery-Core">onClick: anObject	"Bind an event handler to the 'click' JavaScript event, or trigger that event on an element."		self call: 'click' with: anObject asFunction</body><body package="JQuery-Core">onDoubleClick: anObject	"Bind an event handler to the 'dblclick' JavaScript event, or trigger that event on an element."		self call: 'dblclick' with: anObject asFunction</body><body package="JQuery-Core">onError: anObject	"Bind an event handler to the 'error' JavaScript event."		self call: 'error' with: anObject asFunction</body><body package="JQuery-Core">onFocus: anObject	"Bind an event handler to the 'focus' JavaScript event, or trigger that event on an element."		self call: 'focus' with: anObject asFunction</body><body package="JQuery-Core">onFocusIn: anObject	"Bind an event handler to the 'focusin' JavaScript event."		self call: 'focusin' with: anObject asFunction</body><body package="JQuery-Core">onFocusOut: anObject	"Bind an event handler to the 'focusout' JavaScript event."		self call: 'focusout' with: anObject asFunction</body><body package="JQuery-Core">onKeyDown: anObject	"Bind an event handler to the 'keydown' JavaScript event, or trigger that event on an element."		self call: 'keydown' with: anObject asFunction</body><body package="JQuery-Core">onKeyPress: anObject	"Bind an event handler to the 'keypress' JavaScript event, or trigger that event on an element."		self call: 'keypress' with: anObject asFunction</body><body package="JQuery-Core">onKeyUp: anObject	"Bind an event handler to the 'keyup' JavaScript event, or trigger that event on an element."		self call: 'keyup' with: anObject asFunction</body><body package="JQuery-Core">onLoad: anObject	"Bind an event handler to the 'load' JavaScript event."		self call: 'load' with: anObject asFunction</body><body package="JQuery-Core">onMouseDown: anObject	"Bind an event handler to the 'mousedown' JavaScript event, or trigger that event on an element."		self call: 'mousedown' with: anObject asFunction</body><body package="JQuery-Core">onMouseEnter: anObject	"Bind an event handler to be fired when the mouse enters an element, or trigger that handler on an element."		self call: 'mouseenter' with: anObject asFunction</body><body package="JQuery-Core">onMouseLeave: anObject	"Bind an event handler to be fired when the mouse leaves an element, or trigger that handler on an element."		self call: 'mouseleave' with: anObject asFunction</body><body package="JQuery-Core">onMouseMove: anObject	"Bind an event handler to the 'mousemove' JavaScript event, or trigger that event on an element."		self call: 'mousemove' with: anObject asFunction</body><body package="JQuery-Core">onMouseOut: anObject	"Bind an event handler to the 'mouseout' JavaScript event, or trigger that event on an element."		self call: 'mouseout' with: anObject asFunction</body><body package="JQuery-Core">onMouseOver: anObject	"Bind an event handler to the 'mouseover' JavaScript event, or trigger that event on an element."		self call: 'mouseover' with: anObject asFunction</body><body package="JQuery-Core">onMouseUp: anObject	"Bind an event handler to the 'mouseup' JavaScript event, or trigger that event on an element."		self call: 'mouseup' with: anObject asFunction</body><body package="JQuery-Core">onResize: anObject	"Bind an event handler to the 'resize' JavaScript event, or trigger that event on an element."		self call: 'resize' with: anObject asFunction</body><body package="JQuery-Core">onScroll: anObject	"Bind an event handler to the 'scroll' JavaScript event, or trigger that event on an element."		self call: 'scroll' with: anObject asFunction</body><body package="JQuery-Core">onSelect: anObject	"Bind an event handler to the 'select' JavaScript event, or trigger that event on an element."		self call: 'select' with: anObject asFunction</body><body package="JQuery-Core">onSubmit: anObject	"Bind an event handler to the 'submit' JavaScript event, or trigger that event on an element."		self call: 'submit' with: anObject asFunction</body><body package="JQuery-Core">onUnload: anObject	"Binds a function to the unload event of each matched element."		self call: 'unload' with: anObject asFunction</body></methods><methods><class-id>JQuery.JQueryInstance</class-id> <category>css</category><body package="JQuery-Core">css: aDictionary	"Set one or more CSS properties for the set of matched elements."		self call: 'css' with: aDictionary</body><body package="JQuery-Core">cssAt: aKey	"Get the value of a style property for the first element in the set of matched elements."		self call: 'css' with: aKey</body><body package="JQuery-Core">cssAt: aKey put: aValue	"Set one or more CSS properties for the set of matched elements."		self call: 'css' with: aKey with: aValue</body><body package="JQuery-Core">height	"Get the current computed height for the first element in the set of matched elements."		self call: 'height'</body><body package="JQuery-Core">height: anInteger	"Set the CSS height of every matched element."		self call: 'height' with: anInteger</body><body package="JQuery-Core">innerHeight	"Get the current computed height for the first element in the set of matched elements, including padding but not border."		self call: 'innerHeight'</body><body package="JQuery-Core">innerWidth	"Get the current computed width for the first element in the set of matched elements, including padding but not border."		self call: 'innerWidth'</body><body package="JQuery-Core">offset	"Get the current coordinates of the first element in the set of matched elements, relative to the document."		self call: 'offset'</body><body package="JQuery-Core">offsetLeft	"Get the current left offset of the first matched element relative to the viewport."		self call: 'offset'; access: 'left'</body><body package="JQuery-Core">offsetParent	"Get the closest ancestor element that is positioned."		self call: 'offsetParent'</body><body package="JQuery-Core">offsetTop	"Get the current top offset of the first matched element relative to the viewport."		self call: 'offset'; access: 'top'</body><body package="JQuery-Core">outerHeight	"Get the current computed height for the first element in the set of matched elements, including padding and border."		self call: 'outerHeight'</body><body package="JQuery-Core">outerWidth	"Get the current computed width for the first element in the set of matched elements, including padding and border."		self call: 'outerWidth'</body><body package="JQuery-Core">position	"Get the current coordinates of the first element in the set of matched elements, relative to the offset parent."		self call: 'position'</body><body package="JQuery-Core">positionLeft	"Gets the left position of an element relative to its offset parent."		self position; access: 'left'</body><body package="JQuery-Core">positionTop	"Gets the top position of an element relative to its offset parent."		self position; access: 'top'</body><body package="JQuery-Core">scrollLeft	"Get the current horizontal position of the scroll bar for the first element in the set of matched elements."		self call: 'scrollLeft'</body><body package="JQuery-Core">scrollLeft: anInteger	"Set the current horizontal position of the scroll bar for the first element in the set of matched elements."		self call: 'scrollLeft' with: anInteger</body><body package="JQuery-Core">scrollTop	"Get the current vertical position of the scroll bar for the first element in the set of matched elements."		self call: 'scrollTop'</body><body package="JQuery-Core">scrollTop: anInteger	"Set the current vertical position of the scroll bar for the first element in the set of matched elements."		self call: 'scrollTop' with: anInteger</body><body package="JQuery-Core">width	"Get the current computed width for the first element in the set of matched elements."		self call: 'width'</body><body package="JQuery-Core">width: anInteger	"Get the width for all matched elements."		self call: 'width' with: anInteger</body></methods><methods><class-id>JQuery.JQueryInstance</class-id> <category>accessors-smalltalk</category><body package="JQuery-Core">at: anInteger	"Access a single matched DOM element at a specified index in the matched set."		self get: anInteger</body><body package="JQuery-Core">atAll	"Access all matched DOM elements."		self get</body><body package="JQuery-Core">collect: anObject	"Translate a set of elements in the jQuery object into another set of values in an array (which may, or may not, be elements)."		self map: (self iteratorFor: anObject return: true)</body><body package="JQuery-Core">do: anObject	"Iterate over a jQuery object, executing a function for each matched element."		self each: (self iteratorFor: anObject return: false)</body></methods><methods><class-id>JQuery.JQueryInstance</class-id> <category>filtering</category><body package="JQuery-Core">filter: aString	"Reduce the set of matched elements to the one at the specified index."		self call: 'filter' with: aString</body><body package="JQuery-Core">first	"Reduce the set of matched elements to the first in the set."		self call: 'first'</body><body package="JQuery-Core">has: aString	"Check to see if a DOM node, or selector set of DOM elements, is within another DOM node."		self call: 'has' with: aString</body><body package="JQuery-Core">is: aString	"Check the current matched set of elements against a selector and return true if at least one of these elements matches the selector."		self call: 'is' with: aString</body><body package="JQuery-Core">last	"Reduce the set of matched elements to the final one in the set."		self call: 'last'</body><body package="JQuery-Core">not: aString	"Remove elements from the set of matched elements."		self call: 'not' with: aString</body><body package="JQuery-Core">sliceFrom: aStartInteger	"Reduce the set of matched elements to a subset specified by a range of indices."		self call: 'slice' with: aStartInteger</body><body package="JQuery-Core">sliceFrom: aStartInteger to: aStopInteger	"Reduce the set of matched elements to a subset specified by a range of indices."		self call: 'slice' with: aStartInteger with: aStopInteger</body></methods><methods><class-id>JQuery.JQueryInstance</class-id> <category>ajax</category><body package="JQuery-Core">load	"Load data from the server and place the returned HTML into the matched element."		^ self create: JQLoad</body><body package="JQuery-Core">serialize	"Encode a set of form elements as a string for submission."		self call: 'serialize'</body><body package="JQuery-Core">serializeArray	"Encode a set of form elements as an array of names and values."		self call: 'serializeArray'</body></methods><methods><class-id>JQuery.JQueryInstance</class-id> <category>events</category><body package="JQuery-Core">bind: aString data: aDataObject  do: anObject 	"Handle click and double-click for the paragraph. Note: the coordinates are window relative, so in this case relative to the demo iframe."		self call: 'bind' with: aString with: aDataObject with: anObject asFunction</body><body package="JQuery-Core">bind: aString do: anObject 	"Handle click and double-click for the paragraph. Note: the coordinates are window relative, so in this case relative to the demo iframe."		self call: 'bind' with: aString with: anObject asFunction</body><body package="JQuery-Core">delegate: aSelectorString on: anEventString data: aDataObject do: aHandlerObject	"Attach a handler to the event anEventString for all elements which match the selector aSelectorString, now or in the future, based upon a specific set of root elements."		self call: 'delegate' withArguments: (Array with: aSelectorString with: anEventString with: aDataObject with: aHandlerObject asFunction)</body><body package="JQuery-Core">delegate: aSelectorString on: anEventString do: aHandlerObject	"Attach a handler to the event anEventString for all elements which match the selector aSelectorString, now or in the future, based upon a specific set of root elements."		self call: 'delegate' withArguments: (Array with: aSelectorString with: anEventString with: aHandlerObject asFunction)</body><body package="JQuery-Core">hover: anInObject out: anOutObject	"Bind two handlers to the matched elements, to be executed when the mouse pointer enters and leaves the elements."		self call: 'hover' with: anInObject asFunction with: anOutObject asFunction</body><body package="JQuery-Core">off: aString	"Remove an event handler."		self call: 'off' with: aString</body><body package="JQuery-Core">off: aString selector: aSelector	"Remove an event handler."		self call: 'off' with: aString with: aSelector</body><body package="JQuery-Core">on: aString do: anObject	"Attach an event handler function for one or more events to the selected elements."		self call: 'on' with: aString with: anObject asFunction</body><body package="JQuery-Core">on: aString selector: aSelector do: anObject	"Attach an event handler function for one or more events to the selected elements."		self call: 'on' with: aString with: aSelector with: anObject asFunction</body><body package="JQuery-Core">one: aString do: anObject 	"Attach a handler to an event for the elements. The handler is executed at most once."		self call: 'one' with: aString with: anObject asFunction</body><body package="JQuery-Core">trigger: aString	"Execute all handlers and behaviors attached to the matched elements for the given event type."		self call: 'trigger' with: aString</body><body package="JQuery-Core">triggerHandler: aString	"Execute all handlers attached to an element for an event."		self call: 'triggerHandler' with: aString</body><body package="JQuery-Core">unbind: aString	"Remove a previously-attached event handler from the elements."		self call: 'unbind' with: aString</body><body package="JQuery-Core">undelegate	"Remove a handler from the event for all elements which match the current selector, now or in the future, based upon a specific set of root elements."		self call: 'undelegate'</body><body package="JQuery-Core">undelegate: aSelectorString on: anEventString	"Remove a handler from the event for all elements which match the current selector, now or in the future, based upon a specific set of root elements."		self call: 'undelegate' with: aSelectorString with: anEventString</body></methods><methods><class-id>JQuery.JQueryInstance</class-id> <category>modifying</category><body package="JQuery-Core">after: aRenderable 	"Insert content, specified by the parameter, after each element in the set of matched elements."		self call: 'after' with: (self render: aRenderable)</body><body package="JQuery-Core">append: aRenderable 	"Insert content, specified by the parameter, to the end of each element in the set of matched elements."		self call: 'append' with: (self render: aRenderable)</body><body package="JQuery-Core">appendTo: anObject 	"Insert every element in the set of matched elements to the end of the target."		self call: 'appendTo' with: anObject</body><body package="JQuery-Core">before: aRenderable 	"Insert content, specified by the parameter, before each element in the set of matched elements."		self call: 'before' with: (self render: aRenderable)</body><body package="JQuery-Core">detach	"Remove the set of matched elements from the DOM."		self call: 'detach'</body><body package="JQuery-Core">detach: aString 	"Remove the set of matched elements from the DOM."		self call: 'detach' with: aString</body><body package="JQuery-Core">empty	"Remove all child nodes of the set of matched elements from the DOM."		self call: 'empty'</body><body package="JQuery-Core">insertAfter: anObject 	"Insert every element in the set of matched elements after the target."		self call: 'insertAfter' with: anObject</body><body package="JQuery-Core">insertBefore: anObject 	"Insert every element in the set of matched elements before the target."		self call: 'insertBefore' with: anObject</body><body package="JQuery-Core">prepend: aRenderable 	"Insert content, specified by the parameter, to the beginning of each element in the set of matched elements."		self call: 'prepend' with: (self render: aRenderable)</body><body package="JQuery-Core">prependTo: anObject 	"Insert every element in the set of matched elements to the beginning of the target."		self call: 'prependTo' with: anObject</body><body package="JQuery-Core">remove	"Remove the set of matched elements from the DOM."		self call: 'remove'</body><body package="JQuery-Core">remove: aString 	"Remove the set of matched elements from the DOM."		self call: 'remove' with: aString</body><body package="JQuery-Core">replaceAll: aString 	"A selector expression indicating which element(s) to replace."		self call: 'replaceAll' with: aString</body><body package="JQuery-Core">replaceWith: aRenderable 	"Replace each element in the set of matched elements with the provided new content."		self call: 'replaceWith' with: (self render: aRenderable)</body><body package="JQuery-Core">unwrap	"Remove the parents of the set of matched elements from the DOM, leaving the matched elements in their place."		self call: 'unwrap'</body><body package="JQuery-Core">wrap: aRenderable 	"Wrap an HTML structure around each element in the set of matched elements."		self call: 'wrap' with: (self render: aRenderable)</body><body package="JQuery-Core">wrapAll: aRenderable 	"Wrap an HTML structure around all elements in the set of matched elements."		self call: 'wrapAll' with: (self render: aRenderable)</body><body package="JQuery-Core">wrapInner: aRenderable 	"Wrap an HTML structure around the content of each element in the set of matched elements."		self call: 'wrapInner' with: (self render: aRenderable)</body></methods><methods><class-id>JQuery.JQueryInstance</class-id> <category>effects</category><body package="JQuery-Core">animate	"Perform a custom animation of a set of CSS properties."		^ self create: JQAnimate</body><body package="JQuery-Core">clearQueue	"Remove from the queue all items that have not yet been run.Remove from the queue all items that have not yet been run."		self call: 'clearQueue'</body><body package="JQuery-Core">clearQueue: aString	"Remove from the queue all items that have not yet been run.Remove from the queue all items that have not yet been run."		self call: 'clearQueue' with: aString</body><body package="JQuery-Core">delay: aDuration 	"Set a timer to delay execution of subsequent items in the queue."		self call: 'delay' with: aDuration</body><body package="JQuery-Core">delay: aDuration queue: aString	"Set a timer to delay execution of subsequent items in the queue."		self call: 'delay' with: aDuration with: aString</body><body package="JQuery-Core">fade: aDuration to: anNumber	"Adjust the opacity of the matched elements."		self call: 'fadeTo' with: aDuration with: anNumber</body><body package="JQuery-Core">fade: aDuration to: anNumber callback: anObject	"Adjust the opacity of the matched elements."		self call: 'fadeTo' with: aDuration with: anNumber with: anObject asFunction</body><body package="JQuery-Core">fadeIn: aDuration	"Display the matched elements by fading them to opaque."		self call: 'fadeIn' with: aDuration</body><body package="JQuery-Core">fadeIn: aDuration callback: anObject	"Display the matched elements by fading them to opaque."		self call: 'fadeIn' with: aDuration with: anObject asFunction</body><body package="JQuery-Core">fadeOut: aDuration	"Hide the matched elements by fading them to transparent."		self call: 'fadeOut' with: aDuration</body><body package="JQuery-Core">fadeOut: aDuration callback: anObject	"Hide the matched elements by fading them to transparent."		self call: 'fadeOut' with: aDuration with: anObject asFunction</body><body package="JQuery-Core">fadeToggle: aDuration	"Display or hide the matched elements by animating their opacity."		self call: 'fadeToggle' with: aDuration</body><body package="JQuery-Core">fadeToggle: aDuration callback: anObject	"Display or hide the matched elements by animating their opacity."		self call: 'fadeToggle' with: aDuration with: anObject asFunction</body><body package="JQuery-Core">hide 	"Hide the matched elements."		self call: 'hide'</body><body package="JQuery-Core">hide: aDuration 	"Hide the matched elements."		self call: 'hide' with: aDuration</body><body package="JQuery-Core">hide: aDuration callback: anObject	"Hide the matched elements."		self call: 'hide' with: aDuration with: anObject asFunction</body><body package="JQuery-Core">show	"Display the matched elements."		self call: 'show'</body><body package="JQuery-Core">show: aDuration 	"Display the matched elements."		self call: 'show' with: aDuration</body><body package="JQuery-Core">show: aDuration callback: anObject	"Display the matched elements."		self call: 'show' with: aDuration with: anObject asFunction</body><body package="JQuery-Core">slideDown: aDuration	"Display the matched elements with a sliding motion."		self call: 'slideDown' with: aDuration</body><body package="JQuery-Core">slideDown: aDuration callback: anObject	"Display the matched elements with a sliding motion."		self call: 'slideDown' with: aDuration with: anObject asFunction</body><body package="JQuery-Core">slideToggle: aDuration	"Display or hide the matched elements with a sliding motion."		self call: 'slideToggle' with: aDuration</body><body package="JQuery-Core">slideToggle: aDuration callback: anObject	"Display or hide the matched elements with a sliding motion."		self call: 'slideToggle' with: aDuration with: anObject asFunction</body><body package="JQuery-Core">slideUp: aDuration	"Hide the matched elements with a sliding motion."		self call: 'slideUp' with: aDuration</body><body package="JQuery-Core">slideUp: aDuration callback: anObject	"Hide the matched elements with a sliding motion."		self call: 'slideUp' with: aDuration with: anObject asFunction</body><body package="JQuery-Core">stop	"Stop the currently-running animation on the matched elements."		self call: 'stop'</body><body package="JQuery-Core">toggle	"Bind two or more handlers to the matched elements, to be executed on alternate clicks."		self call: 'toggle'</body><body package="JQuery-Core">toggle: anObject	self call: 'toggle' with: anObject</body><body package="JQuery-Core">toggle: aDuration callback: anObject	"Bind two or more handlers to the matched elements, to be executed on alternate clicks."		self call: 'toggle' with: aDuration with: anObject asFunction</body></methods><methods><class-id>JQuery.JQueryInstance</class-id> <category>manipulating</category><body package="JQuery-Core">html	"Get the HTML contents of the first element in the set of matched elements."		self call: 'html'</body><body package="JQuery-Core">html: aRenderable 	"Set the HTML contents of matched elements."		self call: 'html' with: (self render: aRenderable)</body><body package="JQuery-Core">text	"Get the combined text contents of each element in the set of matched elements, including their descendants."		self call: 'text'</body><body package="JQuery-Core">text: aString 	"Set the text contents of each element in the set of matched elements."		self call: 'text' with: aString</body><body package="JQuery-Core">value	"Get the current value of the first element in the set of matched elements."		self call: 'val'</body><body package="JQuery-Core">value: anObject 	"Set the  value of all matched elements."		self call: 'val' with: anObject</body></methods><methods><class-id>JQuery.JQueryInstance</class-id> <category>copying</category><body package="JQuery-Core">clone	"Create a copy of the set of matched elements."		self call: 'clone'</body><body package="JQuery-Core">cloneAll	"Create a copy of the set of matched elements."		self call: 'clone' with: true</body></methods><methods><class-id>JQuery.JQueryInstance</class-id> <category>data</category><body package="JQuery-Core">dataAt: anObject	"Store arbitrary data associated with the matched elements."		self call: 'data' with: anObject</body><body package="JQuery-Core">dataAt: aKey put: aValue	"Store arbitrary data associated with the matched elements."		self call: 'data' with: aKey with: aValue</body><body package="JQuery-Core">dequeue	"Execute the next function on the queue for the matched elements."		self call: 'dequeue'</body><body package="JQuery-Core">dequeue: aString	"Execute the next function on the queue for the matched elements."		self call: 'dequeue' with: aString</body><body package="JQuery-Core">queue	"Show the queue of functions to be executed on the matched elements."		self call: 'queue'</body><body package="JQuery-Core">queue: aString	"Manipulate the queue of functions to be executed on the matched elements."		self call: 'queue' with: aString</body><body package="JQuery-Core">queue: aString do: anObject	"Manipulate the queue of functions to be executed on the matched elements."		self call: 'queue' with: aString with: anObject asFunction</body><body package="JQuery-Core">removeDataAt: aKey	"Remove a previously-stored piece of data."		self call: 'removeData' with: aKey</body></methods><methods><class-id>JQuery.JQueryInstance</class-id> <category>ajax-events</category><body package="JQuery-Core">onAjaxComplete: anObject	"Register a handler to be called when Ajax requests complete."		self call: 'ajaxComplete' with: anObject asFunction</body><body package="JQuery-Core">onAjaxError: anObject	"Register a handler to be called when Ajax requests complete with an error."		self call: 'ajaxError' with: anObject asFunction</body><body package="JQuery-Core">onAjaxSend: anObject	"Show a message before an Ajax request is sent."		self call: 'ajaxSend' with: anObject asFunction</body><body package="JQuery-Core">onAjaxStart: anObject	"Register a handler to be called when the first Ajax request begins."		self call: 'ajaxStart' with: anObject asFunction</body><body package="JQuery-Core">onAjaxStop: anObject	"Hide a loading message after all the Ajax requests have stopped."		self call: 'ajaxStop' with: anObject asFunction</body><body package="JQuery-Core">onAjaxSuccess: anObject	"Show a message when an Ajax request completes successfully."		self call: 'ajaxSuccess' with: anObject asFunction</body></methods><methods><class-id>JQuery.JQueryInstance</class-id> <category>chaining</category><body package="JQuery-Core">addBack	"Add the previous set of elements on the stack to the current set."	self call: 'addBack'</body><body package="JQuery-Core">andSelf	"Add the previous set of elements on the stack to the current set."	self 		greaseDeprecatedApi: 'JQueryInstance&gt;&gt;#andSelf'		details: 'Replaced in jQuery 1.9 with addBack. See http://jquery.com/upgrade-guide/1.9/.'.	self call: 'addBack'</body><body package="JQuery-Core">end	"End the most recent filtering operation in the current chain and return the set of matched elements to its previous state."		self call: 'end'</body></methods><methods><class-id>JQuery.JQueryInstance</class-id> <category>printing</category><body package="JQuery-Core">javascriptContentOn: aStream	super javascriptContentOn: aStream.	JSStream encodeArguments: arguments on: aStream</body></methods><methods><class-id>JQuery.JQueryInstance</class-id> <category>attributes</category><body package="JQuery-Core">attributeAt: aKey 	"Get the value of an attribute for the first element in the set of matched elements."	self call: 'attr' with: aKey</body><body package="JQuery-Core">attributeAt: aKey put: aValue	"Set an attribute for the set of matched elements."		self call: 'attr' with: aKey with: aValue</body><body package="JQuery-Core">attributes: aDictionary 	"Set one or more attributes for the set of matched elements."		self call: 'attr' with: aDictionary</body><body package="JQuery-Core">properties: aDictionary 	"Set one or more properties for the set of matched elements."		self call: 'prop' with: aDictionary</body><body package="JQuery-Core">propertyAt: aKey 	"Get the value of a property for the first element in the set of matched elements."	self call: 'prop' with: aKey</body><body package="JQuery-Core">propertyAt: aKey put: aValue	"Set a property for the set of matched elements."		self call: 'prop' with: aKey with: aValue</body><body package="JQuery-Core">removeAttribute: aKey 	"Remove an attribute from each element in the set of matched elements."	self call: 'removeAttr' with: aKey</body><body package="JQuery-Core">removeProperty: aKey 	"Remove a property from each element in the set of matched elements."	self call: 'removeProp' with: aKey</body></methods><methods><class-id>JQuery.JQueryInstance class</class-id> <category>instance creation</category><body package="JQuery-Core">context: aRenderContext constructor: anArray	^ (self context: aRenderContext) setArguments: anArray</body></methods><methods><class-id>JQuery.JQPost</class-id> <category>accessing</category><body package="JQuery-Core">arguments	| arguments |	arguments := OrderedCollection with: self url.	self options		at: 'data'		ifPresent: [ :value | arguments add: value ].	self options		at: 'success'		ifPresent: [ :value | arguments add: value ].	self options		at: 'dataType'		ifPresent: [ :value | arguments add: value ].	^ arguments</body><body package="JQuery-Core">method	^ 'post'</body></methods><methods><class-id>JQuery.JQPost</class-id> <category>options</category><body package="JQuery-Core">isSupportedOption: aString	^ #('url' 'data' 'success' 'dataType') includes: aString</body></methods><methods><class-id>JQuery.JQGet</class-id> <category>accessing</category><body package="JQuery-Core">arguments	| arguments |	arguments := OrderedCollection with: self url.	self options		at: 'data'		ifPresent: [ :value | arguments add: value ].	self options		at: 'success'		ifPresent: [ :value | arguments add: value ].	self options		at: 'dataType'		ifPresent: [ :value | arguments add: value ].	^ arguments</body><body package="JQuery-Core">method	^ 'get'</body></methods><methods><class-id>JQuery.JQGet</class-id> <category>options</category><body package="JQuery-Core">isSupportedOption: aString	^ #('url' 'data' 'success' 'dataType') includes: aString</body></methods><methods><class-id>JQuery.JQAnimate</class-id> <category>options</category><body package="JQuery-Core">duration: aDuration	"A string representing one of the three predefined speeds (slow, normal, or fast) or the number of milliseconds to run the animation (e.g. 1000)."		self optionAt: 'duration' put: aDuration</body><body package="JQuery-Core">easing: aString	"The name of the easing effect that you want to use (plugin required). There are two built-in values, linear and swing."		self optionAt: 'easing' put: aString</body><body package="JQuery-Core">queue: aBoolean	"Setting this to false will make the animation skip the queue and begin running immediately."		self optionAt: 'queue' put: aBoolean</body></methods><methods><class-id>JQuery.JQAnimate</class-id> <category>parameters</category><body package="JQuery-Core">parameterAt: aKey put: aValue	self parameters at: aKey put: aValue</body><body package="JQuery-Core">parameters	^ parameters ifNil: [ parameters := GRSmallDictionary new ]</body><body package="JQuery-Core">parameters: aDictionary	"A set of style attributes that you wish to animate, and to what end."		parameters := aDictionary</body></methods><methods><class-id>JQuery.JQAnimate</class-id> <category>accessing</category><body package="JQuery-Core">arguments	^ Array with: self parameters with: self options</body><body package="JQuery-Core">method	^ 'animate'</body></methods><methods><class-id>JQuery.JQAnimate</class-id> <category>events</category><body package="JQuery-Core">onComplete: anObject	"A function to be executed whenever the animation completes, executes once for each element animated against."		self optionAt: 'complete' put: anObject asFunction</body><body package="JQuery-Core">onStep: anObject	"A function to be executed on each animation step, executes for each element animated against."	self optionAt: 'step' put: anObject asFunction</body></methods><methods><class-id>JQuery.JQAnimate</class-id> <category>private</category><body package="JQuery-Core">doesNotUnderstand: aMessage	"A nasty trick to allow to define the animation properties more easily."	^ aMessage selector numArgs = 1		ifFalse: [ super doesNotUnderstand: aMessage ]		ifTrue: [ self parameterAt: aMessage selector allButLast put: aMessage arguments first ]</body></methods><methods><class-id>JQuery.JQGetJson</class-id> <category>accessing</category><body package="JQuery-Core">arguments	| arguments |	arguments := OrderedCollection with: self url.	self options		at: 'data'		ifPresent: [ :value | arguments add: value ].	self options		at: 'success'		ifPresent: [ :value | arguments add: value ].	^ arguments</body><body package="JQuery-Core">method	^ 'getJSON'</body></methods><methods><class-id>JQuery.JQGetJson</class-id> <category>options</category><body package="JQuery-Core">isSupportedOption: aString	^ #('url' 'data' 'success' "(" 'dataType' ")") includes: aString</body></methods><methods><class-id>JQuery.JQDevelopmentLibrary</class-id> <category>accessing</category><body package="JQuery-Core">selectorsToInclude	^ #(jQueryJs)</body></methods><methods><class-id>JQuery.JQDevelopmentLibrary</class-id> <category>uploaded</category><body package="JQuery-Core">jQueryJs	^ '/*! * jQuery JavaScript Library v1.11.3 * http://jquery.com/ * * Includes Sizzle.js * http://sizzlejs.com/ * * Copyright 2005, 2014 jQuery Foundation, Inc. and other contributors * Released under the MIT license * http://jquery.org/license * * Date: 2015-04-28T16:19Z */(function( global, factory ) {	if ( typeof module === "object" &amp;&amp; typeof module.exports === "object" ) {		// For CommonJS and CommonJS-like environments where a proper window is present,		// execute the factory and get jQuery		// For environments that do not inherently posses a window with a document		// (such as Node.js), expose a jQuery-making factory as module.exports		// This accentuates the need for the creation of a real window		// e.g. var jQuery = require("jquery")(window);		// See ticket #14549 for more info		module.exports = global.document ?			factory( global, true ) :			function( w ) {				if ( !w.document ) {					throw new Error( "jQuery requires a window with a document" );				}				return factory( w );			};	} else {		factory( global );	}// Pass this if window is not defined yet}(typeof window !== "undefined" ? window : this, function( window, noGlobal ) {// Can''t do this because several apps including ASP.NET trace// the stack via arguments.caller.callee and Firefox dies if// you try to trace through "use strict" call chains. (#13335)// Support: Firefox 18+//var deletedIds = [];var slice = deletedIds.slice;var concat = deletedIds.concat;var push = deletedIds.push;var indexOf = deletedIds.indexOf;var class2type = {};var toString = class2type.toString;var hasOwn = class2type.hasOwnProperty;var support = {};var	version = "1.11.3",	// Define a local copy of jQuery	jQuery = function( selector, context ) {		// The jQuery object is actually just the init constructor ''enhanced''		// Need init if jQuery is called (just allow error to be thrown if not included)		return new jQuery.fn.init( selector, context );	},	// Support: Android&lt;4.1, IE&lt;9	// Make sure we trim BOM and NBSP	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,	// Matches dashed string for camelizing	rmsPrefix = /^-ms-/,	rdashAlpha = /-([\da-z])/gi,	// Used by jQuery.camelCase as callback to replace()	fcamelCase = function( all, letter ) {		return letter.toUpperCase();	};jQuery.fn = jQuery.prototype = {	// The current version of jQuery being used	jquery: version,	constructor: jQuery,	// Start with an empty selector	selector: "",	// The default length of a jQuery object is 0	length: 0,	toArray: function() {		return slice.call( this );	},	// Get the Nth element in the matched element set OR	// Get the whole matched element set as a clean array	get: function( num ) {		return num != null ?			// Return just the one element from the set			( num &lt; 0 ? this[ num + this.length ] : this[ num ] ) :			// Return all the elements in a clean array			slice.call( this );	},	// Take an array of elements and push it onto the stack	// (returning the new matched element set)	pushStack: function( elems ) {		// Build a new jQuery matched element set		var ret = jQuery.merge( this.constructor(), elems );		// Add the old object onto the stack (as a reference)		ret.prevObject = this;		ret.context = this.context;		// Return the newly-formed element set		return ret;	},	// Execute a callback for every element in the matched set.	// (You can seed the arguments with an array of args, but this is	// only used internally.)	each: function( callback, args ) {		return jQuery.each( this, callback, args );	},	map: function( callback ) {		return this.pushStack( jQuery.map(this, function( elem, i ) {			return callback.call( elem, i, elem );		}));	},	slice: function() {		return this.pushStack( slice.apply( this, arguments ) );	},	first: function() {		return this.eq( 0 );	},	last: function() {		return this.eq( -1 );	},	eq: function( i ) {		var len = this.length,			j = +i + ( i &lt; 0 ? len : 0 );		return this.pushStack( j &gt;= 0 &amp;&amp; j &lt; len ? [ this[j] ] : [] );	},	end: function() {		return this.prevObject || this.constructor(null);	},	// For internal use only.	// Behaves like an Array''s method, not like a jQuery method.	push: push,	sort: deletedIds.sort,	splice: deletedIds.splice};jQuery.extend = jQuery.fn.extend = function() {	var src, copyIsArray, copy, name, options, clone,		target = arguments[0] || {},		i = 1,		length = arguments.length,		deep = false;	// Handle a deep copy situation	if ( typeof target === "boolean" ) {		deep = target;		// skip the boolean and the target		target = arguments[ i ] || {};		i++;	}	// Handle case when target is a string or something (possible in deep copy)	if ( typeof target !== "object" &amp;&amp; !jQuery.isFunction(target) ) {		target = {};	}	// extend jQuery itself if only one argument is passed	if ( i === length ) {		target = this;		i--;	}	for ( ; i &lt; length; i++ ) {		// Only deal with non-null/undefined values		if ( (options = arguments[ i ]) != null ) {			// Extend the base object			for ( name in options ) {				src = target[ name ];				copy = options[ name ];				// Prevent never-ending loop				if ( target === copy ) {					continue;				}				// Recurse if we''re merging plain objects or arrays				if ( deep &amp;&amp; copy &amp;&amp; ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {					if ( copyIsArray ) {						copyIsArray = false;						clone = src &amp;&amp; jQuery.isArray(src) ? src : [];					} else {						clone = src &amp;&amp; jQuery.isPlainObject(src) ? src : {};					}					// Never move original objects, clone them					target[ name ] = jQuery.extend( deep, clone, copy );				// Don''t bring in undefined values				} else if ( copy !== undefined ) {					target[ name ] = copy;				}			}		}	}	// Return the modified object	return target;};jQuery.extend({	// Unique for each copy of jQuery on the page	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),	// Assume jQuery is ready without the ready module	isReady: true,	error: function( msg ) {		throw new Error( msg );	},	noop: function() {},	// See test/unit/core.js for details concerning isFunction.	// Since version 1.3, DOM methods and functions like alert	// aren''t supported. They return false on IE (#2968).	isFunction: function( obj ) {		return jQuery.type(obj) === "function";	},	isArray: Array.isArray || function( obj ) {		return jQuery.type(obj) === "array";	},	isWindow: function( obj ) {		/* jshint eqeqeq: false */		return obj != null &amp;&amp; obj == obj.window;	},	isNumeric: function( obj ) {		// parseFloat NaNs numeric-cast false positives (null|true|false|"")		// ...but misinterprets leading-number strings, particularly hex literals ("0x...")		// subtraction forces infinities to NaN		// adding 1 corrects loss of precision from parseFloat (#15100)		return !jQuery.isArray( obj ) &amp;&amp; (obj - parseFloat( obj ) + 1) &gt;= 0;	},	isEmptyObject: function( obj ) {		var name;		for ( name in obj ) {			return false;		}		return true;	},	isPlainObject: function( obj ) {		var key;		// Must be an Object.		// Because of IE, we also have to check the presence of the constructor property.		// Make sure that DOM nodes and window objects don''t pass through, as well		if ( !obj || jQuery.type(obj) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {			return false;		}		try {			// Not own constructor property must be Object			if ( obj.constructor &amp;&amp;				!hasOwn.call(obj, "constructor") &amp;&amp;				!hasOwn.call(obj.constructor.prototype, "isPrototypeOf") ) {				return false;			}		} catch ( e ) {			// IE8,9 Will throw exceptions on certain host objects #9897			return false;		}		// Support: IE&lt;9		// Handle iteration over inherited properties before own properties.		if ( support.ownLast ) {			for ( key in obj ) {				return hasOwn.call( obj, key );			}		}		// Own properties are enumerated firstly, so to speed up,		// if last one is own, then all properties are own.		for ( key in obj ) {}		return key === undefined || hasOwn.call( obj, key );	},	type: function( obj ) {		if ( obj == null ) {			return obj + "";		}		return typeof obj === "object" || typeof obj === "function" ?			class2type[ toString.call(obj) ] || "object" :			typeof obj;	},	// Evaluates a script in a global context	// Workarounds based on findings by Jim Driscoll	// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context	globalEval: function( data ) {		if ( data &amp;&amp; jQuery.trim( data ) ) {			// We use execScript on Internet Explorer			// We use an anonymous function so that context is window			// rather than jQuery in Firefox			( window.execScript || function( data ) {				window[ "eval" ].call( window, data );			} )( data );		}	},	// Convert dashed to camelCase; used by the css and data modules	// Microsoft forgot to hump their vendor prefix (#9572)	camelCase: function( string ) {		return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );	},	nodeName: function( elem, name ) {		return elem.nodeName &amp;&amp; elem.nodeName.toLowerCase() === name.toLowerCase();	},	// args is for internal usage only	each: function( obj, callback, args ) {		var value,			i = 0,			length = obj.length,			isArray = isArraylike( obj );		if ( args ) {			if ( isArray ) {				for ( ; i &lt; length; i++ ) {					value = callback.apply( obj[ i ], args );					if ( value === false ) {						break;					}				}			} else {				for ( i in obj ) {					value = callback.apply( obj[ i ], args );					if ( value === false ) {						break;					}				}			}		// A special, fast, case for the most common use of each		} else {			if ( isArray ) {				for ( ; i &lt; length; i++ ) {					value = callback.call( obj[ i ], i, obj[ i ] );					if ( value === false ) {						break;					}				}			} else {				for ( i in obj ) {					value = callback.call( obj[ i ], i, obj[ i ] );					if ( value === false ) {						break;					}				}			}		}		return obj;	},	// Support: Android&lt;4.1, IE&lt;9	trim: function( text ) {		return text == null ?			"" :			( text + "" ).replace( rtrim, "" );	},	// results is for internal usage only	makeArray: function( arr, results ) {		var ret = results || [];		if ( arr != null ) {			if ( isArraylike( Object(arr) ) ) {				jQuery.merge( ret,					typeof arr === "string" ?					[ arr ] : arr				);			} else {				push.call( ret, arr );			}		}		return ret;	},	inArray: function( elem, arr, i ) {		var len;		if ( arr ) {			if ( indexOf ) {				return indexOf.call( arr, elem, i );			}			len = arr.length;			i = i ? i &lt; 0 ? Math.max( 0, len + i ) : i : 0;			for ( ; i &lt; len; i++ ) {				// Skip accessing in sparse arrays				if ( i in arr &amp;&amp; arr[ i ] === elem ) {					return i;				}			}		}		return -1;	},	merge: function( first, second ) {		var len = +second.length,			j = 0,			i = first.length;		while ( j &lt; len ) {			first[ i++ ] = second[ j++ ];		}		// Support: IE&lt;9		// Workaround casting of .length to NaN on otherwise arraylike objects (e.g., NodeLists)		if ( len !== len ) {			while ( second[j] !== undefined ) {				first[ i++ ] = second[ j++ ];			}		}		first.length = i;		return first;	},	grep: function( elems, callback, invert ) {		var callbackInverse,			matches = [],			i = 0,			length = elems.length,			callbackExpect = !invert;		// Go through the array, only saving the items		// that pass the validator function		for ( ; i &lt; length; i++ ) {			callbackInverse = !callback( elems[ i ], i );			if ( callbackInverse !== callbackExpect ) {				matches.push( elems[ i ] );			}		}		return matches;	},	// arg is for internal usage only	map: function( elems, callback, arg ) {		var value,			i = 0,			length = elems.length,			isArray = isArraylike( elems ),			ret = [];		// Go through the array, translating each of the items to their new values		if ( isArray ) {			for ( ; i &lt; length; i++ ) {				value = callback( elems[ i ], i, arg );				if ( value != null ) {					ret.push( value );				}			}		// Go through every key on the object,		} else {			for ( i in elems ) {				value = callback( elems[ i ], i, arg );				if ( value != null ) {					ret.push( value );				}			}		}		// Flatten any nested arrays		return concat.apply( [], ret );	},	// A global GUID counter for objects	guid: 1,	// Bind a function to a context, optionally partially applying any	// arguments.	proxy: function( fn, context ) {		var args, proxy, tmp;		if ( typeof context === "string" ) {			tmp = fn[ context ];			context = fn;			fn = tmp;		}		// Quick check to determine if target is callable, in the spec		// this throws a TypeError, but we will just return undefined.		if ( !jQuery.isFunction( fn ) ) {			return undefined;		}		// Simulated bind		args = slice.call( arguments, 2 );		proxy = function() {			return fn.apply( context || this, args.concat( slice.call( arguments ) ) );		};		// Set the guid of unique handler to the same of original handler, so it can be removed		proxy.guid = fn.guid = fn.guid || jQuery.guid++;		return proxy;	},	now: function() {		return +( new Date() );	},	// jQuery.support is not used in Core but other projects attach their	// properties to it so it needs to exist.	support: support});// Populate the class2type mapjQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {	class2type[ "[object " + name + "]" ] = name.toLowerCase();});function isArraylike( obj ) {	// Support: iOS 8.2 (not reproducible in simulator)	// `in` check used to prevent JIT error (gh-2145)	// hasOwn isn''t used here due to false negatives	// regarding Nodelist length in IE	var length = "length" in obj &amp;&amp; obj.length,		type = jQuery.type( obj );	if ( type === "function" || jQuery.isWindow( obj ) ) {		return false;	}	if ( obj.nodeType === 1 &amp;&amp; length ) {		return true;	}	return type === "array" || length === 0 ||		typeof length === "number" &amp;&amp; length &gt; 0 &amp;&amp; ( length - 1 ) in obj;}var Sizzle =/*! * Sizzle CSS Selector Engine v2.2.0-pre * http://sizzlejs.com/ * * Copyright 2008, 2014 jQuery Foundation, Inc. and other contributors * Released under the MIT license * http://jquery.org/license * * Date: 2014-12-16 */(function( window ) {var i,	support,	Expr,	getText,	isXML,	tokenize,	compile,	select,	outermostContext,	sortInput,	hasDuplicate,	// Local document vars	setDocument,	document,	docElem,	documentIsHTML,	rbuggyQSA,	rbuggyMatches,	matches,	contains,	// Instance-specific data	expando = "sizzle" + 1 * new Date(),	preferredDoc = window.document,	dirruns = 0,	done = 0,	classCache = createCache(),	tokenCache = createCache(),	compilerCache = createCache(),	sortOrder = function( a, b ) {		if ( a === b ) {			hasDuplicate = true;		}		return 0;	},	// General-purpose constants	MAX_NEGATIVE = 1 &lt;&lt; 31,	// Instance methods	hasOwn = ({}).hasOwnProperty,	arr = [],	pop = arr.pop,	push_native = arr.push,	push = arr.push,	slice = arr.slice,	// Use a stripped-down indexOf as it''s faster than native	// http://jsperf.com/thor-indexof-vs-for/5	indexOf = function( list, elem ) {		var i = 0,			len = list.length;		for ( ; i &lt; len; i++ ) {			if ( list[i] === elem ) {				return i;			}		}		return -1;	},	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",	// Regular expressions	// Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace	whitespace = "[\\x20\\t\\r\\n\\f]",	// http://www.w3.org/TR/css3-syntax/#characters	characterEncoding = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",	// Loosely modeled on CSS identifier characters	// An unquoted value should be a CSS identifier http://www.w3.org/TR/css3-selectors/#attribute-selectors	// Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier	identifier = characterEncoding.replace( "w", "w#" ),	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors	attributes = "\\[" + whitespace + "*(" + characterEncoding + ")(?:" + whitespace +		// Operator (capture 2)		"*([*^$|!~]?=)" + whitespace +		// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"		"*(?:''((?:\\\\.|[^\\\\''])*)''|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +		"*\\]",	pseudos = ":(" + characterEncoding + ")(?:\\((" +		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:		// 1. quoted (capture 3; capture 4 or capture 5)		"(''((?:\\\\.|[^\\\\''])*)''|\"((?:\\\\.|[^\\\\\"])*)\")|" +		// 2. simple (capture 6)		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +		// 3. anything else (capture 2)		".*" +		")\\)|)",	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter	rwhitespace = new RegExp( whitespace + "+", "g" ),	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),	rcombinators = new RegExp( "^" + whitespace + "*([&gt;+~]|" + whitespace + ")" + whitespace + "*" ),	rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]''\"]*?)" + whitespace + "*\\]", "g" ),	rpseudo = new RegExp( pseudos ),	ridentifier = new RegExp( "^" + identifier + "$" ),	matchExpr = {		"ID": new RegExp( "^#(" + characterEncoding + ")" ),		"CLASS": new RegExp( "^\\.(" + characterEncoding + ")" ),		"TAG": new RegExp( "^(" + characterEncoding.replace( "w", "w*" ) + ")" ),		"ATTR": new RegExp( "^" + attributes ),		"PSEUDO": new RegExp( "^" + pseudos ),		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),		// For use in libraries implementing .is()		// We use this for POS matching in `select`		"needsContext": new RegExp( "^" + whitespace + "*[&gt;+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +			whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )	},	rinputs = /^(?:input|select|textarea|button)$/i,	rheader = /^h\d$/i,	rnative = /^[^{]+\{\s*\[native \w/,	// Easily-parseable/retrievable ID or TAG or CLASS selectors	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,	rsibling = /[+~]/,	rescape = /''|\\/g,	// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters	runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),	funescape = function( _, escaped, escapedWhitespace ) {		var high = "0x" + escaped - 0x10000;		// NaN means non-codepoint		// Support: Firefox&lt;24		// Workaround erroneous numeric interpretation of +"0x"		return high !== high || escapedWhitespace ?			escaped :			high &lt; 0 ?				// BMP codepoint				String.fromCharCode( high + 0x10000 ) :				// Supplemental Plane codepoint (surrogate pair)				String.fromCharCode( high &gt;&gt; 10 | 0xD800, high &amp; 0x3FF | 0xDC00 );	},	// Used for iframes	// See setDocument()	// Removing the function wrapper causes a "Permission Denied"	// error in IE	unloadHandler = function() {		setDocument();	};// Optimize for push.apply( _, NodeList )try {	push.apply(		(arr = slice.call( preferredDoc.childNodes )),		preferredDoc.childNodes	);	// Support: Android&lt;4.0	// Detect silently failing push.apply	arr[ preferredDoc.childNodes.length ].nodeType;} catch ( e ) {	push = { apply: arr.length ?		// Leverage slice if possible		function( target, els ) {			push_native.apply( target, slice.call(els) );		} :		// Support: IE&lt;9		// Otherwise append directly		function( target, els ) {			var j = target.length,				i = 0;			// Can''t trust NodeList.length			while ( (target[j++] = els[i++]) ) {}			target.length = j - 1;		}	};}function Sizzle( selector, context, results, seed ) {	var match, elem, m, nodeType,		// QSA vars		i, groups, old, nid, newContext, newSelector;	if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {		setDocument( context );	}	context = context || document;	results = results || [];	nodeType = context.nodeType;	if ( typeof selector !== "string" || !selector ||		nodeType !== 1 &amp;&amp; nodeType !== 9 &amp;&amp; nodeType !== 11 ) {		return results;	}	if ( !seed &amp;&amp; documentIsHTML ) {		// Try to shortcut find operations when possible (e.g., not under DocumentFragment)		if ( nodeType !== 11 &amp;&amp; (match = rquickExpr.exec( selector )) ) {			// Speed-up: Sizzle("#ID")			if ( (m = match[1]) ) {				if ( nodeType === 9 ) {					elem = context.getElementById( m );					// Check parentNode to catch when Blackberry 4.6 returns					// nodes that are no longer in the document (jQuery #6963)					if ( elem &amp;&amp; elem.parentNode ) {						// Handle the case where IE, Opera, and Webkit return items						// by name instead of ID						if ( elem.id === m ) {							results.push( elem );							return results;						}					} else {						return results;					}				} else {					// Context is not a document					if ( context.ownerDocument &amp;&amp; (elem = context.ownerDocument.getElementById( m )) &amp;&amp;						contains( context, elem ) &amp;&amp; elem.id === m ) {						results.push( elem );						return results;					}				}			// Speed-up: Sizzle("TAG")			} else if ( match[2] ) {				push.apply( results, context.getElementsByTagName( selector ) );				return results;			// Speed-up: Sizzle(".CLASS")			} else if ( (m = match[3]) &amp;&amp; support.getElementsByClassName ) {				push.apply( results, context.getElementsByClassName( m ) );				return results;			}		}		// QSA path		if ( support.qsa &amp;&amp; (!rbuggyQSA || !rbuggyQSA.test( selector )) ) {			nid = old = expando;			newContext = context;			newSelector = nodeType !== 1 &amp;&amp; selector;			// qSA works strangely on Element-rooted queries			// We can work around this by specifying an extra ID on the root			// and working up from there (Thanks to Andrew Dupont for the technique)			// IE 8 doesn''t work on object elements			if ( nodeType === 1 &amp;&amp; context.nodeName.toLowerCase() !== "object" ) {				groups = tokenize( selector );				if ( (old = context.getAttribute("id")) ) {					nid = old.replace( rescape, "\\$&amp;" );				} else {					context.setAttribute( "id", nid );				}				nid = "[id=''" + nid + "''] ";				i = groups.length;				while ( i-- ) {					groups[i] = nid + toSelector( groups[i] );				}				newContext = rsibling.test( selector ) &amp;&amp; testContext( context.parentNode ) || context;				newSelector = groups.join(",");			}			if ( newSelector ) {				try {					push.apply( results,						newContext.querySelectorAll( newSelector )					);					return results;				} catch(qsaError) {				} finally {					if ( !old ) {						context.removeAttribute("id");					}				}			}		}	}	// All others	return select( selector.replace( rtrim, "$1" ), context, results, seed );}/** * Create key-value caches of limited size * @returns {Function(string, Object)} Returns the Object data after storing it on itself with *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength) *	deleting the oldest entry */function createCache() {	var keys = [];	function cache( key, value ) {		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)		if ( keys.push( key + " " ) &gt; Expr.cacheLength ) {			// Only keep the most recent entries			delete cache[ keys.shift() ];		}		return (cache[ key + " " ] = value);	}	return cache;}/** * Mark a function for special use by Sizzle * @param {Function} fn The function to mark */function markFunction( fn ) {	fn[ expando ] = true;	return fn;}/** * Support testing using an element * @param {Function} fn Passed the created div and expects a boolean result */function assert( fn ) {	var div = document.createElement("div");	try {		return !!fn( div );	} catch (e) {		return false;	} finally {		// Remove from its parent by default		if ( div.parentNode ) {			div.parentNode.removeChild( div );		}		// release memory in IE		div = null;	}}/** * Adds the same handler for all of the specified attrs * @param {String} attrs Pipe-separated list of attributes * @param {Function} handler The method that will be applied */function addHandle( attrs, handler ) {	var arr = attrs.split("|"),		i = attrs.length;	while ( i-- ) {		Expr.attrHandle[ arr[i] ] = handler;	}}/** * Checks document order of two siblings * @param {Element} a * @param {Element} b * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b */function siblingCheck( a, b ) {	var cur = b &amp;&amp; a,		diff = cur &amp;&amp; a.nodeType === 1 &amp;&amp; b.nodeType === 1 &amp;&amp;			( ~b.sourceIndex || MAX_NEGATIVE ) -			( ~a.sourceIndex || MAX_NEGATIVE );	// Use IE sourceIndex if available on both nodes	if ( diff ) {		return diff;	}	// Check if b follows a	if ( cur ) {		while ( (cur = cur.nextSibling) ) {			if ( cur === b ) {				return -1;			}		}	}	return a ? 1 : -1;}/** * Returns a function to use in pseudos for input types * @param {String} type */function createInputPseudo( type ) {	return function( elem ) {		var name = elem.nodeName.toLowerCase();		return name === "input" &amp;&amp; elem.type === type;	};}/** * Returns a function to use in pseudos for buttons * @param {String} type */function createButtonPseudo( type ) {	return function( elem ) {		var name = elem.nodeName.toLowerCase();		return (name === "input" || name === "button") &amp;&amp; elem.type === type;	};}/** * Returns a function to use in pseudos for positionals * @param {Function} fn */function createPositionalPseudo( fn ) {	return markFunction(function( argument ) {		argument = +argument;		return markFunction(function( seed, matches ) {			var j,				matchIndexes = fn( [], seed.length, argument ),				i = matchIndexes.length;			// Match elements found at the specified indexes			while ( i-- ) {				if ( seed[ (j = matchIndexes[i]) ] ) {					seed[j] = !(matches[j] = seed[j]);				}			}		});	});}/** * Checks a node for validity as a Sizzle context * @param {Element|Object=} context * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value */function testContext( context ) {	return context &amp;&amp; typeof context.getElementsByTagName !== "undefined" &amp;&amp; context;}// Expose support vars for conveniencesupport = Sizzle.support = {};/** * Detects XML nodes * @param {Element|Object} elem An element or a document * @returns {Boolean} True iff elem is a non-HTML XML node */isXML = Sizzle.isXML = function( elem ) {	// documentElement is verified for cases where it doesn''t yet exist	// (such as loading iframes in IE - #4833)	var documentElement = elem &amp;&amp; (elem.ownerDocument || elem).documentElement;	return documentElement ? documentElement.nodeName !== "HTML" : false;};/** * Sets document-related variables once based on the current document * @param {Element|Object} [doc] An element or document object to use to set the document * @returns {Object} Returns the current document */setDocument = Sizzle.setDocument = function( node ) {	var hasCompare, parent,		doc = node ? node.ownerDocument || node : preferredDoc;	// If no document and documentElement is available, return	if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {		return document;	}	// Set our document	document = doc;	docElem = doc.documentElement;	parent = doc.defaultView;	// Support: IE&gt;8	// If iframe document is assigned to "document" variable and if iframe has been reloaded,	// IE will throw "permission denied" error when accessing "document" variable, see jQuery #13936	// IE6-8 do not support the defaultView property so parent will be undefined	if ( parent &amp;&amp; parent !== parent.top ) {		// IE11 does not have attachEvent, so all must suffer		if ( parent.addEventListener ) {			parent.addEventListener( "unload", unloadHandler, false );		} else if ( parent.attachEvent ) {			parent.attachEvent( "onunload", unloadHandler );		}	}	/* Support tests	---------------------------------------------------------------------- */	documentIsHTML = !isXML( doc );	/* Attributes	---------------------------------------------------------------------- */	// Support: IE&lt;8	// Verify that getAttribute really returns attributes and not properties	// (excepting IE8 booleans)	support.attributes = assert(function( div ) {		div.className = "i";		return !div.getAttribute("className");	});	/* getElement(s)By*	---------------------------------------------------------------------- */	// Check if getElementsByTagName("*") returns only elements	support.getElementsByTagName = assert(function( div ) {		div.appendChild( doc.createComment("") );		return !div.getElementsByTagName("*").length;	});	// Support: IE&lt;9	support.getElementsByClassName = rnative.test( doc.getElementsByClassName );	// Support: IE&lt;10	// Check if getElementById returns elements by name	// The broken getElementById methods don''t pick up programatically-set names,	// so use a roundabout getElementsByName test	support.getById = assert(function( div ) {		docElem.appendChild( div ).id = expando;		return !doc.getElementsByName || !doc.getElementsByName( expando ).length;	});	// ID find and filter	if ( support.getById ) {		Expr.find["ID"] = function( id, context ) {			if ( typeof context.getElementById !== "undefined" &amp;&amp; documentIsHTML ) {				var m = context.getElementById( id );				// Check parentNode to catch when Blackberry 4.6 returns				// nodes that are no longer in the document #6963				return m &amp;&amp; m.parentNode ? [ m ] : [];			}		};		Expr.filter["ID"] = function( id ) {			var attrId = id.replace( runescape, funescape );			return function( elem ) {				return elem.getAttribute("id") === attrId;			};		};	} else {		// Support: IE6/7		// getElementById is not reliable as a find shortcut		delete Expr.find["ID"];		Expr.filter["ID"] =  function( id ) {			var attrId = id.replace( runescape, funescape );			return function( elem ) {				var node = typeof elem.getAttributeNode !== "undefined" &amp;&amp; elem.getAttributeNode("id");				return node &amp;&amp; node.value === attrId;			};		};	}	// Tag	Expr.find["TAG"] = support.getElementsByTagName ?		function( tag, context ) {			if ( typeof context.getElementsByTagName !== "undefined" ) {				return context.getElementsByTagName( tag );			// DocumentFragment nodes don''t have gEBTN			} else if ( support.qsa ) {				return context.querySelectorAll( tag );			}		} :		function( tag, context ) {			var elem,				tmp = [],				i = 0,				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too				results = context.getElementsByTagName( tag );			// Filter out possible comments			if ( tag === "*" ) {				while ( (elem = results[i++]) ) {					if ( elem.nodeType === 1 ) {						tmp.push( elem );					}				}				return tmp;			}			return results;		};	// Class	Expr.find["CLASS"] = support.getElementsByClassName &amp;&amp; function( className, context ) {		if ( documentIsHTML ) {			return context.getElementsByClassName( className );		}	};	/* QSA/matchesSelector	---------------------------------------------------------------------- */	// QSA and matchesSelector support	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)	rbuggyMatches = [];	// qSa(:focus) reports false when true (Chrome 21)	// We allow this because of a bug in IE8/9 that throws an error	// whenever `document.activeElement` is accessed on an iframe	// So, we allow :focus to pass through QSA all the time to avoid the IE error	// See http://bugs.jquery.com/ticket/13378	rbuggyQSA = [];	if ( (support.qsa = rnative.test( doc.querySelectorAll )) ) {		// Build QSA regex		// Regex strategy adopted from Diego Perini		assert(function( div ) {			// Select is set to empty string on purpose			// This is to test IE''s treatment of not explicitly			// setting a boolean content attribute,			// since its presence should be enough			// http://bugs.jquery.com/ticket/12359			docElem.appendChild( div ).innerHTML = "&lt;a id=''" + expando + "''&gt;&lt;/a&gt;" +				"&lt;select id=''" + expando + "-\f]'' msallowcapture=''''&gt;" +				"&lt;option selected=''''&gt;&lt;/option&gt;&lt;/select&gt;";			// Support: IE8, Opera 11-12.16			// Nothing should be selected when empty strings follow ^= or $= or *=			// The test attribute must be unknown in Opera but "safe" for WinRT			// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section			if ( div.querySelectorAll("[msallowcapture^='''']").length ) {				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''''|\"\")" );			}			// Support: IE8			// Boolean attributes and "value" are not treated correctly			if ( !div.querySelectorAll("[selected]").length ) {				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );			}			// Support: Chrome&lt;29, Android&lt;4.2+, Safari&lt;7.0+, iOS&lt;7.0+, PhantomJS&lt;1.9.7+			if ( !div.querySelectorAll( "[id~=" + expando + "-]" ).length ) {				rbuggyQSA.push("~=");			}			// Webkit/Opera - :checked should return selected option elements			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked			// IE8 throws error here and will not see later tests			if ( !div.querySelectorAll(":checked").length ) {				rbuggyQSA.push(":checked");			}			// Support: Safari 8+, iOS 8+			// https://bugs.webkit.org/show_bug.cgi?id=136851			// In-page `selector#id sibing-combinator selector` fails			if ( !div.querySelectorAll( "a#" + expando + "+*" ).length ) {				rbuggyQSA.push(".#.+[+~]");			}		});		assert(function( div ) {			// Support: Windows 8 Native Apps			// The type and name attributes are restricted during .innerHTML assignment			var input = doc.createElement("input");			input.setAttribute( "type", "hidden" );			div.appendChild( input ).setAttribute( "name", "D" );			// Support: IE8			// Enforce case-sensitivity of name attribute			if ( div.querySelectorAll("[name=d]").length ) {				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );			}			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)			// IE8 throws error here and will not see later tests			if ( !div.querySelectorAll(":enabled").length ) {				rbuggyQSA.push( ":enabled", ":disabled" );			}			// Opera 10-11 does not throw on post-comma invalid pseudos			div.querySelectorAll("*,:x");			rbuggyQSA.push(",.*:");		});	}	if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||		docElem.webkitMatchesSelector ||		docElem.mozMatchesSelector ||		docElem.oMatchesSelector ||		docElem.msMatchesSelector) )) ) {		assert(function( div ) {			// Check to see if it''s possible to do matchesSelector			// on a disconnected node (IE 9)			support.disconnectedMatch = matches.call( div, "div" );			// This should fail with an exception			// Gecko does not error, returns false instead			matches.call( div, "[s!='''']:x" );			rbuggyMatches.push( "!=", pseudos );		});	}	rbuggyQSA = rbuggyQSA.length &amp;&amp; new RegExp( rbuggyQSA.join("|") );	rbuggyMatches = rbuggyMatches.length &amp;&amp; new RegExp( rbuggyMatches.join("|") );	/* Contains	---------------------------------------------------------------------- */	hasCompare = rnative.test( docElem.compareDocumentPosition );	// Element contains another	// Purposefully does not implement inclusive descendent	// As in, an element does not contain itself	contains = hasCompare || rnative.test( docElem.contains ) ?		function( a, b ) {			var adown = a.nodeType === 9 ? a.documentElement : a,				bup = b &amp;&amp; b.parentNode;			return a === bup || !!( bup &amp;&amp; bup.nodeType === 1 &amp;&amp; (				adown.contains ?					adown.contains( bup ) :					a.compareDocumentPosition &amp;&amp; a.compareDocumentPosition( bup ) &amp; 16			));		} :		function( a, b ) {			if ( b ) {				while ( (b = b.parentNode) ) {					if ( b === a ) {						return true;					}				}			}			return false;		};	/* Sorting	---------------------------------------------------------------------- */	// Document order sorting	sortOrder = hasCompare ?	function( a, b ) {		// Flag for duplicate removal		if ( a === b ) {			hasDuplicate = true;			return 0;		}		// Sort on method existence if only one input has compareDocumentPosition		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;		if ( compare ) {			return compare;		}		// Calculate position if both inputs belong to the same document		compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?			a.compareDocumentPosition( b ) :			// Otherwise we know they are disconnected			1;		// Disconnected nodes		if ( compare &amp; 1 ||			(!support.sortDetached &amp;&amp; b.compareDocumentPosition( a ) === compare) ) {			// Choose the first element that is related to our preferred document			if ( a === doc || a.ownerDocument === preferredDoc &amp;&amp; contains(preferredDoc, a) ) {				return -1;			}			if ( b === doc || b.ownerDocument === preferredDoc &amp;&amp; contains(preferredDoc, b) ) {				return 1;			}			// Maintain original order			return sortInput ?				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :				0;		}		return compare &amp; 4 ? -1 : 1;	} :	function( a, b ) {		// Exit early if the nodes are identical		if ( a === b ) {			hasDuplicate = true;			return 0;		}		var cur,			i = 0,			aup = a.parentNode,			bup = b.parentNode,			ap = [ a ],			bp = [ b ];		// Parentless nodes are either documents or disconnected		if ( !aup || !bup ) {			return a === doc ? -1 :				b === doc ? 1 :				aup ? -1 :				bup ? 1 :				sortInput ?				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :				0;		// If the nodes are siblings, we can do a quick check		} else if ( aup === bup ) {			return siblingCheck( a, b );		}		// Otherwise we need full lists of their ancestors for comparison		cur = a;		while ( (cur = cur.parentNode) ) {			ap.unshift( cur );		}		cur = b;		while ( (cur = cur.parentNode) ) {			bp.unshift( cur );		}		// Walk down the tree looking for a discrepancy		while ( ap[i] === bp[i] ) {			i++;		}		return i ?			// Do a sibling check if the nodes have a common ancestor			siblingCheck( ap[i], bp[i] ) :			// Otherwise nodes in our document sort first			ap[i] === preferredDoc ? -1 :			bp[i] === preferredDoc ? 1 :			0;	};	return doc;};Sizzle.matches = function( expr, elements ) {	return Sizzle( expr, null, null, elements );};Sizzle.matchesSelector = function( elem, expr ) {	// Set document vars if needed	if ( ( elem.ownerDocument || elem ) !== document ) {		setDocument( elem );	}	// Make sure that attribute selectors are quoted	expr = expr.replace( rattributeQuotes, "=''$1'']" );	if ( support.matchesSelector &amp;&amp; documentIsHTML &amp;&amp;		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &amp;&amp;		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {		try {			var ret = matches.call( elem, expr );			// IE 9''s matchesSelector returns false on disconnected nodes			if ( ret || support.disconnectedMatch ||					// As well, disconnected nodes are said to be in a document					// fragment in IE 9					elem.document &amp;&amp; elem.document.nodeType !== 11 ) {				return ret;			}		} catch (e) {}	}	return Sizzle( expr, document, null, [ elem ] ).length &gt; 0;};Sizzle.contains = function( context, elem ) {	// Set document vars if needed	if ( ( context.ownerDocument || context ) !== document ) {		setDocument( context );	}	return contains( context, elem );};Sizzle.attr = function( elem, name ) {	// Set document vars if needed	if ( ( elem.ownerDocument || elem ) !== document ) {		setDocument( elem );	}	var fn = Expr.attrHandle[ name.toLowerCase() ],		// Don''t get fooled by Object.prototype properties (jQuery #13807)		val = fn &amp;&amp; hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?			fn( elem, name, !documentIsHTML ) :			undefined;	return val !== undefined ?		val :		support.attributes || !documentIsHTML ?			elem.getAttribute( name ) :			(val = elem.getAttributeNode(name)) &amp;&amp; val.specified ?				val.value :				null;};Sizzle.error = function( msg ) {	throw new Error( "Syntax error, unrecognized expression: " + msg );};/** * Document sorting and removing duplicates * @param {ArrayLike} results */Sizzle.uniqueSort = function( results ) {	var elem,		duplicates = [],		j = 0,		i = 0;	// Unless we *know* we can detect duplicates, assume their presence	hasDuplicate = !support.detectDuplicates;	sortInput = !support.sortStable &amp;&amp; results.slice( 0 );	results.sort( sortOrder );	if ( hasDuplicate ) {		while ( (elem = results[i++]) ) {			if ( elem === results[ i ] ) {				j = duplicates.push( i );			}		}		while ( j-- ) {			results.splice( duplicates[ j ], 1 );		}	}	// Clear input after sorting to release objects	// See https://github.com/jquery/sizzle/pull/225	sortInput = null;	return results;};/** * Utility function for retrieving the text value of an array of DOM nodes * @param {Array|Element} elem */getText = Sizzle.getText = function( elem ) {	var node,		ret = "",		i = 0,		nodeType = elem.nodeType;	if ( !nodeType ) {		// If no nodeType, this is expected to be an array		while ( (node = elem[i++]) ) {			// Do not traverse comment nodes			ret += getText( node );		}	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {		// Use textContent for elements		// innerText usage removed for consistency of new lines (jQuery #11153)		if ( typeof elem.textContent === "string" ) {			return elem.textContent;		} else {			// Traverse its children			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {				ret += getText( elem );			}		}	} else if ( nodeType === 3 || nodeType === 4 ) {		return elem.nodeValue;	}	// Do not include comment or processing instruction nodes	return ret;};Expr = Sizzle.selectors = {	// Can be adjusted by the user	cacheLength: 50,	createPseudo: markFunction,	match: matchExpr,	attrHandle: {},	find: {},	relative: {		"&gt;": { dir: "parentNode", first: true },		" ": { dir: "parentNode" },		"+": { dir: "previousSibling", first: true },		"~": { dir: "previousSibling" }	},	preFilter: {		"ATTR": function( match ) {			match[1] = match[1].replace( runescape, funescape );			// Move the given value to match[3] whether quoted or unquoted			match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );			if ( match[2] === "~=" ) {				match[3] = " " + match[3] + " ";			}			return match.slice( 0, 4 );		},		"CHILD": function( match ) {			/* matches from matchExpr["CHILD"]				1 type (only|nth|...)				2 what (child|of-type)				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)				4 xn-component of xn+y argument ([+-]?\d*n|)				5 sign of xn-component				6 x of xn-component				7 sign of y-component				8 y of y-component			*/			match[1] = match[1].toLowerCase();			if ( match[1].slice( 0, 3 ) === "nth" ) {				// nth-* requires argument				if ( !match[3] ) {					Sizzle.error( match[0] );				}				// numeric x and y parameters for Expr.filter.CHILD				// remember that false/true cast respectively to 0/1				match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );				match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );			// other types prohibit arguments			} else if ( match[3] ) {				Sizzle.error( match[0] );			}			return match;		},		"PSEUDO": function( match ) {			var excess,				unquoted = !match[6] &amp;&amp; match[2];			if ( matchExpr["CHILD"].test( match[0] ) ) {				return null;			}			// Accept quoted arguments as-is			if ( match[3] ) {				match[2] = match[4] || match[5] || "";			// Strip excess characters from unquoted arguments			} else if ( unquoted &amp;&amp; rpseudo.test( unquoted ) &amp;&amp;				// Get excess from tokenize (recursively)				(excess = tokenize( unquoted, true )) &amp;&amp;				// advance to the next closing parenthesis				(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {				// excess is a negative index				match[0] = match[0].slice( 0, excess );				match[2] = unquoted.slice( 0, excess );			}			// Return only captures needed by the pseudo filter method (type and argument)			return match.slice( 0, 3 );		}	},	filter: {		"TAG": function( nodeNameSelector ) {			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();			return nodeNameSelector === "*" ?				function() { return true; } :				function( elem ) {					return elem.nodeName &amp;&amp; elem.nodeName.toLowerCase() === nodeName;				};		},		"CLASS": function( className ) {			var pattern = classCache[ className + " " ];			return pattern ||				(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &amp;&amp;				classCache( className, function( elem ) {					return pattern.test( typeof elem.className === "string" &amp;&amp; elem.className || typeof elem.getAttribute !== "undefined" &amp;&amp; elem.getAttribute("class") || "" );				});		},		"ATTR": function( name, operator, check ) {			return function( elem ) {				var result = Sizzle.attr( elem, name );				if ( result == null ) {					return operator === "!=";				}				if ( !operator ) {					return true;				}				result += "";				return operator === "=" ? result === check :					operator === "!=" ? result !== check :					operator === "^=" ? check &amp;&amp; result.indexOf( check ) === 0 :					operator === "*=" ? check &amp;&amp; result.indexOf( check ) &gt; -1 :					operator === "$=" ? check &amp;&amp; result.slice( -check.length ) === check :					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) &gt; -1 :					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :					false;			};		},		"CHILD": function( type, what, argument, first, last ) {			var simple = type.slice( 0, 3 ) !== "nth",				forward = type.slice( -4 ) !== "last",				ofType = what === "of-type";			return first === 1 &amp;&amp; last === 0 ?				// Shortcut for :nth-*(n)				function( elem ) {					return !!elem.parentNode;				} :				function( elem, context, xml ) {					var cache, outerCache, node, diff, nodeIndex, start,						dir = simple !== forward ? "nextSibling" : "previousSibling",						parent = elem.parentNode,						name = ofType &amp;&amp; elem.nodeName.toLowerCase(),						useCache = !xml &amp;&amp; !ofType;					if ( parent ) {						// :(first|last|only)-(child|of-type)						if ( simple ) {							while ( dir ) {								node = elem;								while ( (node = node[ dir ]) ) {									if ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) {										return false;									}								}								// Reverse direction for :only-* (if we haven''t yet done so)								start = dir = type === "only" &amp;&amp; !start &amp;&amp; "nextSibling";							}							return true;						}						start = [ forward ? parent.firstChild : parent.lastChild ];						// non-xml :nth-child(...) stores cache data on `parent`						if ( forward &amp;&amp; useCache ) {							// Seek `elem` from a previously-cached index							outerCache = parent[ expando ] || (parent[ expando ] = {});							cache = outerCache[ type ] || [];							nodeIndex = cache[0] === dirruns &amp;&amp; cache[1];							diff = cache[0] === dirruns &amp;&amp; cache[2];							node = nodeIndex &amp;&amp; parent.childNodes[ nodeIndex ];							while ( (node = ++nodeIndex &amp;&amp; node &amp;&amp; node[ dir ] ||								// Fallback to seeking `elem` from the start								(diff = nodeIndex = 0) || start.pop()) ) {								// When found, cache indexes on `parent` and break								if ( node.nodeType === 1 &amp;&amp; ++diff &amp;&amp; node === elem ) {									outerCache[ type ] = [ dirruns, nodeIndex, diff ];									break;								}							}						// Use previously-cached element index if available						} else if ( useCache &amp;&amp; (cache = (elem[ expando ] || (elem[ expando ] = {}))[ type ]) &amp;&amp; cache[0] === dirruns ) {							diff = cache[1];						// xml :nth-child(...) or :nth-last-child(...) or :nth(-last)?-of-type(...)						} else {							// Use the same loop as above to seek `elem` from the start							while ( (node = ++nodeIndex &amp;&amp; node &amp;&amp; node[ dir ] ||								(diff = nodeIndex = 0) || start.pop()) ) {								if ( ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) &amp;&amp; ++diff ) {									// Cache the index of each encountered element									if ( useCache ) {										(node[ expando ] || (node[ expando ] = {}))[ type ] = [ dirruns, diff ];									}									if ( node === elem ) {										break;									}								}							}						}						// Incorporate the offset, then check against cycle size						diff -= last;						return diff === first || ( diff % first === 0 &amp;&amp; diff / first &gt;= 0 );					}				};		},		"PSEUDO": function( pseudo, argument ) {			// pseudo-class names are case-insensitive			// http://www.w3.org/TR/selectors/#pseudo-classes			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters			// Remember that setFilters inherits from pseudos			var args,				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||					Sizzle.error( "unsupported pseudo: " + pseudo );			// The user may use createPseudo to indicate that			// arguments are needed to create the filter function			// just as Sizzle does			if ( fn[ expando ] ) {				return fn( argument );			}			// But maintain support for old signatures			if ( fn.length &gt; 1 ) {				args = [ pseudo, pseudo, "", argument ];				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?					markFunction(function( seed, matches ) {						var idx,							matched = fn( seed, argument ),							i = matched.length;						while ( i-- ) {							idx = indexOf( seed, matched[i] );							seed[ idx ] = !( matches[ idx ] = matched[i] );						}					}) :					function( elem ) {						return fn( elem, 0, args );					};			}			return fn;		}	},	pseudos: {		// Potentially complex pseudos		"not": markFunction(function( selector ) {			// Trim the selector passed to compile			// to avoid treating leading and trailing			// spaces as combinators			var input = [],				results = [],				matcher = compile( selector.replace( rtrim, "$1" ) );			return matcher[ expando ] ?				markFunction(function( seed, matches, context, xml ) {					var elem,						unmatched = matcher( seed, null, xml, [] ),						i = seed.length;					// Match elements unmatched by `matcher`					while ( i-- ) {						if ( (elem = unmatched[i]) ) {							seed[i] = !(matches[i] = elem);						}					}				}) :				function( elem, context, xml ) {					input[0] = elem;					matcher( input, null, xml, results );					// Don''t keep the element (issue #299)					input[0] = null;					return !results.pop();				};		}),		"has": markFunction(function( selector ) {			return function( elem ) {				return Sizzle( selector, elem ).length &gt; 0;			};		}),		"contains": markFunction(function( text ) {			text = text.replace( runescape, funescape );			return function( elem ) {				return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) &gt; -1;			};		}),		// "Whether an element is represented by a :lang() selector		// is based solely on the element''s language value		// being equal to the identifier C,		// or beginning with the identifier C immediately followed by "-".		// The matching of C against the element''s language value is performed case-insensitively.		// The identifier C does not have to be a valid language name."		// http://www.w3.org/TR/selectors/#lang-pseudo		"lang": markFunction( function( lang ) {			// lang value must be a valid identifier			if ( !ridentifier.test(lang || "") ) {				Sizzle.error( "unsupported lang: " + lang );			}			lang = lang.replace( runescape, funescape ).toLowerCase();			return function( elem ) {				var elemLang;				do {					if ( (elemLang = documentIsHTML ?						elem.lang :						elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {						elemLang = elemLang.toLowerCase();						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;					}				} while ( (elem = elem.parentNode) &amp;&amp; elem.nodeType === 1 );				return false;			};		}),		// Miscellaneous		"target": function( elem ) {			var hash = window.location &amp;&amp; window.location.hash;			return hash &amp;&amp; hash.slice( 1 ) === elem.id;		},		"root": function( elem ) {			return elem === docElem;		},		"focus": function( elem ) {			return elem === document.activeElement &amp;&amp; (!document.hasFocus || document.hasFocus()) &amp;&amp; !!(elem.type || elem.href || ~elem.tabIndex);		},		// Boolean properties		"enabled": function( elem ) {			return elem.disabled === false;		},		"disabled": function( elem ) {			return elem.disabled === true;		},		"checked": function( elem ) {			// In CSS3, :checked should return both checked and selected elements			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked			var nodeName = elem.nodeName.toLowerCase();			return (nodeName === "input" &amp;&amp; !!elem.checked) || (nodeName === "option" &amp;&amp; !!elem.selected);		},		"selected": function( elem ) {			// Accessing this property makes selected-by-default			// options in Safari work properly			if ( elem.parentNode ) {				elem.parentNode.selectedIndex;			}			return elem.selected === true;		},		// Contents		"empty": function( elem ) {			// http://www.w3.org/TR/selectors/#empty-pseudo			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),			//   but not by others (comment: 8; processing instruction: 7; etc.)			// nodeType &lt; 6 works because attributes (2) do not appear as children			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {				if ( elem.nodeType &lt; 6 ) {					return false;				}			}			return true;		},		"parent": function( elem ) {			return !Expr.pseudos["empty"]( elem );		},		// Element/input types		"header": function( elem ) {			return rheader.test( elem.nodeName );		},		"input": function( elem ) {			return rinputs.test( elem.nodeName );		},		"button": function( elem ) {			var name = elem.nodeName.toLowerCase();			return name === "input" &amp;&amp; elem.type === "button" || name === "button";		},		"text": function( elem ) {			var attr;			return elem.nodeName.toLowerCase() === "input" &amp;&amp;				elem.type === "text" &amp;&amp;				// Support: IE&lt;8				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"				( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );		},		// Position-in-collection		"first": createPositionalPseudo(function() {			return [ 0 ];		}),		"last": createPositionalPseudo(function( matchIndexes, length ) {			return [ length - 1 ];		}),		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {			return [ argument &lt; 0 ? argument + length : argument ];		}),		"even": createPositionalPseudo(function( matchIndexes, length ) {			var i = 0;			for ( ; i &lt; length; i += 2 ) {				matchIndexes.push( i );			}			return matchIndexes;		}),		"odd": createPositionalPseudo(function( matchIndexes, length ) {			var i = 1;			for ( ; i &lt; length; i += 2 ) {				matchIndexes.push( i );			}			return matchIndexes;		}),		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {			var i = argument &lt; 0 ? argument + length : argument;			for ( ; --i &gt;= 0; ) {				matchIndexes.push( i );			}			return matchIndexes;		}),		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {			var i = argument &lt; 0 ? argument + length : argument;			for ( ; ++i &lt; length; ) {				matchIndexes.push( i );			}			return matchIndexes;		})	}};Expr.pseudos["nth"] = Expr.pseudos["eq"];// Add button/input type pseudosfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {	Expr.pseudos[ i ] = createInputPseudo( i );}for ( i in { submit: true, reset: true } ) {	Expr.pseudos[ i ] = createButtonPseudo( i );}// Easy API for creating new setFiltersfunction setFilters() {}setFilters.prototype = Expr.filters = Expr.pseudos;Expr.setFilters = new setFilters();tokenize = Sizzle.tokenize = function( selector, parseOnly ) {	var matched, match, tokens, type,		soFar, groups, preFilters,		cached = tokenCache[ selector + " " ];	if ( cached ) {		return parseOnly ? 0 : cached.slice( 0 );	}	soFar = selector;	groups = [];	preFilters = Expr.preFilter;	while ( soFar ) {		// Comma and first run		if ( !matched || (match = rcomma.exec( soFar )) ) {			if ( match ) {				// Don''t consume trailing commas as valid				soFar = soFar.slice( match[0].length ) || soFar;			}			groups.push( (tokens = []) );		}		matched = false;		// Combinators		if ( (match = rcombinators.exec( soFar )) ) {			matched = match.shift();			tokens.push({				value: matched,				// Cast descendant combinators to space				type: match[0].replace( rtrim, " " )			});			soFar = soFar.slice( matched.length );		}		// Filters		for ( type in Expr.filter ) {			if ( (match = matchExpr[ type ].exec( soFar )) &amp;&amp; (!preFilters[ type ] ||				(match = preFilters[ type ]( match ))) ) {				matched = match.shift();				tokens.push({					value: matched,					type: type,					matches: match				});				soFar = soFar.slice( matched.length );			}		}		if ( !matched ) {			break;		}	}	// Return the length of the invalid excess	// if we''re just parsing	// Otherwise, throw an error or return tokens	return parseOnly ?		soFar.length :		soFar ?			Sizzle.error( selector ) :			// Cache the tokens			tokenCache( selector, groups ).slice( 0 );};function toSelector( tokens ) {	var i = 0,		len = tokens.length,		selector = "";	for ( ; i &lt; len; i++ ) {		selector += tokens[i].value;	}	return selector;}function addCombinator( matcher, combinator, base ) {	var dir = combinator.dir,		checkNonElements = base &amp;&amp; dir === "parentNode",		doneName = done++;	return combinator.first ?		// Check against closest ancestor/preceding element		function( elem, context, xml ) {			while ( (elem = elem[ dir ]) ) {				if ( elem.nodeType === 1 || checkNonElements ) {					return matcher( elem, context, xml );				}			}		} :		// Check against all ancestor/preceding elements		function( elem, context, xml ) {			var oldCache, outerCache,				newCache = [ dirruns, doneName ];			// We can''t set arbitrary data on XML nodes, so they don''t benefit from dir caching			if ( xml ) {				while ( (elem = elem[ dir ]) ) {					if ( elem.nodeType === 1 || checkNonElements ) {						if ( matcher( elem, context, xml ) ) {							return true;						}					}				}			} else {				while ( (elem = elem[ dir ]) ) {					if ( elem.nodeType === 1 || checkNonElements ) {						outerCache = elem[ expando ] || (elem[ expando ] = {});						if ( (oldCache = outerCache[ dir ]) &amp;&amp;							oldCache[ 0 ] === dirruns &amp;&amp; oldCache[ 1 ] === doneName ) {							// Assign to newCache so results back-propagate to previous elements							return (newCache[ 2 ] = oldCache[ 2 ]);						} else {							// Reuse newcache so results back-propagate to previous elements							outerCache[ dir ] = newCache;							// A match means we''re done; a fail means we have to keep checking							if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {								return true;							}						}					}				}			}		};}function elementMatcher( matchers ) {	return matchers.length &gt; 1 ?		function( elem, context, xml ) {			var i = matchers.length;			while ( i-- ) {				if ( !matchers[i]( elem, context, xml ) ) {					return false;				}			}			return true;		} :		matchers[0];}function multipleContexts( selector, contexts, results ) {	var i = 0,		len = contexts.length;	for ( ; i &lt; len; i++ ) {		Sizzle( selector, contexts[i], results );	}	return results;}function condense( unmatched, map, filter, context, xml ) {	var elem,		newUnmatched = [],		i = 0,		len = unmatched.length,		mapped = map != null;	for ( ; i &lt; len; i++ ) {		if ( (elem = unmatched[i]) ) {			if ( !filter || filter( elem, context, xml ) ) {				newUnmatched.push( elem );				if ( mapped ) {					map.push( i );				}			}		}	}	return newUnmatched;}function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {	if ( postFilter &amp;&amp; !postFilter[ expando ] ) {		postFilter = setMatcher( postFilter );	}	if ( postFinder &amp;&amp; !postFinder[ expando ] ) {		postFinder = setMatcher( postFinder, postSelector );	}	return markFunction(function( seed, results, context, xml ) {		var temp, i, elem,			preMap = [],			postMap = [],			preexisting = results.length,			// Get initial elements from seed or context			elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),			// Prefilter to get matcher input, preserving a map for seed-results synchronization			matcherIn = preFilter &amp;&amp; ( seed || !selector ) ?				condense( elems, preMap, preFilter, context, xml ) :				elems,			matcherOut = matcher ?				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?					// ...intermediate processing is necessary					[] :					// ...otherwise use results directly					results :				matcherIn;		// Find primary matches		if ( matcher ) {			matcher( matcherIn, matcherOut, context, xml );		}		// Apply postFilter		if ( postFilter ) {			temp = condense( matcherOut, postMap );			postFilter( temp, [], context, xml );			// Un-match failing elements by moving them back to matcherIn			i = temp.length;			while ( i-- ) {				if ( (elem = temp[i]) ) {					matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);				}			}		}		if ( seed ) {			if ( postFinder || preFilter ) {				if ( postFinder ) {					// Get the final matcherOut by condensing this intermediate into postFinder contexts					temp = [];					i = matcherOut.length;					while ( i-- ) {						if ( (elem = matcherOut[i]) ) {							// Restore matcherIn since elem is not yet a final match							temp.push( (matcherIn[i] = elem) );						}					}					postFinder( null, (matcherOut = []), temp, xml );				}				// Move matched elements from seed to results to keep them synchronized				i = matcherOut.length;				while ( i-- ) {					if ( (elem = matcherOut[i]) &amp;&amp;						(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) &gt; -1 ) {						seed[temp] = !(results[temp] = elem);					}				}			}		// Add elements to results, through postFinder if defined		} else {			matcherOut = condense(				matcherOut === results ?					matcherOut.splice( preexisting, matcherOut.length ) :					matcherOut			);			if ( postFinder ) {				postFinder( null, results, matcherOut, xml );			} else {				push.apply( results, matcherOut );			}		}	});}function matcherFromTokens( tokens ) {	var checkContext, matcher, j,		len = tokens.length,		leadingRelative = Expr.relative[ tokens[0].type ],		implicitRelative = leadingRelative || Expr.relative[" "],		i = leadingRelative ? 1 : 0,		// The foundational matcher ensures that elements are reachable from top-level context(s)		matchContext = addCombinator( function( elem ) {			return elem === checkContext;		}, implicitRelative, true ),		matchAnyContext = addCombinator( function( elem ) {			return indexOf( checkContext, elem ) &gt; -1;		}, implicitRelative, true ),		matchers = [ function( elem, context, xml ) {			var ret = ( !leadingRelative &amp;&amp; ( xml || context !== outermostContext ) ) || (				(checkContext = context).nodeType ?					matchContext( elem, context, xml ) :					matchAnyContext( elem, context, xml ) );			// Avoid hanging onto element (issue #299)			checkContext = null;			return ret;		} ];	for ( ; i &lt; len; i++ ) {		if ( (matcher = Expr.relative[ tokens[i].type ]) ) {			matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];		} else {			matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );			// Return special upon seeing a positional matcher			if ( matcher[ expando ] ) {				// Find the next relative operator (if any) for proper handling				j = ++i;				for ( ; j &lt; len; j++ ) {					if ( Expr.relative[ tokens[j].type ] ) {						break;					}				}				return setMatcher(					i &gt; 1 &amp;&amp; elementMatcher( matchers ),					i &gt; 1 &amp;&amp; toSelector(						// If the preceding token was a descendant combinator, insert an implicit any-element `*`						tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })					).replace( rtrim, "$1" ),					matcher,					i &lt; j &amp;&amp; matcherFromTokens( tokens.slice( i, j ) ),					j &lt; len &amp;&amp; matcherFromTokens( (tokens = tokens.slice( j )) ),					j &lt; len &amp;&amp; toSelector( tokens )				);			}			matchers.push( matcher );		}	}	return elementMatcher( matchers );}function matcherFromGroupMatchers( elementMatchers, setMatchers ) {	var bySet = setMatchers.length &gt; 0,		byElement = elementMatchers.length &gt; 0,		superMatcher = function( seed, context, xml, results, outermost ) {			var elem, j, matcher,				matchedCount = 0,				i = "0",				unmatched = seed &amp;&amp; [],				setMatched = [],				contextBackup = outermostContext,				// We must always have either seed elements or outermost context				elems = seed || byElement &amp;&amp; Expr.find["TAG"]( "*", outermost ),				// Use integer dirruns iff this is the outermost matcher				dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),				len = elems.length;			if ( outermost ) {				outermostContext = context !== document &amp;&amp; context;			}			// Add elements passing elementMatchers directly to results			// Keep `i` a string if there are no elements so `matchedCount` will be "00" below			// Support: IE&lt;9, Safari			// Tolerate NodeList properties (IE: "length"; Safari: &lt;number&gt;) matching elements by id			for ( ; i !== len &amp;&amp; (elem = elems[i]) != null; i++ ) {				if ( byElement &amp;&amp; elem ) {					j = 0;					while ( (matcher = elementMatchers[j++]) ) {						if ( matcher( elem, context, xml ) ) {							results.push( elem );							break;						}					}					if ( outermost ) {						dirruns = dirrunsUnique;					}				}				// Track unmatched elements for set filters				if ( bySet ) {					// They will have gone through all possible matchers					if ( (elem = !matcher &amp;&amp; elem) ) {						matchedCount--;					}					// Lengthen the array for every element, matched or not					if ( seed ) {						unmatched.push( elem );					}				}			}			// Apply set filters to unmatched elements			matchedCount += i;			if ( bySet &amp;&amp; i !== matchedCount ) {				j = 0;				while ( (matcher = setMatchers[j++]) ) {					matcher( unmatched, setMatched, context, xml );				}				if ( seed ) {					// Reintegrate element matches to eliminate the need for sorting					if ( matchedCount &gt; 0 ) {						while ( i-- ) {							if ( !(unmatched[i] || setMatched[i]) ) {								setMatched[i] = pop.call( results );							}						}					}					// Discard index placeholder values to get only actual matches					setMatched = condense( setMatched );				}				// Add matches to results				push.apply( results, setMatched );				// Seedless set matches succeeding multiple successful matchers stipulate sorting				if ( outermost &amp;&amp; !seed &amp;&amp; setMatched.length &gt; 0 &amp;&amp;					( matchedCount + setMatchers.length ) &gt; 1 ) {					Sizzle.uniqueSort( results );				}			}			// Override manipulation of globals by nested matchers			if ( outermost ) {				dirruns = dirrunsUnique;				outermostContext = contextBackup;			}			return unmatched;		};	return bySet ?		markFunction( superMatcher ) :		superMatcher;}compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {	var i,		setMatchers = [],		elementMatchers = [],		cached = compilerCache[ selector + " " ];	if ( !cached ) {		// Generate a function of recursive functions that can be used to check each element		if ( !match ) {			match = tokenize( selector );		}		i = match.length;		while ( i-- ) {			cached = matcherFromTokens( match[i] );			if ( cached[ expando ] ) {				setMatchers.push( cached );			} else {				elementMatchers.push( cached );			}		}		// Cache the compiled function		cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );		// Save selector and tokenization		cached.selector = selector;	}	return cached;};/** * A low-level selection function that works with Sizzle''s compiled *  selector functions * @param {String|Function} selector A selector or a pre-compiled *  selector function built with Sizzle.compile * @param {Element} context * @param {Array} [results] * @param {Array} [seed] A set of elements to match against */select = Sizzle.select = function( selector, context, results, seed ) {	var i, tokens, token, type, find,		compiled = typeof selector === "function" &amp;&amp; selector,		match = !seed &amp;&amp; tokenize( (selector = compiled.selector || selector) );	results = results || [];	// Try to minimize operations if there is no seed and only one group	if ( match.length === 1 ) {		// Take a shortcut and set the context if the root selector is an ID		tokens = match[0] = match[0].slice( 0 );		if ( tokens.length &gt; 2 &amp;&amp; (token = tokens[0]).type === "ID" &amp;&amp;				support.getById &amp;&amp; context.nodeType === 9 &amp;&amp; documentIsHTML &amp;&amp;				Expr.relative[ tokens[1].type ] ) {			context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];			if ( !context ) {				return results;			// Precompiled matchers will still verify ancestry, so step up a level			} else if ( compiled ) {				context = context.parentNode;			}			selector = selector.slice( tokens.shift().value.length );		}		// Fetch a seed set for right-to-left matching		i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;		while ( i-- ) {			token = tokens[i];			// Abort if we hit a combinator			if ( Expr.relative[ (type = token.type) ] ) {				break;			}			if ( (find = Expr.find[ type ]) ) {				// Search, expanding context for leading sibling combinators				if ( (seed = find(					token.matches[0].replace( runescape, funescape ),					rsibling.test( tokens[0].type ) &amp;&amp; testContext( context.parentNode ) || context				)) ) {					// If seed is empty or no tokens remain, we can return early					tokens.splice( i, 1 );					selector = seed.length &amp;&amp; toSelector( tokens );					if ( !selector ) {						push.apply( results, seed );						return results;					}					break;				}			}		}	}	// Compile and execute a filtering function if one is not provided	// Provide `match` to avoid retokenization if we modified the selector above	( compiled || compile( selector, match ) )(		seed,		context,		!documentIsHTML,		results,		rsibling.test( selector ) &amp;&amp; testContext( context.parentNode ) || context	);	return results;};// One-time assignments// Sort stabilitysupport.sortStable = expando.split("").sort( sortOrder ).join("") === expando;// Support: Chrome 14-35+// Always assume duplicates if they aren''t passed to the comparison functionsupport.detectDuplicates = !!hasDuplicate;// Initialize against the default documentsetDocument();// Support: Webkit&lt;537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)// Detached nodes confoundingly follow *each other*support.sortDetached = assert(function( div1 ) {	// Should return 1, but returns 4 (following)	return div1.compareDocumentPosition( document.createElement("div") ) &amp; 1;});// Support: IE&lt;8// Prevent attribute/property "interpolation"// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspxif ( !assert(function( div ) {	div.innerHTML = "&lt;a href=''#''&gt;&lt;/a&gt;";	return div.firstChild.getAttribute("href") === "#" ;}) ) {	addHandle( "type|href|height|width", function( elem, name, isXML ) {		if ( !isXML ) {			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );		}	});}// Support: IE&lt;9// Use defaultValue in place of getAttribute("value")if ( !support.attributes || !assert(function( div ) {	div.innerHTML = "&lt;input/&gt;";	div.firstChild.setAttribute( "value", "" );	return div.firstChild.getAttribute( "value" ) === "";}) ) {	addHandle( "value", function( elem, name, isXML ) {		if ( !isXML &amp;&amp; elem.nodeName.toLowerCase() === "input" ) {			return elem.defaultValue;		}	});}// Support: IE&lt;9// Use getAttributeNode to fetch booleans when getAttribute liesif ( !assert(function( div ) {	return div.getAttribute("disabled") == null;}) ) {	addHandle( booleans, function( elem, name, isXML ) {		var val;		if ( !isXML ) {			return elem[ name ] === true ? name.toLowerCase() :					(val = elem.getAttributeNode( name )) &amp;&amp; val.specified ?					val.value :				null;		}	});}return Sizzle;})( window );jQuery.find = Sizzle;jQuery.expr = Sizzle.selectors;jQuery.expr[":"] = jQuery.expr.pseudos;jQuery.unique = Sizzle.uniqueSort;jQuery.text = Sizzle.getText;jQuery.isXMLDoc = Sizzle.isXML;jQuery.contains = Sizzle.contains;var rneedsContext = jQuery.expr.match.needsContext;var rsingleTag = (/^&lt;(\w+)\s*\/?&gt;(?:&lt;\/\1&gt;|)$/);var risSimple = /^.[^:#\[\.,]*$/;// Implement the identical functionality for filter and notfunction winnow( elements, qualifier, not ) {	if ( jQuery.isFunction( qualifier ) ) {		return jQuery.grep( elements, function( elem, i ) {			/* jshint -W018 */			return !!qualifier.call( elem, i, elem ) !== not;		});	}	if ( qualifier.nodeType ) {		return jQuery.grep( elements, function( elem ) {			return ( elem === qualifier ) !== not;		});	}	if ( typeof qualifier === "string" ) {		if ( risSimple.test( qualifier ) ) {			return jQuery.filter( qualifier, elements, not );		}		qualifier = jQuery.filter( qualifier, elements );	}	return jQuery.grep( elements, function( elem ) {		return ( jQuery.inArray( elem, qualifier ) &gt;= 0 ) !== not;	});}jQuery.filter = function( expr, elems, not ) {	var elem = elems[ 0 ];	if ( not ) {		expr = ":not(" + expr + ")";	}	return elems.length === 1 &amp;&amp; elem.nodeType === 1 ?		jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :		jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {			return elem.nodeType === 1;		}));};jQuery.fn.extend({	find: function( selector ) {		var i,			ret = [],			self = this,			len = self.length;		if ( typeof selector !== "string" ) {			return this.pushStack( jQuery( selector ).filter(function() {				for ( i = 0; i &lt; len; i++ ) {					if ( jQuery.contains( self[ i ], this ) ) {						return true;					}				}			}) );		}		for ( i = 0; i &lt; len; i++ ) {			jQuery.find( selector, self[ i ], ret );		}		// Needed because $( selector, context ) becomes $( context ).find( selector )		ret = this.pushStack( len &gt; 1 ? jQuery.unique( ret ) : ret );		ret.selector = this.selector ? this.selector + " " + selector : selector;		return ret;	},	filter: function( selector ) {		return this.pushStack( winnow(this, selector || [], false) );	},	not: function( selector ) {		return this.pushStack( winnow(this, selector || [], true) );	},	is: function( selector ) {		return !!winnow(			this,			// If this is a positional/relative selector, check membership in the returned set			// so $("p:first").is("p:last") won''t return true for a doc with two "p".			typeof selector === "string" &amp;&amp; rneedsContext.test( selector ) ?				jQuery( selector ) :				selector || [],			false		).length;	}});// Initialize a jQuery object// A central reference to the root jQuery(document)var rootjQuery,	// Use the correct document accordingly with window argument (sandbox)	document = window.document,	// A simple way to check for HTML strings	// Prioritize #id over &lt;tag&gt; to avoid XSS via location.hash (#9521)	// Strict HTML recognition (#11290: must start with &lt;)	rquickExpr = /^(?:\s*(&lt;[\w\W]+&gt;)[^&gt;]*|#([\w-]*))$/,	init = jQuery.fn.init = function( selector, context ) {		var match, elem;		// HANDLE: $(""), $(null), $(undefined), $(false)		if ( !selector ) {			return this;		}		// Handle HTML strings		if ( typeof selector === "string" ) {			if ( selector.charAt(0) === "&lt;" &amp;&amp; selector.charAt( selector.length - 1 ) === "&gt;" &amp;&amp; selector.length &gt;= 3 ) {				// Assume that strings that start and end with &lt;&gt; are HTML and skip the regex check				match = [ null, selector, null ];			} else {				match = rquickExpr.exec( selector );			}			// Match html or make sure no context is specified for #id			if ( match &amp;&amp; (match[1] || !context) ) {				// HANDLE: $(html) -&gt; $(array)				if ( match[1] ) {					context = context instanceof jQuery ? context[0] : context;					// scripts is true for back-compat					// Intentionally let the error be thrown if parseHTML is not present					jQuery.merge( this, jQuery.parseHTML(						match[1],						context &amp;&amp; context.nodeType ? context.ownerDocument || context : document,						true					) );					// HANDLE: $(html, props)					if ( rsingleTag.test( match[1] ) &amp;&amp; jQuery.isPlainObject( context ) ) {						for ( match in context ) {							// Properties of context are called as methods if possible							if ( jQuery.isFunction( this[ match ] ) ) {								this[ match ]( context[ match ] );							// ...and otherwise set as attributes							} else {								this.attr( match, context[ match ] );							}						}					}					return this;				// HANDLE: $(#id)				} else {					elem = document.getElementById( match[2] );					// Check parentNode to catch when Blackberry 4.6 returns					// nodes that are no longer in the document #6963					if ( elem &amp;&amp; elem.parentNode ) {						// Handle the case where IE and Opera return items						// by name instead of ID						if ( elem.id !== match[2] ) {							return rootjQuery.find( selector );						}						// Otherwise, we inject the element directly into the jQuery object						this.length = 1;						this[0] = elem;					}					this.context = document;					this.selector = selector;					return this;				}			// HANDLE: $(expr, $(...))			} else if ( !context || context.jquery ) {				return ( context || rootjQuery ).find( selector );			// HANDLE: $(expr, context)			// (which is just equivalent to: $(context).find(expr)			} else {				return this.constructor( context ).find( selector );			}		// HANDLE: $(DOMElement)		} else if ( selector.nodeType ) {			this.context = this[0] = selector;			this.length = 1;			return this;		// HANDLE: $(function)		// Shortcut for document ready		} else if ( jQuery.isFunction( selector ) ) {			return typeof rootjQuery.ready !== "undefined" ?				rootjQuery.ready( selector ) :				// Execute immediately if ready is not present				selector( jQuery );		}		if ( selector.selector !== undefined ) {			this.selector = selector.selector;			this.context = selector.context;		}		return jQuery.makeArray( selector, this );	};// Give the init function the jQuery prototype for later instantiationinit.prototype = jQuery.fn;// Initialize central referencerootjQuery = jQuery( document );var rparentsprev = /^(?:parents|prev(?:Until|All))/,	// methods guaranteed to produce a unique set when starting from a unique set	guaranteedUnique = {		children: true,		contents: true,		next: true,		prev: true	};jQuery.extend({	dir: function( elem, dir, until ) {		var matched = [],			cur = elem[ dir ];		while ( cur &amp;&amp; cur.nodeType !== 9 &amp;&amp; (until === undefined || cur.nodeType !== 1 || !jQuery( cur ).is( until )) ) {			if ( cur.nodeType === 1 ) {				matched.push( cur );			}			cur = cur[dir];		}		return matched;	},	sibling: function( n, elem ) {		var r = [];		for ( ; n; n = n.nextSibling ) {			if ( n.nodeType === 1 &amp;&amp; n !== elem ) {				r.push( n );			}		}		return r;	}});jQuery.fn.extend({	has: function( target ) {		var i,			targets = jQuery( target, this ),			len = targets.length;		return this.filter(function() {			for ( i = 0; i &lt; len; i++ ) {				if ( jQuery.contains( this, targets[i] ) ) {					return true;				}			}		});	},	closest: function( selectors, context ) {		var cur,			i = 0,			l = this.length,			matched = [],			pos = rneedsContext.test( selectors ) || typeof selectors !== "string" ?				jQuery( selectors, context || this.context ) :				0;		for ( ; i &lt; l; i++ ) {			for ( cur = this[i]; cur &amp;&amp; cur !== context; cur = cur.parentNode ) {				// Always skip document fragments				if ( cur.nodeType &lt; 11 &amp;&amp; (pos ?					pos.index(cur) &gt; -1 :					// Don''t pass non-elements to Sizzle					cur.nodeType === 1 &amp;&amp;						jQuery.find.matchesSelector(cur, selectors)) ) {					matched.push( cur );					break;				}			}		}		return this.pushStack( matched.length &gt; 1 ? jQuery.unique( matched ) : matched );	},	// Determine the position of an element within	// the matched set of elements	index: function( elem ) {		// No argument, return index in parent		if ( !elem ) {			return ( this[0] &amp;&amp; this[0].parentNode ) ? this.first().prevAll().length : -1;		}		// index in selector		if ( typeof elem === "string" ) {			return jQuery.inArray( this[0], jQuery( elem ) );		}		// Locate the position of the desired element		return jQuery.inArray(			// If it receives a jQuery object, the first element is used			elem.jquery ? elem[0] : elem, this );	},	add: function( selector, context ) {		return this.pushStack(			jQuery.unique(				jQuery.merge( this.get(), jQuery( selector, context ) )			)		);	},	addBack: function( selector ) {		return this.add( selector == null ?			this.prevObject : this.prevObject.filter(selector)		);	}});function sibling( cur, dir ) {	do {		cur = cur[ dir ];	} while ( cur &amp;&amp; cur.nodeType !== 1 );	return cur;}jQuery.each({	parent: function( elem ) {		var parent = elem.parentNode;		return parent &amp;&amp; parent.nodeType !== 11 ? parent : null;	},	parents: function( elem ) {		return jQuery.dir( elem, "parentNode" );	},	parentsUntil: function( elem, i, until ) {		return jQuery.dir( elem, "parentNode", until );	},	next: function( elem ) {		return sibling( elem, "nextSibling" );	},	prev: function( elem ) {		return sibling( elem, "previousSibling" );	},	nextAll: function( elem ) {		return jQuery.dir( elem, "nextSibling" );	},	prevAll: function( elem ) {		return jQuery.dir( elem, "previousSibling" );	},	nextUntil: function( elem, i, until ) {		return jQuery.dir( elem, "nextSibling", until );	},	prevUntil: function( elem, i, until ) {		return jQuery.dir( elem, "previousSibling", until );	},	siblings: function( elem ) {		return jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );	},	children: function( elem ) {		return jQuery.sibling( elem.firstChild );	},	contents: function( elem ) {		return jQuery.nodeName( elem, "iframe" ) ?			elem.contentDocument || elem.contentWindow.document :			jQuery.merge( [], elem.childNodes );	}}, function( name, fn ) {	jQuery.fn[ name ] = function( until, selector ) {		var ret = jQuery.map( this, fn, until );		if ( name.slice( -5 ) !== "Until" ) {			selector = until;		}		if ( selector &amp;&amp; typeof selector === "string" ) {			ret = jQuery.filter( selector, ret );		}		if ( this.length &gt; 1 ) {			// Remove duplicates			if ( !guaranteedUnique[ name ] ) {				ret = jQuery.unique( ret );			}			// Reverse order for parents* and prev-derivatives			if ( rparentsprev.test( name ) ) {				ret = ret.reverse();			}		}		return this.pushStack( ret );	};});var rnotwhite = (/\S+/g);// String to Object options format cachevar optionsCache = {};// Convert String-formatted options into Object-formatted ones and store in cachefunction createOptions( options ) {	var object = optionsCache[ options ] = {};	jQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {		object[ flag ] = true;	});	return object;}/* * Create a callback list using the following parameters: * *	options: an optional list of space-separated options that will change how *			the callback list behaves or a more traditional option object * * By default a callback list will act like an event callback list and can be * "fired" multiple times. * * Possible options: * *	once:			will ensure the callback list can only be fired once (like a Deferred) * *	memory:			will keep track of previous values and will call any callback added *					after the list has been fired right away with the latest "memorized" *					values (like a Deferred) * *	unique:			will ensure a callback can only be added once (no duplicate in the list) * *	stopOnFalse:	interrupt callings when a callback returns false * */jQuery.Callbacks = function( options ) {	// Convert options from String-formatted to Object-formatted if needed	// (we check in cache first)	options = typeof options === "string" ?		( optionsCache[ options ] || createOptions( options ) ) :		jQuery.extend( {}, options );	var // Flag to know if list is currently firing		firing,		// Last fire value (for non-forgettable lists)		memory,		// Flag to know if list was already fired		fired,		// End of the loop when firing		firingLength,		// Index of currently firing callback (modified by remove if needed)		firingIndex,		// First callback to fire (used internally by add and fireWith)		firingStart,		// Actual callback list		list = [],		// Stack of fire calls for repeatable lists		stack = !options.once &amp;&amp; [],		// Fire callbacks		fire = function( data ) {			memory = options.memory &amp;&amp; data;			fired = true;			firingIndex = firingStart || 0;			firingStart = 0;			firingLength = list.length;			firing = true;			for ( ; list &amp;&amp; firingIndex &lt; firingLength; firingIndex++ ) {				if ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false &amp;&amp; options.stopOnFalse ) {					memory = false; // To prevent further calls using add					break;				}			}			firing = false;			if ( list ) {				if ( stack ) {					if ( stack.length ) {						fire( stack.shift() );					}				} else if ( memory ) {					list = [];				} else {					self.disable();				}			}		},		// Actual Callbacks object		self = {			// Add a callback or a collection of callbacks to the list			add: function() {				if ( list ) {					// First, we save the current length					var start = list.length;					(function add( args ) {						jQuery.each( args, function( _, arg ) {							var type = jQuery.type( arg );							if ( type === "function" ) {								if ( !options.unique || !self.has( arg ) ) {									list.push( arg );								}							} else if ( arg &amp;&amp; arg.length &amp;&amp; type !== "string" ) {								// Inspect recursively								add( arg );							}						});					})( arguments );					// Do we need to add the callbacks to the					// current firing batch?					if ( firing ) {						firingLength = list.length;					// With memory, if we''re not firing then					// we should call right away					} else if ( memory ) {						firingStart = start;						fire( memory );					}				}				return this;			},			// Remove a callback from the list			remove: function() {				if ( list ) {					jQuery.each( arguments, function( _, arg ) {						var index;						while ( ( index = jQuery.inArray( arg, list, index ) ) &gt; -1 ) {							list.splice( index, 1 );							// Handle firing indexes							if ( firing ) {								if ( index &lt;= firingLength ) {									firingLength--;								}								if ( index &lt;= firingIndex ) {									firingIndex--;								}							}						}					});				}				return this;			},			// Check if a given callback is in the list.			// If no argument is given, return whether or not list has callbacks attached.			has: function( fn ) {				return fn ? jQuery.inArray( fn, list ) &gt; -1 : !!( list &amp;&amp; list.length );			},			// Remove all callbacks from the list			empty: function() {				list = [];				firingLength = 0;				return this;			},			// Have the list do nothing anymore			disable: function() {				list = stack = memory = undefined;				return this;			},			// Is it disabled?			disabled: function() {				return !list;			},			// Lock the list in its current state			lock: function() {				stack = undefined;				if ( !memory ) {					self.disable();				}				return this;			},			// Is it locked?			locked: function() {				return !stack;			},			// Call all callbacks with the given context and arguments			fireWith: function( context, args ) {				if ( list &amp;&amp; ( !fired || stack ) ) {					args = args || [];					args = [ context, args.slice ? args.slice() : args ];					if ( firing ) {						stack.push( args );					} else {						fire( args );					}				}				return this;			},			// Call all the callbacks with the given arguments			fire: function() {				self.fireWith( this, arguments );				return this;			},			// To know if the callbacks have already been called at least once			fired: function() {				return !!fired;			}		};	return self;};jQuery.extend({	Deferred: function( func ) {		var tuples = [				// action, add listener, listener list, final state				[ "resolve", "done", jQuery.Callbacks("once memory"), "resolved" ],				[ "reject", "fail", jQuery.Callbacks("once memory"), "rejected" ],				[ "notify", "progress", jQuery.Callbacks("memory") ]			],			state = "pending",			promise = {				state: function() {					return state;				},				always: function() {					deferred.done( arguments ).fail( arguments );					return this;				},				then: function( /* fnDone, fnFail, fnProgress */ ) {					var fns = arguments;					return jQuery.Deferred(function( newDefer ) {						jQuery.each( tuples, function( i, tuple ) {							var fn = jQuery.isFunction( fns[ i ] ) &amp;&amp; fns[ i ];							// deferred[ done | fail | progress ] for forwarding actions to newDefer							deferred[ tuple[1] ](function() {								var returned = fn &amp;&amp; fn.apply( this, arguments );								if ( returned &amp;&amp; jQuery.isFunction( returned.promise ) ) {									returned.promise()										.done( newDefer.resolve )										.fail( newDefer.reject )										.progress( newDefer.notify );								} else {									newDefer[ tuple[ 0 ] + "With" ]( this === promise ? newDefer.promise() : this, fn ? [ returned ] : arguments );								}							});						});						fns = null;					}).promise();				},				// Get a promise for this deferred				// If obj is provided, the promise aspect is added to the object				promise: function( obj ) {					return obj != null ? jQuery.extend( obj, promise ) : promise;				}			},			deferred = {};		// Keep pipe for back-compat		promise.pipe = promise.then;		// Add list-specific methods		jQuery.each( tuples, function( i, tuple ) {			var list = tuple[ 2 ],				stateString = tuple[ 3 ];			// promise[ done | fail | progress ] = list.add			promise[ tuple[1] ] = list.add;			// Handle state			if ( stateString ) {				list.add(function() {					// state = [ resolved | rejected ]					state = stateString;				// [ reject_list | resolve_list ].disable; progress_list.lock				}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );			}			// deferred[ resolve | reject | notify ]			deferred[ tuple[0] ] = function() {				deferred[ tuple[0] + "With" ]( this === deferred ? promise : this, arguments );				return this;			};			deferred[ tuple[0] + "With" ] = list.fireWith;		});		// Make the deferred a promise		promise.promise( deferred );		// Call given func if any		if ( func ) {			func.call( deferred, deferred );		}		// All done!		return deferred;	},	// Deferred helper	when: function( subordinate /* , ..., subordinateN */ ) {		var i = 0,			resolveValues = slice.call( arguments ),			length = resolveValues.length,			// the count of uncompleted subordinates			remaining = length !== 1 || ( subordinate &amp;&amp; jQuery.isFunction( subordinate.promise ) ) ? length : 0,			// the master Deferred. If resolveValues consist of only a single Deferred, just use that.			deferred = remaining === 1 ? subordinate : jQuery.Deferred(),			// Update function for both resolve and progress values			updateFunc = function( i, contexts, values ) {				return function( value ) {					contexts[ i ] = this;					values[ i ] = arguments.length &gt; 1 ? slice.call( arguments ) : value;					if ( values === progressValues ) {						deferred.notifyWith( contexts, values );					} else if ( !(--remaining) ) {						deferred.resolveWith( contexts, values );					}				};			},			progressValues, progressContexts, resolveContexts;		// add listeners to Deferred subordinates; treat others as resolved		if ( length &gt; 1 ) {			progressValues = new Array( length );			progressContexts = new Array( length );			resolveContexts = new Array( length );			for ( ; i &lt; length; i++ ) {				if ( resolveValues[ i ] &amp;&amp; jQuery.isFunction( resolveValues[ i ].promise ) ) {					resolveValues[ i ].promise()						.done( updateFunc( i, resolveContexts, resolveValues ) )						.fail( deferred.reject )						.progress( updateFunc( i, progressContexts, progressValues ) );				} else {					--remaining;				}			}		}		// if we''re not waiting on anything, resolve the master		if ( !remaining ) {			deferred.resolveWith( resolveContexts, resolveValues );		}		return deferred.promise();	}});// The deferred used on DOM readyvar readyList;jQuery.fn.ready = function( fn ) {	// Add the callback	jQuery.ready.promise().done( fn );	return this;};jQuery.extend({	// Is the DOM ready to be used? Set to true once it occurs.	isReady: false,	// A counter to track how many items to wait for before	// the ready event fires. See #6781	readyWait: 1,	// Hold (or release) the ready event	holdReady: function( hold ) {		if ( hold ) {			jQuery.readyWait++;		} else {			jQuery.ready( true );		}	},	// Handle when the DOM is ready	ready: function( wait ) {		// Abort if there are pending holds or we''re already ready		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {			return;		}		// Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).		if ( !document.body ) {			return setTimeout( jQuery.ready );		}		// Remember that the DOM is ready		jQuery.isReady = true;		// If a normal DOM Ready event fired, decrement, and wait if need be		if ( wait !== true &amp;&amp; --jQuery.readyWait &gt; 0 ) {			return;		}		// If there are functions bound, to execute		readyList.resolveWith( document, [ jQuery ] );		// Trigger any bound ready events		if ( jQuery.fn.triggerHandler ) {			jQuery( document ).triggerHandler( "ready" );			jQuery( document ).off( "ready" );		}	}});/** * Clean-up method for dom ready events */function detach() {	if ( document.addEventListener ) {		document.removeEventListener( "DOMContentLoaded", completed, false );		window.removeEventListener( "load", completed, false );	} else {		document.detachEvent( "onreadystatechange", completed );		window.detachEvent( "onload", completed );	}}/** * The ready event handler and self cleanup method */function completed() {	// readyState === "complete" is good enough for us to call the dom ready in oldIE	if ( document.addEventListener || event.type === "load" || document.readyState === "complete" ) {		detach();		jQuery.ready();	}}jQuery.ready.promise = function( obj ) {	if ( !readyList ) {		readyList = jQuery.Deferred();		// Catch cases where $(document).ready() is called after the browser event has already occurred.		// we once tried to use readyState "interactive" here, but it caused issues like the one		// discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15		if ( document.readyState === "complete" ) {			// Handle it asynchronously to allow scripts the opportunity to delay ready			setTimeout( jQuery.ready );		// Standards-based browsers support DOMContentLoaded		} else if ( document.addEventListener ) {			// Use the handy event callback			document.addEventListener( "DOMContentLoaded", completed, false );			// A fallback to window.onload, that will always work			window.addEventListener( "load", completed, false );		// If IE event model is used		} else {			// Ensure firing before onload, maybe late but safe also for iframes			document.attachEvent( "onreadystatechange", completed );			// A fallback to window.onload, that will always work			window.attachEvent( "onload", completed );			// If IE and not a frame			// continually check to see if the document is ready			var top = false;			try {				top = window.frameElement == null &amp;&amp; document.documentElement;			} catch(e) {}			if ( top &amp;&amp; top.doScroll ) {				(function doScrollCheck() {					if ( !jQuery.isReady ) {						try {							// Use the trick by Diego Perini							// http://javascript.nwbox.com/IEContentLoaded/							top.doScroll("left");						} catch(e) {							return setTimeout( doScrollCheck, 50 );						}						// detach all dom ready events						detach();						// and execute any waiting functions						jQuery.ready();					}				})();			}		}	}	return readyList.promise( obj );};var strundefined = typeof undefined;// Support: IE&lt;9// Iteration over object''s inherited properties before its ownvar i;for ( i in jQuery( support ) ) {	break;}support.ownLast = i !== "0";// Note: most support tests are defined in their respective modules.// false until the test is runsupport.inlineBlockNeedsLayout = false;// Execute ASAP in case we need to set body.style.zoomjQuery(function() {	// Minified: var a,b,c,d	var val, div, body, container;	body = document.getElementsByTagName( "body" )[ 0 ];	if ( !body || !body.style ) {		// Return for frameset docs that don''t have a body		return;	}	// Setup	div = document.createElement( "div" );	container = document.createElement( "div" );	container.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px";	body.appendChild( container ).appendChild( div );	if ( typeof div.style.zoom !== strundefined ) {		// Support: IE&lt;8		// Check if natively block-level elements act like inline-block		// elements when setting their display to ''inline'' and giving		// them layout		div.style.cssText = "display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1";		support.inlineBlockNeedsLayout = val = div.offsetWidth === 3;		if ( val ) {			// Prevent IE 6 from affecting layout for positioned elements #11048			// Prevent IE from shrinking the body in IE 7 mode #12869			// Support: IE&lt;8			body.style.zoom = 1;		}	}	body.removeChild( container );});(function() {	var div = document.createElement( "div" );	// Execute the test only if not already executed in another module.	if (support.deleteExpando == null) {		// Support: IE&lt;9		support.deleteExpando = true;		try {			delete div.test;		} catch( e ) {			support.deleteExpando = false;		}	}	// Null elements to avoid leaks in IE.	div = null;})();/** * Determines whether an object can have data */jQuery.acceptData = function( elem ) {	var noData = jQuery.noData[ (elem.nodeName + " ").toLowerCase() ],		nodeType = +elem.nodeType || 1;	// Do not set data on non-element DOM nodes because it will not be cleared (#8335).	return nodeType !== 1 &amp;&amp; nodeType !== 9 ?		false :		// Nodes accept data unless otherwise specified; rejection can be conditional		!noData || noData !== true &amp;&amp; elem.getAttribute("classid") === noData;};var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,	rmultiDash = /([A-Z])/g;function dataAttr( elem, key, data ) {	// If nothing was found internally, try to fetch any	// data from the HTML5 data-* attribute	if ( data === undefined &amp;&amp; elem.nodeType === 1 ) {		var name = "data-" + key.replace( rmultiDash, "-$1" ).toLowerCase();		data = elem.getAttribute( name );		if ( typeof data === "string" ) {			try {				data = data === "true" ? true :					data === "false" ? false :					data === "null" ? null :					// Only convert to a number if it doesn''t change the string					+data + "" === data ? +data :					rbrace.test( data ) ? jQuery.parseJSON( data ) :					data;			} catch( e ) {}			// Make sure we set the data so it isn''t changed later			jQuery.data( elem, key, data );		} else {			data = undefined;		}	}	return data;}// checks a cache object for emptinessfunction isEmptyDataObject( obj ) {	var name;	for ( name in obj ) {		// if the public data object is empty, the private is still empty		if ( name === "data" &amp;&amp; jQuery.isEmptyObject( obj[name] ) ) {			continue;		}		if ( name !== "toJSON" ) {			return false;		}	}	return true;}function internalData( elem, name, data, pvt /* Internal Use Only */ ) {	if ( !jQuery.acceptData( elem ) ) {		return;	}	var ret, thisCache,		internalKey = jQuery.expando,		// We have to handle DOM nodes and JS objects differently because IE6-7		// can''t GC object references properly across the DOM-JS boundary		isNode = elem.nodeType,		// Only DOM nodes need the global jQuery cache; JS object data is		// attached directly to the object so GC can occur automatically		cache = isNode ? jQuery.cache : elem,		// Only defining an ID for JS objects if its cache already exists allows		// the code to shortcut on the same path as a DOM node with no cache		id = isNode ? elem[ internalKey ] : elem[ internalKey ] &amp;&amp; internalKey;	// Avoid doing any more work than we need to when trying to get data on an	// object that has no data at all	if ( (!id || !cache[id] || (!pvt &amp;&amp; !cache[id].data)) &amp;&amp; data === undefined &amp;&amp; typeof name === "string" ) {		return;	}	if ( !id ) {		// Only DOM nodes need a new unique ID for each element since their data		// ends up in the global cache		if ( isNode ) {			id = elem[ internalKey ] = deletedIds.pop() || jQuery.guid++;		} else {			id = internalKey;		}	}	if ( !cache[ id ] ) {		// Avoid exposing jQuery metadata on plain JS objects when the object		// is serialized using JSON.stringify		cache[ id ] = isNode ? {} : { toJSON: jQuery.noop };	}	// An object can be passed to jQuery.data instead of a key/value pair; this gets	// shallow copied over onto the existing cache	if ( typeof name === "object" || typeof name === "function" ) {		if ( pvt ) {			cache[ id ] = jQuery.extend( cache[ id ], name );		} else {			cache[ id ].data = jQuery.extend( cache[ id ].data, name );		}	}	thisCache = cache[ id ];	// jQuery data() is stored in a separate object inside the object''s internal data	// cache in order to avoid key collisions between internal data and user-defined	// data.	if ( !pvt ) {		if ( !thisCache.data ) {			thisCache.data = {};		}		thisCache = thisCache.data;	}	if ( data !== undefined ) {		thisCache[ jQuery.camelCase( name ) ] = data;	}	// Check for both converted-to-camel and non-converted data property names	// If a data property was specified	if ( typeof name === "string" ) {		// First Try to find as-is property data		ret = thisCache[ name ];		// Test for null|undefined property data		if ( ret == null ) {			// Try to find the camelCased property			ret = thisCache[ jQuery.camelCase( name ) ];		}	} else {		ret = thisCache;	}	return ret;}function internalRemoveData( elem, name, pvt ) {	if ( !jQuery.acceptData( elem ) ) {		return;	}	var thisCache, i,		isNode = elem.nodeType,		// See jQuery.data for more information		cache = isNode ? jQuery.cache : elem,		id = isNode ? elem[ jQuery.expando ] : jQuery.expando;	// If there is already no cache entry for this object, there is no	// purpose in continuing	if ( !cache[ id ] ) {		return;	}	if ( name ) {		thisCache = pvt ? cache[ id ] : cache[ id ].data;		if ( thisCache ) {			// Support array or space separated string names for data keys			if ( !jQuery.isArray( name ) ) {				// try the string as a key before any manipulation				if ( name in thisCache ) {					name = [ name ];				} else {					// split the camel cased version by spaces unless a key with the spaces exists					name = jQuery.camelCase( name );					if ( name in thisCache ) {						name = [ name ];					} else {						name = name.split(" ");					}				}			} else {				// If "name" is an array of keys...				// When data is initially created, via ("key", "val") signature,				// keys will be converted to camelCase.				// Since there is no way to tell _how_ a key was added, remove				// both plain key and camelCase key. #12786				// This will only penalize the array argument path.				name = name.concat( jQuery.map( name, jQuery.camelCase ) );			}			i = name.length;			while ( i-- ) {				delete thisCache[ name[i] ];			}			// If there is no data left in the cache, we want to continue			// and let the cache object itself get destroyed			if ( pvt ? !isEmptyDataObject(thisCache) : !jQuery.isEmptyObject(thisCache) ) {				return;			}		}	}	// See jQuery.data for more information	if ( !pvt ) {		delete cache[ id ].data;		// Don''t destroy the parent cache unless the internal data object		// had been the only thing left in it		if ( !isEmptyDataObject( cache[ id ] ) ) {			return;		}	}	// Destroy the cache	if ( isNode ) {		jQuery.cleanData( [ elem ], true );	// Use delete when supported for expandos or `cache` is not a window per isWindow (#10080)	/* jshint eqeqeq: false */	} else if ( support.deleteExpando || cache != cache.window ) {		/* jshint eqeqeq: true */		delete cache[ id ];	// When all else fails, null	} else {		cache[ id ] = null;	}}jQuery.extend({	cache: {},	// The following elements (space-suffixed to avoid Object.prototype collisions)	// throw uncatchable exceptions if you attempt to set expando properties	noData: {		"applet ": true,		"embed ": true,		// ...but Flash objects (which have this classid) *can* handle expandos		"object ": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"	},	hasData: function( elem ) {		elem = elem.nodeType ? jQuery.cache[ elem[jQuery.expando] ] : elem[ jQuery.expando ];		return !!elem &amp;&amp; !isEmptyDataObject( elem );	},	data: function( elem, name, data ) {		return internalData( elem, name, data );	},	removeData: function( elem, name ) {		return internalRemoveData( elem, name );	},	// For internal use only.	_data: function( elem, name, data ) {		return internalData( elem, name, data, true );	},	_removeData: function( elem, name ) {		return internalRemoveData( elem, name, true );	}});jQuery.fn.extend({	data: function( key, value ) {		var i, name, data,			elem = this[0],			attrs = elem &amp;&amp; elem.attributes;		// Special expections of .data basically thwart jQuery.access,		// so implement the relevant behavior ourselves		// Gets all values		if ( key === undefined ) {			if ( this.length ) {				data = jQuery.data( elem );				if ( elem.nodeType === 1 &amp;&amp; !jQuery._data( elem, "parsedAttrs" ) ) {					i = attrs.length;					while ( i-- ) {						// Support: IE11+						// The attrs elements can be null (#14894)						if ( attrs[ i ] ) {							name = attrs[ i ].name;							if ( name.indexOf( "data-" ) === 0 ) {								name = jQuery.camelCase( name.slice(5) );								dataAttr( elem, name, data[ name ] );							}						}					}					jQuery._data( elem, "parsedAttrs", true );				}			}			return data;		}		// Sets multiple values		if ( typeof key === "object" ) {			return this.each(function() {				jQuery.data( this, key );			});		}		return arguments.length &gt; 1 ?			// Sets one value			this.each(function() {				jQuery.data( this, key, value );			}) :			// Gets one value			// Try to fetch any internally stored data first			elem ? dataAttr( elem, key, jQuery.data( elem, key ) ) : undefined;	},	removeData: function( key ) {		return this.each(function() {			jQuery.removeData( this, key );		});	}});jQuery.extend({	queue: function( elem, type, data ) {		var queue;		if ( elem ) {			type = ( type || "fx" ) + "queue";			queue = jQuery._data( elem, type );			// Speed up dequeue by getting out quickly if this is just a lookup			if ( data ) {				if ( !queue || jQuery.isArray(data) ) {					queue = jQuery._data( elem, type, jQuery.makeArray(data) );				} else {					queue.push( data );				}			}			return queue || [];		}	},	dequeue: function( elem, type ) {		type = type || "fx";		var queue = jQuery.queue( elem, type ),			startLength = queue.length,			fn = queue.shift(),			hooks = jQuery._queueHooks( elem, type ),			next = function() {				jQuery.dequeue( elem, type );			};		// If the fx queue is dequeued, always remove the progress sentinel		if ( fn === "inprogress" ) {			fn = queue.shift();			startLength--;		}		if ( fn ) {			// Add a progress sentinel to prevent the fx queue from being			// automatically dequeued			if ( type === "fx" ) {				queue.unshift( "inprogress" );			}			// clear up the last queue stop function			delete hooks.stop;			fn.call( elem, next, hooks );		}		if ( !startLength &amp;&amp; hooks ) {			hooks.empty.fire();		}	},	// not intended for public consumption - generates a queueHooks object, or returns the current one	_queueHooks: function( elem, type ) {		var key = type + "queueHooks";		return jQuery._data( elem, key ) || jQuery._data( elem, key, {			empty: jQuery.Callbacks("once memory").add(function() {				jQuery._removeData( elem, type + "queue" );				jQuery._removeData( elem, key );			})		});	}});jQuery.fn.extend({	queue: function( type, data ) {		var setter = 2;		if ( typeof type !== "string" ) {			data = type;			type = "fx";			setter--;		}		if ( arguments.length &lt; setter ) {			return jQuery.queue( this[0], type );		}		return data === undefined ?			this :			this.each(function() {				var queue = jQuery.queue( this, type, data );				// ensure a hooks for this queue				jQuery._queueHooks( this, type );				if ( type === "fx" &amp;&amp; queue[0] !== "inprogress" ) {					jQuery.dequeue( this, type );				}			});	},	dequeue: function( type ) {		return this.each(function() {			jQuery.dequeue( this, type );		});	},	clearQueue: function( type ) {		return this.queue( type || "fx", [] );	},	// Get a promise resolved when queues of a certain type	// are emptied (fx is the type by default)	promise: function( type, obj ) {		var tmp,			count = 1,			defer = jQuery.Deferred(),			elements = this,			i = this.length,			resolve = function() {				if ( !( --count ) ) {					defer.resolveWith( elements, [ elements ] );				}			};		if ( typeof type !== "string" ) {			obj = type;			type = undefined;		}		type = type || "fx";		while ( i-- ) {			tmp = jQuery._data( elements[ i ], type + "queueHooks" );			if ( tmp &amp;&amp; tmp.empty ) {				count++;				tmp.empty.add( resolve );			}		}		resolve();		return defer.promise( obj );	}});var pnum = (/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/).source;var cssExpand = [ "Top", "Right", "Bottom", "Left" ];var isHidden = function( elem, el ) {		// isHidden might be called from jQuery#filter function;		// in that case, element will be second argument		elem = el || elem;		return jQuery.css( elem, "display" ) === "none" || !jQuery.contains( elem.ownerDocument, elem );	};// Multifunctional method to get and set values of a collection// The value/s can optionally be executed if it''s a functionvar access = jQuery.access = function( elems, fn, key, value, chainable, emptyGet, raw ) {	var i = 0,		length = elems.length,		bulk = key == null;	// Sets many values	if ( jQuery.type( key ) === "object" ) {		chainable = true;		for ( i in key ) {			jQuery.access( elems, fn, i, key[i], true, emptyGet, raw );		}	// Sets one value	} else if ( value !== undefined ) {		chainable = true;		if ( !jQuery.isFunction( value ) ) {			raw = true;		}		if ( bulk ) {			// Bulk operations run against the entire set			if ( raw ) {				fn.call( elems, value );				fn = null;			// ...except when executing function values			} else {				bulk = fn;				fn = function( elem, key, value ) {					return bulk.call( jQuery( elem ), value );				};			}		}		if ( fn ) {			for ( ; i &lt; length; i++ ) {				fn( elems[i], key, raw ? value : value.call( elems[i], i, fn( elems[i], key ) ) );			}		}	}	return chainable ?		elems :		// Gets		bulk ?			fn.call( elems ) :			length ? fn( elems[0], key ) : emptyGet;};var rcheckableType = (/^(?:checkbox|radio)$/i);(function() {	// Minified: var a,b,c	var input = document.createElement( "input" ),		div = document.createElement( "div" ),		fragment = document.createDocumentFragment();	// Setup	div.innerHTML = "  &lt;link/&gt;&lt;table&gt;&lt;/table&gt;&lt;a href=''/a''&gt;a&lt;/a&gt;&lt;input type=''checkbox''/&gt;";	// IE strips leading whitespace when .innerHTML is used	support.leadingWhitespace = div.firstChild.nodeType === 3;	// Make sure that tbody elements aren''t automatically inserted	// IE will insert them into empty tables	support.tbody = !div.getElementsByTagName( "tbody" ).length;	// Make sure that link elements get serialized correctly by innerHTML	// This requires a wrapper element in IE	support.htmlSerialize = !!div.getElementsByTagName( "link" ).length;	// Makes sure cloning an html5 element does not cause problems	// Where outerHTML is undefined, this still works	support.html5Clone =		document.createElement( "nav" ).cloneNode( true ).outerHTML !== "&lt;:nav&gt;&lt;/:nav&gt;";	// Check if a disconnected checkbox will retain its checked	// value of true after appended to the DOM (IE6/7)	input.type = "checkbox";	input.checked = true;	fragment.appendChild( input );	support.appendChecked = input.checked;	// Make sure textarea (and checkbox) defaultValue is properly cloned	// Support: IE6-IE11+	div.innerHTML = "&lt;textarea&gt;x&lt;/textarea&gt;";	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;	// #11217 - WebKit loses check when the name is after the checked attribute	fragment.appendChild( div );	div.innerHTML = "&lt;input type=''radio'' checked=''checked'' name=''t''/&gt;";	// Support: Safari 5.1, iOS 5.1, Android 4.x, Android 2.3	// old WebKit doesn''t clone checked state correctly in fragments	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;	// Support: IE&lt;9	// Opera does not clone events (and typeof div.attachEvent === undefined).	// IE9-10 clones events bound via attachEvent, but they don''t trigger with .click()	support.noCloneEvent = true;	if ( div.attachEvent ) {		div.attachEvent( "onclick", function() {			support.noCloneEvent = false;		});		div.cloneNode( true ).click();	}	// Execute the test only if not already executed in another module.	if (support.deleteExpando == null) {		// Support: IE&lt;9		support.deleteExpando = true;		try {			delete div.test;		} catch( e ) {			support.deleteExpando = false;		}	}})();(function() {	var i, eventName,		div = document.createElement( "div" );	// Support: IE&lt;9 (lack submit/change bubble), Firefox 23+ (lack focusin event)	for ( i in { submit: true, change: true, focusin: true }) {		eventName = "on" + i;		if ( !(support[ i + "Bubbles" ] = eventName in window) ) {			// Beware of CSP restrictions (https://developer.mozilla.org/en/Security/CSP)			div.setAttribute( eventName, "t" );			support[ i + "Bubbles" ] = div.attributes[ eventName ].expando === false;		}	}	// Null elements to avoid leaks in IE.	div = null;})();var rformElems = /^(?:input|select|textarea)$/i,	rkeyEvent = /^key/,	rmouseEvent = /^(?:mouse|pointer|contextmenu)|click/,	rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,	rtypenamespace = /^([^.]*)(?:\.(.+)|)$/;function returnTrue() {	return true;}function returnFalse() {	return false;}function safeActiveElement() {	try {		return document.activeElement;	} catch ( err ) { }}/* * Helper functions for managing events -- not part of the public interface. * Props to Dean Edwards'' addEvent library for many of the ideas. */jQuery.event = {	global: {},	add: function( elem, types, handler, data, selector ) {		var tmp, events, t, handleObjIn,			special, eventHandle, handleObj,			handlers, type, namespaces, origType,			elemData = jQuery._data( elem );		// Don''t attach events to noData or text/comment nodes (but allow plain objects)		if ( !elemData ) {			return;		}		// Caller can pass in an object of custom data in lieu of the handler		if ( handler.handler ) {			handleObjIn = handler;			handler = handleObjIn.handler;			selector = handleObjIn.selector;		}		// Make sure that the handler has a unique ID, used to find/remove it later		if ( !handler.guid ) {			handler.guid = jQuery.guid++;		}		// Init the element''s event structure and main handler, if this is the first		if ( !(events = elemData.events) ) {			events = elemData.events = {};		}		if ( !(eventHandle = elemData.handle) ) {			eventHandle = elemData.handle = function( e ) {				// Discard the second event of a jQuery.event.trigger() and				// when an event is called after a page has unloaded				return typeof jQuery !== strundefined &amp;&amp; (!e || jQuery.event.triggered !== e.type) ?					jQuery.event.dispatch.apply( eventHandle.elem, arguments ) :					undefined;			};			// Add elem as a property of the handle fn to prevent a memory leak with IE non-native events			eventHandle.elem = elem;		}		// Handle multiple events separated by a space		types = ( types || "" ).match( rnotwhite ) || [ "" ];		t = types.length;		while ( t-- ) {			tmp = rtypenamespace.exec( types[t] ) || [];			type = origType = tmp[1];			namespaces = ( tmp[2] || "" ).split( "." ).sort();			// There *must* be a type, no attaching namespace-only handlers			if ( !type ) {				continue;			}			// If event changes its type, use the special event handlers for the changed type			special = jQuery.event.special[ type ] || {};			// If selector defined, determine special event api type, otherwise given type			type = ( selector ? special.delegateType : special.bindType ) || type;			// Update special based on newly reset type			special = jQuery.event.special[ type ] || {};			// handleObj is passed to all event handlers			handleObj = jQuery.extend({				type: type,				origType: origType,				data: data,				handler: handler,				guid: handler.guid,				selector: selector,				needsContext: selector &amp;&amp; jQuery.expr.match.needsContext.test( selector ),				namespace: namespaces.join(".")			}, handleObjIn );			// Init the event handler queue if we''re the first			if ( !(handlers = events[ type ]) ) {				handlers = events[ type ] = [];				handlers.delegateCount = 0;				// Only use addEventListener/attachEvent if the special events handler returns false				if ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {					// Bind the global event handler to the element					if ( elem.addEventListener ) {						elem.addEventListener( type, eventHandle, false );					} else if ( elem.attachEvent ) {						elem.attachEvent( "on" + type, eventHandle );					}				}			}			if ( special.add ) {				special.add.call( elem, handleObj );				if ( !handleObj.handler.guid ) {					handleObj.handler.guid = handler.guid;				}			}			// Add to the element''s handler list, delegates in front			if ( selector ) {				handlers.splice( handlers.delegateCount++, 0, handleObj );			} else {				handlers.push( handleObj );			}			// Keep track of which events have ever been used, for event optimization			jQuery.event.global[ type ] = true;		}		// Nullify elem to prevent memory leaks in IE		elem = null;	},	// Detach an event or set of events from an element	remove: function( elem, types, handler, selector, mappedTypes ) {		var j, handleObj, tmp,			origCount, t, events,			special, handlers, type,			namespaces, origType,			elemData = jQuery.hasData( elem ) &amp;&amp; jQuery._data( elem );		if ( !elemData || !(events = elemData.events) ) {			return;		}		// Once for each type.namespace in types; type may be omitted		types = ( types || "" ).match( rnotwhite ) || [ "" ];		t = types.length;		while ( t-- ) {			tmp = rtypenamespace.exec( types[t] ) || [];			type = origType = tmp[1];			namespaces = ( tmp[2] || "" ).split( "." ).sort();			// Unbind all events (on this namespace, if provided) for the element			if ( !type ) {				for ( type in events ) {					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );				}				continue;			}			special = jQuery.event.special[ type ] || {};			type = ( selector ? special.delegateType : special.bindType ) || type;			handlers = events[ type ] || [];			tmp = tmp[2] &amp;&amp; new RegExp( "(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)" );			// Remove matching events			origCount = j = handlers.length;			while ( j-- ) {				handleObj = handlers[ j ];				if ( ( mappedTypes || origType === handleObj.origType ) &amp;&amp;					( !handler || handler.guid === handleObj.guid ) &amp;&amp;					( !tmp || tmp.test( handleObj.namespace ) ) &amp;&amp;					( !selector || selector === handleObj.selector || selector === "**" &amp;&amp; handleObj.selector ) ) {					handlers.splice( j, 1 );					if ( handleObj.selector ) {						handlers.delegateCount--;					}					if ( special.remove ) {						special.remove.call( elem, handleObj );					}				}			}			// Remove generic event handler if we removed something and no more handlers exist			// (avoids potential for endless recursion during removal of special event handlers)			if ( origCount &amp;&amp; !handlers.length ) {				if ( !special.teardown || special.teardown.call( elem, namespaces, elemData.handle ) === false ) {					jQuery.removeEvent( elem, type, elemData.handle );				}				delete events[ type ];			}		}		// Remove the expando if it''s no longer used		if ( jQuery.isEmptyObject( events ) ) {			delete elemData.handle;			// removeData also checks for emptiness and clears the expando if empty			// so use it instead of delete			jQuery._removeData( elem, "events" );		}	},	trigger: function( event, data, elem, onlyHandlers ) {		var handle, ontype, cur,			bubbleType, special, tmp, i,			eventPath = [ elem || document ],			type = hasOwn.call( event, "type" ) ? event.type : event,			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split(".") : [];		cur = tmp = elem = elem || document;		// Don''t do events on text and comment nodes		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {			return;		}		// focus/blur morphs to focusin/out; ensure we''re not firing them right now		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {			return;		}		if ( type.indexOf(".") &gt;= 0 ) {			// Namespaced trigger; create a regexp to match event type in handle()			namespaces = type.split(".");			type = namespaces.shift();			namespaces.sort();		}		ontype = type.indexOf(":") &lt; 0 &amp;&amp; "on" + type;		// Caller can pass in a jQuery.Event object, Object, or just an event type string		event = event[ jQuery.expando ] ?			event :			new jQuery.Event( type, typeof event === "object" &amp;&amp; event );		// Trigger bitmask: &amp; 1 for native handlers; &amp; 2 for jQuery (always true)		event.isTrigger = onlyHandlers ? 2 : 3;		event.namespace = namespaces.join(".");		event.namespace_re = event.namespace ?			new RegExp( "(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)" ) :			null;		// Clean up the event in case it is being reused		event.result = undefined;		if ( !event.target ) {			event.target = elem;		}		// Clone any incoming data and prepend the event, creating the handler arg list		data = data == null ?			[ event ] :			jQuery.makeArray( data, [ event ] );		// Allow special events to draw outside the lines		special = jQuery.event.special[ type ] || {};		if ( !onlyHandlers &amp;&amp; special.trigger &amp;&amp; special.trigger.apply( elem, data ) === false ) {			return;		}		// Determine event propagation path in advance, per W3C events spec (#9951)		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)		if ( !onlyHandlers &amp;&amp; !special.noBubble &amp;&amp; !jQuery.isWindow( elem ) ) {			bubbleType = special.delegateType || type;			if ( !rfocusMorph.test( bubbleType + type ) ) {				cur = cur.parentNode;			}			for ( ; cur; cur = cur.parentNode ) {				eventPath.push( cur );				tmp = cur;			}			// Only add window if we got to document (e.g., not plain obj or detached DOM)			if ( tmp === (elem.ownerDocument || document) ) {				eventPath.push( tmp.defaultView || tmp.parentWindow || window );			}		}		// Fire handlers on the event path		i = 0;		while ( (cur = eventPath[i++]) &amp;&amp; !event.isPropagationStopped() ) {			event.type = i &gt; 1 ?				bubbleType :				special.bindType || type;			// jQuery handler			handle = ( jQuery._data( cur, "events" ) || {} )[ event.type ] &amp;&amp; jQuery._data( cur, "handle" );			if ( handle ) {				handle.apply( cur, data );			}			// Native handler			handle = ontype &amp;&amp; cur[ ontype ];			if ( handle &amp;&amp; handle.apply &amp;&amp; jQuery.acceptData( cur ) ) {				event.result = handle.apply( cur, data );				if ( event.result === false ) {					event.preventDefault();				}			}		}		event.type = type;		// If nobody prevented the default action, do it now		if ( !onlyHandlers &amp;&amp; !event.isDefaultPrevented() ) {			if ( (!special._default || special._default.apply( eventPath.pop(), data ) === false) &amp;&amp;				jQuery.acceptData( elem ) ) {				// Call a native DOM method on the target with the same name name as the event.				// Can''t use an .isFunction() check here because IE6/7 fails that test.				// Don''t do default actions on window, that''s where global variables be (#6170)				if ( ontype &amp;&amp; elem[ type ] &amp;&amp; !jQuery.isWindow( elem ) ) {					// Don''t re-trigger an onFOO event when we call its FOO() method					tmp = elem[ ontype ];					if ( tmp ) {						elem[ ontype ] = null;					}					// Prevent re-triggering of the same event, since we already bubbled it above					jQuery.event.triggered = type;					try {						elem[ type ]();					} catch ( e ) {						// IE&lt;9 dies on focus/blur to hidden element (#1486,#12518)						// only reproducible on winXP IE8 native, not IE9 in IE8 mode					}					jQuery.event.triggered = undefined;					if ( tmp ) {						elem[ ontype ] = tmp;					}				}			}		}		return event.result;	},	dispatch: function( event ) {		// Make a writable jQuery.Event from the native event object		event = jQuery.event.fix( event );		var i, ret, handleObj, matched, j,			handlerQueue = [],			args = slice.call( arguments ),			handlers = ( jQuery._data( this, "events" ) || {} )[ event.type ] || [],			special = jQuery.event.special[ event.type ] || {};		// Use the fix-ed jQuery.Event rather than the (read-only) native event		args[0] = event;		event.delegateTarget = this;		// Call the preDispatch hook for the mapped type, and let it bail if desired		if ( special.preDispatch &amp;&amp; special.preDispatch.call( this, event ) === false ) {			return;		}		// Determine handlers		handlerQueue = jQuery.event.handlers.call( this, event, handlers );		// Run delegates first; they may want to stop propagation beneath us		i = 0;		while ( (matched = handlerQueue[ i++ ]) &amp;&amp; !event.isPropagationStopped() ) {			event.currentTarget = matched.elem;			j = 0;			while ( (handleObj = matched.handlers[ j++ ]) &amp;&amp; !event.isImmediatePropagationStopped() ) {				// Triggered event must either 1) have no namespace, or				// 2) have namespace(s) a subset or equal to those in the bound event (both can have no namespace).				if ( !event.namespace_re || event.namespace_re.test( handleObj.namespace ) ) {					event.handleObj = handleObj;					event.data = handleObj.data;					ret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )							.apply( matched.elem, args );					if ( ret !== undefined ) {						if ( (event.result = ret) === false ) {							event.preventDefault();							event.stopPropagation();						}					}				}			}		}		// Call the postDispatch hook for the mapped type		if ( special.postDispatch ) {			special.postDispatch.call( this, event );		}		return event.result;	},	handlers: function( event, handlers ) {		var sel, handleObj, matches, i,			handlerQueue = [],			delegateCount = handlers.delegateCount,			cur = event.target;		// Find delegate handlers		// Black-hole SVG &lt;use&gt; instance trees (#13180)		// Avoid non-left-click bubbling in Firefox (#3861)		if ( delegateCount &amp;&amp; cur.nodeType &amp;&amp; (!event.button || event.type !== "click") ) {			/* jshint eqeqeq: false */			for ( ; cur != this; cur = cur.parentNode || this ) {				/* jshint eqeqeq: true */				// Don''t check non-elements (#13208)				// Don''t process clicks on disabled elements (#6911, #8165, #11382, #11764)				if ( cur.nodeType === 1 &amp;&amp; (cur.disabled !== true || event.type !== "click") ) {					matches = [];					for ( i = 0; i &lt; delegateCount; i++ ) {						handleObj = handlers[ i ];						// Don''t conflict with Object.prototype properties (#13203)						sel = handleObj.selector + " ";						if ( matches[ sel ] === undefined ) {							matches[ sel ] = handleObj.needsContext ?								jQuery( sel, this ).index( cur ) &gt;= 0 :								jQuery.find( sel, this, null, [ cur ] ).length;						}						if ( matches[ sel ] ) {							matches.push( handleObj );						}					}					if ( matches.length ) {						handlerQueue.push({ elem: cur, handlers: matches });					}				}			}		}		// Add the remaining (directly-bound) handlers		if ( delegateCount &lt; handlers.length ) {			handlerQueue.push({ elem: this, handlers: handlers.slice( delegateCount ) });		}		return handlerQueue;	},	fix: function( event ) {		if ( event[ jQuery.expando ] ) {			return event;		}		// Create a writable copy of the event object and normalize some properties		var i, prop, copy,			type = event.type,			originalEvent = event,			fixHook = this.fixHooks[ type ];		if ( !fixHook ) {			this.fixHooks[ type ] = fixHook =				rmouseEvent.test( type ) ? this.mouseHooks :				rkeyEvent.test( type ) ? this.keyHooks :				{};		}		copy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;		event = new jQuery.Event( originalEvent );		i = copy.length;		while ( i-- ) {			prop = copy[ i ];			event[ prop ] = originalEvent[ prop ];		}		// Support: IE&lt;9		// Fix target property (#1925)		if ( !event.target ) {			event.target = originalEvent.srcElement || document;		}		// Support: Chrome 23+, Safari?		// Target should not be a text node (#504, #13143)		if ( event.target.nodeType === 3 ) {			event.target = event.target.parentNode;		}		// Support: IE&lt;9		// For mouse/key events, metaKey==false if it''s undefined (#3368, #11328)		event.metaKey = !!event.metaKey;		return fixHook.filter ? fixHook.filter( event, originalEvent ) : event;	},	// Includes some event props shared by KeyEvent and MouseEvent	props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),	fixHooks: {},	keyHooks: {		props: "char charCode key keyCode".split(" "),		filter: function( event, original ) {			// Add which for key events			if ( event.which == null ) {				event.which = original.charCode != null ? original.charCode : original.keyCode;			}			return event;		}	},	mouseHooks: {		props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),		filter: function( event, original ) {			var body, eventDoc, doc,				button = original.button,				fromElement = original.fromElement;			// Calculate pageX/Y if missing and clientX/Y available			if ( event.pageX == null &amp;&amp; original.clientX != null ) {				eventDoc = event.target.ownerDocument || document;				doc = eventDoc.documentElement;				body = eventDoc.body;				event.pageX = original.clientX + ( doc &amp;&amp; doc.scrollLeft || body &amp;&amp; body.scrollLeft || 0 ) - ( doc &amp;&amp; doc.clientLeft || body &amp;&amp; body.clientLeft || 0 );				event.pageY = original.clientY + ( doc &amp;&amp; doc.scrollTop  || body &amp;&amp; body.scrollTop  || 0 ) - ( doc &amp;&amp; doc.clientTop  || body &amp;&amp; body.clientTop  || 0 );			}			// Add relatedTarget, if necessary			if ( !event.relatedTarget &amp;&amp; fromElement ) {				event.relatedTarget = fromElement === event.target ? original.toElement : fromElement;			}			// Add which for click: 1 === left; 2 === middle; 3 === right			// Note: button is not normalized, so don''t use it			if ( !event.which &amp;&amp; button !== undefined ) {				event.which = ( button &amp; 1 ? 1 : ( button &amp; 2 ? 3 : ( button &amp; 4 ? 2 : 0 ) ) );			}			return event;		}	},	special: {		load: {			// Prevent triggered image.load events from bubbling to window.load			noBubble: true		},		focus: {			// Fire native event if possible so blur/focus sequence is correct			trigger: function() {				if ( this !== safeActiveElement() &amp;&amp; this.focus ) {					try {						this.focus();						return false;					} catch ( e ) {						// Support: IE&lt;9						// If we error on focus to hidden element (#1486, #12518),						// let .trigger() run the handlers					}				}			},			delegateType: "focusin"		},		blur: {			trigger: function() {				if ( this === safeActiveElement() &amp;&amp; this.blur ) {					this.blur();					return false;				}			},			delegateType: "focusout"		},		click: {			// For checkbox, fire native event so checked state will be right			trigger: function() {				if ( jQuery.nodeName( this, "input" ) &amp;&amp; this.type === "checkbox" &amp;&amp; this.click ) {					this.click();					return false;				}			},			// For cross-browser consistency, don''t fire native .click() on links			_default: function( event ) {				return jQuery.nodeName( event.target, "a" );			}		},		beforeunload: {			postDispatch: function( event ) {				// Support: Firefox 20+				// Firefox doesn''t alert if the returnValue field is not set.				if ( event.result !== undefined &amp;&amp; event.originalEvent ) {					event.originalEvent.returnValue = event.result;				}			}		}	},	simulate: function( type, elem, event, bubble ) {		// Piggyback on a donor event to simulate a different one.		// Fake originalEvent to avoid donor''s stopPropagation, but if the		// simulated event prevents default then we do the same on the donor.		var e = jQuery.extend(			new jQuery.Event(),			event,			{				type: type,				isSimulated: true,				originalEvent: {}			}		);		if ( bubble ) {			jQuery.event.trigger( e, null, elem );		} else {			jQuery.event.dispatch.call( elem, e );		}		if ( e.isDefaultPrevented() ) {			event.preventDefault();		}	}};jQuery.removeEvent = document.removeEventListener ?	function( elem, type, handle ) {		if ( elem.removeEventListener ) {			elem.removeEventListener( type, handle, false );		}	} :	function( elem, type, handle ) {		var name = "on" + type;		if ( elem.detachEvent ) {			// #8545, #7054, preventing memory leaks for custom events in IE6-8			// detachEvent needed property on element, by name of that event, to properly expose it to GC			if ( typeof elem[ name ] === strundefined ) {				elem[ name ] = null;			}			elem.detachEvent( name, handle );		}	};jQuery.Event = function( src, props ) {	// Allow instantiation without the ''new'' keyword	if ( !(this instanceof jQuery.Event) ) {		return new jQuery.Event( src, props );	}	// Event object	if ( src &amp;&amp; src.type ) {		this.originalEvent = src;		this.type = src.type;		// Events bubbling up the document may have been marked as prevented		// by a handler lower down the tree; reflect the correct value.		this.isDefaultPrevented = src.defaultPrevented ||				src.defaultPrevented === undefined &amp;&amp;				// Support: IE &lt; 9, Android &lt; 4.0				src.returnValue === false ?			returnTrue :			returnFalse;	// Event type	} else {		this.type = src;	}	// Put explicitly provided properties onto the event object	if ( props ) {		jQuery.extend( this, props );	}	// Create a timestamp if incoming event doesn''t have one	this.timeStamp = src &amp;&amp; src.timeStamp || jQuery.now();	// Mark it as fixed	this[ jQuery.expando ] = true;};// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.htmljQuery.Event.prototype = {	isDefaultPrevented: returnFalse,	isPropagationStopped: returnFalse,	isImmediatePropagationStopped: returnFalse,	preventDefault: function() {		var e = this.originalEvent;		this.isDefaultPrevented = returnTrue;		if ( !e ) {			return;		}		// If preventDefault exists, run it on the original event		if ( e.preventDefault ) {			e.preventDefault();		// Support: IE		// Otherwise set the returnValue property of the original event to false		} else {			e.returnValue = false;		}	},	stopPropagation: function() {		var e = this.originalEvent;		this.isPropagationStopped = returnTrue;		if ( !e ) {			return;		}		// If stopPropagation exists, run it on the original event		if ( e.stopPropagation ) {			e.stopPropagation();		}		// Support: IE		// Set the cancelBubble property of the original event to true		e.cancelBubble = true;	},	stopImmediatePropagation: function() {		var e = this.originalEvent;		this.isImmediatePropagationStopped = returnTrue;		if ( e &amp;&amp; e.stopImmediatePropagation ) {			e.stopImmediatePropagation();		}		this.stopPropagation();	}};// Create mouseenter/leave events using mouseover/out and event-time checksjQuery.each({	mouseenter: "mouseover",	mouseleave: "mouseout",	pointerenter: "pointerover",	pointerleave: "pointerout"}, function( orig, fix ) {	jQuery.event.special[ orig ] = {		delegateType: fix,		bindType: fix,		handle: function( event ) {			var ret,				target = this,				related = event.relatedTarget,				handleObj = event.handleObj;			// For mousenter/leave call the handler if related is outside the target.			// NB: No relatedTarget if the mouse left/entered the browser window			if ( !related || (related !== target &amp;&amp; !jQuery.contains( target, related )) ) {				event.type = handleObj.origType;				ret = handleObj.handler.apply( this, arguments );				event.type = fix;			}			return ret;		}	};});// IE submit delegationif ( !support.submitBubbles ) {	jQuery.event.special.submit = {		setup: function() {			// Only need this for delegated form submit events			if ( jQuery.nodeName( this, "form" ) ) {				return false;			}			// Lazy-add a submit handler when a descendant form may potentially be submitted			jQuery.event.add( this, "click._submit keypress._submit", function( e ) {				// Node name check avoids a VML-related crash in IE (#9807)				var elem = e.target,					form = jQuery.nodeName( elem, "input" ) || jQuery.nodeName( elem, "button" ) ? elem.form : undefined;				if ( form &amp;&amp; !jQuery._data( form, "submitBubbles" ) ) {					jQuery.event.add( form, "submit._submit", function( event ) {						event._submit_bubble = true;					});					jQuery._data( form, "submitBubbles", true );				}			});			// return undefined since we don''t need an event listener		},		postDispatch: function( event ) {			// If form was submitted by the user, bubble the event up the tree			if ( event._submit_bubble ) {				delete event._submit_bubble;				if ( this.parentNode &amp;&amp; !event.isTrigger ) {					jQuery.event.simulate( "submit", this.parentNode, event, true );				}			}		},		teardown: function() {			// Only need this for delegated form submit events			if ( jQuery.nodeName( this, "form" ) ) {				return false;			}			// Remove delegated handlers; cleanData eventually reaps submit handlers attached above			jQuery.event.remove( this, "._submit" );		}	};}// IE change delegation and checkbox/radio fixif ( !support.changeBubbles ) {	jQuery.event.special.change = {		setup: function() {			if ( rformElems.test( this.nodeName ) ) {				// IE doesn''t fire change on a check/radio until blur; trigger it on click				// after a propertychange. Eat the blur-change in special.change.handle.				// This still fires onchange a second time for check/radio after blur.				if ( this.type === "checkbox" || this.type === "radio" ) {					jQuery.event.add( this, "propertychange._change", function( event ) {						if ( event.originalEvent.propertyName === "checked" ) {							this._just_changed = true;						}					});					jQuery.event.add( this, "click._change", function( event ) {						if ( this._just_changed &amp;&amp; !event.isTrigger ) {							this._just_changed = false;						}						// Allow triggered, simulated change events (#11500)						jQuery.event.simulate( "change", this, event, true );					});				}				return false;			}			// Delegated event; lazy-add a change handler on descendant inputs			jQuery.event.add( this, "beforeactivate._change", function( e ) {				var elem = e.target;				if ( rformElems.test( elem.nodeName ) &amp;&amp; !jQuery._data( elem, "changeBubbles" ) ) {					jQuery.event.add( elem, "change._change", function( event ) {						if ( this.parentNode &amp;&amp; !event.isSimulated &amp;&amp; !event.isTrigger ) {							jQuery.event.simulate( "change", this.parentNode, event, true );						}					});					jQuery._data( elem, "changeBubbles", true );				}			});		},		handle: function( event ) {			var elem = event.target;			// Swallow native change events from checkbox/radio, we already triggered them above			if ( this !== elem || event.isSimulated || event.isTrigger || (elem.type !== "radio" &amp;&amp; elem.type !== "checkbox") ) {				return event.handleObj.handler.apply( this, arguments );			}		},		teardown: function() {			jQuery.event.remove( this, "._change" );			return !rformElems.test( this.nodeName );		}	};}// Create "bubbling" focus and blur eventsif ( !support.focusinBubbles ) {	jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {		// Attach a single capturing handler on the document while someone wants focusin/focusout		var handler = function( event ) {				jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );			};		jQuery.event.special[ fix ] = {			setup: function() {				var doc = this.ownerDocument || this,					attaches = jQuery._data( doc, fix );				if ( !attaches ) {					doc.addEventListener( orig, handler, true );				}				jQuery._data( doc, fix, ( attaches || 0 ) + 1 );			},			teardown: function() {				var doc = this.ownerDocument || this,					attaches = jQuery._data( doc, fix ) - 1;				if ( !attaches ) {					doc.removeEventListener( orig, handler, true );					jQuery._removeData( doc, fix );				} else {					jQuery._data( doc, fix, attaches );				}			}		};	});}jQuery.fn.extend({	on: function( types, selector, data, fn, /*INTERNAL*/ one ) {		var type, origFn;		// Types can be a map of types/handlers		if ( typeof types === "object" ) {			// ( types-Object, selector, data )			if ( typeof selector !== "string" ) {				// ( types-Object, data )				data = data || selector;				selector = undefined;			}			for ( type in types ) {				this.on( type, selector, data, types[ type ], one );			}			return this;		}		if ( data == null &amp;&amp; fn == null ) {			// ( types, fn )			fn = selector;			data = selector = undefined;		} else if ( fn == null ) {			if ( typeof selector === "string" ) {				// ( types, selector, fn )				fn = data;				data = undefined;			} else {				// ( types, data, fn )				fn = data;				data = selector;				selector = undefined;			}		}		if ( fn === false ) {			fn = returnFalse;		} else if ( !fn ) {			return this;		}		if ( one === 1 ) {			origFn = fn;			fn = function( event ) {				// Can use an empty set, since event contains the info				jQuery().off( event );				return origFn.apply( this, arguments );			};			// Use same guid so caller can remove using origFn			fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );		}		return this.each( function() {			jQuery.event.add( this, types, fn, data, selector );		});	},	one: function( types, selector, data, fn ) {		return this.on( types, selector, data, fn, 1 );	},	off: function( types, selector, fn ) {		var handleObj, type;		if ( types &amp;&amp; types.preventDefault &amp;&amp; types.handleObj ) {			// ( event )  dispatched jQuery.Event			handleObj = types.handleObj;			jQuery( types.delegateTarget ).off(				handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType,				handleObj.selector,				handleObj.handler			);			return this;		}		if ( typeof types === "object" ) {			// ( types-object [, selector] )			for ( type in types ) {				this.off( type, selector, types[ type ] );			}			return this;		}		if ( selector === false || typeof selector === "function" ) {			// ( types [, fn] )			fn = selector;			selector = undefined;		}		if ( fn === false ) {			fn = returnFalse;		}		return this.each(function() {			jQuery.event.remove( this, types, fn, selector );		});	},	trigger: function( type, data ) {		return this.each(function() {			jQuery.event.trigger( type, data, this );		});	},	triggerHandler: function( type, data ) {		var elem = this[0];		if ( elem ) {			return jQuery.event.trigger( type, data, elem, true );		}	}});function createSafeFragment( document ) {	var list = nodeNames.split( "|" ),		safeFrag = document.createDocumentFragment();	if ( safeFrag.createElement ) {		while ( list.length ) {			safeFrag.createElement(				list.pop()			);		}	}	return safeFrag;}var nodeNames = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|" +		"header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",	rinlinejQuery = / jQuery\d+="(?:null|\d+)"/g,	rnoshimcache = new RegExp("&lt;(?:" + nodeNames + ")[\\s/&gt;]", "i"),	rleadingWhitespace = /^\s+/,	rxhtmlTag = /&lt;(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^&gt;]*)\/&gt;/gi,	rtagName = /&lt;([\w:]+)/,	rtbody = /&lt;tbody/i,	rhtml = /&lt;|&amp;#?\w+;/,	rnoInnerhtml = /&lt;(?:script|style|link)/i,	// checked="checked" or checked	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,	rscriptType = /^$|\/(?:java|ecma)script/i,	rscriptTypeMasked = /^true\/(.*)/,	rcleanScript = /^\s*&lt;!(?:\[CDATA\[|--)|(?:\]\]|--)&gt;\s*$/g,	// We have to close these tags to support XHTML (#13200)	wrapMap = {		option: [ 1, "&lt;select multiple=''multiple''&gt;", "&lt;/select&gt;" ],		legend: [ 1, "&lt;fieldset&gt;", "&lt;/fieldset&gt;" ],		area: [ 1, "&lt;map&gt;", "&lt;/map&gt;" ],		param: [ 1, "&lt;object&gt;", "&lt;/object&gt;" ],		thead: [ 1, "&lt;table&gt;", "&lt;/table&gt;" ],		tr: [ 2, "&lt;table&gt;&lt;tbody&gt;", "&lt;/tbody&gt;&lt;/table&gt;" ],		col: [ 2, "&lt;table&gt;&lt;tbody&gt;&lt;/tbody&gt;&lt;colgroup&gt;", "&lt;/colgroup&gt;&lt;/table&gt;" ],		td: [ 3, "&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;", "&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;" ],		// IE6-8 can''t serialize link, script, style, or any html5 (NoScope) tags,		// unless wrapped in a div with non-breaking characters in front of it.		_default: support.htmlSerialize ? [ 0, "", "" ] : [ 1, "X&lt;div&gt;", "&lt;/div&gt;"  ]	},	safeFragment = createSafeFragment( document ),	fragmentDiv = safeFragment.appendChild( document.createElement("div") );wrapMap.optgroup = wrapMap.option;wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;wrapMap.th = wrapMap.td;function getAll( context, tag ) {	var elems, elem,		i = 0,		found = typeof context.getElementsByTagName !== strundefined ? context.getElementsByTagName( tag || "*" ) :			typeof context.querySelectorAll !== strundefined ? context.querySelectorAll( tag || "*" ) :			undefined;	if ( !found ) {		for ( found = [], elems = context.childNodes || context; (elem = elems[i]) != null; i++ ) {			if ( !tag || jQuery.nodeName( elem, tag ) ) {				found.push( elem );			} else {				jQuery.merge( found, getAll( elem, tag ) );			}		}	}	return tag === undefined || tag &amp;&amp; jQuery.nodeName( context, tag ) ?		jQuery.merge( [ context ], found ) :		found;}// Used in buildFragment, fixes the defaultChecked propertyfunction fixDefaultChecked( elem ) {	if ( rcheckableType.test( elem.type ) ) {		elem.defaultChecked = elem.checked;	}}// Support: IE&lt;8// Manipulating tables requires a tbodyfunction manipulationTarget( elem, content ) {	return jQuery.nodeName( elem, "table" ) &amp;&amp;		jQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ?		elem.getElementsByTagName("tbody")[0] ||			elem.appendChild( elem.ownerDocument.createElement("tbody") ) :		elem;}// Replace/restore the type attribute of script elements for safe DOM manipulationfunction disableScript( elem ) {	elem.type = (jQuery.find.attr( elem, "type" ) !== null) + "/" + elem.type;	return elem;}function restoreScript( elem ) {	var match = rscriptTypeMasked.exec( elem.type );	if ( match ) {		elem.type = match[1];	} else {		elem.removeAttribute("type");	}	return elem;}// Mark scripts as having already been evaluatedfunction setGlobalEval( elems, refElements ) {	var elem,		i = 0;	for ( ; (elem = elems[i]) != null; i++ ) {		jQuery._data( elem, "globalEval", !refElements || jQuery._data( refElements[i], "globalEval" ) );	}}function cloneCopyEvent( src, dest ) {	if ( dest.nodeType !== 1 || !jQuery.hasData( src ) ) {		return;	}	var type, i, l,		oldData = jQuery._data( src ),		curData = jQuery._data( dest, oldData ),		events = oldData.events;	if ( events ) {		delete curData.handle;		curData.events = {};		for ( type in events ) {			for ( i = 0, l = events[ type ].length; i &lt; l; i++ ) {				jQuery.event.add( dest, type, events[ type ][ i ] );			}		}	}	// make the cloned public data object a copy from the original	if ( curData.data ) {		curData.data = jQuery.extend( {}, curData.data );	}}function fixCloneNodeIssues( src, dest ) {	var nodeName, e, data;	// We do not need to do anything for non-Elements	if ( dest.nodeType !== 1 ) {		return;	}	nodeName = dest.nodeName.toLowerCase();	// IE6-8 copies events bound via attachEvent when using cloneNode.	if ( !support.noCloneEvent &amp;&amp; dest[ jQuery.expando ] ) {		data = jQuery._data( dest );		for ( e in data.events ) {			jQuery.removeEvent( dest, e, data.handle );		}		// Event data gets referenced instead of copied if the expando gets copied too		dest.removeAttribute( jQuery.expando );	}	// IE blanks contents when cloning scripts, and tries to evaluate newly-set text	if ( nodeName === "script" &amp;&amp; dest.text !== src.text ) {		disableScript( dest ).text = src.text;		restoreScript( dest );	// IE6-10 improperly clones children of object elements using classid.	// IE10 throws NoModificationAllowedError if parent is null, #12132.	} else if ( nodeName === "object" ) {		if ( dest.parentNode ) {			dest.outerHTML = src.outerHTML;		}		// This path appears unavoidable for IE9. When cloning an object		// element in IE9, the outerHTML strategy above is not sufficient.		// If the src has innerHTML and the destination does not,		// copy the src.innerHTML into the dest.innerHTML. #10324		if ( support.html5Clone &amp;&amp; ( src.innerHTML &amp;&amp; !jQuery.trim(dest.innerHTML) ) ) {			dest.innerHTML = src.innerHTML;		}	} else if ( nodeName === "input" &amp;&amp; rcheckableType.test( src.type ) ) {		// IE6-8 fails to persist the checked state of a cloned checkbox		// or radio button. Worse, IE6-7 fail to give the cloned element		// a checked appearance if the defaultChecked value isn''t also set		dest.defaultChecked = dest.checked = src.checked;		// IE6-7 get confused and end up setting the value of a cloned		// checkbox/radio button to an empty string instead of "on"		if ( dest.value !== src.value ) {			dest.value = src.value;		}	// IE6-8 fails to return the selected option to the default selected	// state when cloning options	} else if ( nodeName === "option" ) {		dest.defaultSelected = dest.selected = src.defaultSelected;	// IE6-8 fails to set the defaultValue to the correct value when	// cloning other types of input fields	} else if ( nodeName === "input" || nodeName === "textarea" ) {		dest.defaultValue = src.defaultValue;	}}jQuery.extend({	clone: function( elem, dataAndEvents, deepDataAndEvents ) {		var destElements, node, clone, i, srcElements,			inPage = jQuery.contains( elem.ownerDocument, elem );		if ( support.html5Clone || jQuery.isXMLDoc(elem) || !rnoshimcache.test( "&lt;" + elem.nodeName + "&gt;" ) ) {			clone = elem.cloneNode( true );		// IE&lt;=8 does not properly clone detached, unknown element nodes		} else {			fragmentDiv.innerHTML = elem.outerHTML;			fragmentDiv.removeChild( clone = fragmentDiv.firstChild );		}		if ( (!support.noCloneEvent || !support.noCloneChecked) &amp;&amp;				(elem.nodeType === 1 || elem.nodeType === 11) &amp;&amp; !jQuery.isXMLDoc(elem) ) {			// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2			destElements = getAll( clone );			srcElements = getAll( elem );			// Fix all IE cloning issues			for ( i = 0; (node = srcElements[i]) != null; ++i ) {				// Ensure that the destination node is not null; Fixes #9587				if ( destElements[i] ) {					fixCloneNodeIssues( node, destElements[i] );				}			}		}		// Copy the events from the original to the clone		if ( dataAndEvents ) {			if ( deepDataAndEvents ) {				srcElements = srcElements || getAll( elem );				destElements = destElements || getAll( clone );				for ( i = 0; (node = srcElements[i]) != null; i++ ) {					cloneCopyEvent( node, destElements[i] );				}			} else {				cloneCopyEvent( elem, clone );			}		}		// Preserve script evaluation history		destElements = getAll( clone, "script" );		if ( destElements.length &gt; 0 ) {			setGlobalEval( destElements, !inPage &amp;&amp; getAll( elem, "script" ) );		}		destElements = srcElements = node = null;		// Return the cloned set		return clone;	},	buildFragment: function( elems, context, scripts, selection ) {		var j, elem, contains,			tmp, tag, tbody, wrap,			l = elems.length,			// Ensure a safe fragment			safe = createSafeFragment( context ),			nodes = [],			i = 0;		for ( ; i &lt; l; i++ ) {			elem = elems[ i ];			if ( elem || elem === 0 ) {				// Add nodes directly				if ( jQuery.type( elem ) === "object" ) {					jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );				// Convert non-html into a text node				} else if ( !rhtml.test( elem ) ) {					nodes.push( context.createTextNode( elem ) );				// Convert html into DOM nodes				} else {					tmp = tmp || safe.appendChild( context.createElement("div") );					// Deserialize a standard representation					tag = (rtagName.exec( elem ) || [ "", "" ])[ 1 ].toLowerCase();					wrap = wrapMap[ tag ] || wrapMap._default;					tmp.innerHTML = wrap[1] + elem.replace( rxhtmlTag, "&lt;$1&gt;&lt;/$2&gt;" ) + wrap[2];					// Descend through wrappers to the right content					j = wrap[0];					while ( j-- ) {						tmp = tmp.lastChild;					}					// Manually add leading whitespace removed by IE					if ( !support.leadingWhitespace &amp;&amp; rleadingWhitespace.test( elem ) ) {						nodes.push( context.createTextNode( rleadingWhitespace.exec( elem )[0] ) );					}					// Remove IE''s autoinserted &lt;tbody&gt; from table fragments					if ( !support.tbody ) {						// String was a &lt;table&gt;, *may* have spurious &lt;tbody&gt;						elem = tag === "table" &amp;&amp; !rtbody.test( elem ) ?							tmp.firstChild :							// String was a bare &lt;thead&gt; or &lt;tfoot&gt;							wrap[1] === "&lt;table&gt;" &amp;&amp; !rtbody.test( elem ) ?								tmp :								0;						j = elem &amp;&amp; elem.childNodes.length;						while ( j-- ) {							if ( jQuery.nodeName( (tbody = elem.childNodes[j]), "tbody" ) &amp;&amp; !tbody.childNodes.length ) {								elem.removeChild( tbody );							}						}					}					jQuery.merge( nodes, tmp.childNodes );					// Fix #12392 for WebKit and IE &gt; 9					tmp.textContent = "";					// Fix #12392 for oldIE					while ( tmp.firstChild ) {						tmp.removeChild( tmp.firstChild );					}					// Remember the top-level container for proper cleanup					tmp = safe.lastChild;				}			}		}		// Fix #11356: Clear elements from fragment		if ( tmp ) {			safe.removeChild( tmp );		}		// Reset defaultChecked for any radios and checkboxes		// about to be appended to the DOM in IE 6/7 (#8060)		if ( !support.appendChecked ) {			jQuery.grep( getAll( nodes, "input" ), fixDefaultChecked );		}		i = 0;		while ( (elem = nodes[ i++ ]) ) {			// #4087 - If origin and destination elements are the same, and this is			// that element, do not do anything			if ( selection &amp;&amp; jQuery.inArray( elem, selection ) !== -1 ) {				continue;			}			contains = jQuery.contains( elem.ownerDocument, elem );			// Append to fragment			tmp = getAll( safe.appendChild( elem ), "script" );			// Preserve script evaluation history			if ( contains ) {				setGlobalEval( tmp );			}			// Capture executables			if ( scripts ) {				j = 0;				while ( (elem = tmp[ j++ ]) ) {					if ( rscriptType.test( elem.type || "" ) ) {						scripts.push( elem );					}				}			}		}		tmp = null;		return safe;	},	cleanData: function( elems, /* internal */ acceptData ) {		var elem, type, id, data,			i = 0,			internalKey = jQuery.expando,			cache = jQuery.cache,			deleteExpando = support.deleteExpando,			special = jQuery.event.special;		for ( ; (elem = elems[i]) != null; i++ ) {			if ( acceptData || jQuery.acceptData( elem ) ) {				id = elem[ internalKey ];				data = id &amp;&amp; cache[ id ];				if ( data ) {					if ( data.events ) {						for ( type in data.events ) {							if ( special[ type ] ) {								jQuery.event.remove( elem, type );							// This is a shortcut to avoid jQuery.event.remove''s overhead							} else {								jQuery.removeEvent( elem, type, data.handle );							}						}					}					// Remove cache only if it was not already removed by jQuery.event.remove					if ( cache[ id ] ) {						delete cache[ id ];						// IE does not allow us to delete expando properties from nodes,						// nor does it have a removeAttribute function on Document nodes;						// we must handle all of these cases						if ( deleteExpando ) {							delete elem[ internalKey ];						} else if ( typeof elem.removeAttribute !== strundefined ) {							elem.removeAttribute( internalKey );						} else {							elem[ internalKey ] = null;						}						deletedIds.push( id );					}				}			}		}	}});jQuery.fn.extend({	text: function( value ) {		return access( this, function( value ) {			return value === undefined ?				jQuery.text( this ) :				this.empty().append( ( this[0] &amp;&amp; this[0].ownerDocument || document ).createTextNode( value ) );		}, null, value, arguments.length );	},	append: function() {		return this.domManip( arguments, function( elem ) {			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {				var target = manipulationTarget( this, elem );				target.appendChild( elem );			}		});	},	prepend: function() {		return this.domManip( arguments, function( elem ) {			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {				var target = manipulationTarget( this, elem );				target.insertBefore( elem, target.firstChild );			}		});	},	before: function() {		return this.domManip( arguments, function( elem ) {			if ( this.parentNode ) {				this.parentNode.insertBefore( elem, this );			}		});	},	after: function() {		return this.domManip( arguments, function( elem ) {			if ( this.parentNode ) {				this.parentNode.insertBefore( elem, this.nextSibling );			}		});	},	remove: function( selector, keepData /* Internal Use Only */ ) {		var elem,			elems = selector ? jQuery.filter( selector, this ) : this,			i = 0;		for ( ; (elem = elems[i]) != null; i++ ) {			if ( !keepData &amp;&amp; elem.nodeType === 1 ) {				jQuery.cleanData( getAll( elem ) );			}			if ( elem.parentNode ) {				if ( keepData &amp;&amp; jQuery.contains( elem.ownerDocument, elem ) ) {					setGlobalEval( getAll( elem, "script" ) );				}				elem.parentNode.removeChild( elem );			}		}		return this;	},	empty: function() {		var elem,			i = 0;		for ( ; (elem = this[i]) != null; i++ ) {			// Remove element nodes and prevent memory leaks			if ( elem.nodeType === 1 ) {				jQuery.cleanData( getAll( elem, false ) );			}			// Remove any remaining nodes			while ( elem.firstChild ) {				elem.removeChild( elem.firstChild );			}			// If this is a select, ensure that it displays empty (#12336)			// Support: IE&lt;9			if ( elem.options &amp;&amp; jQuery.nodeName( elem, "select" ) ) {				elem.options.length = 0;			}		}		return this;	},	clone: function( dataAndEvents, deepDataAndEvents ) {		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;		return this.map(function() {			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );		});	},	html: function( value ) {		return access( this, function( value ) {			var elem = this[ 0 ] || {},				i = 0,				l = this.length;			if ( value === undefined ) {				return elem.nodeType === 1 ?					elem.innerHTML.replace( rinlinejQuery, "" ) :					undefined;			}			// See if we can take a shortcut and just use innerHTML			if ( typeof value === "string" &amp;&amp; !rnoInnerhtml.test( value ) &amp;&amp;				( support.htmlSerialize || !rnoshimcache.test( value )  ) &amp;&amp;				( support.leadingWhitespace || !rleadingWhitespace.test( value ) ) &amp;&amp;				!wrapMap[ (rtagName.exec( value ) || [ "", "" ])[ 1 ].toLowerCase() ] ) {				value = value.replace( rxhtmlTag, "&lt;$1&gt;&lt;/$2&gt;" );				try {					for (; i &lt; l; i++ ) {						// Remove element nodes and prevent memory leaks						elem = this[i] || {};						if ( elem.nodeType === 1 ) {							jQuery.cleanData( getAll( elem, false ) );							elem.innerHTML = value;						}					}					elem = 0;				// If using innerHTML throws an exception, use the fallback method				} catch(e) {}			}			if ( elem ) {				this.empty().append( value );			}		}, null, value, arguments.length );	},	replaceWith: function() {		var arg = arguments[ 0 ];		// Make the changes, replacing each context element with the new content		this.domManip( arguments, function( elem ) {			arg = this.parentNode;			jQuery.cleanData( getAll( this ) );			if ( arg ) {				arg.replaceChild( elem, this );			}		});		// Force removal if there was no new content (e.g., from empty arguments)		return arg &amp;&amp; (arg.length || arg.nodeType) ? this : this.remove();	},	detach: function( selector ) {		return this.remove( selector, true );	},	domManip: function( args, callback ) {		// Flatten any nested arrays		args = concat.apply( [], args );		var first, node, hasScripts,			scripts, doc, fragment,			i = 0,			l = this.length,			set = this,			iNoClone = l - 1,			value = args[0],			isFunction = jQuery.isFunction( value );		// We can''t cloneNode fragments that contain checked, in WebKit		if ( isFunction ||				( l &gt; 1 &amp;&amp; typeof value === "string" &amp;&amp;					!support.checkClone &amp;&amp; rchecked.test( value ) ) ) {			return this.each(function( index ) {				var self = set.eq( index );				if ( isFunction ) {					args[0] = value.call( this, index, self.html() );				}				self.domManip( args, callback );			});		}		if ( l ) {			fragment = jQuery.buildFragment( args, this[ 0 ].ownerDocument, false, this );			first = fragment.firstChild;			if ( fragment.childNodes.length === 1 ) {				fragment = first;			}			if ( first ) {				scripts = jQuery.map( getAll( fragment, "script" ), disableScript );				hasScripts = scripts.length;				// Use the original fragment for the last item instead of the first because it can end up				// being emptied incorrectly in certain situations (#8070).				for ( ; i &lt; l; i++ ) {					node = fragment;					if ( i !== iNoClone ) {						node = jQuery.clone( node, true, true );						// Keep references to cloned scripts for later restoration						if ( hasScripts ) {							jQuery.merge( scripts, getAll( node, "script" ) );						}					}					callback.call( this[i], node, i );				}				if ( hasScripts ) {					doc = scripts[ scripts.length - 1 ].ownerDocument;					// Reenable scripts					jQuery.map( scripts, restoreScript );					// Evaluate executable scripts on first document insertion					for ( i = 0; i &lt; hasScripts; i++ ) {						node = scripts[ i ];						if ( rscriptType.test( node.type || "" ) &amp;&amp;							!jQuery._data( node, "globalEval" ) &amp;&amp; jQuery.contains( doc, node ) ) {							if ( node.src ) {								// Optional AJAX dependency, but won''t run scripts if not present								if ( jQuery._evalUrl ) {									jQuery._evalUrl( node.src );								}							} else {								jQuery.globalEval( ( node.text || node.textContent || node.innerHTML || "" ).replace( rcleanScript, "" ) );							}						}					}				}				// Fix #11809: Avoid leaking memory				fragment = first = null;			}		}		return this;	}});jQuery.each({	appendTo: "append",	prependTo: "prepend",	insertBefore: "before",	insertAfter: "after",	replaceAll: "replaceWith"}, function( name, original ) {	jQuery.fn[ name ] = function( selector ) {		var elems,			i = 0,			ret = [],			insert = jQuery( selector ),			last = insert.length - 1;		for ( ; i &lt;= last; i++ ) {			elems = i === last ? this : this.clone(true);			jQuery( insert[i] )[ original ]( elems );			// Modern browsers can apply jQuery collections as arrays, but oldIE needs a .get()			push.apply( ret, elems.get() );		}		return this.pushStack( ret );	};});var iframe,	elemdisplay = {};/** * Retrieve the actual display of a element * @param {String} name nodeName of the element * @param {Object} doc Document object */// Called only from within defaultDisplayfunction actualDisplay( name, doc ) {	var style,		elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),		// getDefaultComputedStyle might be reliably used only on attached element		display = window.getDefaultComputedStyle &amp;&amp; ( style = window.getDefaultComputedStyle( elem[ 0 ] ) ) ?			// Use of this method is a temporary fix (more like optmization) until something better comes along,			// since it was removed from specification and supported only in FF			style.display : jQuery.css( elem[ 0 ], "display" );	// We don''t have any data stored on the element,	// so use "detach" method as fast way to get rid of the element	elem.detach();	return display;}/** * Try to determine the default display value of an element * @param {String} nodeName */function defaultDisplay( nodeName ) {	var doc = document,		display = elemdisplay[ nodeName ];	if ( !display ) {		display = actualDisplay( nodeName, doc );		// If the simple way fails, read from inside an iframe		if ( display === "none" || !display ) {			// Use the already-created iframe if possible			iframe = (iframe || jQuery( "&lt;iframe frameborder=''0'' width=''0'' height=''0''/&gt;" )).appendTo( doc.documentElement );			// Always write a new HTML skeleton so Webkit and Firefox don''t choke on reuse			doc = ( iframe[ 0 ].contentWindow || iframe[ 0 ].contentDocument ).document;			// Support: IE			doc.write();			doc.close();			display = actualDisplay( nodeName, doc );			iframe.detach();		}		// Store the correct default display		elemdisplay[ nodeName ] = display;	}	return display;}(function() {	var shrinkWrapBlocksVal;	support.shrinkWrapBlocks = function() {		if ( shrinkWrapBlocksVal != null ) {			return shrinkWrapBlocksVal;		}		// Will be changed later if needed.		shrinkWrapBlocksVal = false;		// Minified: var b,c,d		var div, body, container;		body = document.getElementsByTagName( "body" )[ 0 ];		if ( !body || !body.style ) {			// Test fired too early or in an unsupported environment, exit.			return;		}		// Setup		div = document.createElement( "div" );		container = document.createElement( "div" );		container.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px";		body.appendChild( container ).appendChild( div );		// Support: IE6		// Check if elements with layout shrink-wrap their children		if ( typeof div.style.zoom !== strundefined ) {			// Reset CSS: box-sizing; display; margin; border			div.style.cssText =				// Support: Firefox&lt;29, Android 2.3				// Vendor-prefix box-sizing				"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;" +				"box-sizing:content-box;display:block;margin:0;border:0;" +				"padding:1px;width:1px;zoom:1";			div.appendChild( document.createElement( "div" ) ).style.width = "5px";			shrinkWrapBlocksVal = div.offsetWidth !== 3;		}		body.removeChild( container );		return shrinkWrapBlocksVal;	};})();var rmargin = (/^margin/);var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );var getStyles, curCSS,	rposition = /^(top|right|bottom|left)$/;if ( window.getComputedStyle ) {	getStyles = function( elem ) {		// Support: IE&lt;=11+, Firefox&lt;=30+ (#15098, #14150)		// IE throws on elements created in popups		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"		if ( elem.ownerDocument.defaultView.opener ) {			return elem.ownerDocument.defaultView.getComputedStyle( elem, null );		}		return window.getComputedStyle( elem, null );	};	curCSS = function( elem, name, computed ) {		var width, minWidth, maxWidth, ret,			style = elem.style;		computed = computed || getStyles( elem );		// getPropertyValue is only needed for .css(''filter'') in IE9, see #12537		ret = computed ? computed.getPropertyValue( name ) || computed[ name ] : undefined;		if ( computed ) {			if ( ret === "" &amp;&amp; !jQuery.contains( elem.ownerDocument, elem ) ) {				ret = jQuery.style( elem, name );			}			// A tribute to the "awesome hack by Dean Edwards"			// Chrome &lt; 17 and Safari 5.0 uses "computed value" instead of "used value" for margin-right			// Safari 5.1.7 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels			// this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values			if ( rnumnonpx.test( ret ) &amp;&amp; rmargin.test( name ) ) {				// Remember the original values				width = style.width;				minWidth = style.minWidth;				maxWidth = style.maxWidth;				// Put in the new values to get a computed value out				style.minWidth = style.maxWidth = style.width = ret;				ret = computed.width;				// Revert the changed values				style.width = width;				style.minWidth = minWidth;				style.maxWidth = maxWidth;			}		}		// Support: IE		// IE returns zIndex value as an integer.		return ret === undefined ?			ret :			ret + "";	};} else if ( document.documentElement.currentStyle ) {	getStyles = function( elem ) {		return elem.currentStyle;	};	curCSS = function( elem, name, computed ) {		var left, rs, rsLeft, ret,			style = elem.style;		computed = computed || getStyles( elem );		ret = computed ? computed[ name ] : undefined;		// Avoid setting ret to empty string here		// so we don''t default to auto		if ( ret == null &amp;&amp; style &amp;&amp; style[ name ] ) {			ret = style[ name ];		}		// From the awesome hack by Dean Edwards		// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291		// If we''re not dealing with a regular pixel number		// but a number that has a weird ending, we need to convert it to pixels		// but not position css attributes, as those are proportional to the parent element instead		// and we can''t measure the parent instead because it might trigger a "stacking dolls" problem		if ( rnumnonpx.test( ret ) &amp;&amp; !rposition.test( name ) ) {			// Remember the original values			left = style.left;			rs = elem.runtimeStyle;			rsLeft = rs &amp;&amp; rs.left;			// Put in the new values to get a computed value out			if ( rsLeft ) {				rs.left = elem.currentStyle.left;			}			style.left = name === "fontSize" ? "1em" : ret;			ret = style.pixelLeft + "px";			// Revert the changed values			style.left = left;			if ( rsLeft ) {				rs.left = rsLeft;			}		}		// Support: IE		// IE returns zIndex value as an integer.		return ret === undefined ?			ret :			ret + "" || "auto";	};}function addGetHookIf( conditionFn, hookFn ) {	// Define the hook, we''ll check on the first run if it''s really needed.	return {		get: function() {			var condition = conditionFn();			if ( condition == null ) {				// The test was not ready at this point; screw the hook this time				// but check again when needed next time.				return;			}			if ( condition ) {				// Hook not needed (or it''s not possible to use it due to missing dependency),				// remove it.				// Since there are no other hooks for marginRight, remove the whole object.				delete this.get;				return;			}			// Hook needed; redefine it so that the support test is not executed again.			return (this.get = hookFn).apply( this, arguments );		}	};}(function() {	// Minified: var b,c,d,e,f,g, h,i	var div, style, a, pixelPositionVal, boxSizingReliableVal,		reliableHiddenOffsetsVal, reliableMarginRightVal;	// Setup	div = document.createElement( "div" );	div.innerHTML = "  &lt;link/&gt;&lt;table&gt;&lt;/table&gt;&lt;a href=''/a''&gt;a&lt;/a&gt;&lt;input type=''checkbox''/&gt;";	a = div.getElementsByTagName( "a" )[ 0 ];	style = a &amp;&amp; a.style;	// Finish early in limited (non-browser) environments	if ( !style ) {		return;	}	style.cssText = "float:left;opacity:.5";	// Support: IE&lt;9	// Make sure that element opacity exists (as opposed to filter)	support.opacity = style.opacity === "0.5";	// Verify style float existence	// (IE uses styleFloat instead of cssFloat)	support.cssFloat = !!style.cssFloat;	div.style.backgroundClip = "content-box";	div.cloneNode( true ).style.backgroundClip = "";	support.clearCloneStyle = div.style.backgroundClip === "content-box";	// Support: Firefox&lt;29, Android 2.3	// Vendor-prefix box-sizing	support.boxSizing = style.boxSizing === "" || style.MozBoxSizing === "" ||		style.WebkitBoxSizing === "";	jQuery.extend(support, {		reliableHiddenOffsets: function() {			if ( reliableHiddenOffsetsVal == null ) {				computeStyleTests();			}			return reliableHiddenOffsetsVal;		},		boxSizingReliable: function() {			if ( boxSizingReliableVal == null ) {				computeStyleTests();			}			return boxSizingReliableVal;		},		pixelPosition: function() {			if ( pixelPositionVal == null ) {				computeStyleTests();			}			return pixelPositionVal;		},		// Support: Android 2.3		reliableMarginRight: function() {			if ( reliableMarginRightVal == null ) {				computeStyleTests();			}			return reliableMarginRightVal;		}	});	function computeStyleTests() {		// Minified: var b,c,d,j		var div, body, container, contents;		body = document.getElementsByTagName( "body" )[ 0 ];		if ( !body || !body.style ) {			// Test fired too early or in an unsupported environment, exit.			return;		}		// Setup		div = document.createElement( "div" );		container = document.createElement( "div" );		container.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px";		body.appendChild( container ).appendChild( div );		div.style.cssText =			// Support: Firefox&lt;29, Android 2.3			// Vendor-prefix box-sizing			"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;" +			"box-sizing:border-box;display:block;margin-top:1%;top:1%;" +			"border:1px;padding:1px;width:4px;position:absolute";		// Support: IE&lt;9		// Assume reasonable values in the absence of getComputedStyle		pixelPositionVal = boxSizingReliableVal = false;		reliableMarginRightVal = true;		// Check for getComputedStyle so that this code is not run in IE&lt;9.		if ( window.getComputedStyle ) {			pixelPositionVal = ( window.getComputedStyle( div, null ) || {} ).top !== "1%";			boxSizingReliableVal =				( window.getComputedStyle( div, null ) || { width: "4px" } ).width === "4px";			// Support: Android 2.3			// Div with explicit width and no margin-right incorrectly			// gets computed margin-right based on width of container (#3333)			// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right			contents = div.appendChild( document.createElement( "div" ) );			// Reset CSS: box-sizing; display; margin; border; padding			contents.style.cssText = div.style.cssText =				// Support: Firefox&lt;29, Android 2.3				// Vendor-prefix box-sizing				"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;" +				"box-sizing:content-box;display:block;margin:0;border:0;padding:0";			contents.style.marginRight = contents.style.width = "0";			div.style.width = "1px";			reliableMarginRightVal =				!parseFloat( ( window.getComputedStyle( contents, null ) || {} ).marginRight );			div.removeChild( contents );		}		// Support: IE8		// Check if table cells still have offsetWidth/Height when they are set		// to display:none and there are still other visible table cells in a		// table row; if so, offsetWidth/Height are not reliable for use when		// determining if an element has been hidden directly using		// display:none (it is still safe to use offsets if a parent element is		// hidden; don safety goggles and see bug #4512 for more information).		div.innerHTML = "&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;t&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;";		contents = div.getElementsByTagName( "td" );		contents[ 0 ].style.cssText = "margin:0;border:0;padding:0;display:none";		reliableHiddenOffsetsVal = contents[ 0 ].offsetHeight === 0;		if ( reliableHiddenOffsetsVal ) {			contents[ 0 ].style.display = "";			contents[ 1 ].style.display = "none";			reliableHiddenOffsetsVal = contents[ 0 ].offsetHeight === 0;		}		body.removeChild( container );	}})();// A method for quickly swapping in/out CSS properties to get correct calculations.jQuery.swap = function( elem, options, callback, args ) {	var ret, name,		old = {};	// Remember the old values, and insert the new ones	for ( name in options ) {		old[ name ] = elem.style[ name ];		elem.style[ name ] = options[ name ];	}	ret = callback.apply( elem, args || [] );	// Revert the old values	for ( name in options ) {		elem.style[ name ] = old[ name ];	}	return ret;};var		ralpha = /alpha\([^)]*\)/i,	ropacity = /opacity\s*=\s*([^)]*)/,	// swappable if display is none or starts with table except "table", "table-cell", or "table-caption"	// see here for display values: https://developer.mozilla.org/en-US/docs/CSS/display	rdisplayswap = /^(none|table(?!-c[ea]).+)/,	rnumsplit = new RegExp( "^(" + pnum + ")(.*)$", "i" ),	rrelNum = new RegExp( "^([+-])=(" + pnum + ")", "i" ),	cssShow = { position: "absolute", visibility: "hidden", display: "block" },	cssNormalTransform = {		letterSpacing: "0",		fontWeight: "400"	},	cssPrefixes = [ "Webkit", "O", "Moz", "ms" ];// return a css property mapped to a potentially vendor prefixed propertyfunction vendorPropName( style, name ) {	// shortcut for names that are not vendor prefixed	if ( name in style ) {		return name;	}	// check for vendor prefixed names	var capName = name.charAt(0).toUpperCase() + name.slice(1),		origName = name,		i = cssPrefixes.length;	while ( i-- ) {		name = cssPrefixes[ i ] + capName;		if ( name in style ) {			return name;		}	}	return origName;}function showHide( elements, show ) {	var display, elem, hidden,		values = [],		index = 0,		length = elements.length;	for ( ; index &lt; length; index++ ) {		elem = elements[ index ];		if ( !elem.style ) {			continue;		}		values[ index ] = jQuery._data( elem, "olddisplay" );		display = elem.style.display;		if ( show ) {			// Reset the inline display of this element to learn if it is			// being hidden by cascaded rules or not			if ( !values[ index ] &amp;&amp; display === "none" ) {				elem.style.display = "";			}			// Set elements which have been overridden with display: none			// in a stylesheet to whatever the default browser style is			// for such an element			if ( elem.style.display === "" &amp;&amp; isHidden( elem ) ) {				values[ index ] = jQuery._data( elem, "olddisplay", defaultDisplay(elem.nodeName) );			}		} else {			hidden = isHidden( elem );			if ( display &amp;&amp; display !== "none" || !hidden ) {				jQuery._data( elem, "olddisplay", hidden ? display : jQuery.css( elem, "display" ) );			}		}	}	// Set the display of most of the elements in a second loop	// to avoid the constant reflow	for ( index = 0; index &lt; length; index++ ) {		elem = elements[ index ];		if ( !elem.style ) {			continue;		}		if ( !show || elem.style.display === "none" || elem.style.display === "" ) {			elem.style.display = show ? values[ index ] || "" : "none";		}	}	return elements;}function setPositiveNumber( elem, value, subtract ) {	var matches = rnumsplit.exec( value );	return matches ?		// Guard against undefined "subtract", e.g., when used as in cssHooks		Math.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || "px" ) :		value;}function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {	var i = extra === ( isBorderBox ? "border" : "content" ) ?		// If we already have the right measurement, avoid augmentation		4 :		// Otherwise initialize for horizontal or vertical properties		name === "width" ? 1 : 0,		val = 0;	for ( ; i &lt; 4; i += 2 ) {		// both box models exclude margin, so add it if we want it		if ( extra === "margin" ) {			val += jQuery.css( elem, extra + cssExpand[ i ], true, styles );		}		if ( isBorderBox ) {			// border-box includes padding, so remove it if we want content			if ( extra === "content" ) {				val -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );			}			// at this point, extra isn''t border nor margin, so remove border			if ( extra !== "margin" ) {				val -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );			}		} else {			// at this point, extra isn''t content, so add padding			val += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );			// at this point, extra isn''t content nor padding, so add border			if ( extra !== "padding" ) {				val += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );			}		}	}	return val;}function getWidthOrHeight( elem, name, extra ) {	// Start with offset property, which is equivalent to the border-box value	var valueIsBorderBox = true,		val = name === "width" ? elem.offsetWidth : elem.offsetHeight,		styles = getStyles( elem ),		isBorderBox = support.boxSizing &amp;&amp; jQuery.css( elem, "boxSizing", false, styles ) === "border-box";	// some non-html elements return undefined for offsetWidth, so check for null/undefined	// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285	// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668	if ( val &lt;= 0 || val == null ) {		// Fall back to computed then uncomputed css if necessary		val = curCSS( elem, name, styles );		if ( val &lt; 0 || val == null ) {			val = elem.style[ name ];		}		// Computed unit is not pixels. Stop here and return.		if ( rnumnonpx.test(val) ) {			return val;		}		// we need the check for style in case a browser which returns unreliable values		// for getComputedStyle silently falls back to the reliable elem.style		valueIsBorderBox = isBorderBox &amp;&amp; ( support.boxSizingReliable() || val === elem.style[ name ] );		// Normalize "", auto, and prepare for extra		val = parseFloat( val ) || 0;	}	// use the active box-sizing model to add/subtract irrelevant styles	return ( val +		augmentWidthOrHeight(			elem,			name,			extra || ( isBorderBox ? "border" : "content" ),			valueIsBorderBox,			styles		)	) + "px";}jQuery.extend({	// Add in style property hooks for overriding the default	// behavior of getting and setting a style property	cssHooks: {		opacity: {			get: function( elem, computed ) {				if ( computed ) {					// We should always get a number back from opacity					var ret = curCSS( elem, "opacity" );					return ret === "" ? "1" : ret;				}			}		}	},	// Don''t automatically add "px" to these possibly-unitless properties	cssNumber: {		"columnCount": true,		"fillOpacity": true,		"flexGrow": true,		"flexShrink": true,		"fontWeight": true,		"lineHeight": true,		"opacity": true,		"order": true,		"orphans": true,		"widows": true,		"zIndex": true,		"zoom": true	},	// Add in properties whose names you wish to fix before	// setting or getting the value	cssProps: {		// normalize float css property		"float": support.cssFloat ? "cssFloat" : "styleFloat"	},	// Get and set the style property on a DOM Node	style: function( elem, name, value, extra ) {		// Don''t set styles on text and comment nodes		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {			return;		}		// Make sure that we''re working with the right name		var ret, type, hooks,			origName = jQuery.camelCase( name ),			style = elem.style;		name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( style, origName ) );		// gets hook for the prefixed version		// followed by the unprefixed version		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];		// Check if we''re setting a value		if ( value !== undefined ) {			type = typeof value;			// convert relative number strings (+= or -=) to relative numbers. #7345			if ( type === "string" &amp;&amp; (ret = rrelNum.exec( value )) ) {				value = ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, name ) );				// Fixes bug #9237				type = "number";			}			// Make sure that null and NaN values aren''t set. See: #7116			if ( value == null || value !== value ) {				return;			}			// If a number was passed in, add ''px'' to the (except for certain CSS properties)			if ( type === "number" &amp;&amp; !jQuery.cssNumber[ origName ] ) {				value += "px";			}			// Fixes #8908, it can be done more correctly by specifing setters in cssHooks,			// but it would mean to define eight (for every problematic property) identical functions			if ( !support.clearCloneStyle &amp;&amp; value === "" &amp;&amp; name.indexOf("background") === 0 ) {				style[ name ] = "inherit";			}			// If a hook was provided, use that value, otherwise just set the specified value			if ( !hooks || !("set" in hooks) || (value = hooks.set( elem, value, extra )) !== undefined ) {				// Support: IE				// Swallow errors from ''invalid'' CSS values (#5509)				try {					style[ name ] = value;				} catch(e) {}			}		} else {			// If a hook was provided get the non-computed value from there			if ( hooks &amp;&amp; "get" in hooks &amp;&amp; (ret = hooks.get( elem, false, extra )) !== undefined ) {				return ret;			}			// Otherwise just get the value from the style object			return style[ name ];		}	},	css: function( elem, name, extra, styles ) {		var num, val, hooks,			origName = jQuery.camelCase( name );		// Make sure that we''re working with the right name		name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( elem.style, origName ) );		// gets hook for the prefixed version		// followed by the unprefixed version		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];		// If a hook was provided get the computed value from there		if ( hooks &amp;&amp; "get" in hooks ) {			val = hooks.get( elem, true, extra );		}		// Otherwise, if a way to get the computed value exists, use that		if ( val === undefined ) {			val = curCSS( elem, name, styles );		}		//convert "normal" to computed value		if ( val === "normal" &amp;&amp; name in cssNormalTransform ) {			val = cssNormalTransform[ name ];		}		// Return, converting to number if forced or a qualifier was provided and val looks numeric		if ( extra === "" || extra ) {			num = parseFloat( val );			return extra === true || jQuery.isNumeric( num ) ? num || 0 : val;		}		return val;	}});jQuery.each([ "height", "width" ], function( i, name ) {	jQuery.cssHooks[ name ] = {		get: function( elem, computed, extra ) {			if ( computed ) {				// certain elements can have dimension info if we invisibly show them				// however, it must have a current display style that would benefit from this				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &amp;&amp; elem.offsetWidth === 0 ?					jQuery.swap( elem, cssShow, function() {						return getWidthOrHeight( elem, name, extra );					}) :					getWidthOrHeight( elem, name, extra );			}		},		set: function( elem, value, extra ) {			var styles = extra &amp;&amp; getStyles( elem );			return setPositiveNumber( elem, value, extra ?				augmentWidthOrHeight(					elem,					name,					extra,					support.boxSizing &amp;&amp; jQuery.css( elem, "boxSizing", false, styles ) === "border-box",					styles				) : 0			);		}	};});if ( !support.opacity ) {	jQuery.cssHooks.opacity = {		get: function( elem, computed ) {			// IE uses filters for opacity			return ropacity.test( (computed &amp;&amp; elem.currentStyle ? elem.currentStyle.filter : elem.style.filter) || "" ) ?				( 0.01 * parseFloat( RegExp.$1 ) ) + "" :				computed ? "1" : "";		},		set: function( elem, value ) {			var style = elem.style,				currentStyle = elem.currentStyle,				opacity = jQuery.isNumeric( value ) ? "alpha(opacity=" + value * 100 + ")" : "",				filter = currentStyle &amp;&amp; currentStyle.filter || style.filter || "";			// IE has trouble with opacity if it does not have layout			// Force it by setting the zoom level			style.zoom = 1;			// if setting opacity to 1, and no other filters exist - attempt to remove filter attribute #6652			// if value === "", then remove inline opacity #12685			if ( ( value &gt;= 1 || value === "" ) &amp;&amp;					jQuery.trim( filter.replace( ralpha, "" ) ) === "" &amp;&amp;					style.removeAttribute ) {				// Setting style.filter to null, "" &amp; " " still leave "filter:" in the cssText				// if "filter:" is present at all, clearType is disabled, we want to avoid this				// style.removeAttribute is IE Only, but so apparently is this code path...				style.removeAttribute( "filter" );				// if there is no filter style applied in a css rule or unset inline opacity, we are done				if ( value === "" || currentStyle &amp;&amp; !currentStyle.filter ) {					return;				}			}			// otherwise, set new filter values			style.filter = ralpha.test( filter ) ?				filter.replace( ralpha, opacity ) :				filter + " " + opacity;		}	};}jQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,	function( elem, computed ) {		if ( computed ) {			// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right			// Work around by temporarily setting element display to inline-block			return jQuery.swap( elem, { "display": "inline-block" },				curCSS, [ elem, "marginRight" ] );		}	});// These hooks are used by animate to expand propertiesjQuery.each({	margin: "",	padding: "",	border: "Width"}, function( prefix, suffix ) {	jQuery.cssHooks[ prefix + suffix ] = {		expand: function( value ) {			var i = 0,				expanded = {},				// assumes a single number if not a string				parts = typeof value === "string" ? value.split(" ") : [ value ];			for ( ; i &lt; 4; i++ ) {				expanded[ prefix + cssExpand[ i ] + suffix ] =					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];			}			return expanded;		}	};	if ( !rmargin.test( prefix ) ) {		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;	}});jQuery.fn.extend({	css: function( name, value ) {		return access( this, function( elem, name, value ) {			var styles, len,				map = {},				i = 0;			if ( jQuery.isArray( name ) ) {				styles = getStyles( elem );				len = name.length;				for ( ; i &lt; len; i++ ) {					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );				}				return map;			}			return value !== undefined ?				jQuery.style( elem, name, value ) :				jQuery.css( elem, name );		}, name, value, arguments.length &gt; 1 );	},	show: function() {		return showHide( this, true );	},	hide: function() {		return showHide( this );	},	toggle: function( state ) {		if ( typeof state === "boolean" ) {			return state ? this.show() : this.hide();		}		return this.each(function() {			if ( isHidden( this ) ) {				jQuery( this ).show();			} else {				jQuery( this ).hide();			}		});	}});function Tween( elem, options, prop, end, easing ) {	return new Tween.prototype.init( elem, options, prop, end, easing );}jQuery.Tween = Tween;Tween.prototype = {	constructor: Tween,	init: function( elem, options, prop, end, easing, unit ) {		this.elem = elem;		this.prop = prop;		this.easing = easing || "swing";		this.options = options;		this.start = this.now = this.cur();		this.end = end;		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );	},	cur: function() {		var hooks = Tween.propHooks[ this.prop ];		return hooks &amp;&amp; hooks.get ?			hooks.get( this ) :			Tween.propHooks._default.get( this );	},	run: function( percent ) {		var eased,			hooks = Tween.propHooks[ this.prop ];		if ( this.options.duration ) {			this.pos = eased = jQuery.easing[ this.easing ](				percent, this.options.duration * percent, 0, 1, this.options.duration			);		} else {			this.pos = eased = percent;		}		this.now = ( this.end - this.start ) * eased + this.start;		if ( this.options.step ) {			this.options.step.call( this.elem, this.now, this );		}		if ( hooks &amp;&amp; hooks.set ) {			hooks.set( this );		} else {			Tween.propHooks._default.set( this );		}		return this;	}};Tween.prototype.init.prototype = Tween.prototype;Tween.propHooks = {	_default: {		get: function( tween ) {			var result;			if ( tween.elem[ tween.prop ] != null &amp;&amp;				(!tween.elem.style || tween.elem.style[ tween.prop ] == null) ) {				return tween.elem[ tween.prop ];			}			// passing an empty string as a 3rd parameter to .css will automatically			// attempt a parseFloat and fallback to a string if the parse fails			// so, simple values such as "10px" are parsed to Float.			// complex values such as "rotate(1rad)" are returned as is.			result = jQuery.css( tween.elem, tween.prop, "" );			// Empty strings, null, undefined and "auto" are converted to 0.			return !result || result === "auto" ? 0 : result;		},		set: function( tween ) {			// use step hook for back compat - use cssHook if its there - use .style if its			// available and use plain properties where available			if ( jQuery.fx.step[ tween.prop ] ) {				jQuery.fx.step[ tween.prop ]( tween );			} else if ( tween.elem.style &amp;&amp; ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null || jQuery.cssHooks[ tween.prop ] ) ) {				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );			} else {				tween.elem[ tween.prop ] = tween.now;			}		}	}};// Support: IE &lt;=9// Panic based approach to setting things on disconnected nodesTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {	set: function( tween ) {		if ( tween.elem.nodeType &amp;&amp; tween.elem.parentNode ) {			tween.elem[ tween.prop ] = tween.now;		}	}};jQuery.easing = {	linear: function( p ) {		return p;	},	swing: function( p ) {		return 0.5 - Math.cos( p * Math.PI ) / 2;	}};jQuery.fx = Tween.prototype.init;// Back Compat &lt;1.8 extension pointjQuery.fx.step = {};var	fxNow, timerId,	rfxtypes = /^(?:toggle|show|hide)$/,	rfxnum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" ),	rrun = /queueHooks$/,	animationPrefilters = [ defaultPrefilter ],	tweeners = {		"*": [ function( prop, value ) {			var tween = this.createTween( prop, value ),				target = tween.cur(),				parts = rfxnum.exec( value ),				unit = parts &amp;&amp; parts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),				// Starting value computation is required for potential unit mismatches				start = ( jQuery.cssNumber[ prop ] || unit !== "px" &amp;&amp; +target ) &amp;&amp;					rfxnum.exec( jQuery.css( tween.elem, prop ) ),				scale = 1,				maxIterations = 20;			if ( start &amp;&amp; start[ 3 ] !== unit ) {				// Trust units reported by jQuery.css				unit = unit || start[ 3 ];				// Make sure we update the tween properties later on				parts = parts || [];				// Iteratively approximate from a nonzero starting point				start = +target || 1;				do {					// If previous iteration zeroed out, double until we get *something*					// Use a string for doubling factor so we don''t accidentally see scale as unchanged below					scale = scale || ".5";					// Adjust and apply					start = start / scale;					jQuery.style( tween.elem, prop, start + unit );				// Update scale, tolerating zero or NaN from tween.cur()				// And breaking the loop if scale is unchanged or perfect, or if we''ve just had enough				} while ( scale !== (scale = tween.cur() / target) &amp;&amp; scale !== 1 &amp;&amp; --maxIterations );			}			// Update tween properties			if ( parts ) {				start = tween.start = +start || +target || 0;				tween.unit = unit;				// If a +=/-= token was provided, we''re doing a relative animation				tween.end = parts[ 1 ] ?					start + ( parts[ 1 ] + 1 ) * parts[ 2 ] :					+parts[ 2 ];			}			return tween;		} ]	};// Animations created synchronously will run synchronouslyfunction createFxNow() {	setTimeout(function() {		fxNow = undefined;	});	return ( fxNow = jQuery.now() );}// Generate parameters to create a standard animationfunction genFx( type, includeWidth ) {	var which,		attrs = { height: type },		i = 0;	// if we include width, step value is 1 to do all cssExpand values,	// if we don''t include width, step value is 2 to skip over Left and Right	includeWidth = includeWidth ? 1 : 0;	for ( ; i &lt; 4 ; i += 2 - includeWidth ) {		which = cssExpand[ i ];		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;	}	if ( includeWidth ) {		attrs.opacity = attrs.width = type;	}	return attrs;}function createTween( value, prop, animation ) {	var tween,		collection = ( tweeners[ prop ] || [] ).concat( tweeners[ "*" ] ),		index = 0,		length = collection.length;	for ( ; index &lt; length; index++ ) {		if ( (tween = collection[ index ].call( animation, prop, value )) ) {			// we''re done with this property			return tween;		}	}}function defaultPrefilter( elem, props, opts ) {	/* jshint validthis: true */	var prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,		anim = this,		orig = {},		style = elem.style,		hidden = elem.nodeType &amp;&amp; isHidden( elem ),		dataShow = jQuery._data( elem, "fxshow" );	// handle queue: false promises	if ( !opts.queue ) {		hooks = jQuery._queueHooks( elem, "fx" );		if ( hooks.unqueued == null ) {			hooks.unqueued = 0;			oldfire = hooks.empty.fire;			hooks.empty.fire = function() {				if ( !hooks.unqueued ) {					oldfire();				}			};		}		hooks.unqueued++;		anim.always(function() {			// doing this makes sure that the complete handler will be called			// before this completes			anim.always(function() {				hooks.unqueued--;				if ( !jQuery.queue( elem, "fx" ).length ) {					hooks.empty.fire();				}			});		});	}	// height/width overflow pass	if ( elem.nodeType === 1 &amp;&amp; ( "height" in props || "width" in props ) ) {		// Make sure that nothing sneaks out		// Record all 3 overflow attributes because IE does not		// change the overflow attribute when overflowX and		// overflowY are set to the same value		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];		// Set display property to inline-block for height/width		// animations on inline elements that are having width/height animated		display = jQuery.css( elem, "display" );		// Test default display if display is currently "none"		checkDisplay = display === "none" ?			jQuery._data( elem, "olddisplay" ) || defaultDisplay( elem.nodeName ) : display;		if ( checkDisplay === "inline" &amp;&amp; jQuery.css( elem, "float" ) === "none" ) {			// inline-level elements accept inline-block;			// block-level elements need to be inline with layout			if ( !support.inlineBlockNeedsLayout || defaultDisplay( elem.nodeName ) === "inline" ) {				style.display = "inline-block";			} else {				style.zoom = 1;			}		}	}	if ( opts.overflow ) {		style.overflow = "hidden";		if ( !support.shrinkWrapBlocks() ) {			anim.always(function() {				style.overflow = opts.overflow[ 0 ];				style.overflowX = opts.overflow[ 1 ];				style.overflowY = opts.overflow[ 2 ];			});		}	}	// show/hide pass	for ( prop in props ) {		value = props[ prop ];		if ( rfxtypes.exec( value ) ) {			delete props[ prop ];			toggle = toggle || value === "toggle";			if ( value === ( hidden ? "hide" : "show" ) ) {				// If there is dataShow left over from a stopped hide or show and we are going to proceed with show, we should pretend to be hidden				if ( value === "show" &amp;&amp; dataShow &amp;&amp; dataShow[ prop ] !== undefined ) {					hidden = true;				} else {					continue;				}			}			orig[ prop ] = dataShow &amp;&amp; dataShow[ prop ] || jQuery.style( elem, prop );		// Any non-fx value stops us from restoring the original display value		} else {			display = undefined;		}	}	if ( !jQuery.isEmptyObject( orig ) ) {		if ( dataShow ) {			if ( "hidden" in dataShow ) {				hidden = dataShow.hidden;			}		} else {			dataShow = jQuery._data( elem, "fxshow", {} );		}		// store state if its toggle - enables .stop().toggle() to "reverse"		if ( toggle ) {			dataShow.hidden = !hidden;		}		if ( hidden ) {			jQuery( elem ).show();		} else {			anim.done(function() {				jQuery( elem ).hide();			});		}		anim.done(function() {			var prop;			jQuery._removeData( elem, "fxshow" );			for ( prop in orig ) {				jQuery.style( elem, prop, orig[ prop ] );			}		});		for ( prop in orig ) {			tween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );			if ( !( prop in dataShow ) ) {				dataShow[ prop ] = tween.start;				if ( hidden ) {					tween.end = tween.start;					tween.start = prop === "width" || prop === "height" ? 1 : 0;				}			}		}	// If this is a noop like .hide().hide(), restore an overwritten display value	} else if ( (display === "none" ? defaultDisplay( elem.nodeName ) : display) === "inline" ) {		style.display = display;	}}function propFilter( props, specialEasing ) {	var index, name, easing, value, hooks;	// camelCase, specialEasing and expand cssHook pass	for ( index in props ) {		name = jQuery.camelCase( index );		easing = specialEasing[ name ];		value = props[ index ];		if ( jQuery.isArray( value ) ) {			easing = value[ 1 ];			value = props[ index ] = value[ 0 ];		}		if ( index !== name ) {			props[ name ] = value;			delete props[ index ];		}		hooks = jQuery.cssHooks[ name ];		if ( hooks &amp;&amp; "expand" in hooks ) {			value = hooks.expand( value );			delete props[ name ];			// not quite $.extend, this wont overwrite keys already present.			// also - reusing ''index'' from above because we have the correct "name"			for ( index in value ) {				if ( !( index in props ) ) {					props[ index ] = value[ index ];					specialEasing[ index ] = easing;				}			}		} else {			specialEasing[ name ] = easing;		}	}}function Animation( elem, properties, options ) {	var result,		stopped,		index = 0,		length = animationPrefilters.length,		deferred = jQuery.Deferred().always( function() {			// don''t match elem in the :animated selector			delete tick.elem;		}),		tick = function() {			if ( stopped ) {				return false;			}			var currentTime = fxNow || createFxNow(),				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),				// archaic crash bug won''t allow us to use 1 - ( 0.5 || 0 ) (#12497)				temp = remaining / animation.duration || 0,				percent = 1 - temp,				index = 0,				length = animation.tweens.length;			for ( ; index &lt; length ; index++ ) {				animation.tweens[ index ].run( percent );			}			deferred.notifyWith( elem, [ animation, percent, remaining ]);			if ( percent &lt; 1 &amp;&amp; length ) {				return remaining;			} else {				deferred.resolveWith( elem, [ animation ] );				return false;			}		},		animation = deferred.promise({			elem: elem,			props: jQuery.extend( {}, properties ),			opts: jQuery.extend( true, { specialEasing: {} }, options ),			originalProperties: properties,			originalOptions: options,			startTime: fxNow || createFxNow(),			duration: options.duration,			tweens: [],			createTween: function( prop, end ) {				var tween = jQuery.Tween( elem, animation.opts, prop, end,						animation.opts.specialEasing[ prop ] || animation.opts.easing );				animation.tweens.push( tween );				return tween;			},			stop: function( gotoEnd ) {				var index = 0,					// if we are going to the end, we want to run all the tweens					// otherwise we skip this part					length = gotoEnd ? animation.tweens.length : 0;				if ( stopped ) {					return this;				}				stopped = true;				for ( ; index &lt; length ; index++ ) {					animation.tweens[ index ].run( 1 );				}				// resolve when we played the last frame				// otherwise, reject				if ( gotoEnd ) {					deferred.resolveWith( elem, [ animation, gotoEnd ] );				} else {					deferred.rejectWith( elem, [ animation, gotoEnd ] );				}				return this;			}		}),		props = animation.props;	propFilter( props, animation.opts.specialEasing );	for ( ; index &lt; length ; index++ ) {		result = animationPrefilters[ index ].call( animation, elem, props, animation.opts );		if ( result ) {			return result;		}	}	jQuery.map( props, createTween, animation );	if ( jQuery.isFunction( animation.opts.start ) ) {		animation.opts.start.call( elem, animation );	}	jQuery.fx.timer(		jQuery.extend( tick, {			elem: elem,			anim: animation,			queue: animation.opts.queue		})	);	// attach callbacks from options	return animation.progress( animation.opts.progress )		.done( animation.opts.done, animation.opts.complete )		.fail( animation.opts.fail )		.always( animation.opts.always );}jQuery.Animation = jQuery.extend( Animation, {	tweener: function( props, callback ) {		if ( jQuery.isFunction( props ) ) {			callback = props;			props = [ "*" ];		} else {			props = props.split(" ");		}		var prop,			index = 0,			length = props.length;		for ( ; index &lt; length ; index++ ) {			prop = props[ index ];			tweeners[ prop ] = tweeners[ prop ] || [];			tweeners[ prop ].unshift( callback );		}	},	prefilter: function( callback, prepend ) {		if ( prepend ) {			animationPrefilters.unshift( callback );		} else {			animationPrefilters.push( callback );		}	}});jQuery.speed = function( speed, easing, fn ) {	var opt = speed &amp;&amp; typeof speed === "object" ? jQuery.extend( {}, speed ) : {		complete: fn || !fn &amp;&amp; easing ||			jQuery.isFunction( speed ) &amp;&amp; speed,		duration: speed,		easing: fn &amp;&amp; easing || easing &amp;&amp; !jQuery.isFunction( easing ) &amp;&amp; easing	};	opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration :		opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;	// normalize opt.queue - true/undefined/null -&gt; "fx"	if ( opt.queue == null || opt.queue === true ) {		opt.queue = "fx";	}	// Queueing	opt.old = opt.complete;	opt.complete = function() {		if ( jQuery.isFunction( opt.old ) ) {			opt.old.call( this );		}		if ( opt.queue ) {			jQuery.dequeue( this, opt.queue );		}	};	return opt;};jQuery.fn.extend({	fadeTo: function( speed, to, easing, callback ) {		// show any hidden elements after setting opacity to 0		return this.filter( isHidden ).css( "opacity", 0 ).show()			// animate to the value specified			.end().animate({ opacity: to }, speed, easing, callback );	},	animate: function( prop, speed, easing, callback ) {		var empty = jQuery.isEmptyObject( prop ),			optall = jQuery.speed( speed, easing, callback ),			doAnimation = function() {				// Operate on a copy of prop so per-property easing won''t be lost				var anim = Animation( this, jQuery.extend( {}, prop ), optall );				// Empty animations, or finishing resolves immediately				if ( empty || jQuery._data( this, "finish" ) ) {					anim.stop( true );				}			};			doAnimation.finish = doAnimation;		return empty || optall.queue === false ?			this.each( doAnimation ) :			this.queue( optall.queue, doAnimation );	},	stop: function( type, clearQueue, gotoEnd ) {		var stopQueue = function( hooks ) {			var stop = hooks.stop;			delete hooks.stop;			stop( gotoEnd );		};		if ( typeof type !== "string" ) {			gotoEnd = clearQueue;			clearQueue = type;			type = undefined;		}		if ( clearQueue &amp;&amp; type !== false ) {			this.queue( type || "fx", [] );		}		return this.each(function() {			var dequeue = true,				index = type != null &amp;&amp; type + "queueHooks",				timers = jQuery.timers,				data = jQuery._data( this );			if ( index ) {				if ( data[ index ] &amp;&amp; data[ index ].stop ) {					stopQueue( data[ index ] );				}			} else {				for ( index in data ) {					if ( data[ index ] &amp;&amp; data[ index ].stop &amp;&amp; rrun.test( index ) ) {						stopQueue( data[ index ] );					}				}			}			for ( index = timers.length; index--; ) {				if ( timers[ index ].elem === this &amp;&amp; (type == null || timers[ index ].queue === type) ) {					timers[ index ].anim.stop( gotoEnd );					dequeue = false;					timers.splice( index, 1 );				}			}			// start the next in the queue if the last step wasn''t forced			// timers currently will call their complete callbacks, which will dequeue			// but only if they were gotoEnd			if ( dequeue || !gotoEnd ) {				jQuery.dequeue( this, type );			}		});	},	finish: function( type ) {		if ( type !== false ) {			type = type || "fx";		}		return this.each(function() {			var index,				data = jQuery._data( this ),				queue = data[ type + "queue" ],				hooks = data[ type + "queueHooks" ],				timers = jQuery.timers,				length = queue ? queue.length : 0;			// enable finishing flag on private data			data.finish = true;			// empty the queue first			jQuery.queue( this, type, [] );			if ( hooks &amp;&amp; hooks.stop ) {				hooks.stop.call( this, true );			}			// look for any active animations, and finish them			for ( index = timers.length; index--; ) {				if ( timers[ index ].elem === this &amp;&amp; timers[ index ].queue === type ) {					timers[ index ].anim.stop( true );					timers.splice( index, 1 );				}			}			// look for any animations in the old queue and finish them			for ( index = 0; index &lt; length; index++ ) {				if ( queue[ index ] &amp;&amp; queue[ index ].finish ) {					queue[ index ].finish.call( this );				}			}			// turn off finishing flag			delete data.finish;		});	}});jQuery.each([ "toggle", "show", "hide" ], function( i, name ) {	var cssFn = jQuery.fn[ name ];	jQuery.fn[ name ] = function( speed, easing, callback ) {		return speed == null || typeof speed === "boolean" ?			cssFn.apply( this, arguments ) :			this.animate( genFx( name, true ), speed, easing, callback );	};});// Generate shortcuts for custom animationsjQuery.each({	slideDown: genFx("show"),	slideUp: genFx("hide"),	slideToggle: genFx("toggle"),	fadeIn: { opacity: "show" },	fadeOut: { opacity: "hide" },	fadeToggle: { opacity: "toggle" }}, function( name, props ) {	jQuery.fn[ name ] = function( speed, easing, callback ) {		return this.animate( props, speed, easing, callback );	};});jQuery.timers = [];jQuery.fx.tick = function() {	var timer,		timers = jQuery.timers,		i = 0;	fxNow = jQuery.now();	for ( ; i &lt; timers.length; i++ ) {		timer = timers[ i ];		// Checks the timer has not already been removed		if ( !timer() &amp;&amp; timers[ i ] === timer ) {			timers.splice( i--, 1 );		}	}	if ( !timers.length ) {		jQuery.fx.stop();	}	fxNow = undefined;};jQuery.fx.timer = function( timer ) {	jQuery.timers.push( timer );	if ( timer() ) {		jQuery.fx.start();	} else {		jQuery.timers.pop();	}};jQuery.fx.interval = 13;jQuery.fx.start = function() {	if ( !timerId ) {		timerId = setInterval( jQuery.fx.tick, jQuery.fx.interval );	}};jQuery.fx.stop = function() {	clearInterval( timerId );	timerId = null;};jQuery.fx.speeds = {	slow: 600,	fast: 200,	// Default speed	_default: 400};// Based off of the plugin by Clint Helfers, with permission.// http://blindsignals.com/index.php/2009/07/jquery-delay/jQuery.fn.delay = function( time, type ) {	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;	type = type || "fx";	return this.queue( type, function( next, hooks ) {		var timeout = setTimeout( next, time );		hooks.stop = function() {			clearTimeout( timeout );		};	});};(function() {	// Minified: var a,b,c,d,e	var input, div, select, a, opt;	// Setup	div = document.createElement( "div" );	div.setAttribute( "className", "t" );	div.innerHTML = "  &lt;link/&gt;&lt;table&gt;&lt;/table&gt;&lt;a href=''/a''&gt;a&lt;/a&gt;&lt;input type=''checkbox''/&gt;";	a = div.getElementsByTagName("a")[ 0 ];	// First batch of tests.	select = document.createElement("select");	opt = select.appendChild( document.createElement("option") );	input = div.getElementsByTagName("input")[ 0 ];	a.style.cssText = "top:1px";	// Test setAttribute on camelCase class. If it works, we need attrFixes when doing get/setAttribute (ie6/7)	support.getSetAttribute = div.className !== "t";	// Get the style information from getAttribute	// (IE uses .cssText instead)	support.style = /top/.test( a.getAttribute("style") );	// Make sure that URLs aren''t manipulated	// (IE normalizes it by default)	support.hrefNormalized = a.getAttribute("href") === "/a";	// Check the default checkbox/radio value ("" on WebKit; "on" elsewhere)	support.checkOn = !!input.value;	// Make sure that a selected-by-default option has a working selected property.	// (WebKit defaults to false instead of true, IE too, if it''s in an optgroup)	support.optSelected = opt.selected;	// Tests for enctype support on a form (#6743)	support.enctype = !!document.createElement("form").enctype;	// Make sure that the options inside disabled selects aren''t marked as disabled	// (WebKit marks them as disabled)	select.disabled = true;	support.optDisabled = !opt.disabled;	// Support: IE8 only	// Check if we can trust getAttribute("value")	input = document.createElement( "input" );	input.setAttribute( "value", "" );	support.input = input.getAttribute( "value" ) === "";	// Check if an input maintains its value after becoming a radio	input.value = "t";	input.setAttribute( "type", "radio" );	support.radioValue = input.value === "t";})();var rreturn = /\r/g;jQuery.fn.extend({	val: function( value ) {		var hooks, ret, isFunction,			elem = this[0];		if ( !arguments.length ) {			if ( elem ) {				hooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase() ];				if ( hooks &amp;&amp; "get" in hooks &amp;&amp; (ret = hooks.get( elem, "value" )) !== undefined ) {					return ret;				}				ret = elem.value;				return typeof ret === "string" ?					// handle most common string cases					ret.replace(rreturn, "") :					// handle cases where value is null/undef or number					ret == null ? "" : ret;			}			return;		}		isFunction = jQuery.isFunction( value );		return this.each(function( i ) {			var val;			if ( this.nodeType !== 1 ) {				return;			}			if ( isFunction ) {				val = value.call( this, i, jQuery( this ).val() );			} else {				val = value;			}			// Treat null/undefined as ""; convert numbers to string			if ( val == null ) {				val = "";			} else if ( typeof val === "number" ) {				val += "";			} else if ( jQuery.isArray( val ) ) {				val = jQuery.map( val, function( value ) {					return value == null ? "" : value + "";				});			}			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];			// If set returns undefined, fall back to normal setting			if ( !hooks || !("set" in hooks) || hooks.set( this, val, "value" ) === undefined ) {				this.value = val;			}		});	}});jQuery.extend({	valHooks: {		option: {			get: function( elem ) {				var val = jQuery.find.attr( elem, "value" );				return val != null ?					val :					// Support: IE10-11+					// option.text throws exceptions (#14686, #14858)					jQuery.trim( jQuery.text( elem ) );			}		},		select: {			get: function( elem ) {				var value, option,					options = elem.options,					index = elem.selectedIndex,					one = elem.type === "select-one" || index &lt; 0,					values = one ? null : [],					max = one ? index + 1 : options.length,					i = index &lt; 0 ?						max :						one ? index : 0;				// Loop through all the selected options				for ( ; i &lt; max; i++ ) {					option = options[ i ];					// oldIE doesn''t update selected after form reset (#2551)					if ( ( option.selected || i === index ) &amp;&amp;							// Don''t return options that are disabled or in a disabled optgroup							( support.optDisabled ? !option.disabled : option.getAttribute("disabled") === null ) &amp;&amp;							( !option.parentNode.disabled || !jQuery.nodeName( option.parentNode, "optgroup" ) ) ) {						// Get the specific value for the option						value = jQuery( option ).val();						// We don''t need an array for one selects						if ( one ) {							return value;						}						// Multi-Selects return an array						values.push( value );					}				}				return values;			},			set: function( elem, value ) {				var optionSet, option,					options = elem.options,					values = jQuery.makeArray( value ),					i = options.length;				while ( i-- ) {					option = options[ i ];					if ( jQuery.inArray( jQuery.valHooks.option.get( option ), values ) &gt;= 0 ) {						// Support: IE6						// When new option element is added to select box we need to						// force reflow of newly added node in order to workaround delay						// of initialization properties						try {							option.selected = optionSet = true;						} catch ( _ ) {							// Will be executed only in IE6							option.scrollHeight;						}					} else {						option.selected = false;					}				}				// Force browsers to behave consistently when non-matching value is set				if ( !optionSet ) {					elem.selectedIndex = -1;				}				return options;			}		}	}});// Radios and checkboxes getter/setterjQuery.each([ "radio", "checkbox" ], function() {	jQuery.valHooks[ this ] = {		set: function( elem, value ) {			if ( jQuery.isArray( value ) ) {				return ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) &gt;= 0 );			}		}	};	if ( !support.checkOn ) {		jQuery.valHooks[ this ].get = function( elem ) {			// Support: Webkit			// "" is returned instead of "on" if a value isn''t specified			return elem.getAttribute("value") === null ? "on" : elem.value;		};	}});var nodeHook, boolHook,	attrHandle = jQuery.expr.attrHandle,	ruseDefault = /^(?:checked|selected)$/i,	getSetAttribute = support.getSetAttribute,	getSetInput = support.input;jQuery.fn.extend({	attr: function( name, value ) {		return access( this, jQuery.attr, name, value, arguments.length &gt; 1 );	},	removeAttr: function( name ) {		return this.each(function() {			jQuery.removeAttr( this, name );		});	}});jQuery.extend({	attr: function( elem, name, value ) {		var hooks, ret,			nType = elem.nodeType;		// don''t get/set attributes on text, comment and attribute nodes		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {			return;		}		// Fallback to prop when attributes are not supported		if ( typeof elem.getAttribute === strundefined ) {			return jQuery.prop( elem, name, value );		}		// All attributes are lowercase		// Grab necessary hook if one is defined		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {			name = name.toLowerCase();			hooks = jQuery.attrHooks[ name ] ||				( jQuery.expr.match.bool.test( name ) ? boolHook : nodeHook );		}		if ( value !== undefined ) {			if ( value === null ) {				jQuery.removeAttr( elem, name );			} else if ( hooks &amp;&amp; "set" in hooks &amp;&amp; (ret = hooks.set( elem, value, name )) !== undefined ) {				return ret;			} else {				elem.setAttribute( name, value + "" );				return value;			}		} else if ( hooks &amp;&amp; "get" in hooks &amp;&amp; (ret = hooks.get( elem, name )) !== null ) {			return ret;		} else {			ret = jQuery.find.attr( elem, name );			// Non-existent attributes return null, we normalize to undefined			return ret == null ?				undefined :				ret;		}	},	removeAttr: function( elem, value ) {		var name, propName,			i = 0,			attrNames = value &amp;&amp; value.match( rnotwhite );		if ( attrNames &amp;&amp; elem.nodeType === 1 ) {			while ( (name = attrNames[i++]) ) {				propName = jQuery.propFix[ name ] || name;				// Boolean attributes get special treatment (#10870)				if ( jQuery.expr.match.bool.test( name ) ) {					// Set corresponding property to false					if ( getSetInput &amp;&amp; getSetAttribute || !ruseDefault.test( name ) ) {						elem[ propName ] = false;					// Support: IE&lt;9					// Also clear defaultChecked/defaultSelected (if appropriate)					} else {						elem[ jQuery.camelCase( "default-" + name ) ] =							elem[ propName ] = false;					}				// See #9699 for explanation of this approach (setting first, then removal)				} else {					jQuery.attr( elem, name, "" );				}				elem.removeAttribute( getSetAttribute ? name : propName );			}		}	},	attrHooks: {		type: {			set: function( elem, value ) {				if ( !support.radioValue &amp;&amp; value === "radio" &amp;&amp; jQuery.nodeName(elem, "input") ) {					// Setting the type on a radio button after the value resets the value in IE6-9					// Reset value to default in case type is set after value during creation					var val = elem.value;					elem.setAttribute( "type", value );					if ( val ) {						elem.value = val;					}					return value;				}			}		}	}});// Hook for boolean attributesboolHook = {	set: function( elem, value, name ) {		if ( value === false ) {			// Remove boolean attributes when set to false			jQuery.removeAttr( elem, name );		} else if ( getSetInput &amp;&amp; getSetAttribute || !ruseDefault.test( name ) ) {			// IE&lt;8 needs the *property* name			elem.setAttribute( !getSetAttribute &amp;&amp; jQuery.propFix[ name ] || name, name );		// Use defaultChecked and defaultSelected for oldIE		} else {			elem[ jQuery.camelCase( "default-" + name ) ] = elem[ name ] = true;		}		return name;	}};// Retrieve booleans speciallyjQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {	var getter = attrHandle[ name ] || jQuery.find.attr;	attrHandle[ name ] = getSetInput &amp;&amp; getSetAttribute || !ruseDefault.test( name ) ?		function( elem, name, isXML ) {			var ret, handle;			if ( !isXML ) {				// Avoid an infinite loop by temporarily removing this function from the getter				handle = attrHandle[ name ];				attrHandle[ name ] = ret;				ret = getter( elem, name, isXML ) != null ?					name.toLowerCase() :					null;				attrHandle[ name ] = handle;			}			return ret;		} :		function( elem, name, isXML ) {			if ( !isXML ) {				return elem[ jQuery.camelCase( "default-" + name ) ] ?					name.toLowerCase() :					null;			}		};});// fix oldIE attropertiesif ( !getSetInput || !getSetAttribute ) {	jQuery.attrHooks.value = {		set: function( elem, value, name ) {			if ( jQuery.nodeName( elem, "input" ) ) {				// Does not return so that setAttribute is also used				elem.defaultValue = value;			} else {				// Use nodeHook if defined (#1954); otherwise setAttribute is fine				return nodeHook &amp;&amp; nodeHook.set( elem, value, name );			}		}	};}// IE6/7 do not support getting/setting some attributes with get/setAttributeif ( !getSetAttribute ) {	// Use this for any attribute in IE6/7	// This fixes almost every IE6/7 issue	nodeHook = {		set: function( elem, value, name ) {			// Set the existing or create a new attribute node			var ret = elem.getAttributeNode( name );			if ( !ret ) {				elem.setAttributeNode(					(ret = elem.ownerDocument.createAttribute( name ))				);			}			ret.value = value += "";			// Break association with cloned elements by also using setAttribute (#9646)			if ( name === "value" || value === elem.getAttribute( name ) ) {				return value;			}		}	};	// Some attributes are constructed with empty-string values when not defined	attrHandle.id = attrHandle.name = attrHandle.coords =		function( elem, name, isXML ) {			var ret;			if ( !isXML ) {				return (ret = elem.getAttributeNode( name )) &amp;&amp; ret.value !== "" ?					ret.value :					null;			}		};	// Fixing value retrieval on a button requires this module	jQuery.valHooks.button = {		get: function( elem, name ) {			var ret = elem.getAttributeNode( name );			if ( ret &amp;&amp; ret.specified ) {				return ret.value;			}		},		set: nodeHook.set	};	// Set contenteditable to false on removals(#10429)	// Setting to empty string throws an error as an invalid value	jQuery.attrHooks.contenteditable = {		set: function( elem, value, name ) {			nodeHook.set( elem, value === "" ? false : value, name );		}	};	// Set width and height to auto instead of 0 on empty string( Bug #8150 )	// This is for removals	jQuery.each([ "width", "height" ], function( i, name ) {		jQuery.attrHooks[ name ] = {			set: function( elem, value ) {				if ( value === "" ) {					elem.setAttribute( name, "auto" );					return value;				}			}		};	});}if ( !support.style ) {	jQuery.attrHooks.style = {		get: function( elem ) {			// Return undefined in the case of empty string			// Note: IE uppercases css property names, but if we were to .toLowerCase()			// .cssText, that would destroy case senstitivity in URL''s, like in "background"			return elem.style.cssText || undefined;		},		set: function( elem, value ) {			return ( elem.style.cssText = value + "" );		}	};}var rfocusable = /^(?:input|select|textarea|button|object)$/i,	rclickable = /^(?:a|area)$/i;jQuery.fn.extend({	prop: function( name, value ) {		return access( this, jQuery.prop, name, value, arguments.length &gt; 1 );	},	removeProp: function( name ) {		name = jQuery.propFix[ name ] || name;		return this.each(function() {			// try/catch handles cases where IE balks (such as removing a property on window)			try {				this[ name ] = undefined;				delete this[ name ];			} catch( e ) {}		});	}});jQuery.extend({	propFix: {		"for": "htmlFor",		"class": "className"	},	prop: function( elem, name, value ) {		var ret, hooks, notxml,			nType = elem.nodeType;		// don''t get/set properties on text, comment and attribute nodes		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {			return;		}		notxml = nType !== 1 || !jQuery.isXMLDoc( elem );		if ( notxml ) {			// Fix name and attach hooks			name = jQuery.propFix[ name ] || name;			hooks = jQuery.propHooks[ name ];		}		if ( value !== undefined ) {			return hooks &amp;&amp; "set" in hooks &amp;&amp; (ret = hooks.set( elem, value, name )) !== undefined ?				ret :				( elem[ name ] = value );		} else {			return hooks &amp;&amp; "get" in hooks &amp;&amp; (ret = hooks.get( elem, name )) !== null ?				ret :				elem[ name ];		}	},	propHooks: {		tabIndex: {			get: function( elem ) {				// elem.tabIndex doesn''t always return the correct value when it hasn''t been explicitly set				// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/				// Use proper attribute retrieval(#12072)				var tabindex = jQuery.find.attr( elem, "tabindex" );				return tabindex ?					parseInt( tabindex, 10 ) :					rfocusable.test( elem.nodeName ) || rclickable.test( elem.nodeName ) &amp;&amp; elem.href ?						0 :						-1;			}		}	}});// Some attributes require a special call on IE// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspxif ( !support.hrefNormalized ) {	// href/src property should get the full normalized URL (#10299/#12915)	jQuery.each([ "href", "src" ], function( i, name ) {		jQuery.propHooks[ name ] = {			get: function( elem ) {				return elem.getAttribute( name, 4 );			}		};	});}// Support: Safari, IE9+// mis-reports the default selected property of an option// Accessing the parent''s selectedIndex property fixes itif ( !support.optSelected ) {	jQuery.propHooks.selected = {		get: function( elem ) {			var parent = elem.parentNode;			if ( parent ) {				parent.selectedIndex;				// Make sure that it also works with optgroups, see #5701				if ( parent.parentNode ) {					parent.parentNode.selectedIndex;				}			}			return null;		}	};}jQuery.each([	"tabIndex",	"readOnly",	"maxLength",	"cellSpacing",	"cellPadding",	"rowSpan",	"colSpan",	"useMap",	"frameBorder",	"contentEditable"], function() {	jQuery.propFix[ this.toLowerCase() ] = this;});// IE6/7 call enctype encodingif ( !support.enctype ) {	jQuery.propFix.enctype = "encoding";}var rclass = /[\t\r\n\f]/g;jQuery.fn.extend({	addClass: function( value ) {		var classes, elem, cur, clazz, j, finalValue,			i = 0,			len = this.length,			proceed = typeof value === "string" &amp;&amp; value;		if ( jQuery.isFunction( value ) ) {			return this.each(function( j ) {				jQuery( this ).addClass( value.call( this, j, this.className ) );			});		}		if ( proceed ) {			// The disjunction here is for better compressibility (see removeClass)			classes = ( value || "" ).match( rnotwhite ) || [];			for ( ; i &lt; len; i++ ) {				elem = this[ i ];				cur = elem.nodeType === 1 &amp;&amp; ( elem.className ?					( " " + elem.className + " " ).replace( rclass, " " ) :					" "				);				if ( cur ) {					j = 0;					while ( (clazz = classes[j++]) ) {						if ( cur.indexOf( " " + clazz + " " ) &lt; 0 ) {							cur += clazz + " ";						}					}					// only assign if different to avoid unneeded rendering.					finalValue = jQuery.trim( cur );					if ( elem.className !== finalValue ) {						elem.className = finalValue;					}				}			}		}		return this;	},	removeClass: function( value ) {		var classes, elem, cur, clazz, j, finalValue,			i = 0,			len = this.length,			proceed = arguments.length === 0 || typeof value === "string" &amp;&amp; value;		if ( jQuery.isFunction( value ) ) {			return this.each(function( j ) {				jQuery( this ).removeClass( value.call( this, j, this.className ) );			});		}		if ( proceed ) {			classes = ( value || "" ).match( rnotwhite ) || [];			for ( ; i &lt; len; i++ ) {				elem = this[ i ];				// This expression is here for better compressibility (see addClass)				cur = elem.nodeType === 1 &amp;&amp; ( elem.className ?					( " " + elem.className + " " ).replace( rclass, " " ) :					""				);				if ( cur ) {					j = 0;					while ( (clazz = classes[j++]) ) {						// Remove *all* instances						while ( cur.indexOf( " " + clazz + " " ) &gt;= 0 ) {							cur = cur.replace( " " + clazz + " ", " " );						}					}					// only assign if different to avoid unneeded rendering.					finalValue = value ? jQuery.trim( cur ) : "";					if ( elem.className !== finalValue ) {						elem.className = finalValue;					}				}			}		}		return this;	},	toggleClass: function( value, stateVal ) {		var type = typeof value;		if ( typeof stateVal === "boolean" &amp;&amp; type === "string" ) {			return stateVal ? this.addClass( value ) : this.removeClass( value );		}		if ( jQuery.isFunction( value ) ) {			return this.each(function( i ) {				jQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );			});		}		return this.each(function() {			if ( type === "string" ) {				// toggle individual class names				var className,					i = 0,					self = jQuery( this ),					classNames = value.match( rnotwhite ) || [];				while ( (className = classNames[ i++ ]) ) {					// check each className given, space separated list					if ( self.hasClass( className ) ) {						self.removeClass( className );					} else {						self.addClass( className );					}				}			// Toggle whole class name			} else if ( type === strundefined || type === "boolean" ) {				if ( this.className ) {					// store className if set					jQuery._data( this, "__className__", this.className );				}				// If the element has a class name or if we''re passed "false",				// then remove the whole classname (if there was one, the above saved it).				// Otherwise bring back whatever was previously saved (if anything),				// falling back to the empty string if nothing was stored.				this.className = this.className || value === false ? "" : jQuery._data( this, "__className__" ) || "";			}		});	},	hasClass: function( selector ) {		var className = " " + selector + " ",			i = 0,			l = this.length;		for ( ; i &lt; l; i++ ) {			if ( this[i].nodeType === 1 &amp;&amp; (" " + this[i].className + " ").replace(rclass, " ").indexOf( className ) &gt;= 0 ) {				return true;			}		}		return false;	}});// Return jQuery for attributes-only inclusionjQuery.each( ("blur focus focusin focusout load resize scroll unload click dblclick " +	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +	"change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {	// Handle event binding	jQuery.fn[ name ] = function( data, fn ) {		return arguments.length &gt; 0 ?			this.on( name, null, data, fn ) :			this.trigger( name );	};});jQuery.fn.extend({	hover: function( fnOver, fnOut ) {		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );	},	bind: function( types, data, fn ) {		return this.on( types, null, data, fn );	},	unbind: function( types, fn ) {		return this.off( types, null, fn );	},	delegate: function( selector, types, data, fn ) {		return this.on( types, selector, data, fn );	},	undelegate: function( selector, types, fn ) {		// ( namespace ) or ( selector, types [, fn] )		return arguments.length === 1 ? this.off( selector, "**" ) : this.off( types, selector || "**", fn );	}});var nonce = jQuery.now();var rquery = (/\?/);var rvalidtokens = /(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;jQuery.parseJSON = function( data ) {	// Attempt to parse using the native JSON parser first	if ( window.JSON &amp;&amp; window.JSON.parse ) {		// Support: Android 2.3		// Workaround failure to string-cast null input		return window.JSON.parse( data + "" );	}	var requireNonComma,		depth = null,		str = jQuery.trim( data + "" );	// Guard against invalid (and possibly dangerous) input by ensuring that nothing remains	// after removing valid tokens	return str &amp;&amp; !jQuery.trim( str.replace( rvalidtokens, function( token, comma, open, close ) {		// Force termination if we see a misplaced comma		if ( requireNonComma &amp;&amp; comma ) {			depth = 0;		}		// Perform no more replacements after returning to outermost depth		if ( depth === 0 ) {			return token;		}		// Commas must not follow "[", "{", or ","		requireNonComma = open || comma;		// Determine new depth		// array/object open ("[" or "{"): depth += true - false (increment)		// array/object close ("]" or "}"): depth += false - true (decrement)		// other cases ("," or primitive): depth += true - true (numeric cast)		depth += !close - !open;		// Remove this token		return "";	}) ) ?		( Function( "return " + str ) )() :		jQuery.error( "Invalid JSON: " + data );};// Cross-browser xml parsingjQuery.parseXML = function( data ) {	var xml, tmp;	if ( !data || typeof data !== "string" ) {		return null;	}	try {		if ( window.DOMParser ) { // Standard			tmp = new DOMParser();			xml = tmp.parseFromString( data, "text/xml" );		} else { // IE			xml = new ActiveXObject( "Microsoft.XMLDOM" );			xml.async = "false";			xml.loadXML( data );		}	} catch( e ) {		xml = undefined;	}	if ( !xml || !xml.documentElement || xml.getElementsByTagName( "parsererror" ).length ) {		jQuery.error( "Invalid XML: " + data );	}	return xml;};var	// Document location	ajaxLocParts,	ajaxLocation,	rhash = /#.*$/,	rts = /([?&amp;])_=[^&amp;]*/,	rheaders = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg, // IE leaves an \r character at EOL	// #7653, #8125, #8152: local protocol detection	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,	rnoContent = /^(?:GET|HEAD)$/,	rprotocol = /^\/\//,	rurl = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,	/* Prefilters	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)	 * 2) These are called:	 *    - BEFORE asking for a transport	 *    - AFTER param serialization (s.data is a string if s.processData is true)	 * 3) key is the dataType	 * 4) the catchall symbol "*" can be used	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed	 */	prefilters = {},	/* Transports bindings	 * 1) key is the dataType	 * 2) the catchall symbol "*" can be used	 * 3) selection will start with transport dataType and THEN go to "*" if needed	 */	transports = {},	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression	allTypes = "*/".concat("*");// #8138, IE may throw an exception when accessing// a field from window.location if document.domain has been settry {	ajaxLocation = location.href;} catch( e ) {	// Use the href attribute of an A element	// since IE will modify it given document.location	ajaxLocation = document.createElement( "a" );	ajaxLocation.href = "";	ajaxLocation = ajaxLocation.href;}// Segment location into partsajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransportfunction addToPrefiltersOrTransports( structure ) {	// dataTypeExpression is optional and defaults to "*"	return function( dataTypeExpression, func ) {		if ( typeof dataTypeExpression !== "string" ) {			func = dataTypeExpression;			dataTypeExpression = "*";		}		var dataType,			i = 0,			dataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];		if ( jQuery.isFunction( func ) ) {			// For each dataType in the dataTypeExpression			while ( (dataType = dataTypes[i++]) ) {				// Prepend if requested				if ( dataType.charAt( 0 ) === "+" ) {					dataType = dataType.slice( 1 ) || "*";					(structure[ dataType ] = structure[ dataType ] || []).unshift( func );				// Otherwise append				} else {					(structure[ dataType ] = structure[ dataType ] || []).push( func );				}			}		}	};}// Base inspection function for prefilters and transportsfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {	var inspected = {},		seekingTransport = ( structure === transports );	function inspect( dataType ) {		var selected;		inspected[ dataType ] = true;		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );			if ( typeof dataTypeOrTransport === "string" &amp;&amp; !seekingTransport &amp;&amp; !inspected[ dataTypeOrTransport ] ) {				options.dataTypes.unshift( dataTypeOrTransport );				inspect( dataTypeOrTransport );				return false;			} else if ( seekingTransport ) {				return !( selected = dataTypeOrTransport );			}		});		return selected;	}	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] &amp;&amp; inspect( "*" );}// A special extend for ajax options// that takes "flat" options (not to be deep extended)// Fixes #9887function ajaxExtend( target, src ) {	var deep, key,		flatOptions = jQuery.ajaxSettings.flatOptions || {};	for ( key in src ) {		if ( src[ key ] !== undefined ) {			( flatOptions[ key ] ? target : ( deep || (deep = {}) ) )[ key ] = src[ key ];		}	}	if ( deep ) {		jQuery.extend( true, target, deep );	}	return target;}/* Handles responses to an ajax request: * - finds the right dataType (mediates between content-type and expected dataType) * - returns the corresponding response */function ajaxHandleResponses( s, jqXHR, responses ) {	var firstDataType, ct, finalDataType, type,		contents = s.contents,		dataTypes = s.dataTypes;	// Remove auto dataType and get content-type in the process	while ( dataTypes[ 0 ] === "*" ) {		dataTypes.shift();		if ( ct === undefined ) {			ct = s.mimeType || jqXHR.getResponseHeader("Content-Type");		}	}	// Check if we''re dealing with a known content-type	if ( ct ) {		for ( type in contents ) {			if ( contents[ type ] &amp;&amp; contents[ type ].test( ct ) ) {				dataTypes.unshift( type );				break;			}		}	}	// Check to see if we have a response for the expected dataType	if ( dataTypes[ 0 ] in responses ) {		finalDataType = dataTypes[ 0 ];	} else {		// Try convertible dataTypes		for ( type in responses ) {			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[0] ] ) {				finalDataType = type;				break;			}			if ( !firstDataType ) {				firstDataType = type;			}		}		// Or just use first one		finalDataType = finalDataType || firstDataType;	}	// If we found a dataType	// We add the dataType to the list if needed	// and return the corresponding response	if ( finalDataType ) {		if ( finalDataType !== dataTypes[ 0 ] ) {			dataTypes.unshift( finalDataType );		}		return responses[ finalDataType ];	}}/* Chain conversions given the request and the original response * Also sets the responseXXX fields on the jqXHR instance */function ajaxConvert( s, response, jqXHR, isSuccess ) {	var conv2, current, conv, tmp, prev,		converters = {},		// Work with a copy of dataTypes in case we need to modify it for conversion		dataTypes = s.dataTypes.slice();	// Create converters map with lowercased keys	if ( dataTypes[ 1 ] ) {		for ( conv in s.converters ) {			converters[ conv.toLowerCase() ] = s.converters[ conv ];		}	}	current = dataTypes.shift();	// Convert to each sequential dataType	while ( current ) {		if ( s.responseFields[ current ] ) {			jqXHR[ s.responseFields[ current ] ] = response;		}		// Apply the dataFilter if provided		if ( !prev &amp;&amp; isSuccess &amp;&amp; s.dataFilter ) {			response = s.dataFilter( response, s.dataType );		}		prev = current;		current = dataTypes.shift();		if ( current ) {			// There''s only work to do if current dataType is non-auto			if ( current === "*" ) {				current = prev;			// Convert response if prev dataType is non-auto and differs from current			} else if ( prev !== "*" &amp;&amp; prev !== current ) {				// Seek a direct converter				conv = converters[ prev + " " + current ] || converters[ "* " + current ];				// If none found, seek a pair				if ( !conv ) {					for ( conv2 in converters ) {						// If conv2 outputs current						tmp = conv2.split( " " );						if ( tmp[ 1 ] === current ) {							// If prev can be converted to accepted input							conv = converters[ prev + " " + tmp[ 0 ] ] ||								converters[ "* " + tmp[ 0 ] ];							if ( conv ) {								// Condense equivalence converters								if ( conv === true ) {									conv = converters[ conv2 ];								// Otherwise, insert the intermediate dataType								} else if ( converters[ conv2 ] !== true ) {									current = tmp[ 0 ];									dataTypes.unshift( tmp[ 1 ] );								}								break;							}						}					}				}				// Apply converter (if not an equivalence)				if ( conv !== true ) {					// Unless errors are allowed to bubble, catch and return them					if ( conv &amp;&amp; s[ "throws" ] ) {						response = conv( response );					} else {						try {							response = conv( response );						} catch ( e ) {							return { state: "parsererror", error: conv ? e : "No conversion from " + prev + " to " + current };						}					}				}			}		}	}	return { state: "success", data: response };}jQuery.extend({	// Counter for holding the number of active queries	active: 0,	// Last-Modified header cache for next request	lastModified: {},	etag: {},	ajaxSettings: {		url: ajaxLocation,		type: "GET",		isLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),		global: true,		processData: true,		async: true,		contentType: "application/x-www-form-urlencoded; charset=UTF-8",		/*		timeout: 0,		data: null,		dataType: null,		username: null,		password: null,		cache: null,		throws: false,		traditional: false,		headers: {},		*/		accepts: {			"*": allTypes,			text: "text/plain",			html: "text/html",			xml: "application/xml, text/xml",			json: "application/json, text/javascript"		},		contents: {			xml: /xml/,			html: /html/,			json: /json/		},		responseFields: {			xml: "responseXML",			text: "responseText",			json: "responseJSON"		},		// Data converters		// Keys separate source (or catchall "*") and destination types with a single space		converters: {			// Convert anything to text			"* text": String,			// Text to html (true = no transformation)			"text html": true,			// Evaluate text as a json expression			"text json": jQuery.parseJSON,			// Parse text as xml			"text xml": jQuery.parseXML		},		// For options that shouldn''t be deep extended:		// you can add your own custom options here if		// and when you create one that shouldn''t be		// deep extended (see ajaxExtend)		flatOptions: {			url: true,			context: true		}	},	// Creates a full fledged settings object into target	// with both ajaxSettings and settings fields.	// If target is omitted, writes into ajaxSettings.	ajaxSetup: function( target, settings ) {		return settings ?			// Building a settings object			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :			// Extending ajaxSettings			ajaxExtend( jQuery.ajaxSettings, target );	},	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),	ajaxTransport: addToPrefiltersOrTransports( transports ),	// Main method	ajax: function( url, options ) {		// If url is an object, simulate pre-1.5 signature		if ( typeof url === "object" ) {			options = url;			url = undefined;		}		// Force options to be an object		options = options || {};		var // Cross-domain detection vars			parts,			// Loop variable			i,			// URL without anti-cache param			cacheURL,			// Response headers as string			responseHeadersString,			// timeout handle			timeoutTimer,			// To know if global events are to be dispatched			fireGlobals,			transport,			// Response headers			responseHeaders,			// Create the final options object			s = jQuery.ajaxSetup( {}, options ),			// Callbacks context			callbackContext = s.context || s,			// Context for global events is callbackContext if it is a DOM node or jQuery collection			globalEventContext = s.context &amp;&amp; ( callbackContext.nodeType || callbackContext.jquery ) ?				jQuery( callbackContext ) :				jQuery.event,			// Deferreds			deferred = jQuery.Deferred(),			completeDeferred = jQuery.Callbacks("once memory"),			// Status-dependent callbacks			statusCode = s.statusCode || {},			// Headers (they are sent all at once)			requestHeaders = {},			requestHeadersNames = {},			// The jqXHR state			state = 0,			// Default abort message			strAbort = "canceled",			// Fake xhr			jqXHR = {				readyState: 0,				// Builds headers hashtable if needed				getResponseHeader: function( key ) {					var match;					if ( state === 2 ) {						if ( !responseHeaders ) {							responseHeaders = {};							while ( (match = rheaders.exec( responseHeadersString )) ) {								responseHeaders[ match[1].toLowerCase() ] = match[ 2 ];							}						}						match = responseHeaders[ key.toLowerCase() ];					}					return match == null ? null : match;				},				// Raw string				getAllResponseHeaders: function() {					return state === 2 ? responseHeadersString : null;				},				// Caches the header				setRequestHeader: function( name, value ) {					var lname = name.toLowerCase();					if ( !state ) {						name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;						requestHeaders[ name ] = value;					}					return this;				},				// Overrides response content-type header				overrideMimeType: function( type ) {					if ( !state ) {						s.mimeType = type;					}					return this;				},				// Status-dependent callbacks				statusCode: function( map ) {					var code;					if ( map ) {						if ( state &lt; 2 ) {							for ( code in map ) {								// Lazy-add the new callback in a way that preserves old ones								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];							}						} else {							// Execute the appropriate callbacks							jqXHR.always( map[ jqXHR.status ] );						}					}					return this;				},				// Cancel the request				abort: function( statusText ) {					var finalText = statusText || strAbort;					if ( transport ) {						transport.abort( finalText );					}					done( 0, finalText );					return this;				}			};		// Attach deferreds		deferred.promise( jqXHR ).complete = completeDeferred.add;		jqXHR.success = jqXHR.done;		jqXHR.error = jqXHR.fail;		// Remove hash character (#7531: and string promotion)		// Add protocol if not provided (#5866: IE7 issue with protocol-less urls)		// Handle falsy url in the settings object (#10093: consistency with old signature)		// We also use the url parameter if available		s.url = ( ( url || s.url || ajaxLocation ) + "" ).replace( rhash, "" ).replace( rprotocol, ajaxLocParts[ 1 ] + "//" );		// Alias method option to type as per ticket #12004		s.type = options.method || options.type || s.method || s.type;		// Extract dataTypes list		s.dataTypes = jQuery.trim( s.dataType || "*" ).toLowerCase().match( rnotwhite ) || [ "" ];		// A cross-domain request is in order when we have a protocol:host:port mismatch		if ( s.crossDomain == null ) {			parts = rurl.exec( s.url.toLowerCase() );			s.crossDomain = !!( parts &amp;&amp;				( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||					( parts[ 3 ] || ( parts[ 1 ] === "http:" ? "80" : "443" ) ) !==						( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === "http:" ? "80" : "443" ) ) )			);		}		// Convert data if not already a string		if ( s.data &amp;&amp; s.processData &amp;&amp; typeof s.data !== "string" ) {			s.data = jQuery.param( s.data, s.traditional );		}		// Apply prefilters		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );		// If request was aborted inside a prefilter, stop there		if ( state === 2 ) {			return jqXHR;		}		// We can fire global events as of now if asked to		// Don''t fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)		fireGlobals = jQuery.event &amp;&amp; s.global;		// Watch for a new set of requests		if ( fireGlobals &amp;&amp; jQuery.active++ === 0 ) {			jQuery.event.trigger("ajaxStart");		}		// Uppercase the type		s.type = s.type.toUpperCase();		// Determine if request has content		s.hasContent = !rnoContent.test( s.type );		// Save the URL in case we''re toying with the If-Modified-Since		// and/or If-None-Match header later on		cacheURL = s.url;		// More options handling for requests with no content		if ( !s.hasContent ) {			// If data is available, append data to url			if ( s.data ) {				cacheURL = ( s.url += ( rquery.test( cacheURL ) ? "&amp;" : "?" ) + s.data );				// #9682: remove data so that it''s not used in an eventual retry				delete s.data;			}			// Add anti-cache in url if needed			if ( s.cache === false ) {				s.url = rts.test( cacheURL ) ?					// If there is already a ''_'' parameter, set its value					cacheURL.replace( rts, "$1_=" + nonce++ ) :					// Otherwise add one to the end					cacheURL + ( rquery.test( cacheURL ) ? "&amp;" : "?" ) + "_=" + nonce++;			}		}		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.		if ( s.ifModified ) {			if ( jQuery.lastModified[ cacheURL ] ) {				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );			}			if ( jQuery.etag[ cacheURL ] ) {				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );			}		}		// Set the correct header, if data is being sent		if ( s.data &amp;&amp; s.hasContent &amp;&amp; s.contentType !== false || options.contentType ) {			jqXHR.setRequestHeader( "Content-Type", s.contentType );		}		// Set the Accepts header for the server, depending on the dataType		jqXHR.setRequestHeader(			"Accept",			s.dataTypes[ 0 ] &amp;&amp; s.accepts[ s.dataTypes[0] ] ?				s.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :				s.accepts[ "*" ]		);		// Check for headers option		for ( i in s.headers ) {			jqXHR.setRequestHeader( i, s.headers[ i ] );		}		// Allow custom headers/mimetypes and early abort		if ( s.beforeSend &amp;&amp; ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {			// Abort if not done already and return			return jqXHR.abort();		}		// aborting is no longer a cancellation		strAbort = "abort";		// Install callbacks on deferreds		for ( i in { success: 1, error: 1, complete: 1 } ) {			jqXHR[ i ]( s[ i ] );		}		// Get transport		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );		// If no transport, we auto-abort		if ( !transport ) {			done( -1, "No Transport" );		} else {			jqXHR.readyState = 1;			// Send global event			if ( fireGlobals ) {				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );			}			// Timeout			if ( s.async &amp;&amp; s.timeout &gt; 0 ) {				timeoutTimer = setTimeout(function() {					jqXHR.abort("timeout");				}, s.timeout );			}			try {				state = 1;				transport.send( requestHeaders, done );			} catch ( e ) {				// Propagate exception as error if not done				if ( state &lt; 2 ) {					done( -1, e );				// Simply rethrow otherwise				} else {					throw e;				}			}		}		// Callback for when everything is done		function done( status, nativeStatusText, responses, headers ) {			var isSuccess, success, error, response, modified,				statusText = nativeStatusText;			// Called once			if ( state === 2 ) {				return;			}			// State is "done" now			state = 2;			// Clear timeout if it exists			if ( timeoutTimer ) {				clearTimeout( timeoutTimer );			}			// Dereference transport for early garbage collection			// (no matter how long the jqXHR object will be used)			transport = undefined;			// Cache response headers			responseHeadersString = headers || "";			// Set readyState			jqXHR.readyState = status &gt; 0 ? 4 : 0;			// Determine if successful			isSuccess = status &gt;= 200 &amp;&amp; status &lt; 300 || status === 304;			// Get response data			if ( responses ) {				response = ajaxHandleResponses( s, jqXHR, responses );			}			// Convert no matter what (that way responseXXX fields are always set)			response = ajaxConvert( s, response, jqXHR, isSuccess );			// If successful, handle type chaining			if ( isSuccess ) {				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.				if ( s.ifModified ) {					modified = jqXHR.getResponseHeader("Last-Modified");					if ( modified ) {						jQuery.lastModified[ cacheURL ] = modified;					}					modified = jqXHR.getResponseHeader("etag");					if ( modified ) {						jQuery.etag[ cacheURL ] = modified;					}				}				// if no content				if ( status === 204 || s.type === "HEAD" ) {					statusText = "nocontent";				// if not modified				} else if ( status === 304 ) {					statusText = "notmodified";				// If we have data, let''s convert it				} else {					statusText = response.state;					success = response.data;					error = response.error;					isSuccess = !error;				}			} else {				// We extract error from statusText				// then normalize statusText and status for non-aborts				error = statusText;				if ( status || !statusText ) {					statusText = "error";					if ( status &lt; 0 ) {						status = 0;					}				}			}			// Set data for the fake xhr object			jqXHR.status = status;			jqXHR.statusText = ( nativeStatusText || statusText ) + "";			// Success/Error			if ( isSuccess ) {				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );			} else {				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );			}			// Status-dependent callbacks			jqXHR.statusCode( statusCode );			statusCode = undefined;			if ( fireGlobals ) {				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",					[ jqXHR, s, isSuccess ? success : error ] );			}			// Complete			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );			if ( fireGlobals ) {				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );				// Handle the global AJAX counter				if ( !( --jQuery.active ) ) {					jQuery.event.trigger("ajaxStop");				}			}		}		return jqXHR;	},	getJSON: function( url, data, callback ) {		return jQuery.get( url, data, callback, "json" );	},	getScript: function( url, callback ) {		return jQuery.get( url, undefined, callback, "script" );	}});jQuery.each( [ "get", "post" ], function( i, method ) {	jQuery[ method ] = function( url, data, callback, type ) {		// shift arguments if data argument was omitted		if ( jQuery.isFunction( data ) ) {			type = type || callback;			callback = data;			data = undefined;		}		return jQuery.ajax({			url: url,			type: method,			dataType: type,			data: data,			success: callback		});	};});jQuery._evalUrl = function( url ) {	return jQuery.ajax({		url: url,		type: "GET",		dataType: "script",		async: false,		global: false,		"throws": true	});};jQuery.fn.extend({	wrapAll: function( html ) {		if ( jQuery.isFunction( html ) ) {			return this.each(function(i) {				jQuery(this).wrapAll( html.call(this, i) );			});		}		if ( this[0] ) {			// The elements to wrap the target around			var wrap = jQuery( html, this[0].ownerDocument ).eq(0).clone(true);			if ( this[0].parentNode ) {				wrap.insertBefore( this[0] );			}			wrap.map(function() {				var elem = this;				while ( elem.firstChild &amp;&amp; elem.firstChild.nodeType === 1 ) {					elem = elem.firstChild;				}				return elem;			}).append( this );		}		return this;	},	wrapInner: function( html ) {		if ( jQuery.isFunction( html ) ) {			return this.each(function(i) {				jQuery(this).wrapInner( html.call(this, i) );			});		}		return this.each(function() {			var self = jQuery( this ),				contents = self.contents();			if ( contents.length ) {				contents.wrapAll( html );			} else {				self.append( html );			}		});	},	wrap: function( html ) {		var isFunction = jQuery.isFunction( html );		return this.each(function(i) {			jQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );		});	},	unwrap: function() {		return this.parent().each(function() {			if ( !jQuery.nodeName( this, "body" ) ) {				jQuery( this ).replaceWith( this.childNodes );			}		}).end();	}});jQuery.expr.filters.hidden = function( elem ) {	// Support: Opera &lt;= 12.12	// Opera reports offsetWidths and offsetHeights less than zero on some elements	return elem.offsetWidth &lt;= 0 &amp;&amp; elem.offsetHeight &lt;= 0 ||		(!support.reliableHiddenOffsets() &amp;&amp;			((elem.style &amp;&amp; elem.style.display) || jQuery.css( elem, "display" )) === "none");};jQuery.expr.filters.visible = function( elem ) {	return !jQuery.expr.filters.hidden( elem );};var r20 = /%20/g,	rbracket = /\[\]$/,	rCRLF = /\r?\n/g,	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,	rsubmittable = /^(?:input|select|textarea|keygen)/i;function buildParams( prefix, obj, traditional, add ) {	var name;	if ( jQuery.isArray( obj ) ) {		// Serialize array item.		jQuery.each( obj, function( i, v ) {			if ( traditional || rbracket.test( prefix ) ) {				// Treat each array item as a scalar.				add( prefix, v );			} else {				// Item is non-scalar (array or object), encode its numeric index.				buildParams( prefix + "[" + ( typeof v === "object" ? i : "" ) + "]", v, traditional, add );			}		});	} else if ( !traditional &amp;&amp; jQuery.type( obj ) === "object" ) {		// Serialize object item.		for ( name in obj ) {			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );		}	} else {		// Serialize scalar item.		add( prefix, obj );	}}// Serialize an array of form elements or a set of// key/values into a query stringjQuery.param = function( a, traditional ) {	var prefix,		s = [],		add = function( key, value ) {			// If value is a function, invoke it and return its value			value = jQuery.isFunction( value ) ? value() : ( value == null ? "" : value );			s[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );		};	// Set traditional to true for jQuery &lt;= 1.3.2 behavior.	if ( traditional === undefined ) {		traditional = jQuery.ajaxSettings &amp;&amp; jQuery.ajaxSettings.traditional;	}	// If an array was passed in, assume that it is an array of form elements.	if ( jQuery.isArray( a ) || ( a.jquery &amp;&amp; !jQuery.isPlainObject( a ) ) ) {		// Serialize the form elements		jQuery.each( a, function() {			add( this.name, this.value );		});	} else {		// If traditional, encode the "old" way (the way 1.3.2 or older		// did it), otherwise encode params recursively.		for ( prefix in a ) {			buildParams( prefix, a[ prefix ], traditional, add );		}	}	// Return the resulting serialization	return s.join( "&amp;" ).replace( r20, "+" );};jQuery.fn.extend({	serialize: function() {		return jQuery.param( this.serializeArray() );	},	serializeArray: function() {		return this.map(function() {			// Can add propHook for "elements" to filter or add form elements			var elements = jQuery.prop( this, "elements" );			return elements ? jQuery.makeArray( elements ) : this;		})		.filter(function() {			var type = this.type;			// Use .is(":disabled") so that fieldset[disabled] works			return this.name &amp;&amp; !jQuery( this ).is( ":disabled" ) &amp;&amp;				rsubmittable.test( this.nodeName ) &amp;&amp; !rsubmitterTypes.test( type ) &amp;&amp;				( this.checked || !rcheckableType.test( type ) );		})		.map(function( i, elem ) {			var val = jQuery( this ).val();			return val == null ?				null :				jQuery.isArray( val ) ?					jQuery.map( val, function( val ) {						return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };					}) :					{ name: elem.name, value: val.replace( rCRLF, "\r\n" ) };		}).get();	}});// Create the request object// (This is still attached to ajaxSettings for backward compatibility)jQuery.ajaxSettings.xhr = window.ActiveXObject !== undefined ?	// Support: IE6+	function() {		// XHR cannot access local files, always use ActiveX for that case		return !this.isLocal &amp;&amp;			// Support: IE7-8			// oldIE XHR does not support non-RFC2616 methods (#13240)			// See http://msdn.microsoft.com/en-us/library/ie/ms536648(v=vs.85).aspx			// and http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9			// Although this check for six methods instead of eight			// since IE also does not support "trace" and "connect"			/^(get|post|head|put|delete|options)$/i.test( this.type ) &amp;&amp;			createStandardXHR() || createActiveXHR();	} :	// For all other browsers, use the standard XMLHttpRequest object	createStandardXHR;var xhrId = 0,	xhrCallbacks = {},	xhrSupported = jQuery.ajaxSettings.xhr();// Support: IE&lt;10// Open requests must be manually aborted on unload (#5280)// See https://support.microsoft.com/kb/2856746 for more infoif ( window.attachEvent ) {	window.attachEvent( "onunload", function() {		for ( var key in xhrCallbacks ) {			xhrCallbacks[ key ]( undefined, true );		}	});}// Determine support propertiessupport.cors = !!xhrSupported &amp;&amp; ( "withCredentials" in xhrSupported );xhrSupported = support.ajax = !!xhrSupported;// Create transport if the browser can provide an xhrif ( xhrSupported ) {	jQuery.ajaxTransport(function( options ) {		// Cross domain only allowed if supported through XMLHttpRequest		if ( !options.crossDomain || support.cors ) {			var callback;			return {				send: function( headers, complete ) {					var i,						xhr = options.xhr(),						id = ++xhrId;					// Open the socket					xhr.open( options.type, options.url, options.async, options.username, options.password );					// Apply custom fields if provided					if ( options.xhrFields ) {						for ( i in options.xhrFields ) {							xhr[ i ] = options.xhrFields[ i ];						}					}					// Override mime type if needed					if ( options.mimeType &amp;&amp; xhr.overrideMimeType ) {						xhr.overrideMimeType( options.mimeType );					}					// X-Requested-With header					// For cross-domain requests, seeing as conditions for a preflight are					// akin to a jigsaw puzzle, we simply never set it to be sure.					// (it can always be set on a per-request basis or even using ajaxSetup)					// For same-domain requests, won''t change header if already provided.					if ( !options.crossDomain &amp;&amp; !headers["X-Requested-With"] ) {						headers["X-Requested-With"] = "XMLHttpRequest";					}					// Set headers					for ( i in headers ) {						// Support: IE&lt;9						// IE''s ActiveXObject throws a ''Type Mismatch'' exception when setting						// request header to a null-value.						//						// To keep consistent with other XHR implementations, cast the value						// to string and ignore `undefined`.						if ( headers[ i ] !== undefined ) {							xhr.setRequestHeader( i, headers[ i ] + "" );						}					}					// Do send the request					// This may raise an exception which is actually					// handled in jQuery.ajax (so no try/catch here)					xhr.send( ( options.hasContent &amp;&amp; options.data ) || null );					// Listener					callback = function( _, isAbort ) {						var status, statusText, responses;						// Was never called and is aborted or complete						if ( callback &amp;&amp; ( isAbort || xhr.readyState === 4 ) ) {							// Clean up							delete xhrCallbacks[ id ];							callback = undefined;							xhr.onreadystatechange = jQuery.noop;							// Abort manually if needed							if ( isAbort ) {								if ( xhr.readyState !== 4 ) {									xhr.abort();								}							} else {								responses = {};								status = xhr.status;								// Support: IE&lt;10								// Accessing binary-data responseText throws an exception								// (#11426)								if ( typeof xhr.responseText === "string" ) {									responses.text = xhr.responseText;								}								// Firefox throws an exception when accessing								// statusText for faulty cross-domain requests								try {									statusText = xhr.statusText;								} catch( e ) {									// We normalize with Webkit giving an empty statusText									statusText = "";								}								// Filter status for non standard behaviors								// If the request is local and we have data: assume a success								// (success with no data won''t get notified, that''s the best we								// can do given current implementations)								if ( !status &amp;&amp; options.isLocal &amp;&amp; !options.crossDomain ) {									status = responses.text ? 200 : 404;								// IE - #1450: sometimes returns 1223 when it should be 204								} else if ( status === 1223 ) {									status = 204;								}							}						}						// Call complete if needed						if ( responses ) {							complete( status, statusText, responses, xhr.getAllResponseHeaders() );						}					};					if ( !options.async ) {						// if we''re in sync mode we fire the callback						callback();					} else if ( xhr.readyState === 4 ) {						// (IE6 &amp; IE7) if it''s in cache and has been						// retrieved directly we need to fire the callback						setTimeout( callback );					} else {						// Add to the list of active xhr callbacks						xhr.onreadystatechange = xhrCallbacks[ id ] = callback;					}				},				abort: function() {					if ( callback ) {						callback( undefined, true );					}				}			};		}	});}// Functions to create xhrsfunction createStandardXHR() {	try {		return new window.XMLHttpRequest();	} catch( e ) {}}function createActiveXHR() {	try {		return new window.ActiveXObject( "Microsoft.XMLHTTP" );	} catch( e ) {}}// Install script dataTypejQuery.ajaxSetup({	accepts: {		script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"	},	contents: {		script: /(?:java|ecma)script/	},	converters: {		"text script": function( text ) {			jQuery.globalEval( text );			return text;		}	}});// Handle cache''s special case and globaljQuery.ajaxPrefilter( "script", function( s ) {	if ( s.cache === undefined ) {		s.cache = false;	}	if ( s.crossDomain ) {		s.type = "GET";		s.global = false;	}});// Bind script tag hack transportjQuery.ajaxTransport( "script", function(s) {	// This transport only deals with cross domain requests	if ( s.crossDomain ) {		var script,			head = document.head || jQuery("head")[0] || document.documentElement;		return {			send: function( _, callback ) {				script = document.createElement("script");				script.async = true;				if ( s.scriptCharset ) {					script.charset = s.scriptCharset;				}				script.src = s.url;				// Attach handlers for all browsers				script.onload = script.onreadystatechange = function( _, isAbort ) {					if ( isAbort || !script.readyState || /loaded|complete/.test( script.readyState ) ) {						// Handle memory leak in IE						script.onload = script.onreadystatechange = null;						// Remove the script						if ( script.parentNode ) {							script.parentNode.removeChild( script );						}						// Dereference the script						script = null;						// Callback if not abort						if ( !isAbort ) {							callback( 200, "success" );						}					}				};				// Circumvent IE6 bugs with base elements (#2709 and #4378) by prepending				// Use native DOM manipulation to avoid our domManip AJAX trickery				head.insertBefore( script, head.firstChild );			},			abort: function() {				if ( script ) {					script.onload( undefined, true );				}			}		};	}});var oldCallbacks = [],	rjsonp = /(=)\?(?=&amp;|$)|\?\?/;// Default jsonp settingsjQuery.ajaxSetup({	jsonp: "callback",	jsonpCallback: function() {		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );		this[ callback ] = true;		return callback;	}});// Detect, normalize options and install callbacks for jsonp requestsjQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {	var callbackName, overwritten, responseContainer,		jsonProp = s.jsonp !== false &amp;&amp; ( rjsonp.test( s.url ) ?			"url" :			typeof s.data === "string" &amp;&amp; !( s.contentType || "" ).indexOf("application/x-www-form-urlencoded") &amp;&amp; rjsonp.test( s.data ) &amp;&amp; "data"		);	// Handle iff the expected data type is "jsonp" or we have a parameter to set	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {		// Get callback name, remembering preexisting value associated with it		callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?			s.jsonpCallback() :			s.jsonpCallback;		// Insert callback into url or form data		if ( jsonProp ) {			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );		} else if ( s.jsonp !== false ) {			s.url += ( rquery.test( s.url ) ? "&amp;" : "?" ) + s.jsonp + "=" + callbackName;		}		// Use data converter to retrieve json after script execution		s.converters["script json"] = function() {			if ( !responseContainer ) {				jQuery.error( callbackName + " was not called" );			}			return responseContainer[ 0 ];		};		// force json dataType		s.dataTypes[ 0 ] = "json";		// Install callback		overwritten = window[ callbackName ];		window[ callbackName ] = function() {			responseContainer = arguments;		};		// Clean-up function (fires after converters)		jqXHR.always(function() {			// Restore preexisting value			window[ callbackName ] = overwritten;			// Save back as free			if ( s[ callbackName ] ) {				// make sure that re-using the options doesn''t screw things around				s.jsonpCallback = originalSettings.jsonpCallback;				// save the callback name for future use				oldCallbacks.push( callbackName );			}			// Call if it was a function and we have a response			if ( responseContainer &amp;&amp; jQuery.isFunction( overwritten ) ) {				overwritten( responseContainer[ 0 ] );			}			responseContainer = overwritten = undefined;		});		// Delegate to script		return "script";	}});// data: string of html// context (optional): If specified, the fragment will be created in this context, defaults to document// keepScripts (optional): If true, will include scripts passed in the html stringjQuery.parseHTML = function( data, context, keepScripts ) {	if ( !data || typeof data !== "string" ) {		return null;	}	if ( typeof context === "boolean" ) {		keepScripts = context;		context = false;	}	context = context || document;	var parsed = rsingleTag.exec( data ),		scripts = !keepScripts &amp;&amp; [];	// Single tag	if ( parsed ) {		return [ context.createElement( parsed[1] ) ];	}	parsed = jQuery.buildFragment( [ data ], context, scripts );	if ( scripts &amp;&amp; scripts.length ) {		jQuery( scripts ).remove();	}	return jQuery.merge( [], parsed.childNodes );};// Keep a copy of the old load methodvar _load = jQuery.fn.load;/** * Load a url into a page */jQuery.fn.load = function( url, params, callback ) {	if ( typeof url !== "string" &amp;&amp; _load ) {		return _load.apply( this, arguments );	}	var selector, response, type,		self = this,		off = url.indexOf(" ");	if ( off &gt;= 0 ) {		selector = jQuery.trim( url.slice( off, url.length ) );		url = url.slice( 0, off );	}	// If it''s a function	if ( jQuery.isFunction( params ) ) {		// We assume that it''s the callback		callback = params;		params = undefined;	// Otherwise, build a param string	} else if ( params &amp;&amp; typeof params === "object" ) {		type = "POST";	}	// If we have elements to modify, make the request	if ( self.length &gt; 0 ) {		jQuery.ajax({			url: url,			// if "type" variable is undefined, then "GET" method will be used			type: type,			dataType: "html",			data: params		}).done(function( responseText ) {			// Save response for use in complete callback			response = arguments;			self.html( selector ?				// If a selector was specified, locate the right elements in a dummy div				// Exclude scripts to avoid IE ''Permission Denied'' errors				jQuery("&lt;div&gt;").append( jQuery.parseHTML( responseText ) ).find( selector ) :				// Otherwise use the full result				responseText );		}).complete( callback &amp;&amp; function( jqXHR, status ) {			self.each( callback, response || [ jqXHR.responseText, status, jqXHR ] );		});	}	return this;};// Attach a bunch of functions for handling common AJAX eventsjQuery.each( [ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend" ], function( i, type ) {	jQuery.fn[ type ] = function( fn ) {		return this.on( type, fn );	};});jQuery.expr.filters.animated = function( elem ) {	return jQuery.grep(jQuery.timers, function( fn ) {		return elem === fn.elem;	}).length;};var docElem = window.document.documentElement;/** * Gets a window from an element */function getWindow( elem ) {	return jQuery.isWindow( elem ) ?		elem :		elem.nodeType === 9 ?			elem.defaultView || elem.parentWindow :			false;}jQuery.offset = {	setOffset: function( elem, options, i ) {		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,			position = jQuery.css( elem, "position" ),			curElem = jQuery( elem ),			props = {};		// set position first, in-case top/left are set even on static elem		if ( position === "static" ) {			elem.style.position = "relative";		}		curOffset = curElem.offset();		curCSSTop = jQuery.css( elem, "top" );		curCSSLeft = jQuery.css( elem, "left" );		calculatePosition = ( position === "absolute" || position === "fixed" ) &amp;&amp;			jQuery.inArray("auto", [ curCSSTop, curCSSLeft ] ) &gt; -1;		// need to be able to calculate position if either top or left is auto and position is either absolute or fixed		if ( calculatePosition ) {			curPosition = curElem.position();			curTop = curPosition.top;			curLeft = curPosition.left;		} else {			curTop = parseFloat( curCSSTop ) || 0;			curLeft = parseFloat( curCSSLeft ) || 0;		}		if ( jQuery.isFunction( options ) ) {			options = options.call( elem, i, curOffset );		}		if ( options.top != null ) {			props.top = ( options.top - curOffset.top ) + curTop;		}		if ( options.left != null ) {			props.left = ( options.left - curOffset.left ) + curLeft;		}		if ( "using" in options ) {			options.using.call( elem, props );		} else {			curElem.css( props );		}	}};jQuery.fn.extend({	offset: function( options ) {		if ( arguments.length ) {			return options === undefined ?				this :				this.each(function( i ) {					jQuery.offset.setOffset( this, options, i );				});		}		var docElem, win,			box = { top: 0, left: 0 },			elem = this[ 0 ],			doc = elem &amp;&amp; elem.ownerDocument;		if ( !doc ) {			return;		}		docElem = doc.documentElement;		// Make sure it''s not a disconnected DOM node		if ( !jQuery.contains( docElem, elem ) ) {			return box;		}		// If we don''t have gBCR, just use 0,0 rather than error		// BlackBerry 5, iOS 3 (original iPhone)		if ( typeof elem.getBoundingClientRect !== strundefined ) {			box = elem.getBoundingClientRect();		}		win = getWindow( doc );		return {			top: box.top  + ( win.pageYOffset || docElem.scrollTop )  - ( docElem.clientTop  || 0 ),			left: box.left + ( win.pageXOffset || docElem.scrollLeft ) - ( docElem.clientLeft || 0 )		};	},	position: function() {		if ( !this[ 0 ] ) {			return;		}		var offsetParent, offset,			parentOffset = { top: 0, left: 0 },			elem = this[ 0 ];		// fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is its only offset parent		if ( jQuery.css( elem, "position" ) === "fixed" ) {			// we assume that getBoundingClientRect is available when computed position is fixed			offset = elem.getBoundingClientRect();		} else {			// Get *real* offsetParent			offsetParent = this.offsetParent();			// Get correct offsets			offset = this.offset();			if ( !jQuery.nodeName( offsetParent[ 0 ], "html" ) ) {				parentOffset = offsetParent.offset();			}			// Add offsetParent borders			parentOffset.top  += jQuery.css( offsetParent[ 0 ], "borderTopWidth", true );			parentOffset.left += jQuery.css( offsetParent[ 0 ], "borderLeftWidth", true );		}		// Subtract parent offsets and element margins		// note: when an element has margin: auto the offsetLeft and marginLeft		// are the same in Safari causing offset.left to incorrectly be 0		return {			top:  offset.top  - parentOffset.top - jQuery.css( elem, "marginTop", true ),			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true)		};	},	offsetParent: function() {		return this.map(function() {			var offsetParent = this.offsetParent || docElem;			while ( offsetParent &amp;&amp; ( !jQuery.nodeName( offsetParent, "html" ) &amp;&amp; jQuery.css( offsetParent, "position" ) === "static" ) ) {				offsetParent = offsetParent.offsetParent;			}			return offsetParent || docElem;		});	}});// Create scrollLeft and scrollTop methodsjQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {	var top = /Y/.test( prop );	jQuery.fn[ method ] = function( val ) {		return access( this, function( elem, method, val ) {			var win = getWindow( elem );			if ( val === undefined ) {				return win ? (prop in win) ? win[ prop ] :					win.document.documentElement[ method ] :					elem[ method ];			}			if ( win ) {				win.scrollTo(					!top ? val : jQuery( win ).scrollLeft(),					top ? val : jQuery( win ).scrollTop()				);			} else {				elem[ method ] = val;			}		}, method, val, arguments.length, null );	};});// Add the top/left cssHooks using jQuery.fn.position// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084// getComputedStyle returns percent when specified for top/left/bottom/right// rather than make the css module depend on the offset module, we just check for it herejQuery.each( [ "top", "left" ], function( i, prop ) {	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,		function( elem, computed ) {			if ( computed ) {				computed = curCSS( elem, prop );				// if curCSS returns percentage, fallback to offset				return rnumnonpx.test( computed ) ?					jQuery( elem ).position()[ prop ] + "px" :					computed;			}		}	);});// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methodsjQuery.each( { Height: "height", Width: "width" }, function( name, type ) {	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name }, function( defaultExtra, funcName ) {		// margin is only for outerHeight, outerWidth		jQuery.fn[ funcName ] = function( margin, value ) {			var chainable = arguments.length &amp;&amp; ( defaultExtra || typeof margin !== "boolean" ),				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );			return access( this, function( elem, type, value ) {				var doc;				if ( jQuery.isWindow( elem ) ) {					// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there					// isn''t a whole lot we can do. See pull request at this URL for discussion:					// https://github.com/jquery/jquery/pull/764					return elem.document.documentElement[ "client" + name ];				}				// Get document width or height				if ( elem.nodeType === 9 ) {					doc = elem.documentElement;					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height], whichever is greatest					// unfortunately, this causes bug #3838 in IE6/8 only, but there is currently no good, small way to fix it.					return Math.max(						elem.body[ "scroll" + name ], doc[ "scroll" + name ],						elem.body[ "offset" + name ], doc[ "offset" + name ],						doc[ "client" + name ]					);				}				return value === undefined ?					// Get width or height on the element, requesting but not forcing parseFloat					jQuery.css( elem, type, extra ) :					// Set width or height on the element					jQuery.style( elem, type, value, extra );			}, type, chainable ? margin : undefined, chainable, null );		};	});});// The number of elements contained in the matched element setjQuery.fn.size = function() {	return this.length;};jQuery.fn.andSelf = jQuery.fn.addBack;// Register as a named AMD module, since jQuery can be concatenated with other// files that may use define, but not via a proper concatenation script that// understands anonymous AMD modules. A named AMD is safest and most robust// way to register. Lowercase jquery is used because AMD module names are// derived from file names, and jQuery is normally delivered in a lowercase// file name. Do this after creating the global so that if an AMD module wants// to call noConflict to hide this version of jQuery, it will work.// Note that for maximum portability, libraries that are not jQuery should// declare themselves as anonymous modules, and avoid setting a global if an// AMD loader is present. jQuery is a special case. For more information, see// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anonif ( typeof define === "function" &amp;&amp; define.amd ) {	define( "jquery", [], function() {		return jQuery;	});}var	// Map over jQuery in case of overwrite	_jQuery = window.jQuery,	// Map over the $ in case of overwrite	_$ = window.$;jQuery.noConflict = function( deep ) {	if ( window.$ === jQuery ) {		window.$ = _$;	}	if ( deep &amp;&amp; window.jQuery === jQuery ) {		window.jQuery = _jQuery;	}	return jQuery;};// Expose jQuery and $ identifiers, even in// AMD (#7102#comment:10, https://github.com/jquery/jquery/pull/557)// and CommonJS for browser emulators (#13566)if ( typeof noGlobal === strundefined ) {	window.jQuery = window.$ = jQuery;}return jQuery;}));'</body></methods><methods><class-id>JQuery.JQLoad</class-id> <category>options</category><body package="JQuery-Core">isSupportedOption: aString	^ #('url' 'data' 'complete' "(" 'dataType' ")") includes: aString</body><body package="JQuery-Core">selector: aString	"An additional selector filters the incoming HTML document, only injecting the elements that match the selector."		selector := aString</body></methods><methods><class-id>JQuery.JQLoad</class-id> <category>accessing</category><body package="JQuery-Core">arguments	| arguments |	arguments := OrderedCollection with: self selectorUrl.	self options		at: 'data'		ifPresent: [ :value | arguments add: value ].	self options		at: 'complete'		ifPresent: [ :value | arguments add: value ].	^ arguments</body><body package="JQuery-Core">method	^ 'load'</body></methods><methods><class-id>JQuery.JQLoad</class-id> <category>accessing-urls</category><body package="JQuery-Core">selectorUrl	^ selector isNil 		ifTrue: [ self url ]		ifFalse: [ self url greaseString , ' ' , selector greaseString ]</body></methods><methods><class-id>JQuery.JQEvent</class-id> <category>accessing</category><body package="JQuery-Core">currentTarget	"The current DOM element within the event bubbling phase. This attribute will always be equal to the this of the function."		self access: 'currentTarget'</body><body package="JQuery-Core">data	"Contains the optional data passed to jQuery.fn.bind when the current executing handler was bound."		self access: 'data'</body><body package="JQuery-Core">namespace	"This attribute contains the namespace specified when the event was triggered."		self access: 'namespace'</body><body package="JQuery-Core">pageX	"The pageX returns the mouse coordinates relative to the document."		self access: 'pageX'</body><body package="JQuery-Core">pageY	"The pageY returns the mouse coordinates relative to the document."		self access: 'pageY'</body><body package="JQuery-Core">relatedTarget	"On mouse movement, contains the DOM element which the mouse was previously on when moving onto or off of an element."		self access: 'relatedTarget'</body><body package="JQuery-Core">result	"Will contain the last value returned by an event handler (that wasn't undefined)."		self access: 'result'</body><body package="JQuery-Core">target	"Contains the DOM element that issued the event."		self access: 'target'</body><body package="JQuery-Core">timeStamp	"The timestamp (in milliseconds) when the event was created."		self access: 'timeStamp'</body><body package="JQuery-Core">type	"Describes the nature of the event."		self access: 'type'</body></methods><methods><class-id>JQuery.JQEvent</class-id> <category>actions</category><body package="JQuery-Core">preventDefault	"Prevents the browser from executing the default action. Use the method isDefaultPrevented to know whether this method was ever called (on that event object)."		self call: 'preventDefault'</body><body package="JQuery-Core">stopImmediatePropagation	"Keeps the rest of the handlers from being executed. This method also stops the bubbling by calling event.stopPropagation()."		self call: 'stopImmediatePropagation'</body><body package="JQuery-Core">stopPropagation	"Stops the bubbling of an event to parent elements, preventing any parent handlers from being notified of the event."		self call: 'stopPropagation'</body></methods><methods><class-id>JQuery.JQEvent</class-id> <category>testing</category><body package="JQuery-Core">isDefaultPrevented	"Returns whether event.preventDefault() was ever called on this event object."		self call: 'isDefaultPrevented'</body><body package="JQuery-Core">isImmediatePropagationStopped	"Returns whether event.stopImmediatePropagation() was ever called on this event object."		self call: 'isImmediatePropagationStopped'</body><body package="JQuery-Core">isPropagationStopped	"Returns whether event.stopPropagation() was ever called on this event object."		self call: 'isPropagationStopped'</body></methods><methods><class-id>JQuery.JQEvent</class-id> <category>printing</category><body package="JQuery-Core">javascriptContentOn: aStream	aStream javascript: owner</body></methods><methods><class-id>JQuery.JQEvent</class-id> <category>initialization</category><body package="JQuery-Core">initialize	super initialize.	self setOwner: (JSStream argumentAt: 1)</body><body package="JQuery-Core">setOwner: anObject	owner := anObject</body></methods><methods><class-id>JQuery.JQ2DevelopmentLibrary</class-id> <category>uploaded</category><body package="JQuery-Core">jQueryJs	^ '/*! * jQuery JavaScript Library v2.1.4 * http://jquery.com/ * * Includes Sizzle.js * http://sizzlejs.com/ * * Copyright 2005, 2014 jQuery Foundation, Inc. and other contributors * Released under the MIT license * http://jquery.org/license * * Date: 2015-04-28T16:01Z */(function( global, factory ) {	if ( typeof module === "object" &amp;&amp; typeof module.exports === "object" ) {		// For CommonJS and CommonJS-like environments where a proper `window`		// is present, execute the factory and get jQuery.		// For environments that do not have a `window` with a `document`		// (such as Node.js), expose a factory as module.exports.		// This accentuates the need for the creation of a real `window`.		// e.g. var jQuery = require("jquery")(window);		// See ticket #14549 for more info.		module.exports = global.document ?			factory( global, true ) :			function( w ) {				if ( !w.document ) {					throw new Error( "jQuery requires a window with a document" );				}				return factory( w );			};	} else {		factory( global );	}// Pass this if window is not defined yet}(typeof window !== "undefined" ? window : this, function( window, noGlobal ) {// Support: Firefox 18+// Can''t be in strict mode, several libs including ASP.NET trace// the stack via arguments.caller.callee and Firefox dies if// you try to trace through "use strict" call chains. (#13335)//var arr = [];var slice = arr.slice;var concat = arr.concat;var push = arr.push;var indexOf = arr.indexOf;var class2type = {};var toString = class2type.toString;var hasOwn = class2type.hasOwnProperty;var support = {};var	// Use the correct document accordingly with window argument (sandbox)	document = window.document,	version = "2.1.4",	// Define a local copy of jQuery	jQuery = function( selector, context ) {		// The jQuery object is actually just the init constructor ''enhanced''		// Need init if jQuery is called (just allow error to be thrown if not included)		return new jQuery.fn.init( selector, context );	},	// Support: Android&lt;4.1	// Make sure we trim BOM and NBSP	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,	// Matches dashed string for camelizing	rmsPrefix = /^-ms-/,	rdashAlpha = /-([\da-z])/gi,	// Used by jQuery.camelCase as callback to replace()	fcamelCase = function( all, letter ) {		return letter.toUpperCase();	};jQuery.fn = jQuery.prototype = {	// The current version of jQuery being used	jquery: version,	constructor: jQuery,	// Start with an empty selector	selector: "",	// The default length of a jQuery object is 0	length: 0,	toArray: function() {		return slice.call( this );	},	// Get the Nth element in the matched element set OR	// Get the whole matched element set as a clean array	get: function( num ) {		return num != null ?			// Return just the one element from the set			( num &lt; 0 ? this[ num + this.length ] : this[ num ] ) :			// Return all the elements in a clean array			slice.call( this );	},	// Take an array of elements and push it onto the stack	// (returning the new matched element set)	pushStack: function( elems ) {		// Build a new jQuery matched element set		var ret = jQuery.merge( this.constructor(), elems );		// Add the old object onto the stack (as a reference)		ret.prevObject = this;		ret.context = this.context;		// Return the newly-formed element set		return ret;	},	// Execute a callback for every element in the matched set.	// (You can seed the arguments with an array of args, but this is	// only used internally.)	each: function( callback, args ) {		return jQuery.each( this, callback, args );	},	map: function( callback ) {		return this.pushStack( jQuery.map(this, function( elem, i ) {			return callback.call( elem, i, elem );		}));	},	slice: function() {		return this.pushStack( slice.apply( this, arguments ) );	},	first: function() {		return this.eq( 0 );	},	last: function() {		return this.eq( -1 );	},	eq: function( i ) {		var len = this.length,			j = +i + ( i &lt; 0 ? len : 0 );		return this.pushStack( j &gt;= 0 &amp;&amp; j &lt; len ? [ this[j] ] : [] );	},	end: function() {		return this.prevObject || this.constructor(null);	},	// For internal use only.	// Behaves like an Array''s method, not like a jQuery method.	push: push,	sort: arr.sort,	splice: arr.splice};jQuery.extend = jQuery.fn.extend = function() {	var options, name, src, copy, copyIsArray, clone,		target = arguments[0] || {},		i = 1,		length = arguments.length,		deep = false;	// Handle a deep copy situation	if ( typeof target === "boolean" ) {		deep = target;		// Skip the boolean and the target		target = arguments[ i ] || {};		i++;	}	// Handle case when target is a string or something (possible in deep copy)	if ( typeof target !== "object" &amp;&amp; !jQuery.isFunction(target) ) {		target = {};	}	// Extend jQuery itself if only one argument is passed	if ( i === length ) {		target = this;		i--;	}	for ( ; i &lt; length; i++ ) {		// Only deal with non-null/undefined values		if ( (options = arguments[ i ]) != null ) {			// Extend the base object			for ( name in options ) {				src = target[ name ];				copy = options[ name ];				// Prevent never-ending loop				if ( target === copy ) {					continue;				}				// Recurse if we''re merging plain objects or arrays				if ( deep &amp;&amp; copy &amp;&amp; ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {					if ( copyIsArray ) {						copyIsArray = false;						clone = src &amp;&amp; jQuery.isArray(src) ? src : [];					} else {						clone = src &amp;&amp; jQuery.isPlainObject(src) ? src : {};					}					// Never move original objects, clone them					target[ name ] = jQuery.extend( deep, clone, copy );				// Don''t bring in undefined values				} else if ( copy !== undefined ) {					target[ name ] = copy;				}			}		}	}	// Return the modified object	return target;};jQuery.extend({	// Unique for each copy of jQuery on the page	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),	// Assume jQuery is ready without the ready module	isReady: true,	error: function( msg ) {		throw new Error( msg );	},	noop: function() {},	isFunction: function( obj ) {		return jQuery.type(obj) === "function";	},	isArray: Array.isArray,	isWindow: function( obj ) {		return obj != null &amp;&amp; obj === obj.window;	},	isNumeric: function( obj ) {		// parseFloat NaNs numeric-cast false positives (null|true|false|"")		// ...but misinterprets leading-number strings, particularly hex literals ("0x...")		// subtraction forces infinities to NaN		// adding 1 corrects loss of precision from parseFloat (#15100)		return !jQuery.isArray( obj ) &amp;&amp; (obj - parseFloat( obj ) + 1) &gt;= 0;	},	isPlainObject: function( obj ) {		// Not plain objects:		// - Any object or value whose internal [[Class]] property is not "[object Object]"		// - DOM nodes		// - window		if ( jQuery.type( obj ) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {			return false;		}		if ( obj.constructor &amp;&amp;				!hasOwn.call( obj.constructor.prototype, "isPrototypeOf" ) ) {			return false;		}		// If the function hasn''t returned already, we''re confident that		// |obj| is a plain object, created by {} or constructed with new Object		return true;	},	isEmptyObject: function( obj ) {		var name;		for ( name in obj ) {			return false;		}		return true;	},	type: function( obj ) {		if ( obj == null ) {			return obj + "";		}		// Support: Android&lt;4.0, iOS&lt;6 (functionish RegExp)		return typeof obj === "object" || typeof obj === "function" ?			class2type[ toString.call(obj) ] || "object" :			typeof obj;	},	// Evaluates a script in a global context	globalEval: function( code ) {		var script,			indirect = eval;		code = jQuery.trim( code );		if ( code ) {			// If the code includes a valid, prologue position			// strict mode pragma, execute code by injecting a			// script tag into the document.			if ( code.indexOf("use strict") === 1 ) {				script = document.createElement("script");				script.text = code;				document.head.appendChild( script ).parentNode.removeChild( script );			} else {			// Otherwise, avoid the DOM node creation, insertion			// and removal by using an indirect global eval				indirect( code );			}		}	},	// Convert dashed to camelCase; used by the css and data modules	// Support: IE9-11+	// Microsoft forgot to hump their vendor prefix (#9572)	camelCase: function( string ) {		return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );	},	nodeName: function( elem, name ) {		return elem.nodeName &amp;&amp; elem.nodeName.toLowerCase() === name.toLowerCase();	},	// args is for internal usage only	each: function( obj, callback, args ) {		var value,			i = 0,			length = obj.length,			isArray = isArraylike( obj );		if ( args ) {			if ( isArray ) {				for ( ; i &lt; length; i++ ) {					value = callback.apply( obj[ i ], args );					if ( value === false ) {						break;					}				}			} else {				for ( i in obj ) {					value = callback.apply( obj[ i ], args );					if ( value === false ) {						break;					}				}			}		// A special, fast, case for the most common use of each		} else {			if ( isArray ) {				for ( ; i &lt; length; i++ ) {					value = callback.call( obj[ i ], i, obj[ i ] );					if ( value === false ) {						break;					}				}			} else {				for ( i in obj ) {					value = callback.call( obj[ i ], i, obj[ i ] );					if ( value === false ) {						break;					}				}			}		}		return obj;	},	// Support: Android&lt;4.1	trim: function( text ) {		return text == null ?			"" :			( text + "" ).replace( rtrim, "" );	},	// results is for internal usage only	makeArray: function( arr, results ) {		var ret = results || [];		if ( arr != null ) {			if ( isArraylike( Object(arr) ) ) {				jQuery.merge( ret,					typeof arr === "string" ?					[ arr ] : arr				);			} else {				push.call( ret, arr );			}		}		return ret;	},	inArray: function( elem, arr, i ) {		return arr == null ? -1 : indexOf.call( arr, elem, i );	},	merge: function( first, second ) {		var len = +second.length,			j = 0,			i = first.length;		for ( ; j &lt; len; j++ ) {			first[ i++ ] = second[ j ];		}		first.length = i;		return first;	},	grep: function( elems, callback, invert ) {		var callbackInverse,			matches = [],			i = 0,			length = elems.length,			callbackExpect = !invert;		// Go through the array, only saving the items		// that pass the validator function		for ( ; i &lt; length; i++ ) {			callbackInverse = !callback( elems[ i ], i );			if ( callbackInverse !== callbackExpect ) {				matches.push( elems[ i ] );			}		}		return matches;	},	// arg is for internal usage only	map: function( elems, callback, arg ) {		var value,			i = 0,			length = elems.length,			isArray = isArraylike( elems ),			ret = [];		// Go through the array, translating each of the items to their new values		if ( isArray ) {			for ( ; i &lt; length; i++ ) {				value = callback( elems[ i ], i, arg );				if ( value != null ) {					ret.push( value );				}			}		// Go through every key on the object,		} else {			for ( i in elems ) {				value = callback( elems[ i ], i, arg );				if ( value != null ) {					ret.push( value );				}			}		}		// Flatten any nested arrays		return concat.apply( [], ret );	},	// A global GUID counter for objects	guid: 1,	// Bind a function to a context, optionally partially applying any	// arguments.	proxy: function( fn, context ) {		var tmp, args, proxy;		if ( typeof context === "string" ) {			tmp = fn[ context ];			context = fn;			fn = tmp;		}		// Quick check to determine if target is callable, in the spec		// this throws a TypeError, but we will just return undefined.		if ( !jQuery.isFunction( fn ) ) {			return undefined;		}		// Simulated bind		args = slice.call( arguments, 2 );		proxy = function() {			return fn.apply( context || this, args.concat( slice.call( arguments ) ) );		};		// Set the guid of unique handler to the same of original handler, so it can be removed		proxy.guid = fn.guid = fn.guid || jQuery.guid++;		return proxy;	},	now: Date.now,	// jQuery.support is not used in Core but other projects attach their	// properties to it so it needs to exist.	support: support});// Populate the class2type mapjQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {	class2type[ "[object " + name + "]" ] = name.toLowerCase();});function isArraylike( obj ) {	// Support: iOS 8.2 (not reproducible in simulator)	// `in` check used to prevent JIT error (gh-2145)	// hasOwn isn''t used here due to false negatives	// regarding Nodelist length in IE	var length = "length" in obj &amp;&amp; obj.length,		type = jQuery.type( obj );	if ( type === "function" || jQuery.isWindow( obj ) ) {		return false;	}	if ( obj.nodeType === 1 &amp;&amp; length ) {		return true;	}	return type === "array" || length === 0 ||		typeof length === "number" &amp;&amp; length &gt; 0 &amp;&amp; ( length - 1 ) in obj;}var Sizzle =/*! * Sizzle CSS Selector Engine v2.2.0-pre * http://sizzlejs.com/ * * Copyright 2008, 2014 jQuery Foundation, Inc. and other contributors * Released under the MIT license * http://jquery.org/license * * Date: 2014-12-16 */(function( window ) {var i,	support,	Expr,	getText,	isXML,	tokenize,	compile,	select,	outermostContext,	sortInput,	hasDuplicate,	// Local document vars	setDocument,	document,	docElem,	documentIsHTML,	rbuggyQSA,	rbuggyMatches,	matches,	contains,	// Instance-specific data	expando = "sizzle" + 1 * new Date(),	preferredDoc = window.document,	dirruns = 0,	done = 0,	classCache = createCache(),	tokenCache = createCache(),	compilerCache = createCache(),	sortOrder = function( a, b ) {		if ( a === b ) {			hasDuplicate = true;		}		return 0;	},	// General-purpose constants	MAX_NEGATIVE = 1 &lt;&lt; 31,	// Instance methods	hasOwn = ({}).hasOwnProperty,	arr = [],	pop = arr.pop,	push_native = arr.push,	push = arr.push,	slice = arr.slice,	// Use a stripped-down indexOf as it''s faster than native	// http://jsperf.com/thor-indexof-vs-for/5	indexOf = function( list, elem ) {		var i = 0,			len = list.length;		for ( ; i &lt; len; i++ ) {			if ( list[i] === elem ) {				return i;			}		}		return -1;	},	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",	// Regular expressions	// Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace	whitespace = "[\\x20\\t\\r\\n\\f]",	// http://www.w3.org/TR/css3-syntax/#characters	characterEncoding = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",	// Loosely modeled on CSS identifier characters	// An unquoted value should be a CSS identifier http://www.w3.org/TR/css3-selectors/#attribute-selectors	// Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier	identifier = characterEncoding.replace( "w", "w#" ),	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors	attributes = "\\[" + whitespace + "*(" + characterEncoding + ")(?:" + whitespace +		// Operator (capture 2)		"*([*^$|!~]?=)" + whitespace +		// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"		"*(?:''((?:\\\\.|[^\\\\''])*)''|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +		"*\\]",	pseudos = ":(" + characterEncoding + ")(?:\\((" +		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:		// 1. quoted (capture 3; capture 4 or capture 5)		"(''((?:\\\\.|[^\\\\''])*)''|\"((?:\\\\.|[^\\\\\"])*)\")|" +		// 2. simple (capture 6)		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +		// 3. anything else (capture 2)		".*" +		")\\)|)",	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter	rwhitespace = new RegExp( whitespace + "+", "g" ),	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),	rcombinators = new RegExp( "^" + whitespace + "*([&gt;+~]|" + whitespace + ")" + whitespace + "*" ),	rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]''\"]*?)" + whitespace + "*\\]", "g" ),	rpseudo = new RegExp( pseudos ),	ridentifier = new RegExp( "^" + identifier + "$" ),	matchExpr = {		"ID": new RegExp( "^#(" + characterEncoding + ")" ),		"CLASS": new RegExp( "^\\.(" + characterEncoding + ")" ),		"TAG": new RegExp( "^(" + characterEncoding.replace( "w", "w*" ) + ")" ),		"ATTR": new RegExp( "^" + attributes ),		"PSEUDO": new RegExp( "^" + pseudos ),		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),		// For use in libraries implementing .is()		// We use this for POS matching in `select`		"needsContext": new RegExp( "^" + whitespace + "*[&gt;+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +			whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )	},	rinputs = /^(?:input|select|textarea|button)$/i,	rheader = /^h\d$/i,	rnative = /^[^{]+\{\s*\[native \w/,	// Easily-parseable/retrievable ID or TAG or CLASS selectors	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,	rsibling = /[+~]/,	rescape = /''|\\/g,	// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters	runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),	funescape = function( _, escaped, escapedWhitespace ) {		var high = "0x" + escaped - 0x10000;		// NaN means non-codepoint		// Support: Firefox&lt;24		// Workaround erroneous numeric interpretation of +"0x"		return high !== high || escapedWhitespace ?			escaped :			high &lt; 0 ?				// BMP codepoint				String.fromCharCode( high + 0x10000 ) :				// Supplemental Plane codepoint (surrogate pair)				String.fromCharCode( high &gt;&gt; 10 | 0xD800, high &amp; 0x3FF | 0xDC00 );	},	// Used for iframes	// See setDocument()	// Removing the function wrapper causes a "Permission Denied"	// error in IE	unloadHandler = function() {		setDocument();	};// Optimize for push.apply( _, NodeList )try {	push.apply(		(arr = slice.call( preferredDoc.childNodes )),		preferredDoc.childNodes	);	// Support: Android&lt;4.0	// Detect silently failing push.apply	arr[ preferredDoc.childNodes.length ].nodeType;} catch ( e ) {	push = { apply: arr.length ?		// Leverage slice if possible		function( target, els ) {			push_native.apply( target, slice.call(els) );		} :		// Support: IE&lt;9		// Otherwise append directly		function( target, els ) {			var j = target.length,				i = 0;			// Can''t trust NodeList.length			while ( (target[j++] = els[i++]) ) {}			target.length = j - 1;		}	};}function Sizzle( selector, context, results, seed ) {	var match, elem, m, nodeType,		// QSA vars		i, groups, old, nid, newContext, newSelector;	if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {		setDocument( context );	}	context = context || document;	results = results || [];	nodeType = context.nodeType;	if ( typeof selector !== "string" || !selector ||		nodeType !== 1 &amp;&amp; nodeType !== 9 &amp;&amp; nodeType !== 11 ) {		return results;	}	if ( !seed &amp;&amp; documentIsHTML ) {		// Try to shortcut find operations when possible (e.g., not under DocumentFragment)		if ( nodeType !== 11 &amp;&amp; (match = rquickExpr.exec( selector )) ) {			// Speed-up: Sizzle("#ID")			if ( (m = match[1]) ) {				if ( nodeType === 9 ) {					elem = context.getElementById( m );					// Check parentNode to catch when Blackberry 4.6 returns					// nodes that are no longer in the document (jQuery #6963)					if ( elem &amp;&amp; elem.parentNode ) {						// Handle the case where IE, Opera, and Webkit return items						// by name instead of ID						if ( elem.id === m ) {							results.push( elem );							return results;						}					} else {						return results;					}				} else {					// Context is not a document					if ( context.ownerDocument &amp;&amp; (elem = context.ownerDocument.getElementById( m )) &amp;&amp;						contains( context, elem ) &amp;&amp; elem.id === m ) {						results.push( elem );						return results;					}				}			// Speed-up: Sizzle("TAG")			} else if ( match[2] ) {				push.apply( results, context.getElementsByTagName( selector ) );				return results;			// Speed-up: Sizzle(".CLASS")			} else if ( (m = match[3]) &amp;&amp; support.getElementsByClassName ) {				push.apply( results, context.getElementsByClassName( m ) );				return results;			}		}		// QSA path		if ( support.qsa &amp;&amp; (!rbuggyQSA || !rbuggyQSA.test( selector )) ) {			nid = old = expando;			newContext = context;			newSelector = nodeType !== 1 &amp;&amp; selector;			// qSA works strangely on Element-rooted queries			// We can work around this by specifying an extra ID on the root			// and working up from there (Thanks to Andrew Dupont for the technique)			// IE 8 doesn''t work on object elements			if ( nodeType === 1 &amp;&amp; context.nodeName.toLowerCase() !== "object" ) {				groups = tokenize( selector );				if ( (old = context.getAttribute("id")) ) {					nid = old.replace( rescape, "\\$&amp;" );				} else {					context.setAttribute( "id", nid );				}				nid = "[id=''" + nid + "''] ";				i = groups.length;				while ( i-- ) {					groups[i] = nid + toSelector( groups[i] );				}				newContext = rsibling.test( selector ) &amp;&amp; testContext( context.parentNode ) || context;				newSelector = groups.join(",");			}			if ( newSelector ) {				try {					push.apply( results,						newContext.querySelectorAll( newSelector )					);					return results;				} catch(qsaError) {				} finally {					if ( !old ) {						context.removeAttribute("id");					}				}			}		}	}	// All others	return select( selector.replace( rtrim, "$1" ), context, results, seed );}/** * Create key-value caches of limited size * @returns {Function(string, Object)} Returns the Object data after storing it on itself with *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength) *	deleting the oldest entry */function createCache() {	var keys = [];	function cache( key, value ) {		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)		if ( keys.push( key + " " ) &gt; Expr.cacheLength ) {			// Only keep the most recent entries			delete cache[ keys.shift() ];		}		return (cache[ key + " " ] = value);	}	return cache;}/** * Mark a function for special use by Sizzle * @param {Function} fn The function to mark */function markFunction( fn ) {	fn[ expando ] = true;	return fn;}/** * Support testing using an element * @param {Function} fn Passed the created div and expects a boolean result */function assert( fn ) {	var div = document.createElement("div");	try {		return !!fn( div );	} catch (e) {		return false;	} finally {		// Remove from its parent by default		if ( div.parentNode ) {			div.parentNode.removeChild( div );		}		// release memory in IE		div = null;	}}/** * Adds the same handler for all of the specified attrs * @param {String} attrs Pipe-separated list of attributes * @param {Function} handler The method that will be applied */function addHandle( attrs, handler ) {	var arr = attrs.split("|"),		i = attrs.length;	while ( i-- ) {		Expr.attrHandle[ arr[i] ] = handler;	}}/** * Checks document order of two siblings * @param {Element} a * @param {Element} b * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b */function siblingCheck( a, b ) {	var cur = b &amp;&amp; a,		diff = cur &amp;&amp; a.nodeType === 1 &amp;&amp; b.nodeType === 1 &amp;&amp;			( ~b.sourceIndex || MAX_NEGATIVE ) -			( ~a.sourceIndex || MAX_NEGATIVE );	// Use IE sourceIndex if available on both nodes	if ( diff ) {		return diff;	}	// Check if b follows a	if ( cur ) {		while ( (cur = cur.nextSibling) ) {			if ( cur === b ) {				return -1;			}		}	}	return a ? 1 : -1;}/** * Returns a function to use in pseudos for input types * @param {String} type */function createInputPseudo( type ) {	return function( elem ) {		var name = elem.nodeName.toLowerCase();		return name === "input" &amp;&amp; elem.type === type;	};}/** * Returns a function to use in pseudos for buttons * @param {String} type */function createButtonPseudo( type ) {	return function( elem ) {		var name = elem.nodeName.toLowerCase();		return (name === "input" || name === "button") &amp;&amp; elem.type === type;	};}/** * Returns a function to use in pseudos for positionals * @param {Function} fn */function createPositionalPseudo( fn ) {	return markFunction(function( argument ) {		argument = +argument;		return markFunction(function( seed, matches ) {			var j,				matchIndexes = fn( [], seed.length, argument ),				i = matchIndexes.length;			// Match elements found at the specified indexes			while ( i-- ) {				if ( seed[ (j = matchIndexes[i]) ] ) {					seed[j] = !(matches[j] = seed[j]);				}			}		});	});}/** * Checks a node for validity as a Sizzle context * @param {Element|Object=} context * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value */function testContext( context ) {	return context &amp;&amp; typeof context.getElementsByTagName !== "undefined" &amp;&amp; context;}// Expose support vars for conveniencesupport = Sizzle.support = {};/** * Detects XML nodes * @param {Element|Object} elem An element or a document * @returns {Boolean} True iff elem is a non-HTML XML node */isXML = Sizzle.isXML = function( elem ) {	// documentElement is verified for cases where it doesn''t yet exist	// (such as loading iframes in IE - #4833)	var documentElement = elem &amp;&amp; (elem.ownerDocument || elem).documentElement;	return documentElement ? documentElement.nodeName !== "HTML" : false;};/** * Sets document-related variables once based on the current document * @param {Element|Object} [doc] An element or document object to use to set the document * @returns {Object} Returns the current document */setDocument = Sizzle.setDocument = function( node ) {	var hasCompare, parent,		doc = node ? node.ownerDocument || node : preferredDoc;	// If no document and documentElement is available, return	if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {		return document;	}	// Set our document	document = doc;	docElem = doc.documentElement;	parent = doc.defaultView;	// Support: IE&gt;8	// If iframe document is assigned to "document" variable and if iframe has been reloaded,	// IE will throw "permission denied" error when accessing "document" variable, see jQuery #13936	// IE6-8 do not support the defaultView property so parent will be undefined	if ( parent &amp;&amp; parent !== parent.top ) {		// IE11 does not have attachEvent, so all must suffer		if ( parent.addEventListener ) {			parent.addEventListener( "unload", unloadHandler, false );		} else if ( parent.attachEvent ) {			parent.attachEvent( "onunload", unloadHandler );		}	}	/* Support tests	---------------------------------------------------------------------- */	documentIsHTML = !isXML( doc );	/* Attributes	---------------------------------------------------------------------- */	// Support: IE&lt;8	// Verify that getAttribute really returns attributes and not properties	// (excepting IE8 booleans)	support.attributes = assert(function( div ) {		div.className = "i";		return !div.getAttribute("className");	});	/* getElement(s)By*	---------------------------------------------------------------------- */	// Check if getElementsByTagName("*") returns only elements	support.getElementsByTagName = assert(function( div ) {		div.appendChild( doc.createComment("") );		return !div.getElementsByTagName("*").length;	});	// Support: IE&lt;9	support.getElementsByClassName = rnative.test( doc.getElementsByClassName );	// Support: IE&lt;10	// Check if getElementById returns elements by name	// The broken getElementById methods don''t pick up programatically-set names,	// so use a roundabout getElementsByName test	support.getById = assert(function( div ) {		docElem.appendChild( div ).id = expando;		return !doc.getElementsByName || !doc.getElementsByName( expando ).length;	});	// ID find and filter	if ( support.getById ) {		Expr.find["ID"] = function( id, context ) {			if ( typeof context.getElementById !== "undefined" &amp;&amp; documentIsHTML ) {				var m = context.getElementById( id );				// Check parentNode to catch when Blackberry 4.6 returns				// nodes that are no longer in the document #6963				return m &amp;&amp; m.parentNode ? [ m ] : [];			}		};		Expr.filter["ID"] = function( id ) {			var attrId = id.replace( runescape, funescape );			return function( elem ) {				return elem.getAttribute("id") === attrId;			};		};	} else {		// Support: IE6/7		// getElementById is not reliable as a find shortcut		delete Expr.find["ID"];		Expr.filter["ID"] =  function( id ) {			var attrId = id.replace( runescape, funescape );			return function( elem ) {				var node = typeof elem.getAttributeNode !== "undefined" &amp;&amp; elem.getAttributeNode("id");				return node &amp;&amp; node.value === attrId;			};		};	}	// Tag	Expr.find["TAG"] = support.getElementsByTagName ?		function( tag, context ) {			if ( typeof context.getElementsByTagName !== "undefined" ) {				return context.getElementsByTagName( tag );			// DocumentFragment nodes don''t have gEBTN			} else if ( support.qsa ) {				return context.querySelectorAll( tag );			}		} :		function( tag, context ) {			var elem,				tmp = [],				i = 0,				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too				results = context.getElementsByTagName( tag );			// Filter out possible comments			if ( tag === "*" ) {				while ( (elem = results[i++]) ) {					if ( elem.nodeType === 1 ) {						tmp.push( elem );					}				}				return tmp;			}			return results;		};	// Class	Expr.find["CLASS"] = support.getElementsByClassName &amp;&amp; function( className, context ) {		if ( documentIsHTML ) {			return context.getElementsByClassName( className );		}	};	/* QSA/matchesSelector	---------------------------------------------------------------------- */	// QSA and matchesSelector support	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)	rbuggyMatches = [];	// qSa(:focus) reports false when true (Chrome 21)	// We allow this because of a bug in IE8/9 that throws an error	// whenever `document.activeElement` is accessed on an iframe	// So, we allow :focus to pass through QSA all the time to avoid the IE error	// See http://bugs.jquery.com/ticket/13378	rbuggyQSA = [];	if ( (support.qsa = rnative.test( doc.querySelectorAll )) ) {		// Build QSA regex		// Regex strategy adopted from Diego Perini		assert(function( div ) {			// Select is set to empty string on purpose			// This is to test IE''s treatment of not explicitly			// setting a boolean content attribute,			// since its presence should be enough			// http://bugs.jquery.com/ticket/12359			docElem.appendChild( div ).innerHTML = "&lt;a id=''" + expando + "''&gt;&lt;/a&gt;" +				"&lt;select id=''" + expando + "-\f]'' msallowcapture=''''&gt;" +				"&lt;option selected=''''&gt;&lt;/option&gt;&lt;/select&gt;";			// Support: IE8, Opera 11-12.16			// Nothing should be selected when empty strings follow ^= or $= or *=			// The test attribute must be unknown in Opera but "safe" for WinRT			// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section			if ( div.querySelectorAll("[msallowcapture^='''']").length ) {				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''''|\"\")" );			}			// Support: IE8			// Boolean attributes and "value" are not treated correctly			if ( !div.querySelectorAll("[selected]").length ) {				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );			}			// Support: Chrome&lt;29, Android&lt;4.2+, Safari&lt;7.0+, iOS&lt;7.0+, PhantomJS&lt;1.9.7+			if ( !div.querySelectorAll( "[id~=" + expando + "-]" ).length ) {				rbuggyQSA.push("~=");			}			// Webkit/Opera - :checked should return selected option elements			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked			// IE8 throws error here and will not see later tests			if ( !div.querySelectorAll(":checked").length ) {				rbuggyQSA.push(":checked");			}			// Support: Safari 8+, iOS 8+			// https://bugs.webkit.org/show_bug.cgi?id=136851			// In-page `selector#id sibing-combinator selector` fails			if ( !div.querySelectorAll( "a#" + expando + "+*" ).length ) {				rbuggyQSA.push(".#.+[+~]");			}		});		assert(function( div ) {			// Support: Windows 8 Native Apps			// The type and name attributes are restricted during .innerHTML assignment			var input = doc.createElement("input");			input.setAttribute( "type", "hidden" );			div.appendChild( input ).setAttribute( "name", "D" );			// Support: IE8			// Enforce case-sensitivity of name attribute			if ( div.querySelectorAll("[name=d]").length ) {				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );			}			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)			// IE8 throws error here and will not see later tests			if ( !div.querySelectorAll(":enabled").length ) {				rbuggyQSA.push( ":enabled", ":disabled" );			}			// Opera 10-11 does not throw on post-comma invalid pseudos			div.querySelectorAll("*,:x");			rbuggyQSA.push(",.*:");		});	}	if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||		docElem.webkitMatchesSelector ||		docElem.mozMatchesSelector ||		docElem.oMatchesSelector ||		docElem.msMatchesSelector) )) ) {		assert(function( div ) {			// Check to see if it''s possible to do matchesSelector			// on a disconnected node (IE 9)			support.disconnectedMatch = matches.call( div, "div" );			// This should fail with an exception			// Gecko does not error, returns false instead			matches.call( div, "[s!='''']:x" );			rbuggyMatches.push( "!=", pseudos );		});	}	rbuggyQSA = rbuggyQSA.length &amp;&amp; new RegExp( rbuggyQSA.join("|") );	rbuggyMatches = rbuggyMatches.length &amp;&amp; new RegExp( rbuggyMatches.join("|") );	/* Contains	---------------------------------------------------------------------- */	hasCompare = rnative.test( docElem.compareDocumentPosition );	// Element contains another	// Purposefully does not implement inclusive descendent	// As in, an element does not contain itself	contains = hasCompare || rnative.test( docElem.contains ) ?		function( a, b ) {			var adown = a.nodeType === 9 ? a.documentElement : a,				bup = b &amp;&amp; b.parentNode;			return a === bup || !!( bup &amp;&amp; bup.nodeType === 1 &amp;&amp; (				adown.contains ?					adown.contains( bup ) :					a.compareDocumentPosition &amp;&amp; a.compareDocumentPosition( bup ) &amp; 16			));		} :		function( a, b ) {			if ( b ) {				while ( (b = b.parentNode) ) {					if ( b === a ) {						return true;					}				}			}			return false;		};	/* Sorting	---------------------------------------------------------------------- */	// Document order sorting	sortOrder = hasCompare ?	function( a, b ) {		// Flag for duplicate removal		if ( a === b ) {			hasDuplicate = true;			return 0;		}		// Sort on method existence if only one input has compareDocumentPosition		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;		if ( compare ) {			return compare;		}		// Calculate position if both inputs belong to the same document		compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?			a.compareDocumentPosition( b ) :			// Otherwise we know they are disconnected			1;		// Disconnected nodes		if ( compare &amp; 1 ||			(!support.sortDetached &amp;&amp; b.compareDocumentPosition( a ) === compare) ) {			// Choose the first element that is related to our preferred document			if ( a === doc || a.ownerDocument === preferredDoc &amp;&amp; contains(preferredDoc, a) ) {				return -1;			}			if ( b === doc || b.ownerDocument === preferredDoc &amp;&amp; contains(preferredDoc, b) ) {				return 1;			}			// Maintain original order			return sortInput ?				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :				0;		}		return compare &amp; 4 ? -1 : 1;	} :	function( a, b ) {		// Exit early if the nodes are identical		if ( a === b ) {			hasDuplicate = true;			return 0;		}		var cur,			i = 0,			aup = a.parentNode,			bup = b.parentNode,			ap = [ a ],			bp = [ b ];		// Parentless nodes are either documents or disconnected		if ( !aup || !bup ) {			return a === doc ? -1 :				b === doc ? 1 :				aup ? -1 :				bup ? 1 :				sortInput ?				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :				0;		// If the nodes are siblings, we can do a quick check		} else if ( aup === bup ) {			return siblingCheck( a, b );		}		// Otherwise we need full lists of their ancestors for comparison		cur = a;		while ( (cur = cur.parentNode) ) {			ap.unshift( cur );		}		cur = b;		while ( (cur = cur.parentNode) ) {			bp.unshift( cur );		}		// Walk down the tree looking for a discrepancy		while ( ap[i] === bp[i] ) {			i++;		}		return i ?			// Do a sibling check if the nodes have a common ancestor			siblingCheck( ap[i], bp[i] ) :			// Otherwise nodes in our document sort first			ap[i] === preferredDoc ? -1 :			bp[i] === preferredDoc ? 1 :			0;	};	return doc;};Sizzle.matches = function( expr, elements ) {	return Sizzle( expr, null, null, elements );};Sizzle.matchesSelector = function( elem, expr ) {	// Set document vars if needed	if ( ( elem.ownerDocument || elem ) !== document ) {		setDocument( elem );	}	// Make sure that attribute selectors are quoted	expr = expr.replace( rattributeQuotes, "=''$1'']" );	if ( support.matchesSelector &amp;&amp; documentIsHTML &amp;&amp;		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &amp;&amp;		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {		try {			var ret = matches.call( elem, expr );			// IE 9''s matchesSelector returns false on disconnected nodes			if ( ret || support.disconnectedMatch ||					// As well, disconnected nodes are said to be in a document					// fragment in IE 9					elem.document &amp;&amp; elem.document.nodeType !== 11 ) {				return ret;			}		} catch (e) {}	}	return Sizzle( expr, document, null, [ elem ] ).length &gt; 0;};Sizzle.contains = function( context, elem ) {	// Set document vars if needed	if ( ( context.ownerDocument || context ) !== document ) {		setDocument( context );	}	return contains( context, elem );};Sizzle.attr = function( elem, name ) {	// Set document vars if needed	if ( ( elem.ownerDocument || elem ) !== document ) {		setDocument( elem );	}	var fn = Expr.attrHandle[ name.toLowerCase() ],		// Don''t get fooled by Object.prototype properties (jQuery #13807)		val = fn &amp;&amp; hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?			fn( elem, name, !documentIsHTML ) :			undefined;	return val !== undefined ?		val :		support.attributes || !documentIsHTML ?			elem.getAttribute( name ) :			(val = elem.getAttributeNode(name)) &amp;&amp; val.specified ?				val.value :				null;};Sizzle.error = function( msg ) {	throw new Error( "Syntax error, unrecognized expression: " + msg );};/** * Document sorting and removing duplicates * @param {ArrayLike} results */Sizzle.uniqueSort = function( results ) {	var elem,		duplicates = [],		j = 0,		i = 0;	// Unless we *know* we can detect duplicates, assume their presence	hasDuplicate = !support.detectDuplicates;	sortInput = !support.sortStable &amp;&amp; results.slice( 0 );	results.sort( sortOrder );	if ( hasDuplicate ) {		while ( (elem = results[i++]) ) {			if ( elem === results[ i ] ) {				j = duplicates.push( i );			}		}		while ( j-- ) {			results.splice( duplicates[ j ], 1 );		}	}	// Clear input after sorting to release objects	// See https://github.com/jquery/sizzle/pull/225	sortInput = null;	return results;};/** * Utility function for retrieving the text value of an array of DOM nodes * @param {Array|Element} elem */getText = Sizzle.getText = function( elem ) {	var node,		ret = "",		i = 0,		nodeType = elem.nodeType;	if ( !nodeType ) {		// If no nodeType, this is expected to be an array		while ( (node = elem[i++]) ) {			// Do not traverse comment nodes			ret += getText( node );		}	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {		// Use textContent for elements		// innerText usage removed for consistency of new lines (jQuery #11153)		if ( typeof elem.textContent === "string" ) {			return elem.textContent;		} else {			// Traverse its children			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {				ret += getText( elem );			}		}	} else if ( nodeType === 3 || nodeType === 4 ) {		return elem.nodeValue;	}	// Do not include comment or processing instruction nodes	return ret;};Expr = Sizzle.selectors = {	// Can be adjusted by the user	cacheLength: 50,	createPseudo: markFunction,	match: matchExpr,	attrHandle: {},	find: {},	relative: {		"&gt;": { dir: "parentNode", first: true },		" ": { dir: "parentNode" },		"+": { dir: "previousSibling", first: true },		"~": { dir: "previousSibling" }	},	preFilter: {		"ATTR": function( match ) {			match[1] = match[1].replace( runescape, funescape );			// Move the given value to match[3] whether quoted or unquoted			match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );			if ( match[2] === "~=" ) {				match[3] = " " + match[3] + " ";			}			return match.slice( 0, 4 );		},		"CHILD": function( match ) {			/* matches from matchExpr["CHILD"]				1 type (only|nth|...)				2 what (child|of-type)				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)				4 xn-component of xn+y argument ([+-]?\d*n|)				5 sign of xn-component				6 x of xn-component				7 sign of y-component				8 y of y-component			*/			match[1] = match[1].toLowerCase();			if ( match[1].slice( 0, 3 ) === "nth" ) {				// nth-* requires argument				if ( !match[3] ) {					Sizzle.error( match[0] );				}				// numeric x and y parameters for Expr.filter.CHILD				// remember that false/true cast respectively to 0/1				match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );				match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );			// other types prohibit arguments			} else if ( match[3] ) {				Sizzle.error( match[0] );			}			return match;		},		"PSEUDO": function( match ) {			var excess,				unquoted = !match[6] &amp;&amp; match[2];			if ( matchExpr["CHILD"].test( match[0] ) ) {				return null;			}			// Accept quoted arguments as-is			if ( match[3] ) {				match[2] = match[4] || match[5] || "";			// Strip excess characters from unquoted arguments			} else if ( unquoted &amp;&amp; rpseudo.test( unquoted ) &amp;&amp;				// Get excess from tokenize (recursively)				(excess = tokenize( unquoted, true )) &amp;&amp;				// advance to the next closing parenthesis				(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {				// excess is a negative index				match[0] = match[0].slice( 0, excess );				match[2] = unquoted.slice( 0, excess );			}			// Return only captures needed by the pseudo filter method (type and argument)			return match.slice( 0, 3 );		}	},	filter: {		"TAG": function( nodeNameSelector ) {			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();			return nodeNameSelector === "*" ?				function() { return true; } :				function( elem ) {					return elem.nodeName &amp;&amp; elem.nodeName.toLowerCase() === nodeName;				};		},		"CLASS": function( className ) {			var pattern = classCache[ className + " " ];			return pattern ||				(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &amp;&amp;				classCache( className, function( elem ) {					return pattern.test( typeof elem.className === "string" &amp;&amp; elem.className || typeof elem.getAttribute !== "undefined" &amp;&amp; elem.getAttribute("class") || "" );				});		},		"ATTR": function( name, operator, check ) {			return function( elem ) {				var result = Sizzle.attr( elem, name );				if ( result == null ) {					return operator === "!=";				}				if ( !operator ) {					return true;				}				result += "";				return operator === "=" ? result === check :					operator === "!=" ? result !== check :					operator === "^=" ? check &amp;&amp; result.indexOf( check ) === 0 :					operator === "*=" ? check &amp;&amp; result.indexOf( check ) &gt; -1 :					operator === "$=" ? check &amp;&amp; result.slice( -check.length ) === check :					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) &gt; -1 :					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :					false;			};		},		"CHILD": function( type, what, argument, first, last ) {			var simple = type.slice( 0, 3 ) !== "nth",				forward = type.slice( -4 ) !== "last",				ofType = what === "of-type";			return first === 1 &amp;&amp; last === 0 ?				// Shortcut for :nth-*(n)				function( elem ) {					return !!elem.parentNode;				} :				function( elem, context, xml ) {					var cache, outerCache, node, diff, nodeIndex, start,						dir = simple !== forward ? "nextSibling" : "previousSibling",						parent = elem.parentNode,						name = ofType &amp;&amp; elem.nodeName.toLowerCase(),						useCache = !xml &amp;&amp; !ofType;					if ( parent ) {						// :(first|last|only)-(child|of-type)						if ( simple ) {							while ( dir ) {								node = elem;								while ( (node = node[ dir ]) ) {									if ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) {										return false;									}								}								// Reverse direction for :only-* (if we haven''t yet done so)								start = dir = type === "only" &amp;&amp; !start &amp;&amp; "nextSibling";							}							return true;						}						start = [ forward ? parent.firstChild : parent.lastChild ];						// non-xml :nth-child(...) stores cache data on `parent`						if ( forward &amp;&amp; useCache ) {							// Seek `elem` from a previously-cached index							outerCache = parent[ expando ] || (parent[ expando ] = {});							cache = outerCache[ type ] || [];							nodeIndex = cache[0] === dirruns &amp;&amp; cache[1];							diff = cache[0] === dirruns &amp;&amp; cache[2];							node = nodeIndex &amp;&amp; parent.childNodes[ nodeIndex ];							while ( (node = ++nodeIndex &amp;&amp; node &amp;&amp; node[ dir ] ||								// Fallback to seeking `elem` from the start								(diff = nodeIndex = 0) || start.pop()) ) {								// When found, cache indexes on `parent` and break								if ( node.nodeType === 1 &amp;&amp; ++diff &amp;&amp; node === elem ) {									outerCache[ type ] = [ dirruns, nodeIndex, diff ];									break;								}							}						// Use previously-cached element index if available						} else if ( useCache &amp;&amp; (cache = (elem[ expando ] || (elem[ expando ] = {}))[ type ]) &amp;&amp; cache[0] === dirruns ) {							diff = cache[1];						// xml :nth-child(...) or :nth-last-child(...) or :nth(-last)?-of-type(...)						} else {							// Use the same loop as above to seek `elem` from the start							while ( (node = ++nodeIndex &amp;&amp; node &amp;&amp; node[ dir ] ||								(diff = nodeIndex = 0) || start.pop()) ) {								if ( ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) &amp;&amp; ++diff ) {									// Cache the index of each encountered element									if ( useCache ) {										(node[ expando ] || (node[ expando ] = {}))[ type ] = [ dirruns, diff ];									}									if ( node === elem ) {										break;									}								}							}						}						// Incorporate the offset, then check against cycle size						diff -= last;						return diff === first || ( diff % first === 0 &amp;&amp; diff / first &gt;= 0 );					}				};		},		"PSEUDO": function( pseudo, argument ) {			// pseudo-class names are case-insensitive			// http://www.w3.org/TR/selectors/#pseudo-classes			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters			// Remember that setFilters inherits from pseudos			var args,				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||					Sizzle.error( "unsupported pseudo: " + pseudo );			// The user may use createPseudo to indicate that			// arguments are needed to create the filter function			// just as Sizzle does			if ( fn[ expando ] ) {				return fn( argument );			}			// But maintain support for old signatures			if ( fn.length &gt; 1 ) {				args = [ pseudo, pseudo, "", argument ];				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?					markFunction(function( seed, matches ) {						var idx,							matched = fn( seed, argument ),							i = matched.length;						while ( i-- ) {							idx = indexOf( seed, matched[i] );							seed[ idx ] = !( matches[ idx ] = matched[i] );						}					}) :					function( elem ) {						return fn( elem, 0, args );					};			}			return fn;		}	},	pseudos: {		// Potentially complex pseudos		"not": markFunction(function( selector ) {			// Trim the selector passed to compile			// to avoid treating leading and trailing			// spaces as combinators			var input = [],				results = [],				matcher = compile( selector.replace( rtrim, "$1" ) );			return matcher[ expando ] ?				markFunction(function( seed, matches, context, xml ) {					var elem,						unmatched = matcher( seed, null, xml, [] ),						i = seed.length;					// Match elements unmatched by `matcher`					while ( i-- ) {						if ( (elem = unmatched[i]) ) {							seed[i] = !(matches[i] = elem);						}					}				}) :				function( elem, context, xml ) {					input[0] = elem;					matcher( input, null, xml, results );					// Don''t keep the element (issue #299)					input[0] = null;					return !results.pop();				};		}),		"has": markFunction(function( selector ) {			return function( elem ) {				return Sizzle( selector, elem ).length &gt; 0;			};		}),		"contains": markFunction(function( text ) {			text = text.replace( runescape, funescape );			return function( elem ) {				return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) &gt; -1;			};		}),		// "Whether an element is represented by a :lang() selector		// is based solely on the element''s language value		// being equal to the identifier C,		// or beginning with the identifier C immediately followed by "-".		// The matching of C against the element''s language value is performed case-insensitively.		// The identifier C does not have to be a valid language name."		// http://www.w3.org/TR/selectors/#lang-pseudo		"lang": markFunction( function( lang ) {			// lang value must be a valid identifier			if ( !ridentifier.test(lang || "") ) {				Sizzle.error( "unsupported lang: " + lang );			}			lang = lang.replace( runescape, funescape ).toLowerCase();			return function( elem ) {				var elemLang;				do {					if ( (elemLang = documentIsHTML ?						elem.lang :						elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {						elemLang = elemLang.toLowerCase();						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;					}				} while ( (elem = elem.parentNode) &amp;&amp; elem.nodeType === 1 );				return false;			};		}),		// Miscellaneous		"target": function( elem ) {			var hash = window.location &amp;&amp; window.location.hash;			return hash &amp;&amp; hash.slice( 1 ) === elem.id;		},		"root": function( elem ) {			return elem === docElem;		},		"focus": function( elem ) {			return elem === document.activeElement &amp;&amp; (!document.hasFocus || document.hasFocus()) &amp;&amp; !!(elem.type || elem.href || ~elem.tabIndex);		},		// Boolean properties		"enabled": function( elem ) {			return elem.disabled === false;		},		"disabled": function( elem ) {			return elem.disabled === true;		},		"checked": function( elem ) {			// In CSS3, :checked should return both checked and selected elements			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked			var nodeName = elem.nodeName.toLowerCase();			return (nodeName === "input" &amp;&amp; !!elem.checked) || (nodeName === "option" &amp;&amp; !!elem.selected);		},		"selected": function( elem ) {			// Accessing this property makes selected-by-default			// options in Safari work properly			if ( elem.parentNode ) {				elem.parentNode.selectedIndex;			}			return elem.selected === true;		},		// Contents		"empty": function( elem ) {			// http://www.w3.org/TR/selectors/#empty-pseudo			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),			//   but not by others (comment: 8; processing instruction: 7; etc.)			// nodeType &lt; 6 works because attributes (2) do not appear as children			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {				if ( elem.nodeType &lt; 6 ) {					return false;				}			}			return true;		},		"parent": function( elem ) {			return !Expr.pseudos["empty"]( elem );		},		// Element/input types		"header": function( elem ) {			return rheader.test( elem.nodeName );		},		"input": function( elem ) {			return rinputs.test( elem.nodeName );		},		"button": function( elem ) {			var name = elem.nodeName.toLowerCase();			return name === "input" &amp;&amp; elem.type === "button" || name === "button";		},		"text": function( elem ) {			var attr;			return elem.nodeName.toLowerCase() === "input" &amp;&amp;				elem.type === "text" &amp;&amp;				// Support: IE&lt;8				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"				( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );		},		// Position-in-collection		"first": createPositionalPseudo(function() {			return [ 0 ];		}),		"last": createPositionalPseudo(function( matchIndexes, length ) {			return [ length - 1 ];		}),		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {			return [ argument &lt; 0 ? argument + length : argument ];		}),		"even": createPositionalPseudo(function( matchIndexes, length ) {			var i = 0;			for ( ; i &lt; length; i += 2 ) {				matchIndexes.push( i );			}			return matchIndexes;		}),		"odd": createPositionalPseudo(function( matchIndexes, length ) {			var i = 1;			for ( ; i &lt; length; i += 2 ) {				matchIndexes.push( i );			}			return matchIndexes;		}),		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {			var i = argument &lt; 0 ? argument + length : argument;			for ( ; --i &gt;= 0; ) {				matchIndexes.push( i );			}			return matchIndexes;		}),		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {			var i = argument &lt; 0 ? argument + length : argument;			for ( ; ++i &lt; length; ) {				matchIndexes.push( i );			}			return matchIndexes;		})	}};Expr.pseudos["nth"] = Expr.pseudos["eq"];// Add button/input type pseudosfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {	Expr.pseudos[ i ] = createInputPseudo( i );}for ( i in { submit: true, reset: true } ) {	Expr.pseudos[ i ] = createButtonPseudo( i );}// Easy API for creating new setFiltersfunction setFilters() {}setFilters.prototype = Expr.filters = Expr.pseudos;Expr.setFilters = new setFilters();tokenize = Sizzle.tokenize = function( selector, parseOnly ) {	var matched, match, tokens, type,		soFar, groups, preFilters,		cached = tokenCache[ selector + " " ];	if ( cached ) {		return parseOnly ? 0 : cached.slice( 0 );	}	soFar = selector;	groups = [];	preFilters = Expr.preFilter;	while ( soFar ) {		// Comma and first run		if ( !matched || (match = rcomma.exec( soFar )) ) {			if ( match ) {				// Don''t consume trailing commas as valid				soFar = soFar.slice( match[0].length ) || soFar;			}			groups.push( (tokens = []) );		}		matched = false;		// Combinators		if ( (match = rcombinators.exec( soFar )) ) {			matched = match.shift();			tokens.push({				value: matched,				// Cast descendant combinators to space				type: match[0].replace( rtrim, " " )			});			soFar = soFar.slice( matched.length );		}		// Filters		for ( type in Expr.filter ) {			if ( (match = matchExpr[ type ].exec( soFar )) &amp;&amp; (!preFilters[ type ] ||				(match = preFilters[ type ]( match ))) ) {				matched = match.shift();				tokens.push({					value: matched,					type: type,					matches: match				});				soFar = soFar.slice( matched.length );			}		}		if ( !matched ) {			break;		}	}	// Return the length of the invalid excess	// if we''re just parsing	// Otherwise, throw an error or return tokens	return parseOnly ?		soFar.length :		soFar ?			Sizzle.error( selector ) :			// Cache the tokens			tokenCache( selector, groups ).slice( 0 );};function toSelector( tokens ) {	var i = 0,		len = tokens.length,		selector = "";	for ( ; i &lt; len; i++ ) {		selector += tokens[i].value;	}	return selector;}function addCombinator( matcher, combinator, base ) {	var dir = combinator.dir,		checkNonElements = base &amp;&amp; dir === "parentNode",		doneName = done++;	return combinator.first ?		// Check against closest ancestor/preceding element		function( elem, context, xml ) {			while ( (elem = elem[ dir ]) ) {				if ( elem.nodeType === 1 || checkNonElements ) {					return matcher( elem, context, xml );				}			}		} :		// Check against all ancestor/preceding elements		function( elem, context, xml ) {			var oldCache, outerCache,				newCache = [ dirruns, doneName ];			// We can''t set arbitrary data on XML nodes, so they don''t benefit from dir caching			if ( xml ) {				while ( (elem = elem[ dir ]) ) {					if ( elem.nodeType === 1 || checkNonElements ) {						if ( matcher( elem, context, xml ) ) {							return true;						}					}				}			} else {				while ( (elem = elem[ dir ]) ) {					if ( elem.nodeType === 1 || checkNonElements ) {						outerCache = elem[ expando ] || (elem[ expando ] = {});						if ( (oldCache = outerCache[ dir ]) &amp;&amp;							oldCache[ 0 ] === dirruns &amp;&amp; oldCache[ 1 ] === doneName ) {							// Assign to newCache so results back-propagate to previous elements							return (newCache[ 2 ] = oldCache[ 2 ]);						} else {							// Reuse newcache so results back-propagate to previous elements							outerCache[ dir ] = newCache;							// A match means we''re done; a fail means we have to keep checking							if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {								return true;							}						}					}				}			}		};}function elementMatcher( matchers ) {	return matchers.length &gt; 1 ?		function( elem, context, xml ) {			var i = matchers.length;			while ( i-- ) {				if ( !matchers[i]( elem, context, xml ) ) {					return false;				}			}			return true;		} :		matchers[0];}function multipleContexts( selector, contexts, results ) {	var i = 0,		len = contexts.length;	for ( ; i &lt; len; i++ ) {		Sizzle( selector, contexts[i], results );	}	return results;}function condense( unmatched, map, filter, context, xml ) {	var elem,		newUnmatched = [],		i = 0,		len = unmatched.length,		mapped = map != null;	for ( ; i &lt; len; i++ ) {		if ( (elem = unmatched[i]) ) {			if ( !filter || filter( elem, context, xml ) ) {				newUnmatched.push( elem );				if ( mapped ) {					map.push( i );				}			}		}	}	return newUnmatched;}function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {	if ( postFilter &amp;&amp; !postFilter[ expando ] ) {		postFilter = setMatcher( postFilter );	}	if ( postFinder &amp;&amp; !postFinder[ expando ] ) {		postFinder = setMatcher( postFinder, postSelector );	}	return markFunction(function( seed, results, context, xml ) {		var temp, i, elem,			preMap = [],			postMap = [],			preexisting = results.length,			// Get initial elements from seed or context			elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),			// Prefilter to get matcher input, preserving a map for seed-results synchronization			matcherIn = preFilter &amp;&amp; ( seed || !selector ) ?				condense( elems, preMap, preFilter, context, xml ) :				elems,			matcherOut = matcher ?				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?					// ...intermediate processing is necessary					[] :					// ...otherwise use results directly					results :				matcherIn;		// Find primary matches		if ( matcher ) {			matcher( matcherIn, matcherOut, context, xml );		}		// Apply postFilter		if ( postFilter ) {			temp = condense( matcherOut, postMap );			postFilter( temp, [], context, xml );			// Un-match failing elements by moving them back to matcherIn			i = temp.length;			while ( i-- ) {				if ( (elem = temp[i]) ) {					matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);				}			}		}		if ( seed ) {			if ( postFinder || preFilter ) {				if ( postFinder ) {					// Get the final matcherOut by condensing this intermediate into postFinder contexts					temp = [];					i = matcherOut.length;					while ( i-- ) {						if ( (elem = matcherOut[i]) ) {							// Restore matcherIn since elem is not yet a final match							temp.push( (matcherIn[i] = elem) );						}					}					postFinder( null, (matcherOut = []), temp, xml );				}				// Move matched elements from seed to results to keep them synchronized				i = matcherOut.length;				while ( i-- ) {					if ( (elem = matcherOut[i]) &amp;&amp;						(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) &gt; -1 ) {						seed[temp] = !(results[temp] = elem);					}				}			}		// Add elements to results, through postFinder if defined		} else {			matcherOut = condense(				matcherOut === results ?					matcherOut.splice( preexisting, matcherOut.length ) :					matcherOut			);			if ( postFinder ) {				postFinder( null, results, matcherOut, xml );			} else {				push.apply( results, matcherOut );			}		}	});}function matcherFromTokens( tokens ) {	var checkContext, matcher, j,		len = tokens.length,		leadingRelative = Expr.relative[ tokens[0].type ],		implicitRelative = leadingRelative || Expr.relative[" "],		i = leadingRelative ? 1 : 0,		// The foundational matcher ensures that elements are reachable from top-level context(s)		matchContext = addCombinator( function( elem ) {			return elem === checkContext;		}, implicitRelative, true ),		matchAnyContext = addCombinator( function( elem ) {			return indexOf( checkContext, elem ) &gt; -1;		}, implicitRelative, true ),		matchers = [ function( elem, context, xml ) {			var ret = ( !leadingRelative &amp;&amp; ( xml || context !== outermostContext ) ) || (				(checkContext = context).nodeType ?					matchContext( elem, context, xml ) :					matchAnyContext( elem, context, xml ) );			// Avoid hanging onto element (issue #299)			checkContext = null;			return ret;		} ];	for ( ; i &lt; len; i++ ) {		if ( (matcher = Expr.relative[ tokens[i].type ]) ) {			matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];		} else {			matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );			// Return special upon seeing a positional matcher			if ( matcher[ expando ] ) {				// Find the next relative operator (if any) for proper handling				j = ++i;				for ( ; j &lt; len; j++ ) {					if ( Expr.relative[ tokens[j].type ] ) {						break;					}				}				return setMatcher(					i &gt; 1 &amp;&amp; elementMatcher( matchers ),					i &gt; 1 &amp;&amp; toSelector(						// If the preceding token was a descendant combinator, insert an implicit any-element `*`						tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })					).replace( rtrim, "$1" ),					matcher,					i &lt; j &amp;&amp; matcherFromTokens( tokens.slice( i, j ) ),					j &lt; len &amp;&amp; matcherFromTokens( (tokens = tokens.slice( j )) ),					j &lt; len &amp;&amp; toSelector( tokens )				);			}			matchers.push( matcher );		}	}	return elementMatcher( matchers );}function matcherFromGroupMatchers( elementMatchers, setMatchers ) {	var bySet = setMatchers.length &gt; 0,		byElement = elementMatchers.length &gt; 0,		superMatcher = function( seed, context, xml, results, outermost ) {			var elem, j, matcher,				matchedCount = 0,				i = "0",				unmatched = seed &amp;&amp; [],				setMatched = [],				contextBackup = outermostContext,				// We must always have either seed elements or outermost context				elems = seed || byElement &amp;&amp; Expr.find["TAG"]( "*", outermost ),				// Use integer dirruns iff this is the outermost matcher				dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),				len = elems.length;			if ( outermost ) {				outermostContext = context !== document &amp;&amp; context;			}			// Add elements passing elementMatchers directly to results			// Keep `i` a string if there are no elements so `matchedCount` will be "00" below			// Support: IE&lt;9, Safari			// Tolerate NodeList properties (IE: "length"; Safari: &lt;number&gt;) matching elements by id			for ( ; i !== len &amp;&amp; (elem = elems[i]) != null; i++ ) {				if ( byElement &amp;&amp; elem ) {					j = 0;					while ( (matcher = elementMatchers[j++]) ) {						if ( matcher( elem, context, xml ) ) {							results.push( elem );							break;						}					}					if ( outermost ) {						dirruns = dirrunsUnique;					}				}				// Track unmatched elements for set filters				if ( bySet ) {					// They will have gone through all possible matchers					if ( (elem = !matcher &amp;&amp; elem) ) {						matchedCount--;					}					// Lengthen the array for every element, matched or not					if ( seed ) {						unmatched.push( elem );					}				}			}			// Apply set filters to unmatched elements			matchedCount += i;			if ( bySet &amp;&amp; i !== matchedCount ) {				j = 0;				while ( (matcher = setMatchers[j++]) ) {					matcher( unmatched, setMatched, context, xml );				}				if ( seed ) {					// Reintegrate element matches to eliminate the need for sorting					if ( matchedCount &gt; 0 ) {						while ( i-- ) {							if ( !(unmatched[i] || setMatched[i]) ) {								setMatched[i] = pop.call( results );							}						}					}					// Discard index placeholder values to get only actual matches					setMatched = condense( setMatched );				}				// Add matches to results				push.apply( results, setMatched );				// Seedless set matches succeeding multiple successful matchers stipulate sorting				if ( outermost &amp;&amp; !seed &amp;&amp; setMatched.length &gt; 0 &amp;&amp;					( matchedCount + setMatchers.length ) &gt; 1 ) {					Sizzle.uniqueSort( results );				}			}			// Override manipulation of globals by nested matchers			if ( outermost ) {				dirruns = dirrunsUnique;				outermostContext = contextBackup;			}			return unmatched;		};	return bySet ?		markFunction( superMatcher ) :		superMatcher;}compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {	var i,		setMatchers = [],		elementMatchers = [],		cached = compilerCache[ selector + " " ];	if ( !cached ) {		// Generate a function of recursive functions that can be used to check each element		if ( !match ) {			match = tokenize( selector );		}		i = match.length;		while ( i-- ) {			cached = matcherFromTokens( match[i] );			if ( cached[ expando ] ) {				setMatchers.push( cached );			} else {				elementMatchers.push( cached );			}		}		// Cache the compiled function		cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );		// Save selector and tokenization		cached.selector = selector;	}	return cached;};/** * A low-level selection function that works with Sizzle''s compiled *  selector functions * @param {String|Function} selector A selector or a pre-compiled *  selector function built with Sizzle.compile * @param {Element} context * @param {Array} [results] * @param {Array} [seed] A set of elements to match against */select = Sizzle.select = function( selector, context, results, seed ) {	var i, tokens, token, type, find,		compiled = typeof selector === "function" &amp;&amp; selector,		match = !seed &amp;&amp; tokenize( (selector = compiled.selector || selector) );	results = results || [];	// Try to minimize operations if there is no seed and only one group	if ( match.length === 1 ) {		// Take a shortcut and set the context if the root selector is an ID		tokens = match[0] = match[0].slice( 0 );		if ( tokens.length &gt; 2 &amp;&amp; (token = tokens[0]).type === "ID" &amp;&amp;				support.getById &amp;&amp; context.nodeType === 9 &amp;&amp; documentIsHTML &amp;&amp;				Expr.relative[ tokens[1].type ] ) {			context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];			if ( !context ) {				return results;			// Precompiled matchers will still verify ancestry, so step up a level			} else if ( compiled ) {				context = context.parentNode;			}			selector = selector.slice( tokens.shift().value.length );		}		// Fetch a seed set for right-to-left matching		i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;		while ( i-- ) {			token = tokens[i];			// Abort if we hit a combinator			if ( Expr.relative[ (type = token.type) ] ) {				break;			}			if ( (find = Expr.find[ type ]) ) {				// Search, expanding context for leading sibling combinators				if ( (seed = find(					token.matches[0].replace( runescape, funescape ),					rsibling.test( tokens[0].type ) &amp;&amp; testContext( context.parentNode ) || context				)) ) {					// If seed is empty or no tokens remain, we can return early					tokens.splice( i, 1 );					selector = seed.length &amp;&amp; toSelector( tokens );					if ( !selector ) {						push.apply( results, seed );						return results;					}					break;				}			}		}	}	// Compile and execute a filtering function if one is not provided	// Provide `match` to avoid retokenization if we modified the selector above	( compiled || compile( selector, match ) )(		seed,		context,		!documentIsHTML,		results,		rsibling.test( selector ) &amp;&amp; testContext( context.parentNode ) || context	);	return results;};// One-time assignments// Sort stabilitysupport.sortStable = expando.split("").sort( sortOrder ).join("") === expando;// Support: Chrome 14-35+// Always assume duplicates if they aren''t passed to the comparison functionsupport.detectDuplicates = !!hasDuplicate;// Initialize against the default documentsetDocument();// Support: Webkit&lt;537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)// Detached nodes confoundingly follow *each other*support.sortDetached = assert(function( div1 ) {	// Should return 1, but returns 4 (following)	return div1.compareDocumentPosition( document.createElement("div") ) &amp; 1;});// Support: IE&lt;8// Prevent attribute/property "interpolation"// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspxif ( !assert(function( div ) {	div.innerHTML = "&lt;a href=''#''&gt;&lt;/a&gt;";	return div.firstChild.getAttribute("href") === "#" ;}) ) {	addHandle( "type|href|height|width", function( elem, name, isXML ) {		if ( !isXML ) {			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );		}	});}// Support: IE&lt;9// Use defaultValue in place of getAttribute("value")if ( !support.attributes || !assert(function( div ) {	div.innerHTML = "&lt;input/&gt;";	div.firstChild.setAttribute( "value", "" );	return div.firstChild.getAttribute( "value" ) === "";}) ) {	addHandle( "value", function( elem, name, isXML ) {		if ( !isXML &amp;&amp; elem.nodeName.toLowerCase() === "input" ) {			return elem.defaultValue;		}	});}// Support: IE&lt;9// Use getAttributeNode to fetch booleans when getAttribute liesif ( !assert(function( div ) {	return div.getAttribute("disabled") == null;}) ) {	addHandle( booleans, function( elem, name, isXML ) {		var val;		if ( !isXML ) {			return elem[ name ] === true ? name.toLowerCase() :					(val = elem.getAttributeNode( name )) &amp;&amp; val.specified ?					val.value :				null;		}	});}return Sizzle;})( window );jQuery.find = Sizzle;jQuery.expr = Sizzle.selectors;jQuery.expr[":"] = jQuery.expr.pseudos;jQuery.unique = Sizzle.uniqueSort;jQuery.text = Sizzle.getText;jQuery.isXMLDoc = Sizzle.isXML;jQuery.contains = Sizzle.contains;var rneedsContext = jQuery.expr.match.needsContext;var rsingleTag = (/^&lt;(\w+)\s*\/?&gt;(?:&lt;\/\1&gt;|)$/);var risSimple = /^.[^:#\[\.,]*$/;// Implement the identical functionality for filter and notfunction winnow( elements, qualifier, not ) {	if ( jQuery.isFunction( qualifier ) ) {		return jQuery.grep( elements, function( elem, i ) {			/* jshint -W018 */			return !!qualifier.call( elem, i, elem ) !== not;		});	}	if ( qualifier.nodeType ) {		return jQuery.grep( elements, function( elem ) {			return ( elem === qualifier ) !== not;		});	}	if ( typeof qualifier === "string" ) {		if ( risSimple.test( qualifier ) ) {			return jQuery.filter( qualifier, elements, not );		}		qualifier = jQuery.filter( qualifier, elements );	}	return jQuery.grep( elements, function( elem ) {		return ( indexOf.call( qualifier, elem ) &gt;= 0 ) !== not;	});}jQuery.filter = function( expr, elems, not ) {	var elem = elems[ 0 ];	if ( not ) {		expr = ":not(" + expr + ")";	}	return elems.length === 1 &amp;&amp; elem.nodeType === 1 ?		jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :		jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {			return elem.nodeType === 1;		}));};jQuery.fn.extend({	find: function( selector ) {		var i,			len = this.length,			ret = [],			self = this;		if ( typeof selector !== "string" ) {			return this.pushStack( jQuery( selector ).filter(function() {				for ( i = 0; i &lt; len; i++ ) {					if ( jQuery.contains( self[ i ], this ) ) {						return true;					}				}			}) );		}		for ( i = 0; i &lt; len; i++ ) {			jQuery.find( selector, self[ i ], ret );		}		// Needed because $( selector, context ) becomes $( context ).find( selector )		ret = this.pushStack( len &gt; 1 ? jQuery.unique( ret ) : ret );		ret.selector = this.selector ? this.selector + " " + selector : selector;		return ret;	},	filter: function( selector ) {		return this.pushStack( winnow(this, selector || [], false) );	},	not: function( selector ) {		return this.pushStack( winnow(this, selector || [], true) );	},	is: function( selector ) {		return !!winnow(			this,			// If this is a positional/relative selector, check membership in the returned set			// so $("p:first").is("p:last") won''t return true for a doc with two "p".			typeof selector === "string" &amp;&amp; rneedsContext.test( selector ) ?				jQuery( selector ) :				selector || [],			false		).length;	}});// Initialize a jQuery object// A central reference to the root jQuery(document)var rootjQuery,	// A simple way to check for HTML strings	// Prioritize #id over &lt;tag&gt; to avoid XSS via location.hash (#9521)	// Strict HTML recognition (#11290: must start with &lt;)	rquickExpr = /^(?:\s*(&lt;[\w\W]+&gt;)[^&gt;]*|#([\w-]*))$/,	init = jQuery.fn.init = function( selector, context ) {		var match, elem;		// HANDLE: $(""), $(null), $(undefined), $(false)		if ( !selector ) {			return this;		}		// Handle HTML strings		if ( typeof selector === "string" ) {			if ( selector[0] === "&lt;" &amp;&amp; selector[ selector.length - 1 ] === "&gt;" &amp;&amp; selector.length &gt;= 3 ) {				// Assume that strings that start and end with &lt;&gt; are HTML and skip the regex check				match = [ null, selector, null ];			} else {				match = rquickExpr.exec( selector );			}			// Match html or make sure no context is specified for #id			if ( match &amp;&amp; (match[1] || !context) ) {				// HANDLE: $(html) -&gt; $(array)				if ( match[1] ) {					context = context instanceof jQuery ? context[0] : context;					// Option to run scripts is true for back-compat					// Intentionally let the error be thrown if parseHTML is not present					jQuery.merge( this, jQuery.parseHTML(						match[1],						context &amp;&amp; context.nodeType ? context.ownerDocument || context : document,						true					) );					// HANDLE: $(html, props)					if ( rsingleTag.test( match[1] ) &amp;&amp; jQuery.isPlainObject( context ) ) {						for ( match in context ) {							// Properties of context are called as methods if possible							if ( jQuery.isFunction( this[ match ] ) ) {								this[ match ]( context[ match ] );							// ...and otherwise set as attributes							} else {								this.attr( match, context[ match ] );							}						}					}					return this;				// HANDLE: $(#id)				} else {					elem = document.getElementById( match[2] );					// Support: Blackberry 4.6					// gEBID returns nodes no longer in the document (#6963)					if ( elem &amp;&amp; elem.parentNode ) {						// Inject the element directly into the jQuery object						this.length = 1;						this[0] = elem;					}					this.context = document;					this.selector = selector;					return this;				}			// HANDLE: $(expr, $(...))			} else if ( !context || context.jquery ) {				return ( context || rootjQuery ).find( selector );			// HANDLE: $(expr, context)			// (which is just equivalent to: $(context).find(expr)			} else {				return this.constructor( context ).find( selector );			}		// HANDLE: $(DOMElement)		} else if ( selector.nodeType ) {			this.context = this[0] = selector;			this.length = 1;			return this;		// HANDLE: $(function)		// Shortcut for document ready		} else if ( jQuery.isFunction( selector ) ) {			return typeof rootjQuery.ready !== "undefined" ?				rootjQuery.ready( selector ) :				// Execute immediately if ready is not present				selector( jQuery );		}		if ( selector.selector !== undefined ) {			this.selector = selector.selector;			this.context = selector.context;		}		return jQuery.makeArray( selector, this );	};// Give the init function the jQuery prototype for later instantiationinit.prototype = jQuery.fn;// Initialize central referencerootjQuery = jQuery( document );var rparentsprev = /^(?:parents|prev(?:Until|All))/,	// Methods guaranteed to produce a unique set when starting from a unique set	guaranteedUnique = {		children: true,		contents: true,		next: true,		prev: true	};jQuery.extend({	dir: function( elem, dir, until ) {		var matched = [],			truncate = until !== undefined;		while ( (elem = elem[ dir ]) &amp;&amp; elem.nodeType !== 9 ) {			if ( elem.nodeType === 1 ) {				if ( truncate &amp;&amp; jQuery( elem ).is( until ) ) {					break;				}				matched.push( elem );			}		}		return matched;	},	sibling: function( n, elem ) {		var matched = [];		for ( ; n; n = n.nextSibling ) {			if ( n.nodeType === 1 &amp;&amp; n !== elem ) {				matched.push( n );			}		}		return matched;	}});jQuery.fn.extend({	has: function( target ) {		var targets = jQuery( target, this ),			l = targets.length;		return this.filter(function() {			var i = 0;			for ( ; i &lt; l; i++ ) {				if ( jQuery.contains( this, targets[i] ) ) {					return true;				}			}		});	},	closest: function( selectors, context ) {		var cur,			i = 0,			l = this.length,			matched = [],			pos = rneedsContext.test( selectors ) || typeof selectors !== "string" ?				jQuery( selectors, context || this.context ) :				0;		for ( ; i &lt; l; i++ ) {			for ( cur = this[i]; cur &amp;&amp; cur !== context; cur = cur.parentNode ) {				// Always skip document fragments				if ( cur.nodeType &lt; 11 &amp;&amp; (pos ?					pos.index(cur) &gt; -1 :					// Don''t pass non-elements to Sizzle					cur.nodeType === 1 &amp;&amp;						jQuery.find.matchesSelector(cur, selectors)) ) {					matched.push( cur );					break;				}			}		}		return this.pushStack( matched.length &gt; 1 ? jQuery.unique( matched ) : matched );	},	// Determine the position of an element within the set	index: function( elem ) {		// No argument, return index in parent		if ( !elem ) {			return ( this[ 0 ] &amp;&amp; this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;		}		// Index in selector		if ( typeof elem === "string" ) {			return indexOf.call( jQuery( elem ), this[ 0 ] );		}		// Locate the position of the desired element		return indexOf.call( this,			// If it receives a jQuery object, the first element is used			elem.jquery ? elem[ 0 ] : elem		);	},	add: function( selector, context ) {		return this.pushStack(			jQuery.unique(				jQuery.merge( this.get(), jQuery( selector, context ) )			)		);	},	addBack: function( selector ) {		return this.add( selector == null ?			this.prevObject : this.prevObject.filter(selector)		);	}});function sibling( cur, dir ) {	while ( (cur = cur[dir]) &amp;&amp; cur.nodeType !== 1 ) {}	return cur;}jQuery.each({	parent: function( elem ) {		var parent = elem.parentNode;		return parent &amp;&amp; parent.nodeType !== 11 ? parent : null;	},	parents: function( elem ) {		return jQuery.dir( elem, "parentNode" );	},	parentsUntil: function( elem, i, until ) {		return jQuery.dir( elem, "parentNode", until );	},	next: function( elem ) {		return sibling( elem, "nextSibling" );	},	prev: function( elem ) {		return sibling( elem, "previousSibling" );	},	nextAll: function( elem ) {		return jQuery.dir( elem, "nextSibling" );	},	prevAll: function( elem ) {		return jQuery.dir( elem, "previousSibling" );	},	nextUntil: function( elem, i, until ) {		return jQuery.dir( elem, "nextSibling", until );	},	prevUntil: function( elem, i, until ) {		return jQuery.dir( elem, "previousSibling", until );	},	siblings: function( elem ) {		return jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );	},	children: function( elem ) {		return jQuery.sibling( elem.firstChild );	},	contents: function( elem ) {		return elem.contentDocument || jQuery.merge( [], elem.childNodes );	}}, function( name, fn ) {	jQuery.fn[ name ] = function( until, selector ) {		var matched = jQuery.map( this, fn, until );		if ( name.slice( -5 ) !== "Until" ) {			selector = until;		}		if ( selector &amp;&amp; typeof selector === "string" ) {			matched = jQuery.filter( selector, matched );		}		if ( this.length &gt; 1 ) {			// Remove duplicates			if ( !guaranteedUnique[ name ] ) {				jQuery.unique( matched );			}			// Reverse order for parents* and prev-derivatives			if ( rparentsprev.test( name ) ) {				matched.reverse();			}		}		return this.pushStack( matched );	};});var rnotwhite = (/\S+/g);// String to Object options format cachevar optionsCache = {};// Convert String-formatted options into Object-formatted ones and store in cachefunction createOptions( options ) {	var object = optionsCache[ options ] = {};	jQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {		object[ flag ] = true;	});	return object;}/* * Create a callback list using the following parameters: * *	options: an optional list of space-separated options that will change how *			the callback list behaves or a more traditional option object * * By default a callback list will act like an event callback list and can be * "fired" multiple times. * * Possible options: * *	once:			will ensure the callback list can only be fired once (like a Deferred) * *	memory:			will keep track of previous values and will call any callback added *					after the list has been fired right away with the latest "memorized" *					values (like a Deferred) * *	unique:			will ensure a callback can only be added once (no duplicate in the list) * *	stopOnFalse:	interrupt callings when a callback returns false * */jQuery.Callbacks = function( options ) {	// Convert options from String-formatted to Object-formatted if needed	// (we check in cache first)	options = typeof options === "string" ?		( optionsCache[ options ] || createOptions( options ) ) :		jQuery.extend( {}, options );	var // Last fire value (for non-forgettable lists)		memory,		// Flag to know if list was already fired		fired,		// Flag to know if list is currently firing		firing,		// First callback to fire (used internally by add and fireWith)		firingStart,		// End of the loop when firing		firingLength,		// Index of currently firing callback (modified by remove if needed)		firingIndex,		// Actual callback list		list = [],		// Stack of fire calls for repeatable lists		stack = !options.once &amp;&amp; [],		// Fire callbacks		fire = function( data ) {			memory = options.memory &amp;&amp; data;			fired = true;			firingIndex = firingStart || 0;			firingStart = 0;			firingLength = list.length;			firing = true;			for ( ; list &amp;&amp; firingIndex &lt; firingLength; firingIndex++ ) {				if ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false &amp;&amp; options.stopOnFalse ) {					memory = false; // To prevent further calls using add					break;				}			}			firing = false;			if ( list ) {				if ( stack ) {					if ( stack.length ) {						fire( stack.shift() );					}				} else if ( memory ) {					list = [];				} else {					self.disable();				}			}		},		// Actual Callbacks object		self = {			// Add a callback or a collection of callbacks to the list			add: function() {				if ( list ) {					// First, we save the current length					var start = list.length;					(function add( args ) {						jQuery.each( args, function( _, arg ) {							var type = jQuery.type( arg );							if ( type === "function" ) {								if ( !options.unique || !self.has( arg ) ) {									list.push( arg );								}							} else if ( arg &amp;&amp; arg.length &amp;&amp; type !== "string" ) {								// Inspect recursively								add( arg );							}						});					})( arguments );					// Do we need to add the callbacks to the					// current firing batch?					if ( firing ) {						firingLength = list.length;					// With memory, if we''re not firing then					// we should call right away					} else if ( memory ) {						firingStart = start;						fire( memory );					}				}				return this;			},			// Remove a callback from the list			remove: function() {				if ( list ) {					jQuery.each( arguments, function( _, arg ) {						var index;						while ( ( index = jQuery.inArray( arg, list, index ) ) &gt; -1 ) {							list.splice( index, 1 );							// Handle firing indexes							if ( firing ) {								if ( index &lt;= firingLength ) {									firingLength--;								}								if ( index &lt;= firingIndex ) {									firingIndex--;								}							}						}					});				}				return this;			},			// Check if a given callback is in the list.			// If no argument is given, return whether or not list has callbacks attached.			has: function( fn ) {				return fn ? jQuery.inArray( fn, list ) &gt; -1 : !!( list &amp;&amp; list.length );			},			// Remove all callbacks from the list			empty: function() {				list = [];				firingLength = 0;				return this;			},			// Have the list do nothing anymore			disable: function() {				list = stack = memory = undefined;				return this;			},			// Is it disabled?			disabled: function() {				return !list;			},			// Lock the list in its current state			lock: function() {				stack = undefined;				if ( !memory ) {					self.disable();				}				return this;			},			// Is it locked?			locked: function() {				return !stack;			},			// Call all callbacks with the given context and arguments			fireWith: function( context, args ) {				if ( list &amp;&amp; ( !fired || stack ) ) {					args = args || [];					args = [ context, args.slice ? args.slice() : args ];					if ( firing ) {						stack.push( args );					} else {						fire( args );					}				}				return this;			},			// Call all the callbacks with the given arguments			fire: function() {				self.fireWith( this, arguments );				return this;			},			// To know if the callbacks have already been called at least once			fired: function() {				return !!fired;			}		};	return self;};jQuery.extend({	Deferred: function( func ) {		var tuples = [				// action, add listener, listener list, final state				[ "resolve", "done", jQuery.Callbacks("once memory"), "resolved" ],				[ "reject", "fail", jQuery.Callbacks("once memory"), "rejected" ],				[ "notify", "progress", jQuery.Callbacks("memory") ]			],			state = "pending",			promise = {				state: function() {					return state;				},				always: function() {					deferred.done( arguments ).fail( arguments );					return this;				},				then: function( /* fnDone, fnFail, fnProgress */ ) {					var fns = arguments;					return jQuery.Deferred(function( newDefer ) {						jQuery.each( tuples, function( i, tuple ) {							var fn = jQuery.isFunction( fns[ i ] ) &amp;&amp; fns[ i ];							// deferred[ done | fail | progress ] for forwarding actions to newDefer							deferred[ tuple[1] ](function() {								var returned = fn &amp;&amp; fn.apply( this, arguments );								if ( returned &amp;&amp; jQuery.isFunction( returned.promise ) ) {									returned.promise()										.done( newDefer.resolve )										.fail( newDefer.reject )										.progress( newDefer.notify );								} else {									newDefer[ tuple[ 0 ] + "With" ]( this === promise ? newDefer.promise() : this, fn ? [ returned ] : arguments );								}							});						});						fns = null;					}).promise();				},				// Get a promise for this deferred				// If obj is provided, the promise aspect is added to the object				promise: function( obj ) {					return obj != null ? jQuery.extend( obj, promise ) : promise;				}			},			deferred = {};		// Keep pipe for back-compat		promise.pipe = promise.then;		// Add list-specific methods		jQuery.each( tuples, function( i, tuple ) {			var list = tuple[ 2 ],				stateString = tuple[ 3 ];			// promise[ done | fail | progress ] = list.add			promise[ tuple[1] ] = list.add;			// Handle state			if ( stateString ) {				list.add(function() {					// state = [ resolved | rejected ]					state = stateString;				// [ reject_list | resolve_list ].disable; progress_list.lock				}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );			}			// deferred[ resolve | reject | notify ]			deferred[ tuple[0] ] = function() {				deferred[ tuple[0] + "With" ]( this === deferred ? promise : this, arguments );				return this;			};			deferred[ tuple[0] + "With" ] = list.fireWith;		});		// Make the deferred a promise		promise.promise( deferred );		// Call given func if any		if ( func ) {			func.call( deferred, deferred );		}		// All done!		return deferred;	},	// Deferred helper	when: function( subordinate /* , ..., subordinateN */ ) {		var i = 0,			resolveValues = slice.call( arguments ),			length = resolveValues.length,			// the count of uncompleted subordinates			remaining = length !== 1 || ( subordinate &amp;&amp; jQuery.isFunction( subordinate.promise ) ) ? length : 0,			// the master Deferred. If resolveValues consist of only a single Deferred, just use that.			deferred = remaining === 1 ? subordinate : jQuery.Deferred(),			// Update function for both resolve and progress values			updateFunc = function( i, contexts, values ) {				return function( value ) {					contexts[ i ] = this;					values[ i ] = arguments.length &gt; 1 ? slice.call( arguments ) : value;					if ( values === progressValues ) {						deferred.notifyWith( contexts, values );					} else if ( !( --remaining ) ) {						deferred.resolveWith( contexts, values );					}				};			},			progressValues, progressContexts, resolveContexts;		// Add listeners to Deferred subordinates; treat others as resolved		if ( length &gt; 1 ) {			progressValues = new Array( length );			progressContexts = new Array( length );			resolveContexts = new Array( length );			for ( ; i &lt; length; i++ ) {				if ( resolveValues[ i ] &amp;&amp; jQuery.isFunction( resolveValues[ i ].promise ) ) {					resolveValues[ i ].promise()						.done( updateFunc( i, resolveContexts, resolveValues ) )						.fail( deferred.reject )						.progress( updateFunc( i, progressContexts, progressValues ) );				} else {					--remaining;				}			}		}		// If we''re not waiting on anything, resolve the master		if ( !remaining ) {			deferred.resolveWith( resolveContexts, resolveValues );		}		return deferred.promise();	}});// The deferred used on DOM readyvar readyList;jQuery.fn.ready = function( fn ) {	// Add the callback	jQuery.ready.promise().done( fn );	return this;};jQuery.extend({	// Is the DOM ready to be used? Set to true once it occurs.	isReady: false,	// A counter to track how many items to wait for before	// the ready event fires. See #6781	readyWait: 1,	// Hold (or release) the ready event	holdReady: function( hold ) {		if ( hold ) {			jQuery.readyWait++;		} else {			jQuery.ready( true );		}	},	// Handle when the DOM is ready	ready: function( wait ) {		// Abort if there are pending holds or we''re already ready		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {			return;		}		// Remember that the DOM is ready		jQuery.isReady = true;		// If a normal DOM Ready event fired, decrement, and wait if need be		if ( wait !== true &amp;&amp; --jQuery.readyWait &gt; 0 ) {			return;		}		// If there are functions bound, to execute		readyList.resolveWith( document, [ jQuery ] );		// Trigger any bound ready events		if ( jQuery.fn.triggerHandler ) {			jQuery( document ).triggerHandler( "ready" );			jQuery( document ).off( "ready" );		}	}});/** * The ready event handler and self cleanup method */function completed() {	document.removeEventListener( "DOMContentLoaded", completed, false );	window.removeEventListener( "load", completed, false );	jQuery.ready();}jQuery.ready.promise = function( obj ) {	if ( !readyList ) {		readyList = jQuery.Deferred();		// Catch cases where $(document).ready() is called after the browser event has already occurred.		// We once tried to use readyState "interactive" here, but it caused issues like the one		// discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15		if ( document.readyState === "complete" ) {			// Handle it asynchronously to allow scripts the opportunity to delay ready			setTimeout( jQuery.ready );		} else {			// Use the handy event callback			document.addEventListener( "DOMContentLoaded", completed, false );			// A fallback to window.onload, that will always work			window.addEventListener( "load", completed, false );		}	}	return readyList.promise( obj );};// Kick off the DOM ready check even if the user does notjQuery.ready.promise();// Multifunctional method to get and set values of a collection// The value/s can optionally be executed if it''s a functionvar access = jQuery.access = function( elems, fn, key, value, chainable, emptyGet, raw ) {	var i = 0,		len = elems.length,		bulk = key == null;	// Sets many values	if ( jQuery.type( key ) === "object" ) {		chainable = true;		for ( i in key ) {			jQuery.access( elems, fn, i, key[i], true, emptyGet, raw );		}	// Sets one value	} else if ( value !== undefined ) {		chainable = true;		if ( !jQuery.isFunction( value ) ) {			raw = true;		}		if ( bulk ) {			// Bulk operations run against the entire set			if ( raw ) {				fn.call( elems, value );				fn = null;			// ...except when executing function values			} else {				bulk = fn;				fn = function( elem, key, value ) {					return bulk.call( jQuery( elem ), value );				};			}		}		if ( fn ) {			for ( ; i &lt; len; i++ ) {				fn( elems[i], key, raw ? value : value.call( elems[i], i, fn( elems[i], key ) ) );			}		}	}	return chainable ?		elems :		// Gets		bulk ?			fn.call( elems ) :			len ? fn( elems[0], key ) : emptyGet;};/** * Determines whether an object can have data */jQuery.acceptData = function( owner ) {	// Accepts only:	//  - Node	//    - Node.ELEMENT_NODE	//    - Node.DOCUMENT_NODE	//  - Object	//    - Any	/* jshint -W018 */	return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );};function Data() {	// Support: Android&lt;4,	// Old WebKit does not have Object.preventExtensions/freeze method,	// return new empty object instead with no [[set]] accessor	Object.defineProperty( this.cache = {}, 0, {		get: function() {			return {};		}	});	this.expando = jQuery.expando + Data.uid++;}Data.uid = 1;Data.accepts = jQuery.acceptData;Data.prototype = {	key: function( owner ) {		// We can accept data for non-element nodes in modern browsers,		// but we should not, see #8335.		// Always return the key for a frozen object.		if ( !Data.accepts( owner ) ) {			return 0;		}		var descriptor = {},			// Check if the owner object already has a cache key			unlock = owner[ this.expando ];		// If not, create one		if ( !unlock ) {			unlock = Data.uid++;			// Secure it in a non-enumerable, non-writable property			try {				descriptor[ this.expando ] = { value: unlock };				Object.defineProperties( owner, descriptor );			// Support: Android&lt;4			// Fallback to a less secure definition			} catch ( e ) {				descriptor[ this.expando ] = unlock;				jQuery.extend( owner, descriptor );			}		}		// Ensure the cache object		if ( !this.cache[ unlock ] ) {			this.cache[ unlock ] = {};		}		return unlock;	},	set: function( owner, data, value ) {		var prop,			// There may be an unlock assigned to this node,			// if there is no entry for this "owner", create one inline			// and set the unlock as though an owner entry had always existed			unlock = this.key( owner ),			cache = this.cache[ unlock ];		// Handle: [ owner, key, value ] args		if ( typeof data === "string" ) {			cache[ data ] = value;		// Handle: [ owner, { properties } ] args		} else {			// Fresh assignments by object are shallow copied			if ( jQuery.isEmptyObject( cache ) ) {				jQuery.extend( this.cache[ unlock ], data );			// Otherwise, copy the properties one-by-one to the cache object			} else {				for ( prop in data ) {					cache[ prop ] = data[ prop ];				}			}		}		return cache;	},	get: function( owner, key ) {		// Either a valid cache is found, or will be created.		// New caches will be created and the unlock returned,		// allowing direct access to the newly created		// empty data object. A valid owner object must be provided.		var cache = this.cache[ this.key( owner ) ];		return key === undefined ?			cache : cache[ key ];	},	access: function( owner, key, value ) {		var stored;		// In cases where either:		//		//   1. No key was specified		//   2. A string key was specified, but no value provided		//		// Take the "read" path and allow the get method to determine		// which value to return, respectively either:		//		//   1. The entire cache object		//   2. The data stored at the key		//		if ( key === undefined ||				((key &amp;&amp; typeof key === "string") &amp;&amp; value === undefined) ) {			stored = this.get( owner, key );			return stored !== undefined ?				stored : this.get( owner, jQuery.camelCase(key) );		}		// [*]When the key is not a string, or both a key and value		// are specified, set or extend (existing objects) with either:		//		//   1. An object of properties		//   2. A key and value		//		this.set( owner, key, value );		// Since the "set" path can have two possible entry points		// return the expected data based on which path was taken[*]		return value !== undefined ? value : key;	},	remove: function( owner, key ) {		var i, name, camel,			unlock = this.key( owner ),			cache = this.cache[ unlock ];		if ( key === undefined ) {			this.cache[ unlock ] = {};		} else {			// Support array or space separated string of keys			if ( jQuery.isArray( key ) ) {				// If "name" is an array of keys...				// When data is initially created, via ("key", "val") signature,				// keys will be converted to camelCase.				// Since there is no way to tell _how_ a key was added, remove				// both plain key and camelCase key. #12786				// This will only penalize the array argument path.				name = key.concat( key.map( jQuery.camelCase ) );			} else {				camel = jQuery.camelCase( key );				// Try the string as a key before any manipulation				if ( key in cache ) {					name = [ key, camel ];				} else {					// If a key with the spaces exists, use it.					// Otherwise, create an array by matching non-whitespace					name = camel;					name = name in cache ?						[ name ] : ( name.match( rnotwhite ) || [] );				}			}			i = name.length;			while ( i-- ) {				delete cache[ name[ i ] ];			}		}	},	hasData: function( owner ) {		return !jQuery.isEmptyObject(			this.cache[ owner[ this.expando ] ] || {}		);	},	discard: function( owner ) {		if ( owner[ this.expando ] ) {			delete this.cache[ owner[ this.expando ] ];		}	}};var data_priv = new Data();var data_user = new Data();//	Implementation Summary////	1. Enforce API surface and semantic compatibility with 1.9.x branch//	2. Improve the module''s maintainability by reducing the storage//		paths to a single mechanism.//	3. Use the same single mechanism to support "private" and "user" data.//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)//	5. Avoid exposing implementation details on user objects (eg. expando properties)//	6. Provide a clear path for implementation upgrade to WeakMap in 2014var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,	rmultiDash = /([A-Z])/g;function dataAttr( elem, key, data ) {	var name;	// If nothing was found internally, try to fetch any	// data from the HTML5 data-* attribute	if ( data === undefined &amp;&amp; elem.nodeType === 1 ) {		name = "data-" + key.replace( rmultiDash, "-$1" ).toLowerCase();		data = elem.getAttribute( name );		if ( typeof data === "string" ) {			try {				data = data === "true" ? true :					data === "false" ? false :					data === "null" ? null :					// Only convert to a number if it doesn''t change the string					+data + "" === data ? +data :					rbrace.test( data ) ? jQuery.parseJSON( data ) :					data;			} catch( e ) {}			// Make sure we set the data so it isn''t changed later			data_user.set( elem, key, data );		} else {			data = undefined;		}	}	return data;}jQuery.extend({	hasData: function( elem ) {		return data_user.hasData( elem ) || data_priv.hasData( elem );	},	data: function( elem, name, data ) {		return data_user.access( elem, name, data );	},	removeData: function( elem, name ) {		data_user.remove( elem, name );	},	// TODO: Now that all calls to _data and _removeData have been replaced	// with direct calls to data_priv methods, these can be deprecated.	_data: function( elem, name, data ) {		return data_priv.access( elem, name, data );	},	_removeData: function( elem, name ) {		data_priv.remove( elem, name );	}});jQuery.fn.extend({	data: function( key, value ) {		var i, name, data,			elem = this[ 0 ],			attrs = elem &amp;&amp; elem.attributes;		// Gets all values		if ( key === undefined ) {			if ( this.length ) {				data = data_user.get( elem );				if ( elem.nodeType === 1 &amp;&amp; !data_priv.get( elem, "hasDataAttrs" ) ) {					i = attrs.length;					while ( i-- ) {						// Support: IE11+						// The attrs elements can be null (#14894)						if ( attrs[ i ] ) {							name = attrs[ i ].name;							if ( name.indexOf( "data-" ) === 0 ) {								name = jQuery.camelCase( name.slice(5) );								dataAttr( elem, name, data[ name ] );							}						}					}					data_priv.set( elem, "hasDataAttrs", true );				}			}			return data;		}		// Sets multiple values		if ( typeof key === "object" ) {			return this.each(function() {				data_user.set( this, key );			});		}		return access( this, function( value ) {			var data,				camelKey = jQuery.camelCase( key );			// The calling jQuery object (element matches) is not empty			// (and therefore has an element appears at this[ 0 ]) and the			// `value` parameter was not undefined. An empty jQuery object			// will result in `undefined` for elem = this[ 0 ] which will			// throw an exception if an attempt to read a data cache is made.			if ( elem &amp;&amp; value === undefined ) {				// Attempt to get data from the cache				// with the key as-is				data = data_user.get( elem, key );				if ( data !== undefined ) {					return data;				}				// Attempt to get data from the cache				// with the key camelized				data = data_user.get( elem, camelKey );				if ( data !== undefined ) {					return data;				}				// Attempt to "discover" the data in				// HTML5 custom data-* attrs				data = dataAttr( elem, camelKey, undefined );				if ( data !== undefined ) {					return data;				}				// We tried really hard, but the data doesn''t exist.				return;			}			// Set the data...			this.each(function() {				// First, attempt to store a copy or reference of any				// data that might''ve been store with a camelCased key.				var data = data_user.get( this, camelKey );				// For HTML5 data-* attribute interop, we have to				// store property names with dashes in a camelCase form.				// This might not apply to all properties...*				data_user.set( this, camelKey, value );				// *... In the case of properties that might _actually_				// have dashes, we need to also store a copy of that				// unchanged property.				if ( key.indexOf("-") !== -1 &amp;&amp; data !== undefined ) {					data_user.set( this, key, value );				}			});		}, null, value, arguments.length &gt; 1, null, true );	},	removeData: function( key ) {		return this.each(function() {			data_user.remove( this, key );		});	}});jQuery.extend({	queue: function( elem, type, data ) {		var queue;		if ( elem ) {			type = ( type || "fx" ) + "queue";			queue = data_priv.get( elem, type );			// Speed up dequeue by getting out quickly if this is just a lookup			if ( data ) {				if ( !queue || jQuery.isArray( data ) ) {					queue = data_priv.access( elem, type, jQuery.makeArray(data) );				} else {					queue.push( data );				}			}			return queue || [];		}	},	dequeue: function( elem, type ) {		type = type || "fx";		var queue = jQuery.queue( elem, type ),			startLength = queue.length,			fn = queue.shift(),			hooks = jQuery._queueHooks( elem, type ),			next = function() {				jQuery.dequeue( elem, type );			};		// If the fx queue is dequeued, always remove the progress sentinel		if ( fn === "inprogress" ) {			fn = queue.shift();			startLength--;		}		if ( fn ) {			// Add a progress sentinel to prevent the fx queue from being			// automatically dequeued			if ( type === "fx" ) {				queue.unshift( "inprogress" );			}			// Clear up the last queue stop function			delete hooks.stop;			fn.call( elem, next, hooks );		}		if ( !startLength &amp;&amp; hooks ) {			hooks.empty.fire();		}	},	// Not public - generate a queueHooks object, or return the current one	_queueHooks: function( elem, type ) {		var key = type + "queueHooks";		return data_priv.get( elem, key ) || data_priv.access( elem, key, {			empty: jQuery.Callbacks("once memory").add(function() {				data_priv.remove( elem, [ type + "queue", key ] );			})		});	}});jQuery.fn.extend({	queue: function( type, data ) {		var setter = 2;		if ( typeof type !== "string" ) {			data = type;			type = "fx";			setter--;		}		if ( arguments.length &lt; setter ) {			return jQuery.queue( this[0], type );		}		return data === undefined ?			this :			this.each(function() {				var queue = jQuery.queue( this, type, data );				// Ensure a hooks for this queue				jQuery._queueHooks( this, type );				if ( type === "fx" &amp;&amp; queue[0] !== "inprogress" ) {					jQuery.dequeue( this, type );				}			});	},	dequeue: function( type ) {		return this.each(function() {			jQuery.dequeue( this, type );		});	},	clearQueue: function( type ) {		return this.queue( type || "fx", [] );	},	// Get a promise resolved when queues of a certain type	// are emptied (fx is the type by default)	promise: function( type, obj ) {		var tmp,			count = 1,			defer = jQuery.Deferred(),			elements = this,			i = this.length,			resolve = function() {				if ( !( --count ) ) {					defer.resolveWith( elements, [ elements ] );				}			};		if ( typeof type !== "string" ) {			obj = type;			type = undefined;		}		type = type || "fx";		while ( i-- ) {			tmp = data_priv.get( elements[ i ], type + "queueHooks" );			if ( tmp &amp;&amp; tmp.empty ) {				count++;				tmp.empty.add( resolve );			}		}		resolve();		return defer.promise( obj );	}});var pnum = (/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/).source;var cssExpand = [ "Top", "Right", "Bottom", "Left" ];var isHidden = function( elem, el ) {		// isHidden might be called from jQuery#filter function;		// in that case, element will be second argument		elem = el || elem;		return jQuery.css( elem, "display" ) === "none" || !jQuery.contains( elem.ownerDocument, elem );	};var rcheckableType = (/^(?:checkbox|radio)$/i);(function() {	var fragment = document.createDocumentFragment(),		div = fragment.appendChild( document.createElement( "div" ) ),		input = document.createElement( "input" );	// Support: Safari&lt;=5.1	// Check state lost if the name is set (#11217)	// Support: Windows Web Apps (WWA)	// `name` and `type` must use .setAttribute for WWA (#14901)	input.setAttribute( "type", "radio" );	input.setAttribute( "checked", "checked" );	input.setAttribute( "name", "t" );	div.appendChild( input );	// Support: Safari&lt;=5.1, Android&lt;4.2	// Older WebKit doesn''t clone checked state correctly in fragments	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;	// Support: IE&lt;=11+	// Make sure textarea (and checkbox) defaultValue is properly cloned	div.innerHTML = "&lt;textarea&gt;x&lt;/textarea&gt;";	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;})();var strundefined = typeof undefined;support.focusinBubbles = "onfocusin" in window;var	rkeyEvent = /^key/,	rmouseEvent = /^(?:mouse|pointer|contextmenu)|click/,	rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,	rtypenamespace = /^([^.]*)(?:\.(.+)|)$/;function returnTrue() {	return true;}function returnFalse() {	return false;}function safeActiveElement() {	try {		return document.activeElement;	} catch ( err ) { }}/* * Helper functions for managing events -- not part of the public interface. * Props to Dean Edwards'' addEvent library for many of the ideas. */jQuery.event = {	global: {},	add: function( elem, types, handler, data, selector ) {		var handleObjIn, eventHandle, tmp,			events, t, handleObj,			special, handlers, type, namespaces, origType,			elemData = data_priv.get( elem );		// Don''t attach events to noData or text/comment nodes (but allow plain objects)		if ( !elemData ) {			return;		}		// Caller can pass in an object of custom data in lieu of the handler		if ( handler.handler ) {			handleObjIn = handler;			handler = handleObjIn.handler;			selector = handleObjIn.selector;		}		// Make sure that the handler has a unique ID, used to find/remove it later		if ( !handler.guid ) {			handler.guid = jQuery.guid++;		}		// Init the element''s event structure and main handler, if this is the first		if ( !(events = elemData.events) ) {			events = elemData.events = {};		}		if ( !(eventHandle = elemData.handle) ) {			eventHandle = elemData.handle = function( e ) {				// Discard the second event of a jQuery.event.trigger() and				// when an event is called after a page has unloaded				return typeof jQuery !== strundefined &amp;&amp; jQuery.event.triggered !== e.type ?					jQuery.event.dispatch.apply( elem, arguments ) : undefined;			};		}		// Handle multiple events separated by a space		types = ( types || "" ).match( rnotwhite ) || [ "" ];		t = types.length;		while ( t-- ) {			tmp = rtypenamespace.exec( types[t] ) || [];			type = origType = tmp[1];			namespaces = ( tmp[2] || "" ).split( "." ).sort();			// There *must* be a type, no attaching namespace-only handlers			if ( !type ) {				continue;			}			// If event changes its type, use the special event handlers for the changed type			special = jQuery.event.special[ type ] || {};			// If selector defined, determine special event api type, otherwise given type			type = ( selector ? special.delegateType : special.bindType ) || type;			// Update special based on newly reset type			special = jQuery.event.special[ type ] || {};			// handleObj is passed to all event handlers			handleObj = jQuery.extend({				type: type,				origType: origType,				data: data,				handler: handler,				guid: handler.guid,				selector: selector,				needsContext: selector &amp;&amp; jQuery.expr.match.needsContext.test( selector ),				namespace: namespaces.join(".")			}, handleObjIn );			// Init the event handler queue if we''re the first			if ( !(handlers = events[ type ]) ) {				handlers = events[ type ] = [];				handlers.delegateCount = 0;				// Only use addEventListener if the special events handler returns false				if ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {					if ( elem.addEventListener ) {						elem.addEventListener( type, eventHandle, false );					}				}			}			if ( special.add ) {				special.add.call( elem, handleObj );				if ( !handleObj.handler.guid ) {					handleObj.handler.guid = handler.guid;				}			}			// Add to the element''s handler list, delegates in front			if ( selector ) {				handlers.splice( handlers.delegateCount++, 0, handleObj );			} else {				handlers.push( handleObj );			}			// Keep track of which events have ever been used, for event optimization			jQuery.event.global[ type ] = true;		}	},	// Detach an event or set of events from an element	remove: function( elem, types, handler, selector, mappedTypes ) {		var j, origCount, tmp,			events, t, handleObj,			special, handlers, type, namespaces, origType,			elemData = data_priv.hasData( elem ) &amp;&amp; data_priv.get( elem );		if ( !elemData || !(events = elemData.events) ) {			return;		}		// Once for each type.namespace in types; type may be omitted		types = ( types || "" ).match( rnotwhite ) || [ "" ];		t = types.length;		while ( t-- ) {			tmp = rtypenamespace.exec( types[t] ) || [];			type = origType = tmp[1];			namespaces = ( tmp[2] || "" ).split( "." ).sort();			// Unbind all events (on this namespace, if provided) for the element			if ( !type ) {				for ( type in events ) {					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );				}				continue;			}			special = jQuery.event.special[ type ] || {};			type = ( selector ? special.delegateType : special.bindType ) || type;			handlers = events[ type ] || [];			tmp = tmp[2] &amp;&amp; new RegExp( "(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)" );			// Remove matching events			origCount = j = handlers.length;			while ( j-- ) {				handleObj = handlers[ j ];				if ( ( mappedTypes || origType === handleObj.origType ) &amp;&amp;					( !handler || handler.guid === handleObj.guid ) &amp;&amp;					( !tmp || tmp.test( handleObj.namespace ) ) &amp;&amp;					( !selector || selector === handleObj.selector || selector === "**" &amp;&amp; handleObj.selector ) ) {					handlers.splice( j, 1 );					if ( handleObj.selector ) {						handlers.delegateCount--;					}					if ( special.remove ) {						special.remove.call( elem, handleObj );					}				}			}			// Remove generic event handler if we removed something and no more handlers exist			// (avoids potential for endless recursion during removal of special event handlers)			if ( origCount &amp;&amp; !handlers.length ) {				if ( !special.teardown || special.teardown.call( elem, namespaces, elemData.handle ) === false ) {					jQuery.removeEvent( elem, type, elemData.handle );				}				delete events[ type ];			}		}		// Remove the expando if it''s no longer used		if ( jQuery.isEmptyObject( events ) ) {			delete elemData.handle;			data_priv.remove( elem, "events" );		}	},	trigger: function( event, data, elem, onlyHandlers ) {		var i, cur, tmp, bubbleType, ontype, handle, special,			eventPath = [ elem || document ],			type = hasOwn.call( event, "type" ) ? event.type : event,			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split(".") : [];		cur = tmp = elem = elem || document;		// Don''t do events on text and comment nodes		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {			return;		}		// focus/blur morphs to focusin/out; ensure we''re not firing them right now		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {			return;		}		if ( type.indexOf(".") &gt;= 0 ) {			// Namespaced trigger; create a regexp to match event type in handle()			namespaces = type.split(".");			type = namespaces.shift();			namespaces.sort();		}		ontype = type.indexOf(":") &lt; 0 &amp;&amp; "on" + type;		// Caller can pass in a jQuery.Event object, Object, or just an event type string		event = event[ jQuery.expando ] ?			event :			new jQuery.Event( type, typeof event === "object" &amp;&amp; event );		// Trigger bitmask: &amp; 1 for native handlers; &amp; 2 for jQuery (always true)		event.isTrigger = onlyHandlers ? 2 : 3;		event.namespace = namespaces.join(".");		event.namespace_re = event.namespace ?			new RegExp( "(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)" ) :			null;		// Clean up the event in case it is being reused		event.result = undefined;		if ( !event.target ) {			event.target = elem;		}		// Clone any incoming data and prepend the event, creating the handler arg list		data = data == null ?			[ event ] :			jQuery.makeArray( data, [ event ] );		// Allow special events to draw outside the lines		special = jQuery.event.special[ type ] || {};		if ( !onlyHandlers &amp;&amp; special.trigger &amp;&amp; special.trigger.apply( elem, data ) === false ) {			return;		}		// Determine event propagation path in advance, per W3C events spec (#9951)		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)		if ( !onlyHandlers &amp;&amp; !special.noBubble &amp;&amp; !jQuery.isWindow( elem ) ) {			bubbleType = special.delegateType || type;			if ( !rfocusMorph.test( bubbleType + type ) ) {				cur = cur.parentNode;			}			for ( ; cur; cur = cur.parentNode ) {				eventPath.push( cur );				tmp = cur;			}			// Only add window if we got to document (e.g., not plain obj or detached DOM)			if ( tmp === (elem.ownerDocument || document) ) {				eventPath.push( tmp.defaultView || tmp.parentWindow || window );			}		}		// Fire handlers on the event path		i = 0;		while ( (cur = eventPath[i++]) &amp;&amp; !event.isPropagationStopped() ) {			event.type = i &gt; 1 ?				bubbleType :				special.bindType || type;			// jQuery handler			handle = ( data_priv.get( cur, "events" ) || {} )[ event.type ] &amp;&amp; data_priv.get( cur, "handle" );			if ( handle ) {				handle.apply( cur, data );			}			// Native handler			handle = ontype &amp;&amp; cur[ ontype ];			if ( handle &amp;&amp; handle.apply &amp;&amp; jQuery.acceptData( cur ) ) {				event.result = handle.apply( cur, data );				if ( event.result === false ) {					event.preventDefault();				}			}		}		event.type = type;		// If nobody prevented the default action, do it now		if ( !onlyHandlers &amp;&amp; !event.isDefaultPrevented() ) {			if ( (!special._default || special._default.apply( eventPath.pop(), data ) === false) &amp;&amp;				jQuery.acceptData( elem ) ) {				// Call a native DOM method on the target with the same name name as the event.				// Don''t do default actions on window, that''s where global variables be (#6170)				if ( ontype &amp;&amp; jQuery.isFunction( elem[ type ] ) &amp;&amp; !jQuery.isWindow( elem ) ) {					// Don''t re-trigger an onFOO event when we call its FOO() method					tmp = elem[ ontype ];					if ( tmp ) {						elem[ ontype ] = null;					}					// Prevent re-triggering of the same event, since we already bubbled it above					jQuery.event.triggered = type;					elem[ type ]();					jQuery.event.triggered = undefined;					if ( tmp ) {						elem[ ontype ] = tmp;					}				}			}		}		return event.result;	},	dispatch: function( event ) {		// Make a writable jQuery.Event from the native event object		event = jQuery.event.fix( event );		var i, j, ret, matched, handleObj,			handlerQueue = [],			args = slice.call( arguments ),			handlers = ( data_priv.get( this, "events" ) || {} )[ event.type ] || [],			special = jQuery.event.special[ event.type ] || {};		// Use the fix-ed jQuery.Event rather than the (read-only) native event		args[0] = event;		event.delegateTarget = this;		// Call the preDispatch hook for the mapped type, and let it bail if desired		if ( special.preDispatch &amp;&amp; special.preDispatch.call( this, event ) === false ) {			return;		}		// Determine handlers		handlerQueue = jQuery.event.handlers.call( this, event, handlers );		// Run delegates first; they may want to stop propagation beneath us		i = 0;		while ( (matched = handlerQueue[ i++ ]) &amp;&amp; !event.isPropagationStopped() ) {			event.currentTarget = matched.elem;			j = 0;			while ( (handleObj = matched.handlers[ j++ ]) &amp;&amp; !event.isImmediatePropagationStopped() ) {				// Triggered event must either 1) have no namespace, or 2) have namespace(s)				// a subset or equal to those in the bound event (both can have no namespace).				if ( !event.namespace_re || event.namespace_re.test( handleObj.namespace ) ) {					event.handleObj = handleObj;					event.data = handleObj.data;					ret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )							.apply( matched.elem, args );					if ( ret !== undefined ) {						if ( (event.result = ret) === false ) {							event.preventDefault();							event.stopPropagation();						}					}				}			}		}		// Call the postDispatch hook for the mapped type		if ( special.postDispatch ) {			special.postDispatch.call( this, event );		}		return event.result;	},	handlers: function( event, handlers ) {		var i, matches, sel, handleObj,			handlerQueue = [],			delegateCount = handlers.delegateCount,			cur = event.target;		// Find delegate handlers		// Black-hole SVG &lt;use&gt; instance trees (#13180)		// Avoid non-left-click bubbling in Firefox (#3861)		if ( delegateCount &amp;&amp; cur.nodeType &amp;&amp; (!event.button || event.type !== "click") ) {			for ( ; cur !== this; cur = cur.parentNode || this ) {				// Don''t process clicks on disabled elements (#6911, #8165, #11382, #11764)				if ( cur.disabled !== true || event.type !== "click" ) {					matches = [];					for ( i = 0; i &lt; delegateCount; i++ ) {						handleObj = handlers[ i ];						// Don''t conflict with Object.prototype properties (#13203)						sel = handleObj.selector + " ";						if ( matches[ sel ] === undefined ) {							matches[ sel ] = handleObj.needsContext ?								jQuery( sel, this ).index( cur ) &gt;= 0 :								jQuery.find( sel, this, null, [ cur ] ).length;						}						if ( matches[ sel ] ) {							matches.push( handleObj );						}					}					if ( matches.length ) {						handlerQueue.push({ elem: cur, handlers: matches });					}				}			}		}		// Add the remaining (directly-bound) handlers		if ( delegateCount &lt; handlers.length ) {			handlerQueue.push({ elem: this, handlers: handlers.slice( delegateCount ) });		}		return handlerQueue;	},	// Includes some event props shared by KeyEvent and MouseEvent	props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),	fixHooks: {},	keyHooks: {		props: "char charCode key keyCode".split(" "),		filter: function( event, original ) {			// Add which for key events			if ( event.which == null ) {				event.which = original.charCode != null ? original.charCode : original.keyCode;			}			return event;		}	},	mouseHooks: {		props: "button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),		filter: function( event, original ) {			var eventDoc, doc, body,				button = original.button;			// Calculate pageX/Y if missing and clientX/Y available			if ( event.pageX == null &amp;&amp; original.clientX != null ) {				eventDoc = event.target.ownerDocument || document;				doc = eventDoc.documentElement;				body = eventDoc.body;				event.pageX = original.clientX + ( doc &amp;&amp; doc.scrollLeft || body &amp;&amp; body.scrollLeft || 0 ) - ( doc &amp;&amp; doc.clientLeft || body &amp;&amp; body.clientLeft || 0 );				event.pageY = original.clientY + ( doc &amp;&amp; doc.scrollTop  || body &amp;&amp; body.scrollTop  || 0 ) - ( doc &amp;&amp; doc.clientTop  || body &amp;&amp; body.clientTop  || 0 );			}			// Add which for click: 1 === left; 2 === middle; 3 === right			// Note: button is not normalized, so don''t use it			if ( !event.which &amp;&amp; button !== undefined ) {				event.which = ( button &amp; 1 ? 1 : ( button &amp; 2 ? 3 : ( button &amp; 4 ? 2 : 0 ) ) );			}			return event;		}	},	fix: function( event ) {		if ( event[ jQuery.expando ] ) {			return event;		}		// Create a writable copy of the event object and normalize some properties		var i, prop, copy,			type = event.type,			originalEvent = event,			fixHook = this.fixHooks[ type ];		if ( !fixHook ) {			this.fixHooks[ type ] = fixHook =				rmouseEvent.test( type ) ? this.mouseHooks :				rkeyEvent.test( type ) ? this.keyHooks :				{};		}		copy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;		event = new jQuery.Event( originalEvent );		i = copy.length;		while ( i-- ) {			prop = copy[ i ];			event[ prop ] = originalEvent[ prop ];		}		// Support: Cordova 2.5 (WebKit) (#13255)		// All events should have a target; Cordova deviceready doesn''t		if ( !event.target ) {			event.target = document;		}		// Support: Safari 6.0+, Chrome&lt;28		// Target should not be a text node (#504, #13143)		if ( event.target.nodeType === 3 ) {			event.target = event.target.parentNode;		}		return fixHook.filter ? fixHook.filter( event, originalEvent ) : event;	},	special: {		load: {			// Prevent triggered image.load events from bubbling to window.load			noBubble: true		},		focus: {			// Fire native event if possible so blur/focus sequence is correct			trigger: function() {				if ( this !== safeActiveElement() &amp;&amp; this.focus ) {					this.focus();					return false;				}			},			delegateType: "focusin"		},		blur: {			trigger: function() {				if ( this === safeActiveElement() &amp;&amp; this.blur ) {					this.blur();					return false;				}			},			delegateType: "focusout"		},		click: {			// For checkbox, fire native event so checked state will be right			trigger: function() {				if ( this.type === "checkbox" &amp;&amp; this.click &amp;&amp; jQuery.nodeName( this, "input" ) ) {					this.click();					return false;				}			},			// For cross-browser consistency, don''t fire native .click() on links			_default: function( event ) {				return jQuery.nodeName( event.target, "a" );			}		},		beforeunload: {			postDispatch: function( event ) {				// Support: Firefox 20+				// Firefox doesn''t alert if the returnValue field is not set.				if ( event.result !== undefined &amp;&amp; event.originalEvent ) {					event.originalEvent.returnValue = event.result;				}			}		}	},	simulate: function( type, elem, event, bubble ) {		// Piggyback on a donor event to simulate a different one.		// Fake originalEvent to avoid donor''s stopPropagation, but if the		// simulated event prevents default then we do the same on the donor.		var e = jQuery.extend(			new jQuery.Event(),			event,			{				type: type,				isSimulated: true,				originalEvent: {}			}		);		if ( bubble ) {			jQuery.event.trigger( e, null, elem );		} else {			jQuery.event.dispatch.call( elem, e );		}		if ( e.isDefaultPrevented() ) {			event.preventDefault();		}	}};jQuery.removeEvent = function( elem, type, handle ) {	if ( elem.removeEventListener ) {		elem.removeEventListener( type, handle, false );	}};jQuery.Event = function( src, props ) {	// Allow instantiation without the ''new'' keyword	if ( !(this instanceof jQuery.Event) ) {		return new jQuery.Event( src, props );	}	// Event object	if ( src &amp;&amp; src.type ) {		this.originalEvent = src;		this.type = src.type;		// Events bubbling up the document may have been marked as prevented		// by a handler lower down the tree; reflect the correct value.		this.isDefaultPrevented = src.defaultPrevented ||				src.defaultPrevented === undefined &amp;&amp;				// Support: Android&lt;4.0				src.returnValue === false ?			returnTrue :			returnFalse;	// Event type	} else {		this.type = src;	}	// Put explicitly provided properties onto the event object	if ( props ) {		jQuery.extend( this, props );	}	// Create a timestamp if incoming event doesn''t have one	this.timeStamp = src &amp;&amp; src.timeStamp || jQuery.now();	// Mark it as fixed	this[ jQuery.expando ] = true;};// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.htmljQuery.Event.prototype = {	isDefaultPrevented: returnFalse,	isPropagationStopped: returnFalse,	isImmediatePropagationStopped: returnFalse,	preventDefault: function() {		var e = this.originalEvent;		this.isDefaultPrevented = returnTrue;		if ( e &amp;&amp; e.preventDefault ) {			e.preventDefault();		}	},	stopPropagation: function() {		var e = this.originalEvent;		this.isPropagationStopped = returnTrue;		if ( e &amp;&amp; e.stopPropagation ) {			e.stopPropagation();		}	},	stopImmediatePropagation: function() {		var e = this.originalEvent;		this.isImmediatePropagationStopped = returnTrue;		if ( e &amp;&amp; e.stopImmediatePropagation ) {			e.stopImmediatePropagation();		}		this.stopPropagation();	}};// Create mouseenter/leave events using mouseover/out and event-time checks// Support: Chrome 15+jQuery.each({	mouseenter: "mouseover",	mouseleave: "mouseout",	pointerenter: "pointerover",	pointerleave: "pointerout"}, function( orig, fix ) {	jQuery.event.special[ orig ] = {		delegateType: fix,		bindType: fix,		handle: function( event ) {			var ret,				target = this,				related = event.relatedTarget,				handleObj = event.handleObj;			// For mousenter/leave call the handler if related is outside the target.			// NB: No relatedTarget if the mouse left/entered the browser window			if ( !related || (related !== target &amp;&amp; !jQuery.contains( target, related )) ) {				event.type = handleObj.origType;				ret = handleObj.handler.apply( this, arguments );				event.type = fix;			}			return ret;		}	};});// Support: Firefox, Chrome, Safari// Create "bubbling" focus and blur eventsif ( !support.focusinBubbles ) {	jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {		// Attach a single capturing handler on the document while someone wants focusin/focusout		var handler = function( event ) {				jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );			};		jQuery.event.special[ fix ] = {			setup: function() {				var doc = this.ownerDocument || this,					attaches = data_priv.access( doc, fix );				if ( !attaches ) {					doc.addEventListener( orig, handler, true );				}				data_priv.access( doc, fix, ( attaches || 0 ) + 1 );			},			teardown: function() {				var doc = this.ownerDocument || this,					attaches = data_priv.access( doc, fix ) - 1;				if ( !attaches ) {					doc.removeEventListener( orig, handler, true );					data_priv.remove( doc, fix );				} else {					data_priv.access( doc, fix, attaches );				}			}		};	});}jQuery.fn.extend({	on: function( types, selector, data, fn, /*INTERNAL*/ one ) {		var origFn, type;		// Types can be a map of types/handlers		if ( typeof types === "object" ) {			// ( types-Object, selector, data )			if ( typeof selector !== "string" ) {				// ( types-Object, data )				data = data || selector;				selector = undefined;			}			for ( type in types ) {				this.on( type, selector, data, types[ type ], one );			}			return this;		}		if ( data == null &amp;&amp; fn == null ) {			// ( types, fn )			fn = selector;			data = selector = undefined;		} else if ( fn == null ) {			if ( typeof selector === "string" ) {				// ( types, selector, fn )				fn = data;				data = undefined;			} else {				// ( types, data, fn )				fn = data;				data = selector;				selector = undefined;			}		}		if ( fn === false ) {			fn = returnFalse;		} else if ( !fn ) {			return this;		}		if ( one === 1 ) {			origFn = fn;			fn = function( event ) {				// Can use an empty set, since event contains the info				jQuery().off( event );				return origFn.apply( this, arguments );			};			// Use same guid so caller can remove using origFn			fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );		}		return this.each( function() {			jQuery.event.add( this, types, fn, data, selector );		});	},	one: function( types, selector, data, fn ) {		return this.on( types, selector, data, fn, 1 );	},	off: function( types, selector, fn ) {		var handleObj, type;		if ( types &amp;&amp; types.preventDefault &amp;&amp; types.handleObj ) {			// ( event )  dispatched jQuery.Event			handleObj = types.handleObj;			jQuery( types.delegateTarget ).off(				handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType,				handleObj.selector,				handleObj.handler			);			return this;		}		if ( typeof types === "object" ) {			// ( types-object [, selector] )			for ( type in types ) {				this.off( type, selector, types[ type ] );			}			return this;		}		if ( selector === false || typeof selector === "function" ) {			// ( types [, fn] )			fn = selector;			selector = undefined;		}		if ( fn === false ) {			fn = returnFalse;		}		return this.each(function() {			jQuery.event.remove( this, types, fn, selector );		});	},	trigger: function( type, data ) {		return this.each(function() {			jQuery.event.trigger( type, data, this );		});	},	triggerHandler: function( type, data ) {		var elem = this[0];		if ( elem ) {			return jQuery.event.trigger( type, data, elem, true );		}	}});var	rxhtmlTag = /&lt;(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^&gt;]*)\/&gt;/gi,	rtagName = /&lt;([\w:]+)/,	rhtml = /&lt;|&amp;#?\w+;/,	rnoInnerhtml = /&lt;(?:script|style|link)/i,	// checked="checked" or checked	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,	rscriptType = /^$|\/(?:java|ecma)script/i,	rscriptTypeMasked = /^true\/(.*)/,	rcleanScript = /^\s*&lt;!(?:\[CDATA\[|--)|(?:\]\]|--)&gt;\s*$/g,	// We have to close these tags to support XHTML (#13200)	wrapMap = {		// Support: IE9		option: [ 1, "&lt;select multiple=''multiple''&gt;", "&lt;/select&gt;" ],		thead: [ 1, "&lt;table&gt;", "&lt;/table&gt;" ],		col: [ 2, "&lt;table&gt;&lt;colgroup&gt;", "&lt;/colgroup&gt;&lt;/table&gt;" ],		tr: [ 2, "&lt;table&gt;&lt;tbody&gt;", "&lt;/tbody&gt;&lt;/table&gt;" ],		td: [ 3, "&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;", "&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;" ],		_default: [ 0, "", "" ]	};// Support: IE9wrapMap.optgroup = wrapMap.option;wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;wrapMap.th = wrapMap.td;// Support: 1.x compatibility// Manipulating tables requires a tbodyfunction manipulationTarget( elem, content ) {	return jQuery.nodeName( elem, "table" ) &amp;&amp;		jQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ?		elem.getElementsByTagName("tbody")[0] ||			elem.appendChild( elem.ownerDocument.createElement("tbody") ) :		elem;}// Replace/restore the type attribute of script elements for safe DOM manipulationfunction disableScript( elem ) {	elem.type = (elem.getAttribute("type") !== null) + "/" + elem.type;	return elem;}function restoreScript( elem ) {	var match = rscriptTypeMasked.exec( elem.type );	if ( match ) {		elem.type = match[ 1 ];	} else {		elem.removeAttribute("type");	}	return elem;}// Mark scripts as having already been evaluatedfunction setGlobalEval( elems, refElements ) {	var i = 0,		l = elems.length;	for ( ; i &lt; l; i++ ) {		data_priv.set(			elems[ i ], "globalEval", !refElements || data_priv.get( refElements[ i ], "globalEval" )		);	}}function cloneCopyEvent( src, dest ) {	var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;	if ( dest.nodeType !== 1 ) {		return;	}	// 1. Copy private data: events, handlers, etc.	if ( data_priv.hasData( src ) ) {		pdataOld = data_priv.access( src );		pdataCur = data_priv.set( dest, pdataOld );		events = pdataOld.events;		if ( events ) {			delete pdataCur.handle;			pdataCur.events = {};			for ( type in events ) {				for ( i = 0, l = events[ type ].length; i &lt; l; i++ ) {					jQuery.event.add( dest, type, events[ type ][ i ] );				}			}		}	}	// 2. Copy user data	if ( data_user.hasData( src ) ) {		udataOld = data_user.access( src );		udataCur = jQuery.extend( {}, udataOld );		data_user.set( dest, udataCur );	}}function getAll( context, tag ) {	var ret = context.getElementsByTagName ? context.getElementsByTagName( tag || "*" ) :			context.querySelectorAll ? context.querySelectorAll( tag || "*" ) :			[];	return tag === undefined || tag &amp;&amp; jQuery.nodeName( context, tag ) ?		jQuery.merge( [ context ], ret ) :		ret;}// Fix IE bugs, see support testsfunction fixInput( src, dest ) {	var nodeName = dest.nodeName.toLowerCase();	// Fails to persist the checked state of a cloned checkbox or radio button.	if ( nodeName === "input" &amp;&amp; rcheckableType.test( src.type ) ) {		dest.checked = src.checked;	// Fails to return the selected option to the default selected state when cloning options	} else if ( nodeName === "input" || nodeName === "textarea" ) {		dest.defaultValue = src.defaultValue;	}}jQuery.extend({	clone: function( elem, dataAndEvents, deepDataAndEvents ) {		var i, l, srcElements, destElements,			clone = elem.cloneNode( true ),			inPage = jQuery.contains( elem.ownerDocument, elem );		// Fix IE cloning issues		if ( !support.noCloneChecked &amp;&amp; ( elem.nodeType === 1 || elem.nodeType === 11 ) &amp;&amp;				!jQuery.isXMLDoc( elem ) ) {			// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2			destElements = getAll( clone );			srcElements = getAll( elem );			for ( i = 0, l = srcElements.length; i &lt; l; i++ ) {				fixInput( srcElements[ i ], destElements[ i ] );			}		}		// Copy the events from the original to the clone		if ( dataAndEvents ) {			if ( deepDataAndEvents ) {				srcElements = srcElements || getAll( elem );				destElements = destElements || getAll( clone );				for ( i = 0, l = srcElements.length; i &lt; l; i++ ) {					cloneCopyEvent( srcElements[ i ], destElements[ i ] );				}			} else {				cloneCopyEvent( elem, clone );			}		}		// Preserve script evaluation history		destElements = getAll( clone, "script" );		if ( destElements.length &gt; 0 ) {			setGlobalEval( destElements, !inPage &amp;&amp; getAll( elem, "script" ) );		}		// Return the cloned set		return clone;	},	buildFragment: function( elems, context, scripts, selection ) {		var elem, tmp, tag, wrap, contains, j,			fragment = context.createDocumentFragment(),			nodes = [],			i = 0,			l = elems.length;		for ( ; i &lt; l; i++ ) {			elem = elems[ i ];			if ( elem || elem === 0 ) {				// Add nodes directly				if ( jQuery.type( elem ) === "object" ) {					// Support: QtWebKit, PhantomJS					// push.apply(_, arraylike) throws on ancient WebKit					jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );				// Convert non-html into a text node				} else if ( !rhtml.test( elem ) ) {					nodes.push( context.createTextNode( elem ) );				// Convert html into DOM nodes				} else {					tmp = tmp || fragment.appendChild( context.createElement("div") );					// Deserialize a standard representation					tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();					wrap = wrapMap[ tag ] || wrapMap._default;					tmp.innerHTML = wrap[ 1 ] + elem.replace( rxhtmlTag, "&lt;$1&gt;&lt;/$2&gt;" ) + wrap[ 2 ];					// Descend through wrappers to the right content					j = wrap[ 0 ];					while ( j-- ) {						tmp = tmp.lastChild;					}					// Support: QtWebKit, PhantomJS					// push.apply(_, arraylike) throws on ancient WebKit					jQuery.merge( nodes, tmp.childNodes );					// Remember the top-level container					tmp = fragment.firstChild;					// Ensure the created nodes are orphaned (#12392)					tmp.textContent = "";				}			}		}		// Remove wrapper from fragment		fragment.textContent = "";		i = 0;		while ( (elem = nodes[ i++ ]) ) {			// #4087 - If origin and destination elements are the same, and this is			// that element, do not do anything			if ( selection &amp;&amp; jQuery.inArray( elem, selection ) !== -1 ) {				continue;			}			contains = jQuery.contains( elem.ownerDocument, elem );			// Append to fragment			tmp = getAll( fragment.appendChild( elem ), "script" );			// Preserve script evaluation history			if ( contains ) {				setGlobalEval( tmp );			}			// Capture executables			if ( scripts ) {				j = 0;				while ( (elem = tmp[ j++ ]) ) {					if ( rscriptType.test( elem.type || "" ) ) {						scripts.push( elem );					}				}			}		}		return fragment;	},	cleanData: function( elems ) {		var data, elem, type, key,			special = jQuery.event.special,			i = 0;		for ( ; (elem = elems[ i ]) !== undefined; i++ ) {			if ( jQuery.acceptData( elem ) ) {				key = elem[ data_priv.expando ];				if ( key &amp;&amp; (data = data_priv.cache[ key ]) ) {					if ( data.events ) {						for ( type in data.events ) {							if ( special[ type ] ) {								jQuery.event.remove( elem, type );							// This is a shortcut to avoid jQuery.event.remove''s overhead							} else {								jQuery.removeEvent( elem, type, data.handle );							}						}					}					if ( data_priv.cache[ key ] ) {						// Discard any remaining `private` data						delete data_priv.cache[ key ];					}				}			}			// Discard any remaining `user` data			delete data_user.cache[ elem[ data_user.expando ] ];		}	}});jQuery.fn.extend({	text: function( value ) {		return access( this, function( value ) {			return value === undefined ?				jQuery.text( this ) :				this.empty().each(function() {					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {						this.textContent = value;					}				});		}, null, value, arguments.length );	},	append: function() {		return this.domManip( arguments, function( elem ) {			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {				var target = manipulationTarget( this, elem );				target.appendChild( elem );			}		});	},	prepend: function() {		return this.domManip( arguments, function( elem ) {			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {				var target = manipulationTarget( this, elem );				target.insertBefore( elem, target.firstChild );			}		});	},	before: function() {		return this.domManip( arguments, function( elem ) {			if ( this.parentNode ) {				this.parentNode.insertBefore( elem, this );			}		});	},	after: function() {		return this.domManip( arguments, function( elem ) {			if ( this.parentNode ) {				this.parentNode.insertBefore( elem, this.nextSibling );			}		});	},	remove: function( selector, keepData /* Internal Use Only */ ) {		var elem,			elems = selector ? jQuery.filter( selector, this ) : this,			i = 0;		for ( ; (elem = elems[i]) != null; i++ ) {			if ( !keepData &amp;&amp; elem.nodeType === 1 ) {				jQuery.cleanData( getAll( elem ) );			}			if ( elem.parentNode ) {				if ( keepData &amp;&amp; jQuery.contains( elem.ownerDocument, elem ) ) {					setGlobalEval( getAll( elem, "script" ) );				}				elem.parentNode.removeChild( elem );			}		}		return this;	},	empty: function() {		var elem,			i = 0;		for ( ; (elem = this[i]) != null; i++ ) {			if ( elem.nodeType === 1 ) {				// Prevent memory leaks				jQuery.cleanData( getAll( elem, false ) );				// Remove any remaining nodes				elem.textContent = "";			}		}		return this;	},	clone: function( dataAndEvents, deepDataAndEvents ) {		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;		return this.map(function() {			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );		});	},	html: function( value ) {		return access( this, function( value ) {			var elem = this[ 0 ] || {},				i = 0,				l = this.length;			if ( value === undefined &amp;&amp; elem.nodeType === 1 ) {				return elem.innerHTML;			}			// See if we can take a shortcut and just use innerHTML			if ( typeof value === "string" &amp;&amp; !rnoInnerhtml.test( value ) &amp;&amp;				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {				value = value.replace( rxhtmlTag, "&lt;$1&gt;&lt;/$2&gt;" );				try {					for ( ; i &lt; l; i++ ) {						elem = this[ i ] || {};						// Remove element nodes and prevent memory leaks						if ( elem.nodeType === 1 ) {							jQuery.cleanData( getAll( elem, false ) );							elem.innerHTML = value;						}					}					elem = 0;				// If using innerHTML throws an exception, use the fallback method				} catch( e ) {}			}			if ( elem ) {				this.empty().append( value );			}		}, null, value, arguments.length );	},	replaceWith: function() {		var arg = arguments[ 0 ];		// Make the changes, replacing each context element with the new content		this.domManip( arguments, function( elem ) {			arg = this.parentNode;			jQuery.cleanData( getAll( this ) );			if ( arg ) {				arg.replaceChild( elem, this );			}		});		// Force removal if there was no new content (e.g., from empty arguments)		return arg &amp;&amp; (arg.length || arg.nodeType) ? this : this.remove();	},	detach: function( selector ) {		return this.remove( selector, true );	},	domManip: function( args, callback ) {		// Flatten any nested arrays		args = concat.apply( [], args );		var fragment, first, scripts, hasScripts, node, doc,			i = 0,			l = this.length,			set = this,			iNoClone = l - 1,			value = args[ 0 ],			isFunction = jQuery.isFunction( value );		// We can''t cloneNode fragments that contain checked, in WebKit		if ( isFunction ||				( l &gt; 1 &amp;&amp; typeof value === "string" &amp;&amp;					!support.checkClone &amp;&amp; rchecked.test( value ) ) ) {			return this.each(function( index ) {				var self = set.eq( index );				if ( isFunction ) {					args[ 0 ] = value.call( this, index, self.html() );				}				self.domManip( args, callback );			});		}		if ( l ) {			fragment = jQuery.buildFragment( args, this[ 0 ].ownerDocument, false, this );			first = fragment.firstChild;			if ( fragment.childNodes.length === 1 ) {				fragment = first;			}			if ( first ) {				scripts = jQuery.map( getAll( fragment, "script" ), disableScript );				hasScripts = scripts.length;				// Use the original fragment for the last item instead of the first because it can end up				// being emptied incorrectly in certain situations (#8070).				for ( ; i &lt; l; i++ ) {					node = fragment;					if ( i !== iNoClone ) {						node = jQuery.clone( node, true, true );						// Keep references to cloned scripts for later restoration						if ( hasScripts ) {							// Support: QtWebKit							// jQuery.merge because push.apply(_, arraylike) throws							jQuery.merge( scripts, getAll( node, "script" ) );						}					}					callback.call( this[ i ], node, i );				}				if ( hasScripts ) {					doc = scripts[ scripts.length - 1 ].ownerDocument;					// Reenable scripts					jQuery.map( scripts, restoreScript );					// Evaluate executable scripts on first document insertion					for ( i = 0; i &lt; hasScripts; i++ ) {						node = scripts[ i ];						if ( rscriptType.test( node.type || "" ) &amp;&amp;							!data_priv.access( node, "globalEval" ) &amp;&amp; jQuery.contains( doc, node ) ) {							if ( node.src ) {								// Optional AJAX dependency, but won''t run scripts if not present								if ( jQuery._evalUrl ) {									jQuery._evalUrl( node.src );								}							} else {								jQuery.globalEval( node.textContent.replace( rcleanScript, "" ) );							}						}					}				}			}		}		return this;	}});jQuery.each({	appendTo: "append",	prependTo: "prepend",	insertBefore: "before",	insertAfter: "after",	replaceAll: "replaceWith"}, function( name, original ) {	jQuery.fn[ name ] = function( selector ) {		var elems,			ret = [],			insert = jQuery( selector ),			last = insert.length - 1,			i = 0;		for ( ; i &lt;= last; i++ ) {			elems = i === last ? this : this.clone( true );			jQuery( insert[ i ] )[ original ]( elems );			// Support: QtWebKit			// .get() because push.apply(_, arraylike) throws			push.apply( ret, elems.get() );		}		return this.pushStack( ret );	};});var iframe,	elemdisplay = {};/** * Retrieve the actual display of a element * @param {String} name nodeName of the element * @param {Object} doc Document object */// Called only from within defaultDisplayfunction actualDisplay( name, doc ) {	var style,		elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),		// getDefaultComputedStyle might be reliably used only on attached element		display = window.getDefaultComputedStyle &amp;&amp; ( style = window.getDefaultComputedStyle( elem[ 0 ] ) ) ?			// Use of this method is a temporary fix (more like optimization) until something better comes along,			// since it was removed from specification and supported only in FF			style.display : jQuery.css( elem[ 0 ], "display" );	// We don''t have any data stored on the element,	// so use "detach" method as fast way to get rid of the element	elem.detach();	return display;}/** * Try to determine the default display value of an element * @param {String} nodeName */function defaultDisplay( nodeName ) {	var doc = document,		display = elemdisplay[ nodeName ];	if ( !display ) {		display = actualDisplay( nodeName, doc );		// If the simple way fails, read from inside an iframe		if ( display === "none" || !display ) {			// Use the already-created iframe if possible			iframe = (iframe || jQuery( "&lt;iframe frameborder=''0'' width=''0'' height=''0''/&gt;" )).appendTo( doc.documentElement );			// Always write a new HTML skeleton so Webkit and Firefox don''t choke on reuse			doc = iframe[ 0 ].contentDocument;			// Support: IE			doc.write();			doc.close();			display = actualDisplay( nodeName, doc );			iframe.detach();		}		// Store the correct default display		elemdisplay[ nodeName ] = display;	}	return display;}var rmargin = (/^margin/);var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );var getStyles = function( elem ) {		// Support: IE&lt;=11+, Firefox&lt;=30+ (#15098, #14150)		// IE throws on elements created in popups		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"		if ( elem.ownerDocument.defaultView.opener ) {			return elem.ownerDocument.defaultView.getComputedStyle( elem, null );		}		return window.getComputedStyle( elem, null );	};function curCSS( elem, name, computed ) {	var width, minWidth, maxWidth, ret,		style = elem.style;	computed = computed || getStyles( elem );	// Support: IE9	// getPropertyValue is only needed for .css(''filter'') (#12537)	if ( computed ) {		ret = computed.getPropertyValue( name ) || computed[ name ];	}	if ( computed ) {		if ( ret === "" &amp;&amp; !jQuery.contains( elem.ownerDocument, elem ) ) {			ret = jQuery.style( elem, name );		}		// Support: iOS &lt; 6		// A tribute to the "awesome hack by Dean Edwards"		// iOS &lt; 6 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels		// this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values		if ( rnumnonpx.test( ret ) &amp;&amp; rmargin.test( name ) ) {			// Remember the original values			width = style.width;			minWidth = style.minWidth;			maxWidth = style.maxWidth;			// Put in the new values to get a computed value out			style.minWidth = style.maxWidth = style.width = ret;			ret = computed.width;			// Revert the changed values			style.width = width;			style.minWidth = minWidth;			style.maxWidth = maxWidth;		}	}	return ret !== undefined ?		// Support: IE		// IE returns zIndex value as an integer.		ret + "" :		ret;}function addGetHookIf( conditionFn, hookFn ) {	// Define the hook, we''ll check on the first run if it''s really needed.	return {		get: function() {			if ( conditionFn() ) {				// Hook not needed (or it''s not possible to use it due				// to missing dependency), remove it.				delete this.get;				return;			}			// Hook needed; redefine it so that the support test is not executed again.			return (this.get = hookFn).apply( this, arguments );		}	};}(function() {	var pixelPositionVal, boxSizingReliableVal,		docElem = document.documentElement,		container = document.createElement( "div" ),		div = document.createElement( "div" );	if ( !div.style ) {		return;	}	// Support: IE9-11+	// Style of cloned element affects source element cloned (#8908)	div.style.backgroundClip = "content-box";	div.cloneNode( true ).style.backgroundClip = "";	support.clearCloneStyle = div.style.backgroundClip === "content-box";	container.style.cssText = "border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;" +		"position:absolute";	container.appendChild( div );	// Executing both pixelPosition &amp; boxSizingReliable tests require only one layout	// so they''re executed at the same time to save the second computation.	function computePixelPositionAndBoxSizingReliable() {		div.style.cssText =			// Support: Firefox&lt;29, Android 2.3			// Vendor-prefix box-sizing			"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;" +			"box-sizing:border-box;display:block;margin-top:1%;top:1%;" +			"border:1px;padding:1px;width:4px;position:absolute";		div.innerHTML = "";		docElem.appendChild( container );		var divStyle = window.getComputedStyle( div, null );		pixelPositionVal = divStyle.top !== "1%";		boxSizingReliableVal = divStyle.width === "4px";		docElem.removeChild( container );	}	// Support: node.js jsdom	// Don''t assume that getComputedStyle is a property of the global object	if ( window.getComputedStyle ) {		jQuery.extend( support, {			pixelPosition: function() {				// This test is executed only once but we still do memoizing				// since we can use the boxSizingReliable pre-computing.				// No need to check if the test was already performed, though.				computePixelPositionAndBoxSizingReliable();				return pixelPositionVal;			},			boxSizingReliable: function() {				if ( boxSizingReliableVal == null ) {					computePixelPositionAndBoxSizingReliable();				}				return boxSizingReliableVal;			},			reliableMarginRight: function() {				// Support: Android 2.3				// Check if div with explicit width and no margin-right incorrectly				// gets computed margin-right based on width of container. (#3333)				// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right				// This support function is only executed once so no memoizing is needed.				var ret,					marginDiv = div.appendChild( document.createElement( "div" ) );				// Reset CSS: box-sizing; display; margin; border; padding				marginDiv.style.cssText = div.style.cssText =					// Support: Firefox&lt;29, Android 2.3					// Vendor-prefix box-sizing					"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;" +					"box-sizing:content-box;display:block;margin:0;border:0;padding:0";				marginDiv.style.marginRight = marginDiv.style.width = "0";				div.style.width = "1px";				docElem.appendChild( container );				ret = !parseFloat( window.getComputedStyle( marginDiv, null ).marginRight );				docElem.removeChild( container );				div.removeChild( marginDiv );				return ret;			}		});	}})();// A method for quickly swapping in/out CSS properties to get correct calculations.jQuery.swap = function( elem, options, callback, args ) {	var ret, name,		old = {};	// Remember the old values, and insert the new ones	for ( name in options ) {		old[ name ] = elem.style[ name ];		elem.style[ name ] = options[ name ];	}	ret = callback.apply( elem, args || [] );	// Revert the old values	for ( name in options ) {		elem.style[ name ] = old[ name ];	}	return ret;};var	// Swappable if display is none or starts with table except "table", "table-cell", or "table-caption"	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display	rdisplayswap = /^(none|table(?!-c[ea]).+)/,	rnumsplit = new RegExp( "^(" + pnum + ")(.*)$", "i" ),	rrelNum = new RegExp( "^([+-])=(" + pnum + ")", "i" ),	cssShow = { position: "absolute", visibility: "hidden", display: "block" },	cssNormalTransform = {		letterSpacing: "0",		fontWeight: "400"	},	cssPrefixes = [ "Webkit", "O", "Moz", "ms" ];// Return a css property mapped to a potentially vendor prefixed propertyfunction vendorPropName( style, name ) {	// Shortcut for names that are not vendor prefixed	if ( name in style ) {		return name;	}	// Check for vendor prefixed names	var capName = name[0].toUpperCase() + name.slice(1),		origName = name,		i = cssPrefixes.length;	while ( i-- ) {		name = cssPrefixes[ i ] + capName;		if ( name in style ) {			return name;		}	}	return origName;}function setPositiveNumber( elem, value, subtract ) {	var matches = rnumsplit.exec( value );	return matches ?		// Guard against undefined "subtract", e.g., when used as in cssHooks		Math.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || "px" ) :		value;}function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {	var i = extra === ( isBorderBox ? "border" : "content" ) ?		// If we already have the right measurement, avoid augmentation		4 :		// Otherwise initialize for horizontal or vertical properties		name === "width" ? 1 : 0,		val = 0;	for ( ; i &lt; 4; i += 2 ) {		// Both box models exclude margin, so add it if we want it		if ( extra === "margin" ) {			val += jQuery.css( elem, extra + cssExpand[ i ], true, styles );		}		if ( isBorderBox ) {			// border-box includes padding, so remove it if we want content			if ( extra === "content" ) {				val -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );			}			// At this point, extra isn''t border nor margin, so remove border			if ( extra !== "margin" ) {				val -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );			}		} else {			// At this point, extra isn''t content, so add padding			val += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );			// At this point, extra isn''t content nor padding, so add border			if ( extra !== "padding" ) {				val += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );			}		}	}	return val;}function getWidthOrHeight( elem, name, extra ) {	// Start with offset property, which is equivalent to the border-box value	var valueIsBorderBox = true,		val = name === "width" ? elem.offsetWidth : elem.offsetHeight,		styles = getStyles( elem ),		isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";	// Some non-html elements return undefined for offsetWidth, so check for null/undefined	// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285	// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668	if ( val &lt;= 0 || val == null ) {		// Fall back to computed then uncomputed css if necessary		val = curCSS( elem, name, styles );		if ( val &lt; 0 || val == null ) {			val = elem.style[ name ];		}		// Computed unit is not pixels. Stop here and return.		if ( rnumnonpx.test(val) ) {			return val;		}		// Check for style in case a browser which returns unreliable values		// for getComputedStyle silently falls back to the reliable elem.style		valueIsBorderBox = isBorderBox &amp;&amp;			( support.boxSizingReliable() || val === elem.style[ name ] );		// Normalize "", auto, and prepare for extra		val = parseFloat( val ) || 0;	}	// Use the active box-sizing model to add/subtract irrelevant styles	return ( val +		augmentWidthOrHeight(			elem,			name,			extra || ( isBorderBox ? "border" : "content" ),			valueIsBorderBox,			styles		)	) + "px";}function showHide( elements, show ) {	var display, elem, hidden,		values = [],		index = 0,		length = elements.length;	for ( ; index &lt; length; index++ ) {		elem = elements[ index ];		if ( !elem.style ) {			continue;		}		values[ index ] = data_priv.get( elem, "olddisplay" );		display = elem.style.display;		if ( show ) {			// Reset the inline display of this element to learn if it is			// being hidden by cascaded rules or not			if ( !values[ index ] &amp;&amp; display === "none" ) {				elem.style.display = "";			}			// Set elements which have been overridden with display: none			// in a stylesheet to whatever the default browser style is			// for such an element			if ( elem.style.display === "" &amp;&amp; isHidden( elem ) ) {				values[ index ] = data_priv.access( elem, "olddisplay", defaultDisplay(elem.nodeName) );			}		} else {			hidden = isHidden( elem );			if ( display !== "none" || !hidden ) {				data_priv.set( elem, "olddisplay", hidden ? display : jQuery.css( elem, "display" ) );			}		}	}	// Set the display of most of the elements in a second loop	// to avoid the constant reflow	for ( index = 0; index &lt; length; index++ ) {		elem = elements[ index ];		if ( !elem.style ) {			continue;		}		if ( !show || elem.style.display === "none" || elem.style.display === "" ) {			elem.style.display = show ? values[ index ] || "" : "none";		}	}	return elements;}jQuery.extend({	// Add in style property hooks for overriding the default	// behavior of getting and setting a style property	cssHooks: {		opacity: {			get: function( elem, computed ) {				if ( computed ) {					// We should always get a number back from opacity					var ret = curCSS( elem, "opacity" );					return ret === "" ? "1" : ret;				}			}		}	},	// Don''t automatically add "px" to these possibly-unitless properties	cssNumber: {		"columnCount": true,		"fillOpacity": true,		"flexGrow": true,		"flexShrink": true,		"fontWeight": true,		"lineHeight": true,		"opacity": true,		"order": true,		"orphans": true,		"widows": true,		"zIndex": true,		"zoom": true	},	// Add in properties whose names you wish to fix before	// setting or getting the value	cssProps: {		"float": "cssFloat"	},	// Get and set the style property on a DOM Node	style: function( elem, name, value, extra ) {		// Don''t set styles on text and comment nodes		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {			return;		}		// Make sure that we''re working with the right name		var ret, type, hooks,			origName = jQuery.camelCase( name ),			style = elem.style;		name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( style, origName ) );		// Gets hook for the prefixed version, then unprefixed version		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];		// Check if we''re setting a value		if ( value !== undefined ) {			type = typeof value;			// Convert "+=" or "-=" to relative numbers (#7345)			if ( type === "string" &amp;&amp; (ret = rrelNum.exec( value )) ) {				value = ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, name ) );				// Fixes bug #9237				type = "number";			}			// Make sure that null and NaN values aren''t set (#7116)			if ( value == null || value !== value ) {				return;			}			// If a number, add ''px'' to the (except for certain CSS properties)			if ( type === "number" &amp;&amp; !jQuery.cssNumber[ origName ] ) {				value += "px";			}			// Support: IE9-11+			// background-* props affect original clone''s values			if ( !support.clearCloneStyle &amp;&amp; value === "" &amp;&amp; name.indexOf( "background" ) === 0 ) {				style[ name ] = "inherit";			}			// If a hook was provided, use that value, otherwise just set the specified value			if ( !hooks || !("set" in hooks) || (value = hooks.set( elem, value, extra )) !== undefined ) {				style[ name ] = value;			}		} else {			// If a hook was provided get the non-computed value from there			if ( hooks &amp;&amp; "get" in hooks &amp;&amp; (ret = hooks.get( elem, false, extra )) !== undefined ) {				return ret;			}			// Otherwise just get the value from the style object			return style[ name ];		}	},	css: function( elem, name, extra, styles ) {		var val, num, hooks,			origName = jQuery.camelCase( name );		// Make sure that we''re working with the right name		name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( elem.style, origName ) );		// Try prefixed name followed by the unprefixed name		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];		// If a hook was provided get the computed value from there		if ( hooks &amp;&amp; "get" in hooks ) {			val = hooks.get( elem, true, extra );		}		// Otherwise, if a way to get the computed value exists, use that		if ( val === undefined ) {			val = curCSS( elem, name, styles );		}		// Convert "normal" to computed value		if ( val === "normal" &amp;&amp; name in cssNormalTransform ) {			val = cssNormalTransform[ name ];		}		// Make numeric if forced or a qualifier was provided and val looks numeric		if ( extra === "" || extra ) {			num = parseFloat( val );			return extra === true || jQuery.isNumeric( num ) ? num || 0 : val;		}		return val;	}});jQuery.each([ "height", "width" ], function( i, name ) {	jQuery.cssHooks[ name ] = {		get: function( elem, computed, extra ) {			if ( computed ) {				// Certain elements can have dimension info if we invisibly show them				// but it must have a current display style that would benefit				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &amp;&amp; elem.offsetWidth === 0 ?					jQuery.swap( elem, cssShow, function() {						return getWidthOrHeight( elem, name, extra );					}) :					getWidthOrHeight( elem, name, extra );			}		},		set: function( elem, value, extra ) {			var styles = extra &amp;&amp; getStyles( elem );			return setPositiveNumber( elem, value, extra ?				augmentWidthOrHeight(					elem,					name,					extra,					jQuery.css( elem, "boxSizing", false, styles ) === "border-box",					styles				) : 0			);		}	};});// Support: Android 2.3jQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,	function( elem, computed ) {		if ( computed ) {			return jQuery.swap( elem, { "display": "inline-block" },				curCSS, [ elem, "marginRight" ] );		}	});// These hooks are used by animate to expand propertiesjQuery.each({	margin: "",	padding: "",	border: "Width"}, function( prefix, suffix ) {	jQuery.cssHooks[ prefix + suffix ] = {		expand: function( value ) {			var i = 0,				expanded = {},				// Assumes a single number if not a string				parts = typeof value === "string" ? value.split(" ") : [ value ];			for ( ; i &lt; 4; i++ ) {				expanded[ prefix + cssExpand[ i ] + suffix ] =					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];			}			return expanded;		}	};	if ( !rmargin.test( prefix ) ) {		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;	}});jQuery.fn.extend({	css: function( name, value ) {		return access( this, function( elem, name, value ) {			var styles, len,				map = {},				i = 0;			if ( jQuery.isArray( name ) ) {				styles = getStyles( elem );				len = name.length;				for ( ; i &lt; len; i++ ) {					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );				}				return map;			}			return value !== undefined ?				jQuery.style( elem, name, value ) :				jQuery.css( elem, name );		}, name, value, arguments.length &gt; 1 );	},	show: function() {		return showHide( this, true );	},	hide: function() {		return showHide( this );	},	toggle: function( state ) {		if ( typeof state === "boolean" ) {			return state ? this.show() : this.hide();		}		return this.each(function() {			if ( isHidden( this ) ) {				jQuery( this ).show();			} else {				jQuery( this ).hide();			}		});	}});function Tween( elem, options, prop, end, easing ) {	return new Tween.prototype.init( elem, options, prop, end, easing );}jQuery.Tween = Tween;Tween.prototype = {	constructor: Tween,	init: function( elem, options, prop, end, easing, unit ) {		this.elem = elem;		this.prop = prop;		this.easing = easing || "swing";		this.options = options;		this.start = this.now = this.cur();		this.end = end;		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );	},	cur: function() {		var hooks = Tween.propHooks[ this.prop ];		return hooks &amp;&amp; hooks.get ?			hooks.get( this ) :			Tween.propHooks._default.get( this );	},	run: function( percent ) {		var eased,			hooks = Tween.propHooks[ this.prop ];		if ( this.options.duration ) {			this.pos = eased = jQuery.easing[ this.easing ](				percent, this.options.duration * percent, 0, 1, this.options.duration			);		} else {			this.pos = eased = percent;		}		this.now = ( this.end - this.start ) * eased + this.start;		if ( this.options.step ) {			this.options.step.call( this.elem, this.now, this );		}		if ( hooks &amp;&amp; hooks.set ) {			hooks.set( this );		} else {			Tween.propHooks._default.set( this );		}		return this;	}};Tween.prototype.init.prototype = Tween.prototype;Tween.propHooks = {	_default: {		get: function( tween ) {			var result;			if ( tween.elem[ tween.prop ] != null &amp;&amp;				(!tween.elem.style || tween.elem.style[ tween.prop ] == null) ) {				return tween.elem[ tween.prop ];			}			// Passing an empty string as a 3rd parameter to .css will automatically			// attempt a parseFloat and fallback to a string if the parse fails.			// Simple values such as "10px" are parsed to Float;			// complex values such as "rotate(1rad)" are returned as-is.			result = jQuery.css( tween.elem, tween.prop, "" );			// Empty strings, null, undefined and "auto" are converted to 0.			return !result || result === "auto" ? 0 : result;		},		set: function( tween ) {			// Use step hook for back compat.			// Use cssHook if its there.			// Use .style if available and use plain properties where available.			if ( jQuery.fx.step[ tween.prop ] ) {				jQuery.fx.step[ tween.prop ]( tween );			} else if ( tween.elem.style &amp;&amp; ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null || jQuery.cssHooks[ tween.prop ] ) ) {				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );			} else {				tween.elem[ tween.prop ] = tween.now;			}		}	}};// Support: IE9// Panic based approach to setting things on disconnected nodesTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {	set: function( tween ) {		if ( tween.elem.nodeType &amp;&amp; tween.elem.parentNode ) {			tween.elem[ tween.prop ] = tween.now;		}	}};jQuery.easing = {	linear: function( p ) {		return p;	},	swing: function( p ) {		return 0.5 - Math.cos( p * Math.PI ) / 2;	}};jQuery.fx = Tween.prototype.init;// Back Compat &lt;1.8 extension pointjQuery.fx.step = {};var	fxNow, timerId,	rfxtypes = /^(?:toggle|show|hide)$/,	rfxnum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" ),	rrun = /queueHooks$/,	animationPrefilters = [ defaultPrefilter ],	tweeners = {		"*": [ function( prop, value ) {			var tween = this.createTween( prop, value ),				target = tween.cur(),				parts = rfxnum.exec( value ),				unit = parts &amp;&amp; parts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),				// Starting value computation is required for potential unit mismatches				start = ( jQuery.cssNumber[ prop ] || unit !== "px" &amp;&amp; +target ) &amp;&amp;					rfxnum.exec( jQuery.css( tween.elem, prop ) ),				scale = 1,				maxIterations = 20;			if ( start &amp;&amp; start[ 3 ] !== unit ) {				// Trust units reported by jQuery.css				unit = unit || start[ 3 ];				// Make sure we update the tween properties later on				parts = parts || [];				// Iteratively approximate from a nonzero starting point				start = +target || 1;				do {					// If previous iteration zeroed out, double until we get *something*.					// Use string for doubling so we don''t accidentally see scale as unchanged below					scale = scale || ".5";					// Adjust and apply					start = start / scale;					jQuery.style( tween.elem, prop, start + unit );				// Update scale, tolerating zero or NaN from tween.cur(),				// break the loop if scale is unchanged or perfect, or if we''ve just had enough				} while ( scale !== (scale = tween.cur() / target) &amp;&amp; scale !== 1 &amp;&amp; --maxIterations );			}			// Update tween properties			if ( parts ) {				start = tween.start = +start || +target || 0;				tween.unit = unit;				// If a +=/-= token was provided, we''re doing a relative animation				tween.end = parts[ 1 ] ?					start + ( parts[ 1 ] + 1 ) * parts[ 2 ] :					+parts[ 2 ];			}			return tween;		} ]	};// Animations created synchronously will run synchronouslyfunction createFxNow() {	setTimeout(function() {		fxNow = undefined;	});	return ( fxNow = jQuery.now() );}// Generate parameters to create a standard animationfunction genFx( type, includeWidth ) {	var which,		i = 0,		attrs = { height: type };	// If we include width, step value is 1 to do all cssExpand values,	// otherwise step value is 2 to skip over Left and Right	includeWidth = includeWidth ? 1 : 0;	for ( ; i &lt; 4 ; i += 2 - includeWidth ) {		which = cssExpand[ i ];		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;	}	if ( includeWidth ) {		attrs.opacity = attrs.width = type;	}	return attrs;}function createTween( value, prop, animation ) {	var tween,		collection = ( tweeners[ prop ] || [] ).concat( tweeners[ "*" ] ),		index = 0,		length = collection.length;	for ( ; index &lt; length; index++ ) {		if ( (tween = collection[ index ].call( animation, prop, value )) ) {			// We''re done with this property			return tween;		}	}}function defaultPrefilter( elem, props, opts ) {	/* jshint validthis: true */	var prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,		anim = this,		orig = {},		style = elem.style,		hidden = elem.nodeType &amp;&amp; isHidden( elem ),		dataShow = data_priv.get( elem, "fxshow" );	// Handle queue: false promises	if ( !opts.queue ) {		hooks = jQuery._queueHooks( elem, "fx" );		if ( hooks.unqueued == null ) {			hooks.unqueued = 0;			oldfire = hooks.empty.fire;			hooks.empty.fire = function() {				if ( !hooks.unqueued ) {					oldfire();				}			};		}		hooks.unqueued++;		anim.always(function() {			// Ensure the complete handler is called before this completes			anim.always(function() {				hooks.unqueued--;				if ( !jQuery.queue( elem, "fx" ).length ) {					hooks.empty.fire();				}			});		});	}	// Height/width overflow pass	if ( elem.nodeType === 1 &amp;&amp; ( "height" in props || "width" in props ) ) {		// Make sure that nothing sneaks out		// Record all 3 overflow attributes because IE9-10 do not		// change the overflow attribute when overflowX and		// overflowY are set to the same value		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];		// Set display property to inline-block for height/width		// animations on inline elements that are having width/height animated		display = jQuery.css( elem, "display" );		// Test default display if display is currently "none"		checkDisplay = display === "none" ?			data_priv.get( elem, "olddisplay" ) || defaultDisplay( elem.nodeName ) : display;		if ( checkDisplay === "inline" &amp;&amp; jQuery.css( elem, "float" ) === "none" ) {			style.display = "inline-block";		}	}	if ( opts.overflow ) {		style.overflow = "hidden";		anim.always(function() {			style.overflow = opts.overflow[ 0 ];			style.overflowX = opts.overflow[ 1 ];			style.overflowY = opts.overflow[ 2 ];		});	}	// show/hide pass	for ( prop in props ) {		value = props[ prop ];		if ( rfxtypes.exec( value ) ) {			delete props[ prop ];			toggle = toggle || value === "toggle";			if ( value === ( hidden ? "hide" : "show" ) ) {				// If there is dataShow left over from a stopped hide or show and we are going to proceed with show, we should pretend to be hidden				if ( value === "show" &amp;&amp; dataShow &amp;&amp; dataShow[ prop ] !== undefined ) {					hidden = true;				} else {					continue;				}			}			orig[ prop ] = dataShow &amp;&amp; dataShow[ prop ] || jQuery.style( elem, prop );		// Any non-fx value stops us from restoring the original display value		} else {			display = undefined;		}	}	if ( !jQuery.isEmptyObject( orig ) ) {		if ( dataShow ) {			if ( "hidden" in dataShow ) {				hidden = dataShow.hidden;			}		} else {			dataShow = data_priv.access( elem, "fxshow", {} );		}		// Store state if its toggle - enables .stop().toggle() to "reverse"		if ( toggle ) {			dataShow.hidden = !hidden;		}		if ( hidden ) {			jQuery( elem ).show();		} else {			anim.done(function() {				jQuery( elem ).hide();			});		}		anim.done(function() {			var prop;			data_priv.remove( elem, "fxshow" );			for ( prop in orig ) {				jQuery.style( elem, prop, orig[ prop ] );			}		});		for ( prop in orig ) {			tween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );			if ( !( prop in dataShow ) ) {				dataShow[ prop ] = tween.start;				if ( hidden ) {					tween.end = tween.start;					tween.start = prop === "width" || prop === "height" ? 1 : 0;				}			}		}	// If this is a noop like .hide().hide(), restore an overwritten display value	} else if ( (display === "none" ? defaultDisplay( elem.nodeName ) : display) === "inline" ) {		style.display = display;	}}function propFilter( props, specialEasing ) {	var index, name, easing, value, hooks;	// camelCase, specialEasing and expand cssHook pass	for ( index in props ) {		name = jQuery.camelCase( index );		easing = specialEasing[ name ];		value = props[ index ];		if ( jQuery.isArray( value ) ) {			easing = value[ 1 ];			value = props[ index ] = value[ 0 ];		}		if ( index !== name ) {			props[ name ] = value;			delete props[ index ];		}		hooks = jQuery.cssHooks[ name ];		if ( hooks &amp;&amp; "expand" in hooks ) {			value = hooks.expand( value );			delete props[ name ];			// Not quite $.extend, this won''t overwrite existing keys.			// Reusing ''index'' because we have the correct "name"			for ( index in value ) {				if ( !( index in props ) ) {					props[ index ] = value[ index ];					specialEasing[ index ] = easing;				}			}		} else {			specialEasing[ name ] = easing;		}	}}function Animation( elem, properties, options ) {	var result,		stopped,		index = 0,		length = animationPrefilters.length,		deferred = jQuery.Deferred().always( function() {			// Don''t match elem in the :animated selector			delete tick.elem;		}),		tick = function() {			if ( stopped ) {				return false;			}			var currentTime = fxNow || createFxNow(),				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),				// Support: Android 2.3				// Archaic crash bug won''t allow us to use `1 - ( 0.5 || 0 )` (#12497)				temp = remaining / animation.duration || 0,				percent = 1 - temp,				index = 0,				length = animation.tweens.length;			for ( ; index &lt; length ; index++ ) {				animation.tweens[ index ].run( percent );			}			deferred.notifyWith( elem, [ animation, percent, remaining ]);			if ( percent &lt; 1 &amp;&amp; length ) {				return remaining;			} else {				deferred.resolveWith( elem, [ animation ] );				return false;			}		},		animation = deferred.promise({			elem: elem,			props: jQuery.extend( {}, properties ),			opts: jQuery.extend( true, { specialEasing: {} }, options ),			originalProperties: properties,			originalOptions: options,			startTime: fxNow || createFxNow(),			duration: options.duration,			tweens: [],			createTween: function( prop, end ) {				var tween = jQuery.Tween( elem, animation.opts, prop, end,						animation.opts.specialEasing[ prop ] || animation.opts.easing );				animation.tweens.push( tween );				return tween;			},			stop: function( gotoEnd ) {				var index = 0,					// If we are going to the end, we want to run all the tweens					// otherwise we skip this part					length = gotoEnd ? animation.tweens.length : 0;				if ( stopped ) {					return this;				}				stopped = true;				for ( ; index &lt; length ; index++ ) {					animation.tweens[ index ].run( 1 );				}				// Resolve when we played the last frame; otherwise, reject				if ( gotoEnd ) {					deferred.resolveWith( elem, [ animation, gotoEnd ] );				} else {					deferred.rejectWith( elem, [ animation, gotoEnd ] );				}				return this;			}		}),		props = animation.props;	propFilter( props, animation.opts.specialEasing );	for ( ; index &lt; length ; index++ ) {		result = animationPrefilters[ index ].call( animation, elem, props, animation.opts );		if ( result ) {			return result;		}	}	jQuery.map( props, createTween, animation );	if ( jQuery.isFunction( animation.opts.start ) ) {		animation.opts.start.call( elem, animation );	}	jQuery.fx.timer(		jQuery.extend( tick, {			elem: elem,			anim: animation,			queue: animation.opts.queue		})	);	// attach callbacks from options	return animation.progress( animation.opts.progress )		.done( animation.opts.done, animation.opts.complete )		.fail( animation.opts.fail )		.always( animation.opts.always );}jQuery.Animation = jQuery.extend( Animation, {	tweener: function( props, callback ) {		if ( jQuery.isFunction( props ) ) {			callback = props;			props = [ "*" ];		} else {			props = props.split(" ");		}		var prop,			index = 0,			length = props.length;		for ( ; index &lt; length ; index++ ) {			prop = props[ index ];			tweeners[ prop ] = tweeners[ prop ] || [];			tweeners[ prop ].unshift( callback );		}	},	prefilter: function( callback, prepend ) {		if ( prepend ) {			animationPrefilters.unshift( callback );		} else {			animationPrefilters.push( callback );		}	}});jQuery.speed = function( speed, easing, fn ) {	var opt = speed &amp;&amp; typeof speed === "object" ? jQuery.extend( {}, speed ) : {		complete: fn || !fn &amp;&amp; easing ||			jQuery.isFunction( speed ) &amp;&amp; speed,		duration: speed,		easing: fn &amp;&amp; easing || easing &amp;&amp; !jQuery.isFunction( easing ) &amp;&amp; easing	};	opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration :		opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;	// Normalize opt.queue - true/undefined/null -&gt; "fx"	if ( opt.queue == null || opt.queue === true ) {		opt.queue = "fx";	}	// Queueing	opt.old = opt.complete;	opt.complete = function() {		if ( jQuery.isFunction( opt.old ) ) {			opt.old.call( this );		}		if ( opt.queue ) {			jQuery.dequeue( this, opt.queue );		}	};	return opt;};jQuery.fn.extend({	fadeTo: function( speed, to, easing, callback ) {		// Show any hidden elements after setting opacity to 0		return this.filter( isHidden ).css( "opacity", 0 ).show()			// Animate to the value specified			.end().animate({ opacity: to }, speed, easing, callback );	},	animate: function( prop, speed, easing, callback ) {		var empty = jQuery.isEmptyObject( prop ),			optall = jQuery.speed( speed, easing, callback ),			doAnimation = function() {				// Operate on a copy of prop so per-property easing won''t be lost				var anim = Animation( this, jQuery.extend( {}, prop ), optall );				// Empty animations, or finishing resolves immediately				if ( empty || data_priv.get( this, "finish" ) ) {					anim.stop( true );				}			};			doAnimation.finish = doAnimation;		return empty || optall.queue === false ?			this.each( doAnimation ) :			this.queue( optall.queue, doAnimation );	},	stop: function( type, clearQueue, gotoEnd ) {		var stopQueue = function( hooks ) {			var stop = hooks.stop;			delete hooks.stop;			stop( gotoEnd );		};		if ( typeof type !== "string" ) {			gotoEnd = clearQueue;			clearQueue = type;			type = undefined;		}		if ( clearQueue &amp;&amp; type !== false ) {			this.queue( type || "fx", [] );		}		return this.each(function() {			var dequeue = true,				index = type != null &amp;&amp; type + "queueHooks",				timers = jQuery.timers,				data = data_priv.get( this );			if ( index ) {				if ( data[ index ] &amp;&amp; data[ index ].stop ) {					stopQueue( data[ index ] );				}			} else {				for ( index in data ) {					if ( data[ index ] &amp;&amp; data[ index ].stop &amp;&amp; rrun.test( index ) ) {						stopQueue( data[ index ] );					}				}			}			for ( index = timers.length; index--; ) {				if ( timers[ index ].elem === this &amp;&amp; (type == null || timers[ index ].queue === type) ) {					timers[ index ].anim.stop( gotoEnd );					dequeue = false;					timers.splice( index, 1 );				}			}			// Start the next in the queue if the last step wasn''t forced.			// Timers currently will call their complete callbacks, which			// will dequeue but only if they were gotoEnd.			if ( dequeue || !gotoEnd ) {				jQuery.dequeue( this, type );			}		});	},	finish: function( type ) {		if ( type !== false ) {			type = type || "fx";		}		return this.each(function() {			var index,				data = data_priv.get( this ),				queue = data[ type + "queue" ],				hooks = data[ type + "queueHooks" ],				timers = jQuery.timers,				length = queue ? queue.length : 0;			// Enable finishing flag on private data			data.finish = true;			// Empty the queue first			jQuery.queue( this, type, [] );			if ( hooks &amp;&amp; hooks.stop ) {				hooks.stop.call( this, true );			}			// Look for any active animations, and finish them			for ( index = timers.length; index--; ) {				if ( timers[ index ].elem === this &amp;&amp; timers[ index ].queue === type ) {					timers[ index ].anim.stop( true );					timers.splice( index, 1 );				}			}			// Look for any animations in the old queue and finish them			for ( index = 0; index &lt; length; index++ ) {				if ( queue[ index ] &amp;&amp; queue[ index ].finish ) {					queue[ index ].finish.call( this );				}			}			// Turn off finishing flag			delete data.finish;		});	}});jQuery.each([ "toggle", "show", "hide" ], function( i, name ) {	var cssFn = jQuery.fn[ name ];	jQuery.fn[ name ] = function( speed, easing, callback ) {		return speed == null || typeof speed === "boolean" ?			cssFn.apply( this, arguments ) :			this.animate( genFx( name, true ), speed, easing, callback );	};});// Generate shortcuts for custom animationsjQuery.each({	slideDown: genFx("show"),	slideUp: genFx("hide"),	slideToggle: genFx("toggle"),	fadeIn: { opacity: "show" },	fadeOut: { opacity: "hide" },	fadeToggle: { opacity: "toggle" }}, function( name, props ) {	jQuery.fn[ name ] = function( speed, easing, callback ) {		return this.animate( props, speed, easing, callback );	};});jQuery.timers = [];jQuery.fx.tick = function() {	var timer,		i = 0,		timers = jQuery.timers;	fxNow = jQuery.now();	for ( ; i &lt; timers.length; i++ ) {		timer = timers[ i ];		// Checks the timer has not already been removed		if ( !timer() &amp;&amp; timers[ i ] === timer ) {			timers.splice( i--, 1 );		}	}	if ( !timers.length ) {		jQuery.fx.stop();	}	fxNow = undefined;};jQuery.fx.timer = function( timer ) {	jQuery.timers.push( timer );	if ( timer() ) {		jQuery.fx.start();	} else {		jQuery.timers.pop();	}};jQuery.fx.interval = 13;jQuery.fx.start = function() {	if ( !timerId ) {		timerId = setInterval( jQuery.fx.tick, jQuery.fx.interval );	}};jQuery.fx.stop = function() {	clearInterval( timerId );	timerId = null;};jQuery.fx.speeds = {	slow: 600,	fast: 200,	// Default speed	_default: 400};// Based off of the plugin by Clint Helfers, with permission.// http://blindsignals.com/index.php/2009/07/jquery-delay/jQuery.fn.delay = function( time, type ) {	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;	type = type || "fx";	return this.queue( type, function( next, hooks ) {		var timeout = setTimeout( next, time );		hooks.stop = function() {			clearTimeout( timeout );		};	});};(function() {	var input = document.createElement( "input" ),		select = document.createElement( "select" ),		opt = select.appendChild( document.createElement( "option" ) );	input.type = "checkbox";	// Support: iOS&lt;=5.1, Android&lt;=4.2+	// Default value for a checkbox should be "on"	support.checkOn = input.value !== "";	// Support: IE&lt;=11+	// Must access selectedIndex to make default options select	support.optSelected = opt.selected;	// Support: Android&lt;=2.3	// Options inside disabled selects are incorrectly marked as disabled	select.disabled = true;	support.optDisabled = !opt.disabled;	// Support: IE&lt;=11+	// An input loses its value after becoming a radio	input = document.createElement( "input" );	input.value = "t";	input.type = "radio";	support.radioValue = input.value === "t";})();var nodeHook, boolHook,	attrHandle = jQuery.expr.attrHandle;jQuery.fn.extend({	attr: function( name, value ) {		return access( this, jQuery.attr, name, value, arguments.length &gt; 1 );	},	removeAttr: function( name ) {		return this.each(function() {			jQuery.removeAttr( this, name );		});	}});jQuery.extend({	attr: function( elem, name, value ) {		var hooks, ret,			nType = elem.nodeType;		// don''t get/set attributes on text, comment and attribute nodes		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {			return;		}		// Fallback to prop when attributes are not supported		if ( typeof elem.getAttribute === strundefined ) {			return jQuery.prop( elem, name, value );		}		// All attributes are lowercase		// Grab necessary hook if one is defined		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {			name = name.toLowerCase();			hooks = jQuery.attrHooks[ name ] ||				( jQuery.expr.match.bool.test( name ) ? boolHook : nodeHook );		}		if ( value !== undefined ) {			if ( value === null ) {				jQuery.removeAttr( elem, name );			} else if ( hooks &amp;&amp; "set" in hooks &amp;&amp; (ret = hooks.set( elem, value, name )) !== undefined ) {				return ret;			} else {				elem.setAttribute( name, value + "" );				return value;			}		} else if ( hooks &amp;&amp; "get" in hooks &amp;&amp; (ret = hooks.get( elem, name )) !== null ) {			return ret;		} else {			ret = jQuery.find.attr( elem, name );			// Non-existent attributes return null, we normalize to undefined			return ret == null ?				undefined :				ret;		}	},	removeAttr: function( elem, value ) {		var name, propName,			i = 0,			attrNames = value &amp;&amp; value.match( rnotwhite );		if ( attrNames &amp;&amp; elem.nodeType === 1 ) {			while ( (name = attrNames[i++]) ) {				propName = jQuery.propFix[ name ] || name;				// Boolean attributes get special treatment (#10870)				if ( jQuery.expr.match.bool.test( name ) ) {					// Set corresponding property to false					elem[ propName ] = false;				}				elem.removeAttribute( name );			}		}	},	attrHooks: {		type: {			set: function( elem, value ) {				if ( !support.radioValue &amp;&amp; value === "radio" &amp;&amp;					jQuery.nodeName( elem, "input" ) ) {					var val = elem.value;					elem.setAttribute( "type", value );					if ( val ) {						elem.value = val;					}					return value;				}			}		}	}});// Hooks for boolean attributesboolHook = {	set: function( elem, value, name ) {		if ( value === false ) {			// Remove boolean attributes when set to false			jQuery.removeAttr( elem, name );		} else {			elem.setAttribute( name, name );		}		return name;	}};jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {	var getter = attrHandle[ name ] || jQuery.find.attr;	attrHandle[ name ] = function( elem, name, isXML ) {		var ret, handle;		if ( !isXML ) {			// Avoid an infinite loop by temporarily removing this function from the getter			handle = attrHandle[ name ];			attrHandle[ name ] = ret;			ret = getter( elem, name, isXML ) != null ?				name.toLowerCase() :				null;			attrHandle[ name ] = handle;		}		return ret;	};});var rfocusable = /^(?:input|select|textarea|button)$/i;jQuery.fn.extend({	prop: function( name, value ) {		return access( this, jQuery.prop, name, value, arguments.length &gt; 1 );	},	removeProp: function( name ) {		return this.each(function() {			delete this[ jQuery.propFix[ name ] || name ];		});	}});jQuery.extend({	propFix: {		"for": "htmlFor",		"class": "className"	},	prop: function( elem, name, value ) {		var ret, hooks, notxml,			nType = elem.nodeType;		// Don''t get/set properties on text, comment and attribute nodes		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {			return;		}		notxml = nType !== 1 || !jQuery.isXMLDoc( elem );		if ( notxml ) {			// Fix name and attach hooks			name = jQuery.propFix[ name ] || name;			hooks = jQuery.propHooks[ name ];		}		if ( value !== undefined ) {			return hooks &amp;&amp; "set" in hooks &amp;&amp; (ret = hooks.set( elem, value, name )) !== undefined ?				ret :				( elem[ name ] = value );		} else {			return hooks &amp;&amp; "get" in hooks &amp;&amp; (ret = hooks.get( elem, name )) !== null ?				ret :				elem[ name ];		}	},	propHooks: {		tabIndex: {			get: function( elem ) {				return elem.hasAttribute( "tabindex" ) || rfocusable.test( elem.nodeName ) || elem.href ?					elem.tabIndex :					-1;			}		}	}});if ( !support.optSelected ) {	jQuery.propHooks.selected = {		get: function( elem ) {			var parent = elem.parentNode;			if ( parent &amp;&amp; parent.parentNode ) {				parent.parentNode.selectedIndex;			}			return null;		}	};}jQuery.each([	"tabIndex",	"readOnly",	"maxLength",	"cellSpacing",	"cellPadding",	"rowSpan",	"colSpan",	"useMap",	"frameBorder",	"contentEditable"], function() {	jQuery.propFix[ this.toLowerCase() ] = this;});var rclass = /[\t\r\n\f]/g;jQuery.fn.extend({	addClass: function( value ) {		var classes, elem, cur, clazz, j, finalValue,			proceed = typeof value === "string" &amp;&amp; value,			i = 0,			len = this.length;		if ( jQuery.isFunction( value ) ) {			return this.each(function( j ) {				jQuery( this ).addClass( value.call( this, j, this.className ) );			});		}		if ( proceed ) {			// The disjunction here is for better compressibility (see removeClass)			classes = ( value || "" ).match( rnotwhite ) || [];			for ( ; i &lt; len; i++ ) {				elem = this[ i ];				cur = elem.nodeType === 1 &amp;&amp; ( elem.className ?					( " " + elem.className + " " ).replace( rclass, " " ) :					" "				);				if ( cur ) {					j = 0;					while ( (clazz = classes[j++]) ) {						if ( cur.indexOf( " " + clazz + " " ) &lt; 0 ) {							cur += clazz + " ";						}					}					// only assign if different to avoid unneeded rendering.					finalValue = jQuery.trim( cur );					if ( elem.className !== finalValue ) {						elem.className = finalValue;					}				}			}		}		return this;	},	removeClass: function( value ) {		var classes, elem, cur, clazz, j, finalValue,			proceed = arguments.length === 0 || typeof value === "string" &amp;&amp; value,			i = 0,			len = this.length;		if ( jQuery.isFunction( value ) ) {			return this.each(function( j ) {				jQuery( this ).removeClass( value.call( this, j, this.className ) );			});		}		if ( proceed ) {			classes = ( value || "" ).match( rnotwhite ) || [];			for ( ; i &lt; len; i++ ) {				elem = this[ i ];				// This expression is here for better compressibility (see addClass)				cur = elem.nodeType === 1 &amp;&amp; ( elem.className ?					( " " + elem.className + " " ).replace( rclass, " " ) :					""				);				if ( cur ) {					j = 0;					while ( (clazz = classes[j++]) ) {						// Remove *all* instances						while ( cur.indexOf( " " + clazz + " " ) &gt;= 0 ) {							cur = cur.replace( " " + clazz + " ", " " );						}					}					// Only assign if different to avoid unneeded rendering.					finalValue = value ? jQuery.trim( cur ) : "";					if ( elem.className !== finalValue ) {						elem.className = finalValue;					}				}			}		}		return this;	},	toggleClass: function( value, stateVal ) {		var type = typeof value;		if ( typeof stateVal === "boolean" &amp;&amp; type === "string" ) {			return stateVal ? this.addClass( value ) : this.removeClass( value );		}		if ( jQuery.isFunction( value ) ) {			return this.each(function( i ) {				jQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );			});		}		return this.each(function() {			if ( type === "string" ) {				// Toggle individual class names				var className,					i = 0,					self = jQuery( this ),					classNames = value.match( rnotwhite ) || [];				while ( (className = classNames[ i++ ]) ) {					// Check each className given, space separated list					if ( self.hasClass( className ) ) {						self.removeClass( className );					} else {						self.addClass( className );					}				}			// Toggle whole class name			} else if ( type === strundefined || type === "boolean" ) {				if ( this.className ) {					// store className if set					data_priv.set( this, "__className__", this.className );				}				// If the element has a class name or if we''re passed `false`,				// then remove the whole classname (if there was one, the above saved it).				// Otherwise bring back whatever was previously saved (if anything),				// falling back to the empty string if nothing was stored.				this.className = this.className || value === false ? "" : data_priv.get( this, "__className__" ) || "";			}		});	},	hasClass: function( selector ) {		var className = " " + selector + " ",			i = 0,			l = this.length;		for ( ; i &lt; l; i++ ) {			if ( this[i].nodeType === 1 &amp;&amp; (" " + this[i].className + " ").replace(rclass, " ").indexOf( className ) &gt;= 0 ) {				return true;			}		}		return false;	}});var rreturn = /\r/g;jQuery.fn.extend({	val: function( value ) {		var hooks, ret, isFunction,			elem = this[0];		if ( !arguments.length ) {			if ( elem ) {				hooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase() ];				if ( hooks &amp;&amp; "get" in hooks &amp;&amp; (ret = hooks.get( elem, "value" )) !== undefined ) {					return ret;				}				ret = elem.value;				return typeof ret === "string" ?					// Handle most common string cases					ret.replace(rreturn, "") :					// Handle cases where value is null/undef or number					ret == null ? "" : ret;			}			return;		}		isFunction = jQuery.isFunction( value );		return this.each(function( i ) {			var val;			if ( this.nodeType !== 1 ) {				return;			}			if ( isFunction ) {				val = value.call( this, i, jQuery( this ).val() );			} else {				val = value;			}			// Treat null/undefined as ""; convert numbers to string			if ( val == null ) {				val = "";			} else if ( typeof val === "number" ) {				val += "";			} else if ( jQuery.isArray( val ) ) {				val = jQuery.map( val, function( value ) {					return value == null ? "" : value + "";				});			}			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];			// If set returns undefined, fall back to normal setting			if ( !hooks || !("set" in hooks) || hooks.set( this, val, "value" ) === undefined ) {				this.value = val;			}		});	}});jQuery.extend({	valHooks: {		option: {			get: function( elem ) {				var val = jQuery.find.attr( elem, "value" );				return val != null ?					val :					// Support: IE10-11+					// option.text throws exceptions (#14686, #14858)					jQuery.trim( jQuery.text( elem ) );			}		},		select: {			get: function( elem ) {				var value, option,					options = elem.options,					index = elem.selectedIndex,					one = elem.type === "select-one" || index &lt; 0,					values = one ? null : [],					max = one ? index + 1 : options.length,					i = index &lt; 0 ?						max :						one ? index : 0;				// Loop through all the selected options				for ( ; i &lt; max; i++ ) {					option = options[ i ];					// IE6-9 doesn''t update selected after form reset (#2551)					if ( ( option.selected || i === index ) &amp;&amp;							// Don''t return options that are disabled or in a disabled optgroup							( support.optDisabled ? !option.disabled : option.getAttribute( "disabled" ) === null ) &amp;&amp;							( !option.parentNode.disabled || !jQuery.nodeName( option.parentNode, "optgroup" ) ) ) {						// Get the specific value for the option						value = jQuery( option ).val();						// We don''t need an array for one selects						if ( one ) {							return value;						}						// Multi-Selects return an array						values.push( value );					}				}				return values;			},			set: function( elem, value ) {				var optionSet, option,					options = elem.options,					values = jQuery.makeArray( value ),					i = options.length;				while ( i-- ) {					option = options[ i ];					if ( (option.selected = jQuery.inArray( option.value, values ) &gt;= 0) ) {						optionSet = true;					}				}				// Force browsers to behave consistently when non-matching value is set				if ( !optionSet ) {					elem.selectedIndex = -1;				}				return values;			}		}	}});// Radios and checkboxes getter/setterjQuery.each([ "radio", "checkbox" ], function() {	jQuery.valHooks[ this ] = {		set: function( elem, value ) {			if ( jQuery.isArray( value ) ) {				return ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) &gt;= 0 );			}		}	};	if ( !support.checkOn ) {		jQuery.valHooks[ this ].get = function( elem ) {			return elem.getAttribute("value") === null ? "on" : elem.value;		};	}});// Return jQuery for attributes-only inclusionjQuery.each( ("blur focus focusin focusout load resize scroll unload click dblclick " +	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +	"change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {	// Handle event binding	jQuery.fn[ name ] = function( data, fn ) {		return arguments.length &gt; 0 ?			this.on( name, null, data, fn ) :			this.trigger( name );	};});jQuery.fn.extend({	hover: function( fnOver, fnOut ) {		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );	},	bind: function( types, data, fn ) {		return this.on( types, null, data, fn );	},	unbind: function( types, fn ) {		return this.off( types, null, fn );	},	delegate: function( selector, types, data, fn ) {		return this.on( types, selector, data, fn );	},	undelegate: function( selector, types, fn ) {		// ( namespace ) or ( selector, types [, fn] )		return arguments.length === 1 ? this.off( selector, "**" ) : this.off( types, selector || "**", fn );	}});var nonce = jQuery.now();var rquery = (/\?/);// Support: Android 2.3// Workaround failure to string-cast null inputjQuery.parseJSON = function( data ) {	return JSON.parse( data + "" );};// Cross-browser xml parsingjQuery.parseXML = function( data ) {	var xml, tmp;	if ( !data || typeof data !== "string" ) {		return null;	}	// Support: IE9	try {		tmp = new DOMParser();		xml = tmp.parseFromString( data, "text/xml" );	} catch ( e ) {		xml = undefined;	}	if ( !xml || xml.getElementsByTagName( "parsererror" ).length ) {		jQuery.error( "Invalid XML: " + data );	}	return xml;};var	rhash = /#.*$/,	rts = /([?&amp;])_=[^&amp;]*/,	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,	// #7653, #8125, #8152: local protocol detection	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,	rnoContent = /^(?:GET|HEAD)$/,	rprotocol = /^\/\//,	rurl = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,	/* Prefilters	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)	 * 2) These are called:	 *    - BEFORE asking for a transport	 *    - AFTER param serialization (s.data is a string if s.processData is true)	 * 3) key is the dataType	 * 4) the catchall symbol "*" can be used	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed	 */	prefilters = {},	/* Transports bindings	 * 1) key is the dataType	 * 2) the catchall symbol "*" can be used	 * 3) selection will start with transport dataType and THEN go to "*" if needed	 */	transports = {},	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression	allTypes = "*/".concat( "*" ),	// Document location	ajaxLocation = window.location.href,	// Segment location into parts	ajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransportfunction addToPrefiltersOrTransports( structure ) {	// dataTypeExpression is optional and defaults to "*"	return function( dataTypeExpression, func ) {		if ( typeof dataTypeExpression !== "string" ) {			func = dataTypeExpression;			dataTypeExpression = "*";		}		var dataType,			i = 0,			dataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];		if ( jQuery.isFunction( func ) ) {			// For each dataType in the dataTypeExpression			while ( (dataType = dataTypes[i++]) ) {				// Prepend if requested				if ( dataType[0] === "+" ) {					dataType = dataType.slice( 1 ) || "*";					(structure[ dataType ] = structure[ dataType ] || []).unshift( func );				// Otherwise append				} else {					(structure[ dataType ] = structure[ dataType ] || []).push( func );				}			}		}	};}// Base inspection function for prefilters and transportsfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {	var inspected = {},		seekingTransport = ( structure === transports );	function inspect( dataType ) {		var selected;		inspected[ dataType ] = true;		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );			if ( typeof dataTypeOrTransport === "string" &amp;&amp; !seekingTransport &amp;&amp; !inspected[ dataTypeOrTransport ] ) {				options.dataTypes.unshift( dataTypeOrTransport );				inspect( dataTypeOrTransport );				return false;			} else if ( seekingTransport ) {				return !( selected = dataTypeOrTransport );			}		});		return selected;	}	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] &amp;&amp; inspect( "*" );}// A special extend for ajax options// that takes "flat" options (not to be deep extended)// Fixes #9887function ajaxExtend( target, src ) {	var key, deep,		flatOptions = jQuery.ajaxSettings.flatOptions || {};	for ( key in src ) {		if ( src[ key ] !== undefined ) {			( flatOptions[ key ] ? target : ( deep || (deep = {}) ) )[ key ] = src[ key ];		}	}	if ( deep ) {		jQuery.extend( true, target, deep );	}	return target;}/* Handles responses to an ajax request: * - finds the right dataType (mediates between content-type and expected dataType) * - returns the corresponding response */function ajaxHandleResponses( s, jqXHR, responses ) {	var ct, type, finalDataType, firstDataType,		contents = s.contents,		dataTypes = s.dataTypes;	// Remove auto dataType and get content-type in the process	while ( dataTypes[ 0 ] === "*" ) {		dataTypes.shift();		if ( ct === undefined ) {			ct = s.mimeType || jqXHR.getResponseHeader("Content-Type");		}	}	// Check if we''re dealing with a known content-type	if ( ct ) {		for ( type in contents ) {			if ( contents[ type ] &amp;&amp; contents[ type ].test( ct ) ) {				dataTypes.unshift( type );				break;			}		}	}	// Check to see if we have a response for the expected dataType	if ( dataTypes[ 0 ] in responses ) {		finalDataType = dataTypes[ 0 ];	} else {		// Try convertible dataTypes		for ( type in responses ) {			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[0] ] ) {				finalDataType = type;				break;			}			if ( !firstDataType ) {				firstDataType = type;			}		}		// Or just use first one		finalDataType = finalDataType || firstDataType;	}	// If we found a dataType	// We add the dataType to the list if needed	// and return the corresponding response	if ( finalDataType ) {		if ( finalDataType !== dataTypes[ 0 ] ) {			dataTypes.unshift( finalDataType );		}		return responses[ finalDataType ];	}}/* Chain conversions given the request and the original response * Also sets the responseXXX fields on the jqXHR instance */function ajaxConvert( s, response, jqXHR, isSuccess ) {	var conv2, current, conv, tmp, prev,		converters = {},		// Work with a copy of dataTypes in case we need to modify it for conversion		dataTypes = s.dataTypes.slice();	// Create converters map with lowercased keys	if ( dataTypes[ 1 ] ) {		for ( conv in s.converters ) {			converters[ conv.toLowerCase() ] = s.converters[ conv ];		}	}	current = dataTypes.shift();	// Convert to each sequential dataType	while ( current ) {		if ( s.responseFields[ current ] ) {			jqXHR[ s.responseFields[ current ] ] = response;		}		// Apply the dataFilter if provided		if ( !prev &amp;&amp; isSuccess &amp;&amp; s.dataFilter ) {			response = s.dataFilter( response, s.dataType );		}		prev = current;		current = dataTypes.shift();		if ( current ) {		// There''s only work to do if current dataType is non-auto			if ( current === "*" ) {				current = prev;			// Convert response if prev dataType is non-auto and differs from current			} else if ( prev !== "*" &amp;&amp; prev !== current ) {				// Seek a direct converter				conv = converters[ prev + " " + current ] || converters[ "* " + current ];				// If none found, seek a pair				if ( !conv ) {					for ( conv2 in converters ) {						// If conv2 outputs current						tmp = conv2.split( " " );						if ( tmp[ 1 ] === current ) {							// If prev can be converted to accepted input							conv = converters[ prev + " " + tmp[ 0 ] ] ||								converters[ "* " + tmp[ 0 ] ];							if ( conv ) {								// Condense equivalence converters								if ( conv === true ) {									conv = converters[ conv2 ];								// Otherwise, insert the intermediate dataType								} else if ( converters[ conv2 ] !== true ) {									current = tmp[ 0 ];									dataTypes.unshift( tmp[ 1 ] );								}								break;							}						}					}				}				// Apply converter (if not an equivalence)				if ( conv !== true ) {					// Unless errors are allowed to bubble, catch and return them					if ( conv &amp;&amp; s[ "throws" ] ) {						response = conv( response );					} else {						try {							response = conv( response );						} catch ( e ) {							return { state: "parsererror", error: conv ? e : "No conversion from " + prev + " to " + current };						}					}				}			}		}	}	return { state: "success", data: response };}jQuery.extend({	// Counter for holding the number of active queries	active: 0,	// Last-Modified header cache for next request	lastModified: {},	etag: {},	ajaxSettings: {		url: ajaxLocation,		type: "GET",		isLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),		global: true,		processData: true,		async: true,		contentType: "application/x-www-form-urlencoded; charset=UTF-8",		/*		timeout: 0,		data: null,		dataType: null,		username: null,		password: null,		cache: null,		throws: false,		traditional: false,		headers: {},		*/		accepts: {			"*": allTypes,			text: "text/plain",			html: "text/html",			xml: "application/xml, text/xml",			json: "application/json, text/javascript"		},		contents: {			xml: /xml/,			html: /html/,			json: /json/		},		responseFields: {			xml: "responseXML",			text: "responseText",			json: "responseJSON"		},		// Data converters		// Keys separate source (or catchall "*") and destination types with a single space		converters: {			// Convert anything to text			"* text": String,			// Text to html (true = no transformation)			"text html": true,			// Evaluate text as a json expression			"text json": jQuery.parseJSON,			// Parse text as xml			"text xml": jQuery.parseXML		},		// For options that shouldn''t be deep extended:		// you can add your own custom options here if		// and when you create one that shouldn''t be		// deep extended (see ajaxExtend)		flatOptions: {			url: true,			context: true		}	},	// Creates a full fledged settings object into target	// with both ajaxSettings and settings fields.	// If target is omitted, writes into ajaxSettings.	ajaxSetup: function( target, settings ) {		return settings ?			// Building a settings object			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :			// Extending ajaxSettings			ajaxExtend( jQuery.ajaxSettings, target );	},	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),	ajaxTransport: addToPrefiltersOrTransports( transports ),	// Main method	ajax: function( url, options ) {		// If url is an object, simulate pre-1.5 signature		if ( typeof url === "object" ) {			options = url;			url = undefined;		}		// Force options to be an object		options = options || {};		var transport,			// URL without anti-cache param			cacheURL,			// Response headers			responseHeadersString,			responseHeaders,			// timeout handle			timeoutTimer,			// Cross-domain detection vars			parts,			// To know if global events are to be dispatched			fireGlobals,			// Loop variable			i,			// Create the final options object			s = jQuery.ajaxSetup( {}, options ),			// Callbacks context			callbackContext = s.context || s,			// Context for global events is callbackContext if it is a DOM node or jQuery collection			globalEventContext = s.context &amp;&amp; ( callbackContext.nodeType || callbackContext.jquery ) ?				jQuery( callbackContext ) :				jQuery.event,			// Deferreds			deferred = jQuery.Deferred(),			completeDeferred = jQuery.Callbacks("once memory"),			// Status-dependent callbacks			statusCode = s.statusCode || {},			// Headers (they are sent all at once)			requestHeaders = {},			requestHeadersNames = {},			// The jqXHR state			state = 0,			// Default abort message			strAbort = "canceled",			// Fake xhr			jqXHR = {				readyState: 0,				// Builds headers hashtable if needed				getResponseHeader: function( key ) {					var match;					if ( state === 2 ) {						if ( !responseHeaders ) {							responseHeaders = {};							while ( (match = rheaders.exec( responseHeadersString )) ) {								responseHeaders[ match[1].toLowerCase() ] = match[ 2 ];							}						}						match = responseHeaders[ key.toLowerCase() ];					}					return match == null ? null : match;				},				// Raw string				getAllResponseHeaders: function() {					return state === 2 ? responseHeadersString : null;				},				// Caches the header				setRequestHeader: function( name, value ) {					var lname = name.toLowerCase();					if ( !state ) {						name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;						requestHeaders[ name ] = value;					}					return this;				},				// Overrides response content-type header				overrideMimeType: function( type ) {					if ( !state ) {						s.mimeType = type;					}					return this;				},				// Status-dependent callbacks				statusCode: function( map ) {					var code;					if ( map ) {						if ( state &lt; 2 ) {							for ( code in map ) {								// Lazy-add the new callback in a way that preserves old ones								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];							}						} else {							// Execute the appropriate callbacks							jqXHR.always( map[ jqXHR.status ] );						}					}					return this;				},				// Cancel the request				abort: function( statusText ) {					var finalText = statusText || strAbort;					if ( transport ) {						transport.abort( finalText );					}					done( 0, finalText );					return this;				}			};		// Attach deferreds		deferred.promise( jqXHR ).complete = completeDeferred.add;		jqXHR.success = jqXHR.done;		jqXHR.error = jqXHR.fail;		// Remove hash character (#7531: and string promotion)		// Add protocol if not provided (prefilters might expect it)		// Handle falsy url in the settings object (#10093: consistency with old signature)		// We also use the url parameter if available		s.url = ( ( url || s.url || ajaxLocation ) + "" ).replace( rhash, "" )			.replace( rprotocol, ajaxLocParts[ 1 ] + "//" );		// Alias method option to type as per ticket #12004		s.type = options.method || options.type || s.method || s.type;		// Extract dataTypes list		s.dataTypes = jQuery.trim( s.dataType || "*" ).toLowerCase().match( rnotwhite ) || [ "" ];		// A cross-domain request is in order when we have a protocol:host:port mismatch		if ( s.crossDomain == null ) {			parts = rurl.exec( s.url.toLowerCase() );			s.crossDomain = !!( parts &amp;&amp;				( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||					( parts[ 3 ] || ( parts[ 1 ] === "http:" ? "80" : "443" ) ) !==						( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === "http:" ? "80" : "443" ) ) )			);		}		// Convert data if not already a string		if ( s.data &amp;&amp; s.processData &amp;&amp; typeof s.data !== "string" ) {			s.data = jQuery.param( s.data, s.traditional );		}		// Apply prefilters		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );		// If request was aborted inside a prefilter, stop there		if ( state === 2 ) {			return jqXHR;		}		// We can fire global events as of now if asked to		// Don''t fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)		fireGlobals = jQuery.event &amp;&amp; s.global;		// Watch for a new set of requests		if ( fireGlobals &amp;&amp; jQuery.active++ === 0 ) {			jQuery.event.trigger("ajaxStart");		}		// Uppercase the type		s.type = s.type.toUpperCase();		// Determine if request has content		s.hasContent = !rnoContent.test( s.type );		// Save the URL in case we''re toying with the If-Modified-Since		// and/or If-None-Match header later on		cacheURL = s.url;		// More options handling for requests with no content		if ( !s.hasContent ) {			// If data is available, append data to url			if ( s.data ) {				cacheURL = ( s.url += ( rquery.test( cacheURL ) ? "&amp;" : "?" ) + s.data );				// #9682: remove data so that it''s not used in an eventual retry				delete s.data;			}			// Add anti-cache in url if needed			if ( s.cache === false ) {				s.url = rts.test( cacheURL ) ?					// If there is already a ''_'' parameter, set its value					cacheURL.replace( rts, "$1_=" + nonce++ ) :					// Otherwise add one to the end					cacheURL + ( rquery.test( cacheURL ) ? "&amp;" : "?" ) + "_=" + nonce++;			}		}		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.		if ( s.ifModified ) {			if ( jQuery.lastModified[ cacheURL ] ) {				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );			}			if ( jQuery.etag[ cacheURL ] ) {				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );			}		}		// Set the correct header, if data is being sent		if ( s.data &amp;&amp; s.hasContent &amp;&amp; s.contentType !== false || options.contentType ) {			jqXHR.setRequestHeader( "Content-Type", s.contentType );		}		// Set the Accepts header for the server, depending on the dataType		jqXHR.setRequestHeader(			"Accept",			s.dataTypes[ 0 ] &amp;&amp; s.accepts[ s.dataTypes[0] ] ?				s.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :				s.accepts[ "*" ]		);		// Check for headers option		for ( i in s.headers ) {			jqXHR.setRequestHeader( i, s.headers[ i ] );		}		// Allow custom headers/mimetypes and early abort		if ( s.beforeSend &amp;&amp; ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {			// Abort if not done already and return			return jqXHR.abort();		}		// Aborting is no longer a cancellation		strAbort = "abort";		// Install callbacks on deferreds		for ( i in { success: 1, error: 1, complete: 1 } ) {			jqXHR[ i ]( s[ i ] );		}		// Get transport		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );		// If no transport, we auto-abort		if ( !transport ) {			done( -1, "No Transport" );		} else {			jqXHR.readyState = 1;			// Send global event			if ( fireGlobals ) {				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );			}			// Timeout			if ( s.async &amp;&amp; s.timeout &gt; 0 ) {				timeoutTimer = setTimeout(function() {					jqXHR.abort("timeout");				}, s.timeout );			}			try {				state = 1;				transport.send( requestHeaders, done );			} catch ( e ) {				// Propagate exception as error if not done				if ( state &lt; 2 ) {					done( -1, e );				// Simply rethrow otherwise				} else {					throw e;				}			}		}		// Callback for when everything is done		function done( status, nativeStatusText, responses, headers ) {			var isSuccess, success, error, response, modified,				statusText = nativeStatusText;			// Called once			if ( state === 2 ) {				return;			}			// State is "done" now			state = 2;			// Clear timeout if it exists			if ( timeoutTimer ) {				clearTimeout( timeoutTimer );			}			// Dereference transport for early garbage collection			// (no matter how long the jqXHR object will be used)			transport = undefined;			// Cache response headers			responseHeadersString = headers || "";			// Set readyState			jqXHR.readyState = status &gt; 0 ? 4 : 0;			// Determine if successful			isSuccess = status &gt;= 200 &amp;&amp; status &lt; 300 || status === 304;			// Get response data			if ( responses ) {				response = ajaxHandleResponses( s, jqXHR, responses );			}			// Convert no matter what (that way responseXXX fields are always set)			response = ajaxConvert( s, response, jqXHR, isSuccess );			// If successful, handle type chaining			if ( isSuccess ) {				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.				if ( s.ifModified ) {					modified = jqXHR.getResponseHeader("Last-Modified");					if ( modified ) {						jQuery.lastModified[ cacheURL ] = modified;					}					modified = jqXHR.getResponseHeader("etag");					if ( modified ) {						jQuery.etag[ cacheURL ] = modified;					}				}				// if no content				if ( status === 204 || s.type === "HEAD" ) {					statusText = "nocontent";				// if not modified				} else if ( status === 304 ) {					statusText = "notmodified";				// If we have data, let''s convert it				} else {					statusText = response.state;					success = response.data;					error = response.error;					isSuccess = !error;				}			} else {				// Extract error from statusText and normalize for non-aborts				error = statusText;				if ( status || !statusText ) {					statusText = "error";					if ( status &lt; 0 ) {						status = 0;					}				}			}			// Set data for the fake xhr object			jqXHR.status = status;			jqXHR.statusText = ( nativeStatusText || statusText ) + "";			// Success/Error			if ( isSuccess ) {				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );			} else {				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );			}			// Status-dependent callbacks			jqXHR.statusCode( statusCode );			statusCode = undefined;			if ( fireGlobals ) {				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",					[ jqXHR, s, isSuccess ? success : error ] );			}			// Complete			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );			if ( fireGlobals ) {				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );				// Handle the global AJAX counter				if ( !( --jQuery.active ) ) {					jQuery.event.trigger("ajaxStop");				}			}		}		return jqXHR;	},	getJSON: function( url, data, callback ) {		return jQuery.get( url, data, callback, "json" );	},	getScript: function( url, callback ) {		return jQuery.get( url, undefined, callback, "script" );	}});jQuery.each( [ "get", "post" ], function( i, method ) {	jQuery[ method ] = function( url, data, callback, type ) {		// Shift arguments if data argument was omitted		if ( jQuery.isFunction( data ) ) {			type = type || callback;			callback = data;			data = undefined;		}		return jQuery.ajax({			url: url,			type: method,			dataType: type,			data: data,			success: callback		});	};});jQuery._evalUrl = function( url ) {	return jQuery.ajax({		url: url,		type: "GET",		dataType: "script",		async: false,		global: false,		"throws": true	});};jQuery.fn.extend({	wrapAll: function( html ) {		var wrap;		if ( jQuery.isFunction( html ) ) {			return this.each(function( i ) {				jQuery( this ).wrapAll( html.call(this, i) );			});		}		if ( this[ 0 ] ) {			// The elements to wrap the target around			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );			if ( this[ 0 ].parentNode ) {				wrap.insertBefore( this[ 0 ] );			}			wrap.map(function() {				var elem = this;				while ( elem.firstElementChild ) {					elem = elem.firstElementChild;				}				return elem;			}).append( this );		}		return this;	},	wrapInner: function( html ) {		if ( jQuery.isFunction( html ) ) {			return this.each(function( i ) {				jQuery( this ).wrapInner( html.call(this, i) );			});		}		return this.each(function() {			var self = jQuery( this ),				contents = self.contents();			if ( contents.length ) {				contents.wrapAll( html );			} else {				self.append( html );			}		});	},	wrap: function( html ) {		var isFunction = jQuery.isFunction( html );		return this.each(function( i ) {			jQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );		});	},	unwrap: function() {		return this.parent().each(function() {			if ( !jQuery.nodeName( this, "body" ) ) {				jQuery( this ).replaceWith( this.childNodes );			}		}).end();	}});jQuery.expr.filters.hidden = function( elem ) {	// Support: Opera &lt;= 12.12	// Opera reports offsetWidths and offsetHeights less than zero on some elements	return elem.offsetWidth &lt;= 0 &amp;&amp; elem.offsetHeight &lt;= 0;};jQuery.expr.filters.visible = function( elem ) {	return !jQuery.expr.filters.hidden( elem );};var r20 = /%20/g,	rbracket = /\[\]$/,	rCRLF = /\r?\n/g,	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,	rsubmittable = /^(?:input|select|textarea|keygen)/i;function buildParams( prefix, obj, traditional, add ) {	var name;	if ( jQuery.isArray( obj ) ) {		// Serialize array item.		jQuery.each( obj, function( i, v ) {			if ( traditional || rbracket.test( prefix ) ) {				// Treat each array item as a scalar.				add( prefix, v );			} else {				// Item is non-scalar (array or object), encode its numeric index.				buildParams( prefix + "[" + ( typeof v === "object" ? i : "" ) + "]", v, traditional, add );			}		});	} else if ( !traditional &amp;&amp; jQuery.type( obj ) === "object" ) {		// Serialize object item.		for ( name in obj ) {			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );		}	} else {		// Serialize scalar item.		add( prefix, obj );	}}// Serialize an array of form elements or a set of// key/values into a query stringjQuery.param = function( a, traditional ) {	var prefix,		s = [],		add = function( key, value ) {			// If value is a function, invoke it and return its value			value = jQuery.isFunction( value ) ? value() : ( value == null ? "" : value );			s[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );		};	// Set traditional to true for jQuery &lt;= 1.3.2 behavior.	if ( traditional === undefined ) {		traditional = jQuery.ajaxSettings &amp;&amp; jQuery.ajaxSettings.traditional;	}	// If an array was passed in, assume that it is an array of form elements.	if ( jQuery.isArray( a ) || ( a.jquery &amp;&amp; !jQuery.isPlainObject( a ) ) ) {		// Serialize the form elements		jQuery.each( a, function() {			add( this.name, this.value );		});	} else {		// If traditional, encode the "old" way (the way 1.3.2 or older		// did it), otherwise encode params recursively.		for ( prefix in a ) {			buildParams( prefix, a[ prefix ], traditional, add );		}	}	// Return the resulting serialization	return s.join( "&amp;" ).replace( r20, "+" );};jQuery.fn.extend({	serialize: function() {		return jQuery.param( this.serializeArray() );	},	serializeArray: function() {		return this.map(function() {			// Can add propHook for "elements" to filter or add form elements			var elements = jQuery.prop( this, "elements" );			return elements ? jQuery.makeArray( elements ) : this;		})		.filter(function() {			var type = this.type;			// Use .is( ":disabled" ) so that fieldset[disabled] works			return this.name &amp;&amp; !jQuery( this ).is( ":disabled" ) &amp;&amp;				rsubmittable.test( this.nodeName ) &amp;&amp; !rsubmitterTypes.test( type ) &amp;&amp;				( this.checked || !rcheckableType.test( type ) );		})		.map(function( i, elem ) {			var val = jQuery( this ).val();			return val == null ?				null :				jQuery.isArray( val ) ?					jQuery.map( val, function( val ) {						return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };					}) :					{ name: elem.name, value: val.replace( rCRLF, "\r\n" ) };		}).get();	}});jQuery.ajaxSettings.xhr = function() {	try {		return new XMLHttpRequest();	} catch( e ) {}};var xhrId = 0,	xhrCallbacks = {},	xhrSuccessStatus = {		// file protocol always yields status code 0, assume 200		0: 200,		// Support: IE9		// #1450: sometimes IE returns 1223 when it should be 204		1223: 204	},	xhrSupported = jQuery.ajaxSettings.xhr();// Support: IE9// Open requests must be manually aborted on unload (#5280)// See https://support.microsoft.com/kb/2856746 for more infoif ( window.attachEvent ) {	window.attachEvent( "onunload", function() {		for ( var key in xhrCallbacks ) {			xhrCallbacks[ key ]();		}	});}support.cors = !!xhrSupported &amp;&amp; ( "withCredentials" in xhrSupported );support.ajax = xhrSupported = !!xhrSupported;jQuery.ajaxTransport(function( options ) {	var callback;	// Cross domain only allowed if supported through XMLHttpRequest	if ( support.cors || xhrSupported &amp;&amp; !options.crossDomain ) {		return {			send: function( headers, complete ) {				var i,					xhr = options.xhr(),					id = ++xhrId;				xhr.open( options.type, options.url, options.async, options.username, options.password );				// Apply custom fields if provided				if ( options.xhrFields ) {					for ( i in options.xhrFields ) {						xhr[ i ] = options.xhrFields[ i ];					}				}				// Override mime type if needed				if ( options.mimeType &amp;&amp; xhr.overrideMimeType ) {					xhr.overrideMimeType( options.mimeType );				}				// X-Requested-With header				// For cross-domain requests, seeing as conditions for a preflight are				// akin to a jigsaw puzzle, we simply never set it to be sure.				// (it can always be set on a per-request basis or even using ajaxSetup)				// For same-domain requests, won''t change header if already provided.				if ( !options.crossDomain &amp;&amp; !headers["X-Requested-With"] ) {					headers["X-Requested-With"] = "XMLHttpRequest";				}				// Set headers				for ( i in headers ) {					xhr.setRequestHeader( i, headers[ i ] );				}				// Callback				callback = function( type ) {					return function() {						if ( callback ) {							delete xhrCallbacks[ id ];							callback = xhr.onload = xhr.onerror = null;							if ( type === "abort" ) {								xhr.abort();							} else if ( type === "error" ) {								complete(									// file: protocol always yields status 0; see #8605, #14207									xhr.status,									xhr.statusText								);							} else {								complete(									xhrSuccessStatus[ xhr.status ] || xhr.status,									xhr.statusText,									// Support: IE9									// Accessing binary-data responseText throws an exception									// (#11426)									typeof xhr.responseText === "string" ? {										text: xhr.responseText									} : undefined,									xhr.getAllResponseHeaders()								);							}						}					};				};				// Listen to events				xhr.onload = callback();				xhr.onerror = callback("error");				// Create the abort callback				callback = xhrCallbacks[ id ] = callback("abort");				try {					// Do send the request (this may raise an exception)					xhr.send( options.hasContent &amp;&amp; options.data || null );				} catch ( e ) {					// #14683: Only rethrow if this hasn''t been notified as an error yet					if ( callback ) {						throw e;					}				}			},			abort: function() {				if ( callback ) {					callback();				}			}		};	}});// Install script dataTypejQuery.ajaxSetup({	accepts: {		script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"	},	contents: {		script: /(?:java|ecma)script/	},	converters: {		"text script": function( text ) {			jQuery.globalEval( text );			return text;		}	}});// Handle cache''s special case and crossDomainjQuery.ajaxPrefilter( "script", function( s ) {	if ( s.cache === undefined ) {		s.cache = false;	}	if ( s.crossDomain ) {		s.type = "GET";	}});// Bind script tag hack transportjQuery.ajaxTransport( "script", function( s ) {	// This transport only deals with cross domain requests	if ( s.crossDomain ) {		var script, callback;		return {			send: function( _, complete ) {				script = jQuery("&lt;script&gt;").prop({					async: true,					charset: s.scriptCharset,					src: s.url				}).on(					"load error",					callback = function( evt ) {						script.remove();						callback = null;						if ( evt ) {							complete( evt.type === "error" ? 404 : 200, evt.type );						}					}				);				document.head.appendChild( script[ 0 ] );			},			abort: function() {				if ( callback ) {					callback();				}			}		};	}});var oldCallbacks = [],	rjsonp = /(=)\?(?=&amp;|$)|\?\?/;// Default jsonp settingsjQuery.ajaxSetup({	jsonp: "callback",	jsonpCallback: function() {		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );		this[ callback ] = true;		return callback;	}});// Detect, normalize options and install callbacks for jsonp requestsjQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {	var callbackName, overwritten, responseContainer,		jsonProp = s.jsonp !== false &amp;&amp; ( rjsonp.test( s.url ) ?			"url" :			typeof s.data === "string" &amp;&amp; !( s.contentType || "" ).indexOf("application/x-www-form-urlencoded") &amp;&amp; rjsonp.test( s.data ) &amp;&amp; "data"		);	// Handle iff the expected data type is "jsonp" or we have a parameter to set	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {		// Get callback name, remembering preexisting value associated with it		callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?			s.jsonpCallback() :			s.jsonpCallback;		// Insert callback into url or form data		if ( jsonProp ) {			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );		} else if ( s.jsonp !== false ) {			s.url += ( rquery.test( s.url ) ? "&amp;" : "?" ) + s.jsonp + "=" + callbackName;		}		// Use data converter to retrieve json after script execution		s.converters["script json"] = function() {			if ( !responseContainer ) {				jQuery.error( callbackName + " was not called" );			}			return responseContainer[ 0 ];		};		// force json dataType		s.dataTypes[ 0 ] = "json";		// Install callback		overwritten = window[ callbackName ];		window[ callbackName ] = function() {			responseContainer = arguments;		};		// Clean-up function (fires after converters)		jqXHR.always(function() {			// Restore preexisting value			window[ callbackName ] = overwritten;			// Save back as free			if ( s[ callbackName ] ) {				// make sure that re-using the options doesn''t screw things around				s.jsonpCallback = originalSettings.jsonpCallback;				// save the callback name for future use				oldCallbacks.push( callbackName );			}			// Call if it was a function and we have a response			if ( responseContainer &amp;&amp; jQuery.isFunction( overwritten ) ) {				overwritten( responseContainer[ 0 ] );			}			responseContainer = overwritten = undefined;		});		// Delegate to script		return "script";	}});// data: string of html// context (optional): If specified, the fragment will be created in this context, defaults to document// keepScripts (optional): If true, will include scripts passed in the html stringjQuery.parseHTML = function( data, context, keepScripts ) {	if ( !data || typeof data !== "string" ) {		return null;	}	if ( typeof context === "boolean" ) {		keepScripts = context;		context = false;	}	context = context || document;	var parsed = rsingleTag.exec( data ),		scripts = !keepScripts &amp;&amp; [];	// Single tag	if ( parsed ) {		return [ context.createElement( parsed[1] ) ];	}	parsed = jQuery.buildFragment( [ data ], context, scripts );	if ( scripts &amp;&amp; scripts.length ) {		jQuery( scripts ).remove();	}	return jQuery.merge( [], parsed.childNodes );};// Keep a copy of the old load methodvar _load = jQuery.fn.load;/** * Load a url into a page */jQuery.fn.load = function( url, params, callback ) {	if ( typeof url !== "string" &amp;&amp; _load ) {		return _load.apply( this, arguments );	}	var selector, type, response,		self = this,		off = url.indexOf(" ");	if ( off &gt;= 0 ) {		selector = jQuery.trim( url.slice( off ) );		url = url.slice( 0, off );	}	// If it''s a function	if ( jQuery.isFunction( params ) ) {		// We assume that it''s the callback		callback = params;		params = undefined;	// Otherwise, build a param string	} else if ( params &amp;&amp; typeof params === "object" ) {		type = "POST";	}	// If we have elements to modify, make the request	if ( self.length &gt; 0 ) {		jQuery.ajax({			url: url,			// if "type" variable is undefined, then "GET" method will be used			type: type,			dataType: "html",			data: params		}).done(function( responseText ) {			// Save response for use in complete callback			response = arguments;			self.html( selector ?				// If a selector was specified, locate the right elements in a dummy div				// Exclude scripts to avoid IE ''Permission Denied'' errors				jQuery("&lt;div&gt;").append( jQuery.parseHTML( responseText ) ).find( selector ) :				// Otherwise use the full result				responseText );		}).complete( callback &amp;&amp; function( jqXHR, status ) {			self.each( callback, response || [ jqXHR.responseText, status, jqXHR ] );		});	}	return this;};// Attach a bunch of functions for handling common AJAX eventsjQuery.each( [ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend" ], function( i, type ) {	jQuery.fn[ type ] = function( fn ) {		return this.on( type, fn );	};});jQuery.expr.filters.animated = function( elem ) {	return jQuery.grep(jQuery.timers, function( fn ) {		return elem === fn.elem;	}).length;};var docElem = window.document.documentElement;/** * Gets a window from an element */function getWindow( elem ) {	return jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 &amp;&amp; elem.defaultView;}jQuery.offset = {	setOffset: function( elem, options, i ) {		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,			position = jQuery.css( elem, "position" ),			curElem = jQuery( elem ),			props = {};		// Set position first, in-case top/left are set even on static elem		if ( position === "static" ) {			elem.style.position = "relative";		}		curOffset = curElem.offset();		curCSSTop = jQuery.css( elem, "top" );		curCSSLeft = jQuery.css( elem, "left" );		calculatePosition = ( position === "absolute" || position === "fixed" ) &amp;&amp;			( curCSSTop + curCSSLeft ).indexOf("auto") &gt; -1;		// Need to be able to calculate position if either		// top or left is auto and position is either absolute or fixed		if ( calculatePosition ) {			curPosition = curElem.position();			curTop = curPosition.top;			curLeft = curPosition.left;		} else {			curTop = parseFloat( curCSSTop ) || 0;			curLeft = parseFloat( curCSSLeft ) || 0;		}		if ( jQuery.isFunction( options ) ) {			options = options.call( elem, i, curOffset );		}		if ( options.top != null ) {			props.top = ( options.top - curOffset.top ) + curTop;		}		if ( options.left != null ) {			props.left = ( options.left - curOffset.left ) + curLeft;		}		if ( "using" in options ) {			options.using.call( elem, props );		} else {			curElem.css( props );		}	}};jQuery.fn.extend({	offset: function( options ) {		if ( arguments.length ) {			return options === undefined ?				this :				this.each(function( i ) {					jQuery.offset.setOffset( this, options, i );				});		}		var docElem, win,			elem = this[ 0 ],			box = { top: 0, left: 0 },			doc = elem &amp;&amp; elem.ownerDocument;		if ( !doc ) {			return;		}		docElem = doc.documentElement;		// Make sure it''s not a disconnected DOM node		if ( !jQuery.contains( docElem, elem ) ) {			return box;		}		// Support: BlackBerry 5, iOS 3 (original iPhone)		// If we don''t have gBCR, just use 0,0 rather than error		if ( typeof elem.getBoundingClientRect !== strundefined ) {			box = elem.getBoundingClientRect();		}		win = getWindow( doc );		return {			top: box.top + win.pageYOffset - docElem.clientTop,			left: box.left + win.pageXOffset - docElem.clientLeft		};	},	position: function() {		if ( !this[ 0 ] ) {			return;		}		var offsetParent, offset,			elem = this[ 0 ],			parentOffset = { top: 0, left: 0 };		// Fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is its only offset parent		if ( jQuery.css( elem, "position" ) === "fixed" ) {			// Assume getBoundingClientRect is there when computed position is fixed			offset = elem.getBoundingClientRect();		} else {			// Get *real* offsetParent			offsetParent = this.offsetParent();			// Get correct offsets			offset = this.offset();			if ( !jQuery.nodeName( offsetParent[ 0 ], "html" ) ) {				parentOffset = offsetParent.offset();			}			// Add offsetParent borders			parentOffset.top += jQuery.css( offsetParent[ 0 ], "borderTopWidth", true );			parentOffset.left += jQuery.css( offsetParent[ 0 ], "borderLeftWidth", true );		}		// Subtract parent offsets and element margins		return {			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )		};	},	offsetParent: function() {		return this.map(function() {			var offsetParent = this.offsetParent || docElem;			while ( offsetParent &amp;&amp; ( !jQuery.nodeName( offsetParent, "html" ) &amp;&amp; jQuery.css( offsetParent, "position" ) === "static" ) ) {				offsetParent = offsetParent.offsetParent;			}			return offsetParent || docElem;		});	}});// Create scrollLeft and scrollTop methodsjQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {	var top = "pageYOffset" === prop;	jQuery.fn[ method ] = function( val ) {		return access( this, function( elem, method, val ) {			var win = getWindow( elem );			if ( val === undefined ) {				return win ? win[ prop ] : elem[ method ];			}			if ( win ) {				win.scrollTo(					!top ? val : window.pageXOffset,					top ? val : window.pageYOffset				);			} else {				elem[ method ] = val;			}		}, method, val, arguments.length, null );	};});// Support: Safari&lt;7+, Chrome&lt;37+// Add the top/left cssHooks using jQuery.fn.position// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084// Blink bug: https://code.google.com/p/chromium/issues/detail?id=229280// getComputedStyle returns percent when specified for top/left/bottom/right;// rather than make the css module depend on the offset module, just check for it herejQuery.each( [ "top", "left" ], function( i, prop ) {	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,		function( elem, computed ) {			if ( computed ) {				computed = curCSS( elem, prop );				// If curCSS returns percentage, fallback to offset				return rnumnonpx.test( computed ) ?					jQuery( elem ).position()[ prop ] + "px" :					computed;			}		}	);});// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methodsjQuery.each( { Height: "height", Width: "width" }, function( name, type ) {	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name }, function( defaultExtra, funcName ) {		// Margin is only for outerHeight, outerWidth		jQuery.fn[ funcName ] = function( margin, value ) {			var chainable = arguments.length &amp;&amp; ( defaultExtra || typeof margin !== "boolean" ),				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );			return access( this, function( elem, type, value ) {				var doc;				if ( jQuery.isWindow( elem ) ) {					// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there					// isn''t a whole lot we can do. See pull request at this URL for discussion:					// https://github.com/jquery/jquery/pull/764					return elem.document.documentElement[ "client" + name ];				}				// Get document width or height				if ( elem.nodeType === 9 ) {					doc = elem.documentElement;					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],					// whichever is greatest					return Math.max(						elem.body[ "scroll" + name ], doc[ "scroll" + name ],						elem.body[ "offset" + name ], doc[ "offset" + name ],						doc[ "client" + name ]					);				}				return value === undefined ?					// Get width or height on the element, requesting but not forcing parseFloat					jQuery.css( elem, type, extra ) :					// Set width or height on the element					jQuery.style( elem, type, value, extra );			}, type, chainable ? margin : undefined, chainable, null );		};	});});// The number of elements contained in the matched element setjQuery.fn.size = function() {	return this.length;};jQuery.fn.andSelf = jQuery.fn.addBack;// Register as a named AMD module, since jQuery can be concatenated with other// files that may use define, but not via a proper concatenation script that// understands anonymous AMD modules. A named AMD is safest and most robust// way to register. Lowercase jquery is used because AMD module names are// derived from file names, and jQuery is normally delivered in a lowercase// file name. Do this after creating the global so that if an AMD module wants// to call noConflict to hide this version of jQuery, it will work.// Note that for maximum portability, libraries that are not jQuery should// declare themselves as anonymous modules, and avoid setting a global if an// AMD loader is present. jQuery is a special case. For more information, see// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anonif ( typeof define === "function" &amp;&amp; define.amd ) {	define( "jquery", [], function() {		return jQuery;	});}var	// Map over jQuery in case of overwrite	_jQuery = window.jQuery,	// Map over the $ in case of overwrite	_$ = window.$;jQuery.noConflict = function( deep ) {	if ( window.$ === jQuery ) {		window.$ = _$;	}	if ( deep &amp;&amp; window.jQuery === jQuery ) {		window.jQuery = _jQuery;	}	return jQuery;};// Expose jQuery and $ identifiers, even in AMD// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)// and CommonJS for browser emulators (#13566)if ( typeof noGlobal === strundefined ) {	window.jQuery = window.$ = jQuery;}return jQuery;}));'</body></methods><methods><class-id>JQuery.JQ2DevelopmentLibrary</class-id> <category>accessing</category><body package="JQuery-Core">selectorsToInclude	^ #(jQueryJs)</body></methods><methods><class-id>JQuery.JQDeploymentLibrary</class-id> <category>accessing</category><body package="JQuery-Core">selectorsToInclude	^ #(jQueryJs)</body></methods><methods><class-id>JQuery.JQDeploymentLibrary</class-id> <category>uploaded</category><body package="JQuery-Core">jQueryJs	^ '/*! jQuery v1.11.3 | (c) 2005, 2015 jQuery Foundation, Inc. | jquery.org/license */!function(a,b){"object"==typeof module&amp;&amp;"object"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error("jQuery requires a window with a document");return b(a)}:b(a)}("undefined"!=typeof window?window:this,function(a,b){var c=[],d=c.slice,e=c.concat,f=c.push,g=c.indexOf,h={},i=h.toString,j=h.hasOwnProperty,k={},l="1.11.3",m=function(a,b){return new m.fn.init(a,b)},n=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,o=/^-ms-/,p=/-([\da-z])/gi,q=function(a,b){return b.toUpperCase()};m.fn=m.prototype={jquery:l,constructor:m,selector:"",length:0,toArray:function(){return d.call(this)},get:function(a){return null!=a?0&gt;a?this[a+this.length]:this[a]:d.call(this)},pushStack:function(a){var b=m.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a,b){return m.each(this,a,b)},map:function(a){return this.pushStack(m.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0&gt;a?b:0);return this.pushStack(c&gt;=0&amp;&amp;b&gt;c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:c.sort,splice:c.splice},m.extend=m.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for("boolean"==typeof g&amp;&amp;(j=g,g=arguments[h]||{},h++),"object"==typeof g||m.isFunction(g)||(g={}),h===i&amp;&amp;(g=this,h--);i&gt;h;h++)if(null!=(e=arguments[h]))for(d in e)a=g[d],c=e[d],g!==c&amp;&amp;(j&amp;&amp;c&amp;&amp;(m.isPlainObject(c)||(b=m.isArray(c)))?(b?(b=!1,f=a&amp;&amp;m.isArray(a)?a:[]):f=a&amp;&amp;m.isPlainObject(a)?a:{},g[d]=m.extend(j,f,c)):void 0!==c&amp;&amp;(g[d]=c));return g},m.extend({expando:"jQuery"+(l+Math.random()).replace(/\D/g,""),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return"function"===m.type(a)},isArray:Array.isArray||function(a){return"array"===m.type(a)},isWindow:function(a){return null!=a&amp;&amp;a==a.window},isNumeric:function(a){return!m.isArray(a)&amp;&amp;a-parseFloat(a)+1&gt;=0},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},isPlainObject:function(a){var b;if(!a||"object"!==m.type(a)||a.nodeType||m.isWindow(a))return!1;try{if(a.constructor&amp;&amp;!j.call(a,"constructor")&amp;&amp;!j.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}if(k.ownLast)for(b in a)return j.call(a,b);for(b in a);return void 0===b||j.call(a,b)},type:function(a){return null==a?a+"":"object"==typeof a||"function"==typeof a?h[i.call(a)]||"object":typeof a},globalEval:function(b){b&amp;&amp;m.trim(b)&amp;&amp;(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(o,"ms-").replace(p,q)},nodeName:function(a,b){return a.nodeName&amp;&amp;a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b,c){var d,e=0,f=a.length,g=r(a);if(c){if(g){for(;f&gt;e;e++)if(d=b.apply(a[e],c),d===!1)break}else for(e in a)if(d=b.apply(a[e],c),d===!1)break}else if(g){for(;f&gt;e;e++)if(d=b.call(a[e],e,a[e]),d===!1)break}else for(e in a)if(d=b.call(a[e],e,a[e]),d===!1)break;return a},trim:function(a){return null==a?"":(a+"").replace(n,"")},makeArray:function(a,b){var c=b||[];return null!=a&amp;&amp;(r(Object(a))?m.merge(c,"string"==typeof a?[a]:a):f.call(c,a)),c},inArray:function(a,b,c){var d;if(b){if(g)return g.call(b,a,c);for(d=b.length,c=c?0&gt;c?Math.max(0,d+c):c:0;d&gt;c;c++)if(c in b&amp;&amp;b[c]===a)return c}return-1},merge:function(a,b){var c=+b.length,d=0,e=a.length;while(c&gt;d)a[e++]=b[d++];if(c!==c)while(void 0!==b[d])a[e++]=b[d++];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g&gt;f;f++)d=!b(a[f],f),d!==h&amp;&amp;e.push(a[f]);return e},map:function(a,b,c){var d,f=0,g=a.length,h=r(a),i=[];if(h)for(;g&gt;f;f++)d=b(a[f],f,c),null!=d&amp;&amp;i.push(d);else for(f in a)d=b(a[f],f,c),null!=d&amp;&amp;i.push(d);return e.apply([],i)},guid:1,proxy:function(a,b){var c,e,f;return"string"==typeof b&amp;&amp;(f=a[b],b=a,a=f),m.isFunction(a)?(c=d.call(arguments,2),e=function(){return a.apply(b||this,c.concat(d.call(arguments)))},e.guid=a.guid=a.guid||m.guid++,e):void 0},now:function(){return+new Date},support:k}),m.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(a,b){h["[object "+b+"]"]=b.toLowerCase()});function r(a){var b="length"in a&amp;&amp;a.length,c=m.type(a);return"function"===c||m.isWindow(a)?!1:1===a.nodeType&amp;&amp;b?!0:"array"===c||0===b||"number"==typeof b&amp;&amp;b&gt;0&amp;&amp;b-1 in a}var s=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u="sizzle"+1*new Date,v=a.document,w=0,x=0,y=ha(),z=ha(),A=ha(),B=function(a,b){return a===b&amp;&amp;(l=!0),0},C=1&lt;&lt;31,D={}.hasOwnProperty,E=[],F=E.pop,G=E.push,H=E.push,I=E.slice,J=function(a,b){for(var c=0,d=a.length;d&gt;c;c++)if(a[c]===b)return c;return-1},K="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",L="[\\x20\\t\\r\\n\\f]",M="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",N=M.replace("w","w#"),O="\\["+L+"*("+M+")(?:"+L+"*([*^$|!~]?=)"+L+"*(?:''((?:\\\\.|[^\\\\''])*)''|\"((?:\\\\.|[^\\\\\"])*)\"|("+N+"))|)"+L+"*\\]",P=":("+M+")(?:\\(((''((?:\\\\.|[^\\\\''])*)''|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+O+")*)|.*)\\)|)",Q=new RegExp(L+"+","g"),R=new RegExp("^"+L+"+|((?:^|[^\\\\])(?:\\\\.)*)"+L+"+$","g"),S=new RegExp("^"+L+"*,"+L+"*"),T=new RegExp("^"+L+"*([&gt;+~]|"+L+")"+L+"*"),U=new RegExp("="+L+"*([^\\]''\"]*?)"+L+"*\\]","g"),V=new RegExp(P),W=new RegExp("^"+N+"$"),X={ID:new RegExp("^#("+M+")"),CLASS:new RegExp("^\\.("+M+")"),TAG:new RegExp("^("+M.replace("w","w*")+")"),ATTR:new RegExp("^"+O),PSEUDO:new RegExp("^"+P),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+L+"*(even|odd|(([+-]|)(\\d*)n|)"+L+"*(?:([+-]|)"+L+"*(\\d+)|))"+L+"*\\)|)","i"),bool:new RegExp("^(?:"+K+")$","i"),needsContext:new RegExp("^"+L+"*[&gt;+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+L+"*((?:-\\d)?\\d*)"+L+"*\\)|)(?=[^-]|$)","i")},Y=/^(?:input|select|textarea|button)$/i,Z=/^h\d$/i,$=/^[^{]+\{\s*\[native \w/,_=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,aa=/[+~]/,ba=/''|\\/g,ca=new RegExp("\\\\([\\da-f]{1,6}"+L+"?|("+L+")|.)","ig"),da=function(a,b,c){var d="0x"+b-65536;return d!==d||c?b:0&gt;d?String.fromCharCode(d+65536):String.fromCharCode(d&gt;&gt;10|55296,1023&amp;d|56320)},ea=function(){m()};try{H.apply(E=I.call(v.childNodes),v.childNodes),E[v.childNodes.length].nodeType}catch(fa){H={apply:E.length?function(a,b){G.apply(a,I.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function ga(a,b,d,e){var f,h,j,k,l,o,r,s,w,x;if((b?b.ownerDocument||b:v)!==n&amp;&amp;m(b),b=b||n,d=d||[],k=b.nodeType,"string"!=typeof a||!a||1!==k&amp;&amp;9!==k&amp;&amp;11!==k)return d;if(!e&amp;&amp;p){if(11!==k&amp;&amp;(f=_.exec(a)))if(j=f[1]){if(9===k){if(h=b.getElementById(j),!h||!h.parentNode)return d;if(h.id===j)return d.push(h),d}else if(b.ownerDocument&amp;&amp;(h=b.ownerDocument.getElementById(j))&amp;&amp;t(b,h)&amp;&amp;h.id===j)return d.push(h),d}else{if(f[2])return H.apply(d,b.getElementsByTagName(a)),d;if((j=f[3])&amp;&amp;c.getElementsByClassName)return H.apply(d,b.getElementsByClassName(j)),d}if(c.qsa&amp;&amp;(!q||!q.test(a))){if(s=r=u,w=b,x=1!==k&amp;&amp;a,1===k&amp;&amp;"object"!==b.nodeName.toLowerCase()){o=g(a),(r=b.getAttribute("id"))?s=r.replace(ba,"\\$&amp;"):b.setAttribute("id",s),s="[id=''"+s+"''] ",l=o.length;while(l--)o[l]=s+ra(o[l]);w=aa.test(a)&amp;&amp;pa(b.parentNode)||b,x=o.join(",")}if(x)try{return H.apply(d,w.querySelectorAll(x)),d}catch(y){}finally{r||b.removeAttribute("id")}}}return i(a.replace(R,"$1"),b,d,e)}function ha(){var a=[];function b(c,e){return a.push(c+" ")&gt;d.cacheLength&amp;&amp;delete b[a.shift()],b[c+" "]=e}return b}function ia(a){return a[u]=!0,a}function ja(a){var b=n.createElement("div");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&amp;&amp;b.parentNode.removeChild(b),b=null}}function ka(a,b){var c=a.split("|"),e=a.length;while(e--)d.attrHandle[c[e]]=b}function la(a,b){var c=b&amp;&amp;a,d=c&amp;&amp;1===a.nodeType&amp;&amp;1===b.nodeType&amp;&amp;(~b.sourceIndex||C)-(~a.sourceIndex||C);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function ma(a){return function(b){var c=b.nodeName.toLowerCase();return"input"===c&amp;&amp;b.type===a}}function na(a){return function(b){var c=b.nodeName.toLowerCase();return("input"===c||"button"===c)&amp;&amp;b.type===a}}function oa(a){return ia(function(b){return b=+b,ia(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&amp;&amp;(c[e]=!(d[e]=c[e]))})})}function pa(a){return a&amp;&amp;"undefined"!=typeof a.getElementsByTagName&amp;&amp;a}c=ga.support={},f=ga.isXML=function(a){var b=a&amp;&amp;(a.ownerDocument||a).documentElement;return b?"HTML"!==b.nodeName:!1},m=ga.setDocument=function(a){var b,e,g=a?a.ownerDocument||a:v;return g!==n&amp;&amp;9===g.nodeType&amp;&amp;g.documentElement?(n=g,o=g.documentElement,e=g.defaultView,e&amp;&amp;e!==e.top&amp;&amp;(e.addEventListener?e.addEventListener("unload",ea,!1):e.attachEvent&amp;&amp;e.attachEvent("onunload",ea)),p=!f(g),c.attributes=ja(function(a){return a.className="i",!a.getAttribute("className")}),c.getElementsByTagName=ja(function(a){return a.appendChild(g.createComment("")),!a.getElementsByTagName("*").length}),c.getElementsByClassName=$.test(g.getElementsByClassName),c.getById=ja(function(a){return o.appendChild(a).id=u,!g.getElementsByName||!g.getElementsByName(u).length}),c.getById?(d.find.ID=function(a,b){if("undefined"!=typeof b.getElementById&amp;&amp;p){var c=b.getElementById(a);return c&amp;&amp;c.parentNode?[c]:[]}},d.filter.ID=function(a){var b=a.replace(ca,da);return function(a){return a.getAttribute("id")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(ca,da);return function(a){var c="undefined"!=typeof a.getAttributeNode&amp;&amp;a.getAttributeNode("id");return c&amp;&amp;c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return"undefined"!=typeof b.getElementsByTagName?b.getElementsByTagName(a):c.qsa?b.querySelectorAll(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if("*"===a){while(c=f[e++])1===c.nodeType&amp;&amp;d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&amp;&amp;function(a,b){return p?b.getElementsByClassName(a):void 0},r=[],q=[],(c.qsa=$.test(g.querySelectorAll))&amp;&amp;(ja(function(a){o.appendChild(a).innerHTML="&lt;a id=''"+u+"''&gt;&lt;/a&gt;&lt;select id=''"+u+"-\f]'' msallowcapture=''''&gt;&lt;option selected=''''&gt;&lt;/option&gt;&lt;/select&gt;",a.querySelectorAll("[msallowcapture^='''']").length&amp;&amp;q.push("[*^$]="+L+"*(?:''''|\"\")"),a.querySelectorAll("[selected]").length||q.push("\\["+L+"*(?:value|"+K+")"),a.querySelectorAll("[id~="+u+"-]").length||q.push("~="),a.querySelectorAll(":checked").length||q.push(":checked"),a.querySelectorAll("a#"+u+"+*").length||q.push(".#.+[+~]")}),ja(function(a){var b=g.createElement("input");b.setAttribute("type","hidden"),a.appendChild(b).setAttribute("name","D"),a.querySelectorAll("[name=d]").length&amp;&amp;q.push("name"+L+"*[*^$|!~]?="),a.querySelectorAll(":enabled").length||q.push(":enabled",":disabled"),a.querySelectorAll("*,:x"),q.push(",.*:")})),(c.matchesSelector=$.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&amp;&amp;ja(function(a){c.disconnectedMatch=s.call(a,"div"),s.call(a,"[s!='''']:x"),r.push("!=",P)}),q=q.length&amp;&amp;new RegExp(q.join("|")),r=r.length&amp;&amp;new RegExp(r.join("|")),b=$.test(o.compareDocumentPosition),t=b||$.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&amp;&amp;b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&amp;&amp;16&amp;a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&amp;d||!c.sortDetached&amp;&amp;b.compareDocumentPosition(a)===d?a===g||a.ownerDocument===v&amp;&amp;t(v,a)?-1:b===g||b.ownerDocument===v&amp;&amp;t(v,b)?1:k?J(k,a)-J(k,b):0:4&amp;d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,e=a.parentNode,f=b.parentNode,h=[a],i=[b];if(!e||!f)return a===g?-1:b===g?1:e?-1:f?1:k?J(k,a)-J(k,b):0;if(e===f)return la(a,b);c=a;while(c=c.parentNode)h.unshift(c);c=b;while(c=c.parentNode)i.unshift(c);while(h[d]===i[d])d++;return d?la(h[d],i[d]):h[d]===v?-1:i[d]===v?1:0},g):n},ga.matches=function(a,b){return ga(a,null,null,b)},ga.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&amp;&amp;m(a),b=b.replace(U,"=''$1'']"),!(!c.matchesSelector||!p||r&amp;&amp;r.test(b)||q&amp;&amp;q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&amp;&amp;11!==a.document.nodeType)return d}catch(e){}return ga(b,n,null,[a]).length&gt;0},ga.contains=function(a,b){return(a.ownerDocument||a)!==n&amp;&amp;m(a),t(a,b)},ga.attr=function(a,b){(a.ownerDocument||a)!==n&amp;&amp;m(a);var e=d.attrHandle[b.toLowerCase()],f=e&amp;&amp;D.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&amp;&amp;f.specified?f.value:null},ga.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)},ga.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&amp;&amp;a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&amp;&amp;(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=ga.getText=function(a){var b,c="",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if("string"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=ga.selectors={cacheLength:50,createPseudo:ia,match:X,attrHandle:{},find:{},relative:{"&gt;":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(ca,da),a[3]=(a[3]||a[4]||a[5]||"").replace(ca,da),"~="===a[2]&amp;&amp;(a[3]=" "+a[3]+" "),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),"nth"===a[1].slice(0,3)?(a[3]||ga.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*("even"===a[3]||"odd"===a[3])),a[5]=+(a[7]+a[8]||"odd"===a[3])):a[3]&amp;&amp;ga.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&amp;&amp;a[2];return X.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||"":c&amp;&amp;V.test(c)&amp;&amp;(b=g(c,!0))&amp;&amp;(b=c.indexOf(")",c.length-b)-c.length)&amp;&amp;(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(ca,da).toLowerCase();return"*"===a?function(){return!0}:function(a){return a.nodeName&amp;&amp;a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+" "];return b||(b=new RegExp("(^|"+L+")"+a+"("+L+"|$)"))&amp;&amp;y(a,function(a){return b.test("string"==typeof a.className&amp;&amp;a.className||"undefined"!=typeof a.getAttribute&amp;&amp;a.getAttribute("class")||"")})},ATTR:function(a,b,c){return function(d){var e=ga.attr(d,a);return null==e?"!="===b:b?(e+="","="===b?e===c:"!="===b?e!==c:"^="===b?c&amp;&amp;0===e.indexOf(c):"*="===b?c&amp;&amp;e.indexOf(c)&gt;-1:"$="===b?c&amp;&amp;e.slice(-c.length)===c:"~="===b?(" "+e.replace(Q," ")+" ").indexOf(c)&gt;-1:"|="===b?e===c||e.slice(0,c.length+1)===c+"-":!1):!0}},CHILD:function(a,b,c,d,e){var f="nth"!==a.slice(0,3),g="last"!==a.slice(-4),h="of-type"===b;return 1===d&amp;&amp;0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?"nextSibling":"previousSibling",q=b.parentNode,r=h&amp;&amp;b.nodeName.toLowerCase(),s=!i&amp;&amp;!h;if(q){if(f){while(p){l=b;while(l=l[p])if(h?l.nodeName.toLowerCase()===r:1===l.nodeType)return!1;o=p="only"===a&amp;&amp;!o&amp;&amp;"nextSibling"}return!0}if(o=[g?q.firstChild:q.lastChild],g&amp;&amp;s){k=q[u]||(q[u]={}),j=k[a]||[],n=j[0]===w&amp;&amp;j[1],m=j[0]===w&amp;&amp;j[2],l=n&amp;&amp;q.childNodes[n];while(l=++n&amp;&amp;l&amp;&amp;l[p]||(m=n=0)||o.pop())if(1===l.nodeType&amp;&amp;++m&amp;&amp;l===b){k[a]=[w,n,m];break}}else if(s&amp;&amp;(j=(b[u]||(b[u]={}))[a])&amp;&amp;j[0]===w)m=j[1];else while(l=++n&amp;&amp;l&amp;&amp;l[p]||(m=n=0)||o.pop())if((h?l.nodeName.toLowerCase()===r:1===l.nodeType)&amp;&amp;++m&amp;&amp;(s&amp;&amp;((l[u]||(l[u]={}))[a]=[w,m]),l===b))break;return m-=e,m===d||m%d===0&amp;&amp;m/d&gt;=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||ga.error("unsupported pseudo: "+a);return e[u]?e(b):e.length&gt;1?(c=[a,a,"",b],d.setFilters.hasOwnProperty(a.toLowerCase())?ia(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=J(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:ia(function(a){var b=[],c=[],d=h(a.replace(R,"$1"));return d[u]?ia(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&amp;&amp;(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),b[0]=null,!c.pop()}}),has:ia(function(a){return function(b){return ga(a,b).length&gt;0}}),contains:ia(function(a){return a=a.replace(ca,da),function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)&gt;-1}}),lang:ia(function(a){return W.test(a||"")||ga.error("unsupported lang: "+a),a=a.replace(ca,da).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute("xml:lang")||b.getAttribute("lang"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+"-");while((b=b.parentNode)&amp;&amp;1===b.nodeType);return!1}}),target:function(b){var c=a.location&amp;&amp;a.location.hash;return c&amp;&amp;c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&amp;&amp;(!n.hasFocus||n.hasFocus())&amp;&amp;!!(a.type||a.href||~a.tabIndex)},enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return"input"===b&amp;&amp;!!a.checked||"option"===b&amp;&amp;!!a.selected},selected:function(a){return a.parentNode&amp;&amp;a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType&lt;6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return Z.test(a.nodeName)},input:function(a){return Y.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return"input"===b&amp;&amp;"button"===a.type||"button"===b},text:function(a){var b;return"input"===a.nodeName.toLowerCase()&amp;&amp;"text"===a.type&amp;&amp;(null==(b=a.getAttribute("type"))||"text"===b.toLowerCase())},first:oa(function(){return[0]}),last:oa(function(a,b){return[b-1]}),eq:oa(function(a,b,c){return[0&gt;c?c+b:c]}),even:oa(function(a,b){for(var c=0;b&gt;c;c+=2)a.push(c);return a}),odd:oa(function(a,b){for(var c=1;b&gt;c;c+=2)a.push(c);return a}),lt:oa(function(a,b,c){for(var d=0&gt;c?c+b:c;--d&gt;=0;)a.push(d);return a}),gt:oa(function(a,b,c){for(var d=0&gt;c?c+b:c;++d&lt;b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=ma(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=na(b);function qa(){}qa.prototype=d.filters=d.pseudos,d.setFilters=new qa,g=ga.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+" "];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){(!c||(e=S.exec(h)))&amp;&amp;(e&amp;&amp;(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=T.exec(h))&amp;&amp;(c=e.shift(),f.push({value:c,type:e[0].replace(R," ")}),h=h.slice(c.length));for(g in d.filter)!(e=X[g].exec(h))||j[g]&amp;&amp;!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?ga.error(a):z(a,i).slice(0)};function ra(a){for(var b=0,c=a.length,d="";c&gt;b;b++)d+=a[b].value;return d}function sa(a,b,c){var d=b.dir,e=c&amp;&amp;"parentNode"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&amp;&amp;a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(i=b[u]||(b[u]={}),(h=i[d])&amp;&amp;h[0]===w&amp;&amp;h[1]===f)return j[2]=h[2];if(i[d]=j,j[2]=a(b,c,g))return!0}}}function ta(a){return a.length&gt;1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function ua(a,b,c){for(var d=0,e=b.length;e&gt;d;d++)ga(a,b[d],c);return c}function va(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i&gt;h;h++)(f=a[h])&amp;&amp;(!c||c(f,d,e))&amp;&amp;(g.push(f),j&amp;&amp;b.push(h));return g}function wa(a,b,c,d,e,f){return d&amp;&amp;!d[u]&amp;&amp;(d=wa(d)),e&amp;&amp;!e[u]&amp;&amp;(e=wa(e,f)),ia(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||ua(b||"*",h.nodeType?[h]:h,[]),q=!a||!f&amp;&amp;b?p:va(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&amp;&amp;c(q,r,h,i),d){j=va(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&amp;&amp;(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&amp;&amp;j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&amp;&amp;(j=e?J(f,l):m[k])&gt;-1&amp;&amp;(f[j]=!(g[j]=l))}}else r=va(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):H.apply(g,r)})}function xa(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[" "],i=g?1:0,k=sa(function(a){return a===b},h,!0),l=sa(function(a){return J(b,a)&gt;-1},h,!0),m=[function(a,c,d){var e=!g&amp;&amp;(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];f&gt;i;i++)if(c=d.relative[a[i].type])m=[sa(ta(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f&gt;e;e++)if(d.relative[a[e].type])break;return wa(i&gt;1&amp;&amp;ta(m),i&gt;1&amp;&amp;ra(a.slice(0,i-1).concat({value:" "===a[i-2].type?"*":""})).replace(R,"$1"),c,e&gt;i&amp;&amp;xa(a.slice(i,e)),f&gt;e&amp;&amp;xa(a=a.slice(e)),f&gt;e&amp;&amp;ra(a))}m.push(c)}return ta(m)}function ya(a,b){var c=b.length&gt;0,e=a.length&gt;0,f=function(f,g,h,i,k){var l,m,o,p=0,q="0",r=f&amp;&amp;[],s=[],t=j,u=f||e&amp;&amp;d.find.TAG("*",k),v=w+=null==t?1:Math.random()||.1,x=u.length;for(k&amp;&amp;(j=g!==n&amp;&amp;g);q!==x&amp;&amp;null!=(l=u[q]);q++){if(e&amp;&amp;l){m=0;while(o=a[m++])if(o(l,g,h)){i.push(l);break}k&amp;&amp;(w=v)}c&amp;&amp;((l=!o&amp;&amp;l)&amp;&amp;p--,f&amp;&amp;r.push(l))}if(p+=q,c&amp;&amp;q!==p){m=0;while(o=b[m++])o(r,s,g,h);if(f){if(p&gt;0)while(q--)r[q]||s[q]||(s[q]=F.call(i));s=va(s)}H.apply(i,s),k&amp;&amp;!f&amp;&amp;s.length&gt;0&amp;&amp;p+b.length&gt;1&amp;&amp;ga.uniqueSort(i)}return k&amp;&amp;(w=v,j=t),r};return c?ia(f):f}return h=ga.compile=function(a,b){var c,d=[],e=[],f=A[a+" "];if(!f){b||(b=g(a)),c=b.length;while(c--)f=xa(b[c]),f[u]?d.push(f):e.push(f);f=A(a,ya(e,d)),f.selector=a}return f},i=ga.select=function(a,b,e,f){var i,j,k,l,m,n="function"==typeof a&amp;&amp;a,o=!f&amp;&amp;g(a=n.selector||a);if(e=e||[],1===o.length){if(j=o[0]=o[0].slice(0),j.length&gt;2&amp;&amp;"ID"===(k=j[0]).type&amp;&amp;c.getById&amp;&amp;9===b.nodeType&amp;&amp;p&amp;&amp;d.relative[j[1].type]){if(b=(d.find.ID(k.matches[0].replace(ca,da),b)||[])[0],!b)return e;n&amp;&amp;(b=b.parentNode),a=a.slice(j.shift().value.length)}i=X.needsContext.test(a)?0:j.length;while(i--){if(k=j[i],d.relative[l=k.type])break;if((m=d.find[l])&amp;&amp;(f=m(k.matches[0].replace(ca,da),aa.test(j[0].type)&amp;&amp;pa(b.parentNode)||b))){if(j.splice(i,1),a=f.length&amp;&amp;ra(j),!a)return H.apply(e,f),e;break}}}return(n||h(a,o))(f,b,!p,e,aa.test(a)&amp;&amp;pa(b.parentNode)||b),e},c.sortStable=u.split("").sort(B).join("")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ja(function(a){return 1&amp;a.compareDocumentPosition(n.createElement("div"))}),ja(function(a){return a.innerHTML="&lt;a href=''#''&gt;&lt;/a&gt;","#"===a.firstChild.getAttribute("href")})||ka("type|href|height|width",function(a,b,c){return c?void 0:a.getAttribute(b,"type"===b.toLowerCase()?1:2)}),c.attributes&amp;&amp;ja(function(a){return a.innerHTML="&lt;input/&gt;",a.firstChild.setAttribute("value",""),""===a.firstChild.getAttribute("value")})||ka("value",function(a,b,c){return c||"input"!==a.nodeName.toLowerCase()?void 0:a.defaultValue}),ja(function(a){return null==a.getAttribute("disabled")})||ka(K,function(a,b,c){var d;return c?void 0:a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&amp;&amp;d.specified?d.value:null}),ga}(a);m.find=s,m.expr=s.selectors,m.expr[":"]=m.expr.pseudos,m.unique=s.uniqueSort,m.text=s.getText,m.isXMLDoc=s.isXML,m.contains=s.contains;var t=m.expr.match.needsContext,u=/^&lt;(\w+)\s*\/?&gt;(?:&lt;\/\1&gt;|)$/,v=/^.[^:#\[\.,]*$/;function w(a,b,c){if(m.isFunction(b))return m.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return m.grep(a,function(a){return a===b!==c});if("string"==typeof b){if(v.test(b))return m.filter(b,a,c);b=m.filter(b,a)}return m.grep(a,function(a){return m.inArray(a,b)&gt;=0!==c})}m.filter=function(a,b,c){var d=b[0];return c&amp;&amp;(a=":not("+a+")"),1===b.length&amp;&amp;1===d.nodeType?m.find.matchesSelector(d,a)?[d]:[]:m.find.matches(a,m.grep(b,function(a){return 1===a.nodeType}))},m.fn.extend({find:function(a){var b,c=[],d=this,e=d.length;if("string"!=typeof a)return this.pushStack(m(a).filter(function(){for(b=0;e&gt;b;b++)if(m.contains(d[b],this))return!0}));for(b=0;e&gt;b;b++)m.find(a,d[b],c);return c=this.pushStack(e&gt;1?m.unique(c):c),c.selector=this.selector?this.selector+" "+a:a,c},filter:function(a){return this.pushStack(w(this,a||[],!1))},not:function(a){return this.pushStack(w(this,a||[],!0))},is:function(a){return!!w(this,"string"==typeof a&amp;&amp;t.test(a)?m(a):a||[],!1).length}});var x,y=a.document,z=/^(?:\s*(&lt;[\w\W]+&gt;)[^&gt;]*|#([\w-]*))$/,A=m.fn.init=function(a,b){var c,d;if(!a)return this;if("string"==typeof a){if(c="&lt;"===a.charAt(0)&amp;&amp;"&gt;"===a.charAt(a.length-1)&amp;&amp;a.length&gt;=3?[null,a,null]:z.exec(a),!c||!c[1]&amp;&amp;b)return!b||b.jquery?(b||x).find(a):this.constructor(b).find(a);if(c[1]){if(b=b instanceof m?b[0]:b,m.merge(this,m.parseHTML(c[1],b&amp;&amp;b.nodeType?b.ownerDocument||b:y,!0)),u.test(c[1])&amp;&amp;m.isPlainObject(b))for(c in b)m.isFunction(this[c])?this[c](b[c]):this.attr(c,b[c]);return this}if(d=y.getElementById(c[2]),d&amp;&amp;d.parentNode){if(d.id!==c[2])return x.find(a);this.length=1,this[0]=d}return this.context=y,this.selector=a,this}return a.nodeType?(this.context=this[0]=a,this.length=1,this):m.isFunction(a)?"undefined"!=typeof x.ready?x.ready(a):a(m):(void 0!==a.selector&amp;&amp;(this.selector=a.selector,this.context=a.context),m.makeArray(a,this))};A.prototype=m.fn,x=m(y);var B=/^(?:parents|prev(?:Until|All))/,C={children:!0,contents:!0,next:!0,prev:!0};m.extend({dir:function(a,b,c){var d=[],e=a[b];while(e&amp;&amp;9!==e.nodeType&amp;&amp;(void 0===c||1!==e.nodeType||!m(e).is(c)))1===e.nodeType&amp;&amp;d.push(e),e=e[b];return d},sibling:function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&amp;&amp;a!==b&amp;&amp;c.push(a);return c}}),m.fn.extend({has:function(a){var b,c=m(a,this),d=c.length;return this.filter(function(){for(b=0;d&gt;b;b++)if(m.contains(this,c[b]))return!0})},closest:function(a,b){for(var c,d=0,e=this.length,f=[],g=t.test(a)||"string"!=typeof a?m(a,b||this.context):0;e&gt;d;d++)for(c=this[d];c&amp;&amp;c!==b;c=c.parentNode)if(c.nodeType&lt;11&amp;&amp;(g?g.index(c)&gt;-1:1===c.nodeType&amp;&amp;m.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length&gt;1?m.unique(f):f)},index:function(a){return a?"string"==typeof a?m.inArray(this[0],m(a)):m.inArray(a.jquery?a[0]:a,this):this[0]&amp;&amp;this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(m.unique(m.merge(this.get(),m(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function D(a,b){do a=a[b];while(a&amp;&amp;1!==a.nodeType);return a}m.each({parent:function(a){var b=a.parentNode;return b&amp;&amp;11!==b.nodeType?b:null},parents:function(a){return m.dir(a,"parentNode")},parentsUntil:function(a,b,c){return m.dir(a,"parentNode",c)},next:function(a){return D(a,"nextSibling")},prev:function(a){return D(a,"previousSibling")},nextAll:function(a){return m.dir(a,"nextSibling")},prevAll:function(a){return m.dir(a,"previousSibling")},nextUntil:function(a,b,c){return m.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return m.dir(a,"previousSibling",c)},siblings:function(a){return m.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return m.sibling(a.firstChild)},contents:function(a){return m.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:m.merge([],a.childNodes)}},function(a,b){m.fn[a]=function(c,d){var e=m.map(this,b,c);return"Until"!==a.slice(-5)&amp;&amp;(d=c),d&amp;&amp;"string"==typeof d&amp;&amp;(e=m.filter(d,e)),this.length&gt;1&amp;&amp;(C[a]||(e=m.unique(e)),B.test(a)&amp;&amp;(e=e.reverse())),this.pushStack(e)}});var E=/\S+/g,F={};function G(a){var b=F[a]={};return m.each(a.match(E)||[],function(a,c){b[c]=!0}),b}m.Callbacks=function(a){a="string"==typeof a?F[a]||G(a):m.extend({},a);var b,c,d,e,f,g,h=[],i=!a.once&amp;&amp;[],j=function(l){for(c=a.memory&amp;&amp;l,d=!0,f=g||0,g=0,e=h.length,b=!0;h&amp;&amp;e&gt;f;f++)if(h[f].apply(l[0],l[1])===!1&amp;&amp;a.stopOnFalse){c=!1;break}b=!1,h&amp;&amp;(i?i.length&amp;&amp;j(i.shift()):c?h=[]:k.disable())},k={add:function(){if(h){var d=h.length;!function f(b){m.each(b,function(b,c){var d=m.type(c);"function"===d?a.unique&amp;&amp;k.has(c)||h.push(c):c&amp;&amp;c.length&amp;&amp;"string"!==d&amp;&amp;f(c)})}(arguments),b?e=h.length:c&amp;&amp;(g=d,j(c))}return this},remove:function(){return h&amp;&amp;m.each(arguments,function(a,c){var d;while((d=m.inArray(c,h,d))&gt;-1)h.splice(d,1),b&amp;&amp;(e&gt;=d&amp;&amp;e--,f&gt;=d&amp;&amp;f--)}),this},has:function(a){return a?m.inArray(a,h)&gt;-1:!(!h||!h.length)},empty:function(){return h=[],e=0,this},disable:function(){return h=i=c=void 0,this},disabled:function(){return!h},lock:function(){return i=void 0,c||k.disable(),this},locked:function(){return!i},fireWith:function(a,c){return!h||d&amp;&amp;!i||(c=c||[],c=[a,c.slice?c.slice():c],b?i.push(c):j(c)),this},fire:function(){return k.fireWith(this,arguments),this},fired:function(){return!!d}};return k},m.extend({Deferred:function(a){var b=[["resolve","done",m.Callbacks("once memory"),"resolved"],["reject","fail",m.Callbacks("once memory"),"rejected"],["notify","progress",m.Callbacks("memory")]],c="pending",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return m.Deferred(function(c){m.each(b,function(b,f){var g=m.isFunction(a[b])&amp;&amp;a[b];e[f[1]](function(){var a=g&amp;&amp;g.apply(this,arguments);a&amp;&amp;m.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f[0]+"With"](this===d?c.promise():this,g?[a]:arguments)})}),a=null}).promise()},promise:function(a){return null!=a?m.extend(a,d):d}},e={};return d.pipe=d.then,m.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&amp;&amp;g.add(function(){c=h},b[1^a][2].disable,b[2][2].lock),e[f[0]]=function(){return e[f[0]+"With"](this===e?d:this,arguments),this},e[f[0]+"With"]=g.fireWith}),d.promise(e),a&amp;&amp;a.call(e,e),e},when:function(a){var b=0,c=d.call(arguments),e=c.length,f=1!==e||a&amp;&amp;m.isFunction(a.promise)?e:0,g=1===f?a:m.Deferred(),h=function(a,b,c){return function(e){b[a]=this,c[a]=arguments.length&gt;1?d.call(arguments):e,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}},i,j,k;if(e&gt;1)for(i=new Array(e),j=new Array(e),k=new Array(e);e&gt;b;b++)c[b]&amp;&amp;m.isFunction(c[b].promise)?c[b].promise().done(h(b,k,c)).fail(g.reject).progress(h(b,j,i)):--f;return f||g.resolveWith(k,c),g.promise()}});var H;m.fn.ready=function(a){return m.ready.promise().done(a),this},m.extend({isReady:!1,readyWait:1,holdReady:function(a){a?m.readyWait++:m.ready(!0)},ready:function(a){if(a===!0?!--m.readyWait:!m.isReady){if(!y.body)return setTimeout(m.ready);m.isReady=!0,a!==!0&amp;&amp;--m.readyWait&gt;0||(H.resolveWith(y,[m]),m.fn.triggerHandler&amp;&amp;(m(y).triggerHandler("ready"),m(y).off("ready")))}}});function I(){y.addEventListener?(y.removeEventListener("DOMContentLoaded",J,!1),a.removeEventListener("load",J,!1)):(y.detachEvent("onreadystatechange",J),a.detachEvent("onload",J))}function J(){(y.addEventListener||"load"===event.type||"complete"===y.readyState)&amp;&amp;(I(),m.ready())}m.ready.promise=function(b){if(!H)if(H=m.Deferred(),"complete"===y.readyState)setTimeout(m.ready);else if(y.addEventListener)y.addEventListener("DOMContentLoaded",J,!1),a.addEventListener("load",J,!1);else{y.attachEvent("onreadystatechange",J),a.attachEvent("onload",J);var c=!1;try{c=null==a.frameElement&amp;&amp;y.documentElement}catch(d){}c&amp;&amp;c.doScroll&amp;&amp;!function e(){if(!m.isReady){try{c.doScroll("left")}catch(a){return setTimeout(e,50)}I(),m.ready()}}()}return H.promise(b)};var K="undefined",L;for(L in m(k))break;k.ownLast="0"!==L,k.inlineBlockNeedsLayout=!1,m(function(){var a,b,c,d;c=y.getElementsByTagName("body")[0],c&amp;&amp;c.style&amp;&amp;(b=y.createElement("div"),d=y.createElement("div"),d.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",c.appendChild(d).appendChild(b),typeof b.style.zoom!==K&amp;&amp;(b.style.cssText="display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1",k.inlineBlockNeedsLayout=a=3===b.offsetWidth,a&amp;&amp;(c.style.zoom=1)),c.removeChild(d))}),function(){var a=y.createElement("div");if(null==k.deleteExpando){k.deleteExpando=!0;try{delete a.test}catch(b){k.deleteExpando=!1}}a=null}(),m.acceptData=function(a){var b=m.noData[(a.nodeName+" ").toLowerCase()],c=+a.nodeType||1;return 1!==c&amp;&amp;9!==c?!1:!b||b!==!0&amp;&amp;a.getAttribute("classid")===b};var M=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,N=/([A-Z])/g;function O(a,b,c){if(void 0===c&amp;&amp;1===a.nodeType){var d="data-"+b.replace(N,"-$1").toLowerCase();if(c=a.getAttribute(d),"string"==typeof c){try{c="true"===c?!0:"false"===c?!1:"null"===c?null:+c+""===c?+c:M.test(c)?m.parseJSON(c):c}catch(e){}m.data(a,b,c)}else c=void 0}return c}function P(a){var b;for(b in a)if(("data"!==b||!m.isEmptyObject(a[b]))&amp;&amp;"toJSON"!==b)return!1;return!0}function Q(a,b,d,e){if(m.acceptData(a)){var f,g,h=m.expando,i=a.nodeType,j=i?m.cache:a,k=i?a[h]:a[h]&amp;&amp;h;if(k&amp;&amp;j[k]&amp;&amp;(e||j[k].data)||void 0!==d||"string"!=typeof b)return k||(k=i?a[h]=c.pop()||m.guid++:h),j[k]||(j[k]=i?{}:{toJSON:m.noop}),("object"==typeof b||"function"==typeof b)&amp;&amp;(e?j[k]=m.extend(j[k],b):j[k].data=m.extend(j[k].data,b)),g=j[k],e||(g.data||(g.data={}),g=g.data),void 0!==d&amp;&amp;(g[m.camelCase(b)]=d),"string"==typeof b?(f=g[b],null==f&amp;&amp;(f=g[m.camelCase(b)])):f=g,f}}function R(a,b,c){if(m.acceptData(a)){var d,e,f=a.nodeType,g=f?m.cache:a,h=f?a[m.expando]:m.expando;if(g[h]){if(b&amp;&amp;(d=c?g[h]:g[h].data)){m.isArray(b)?b=b.concat(m.map(b,m.camelCase)):b in d?b=[b]:(b=m.camelCase(b),b=b in d?[b]:b.split(" ")),e=b.length;while(e--)delete d[b[e]];if(c?!P(d):!m.isEmptyObject(d))return}(c||(delete g[h].data,P(g[h])))&amp;&amp;(f?m.cleanData([a],!0):k.deleteExpando||g!=g.window?delete g[h]:g[h]=null)}}}m.extend({cache:{},noData:{"applet ":!0,"embed ":!0,"object ":"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"},hasData:function(a){return a=a.nodeType?m.cache[a[m.expando]]:a[m.expando],!!a&amp;&amp;!P(a)},data:function(a,b,c){return Q(a,b,c)},removeData:function(a,b){return R(a,b)},_data:function(a,b,c){return Q(a,b,c,!0)},_removeData:function(a,b){return R(a,b,!0)}}),m.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&amp;&amp;f.attributes;if(void 0===a){if(this.length&amp;&amp;(e=m.data(f),1===f.nodeType&amp;&amp;!m._data(f,"parsedAttrs"))){c=g.length;while(c--)g[c]&amp;&amp;(d=g[c].name,0===d.indexOf("data-")&amp;&amp;(d=m.camelCase(d.slice(5)),O(f,d,e[d])));m._data(f,"parsedAttrs",!0)}return e}return"object"==typeof a?this.each(function(){m.data(this,a)}):arguments.length&gt;1?this.each(function(){m.data(this,a,b)}):f?O(f,a,m.data(f,a)):void 0},removeData:function(a){return this.each(function(){m.removeData(this,a)})}}),m.extend({queue:function(a,b,c){var d;return a?(b=(b||"fx")+"queue",d=m._data(a,b),c&amp;&amp;(!d||m.isArray(c)?d=m._data(a,b,m.makeArray(c)):d.push(c)),d||[]):void 0},dequeue:function(a,b){b=b||"fx";var c=m.queue(a,b),d=c.length,e=c.shift(),f=m._queueHooks(a,b),g=function(){m.dequeue(a,b)};"inprogress"===e&amp;&amp;(e=c.shift(),d--),e&amp;&amp;("fx"===b&amp;&amp;c.unshift("inprogress"),delete f.stop,e.call(a,g,f)),!d&amp;&amp;f&amp;&amp;f.empty.fire()},_queueHooks:function(a,b){var c=b+"queueHooks";return m._data(a,c)||m._data(a,c,{empty:m.Callbacks("once memory").add(function(){m._removeData(a,b+"queue"),m._removeData(a,c)})})}}),m.fn.extend({queue:function(a,b){var c=2;return"string"!=typeof a&amp;&amp;(b=a,a="fx",c--),arguments.length&lt;c?m.queue(this[0],a):void 0===b?this:this.each(function(){var c=m.queue(this,a,b);m._queueHooks(this,a),"fx"===a&amp;&amp;"inprogress"!==c[0]&amp;&amp;m.dequeue(this,a)})},dequeue:function(a){return this.each(function(){m.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,b){var c,d=1,e=m.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};"string"!=typeof a&amp;&amp;(b=a,a=void 0),a=a||"fx";while(g--)c=m._data(f[g],a+"queueHooks"),c&amp;&amp;c.empty&amp;&amp;(d++,c.empty.add(h));return h(),e.promise(b)}});var S=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,T=["Top","Right","Bottom","Left"],U=function(a,b){return a=b||a,"none"===m.css(a,"display")||!m.contains(a.ownerDocument,a)},V=m.access=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if("object"===m.type(c)){e=!0;for(h in c)m.access(a,b,h,c[h],!0,f,g)}else if(void 0!==d&amp;&amp;(e=!0,m.isFunction(d)||(g=!0),j&amp;&amp;(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(m(a),c)})),b))for(;i&gt;h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f},W=/^(?:checkbox|radio)$/i;!function(){var a=y.createElement("input"),b=y.createElement("div"),c=y.createDocumentFragment();if(b.innerHTML="  &lt;link/&gt;&lt;table&gt;&lt;/table&gt;&lt;a href=''/a''&gt;a&lt;/a&gt;&lt;input type=''checkbox''/&gt;",k.leadingWhitespace=3===b.firstChild.nodeType,k.tbody=!b.getElementsByTagName("tbody").length,k.htmlSerialize=!!b.getElementsByTagName("link").length,k.html5Clone="&lt;:nav&gt;&lt;/:nav&gt;"!==y.createElement("nav").cloneNode(!0).outerHTML,a.type="checkbox",a.checked=!0,c.appendChild(a),k.appendChecked=a.checked,b.innerHTML="&lt;textarea&gt;x&lt;/textarea&gt;",k.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue,c.appendChild(b),b.innerHTML="&lt;input type=''radio'' checked=''checked'' name=''t''/&gt;",k.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,k.noCloneEvent=!0,b.attachEvent&amp;&amp;(b.attachEvent("onclick",function(){k.noCloneEvent=!1}),b.cloneNode(!0).click()),null==k.deleteExpando){k.deleteExpando=!0;try{delete b.test}catch(d){k.deleteExpando=!1}}}(),function(){var b,c,d=y.createElement("div");for(b in{submit:!0,change:!0,focusin:!0})c="on"+b,(k[b+"Bubbles"]=c in a)||(d.setAttribute(c,"t"),k[b+"Bubbles"]=d.attributes[c].expando===!1);d=null}();var X=/^(?:input|select|textarea)$/i,Y=/^key/,Z=/^(?:mouse|pointer|contextmenu)|click/,$=/^(?:focusinfocus|focusoutblur)$/,_=/^([^.]*)(?:\.(.+)|)$/;function aa(){return!0}function ba(){return!1}function ca(){try{return y.activeElement}catch(a){}}m.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,n,o,p,q,r=m._data(a);if(r){c.handler&amp;&amp;(i=c,c=i.handler,e=i.selector),c.guid||(c.guid=m.guid++),(g=r.events)||(g=r.events={}),(k=r.handle)||(k=r.handle=function(a){return typeof m===K||a&amp;&amp;m.event.triggered===a.type?void 0:m.event.dispatch.apply(k.elem,arguments)},k.elem=a),b=(b||"").match(E)||[""],h=b.length;while(h--)f=_.exec(b[h])||[],o=q=f[1],p=(f[2]||"").split(".").sort(),o&amp;&amp;(j=m.event.special[o]||{},o=(e?j.delegateType:j.bindType)||o,j=m.event.special[o]||{},l=m.extend({type:o,origType:q,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&amp;&amp;m.expr.match.needsContext.test(e),namespace:p.join(".")},i),(n=g[o])||(n=g[o]=[],n.delegateCount=0,j.setup&amp;&amp;j.setup.call(a,d,p,k)!==!1||(a.addEventListener?a.addEventListener(o,k,!1):a.attachEvent&amp;&amp;a.attachEvent("on"+o,k))),j.add&amp;&amp;(j.add.call(a,l),l.handler.guid||(l.handler.guid=c.guid)),e?n.splice(n.delegateCount++,0,l):n.push(l),m.event.global[o]=!0);a=null}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,n,o,p,q,r=m.hasData(a)&amp;&amp;m._data(a);if(r&amp;&amp;(k=r.events)){b=(b||"").match(E)||[""],j=b.length;while(j--)if(h=_.exec(b[j])||[],o=q=h[1],p=(h[2]||"").split(".").sort(),o){l=m.event.special[o]||{},o=(d?l.delegateType:l.bindType)||o,n=k[o]||[],h=h[2]&amp;&amp;new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),i=f=n.length;while(f--)g=n[f],!e&amp;&amp;q!==g.origType||c&amp;&amp;c.guid!==g.guid||h&amp;&amp;!h.test(g.namespace)||d&amp;&amp;d!==g.selector&amp;&amp;("**"!==d||!g.selector)||(n.splice(f,1),g.selector&amp;&amp;n.delegateCount--,l.remove&amp;&amp;l.remove.call(a,g));i&amp;&amp;!n.length&amp;&amp;(l.teardown&amp;&amp;l.teardown.call(a,p,r.handle)!==!1||m.removeEvent(a,o,r.handle),delete k[o])}else for(o in k)m.event.remove(a,o+b[j],c,d,!0);m.isEmptyObject(k)&amp;&amp;(delete r.handle,m._removeData(a,"events"))}},trigger:function(b,c,d,e){var f,g,h,i,k,l,n,o=[d||y],p=j.call(b,"type")?b.type:b,q=j.call(b,"namespace")?b.namespace.split("."):[];if(h=l=d=d||y,3!==d.nodeType&amp;&amp;8!==d.nodeType&amp;&amp;!$.test(p+m.event.triggered)&amp;&amp;(p.indexOf(".")&gt;=0&amp;&amp;(q=p.split("."),p=q.shift(),q.sort()),g=p.indexOf(":")&lt;0&amp;&amp;"on"+p,b=b[m.expando]?b:new m.Event(p,"object"==typeof b&amp;&amp;b),b.isTrigger=e?2:3,b.namespace=q.join("."),b.namespace_re=b.namespace?new RegExp("(^|\\.)"+q.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,b.result=void 0,b.target||(b.target=d),c=null==c?[b]:m.makeArray(c,[b]),k=m.event.special[p]||{},e||!k.trigger||k.trigger.apply(d,c)!==!1)){if(!e&amp;&amp;!k.noBubble&amp;&amp;!m.isWindow(d)){for(i=k.delegateType||p,$.test(i+p)||(h=h.parentNode);h;h=h.parentNode)o.push(h),l=h;l===(d.ownerDocument||y)&amp;&amp;o.push(l.defaultView||l.parentWindow||a)}n=0;while((h=o[n++])&amp;&amp;!b.isPropagationStopped())b.type=n&gt;1?i:k.bindType||p,f=(m._data(h,"events")||{})[b.type]&amp;&amp;m._data(h,"handle"),f&amp;&amp;f.apply(h,c),f=g&amp;&amp;h[g],f&amp;&amp;f.apply&amp;&amp;m.acceptData(h)&amp;&amp;(b.result=f.apply(h,c),b.result===!1&amp;&amp;b.preventDefault());if(b.type=p,!e&amp;&amp;!b.isDefaultPrevented()&amp;&amp;(!k._default||k._default.apply(o.pop(),c)===!1)&amp;&amp;m.acceptData(d)&amp;&amp;g&amp;&amp;d[p]&amp;&amp;!m.isWindow(d)){l=d[g],l&amp;&amp;(d[g]=null),m.event.triggered=p;try{d[p]()}catch(r){}m.event.triggered=void 0,l&amp;&amp;(d[g]=l)}return b.result}},dispatch:function(a){a=m.event.fix(a);var b,c,e,f,g,h=[],i=d.call(arguments),j=(m._data(this,"events")||{})[a.type]||[],k=m.event.special[a.type]||{};if(i[0]=a,a.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,a)!==!1){h=m.event.handlers.call(this,a,j),b=0;while((f=h[b++])&amp;&amp;!a.isPropagationStopped()){a.currentTarget=f.elem,g=0;while((e=f.handlers[g++])&amp;&amp;!a.isImmediatePropagationStopped())(!a.namespace_re||a.namespace_re.test(e.namespace))&amp;&amp;(a.handleObj=e,a.data=e.data,c=((m.event.special[e.origType]||{}).handle||e.handler).apply(f.elem,i),void 0!==c&amp;&amp;(a.result=c)===!1&amp;&amp;(a.preventDefault(),a.stopPropagation()))}return k.postDispatch&amp;&amp;k.postDispatch.call(this,a),a.result}},handlers:function(a,b){var c,d,e,f,g=[],h=b.delegateCount,i=a.target;if(h&amp;&amp;i.nodeType&amp;&amp;(!a.button||"click"!==a.type))for(;i!=this;i=i.parentNode||this)if(1===i.nodeType&amp;&amp;(i.disabled!==!0||"click"!==a.type)){for(e=[],f=0;h&gt;f;f++)d=b[f],c=d.selector+" ",void 0===e[c]&amp;&amp;(e[c]=d.needsContext?m(c,this).index(i)&gt;=0:m.find(c,this,null,[i]).length),e[c]&amp;&amp;e.push(d);e.length&amp;&amp;g.push({elem:i,handlers:e})}return h&lt;b.length&amp;&amp;g.push({elem:this,handlers:b.slice(h)}),g},fix:function(a){if(a[m.expando])return a;var b,c,d,e=a.type,f=a,g=this.fixHooks[e];g||(this.fixHooks[e]=g=Z.test(e)?this.mouseHooks:Y.test(e)?this.keyHooks:{}),d=g.props?this.props.concat(g.props):this.props,a=new m.Event(f),b=d.length;while(b--)c=d[b],a[c]=f[c];return a.target||(a.target=f.srcElement||y),3===a.target.nodeType&amp;&amp;(a.target=a.target.parentNode),a.metaKey=!!a.metaKey,g.filter?g.filter(a,f):a},props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(a,b){return null==a.which&amp;&amp;(a.which=null!=b.charCode?b.charCode:b.keyCode),a}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(a,b){var c,d,e,f=b.button,g=b.fromElement;return null==a.pageX&amp;&amp;null!=b.clientX&amp;&amp;(d=a.target.ownerDocument||y,e=d.documentElement,c=d.body,a.pageX=b.clientX+(e&amp;&amp;e.scrollLeft||c&amp;&amp;c.scrollLeft||0)-(e&amp;&amp;e.clientLeft||c&amp;&amp;c.clientLeft||0),a.pageY=b.clientY+(e&amp;&amp;e.scrollTop||c&amp;&amp;c.scrollTop||0)-(e&amp;&amp;e.clientTop||c&amp;&amp;c.clientTop||0)),!a.relatedTarget&amp;&amp;g&amp;&amp;(a.relatedTarget=g===a.target?b.toElement:g),a.which||void 0===f||(a.which=1&amp;f?1:2&amp;f?3:4&amp;f?2:0),a}},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==ca()&amp;&amp;this.focus)try{return this.focus(),!1}catch(a){}},delegateType:"focusin"},blur:{trigger:function(){return this===ca()&amp;&amp;this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return m.nodeName(this,"input")&amp;&amp;"checkbox"===this.type&amp;&amp;this.click?(this.click(),!1):void 0},_default:function(a){return m.nodeName(a.target,"a")}},beforeunload:{postDispatch:function(a){void 0!==a.result&amp;&amp;a.originalEvent&amp;&amp;(a.originalEvent.returnValue=a.result)}}},simulate:function(a,b,c,d){var e=m.extend(new m.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?m.event.trigger(e,null,b):m.event.dispatch.call(b,e),e.isDefaultPrevented()&amp;&amp;c.preventDefault()}},m.removeEvent=y.removeEventListener?function(a,b,c){a.removeEventListener&amp;&amp;a.removeEventListener(b,c,!1)}:function(a,b,c){var d="on"+b;a.detachEvent&amp;&amp;(typeof a[d]===K&amp;&amp;(a[d]=null),a.detachEvent(d,c))},m.Event=function(a,b){return this instanceof m.Event?(a&amp;&amp;a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&amp;&amp;a.returnValue===!1?aa:ba):this.type=a,b&amp;&amp;m.extend(this,b),this.timeStamp=a&amp;&amp;a.timeStamp||m.now(),void(this[m.expando]=!0)):new m.Event(a,b)},m.Event.prototype={isDefaultPrevented:ba,isPropagationStopped:ba,isImmediatePropagationStopped:ba,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=aa,a&amp;&amp;(a.preventDefault?a.preventDefault():a.returnValue=!1)},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=aa,a&amp;&amp;(a.stopPropagation&amp;&amp;a.stopPropagation(),a.cancelBubble=!0)},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=aa,a&amp;&amp;a.stopImmediatePropagation&amp;&amp;a.stopImmediatePropagation(),this.stopPropagation()}},m.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(a,b){m.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return(!e||e!==d&amp;&amp;!m.contains(d,e))&amp;&amp;(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),k.submitBubbles||(m.event.special.submit={setup:function(){return m.nodeName(this,"form")?!1:void m.event.add(this,"click._submit keypress._submit",function(a){var b=a.target,c=m.nodeName(b,"input")||m.nodeName(b,"button")?b.form:void 0;c&amp;&amp;!m._data(c,"submitBubbles")&amp;&amp;(m.event.add(c,"submit._submit",function(a){a._submit_bubble=!0}),m._data(c,"submitBubbles",!0))})},postDispatch:function(a){a._submit_bubble&amp;&amp;(delete a._submit_bubble,this.parentNode&amp;&amp;!a.isTrigger&amp;&amp;m.event.simulate("submit",this.parentNode,a,!0))},teardown:function(){return m.nodeName(this,"form")?!1:void m.event.remove(this,"._submit")}}),k.changeBubbles||(m.event.special.change={setup:function(){return X.test(this.nodeName)?(("checkbox"===this.type||"radio"===this.type)&amp;&amp;(m.event.add(this,"propertychange._change",function(a){"checked"===a.originalEvent.propertyName&amp;&amp;(this._just_changed=!0)}),m.event.add(this,"click._change",function(a){this._just_changed&amp;&amp;!a.isTrigger&amp;&amp;(this._just_changed=!1),m.event.simulate("change",this,a,!0)})),!1):void m.event.add(this,"beforeactivate._change",function(a){var b=a.target;X.test(b.nodeName)&amp;&amp;!m._data(b,"changeBubbles")&amp;&amp;(m.event.add(b,"change._change",function(a){!this.parentNode||a.isSimulated||a.isTrigger||m.event.simulate("change",this.parentNode,a,!0)}),m._data(b,"changeBubbles",!0))})},handle:function(a){var b=a.target;return this!==b||a.isSimulated||a.isTrigger||"radio"!==b.type&amp;&amp;"checkbox"!==b.type?a.handleObj.handler.apply(this,arguments):void 0},teardown:function(){return m.event.remove(this,"._change"),!X.test(this.nodeName)}}),k.focusinBubbles||m.each({focus:"focusin",blur:"focusout"},function(a,b){var c=function(a){m.event.simulate(b,a.target,m.event.fix(a),!0)};m.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=m._data(d,b);e||d.addEventListener(a,c,!0),m._data(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=m._data(d,b)-1;e?m._data(d,b,e):(d.removeEventListener(a,c,!0),m._removeData(d,b))}}}),m.fn.extend({on:function(a,b,c,d,e){var f,g;if("object"==typeof a){"string"!=typeof b&amp;&amp;(c=c||b,b=void 0);for(f in a)this.on(f,b,c,a[f],e);return this}if(null==c&amp;&amp;null==d?(d=b,c=b=void 0):null==d&amp;&amp;("string"==typeof b?(d=c,c=void 0):(d=c,c=b,b=void 0)),d===!1)d=ba;else if(!d)return this;return 1===e&amp;&amp;(g=d,d=function(a){return m().off(a),g.apply(this,arguments)},d.guid=g.guid||(g.guid=m.guid++)),this.each(function(){m.event.add(this,a,d,c,b)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&amp;&amp;a.preventDefault&amp;&amp;a.handleObj)return d=a.handleObj,m(a.delegateTarget).off(d.namespace?d.origType+"."+d.namespace:d.origType,d.selector,d.handler),this;if("object"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return(b===!1||"function"==typeof b)&amp;&amp;(c=b,b=void 0),c===!1&amp;&amp;(c=ba),this.each(function(){m.event.remove(this,a,c,b)})},trigger:function(a,b){return this.each(function(){m.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];return c?m.event.trigger(a,b,c,!0):void 0}});function da(a){var b=ea.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}var ea="abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",fa=/ jQuery\d+="(?:null|\d+)"/g,ga=new RegExp("&lt;(?:"+ea+")[\\s/&gt;]","i"),ha=/^\s+/,ia=/&lt;(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^&gt;]*)\/&gt;/gi,ja=/&lt;([\w:]+)/,ka=/&lt;tbody/i,la=/&lt;|&amp;#?\w+;/,ma=/&lt;(?:script|style|link)/i,na=/checked\s*(?:[^=]|=\s*.checked.)/i,oa=/^$|\/(?:java|ecma)script/i,pa=/^true\/(.*)/,qa=/^\s*&lt;!(?:\[CDATA\[|--)|(?:\]\]|--)&gt;\s*$/g,ra={option:[1,"&lt;select multiple=''multiple''&gt;","&lt;/select&gt;"],legend:[1,"&lt;fieldset&gt;","&lt;/fieldset&gt;"],area:[1,"&lt;map&gt;","&lt;/map&gt;"],param:[1,"&lt;object&gt;","&lt;/object&gt;"],thead:[1,"&lt;table&gt;","&lt;/table&gt;"],tr:[2,"&lt;table&gt;&lt;tbody&gt;","&lt;/tbody&gt;&lt;/table&gt;"],col:[2,"&lt;table&gt;&lt;tbody&gt;&lt;/tbody&gt;&lt;colgroup&gt;","&lt;/colgroup&gt;&lt;/table&gt;"],td:[3,"&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;","&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;"],_default:k.htmlSerialize?[0,"",""]:[1,"X&lt;div&gt;","&lt;/div&gt;"]},sa=da(y),ta=sa.appendChild(y.createElement("div"));ra.optgroup=ra.option,ra.tbody=ra.tfoot=ra.colgroup=ra.caption=ra.thead,ra.th=ra.td;function ua(a,b){var c,d,e=0,f=typeof a.getElementsByTagName!==K?a.getElementsByTagName(b||"*"):typeof a.querySelectorAll!==K?a.querySelectorAll(b||"*"):void 0;if(!f)for(f=[],c=a.childNodes||a;null!=(d=c[e]);e++)!b||m.nodeName(d,b)?f.push(d):m.merge(f,ua(d,b));return void 0===b||b&amp;&amp;m.nodeName(a,b)?m.merge([a],f):f}function va(a){W.test(a.type)&amp;&amp;(a.defaultChecked=a.checked)}function wa(a,b){return m.nodeName(a,"table")&amp;&amp;m.nodeName(11!==b.nodeType?b:b.firstChild,"tr")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function xa(a){return a.type=(null!==m.find.attr(a,"type"))+"/"+a.type,a}function ya(a){var b=pa.exec(a.type);return b?a.type=b[1]:a.removeAttribute("type"),a}function za(a,b){for(var c,d=0;null!=(c=a[d]);d++)m._data(c,"globalEval",!b||m._data(b[d],"globalEval"))}function Aa(a,b){if(1===b.nodeType&amp;&amp;m.hasData(a)){var c,d,e,f=m._data(a),g=m._data(b,f),h=f.events;if(h){delete g.handle,g.events={};for(c in h)for(d=0,e=h[c].length;e&gt;d;d++)m.event.add(b,c,h[c][d])}g.data&amp;&amp;(g.data=m.extend({},g.data))}}function Ba(a,b){var c,d,e;if(1===b.nodeType){if(c=b.nodeName.toLowerCase(),!k.noCloneEvent&amp;&amp;b[m.expando]){e=m._data(b);for(d in e.events)m.removeEvent(b,d,e.handle);b.removeAttribute(m.expando)}"script"===c&amp;&amp;b.text!==a.text?(xa(b).text=a.text,ya(b)):"object"===c?(b.parentNode&amp;&amp;(b.outerHTML=a.outerHTML),k.html5Clone&amp;&amp;a.innerHTML&amp;&amp;!m.trim(b.innerHTML)&amp;&amp;(b.innerHTML=a.innerHTML)):"input"===c&amp;&amp;W.test(a.type)?(b.defaultChecked=b.checked=a.checked,b.value!==a.value&amp;&amp;(b.value=a.value)):"option"===c?b.defaultSelected=b.selected=a.defaultSelected:("input"===c||"textarea"===c)&amp;&amp;(b.defaultValue=a.defaultValue)}}m.extend({clone:function(a,b,c){var d,e,f,g,h,i=m.contains(a.ownerDocument,a);if(k.html5Clone||m.isXMLDoc(a)||!ga.test("&lt;"+a.nodeName+"&gt;")?f=a.cloneNode(!0):(ta.innerHTML=a.outerHTML,ta.removeChild(f=ta.firstChild)),!(k.noCloneEvent&amp;&amp;k.noCloneChecked||1!==a.nodeType&amp;&amp;11!==a.nodeType||m.isXMLDoc(a)))for(d=ua(f),h=ua(a),g=0;null!=(e=h[g]);++g)d[g]&amp;&amp;Ba(e,d[g]);if(b)if(c)for(h=h||ua(a),d=d||ua(f),g=0;null!=(e=h[g]);g++)Aa(e,d[g]);else Aa(a,f);return d=ua(f,"script"),d.length&gt;0&amp;&amp;za(d,!i&amp;&amp;ua(a,"script")),d=h=e=null,f},buildFragment:function(a,b,c,d){for(var e,f,g,h,i,j,l,n=a.length,o=da(b),p=[],q=0;n&gt;q;q++)if(f=a[q],f||0===f)if("object"===m.type(f))m.merge(p,f.nodeType?[f]:f);else if(la.test(f)){h=h||o.appendChild(b.createElement("div")),i=(ja.exec(f)||["",""])[1].toLowerCase(),l=ra[i]||ra._default,h.innerHTML=l[1]+f.replace(ia,"&lt;$1&gt;&lt;/$2&gt;")+l[2],e=l[0];while(e--)h=h.lastChild;if(!k.leadingWhitespace&amp;&amp;ha.test(f)&amp;&amp;p.push(b.createTextNode(ha.exec(f)[0])),!k.tbody){f="table"!==i||ka.test(f)?"&lt;table&gt;"!==l[1]||ka.test(f)?0:h:h.firstChild,e=f&amp;&amp;f.childNodes.length;while(e--)m.nodeName(j=f.childNodes[e],"tbody")&amp;&amp;!j.childNodes.length&amp;&amp;f.removeChild(j)}m.merge(p,h.childNodes),h.textContent="";while(h.firstChild)h.removeChild(h.firstChild);h=o.lastChild}else p.push(b.createTextNode(f));h&amp;&amp;o.removeChild(h),k.appendChecked||m.grep(ua(p,"input"),va),q=0;while(f=p[q++])if((!d||-1===m.inArray(f,d))&amp;&amp;(g=m.contains(f.ownerDocument,f),h=ua(o.appendChild(f),"script"),g&amp;&amp;za(h),c)){e=0;while(f=h[e++])oa.test(f.type||"")&amp;&amp;c.push(f)}return h=null,o},cleanData:function(a,b){for(var d,e,f,g,h=0,i=m.expando,j=m.cache,l=k.deleteExpando,n=m.event.special;null!=(d=a[h]);h++)if((b||m.acceptData(d))&amp;&amp;(f=d[i],g=f&amp;&amp;j[f])){if(g.events)for(e in g.events)n[e]?m.event.remove(d,e):m.removeEvent(d,e,g.handle);j[f]&amp;&amp;(delete j[f],l?delete d[i]:typeof d.removeAttribute!==K?d.removeAttribute(i):d[i]=null,c.push(f))}}}),m.fn.extend({text:function(a){return V(this,function(a){return void 0===a?m.text(this):this.empty().append((this[0]&amp;&amp;this[0].ownerDocument||y).createTextNode(a))},null,a,arguments.length)},append:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=wa(this,a);b.appendChild(a)}})},prepend:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=wa(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return this.domManip(arguments,function(a){this.parentNode&amp;&amp;this.parentNode.insertBefore(a,this)})},after:function(){return this.domManip(arguments,function(a){this.parentNode&amp;&amp;this.parentNode.insertBefore(a,this.nextSibling)})},remove:function(a,b){for(var c,d=a?m.filter(a,this):this,e=0;null!=(c=d[e]);e++)b||1!==c.nodeType||m.cleanData(ua(c)),c.parentNode&amp;&amp;(b&amp;&amp;m.contains(c.ownerDocument,c)&amp;&amp;za(ua(c,"script")),c.parentNode.removeChild(c));return this},empty:function(){for(var a,b=0;null!=(a=this[b]);b++){1===a.nodeType&amp;&amp;m.cleanData(ua(a,!1));while(a.firstChild)a.removeChild(a.firstChild);a.options&amp;&amp;m.nodeName(a,"select")&amp;&amp;(a.options.length=0)}return this},clone:function(a,b){return a=null==a?!1:a,b=null==b?a:b,this.map(function(){return m.clone(this,a,b)})},html:function(a){return V(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a)return 1===b.nodeType?b.innerHTML.replace(fa,""):void 0;if(!("string"!=typeof a||ma.test(a)||!k.htmlSerialize&amp;&amp;ga.test(a)||!k.leadingWhitespace&amp;&amp;ha.test(a)||ra[(ja.exec(a)||["",""])[1].toLowerCase()])){a=a.replace(ia,"&lt;$1&gt;&lt;/$2&gt;");try{for(;d&gt;c;c++)b=this[c]||{},1===b.nodeType&amp;&amp;(m.cleanData(ua(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&amp;&amp;this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=arguments[0];return this.domManip(arguments,function(b){a=this.parentNode,m.cleanData(ua(this)),a&amp;&amp;a.replaceChild(b,this)}),a&amp;&amp;(a.length||a.nodeType)?this:this.remove()},detach:function(a){return this.remove(a,!0)},domManip:function(a,b){a=e.apply([],a);var c,d,f,g,h,i,j=0,l=this.length,n=this,o=l-1,p=a[0],q=m.isFunction(p);if(q||l&gt;1&amp;&amp;"string"==typeof p&amp;&amp;!k.checkClone&amp;&amp;na.test(p))return this.each(function(c){var d=n.eq(c);q&amp;&amp;(a[0]=p.call(this,c,d.html())),d.domManip(a,b)});if(l&amp;&amp;(i=m.buildFragment(a,this[0].ownerDocument,!1,this),c=i.firstChild,1===i.childNodes.length&amp;&amp;(i=c),c)){for(g=m.map(ua(i,"script"),xa),f=g.length;l&gt;j;j++)d=i,j!==o&amp;&amp;(d=m.clone(d,!0,!0),f&amp;&amp;m.merge(g,ua(d,"script"))),b.call(this[j],d,j);if(f)for(h=g[g.length-1].ownerDocument,m.map(g,ya),j=0;f&gt;j;j++)d=g[j],oa.test(d.type||"")&amp;&amp;!m._data(d,"globalEval")&amp;&amp;m.contains(h,d)&amp;&amp;(d.src?m._evalUrl&amp;&amp;m._evalUrl(d.src):m.globalEval((d.text||d.textContent||d.innerHTML||"").replace(qa,"")));i=c=null}return this}}),m.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){m.fn[a]=function(a){for(var c,d=0,e=[],g=m(a),h=g.length-1;h&gt;=d;d++)c=d===h?this:this.clone(!0),m(g[d])[b](c),f.apply(e,c.get());return this.pushStack(e)}});var Ca,Da={};function Ea(b,c){var d,e=m(c.createElement(b)).appendTo(c.body),f=a.getDefaultComputedStyle&amp;&amp;(d=a.getDefaultComputedStyle(e[0]))?d.display:m.css(e[0],"display");return e.detach(),f}function Fa(a){var b=y,c=Da[a];return c||(c=Ea(a,b),"none"!==c&amp;&amp;c||(Ca=(Ca||m("&lt;iframe frameborder=''0'' width=''0'' height=''0''/&gt;")).appendTo(b.documentElement),b=(Ca[0].contentWindow||Ca[0].contentDocument).document,b.write(),b.close(),c=Ea(a,b),Ca.detach()),Da[a]=c),c}!function(){var a;k.shrinkWrapBlocks=function(){if(null!=a)return a;a=!1;var b,c,d;return c=y.getElementsByTagName("body")[0],c&amp;&amp;c.style?(b=y.createElement("div"),d=y.createElement("div"),d.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",c.appendChild(d).appendChild(b),typeof b.style.zoom!==K&amp;&amp;(b.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:1px;width:1px;zoom:1",b.appendChild(y.createElement("div")).style.width="5px",a=3!==b.offsetWidth),c.removeChild(d),a):void 0}}();var Ga=/^margin/,Ha=new RegExp("^("+S+")(?!px)[a-z%]+$","i"),Ia,Ja,Ka=/^(top|right|bottom|left)$/;a.getComputedStyle?(Ia=function(b){return b.ownerDocument.defaultView.opener?b.ownerDocument.defaultView.getComputedStyle(b,null):a.getComputedStyle(b,null)},Ja=function(a,b,c){var d,e,f,g,h=a.style;return c=c||Ia(a),g=c?c.getPropertyValue(b)||c[b]:void 0,c&amp;&amp;(""!==g||m.contains(a.ownerDocument,a)||(g=m.style(a,b)),Ha.test(g)&amp;&amp;Ga.test(b)&amp;&amp;(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0===g?g:g+""}):y.documentElement.currentStyle&amp;&amp;(Ia=function(a){return a.currentStyle},Ja=function(a,b,c){var d,e,f,g,h=a.style;return c=c||Ia(a),g=c?c[b]:void 0,null==g&amp;&amp;h&amp;&amp;h[b]&amp;&amp;(g=h[b]),Ha.test(g)&amp;&amp;!Ka.test(b)&amp;&amp;(d=h.left,e=a.runtimeStyle,f=e&amp;&amp;e.left,f&amp;&amp;(e.left=a.currentStyle.left),h.left="fontSize"===b?"1em":g,g=h.pixelLeft+"px",h.left=d,f&amp;&amp;(e.left=f)),void 0===g?g:g+""||"auto"});function La(a,b){return{get:function(){var c=a();if(null!=c)return c?void delete this.get:(this.get=b).apply(this,arguments)}}}!function(){var b,c,d,e,f,g,h;if(b=y.createElement("div"),b.innerHTML="  &lt;link/&gt;&lt;table&gt;&lt;/table&gt;&lt;a href=''/a''&gt;a&lt;/a&gt;&lt;input type=''checkbox''/&gt;",d=b.getElementsByTagName("a")[0],c=d&amp;&amp;d.style){c.cssText="float:left;opacity:.5",k.opacity="0.5"===c.opacity,k.cssFloat=!!c.cssFloat,b.style.backgroundClip="content-box",b.cloneNode(!0).style.backgroundClip="",k.clearCloneStyle="content-box"===b.style.backgroundClip,k.boxSizing=""===c.boxSizing||""===c.MozBoxSizing||""===c.WebkitBoxSizing,m.extend(k,{reliableHiddenOffsets:function(){return null==g&amp;&amp;i(),g},boxSizingReliable:function(){return null==f&amp;&amp;i(),f},pixelPosition:function(){return null==e&amp;&amp;i(),e},reliableMarginRight:function(){return null==h&amp;&amp;i(),h}});function i(){var b,c,d,i;c=y.getElementsByTagName("body")[0],c&amp;&amp;c.style&amp;&amp;(b=y.createElement("div"),d=y.createElement("div"),d.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",c.appendChild(d).appendChild(b),b.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute",e=f=!1,h=!0,a.getComputedStyle&amp;&amp;(e="1%"!==(a.getComputedStyle(b,null)||{}).top,f="4px"===(a.getComputedStyle(b,null)||{width:"4px"}).width,i=b.appendChild(y.createElement("div")),i.style.cssText=b.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",i.style.marginRight=i.style.width="0",b.style.width="1px",h=!parseFloat((a.getComputedStyle(i,null)||{}).marginRight),b.removeChild(i)),b.innerHTML="&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;t&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;",i=b.getElementsByTagName("td"),i[0].style.cssText="margin:0;border:0;padding:0;display:none",g=0===i[0].offsetHeight,g&amp;&amp;(i[0].style.display="",i[1].style.display="none",g=0===i[0].offsetHeight),c.removeChild(d))}}}(),m.swap=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};var Ma=/alpha\([^)]*\)/i,Na=/opacity\s*=\s*([^)]*)/,Oa=/^(none|table(?!-c[ea]).+)/,Pa=new RegExp("^("+S+")(.*)$","i"),Qa=new RegExp("^([+-])=("+S+")","i"),Ra={position:"absolute",visibility:"hidden",display:"block"},Sa={letterSpacing:"0",fontWeight:"400"},Ta=["Webkit","O","Moz","ms"];function Ua(a,b){if(b in a)return b;var c=b.charAt(0).toUpperCase()+b.slice(1),d=b,e=Ta.length;while(e--)if(b=Ta[e]+c,b in a)return b;return d}function Va(a,b){for(var c,d,e,f=[],g=0,h=a.length;h&gt;g;g++)d=a[g],d.style&amp;&amp;(f[g]=m._data(d,"olddisplay"),c=d.style.display,b?(f[g]||"none"!==c||(d.style.display=""),""===d.style.display&amp;&amp;U(d)&amp;&amp;(f[g]=m._data(d,"olddisplay",Fa(d.nodeName)))):(e=U(d),(c&amp;&amp;"none"!==c||!e)&amp;&amp;m._data(d,"olddisplay",e?c:m.css(d,"display"))));for(g=0;h&gt;g;g++)d=a[g],d.style&amp;&amp;(b&amp;&amp;"none"!==d.style.display&amp;&amp;""!==d.style.display||(d.style.display=b?f[g]||"":"none"));return a}function Wa(a,b,c){var d=Pa.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||"px"):b}function Xa(a,b,c,d,e){for(var f=c===(d?"border":"content")?4:"width"===b?1:0,g=0;4&gt;f;f+=2)"margin"===c&amp;&amp;(g+=m.css(a,c+T[f],!0,e)),d?("content"===c&amp;&amp;(g-=m.css(a,"padding"+T[f],!0,e)),"margin"!==c&amp;&amp;(g-=m.css(a,"border"+T[f]+"Width",!0,e))):(g+=m.css(a,"padding"+T[f],!0,e),"padding"!==c&amp;&amp;(g+=m.css(a,"border"+T[f]+"Width",!0,e)));return g}function Ya(a,b,c){var d=!0,e="width"===b?a.offsetWidth:a.offsetHeight,f=Ia(a),g=k.boxSizing&amp;&amp;"border-box"===m.css(a,"boxSizing",!1,f);if(0&gt;=e||null==e){if(e=Ja(a,b,f),(0&gt;e||null==e)&amp;&amp;(e=a.style[b]),Ha.test(e))return e;d=g&amp;&amp;(k.boxSizingReliable()||e===a.style[b]),e=parseFloat(e)||0}return e+Xa(a,b,c||(g?"border":"content"),d,f)+"px"}m.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=Ja(a,"opacity");return""===c?"1":c}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":k.cssFloat?"cssFloat":"styleFloat"},style:function(a,b,c,d){if(a&amp;&amp;3!==a.nodeType&amp;&amp;8!==a.nodeType&amp;&amp;a.style){var e,f,g,h=m.camelCase(b),i=a.style;if(b=m.cssProps[h]||(m.cssProps[h]=Ua(i,h)),g=m.cssHooks[b]||m.cssHooks[h],void 0===c)return g&amp;&amp;"get"in g&amp;&amp;void 0!==(e=g.get(a,!1,d))?e:i[b];if(f=typeof c,"string"===f&amp;&amp;(e=Qa.exec(c))&amp;&amp;(c=(e[1]+1)*e[2]+parseFloat(m.css(a,b)),f="number"),null!=c&amp;&amp;c===c&amp;&amp;("number"!==f||m.cssNumber[h]||(c+="px"),k.clearCloneStyle||""!==c||0!==b.indexOf("background")||(i[b]="inherit"),!(g&amp;&amp;"set"in g&amp;&amp;void 0===(c=g.set(a,c,d)))))try{i[b]=c}catch(j){}}},css:function(a,b,c,d){var e,f,g,h=m.camelCase(b);return b=m.cssProps[h]||(m.cssProps[h]=Ua(a.style,h)),g=m.cssHooks[b]||m.cssHooks[h],g&amp;&amp;"get"in g&amp;&amp;(f=g.get(a,!0,c)),void 0===f&amp;&amp;(f=Ja(a,b,d)),"normal"===f&amp;&amp;b in Sa&amp;&amp;(f=Sa[b]),""===c||c?(e=parseFloat(f),c===!0||m.isNumeric(e)?e||0:f):f}}),m.each(["height","width"],function(a,b){m.cssHooks[b]={get:function(a,c,d){return c?Oa.test(m.css(a,"display"))&amp;&amp;0===a.offsetWidth?m.swap(a,Ra,function(){return Ya(a,b,d)}):Ya(a,b,d):void 0},set:function(a,c,d){var e=d&amp;&amp;Ia(a);return Wa(a,c,d?Xa(a,b,d,k.boxSizing&amp;&amp;"border-box"===m.css(a,"boxSizing",!1,e),e):0)}}}),k.opacity||(m.cssHooks.opacity={get:function(a,b){return Na.test((b&amp;&amp;a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?.01*parseFloat(RegExp.$1)+"":b?"1":""},set:function(a,b){var c=a.style,d=a.currentStyle,e=m.isNumeric(b)?"alpha(opacity="+100*b+")":"",f=d&amp;&amp;d.filter||c.filter||"";c.zoom=1,(b&gt;=1||""===b)&amp;&amp;""===m.trim(f.replace(Ma,""))&amp;&amp;c.removeAttribute&amp;&amp;(c.removeAttribute("filter"),""===b||d&amp;&amp;!d.filter)||(c.filter=Ma.test(f)?f.replace(Ma,e):f+" "+e)}}),m.cssHooks.marginRight=La(k.reliableMarginRight,function(a,b){return b?m.swap(a,{display:"inline-block"},Ja,[a,"marginRight"]):void 0}),m.each({margin:"",padding:"",border:"Width"},function(a,b){m.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f="string"==typeof c?c.split(" "):[c];4&gt;d;d++)e[a+T[d]+b]=f[d]||f[d-2]||f[0];return e}},Ga.test(a)||(m.cssHooks[a+b].set=Wa)}),m.fn.extend({css:function(a,b){return V(this,function(a,b,c){var d,e,f={},g=0;if(m.isArray(b)){for(d=Ia(a),e=b.length;e&gt;g;g++)f[b[g]]=m.css(a,b[g],!1,d);return f}return void 0!==c?m.style(a,b,c):m.css(a,b)},a,b,arguments.length&gt;1)},show:function(){return Va(this,!0)},hide:function(){return Va(this)},toggle:function(a){return"boolean"==typeof a?a?this.show():this.hide():this.each(function(){U(this)?m(this).show():m(this).hide()})}});function Za(a,b,c,d,e){return new Za.prototype.init(a,b,c,d,e)}m.Tween=Za,Za.prototype={constructor:Za,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||"swing",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(m.cssNumber[c]?"":"px")},cur:function(){var a=Za.propHooks[this.prop];return a&amp;&amp;a.get?a.get(this):Za.propHooks._default.get(this)},run:function(a){var b,c=Za.propHooks[this.prop];return this.options.duration?this.pos=b=m.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):this.pos=b=a,this.now=(this.end-this.start)*b+this.start,this.options.step&amp;&amp;this.options.step.call(this.elem,this.now,this),c&amp;&amp;c.set?c.set(this):Za.propHooks._default.set(this),this}},Za.prototype.init.prototype=Za.prototype,Za.propHooks={_default:{get:function(a){var b;return null==a.elem[a.prop]||a.elem.style&amp;&amp;null!=a.elem.style[a.prop]?(b=m.css(a.elem,a.prop,""),b&amp;&amp;"auto"!==b?b:0):a.elem[a.prop]},set:function(a){m.fx.step[a.prop]?m.fx.step[a.prop](a):a.elem.style&amp;&amp;(null!=a.elem.style[m.cssProps[a.prop]]||m.cssHooks[a.prop])?m.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},Za.propHooks.scrollTop=Za.propHooks.scrollLeft={set:function(a){a.elem.nodeType&amp;&amp;a.elem.parentNode&amp;&amp;(a.elem[a.prop]=a.now)}},m.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},m.fx=Za.prototype.init,m.fx.step={};var $a,_a,ab=/^(?:toggle|show|hide)$/,bb=new RegExp("^(?:([+-])=|)("+S+")([a-z%]*)$","i"),cb=/queueHooks$/,db=[ib],eb={"*":[function(a,b){var c=this.createTween(a,b),d=c.cur(),e=bb.exec(b),f=e&amp;&amp;e[3]||(m.cssNumber[a]?"":"px"),g=(m.cssNumber[a]||"px"!==f&amp;&amp;+d)&amp;&amp;bb.exec(m.css(c.elem,a)),h=1,i=20;if(g&amp;&amp;g[3]!==f){f=f||g[3],e=e||[],g=+d||1;do h=h||".5",g/=h,m.style(c.elem,a,g+f);while(h!==(h=c.cur()/d)&amp;&amp;1!==h&amp;&amp;--i)}return e&amp;&amp;(g=c.start=+g||+d||0,c.unit=f,c.end=e[1]?g+(e[1]+1)*e[2]:+e[2]),c}]};function fb(){return setTimeout(function(){$a=void 0}),$a=m.now()}function gb(a,b){var c,d={height:a},e=0;for(b=b?1:0;4&gt;e;e+=2-b)c=T[e],d["margin"+c]=d["padding"+c]=a;return b&amp;&amp;(d.opacity=d.width=a),d}function hb(a,b,c){for(var d,e=(eb[b]||[]).concat(eb["*"]),f=0,g=e.length;g&gt;f;f++)if(d=e[f].call(c,b,a))return d}function ib(a,b,c){var d,e,f,g,h,i,j,l,n=this,o={},p=a.style,q=a.nodeType&amp;&amp;U(a),r=m._data(a,"fxshow");c.queue||(h=m._queueHooks(a,"fx"),null==h.unqueued&amp;&amp;(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,n.always(function(){n.always(function(){h.unqueued--,m.queue(a,"fx").length||h.empty.fire()})})),1===a.nodeType&amp;&amp;("height"in b||"width"in b)&amp;&amp;(c.overflow=[p.overflow,p.overflowX,p.overflowY],j=m.css(a,"display"),l="none"===j?m._data(a,"olddisplay")||Fa(a.nodeName):j,"inline"===l&amp;&amp;"none"===m.css(a,"float")&amp;&amp;(k.inlineBlockNeedsLayout&amp;&amp;"inline"!==Fa(a.nodeName)?p.zoom=1:p.display="inline-block")),c.overflow&amp;&amp;(p.overflow="hidden",k.shrinkWrapBlocks()||n.always(function(){p.overflow=c.overflow[0],p.overflowX=c.overflow[1],p.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],ab.exec(e)){if(delete b[d],f=f||"toggle"===e,e===(q?"hide":"show")){if("show"!==e||!r||void 0===r[d])continue;q=!0}o[d]=r&amp;&amp;r[d]||m.style(a,d)}else j=void 0;if(m.isEmptyObject(o))"inline"===("none"===j?Fa(a.nodeName):j)&amp;&amp;(p.display=j);else{r?"hidden"in r&amp;&amp;(q=r.hidden):r=m._data(a,"fxshow",{}),f&amp;&amp;(r.hidden=!q),q?m(a).show():n.done(function(){m(a).hide()}),n.done(function(){var b;m._removeData(a,"fxshow");for(b in o)m.style(a,b,o[b])});for(d in o)g=hb(q?r[d]:0,d,n),d in r||(r[d]=g.start,q&amp;&amp;(g.end=g.start,g.start="width"===d||"height"===d?1:0))}}function jb(a,b){var c,d,e,f,g;for(c in a)if(d=m.camelCase(c),e=b[d],f=a[c],m.isArray(f)&amp;&amp;(e=f[1],f=a[c]=f[0]),c!==d&amp;&amp;(a[d]=f,delete a[c]),g=m.cssHooks[d],g&amp;&amp;"expand"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function kb(a,b,c){var d,e,f=0,g=db.length,h=m.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=$a||fb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i&gt;g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1&gt;f&amp;&amp;i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:m.extend({},b),opts:m.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:$a||fb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=m.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d&gt;c;c++)j.tweens[c].run(1);return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;for(jb(k,j.opts.specialEasing);g&gt;f;f++)if(d=db[f].call(j,a,k,j.opts))return d;return m.map(k,hb,j),m.isFunction(j.opts.start)&amp;&amp;j.opts.start.call(a,j),m.fx.timer(m.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}m.Animation=m.extend(kb,{tweener:function(a,b){m.isFunction(a)?(b=a,a=["*"]):a=a.split(" ");for(var c,d=0,e=a.length;e&gt;d;d++)c=a[d],eb[c]=eb[c]||[],eb[c].unshift(b)},prefilter:function(a,b){b?db.unshift(a):db.push(a)}}),m.speed=function(a,b,c){var d=a&amp;&amp;"object"==typeof a?m.extend({},a):{complete:c||!c&amp;&amp;b||m.isFunction(a)&amp;&amp;a,duration:a,easing:c&amp;&amp;b||b&amp;&amp;!m.isFunction(b)&amp;&amp;b};return d.duration=m.fx.off?0:"number"==typeof d.duration?d.duration:d.duration in m.fx.speeds?m.fx.speeds[d.duration]:m.fx.speeds._default,(null==d.queue||d.queue===!0)&amp;&amp;(d.queue="fx"),d.old=d.complete,d.complete=function(){m.isFunction(d.old)&amp;&amp;d.old.call(this),d.queue&amp;&amp;m.dequeue(this,d.queue)},d},m.fn.extend({fadeTo:function(a,b,c,d){return this.filter(U).css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=m.isEmptyObject(a),f=m.speed(b,c,d),g=function(){var b=kb(this,m.extend({},a),f);(e||m._data(this,"finish"))&amp;&amp;b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return"string"!=typeof a&amp;&amp;(c=b,b=a,a=void 0),b&amp;&amp;a!==!1&amp;&amp;this.queue(a||"fx",[]),this.each(function(){var b=!0,e=null!=a&amp;&amp;a+"queueHooks",f=m.timers,g=m._data(this);if(e)g[e]&amp;&amp;g[e].stop&amp;&amp;d(g[e]);else for(e in g)g[e]&amp;&amp;g[e].stop&amp;&amp;cb.test(e)&amp;&amp;d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&amp;&amp;f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));(b||!c)&amp;&amp;m.dequeue(this,a)})},finish:function(a){return a!==!1&amp;&amp;(a=a||"fx"),this.each(function(){var b,c=m._data(this),d=c[a+"queue"],e=c[a+"queueHooks"],f=m.timers,g=d?d.length:0;for(c.finish=!0,m.queue(this,a,[]),e&amp;&amp;e.stop&amp;&amp;e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&amp;&amp;f[b].queue===a&amp;&amp;(f[b].anim.stop(!0),f.splice(b,1));for(b=0;g&gt;b;b++)d[b]&amp;&amp;d[b].finish&amp;&amp;d[b].finish.call(this);delete c.finish})}}),m.each(["toggle","show","hide"],function(a,b){var c=m.fn[b];m.fn[b]=function(a,d,e){return null==a||"boolean"==typeof a?c.apply(this,arguments):this.animate(gb(b,!0),a,d,e)}}),m.each({slideDown:gb("show"),slideUp:gb("hide"),slideToggle:gb("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){m.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),m.timers=[],m.fx.tick=function(){var a,b=m.timers,c=0;for($a=m.now();c&lt;b.length;c++)a=b[c],a()||b[c]!==a||b.splice(c--,1);b.length||m.fx.stop(),$a=void 0},m.fx.timer=function(a){m.timers.push(a),a()?m.fx.start():m.timers.pop()},m.fx.interval=13,m.fx.start=function(){_a||(_a=setInterval(m.fx.tick,m.fx.interval))},m.fx.stop=function(){clearInterval(_a),_a=null},m.fx.speeds={slow:600,fast:200,_default:400},m.fn.delay=function(a,b){return a=m.fx?m.fx.speeds[a]||a:a,b=b||"fx",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},function(){var a,b,c,d,e;b=y.createElement("div"),b.setAttribute("className","t"),b.innerHTML="  &lt;link/&gt;&lt;table&gt;&lt;/table&gt;&lt;a href=''/a''&gt;a&lt;/a&gt;&lt;input type=''checkbox''/&gt;",d=b.getElementsByTagName("a")[0],c=y.createElement("select"),e=c.appendChild(y.createElement("option")),a=b.getElementsByTagName("input")[0],d.style.cssText="top:1px",k.getSetAttribute="t"!==b.className,k.style=/top/.test(d.getAttribute("style")),k.hrefNormalized="/a"===d.getAttribute("href"),k.checkOn=!!a.value,k.optSelected=e.selected,k.enctype=!!y.createElement("form").enctype,c.disabled=!0,k.optDisabled=!e.disabled,a=y.createElement("input"),a.setAttribute("value",""),k.input=""===a.getAttribute("value"),a.value="t",a.setAttribute("type","radio"),k.radioValue="t"===a.value}();var lb=/\r/g;m.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=m.isFunction(a),this.each(function(c){var e;1===this.nodeType&amp;&amp;(e=d?a.call(this,c,m(this).val()):a,null==e?e="":"number"==typeof e?e+="":m.isArray(e)&amp;&amp;(e=m.map(e,function(a){return null==a?"":a+""})),b=m.valHooks[this.type]||m.valHooks[this.nodeName.toLowerCase()],b&amp;&amp;"set"in b&amp;&amp;void 0!==b.set(this,e,"value")||(this.value=e))});if(e)return b=m.valHooks[e.type]||m.valHooks[e.nodeName.toLowerCase()],b&amp;&amp;"get"in b&amp;&amp;void 0!==(c=b.get(e,"value"))?c:(c=e.value,"string"==typeof c?c.replace(lb,""):null==c?"":c)}}}),m.extend({valHooks:{option:{get:function(a){var b=m.find.attr(a,"value");return null!=b?b:m.trim(m.text(a))}},select:{get:function(a){for(var b,c,d=a.options,e=a.selectedIndex,f="select-one"===a.type||0&gt;e,g=f?null:[],h=f?e+1:d.length,i=0&gt;e?h:f?e:0;h&gt;i;i++)if(c=d[i],!(!c.selected&amp;&amp;i!==e||(k.optDisabled?c.disabled:null!==c.getAttribute("disabled"))||c.parentNode.disabled&amp;&amp;m.nodeName(c.parentNode,"optgroup"))){if(b=m(c).val(),f)return b;g.push(b)}return g},set:function(a,b){var c,d,e=a.options,f=m.makeArray(b),g=e.length;while(g--)if(d=e[g],m.inArray(m.valHooks.option.get(d),f)&gt;=0)try{d.selected=c=!0}catch(h){d.scrollHeight}else d.selected=!1;return c||(a.selectedIndex=-1),e}}}}),m.each(["radio","checkbox"],function(){m.valHooks[this]={set:function(a,b){return m.isArray(b)?a.checked=m.inArray(m(a).val(),b)&gt;=0:void 0}},k.checkOn||(m.valHooks[this].get=function(a){return null===a.getAttribute("value")?"on":a.value})});var mb,nb,ob=m.expr.attrHandle,pb=/^(?:checked|selected)$/i,qb=k.getSetAttribute,rb=k.input;m.fn.extend({attr:function(a,b){return V(this,m.attr,a,b,arguments.length&gt;1)},removeAttr:function(a){return this.each(function(){m.removeAttr(this,a)})}}),m.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(a&amp;&amp;3!==f&amp;&amp;8!==f&amp;&amp;2!==f)return typeof a.getAttribute===K?m.prop(a,b,c):(1===f&amp;&amp;m.isXMLDoc(a)||(b=b.toLowerCase(),d=m.attrHooks[b]||(m.expr.match.bool.test(b)?nb:mb)),void 0===c?d&amp;&amp;"get"in d&amp;&amp;null!==(e=d.get(a,b))?e:(e=m.find.attr(a,b),null==e?void 0:e):null!==c?d&amp;&amp;"set"in d&amp;&amp;void 0!==(e=d.set(a,c,b))?e:(a.setAttribute(b,c+""),c):void m.removeAttr(a,b))},removeAttr:function(a,b){var c,d,e=0,f=b&amp;&amp;b.match(E);if(f&amp;&amp;1===a.nodeType)while(c=f[e++])d=m.propFix[c]||c,m.expr.match.bool.test(c)?rb&amp;&amp;qb||!pb.test(c)?a[d]=!1:a[m.camelCase("default-"+c)]=a[d]=!1:m.attr(a,c,""),a.removeAttribute(qb?c:d)},attrHooks:{type:{set:function(a,b){if(!k.radioValue&amp;&amp;"radio"===b&amp;&amp;m.nodeName(a,"input")){var c=a.value;return a.setAttribute("type",b),c&amp;&amp;(a.value=c),b}}}}}),nb={set:function(a,b,c){return b===!1?m.removeAttr(a,c):rb&amp;&amp;qb||!pb.test(c)?a.setAttribute(!qb&amp;&amp;m.propFix[c]||c,c):a[m.camelCase("default-"+c)]=a[c]=!0,c}},m.each(m.expr.match.bool.source.match(/\w+/g),function(a,b){var c=ob[b]||m.find.attr;ob[b]=rb&amp;&amp;qb||!pb.test(b)?function(a,b,d){var e,f;return d||(f=ob[b],ob[b]=e,e=null!=c(a,b,d)?b.toLowerCase():null,ob[b]=f),e}:function(a,b,c){return c?void 0:a[m.camelCase("default-"+b)]?b.toLowerCase():null}}),rb&amp;&amp;qb||(m.attrHooks.value={set:function(a,b,c){return m.nodeName(a,"input")?void(a.defaultValue=b):mb&amp;&amp;mb.set(a,b,c)}}),qb||(mb={set:function(a,b,c){var d=a.getAttributeNode(c);return d||a.setAttributeNode(d=a.ownerDocument.createAttribute(c)),d.value=b+="","value"===c||b===a.getAttribute(c)?b:void 0}},ob.id=ob.name=ob.coords=function(a,b,c){var d;return c?void 0:(d=a.getAttributeNode(b))&amp;&amp;""!==d.value?d.value:null},m.valHooks.button={get:function(a,b){var c=a.getAttributeNode(b);return c&amp;&amp;c.specified?c.value:void 0},set:mb.set},m.attrHooks.contenteditable={set:function(a,b,c){mb.set(a,""===b?!1:b,c)}},m.each(["width","height"],function(a,b){m.attrHooks[b]={set:function(a,c){return""===c?(a.setAttribute(b,"auto"),c):void 0}}})),k.style||(m.attrHooks.style={get:function(a){return a.style.cssText||void 0},set:function(a,b){return a.style.cssText=b+""}});var sb=/^(?:input|select|textarea|button|object)$/i,tb=/^(?:a|area)$/i;m.fn.extend({prop:function(a,b){return V(this,m.prop,a,b,arguments.length&gt;1)},removeProp:function(a){return a=m.propFix[a]||a,this.each(function(){try{this[a]=void 0,delete this[a]}catch(b){}})}}),m.extend({propFix:{"for":"htmlFor","class":"className"},prop:function(a,b,c){var d,e,f,g=a.nodeType;if(a&amp;&amp;3!==g&amp;&amp;8!==g&amp;&amp;2!==g)return f=1!==g||!m.isXMLDoc(a),f&amp;&amp;(b=m.propFix[b]||b,e=m.propHooks[b]),void 0!==c?e&amp;&amp;"set"in e&amp;&amp;void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&amp;&amp;"get"in e&amp;&amp;null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){var b=m.find.attr(a,"tabindex");return b?parseInt(b,10):sb.test(a.nodeName)||tb.test(a.nodeName)&amp;&amp;a.href?0:-1}}}}),k.hrefNormalized||m.each(["href","src"],function(a,b){m.propHooks[b]={get:function(a){return a.getAttribute(b,4)}}}),k.optSelected||(m.propHooks.selected={get:function(a){var b=a.parentNode;return b&amp;&amp;(b.selectedIndex,b.parentNode&amp;&amp;b.parentNode.selectedIndex),null}}),m.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){m.propFix[this.toLowerCase()]=this}),k.enctype||(m.propFix.enctype="encoding");var ub=/[\t\r\n\f]/g;m.fn.extend({addClass:function(a){var b,c,d,e,f,g,h=0,i=this.length,j="string"==typeof a&amp;&amp;a;if(m.isFunction(a))return this.each(function(b){m(this).addClass(a.call(this,b,this.className))});if(j)for(b=(a||"").match(E)||[];i&gt;h;h++)if(c=this[h],d=1===c.nodeType&amp;&amp;(c.className?(" "+c.className+" ").replace(ub," "):" ")){f=0;while(e=b[f++])d.indexOf(" "+e+" ")&lt;0&amp;&amp;(d+=e+" ");g=m.trim(d),c.className!==g&amp;&amp;(c.className=g)}return this},removeClass:function(a){var b,c,d,e,f,g,h=0,i=this.length,j=0===arguments.length||"string"==typeof a&amp;&amp;a;if(m.isFunction(a))return this.each(function(b){m(this).removeClass(a.call(this,b,this.className))});if(j)for(b=(a||"").match(E)||[];i&gt;h;h++)if(c=this[h],d=1===c.nodeType&amp;&amp;(c.className?(" "+c.className+" ").replace(ub," "):"")){f=0;while(e=b[f++])while(d.indexOf(" "+e+" ")&gt;=0)d=d.replace(" "+e+" "," ");g=a?m.trim(d):"",c.className!==g&amp;&amp;(c.className=g)}return this},toggleClass:function(a,b){var c=typeof a;return"boolean"==typeof b&amp;&amp;"string"===c?b?this.addClass(a):this.removeClass(a):this.each(m.isFunction(a)?function(c){m(this).toggleClass(a.call(this,c,this.className,b),b)}:function(){if("string"===c){var b,d=0,e=m(this),f=a.match(E)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else(c===K||"boolean"===c)&amp;&amp;(this.className&amp;&amp;m._data(this,"__className__",this.className),this.className=this.className||a===!1?"":m._data(this,"__className__")||"")})},hasClass:function(a){for(var b=" "+a+" ",c=0,d=this.length;d&gt;c;c++)if(1===this[c].nodeType&amp;&amp;(" "+this[c].className+" ").replace(ub," ").indexOf(b)&gt;=0)return!0;return!1}}),m.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(a,b){m.fn[b]=function(a,c){return arguments.length&gt;0?this.on(b,null,a,c):this.trigger(b)}}),m.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,"**"):this.off(b,a||"**",c)}});var vb=m.now(),wb=/\?/,xb=/(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;m.parseJSON=function(b){if(a.JSON&amp;&amp;a.JSON.parse)return a.JSON.parse(b+"");var c,d=null,e=m.trim(b+"");return e&amp;&amp;!m.trim(e.replace(xb,function(a,b,e,f){return c&amp;&amp;b&amp;&amp;(d=0),0===d?a:(c=e||b,d+=!f-!e,"")}))?Function("return "+e)():m.error("Invalid JSON: "+b)},m.parseXML=function(b){var c,d;if(!b||"string"!=typeof b)return null;try{a.DOMParser?(d=new DOMParser,c=d.parseFromString(b,"text/xml")):(c=new ActiveXObject("Microsoft.XMLDOM"),c.async="false",c.loadXML(b))}catch(e){c=void 0}return c&amp;&amp;c.documentElement&amp;&amp;!c.getElementsByTagName("parsererror").length||m.error("Invalid XML: "+b),c};var yb,zb,Ab=/#.*$/,Bb=/([?&amp;])_=[^&amp;]*/,Cb=/^(.*?):[ \t]*([^\r\n]*)\r?$/gm,Db=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Eb=/^(?:GET|HEAD)$/,Fb=/^\/\//,Gb=/^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,Hb={},Ib={},Jb="*/".concat("*");try{zb=location.href}catch(Kb){zb=y.createElement("a"),zb.href="",zb=zb.href}yb=Gb.exec(zb.toLowerCase())||[];function Lb(a){return function(b,c){"string"!=typeof b&amp;&amp;(c=b,b="*");var d,e=0,f=b.toLowerCase().match(E)||[];if(m.isFunction(c))while(d=f[e++])"+"===d.charAt(0)?(d=d.slice(1)||"*",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function Mb(a,b,c,d){var e={},f=a===Ib;function g(h){var i;return e[h]=!0,m.each(a[h]||[],function(a,h){var j=h(b,c,d);return"string"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e["*"]&amp;&amp;g("*")}function Nb(a,b){var c,d,e=m.ajaxSettings.flatOptions||{};for(d in b)void 0!==b[d]&amp;&amp;((e[d]?a:c||(c={}))[d]=b[d]);return c&amp;&amp;m.extend(!0,a,c),a}function Ob(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while("*"===i[0])i.shift(),void 0===e&amp;&amp;(e=a.mimeType||b.getResponseHeader("Content-Type"));if(e)for(g in h)if(h[g]&amp;&amp;h[g].test(e)){i.unshift(g);break}if(i[0]in c)f=i[0];else{for(g in c){if(!i[0]||a.converters[g+" "+i[0]]){f=g;break}d||(d=g)}f=f||d}return f?(f!==i[0]&amp;&amp;i.unshift(f),c[f]):void 0}function Pb(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&amp;&amp;(c[a.responseFields[f]]=b),!i&amp;&amp;d&amp;&amp;a.dataFilter&amp;&amp;(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if("*"===f)f=i;else if("*"!==i&amp;&amp;i!==f){if(g=j[i+" "+f]||j["* "+f],!g)for(e in j)if(h=e.split(" "),h[1]===f&amp;&amp;(g=j[i+" "+h[0]]||j["* "+h[0]])){g===!0?g=j[e]:j[e]!==!0&amp;&amp;(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&amp;&amp;a["throws"])b=g(b);else try{b=g(b)}catch(l){return{state:"parsererror",error:g?l:"No conversion from "+i+" to "+f}}}return{state:"success",data:b}}m.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:zb,type:"GET",isLocal:Db.test(yb[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Jb,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":m.parseJSON,"text xml":m.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?Nb(Nb(a,m.ajaxSettings),b):Nb(m.ajaxSettings,a)},ajaxPrefilter:Lb(Hb),ajaxTransport:Lb(Ib),ajax:function(a,b){"object"==typeof a&amp;&amp;(b=a,a=void 0),b=b||{};var c,d,e,f,g,h,i,j,k=m.ajaxSetup({},b),l=k.context||k,n=k.context&amp;&amp;(l.nodeType||l.jquery)?m(l):m.event,o=m.Deferred(),p=m.Callbacks("once memory"),q=k.statusCode||{},r={},s={},t=0,u="canceled",v={readyState:0,getResponseHeader:function(a){var b;if(2===t){if(!j){j={};while(b=Cb.exec(f))j[b[1].toLowerCase()]=b[2]}b=j[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return 2===t?f:null},setRequestHeader:function(a,b){var c=a.toLowerCase();return t||(a=s[c]=s[c]||a,r[a]=b),this},overrideMimeType:function(a){return t||(k.mimeType=a),this},statusCode:function(a){var b;if(a)if(2&gt;t)for(b in a)q[b]=[q[b],a[b]];else v.always(a[v.status]);return this},abort:function(a){var b=a||u;return i&amp;&amp;i.abort(b),x(0,b),this}};if(o.promise(v).complete=p.add,v.success=v.done,v.error=v.fail,k.url=((a||k.url||zb)+"").replace(Ab,"").replace(Fb,yb[1]+"//"),k.type=b.method||b.type||k.method||k.type,k.dataTypes=m.trim(k.dataType||"*").toLowerCase().match(E)||[""],null==k.crossDomain&amp;&amp;(c=Gb.exec(k.url.toLowerCase()),k.crossDomain=!(!c||c[1]===yb[1]&amp;&amp;c[2]===yb[2]&amp;&amp;(c[3]||("http:"===c[1]?"80":"443"))===(yb[3]||("http:"===yb[1]?"80":"443")))),k.data&amp;&amp;k.processData&amp;&amp;"string"!=typeof k.data&amp;&amp;(k.data=m.param(k.data,k.traditional)),Mb(Hb,k,b,v),2===t)return v;h=m.event&amp;&amp;k.global,h&amp;&amp;0===m.active++&amp;&amp;m.event.trigger("ajaxStart"),k.type=k.type.toUpperCase(),k.hasContent=!Eb.test(k.type),e=k.url,k.hasContent||(k.data&amp;&amp;(e=k.url+=(wb.test(e)?"&amp;":"?")+k.data,delete k.data),k.cache===!1&amp;&amp;(k.url=Bb.test(e)?e.replace(Bb,"$1_="+vb++):e+(wb.test(e)?"&amp;":"?")+"_="+vb++)),k.ifModified&amp;&amp;(m.lastModified[e]&amp;&amp;v.setRequestHeader("If-Modified-Since",m.lastModified[e]),m.etag[e]&amp;&amp;v.setRequestHeader("If-None-Match",m.etag[e])),(k.data&amp;&amp;k.hasContent&amp;&amp;k.contentType!==!1||b.contentType)&amp;&amp;v.setRequestHeader("Content-Type",k.contentType),v.setRequestHeader("Accept",k.dataTypes[0]&amp;&amp;k.accepts[k.dataTypes[0]]?k.accepts[k.dataTypes[0]]+("*"!==k.dataTypes[0]?", "+Jb+"; q=0.01":""):k.accepts["*"]);for(d in k.headers)v.setRequestHeader(d,k.headers[d]);if(k.beforeSend&amp;&amp;(k.beforeSend.call(l,v,k)===!1||2===t))return v.abort();u="abort";for(d in{success:1,error:1,complete:1})v[d](k[d]);if(i=Mb(Ib,k,b,v)){v.readyState=1,h&amp;&amp;n.trigger("ajaxSend",[v,k]),k.async&amp;&amp;k.timeout&gt;0&amp;&amp;(g=setTimeout(function(){v.abort("timeout")},k.timeout));try{t=1,i.send(r,x)}catch(w){if(!(2&gt;t))throw w;x(-1,w)}}else x(-1,"No Transport");function x(a,b,c,d){var j,r,s,u,w,x=b;2!==t&amp;&amp;(t=2,g&amp;&amp;clearTimeout(g),i=void 0,f=d||"",v.readyState=a&gt;0?4:0,j=a&gt;=200&amp;&amp;300&gt;a||304===a,c&amp;&amp;(u=Ob(k,v,c)),u=Pb(k,u,v,j),j?(k.ifModified&amp;&amp;(w=v.getResponseHeader("Last-Modified"),w&amp;&amp;(m.lastModified[e]=w),w=v.getResponseHeader("etag"),w&amp;&amp;(m.etag[e]=w)),204===a||"HEAD"===k.type?x="nocontent":304===a?x="notmodified":(x=u.state,r=u.data,s=u.error,j=!s)):(s=x,(a||!x)&amp;&amp;(x="error",0&gt;a&amp;&amp;(a=0))),v.status=a,v.statusText=(b||x)+"",j?o.resolveWith(l,[r,x,v]):o.rejectWith(l,[v,x,s]),v.statusCode(q),q=void 0,h&amp;&amp;n.trigger(j?"ajaxSuccess":"ajaxError",[v,k,j?r:s]),p.fireWith(l,[v,x]),h&amp;&amp;(n.trigger("ajaxComplete",[v,k]),--m.active||m.event.trigger("ajaxStop")))}return v},getJSON:function(a,b,c){return m.get(a,b,c,"json")},getScript:function(a,b){return m.get(a,void 0,b,"script")}}),m.each(["get","post"],function(a,b){m[b]=function(a,c,d,e){return m.isFunction(c)&amp;&amp;(e=e||d,d=c,c=void 0),m.ajax({url:a,type:b,dataType:e,data:c,success:d})}}),m._evalUrl=function(a){return m.ajax({url:a,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0})},m.fn.extend({wrapAll:function(a){if(m.isFunction(a))return this.each(function(b){m(this).wrapAll(a.call(this,b))});if(this[0]){var b=m(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&amp;&amp;b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstChild&amp;&amp;1===a.firstChild.nodeType)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){return this.each(m.isFunction(a)?function(b){m(this).wrapInner(a.call(this,b))}:function(){var b=m(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=m.isFunction(a);return this.each(function(c){m(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){m.nodeName(this,"body")||m(this).replaceWith(this.childNodes)}).end()}}),m.expr.filters.hidden=function(a){return a.offsetWidth&lt;=0&amp;&amp;a.offsetHeight&lt;=0||!k.reliableHiddenOffsets()&amp;&amp;"none"===(a.style&amp;&amp;a.style.display||m.css(a,"display"))},m.expr.filters.visible=function(a){return!m.expr.filters.hidden(a)};var Qb=/%20/g,Rb=/\[\]$/,Sb=/\r?\n/g,Tb=/^(?:submit|button|image|reset|file)$/i,Ub=/^(?:input|select|textarea|keygen)/i;function Vb(a,b,c,d){var e;if(m.isArray(b))m.each(b,function(b,e){c||Rb.test(a)?d(a,e):Vb(a+"["+("object"==typeof e?b:"")+"]",e,c,d)});else if(c||"object"!==m.type(b))d(a,b);else for(e in b)Vb(a+"["+e+"]",b[e],c,d)}m.param=function(a,b){var c,d=[],e=function(a,b){b=m.isFunction(b)?b():null==b?"":b,d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};if(void 0===b&amp;&amp;(b=m.ajaxSettings&amp;&amp;m.ajaxSettings.traditional),m.isArray(a)||a.jquery&amp;&amp;!m.isPlainObject(a))m.each(a,function(){e(this.name,this.value)});else for(c in a)Vb(c,a[c],b,e);return d.join("&amp;").replace(Qb,"+")},m.fn.extend({serialize:function(){return m.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=m.prop(this,"elements");return a?m.makeArray(a):this}).filter(function(){var a=this.type;return this.name&amp;&amp;!m(this).is(":disabled")&amp;&amp;Ub.test(this.nodeName)&amp;&amp;!Tb.test(a)&amp;&amp;(this.checked||!W.test(a))}).map(function(a,b){var c=m(this).val();return null==c?null:m.isArray(c)?m.map(c,function(a){return{name:b.name,value:a.replace(Sb,"\r\n")}}):{name:b.name,value:c.replace(Sb,"\r\n")}}).get()}}),m.ajaxSettings.xhr=void 0!==a.ActiveXObject?function(){return!this.isLocal&amp;&amp;/^(get|post|head|put|delete|options)$/i.test(this.type)&amp;&amp;Zb()||$b()}:Zb;var Wb=0,Xb={},Yb=m.ajaxSettings.xhr();a.attachEvent&amp;&amp;a.attachEvent("onunload",function(){for(var a in Xb)Xb[a](void 0,!0)}),k.cors=!!Yb&amp;&amp;"withCredentials"in Yb,Yb=k.ajax=!!Yb,Yb&amp;&amp;m.ajaxTransport(function(a){if(!a.crossDomain||k.cors){var b;return{send:function(c,d){var e,f=a.xhr(),g=++Wb;if(f.open(a.type,a.url,a.async,a.username,a.password),a.xhrFields)for(e in a.xhrFields)f[e]=a.xhrFields[e];a.mimeType&amp;&amp;f.overrideMimeType&amp;&amp;f.overrideMimeType(a.mimeType),a.crossDomain||c["X-Requested-With"]||(c["X-Requested-With"]="XMLHttpRequest");for(e in c)void 0!==c[e]&amp;&amp;f.setRequestHeader(e,c[e]+"");f.send(a.hasContent&amp;&amp;a.data||null),b=function(c,e){var h,i,j;if(b&amp;&amp;(e||4===f.readyState))if(delete Xb[g],b=void 0,f.onreadystatechange=m.noop,e)4!==f.readyState&amp;&amp;f.abort();else{j={},h=f.status,"string"==typeof f.responseText&amp;&amp;(j.text=f.responseText);try{i=f.statusText}catch(k){i=""}h||!a.isLocal||a.crossDomain?1223===h&amp;&amp;(h=204):h=j.text?200:404}j&amp;&amp;d(h,i,j,f.getAllResponseHeaders())},a.async?4===f.readyState?setTimeout(b):f.onreadystatechange=Xb[g]=b:b()},abort:function(){b&amp;&amp;b(void 0,!0)}}}});function Zb(){try{return new a.XMLHttpRequest}catch(b){}}function $b(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}m.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/(?:java|ecma)script/},converters:{"text script":function(a){return m.globalEval(a),a}}}),m.ajaxPrefilter("script",function(a){void 0===a.cache&amp;&amp;(a.cache=!1),a.crossDomain&amp;&amp;(a.type="GET",a.global=!1)}),m.ajaxTransport("script",function(a){if(a.crossDomain){var b,c=y.head||m("head")[0]||y.documentElement;return{send:function(d,e){b=y.createElement("script"),b.async=!0,a.scriptCharset&amp;&amp;(b.charset=a.scriptCharset),b.src=a.url,b.onload=b.onreadystatechange=function(a,c){(c||!b.readyState||/loaded|complete/.test(b.readyState))&amp;&amp;(b.onload=b.onreadystatechange=null,b.parentNode&amp;&amp;b.parentNode.removeChild(b),b=null,c||e(200,"success"))},c.insertBefore(b,c.firstChild)},abort:function(){b&amp;&amp;b.onload(void 0,!0)}}}});var _b=[],ac=/(=)\?(?=&amp;|$)|\?\?/;m.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var a=_b.pop()||m.expando+"_"+vb++;return this[a]=!0,a}}),m.ajaxPrefilter("json jsonp",function(b,c,d){var e,f,g,h=b.jsonp!==!1&amp;&amp;(ac.test(b.url)?"url":"string"==typeof b.data&amp;&amp;!(b.contentType||"").indexOf("application/x-www-form-urlencoded")&amp;&amp;ac.test(b.data)&amp;&amp;"data");return h||"jsonp"===b.dataTypes[0]?(e=b.jsonpCallback=m.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(ac,"$1"+e):b.jsonp!==!1&amp;&amp;(b.url+=(wb.test(b.url)?"&amp;":"?")+b.jsonp+"="+e),b.converters["script json"]=function(){return g||m.error(e+" was not called"),g[0]},b.dataTypes[0]="json",f=a[e],a[e]=function(){g=arguments},d.always(function(){a[e]=f,b[e]&amp;&amp;(b.jsonpCallback=c.jsonpCallback,_b.push(e)),g&amp;&amp;m.isFunction(f)&amp;&amp;f(g[0]),g=f=void 0}),"script"):void 0}),m.parseHTML=function(a,b,c){if(!a||"string"!=typeof a)return null;"boolean"==typeof b&amp;&amp;(c=b,b=!1),b=b||y;var d=u.exec(a),e=!c&amp;&amp;[];return d?[b.createElement(d[1])]:(d=m.buildFragment([a],b,e),e&amp;&amp;e.length&amp;&amp;m(e).remove(),m.merge([],d.childNodes))};var bc=m.fn.load;m.fn.load=function(a,b,c){if("string"!=typeof a&amp;&amp;bc)return bc.apply(this,arguments);var d,e,f,g=this,h=a.indexOf(" ");return h&gt;=0&amp;&amp;(d=m.trim(a.slice(h,a.length)),a=a.slice(0,h)),m.isFunction(b)?(c=b,b=void 0):b&amp;&amp;"object"==typeof b&amp;&amp;(f="POST"),g.length&gt;0&amp;&amp;m.ajax({url:a,type:f,dataType:"html",data:b}).done(function(a){e=arguments,g.html(d?m("&lt;div&gt;").append(m.parseHTML(a)).find(d):a)}).complete(c&amp;&amp;function(a,b){g.each(c,e||[a.responseText,b,a])}),this},m.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(a,b){m.fn[b]=function(a){return this.on(b,a)}}),m.expr.filters.animated=function(a){return m.grep(m.timers,function(b){return a===b.elem}).length};var cc=a.document.documentElement;function dc(a){return m.isWindow(a)?a:9===a.nodeType?a.defaultView||a.parentWindow:!1}m.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=m.css(a,"position"),l=m(a),n={};"static"===k&amp;&amp;(a.style.position="relative"),h=l.offset(),f=m.css(a,"top"),i=m.css(a,"left"),j=("absolute"===k||"fixed"===k)&amp;&amp;m.inArray("auto",[f,i])&gt;-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),m.isFunction(b)&amp;&amp;(b=b.call(a,c,h)),null!=b.top&amp;&amp;(n.top=b.top-h.top+g),null!=b.left&amp;&amp;(n.left=b.left-h.left+e),"using"in b?b.using.call(a,n):l.css(n)}},m.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){m.offset.setOffset(this,a,b)});var b,c,d={top:0,left:0},e=this[0],f=e&amp;&amp;e.ownerDocument;if(f)return b=f.documentElement,m.contains(b,e)?(typeof e.getBoundingClientRect!==K&amp;&amp;(d=e.getBoundingClientRect()),c=dc(f),{top:d.top+(c.pageYOffset||b.scrollTop)-(b.clientTop||0),left:d.left+(c.pageXOffset||b.scrollLeft)-(b.clientLeft||0)}):d},position:function(){if(this[0]){var a,b,c={top:0,left:0},d=this[0];return"fixed"===m.css(d,"position")?b=d.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),m.nodeName(a[0],"html")||(c=a.offset()),c.top+=m.css(a[0],"borderTopWidth",!0),c.left+=m.css(a[0],"borderLeftWidth",!0)),{top:b.top-c.top-m.css(d,"marginTop",!0),left:b.left-c.left-m.css(d,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||cc;while(a&amp;&amp;!m.nodeName(a,"html")&amp;&amp;"static"===m.css(a,"position"))a=a.offsetParent;return a||cc})}}),m.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(a,b){var c=/Y/.test(b);m.fn[a]=function(d){return V(this,function(a,d,e){var f=dc(a);return void 0===e?f?b in f?f[b]:f.document.documentElement[d]:a[d]:void(f?f.scrollTo(c?m(f).scrollLeft():e,c?e:m(f).scrollTop()):a[d]=e)},a,d,arguments.length,null)}}),m.each(["top","left"],function(a,b){m.cssHooks[b]=La(k.pixelPosition,function(a,c){return c?(c=Ja(a,b),Ha.test(c)?m(a).position()[b]+"px":c):void 0})}),m.each({Height:"height",Width:"width"},function(a,b){m.each({padding:"inner"+a,content:b,"":"outer"+a},function(c,d){m.fn[d]=function(d,e){var f=arguments.length&amp;&amp;(c||"boolean"!=typeof d),g=c||(d===!0||e===!0?"margin":"border");return V(this,function(b,c,d){var e;return m.isWindow(b)?b.document.documentElement["client"+a]:9===b.nodeType?(e=b.documentElement,Math.max(b.body["scroll"+a],e["scroll"+a],b.body["offset"+a],e["offset"+a],e["client"+a])):void 0===d?m.css(b,c,g):m.style(b,c,d,g)},b,f?d:void 0,f,null)}})}),m.fn.size=function(){return this.length},m.fn.andSelf=m.fn.addBack,"function"==typeof define&amp;&amp;define.amd&amp;&amp;define("jquery",[],function(){return m});var ec=a.jQuery,fc=a.$;return m.noConflict=function(b){return a.$===m&amp;&amp;(a.$=fc),b&amp;&amp;a.jQuery===m&amp;&amp;(a.jQuery=ec),m},typeof b===K&amp;&amp;(a.jQuery=a.$=m),m});'</body></methods><methods><class-id>Seaside.WARenderer</class-id> <category>*jquery-core</category><body package="JQuery-Core">jQuery	^ (JQueryClass context: self context)		rendererClass: self species;		yourself</body><body package="JQuery-Core">jQuery: anObject	^ self jQuery with: anObject</body></methods><methods><class-id>Grease.GRPackage class</class-id> <category>*jquery-core</category><body package="JQuery-Core">jQueryCore	^ self new		name: 'JQuery-Core';		description: 'jQuery integration for Seaside. Designed to change the way you write Javascript.';		addDependency: 'Javascript-Core';		url: #seasideUrl;		yourself</body></methods><methods><class-id>Javascript.JSScript</class-id> <category>*jquery-core</category><body package="JQuery-Core">jQuery	^ (JQueryClass context: self renderContext)		rendererClass: self rendererClass;		yourself</body><body package="JQuery-Core">jQuery: anObject	^ self jQuery with: anObject</body></methods><initialize><class-id>JQuery.JQuery</class-id></initialize><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>JSObject</name><environment>Javascript</environment><super>Seaside.WAObject</super><private>false</private><indexed-type>none</indexed-type><inst-vars>decoration renderContext rendererClass </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Javascript-Core</category><attributes><package>Javascript-Core</package></attributes></class><class><name>JSScript</name><environment>Javascript</environment><super>Javascript.JSObject</super><private>false</private><indexed-type>none</indexed-type><inst-vars>statements </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Javascript-Core</category><attributes><package>Javascript-Core</package></attributes></class><class><name>WARenderer</name><environment>Seaside</environment><super>Seaside.WAObject</super><private>false</private><indexed-type>none</indexed-type><inst-vars>context lastId </inst-vars><class-inst-vars>default </class-inst-vars><imports></imports><category>Seaside-Core-Rendering</category><attributes><package>Seaside-Core</package></attributes></class><class><name>WAScriptGenerator</name><environment>Seaside</environment><super>Seaside.WAObject</super><private>false</private><indexed-type>none</indexed-type><inst-vars>loadScripts </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Seaside-Core-Document</category><attributes><package>Seaside-Core</package></attributes></class><class><name>WAFileLibrary</name><environment>Seaside</environment><super>Seaside.WAAbstractFileLibrary</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Seaside-Core-Libraries</category><attributes><package>Seaside-Core</package></attributes></class></st-source>