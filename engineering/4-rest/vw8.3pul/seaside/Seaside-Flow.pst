<?xml version="1.0"?><st-source><!-- Name: Seaside-FlowComment: Define control flow as a continuous piece of code, with natural, linear control flow.DbIdentifier: bear73DbTrace: 492585DbUsername: jkottDbVersion: 3.2.0 - pmm.25 1DevelopmentPrerequisites: #(#(#any 'Seaside-Namespace' '') #(#any 'Seaside-Core' '') #(#any 'Seaside-VisualWorks-Core' '') #(#any 'Seaside-Component' '') #(#any 'Seaside-RenderLoop' '') #(#any 'Seaside-Tools-Core' ''))Id: c57ccdab-7cca-4804-9b56-229bc2690838Namespace: SeasidePackageName: Seaside-FlowParcel: #('Seaside-Flow')ParcelName: Seaside-FlowPrerequisiteParcels: #(#('Seaside-Namespace' '') #('Seaside-Core' '') #('Seaside-VisualWorks-Core' '') #('Seaside-Component' '') #('Seaside-RenderLoop' '') #('Seaside-Tools-Core' ''))PrintStringCache: (3.2.0 - pmm.25 1,jkott)Url: http://smalltalkhub.com/mc/Seaside/Seaside32/main/Seaside-Flow-pmm.25.mczVersion: 3.2.0 - pmm.25 1Date: 3:31:27 PM June 30, 2017 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.3 (jun17.5) of June 30, 2017 on June 30, 2017 at 3:31:27 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><methods><class-id>Seaside.WAComponent</class-id> <category>*seaside-flow-filters</category><body package="Seaside-Flow">authenticateWith: anAuthenticator during: aBlock	"Authenticate calls during the evaluation of aBlock."		self 		filterWith: (WAAuthenticationFilter new			authenticator: anAuthenticator;			yourself)		during: aBlock</body></methods><methods><class-id>Seaside.WAComponent</class-id> <category>*seaside-flow</category><body package="Seaside-Flow">call: aComponent 	"Pass control from the receiver to aComponent. The receiver will be temporarily replaced with aComponent. Code can return from here later on by sending #answer: to aComponent."	^ self wait: [ :cc | self call: aComponent onAnswer: cc ]</body></methods><methods><class-id>Seaside.WAComponent</class-id> <category>*seaside-flow-dialog</category><body package="Seaside-Flow">chooseFrom: aCollection	"Choose an item from the given aCollection. Answer the selected item."	^ self wait: [ :cc | self chooseFrom: aCollection onAnswer: cc ]</body><body package="Seaside-Flow">chooseFrom: aCollection caption: aString	"Choose an item from the given aCollection with caption aString. Answer the selected item."		^ self wait: [ :cc | self chooseFrom: aCollection caption: aString onAnswer: cc ]</body><body package="Seaside-Flow">chooseFrom: aCollection default: anObject	"Choose an item from the given aCollection and the default anObject. Answer the selected item."	^ self wait: [ :cc | self chooseFrom: aCollection default: anObject onAnswer: cc ]</body><body package="Seaside-Flow">chooseFrom: aCollection default: anObject caption: aString	"Choose an item from the given aCollection, the default anObject and the caption aString. Answer the selected item."		^ self wait: [ :cc | self chooseFrom: aCollection default: anObject caption: aString onAnswer: cc ]</body><body package="Seaside-Flow">confirm: aString	"Display a yes/no dialog with caption aString. Answer true if the response is yes, false if no."	^ self wait: [ :cc | self confirm: aString onAnswer: cc ]</body></methods><methods><class-id>Seaside.WAComponent</class-id> <category>*seaside-flow-filters</category><body package="Seaside-Flow">filterWith: aFilter during: aBlock	| answer |	self session addFilter: aFilter.	answer := aBlock value.	self session removeFilter: aFilter.	^ answer</body></methods><methods><class-id>Seaside.WAComponent</class-id> <category>*seaside-flow-dialog</category><body package="Seaside-Flow">inform: aString	"Display a dialog with aString to the user until he clicks the ok button."	^ self wait: [ :cc | self inform: aString onAnswer: cc ]</body><body package="Seaside-Flow">request: aRequestString	"Display an input dialog with the question aRequestString. Answer the string the user enters."	^ self wait: [ :cc | self request: aRequestString onAnswer: cc ]</body><body package="Seaside-Flow">request: aRequestString default: aDefaultString	"Display an input dialog with the question aRequestString and the default string aDefaultString. Answer the string the user enters."		^ self wait: [ :cc | self request: aRequestString default: aDefaultString onAnswer: cc ]</body><body package="Seaside-Flow">request: aRequestString label: aLabelString	"Display an input dialog with the question aRequestString and the button label aLabelString. Answer the string the user enters."		^ self wait: [ :cc | self request: aRequestString label: aLabelString onAnswer: cc ]</body><body package="Seaside-Flow">request: aRequestString label: aLabelString default: aDefaultString	"Display an input dialog with the question aRequestString, the button label aLabelString and the default string aDefaultString. Answer the string the user enters."	^ self wait: [ :cc | self request: aRequestString label: aLabelString default: aDefaultString onAnswer: cc ]</body></methods><methods><class-id>Seaside.WAComponent</class-id> <category>*seaside-flow</category><body package="Seaside-Flow">wait: aBlock 	"Evaluate aBlock and pass in a continuation that can be evaluated to answer to the place where this very method was called."	^ GRPlatform current seasideSuspendFlowDo: [ :cc | aBlock value: cc ]</body></methods><methods><class-id>Seaside.WAPainterVisitor</class-id> <category>*seaside-flow</category><body package="Seaside-Flow">visitTask: aTask	self visitComponent: aTask</body></methods><methods><class-id>Grease.GRPlatform</class-id> <category>*seaside-flow</category><body package="Seaside-Flow">seasideSuspendFlowDo: aBlock	"Evaluate aBlock, passing in a continuation that can be evaluated to answer to the place where this very method was called. This method is presumed to be executed only within the scope of an executing Callback or Task and should, ideally, create a continuation that includes only the contexts that make up the Callback or Task execution (a partial or delimited continuation). Do not use this method, if you don't understand this comment."	self subclassResponsibility</body></methods><methods><class-id>Grease.GRPackage class</class-id> <category>*seaside-flow</category><body package="Seaside-Flow">seasideFlow	^ self new		name: 'Seaside-Flow';		description: 'Define control flow as a continuous piece of code, with natural, linear control flow.';		addDependency: 'Seaside-Core'; "Methods are added to WARequestContext"		addDependency: 'Seaside-Component'; "Methods are added to WAComponent"		addDependency: 'Seaside-RenderLoop'; "Methods are added to WASession that depend on RenderLoop"		addDependency: 'Seaside-Tools-Core';		url: #seasideUrl;		yourself</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>GRPlatform</name><environment>Grease</environment><super>Grease.GRObject</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Grease-Core</category><attributes><package>Grease-Core</package></attributes></class><class><name>WAPainterVisitor</name><environment>Seaside</environment><super>Seaside.WAVisitor</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Seaside-Core-Rendering</category><attributes><package>Seaside-Core</package></attributes></class><class><name>WAComponent</name><environment>Seaside</environment><super>Seaside.WAPresenter</super><private>false</private><indexed-type>none</indexed-type><inst-vars>decoration </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Seaside-Component</category><attributes><package>Seaside-Component</package></attributes></class></st-source>