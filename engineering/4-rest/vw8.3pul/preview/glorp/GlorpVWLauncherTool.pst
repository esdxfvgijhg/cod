<?xml version="1.0"?><st-source><!-- Name: GlorpVWLauncherToolNotice: Copyright 2002-2017 Cincom Systems, Inc.  All rights reserved.Comment: Simple VisualLauncher extension tool similar to MiniRepositoryManager to simplify Glorp testing.  Loading makes the Launcher status bar (the launcher's footer) show the current target test database.  Clicking on this shows a drop down list with toggles for the various testing states, and a Help for adding further logins to the menu.N.B. the initial value of UseBindingIfSupported toggle is nil, which causes it to defer to each DatabasePlatform subclass' preferences.  Menus let you set UseBindingIfSupported to false, then to toggle it between true (tickmark) and false (no tickmark), each of which overrides platform preferences, or to return to nil, the platform-preference-controlled state.    Unloading this package resets UseBindingIfSupported to nil.DbIdentifier: bear73DbTrace: 499434DbUsername: nrossDbVersion: 8.3 - 1DevelopmentPrerequisites: #(#(#any 'Assets' '') #(#any 'Glorp' '') #(#any 'SUnit' '') #(#any 'SUnitUI' '') #(#any 'Database' '') #(#any 'GlorpTest' '') #(#any 'NetClientBase' ''))DisregardedPrerequisites: #(#(#name 'GlorpVWPort' #componentType #package))Namespace: SmalltalkPackageName: GlorpVWLauncherToolParcel: #('GlorpVWLauncherTool')ParcelName: GlorpVWLauncherToolPrerequisiteDescriptions: #(#(#name 'Assets' #componentType #package) #(#name 'Glorp' #componentType #bundle) #(#name 'SUnit' #componentType #package) #(#name 'SUnitUI' #componentType #package) #(#name 'Database' #componentType #package) #(#name 'GlorpTest' #componentType #bundle) #(#name 'NetClientBase' #componentType #package))PrerequisiteParcels: #(#('Assets' '') #('Glorp' '') #('SUnit' '') #('SUnitUI' '') #('Database' '') #('GlorpTest' '') #('NetClientBase' ''))PrintStringCache: (8.3 - 1,nross)Version: 8.3 - 1Pre-Unload Block: 	[:package |Transcript cr; show: 'Resetting DatabasePlatform useBindingIfSupported: nil'.Glorp.DatabasePlatform useBindingIfSupported: nil]Date: 1:45:14 PM March 17, 2017 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.3 (mar17.3) of March 17, 2017 on March 17, 2017 at 1:45:14 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>GlorpIcons</name><environment>Smalltalk</environment><super>AlphaBlendedIcons</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>GlorpVWLauncherTool</package></attributes></class><class><name>GlorpSessionMiniTool</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>labelHolder </inst-vars><class-inst-vars></class-inst-vars><imports>			Glorp.*			</imports><category>GenericVisualLauncherTool</category><attributes><package>GlorpVWLauncherTool</package></attributes></class><class><name>GlorpTestingMiniTool</name><environment>Smalltalk</environment><super>GlorpSessionMiniTool</super><private>false</private><indexed-type>none</indexed-type><inst-vars>defaultLogin intrinsicWidthConstraint intrinsicHeightConstraint </inst-vars><class-inst-vars></class-inst-vars><imports>			Glorp.*			</imports><category>GlorpTestHelperUI</category><attributes><package>GlorpVWLauncherTool</package></attributes></class><comment><class-id>GlorpTestingMiniTool</class-id><body>GlorpTestingMiniTool adds a drop down to the VisualLauncher's status bar.  It lets a user exercising Glorp's tests toggle the login, binding-forcing state, etc.Instance Variables:	defaultLogin	&lt;Login&gt;	The defaultLogin of GlorpDatabaseLoginResource	intrinsicWidthConstraint	&lt;Constraint&gt;	The intrinsicWidth of the parts in this application	intrinsicHeightConstraint	&lt;Constraint&gt;	The intrinsicHeight of the parts in this application</body></comment><methods><class-id>GlorpSessionMiniTool</class-id> <category>aspects</category><body package="GlorpVWLauncherTool">labelHolder	^labelHolder isNil ifTrue: [labelHolder := String new asValue] ifFalse: [labelHolder].</body></methods><methods><class-id>GlorpSessionMiniTool</class-id> <category>private</category><body package="GlorpVWLauncherTool">availableLogins	^self subclassResponsibility</body><body package="GlorpVWLauncherTool">databaseLoginResource	^self subclassResponsibility</body><body package="GlorpVWLauncherTool">defaultLoginLabel	^self databaseLoginResource defaultLogin		ifNil: [String new]		ifNotNil: [:value | value name]</body><body package="GlorpVWLauncherTool">installLabelController	| controller |	controller := ControllerWithSelectMenu new.	controller		selectMenuHolder: [self mainMenu];		menuHolder: [self miscMenu];		performer: self.	(self widgetAt: #labelHolder) controller: controller</body><body package="GlorpVWLauncherTool">openTestRunner	XProgramming.SUnit.TestRunner open.</body><body package="GlorpVWLauncherTool">tablePopulatorResource	^self subclassResponsibility</body><body package="GlorpVWLauncherTool">updateDefaultLoginLabel	self labelHolder value: self defaultLoginLabel</body></methods><methods><class-id>GlorpSessionMiniTool</class-id> <category>events</category><body package="GlorpVWLauncherTool">defaultLoginChanged	self updateDefaultLoginLabel.</body></methods><methods><class-id>GlorpSessionMiniTool</class-id> <category>testing</category><body package="GlorpVWLauncherTool">exdiTracingEnabled	^ExternalDatabaseFramework shouldTrace: 1.</body><body package="GlorpVWLauncherTool">loggingEnabled	^DatabaseAccessor loggingEnabled.</body><body package="GlorpVWLauncherTool">tablePopulatorNeedsSetup	^(self tablePopulatorResource ifNil: [^false]) needsSetup.</body><body package="GlorpVWLauncherTool">useBindingIfSupported	^DatabasePlatform useBindingIfSupported.</body></methods><methods><class-id>GlorpSessionMiniTool</class-id> <category>actions</category><body package="GlorpVWLauncherTool">openTestRunnerOnClasses: classes	| testrunner menu filteredClasses |	testrunner := XProgramming.SUnit.TestRunner new.	filteredClasses := classes select: [:eachClass | eachClass inheritsFrom: XProgramming.SUnit.TestCase].	menu := Menu labelArray: (filteredClasses collect: [:each | each printString]) values: filteredClasses.	testrunner scriptModel value: menu.	testrunner open.</body><body package="GlorpVWLauncherTool">showHelp	ComposedTextView		open: self class help asValue		label: ('&lt;1s&gt; Help' expandMacrosWith: self class name)		icon: nil		extent: 500 @ 300.</body></methods><methods><class-id>GlorpSessionMiniTool</class-id> <category>initialize-release</category><body package="GlorpVWLauncherTool">initialize	super initialize.	self databaseLoginResource ifNotNil: [:value | value when: #changedDefaultLogin send: #defaultLoginChanged to: self].	self defaultLoginChanged.</body><body package="GlorpVWLauncherTool">release	self databaseLoginResource ifNotNil: [:r | r removeAllActionsWithReceiver: self].	super release.</body></methods><methods><class-id>GlorpSessionMiniTool</class-id> <category>interface opening</category><body package="GlorpVWLauncherTool">postBuildWith: aBuilder	super postBuildWith: aBuilder.	self installLabelController.</body></methods><methods><class-id>GlorpSessionMiniTool</class-id> <category>private-menu</category><body package="GlorpVWLauncherTool">createConnectOrDisconnectItemFor: aLogin	| item s |	s := TextStream on: String new.	s		nextPutAll: aLogin name;		emphasis: #color -&gt; ColorValue gray;		nextPutAll: ' using ';		nextPutAll: aLogin platform class name.	item := MenuItem labeled: s contents.	self databaseLoginResource defaultLogin = aLogin ifTrue: [item labelImage: self class selectedIcon].	item value: 			[:controller |			(self databaseLoginResource)				defaultLogin: aLogin;				reset].	^item</body><body package="GlorpVWLauncherTool">mainMenu	| menu |	menu := Menu new.	self availableLogins do: [:each | menu addItem: (self createConnectOrDisconnectItemFor: each)].	menu		augmentFrom: self class		to: GlorpSessionMiniTool		menuName: #mainMenu		for: self.	^menu</body><body package="GlorpVWLauncherTool">miscMenu	| menu |	menu := Menu new.	menu		augmentFrom: self class		to: GlorpSessionMiniTool		menuName: #miscMenu		for: self.	^menu</body></methods><methods><class-id>GlorpSessionMiniTool class</class-id> <category>icons</category><body package="GlorpVWLauncherTool">bindingIcon	^GlorpIcons visualFor: #Binding.</body><body package="GlorpVWLauncherTool">cancelIcon	^GlorpIcons visualFor: #Cancel.</body><body package="GlorpVWLauncherTool">helpIcon	^GlorpIcons visualFor: #Help.</body><body package="GlorpVWLauncherTool">logIcon	^GlorpIcons visualFor: #Log.</body><body package="GlorpVWLauncherTool">selectedIcon	^GlorpIcons visualFor: #Selected.</body><body package="GlorpVWLauncherTool">setupIcon	^GlorpIcons visualFor: #Rebuild.</body><body package="GlorpVWLauncherTool">testRunnerIcon	^GlorpIcons visualFor: #TestRunner.</body><body package="GlorpVWLauncherTool">toolIcon	^GlorpIcons visualFor: #Database</body><body package="GlorpVWLauncherTool">traceIcon	^GlorpIcons visualFor: #Trace.</body></methods><methods><class-id>GlorpSessionMiniTool class</class-id> <category>help</category><body package="GlorpVWLauncherTool">help	^self subclassResponsibility</body></methods><methods><class-id>GlorpTestingMiniTool</class-id> <category>accessing</category><body package="GlorpVWLauncherTool">defaultLogin	^defaultLogin.</body><body package="GlorpVWLauncherTool">defaultLogin: aLogin	defaultLogin := aLogin.</body></methods><methods><class-id>GlorpTestingMiniTool</class-id> <category>private</category><body package="GlorpVWLauncherTool">availableLogins	| defaults external |	defaults := ((Pragma allNamed: #login in: GlorpTestingMiniTool)				collect: [:ea | self perform: ea selector]) asSortedCollection: [:a :b | a name &lt; b name].	external := self class readLogins.	^external isEmpty ifTrue: [defaults] ifFalse: [external]</body><body package="GlorpVWLauncherTool">databaseLoginResource	^Glorp at: #GlorpDatabaseLoginResource ifAbsent: [self].</body><body package="GlorpVWLauncherTool">intrinsicHeight	^self intrinsicHeightConstraint value</body><body package="GlorpVWLauncherTool">intrinsicHeightConstraint	^intrinsicHeightConstraint ifNil:		[intrinsicHeightConstraint := Constraint			owner: self			name: #intrinsicHeight			rule: [(self widgetAt: #labelHolder) displayContents intrinsicHeight max: (self widgetAt: #toolIcon) intrinsicHeight]			initialValue: 10]</body><body package="GlorpVWLauncherTool">intrinsicWidth	^self intrinsicWidthConstraint value</body><body package="GlorpVWLauncherTool">intrinsicWidthConstraint	^intrinsicWidthConstraint ifNil:		[intrinsicWidthConstraint := Constraint			owner: self			name: #intrinsicWidth			rule: [(self widgetAt: #labelHolder) displayContents intrinsicWidth + (self widgetAt: #toolIcon) intrinsicWidth]			initialValue: 200]</body><body package="GlorpVWLauncherTool">tablePopulatorResource	^Glorp at: #GlorpDemoTablePopulatorResource ifAbsent: [nil].</body></methods><methods><class-id>GlorpTestingMiniTool</class-id> <category>actions</category><body package="GlorpVWLauncherTool">openTestRunner	self openTestRunnerOnClasses: (Store.Registry pundleNamed: 'GlorpTest') definedClasses</body></methods><methods><class-id>GlorpTestingMiniTool class</class-id> <category>accessing</category><body package="GlorpVWLauncherTool">availableLoginsIn: filename	| file stream original proper |	file := ObjectMemory imageDirectory / filename.	file definitelyExists ifFalse: [^Dictionary new].	stream := file contentsOfEntireFile readStream.	original := (Net.INIScanner on: stream) tokenizeAsDictionary.	proper := Dictionary new.	original keysAndValuesDo: [:key :value | proper at: key asUppercase put: value].	^proper</body><body package="GlorpVWLauncherTool">readLogins	| dict logins |	dict := self availableLoginsIn: 'glorp.ini'.	logins := OrderedCollection new.	(dict keys select: [:ea | 'LOGIN*' match: ea]) asSortedCollection do: 			[:key |			| sub db |			sub := dict at: key.			db := (sub at: 'database' ifAbsent: [Glorp.PostgreSQLPlatform]) asQualifiedReference value.			logins add: ((Login new)						name: (sub at: 'name' ifAbsent: [key]);						database: db new;						username: (sub at: 'username' ifAbsent: [nil]);						password: (sub at: 'password' ifAbsent: [nil]);						connectString: (sub at: 'connect' ifAbsent: [nil]);						yourself)].	^logins</body></methods><methods><class-id>GlorpTestingMiniTool class</class-id> <category>help</category><body package="GlorpVWLauncherTool">help	^'You can define your custom logins by adding any number of sections prefixed with ''login'' to your ''glorp.ini'' file,	[login1]	name=PostgreSQL (Internet)	database=Glorp.PostgreSQLPlatform	username=guest	password=guest	connect=store.cincomsmalltalk.com:5432_glorptestYou can also define your own logins by extending GlorpTestingMiniTool in your package and adding instance side methods returning instances of Login marked with a &lt;login&gt; pragma,	GlorpTestingMiniTool&gt;&gt;glorpTestOnLocalhost		&lt;login&gt;		^(Login new)			name: ''glorp-test @ localhost'';			database: PostgreSQLPlatform new;			username: ''glorp-test'';			password: ''mypassword'';			connectString: ''localhost_glorp-test'';			yourselfEach platform that supports binding sets it or not as its defaults prefer.  You can use this tool''s menus to override these defaults and force the state for test purposes.  Remember that Store uses Glorp, so will use your forced state.  Unloading this package resets to using the platform''s preferences.'</body></methods><methods><class-id>GlorpIcons class</class-id> <category>png imports</category><body package="GlorpVWLauncherTool">Binding	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'Binding.png'&gt;	&lt;md5sum: #[117 142 221 9 178 6 76 206 148 55 176 109 190 39 43 179]&gt;	^[AlphaCompositedImage image: ((Image extent: 16@16 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@O???0=^W%:?WU5]?55]W^=^W%9_W%9^@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0=^W%;OW%9^?7]6]/&gt;0+:;?-[N2?65-[U=^W%8@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&gt;?W%9^?7E0\O&gt;#(I;?$IBO?8ZE!_&gt;&amp;)JK?ZV%(W59^W C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@?????6U$YO&gt;H!HS?!XRD?59^W-=^W%;?\7M2?8:J"O=&amp;YVU_W%9^@O???0C???&lt;@????@O???0C???&lt;@????@O????= XFC? G9&lt;?7U5]]=^W%8_W%9^359^W/=+Z&amp;+?_75;?6Y%YPC???&lt;@????@O???0C???&lt;@????@O???0C???&gt;OWU5]?6U$YO==^''''?X&amp;I"359^W.=)ZV''?#X.K?6=/[?=$YFP@????@O???0C???&lt;@????@O???0C???&lt;@????@O???9=^W%;?YFQ$?7U3\_="X&amp;K?''I.Z?::,+O&gt;4,+G?[V1,K59^W C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????''59^W/="XVG?Z&amp;!&amp;?7E1\_&gt;Y&amp;Y''?''Y6]?:N!''?=(Y6_?WU5];59^W%=^W%8@????@O???0C???&lt;@????@O???0C???&gt;OW%9^?59^W/=!XVG?[6=/?9FQ$_&gt;Q#9C?#X*I?61+Z/&gt;%(*G?[V5-W59^W C???&lt;@????@O???0C???&lt;@????@O???1=]WU4/W%9^K59^W/=.[&amp;;?!(ZF?8RC ?=?_W3?Z6)+?:V#(_=(ZF]_W%9^@O???0C???&lt;@????@O???0C???&lt;@????@O???0C?????YFM#?6-+Z?=&lt;_G3?Y6]'';59^W/=3\7K?#X*H?6U$YE=]WU4@????@O???0C???&lt;@????@O???0C???&lt;@?????5=_W?=8]''W?XFA ;55]WQ=^W%;OW%9^?7Y6]/&gt;H!XS?YVU%@O???0C???&lt;@????@O???0C???&lt;@????@O???8=]WU7?YVQ$?75:^_="X&amp;KOW%9^;59^W/=9^G#? G5;?6U%YPC???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????''59^W/=$YFS?]WM1?69.[_=5]GS?]''M2?6%(ZL=^W%8@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&gt;_W%9^?6M"X/=.Z6+?[&amp;-)?6U%YL=^W%8OWU5]@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???8=]WU7?WU5]?59^W,=]WU4OW%9^@O???0@a')))] once</body><body package="GlorpVWLauncherTool">Cancel	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'Cancel.png'&gt;	&lt;md5sum: #[253 102 170 123 200 122 178 154 158 166 221 55 78 43 191 152]&gt;	^[AlphaCompositedImage image: ((Image extent: 16@16 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;_C A4#04@\&lt;&lt;N@GS?D A&lt;?1H@_L&lt;N@GROC A4G08@\0C???&lt;@????@O???0C???&lt;@????@O???0C???=_CPA3;1H@^?&lt;*GI??O3J;?3&lt;1./=@L+3?N266?2(\''&gt;&lt;S@G1_CPA3@O???0C???&lt;@????@O???0C???=_C A4?14M#_&lt;;K[[?_7_R?&gt;O =_???????????=WR;?&gt;@]=S?N266?1T@ E&lt;N@GL@????@O???0C???&lt;_C A4?1H@_O&lt;;K[[?,J+$???????#8_S?''9#Z?:*%7/?/;/#??????:&gt;)8?&lt;;K[[/D0A&lt;G04@\0C???&lt;@????#08@]O&lt;*GI??%8?[??????&gt;,)&gt;G?NB22?3X),O&lt;&gt;L+G?4=C-????????????\&amp;''M?2(\''8&lt;N@GP@????@O???=&lt;N@GS?PCJ&lt;?&gt;O =_?!8OS?NB.1?3X),O&lt;?L+O?4=C/??????&gt;%(]+?;&gt;?9?&lt;_D:/&lt;;K[W_C A4@O???0C?????D A&lt;?380./??????''Y[Y?3P(+/&lt;&gt;L+G?4,?.??????&gt;''(-/?KBB"?&lt;F?9_??????O3J;?08@]@C???&lt;@?????1H@_O&lt;?L[+??????92U6O&lt;&lt;LJ;?4,?-??????&gt;&amp;(]+?KRB#?2(^(O?A/.S??????3&lt;2.?&lt;M@GL@????@O???=&lt;N@GO?N266?&gt;O =_? 7/O?4]C-??????&gt;&amp;(]+?KA&gt;"?2(^(O&lt;3JJK?;&gt;78?;^39O&lt;8J+G_C A3@O???0C???&gt;_C A3?2(\''?=?]-O???????????&gt;%(M''?J!: ?2$]''?&lt;3JJO?3&lt;7+??????=4Z\;?I1"[''08@]@C???&lt;@????G08@]O&lt;R@G3?N266?:&gt;)8???????;&gt;78?:R_6_&gt;#''-_?;&gt;;8??????&gt;0*.O?OB:6?1@@^A&lt;N@GP@????@O???0C???=/CPA3?1P@ O&lt;&lt;K+[?_7[S?=[S&lt;O???????????&lt;[C:?=3Z\;?N266?1T@ F&lt;N@GL@????@O???0C???&lt;@????@O???6&lt;N@GS?D A&lt;?2(\''?&lt;;K[[?O3F;?3&lt;1.?&lt;8J+G?I1"[?1@@^E&lt;M@GL@????@O???0C???&lt;@????@O???0C???&lt;@????G08@]I&lt;M@GO_C A4?08@]O&lt;N@GS_C A4''08@]A&lt;N@GP@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0@a')))] once</body><body package="GlorpVWLauncherTool">Database	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'Database.png'&gt;	&lt;md5sum: #[14 216 158 212 250 171 70 13 217 154 126 226 92 216 21 26]&gt;	^[AlphaCompositedImage image: ((Image extent: 16@16 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@O???0C???=_Z3P\''605GL=,MQ3?Z3T\?605GO=+MQ3?[CT\?605GO=+MQ3O[CT\''6,5GE=,MQ0@????@O???0C???&gt;O[CT\?8QMLO&gt;&amp;\EC?.8Y$?&lt;VP[??E$F??1YA.?&lt;VP[??E$F??1YA/?;^AX_&gt;%[4?? 400#605G@C???&lt;@?????605GO?E$V??/8))?;:JZO&gt;&gt;"&amp;#?-8E ?:98U?&gt;%[T7?''6]G?9=(RO&gt;,]UW?.8Y$?&lt;VQ[?=+MQ0@????@O????=,MQ3?*WEQ?;*EX??B#&amp;3?1YA/?&lt;VP[??E$F??1YA/?&lt;ZQ[??E$F;?/X!''?;&gt;JZO&gt;5_%7?[CT\@O???0C????/Z3P\?8=VN_&gt;%[T;?.XM!?;:IZO&gt;#[D3?''6]G?9=''Q?&gt;_Y4_?*''IR?;"BX/?A"6+?''FUG;605G@C???&lt;@????+605GO=,MQ3?_TX*?9-%Q/&gt;(\%K?''&amp;]G?9=''RO&gt;_Y4_?&amp;FEA?9)#QO&gt;[X4W?!T81?605GJ=+MQ0@????@O????=,MQ3?.HQ#?9]"QO&gt;DS#G? D$-?6,5GO=+MQ3?Z3T\?605GO=5O2W? D(.?9U P/&gt;8 6O?Z3T\@O???0C?????Z3T\?:!2T/&gt;9!FO?0X5,?&lt;VQ[??E$F??1)E/?&lt;VP[??E$V??1YE/?;.GY?&gt;="V#?,75]?6,5G@C???&lt;@????;605GO&gt;OU#''?)V9N?;&amp;CX_&gt;&gt;"V#?)F1L?9=''RO&gt;_Y4_?''6]G?:)2T/&gt;9 6K?0H-*?91%Q&gt;=,MQ4@????@O???:=,MQ3?Z3T\?79FJ/&gt;[YD[?*GIR?99''RO&gt;_Y4#?''6]H?9!!P_&gt;ZX4S?&amp;6ME?8UML_=+MQ2/[CT\@O???0C?????Z3T\?;"CX?&gt;XX4S?!D81?8AIKO=,MQ3?Z3T\?605G_=,MQ3?]S&lt;%?7=JK/&gt;UXDK?.HQ#?6,5G@C???&lt;@?????605GO&gt;(\UK?.XQ#?&lt;BL[O?E$F;?1YA/?&lt;VP[??E$F??1YE/?&lt;VQ[?&gt;;!6_?/X%(?;I=W_=,MQ4@????@O???&gt;=+MA3?#5\9?:U-S/&gt;9 6G?/(%(?:M,SO&gt;_Y4_?''6]H?:A(RO&gt;*\%K?.XM"?&lt;FKZ/&gt;\Y$_/[CT\@O???0C???=_[CT\;6,5GO==Q"+?&amp;&amp;QE?:%2T/&gt;^Y4#?''6]H?9=''Q?&gt;XXTG?&amp;VMD?9-#Q_&gt;ESSG/[CT\W605G@C???&lt;@????@O???1=+MA1/[CT]+6,4GK=+MQ3?[CT\?6,4GO=+MA3?Z3T\/605GJ=,MQ1/[CT\G6,4G@C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0@a')))] once</body><body package="GlorpVWLauncherTool">Help	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'Help.png'&gt;	&lt;md5sum: #[221 229 139 205 63 53 146 24 33 87 175 218 158 20 108 80]&gt;	^[AlphaCompositedImage image: ((Image extent: 16@16 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;_[CT\''605GN=+MA3?]#8$?7X?IN=+MQ2_Z3T\G6,4G@C???&lt;@????@O???0C???&lt;@????@O???0C???=?Z3T\?7\?IO&gt;!Z43?1YA/?&lt;RO[/?E$F??/())?:E+SO=6O2Q?[CT\@O???0C???&lt;@????@O???0C???=?[CT\?8-TM?&gt;&gt;"&amp;''?3:NG??S)8_????????????/7=_?X-)??/8-)?7-DJG=,MQ0@????@O???0C???&lt;/[CT\?7X?IO&gt;&gt;"&amp;''?08=,??/7=O??????+75 ?;A&lt;W_?$4,[??????&lt;"] ?&gt;&gt;"&amp;''?]#&lt;$K605G@C???&lt;@????''605GO&gt;!Z43?0H1*?;:HY??:=/S?;M?X?:57U/&gt;6 E??3*.T???????N+93?.(U#?:E+SI=+MQ0@????@O???&gt;=,MQ3?1YA/?;*DYO&gt;;!VS?-W=^?:56U_&gt;5 E;?-G5]?=3C,/??????1:VO?:16UO&gt;&gt;"&amp;''/[CT\@O???0C?????]#&lt;$?&lt;RO[_&gt;6_5??-8A ?;^@XO&gt;6_5??-G5]?=N2''_??????&gt;_S2?:]2UO&gt;$[T7?1)E/?605G@C???&lt;@?????7X?IO?D#67?,71\?;I&lt;WO&gt;3_E3?,71[??W.:O??????&gt;_S1?;BAY_&gt;$[T;?(&amp;-K?&lt;VP[?=,MQ0@????@O???&gt;=,MQ3?/())?;E;V/&gt;/^U#?+7!W?:57U???????;NCX?:%3U_&gt;%[4;?(61L?:%1T_&gt;9!FO/[CT\@O???0C???&gt;_Z3P\?:I,SO&gt;;!&amp;S?+GUT?:-4T?&gt;+]ES??????&gt;[V2?&gt;&amp;[4;?)F1L?:E)R_&gt;:!FK?''FUG''6,5G@C???&lt;@????O605GO=6O"O?/())?;I&lt;V?&gt;''\EC?)6=P?=R:*O?B''H[?(&amp;)J?:E*R/&gt;,]UW?/())?7D9HC=,MQ0@????@O???0C???&gt;OZ3P\?7-DJO&gt;?"&amp;''?.HI"?;RCY_???????????:M,SO&gt;8 &amp;G?/())?7-DJH=,MQ0@????@O???0C???&lt;@????@O???8=,MQ3?]#&lt;$?:E+SO&gt;?"&amp;''?192B?;*L[?&gt;/^U#?&amp;6UF?7D9HH=,MQ0@????@O???0C???&lt;@????@O???0C???&lt;@????O6,4GJ=+MA3?Z3T\?605GO=,MQ3/[CT\+605GS=+MQ0@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0@a')))] once</body><body package="GlorpVWLauncherTool">Log	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'Log.png'&gt;	&lt;md5sum: #[173 104 191 207 24 155 230 160 12 206 238 27 98 129 212 77]&gt;	^[AlphaCompositedImage image: ((Image extent: 16@16 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '''3]BXO&lt;7PVC?M$E ?3JM1?&lt;1#L[?L(3G?3JM1?&lt;1#L[?L(7G?3FL1/&lt;2#\_?LX3F?4FZ3PC???&lt;@????@O????&lt;6PVC?UV^W?4QQ^O&gt;V5&gt;''?%-#)?9[W:_&gt;V5&gt;''?%-#*?9[W:_&gt;V6N''?%-_)?9[X:_&lt;2#\_OM4E @O???0C?????M4I ?5U''%?=DT''''?"&lt;;$?8/N9O&gt;J3NS?!&lt;+"?8WH8/&gt;A1NC?_,G^?7*&gt;7O&gt;N4NW?LX3F?3!@X4=ULZD@?????3]BX_=UY9_?QEE8?:KI4O&gt;$2=G?(\+P?9?G3?&gt;]1\;?&amp;,SL?9''B3O&gt;V/&lt;+?#=C%?3JM1?=0X)_?"&amp;&gt;&gt;''5,9)O&lt;7PVC?UV^W?4QR^O&gt;M4NW?#=G&amp;?83O9_&gt;I3NS?!,''"?8OE8O=?0-??^;?]?8#J8/=%&amp;,W?0\B??85&gt;)O=XMZO?M4I ?5U(&amp;O=DTW#?(L#O?:KI3?&gt; 2\??'',[N?97E3/&gt;Z0&lt;7?&amp;LCL?9B:2O=D",+?PX[I?9"62.&gt;.,[5OXDJ[?3]BXO=UZI#?QEI9?8_J8?&gt;H2&gt;O?!&lt;+"?8WH8_&gt;B1^C? LO_?7&amp;&lt;7_=C"\+?P(_I?6"-5O=J"&lt;T/Y)''K@O????&lt;7P&amp;G?UV^W?4QR^O&gt;\1L3?''LWM?9/D3O&gt;[0&lt;7?&amp;LGK?9#@3O=F"\#?PX[H?6F&amp;4?=F#,3?MVFO@O???0C?????M$E ?5U''%?=DTW#?_&lt;O^?8CC7?=?0=;?_,K_?73@7_=O%L;?PX[H?6F&amp;4?=J$L7?L(#F?3UCX0C???&lt;@?????3]BX_=UY9_?QEI8?9Z?2?&gt;V0L/?%+?J?9W@2/= %K3?M7R8?5BU3/=K$\;?]+/^?3JM1?&lt;6PV@@????@O????&lt;7PVC?UV^W?4QR^O=8/M3?^[7\?7";7O=7/M/?R&amp;M??3YGZ?&lt;; L[?YZ+T?8/N9O&lt;2#\_?M$E @O???0C?????M4I ?5U''%?=DT''#?$[/I?9J&lt;2_&gt;P.&lt;#?#[KA?4IJS?=!^X7?_*3F?8271/&gt;K3.S?LX3F?3YAX@C???&lt;@?????3YAXO=UY9_?QEI8?9[W:_&gt;V5&gt;''?%-#)?9[W:_&gt;V6N+?%-#)?9[W:_&gt;V6N+?%-_)?3FL1/&lt;7P&amp;D@????@O????&lt;6PVC?O$)-?31HZ_&lt;1#L[?LX3F?3FL1/&lt;1#L[?LX3F?3FL1/&lt;1#L[?L(7G?3JL1?=A&amp;\3?M$E @O???0C???&gt;_M4E ?3YAXO&lt;7PVC?M$E ?3]AXO&lt;6PVC?M$E ?3YAXO&lt;7PVC?M$E ?3YAXO&lt;7PVC?M4I #3YAX@C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0@a')))] once</body><body package="GlorpVWLauncherTool">Rebuild	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'Rebuild.png'&gt;	&lt;md5sum: #[113 47 235 121 75 17 150 211 83 128 247 195 144 102 136 188]&gt;	^[AlphaCompositedImage image: ((Image extent: 16@16 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@O???0C???&lt;@????@O???0C???&gt;/W%9^?59^W%=^W%8@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???=?W%9^?7!8^O&gt;2,+K?[&amp;9.W59^W C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????+55]W_=#X6O?]''Y6?:6-+_=^W%8OW%9^@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;/W%9^;59^W/=)ZV''?$9NS?59^W/= XFB/W%9^@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????;55]W_=7]7_?''Y6]?6E!XY=^W%9/W%9^@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????#59^W/="X&amp;K?):^''?:F!(_=&amp;Y&amp;Z/W%9^36A XO=_W5??XFA ''6A X@= XF@/XFA @O???0C???&lt;@????S55]W_="X&amp;K?&amp;Y&amp;Y?9"X&amp;O&gt;E!XW?VU)_?5=_W??I2\''??????&lt;''I2_&gt;D!HSOW5=_;5=_W0C???&lt;@????@O???==^W%;?"(*J?8*J".=^W%;_U5%]?5)[W?= XFC?V%1 ?6A XO&gt;M#X7?=OS4?&gt;''):_=_W5&lt;@????@O???0C????/WU5]?8FA _=]WU5OWU5]''5-[W?=]W%??S5!0?4-[!?&lt;&lt;Q6[?WE5_?=ST5O??????W5=_@O???0C???&lt;@????W55]W_=^W%9_WU5]@O????= XFC?W5=_?6A XO= XFC?WE9$?5=_W?= XFC?^7-;?6A X@C???&lt;@????@O???0C???&lt;_W%9^@O???0C?????W5=_???????S4=O?WE5_?4-Z!O=NWX[?SUY,?55^XL=UVE&lt;@????@O???0C???&lt;@????@O???0C???&lt;@?????6A XO??????7]7]?7):^/=_XFK?V55%?6A XO=XV6K/M$E O3]AX@C???&lt;@????@O???0C???&lt;@????@O???&gt;= XFC_Z&amp;)*?9ZV%/?(:N#?7-;^?&lt;''I2_=(ZF#?R5Q-?4MQ]?&lt;6PVA_M4E @O???0C???&lt;@????@O???0C???&lt;/XFA G6A XK=_W5??XFA ?5=_W==_W5??QD1#?4YU__=KV([?UVZV;3YAX@C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????_3]AXO=ASWK?UV^X?4MP]9&lt;7PV@@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&gt;_M$E ?3]AXI&lt;7P&amp;@@????@O???0@a')))] once</body><body package="GlorpVWLauncherTool">Selected	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'Selected.png'&gt;	&lt;md5sum: #[251 26 239 203 199 132 87 154 121 88 219 127 76 239 171 183]&gt;	^[AlphaCompositedImage image: ((Image extent: 16@16 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;_NF$:''3!(N.&lt;8ZS+?O7EB?4A2P.&lt;7ZC*_M6 :G3](N C???&lt;@????@O???0C???&lt;@????@O???0C???=?NF :?4A2P/=$&amp;F_? ["E?8B7!O&gt;A.HW?_KJ@?6RXY?=@\$I?M6 :@O???0C???&lt;@????@O???0C???=?M6 :?5FEUO==,8C? K^C?7*2_?=5+7+?\Z-5?6&gt;)\?=7,G3?_KJ@?4Q6Q''&lt;8ZC(@????@O???0C???&lt;/NF :?4A2P/=&lt;,8C?_;ZB?764 O=:,''7?]Z=:?7F+]_&gt;E-(''?5.[V?&gt;75;_=2)7W?O7EBG3!(N C???&lt;@????''3!(N/=#&amp;F_?_KVA?7&amp;1_O=9,W7?];A;?7N,]?&gt;"2ZS?????????????????^*!&gt;?6NXY9&lt;8ZC(@????@O???&gt;&lt;8ZS/? +"E?7V.^_=5+''''?]Z99?7N-^O&gt;I.(7?=_''5?????????????????9Z:&amp;O==,8C/NF :@O???0C?????O7EB?8B7 ?=/*WO?$+&gt;U?7"0_O=/*WO?5&gt;#Y?????????????????=''$6/&gt;*0*3?_[NA?3!(N C???&lt;@?????3=1P/=?-8O?\:-7?&gt;/3:??+&lt;./?%K&gt;W????????????0]OC?6FNYO=U#E#?U)EZ?7*0_/&lt;8ZC(@????@O???&gt;&lt;8ZS+?_[N@?:_J*_????????????G5&lt;/??????-,*7?5NGU/=]&amp;6K?V9%_?5&gt;]X?=7+W//NF :@O???0C???&gt;_M6 :?6RXY?=6+7''?[:Q3?=7)7/??????0]OC?5NFU_=]''FK?V9) ?5^WWO=3+W_?W)M"''3!(N C???&lt;@????O3](N/=@\$K?_KN@?6.''\O=((63?=O#4?6JOYO=\&amp;&amp;G?V)%^?5^VWO=%(V''?_KJ@?31-O#&lt;8ZC(@????@O???0C???&gt;ONF$:?4Q6Q?=&lt;,(C?\*16?8N/!/=U$U+?VI!]?5:\X/=3+W_?_KJ@?4Q6Q8&lt;8ZC(@????@O???0C???&lt;@????@O???8&lt;7ZC+?O7EB?6NXY?=&lt;,''?? +"E?8F8!_=7+G+?W9Q"?3-,O(&lt;7ZC(@????@O???0C???&lt;@????@O???0C???&lt;@????O3](N*&lt;8ZS+?NF$:?3](N/&lt;8ZC+/NF$:+3](N#&lt;7ZC(@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0@a')))] once</body><body package="GlorpVWLauncherTool">TestRunner	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'TestRunner.png'&gt;	&lt;md5sum: #[93 162 123 254 80 87 89 236 99 38 96 89 59 136 58 193]&gt;	^[AlphaCompositedImage image: ((Image extent: 16@16 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@O???0C???&lt;@????C41LSL=KR4/?SD1L?41LSO=LSD3?SD1L?4-KR?=LSD3OR4-KC41LS@C???&lt;@????@O???0C???&lt;@?????4-KR?=LSD3?VU%Y?8&amp;I"/=^W%;?R4-K?4-KR?=WU5#?!XVE?5%YV_=KR4/_SD1L@O???0C???&lt;@????@O????=LSD3?^G!8?7%9^_=TUES?I2E^?04@\?&lt;N@GS?N3Y%?5APTO=8^G#?]WU5?41LS@C???&lt;@????@O???0C???&gt;?SD1L?5-[V?=8^G#?VU%Y?08@]O&lt;/H*_?I!&amp;Z?1H@]_=VU%[?^G!8?5-[V:=KR4,@????@O???0C???&lt;@????C41LSL=KR4/?W%9^?8RC ?&lt;N@GS?I1*\?2@R$_&lt;WB7W?_7=&gt;?6A XL=KR4,OSD1L@O???0C???&lt;@????@O???0C???&lt;?SD1L?5YVU/&gt;V%YS?WUZI?1L@]/&lt;S@G[?WEZI?9VT$?=VU%YOSD1L@O???0C???&lt;@????@O???0C???&lt;/R4-K?41LSO=VU%[?$9JR?6VX-O&lt;2#L_?LX3F?7V\,O&gt;O#8??U%YV?4-KR2=LSD0@????@O???0C???&lt;@????@O???8=LSD3?V5-[?8*J"?&lt;2#\_?]&lt;C]?6&amp;46O&lt;6"&lt;K?!(ZF?5)ZV''=LSD0@????@O???0C???&lt;@????@O???0C???&lt;/SD1L?5MST?&gt;E!XW?LX3F?6666_= +MW?N(.=?8JB /=MST4/SD1L@O???0C???&lt;@????@O???0C???&lt;@????@O????=KR4/?$YBP?6&gt;U*O&lt;7#\O?M(7C?6:T)?&gt;O#87?R4-K@O???0C???&lt;@????@O???0C???&lt;@????G41LSN=KR4/?SD1L?8^G!?='' &amp;#?NF :?3!(N/=7"''W? 8NC?41LSN=LSD0/SD1L@O???0C???&lt;@????@O???0C???&gt;OR4-K?59^W/&gt;B (K?NF$:?6*"[/=\%&amp;C?N6$=?79&gt;_/=[V5-?SD1L@O???0C???&lt;@????@O???0C???&lt;@????O41LSO=ST5O? XFA?3!(N/=^&amp;FK?T85W?3=*PO=&lt;_G3?TUEQK41LS@C???&lt;@????@O???0C???&lt;@????@O???0C?????R4-K?7=?_?=. &amp;;?OV,??35,O?=*_V''?^''):?41LS@C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@?????4-KR?=;^7/?!HNC?:F ''/&gt;]''I/? XB@?7U5]_=KR4,@????@O???0C???&lt;@????@O???0C???&lt;@????@O???;=LSD3?R4-K?41LSO=KR4/?R4-K?4-KR?=LSD2_SD1L@O???0C???&lt;@????@O???0@a')))] once</body><body package="GlorpVWLauncherTool">Trace	"WARNING: This code was automatically generated during asset import. Regeneration will destroy any manual edits."	&lt;file: 'Trace.png'&gt;	&lt;md5sum: #[103 207 218 93 126 103 138 179 50 174 56 226 200 155 164 211]&gt;	^[AlphaCompositedImage image: ((Image extent: 16@16 depth: 32 bitsPerPixel: 32 palette: (Graphics.FixedPalette redShift: 0 redMask: 255 greenShift: 8 greenMask: 255 blueShift: 16 blueMask: 255) usingBits: (ByteArray fromPackedString: '@O???0=VU%ZOU%YV;5YVU/=VU%[/U%YV''5UUUQ=UUUT@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0=VU%[OU%YV?71&lt;_O?Y6]''?=/[6?&gt;G!8_&gt;Z&amp;)+/U%YVK5YVU C???&lt;@????@O???0C???&lt;@????@O???0C???=?U%YV?71&lt;_O?:&gt;/+?&gt;_''9???????:&gt;/+?;.;.?:V%)[=VU%X@????@O???0C???&lt;@????@O???0C???&lt;@????75UUU_?P4MC?&gt;O#8???????+:&gt;/?7]7]?=ST5O?-;^7?W5=_K5YVU C???&lt;@????@O???0C???&lt;@????@O????=VU%[????????????.;.;?7]7]?=+Z6/?O3&lt;??7-;^?7-;^3=UUUT@????@O???0C???&lt;@????@O???0C????/U%YV?&gt;_''9??6=/[?8&gt;O#?=_W5??R4-K?1LSD?&gt;_''9?=2\''H?U%YV@O???0C???&lt;@????@O???0C???&lt;@????''5UUU_&gt;Y&amp;Y''?=_W5?&lt;;N3/?J2,+?0,KB?&lt;OC0??[6=//UUUU@O???0C???&lt;@????@O???0C???&lt;@????@O???1=UUUW/U%YV?:V%)_?+:&gt;/?;.;.?&gt;/+:??''9&gt;_?\''I2769.[S=!M6H/T!9U@O???0C???&lt;@????@O???0C???&lt;@????K5YVU+=VU%[?W%9^?7-;^?=2\''K?U%YV759\WO=!OVG?VRQZ?5P_U%=QGUP@????@O???0C???&lt;@????@O???0C???&lt;@????G5YVU#=VU%X?U%YVC5YVU#=VK%_?T!5T?7%C^/=;Q''3?T1=VW5D]U@C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;OT!9U;5D]UO= J6K?^4Y=?7)F^?=TG5Y_TQ5T@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???5=RG%W?T!5T?6@+X?=;Q''7?^$Y;?5L_U%=QGUP@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????W5H]UO=RG%W?XB-#?7-F__=:QW/?UA=VW5D]U@C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???=_T!9U?5H]UO= J6O?^4Y=?7%C^.=QGUP@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???5=RGUS?TQ5T?6@+X?=+MV7/TQ5T@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????@O???0C???&lt;@????S5D]UN=QGUS_T!5TK5H^UP@a')))] once</body></methods><methods><class-id>GlorpSessionMiniTool</class-id> <category>menu items</category><body package="GlorpVWLauncherTool">helpMenuItem	&lt;	menuItem: 'Help'	icon: #helpIcon	nameKey: #help	enablement: nil	indication: nil	menu: #(#mainMenu)	position: 40.10&gt;	self showHelp.</body><body package="GlorpVWLauncherTool">openTestRunnerMenuItem	&lt;	menuItem: 'Open test runner'	icon: #testRunnerIcon	nameKey: #openTestRunner	enablement: nil	indication: nil	menu: #(#mainMenu)	position: 30.10&gt;	self openTestRunner.</body><body package="GlorpVWLauncherTool">pleaseUseLeftClick	&lt;	menuItem: 'Please use left-click menu'	icon: #cancelIcon	nameKey: #pleaseuseleftclick	enablement: nil	indication: nil	menu: #(#miscMenu)	position: 10&gt;</body><body package="GlorpVWLauncherTool">toggleDatabaseAccessorLoggingEnabled	&lt;	menuItem: 'Enable logging'	icon: #logIcon	nameKey: #enablelogging	enablement: nil	indication: #loggingEnabled	menu: #(#mainMenu)	position: 20.10&gt;	DatabaseAccessor loggingEnabled: self loggingEnabled not.</body><body package="GlorpVWLauncherTool">toggleEXDITracingEnabled	&lt;	menuItem: 'Enable EXDI tracing'	icon: #traceIcon	nameKey: #enableexditracing	enablement: nil	indication: #exdiTracingEnabled	menu: #(#mainMenu)	position: 20.20&gt;	self exdiTracingEnabled		ifTrue: 			[ExternalDatabaseConnection traceLevel: 0.			ExternalDatabaseConnection traceCollector: nil.			ExternalDatabaseConnection allGeneralInstances do: [:each | each traceLevel: 0]]		ifFalse: 			[ExternalDatabaseConnection traceLevel: 3.			ExternalDatabaseConnection traceCollector: Transcript.			ExternalDatabaseConnection allGeneralInstances do: [:each | each traceLevel: 3]].</body><body package="GlorpVWLauncherTool">toggleTablePopulatorNeedsSetup	&lt;	menuItem: 'Table populator resource needs setup'	icon: #setupIcon	nameKey: #tablepopulatorneedssetup	enablement: nil	indication: #tablePopulatorNeedsSetup	menu: #(#mainMenu)	position: 20.05&gt;	self tablePopulatorNeedsSetup		ifTrue: [self tablePopulatorResource ifNotNil: [:t | t needsSetup: false]]		ifFalse: [self tablePopulatorResource ifNotNil: [:t | t invalidateSetup]].</body><body package="GlorpVWLauncherTool">toggleUseBindingIfSupported	"UseBindingIfSupported is initially nil and the patform preferences are used for those platforms that can bind.  The adjacent menu item enables it and you then use this menu item to set it to a boolean (initially it is false).  Thereafter it will be toggled between true and false by this setting and platform preferences will be ignored.  Use the adjacent menu item to end this state of affairs and return to ."	&lt;itemInMenu: #(#mainMenu) position: 20.51&gt;	^(MenuItem labeled: ['Binding is forced &lt;1?on:off&gt;;  force &lt;1?off:on&gt;?' expandMacrosWith: Glorp.DatabasePlatform.UseBindingIfSupported == true])		enabled: [Glorp.DatabasePlatform.UseBindingIfSupported notNil];		labelImage: (ResourceRetriever new selector: #bindingIcon);		indication: [Glorp.DatabasePlatform.UseBindingIfSupported == true];		value: [:controller | DatabasePlatform useBindingIfSupported: DatabasePlatform useBindingIfSupported not];		yourself</body><body package="GlorpVWLauncherTool">toggleUseBindingIfSupportedEnable	"UseBindingIfSupported is initially nil and the patform preferences are used for those platforms that can bind.  If you use this menu item to set it to a boolean (initial setting will make it false), thereafter it will be toggled between true and false by this setting and platform preferences will be ignored.  Reinitialize it if you want to end this state of affairs."	&lt;itemInMenu: #(#mainMenu) position: 20.50&gt;	^(MenuItem labeled: 'Enable forcing of binding')		labelImage: (ResourceRetriever new selector: #bindingIcon);		indication: [Glorp.DatabasePlatform.UseBindingIfSupported notNil];		value: [:controller | DatabasePlatform useBindingIfSupported: (Glorp.DatabasePlatform.UseBindingIfSupported isNil ifTrue: [false])];		yourself</body></methods><methods><class-id>GlorpSessionMiniTool class</class-id> <category>interface specs</category><body package="GlorpVWLauncherTool">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Session Switch Mini Tool' 			#layoutManagerClass: #{UI.UILayout.HorizontalLineLayoutManager}			#layoutManagerConfiguration: '[ :lm | lm verticalUseBaseline: false ]'			#bounds: #(#{Graphics.Rectangle} 440 800 806 1000 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #( 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication true ) 					#layout: #(#{UI.AlignmentOrigin} 0 0.5 0.5 0.5 0.5 0.5 ) 					#name: #toolIcon 					#label: #toolIcon 					#hasCharacterOrientedLabel: false ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{UI.AlignmentOrigin} 0 0 0.5 0.5 0.5 0.5 ) 					#name: #labelHolder 					#flags: 0 					#model: #labelHolder 					#isReadOnly: true ) ) ) )</body></methods><methods><class-id>GlorpTestingMiniTool</class-id> <category>example logins</category><body package="GlorpVWLauncherTool">loginGlorpTestOnLocalhost	&lt;login&gt;	^(Login new)		name: 'glorp-test @ localhost';		database: PostgreSQLPlatform new;		username: 'glorp-test';		password: '';		connectString: 'localhost_glorp-test';		yourself</body></methods><methods><class-id>GlorpTestingMiniTool class</class-id> <category>pragmas</category><body package="GlorpVWLauncherTool">pragmas	&lt;pragmas: #instance&gt;	^#(#login).</body></methods><methods><class-id>Tools.VisualLauncherStatusBar</class-id> <category>component definitions</category><body package="GlorpVWLauncherTool">glorpTestingMiniTool	&lt;component: 15 class: #{GlorpTestingMiniTool} spec: #windowSpec&gt;	^self newTool: GlorpTestingMiniTool"The pre-8.3 UI, left here for backwards compatibility."</body></methods><methods><class-id>Tools.VisualLauncher</class-id> <category>status registration</category><body package="GlorpVWLauncherTool">glorpTestingMiniTool	&lt;tool: 15 width: #intrinsic&gt;	^SubCanvasView		client: GlorpTestingMiniTool new		spec: GlorpTestingMiniTool windowSpec</body><body package="GlorpVWLauncherTool">glorpTestingMiniToolGap	&lt;toolgap: 20 width: #fill&gt;</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>VisualLauncherStatusBar</name><environment>Tools</environment><super>Graphics.CompositePart</super><private>false</private><indexed-type>none</indexed-type><inst-vars>artist tools </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Tools-Misc</package></attributes></class><class><name>ApplicationModel</name><environment>UI</environment><super>UI.Model</super><private>false</private><indexed-type>none</indexed-type><inst-vars>builder uiSession eventHandlers </inst-vars><class-inst-vars>savedWindowInformation </class-inst-vars><imports></imports><category>UIBuilder-Framework</category><attributes><package>UIBuilder-Framework</package></attributes></class><class><name>VisualLauncher</name><environment>Tools</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>menuBar toolBar textCollector transcriptView statusBar </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Tools-Misc</category><attributes><package>Tools-Misc</package></attributes></class><class><name>AlphaBlendedIcons</name><environment>Smalltalk</environment><super>Core.Assets</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Tools-Resources</package></attributes></class></st-source>