<?xml version="1.0"?><st-source><!-- Name: ActiveX-UIDemosNotice: Copyright 1999-2014 Cincom Systems, Inc.  All rights reserved.Comment: This package contains examples which are mainly used for testing.DbIdentifier: bear73DbTrace: 435985DbUsername: aaugustinDbVersion: 8.0 - 2DevelopmentPrerequisites: #(#(#any 'SUnit' '') #(#any 'ActiveX-UIPainter' '') #(#any 'ActiveX-Container' '') #(#any 'ActiveX-UI' '') #(#any 'Com- Automation' '') #(#any 'Com- Interface Adaptors' ''))DialectVersion: VisualWorks 7.9PackageName: ActiveX-UIDemosParcel: #('ActiveX-UIDemos')ParcelName: ActiveX-UIDemosPrerequisiteDescriptions: #(#(#name 'SUnit') #(#name 'ActiveX-UIPainter') #(#name 'ActiveX-Container' #componentType #package) #(#name 'ActiveX-UI' #componentType #package) #(#name 'Com- Automation' #componentType #package) #(#name 'Com- Interface Adaptors' #componentType #package))PrerequisiteParcels: #(#('SUnit' '') #('ActiveX-UIPainter' '') #('ActiveX-Container' '') #('ActiveX-UI' '') #('Com- Automation' '') #('Com- Interface Adaptors' ''))PrintStringCache: (8.0 - 2,aaugustin)Version: 8.0 - 2Date: 3:07:38 PM April 21, 2017 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.3 (apr17.2) of April 21, 2017 on April 21, 2017 at 3:07:38 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>SpreadSheetControlTestUI</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>spreadSheet </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>ActiveX-UIDemos</package></attributes></class><comment><class-id>SpreadSheetControlTestUI</class-id><body>SpreadSheetControlTestUI demonstrates embedding of a Microsoft Office Spreadsheet Control within a VisualWorks application window. You may need to install the "Office Web Components" which can be downloaded here:http://www.microsoft.com/en-us/download/details.aspx?id=22276Instance Variables	spreadSheet	&lt;ValueHolder on: External.ControlProxy&gt; Microsoft Office Spreadsheet control proxy</body></comment><class><name>WebBrowser</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>url statusText progress control controlLocationURL </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>ActiveX-UIDemos</package></attributes></class><comment><class-id>WebBrowser</class-id><body>WebBrowser demonstrates embedding of the Microsoft WebBrowser Control within a VisualWorks application window.Instance Variables	control				&lt;ValueModel&gt;				The valuemodel for the control	controlLocationURL	&lt;ControlPropertyValue&gt;	The valuemodel for the control's LocationURL property	progress				&lt;ValueModel&gt;				The valuemodel holding the browser's loading progress	statusText				&lt;ValueModel&gt;				The valuemodel holding the statusText	url						&lt;ValueModel&gt;				The valuemodel holding the url </body></comment><class><name>FlatBarTest</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>slider sliderValue percent sliderChange </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>ActiveX-UIDemos</package></attributes></class><comment><class-id>FlatBarTest</class-id><body>FlatBarTest demonstrates the Microsoft Flat Scrollbar Control  within a VisualWorks application window.The control can be downloaded from:http://ActiveX.Microsoft.com/Controls/VB6/MSCOMCT2.cabInstance Variables	percent	&lt;PluggableAdaptor&gt;		widget model on slider control value	slider		&lt;ValueHolder on: External.ControlProxy&gt;		Microsoft Flat Scrollbar Control proxy	sliderValue	&lt;ControlPropertyValue&gt;	flat scrollbar control value </body></comment><class><name>FormsTestUI</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>control </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>ActiveX-UIDemos</package></attributes></class><comment><class-id>FormsTestUI</class-id><body>FormsTestUI is a UI demonstration of the FM20 CommandButton control.The control is contained in FM20.DLL which is contained in the freely available ActiveX Pad available here...http://msdn.microsoft.com/en-us/library/ms968493.aspxInstance Variables	control	&lt;ValueHolder on: External.ControlProxy&gt;	 .NET Forms CommandButton control proxy</body></comment><class><name>TextEditTestUI</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>richtTextBox richTextBoxText text </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>ActiveX-UIDemos</package></attributes></class><comment><class-id>TextEditTestUI</class-id><body>TextEditTestUI is used to test the Microsoft RichtTextControl.The control can be downloaded from this location: http://activex.microsoft.com/controls/vb6/RICHTX32.CABInstance Variables	richTextBox		&lt;ValueHolder&gt;				The control's model	richtTextBoxText	&lt;ControlPropertyValue&gt;	The valuemodel for the control's Text property	text				&lt;ValueModel&gt;				The ValueModel holding the value for the Smalltalk editor</body></comment><class><name>LabelTest</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>label </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>ActiveX-UIDemos</package></attributes></class><comment><class-id>LabelTest</class-id><body>LabelTest demonstrates the Microsoft Forms Label control  within a VisualWorks application window.Instance Variables	label	&lt;ValueHolder on: External.ControlProxy&gt;	Microsoft Forms Label control proxy</body></comment><class><name>MediaPlayerTestUI</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>mPlayer mplayerURL </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>ActiveX-UIDemos</package></attributes></class><comment><class-id>MediaPlayerTestUI</class-id><body>MediaPlayerTestUI demonstrates access and display of the Microsoft Windows MediaPlayer control  within a VisualWorks application window.Instance Variables	mPlayer		&lt;ValueHolder on: External.ControlProxy&gt;	 Windows MediaPlayer control proxy	mplayerURL		&lt;ControlPropertyValue&gt;	control URL source value</body></comment><class><name>ListViewTest</name><environment>External</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>listView listViewListItems listViewSelectedItem </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>ActiveX-UIDemos</package></attributes></class><comment><class-id>External.ListViewTest</class-id><body>ListViewTest demonstrates access and display of the Microsoft ListView control  within a VisualWorks application window.Instance Variables	listView	&lt;ValueModel on: External.ControlProxy&gt;	Microsoft ListView control proxy	listViewListItems	&lt;ControlPropertyValue&gt;	 control list items value holder	listViewSelectedItem	&lt;ControlPropertyValue&gt;	control selected item value holder</body></comment><class><name>CalendarTest</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>calendarControl calendarcontrolValue calendarcontrolWeek </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>ActiveX-UIDemos</package></attributes></class><comment><class-id>CalendarTest</class-id><body>CalendarTest is an application model used to test the Microsoft MonthView Control within a VisualWorks application window.Instance Variables	calendarControl			&lt;ControlProxy&gt;	The ValueModel for the calendarControl	calendarcontrolValue	&lt;ControlPropertyValue&gt;	The ValueModel for the CalendarControl's value property</body></comment><class><name>QuickTimePlayer2</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>control url movie statusText </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>ActiveX-UIDemos</package></attributes></class><comment><class-id>QuickTimePlayer2</class-id><body>QuickTimePlayer2 demonstrates use and display of the Apple QuickTime Control within a VisualWorks application window.  The Apple QuickTime package containing the control can be downloaded here:http://www.apple.com/de/quicktime/download/Instance Variables	control	&lt;ValueHolder on: External.ControlProxy&gt; 	Apple QuickTime Control proxy	movie	&lt;DispatchDriver&gt;	dispatch driver on movie.	statusText	&lt;ValueModel&gt;	status line text model	url	&lt;ValueModel&gt;	file name/URL for movie to play.</body></comment><class><name>FormsTextEditorUI</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>control controlText textField </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>ActiveX-UIDemos</package></attributes></class><comment><class-id>FormsTextEditorUI</class-id><body>FormsTextEditorUI demonstrates the Microsoft Forms TextBox control access and display with an input field widget.The control is contained in FM20.DLL which is contained in the freely available ActiveX Pad available here...http://msdn.microsoft.com/en-us/library/ms968493.aspxInstance Variables	control &lt;ValueHolder on: External.ControlProxy&gt;	Microsoft Forms TextBox control proxy	controlText	&lt;ControlPropertyValue&gt;	control text value	textField	&lt;AspectAdaptor on: ControlPropertyValue&gt;	input field model access into control text value</body></comment><class><name>ScrollBarTest</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>scroller percent scrollValue </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>ActiveX-UIDemos</package></attributes></class><comment><class-id>ScrollBarTest</class-id><body>ScrollBarTest demonstrates the Microsoft Scrollbar Control within a VisualWorks application window.Instance Variables	percent		&lt;ValueModel&gt;				percentage value displayed by the VisualWorks progress bar.		slider		&lt;ValueHolder on: External.ControlProxy&gt; Microsoft Scrollbar Control proxy		sliderValue	&lt;ControlPropertyValue&gt;		scollbar control slide value</body></comment><class><name>SliderTest</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>slider sliderValue percent </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>ActiveX-UIDemos</package></attributes></class><comment><class-id>SliderTest</class-id><body>SliderTest demonstrates the Microsoft Slider Control within a VisualWorks application window.Instance Variables	percent		&lt;ValueModel&gt;				percentage value displayed by the VisualWorks progress bar.		slider		&lt;ValueHolder on: External.ControlProxy&gt; Microsoft Slider Control proxy		sliderValue	&lt;ControlPropertyValue&gt;		slider control slide value</body></comment><class><name>CommonDialogsTest</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>cdl </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>ActiveX-UIDemos</package></attributes></class><comment><class-id>CommonDialogsTest</class-id><body>CommonDialogsTest is an application model used to test the Microsoft common dialogs control within a VisualWorks application window.Instance Variables:	cdl		&lt;ControlProxy&gt;	The control's valuemodel</body></comment><methods><class-id>SpreadSheetControlTestUI</class-id> <category>aspects</category><body package="ActiveX-UIDemos">postOpenWith: aBuilder	self runsOnWindows7OrNewerSystem		ifTrue: 			[(self builder componentAt: #ActiveXComponent1) widget isEmbeddedInWindow				ifFalse: 					[Dialog						warn: 'There is a known problem with Office 2003 Spreadsheet control on Winodows 7.If you continue to experience problems, please download and install Office Web Components Addon for Office 2003']].	^super postOpenWith: aBuilder</body><body package="ActiveX-UIDemos">runsOnWindows7OrNewerSystem	| platformString subVersion |	platformString := OSHandle currentPlatformID.	('win32 V6.# nt*' match: platformString) ifFalse: [ ^ false ].	subVersion := Number readFromString: (platformString copyFrom: 10 to: 10).	^ subVersion &gt;= 1</body><body package="ActiveX-UIDemos">spreadSheet	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^spreadSheet isNil		ifTrue:			[spreadSheet := (External.ControlProxy new) asValue]		ifFalse:			[spreadSheet]</body></methods><methods><class-id>WebBrowser</class-id> <category>actions</category><body package="ActiveX-UIDemos">controlClientToHostWindow: cX cY: cY 	"This method was generated by UIDefiner for a Control Event.	Any edits made here may be lost whenever methods are automatically defined."</body><body package="ActiveX-UIDemos">controlCommandStateChange: command enable: enable 	"This method was generated by UIDefiner for a Control Event.	Any edits made here may be lost whenever methods are automatically defined."	command = self CSC_NAVIGATEBACK ifTrue: [		^ (self widgetAt: #backButton) isEnabled: enable ].	command = self CSC_NAVIGATEFORWARD ifTrue: [		^ (self widgetAt: #forwardButton) isEnabled: enable].</body><body package="ActiveX-UIDemos">controlNavigateComplete2: pDisp uRL: uRL 	"This method was generated by UIDefiner for a Control Event.	Any edits made here may be lost whenever methods are automatically defined."	| driver |	driver := COMDispatchDriver on: pDisp.	[ driver name = 'IWebBrowser2' ifTrue: [ self url value: uRL value ] ]	"temporary Workaround"	on: Error do: [:ex | ex return ].	driver dispatchInterface: nil.</body><body package="ActiveX-UIDemos">controlProgressChange: aProgress progressMax: progressMax 	"This method was generated by UIDefiner for a Control Event.	Any edits made here may be lost whenever methods are automatically defined."	| value |	value := progressMax = 0		ifTrue: [ 1 ]		ifFalse: [ [ aProgress / progressMax ] on: Error do: [:ex | ex return: 0 ]].	self progress value: value.</body><body package="ActiveX-UIDemos">controlStatusTextChange: text 	"This method was generated by UIDefiner for a Control Event.	Any edits made here may be lost whenever methods are automatically defined."	self statusText value: text.</body><body package="ActiveX-UIDemos">goBack	"This stub method was generated by UIDefiner"	^self control value invokeMethod: 'GoBack'</body><body package="ActiveX-UIDemos">goForward	"This stub method was generated by UIDefiner"	^self control value invokeMethod: 'GoForward'</body><body package="ActiveX-UIDemos">goHome	"This stub method was generated by UIDefiner"	^self control value invokeMethod: 'GoHome'</body><body package="ActiveX-UIDemos">navigate	"This stub method was generated by UIDefiner"	self navigateTo: self url value.</body></methods><methods><class-id>WebBrowser</class-id> <category>interface opening</category><body package="ActiveX-UIDemos">postOpenWith: aBuilder	super postOpenWith: aBuilder.	self navigate.</body></methods><methods><class-id>WebBrowser</class-id> <category>aspects</category><body package="ActiveX-UIDemos">control	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^control isNil		ifTrue:			[control := ((External.ControlProxy new)) asValue]		ifFalse:			[control]</body><body package="ActiveX-UIDemos">controlLocationURL	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^controlLocationURL isNil		ifTrue:			[controlLocationURL := UI.ControlPropertyValue controlHolder: self control propertyName: #LocationURL changeNotification: #NavigateComplete2]		ifFalse:			[controlLocationURL]</body><body package="ActiveX-UIDemos">progress	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^progress isNil		ifTrue:			[progress := 0.5 asValue]		ifFalse:			[progress]</body><body package="ActiveX-UIDemos">statusText	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^statusText isNil		ifTrue:			[statusText := '' asValue ]		ifFalse:			[statusText]</body><body package="ActiveX-UIDemos">url	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^url isNil		ifTrue:			[url := 'http://www.google.com' asValue]		ifFalse:			[url]</body></methods><methods><class-id>WebBrowser</class-id> <category>constants</category><body package="ActiveX-UIDemos">CSC_NAVIGATEBACK 	^ 2</body><body package="ActiveX-UIDemos">CSC_NAVIGATEFORWARD 	^ 1</body></methods><methods><class-id>WebBrowser</class-id> <category>private</category><body package="ActiveX-UIDemos">navigateTo: anUrl	self control value invokeMethod: 'Navigate2' with: anUrl asValue</body></methods><methods><class-id>FlatBarTest</class-id> <category>aspects</category><body package="ActiveX-UIDemos">percent	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^percent isNil		ifTrue: [percent := 				(PluggableAdaptor on: self sliderValue)						getBlock: [:o | o value ifNil: [0] ifNotNil: [:value | value / 100]]						putBlock: [:o :newValue | o value: (newValue * 100) truncated]						updateBlock: [:a :b :c | true];						yourself]		ifFalse: [percent]</body><body package="ActiveX-UIDemos">slider	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^slider isNil		ifTrue:			[slider := External.ControlProxy new asValue]		ifFalse:			[slider]</body><body package="ActiveX-UIDemos">sliderValue	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^sliderValue isNil		ifTrue:			[sliderValue := UI.ControlPropertyValue controlHolder: self slider propertyName: #Value changeNotification: #Scroll]		ifFalse:			[sliderValue]</body></methods><methods><class-id>FlatBarTest</class-id> <category>actions</category><body package="ActiveX-UIDemos">showValue	"This stub method was generated by UIDefiner"	^Dialog warn: 'The current value of the Slider is ', self sliderValue value printString,'%.'.</body><body package="ActiveX-UIDemos">sliderChange	"This method was generated by UIDefiner for a Control Event.	Any edits made here may be lost whenever methods are automatically defined."	self sliderValue value.</body></methods><methods><class-id>FormsTestUI</class-id> <category>aspects</category><body package="ActiveX-UIDemos">control	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^control isNil		ifTrue:			[control := External.ControlProxy new asValue]		ifFalse:			[control]</body></methods><methods><class-id>FormsTestUI</class-id> <category>actions</category><body package="ActiveX-UIDemos">controlClick	"This method was generated by UIDefiner for a Control Event.	Any edits made here may be lost whenever methods are automatically defined."	Dialog warn: 'The Button has been clicked'.</body></methods><methods><class-id>TextEditTestUI</class-id> <category>aspects</category><body package="ActiveX-UIDemos">richTextBox	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^richtTextBox isNil		ifTrue:			[richtTextBox := (External.ControlProxy new) asValue]		ifFalse:			[richtTextBox]</body><body package="ActiveX-UIDemos">richTextBoxText	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^richTextBoxText isNil		ifTrue:			[richTextBoxText := UI.ControlPropertyValue controlHolder: self richTextBox propertyName: #Text changeNotification: #Change]		ifFalse:			[richTextBoxText]</body><body package="ActiveX-UIDemos">text	^text isNil		ifTrue:			[text := (PluggableAdaptor on: self richTextBoxText) 				getBlock: [:m | Text fromString: (m value ifNil: ['' ]) ]				putBlock: [:m :v | m value: v string]				updateBlock: [:m :a :p | true]]		ifFalse:			[text]</body></methods><methods><class-id>LabelTest</class-id> <category>aspects</category><body package="ActiveX-UIDemos">label	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^label isNil		ifTrue:			[label := (External.ControlProxy new) asValue]		ifFalse:			[label]</body></methods><methods><class-id>MediaPlayerTestUI</class-id> <category>menu</category><body package="ActiveX-UIDemos">menuFileQuit	self closeRequest.</body><body package="ActiveX-UIDemos">menuOpenFile	(Dialog requestFileName: 'Open File') ifNotNil: [:filename |		self mplayerURL value: filename asString ].</body></methods><methods><class-id>MediaPlayerTestUI</class-id> <category>aspects</category><body package="ActiveX-UIDemos">mPlayer	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^mPlayer isNil		ifTrue:			[mPlayer := (External.ControlProxy new) asValue]		ifFalse:			[mPlayer]</body><body package="ActiveX-UIDemos">mplayerURL	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^mplayerURL isNil		ifTrue:			[mplayerURL := UI.ControlPropertyValue controlHolder: self mPlayer propertyName: #URL changeNotification: #CurrentItemChange]		ifFalse:			[mplayerURL]</body></methods><methods><class-id>External.ListViewTest</class-id> <category>aspects</category><body package="ActiveX-UIDemos">listView	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^listView isNil		ifTrue:			[listView := (External.ControlProxy new) asValue]		ifFalse:			[listView]</body><body package="ActiveX-UIDemos">listViewListItems	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^listViewListItems isNil		ifTrue:			[listViewListItems := UI.ControlPropertyValue controlHolder: self listView propertyName: #ListItems changeNotification: nil]		ifFalse:			[listViewListItems]</body><body package="ActiveX-UIDemos">listViewSelectedItem	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^listViewSelectedItem isNil		ifTrue:			[listViewSelectedItem := UI.ControlPropertyValue controlHolder: self listView propertyName: #SelectedItem changeNotification: #ItemClick]		ifFalse:			[listViewSelectedItem]</body><body package="ActiveX-UIDemos">selectedItem	^self listViewSelectedItem value</body></methods><methods><class-id>External.ListViewTest</class-id> <category>private</category><body package="ActiveX-UIDemos">addFiles: aDispatchDriver	"This stub method was generated by UIDefiner"		aDispatchDriver accessor do: [:each |		self addItem: 1 asValue key: each text: each ].</body><body package="ActiveX-UIDemos">addItem: index key: key text: text	"This stub method was generated by UIDefiner"		| items |	items := self listViewListItems value.	[ items		invokeMethod: 'Add'		withArguments:			(Array				with: index asValue				with: key asValue				with: text asValue)	] on: Error do: [:ex | Dialog warn: 'insert failed' ].</body><body package="ActiveX-UIDemos">listViewOLEDragDrop: data effect: effect button: button shift: shift x: x y: y 	"This method was generated by UIDefiner for a Control Event.	Any edits made here may be lost whenever methods are automatically defined."	| myData |	myData := COMDispatchDriver on: data value.	[ "		(myData invokeMethod: 'GetFormat' with: 1) ifTrue: [ self addItem: 1 key: Time microsecondClock printString text: (myData GetData: 1) ]."		(myData invokeMethod: 'GetFormat' with: 15) ifTrue: [ self addFiles: (myData getFiles)].]	ensure: [ myData dispatchInterface: nil ].	^ self</body></methods><methods><class-id>External.ListViewTest</class-id> <category>notification</category><body package="ActiveX-UIDemos">updateEnablement	(self wrapperAt: #removeButton) isEnabled: self selectedItem notNil</body></methods><methods><class-id>External.ListViewTest</class-id> <category>interface opening</category><body package="ActiveX-UIDemos">postOpenWith: aBuilder	self listView value dispatchDriver getColumnHeaders Add: 1 asValue key: 'Filename' asValue text: 'Filename' asValue.	self listViewSelectedItem onChangeSend: #updateEnablement to: self.</body></methods><methods><class-id>External.ListViewTest</class-id> <category>actions</category><body package="ActiveX-UIDemos">removeItem	self selectedItem ifNotNil:[:item| self listViewListItems value Remove: item getKey asValue]</body></methods><methods><class-id>CalendarTest</class-id> <category>actions</category><body package="ActiveX-UIDemos">showDate	"This stub method was generated by UIDefiner"	^ Dialog warn: 'The selected date is ', self calendarcontrolValue value printString</body></methods><methods><class-id>CalendarTest</class-id> <category>aspects</category><body package="ActiveX-UIDemos">calendarControl	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^calendarControl isNil		ifTrue:			[calendarControl := (External.ControlProxy new) asValue]		ifFalse:			[calendarControl]</body><body package="ActiveX-UIDemos">calendarcontrolValue	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^calendarcontrolValue isNil		ifTrue:			[calendarcontrolValue := UI.ControlPropertyValue controlHolder: self calendarControl propertyName: #Value changeNotification: #SelChange]		ifFalse:			[calendarcontrolValue]</body><body package="ActiveX-UIDemos">calendarcontrolWeek	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^calendarcontrolWeek isNil		ifTrue:			[calendarcontrolWeek := UI.ControlPropertyValue controlHolder: self calendarControl propertyName: #Week changeNotification: #SelChange]		ifFalse:			[calendarcontrolWeek]</body></methods><methods><class-id>QuickTimePlayer2</class-id> <category>actions</category><body package="ActiveX-UIDemos">controlError: errorCode origin: origin 	"This method was generated by UIDefiner for a Control Event.	Any edits made here may be lost whenever methods are automatically defined."	self statusText value: 'Error: ', errorCode printString.</body><body package="ActiveX-UIDemos">controlStatusUpdate: statusCodeType statusCode: statusCode statusMessage: statusMessage 	"This method was generated by UIDefiner for a Control Event.	Any edits made here may be lost whenever methods are automatically defined."	self statusText value: statusMessage</body><body package="ActiveX-UIDemos">openFile	"This stub method was generated by UIDefiner"	self url value: (Dialog requestFileName: '').</body><body package="ActiveX-UIDemos">play	"This stub method was generated by UIDefiner"	self movie ifNotNil:[:m | m invokeMethod: 'Play' ].</body><body package="ActiveX-UIDemos">stop	"This stub method was generated by UIDefiner"	self movie ifNotNil: [:m | m invokeMethod: 'Stop' ].</body></methods><methods><class-id>QuickTimePlayer2</class-id> <category>aspects</category><body package="ActiveX-UIDemos">control	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^control isNil		ifTrue:			[control := External.ControlProxy new asValue]		ifFalse:			[control]</body><body package="ActiveX-UIDemos">statusText	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^statusText isNil		ifTrue:			[statusText := String new asValue]		ifFalse:			[statusText]</body><body package="ActiveX-UIDemos">url	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^url isNil		ifTrue: [			url := (self control value getProperty: 'FileName') asValue.			url onChangeSend: #urlChanged to: self.			url]		ifFalse:			[url]</body></methods><methods><class-id>QuickTimePlayer2</class-id> <category>binding</category><body package="ActiveX-UIDemos">labelFor: aKey	^ aKey = #windowTitle 		ifTrue: 	[ self windowTitle  ]		ifFalse:	[ super labelFor: aKey ].</body></methods><methods><class-id>QuickTimePlayer2</class-id> <category>accessing</category><body package="ActiveX-UIDemos">movie	^movie		ifNil: [(self control value getProperty: 'Movie')				ifNotNil: [:aMovie |					aMovie specificationPolicy: COMSpecificationPolicy newVariantPolicy.					movie := aMovie]]</body><body package="ActiveX-UIDemos">movie: aDispatchDriver		movie := aDispatchDriver.</body></methods><methods><class-id>QuickTimePlayer2</class-id> <category>events</category><body package="ActiveX-UIDemos">urlChanged	self url value ifNotNil: [		self control value invokeMethod: 'QuickTimeInitialize'.		self movie: nil. 		self control value setProperty: 'FileName' value: self url value.].</body></methods><methods><class-id>FormsTextEditorUI</class-id> <category>aspects</category><body package="ActiveX-UIDemos">control	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^control isNil		ifTrue:			[control := (External.ControlProxy new) asValue]		ifFalse:			[control]</body><body package="ActiveX-UIDemos">controlText	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^controlText isNil		ifTrue:			[controlText := UI.ControlPropertyValue controlHolder: self control propertyName: #Text changeNotification: #Change]		ifFalse:			[controlText]</body><body package="ActiveX-UIDemos">textField	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^textField isNil		ifTrue:			[textField := (AspectAdaptor subject: self controlText) 					forAspect: #value;					subjectSendsUpdates: true;					yourself]		ifFalse:			[textField]</body></methods><methods><class-id>ScrollBarTest</class-id> <category>aspects</category><body package="ActiveX-UIDemos">percent	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^percent isNil		ifTrue:			[percent := (PluggableAdaptor on: self scrollValue)				getBlock: [:o | o value / 100]					putBlock: [:o :newValue | o value: (newValue * 100) truncated]					updateBlock: [:a :b :c | true];				yourself]		ifFalse:			[percent]</body><body package="ActiveX-UIDemos">scrollValue	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^scrollValue isNil		ifTrue:			[scrollValue := UI.ControlPropertyValue controlHolder: self scroller propertyName: #Value changeNotification: #Scroll]		ifFalse:			[scrollValue]</body><body package="ActiveX-UIDemos">scroller	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^scroller isNil		ifTrue:			[scroller := (External.ControlProxy new) asValue]		ifFalse:			[scroller]</body></methods><methods><class-id>SliderTest</class-id> <category>actions</category><body package="ActiveX-UIDemos">sliderOLEDragDrop: data effect: effect button: button shift: shift x: x y: y 	"This method was generated by UIDefiner for a Control Event.	Any edits made here may be lost whenever methods are automatically defined."	Dialog warn: (#AlthoughItDoesNotMatterSomethingWasDroppedOnTheSlider &lt;&lt; #examples &gt;&gt; 'Although it does not matter something was dropped on the slider').</body></methods><methods><class-id>SliderTest</class-id> <category>aspects</category><body package="ActiveX-UIDemos">percent	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^percent isNil		ifTrue:			[percent := (PluggableAdaptor on: self sliderValue)				getBlock: [:o | o value / 100]					putBlock: [:o :newValue | o value: (newValue * 100) truncated]					updateBlock: [:a :b :c | true];				yourself]		ifFalse:			[percent]</body><body package="ActiveX-UIDemos">slider	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^slider isNil		ifTrue:			[slider := (External.ControlProxy new) asValue]		ifFalse:			[slider]</body><body package="ActiveX-UIDemos">sliderValue	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^sliderValue isNil		ifTrue:			[sliderValue := UI.ControlPropertyValue controlHolder: self slider propertyName: 'Value' changeNotification: #Scroll]		ifFalse:			[sliderValue]</body></methods><methods><class-id>CommonDialogsTest</class-id> <category>actions</category><body package="ActiveX-UIDemos">openAboutBox	"This stub method was generated by UIDefiner"	^self cdl value invokeMethod: #AboutBox</body><body package="ActiveX-UIDemos">openColorDialog	"This stub method was generated by UIDefiner"	^self cdl value invokeMethod: #ShowColor</body><body package="ActiveX-UIDemos">openFileDialog	"This stub method was generated by UIDefiner"	^self cdl value invokeMethod: #ShowOpen.</body><body package="ActiveX-UIDemos">openFontDialog	"This stub method was generated by UIDefiner"	^self cdl value 		setProperty: #Flags value: self CF_BOTH;		invokeMethod: #ShowFont</body><body package="ActiveX-UIDemos">showHelp	"This stub method was generated by UIDefiner"	^self cdl value invokeMethod: #ShowHelp</body></methods><methods><class-id>CommonDialogsTest</class-id> <category>aspects</category><body package="ActiveX-UIDemos">cdl	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^cdl isNil		ifTrue:			[cdl := (External.ControlProxy new) asValue]		ifFalse:			[cdl]</body></methods><methods><class-id>CommonDialogsTest</class-id> <category>constants</category><body package="ActiveX-UIDemos">CF_BOTH                    	^  self CF_SCREENFONTS | self CF_PRINTERFONTS</body><body package="ActiveX-UIDemos">CF_PRINTERFONTS            	^ 16r00000002</body><body package="ActiveX-UIDemos">CF_SCREENFONTS             	^ 16r00000001</body></methods><methods><class-id>SpreadSheetControlTestUI class</class-id> <category>interface specs</category><body package="ActiveX-UIDemos">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'SpreadSheet Demo' 			#bounds: #(#{Graphics.Rectangle} 960 600 1160 800 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ActiveXSpec} 					#layout: #(#{Graphics.LayoutFrame} 8 0 8 0 -8 1 -8 1 ) 					#name: #ActiveXComponent1 					#model: #spreadSheet 					#progId: 'OWC11.Spreadsheet' 					#controlProperties: #() 					#controlBindings: #() 					#licenseKey: 'Cannot License in this host' 					#eventBindings: #() ) ) ) )</body></methods><methods><class-id>WebBrowser class</class-id> <category>interface specs</category><body package="ActiveX-UIDemos">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'WebBrowser Demo' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 960 600 1193 800 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 150 0 4 0 -40 1 28 0 ) 					#name: #InputField1 					#model: #url ) 				#(#{UI.ActiveXSpec} 					#layout: #(#{Graphics.LayoutFrame} 4 0 32 0 -4 1 -32 1 ) 					#name: #ActiveXComponent1 					#model: #control 					#progId: 'Shell.Explorer' 					#controlProperties: #(#StorageProperties #[31 139 8 0 0 0 0 0 0 0 187 112 94 240 193 194 141 82 15 25 208 128 29 3 51 195 191 255 156 12 108 72 98 140 80 12 6 2 12 12 76 80 254 191 255 255 255 195 132 255 143 130 33 5 254 2 241 63 36 60 10 70 22 8 98 200 7 194 18 6 5 6 87 134 60 32 93 196 80 201 64 10 16 99 96 133 231 121 80 89 144 248 51 172 131 203 228 130 224 202 108 134 3 254 215 89 23 33 171 157 32 93 245 242 116 249 73 70 102 32 251 0 84 204 153 193 159 193 143 33 4 104 59 136 12 102 32 21 8 49 48 49 34 251 135 88 125 115 24 168 7 200 177 159 97 144 216 15 138 51 38 104 25 62 10 70 30 240 1 198 253 3 126 96 125 207 141 59 141 248 160 165 151 7 23 194 25 138 77 207 11 174 203 228 96 208 214 19 74 226 64 82 199 40 194 4 102 67 243 183 91 3 9 233 112 20 208 31 0 0 144 55 176 26 0 10 0 0] ) 					#controlBindings: #(#(#{UI.ControlPropertyBinding} #LocationURL #controlLocationURL #NavigateComplete2 ) #(#{UI.ControlPropertyBinding} #StatusText #statusText #StatusTextChange ) ) 					#eventBindings: #(						#(#{UI.ControlEventBinding} #ClientToHostWindow 							#controlClientToHostWindow:cY: #('CX' 'CY' ) ) 						#(#{UI.ControlEventBinding} #NavigateComplete2 							#controlNavigateComplete2:uRL: #('pDisp' 'URL' ) ) 						#(#{UI.ControlEventBinding} #ProgressChange 							#controlProgressChange:progressMax: #('Progress' 'ProgressMax' ) ) 						#(#{UI.ControlEventBinding} #CommandStateChange 							#controlCommandStateChange:enable: #('Command' 'Enable' ) ) 						#(#{UI.ControlEventBinding} #StatusTextChange 							#controlStatusTextChange: #('Text' ) ) ) ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} -36 1 4 0 -4 1 28 0 ) 					#name: #ActionButton1 					#model: #navigate 					#label: 'Go!' 					#isDefault: true 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 4 0 -28 1 -100 1 -4 1 ) 					#name: #InputField2 					#model: #statusText 					#tabable: false 					#isReadOnly: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 4 4 36 28 ) 					#name: #backButton 					#model: #goBack 					#helpText: 'Back' 					#label: '&lt;' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 40 4 74 28 ) 					#name: #forwardButton 					#model: #goForward 					#helpText: 'Forward' 					#label: '&gt;' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 78 4 114 28 ) 					#name: #ActionButton4 					#model: #goHome 					#helpText: 'Home' 					#label: 'h' 					#defaultable: true ) 				#(#{UI.ProgressWidgetSpec} 					#layout: #(#{Graphics.LayoutFrame} -96 1 -28 1 -4 1 -4 1 ) 					#name: #PercentDoneBar1 					#isOpaque: true 					#model: #progress 					#direction: #horizontal 					#position: #topLeft 					#area: true 					#reverse: false ) ) ) )</body></methods><methods><class-id>FlatBarTest class</class-id> <category>interface specs</category><body package="ActiveX-UIDemos">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'MS Flat Scrollbar Control' 			#bounds: #(#{Graphics.Rectangle} 700 330 900 530 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ActiveXSpec} 					#layout: #(#{Graphics.LayoutFrame} 8 0 19 0 -8 1 48 0 ) 					#name: #ActiveXComponent1 					#model: #slider 					#callbacksSpec: #(#{UI.UIEventCallbackSubSpec} ) 					#progId: 'MSComCtl2.FlatScrollBar' 					#controlProperties: #(#StorageProperties #[31 139 8 0 0 0 0 0 0 0 187 112 94 240 193 194 141 82 15 25 208 128 29 3 51 195 191 255 156 12 108 72 98 140 80 12 6 2 12 12 76 80 254 191 255 255 255 195 132 255 143 130 33 5 254 2 241 63 36 60 10 70 22 8 98 200 7 194 18 6 5 6 87 134 60 32 93 196 80 201 64 10 16 99 96 133 231 121 80 89 96 85 106 241 111 177 203 69 193 173 219 25 24 14 76 96 56 130 172 54 224 208 177 134 252 185 39 25 153 129 236 6 168 152 51 208 118 144 189 169 96 178 152 129 84 32 196 192 196 136 236 31 98 245 197 48 80 15 144 99 63 195 32 177 31 86 126 143 130 145 9 20 157 77 132 56 128 105 192 156 159 129 33 13 88 161 55 115 185 207 100 0 214 250 50 64 49 65 32 230 66 170 243 83 128 216 6 196 127 127 118 53 3 48 223 131 0 27 82 250 99 96 100 110 144 191 247 102 47 35 80 206 225 171 16 195 40 24 252 0 0 123 15 147 43 0 10 0 0] ) 					#controlBindings: #(#(#{UI.ControlPropertyBinding} #Value #sliderValue #Scroll ) ) 					#licenseKey: '651A8940-87C5-11d1-8BE3-0000F8754DA1' 					#eventBindings: #(#(#{UI.ControlEventBinding} #Change #sliderChange #() ) ) ) 				#(#{UI.ProgressWidgetSpec} 					#layout: #(#{Graphics.LayoutFrame} 8 0 63 0 -8 1 97 0 ) 					#name: #PercentDoneBar1 					#isOpaque: true 					#model: #percent 					#direction: #horizontal 					#position: #topLeft 					#area: true 					#reverse: false ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 8 0 112 0 -8 1 135 0 ) 					#name: #ActionButton1 					#model: #showValue 					#label: 'Show Value' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>FormsTestUI class</class-id> <category>interface specs</category><body package="ActiveX-UIDemos">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'MS Forms Control Command Button' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 640 512 1025 629 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ActiveXSpec} 					#layout: #(#{Graphics.Rectangle} 47 25 344 85 ) 					#name: #ActiveXComponent1 					#model: #control 					#progId: 'Forms.CommandButton.1' 					#controlProperties: #(#StorageProperties #[31 139 8 0 0 0 0 0 0 0 187 112 94 240 193 194 141 82 15 25 208 128 29 3 51 195 191 255 156 12 108 72 98 140 80 12 6 2 12 12 76 80 254 191 255 255 255 195 132 255 143 130 33 5 254 2 241 63 36 60 10 70 22 8 98 200 7 194 18 6 5 6 87 134 60 32 93 196 80 201 64 10 16 99 96 133 231 121 80 89 224 96 196 122 61 243 220 89 193 229 229 12 119 25 69 108 194 145 213 58 44 140 201 190 84 126 146 145 25 200 62 0 21 75 6 218 14 178 55 21 76 22 51 144 10 132 24 152 24 153 144 202 29 98 245 89 192 203 52 103 160 11 114 25 10 24 252 25 146 24 178 200 177 31 165 204 35 70 15 40 156 26 24 168 7 72 181 31 25 128 242 60 19 148 30 5 35 15 48 48 169 48 100 0 19 36 63 48 73 114 51 68 48 36 42 56 231 231 230 38 230 165 56 149 150 148 228 231 49 244 73 48 48 124 99 1 38 16 38 30 96 254 100 96 88 10 74 52 76 204 72 105 249 223 127 102 46 72 26 68 207 251 74 64 121 223 204 228 162 252 226 252 180 18 5 183 252 162 220 98 5 35 61 3 52 27 128 13 9 6 215 220 164 212 148 148 212 20 5 255 164 172 212 228 18 96 169 194 192 0 86 175 135 162 86 207 144 225 139 229 166 66 134 81 64 53 0 0 87 131 197 221 0 10 0 0] ) 					#controlBindings: #() 					#licenseKey: '12345' 					#eventBindings: #(#(#{UI.ControlEventBinding} #Click #controlClick nil ) ) ) ) ) )</body></methods><methods><class-id>TextEditTestUI class</class-id> <category>interface specs</category><body package="ActiveX-UIDemos">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Unlabeled Canvas' 			#bounds: #(#{Graphics.Rectangle} 960 600 1367 876 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ActiveXSpec} 					#layout: #(#{Graphics.LayoutFrame} 4 0 4 0 -4 1 -4 0.5 ) 					#name: #ActiveXComponent1 					#model: #richTextBox 					#progId: 'RICHTEXT.RichtextCtrl' 					#controlProperties: #(#StorageProperties #[31 139 8 0 0 0 0 0 0 0 187 112 94 240 193 194 141 82 15 25 208 128 29 3 51 195 191 255 156 12 108 72 98 140 80 12 6 2 12 12 76 80 254 191 255 255 255 195 132 255 143 130 33 5 254 2 241 63 36 60 10 70 22 8 98 200 7 194 18 6 5 6 87 134 60 32 93 196 80 201 64 10 16 99 96 133 231 121 80 89 144 208 81 99 221 127 93 90 96 231 86 22 38 25 134 41 76 200 106 15 248 246 71 158 46 63 201 200 204 128 40 72 156 129 182 131 236 77 5 147 197 12 164 2 33 6 38 70 100 255 16 171 239 12 3 245 0 57 246 51 12 18 251 65 209 0 138 36 102 104 57 62 10 70 22 80 116 54 17 226 0 165 1 121 6 134 108 46 6 6 16 159 17 88 235 111 128 166 44 16 102 68 75 51 172 12 12 13 200 45 2 70 96 10 2 153 81 29 83 84 146 102 24 147 152 87 156 25 147 146 154 150 102 80 29 147 150 159 87 82 146 148 3 100 24 196 164 229 101 230 196 164 37 103 36 22 21 167 150 24 40 248 6 43 4 3 149 42 4 167 22 101 166 89 215 214 242 114 197 148 101 166 150 103 103 230 165 152 196 148 38 27 198 20 36 22 165 196 228 36 230 165 27 26 24 27 130 13 40 54 52 83 112 73 44 86 200 44 46 81 72 205 204 83 8 73 45 46 1 106 3 42 84 0 106 103 24 5 164 3 0 106 127 114 81 0 10 0 0] ) 					#controlBindings: #(#(#{UI.ControlPropertyBinding} #Text #richTextBoxText #Change ) ) 					#licenseKey: ' qhj ZtuQha;jdfn[iaetr ' 					#eventBindings: #() ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.LayoutFrame} 4 0 4 0.5 -4 1 -4 1 ) 					#name: #TextEditor1 					#model: #text 					#tabRequiresControl: true ) ) ) )</body></methods><methods><class-id>LabelTest class</class-id> <category>interface specs</category><body package="ActiveX-UIDemos">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'MS Forms Label' 			#bounds: #(#{Graphics.Rectangle} 640 512 929 731 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ActiveXSpec} 					#layout: #(#{Graphics.LayoutFrame} 13 0 13 0 -13 1 -13 1 ) 					#name: #ActiveXComponent1 					#model: #label 					#progId: 'Forms.Label.1' 					#controlProperties: #(#StorageProperties #[31 139 8 0 0 0 0 0 0 0 187 112 94 240 193 194 141 82 15 25 208 128 29 3 51 195 191 255 156 12 108 72 98 140 80 12 6 2 12 12 76 80 254 191 255 255 255 195 132 255 143 130 33 5 254 2 241 63 36 60 10 70 22 8 98 200 7 194 18 6 5 6 87 134 60 32 93 196 80 201 64 10 16 99 96 133 231 121 80 89 160 60 175 103 250 134 43 231 4 247 235 50 172 98 176 119 184 128 172 246 194 237 9 127 206 149 159 100 100 102 64 20 36 201 64 219 65 246 166 130 201 98 6 82 129 16 3 19 35 19 82 185 67 172 62 23 120 153 230 12 116 65 46 67 1 131 63 67 18 67 22 57 246 163 148 121 196 232 1 185 183 128 129 122 128 84 251 25 208 202 116 80 190 103 134 210 163 96 100 1 6 38 3 6 125 38 112 154 108 96 1 98 97 134 6 6 126 32 13 74 15 33 25 153 197 10 64 148 168 224 147 152 148 154 195 112 68 136 129 97 9 47 40 1 243 0 243 42 3 195 82 112 98 102 166 40 237 50 2 83 29 51 23 36 13 163 151 29 82 64 121 223 204 228 162 252 226 252 180 18 5 183 252 162 220 98 5 35 61 3 168 107 128 13 16 6 215 220 164 212 148 148 212 20 5 255 164 172 212 228 18 6 62 160 24 88 157 30 88 141 158 33 195 23 203 77 133 12 163 0 39 0 0 111 162 139 138 0 10 0 0] ) 					#controlBindings: #() 					#licenseKey: ' qhj ZtuQha;jdfn[iaetr ' 					#eventBindings: #() ) ) ) )</body></methods><methods><class-id>MediaPlayerTestUI class</class-id> <category>interface specs</category><body package="ActiveX-UIDemos">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Windows Media Player Control' 			#bounds: #(#{Graphics.Rectangle} 640 512 840 712 ) 			#flags: 4 			#menu: #menu ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ActiveXSpec} 					#layout: #(#{Graphics.LayoutFrame} 4 0 4 0 -4 1 -4 1 ) 					#name: #ActiveXComponent1 					#model: #mPlayer 					#progId: 'WMPlayer.OCX' 					#controlProperties: #(#StorageProperties #[31 139 8 0 0 0 0 0 0 0 187 112 94 240 193 194 141 82 15 25 208 128 29 3 51 195 191 255 156 12 108 72 98 140 80 12 6 2 12 12 76 80 254 191 255 255 255 195 132 255 143 130 33 5 254 2 241 63 36 60 10 70 22 8 98 200 7 194 18 6 5 6 87 134 60 32 93 196 80 201 64 10 16 99 96 133 231 121 80 89 16 164 245 53 219 203 242 178 224 198 96 134 3 254 149 191 150 33 171 117 40 159 95 221 86 115 146 145 25 200 62 0 21 115 6 218 14 178 55 21 76 22 51 144 10 132 24 152 24 145 253 67 172 190 37 12 212 3 228 216 207 48 72 236 7 197 25 19 180 12 31 5 35 15 0 171 121 6 14 112 10 96 0 230 100 8 248 96 207 140 194 71 168 96 6 167 23 110 96 138 131 168 0 177 16 114 70 96 17 144 106 46 32 153 198 80 202 144 3 132 16 85 220 112 26 194 134 233 194 69 131 212 60 224 103 96 56 207 203 48 10 104 8 0 164 46 116 197 0 10 0 0] ) 					#controlBindings: #(#(#{UI.ControlPropertyBinding} #URL #mplayerURL #CurrentItemChange ) ) 					#eventBindings: #() ) ) ) )</body></methods><methods><class-id>MediaPlayerTestUI class</class-id> <category>resources</category><body package="ActiveX-UIDemos">menu	"Tools.MenuEditor new openOnClass: self andSelector: #menu"	&lt;resource: #menu&gt;	^#(#{UI.Menu} #(			#(#{UI.MenuItem} 				#rawLabel: 'File' 				#value: #menuFile 				#submenu: #(#{UI.Menu} #(						#(#{UI.MenuItem} 							#rawLabel: 'Open' 							#value: #menuOpenFile 							#shortcutKeyCharacter: $O 							#shortcutModifiers: 2 ) 						#(#{UI.MenuItem} 							#rawLabel: 'Quit' 							#value: #menuFileQuit 							#shortcutKeyCharacter: $Q 							#shortcutModifiers: 2 ) ) #(2 ) nil ) ) ) #(1 ) nil ) decodeAsLiteralArray</body></methods><methods><class-id>External.ListViewTest class</class-id> <category>interface specs</category><body package="ActiveX-UIDemos">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Microsoft ListView Control' 			#bounds: #(#{Graphics.Rectangle} 640 512 956 759 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ActiveXSpec} 					#layout: #(#{Graphics.LayoutFrame} 4 0 34 0 -4 1 -40 1 ) 					#name: #ActiveXComponent1 					#model: #listView 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #selectionChanged ) 					#progId: 'MSComctlLib.ListViewCtrl' 					#controlProperties: #(#StorageProperties #[31 139 8 0 0 0 0 0 0 0 187 112 94 240 193 194 141 82 15 25 208 128 29 3 51 195 191 255 156 12 108 72 98 140 80 12 6 2 12 12 76 80 254 191 255 255 255 195 132 255 143 130 33 5 254 2 241 63 36 60 10 70 22 8 98 200 7 194 18 6 5 6 87 134 60 32 93 196 80 201 64 10 16 99 96 133 231 121 80 89 224 253 225 226 222 238 214 139 130 27 179 24 14 124 208 48 211 64 86 235 16 105 40 205 182 248 36 35 51 144 221 0 21 115 6 218 14 178 55 21 76 22 51 144 10 132 24 152 24 145 253 67 172 190 36 6 234 1 114 236 103 24 36 246 195 202 239 81 48 50 129 162 179 137 16 7 48 13 148 75 50 48 120 8 50 48 248 113 212 190 102 4 214 250 50 240 244 193 200 160 61 169 13 44 207 248 254 236 106 6 96 126 255 177 66 146 129 89 131 159 1 168 175 129 21 145 149 225 64 254 222 155 189 140 64 117 55 90 37 25 70 193 224 6 0 49 217 66 188 0 10 0 0] ) 					#controlBindings: #(#(#{UI.ControlPropertyBinding} #ListItems #listViewListItems nil ) #(#{UI.ControlPropertyBinding} #SelectedItem #listViewSelectedItem #ItemClick ) ) 					#licenseKey: '9368265E-85FE-11d1-8BE3-0000F8754DA1' 					#eventBindings: #(						#(#{UI.ControlEventBinding} #OLEDragDrop 							#listViewOLEDragDrop:effect:button:shift:x:y: #('Data' 'Effect' 'Button' 'Shift' 'x' 'y' ) ) ) ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 4 7 ) 					#name: #Label1 					#label: 'Please drop files on the list' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 4 0 -28 1 28 0 -4 1 ) 					#name: #removeButton 					#flags: 40 					#model: #removeItem 					#helpText: 'Remove selection' 					#label: '-' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>CalendarTest class</class-id> <category>interface specs</category><body package="ActiveX-UIDemos">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Microsoft MonthView Control' 			#bounds: #(#{Graphics.Rectangle} 659 326 941 534 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ActiveXSpec} 					#layout: #(#{Graphics.LayoutFrame} 4 0 4 0 -4 1 -40 1 ) 					#name: #ActiveXComponent1 					#model: #calendarControl 					#progId: 'MSComCtl2.MonthView' 					#controlProperties: #(#StorageProperties #[31 139 8 0 0 0 0 0 0 0 187 112 94 240 193 194 141 82 15 25 208 128 29 3 51 195 191 255 156 12 108 72 98 140 80 12 6 2 12 12 76 80 254 191 255 255 255 195 132 255 143 130 33 5 254 2 241 63 36 60 10 70 22 8 98 200 7 194 18 6 5 6 87 134 60 32 93 196 80 201 64 10 16 99 96 133 231 121 80 89 144 229 170 167 124 184 253 162 96 247 99 6 134 31 165 190 11 81 20 203 124 176 75 170 61 201 200 12 100 30 128 10 57 3 109 7 217 155 10 38 139 25 72 5 66 12 76 140 200 254 33 86 223 26 6 234 1 114 236 103 24 36 246 131 226 140 9 90 134 143 130 145 7 20 157 77 132 56 128 241 191 144 159 129 97 133 54 3 131 212 198 120 96 214 100 99 208 0 138 245 9 50 48 220 100 103 132 84 246 80 192 175 206 3 204 241 242 112 254 77 54 70 6 70 68 171 0 172 158 21 168 158 159 65 26 8 87 99 240 25 24 216 25 120 65 233 238 253 89 32 135 149 1 100 55 27 131 3 3 11 3 67 3 208 148 6 141 31 66 12 64 107 27 68 128 88 28 136 229 239 189 217 11 50 193 7 40 62 10 168 15 0 62 236 72 8 0 10 0 0] ) 					#controlBindings: #(#(#{UI.ControlPropertyBinding} #Value #calendarcontrolValue #SelChange ) #(#{UI.ControlPropertyBinding} #Week #calendarcontrolWeek #SelChange ) ) 					#licenseKey: '651A8940-87C5-11d1-8BE3-0000F8754DA1' 					#eventBindings: #() ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutSizedOrigin} 4 0 -30 1.0 120 23 ) 					#name: #ActionButton1 					#model: #showDate 					#label: 'Show Date' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>QuickTimePlayer2 class</class-id> <category>interface specs</category><body package="ActiveX-UIDemos">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 			#label: 'Apple QuickTime Control' 			#bounds: #(#{Graphics.Rectangle} 640 512 840 712 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ActiveXSpec} 					#layout: #(#{Graphics.LayoutFrame} 4 0 4 0 -4 1 -60 1 ) 					#name: #control 					#model: #control 					#progId: 'QTOControl.QTControl' 					#controlProperties: #(#StorageProperties #[31 139 8 0 0 0 0 0 0 0 187 112 94 240 193 194 141 82 15 25 208 128 29 3 51 195 191 255 156 12 108 72 98 140 80 12 6 2 12 12 76 80 254 191 255 255 255 195 132 255 143 130 33 5 254 2 241 63 36 60 10 70 22 8 98 200 7 194 18 6 5 6 87 134 60 32 93 196 80 201 64 10 16 99 96 133 231 121 80 89 176 222 102 151 202 11 239 55 94 203 79 228 187 95 205 112 99 66 86 107 176 104 51 223 249 234 147 140 204 64 118 3 84 204 25 104 59 200 222 84 48 89 204 64 42 16 98 96 98 68 246 15 177 250 156 24 168 7 200 177 159 97 144 216 15 43 191 71 193 200 4 12 28 12 12 15 248 129 245 61 55 3 131 48 56 69 64 72 102 112 202 224 6 179 64 153 152 131 1 146 149 17 52 11 144 52 4 229 100 251 81 60 116 49 0 50 124 95 201 0 10 0 0] ) 					#controlBindings: #() 					#eventBindings: #(						#(#{UI.ControlEventBinding} #StatusUpdate 							#controlStatusUpdate:statusCode:statusMessage: #('StatusCodeType' 'StatusCode' 'StatusMessage' ) ) 						#(#{UI.ControlEventBinding} #Error 							#controlError:origin: #('ErrorCode' 'Origin' ) ) ) ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 4 0 -56 1 44 0 -32 1 ) 					#name: #ActionButton1 					#model: #play 					#helpText: 'Play' 					#label: '&gt;' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 48 0 -56 1 88 0 -32 1 ) 					#name: #ActionButton2 					#model: #stop 					#helpText: 'Pause' 					#label: '[]' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} -40 1 -56 1 -4 1 -32 1 ) 					#name: #ActionButton3 					#model: #openFile 					#helpText: 'Open File' 					#label: 'Open' 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 196 0 -56 1 -44 1 -32 1 ) 					#name: #InputField1 					#model: #url ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 4 0 -28 1 -4 1 -4 1 ) 					#name: #InputField2 					#model: #statusText 					#isReadOnly: true ) ) ) )</body></methods><methods><class-id>FormsTextEditorUI class</class-id> <category>interface specs</category><body package="ActiveX-UIDemos">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'MS Forms TextBox Control' 			#bounds: #(#{Graphics.Rectangle} 595 321 1005 539 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ActiveXSpec} 					#layout: #(#{Graphics.LayoutFrame} 4 0 4 0 -4 1 -40 1 ) 					#name: #ActiveXComponent1 					#model: #control 					#progId: 'Forms.TextBox.1' 					#controlProperties: #(#StorageProperties #[31 139 8 0 0 0 0 0 0 0 187 112 94 240 193 194 141 82 15 25 208 128 29 3 51 195 191 255 156 12 108 72 98 140 80 12 6 2 12 12 76 80 254 191 255 255 255 195 132 255 143 130 33 5 254 2 241 63 36 60 10 70 22 8 98 200 7 194 18 6 5 6 87 134 60 32 93 196 80 201 64 10 16 99 96 133 231 121 80 89 32 32 123 169 219 233 205 57 193 121 188 12 171 24 18 152 62 35 171 93 32 122 234 221 229 178 51 140 204 12 136 130 36 25 104 59 200 222 84 48 89 204 64 42 16 98 96 98 100 66 42 119 136 213 231 1 47 211 156 129 46 200 101 40 96 240 103 72 98 200 34 199 126 148 50 143 24 61 32 247 150 48 80 15 144 106 63 3 90 153 14 202 247 204 80 122 20 140 44 192 192 100 194 96 204 232 208 2 74 11 210 30 23 122 128 84 3 40 131 2 171 247 6 144 88 143 38 3 195 111 65 6 134 144 140 204 98 5 32 74 84 40 73 45 46 81 168 100 96 226 97 48 1 202 47 133 37 104 50 1 35 48 213 49 115 65 210 48 122 217 33 3 148 247 205 76 46 202 47 206 79 43 81 112 203 47 202 45 86 48 210 51 80 8 73 173 40 113 202 175 0 185 145 193 53 55 41 53 37 37 53 69 193 63 41 43 53 185 4 44 6 86 169 7 85 165 103 200 240 197 114 83 33 195 40 192 10 0 169 102 104 231 0 10 0 0] ) 					#controlBindings: #(#(#{UI.ControlPropertyBinding} #Text #controlText #Change ) #(#{UI.ControlPropertyBinding} #MultiLine #controlMultiLine nil ) ) 					#eventBindings: #() ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 4 0 -30 1 -4 1 -4 1 ) 					#name: #InputField1 					#model: #textField ) ) ) )</body></methods><methods><class-id>ScrollBarTest class</class-id> <category>interface specs</category><body package="ActiveX-UIDemos">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Microsoft Scrollbar Control' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 640 512 990 658 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ActiveXSpec} 					#layout: #(#{Graphics.LayoutFrame} 30 0 20 0 -30 1 54 0 ) 					#name: #ActiveXComponent1 					#model: #scroller 					#callbacksSpec: #(#{UI.UIEventCallbackSubSpec} ) 					#progId: 'Forms.ScrollBar.1' 					#controlProperties: #(#StorageProperties #[31 139 8 0 0 0 0 0 0 0 187 112 94 240 193 194 141 82 15 25 208 128 29 3 51 195 191 255 156 12 108 72 98 140 80 12 6 2 12 12 76 80 254 191 255 255 255 195 132 255 143 130 33 5 254 2 241 63 36 60 10 70 22 8 98 200 7 194 18 6 5 6 87 134 60 32 93 196 80 201 64 10 16 99 96 133 231 121 80 89 240 160 241 226 125 253 184 115 130 75 60 25 86 49 120 53 216 34 171 13 240 15 54 123 80 125 146 145 25 200 62 0 21 75 6 218 14 178 55 21 76 22 51 144 10 132 24 152 24 153 144 202 29 98 245 201 192 203 52 103 160 11 114 25 10 24 252 25 146 24 178 200 177 31 165 204 35 70 15 40 156 42 24 168 7 72 181 31 25 128 242 60 19 148 30 5 35 15 48 48 73 48 156 0 214 229 41 192 52 96 14 196 92 64 236 46 200 192 240 136 153 184 244 195 8 76 57 204 92 144 52 136 158 247 229 128 242 190 153 201 69 249 197 249 105 37 10 110 249 69 185 197 10 70 122 6 10 193 64 161 156 28 167 196 34 80 35 130 193 53 55 41 53 37 37 53 69 193 63 41 43 53 185 4 152 163 24 24 192 106 245 224 234 244 12 25 190 88 110 42 100 24 5 84 7 0 56 152 106 194 0 10 0 0] ) 					#controlBindings: #(#(#{UI.ControlPropertyBinding} #Value #scrollValue #Change ) ) 					#eventBindings: #() ) 				#(#{UI.ProgressWidgetSpec} 					#layout: #(#{Graphics.LayoutFrame} 30 0 66 0 -30 1 100 0 ) 					#name: #PercentDoneBar1 					#isOpaque: true 					#model: #percent 					#direction: #horizontal 					#position: #topLeft 					#area: true 					#reverse: false ) ) ) )</body></methods><methods><class-id>SliderTest class</class-id> <category>interface specs</category><body package="ActiveX-UIDemos">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Microsoft Slider Control' 			#bounds: #(#{Graphics.Rectangle} 640 512 840 712 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ActiveXSpec} 					#layout: #(#{Graphics.LayoutFrame} 4 0 19 0 -4 1 60 0 ) 					#name: #ActiveXComponent1 					#model: #slider 					#callbacksSpec: #(#{UI.UIEventCallbackSubSpec} ) 					#progId: 'MSComctlLib.Slider' 					#controlProperties: #(#StorageProperties #[31 139 8 0 0 0 0 0 0 0 187 112 94 240 193 194 141 82 15 25 208 128 29 3 51 195 191 255 156 12 108 72 98 140 80 12 6 2 12 12 76 80 254 191 255 255 255 195 132 255 143 130 33 5 254 2 241 63 36 60 10 70 22 8 98 200 7 194 18 6 5 6 87 134 60 32 93 196 80 201 64 10 16 99 96 133 231 121 80 89 16 242 179 247 195 164 214 139 130 27 179 24 14 124 208 48 211 64 86 171 80 103 149 24 52 239 36 35 51 144 221 0 21 115 6 218 14 178 55 21 76 22 51 144 10 132 24 152 24 145 253 67 172 190 18 6 234 1 114 236 103 24 36 246 195 202 239 81 48 50 129 162 179 137 16 7 48 13 60 224 103 96 72 1 102 76 193 117 218 92 12 192 90 95 6 154 62 184 144 234 252 20 40 109 132 148 126 64 242 230 176 180 244 254 236 106 6 96 121 160 176 94 149 149 93 1 145 46 29 190 10 49 200 223 123 179 151 17 40 7 98 75 152 48 128 148 49 252 96 97 96 96 134 234 229 199 146 54 95 48 129 155 25 12 61 80 69 10 104 105 158 145 193 131 1 104 4 131 14 35 200 141 204 112 113 21 37 101 134 26 160 163 14 0 197 183 48 34 236 0 217 143 1 152 33 109 153 5 204 8 115 81 237 96 1 219 129 46 174 166 164 194 176 199 2 193 103 38 144 63 65 244 22 28 118 128 104 144 29 18 140 168 122 84 149 84 137 182 67 130 25 210 30 59 131 195 14 38 168 29 6 104 238 2 0 227 228 159 144 0 10 0 0] ) 					#controlBindings: #(#(#{UI.ControlPropertyBinding} #Value #sliderValue #Scroll ) ) 					#licenseKey: '9368265E-85FE-11d1-8BE3-0000F8754DA1' 					#eventBindings: #(						#(#{UI.ControlEventBinding} #OLEDragDrop 							#sliderOLEDragDrop:effect:button:shift:x:y: #('Data' 'Effect' 'Button' 'Shift' 'x' 'y' ) ) ) ) 				#(#{UI.ProgressWidgetSpec} 					#layout: #(#{Graphics.LayoutFrame} 4 0 73 0 -4 1 107 0 ) 					#name: #PercentDoneBar1 					#isOpaque: true 					#model: #percent 					#direction: #horizontal 					#position: #topLeft 					#area: true 					#reverse: false ) ) ) )</body></methods><methods><class-id>CommonDialogsTest class</class-id> <category>interface specs</category><body package="ActiveX-UIDemos">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Common Dialogs Control' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 640 512 794 653 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ActiveXSpec} 					#layout: #(#{Graphics.Rectangle} 2 115 39 151 ) 					#name: #ActiveXComponent1 					#model: #cdl 					#progId: 'MSComDlg.CommonDialog' 					#controlProperties: #() 					#controlBindings: #() 					#licenseKey: '28C4C820-401A-101B-A3C9-08002B2F49FB' 					#eventBindings: #() ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 14 32 131 56 ) 					#name: #ActionButton1 					#model: #openFileDialog 					#label: 'Open FileDialog' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 14 5 132 28 ) 					#name: #ActionButton2 					#model: #openAboutBox 					#label: 'Open AboutBox' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 14 59 132 83 ) 					#name: #ActionButton3 					#model: #openFontDialog 					#label: 'Open FontDialog' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 14 86 132 110 ) 					#name: #ActionButton4 					#model: #openColorDialog 					#label: 'Open ColorDialog' 					#defaultable: true ) ) ) )</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>ApplicationModel</name><environment>UI</environment><super>UI.Model</super><private>false</private><indexed-type>none</indexed-type><inst-vars>builder uiSession eventHandlers </inst-vars><class-inst-vars>savedWindowInformation </class-inst-vars><imports></imports><category>UIBuilder-Framework</category><attributes><package>UIBuilder-Framework</package></attributes></class></st-source>