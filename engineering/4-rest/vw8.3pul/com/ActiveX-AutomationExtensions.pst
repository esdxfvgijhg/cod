<?xml version="1.0"?><st-source><!-- Name: ActiveX-AutomationExtensionsNotice: Copyright 1999-2014 Cincom Systems, Inc.  All rights reserved.Comment: This package contains Automation specific extensions of the COM Automation Functionality.DbIdentifier: bear73DbTrace: 428139DbUsername: aaugustinDbVersion: 7.10 - 1034DevelopmentPrerequisites: #(#(#any 'Com- Automation' '') #(#any 'Com- CodeAnnotations' '') #(#any 'Com- Ole' '') #(#any 'Com- Automation Pools' ''))DialectVersion: VisualWorks 7.9PackageName: ActiveX-AutomationExtensionsParcel: #('ActiveX-AutomationExtensions')ParcelName: ActiveX-AutomationExtensionsPrerequisiteDescriptions: #(#(#name 'Com- Automation' #componentType #package) #(#name 'Com- CodeAnnotations' #componentType #package) #(#name 'Com- Ole' #componentType #package) #(#name 'Com- Automation Pools' #componentType #package))PrerequisiteParcels: #(#('Com- Automation' '') #('Com- CodeAnnotations' '') #('Com- Ole' '') #('Com- Automation Pools' ''))PrintStringCache: (7.10 - 1034,aaugustin)Version: 7.10 - 1034Date: 3:07:37 PM April 21, 2017 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.3 (apr17.2) of April 21, 2017 on April 21, 2017 at 3:07:37 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><shared-variable><name>VARFLAG_FRESTRICTED</name><environment>External.COMAutomationConstants</environment><private>false</private><constant>true</constant><category>Constants</category><initializer>16r80</initializer><attributes><package>ActiveX-AutomationExtensions</package></attributes></shared-variable><shared-variable><name>FUNCFLAG_FNONBROWSABLE</name><environment>External.COMAutomationConstants</environment><private>false</private><constant>true</constant><category>Constants</category><initializer>16r400</initializer><attributes><package>ActiveX-AutomationExtensions</package></attributes></shared-variable><shared-variable><name>VARFLAG_FNONBROWSABLE</name><environment>External.COMAutomationConstants</environment><private>false</private><constant>true</constant><category>Constants</category><initializer>16r400</initializer><attributes><package>ActiveX-AutomationExtensions</package></attributes></shared-variable><shared-variable><name>HIMETRIC_INCH</name><environment>External.COMAutomationConstants</environment><private>false</private><constant>true</constant><category>Constants</category><initializer>2540</initializer><attributes><package>ActiveX-AutomationExtensions</package></attributes></shared-variable><methods><class-id>External.COMDispatchPropertySpecification</class-id> <category>private flags constants</category><body package="ActiveX-AutomationExtensions">hiddenFlag	^ VARFLAG_FHIDDEN</body></methods><methods><class-id>External.COMDispatchPropertySpecification</class-id> <category>testing flags</category><body package="ActiveX-AutomationExtensions">isReadOnlyFlagSet	^ self testFlag: self readOnlyFlag</body></methods><methods><class-id>External.COMDispatchPropertySpecification</class-id> <category>private flags constants</category><body package="ActiveX-AutomationExtensions">nonBrowsableFlag	^ VARFLAG_FNONBROWSABLE</body></methods><methods><class-id>External.COMDispatchPropertySpecification</class-id> <category>testing</category><body package="ActiveX-AutomationExtensions">propertyGetIsParameterless	"return wether the getter is parameterless"	^ true</body></methods><methods><class-id>External.COMDispatchPropertySpecification</class-id> <category>private flags constants</category><body package="ActiveX-AutomationExtensions">readOnlyFlag	^ VARFLAG_FREADONLY</body><body package="ActiveX-AutomationExtensions">restrictedFlag	^ VARFLAG_FRESTRICTED</body></methods><methods><class-id>External.COMDispatchMethodSpecification</class-id> <category>private flags constants</category><body package="ActiveX-AutomationExtensions">hiddenFlag	^ FUNCFLAG_FHIDDEN</body><body package="ActiveX-AutomationExtensions">nonBrowsableFlag	^ FUNCFLAG_FNONBROWSABLE</body><body package="ActiveX-AutomationExtensions">restrictedFlag	^ FUNCFLAG_FRESTRICTED</body></methods><methods><class-id>External.COMAbstractMemberSpecification</class-id> <category>private flags constants</category><body package="ActiveX-AutomationExtensions">hiddenFlag	self subclassResponsibility</body></methods><methods><class-id>External.COMAbstractMemberSpecification</class-id> <category>testing flags</category><body package="ActiveX-AutomationExtensions">isHidden	"This flag means the property or method should not be shown in any kind of browser"	^ self testFlag: self hiddenFlag</body><body package="ActiveX-AutomationExtensions">isNonBrowsable	"returns whether the property or method should not be shown in property browsers"	^ self testFlag: self nonBrowsableFlag</body><body package="ActiveX-AutomationExtensions">isRestricted	"Restriction for macro-oriented development. It is normally used like hidden flag"		^ self testFlag: self restrictedFlag</body></methods><methods><class-id>External.COMAbstractMemberSpecification</class-id> <category>private flags constants</category><body package="ActiveX-AutomationExtensions">restrictedFlag	self subclassResponsibility</body></methods><methods><class-id>External.COMAbstractMemberSpecification</class-id> <category>private</category><body package="ActiveX-AutomationExtensions">testFlag: aFlag	^ (self flags bitAnd: aFlag) = aFlag</body></methods><methods><class-id>External.COMDispatchParameterizedPropertySpecification</class-id> <category>private flags constants</category><body package="ActiveX-AutomationExtensions">hiddenFlag	^ FUNCFLAG_FHIDDEN</body><body package="ActiveX-AutomationExtensions">nonBrowsableFlag	^ FUNCFLAG_FNONBROWSABLE</body></methods><methods><class-id>External.COMDispatchParameterizedPropertySpecification</class-id> <category>testing</category><body package="ActiveX-AutomationExtensions">propertyGetIsParameterless	"return wether the getter is parameterless"	^ self getSpecificationForDisplay parameterCount = 0</body></methods><methods><class-id>External.COMDispatchParameterizedPropertySpecification</class-id> <category>private flags constants</category><body package="ActiveX-AutomationExtensions">restrictedFlag	^ FUNCFLAG_FRESTRICTED</body></methods><methods><class-id>Tools.Note class</class-id> <category>development notes</category><body package="ActiveX-AutomationExtensions">remark: comment	" Mark a method which needs to be reviewed and possibly corrected to resolve a design or implementation issue.  Typically followed by a comment describing the issue. "</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>COMAbstractMemberSpecification</name><environment>External</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>name </inst-vars><class-inst-vars></class-inst-vars><imports>			External.COMAutomationConstants.*			</imports><category>COM-Automation-Dispatch Specifications</category><attributes><package>Com- Automation</package></attributes></class><class><name>COMDispatchMethodSpecification</name><environment>External</environment><super>External.COMDispatchMemberSpecification</super><private>false</private><indexed-type>none</indexed-type><inst-vars>selector </inst-vars><class-inst-vars></class-inst-vars><imports>			External.COMAutomationConstants.*			</imports><category>COM-Automation-Dispatch Specifications</category><attributes><package>Com- Automation</package></attributes></class><class><name>COMDispatchParameterizedPropertySpecification</name><environment>External</environment><super>External.GeneralPropertySpecification</super><private>false</private><indexed-type>none</indexed-type><inst-vars>propertyPutRefSpecification </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Com- Automation</package></attributes></class><class><name>COMDispatchPropertySpecification</name><environment>External</environment><super>External.GeneralPropertySpecification</super><private>false</private><indexed-type>none</indexed-type><inst-vars>accessMode memberID vtableIndex returnValueDescription flags </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>Com- Automation</package></attributes></class></st-source>