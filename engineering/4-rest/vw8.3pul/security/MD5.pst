<?xml version="1.0"?><st-source><!-- Name: MD5Notice: Copyright 1999-2014 Cincom Systems, Inc.  All rights reserved.Comment: This package contains implementation of MD5 algorithm. It is represented by the class MD5.DbIdentifier: bear73DbTrace: 469303DbUsername: tkoganDbVersion: 8.2 - 0DevelopmentPrerequisites: #(#(#package 'HashesBase' ''))PackageName: MD5Parcel: #('MD5')PrerequisiteParcels: #(#('HashesBase' ''))PrintStringCache: (8.2 - 0,tkogan)Version: 8.2 - 0Date: 12:06:17 PM July 28, 2017 --><time-stamp>From VisualWorksÂ®, 8.3 of July 28, 2017 on July 28, 2017 at 12:06:17 PM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>MD5</name><environment>Security</environment><super>Security.Hash</super><private>false</private><indexed-type>none</indexed-type><inst-vars>a b c d aa bb cc dd f ff m </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Security-Hashes</category><attributes><package>MD5</package></attributes></class><comment><class-id>Security.MD5</class-id><body>This implements the MD5 hashing algorithm, RFC1321 (http://www.ietf.org/rfc/rfc1321.txt). Less formal description can be also found in Bruce Schneier's "Applied Cryptography", Section 18.5. Instance variable naming follows the convention in the specification.Instance Variables:	a	&lt;ThirtyTwoBitRegister&gt; working register	b	&lt;ThirtyTwoBitRegister&gt; working register	c	&lt;ThirtyTwoBitRegister&gt; working register	d	&lt;ThirtyTwoBitRegister&gt; working register	aa	&lt;ThirtyTwoBitRegister&gt; backup register	bb	&lt;ThirtyTwoBitRegister&gt; backup register	cc	&lt;ThirtyTwoBitRegister&gt; backup register	dd	&lt;ThirtyTwoBitRegister&gt; backup register	f	&lt;ThirtyTwoBitRegister&gt; scratch register	ff	&lt;ThirtyTwoBitRegister&gt; scratch register	m	&lt;Array of: ThirtyTwoBitRegister&gt;	 16 registers for current message blockShared Class Variables:	T	&lt;Array of: ThirtyTwoBitRegister&gt;	 array of constants T as described by the standard</body></comment><shared-variable><name>T</name><environment>Security.MD5</environment><private>false</private><constant>false</constant><category>constants</category><initializer>MD5 computeSinTable</initializer><attributes><package>MD5</package></attributes></shared-variable><methods><class-id>Security.MD5</class-id> <category>private-algorithm</category><body package="MD5">FFa: aw b: bw c: cw d: dw M: mw s: s t: t	"F(b,c,d)=(b and c) or ((not b) and d)"	ff set: bw; bitInvert; bitAnd: dw.	f set: bw; bitAnd: cw; bitOr: ff.	self a: aw b: bw f: f M: mw s: s t: t</body><body package="MD5">GGa: aw b: bw c: cw d: dw M: mw s: s t: t	"G(b,c,d)=(b and d) or ((not d) and c)"	ff set: dw; bitInvert; bitAnd: cw.	f set: bw; bitAnd: dw; bitOr: ff.	self a: aw b: bw f: f M: mw s: s t: t</body><body package="MD5">HHa: aw b: bw c: cw d: dw M: mw s: s t: t	"H(b,c,d) = b xor c xor d"	f set: bw; bitXor: cw; bitXor: dw.	self a: aw b: bw f: f M: mw s: s t: t</body><body package="MD5">IIa: aw b: bw c: cw d: dw M: mw s: s t: t	"I(b,c,d) = c xor (b or (not d))"	f set: dw; bitInvert; bitOr: bw; bitXor: cw.	self a: aw b: bw f: f M: mw s: s t: t</body><body package="MD5">a: aw b: bw f: fw M: mw s: s t: t	"a = b + ((a + F(b,c,d) + m + t) &lt;&lt;&lt; s)"	aw += fw; += mw; += t; leftRotateBy: s; += bw</body><body package="MD5">processBlock	"backup the working registers"	aa set: a. bb set: b. cc set: c. dd set: d.	self	readBlock;		round1;		round2;		round3;		round4.	"add the previous values into the working registers"	a addIn: aa. b addIn: bb. c addIn: cc. d addIn: dd</body><body package="MD5">readBlock"read in the message block"	1 to: 16 do: [:i | (m at: i) reverseLoadFrom: block at: (i - 1) * 4 + 1 ].</body><body package="MD5">round1	self		FFa: a b: b c: c d: d M: (m at: 1) s: 7 t: (T at: 1);		FFa: d b: a c: b d: c M: (m at: 2) s: 12 t: (T at: 2);		FFa: c b: d c: a d: b M: (m at: 3) s: 17 t: (T at: 3);		FFa: b b: c c: d d: a M: (m at: 4) s: 22 t: (T at: 4);		FFa: a b: b c: c d: d M: (m at: 5) s: 7 t: (T at: 5);		FFa: d b: a c: b d: c M: (m at: 6) s: 12 t: (T at: 6);		FFa: c b: d c: a d: b M: (m at: 7) s: 17 t: (T at: 7);		FFa: b b: c c: d d: a M: (m at: 8) s: 22 t: (T at: 8);		FFa: a b: b c: c d: d M: (m at: 9) s: 7 t: (T at: 9);		FFa: d b: a c: b d: c M: (m at: 10) s: 12 t: (T at: 10);		FFa: c b: d c: a d: b M: (m at: 11) s: 17 t: (T at: 11);		FFa: b b: c c: d d: a M: (m at: 12) s: 22 t: (T at: 12);		FFa: a b: b c: c d: d M: (m at: 13) s: 7 t: (T at: 13);		FFa: d b: a c: b d: c M: (m at: 14) s: 12 t: (T at: 14);		FFa: c b: d c: a d: b M: (m at: 15) s: 17 t: (T at: 15);		FFa: b b: c c: d d: a M: (m at: 16) s: 22 t: (T at: 16)</body><body package="MD5">round2	self		GGa: a b: b c: c d: d M: (m at: 2) s: 5 t: (T at: 17);		GGa: d b: a c: b d: c M: (m at: 7) s: 9 t: (T at: 18);		GGa: c b: d c: a d: b M: (m at: 12) s: 14 t: (T at: 19);		GGa: b b: c c: d d: a M: (m at: 1) s: 20 t: (T at: 20);		GGa: a b: b c: c d: d M: (m at: 6) s: 5 t: (T at: 21);		GGa: d b: a c: b d: c M: (m at: 11) s: 9 t: (T at: 22);		GGa: c b: d c: a d: b M: (m at: 16) s: 14 t: (T at: 23);		GGa: b b: c c: d d: a M: (m at: 5) s: 20 t: (T at: 24);		GGa: a b: b c: c d: d M: (m at: 10) s: 5 t: (T at: 25);		GGa: d b: a c: b d: c M: (m at: 15) s: 9 t: (T at: 26);		GGa: c b: d c: a d: b M: (m at: 4) s: 14 t: (T at: 27);		GGa: b b: c c: d d: a M: (m at: 9) s: 20 t: (T at: 28);		GGa: a b: b c: c d: d M: (m at: 14) s: 5 t: (T at: 29);		GGa: d b: a c: b d: c M: (m at: 3) s: 9 t: (T at: 30);		GGa: c b: d c: a d: b M: (m at: 8) s: 14 t: (T at: 31);		GGa: b b: c c: d d: a M: (m at: 13) s: 20 t: (T at: 32)</body><body package="MD5">round3	self		HHa: a b: b c: c d: d M: (m at: 6) s: 4 t: (T at: 33);		HHa: d b: a c: b d: c M: (m at: 9) s: 11 t: (T at: 34);		HHa: c b: d c: a d: b M: (m at: 12) s: 16 t: (T at: 35);		HHa: b b: c c: d d: a M: (m at: 15) s: 23 t: (T at: 36);		HHa: a b: b c: c d: d M: (m at: 2) s: 4 t: (T at: 37);		HHa: d b: a c: b d: c M: (m at: 5) s: 11 t: (T at: 38);		HHa: c b: d c: a d: b M: (m at: 8) s: 16 t: (T at: 39);		HHa: b b: c c: d d: a M: (m at: 11) s: 23 t: (T at: 40);		HHa: a b: b c: c d: d M: (m at: 14) s: 4 t: (T at: 41);		HHa: d b: a c: b d: c M: (m at: 1) s: 11 t: (T at: 42);		HHa: c b: d c: a d: b M: (m at: 4) s: 16 t: (T at: 43);		HHa: b b: c c: d d: a M: (m at: 7) s: 23 t: (T at: 44);		HHa: a b: b c: c d: d M: (m at: 10) s: 4 t: (T at: 45);		HHa: d b: a c: b d: c M: (m at: 13) s: 11 t: (T at: 46);		HHa: c b: d c: a d: b M: (m at: 16) s: 16 t: (T at: 47);		HHa: b b: c c: d d: a M: (m at: 3) s: 23 t: (T at: 48)</body><body package="MD5">round4	self		IIa: a b: b c: c d: d M: (m at: 1) s: 6 t: (T at: 49);		IIa: d b: a c: b d: c M: (m at: 8) s: 10 t: (T at: 50);		IIa: c b: d c: a d: b M: (m at: 15) s: 15 t: (T at: 51);		IIa: b b: c c: d d: a M: (m at: 6) s: 21 t: (T at: 52);		IIa: a b: b c: c d: d M: (m at: 13) s: 6 t: (T at: 53);		IIa: d b: a c: b d: c M: (m at: 4) s: 10 t: (T at: 54);		IIa: c b: d c: a d: b M: (m at: 11) s: 15 t: (T at: 55);		IIa: b b: c c: d d: a M: (m at: 2) s: 21 t: (T at: 56);		IIa: a b: b c: c d: d M: (m at: 9) s: 6 t: (T at: 57);		IIa: d b: a c: b d: c M: (m at: 16) s: 10 t: (T at: 58);		IIa: c b: d c: a d: b M: (m at: 7) s: 15 t: (T at: 59);		IIa: b b: c c: d d: a M: (m at: 14) s: 21 t: (T at: 60);		IIa: a b: b c: c d: d M: (m at: 5) s: 6 t: (T at: 61);		IIa: d b: a c: b d: c M: (m at: 12) s: 10 t: (T at: 62);		IIa: c b: d c: a d: b M: (m at: 3) s: 15 t: (T at: 63);		IIa: b b: c c: d d: a M: (m at: 10) s: 21 t: (T at: 64)</body></methods><methods><class-id>Security.MD5</class-id> <category>private-digest</category><body package="MD5">backupRegisters"This has to match with #restoreRegisters:"	^Array		with: a copy		with: b copy		with: c copy		with: d copy</body><body package="MD5">restoreRegisters: anArrayOfRegisters"This has to match with #backupRegisters"	a := anArrayOfRegisters at: 1.	b := anArrayOfRegisters at: 2.	c := anArrayOfRegisters at: 3.	d := anArrayOfRegisters at: 4</body><body package="MD5">storeLength"little-endian"	| bufferSize length |	bufferSize := self blockSize.	length := self messageLength.	bufferSize - 7 to: bufferSize do: [ :i |		block at: i put: (length bitAnd: 255).		length := length bitShift: -8 ].</body><body package="MD5">writeDigestInto: aByteArray startingAt: start	a reverseStoreTo: aByteArray at: start.	b reverseStoreTo: aByteArray at: start + 4.	c reverseStoreTo: aByteArray at: start + 8.	d reverseStoreTo: aByteArray at: start + 12.</body></methods><methods><class-id>Security.MD5</class-id> <category>services-basic</category><body package="MD5">reset	super reset.	a reverseLoadFrom: #[16r01 16r23 16r45 16r67] at: 1.	b reverseLoadFrom: #[16r89 16rAB 16rCD 16rEF] at: 1.	c reverseLoadFrom: #[16rFE 16rDC 16rBA 16r98] at: 1.	d reverseLoadFrom: #[16r76 16r54 16r32 16r10] at: 1</body></methods><methods><class-id>Security.MD5</class-id> <category>initialize-release</category><body package="MD5">initialize	super initialize.	a := ThirtyTwoBitRegister new.	b := ThirtyTwoBitRegister new.	c := ThirtyTwoBitRegister new.	d := ThirtyTwoBitRegister new.	aa := ThirtyTwoBitRegister new.	bb := ThirtyTwoBitRegister new.	cc := ThirtyTwoBitRegister new.	dd := ThirtyTwoBitRegister new.	f := ThirtyTwoBitRegister new.	ff := ThirtyTwoBitRegister new.	m := (1 to: 16) inject: (Array new: 16) into: [ :array :i | array at: i put: ThirtyTwoBitRegister new; yourself ].	self reset</body></methods><methods><class-id>Security.MD5 class</class-id> <category>accessing</category><body package="MD5">blockSize	^64</body><body package="MD5">digestSize	^16</body></methods><methods><class-id>Security.MD5 class</class-id> <category>initialization</category><body package="MD5">computeSinTable"Obscure fact: those magic hex numbers in Bruce's book that are hard to type in correctly are actually the result of a simple trigonometric function. One must remember however to do the math in Doubles otherwise the values are trash."	| c |	c := 2 raisedTo: 32.	^(1 to: 64)		inject: (Array new: 64)		into: [ :t :i | 			t	at: i				put: (ThirtyTwoBitRegister new load: (c * i asDouble sin abs) truncated);				yourself ].</body></methods><methods><class-id>Core.ByteArray</class-id> <category>security</category><body package="MD5">md5Value	^Security.MD5 integerHash: self</body></methods><methods><class-id>Security.HMAC class</class-id> <category>instance creation</category><body package="MD5">MD5	^self hash: MD5 new</body><body package="MD5">MD5: keyBytes	^self MD5		setKey: keyBytes;		yourself</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>ByteArray</name><environment>Core</environment><super>Core.IntegerArray</super><private>false</private><indexed-type>bytes</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Collections-Arrayed</category><attributes><package>Collections-Arrayed</package></attributes></class><class><name>Hash</name><environment>Security</environment><super>Security.MessageDigest</super><private>false</private><indexed-type>none</indexed-type><inst-vars>block position total </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Security-Hashes</category><attributes><package>HashesBase</package></attributes></class></st-source>