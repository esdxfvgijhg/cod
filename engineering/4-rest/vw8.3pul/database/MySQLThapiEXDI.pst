<?xml version="1.0"?><st-source><!-- Name: MySQLThapiEXDINotice: Copyright 1999-2017 Cincom Systems, Inc.  All rights reserved.Comment: Provides a THAPI (threaded interconnect) interface to the MySQL client libraries.DbIdentifier: bear73DbTrace: 497858DbUsername: dwallenDbVersion: 8.3 - 1DevelopmentPrerequisites: #(#(#any 'MySQLEXDI' ''))PackageName: MySQLThapiEXDIParcel: #('MySQLThapiEXDI')ParcelName: MySQLThapiEXDIPrerequisiteDescriptions: #(#(#name 'MySQLEXDI' #componentType #package))PrerequisiteParcels: #(#('MySQLEXDI' ''))PrintStringCache: (8.3 - 1,dwallen)Version: 8.3 - 1Date: 9:56:52 AM February 3, 2017 --><time-stamp>From VisualWorksÂ®, Pre-Release 8.3 (feb17.1) of February 3, 2017 on February 3, 2017 at 9:56:52 AM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>MySQLThreadedInterface</name><environment>Database</environment><super>Database.MySQLInterface</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports>			private Database.MySQLThreadedInterfaceDictionary.*			</imports><category></category><attributes><includeFiles></includeFiles><includeDirectories></includeDirectories><libraryFiles></libraryFiles><libraryDirectories></libraryDirectories><beVirtual>true</beVirtual><optimizationLevel>full</optimizationLevel><package>MySQLThapiEXDI</package></attributes></class><comment><class-id>Database.MySQLThreadedInterface</class-id><body>MySQLThreadedInterface defines calling the conventions for the MySQL database threaded client API.</body></comment><class><name>MySQLThreadedConnection</name><environment>Database</environment><super>Database.MySQLConnection</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>MySQLThapiEXDI</package></attributes></class><comment><class-id>Database.MySQLThreadedConnection</class-id><body>MySQLThreadedConnection is the multi-threaded version of MySQLConnection.</body></comment><class><name>MySQLThreadedSession</name><environment>Database</environment><super>Database.MySQLSession</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>MySQLThapiEXDI</package></attributes></class><comment><class-id>Database.MySQLThreadedSession</class-id><body>MySQLThreadedSession is the threaded session class, and it works with MySQLThreadedConnection. See superclass for most of the implementation.</body></comment><class><name>MySQLSolaris64ThreadedInterface</name><environment>Database</environment><super>Database.MySQLThreadedInterface</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports>			private Database.MySQLSolaris64ThreadedInterfaceDictionary.*			</imports><category>Database-External-Libraries</category><attributes><includeFiles></includeFiles><includeDirectories></includeDirectories><libraryFiles><item>libmysqlclient.so</item></libraryFiles><libraryDirectories></libraryDirectories><beVirtual>false</beVirtual><optimizationLevel>full</optimizationLevel><package>MySQLThapiEXDI</package></attributes></class><comment><class-id>Database.MySQLSolaris64ThreadedInterface</class-id><body>This class defines calling conventions for the MySQL threaded 64-bit client library on the Solaris platform.  Please refer to the environment variable on your machine for the path containing necessary MySQL library files.</body></comment><class><name>MySQLSolarisThreadedInterface</name><environment>Database</environment><super>Database.MySQLThreadedInterface</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports>			private Database.MySQLSolarisThreadedInterfaceDictionary.*			</imports><category>Database-External-Libraries</category><attributes><includeFiles></includeFiles><includeDirectories></includeDirectories><libraryFiles><item>libmysqlclient.so</item></libraryFiles><libraryDirectories></libraryDirectories><beVirtual>false</beVirtual><optimizationLevel>full</optimizationLevel><package>MySQLThapiEXDI</package></attributes></class><comment><class-id>Database.MySQLSolarisThreadedInterface</class-id><body>This class defines calling conventions for the MySQL threaded client library on the Solaris platform.  Please refer to the environment variable on your machine for the path containing necessary MySQL library files.</body></comment><class><name>MySQLNT64ThreadedInterface</name><environment>Database</environment><super>Database.MySQLThreadedInterface</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports>			private Database.MySQLNT64ThreadedInterfaceDictionary.*			</imports><category>Database-External-Libraries</category><attributes><includeFiles></includeFiles><includeDirectories></includeDirectories><libraryFiles><item>libmySQL.dll</item></libraryFiles><libraryDirectories></libraryDirectories><beVirtual>false</beVirtual><optimizationLevel>full</optimizationLevel><package>MySQLThapiEXDI</package></attributes></class><comment><class-id>Database.MySQLNT64ThreadedInterface</class-id><body>This class defines calling conventions for the MySQL threaded 64-bit client library on the Windows NT/2K/XP platform.  Please refer to the environment variable on your machine for the path containing necessary MySQL library files.</body></comment><class><name>MySQLLinuxThreadedInterface</name><environment>Database</environment><super>Database.MySQLThreadedInterface</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports>			private Database.MySQLLinuxThreadedInterfaceDictionary.*			</imports><category>Database-External-Libraries</category><attributes><includeFiles></includeFiles><includeDirectories></includeDirectories><libraryFiles><item>libmysqlclient.so</item></libraryFiles><libraryDirectories></libraryDirectories><beVirtual>false</beVirtual><optimizationLevel>full</optimizationLevel><package>MySQLThapiEXDI</package></attributes></class><comment><class-id>Database.MySQLLinuxThreadedInterface</class-id><body>This class defines calling conventions for the MySQL threaded client library on the Linux platform.  Please refer to the environment variable on your machine for the path containing necessary MySQL library files.</body></comment><class><name>MySQLI386MacOSXThreadedInterface</name><environment>Database</environment><super>Database.MySQLThreadedInterface</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports>			private Database.MySQLI386MacOSXThreadedInterfaceDictionary.*			</imports><category>Database-External-Libraries</category><attributes><includeFiles></includeFiles><includeDirectories></includeDirectories><libraryFiles><item>libmysqlclient.dylib</item></libraryFiles><libraryDirectories><item>/usr/local/mysql/lib</item></libraryDirectories><beVirtual>false</beVirtual><optimizationLevel>full</optimizationLevel><package>MySQLThapiEXDI</package></attributes></class><comment><class-id>Database.MySQLI386MacOSXThreadedInterface</class-id><body>This class defines calling conventions for the MySQL threaded client library on the I386 MacOSX platform.  Please refer to the environment variable on your machine for the path containing necessary MySQL library files.</body></comment><class><name>MySQLLinux64ThreadedInterface</name><environment>Database</environment><super>Database.MySQLThreadedInterface</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports>			private Database.MySQLLinux64ThreadedInterfaceDictionary.*			</imports><category>Database-External-Libraries</category><attributes><includeFiles></includeFiles><includeDirectories></includeDirectories><libraryFiles><item>libmysqlclient.so</item></libraryFiles><libraryDirectories></libraryDirectories><beVirtual>false</beVirtual><optimizationLevel>full</optimizationLevel><package>MySQLThapiEXDI</package></attributes></class><comment><class-id>Database.MySQLLinux64ThreadedInterface</class-id><body>This class defines calling conventions for the MySQL threaded 64-bit client library on the Linux platform.  Please refer to the environment variable on your machine for the path containing necessary MySQL library files.</body></comment><class><name>MySQLMacOSX64ThreadedInterface</name><environment>Database</environment><super>Database.MySQLThreadedInterface</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports>			private Database.MySQLMacOSX64ThreadedInterfaceDictionary.*			</imports><category>Database-External-Libraries</category><attributes><includeFiles></includeFiles><includeDirectories></includeDirectories><libraryFiles><item>libmysqlclient.dylib</item></libraryFiles><libraryDirectories><item>/usr/local/mysql/lib</item></libraryDirectories><beVirtual>false</beVirtual><optimizationLevel>full</optimizationLevel><package>MySQLThapiEXDI</package></attributes></class><comment><class-id>Database.MySQLMacOSX64ThreadedInterface</class-id><body>MySQLMacOSX64ThreadedInterface defines calling conventions for the MySQL threaded client library on the 64-bit MacOSX platform.  Please refer to the environment variable on your machine for the path containing necessary MySQL library files.</body></comment><class><name>MySQLNTThreadedInterface</name><environment>Database</environment><super>Database.MySQLThreadedInterface</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports>			private Database.MySQLNTThreadedInterfaceDictionary.*			</imports><category>Database-External-Libraries</category><attributes><includeFiles></includeFiles><includeDirectories></includeDirectories><libraryFiles><item>libmySQL.dll</item></libraryFiles><libraryDirectories></libraryDirectories><beVirtual>false</beVirtual><optimizationLevel>full</optimizationLevel><package>MySQLThapiEXDI</package></attributes></class><comment><class-id>Database.MySQLNTThreadedInterface</class-id><body>This class defines calling conventions for the MySQL threaded client library on the Windows NT/2K/XP platform.  Please refer to the environment variable on your machine for the path containing necessary MySQL library files.</body></comment><shared-variable><name>MySQLLinux64ThreadedInterfaceDictionary</name><environment>Database</environment><private>false</private><constant>false</constant><category>external dictionaries</category><attributes><package>MySQLThapiEXDI</package></attributes></shared-variable><shared-variable><name>MySQLSolaris64ThreadedInterfaceDictionary</name><environment>Database</environment><private>false</private><constant>false</constant><category>external dictionaries</category><attributes><package>MySQLThapiEXDI</package></attributes></shared-variable><shared-variable><name>MySQLI386MacOSXThreadedInterfaceDictionary</name><environment>Database</environment><private>false</private><constant>false</constant><category>external dictionaries</category><attributes><package>MySQLThapiEXDI</package></attributes></shared-variable><shared-variable><name>MySQLSolarisThreadedInterfaceDictionary</name><environment>Database</environment><private>false</private><constant>false</constant><category>external dictionaries</category><attributes><package>MySQLThapiEXDI</package></attributes></shared-variable><shared-variable><name>MySQLNTThreadedInterfaceDictionary</name><environment>Database</environment><private>false</private><constant>false</constant><category>external dictionaries</category><attributes><package>MySQLThapiEXDI</package></attributes></shared-variable><shared-variable><name>MySQLNT64ThreadedInterfaceDictionary</name><environment>Database</environment><private>false</private><constant>false</constant><category>external dictionaries</category><attributes><package>MySQLThapiEXDI</package></attributes></shared-variable><shared-variable><name>MySQLMacOSX64ThreadedInterfaceDictionary</name><environment>Database</environment><private>false</private><constant>false</constant><category>external dictionaries</category><attributes><package>MySQLThapiEXDI</package></attributes></shared-variable><shared-variable><name>MySQLLinuxThreadedInterfaceDictionary</name><environment>Database</environment><private>false</private><constant>false</constant><category>external dictionaries</category><attributes><package>MySQLThapiEXDI</package></attributes></shared-variable><shared-variable><name>MySQLThreadedInterfaceDictionary</name><environment>Database</environment><private>false</private><constant>false</constant><category>external dictionaries</category><attributes><package>MySQLThapiEXDI</package></attributes></shared-variable><methods><class-id>Database.MySQLThreadedConnection class</class-id> <category>class initialization</category><body package="MySQLThapiEXDI">initialize	"This method gets called when the package is loaded, and serves to initialize the dictionaries owned by this class."	"MySQLThreadedConnection initialize"	^super initialize</body><body package="MySQLThapiEXDI">initializeExternalInterfaceMap	"self initializeInterfaceMap"	xifMap := IdentityDictionary new.	xifMap at: #nt put: #MySQLNThreadedTInterface.	xifMap at: #linux_i386_unix put: #MySQLLinuxThreadedInterface.	xifMap at: #sun5_unix put: #MySQLSolarisThreadedInterface.	xifMap at: #macOSX put: #MySQLI386MacOSXThreadedInterface.	xifMap at: #macOSX64 put: #MySQLMacOSX64ThreadedInterface.	xifMap at: #nt64 put: #MySQLNT64ThreadedInterface.	xifMap at: #linux_x86_64_unix put: #MySQLLinux64ThreadedInterface.	xifMap at: #unix_sysV_sun_solaris64 put: #MySQLSolaris64ThreadedInterface</body></methods><methods><class-id>Database.MySQLThreadedConnection class</class-id> <category>accessing</category><body package="MySQLThapiEXDI">sessionClass	"Answer the class to use for session objects associated with receiver."	^MySQLThreadedSession</body></methods><methods><class-id>Database.MySQLThreadedSession class</class-id> <category>class initialization</category><body package="MySQLThapiEXDI">initialize	^super initialize</body></methods><methods><class-id>Database.MySQLThreadedSession class</class-id> <category>accessing</category><body package="MySQLThapiEXDI">connectionClass	"Answer the class to use for connection objects associated with receiver."	^MySQLThreadedConnection</body></methods><methods><class-id>Database.MySQLConnection class</class-id> <category>threading</category><body package="MySQLThapiEXDI">isThreaded		^false</body><body package="MySQLThapiEXDI">newBeThreaded	"return a new instance that will run under thapi"	^self threadedConnectionClass new</body><body package="MySQLThapiEXDI">threadedConnectionClass	^MySQLThreadedConnection</body></methods><methods><class-id>Database.MySQLThreadedInterface</class-id> <category>procedures</category><body package="MySQLThapiEXDI">my_connect: s with: name with: namelen with: timeout	&lt;C: int _threaded my_connect(my_socket s, const struct sockaddr * name, unsigned int namelen, unsigned int timeout)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">my_init	&lt;C: my_bool _threaded my_init(void)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">my_net_init: net with: vio	&lt;C: my_bool _threaded my_net_init(NET * net, Vio * vio)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">my_net_local_init: net	&lt;C: void _threaded my_net_local_init(NET * net)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">my_net_read: net	&lt;C: ULONG _threaded my_net_read(NET * net)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">my_net_write: net with: packet with: len	&lt;C: my_bool _threaded my_net_write(NET * net, const char * packet, ULONG len)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">my_rnd: arg	&lt;C: double _threaded my_rnd(struct rand_struct * )&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">my_thread_end	&lt;C: void _threaded my_thread_end(void)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">my_thread_init	&lt;C: my_bool _threaded my_thread_init(void)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">myodbc_remove_escape: mysql with: name	&lt;C: void __stdcall  _threaded myodbc_remove_escape(MYSQL * mysql, char * name)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysqlLibraryEnd	"This call is #defined as _server_end, even for client programs."	&lt;C: void __stdcall  _threaded mysql_server_end(void)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysqlLibraryInitArgc: argc argv: argv groups: groups	"This is #defined as a call to server_init, even for client programs."	&lt;C: int __stdcall  _threaded mysql_server_init(int argc, char * * argv, char * * groups)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_add_slave: mysql with: host with: port with: user with: passwd	&lt;C: int __stdcall _threaded mysql_add_slave(MYSQL * mysql, const char * host, unsigned int port, const char * user, const char * passwd)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_affected_rows: mysql	&lt;C: my_ulonglong __stdcall _threaded mysql_affected_rows(MYSQL * mysql)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_autocommit: mysql with: auto_mode	&lt;C: my_bool __stdcall _threaded mysql_autocommit(MYSQL * mysql, my_bool auto_mode)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_change_user: mysql with: user with: passwd with: db	&lt;C: my_bool __stdcall _threaded mysql_change_user(MYSQL * mysql, const char * user, const char * passwd, const char * db)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_character_set_name: mysql	&lt;C: const char *  __stdcall _threaded mysql_character_set_name(MYSQL * mysql)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_close: sock	&lt;C: void __stdcall _threaded mysql_close(MYSQL * sock)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_commit: mysql	&lt;C: my_bool __stdcall _threaded mysql_commit(MYSQL * mysql)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_data_seek: result with: offset	&lt;C: void __stdcall _threaded mysql_data_seek(MYSQL_RES * result, my_ulonglong offset)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_debug: debug	&lt;C: void __stdcall _threaded mysql_debug(const char * debug)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_disable_reads_from_master: mysql	&lt;C: void __stdcall _threaded mysql_disable_reads_from_master(MYSQL * mysql)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_disable_rpl_parse: mysql	&lt;C: void __stdcall _threaded mysql_disable_rpl_parse(MYSQL * mysql)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_dump_debug_info: mysql	&lt;C: int __stdcall _threaded mysql_dump_debug_info(MYSQL * mysql)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_embedded	&lt;C: my_bool __stdcall _threaded mysql_embedded(void)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_enable_reads_from_master: mysql	&lt;C: void __stdcall _threaded mysql_enable_reads_from_master(MYSQL * mysql)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_enable_rpl_parse: mysql	&lt;C: void __stdcall _threaded mysql_enable_rpl_parse(MYSQL * mysql)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_eof: res	&lt;C: my_bool __stdcall _threaded mysql_eof(MYSQL_RES * res)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_errno: mysql	&lt;C: unsigned int __stdcall _threaded mysql_errno(MYSQL * mysql)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_errno_to_sqlstate: mysql_errorNo	&lt;C: const char * _threaded mysql_errno_to_sqlstate(unsigned int mysql_errorNo)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_error: mysql	&lt;C: const char *  __stdcall _threaded mysql_error(MYSQL * mysql)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_escape_string: to with: from with: from_length	&lt;C: ULONG __stdcall _threaded mysql_escape_string(char * to, const char * from, ULONG from_length)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_fetch_field: result	&lt;C: MYSQL_FIELD *  __stdcall _threaded mysql_fetch_field(MYSQL_RES * result)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_fetch_field_direct: res with: fieldnr	&lt;C: MYSQL_FIELD *  __stdcall _threaded mysql_fetch_field_direct(MYSQL_RES * res, unsigned int fieldnr)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_fetch_fields50: res	&lt;C: MYSQL_FIELD50 *  __stdcall _threaded mysql_fetch_fields(MYSQL_RES * res)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_fetch_fields51: res	&lt;C: MYSQL_FIELD51 *  __stdcall _threaded mysql_fetch_fields(MYSQL_RES * res)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_fetch_lengths: result	&lt;C: ULONG *  __stdcall _threaded mysql_fetch_lengths(MYSQL_RES * result)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_fetch_row: result	&lt;C: MYSQL_ROW __stdcall _threaded mysql_fetch_row(MYSQL_RES * result)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_field_count: mysql	&lt;C: unsigned int __stdcall _threaded mysql_field_count(MYSQL * mysql)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_field_seek: result with: offset	&lt;C: MYSQL_FIELD_OFFSET __stdcall _threaded mysql_field_seek(MYSQL_RES * result, MYSQL_FIELD_OFFSET offset)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_field_tell: res	&lt;C: MYSQL_FIELD_OFFSET __stdcall _threaded mysql_field_tell(MYSQL_RES * res)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_free_result: result	&lt;C: void __stdcall _threaded mysql_free_result(MYSQL_RES * result)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_get_character_set_info: mysql with: charset	&lt;C: void __stdcall _threaded mysql_get_character_set_info(MYSQL * mysql, MY_CHARSET_INFO * charset)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_get_client_info	&lt;C: const char *  __stdcall _threaded mysql_get_client_info(void)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_get_client_version	&lt;C: ULONG __stdcall _threaded mysql_get_client_version(void)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_get_host_info: mysql	&lt;C: const char *  __stdcall _threaded mysql_get_host_info(MYSQL * mysql)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_get_parameters	&lt;C: MYSQL_PARAMETERS *  __stdcall _threaded mysql_get_parameters(void)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_get_proto_info: mysql	&lt;C: unsigned int __stdcall _threaded mysql_get_proto_info(MYSQL * mysql)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_get_server_info: mysql	&lt;C: const char *  __stdcall _threaded mysql_get_server_info(MYSQL * mysql)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_get_server_version: mysql	&lt;C: ULONG __stdcall _threaded mysql_get_server_version(MYSQL * mysql)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_hex_string: to with: from with: from_length	&lt;C: ULONG __stdcall _threaded mysql_hex_string(char * to, const char * from, ULONG from_length)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_info: mysql	&lt;C: const char *  __stdcall _threaded mysql_info(MYSQL * mysql)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_init: mysql	&lt;C: MYSQL *  __stdcall _threaded mysql_init(MYSQL * mysql)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_insert_id: mysql	&lt;C: my_ulonglong __stdcall _threaded mysql_insert_id(MYSQL * mysql)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_kill: mysql with: pid	&lt;C: int __stdcall _threaded mysql_kill(MYSQL * mysql, ULONG pid)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_list_dbs: mysql with: wild	&lt;C: MYSQL_RES *  __stdcall _threaded mysql_list_dbs(MYSQL * mysql, const char * wild)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_list_fields: mysql with: table with: wild	&lt;C: MYSQL_RES *  __stdcall _threaded mysql_list_fields(MYSQL * mysql, const char * table, const char * wild)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_list_processes: mysql	&lt;C: MYSQL_RES *  __stdcall _threaded mysql_list_processes(MYSQL * mysql)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_list_tables: mysql with: wild	&lt;C: MYSQL_RES *  __stdcall _threaded mysql_list_tables(MYSQL * mysql, const char * wild)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_manager_close: con	&lt;C: void __stdcall _threaded mysql_manager_close(MYSQL_MANAGER * con)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_manager_command: con with: cmd with: cmd_len	&lt;C: int __stdcall _threaded mysql_manager_command(MYSQL_MANAGER * con, const char * cmd, int cmd_len)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_manager_connect: con with: host with: user with: passwd with: port	&lt;C: MYSQL_MANAGER *  __stdcall _threaded mysql_manager_connect(MYSQL_MANAGER * con, const char * host, const char * user, const char * passwd, unsigned int port)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_manager_fetch_line: con with: res_buf with: res_buf_size	&lt;C: int __stdcall _threaded mysql_manager_fetch_line(MYSQL_MANAGER * con, char * res_buf, int res_buf_size)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_manager_init: con	&lt;C: MYSQL_MANAGER *  __stdcall _threaded mysql_manager_init(MYSQL_MANAGER * con)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_master_query: mysql with: q with: length	&lt;C: my_bool __stdcall _threaded mysql_master_query(MYSQL * mysql, const char * q, ULONG length)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_master_send_query: mysql with: q with: length	&lt;C: my_bool __stdcall _threaded mysql_master_send_query(MYSQL * mysql, const char * q, ULONG length)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_more_results: mysql	&lt;C: my_bool __stdcall _threaded mysql_more_results(MYSQL * mysql)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_next_result: mysql	&lt;C: int __stdcall _threaded mysql_next_result(MYSQL * mysql)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_num_fields: res	&lt;C: unsigned int __stdcall _threaded mysql_num_fields(MYSQL_RES * res)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_num_rows: res	&lt;C: my_ulonglong __stdcall _threaded mysql_num_rows(MYSQL_RES * res)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_odbc_escape_string: mysql with: to with: to_length with: from with: from_length with: param with: extend_buffer	&lt;C: char *  __stdcall _threaded mysql_odbc_escape_string(MYSQL * mysql, char * to, ULONG to_length, const char * from, ULONG from_length, void * param, char *  (* extend_buffer)(void * _arg1, char * to, ULONG * length))&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_options: mysql with: option with: arg	&lt;C: int __stdcall _threaded mysql_options(MYSQL * mysql, enum mysql_option option, const char * arg)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_ping: mysql	&lt;C: int __stdcall _threaded mysql_ping(MYSQL * mysql)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_query: mysql with: q	&lt;C: int __stdcall _threaded mysql_query(MYSQL * mysql, const char * q)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_read_query_result: mysql	&lt;C: my_bool __stdcall _threaded mysql_read_query_result(MYSQL * mysql)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_reads_from_master_enabled: mysql	&lt;C: my_bool __stdcall _threaded mysql_reads_from_master_enabled(MYSQL * mysql)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_real_connect: mysql host: host user: user passwd: passwd db: db port: port unix_socket: unix_socket clientflag: clientflag	&lt;C: MYSQL *  __stdcall _threaded mysql_real_connect(MYSQL * mysql, const char * host, const char * user, const char * passwd, const char * db, unsigned int port, const char * unix_socket, ULONG clientflag)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_real_escape_string: mysql with: to with: from with: length	&lt;C: ULONG __stdcall _threaded mysql_real_escape_string(MYSQL * mysql, char * to, const char * from, ULONG length)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_real_query: mysql query: q length: length	&lt;C: int __stdcall _threaded mysql_real_query(MYSQL * mysql, const char * q, ULONG length)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_refresh: mysql with: refresh_options	&lt;C: int __stdcall _threaded mysql_refresh(MYSQL * mysql, unsigned int refresh_options)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_rollback: mysql	&lt;C: my_bool __stdcall _threaded mysql_rollback(MYSQL * mysql)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_row_seek: result with: offset	&lt;C: MYSQL_ROW_OFFSET __stdcall _threaded mysql_row_seek(MYSQL_RES * result, MYSQL_ROW_OFFSET offset)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_row_tell: res	&lt;C: MYSQL_ROW_OFFSET __stdcall _threaded mysql_row_tell(MYSQL_RES * res)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_rpl_parse_enabled: mysql	&lt;C: int __stdcall _threaded mysql_rpl_parse_enabled(MYSQL * mysql)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_rpl_probe: mysql	&lt;C: my_bool __stdcall _threaded mysql_rpl_probe(MYSQL * mysql)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_rpl_query_type: q with: len	&lt;C: enum mysql_rpl_type __stdcall _threaded mysql_rpl_query_type(const char * q, int len)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_select_db: mysql with: db	&lt;C: int __stdcall _threaded mysql_select_db(MYSQL * mysql, const char * db)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_send_query: mysql with: q with: length	&lt;C: int __stdcall _threaded mysql_send_query(MYSQL * mysql, const char * q, ULONG length)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_server_end	&lt;C: void __stdcall _threaded mysql_server_end(void)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_server_init: argc with: argv with: groups	&lt;C: int __stdcall _threaded mysql_server_init(int argc, char * * argv, char * * groups)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_set_character_set: mysql with: csname	&lt;C: int __stdcall _threaded mysql_set_character_set(MYSQL * mysql, const char * csname)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_set_local_infile_default: mysql	&lt;C: void _threaded mysql_set_local_infile_default(MYSQL * mysql)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_set_local_infile_handler: mysql with: local_infile_init with: local_infile_read with: local_infile_end with: local_infile_error with: _arg1	&lt;C: void _threaded mysql_set_local_infile_handler(MYSQL * mysql, int (* local_infile_init)(void * * , const char * , void * ), int (* local_infile_read)(void * , char * , unsigned int), void (* local_infile_end)(void * ), int (* local_infile_error)(void * , char * , unsigned int), void * _arg1)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_set_master: mysql with: host with: port with: user with: passwd	&lt;C: int __stdcall _threaded  mysql_set_master(MYSQL * mysql, const char * host, unsigned int port, const char * user, const char * passwd)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_set_server_option: mysql with: option	&lt;C: int __stdcall _threaded  mysql_set_server_option(MYSQL * mysql, enum enum_mysql_set_option option)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_shutdown: mysql with: shutdown_level	&lt;C: int __stdcall _threaded  mysql_shutdown(MYSQL * mysql, enum mysql_enum_shutdown_level shutdown_level)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_slave_query: mysql with: q with: length	&lt;C: my_bool __stdcall _threaded  mysql_slave_query(MYSQL * mysql, const char * q, ULONG length)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_slave_send_query: mysql with: q with: length	&lt;C: my_bool __stdcall _threaded  mysql_slave_send_query(MYSQL * mysql, const char * q, ULONG length)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_sqlstate: mysql	&lt;C: const char *  __stdcall _threaded  mysql_sqlstate(MYSQL * mysql)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_ssl_set: mysql with: key with: cert with: ca with: capath with: cipher	&lt;C: my_bool __stdcall _threaded  mysql_ssl_set(MYSQL * mysql, const char * key, const char * cert, const char * ca, const char * capath, const char * cipher)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_stat: mysql	&lt;C: const char *  __stdcall _threaded  mysql_stat(MYSQL * mysql)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_stmt_affected_rows: stmt	&lt;C: my_ulonglong __stdcall _threaded  mysql_stmt_affected_rows(MYSQL_STMT * stmt)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_stmt_attr_get: stmt with: attr_type with: attr	&lt;C: my_bool __stdcall _threaded  mysql_stmt_attr_get(MYSQL_STMT * stmt, enum enum_stmt_attr_type attr_type, void * attr)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_stmt_attr_set: stmt attr_type: attr_type attr: attr	&lt;C: my_bool __stdcall _threaded  mysql_stmt_attr_set(MYSQL_STMT * stmt, enum enum_stmt_attr_type attr_type, const void * attr)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_stmt_bind_param: stmt bind: bnd	&lt;C: my_bool __stdcall _threaded  mysql_stmt_bind_param(MYSQL_STMT * stmt, MYSQL_BIND * bnd)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_stmt_bind_result: stmt bind: bnd	&lt;C: my_bool __stdcall _threaded  mysql_stmt_bind_result(MYSQL_STMT * stmt, MYSQL_BIND * bnd)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_stmt_close: stmt	&lt;C: my_bool __stdcall _threaded  mysql_stmt_close(MYSQL_STMT * stmt)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_stmt_data_seek: stmt with: offset	&lt;C: void __stdcall _threaded  mysql_stmt_data_seek(MYSQL_STMT * stmt, my_ulonglong offset)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_stmt_errno: stmt	&lt;C: unsigned int __stdcall _threaded  mysql_stmt_errno(MYSQL_STMT * stmt)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_stmt_error: stmt	&lt;C: const char *  __stdcall _threaded  mysql_stmt_error(MYSQL_STMT * stmt)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_stmt_execute: stmt	&lt;C: int __stdcall _threaded  mysql_stmt_execute(MYSQL_STMT * stmt)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_stmt_fetch: stmt	&lt;C: int __stdcall _threaded  mysql_stmt_fetch(MYSQL_STMT * stmt)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_stmt_fetch_column: stmt with: bind with: column with: offset	&lt;C: int __stdcall _threaded  mysql_stmt_fetch_column(MYSQL_STMT * stmt, MYSQL_BIND * bind, unsigned int column, ULONG offset)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_stmt_field_count: stmt	&lt;C: unsigned int __stdcall _threaded  mysql_stmt_field_count(MYSQL_STMT * stmt)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_stmt_free_result: stmt	&lt;C: my_bool __stdcall _threaded  mysql_stmt_free_result(MYSQL_STMT * stmt)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_stmt_init: mysql	&lt;C: MYSQL_STMT *  __stdcall _threaded  mysql_stmt_init(MYSQL * mysql)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_stmt_insert_id: stmt	&lt;C: my_ulonglong __stdcall _threaded  mysql_stmt_insert_id(MYSQL_STMT * stmt)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_stmt_num_rows: stmt	&lt;C: my_ulonglong __stdcall _threaded  mysql_stmt_num_rows(MYSQL_STMT * stmt)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_stmt_param_count: stmt	&lt;C: ULONG __stdcall _threaded  mysql_stmt_param_count(MYSQL_STMT * stmt)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_stmt_param_metadata: stmt	&lt;C: MYSQL_RES *  __stdcall _threaded  mysql_stmt_param_metadata(MYSQL_STMT * stmt)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_stmt_prepare: stmt query: query length: length	&lt;C: int __stdcall _threaded  mysql_stmt_prepare(MYSQL_STMT * stmt, const char * query, ULONG length)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_stmt_reset: stmt	&lt;C: my_bool __stdcall _threaded  mysql_stmt_reset(MYSQL_STMT * stmt)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_stmt_result_metadata: stmt	&lt;C: MYSQL_RES *  __stdcall _threaded  mysql_stmt_result_metadata(MYSQL_STMT * stmt)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_stmt_row_seek: stmt with: offset	&lt;C: MYSQL_ROW_OFFSET __stdcall _threaded  mysql_stmt_row_seek(MYSQL_STMT * stmt, MYSQL_ROW_OFFSET offset)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_stmt_row_tell: stmt	&lt;C: MYSQL_ROW_OFFSET __stdcall _threaded  mysql_stmt_row_tell(MYSQL_STMT * stmt)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_stmt_send_long_data: stmt with: param_number with: data with: length	&lt;C: my_bool __stdcall _threaded  mysql_stmt_send_long_data(MYSQL_STMT * stmt, unsigned int param_number, const char * data, ULONG length)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_stmt_sqlstate: stmt	&lt;C: const char *  __stdcall _threaded  mysql_stmt_sqlstate(MYSQL_STMT * stmt)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_stmt_store_result: stmt	&lt;C: int __stdcall _threaded  mysql_stmt_store_result(MYSQL_STMT * stmt)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_store_result: mysql	&lt;C: MYSQL_RES *  __stdcall _threaded  mysql_store_result(MYSQL * mysql)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_thread_end	&lt;C: void __stdcall _threaded  mysql_thread_end(void)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_thread_id: mysql	&lt;C: ULONG __stdcall _threaded  mysql_thread_id(MYSQL * mysql)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_thread_init	&lt;C: my_bool __stdcall _threaded  mysql_thread_init(void)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_thread_safe	&lt;C: unsigned int __stdcall _threaded  mysql_thread_safe(void)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_use_result: mysql	&lt;C: MYSQL_RES *  __stdcall _threaded  mysql_use_result(MYSQL * mysql)&gt;	^self externalAccessFailedWith: _errorCode</body><body package="MySQLThapiEXDI">mysql_warning_count: mysql	&lt;C: unsigned int __stdcall _threaded  mysql_warning_count(MYSQL * mysql)&gt;	^self externalAccessFailedWith: _errorCode</body></methods><initialize><class-id>Database.MySQLThreadedConnection</class-id></initialize><initialize><class-id>Database.MySQLThreadedSession</class-id></initialize><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>MySQLConnection</name><environment>Database</environment><super>Database.ExternalDatabaseConnection</super><private>false</private><indexed-type>none</indexed-type><inst-vars>hConnHolder database port useEncodingApi </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Database-MySQL</category><attributes><package>MySQLEXDI</package></attributes></class><class><name>MySQLInterface</name><environment>Database</environment><super>External.ExternalInterface</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports>			private Database.MySQLInterfaceDictionary.*			</imports><category>Database-External-Libraries</category><attributes><includeFiles></includeFiles><includeDirectories></includeDirectories><libraryFiles></libraryFiles><libraryDirectories></libraryDirectories><beVirtual>true</beVirtual><optimizationLevel>full</optimizationLevel><package>MySQLEXDI</package></attributes></class><class><name>MySQLSession</name><environment>Database</environment><super>Database.ExternalDatabaseSession</super><private>false</private><indexed-type>none</indexed-type><inst-vars>hstmtHolder resultsCache maxLongData numParameters boundValueBuffersHolder inputBufferPtrsArrayHolder outputBufferPtrsArrayHolder rowCount isRowCountKnown hResultHolder useStatementHandle </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Database-MySQL</category><attributes><package>MySQLEXDI</package></attributes></class></st-source>