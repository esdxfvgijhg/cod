
-- processus : 21
-- min fanout : 3
-- max fanout : 7
-- channels   : 106


--generated  at 11 octobre 2018 14:46:26
--generic synchronous network model
--Bernard Pottier. UBO

VAL [21][3]BYTE NetProcess IS [   "P1 ", -- id: 1
  "P10", -- id: 2
  "P11", -- id: 3
  "P12", -- id: 4
  "P13", -- id: 5
  "P14", -- id: 6
  "P15", -- id: 7
  "P16", -- id: 8
  "P17", -- id: 9
  "P18", -- id: 10
  "P19", -- id: 11
  "P2 ", -- id: 12
  "P20", -- id: 13
  "P21", -- id: 14
  "P3 ", -- id: 15
  "P4 ", -- id: 16
  "P5 ", -- id: 17
  "P6 ", -- id: 18
  "P7 ", -- id: 19
  "P8 ", -- id: 20
  "P9 "]:

VAL [21][4]BYTE NetProcedure IS [   "Node", -- id: 1
  "Node", -- id: 2
  "Node", -- id: 3
  "Node", -- id: 4
  "Node", -- id: 5
  "Node", -- id: 6
  "Node", -- id: 7
  "Node", -- id: 8
  "Node", -- id: 9
  "Node", -- id: 10
  "Node", -- id: 11
  "Node", -- id: 12
  "Node", -- id: 13
  "Node", -- id: 14
  "Node", -- id: 15
  "Node", -- id: 16
  "Node", -- id: 17
  "Node", -- id: 18
  "Node", -- id: 19
  "Node", -- id: 20
  "Node"]:

DATA TYPE Location
  RECORD
    INT xLoc:
    INT yLoc:
    INT elevation:
    INT range:
:
VAL [21] Location  NetLocation IS [   [46 , 548 , 0 , 117 ] , -- id: 1
  [647 , 207 , 0 , 117 ] , -- id: 2
  [673 , 161 , 0 , 117 ] , -- id: 3
  [639 , 235 , 0 , 117 ] , -- id: 4
  [588 , 278 , 0 , 117 ] , -- id: 5
  [543 , 326 , 0 , 117 ] , -- id: 6
  [497 , 342 , 0 , 117 ] , -- id: 7
  [397 , 417 , 0 , 117 ] , -- id: 8
  [343 , 446 , 0 , 117 ] , -- id: 9
  [304 , 437 , 0 , 117 ] , -- id: 10
  [249 , 478 , 0 , 117 ] , -- id: 11
  [140 , 497 , 0 , 117 ] , -- id: 12
  [151 , 538 , 0 , 117 ] , -- id: 13
  [68 , 577 , 0 , 117 ] , -- id: 14
  [224 , 450 , 0 , 117 ] , -- id: 15
  [297 , 404 , 0 , 117 ] , -- id: 16
  [356 , 407 , 0 , 117 ] , -- id: 17
  [432 , 340 , 0 , 117 ] , -- id: 18
  [484 , 316 , 0 , 117 ] , -- id: 19
  [539 , 289 , 0 , 117 ] , -- id: 20
  [605 , 247 , 0 , 117 ] ]:


#USE "course.lib"


VAL INT MaxFanOut IS 7:

VAL INT MaxNodes IS 21:

#INCLUDE "nodes-test-include.occ"

PROC Elorn(CHAN OF BYTE stdin, stdout, stderr)


   -- Channel declarations 
  CHAN OF diam.proto P1.P2,P1.P20,P1.P21:
  CHAN OF diam.proto P2.P1,P2.P3,P2.P19,P2.P20,P2.P21:
  CHAN OF diam.proto P3.P2,P3.P4,P3.P18,P3.P19,P3.P20:
  CHAN OF diam.proto P4.P3,P4.P5,P4.P16,P4.P17,P4.P18,P4.P19:
  CHAN OF diam.proto P5.P4,P5.P6,P5.P16,P5.P17,P5.P18:
  CHAN OF diam.proto P6.P5,P6.P7,P6.P14,P6.P15,P6.P16:
  CHAN OF diam.proto P7.P6,P7.P8,P7.P13,P7.P14,P7.P15:
  CHAN OF diam.proto P8.P7,P8.P9,P8.P12,P8.P13,P8.P14,P8.P15:
  CHAN OF diam.proto P9.P8,P9.P10,P9.P11,P9.P12,P9.P13,P9.P14:
  CHAN OF diam.proto P10.P9,P10.P11,P10.P12,P10.P13:
  CHAN OF diam.proto P11.P9,P11.P10,P11.P12:
  CHAN OF diam.proto P12.P8,P12.P9,P12.P10,P12.P11,P12.P13:
  CHAN OF diam.proto P13.P7,P13.P8,P13.P9,P13.P10,P13.P12,P13.P14,P13.P15:
  CHAN OF diam.proto P14.P6,P14.P7,P14.P8,P14.P9,P14.P13,P14.P15:
  CHAN OF diam.proto P15.P6,P15.P7,P15.P8,P15.P13,P15.P14:
  CHAN OF diam.proto P16.P4,P16.P5,P16.P6,P16.P17,P16.P18:
  CHAN OF diam.proto P17.P4,P17.P5,P17.P16,P17.P18,P17.P19:
  CHAN OF diam.proto P18.P3,P18.P4,P18.P5,P18.P16,P18.P17,P18.P19:
  CHAN OF diam.proto P19.P2,P19.P3,P19.P4,P19.P17,P19.P18,P19.P20:
  CHAN OF diam.proto P20.P1,P20.P2,P20.P3,P20.P19,P20.P21:
  CHAN OF diam.proto P21.P1,P21.P2,P21.P20:

  -- Channel table declaration for nodes 
  P1.out IS [ P1.P2,P1.P20,P1.P21 ]:
  P1.in IS [ P2.P1,P20.P1,P21.P1 ]:
  P2.out IS [ P2.P1,P2.P3,P2.P19,P2.P20,P2.P21 ]:
  P2.in IS [ P1.P2,P3.P2,P19.P2,P20.P2,P21.P2 ]:
  P3.out IS [ P3.P2,P3.P4,P3.P18,P3.P19,P3.P20 ]:
  P3.in IS [ P2.P3,P4.P3,P18.P3,P19.P3,P20.P3 ]:
  P4.out IS [ P4.P3,P4.P5,P4.P16,P4.P17,P4.P18,P4.P19 ]:
  P4.in IS [ P3.P4,P5.P4,P16.P4,P17.P4,P18.P4,P19.P4 ]:
  P5.out IS [ P5.P4,P5.P6,P5.P16,P5.P17,P5.P18 ]:
  P5.in IS [ P4.P5,P6.P5,P16.P5,P17.P5,P18.P5 ]:
  P6.out IS [ P6.P5,P6.P7,P6.P14,P6.P15,P6.P16 ]:
  P6.in IS [ P5.P6,P7.P6,P14.P6,P15.P6,P16.P6 ]:
  P7.out IS [ P7.P6,P7.P8,P7.P13,P7.P14,P7.P15 ]:
  P7.in IS [ P6.P7,P8.P7,P13.P7,P14.P7,P15.P7 ]:
  P8.out IS [ P8.P7,P8.P9,P8.P12,P8.P13,P8.P14,P8.P15 ]:
  P8.in IS [ P7.P8,P9.P8,P12.P8,P13.P8,P14.P8,P15.P8 ]:
  P9.out IS [ P9.P8,P9.P10,P9.P11,P9.P12,P9.P13,P9.P14 ]:
  P9.in IS [ P8.P9,P10.P9,P11.P9,P12.P9,P13.P9,P14.P9 ]:
  P10.out IS [ P10.P9,P10.P11,P10.P12,P10.P13 ]:
  P10.in IS [ P9.P10,P11.P10,P12.P10,P13.P10 ]:
  P11.out IS [ P11.P9,P11.P10,P11.P12 ]:
  P11.in IS [ P9.P11,P10.P11,P12.P11 ]:
  P12.out IS [ P12.P8,P12.P9,P12.P10,P12.P11,P12.P13 ]:
  P12.in IS [ P8.P12,P9.P12,P10.P12,P11.P12,P13.P12 ]:
  P13.out IS [ P13.P7,P13.P8,P13.P9,P13.P10,P13.P12,P13.P14,P13.P15 ]:
  P13.in IS [ P7.P13,P8.P13,P9.P13,P10.P13,P12.P13,P14.P13,P15.P13 ]:
  P14.out IS [ P14.P6,P14.P7,P14.P8,P14.P9,P14.P13,P14.P15 ]:
  P14.in IS [ P6.P14,P7.P14,P8.P14,P9.P14,P13.P14,P15.P14 ]:
  P15.out IS [ P15.P6,P15.P7,P15.P8,P15.P13,P15.P14 ]:
  P15.in IS [ P6.P15,P7.P15,P8.P15,P13.P15,P14.P15 ]:
  P16.out IS [ P16.P4,P16.P5,P16.P6,P16.P17,P16.P18 ]:
  P16.in IS [ P4.P16,P5.P16,P6.P16,P17.P16,P18.P16 ]:
  P17.out IS [ P17.P4,P17.P5,P17.P16,P17.P18,P17.P19 ]:
  P17.in IS [ P4.P17,P5.P17,P16.P17,P18.P17,P19.P17 ]:
  P18.out IS [ P18.P3,P18.P4,P18.P5,P18.P16,P18.P17,P18.P19 ]:
  P18.in IS [ P3.P18,P4.P18,P5.P18,P16.P18,P17.P18,P19.P18 ]:
  P19.out IS [ P19.P2,P19.P3,P19.P4,P19.P17,P19.P18,P19.P20 ]:
  P19.in IS [ P2.P19,P3.P19,P4.P19,P17.P19,P18.P19,P20.P19 ]:
  P20.out IS [ P20.P1,P20.P2,P20.P3,P20.P19,P20.P21 ]:
  P20.in IS [ P1.P20,P2.P20,P3.P20,P19.P20,P21.P20 ]:
  P21.out IS [ P21.P1,P21.P2,P21.P20 ]:
  P21.in IS [ P1.P21,P2.P21,P20.P21 ]:


  -- Program Body 

  [MaxNodes]CHAN OF BYTE toMux:
  PAR
    Node(P1.in, P1.out,0, toMux [0])
    Node(P10.in, P10.out,1, toMux [1])
    Node(P11.in, P11.out,2, toMux [2])
    Node(P12.in, P12.out,3, toMux [3])
    Node(P13.in, P13.out,4, toMux [4])
    Node(P14.in, P14.out,5, toMux [5])
    Node(P15.in, P15.out,6, toMux [6])
    Node(P16.in, P16.out,7, toMux [7])
    Node(P17.in, P17.out,8, toMux [8])
    Node(P18.in, P18.out,9, toMux [9])
    Node(P19.in, P19.out,10, toMux [10])
    Node(P2.in, P2.out,11, toMux [11])
    Node(P20.in, P20.out,12, toMux [12])
    Node(P21.in, P21.out,13, toMux [13])
    Node(P3.in, P3.out,14, toMux [14])
    Node(P4.in, P4.out,15, toMux [15])
    Node(P5.in, P5.out,16, toMux [16])
    Node(P6.in, P6.out,17, toMux [17])
    Node(P7.in, P7.out,18, toMux [18])
    Node(P8.in, P8.out,19, toMux [19])
    Node(P9.in, P9.out,20, toMux [20])
    Mux(toMux,stdout)
     -- End of program body 
:
