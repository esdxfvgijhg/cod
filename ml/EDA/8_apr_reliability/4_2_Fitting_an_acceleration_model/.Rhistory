#!/usr/bin/env Rscript
DATAPATH <- Sys.getenv("DATAPATH")

source('~/S11/code/R/src/8_apr_reliability/4_2_Fitting an acceleration model/apr421_ Graphical estimation.r', echo=TRUE)
## Generate lognormal probability plot for each cell
## and plot the curves on the same plot.
plot(c(x1,x2,x3), c(y1,y2,y3), type="n",
xlab="Theoretical Quantiles", ylab="ln Time",
main="PROBABILITY PLOT OF TEMPERATURE CELLS")
source('~/S11/code/R/src/8_apr_reliability/4_2_Fitting an acceleration model/apr421_ Graphical estimation.r', echo=TRUE)
source('~/S11/code/R/src/8_apr_reliability/4_2_Fitting an acceleration model/apr421_ Graphical estimation.r', echo=TRUE)
source('~/S11/code/R/src/8_apr_reliability/4_2_Fitting an acceleration model/apr421_ Graphical estimation.r', echo=TRUE)
source('~/S11/code/R/src/8_apr_reliability/4_2_Fitting an acceleration model/apr422_Maximum likelihood.r', echo=TRUE)
source('~/S11/code/R/src/8_apr_reliability/4_2_Fitting an acceleration model/apr422_Maximum likelihood.r', echo=TRUE)
source('~/S11/code/R/src/8_apr_reliability/4_2_Fitting an acceleration model/apr423_Fitting models using degradation data instead of failures.r', echo=TRUE)
## Input temperature data, number of units, and cell data.
temp = c(85, 105, 125)
nu = c(100, 50, 25)
cell1 = c(401, 428, 695, 725, 738)
cell2 = c(171, 187, 189, 266, 275, 285, 301, 302, 305, 316, 317,
324, 349, 350, 386, 405, 480, 493, 530, 534, 536, 567,
589, 598, 599, 614, 620, 650, 668, 685, 718, 795, 854,
917, 926)
cell3 = c(24, 42, 92, 93, 141, 142, 143, 159, 181, 188, 194, 199,
207, 213, 243, 256, 259, 290, 294, 305, 392, 454, 502, 696)
## Apply ln function to cell data.
y1 = log(cell1)
y2 = log(cell2)
y3 = log(cell3)
## Generate lognormal probability plot using procedure from 8.2.2.1.
pos1 = 1:length(cell1)
pos2 = 1:length(cell2)
pos3 = 1:length(cell3)
pos1 = (pos1-0.3)/(nu[1]+0.4)
pos2 = (pos2-0.3)/(nu[2]+0.4)
pos3 = (pos3-0.3)/(nu[3]+0.4)
x1 = qnorm(pos1)
x2 = qnorm(pos2)
x3 = qnorm(pos3)
## Generate lognormal probability plot for each cell
## and plot the curves on the same plot.
plot(c(x1,x2,x3), c(y1,y2,y3), type="n",
xlab="Theoretical Quantiles", ylab="ln Time",
main="PROBABILITY PLOT OF TEMPERATURE CELLS")
lines(x1,y1, col="blue")
lines(x2,y2, col="blue")
lines(x3,y3, col="blue")
x1
## Compute Ao, the ln T50 estimate, and A1, the cell sigma estimate.
z1 = lsfit(x1,y1)
z2 = lsfit(x2,y2)
z3 = lsfit(x3,y3)
## Save intercepts from the three fits.
YARRH = c(z1$coef[1], z2$coef[1], z3$coef[1])
YARRH
## Compute 11605/(temp+273.16) for three cell temperatures.
XARRH = 11605/(temp + 273.15)
XARRH
## Plot Arrhenius cell T50's.
plot(XARRH, YARRH, type="o", ylab="ln T50", xlab="11605/(t+273.16)",
main="ARRHENIUS PLOT", pch=19, col="red")
## Fit linear model.
z = lm( YARRH~XARRH,
weights=c(length(cell1), length(cell2), length(cell3)))
coef(z)
## Estimate A.
A = exp(z$coef[1])
names(A) <- NULL
A
## Estimate delta H.
dH = z$coef[2]
names(dH) <- NULL
dH
## Compute acceleration between 85 C and 125 C.
exp(dH*11605*(1/(temp[1]+273.16) - 1/(temp[3]+273.16)))
## Load survival package.
require(survival)
## Input data for Cell 1 - 85 degrees.
cell85 = c(401, 428, 695, 725, 738)
NC85 = 100
## Create survival object.
y85 = Surv(c(cell85, rep(1000, NC85-length(cell85))),
c(rep(1,length(cell85)), rep(0, NC85-length(cell85)))
)
## Generate survival curve (Kaplan-Meier).
ys85 = survfit(y85 ~ 1, type="kaplan-meier")
summary(ys85)
plot(ys85, xlab="Hours", ylab="Survival Probability", col="red")
## Lognormal Fit.
yl85 = survreg(y85 ~ 1, dist="lognormal")
summary(yl85)
## Input data for Cell 2 - 105 degrees.
NC105 = 50
cell105 = c(171, 187, 189, 266, 275, 285, 301, 302, 305,
316, 317, 324, 349, 350, 386, 405, 480, 493,
530, 534, 536, 567, 589, 598, 599, 614, 620,
650, 668, 685, 718, 795, 854, 917,  926)
## Create survival object.
y105= Surv(c(cell105, rep(1000, NC105-length(cell105))),
c(rep(1,length(cell105)), rep(0,NC105-length(cell105))))
## Generate survival curve (Kaplan-Meier).
ys105 = survfit(y105 ~ 1, type="kaplan-meier")
summary(ys105)
plot(ys105, xlab="Hours", ylab="Survival Probability", col="green")
## Lognormal Fit
yl105 = survreg(y105 ~ 1, dist="lognormal")
summary(yl105)
## Input data for Cell 3 - 125 degrees.
NC125 = 25
cell125 = c(24, 42, 92, 93, 141, 142, 143, 159, 181, 188, 194,
199, 207, 213, 243, 256, 259, 290, 294, 305, 392,
454, 502 ,696)
## Create survival object.
y125 = Surv(c(cell125, rep(1000, NC125-length(cell125))),
c(rep(1,length(cell125)), rep(0,NC125-length(cell125))))
## Generate survival curve (Kaplan-Meier).
ys125 = survfit(y125 ~ 1, type="kaplan-meier")
summary(ys125)
