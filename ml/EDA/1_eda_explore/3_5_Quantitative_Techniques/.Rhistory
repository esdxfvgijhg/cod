#!/usr/bin/env Rscript
DATAPATH <- Sys.getenv("DATAPATH")

source('~/S11/code/R/src/1_eda_explore/3_5_Quantitative Techniques/eda35a_Levene Test for Equality of Variances.r', echo=TRUE)
source('~/S11/code/R/src/1_eda_explore/3_5_Quantitative Techniques/eda35a_Levene Test for Equality of Variances.r', echo=TRUE)
source('~/S11/code/R/src/1_eda_explore/3_5_Quantitative Techniques/eda35c_Autocorrelation.r', echo=TRUE)
source('~/S11/code/R/src/1_eda_explore/3_5_Quantitative Techniques/eda35c_Autocorrelation.r', echo=TRUE)
## Read data and save batch as a factor.
m <- matrix(scan(paste(DATAPATH,"gear.dat",sep="/"),skip=25),ncol=2,byrow=T)
View(m)
View(m)
## Read data and save batch as a factor.
m <- matrix(scan(paste(DATAPATH,"gear.dat",sep="/"),skip=25),ncol=2,byrow=T)
diameter = m[,1]
diameter
## Attach "car" library and run Levene's test.
library(car)
leveneTest(diameter, batch)
## Read data and save batch as a factor.
m <- matrix(scan(paste(DATAPATH,"gear.dat",sep="/"),skip=25),ncol=2,byrow=T)
diameter = m[,1]
batch = as.factor(m[,2])
## Attach "car" library and run Levene's test.
library(car)
leveneTest(diameter, batch)
## Compute critical value.
qf(.95,9,90)
## Read data.
diameter <- scan(paste(DATAPATH,"lew.dat",sep="/"),skip=25)
## Attach "nlme" library and compute autocorrelations.
library(nlme)
z = acf(diameter,lag.max=49)
## Read data and save batch as a factor.
m <- matrix(scan(paste(DATAPATH,"gear.dat",sep="/"),skip=25),ncol=2,byrow=T)
diameter = m[,1]
batch = as.factor(m[,2])
View(m)
## Read data and save batch as a factor.
m <- matrix(scan(paste(DATAPATH,"gear.dat",sep="/"),skip=25),ncol=2,byrow=T)
diameter = m[,1]
batch = as.factor(m[,2])
batch
## Attach "car" library and run Levene's test.
library(car)
leveneTest(diameter, batch)
## Read data.
diameter <- scan(paste(DATAPATH,"lew.dat",sep="/"),skip=25)
## Attach "nlme" library and compute autocorrelations.
library(nlme)
z = acf(diameter,lag.max=49)
## Print results.
Lag = round(z$lag,2)
ACF = round(z$acf,2)
## Read data.
diameter <- scan(paste(DATAPATH,"lew.dat",sep="/"),skip=25)
## Attach "nlme" library and compute autocorrelations.
library(nlme)
z = acf(diameter,lag.max=49)
z
## Read data.
diameter <- scan(paste(DATAPATH,"lew.dat",sep="/"),skip=25)
## Attach "nlme" library and compute autocorrelations.
library(nlme)
z = acf(diameter,lag.max=49)
z
## Attach "nlme" library and compute autocorrelations.
library(nlme)
z = acf(diameter,lag.max=49)
z
## Print results.
Lag = round(z$lag,2)
Lag
## Print results.
Lag = round(z$lag,2)
Lag
ACF = round(z$acf,2)
ACF
## Print results.
Lag = round(z$lag,2)
ACF = round(z$acf,2)
data.frame(Lag, ACF)
## Read data.
diameter <- scan(paste(DATAPATH,"lew.dat",sep="/"),skip=25)
## Attach "nlme" library and compute autocorrelations.
library(nlme)
z = acf(diameter,lag.max=49)
## Print results.
Lag = round(z$lag,2)
ACF = round(z$acf,2)
data.frame(Lag, ACF)
## Read data.
diameter <- scan(paste(DATAPATH,"lew.dat",sep="/"),skip=25)
## Attach "nlme" library and compute autocorrelations.
library(nlme)
z = acf(diameter,lag.max=49)
## Read data.
diameter <- scan(paste(DATAPATH,"lew.dat",sep="/"),skip=25)
## Attach "nlme" library and compute autocorrelations.
library(nlme)
z = acf(diameter,lag.max=49)
## Print results.
Lag = round(z$lag,2)
ACF = round(z$acf,2)
data.frame(Lag, ACF)
## Read data.
diameter <- scan(paste(DATAPATH,"lew.dat",sep="/"),skip=25)
## Attach "nlme" library and compute autocorrelations.
library(nlme)
z = acf(diameter,lag.max=49)
## Print results.
Lag = round(z$lag,2)
ACF = round(z$acf,2)
data.frame(Lag, ACF)
## Read data.
diameter <- scan(paste(DATAPATH,"lew.dat",sep="/"),skip=25)
## Attach "lawstat" library and peform runs test.
library(lawstat)
runs.test(diameter,alternative="two.sided")
## Read data.
diameter <- scan(paste(DATAPATH,"lew.dat",sep="/"),skip=25)
## Read data.
diameter <- scan(paste(DATAPATH,"lew.dat",sep="/"),skip=25)
## Attach "lawstat" library and peform runs test.
library(lawstat)
runs.test(diameter,alternative="two.sided")
## Compute critical value.
qnorm(.975)
## Read data.
diameter <- scan(paste(DATAPATH,"lew.dat",sep="/"),skip=25)
## Attach "lawstat" library and peform runs test.
library(lawstat)
runs.test(diameter,alternative="two.sided")
## Attach "nortest" library and define sample size.
#install.packages("nortest")
library(nortest)
n=1000
## Generate 1000 standard normal random numbers
## and perform the Anderson-Darling test.
set.seed(403)
y1 = rnorm(n, mean = 0, sd = 1)
ad.test(y1)
## Generate 1000 double exponential random numbers
## and perform the Anderson-Darling test.
set.seed(403)
y2 = rexp(n,rate=1) - rexp(n,rate=1)
ad.test(y2)
##
## We set the seed=0 to ensure reproducibility of results.
## Cauchy random number generators can produce very extreme
## values.  A different seed will produce different results.
##
## Extreme values, such as might be encountered with
## Cauchy-type data, can result in "Inf" values for the
## Anderson-Darling test, and this is indicative of the
## numerical limits of the Anderson-Darling implementation.
## The p-value is not meaningful in this case.
set.seed(0)
y3 = rcauchy(n, location = 0, scale = 1)
ad.test(y3)
## Generate 1000 log-normal random numbers and
## perform the Anderson-Darling test.
set.seed(403)
y4 = rlnorm(n, meanlog = 0, sdlog = 1)
ad.test(y4)
#>         Anderson-Darling normality test
#>         Anderson-Darling normality test
#>
#>         Anderson-Darling normality test
#>
#> data:  y4
source('~/aghiles/code/R/src/1_eda_explore/3_5_Quantitative Techniques/eda35a_Levene Test for Equality of Variances.r')
install.packages("car")
## Read data and save batch as a factor.
m <- matrix(scan(paste(DATAPATH,"gear.dat",sep="/"),skip=25),ncol=2,byrow=T)
diameter = m[,1]
batch = as.factor(m[,2])
batch
## Attach "car" library and run Levene's test.
library(car)
leveneTest(diameter, batch)
## Compute critical value.
qf(.95,9,90)
## Read data.
diameter <- scan(paste(DATAPATH,"lew.dat",sep="/"),skip=25)
## Attach "nlme" library and compute autocorrelations.
library(nlme)
z = acf(diameter,lag.max=49)
## Print results.
Lag = round(z$lag,2)
ACF = round(z$acf,2)
data.frame(Lag, ACF)
## Read data.
diameter <- scan(paste(DATAPATH,"lew.dat",sep="/"),skip=25)
## Attach "lawstat" library and peform runs test.
library(lawstat)
runs.test(diameter,alternative="two.sided")
## Compute critical value.
qnorm(.975)
## Read data and save batch as a factor.
m <- matrix(scan(paste(DATAPATH,"gear.dat",sep="/"),skip=25),ncol=2,byrow=T)
## Attach "car" library and run Levene's test.
library(car)
install.packages("car")
## Attach "car" library and run Levene's test.
library(car)
install.packages("pbkrtest")
install.packages('Rcpp')
install.packages('RcppEigen')
install.packages('minqa')
install.packages('lme4')
DATAPATH <- Sys.getenv("DATAPATH")
## Input data and create variables.
m <- matrix(scan(paste(DATAPATH, "splett3.dat", sep="/"),skip=25),ncol=5,byrow=T)
getwd()
setwd(paste(getwd(),DATAPATH, sep=":"))
paste(getwd(),DATAPATH, sep=":")
myfunction.path <- list.files(getwd(),
recursive=TRUE,full.names=TRUE,
pattern='^myfunction.R$')
source(myfunction.path)
list.files()
list.files(full.names=TRUE)
list.files("species1/", full.names=TRUE)
list.files(DATAPATH, full.names=TRUE)
list.files(DATAPATH)
list.files(DATAPATH, full.names=TRUE)
DATAPATH <- Sys.getenv("DATAPATH")
## Read data and save variables.
m <- matrix(scan(past(DATAPATH,"gear.dat"),skip=25),ncol=2,byrow=T)
## Read data and save variables.
m <- matrix(scan(paste(DATAPATH,"gear.dat"),skip=25),ncol=2,byrow=T)
